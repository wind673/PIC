

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sun Oct 11 18:33:58 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F67K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    45  0000                     
    46                           	psect	idataBANK0
    47  002A38                     __pidataBANK0:
    48                           	opt stack 0
    49                           
    50                           ;initializer for _Gears_Timer
    51  002A38  1F40               	dw	8000
    52  002A3A  1D4C               	dw	7500
    53  002A3C  1B8A               	dw	7050
    54  002A3E  19FA               	dw	6650
    55  002A40  186A               	dw	6250
    56  002A42  16DA               	dw	5850
    57  002A44  157C               	dw	5500
    58  002A46  141E               	dw	5150
    59  002A48  128E               	dw	4750
    60  002A4A  10FE               	dw	4350
    61  002A4C  0FA0               	dw	4000
    62  002A4E  0DAC               	dw	3500
    63  002A50  0ABE               	dw	2750
    64  002A52  07D0               	dw	2000
    65  002A54  04E2               	dw	1250
    66  002A56  01F4               	dw	500
    67                           
    68                           ;initializer for _Demag_Flag
    69  002A58  01                 	db	1
    70                           
    71                           ;initializer for _Magnet_Flag
    72  002A59  01                 	db	1
    73                           
    74                           	psect	smallconst
    75  001000                     __psmallconst:
    76                           	opt stack 0
    77  001000  00                 	db	0
    78  001001                     _Gears:
    79                           	opt stack 0
    80  001001  7D                 	db	125
    81  001002  60                 	db	96
    82  001003  57                 	db	87
    83  001004  76                 	db	118
    84  001005  6A                 	db	106
    85  001006  3E                 	db	62
    86  001007  3F                 	db	63
    87  001008  70                 	db	112
    88  001009  7F                 	db	127
    89  00100A  7E                 	db	126
    90  00100B  7B                 	db	123
    91  00100C  2F                 	db	47
    92  00100D  1D                 	db	29
    93  00100E  67                 	db	103
    94  00100F  1F                 	db	31
    95  001010  1B                 	db	27
    96  001011                     __end_of_Gears:
    97                           	opt stack 0
    98  0000                     _ANCON0bits	set	3877
    99  0000                     _ADCON0	set	4034
   100  0000                     _ADCON0bits	set	4034
   101  0000                     _ADCON1	set	4033
   102  0000                     _ADCON2	set	4032
   103  0000                     _ADRESH	set	4036
   104  0000                     _ADRESL	set	4035
   105  0000                     _INTCON	set	4082
   106  0000                     _INTCONbits	set	4082
   107  0000                     _PIE1bits	set	3997
   108  0000                     _PIR1bits	set	3998
   109  0000                     _PORTA	set	3968
   110  0000                     _PORTAbits	set	3968
   111  0000                     _PORTB	set	3969
   112  0000                     _PORTC	set	3970
   113  0000                     _PORTCbits	set	3970
   114  0000                     _PORTD	set	3971
   115  0000                     _PORTDbits	set	3971
   116  0000                     _PORTE	set	3972
   117  0000                     _PORTEbits	set	3972
   118  0000                     _PORTF	set	3973
   119  0000                     _PORTG	set	3974
   120  0000                     _T0CON	set	4053
   121  0000                     _T0CONbits	set	4053
   122  0000                     _TMR0H	set	4055
   123  0000                     _TMR0L	set	4054
   124  0000                     _TRISAbits	set	3986
   125  0000                     _TRISCbits	set	3988
   126  0000                     _TRISDbits	set	3989
   127  0000                     _TRISEbits	set	3990
   128  0000                     _TRISGbits	set	3992
   129  0000                     _ADIF	set	31990
   130  0000                     _TMR0IF	set	32658
   131                           
   132                           ; #config settings
   133  001011  00                 	db	0	; dummy byte at the end
   134  0000                     
   135                           	psect	cinit
   136  0027E4                     __pcinit:
   137                           	opt stack 0
   138  0027E4                     start_initialization:
   139                           	opt stack 0
   140  0027E4                     __initialization:
   141                           	opt stack 0
   142                           
   143                           ; Clear objects allocated to BIGRAM (640 bytes)
   144  0027E4  EE01  F088         	lfsr	0,__pbssBIGRAM
   145  0027E8  EE12 F080          	lfsr	1,640
   146  0027EC                     clear_0:
   147  0027EC  6AEE               	clrf	postinc0,c
   148  0027EE  50E5               	movf	postdec1,w,c
   149  0027F0  50E1               	movf	fsr1l,w,c
   150  0027F2  E1FC               	bnz	clear_0
   151  0027F4  50E2               	movf	fsr1h,w,c
   152  0027F6  E1FA               	bnz	clear_0
   153                           
   154                           ; Clear objects allocated to BANK1 (136 bytes)
   155  0027F8  EE01  F000         	lfsr	0,__pbssBANK1
   156  0027FC  0E88               	movlw	136
   157  0027FE                     clear_1:
   158  0027FE  6AEE               	clrf	postinc0,c
   159  002800  06E8               	decf	wreg,f,c
   160  002802  E1FD               	bnz	clear_1
   161                           
   162                           ; Clear objects allocated to BANK0 (87 bytes)
   163  002804  EE00  F060         	lfsr	0,__pbssBANK0
   164  002808  0E57               	movlw	87
   165  00280A                     clear_2:
   166  00280A  6AEE               	clrf	postinc0,c
   167  00280C  06E8               	decf	wreg,f,c
   168  00280E  E1FD               	bnz	clear_2
   169                           
   170                           ; Clear objects allocated to COMRAM (10 bytes)
   171  002810  EE00  F035         	lfsr	0,__pbssCOMRAM
   172  002814  0E0A               	movlw	10
   173  002816                     clear_3:
   174  002816  6AEE               	clrf	postinc0,c
   175  002818  06E8               	decf	wreg,f,c
   176  00281A  E1FD               	bnz	clear_3
   177                           
   178                           ; Initialize objects allocated to BANK0 (34 bytes)
   179                           ; load TBLPTR registers with __pidataBANK0
   180  00281C  0E38               	movlw	low __pidataBANK0
   181  00281E  6EF6               	movwf	tblptrl,c
   182  002820  0E2A               	movlw	high __pidataBANK0
   183  002822  6EF7               	movwf	tblptrh,c
   184  002824  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   185  002826  6EF8               	movwf	tblptru,c
   186  002828  EE00  F0B7         	lfsr	0,__pdataBANK0
   187  00282C  EE10 F022          	lfsr	1,34
   188  002830                     copy_data0:
   189  002830  0009               	tblrd		*+
   190  002832  CFF5 FFEE          	movff	tablat,postinc0
   191  002836  50E5               	movf	postdec1,w,c
   192  002838  50E1               	movf	fsr1l,w,c
   193  00283A  E1FA               	bnz	copy_data0
   194  00283C                     end_of_initialization:
   195                           	opt stack 0
   196  00283C                     __end_of__initialization:
   197                           	opt stack 0
   198  00283C  0100               	movlb	0
   199  00283E  EF09  F015         	goto	_main	;jump to C main() function
   200                           tblptru	equ	0xFF8
   201                           tblptrh	equ	0xFF7
   202                           tblptrl	equ	0xFF6
   203                           tablat	equ	0xFF5
   204                           postinc0	equ	0xFEE
   205                           wreg	equ	0xFE8
   206                           postdec1	equ	0xFE5
   207                           fsr1h	equ	0xFE2
   208                           fsr1l	equ	0xFE1
   209                           
   210                           	psect	bssCOMRAM
   211  000035                     __pbssCOMRAM:
   212                           	opt stack 0
   213  000035                     _Spacing_Count:
   214                           	opt stack 0
   215  000035                     	ds	2
   216  000037                     _Key_StateMachine_Local:
   217                           	opt stack 0
   218  000037                     	ds	8
   219                           tblptru	equ	0xFF8
   220                           tblptrh	equ	0xFF7
   221                           tblptrl	equ	0xFF6
   222                           tablat	equ	0xFF5
   223                           postinc0	equ	0xFEE
   224                           wreg	equ	0xFE8
   225                           postdec1	equ	0xFE5
   226                           fsr1h	equ	0xFE2
   227                           fsr1l	equ	0xFE1
   228                           
   229                           	psect	bssBANK0
   230  000060                     __pbssBANK0:
   231                           	opt stack 0
   232  000060                     _Elec_Max:
   233                           	opt stack 0
   234  000060                     	ds	80
   235  0000B0                     _Message:
   236                           	opt stack 0
   237  0000B0                     	ds	4
   238  0000B4                     _Houwa_Cuont:
   239                           	opt stack 0
   240  0000B4                     	ds	2
   241  0000B6                     _MAGNE_Flag:
   242                           	opt stack 0
   243  0000B6                     	ds	1
   244                           tblptru	equ	0xFF8
   245                           tblptrh	equ	0xFF7
   246                           tblptrl	equ	0xFF6
   247                           tablat	equ	0xFF5
   248                           postinc0	equ	0xFEE
   249                           wreg	equ	0xFE8
   250                           postdec1	equ	0xFE5
   251                           fsr1h	equ	0xFE2
   252                           fsr1l	equ	0xFE1
   253                           
   254                           	psect	dataBANK0
   255  0000B7                     __pdataBANK0:
   256                           	opt stack 0
   257  0000B7                     _Gears_Timer:
   258                           	opt stack 0
   259  0000B7                     	ds	32
   260  0000D7                     _Demag_Flag:
   261                           	opt stack 0
   262  0000D7                     	ds	1
   263  0000D8                     _Magnet_Flag:
   264                           	opt stack 0
   265  0000D8                     	ds	1
   266                           tblptru	equ	0xFF8
   267                           tblptrh	equ	0xFF7
   268                           tblptrl	equ	0xFF6
   269                           tablat	equ	0xFF5
   270                           postinc0	equ	0xFEE
   271                           wreg	equ	0xFE8
   272                           postdec1	equ	0xFE5
   273                           fsr1h	equ	0xFE2
   274                           fsr1l	equ	0xFE1
   275                           
   276                           	psect	bssBANK1
   277  000100                     __pbssBANK1:
   278                           	opt stack 0
   279  000100                     _Parameter:
   280                           	opt stack 0
   281  000100                     	ds	136
   282                           tblptru	equ	0xFF8
   283                           tblptrh	equ	0xFF7
   284                           tblptrl	equ	0xFF6
   285                           tablat	equ	0xFF5
   286                           postinc0	equ	0xFEE
   287                           wreg	equ	0xFE8
   288                           postdec1	equ	0xFE5
   289                           fsr1h	equ	0xFE2
   290                           fsr1l	equ	0xFE1
   291                           
   292                           	psect	bssBIGRAM
   293  000188                     __pbssBIGRAM:
   294                           	opt stack 0
   295  000188                     _Elec:
   296                           	opt stack 0
   297  000188                     	ds	640
   298                           tblptru	equ	0xFF8
   299                           tblptrh	equ	0xFF7
   300                           tblptrl	equ	0xFF6
   301                           tablat	equ	0xFF5
   302                           postinc0	equ	0xFEE
   303                           wreg	equ	0xFE8
   304                           postdec1	equ	0xFE5
   305                           fsr1h	equ	0xFE2
   306                           fsr1l	equ	0xFE1
   307                           
   308                           	psect	cstackBANK0
   309  0000D9                     __pcstackBANK0:
   310                           	opt stack 0
   311  0000D9                     ADC_Init@elec:
   312                           	opt stack 0
   313  0000D9                     ADC_ElecGet@i:
   314                           	opt stack 0
   315                           
   316                           ; 4 bytes @ 0x0
   317  0000D9                     	ds	4
   318  0000DD                     ADC_Init@i:
   319                           	opt stack 0
   320  0000DD                     ADC_ElecGet@elec:
   321                           	opt stack 0
   322                           
   323                           ; 4 bytes @ 0x4
   324  0000DD                     	ds	4
   325  0000E1                     ??_Trica_Mag:
   326                           
   327                           ; 0 bytes @ 0x8
   328  0000E1                     	ds	6
   329  0000E7                     Trica_Mag@EMCC_State:
   330                           	opt stack 0
   331                           
   332                           ; 1 bytes @ 0xE
   333  0000E7                     	ds	1
   334  0000E8                     Trica_Mag@j:
   335                           	opt stack 0
   336                           
   337                           ; 2 bytes @ 0xF
   338  0000E8                     	ds	2
   339  0000EA                     Trica_Mag@k:
   340                           	opt stack 0
   341                           
   342                           ; 2 bytes @ 0x11
   343  0000EA                     	ds	2
   344  0000EC                     Trica_Mag@Elec:
   345                           	opt stack 0
   346                           
   347                           ; 2 bytes @ 0x13
   348  0000EC                     	ds	2
   349  0000EE                     Trica_Mag@i:
   350                           	opt stack 0
   351                           
   352                           ; 2 bytes @ 0x15
   353  0000EE                     	ds	2
   354  0000F0                     ??_Magne_Demag_Dispose:
   355                           
   356                           ; 0 bytes @ 0x17
   357  0000F0                     	ds	4
   358  0000F4                     Magne_Demag_Dispose@EMCC_State:
   359                           	opt stack 0
   360                           
   361                           ; 1 bytes @ 0x1B
   362  0000F4                     	ds	1
   363  0000F5                     Magne_Demag_Dispose@j:
   364                           	opt stack 0
   365                           
   366                           ; 1 bytes @ 0x1C
   367  0000F5                     	ds	1
   368  0000F6                     Magne_Demag_Dispose@i:
   369                           	opt stack 0
   370                           
   371                           ; 1 bytes @ 0x1D
   372  0000F6                     	ds	1
   373  0000F7                     main@i:
   374                           	opt stack 0
   375                           
   376                           ; 1 bytes @ 0x1E
   377  0000F7                     	ds	1
   378                           tblptru	equ	0xFF8
   379                           tblptrh	equ	0xFF7
   380                           tblptrl	equ	0xFF6
   381                           tablat	equ	0xFF5
   382                           postinc0	equ	0xFEE
   383                           wreg	equ	0xFE8
   384                           postdec1	equ	0xFE5
   385                           fsr1h	equ	0xFE2
   386                           fsr1l	equ	0xFE1
   387                           
   388                           	psect	cstackCOMRAM
   389  000001                     __pcstackCOMRAM:
   390                           	opt stack 0
   391  000001                     Key_Num_Get@Key_State:
   392                           	opt stack 0
   393  000001                     i2WriteTimer0@timer0:
   394                           	opt stack 0
   395                           
   396                           ; 2 bytes @ 0x0
   397  000001                     	ds	2
   398  000003                     ??_Key_Num_Get:
   399  000003                     i2WriteTimer0@timer:
   400                           	opt stack 0
   401                           
   402                           ; 2 bytes @ 0x2
   403  000003                     	ds	4
   404  000007                     Key_Num_Get@i:
   405                           	opt stack 0
   406                           
   407                           ; 1 bytes @ 0x6
   408  000007                     	ds	1
   409  000008                     Key_State_Sweep@Key_State:
   410                           	opt stack 0
   411                           
   412                           ; 2 bytes @ 0x7
   413  000008                     	ds	2
   414  00000A                     ??_Key_State_Sweep:
   415                           
   416                           ; 0 bytes @ 0x9
   417  00000A                     	ds	10
   418  000014                     ??_ISR:
   419                           
   420                           ; 0 bytes @ 0x13
   421  000014                     	ds	14
   422  000022                     ?_ReadADC:
   423                           	opt stack 0
   424  000022                     ?___wmul:
   425                           	opt stack 0
   426  000022                     ?___lwdiv:
   427                           	opt stack 0
   428  000022                     ?___lmul:
   429                           	opt stack 0
   430  000022                     ?___lldiv:
   431                           	opt stack 0
   432  000022                     Relay_Channel_SW@Flag:
   433                           	opt stack 0
   434  000022                     Parameter_Init@i:
   435                           	opt stack 0
   436  000022                     OpenADC@config2:
   437                           	opt stack 0
   438  000022                     OpenTimer0@config:
   439                           	opt stack 0
   440  000022                     WriteTimer0@timer0:
   441                           	opt stack 0
   442  000022                     ___wmul@multiplier:
   443                           	opt stack 0
   444  000022                     ___lwdiv@dividend:
   445                           	opt stack 0
   446  000022                     delay_us@nus:
   447                           	opt stack 0
   448  000022                     ___lmul@multiplier:
   449                           	opt stack 0
   450  000022                     ___lldiv@dividend:
   451                           	opt stack 0
   452                           
   453                           ; 4 bytes @ 0x21
   454  000022                     	ds	1
   455  000023                     Relay_Channel_SW@Channel:
   456                           	opt stack 0
   457  000023                     OpenADC@config3:
   458                           	opt stack 0
   459                           
   460                           ; 1 bytes @ 0x22
   461  000023                     	ds	1
   462  000024                     ??_OpenADC:
   463  000024                     ??_ReadADC:
   464  000024                     WriteTimer0@timer:
   465                           	opt stack 0
   466  000024                     ___wmul@multiplicand:
   467                           	opt stack 0
   468  000024                     ___lwdiv@divisor:
   469                           	opt stack 0
   470                           
   471                           ; 2 bytes @ 0x23
   472  000024                     	ds	2
   473  000026                     Trica_Control@EMCC_State:
   474                           	opt stack 0
   475  000026                     OpenADC@config:
   476                           	opt stack 0
   477  000026                     ___lwdiv@counter:
   478                           	opt stack 0
   479  000026                     ___wmul@product:
   480                           	opt stack 0
   481  000026                     ___lmul@multiplicand:
   482                           	opt stack 0
   483  000026                     ___lldiv@divisor:
   484                           	opt stack 0
   485                           
   486                           ; 4 bytes @ 0x25
   487  000026                     	ds	1
   488  000027                     Trica_Control@i:
   489                           	opt stack 0
   490  000027                     ___lwdiv@quotient:
   491                           	opt stack 0
   492                           
   493                           ; 2 bytes @ 0x26
   494  000027                     	ds	3
   495  00002A                     ___lmul@product:
   496                           	opt stack 0
   497  00002A                     ___lldiv@quotient:
   498                           	opt stack 0
   499                           
   500                           ; 4 bytes @ 0x29
   501  00002A                     	ds	4
   502  00002E                     ___lldiv@counter:
   503                           	opt stack 0
   504  00002E                     delay_ms@nms:
   505                           	opt stack 0
   506                           
   507                           ; 4 bytes @ 0x2D
   508  00002E                     	ds	1
   509  00002F                     ??_ADC_Init:
   510  00002F                     ?_ADC_ElecGet:
   511                           	opt stack 0
   512                           
   513                           ; 2 bytes @ 0x2E
   514  00002F                     	ds	2
   515  000031                     ??_ADC_ElecGet:
   516                           
   517                           ; 0 bytes @ 0x30
   518  000031                     	ds	1
   519  000032                     
   520                           ; 0 bytes @ 0x31
   521  000032                     	ds	3
   522  000035                     tblptru	equ	0xFF8
   523                           tblptrh	equ	0xFF7
   524                           tblptrl	equ	0xFF6
   525                           tablat	equ	0xFF5
   526                           postinc0	equ	0xFEE
   527                           wreg	equ	0xFE8
   528                           postdec1	equ	0xFE5
   529                           fsr1h	equ	0xFE2
   530                           fsr1l	equ	0xFE1
   531                           
   532                           ; 0 bytes @ 0x34
   533 ;;
   534 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   535 ;;
   536 ;; *************** function _main *****************
   537 ;; Defined at:
   538 ;;		line 32 in file "nbproject/private/main.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;		None
   541 ;; Auto vars:     Size  Location     Type
   542 ;;  i               1   30[BANK0 ] unsigned char 
   543 ;; Return value:  Size  Location     Type
   544 ;;                  2  416[None  ] int 
   545 ;; Registers used:
   546 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   547 ;; Tracked objects:
   548 ;;		On entry : 0/0
   549 ;;		On exit  : 0/0
   550 ;;		Unchanged: 0/0
   551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   553 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   555 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   556 ;;Total ram usage:        1 bytes
   557 ;; Hardware stack levels required when called:    8
   558 ;; This function calls:
   559 ;;		_ADC_Init
   560 ;;		_GPIO_Init
   561 ;;		_Message_Manage
   562 ;;		_Message_Send
   563 ;;		_Parameter_Init
   564 ;;		_Timer_Init
   565 ;; This function is called by:
   566 ;;		Startup code after reset
   567 ;; This function uses a non-reentrant model
   568 ;;
   569                           
   570                           	psect	text0
   571  002A12                     __ptext0:
   572                           	opt stack 0
   573  002A12                     _main:
   574                           	opt stack 23
   575                           
   576                           ;main.c: 34: uint8_t i = 0;
   577                           
   578                           ;incstack = 0
   579  002A12  0E00               	movlw	0
   580  002A14  0100               	movlb	0	; () banked
   581  002A16  6FF7               	movwf	main@i& (0+255),b
   582                           
   583                           ; BSR set to: 0
   584                           ;main.c: 35: GPIO_Init();
   585  002A18  ECA6  F014         	call	_GPIO_Init	;wreg free
   586                           
   587                           ;main.c: 36: Parameter_Init();
   588  002A1C  ECC5  F00F         	call	_Parameter_Init	;wreg free
   589                           
   590                           ;main.c: 37: ADC_Init();
   591  002A20  EC21  F012         	call	_ADC_Init	;wreg free
   592                           
   593                           ;main.c: 38: Timer_Init();
   594  002A24  EC4D  F015         	call	_Timer_Init	;wreg free
   595  002A28  D000               	goto	l3311
   596  002A2A                     l3311:
   597                           
   598                           ;main.c: 40: {
   599                           ;main.c: 41: Message_Send();
   600  002A2A  ECAF  F011         	call	_Message_Send	;wreg free
   601                           
   602                           ;main.c: 42: Message_Manage();
   603  002A2E  ECDC  F012         	call	_Message_Manage	;wreg free
   604  002A32  D7FB               	goto	l3311
   605  002A34  EF59  F000         	goto	start
   606  002A38                     __end_of_main:
   607                           	opt stack 0
   608                           tblptru	equ	0xFF8
   609                           tblptrh	equ	0xFF7
   610                           tblptrl	equ	0xFF6
   611                           tablat	equ	0xFF5
   612                           postinc0	equ	0xFEE
   613                           wreg	equ	0xFE8
   614                           postdec1	equ	0xFE5
   615                           fsr1h	equ	0xFE2
   616                           fsr1l	equ	0xFE1
   617                           
   618 ;; *************** function _Timer_Init *****************
   619 ;; Defined at:
   620 ;;		line 32 in file "nbproject/private/timer.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;		None
   623 ;; Auto vars:     Size  Location     Type
   624 ;;		None
   625 ;; Return value:  Size  Location     Type
   626 ;;		None               void
   627 ;; Registers used:
   628 ;;		wreg, status,2, status,0, cstack
   629 ;; Tracked objects:
   630 ;;		On entry : 0/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   638 ;;Total ram usage:        0 bytes
   639 ;; Hardware stack levels used:    1
   640 ;; Hardware stack levels required when called:    4
   641 ;; This function calls:
   642 ;;		_OpenTimer0
   643 ;;		_WriteTimer0
   644 ;; This function is called by:
   645 ;;		_main
   646 ;; This function uses a non-reentrant model
   647 ;;
   648                           
   649                           	psect	text1
   650  002A9A                     __ptext1:
   651                           	opt stack 0
   652  002A9A                     _Timer_Init:
   653                           	opt stack 26
   654                           
   655                           ;timer.c: 34: OpenTimer0( 0b11111111 &
   656                           ;timer.c: 35: 0b10111111 &
   657                           ;timer.c: 36: 0b11011111 &
   658                           ;timer.c: 37: 0b11110010 );
   659                           
   660                           ;incstack = 0
   661  002A9A  0E92               	movlw	146
   662  002A9C  EC2D  F015         	call	_OpenTimer0
   663                           
   664                           ;timer.c: 38: INTCON |= 0x80;
   665  002AA0  8EF2               	bsf	intcon,7,c	;volatile
   666                           
   667                           ;timer.c: 39: WriteTimer0(65536-50000);
   668  002AA2  0E3C               	movlw	60
   669  002AA4  6E23               	movwf	WriteTimer0@timer0+1,c
   670  002AA6  0EB0               	movlw	176
   671  002AA8  6E22               	movwf	WriteTimer0@timer0,c
   672  002AAA  EC58  F015         	call	_WriteTimer0	;wreg free
   673  002AAE  0012               	return		;funcret
   674  002AB0                     __end_of_Timer_Init:
   675                           	opt stack 0
   676                           tblptru	equ	0xFF8
   677                           tblptrh	equ	0xFF7
   678                           tblptrl	equ	0xFF6
   679                           tablat	equ	0xFF5
   680                           intcon	equ	0xFF2
   681                           postinc0	equ	0xFEE
   682                           wreg	equ	0xFE8
   683                           postdec1	equ	0xFE5
   684                           fsr1h	equ	0xFE2
   685                           fsr1l	equ	0xFE1
   686                           
   687 ;; *************** function _WriteTimer0 *****************
   688 ;; Defined at:
   689 ;;		line 16 in file "D:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
   690 ;; Parameters:    Size  Location     Type
   691 ;;  timer0          2   33[COMRAM] unsigned int 
   692 ;; Auto vars:     Size  Location     Type
   693 ;;  timer           2   35[COMRAM] struct Timers
   694 ;; Return value:  Size  Location     Type
   695 ;;		None               void
   696 ;; Registers used:
   697 ;;		None
   698 ;; Tracked objects:
   699 ;;		On entry : 0/0
   700 ;;		On exit  : 0/0
   701 ;;		Unchanged: 0/0
   702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   703 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   704 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   706 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   707 ;;Total ram usage:        4 bytes
   708 ;; Hardware stack levels used:    1
   709 ;; Hardware stack levels required when called:    3
   710 ;; This function calls:
   711 ;;		Nothing
   712 ;; This function is called by:
   713 ;;		_Timer_Init
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           	psect	text2
   718  002AB0                     __ptext2:
   719                           	opt stack 0
   720  002AB0                     _WriteTimer0:
   721                           	opt stack 26
   722                           
   723                           ;incstack = 0
   724  002AB0  C022  F024         	movff	WriteTimer0@timer0,WriteTimer0@timer
   725  002AB4  C023  F025         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
   726  002AB8  C025  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
   727  002ABC  C024  FFD6         	movff	WriteTimer0@timer,4054	;volatile
   728  002AC0  0012               	return		;funcret
   729  002AC2                     __end_of_WriteTimer0:
   730                           	opt stack 0
   731                           tblptru	equ	0xFF8
   732                           tblptrh	equ	0xFF7
   733                           tblptrl	equ	0xFF6
   734                           tablat	equ	0xFF5
   735                           intcon	equ	0xFF2
   736                           postinc0	equ	0xFEE
   737                           wreg	equ	0xFE8
   738                           postdec1	equ	0xFE5
   739                           fsr1h	equ	0xFE2
   740                           fsr1l	equ	0xFE1
   741                           
   742 ;; *************** function _OpenTimer0 *****************
   743 ;; Defined at:
   744 ;;		line 18 in file "D:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0open.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;  config          1    wreg     unsigned char 
   747 ;; Auto vars:     Size  Location     Type
   748 ;;  config          1   33[COMRAM] unsigned char 
   749 ;; Return value:  Size  Location     Type
   750 ;;		None               void
   751 ;; Registers used:
   752 ;;		wreg, status,2, status,0
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   759 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   761 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   762 ;;Total ram usage:        1 bytes
   763 ;; Hardware stack levels used:    1
   764 ;; Hardware stack levels required when called:    3
   765 ;; This function calls:
   766 ;;		Nothing
   767 ;; This function is called by:
   768 ;;		_Timer_Init
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           	psect	text3
   773  002A5A                     __ptext3:
   774                           	opt stack 0
   775  002A5A                     _OpenTimer0:
   776                           	opt stack 26
   777                           
   778                           ;incstack = 0
   779                           ;OpenTimer0@config stored from wreg
   780  002A5A  6E22               	movwf	OpenTimer0@config,c
   781  002A5C  5022               	movf	OpenTimer0@config,w,c
   782  002A5E  0B7F               	andlw	127
   783  002A60  6ED5               	movwf	4053,c	;volatile
   784  002A62  0E00               	movlw	0
   785  002A64  6ED7               	movwf	4055,c	;volatile
   786  002A66  0E00               	movlw	0
   787  002A68  6ED6               	movwf	4054,c	;volatile
   788  002A6A  94F2               	bcf	intcon,2,c	;volatile
   789  002A6C  AE22               	btfss	OpenTimer0@config,7,c
   790  002A6E  D002               	goto	l468
   791  002A70  8AF2               	bsf	intcon,5,c	;volatile
   792  002A72  D001               	goto	l469
   793  002A74                     l468:
   794  002A74  9AF2               	bcf	intcon,5,c	;volatile
   795  002A76                     l469:
   796  002A76  8ED5               	bsf	4053,7,c	;volatile
   797  002A78  0012               	return		;funcret
   798  002A7A                     __end_of_OpenTimer0:
   799                           	opt stack 0
   800                           tblptru	equ	0xFF8
   801                           tblptrh	equ	0xFF7
   802                           tblptrl	equ	0xFF6
   803                           tablat	equ	0xFF5
   804                           intcon	equ	0xFF2
   805                           postinc0	equ	0xFEE
   806                           wreg	equ	0xFE8
   807                           postdec1	equ	0xFE5
   808                           fsr1h	equ	0xFE2
   809                           fsr1l	equ	0xFE1
   810                           
   811 ;; *************** function _Parameter_Init *****************
   812 ;; Defined at:
   813 ;;		line 34 in file "nbproject/private/parameter.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;		None
   816 ;; Auto vars:     Size  Location     Type
   817 ;;  i               1   33[COMRAM] unsigned char 
   818 ;; Return value:  Size  Location     Type
   819 ;;		None               void
   820 ;; Registers used:
   821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   828 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   830 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   831 ;;Total ram usage:        1 bytes
   832 ;; Hardware stack levels used:    1
   833 ;; Hardware stack levels required when called:    3
   834 ;; This function calls:
   835 ;;		Nothing
   836 ;; This function is called by:
   837 ;;		_main
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841                           	psect	text4
   842  001F8A                     __ptext4:
   843                           	opt stack 0
   844  001F8A                     _Parameter_Init:
   845                           	opt stack 27
   846                           
   847                           ;parameter.c: 36: uint8_t i;
   848                           ;parameter.c: 38: Parameter[1].Min = 0;
   849                           
   850                           ;incstack = 0
   851  001F8A  0E00               	movlw	0
   852  001F8C  0101               	movlb	1	; () banked
   853  001F8E  6F0B               	movwf	(_Parameter+11)& (0+255),b
   854  001F90  0E00               	movlw	0
   855  001F92  6F0A               	movwf	(_Parameter+10)& (0+255),b
   856                           
   857                           ;parameter.c: 39: Parameter[1].Max = 15;
   858  001F94  0E00               	movlw	0
   859  001F96  0101               	movlb	1	; () banked
   860  001F98  6F0D               	movwf	(_Parameter+13)& (0+255),b
   861  001F9A  0E0F               	movlw	15
   862  001F9C  6F0C               	movwf	(_Parameter+12)& (0+255),b
   863                           
   864                           ;parameter.c: 40: Parameter[1].Default = 15;
   865  001F9E  0E00               	movlw	0
   866  001FA0  0101               	movlb	1	; () banked
   867  001FA2  6F0F               	movwf	(_Parameter+15)& (0+255),b
   868  001FA4  0E0F               	movlw	15
   869  001FA6  6F0E               	movwf	(_Parameter+14)& (0+255),b
   870                           
   871                           ;parameter.c: 42: Parameter[2].Min = 0;
   872  001FA8  0E00               	movlw	0
   873  001FAA  0101               	movlb	1	; () banked
   874  001FAC  6F13               	movwf	(_Parameter+19)& (0+255),b
   875  001FAE  0E00               	movlw	0
   876  001FB0  6F12               	movwf	(_Parameter+18)& (0+255),b
   877                           
   878                           ;parameter.c: 43: Parameter[2].Max = 15;
   879  001FB2  0E00               	movlw	0
   880  001FB4  0101               	movlb	1	; () banked
   881  001FB6  6F15               	movwf	(_Parameter+21)& (0+255),b
   882  001FB8  0E0F               	movlw	15
   883  001FBA  6F14               	movwf	(_Parameter+20)& (0+255),b
   884                           
   885                           ;parameter.c: 44: Parameter[2].Default = 15;
   886  001FBC  0E00               	movlw	0
   887  001FBE  0101               	movlb	1	; () banked
   888  001FC0  6F17               	movwf	(_Parameter+23)& (0+255),b
   889  001FC2  0E0F               	movlw	15
   890  001FC4  6F16               	movwf	(_Parameter+22)& (0+255),b
   891                           
   892                           ;parameter.c: 46: Parameter[3].Min = 0;
   893  001FC6  0E00               	movlw	0
   894  001FC8  0101               	movlb	1	; () banked
   895  001FCA  6F1B               	movwf	(_Parameter+27)& (0+255),b
   896  001FCC  0E00               	movlw	0
   897  001FCE  6F1A               	movwf	(_Parameter+26)& (0+255),b
   898                           
   899                           ; BSR set to: 1
   900                           ;parameter.c: 47: Parameter[3].Max = 0xffff;
   901  001FD0  0101               	movlb	1	; () banked
   902  001FD2  691C               	setf	(_Parameter+28)& (0+255),b
   903  001FD4  691D               	setf	(_Parameter+29)& (0+255),b
   904                           
   905                           ;parameter.c: 48: Parameter[3].Default = 0x00ff;
   906  001FD6  0E00               	movlw	0
   907  001FD8  0101               	movlb	1	; () banked
   908  001FDA  6F1F               	movwf	(_Parameter+31)& (0+255),b
   909  001FDC  691E               	setf	(_Parameter+30)& (0+255),b
   910                           
   911                           ;parameter.c: 50: Parameter[4].Min = 100;
   912  001FDE  0E00               	movlw	0
   913  001FE0  0101               	movlb	1	; () banked
   914  001FE2  6F23               	movwf	(_Parameter+35)& (0+255),b
   915  001FE4  0E64               	movlw	100
   916  001FE6  6F22               	movwf	(_Parameter+34)& (0+255),b
   917                           
   918                           ;parameter.c: 51: Parameter[4].Max = 3000;
   919  001FE8  0E0B               	movlw	11
   920  001FEA  0101               	movlb	1	; () banked
   921  001FEC  6F25               	movwf	(_Parameter+37)& (0+255),b
   922  001FEE  0EB8               	movlw	184
   923  001FF0  6F24               	movwf	(_Parameter+36)& (0+255),b
   924                           
   925                           ;parameter.c: 52: Parameter[4].Default = 2045;
   926  001FF2  0E07               	movlw	7
   927  001FF4  0101               	movlb	1	; () banked
   928  001FF6  6F27               	movwf	(_Parameter+39)& (0+255),b
   929  001FF8  0EFD               	movlw	253
   930  001FFA  6F26               	movwf	(_Parameter+38)& (0+255),b
   931                           
   932                           ;parameter.c: 54: Parameter[5].Min = 10;
   933  001FFC  0E00               	movlw	0
   934  001FFE  0101               	movlb	1	; () banked
   935  002000  6F2B               	movwf	(_Parameter+43)& (0+255),b
   936  002002  0E0A               	movlw	10
   937  002004  6F2A               	movwf	(_Parameter+42)& (0+255),b
   938                           
   939                           ;parameter.c: 55: Parameter[5].Max = 80;
   940  002006  0E00               	movlw	0
   941  002008  0101               	movlb	1	; () banked
   942  00200A  6F2D               	movwf	(_Parameter+45)& (0+255),b
   943  00200C  0E50               	movlw	80
   944  00200E  6F2C               	movwf	(_Parameter+44)& (0+255),b
   945                           
   946                           ;parameter.c: 56: Parameter[5].Default = 20;
   947  002010  0E00               	movlw	0
   948  002012  0101               	movlb	1	; () banked
   949  002014  6F2F               	movwf	(_Parameter+47)& (0+255),b
   950  002016  0E14               	movlw	20
   951  002018  6F2E               	movwf	(_Parameter+46)& (0+255),b
   952                           
   953                           ;parameter.c: 58: Parameter[6].Min = 20;
   954  00201A  0E00               	movlw	0
   955  00201C  0101               	movlb	1	; () banked
   956  00201E  6F33               	movwf	(_Parameter+51)& (0+255),b
   957  002020  0E14               	movlw	20
   958  002022  6F32               	movwf	(_Parameter+50)& (0+255),b
   959                           
   960                           ;parameter.c: 59: Parameter[6].Max = 40;
   961  002024  0E00               	movlw	0
   962  002026  0101               	movlb	1	; () banked
   963  002028  6F35               	movwf	(_Parameter+53)& (0+255),b
   964  00202A  0E28               	movlw	40
   965  00202C  6F34               	movwf	(_Parameter+52)& (0+255),b
   966                           
   967                           ;parameter.c: 60: Parameter[6].Default = 20;
   968  00202E  0E00               	movlw	0
   969  002030  0101               	movlb	1	; () banked
   970  002032  6F37               	movwf	(_Parameter+55)& (0+255),b
   971  002034  0E14               	movlw	20
   972  002036  6F36               	movwf	(_Parameter+54)& (0+255),b
   973                           
   974                           ;parameter.c: 62: Parameter[7].Min = 0;
   975  002038  0E00               	movlw	0
   976  00203A  0101               	movlb	1	; () banked
   977  00203C  6F3B               	movwf	(_Parameter+59)& (0+255),b
   978  00203E  0E00               	movlw	0
   979  002040  6F3A               	movwf	(_Parameter+58)& (0+255),b
   980                           
   981                           ;parameter.c: 63: Parameter[7].Max = 1;
   982  002042  0E00               	movlw	0
   983  002044  0101               	movlb	1	; () banked
   984  002046  6F3D               	movwf	(_Parameter+61)& (0+255),b
   985  002048  0E01               	movlw	1
   986  00204A  6F3C               	movwf	(_Parameter+60)& (0+255),b
   987                           
   988                           ;parameter.c: 64: Parameter[7].Default = 1;
   989  00204C  0E00               	movlw	0
   990  00204E  0101               	movlb	1	; () banked
   991  002050  6F3F               	movwf	(_Parameter+63)& (0+255),b
   992  002052  0E01               	movlw	1
   993  002054  6F3E               	movwf	(_Parameter+62)& (0+255),b
   994                           
   995                           ;parameter.c: 66: Parameter[8].Min = 3;
   996  002056  0E00               	movlw	0
   997  002058  0101               	movlb	1	; () banked
   998  00205A  6F43               	movwf	(_Parameter+67)& (0+255),b
   999  00205C  0E03               	movlw	3
  1000  00205E  6F42               	movwf	(_Parameter+66)& (0+255),b
  1001                           
  1002                           ;parameter.c: 67: Parameter[8].Max = 200;
  1003  002060  0E00               	movlw	0
  1004  002062  0101               	movlb	1	; () banked
  1005  002064  6F45               	movwf	(_Parameter+69)& (0+255),b
  1006  002066  0EC8               	movlw	200
  1007  002068  6F44               	movwf	(_Parameter+68)& (0+255),b
  1008                           
  1009                           ;parameter.c: 68: Parameter[8].Default = 10;
  1010  00206A  0E00               	movlw	0
  1011  00206C  0101               	movlb	1	; () banked
  1012  00206E  6F47               	movwf	(_Parameter+71)& (0+255),b
  1013  002070  0E0A               	movlw	10
  1014  002072  6F46               	movwf	(_Parameter+70)& (0+255),b
  1015                           
  1016                           ;parameter.c: 70: Parameter[9].Min = 3;
  1017  002074  0E00               	movlw	0
  1018  002076  0101               	movlb	1	; () banked
  1019  002078  6F4B               	movwf	(_Parameter+75)& (0+255),b
  1020  00207A  0E03               	movlw	3
  1021  00207C  6F4A               	movwf	(_Parameter+74)& (0+255),b
  1022                           
  1023                           ;parameter.c: 71: Parameter[9].Max = 200;
  1024  00207E  0E00               	movlw	0
  1025  002080  0101               	movlb	1	; () banked
  1026  002082  6F4D               	movwf	(_Parameter+77)& (0+255),b
  1027  002084  0EC8               	movlw	200
  1028  002086  6F4C               	movwf	(_Parameter+76)& (0+255),b
  1029                           
  1030                           ;parameter.c: 72: Parameter[9].Default = 65;
  1031  002088  0E00               	movlw	0
  1032  00208A  0101               	movlb	1	; () banked
  1033  00208C  6F4F               	movwf	(_Parameter+79)& (0+255),b
  1034  00208E  0E41               	movlw	65
  1035  002090  6F4E               	movwf	(_Parameter+78)& (0+255),b
  1036                           
  1037                           ;parameter.c: 74: Parameter[10].Min = 3;
  1038  002092  0E00               	movlw	0
  1039  002094  0101               	movlb	1	; () banked
  1040  002096  6F53               	movwf	(_Parameter+83)& (0+255),b
  1041  002098  0E03               	movlw	3
  1042  00209A  6F52               	movwf	(_Parameter+82)& (0+255),b
  1043                           
  1044                           ;parameter.c: 75: Parameter[10].Max = 200;
  1045  00209C  0E00               	movlw	0
  1046  00209E  0101               	movlb	1	; () banked
  1047  0020A0  6F55               	movwf	(_Parameter+85)& (0+255),b
  1048  0020A2  0EC8               	movlw	200
  1049  0020A4  6F54               	movwf	(_Parameter+84)& (0+255),b
  1050                           
  1051                           ;parameter.c: 76: Parameter[10].Default = 10;
  1052  0020A6  0E00               	movlw	0
  1053  0020A8  0101               	movlb	1	; () banked
  1054  0020AA  6F57               	movwf	(_Parameter+87)& (0+255),b
  1055  0020AC  0E0A               	movlw	10
  1056  0020AE  6F56               	movwf	(_Parameter+86)& (0+255),b
  1057                           
  1058                           ;parameter.c: 78: Parameter[11].Min = 3;
  1059  0020B0  0E00               	movlw	0
  1060  0020B2  0101               	movlb	1	; () banked
  1061  0020B4  6F5B               	movwf	(_Parameter+91)& (0+255),b
  1062  0020B6  0E03               	movlw	3
  1063  0020B8  6F5A               	movwf	(_Parameter+90)& (0+255),b
  1064                           
  1065                           ;parameter.c: 79: Parameter[11].Max = 200;
  1066  0020BA  0E00               	movlw	0
  1067  0020BC  0101               	movlb	1	; () banked
  1068  0020BE  6F5D               	movwf	(_Parameter+93)& (0+255),b
  1069  0020C0  0EC8               	movlw	200
  1070  0020C2  6F5C               	movwf	(_Parameter+92)& (0+255),b
  1071                           
  1072                           ;parameter.c: 80: Parameter[11].Default = 10;
  1073  0020C4  0E00               	movlw	0
  1074  0020C6  0101               	movlb	1	; () banked
  1075  0020C8  6F5F               	movwf	(_Parameter+95)& (0+255),b
  1076  0020CA  0E0A               	movlw	10
  1077  0020CC  6F5E               	movwf	(_Parameter+94)& (0+255),b
  1078                           
  1079                           ;parameter.c: 82: Parameter[12].Min = 0;
  1080  0020CE  0E00               	movlw	0
  1081  0020D0  0101               	movlb	1	; () banked
  1082  0020D2  6F63               	movwf	(_Parameter+99)& (0+255),b
  1083  0020D4  0E00               	movlw	0
  1084  0020D6  6F62               	movwf	(_Parameter+98)& (0+255),b
  1085                           
  1086                           ;parameter.c: 83: Parameter[12].Max = 1;
  1087  0020D8  0E00               	movlw	0
  1088  0020DA  0101               	movlb	1	; () banked
  1089  0020DC  6F65               	movwf	(_Parameter+101)& (0+255),b
  1090  0020DE  0E01               	movlw	1
  1091  0020E0  6F64               	movwf	(_Parameter+100)& (0+255),b
  1092                           
  1093                           ;parameter.c: 84: Parameter[12].Default = 1;
  1094  0020E2  0E00               	movlw	0
  1095  0020E4  0101               	movlb	1	; () banked
  1096  0020E6  6F67               	movwf	(_Parameter+103)& (0+255),b
  1097  0020E8  0E01               	movlw	1
  1098  0020EA  6F66               	movwf	(_Parameter+102)& (0+255),b
  1099                           
  1100                           ;parameter.c: 86: Parameter[13].Min = 1;
  1101  0020EC  0E00               	movlw	0
  1102  0020EE  0101               	movlb	1	; () banked
  1103  0020F0  6F6B               	movwf	(_Parameter+107)& (0+255),b
  1104  0020F2  0E01               	movlw	1
  1105  0020F4  6F6A               	movwf	(_Parameter+106)& (0+255),b
  1106                           
  1107                           ;parameter.c: 87: Parameter[13].Max = 20;
  1108  0020F6  0E00               	movlw	0
  1109  0020F8  0101               	movlb	1	; () banked
  1110  0020FA  6F6D               	movwf	(_Parameter+109)& (0+255),b
  1111  0020FC  0E14               	movlw	20
  1112  0020FE  6F6C               	movwf	(_Parameter+108)& (0+255),b
  1113                           
  1114                           ;parameter.c: 88: Parameter[13].Default = 3;
  1115  002100  0E00               	movlw	0
  1116  002102  0101               	movlb	1	; () banked
  1117  002104  6F6F               	movwf	(_Parameter+111)& (0+255),b
  1118  002106  0E03               	movlw	3
  1119  002108  6F6E               	movwf	(_Parameter+110)& (0+255),b
  1120                           
  1121                           ;parameter.c: 90: Parameter[14].Min = 3;
  1122  00210A  0E00               	movlw	0
  1123  00210C  0101               	movlb	1	; () banked
  1124  00210E  6F73               	movwf	(_Parameter+115)& (0+255),b
  1125  002110  0E03               	movlw	3
  1126  002112  6F72               	movwf	(_Parameter+114)& (0+255),b
  1127                           
  1128                           ;parameter.c: 91: Parameter[14].Max = 15;
  1129  002114  0E00               	movlw	0
  1130  002116  0101               	movlb	1	; () banked
  1131  002118  6F75               	movwf	(_Parameter+117)& (0+255),b
  1132  00211A  0E0F               	movlw	15
  1133  00211C  6F74               	movwf	(_Parameter+116)& (0+255),b
  1134                           
  1135                           ;parameter.c: 92: Parameter[14].Default = 3;
  1136  00211E  0E00               	movlw	0
  1137  002120  0101               	movlb	1	; () banked
  1138  002122  6F77               	movwf	(_Parameter+119)& (0+255),b
  1139  002124  0E03               	movlw	3
  1140  002126  6F76               	movwf	(_Parameter+118)& (0+255),b
  1141                           
  1142                           ;parameter.c: 94: Parameter[15].Min = 0;
  1143  002128  0E00               	movlw	0
  1144  00212A  0101               	movlb	1	; () banked
  1145  00212C  6F7B               	movwf	(_Parameter+123)& (0+255),b
  1146  00212E  0E00               	movlw	0
  1147  002130  6F7A               	movwf	(_Parameter+122)& (0+255),b
  1148                           
  1149                           ;parameter.c: 95: Parameter[15].Max = 15;
  1150  002132  0E00               	movlw	0
  1151  002134  0101               	movlb	1	; () banked
  1152  002136  6F7D               	movwf	(_Parameter+125)& (0+255),b
  1153  002138  0E0F               	movlw	15
  1154  00213A  6F7C               	movwf	(_Parameter+124)& (0+255),b
  1155                           
  1156                           ;parameter.c: 96: Parameter[15].Default = 0;
  1157  00213C  0E00               	movlw	0
  1158  00213E  0101               	movlb	1	; () banked
  1159  002140  6F7F               	movwf	(_Parameter+127)& (0+255),b
  1160  002142  0E00               	movlw	0
  1161  002144  6F7E               	movwf	(_Parameter+126)& (0+255),b
  1162                           
  1163                           ;parameter.c: 98: Parameter[16].Min = 0;
  1164  002146  0E00               	movlw	0
  1165  002148  0101               	movlb	1	; () banked
  1166  00214A  6F83               	movwf	(_Parameter+131)& (0+255),b
  1167  00214C  0E00               	movlw	0
  1168  00214E  6F82               	movwf	(_Parameter+130)& (0+255),b
  1169                           
  1170                           ;parameter.c: 99: Parameter[16].Max = 1;
  1171  002150  0E00               	movlw	0
  1172  002152  0101               	movlb	1	; () banked
  1173  002154  6F85               	movwf	(_Parameter+133)& (0+255),b
  1174  002156  0E01               	movlw	1
  1175  002158  6F84               	movwf	(_Parameter+132)& (0+255),b
  1176                           
  1177                           ;parameter.c: 100: Parameter[16].Default = 0;
  1178  00215A  0E00               	movlw	0
  1179  00215C  0101               	movlb	1	; () banked
  1180  00215E  6F87               	movwf	(_Parameter+135)& (0+255),b
  1181  002160  0E00               	movlw	0
  1182  002162  6F86               	movwf	(_Parameter+134)& (0+255),b
  1183                           
  1184                           ;parameter.c: 103: for(i = 1;i < 16+1;i++)
  1185  002164  0E01               	movlw	1
  1186  002166  6E22               	movwf	Parameter_Init@i,c
  1187                           
  1188                           ; BSR set to: 1
  1189  002168  0E10               	movlw	16
  1190  00216A  6422               	cpfsgt	Parameter_Init@i,c
  1191  00216C  D002               	goto	l3289
  1192  00216E  0012               	return	
  1193                           
  1194                           ; BSR set to: 1
  1195  002170  0012               	return	
  1196  002172                     l3289:
  1197                           
  1198                           ;parameter.c: 104: {
  1199                           ;parameter.c: 105: Parameter[i].Value = Parameter[i].Default;
  1200  002172  5022               	movf	Parameter_Init@i,w,c
  1201  002174  0D08               	mullw	8
  1202  002176  0E06               	movlw	6
  1203  002178  26F3               	addwf	prodl,f,c
  1204  00217A  0E00               	movlw	0
  1205  00217C  22F4               	addwfc	prodh,f,c
  1206  00217E  0E00               	movlw	low _Parameter
  1207  002180  24F3               	addwf	prodl,w,c
  1208  002182  6ED9               	movwf	fsr2l,c
  1209  002184  0E01               	movlw	high _Parameter
  1210  002186  20F4               	addwfc	prodh,w,c
  1211  002188  6EDA               	movwf	fsr2h,c
  1212  00218A  5022               	movf	Parameter_Init@i,w,c
  1213  00218C  0D08               	mullw	8
  1214  00218E  0E00               	movlw	low _Parameter
  1215  002190  24F3               	addwf	prodl,w,c
  1216  002192  6EE1               	movwf	fsr1l,c
  1217  002194  0E01               	movlw	high _Parameter
  1218  002196  20F4               	addwfc	prodh,w,c
  1219  002198  6EE2               	movwf	fsr1h,c
  1220  00219A  CFDE FFE6          	movff	postinc2,postinc1
  1221  00219E  CFDD FFE5          	movff	postdec2,postdec1
  1222  0021A2  2A22               	incf	Parameter_Init@i,f,c
  1223  0021A4  0E10               	movlw	16
  1224  0021A6  6422               	cpfsgt	Parameter_Init@i,c
  1225  0021A8  D7E4               	goto	l3289
  1226  0021AA  0012               	return	
  1227  0021AC  0012               	return		;funcret
  1228  0021AE                     __end_of_Parameter_Init:
  1229                           	opt stack 0
  1230                           tblptru	equ	0xFF8
  1231                           tblptrh	equ	0xFF7
  1232                           tblptrl	equ	0xFF6
  1233                           tablat	equ	0xFF5
  1234                           prodh	equ	0xFF4
  1235                           prodl	equ	0xFF3
  1236                           intcon	equ	0xFF2
  1237                           postinc0	equ	0xFEE
  1238                           wreg	equ	0xFE8
  1239                           postinc1	equ	0xFE6
  1240                           postdec1	equ	0xFE5
  1241                           fsr1h	equ	0xFE2
  1242                           fsr1l	equ	0xFE1
  1243                           postinc2	equ	0xFDE
  1244                           postdec2	equ	0xFDD
  1245                           fsr2h	equ	0xFDA
  1246                           fsr2l	equ	0xFD9
  1247                           
  1248 ;; *************** function _Message_Send *****************
  1249 ;; Defined at:
  1250 ;;		line 37 in file "nbproject/private/message.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;		None
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;		None
  1255 ;; Return value:  Size  Location     Type
  1256 ;;		None               void
  1257 ;; Registers used:
  1258 ;;		wreg, status,2, status,0
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1268 ;;Total ram usage:        0 bytes
  1269 ;; Hardware stack levels used:    1
  1270 ;; Hardware stack levels required when called:    3
  1271 ;; This function calls:
  1272 ;;		Nothing
  1273 ;; This function is called by:
  1274 ;;		_main
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           	psect	text5
  1279  00235E                     __ptext5:
  1280                           	opt stack 0
  1281  00235E                     _Message_Send:
  1282                           	opt stack 27
  1283                           
  1284                           ;message.c: 40: if(((((Key_StateMachine_Local.KeyCode_Bef == 0xfffe)&&(Key_StateMachine_
      +                          Local.Key_Num == 1)&&(Key_StateMachine_Local.Key_Mode == 1)) && !Parameter[16].Value) ||
  1285                           ;message.c: 41: (((Key_StateMachine_Local.KeyCode_Bef == 0xfffe)&&(Key_StateMachine_Loca
      +                          l.Key_Num == 1)&&(Key_StateMachine_Local.Key_Mode == 3)) && Parameter[16].Value)) && (Sp
      +                          acing_Count == 0))
  1286                           
  1287                           ;incstack = 0
  1288  00235E  0EFE               	movlw	254
  1289  002360  183B               	xorwf	_Key_StateMachine_Local+4,w,c	;volatile
  1290  002362  E10F               	bnz	l3205
  1291  002364  283C               	incf	_Key_StateMachine_Local+5,w,c	;volatile
  1292  002366  A4D8               	btfss	status,2,c
  1293  002368  D00C               	goto	l3205
  1294  00236A  043D               	decf	_Key_StateMachine_Local+6,w,c	;volatile
  1295  00236C  A4D8               	btfss	status,2,c
  1296  00236E  D009               	goto	l3205
  1297  002370  0438               	decf	_Key_StateMachine_Local+1,w,c	;volatile
  1298  002372  A4D8               	btfss	status,2,c
  1299  002374  D006               	goto	l3205
  1300  002376  0101               	movlb	1	; () banked
  1301  002378  5180               	movf	(_Parameter+128)& (0+255),w,b
  1302  00237A  0101               	movlb	1	; () banked
  1303  00237C  1181               	iorwf	(_Parameter+129)& (0+255),w,b
  1304  00237E  B4D8               	btfsc	status,2,c
  1305  002380  D013               	goto	l3213
  1306  002382                     l3205:
  1307  002382  0EFE               	movlw	254
  1308  002384  183B               	xorwf	_Key_StateMachine_Local+4,w,c	;volatile
  1309  002386  E11A               	bnz	l3221
  1310  002388  283C               	incf	_Key_StateMachine_Local+5,w,c	;volatile
  1311  00238A  A4D8               	btfss	status,2,c
  1312  00238C  D017               	goto	l3221
  1313  00238E  043D               	decf	_Key_StateMachine_Local+6,w,c	;volatile
  1314  002390  A4D8               	btfss	status,2,c
  1315  002392  D014               	goto	l3221
  1316  002394  0E03               	movlw	3
  1317  002396  1838               	xorwf	_Key_StateMachine_Local+1,w,c	;volatile
  1318  002398  A4D8               	btfss	status,2,c
  1319  00239A  D010               	goto	l3221
  1320  00239C  0101               	movlb	1	; () banked
  1321  00239E  5180               	movf	(_Parameter+128)& (0+255),w,b
  1322  0023A0  0101               	movlb	1	; () banked
  1323  0023A2  1181               	iorwf	(_Parameter+129)& (0+255),w,b
  1324  0023A4  B4D8               	btfsc	status,2,c
  1325  0023A6  D00A               	goto	l3221
  1326  0023A8                     l3213:
  1327                           
  1328                           ; BSR set to: 1
  1329  0023A8  5035               	movf	_Spacing_Count,w,c
  1330  0023AA  1036               	iorwf	_Spacing_Count+1,w,c
  1331  0023AC  A4D8               	btfss	status,2,c
  1332  0023AE  D006               	goto	l3221
  1333                           
  1334                           ; BSR set to: 1
  1335                           ;message.c: 42: {
  1336                           ;message.c: 43: {PORTDbits.RD5 = 1;};
  1337  0023B0  8A83               	bsf	3971,5,c	;volatile
  1338                           
  1339                           ; BSR set to: 1
  1340                           ;message.c: 44: Message |= ((uint32_t)(1<<0));
  1341  0023B2  0100               	movlb	0	; () banked
  1342  0023B4  81B0               	bsf	_Message& (0+255),0,b	;volatile
  1343                           
  1344                           ; BSR set to: 0
  1345                           ;message.c: 45: Key_StateMachine_Local.Key_Mode = 0;
  1346  0023B6  0E00               	movlw	0
  1347  0023B8  6E38               	movwf	_Key_StateMachine_Local+1,c	;volatile
  1348                           
  1349                           ;message.c: 46: }
  1350  0023BA  D009               	goto	l291
  1351  0023BC                     l3221:
  1352                           
  1353                           ;message.c: 47: else
  1354                           ;message.c: 48: {
  1355                           ;message.c: 49: Message &= ~((uint32_t)(1<<0));
  1356  0023BC  0EFE               	movlw	254
  1357  0023BE  0100               	movlb	0	; () banked
  1358  0023C0  17B0               	andwf	_Message& (0+255),f,b	;volatile
  1359  0023C2  0EFF               	movlw	255
  1360  0023C4  17B1               	andwf	(_Message+1)& (0+255),f,b	;volatile
  1361  0023C6  0EFF               	movlw	255
  1362  0023C8  17B2               	andwf	(_Message+2)& (0+255),f,b	;volatile
  1363  0023CA  0EFF               	movlw	255
  1364  0023CC  17B3               	andwf	(_Message+3)& (0+255),f,b	;volatile
  1365  0023CE                     l291:
  1366                           
  1367                           ; BSR set to: 0
  1368                           ;message.c: 50: }
  1369                           ;message.c: 52: if(((((Key_StateMachine_Local.KeyCode_Bef == 0xfffd)&&(Key_StateMachine_
      +                          Local.Key_Num == 1)&&(Key_StateMachine_Local.Key_Mode == 1)) && !Parameter[16].Value) ||
  1370                           ;message.c: 53: (((Key_StateMachine_Local.KeyCode_Bef == 0xfffd)&&(Key_StateMachine_Loca
      +                          l.Key_Num == 1)&&(Key_StateMachine_Local.Key_Mode == 3)) && Parameter[16].Value)) && (Sp
      +                          acing_Count == 0))
  1371  0023CE  0EFD               	movlw	253
  1372  0023D0  183B               	xorwf	_Key_StateMachine_Local+4,w,c	;volatile
  1373  0023D2  E10F               	bnz	l3229
  1374  0023D4  283C               	incf	_Key_StateMachine_Local+5,w,c	;volatile
  1375  0023D6  A4D8               	btfss	status,2,c
  1376  0023D8  D00C               	goto	l3229
  1377                           
  1378                           ; BSR set to: 0
  1379  0023DA  043D               	decf	_Key_StateMachine_Local+6,w,c	;volatile
  1380  0023DC  A4D8               	btfss	status,2,c
  1381  0023DE  D009               	goto	l3229
  1382                           
  1383                           ; BSR set to: 0
  1384  0023E0  0438               	decf	_Key_StateMachine_Local+1,w,c	;volatile
  1385  0023E2  A4D8               	btfss	status,2,c
  1386  0023E4  D006               	goto	l3229
  1387                           
  1388                           ; BSR set to: 0
  1389  0023E6  0101               	movlb	1	; () banked
  1390  0023E8  5180               	movf	(_Parameter+128)& (0+255),w,b
  1391  0023EA  0101               	movlb	1	; () banked
  1392  0023EC  1181               	iorwf	(_Parameter+129)& (0+255),w,b
  1393  0023EE  B4D8               	btfsc	status,2,c
  1394  0023F0  D013               	goto	l3237
  1395  0023F2                     l3229:
  1396  0023F2  0EFD               	movlw	253
  1397  0023F4  183B               	xorwf	_Key_StateMachine_Local+4,w,c	;volatile
  1398  0023F6  E11A               	bnz	l3245
  1399  0023F8  283C               	incf	_Key_StateMachine_Local+5,w,c	;volatile
  1400  0023FA  A4D8               	btfss	status,2,c
  1401  0023FC  D017               	goto	l3245
  1402  0023FE  043D               	decf	_Key_StateMachine_Local+6,w,c	;volatile
  1403  002400  A4D8               	btfss	status,2,c
  1404  002402  D014               	goto	l3245
  1405  002404  0E03               	movlw	3
  1406  002406  1838               	xorwf	_Key_StateMachine_Local+1,w,c	;volatile
  1407  002408  A4D8               	btfss	status,2,c
  1408  00240A  D010               	goto	l3245
  1409  00240C  0101               	movlb	1	; () banked
  1410  00240E  5180               	movf	(_Parameter+128)& (0+255),w,b
  1411  002410  0101               	movlb	1	; () banked
  1412  002412  1181               	iorwf	(_Parameter+129)& (0+255),w,b
  1413  002414  B4D8               	btfsc	status,2,c
  1414  002416  D00A               	goto	l3245
  1415  002418                     l3237:
  1416                           
  1417                           ; BSR set to: 1
  1418  002418  5035               	movf	_Spacing_Count,w,c
  1419  00241A  1036               	iorwf	_Spacing_Count+1,w,c
  1420  00241C  A4D8               	btfss	status,2,c
  1421  00241E  D006               	goto	l3245
  1422                           
  1423                           ; BSR set to: 1
  1424                           ;message.c: 54: {
  1425                           ;message.c: 55: {PORTDbits.RD5 = 0;};
  1426  002420  9A83               	bcf	3971,5,c	;volatile
  1427                           
  1428                           ; BSR set to: 1
  1429                           ;message.c: 56: Message |= ((uint32_t)(1<<1));
  1430  002422  0100               	movlb	0	; () banked
  1431  002424  83B0               	bsf	_Message& (0+255),1,b	;volatile
  1432                           
  1433                           ; BSR set to: 0
  1434                           ;message.c: 57: Key_StateMachine_Local.Key_Mode = 0;
  1435  002426  0E00               	movlw	0
  1436  002428  6E38               	movwf	_Key_StateMachine_Local+1,c	;volatile
  1437                           
  1438                           ;message.c: 58: }
  1439  00242A  0012               	return	
  1440  00242C                     l3245:
  1441                           
  1442                           ;message.c: 59: else
  1443                           ;message.c: 60: {
  1444                           ;message.c: 61: Message &= ~((uint32_t)(1<<1));
  1445  00242C  0EFD               	movlw	253
  1446  00242E  0100               	movlb	0	; () banked
  1447  002430  17B0               	andwf	_Message& (0+255),f,b	;volatile
  1448  002432  0EFF               	movlw	255
  1449  002434  17B1               	andwf	(_Message+1)& (0+255),f,b	;volatile
  1450  002436  0EFF               	movlw	255
  1451  002438  17B2               	andwf	(_Message+2)& (0+255),f,b	;volatile
  1452  00243A  0EFF               	movlw	255
  1453  00243C  17B3               	andwf	(_Message+3)& (0+255),f,b	;volatile
  1454  00243E  0012               	return	
  1455                           
  1456                           ; BSR set to: 0
  1457                           
  1458                           ; BSR set to: 0
  1459  002440  0012               	return		;funcret
  1460  002442                     __end_of_Message_Send:
  1461                           	opt stack 0
  1462                           tblptru	equ	0xFF8
  1463                           tblptrh	equ	0xFF7
  1464                           tblptrl	equ	0xFF6
  1465                           tablat	equ	0xFF5
  1466                           prodh	equ	0xFF4
  1467                           prodl	equ	0xFF3
  1468                           intcon	equ	0xFF2
  1469                           postinc0	equ	0xFEE
  1470                           wreg	equ	0xFE8
  1471                           postinc1	equ	0xFE6
  1472                           postdec1	equ	0xFE5
  1473                           fsr1h	equ	0xFE2
  1474                           fsr1l	equ	0xFE1
  1475                           postinc2	equ	0xFDE
  1476                           postdec2	equ	0xFDD
  1477                           fsr2h	equ	0xFDA
  1478                           fsr2l	equ	0xFD9
  1479                           status	equ	0xFD8
  1480                           
  1481 ;; *************** function _Message_Manage *****************
  1482 ;; Defined at:
  1483 ;;		line 74 in file "nbproject/private/message.c"
  1484 ;; Parameters:    Size  Location     Type
  1485 ;;		None
  1486 ;; Auto vars:     Size  Location     Type
  1487 ;;  i               1    0        unsigned char 
  1488 ;; Return value:  Size  Location     Type
  1489 ;;		None               void
  1490 ;; Registers used:
  1491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1501 ;;Total ram usage:        0 bytes
  1502 ;; Hardware stack levels used:    1
  1503 ;; Hardware stack levels required when called:    7
  1504 ;; This function calls:
  1505 ;;		_Magne_Demag_Dispose
  1506 ;;		_delay_ms
  1507 ;; This function is called by:
  1508 ;;		_main
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512                           	psect	text6
  1513  0025B8                     __ptext6:
  1514                           	opt stack 0
  1515  0025B8                     _Message_Manage:
  1516                           	opt stack 23
  1517                           
  1518                           ;message.c: 76: uint8_t i;
  1519                           ;message.c: 78: if(Message & ((uint32_t)(1<<0)))
  1520                           
  1521                           ; BSR set to: 0
  1522                           ;incstack = 0
  1523  0025B8  0100               	movlb	0	; () banked
  1524  0025BA  A1B0               	btfss	_Message& (0+255),0,b	;volatile
  1525  0025BC  D01B               	goto	l301
  1526                           
  1527                           ; BSR set to: 0
  1528                           ;message.c: 79: {
  1529                           ;message.c: 80: ;
  1530                           ;message.c: 81: ;
  1531                           ;message.c: 82: ;
  1532                           ;message.c: 83: delay_ms(10);
  1533  0025BE  0E0A               	movlw	10
  1534  0025C0  6E2E               	movwf	delay_ms@nms,c
  1535  0025C2  0E00               	movlw	0
  1536  0025C4  6E2F               	movwf	delay_ms@nms+1,c
  1537  0025C6  0E00               	movlw	0
  1538  0025C8  6E30               	movwf	delay_ms@nms+2,c
  1539  0025CA  0E00               	movlw	0
  1540  0025CC  6E31               	movwf	delay_ms@nms+3,c
  1541  0025CE  EC7C  F014         	call	_delay_ms	;wreg free
  1542                           
  1543                           ;message.c: 84: MAGNE_Flag = 0;
  1544  0025D2  0E00               	movlw	0
  1545  0025D4  0100               	movlb	0	; () banked
  1546  0025D6  6FB6               	movwf	_MAGNE_Flag& (0+255),b
  1547                           
  1548                           ; BSR set to: 0
  1549                           ;message.c: 85: Magne_Demag_Dispose(MAGNET);
  1550  0025D8  0E01               	movlw	1
  1551  0025DA  ECDF  F00D         	call	_Magne_Demag_Dispose
  1552                           
  1553                           ;message.c: 86: delay_ms(100);
  1554  0025DE  0E64               	movlw	100
  1555  0025E0  6E2E               	movwf	delay_ms@nms,c
  1556  0025E2  0E00               	movlw	0
  1557  0025E4  6E2F               	movwf	delay_ms@nms+1,c
  1558  0025E6  0E00               	movlw	0
  1559  0025E8  6E30               	movwf	delay_ms@nms+2,c
  1560  0025EA  0E00               	movlw	0
  1561  0025EC  6E31               	movwf	delay_ms@nms+3,c
  1562  0025EE  EC7C  F014         	call	_delay_ms	;wreg free
  1563                           
  1564                           ;message.c: 88: {
  1565                           ;message.c: 90: }
  1566  0025F2  D000               	goto	l301
  1567  0025F4                     l301:
  1568                           
  1569                           ;message.c: 94: }
  1570                           ;message.c: 95: }
  1571                           ;message.c: 97: if(Message & ((uint32_t)(1<<1)))
  1572  0025F4  0100               	movlb	0	; () banked
  1573  0025F6  A3B0               	btfss	_Message& (0+255),1,b	;volatile
  1574  0025F8  D01B               	goto	l304
  1575                           
  1576                           ; BSR set to: 0
  1577                           ;message.c: 98: {
  1578                           ;message.c: 99: ;
  1579                           ;message.c: 100: ;
  1580                           ;message.c: 101: ;
  1581                           ;message.c: 102: delay_ms(10);
  1582  0025FA  0E0A               	movlw	10
  1583  0025FC  6E2E               	movwf	delay_ms@nms,c
  1584  0025FE  0E00               	movlw	0
  1585  002600  6E2F               	movwf	delay_ms@nms+1,c
  1586  002602  0E00               	movlw	0
  1587  002604  6E30               	movwf	delay_ms@nms+2,c
  1588  002606  0E00               	movlw	0
  1589  002608  6E31               	movwf	delay_ms@nms+3,c
  1590  00260A  EC7C  F014         	call	_delay_ms	;wreg free
  1591                           
  1592                           ;message.c: 103: MAGNE_Flag = 1;
  1593  00260E  0E01               	movlw	1
  1594  002610  0100               	movlb	0	; () banked
  1595  002612  6FB6               	movwf	_MAGNE_Flag& (0+255),b
  1596                           
  1597                           ; BSR set to: 0
  1598                           ;message.c: 104: Magne_Demag_Dispose(DEMAG);
  1599  002614  0E00               	movlw	0
  1600  002616  ECDF  F00D         	call	_Magne_Demag_Dispose
  1601                           
  1602                           ;message.c: 105: delay_ms(100);
  1603  00261A  0E64               	movlw	100
  1604  00261C  6E2E               	movwf	delay_ms@nms,c
  1605  00261E  0E00               	movlw	0
  1606  002620  6E2F               	movwf	delay_ms@nms+1,c
  1607  002622  0E00               	movlw	0
  1608  002624  6E30               	movwf	delay_ms@nms+2,c
  1609  002626  0E00               	movlw	0
  1610  002628  6E31               	movwf	delay_ms@nms+3,c
  1611  00262A  EC7C  F014         	call	_delay_ms	;wreg free
  1612                           
  1613                           ;message.c: 107: {
  1614                           ;message.c: 109: }
  1615  00262E  D000               	goto	l304
  1616  002630                     l304:
  1617                           
  1618                           ;message.c: 113: }
  1619                           ;message.c: 114: }
  1620                           ;message.c: 117: if(Message & ((uint32_t)(1<<2)))
  1621  002630  0100               	movlb	0	; () banked
  1622  002632  A5B0               	btfss	_Message& (0+255),2,b	;volatile
  1623  002634  D002               	goto	l308
  1624                           
  1625                           ; BSR set to: 0
  1626                           ;message.c: 118: {
  1627                           ;message.c: 119: {PORTDbits.RD4 = 0;};
  1628  002636  9883               	bcf	3971,4,c	;volatile
  1629                           
  1630                           ; BSR set to: 0
  1631                           
  1632                           ;message.c: 120: ;
  1633                           ;message.c: 121: }
  1634  002638  D000               	goto	l308
  1635  00263A                     l308:
  1636                           
  1637                           ; BSR set to: 0
  1638                           ;message.c: 125: }
  1639                           ;message.c: 127: if(Message & ((uint32_t)(1<<3)))
  1640  00263A  0100               	movlb	0	; () banked
  1641  00263C  A7B0               	btfss	_Message& (0+255),3,b	;volatile
  1642  00263E  D002               	goto	l311
  1643                           
  1644                           ; BSR set to: 0
  1645                           ;message.c: 128: {
  1646                           ;message.c: 129: {PORTDbits.RD4 = 0;};
  1647  002640  9883               	bcf	3971,4,c	;volatile
  1648                           
  1649                           ; BSR set to: 0
  1650                           
  1651                           ;message.c: 130: ;
  1652                           ;message.c: 131: }
  1653  002642  D000               	goto	l311
  1654  002644                     l311:
  1655                           
  1656                           ; BSR set to: 0
  1657                           ;message.c: 135: }
  1658                           ;message.c: 137: if((Message & ((uint32_t)(1<<11))) || (Message & ((uint32_t)(1<<4))) ||
      +                           (Message & ((uint32_t)(1<<5))))
  1659  002644  0100               	movlb	0	; () banked
  1660  002646  B7B1               	btfsc	(_Message+1)& (0+255),3,b	;volatile
  1661  002648  D006               	goto	l315
  1662                           
  1663                           ; BSR set to: 0
  1664  00264A  0100               	movlb	0	; () banked
  1665  00264C  B9B0               	btfsc	_Message& (0+255),4,b	;volatile
  1666  00264E  D003               	goto	l315
  1667                           
  1668                           ; BSR set to: 0
  1669  002650  0100               	movlb	0	; () banked
  1670  002652  ABB0               	btfss	_Message& (0+255),5,b	;volatile
  1671  002654  0012               	return	
  1672  002656                     l315:
  1673                           
  1674                           ; BSR set to: 0
  1675                           ;message.c: 138: {
  1676                           ;message.c: 139: {PORTDbits.RD4 = 1;};
  1677  002656  8883               	bsf	3971,4,c	;volatile
  1678                           
  1679                           ; BSR set to: 0
  1680                           
  1681                           ;message.c: 140: ;
  1682                           ;message.c: 141: }
  1683  002658  0012               	return	
  1684                           
  1685                           ; BSR set to: 0
  1686                           
  1687                           ; BSR set to: 0
  1688                           
  1689                           ;message.c: 142: else
  1690                           ;message.c: 143: {
  1691                           ;message.c: 144: ;
  1692  00265A  0012               	return		;funcret
  1693  00265C                     __end_of_Message_Manage:
  1694                           	opt stack 0
  1695                           tblptru	equ	0xFF8
  1696                           tblptrh	equ	0xFF7
  1697                           tblptrl	equ	0xFF6
  1698                           tablat	equ	0xFF5
  1699                           prodh	equ	0xFF4
  1700                           prodl	equ	0xFF3
  1701                           intcon	equ	0xFF2
  1702                           postinc0	equ	0xFEE
  1703                           wreg	equ	0xFE8
  1704                           postinc1	equ	0xFE6
  1705                           postdec1	equ	0xFE5
  1706                           fsr1h	equ	0xFE2
  1707                           fsr1l	equ	0xFE1
  1708                           postinc2	equ	0xFDE
  1709                           postdec2	equ	0xFDD
  1710                           fsr2h	equ	0xFDA
  1711                           fsr2l	equ	0xFD9
  1712                           status	equ	0xFD8
  1713                           
  1714 ;; *************** function _Magne_Demag_Dispose *****************
  1715 ;; Defined at:
  1716 ;;		line 223 in file "nbproject/private/triac.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;  EMCC_State      1    wreg     enum E8799
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;  EMCC_State      1   27[BANK0 ] enum E8799
  1721 ;;  i               1   29[BANK0 ] unsigned char 
  1722 ;;  j               1   28[BANK0 ] unsigned char 
  1723 ;; Return value:  Size  Location     Type
  1724 ;;		None               void
  1725 ;; Registers used:
  1726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1733 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1734 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1735 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1736 ;;Total ram usage:        7 bytes
  1737 ;; Hardware stack levels used:    1
  1738 ;; Hardware stack levels required when called:    6
  1739 ;; This function calls:
  1740 ;;		_Relay_Channel_SW
  1741 ;;		_Trica_Mag
  1742 ;;		___lwdiv
  1743 ;;		___wmul
  1744 ;;		_delay_ms
  1745 ;; This function is called by:
  1746 ;;		_Message_Manage
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           	psect	text7
  1751  001BBE                     __ptext7:
  1752                           	opt stack 0
  1753  001BBE                     _Magne_Demag_Dispose:
  1754                           	opt stack 23
  1755                           
  1756                           ; BSR set to: 0
  1757                           ;incstack = 0
  1758                           ;Magne_Demag_Dispose@EMCC_State stored from wreg
  1759  001BBE  0100               	movlb	0	; () banked
  1760  001BC0  6FF4               	movwf	Magne_Demag_Dispose@EMCC_State& (0+255),b
  1761                           
  1762                           ; BSR set to: 0
  1763                           ;triac.c: 225: uint8_t i,j;
  1764                           ;triac.c: 226: if(EMCC_State == MAGNET)
  1765  001BC2  0100               	movlb	0	; () banked
  1766  001BC4  05F4               	decf	Magne_Demag_Dispose@EMCC_State& (0+255),w,b
  1767  001BC6  A4D8               	btfss	status,2,c
  1768  001BC8  D0E6               	goto	l3095
  1769                           
  1770                           ; BSR set to: 0
  1771                           ;triac.c: 227: {
  1772                           ;triac.c: 228: Message &= ~((uint32_t)(1<<4));
  1773  001BCA  0EEF               	movlw	239
  1774  001BCC  0100               	movlb	0	; () banked
  1775  001BCE  17B0               	andwf	_Message& (0+255),f,b	;volatile
  1776  001BD0  0EFF               	movlw	255
  1777  001BD2  17B1               	andwf	(_Message+1)& (0+255),f,b	;volatile
  1778  001BD4  0EFF               	movlw	255
  1779  001BD6  17B2               	andwf	(_Message+2)& (0+255),f,b	;volatile
  1780  001BD8  0EFF               	movlw	255
  1781  001BDA  17B3               	andwf	(_Message+3)& (0+255),f,b	;volatile
  1782                           
  1783                           ;triac.c: 229: Message &= ~((uint32_t)(1<<5));
  1784  001BDC  0EDF               	movlw	223
  1785  001BDE  0100               	movlb	0	; () banked
  1786  001BE0  17B0               	andwf	_Message& (0+255),f,b	;volatile
  1787  001BE2  0EFF               	movlw	255
  1788  001BE4  17B1               	andwf	(_Message+1)& (0+255),f,b	;volatile
  1789  001BE6  0EFF               	movlw	255
  1790  001BE8  17B2               	andwf	(_Message+2)& (0+255),f,b	;volatile
  1791  001BEA  0EFF               	movlw	255
  1792  001BEC  17B3               	andwf	(_Message+3)& (0+255),f,b	;volatile
  1793                           
  1794                           ;triac.c: 230: if(Parameter[3].Value > 0)
  1795  001BEE  0101               	movlb	1	; () banked
  1796  001BF0  5118               	movf	(_Parameter+24)& (0+255),w,b
  1797  001BF2  0101               	movlb	1	; () banked
  1798  001BF4  1119               	iorwf	(_Parameter+25)& (0+255),w,b
  1799  001BF6  B4D8               	btfsc	status,2,c
  1800  001BF8  D003               	goto	l3041
  1801                           
  1802                           ; BSR set to: 1
  1803                           ;triac.c: 231: {
  1804                           ;triac.c: 232: {PORTDbits.RD0 = 1;PORTDbits.RD1 = 1;};
  1805  001BFA  8083               	bsf	3971,0,c	;volatile
  1806  001BFC  8283               	bsf	3971,1,c	;volatile
  1807  001BFE  D000               	goto	l3041
  1808  001C00                     l3041:
  1809                           
  1810                           ; BSR set to: 1
  1811                           ;triac.c: 234: }
  1812                           ;triac.c: 235: for(i = 0; i < 16; i++)
  1813  001C00  0E00               	movlw	0
  1814  001C02  0100               	movlb	0	; () banked
  1815  001C04  6FF6               	movwf	Magne_Demag_Dispose@i& (0+255),b
  1816  001C06                     l3043:
  1817                           
  1818                           ; BSR set to: 0
  1819  001C06  0E0F               	movlw	15
  1820  001C08  0100               	movlb	0	; () banked
  1821  001C0A  65F6               	cpfsgt	Magne_Demag_Dispose@i& (0+255),b
  1822  001C0C  D001               	goto	l3047
  1823                           
  1824                           ; BSR set to: 0
  1825  001C0E  D0AC               	goto	l3089
  1826  001C10                     l3047:
  1827                           
  1828                           ; BSR set to: 0
  1829                           ;triac.c: 236: {
  1830                           ;triac.c: 237: Magnet_Flag = 1;
  1831  001C10  0E01               	movlw	1
  1832  001C12  0100               	movlb	0	; () banked
  1833  001C14  6FD8               	movwf	_Magnet_Flag& (0+255),b
  1834                           
  1835                           ; BSR set to: 0
  1836                           ;triac.c: 238: if((Parameter[3].Value >> i)&(uint16_t)1)
  1837  001C16  C0F6  F0F0         	movff	Magne_Demag_Dispose@i,??_Magne_Demag_Dispose
  1838  001C1A  EE21  F018         	lfsr	2,_Parameter+24
  1839  001C1E  CFDE F0F1          	movff	postinc2,??_Magne_Demag_Dispose+1
  1840  001C22  CFDD F0F2          	movff	postdec2,??_Magne_Demag_Dispose+2
  1841  001C26  0100               	movlb	0	; () banked
  1842  001C28  2BF0               	incf	??_Magne_Demag_Dispose& (0+255),f,b
  1843  001C2A  D004               	goto	u4574
  1844  001C2C                     u4575:
  1845  001C2C  0100               	movlb	0	; () banked
  1846  001C2E  90D8               	bcf	status,0,c
  1847  001C30  33F2               	rrcf	(??_Magne_Demag_Dispose+2)& (0+255),f,b
  1848  001C32  33F1               	rrcf	(??_Magne_Demag_Dispose+1)& (0+255),f,b
  1849  001C34                     u4574:
  1850  001C34  0100               	movlb	0	; () banked
  1851  001C36  2FF0               	decfsz	??_Magne_Demag_Dispose& (0+255),f,b
  1852  001C38  D7F9               	goto	u4575
  1853  001C3A  0100               	movlb	0	; () banked
  1854  001C3C  A1F1               	btfss	(??_Magne_Demag_Dispose+1)& (0+255),0,b
  1855  001C3E  D068               	goto	l3071
  1856                           
  1857                           ; BSR set to: 0
  1858                           ;triac.c: 239: {
  1859                           ;triac.c: 240: delay_ms(200);
  1860  001C40  0EC8               	movlw	200
  1861  001C42  6E2E               	movwf	delay_ms@nms,c
  1862  001C44  0E00               	movlw	0
  1863  001C46  6E2F               	movwf	delay_ms@nms+1,c
  1864  001C48  0E00               	movlw	0
  1865  001C4A  6E30               	movwf	delay_ms@nms+2,c
  1866  001C4C  0E00               	movlw	0
  1867  001C4E  6E31               	movwf	delay_ms@nms+3,c
  1868  001C50  EC7C  F014         	call	_delay_ms	;wreg free
  1869                           
  1870                           ;triac.c: 241: Relay_Channel_SW(i+1,ENABLE);
  1871  001C54  0E01               	movlw	1
  1872  001C56  6E22               	movwf	Relay_Channel_SW@Flag,c
  1873  001C58  0100               	movlb	0	; () banked
  1874  001C5A  29F6               	incf	Magne_Demag_Dispose@i& (0+255),w,b
  1875  001C5C  EC87  F012         	call	_Relay_Channel_SW
  1876                           
  1877                           ;triac.c: 242: Magnet_Flag = Trica_Mag(MAGNET);
  1878  001C60  0E01               	movlw	1
  1879  001C62  EC09  F008         	call	_Trica_Mag
  1880  001C66  0100               	movlb	0	; () banked
  1881  001C68  6FD8               	movwf	_Magnet_Flag& (0+255),b
  1882                           
  1883                           ; BSR set to: 0
  1884                           ;triac.c: 243: delay_ms(200);
  1885  001C6A  0EC8               	movlw	200
  1886  001C6C  6E2E               	movwf	delay_ms@nms,c
  1887  001C6E  0E00               	movlw	0
  1888  001C70  6E2F               	movwf	delay_ms@nms+1,c
  1889  001C72  0E00               	movlw	0
  1890  001C74  6E30               	movwf	delay_ms@nms+2,c
  1891  001C76  0E00               	movlw	0
  1892  001C78  6E31               	movwf	delay_ms@nms+3,c
  1893  001C7A  EC7C  F014         	call	_delay_ms	;wreg free
  1894                           
  1895                           ;triac.c: 244: Relay_Channel_SW(i+1,DISABLE);
  1896  001C7E  0E00               	movlw	0
  1897  001C80  6E22               	movwf	Relay_Channel_SW@Flag,c
  1898  001C82  0100               	movlb	0	; () banked
  1899  001C84  29F6               	incf	Magne_Demag_Dispose@i& (0+255),w,b
  1900  001C86  EC87  F012         	call	_Relay_Channel_SW
  1901                           
  1902                           ;triac.c: 245: for(j = 0;j < 40; j++)
  1903  001C8A  0E00               	movlw	0
  1904  001C8C  0100               	movlb	0	; () banked
  1905  001C8E  6FF5               	movwf	Magne_Demag_Dispose@j& (0+255),b
  1906  001C90                     l3061:
  1907                           
  1908                           ; BSR set to: 0
  1909  001C90  0E27               	movlw	39
  1910  001C92  0100               	movlb	0	; () banked
  1911  001C94  65F5               	cpfsgt	Magne_Demag_Dispose@j& (0+255),b
  1912  001C96  D001               	goto	l3065
  1913                           
  1914                           ; BSR set to: 0
  1915  001C98  D03B               	goto	l3071
  1916  001C9A                     l3065:
  1917                           
  1918                           ; BSR set to: 0
  1919                           ;triac.c: 246: {
  1920                           ;triac.c: 247: Elec[i][j] = (uint8_t)((Elec_Max[j]+9)/10);
  1921  001C9A  0100               	movlb	0	; () banked
  1922  001C9C  51F6               	movf	Magne_Demag_Dispose@i& (0+255),w,b
  1923  001C9E  0D28               	mullw	40
  1924  001CA0  0E88               	movlw	low _Elec
  1925  001CA2  0100               	movlb	0	; () banked
  1926  001CA4  6FF0               	movwf	??_Magne_Demag_Dispose& (0+255),b
  1927  001CA6  0E01               	movlw	high _Elec
  1928  001CA8  0100               	movlb	0	; () banked
  1929  001CAA  6FF1               	movwf	(??_Magne_Demag_Dispose+1)& (0+255),b
  1930  001CAC  50F3               	movf	prodl,w,c
  1931  001CAE  0100               	movlb	0	; () banked
  1932  001CB0  27F0               	addwf	??_Magne_Demag_Dispose& (0+255),f,b
  1933  001CB2  50F4               	movf	prodh,w,c
  1934  001CB4  0100               	movlb	0	; () banked
  1935  001CB6  23F1               	addwfc	(??_Magne_Demag_Dispose+1)& (0+255),f,b
  1936  001CB8  0100               	movlb	0	; () banked
  1937  001CBA  51F5               	movf	Magne_Demag_Dispose@j& (0+255),w,b
  1938  001CBC  0D01               	mullw	1
  1939  001CBE  50F3               	movf	prodl,w,c
  1940  001CC0  0100               	movlb	0	; () banked
  1941  001CC2  25F0               	addwf	??_Magne_Demag_Dispose& (0+255),w,b
  1942  001CC4  6ED9               	movwf	fsr2l,c
  1943  001CC6  50F4               	movf	prodh,w,c
  1944  001CC8  0100               	movlb	0	; () banked
  1945  001CCA  21F1               	addwfc	(??_Magne_Demag_Dispose+1)& (0+255),w,b
  1946  001CCC  6EDA               	movwf	fsr2h,c
  1947  001CCE  0100               	movlb	0	; () banked
  1948  001CD0  51F5               	movf	Magne_Demag_Dispose@j& (0+255),w,b
  1949  001CD2  0D02               	mullw	2
  1950  001CD4  0E60               	movlw	low _Elec_Max
  1951  001CD6  24F3               	addwf	prodl,w,c
  1952  001CD8  6EE1               	movwf	fsr1l,c
  1953  001CDA  0E00               	movlw	high _Elec_Max
  1954  001CDC  20F4               	addwfc	prodh,w,c
  1955  001CDE  6EE2               	movwf	fsr1h,c
  1956  001CE0  CFE6 F0F2          	movff	postinc1,??_Magne_Demag_Dispose+2
  1957  001CE4  CFE5 F0F3          	movff	postdec1,??_Magne_Demag_Dispose+3
  1958  001CE8  0E09               	movlw	9
  1959  001CEA  0100               	movlb	0	; () banked
  1960  001CEC  25F2               	addwf	(??_Magne_Demag_Dispose+2)& (0+255),w,b
  1961  001CEE  6E22               	movwf	___lwdiv@dividend,c
  1962  001CF0  0E00               	movlw	0
  1963  001CF2  0100               	movlb	0	; () banked
  1964  001CF4  21F3               	addwfc	(??_Magne_Demag_Dispose+3)& (0+255),w,b
  1965  001CF6  6E23               	movwf	___lwdiv@dividend+1,c
  1966  001CF8  0E00               	movlw	0
  1967  001CFA  6E25               	movwf	___lwdiv@divisor+1,c
  1968  001CFC  0E0A               	movlw	10
  1969  001CFE  6E24               	movwf	___lwdiv@divisor,c
  1970  001D00  EC21  F014         	call	___lwdiv	;wreg free
  1971  001D04  5022               	movf	?___lwdiv,w,c
  1972  001D06  6EDF               	movwf	indf2,c
  1973  001D08  0100               	movlb	0	; () banked
  1974  001D0A  2BF5               	incf	Magne_Demag_Dispose@j& (0+255),f,b
  1975  001D0C  D7C1               	goto	l3061
  1976                           
  1977                           ; BSR set to: 0
  1978                           
  1979                           ; BSR set to: 0
  1980  001D0E  D000               	goto	l3071
  1981  001D10                     l3071:
  1982                           
  1983                           ; BSR set to: 0
  1984                           ;triac.c: 248: }
  1985                           ;triac.c: 250: }
  1986                           ;triac.c: 251: if(Magnet_Flag && !(Message & ((uint32_t)(1<<4))))
  1987  001D10  0100               	movlb	0	; () banked
  1988  001D12  51D8               	movf	_Magnet_Flag& (0+255),w,b
  1989  001D14  0100               	movlb	0	; () banked
  1990  001D16  B4D8               	btfsc	status,2,c
  1991  001D18  D010               	goto	l3081
  1992                           
  1993                           ; BSR set to: 0
  1994  001D1A  0100               	movlb	0	; () banked
  1995  001D1C  B9B0               	btfsc	_Message& (0+255),4,b	;volatile
  1996  001D1E  D00D               	goto	l3081
  1997                           
  1998                           ; BSR set to: 0
  1999                           ;triac.c: 252: {
  2000                           ;triac.c: 253: Message |= ((uint32_t)(1<<2));
  2001  001D20  0100               	movlb	0	; () banked
  2002  001D22  85B0               	bsf	_Message& (0+255),2,b	;volatile
  2003                           
  2004                           ; BSR set to: 0
  2005                           ;triac.c: 254: Message &= ~((uint32_t)(1<<3));
  2006  001D24  0EF7               	movlw	247
  2007  001D26  0100               	movlb	0	; () banked
  2008  001D28  17B0               	andwf	_Message& (0+255),f,b	;volatile
  2009  001D2A  0EFF               	movlw	255
  2010  001D2C  17B1               	andwf	(_Message+1)& (0+255),f,b	;volatile
  2011  001D2E  0EFF               	movlw	255
  2012  001D30  17B2               	andwf	(_Message+2)& (0+255),f,b	;volatile
  2013  001D32  0EFF               	movlw	255
  2014  001D34  17B3               	andwf	(_Message+3)& (0+255),f,b	;volatile
  2015                           
  2016                           ; BSR set to: 0
  2017                           ;triac.c: 255: Message &= ~((uint32_t)(1<<4));
  2018  001D36  0EEF               	movlw	239
  2019  001D38  D00C               	goto	L1
  2020  001D3A                     l3081:
  2021                           
  2022                           ; BSR set to: 0
  2023                           ;triac.c: 257: else
  2024                           ;triac.c: 258: {
  2025                           ;triac.c: 259: Message |= ((uint32_t)(1<<4));
  2026  001D3A  0100               	movlb	0	; () banked
  2027  001D3C  89B0               	bsf	_Message& (0+255),4,b	;volatile
  2028                           
  2029                           ; BSR set to: 0
  2030                           ;triac.c: 260: Message &= ~((uint32_t)(1<<2));
  2031  001D3E  0EFB               	movlw	251
  2032  001D40  0100               	movlb	0	; () banked
  2033  001D42  17B0               	andwf	_Message& (0+255),f,b	;volatile
  2034  001D44  0EFF               	movlw	255
  2035  001D46  17B1               	andwf	(_Message+1)& (0+255),f,b	;volatile
  2036  001D48  0EFF               	movlw	255
  2037  001D4A  17B2               	andwf	(_Message+2)& (0+255),f,b	;volatile
  2038  001D4C  0EFF               	movlw	255
  2039  001D4E  17B3               	andwf	(_Message+3)& (0+255),f,b	;volatile
  2040                           
  2041                           ; BSR set to: 0
  2042                           ;triac.c: 261: Message &= ~((uint32_t)(1<<3));
  2043  001D50  0EF7               	movlw	247
  2044  001D52                     L1:
  2045  001D52  0100               	movlb	0	; () banked
  2046  001D54  17B0               	andwf	_Message& (0+255),f,b	;volatile
  2047  001D56  0EFF               	movlw	255
  2048  001D58  17B1               	andwf	(_Message+1)& (0+255),f,b	;volatile
  2049  001D5A  0EFF               	movlw	255
  2050  001D5C  17B2               	andwf	(_Message+2)& (0+255),f,b	;volatile
  2051  001D5E  0EFF               	movlw	255
  2052  001D60  17B3               	andwf	(_Message+3)& (0+255),f,b	;volatile
  2053                           
  2054                           ; BSR set to: 0
  2055  001D62  0100               	movlb	0	; () banked
  2056  001D64  2BF6               	incf	Magne_Demag_Dispose@i& (0+255),f,b
  2057  001D66  D74F               	goto	l3043
  2058  001D68                     l3089:
  2059                           
  2060                           ; BSR set to: 0
  2061                           ;triac.c: 262: }
  2062                           ;triac.c: 263: }
  2063                           ;triac.c: 264: delay_ms(200);
  2064  001D68  0EC8               	movlw	200
  2065  001D6A  6E2E               	movwf	delay_ms@nms,c
  2066  001D6C  0E00               	movlw	0
  2067  001D6E  6E2F               	movwf	delay_ms@nms+1,c
  2068  001D70  0E00               	movlw	0
  2069  001D72  6E30               	movwf	delay_ms@nms+2,c
  2070  001D74  0E00               	movlw	0
  2071  001D76  6E31               	movwf	delay_ms@nms+3,c
  2072  001D78  EC7C  F014         	call	_delay_ms	;wreg free
  2073                           
  2074                           ;triac.c: 265: {PORTDbits.RD0 = 0;PORTDbits.RD1 = 0;};
  2075  001D7C  9083               	bcf	3971,0,c	;volatile
  2076  001D7E  9283               	bcf	3971,1,c	;volatile
  2077                           
  2078                           ;triac.c: 267: delay_ms(200);
  2079  001D80  0EC8               	movlw	200
  2080  001D82  6E2E               	movwf	delay_ms@nms,c
  2081  001D84  0E00               	movlw	0
  2082  001D86  6E2F               	movwf	delay_ms@nms+1,c
  2083  001D88  0E00               	movlw	0
  2084  001D8A  6E30               	movwf	delay_ms@nms+2,c
  2085  001D8C  0E00               	movlw	0
  2086  001D8E  6E31               	movwf	delay_ms@nms+3,c
  2087  001D90  EC7C  F014         	call	_delay_ms	;wreg free
  2088                           
  2089                           ;triac.c: 268: }
  2090  001D94  D0EB               	goto	l3155
  2091  001D96                     l3095:
  2092                           
  2093                           ;triac.c: 269: else if(EMCC_State == DEMAG)
  2094  001D96  0100               	movlb	0	; () banked
  2095  001D98  51F4               	movf	Magne_Demag_Dispose@EMCC_State& (0+255),w,b
  2096  001D9A  0100               	movlb	0	; () banked
  2097  001D9C  A4D8               	btfss	status,2,c
  2098  001D9E  D0E6               	goto	l3155
  2099                           
  2100                           ; BSR set to: 0
  2101                           ;triac.c: 270: {
  2102                           ;triac.c: 271: Message &= ~((uint32_t)(1<<5));
  2103  001DA0  0EDF               	movlw	223
  2104  001DA2  0100               	movlb	0	; () banked
  2105  001DA4  17B0               	andwf	_Message& (0+255),f,b	;volatile
  2106  001DA6  0EFF               	movlw	255
  2107  001DA8  17B1               	andwf	(_Message+1)& (0+255),f,b	;volatile
  2108  001DAA  0EFF               	movlw	255
  2109  001DAC  17B2               	andwf	(_Message+2)& (0+255),f,b	;volatile
  2110  001DAE  0EFF               	movlw	255
  2111  001DB0  17B3               	andwf	(_Message+3)& (0+255),f,b	;volatile
  2112                           
  2113                           ;triac.c: 272: Message &= ~((uint32_t)(1<<4));
  2114  001DB2  0EEF               	movlw	239
  2115  001DB4  0100               	movlb	0	; () banked
  2116  001DB6  17B0               	andwf	_Message& (0+255),f,b	;volatile
  2117  001DB8  0EFF               	movlw	255
  2118  001DBA  17B1               	andwf	(_Message+1)& (0+255),f,b	;volatile
  2119  001DBC  0EFF               	movlw	255
  2120  001DBE  17B2               	andwf	(_Message+2)& (0+255),f,b	;volatile
  2121  001DC0  0EFF               	movlw	255
  2122  001DC2  17B3               	andwf	(_Message+3)& (0+255),f,b	;volatile
  2123                           
  2124                           ;triac.c: 273: if(Parameter[3].Value > 0)
  2125  001DC4  0101               	movlb	1	; () banked
  2126  001DC6  5118               	movf	(_Parameter+24)& (0+255),w,b
  2127  001DC8  0101               	movlb	1	; () banked
  2128  001DCA  1119               	iorwf	(_Parameter+25)& (0+255),w,b
  2129  001DCC  B4D8               	btfsc	status,2,c
  2130  001DCE  D003               	goto	l3101
  2131                           
  2132                           ; BSR set to: 1
  2133                           ;triac.c: 274: {
  2134                           ;triac.c: 275: {PORTDbits.RD0 = 1;PORTDbits.RD1 = 1;};
  2135  001DD0  8083               	bsf	3971,0,c	;volatile
  2136  001DD2  8283               	bsf	3971,1,c	;volatile
  2137  001DD4  D000               	goto	l3101
  2138  001DD6                     l3101:
  2139                           
  2140                           ; BSR set to: 1
  2141                           ;triac.c: 277: }
  2142                           ;triac.c: 278: for(i = 0; i < 16; i++)
  2143  001DD6  0E00               	movlw	0
  2144  001DD8  0100               	movlb	0	; () banked
  2145  001DDA  6FF6               	movwf	Magne_Demag_Dispose@i& (0+255),b
  2146  001DDC                     l3103:
  2147                           
  2148                           ; BSR set to: 0
  2149  001DDC  0E0F               	movlw	15
  2150  001DDE  0100               	movlb	0	; () banked
  2151  001DE0  65F6               	cpfsgt	Magne_Demag_Dispose@i& (0+255),b
  2152  001DE2  D001               	goto	l3107
  2153                           
  2154                           ; BSR set to: 0
  2155  001DE4  D0AC               	goto	l3149
  2156  001DE6                     l3107:
  2157                           
  2158                           ; BSR set to: 0
  2159                           ;triac.c: 279: {
  2160                           ;triac.c: 280: Demag_Flag = 1;
  2161  001DE6  0E01               	movlw	1
  2162  001DE8  0100               	movlb	0	; () banked
  2163  001DEA  6FD7               	movwf	_Demag_Flag& (0+255),b
  2164                           
  2165                           ; BSR set to: 0
  2166                           ;triac.c: 281: if((Parameter[3].Value >> i)&(uint16_t)1)
  2167  001DEC  C0F6  F0F0         	movff	Magne_Demag_Dispose@i,??_Magne_Demag_Dispose
  2168  001DF0  EE21  F018         	lfsr	2,_Parameter+24
  2169  001DF4  CFDE F0F1          	movff	postinc2,??_Magne_Demag_Dispose+1
  2170  001DF8  CFDD F0F2          	movff	postdec2,??_Magne_Demag_Dispose+2
  2171  001DFC  0100               	movlb	0	; () banked
  2172  001DFE  2BF0               	incf	??_Magne_Demag_Dispose& (0+255),f,b
  2173  001E00  D004               	goto	u4674
  2174  001E02                     u4675:
  2175  001E02  0100               	movlb	0	; () banked
  2176  001E04  90D8               	bcf	status,0,c
  2177  001E06  33F2               	rrcf	(??_Magne_Demag_Dispose+2)& (0+255),f,b
  2178  001E08  33F1               	rrcf	(??_Magne_Demag_Dispose+1)& (0+255),f,b
  2179  001E0A                     u4674:
  2180  001E0A  0100               	movlb	0	; () banked
  2181  001E0C  2FF0               	decfsz	??_Magne_Demag_Dispose& (0+255),f,b
  2182  001E0E  D7F9               	goto	u4675
  2183  001E10  0100               	movlb	0	; () banked
  2184  001E12  A1F1               	btfss	(??_Magne_Demag_Dispose+1)& (0+255),0,b
  2185  001E14  D068               	goto	l3131
  2186                           
  2187                           ; BSR set to: 0
  2188                           ;triac.c: 282: {
  2189                           ;triac.c: 283: delay_ms(200);
  2190  001E16  0EC8               	movlw	200
  2191  001E18  6E2E               	movwf	delay_ms@nms,c
  2192  001E1A  0E00               	movlw	0
  2193  001E1C  6E2F               	movwf	delay_ms@nms+1,c
  2194  001E1E  0E00               	movlw	0
  2195  001E20  6E30               	movwf	delay_ms@nms+2,c
  2196  001E22  0E00               	movlw	0
  2197  001E24  6E31               	movwf	delay_ms@nms+3,c
  2198  001E26  EC7C  F014         	call	_delay_ms	;wreg free
  2199                           
  2200                           ;triac.c: 284: Relay_Channel_SW(i+1,ENABLE);
  2201  001E2A  0E01               	movlw	1
  2202  001E2C  6E22               	movwf	Relay_Channel_SW@Flag,c
  2203  001E2E  0100               	movlb	0	; () banked
  2204  001E30  29F6               	incf	Magne_Demag_Dispose@i& (0+255),w,b
  2205  001E32  EC87  F012         	call	_Relay_Channel_SW
  2206                           
  2207                           ;triac.c: 285: Demag_Flag = Trica_Mag(DEMAG);
  2208  001E36  0E00               	movlw	0
  2209  001E38  EC09  F008         	call	_Trica_Mag
  2210  001E3C  0100               	movlb	0	; () banked
  2211  001E3E  6FD7               	movwf	_Demag_Flag& (0+255),b
  2212                           
  2213                           ; BSR set to: 0
  2214                           ;triac.c: 286: delay_ms(200);
  2215  001E40  0EC8               	movlw	200
  2216  001E42  6E2E               	movwf	delay_ms@nms,c
  2217  001E44  0E00               	movlw	0
  2218  001E46  6E2F               	movwf	delay_ms@nms+1,c
  2219  001E48  0E00               	movlw	0
  2220  001E4A  6E30               	movwf	delay_ms@nms+2,c
  2221  001E4C  0E00               	movlw	0
  2222  001E4E  6E31               	movwf	delay_ms@nms+3,c
  2223  001E50  EC7C  F014         	call	_delay_ms	;wreg free
  2224                           
  2225                           ;triac.c: 287: Relay_Channel_SW(i+1,DISABLE);
  2226  001E54  0E00               	movlw	0
  2227  001E56  6E22               	movwf	Relay_Channel_SW@Flag,c
  2228  001E58  0100               	movlb	0	; () banked
  2229  001E5A  29F6               	incf	Magne_Demag_Dispose@i& (0+255),w,b
  2230  001E5C  EC87  F012         	call	_Relay_Channel_SW
  2231                           
  2232                           ;triac.c: 289: for(j = 0;j < 40; j++)
  2233  001E60  0E00               	movlw	0
  2234  001E62  0100               	movlb	0	; () banked
  2235  001E64  6FF5               	movwf	Magne_Demag_Dispose@j& (0+255),b
  2236  001E66                     l3121:
  2237                           
  2238                           ; BSR set to: 0
  2239  001E66  0E27               	movlw	39
  2240  001E68  0100               	movlb	0	; () banked
  2241  001E6A  65F5               	cpfsgt	Magne_Demag_Dispose@j& (0+255),b
  2242  001E6C  D001               	goto	l3125
  2243                           
  2244                           ; BSR set to: 0
  2245  001E6E  D03B               	goto	l3131
  2246  001E70                     l3125:
  2247                           
  2248                           ; BSR set to: 0
  2249                           ;triac.c: 290: {
  2250                           ;triac.c: 291: Elec[i][j] = (uint8_t)((Elec_Max[j]+9)/10);
  2251  001E70  0100               	movlb	0	; () banked
  2252  001E72  51F6               	movf	Magne_Demag_Dispose@i& (0+255),w,b
  2253  001E74  0D28               	mullw	40
  2254  001E76  0E88               	movlw	low _Elec
  2255  001E78  0100               	movlb	0	; () banked
  2256  001E7A  6FF0               	movwf	??_Magne_Demag_Dispose& (0+255),b
  2257  001E7C  0E01               	movlw	high _Elec
  2258  001E7E  0100               	movlb	0	; () banked
  2259  001E80  6FF1               	movwf	(??_Magne_Demag_Dispose+1)& (0+255),b
  2260  001E82  50F3               	movf	prodl,w,c
  2261  001E84  0100               	movlb	0	; () banked
  2262  001E86  27F0               	addwf	??_Magne_Demag_Dispose& (0+255),f,b
  2263  001E88  50F4               	movf	prodh,w,c
  2264  001E8A  0100               	movlb	0	; () banked
  2265  001E8C  23F1               	addwfc	(??_Magne_Demag_Dispose+1)& (0+255),f,b
  2266  001E8E  0100               	movlb	0	; () banked
  2267  001E90  51F5               	movf	Magne_Demag_Dispose@j& (0+255),w,b
  2268  001E92  0D01               	mullw	1
  2269  001E94  50F3               	movf	prodl,w,c
  2270  001E96  0100               	movlb	0	; () banked
  2271  001E98  25F0               	addwf	??_Magne_Demag_Dispose& (0+255),w,b
  2272  001E9A  6ED9               	movwf	fsr2l,c
  2273  001E9C  50F4               	movf	prodh,w,c
  2274  001E9E  0100               	movlb	0	; () banked
  2275  001EA0  21F1               	addwfc	(??_Magne_Demag_Dispose+1)& (0+255),w,b
  2276  001EA2  6EDA               	movwf	fsr2h,c
  2277  001EA4  0100               	movlb	0	; () banked
  2278  001EA6  51F5               	movf	Magne_Demag_Dispose@j& (0+255),w,b
  2279  001EA8  0D02               	mullw	2
  2280  001EAA  0E60               	movlw	low _Elec_Max
  2281  001EAC  24F3               	addwf	prodl,w,c
  2282  001EAE  6EE1               	movwf	fsr1l,c
  2283  001EB0  0E00               	movlw	high _Elec_Max
  2284  001EB2  20F4               	addwfc	prodh,w,c
  2285  001EB4  6EE2               	movwf	fsr1h,c
  2286  001EB6  CFE6 F0F2          	movff	postinc1,??_Magne_Demag_Dispose+2
  2287  001EBA  CFE5 F0F3          	movff	postdec1,??_Magne_Demag_Dispose+3
  2288  001EBE  0E09               	movlw	9
  2289  001EC0  0100               	movlb	0	; () banked
  2290  001EC2  25F2               	addwf	(??_Magne_Demag_Dispose+2)& (0+255),w,b
  2291  001EC4  6E22               	movwf	___lwdiv@dividend,c
  2292  001EC6  0E00               	movlw	0
  2293  001EC8  0100               	movlb	0	; () banked
  2294  001ECA  21F3               	addwfc	(??_Magne_Demag_Dispose+3)& (0+255),w,b
  2295  001ECC  6E23               	movwf	___lwdiv@dividend+1,c
  2296  001ECE  0E00               	movlw	0
  2297  001ED0  6E25               	movwf	___lwdiv@divisor+1,c
  2298  001ED2  0E0A               	movlw	10
  2299  001ED4  6E24               	movwf	___lwdiv@divisor,c
  2300  001ED6  EC21  F014         	call	___lwdiv	;wreg free
  2301  001EDA  5022               	movf	?___lwdiv,w,c
  2302  001EDC  6EDF               	movwf	indf2,c
  2303  001EDE  0100               	movlb	0	; () banked
  2304  001EE0  2BF5               	incf	Magne_Demag_Dispose@j& (0+255),f,b
  2305  001EE2  D7C1               	goto	l3121
  2306                           
  2307                           ; BSR set to: 0
  2308                           
  2309                           ; BSR set to: 0
  2310  001EE4  D000               	goto	l3131
  2311  001EE6                     l3131:
  2312                           
  2313                           ; BSR set to: 0
  2314                           ;triac.c: 292: }
  2315                           ;triac.c: 294: }
  2316                           ;triac.c: 295: if(Demag_Flag && !(Message & ((uint32_t)(1<<5))))
  2317  001EE6  0100               	movlb	0	; () banked
  2318  001EE8  51D7               	movf	_Demag_Flag& (0+255),w,b
  2319  001EEA  0100               	movlb	0	; () banked
  2320  001EEC  B4D8               	btfsc	status,2,c
  2321  001EEE  D010               	goto	l3141
  2322                           
  2323                           ; BSR set to: 0
  2324  001EF0  0100               	movlb	0	; () banked
  2325  001EF2  BBB0               	btfsc	_Message& (0+255),5,b	;volatile
  2326  001EF4  D00D               	goto	l3141
  2327                           
  2328                           ; BSR set to: 0
  2329                           ;triac.c: 296: {
  2330                           ;triac.c: 297: Message |= ((uint32_t)(1<<3));
  2331  001EF6  0100               	movlb	0	; () banked
  2332  001EF8  87B0               	bsf	_Message& (0+255),3,b	;volatile
  2333                           
  2334                           ; BSR set to: 0
  2335                           ;triac.c: 298: Message &= ~((uint32_t)(1<<2));
  2336  001EFA  0EFB               	movlw	251
  2337  001EFC  0100               	movlb	0	; () banked
  2338  001EFE  17B0               	andwf	_Message& (0+255),f,b	;volatile
  2339  001F00  0EFF               	movlw	255
  2340  001F02  17B1               	andwf	(_Message+1)& (0+255),f,b	;volatile
  2341  001F04  0EFF               	movlw	255
  2342  001F06  17B2               	andwf	(_Message+2)& (0+255),f,b	;volatile
  2343  001F08  0EFF               	movlw	255
  2344  001F0A  17B3               	andwf	(_Message+3)& (0+255),f,b	;volatile
  2345                           
  2346                           ; BSR set to: 0
  2347                           ;triac.c: 299: Message &= ~((uint32_t)(1<<5));
  2348  001F0C  0EDF               	movlw	223
  2349  001F0E  D00C               	goto	L2
  2350  001F10                     l3141:
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;triac.c: 301: else
  2354                           ;triac.c: 302: {
  2355                           ;triac.c: 303: Message |= ((uint32_t)(1<<5));
  2356  001F10  0100               	movlb	0	; () banked
  2357  001F12  8BB0               	bsf	_Message& (0+255),5,b	;volatile
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;triac.c: 304: Message &= ~((uint32_t)(1<<3));
  2361  001F14  0EF7               	movlw	247
  2362  001F16  0100               	movlb	0	; () banked
  2363  001F18  17B0               	andwf	_Message& (0+255),f,b	;volatile
  2364  001F1A  0EFF               	movlw	255
  2365  001F1C  17B1               	andwf	(_Message+1)& (0+255),f,b	;volatile
  2366  001F1E  0EFF               	movlw	255
  2367  001F20  17B2               	andwf	(_Message+2)& (0+255),f,b	;volatile
  2368  001F22  0EFF               	movlw	255
  2369  001F24  17B3               	andwf	(_Message+3)& (0+255),f,b	;volatile
  2370                           
  2371                           ; BSR set to: 0
  2372                           ;triac.c: 305: Message &= ~((uint32_t)(1<<2));
  2373  001F26  0EFB               	movlw	251
  2374  001F28                     L2:
  2375  001F28  0100               	movlb	0	; () banked
  2376  001F2A  17B0               	andwf	_Message& (0+255),f,b	;volatile
  2377  001F2C  0EFF               	movlw	255
  2378  001F2E  17B1               	andwf	(_Message+1)& (0+255),f,b	;volatile
  2379  001F30  0EFF               	movlw	255
  2380  001F32  17B2               	andwf	(_Message+2)& (0+255),f,b	;volatile
  2381  001F34  0EFF               	movlw	255
  2382  001F36  17B3               	andwf	(_Message+3)& (0+255),f,b	;volatile
  2383                           
  2384                           ; BSR set to: 0
  2385  001F38  0100               	movlb	0	; () banked
  2386  001F3A  2BF6               	incf	Magne_Demag_Dispose@i& (0+255),f,b
  2387  001F3C  D74F               	goto	l3103
  2388  001F3E                     l3149:
  2389                           
  2390                           ; BSR set to: 0
  2391                           ;triac.c: 306: }
  2392                           ;triac.c: 307: }
  2393                           ;triac.c: 308: delay_ms(200);
  2394  001F3E  0EC8               	movlw	200
  2395  001F40  6E2E               	movwf	delay_ms@nms,c
  2396  001F42  0E00               	movlw	0
  2397  001F44  6E2F               	movwf	delay_ms@nms+1,c
  2398  001F46  0E00               	movlw	0
  2399  001F48  6E30               	movwf	delay_ms@nms+2,c
  2400  001F4A  0E00               	movlw	0
  2401  001F4C  6E31               	movwf	delay_ms@nms+3,c
  2402  001F4E  EC7C  F014         	call	_delay_ms	;wreg free
  2403                           
  2404                           ;triac.c: 309: {PORTDbits.RD0 = 0;PORTDbits.RD1 = 0;};
  2405  001F52  9083               	bcf	3971,0,c	;volatile
  2406  001F54  9283               	bcf	3971,1,c	;volatile
  2407                           
  2408                           ;triac.c: 311: delay_ms(200);
  2409  001F56  0EC8               	movlw	200
  2410  001F58  6E2E               	movwf	delay_ms@nms,c
  2411  001F5A  0E00               	movlw	0
  2412  001F5C  6E2F               	movwf	delay_ms@nms+1,c
  2413  001F5E  0E00               	movlw	0
  2414  001F60  6E30               	movwf	delay_ms@nms+2,c
  2415  001F62  0E00               	movlw	0
  2416  001F64  6E31               	movwf	delay_ms@nms+3,c
  2417  001F66  EC7C  F014         	call	_delay_ms	;wreg free
  2418  001F6A  D000               	goto	l3155
  2419  001F6C                     l3155:
  2420                           
  2421                           ;triac.c: 312: }
  2422                           ;triac.c: 313: Spacing_Count = Parameter[13].Value*50;
  2423  001F6C  C168  F022         	movff	_Parameter+104,___wmul@multiplier
  2424  001F70  C169  F023         	movff	_Parameter+105,___wmul@multiplier+1
  2425  001F74  0E00               	movlw	0
  2426  001F76  6E25               	movwf	___wmul@multiplicand+1,c
  2427  001F78  0E32               	movlw	50
  2428  001F7A  6E24               	movwf	___wmul@multiplicand,c
  2429  001F7C  ECF5  F014         	call	___wmul	;wreg free
  2430  001F80  C022  F035         	movff	?___wmul,_Spacing_Count
  2431  001F84  C023  F036         	movff	?___wmul+1,_Spacing_Count+1
  2432  001F88  0012               	return		;funcret
  2433  001F8A                     __end_of_Magne_Demag_Dispose:
  2434                           	opt stack 0
  2435                           tblptru	equ	0xFF8
  2436                           tblptrh	equ	0xFF7
  2437                           tblptrl	equ	0xFF6
  2438                           tablat	equ	0xFF5
  2439                           prodh	equ	0xFF4
  2440                           prodl	equ	0xFF3
  2441                           intcon	equ	0xFF2
  2442                           postinc0	equ	0xFEE
  2443                           wreg	equ	0xFE8
  2444                           postinc1	equ	0xFE6
  2445                           postdec1	equ	0xFE5
  2446                           fsr1h	equ	0xFE2
  2447                           fsr1l	equ	0xFE1
  2448                           indf2	equ	0xFDF
  2449                           postinc2	equ	0xFDE
  2450                           postdec2	equ	0xFDD
  2451                           fsr2h	equ	0xFDA
  2452                           fsr2l	equ	0xFD9
  2453                           status	equ	0xFD8
  2454                           
  2455 ;; *************** function _delay_ms *****************
  2456 ;; Defined at:
  2457 ;;		line 45 in file "nbproject/private/delay.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;  nms             4   45[COMRAM] unsigned long 
  2460 ;; Auto vars:     Size  Location     Type
  2461 ;;		None
  2462 ;; Return value:  Size  Location     Type
  2463 ;;		None               void
  2464 ;; Registers used:
  2465 ;;		wreg, status,2, status,0, cstack
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2471 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2474 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2475 ;;Total ram usage:        4 bytes
  2476 ;; Hardware stack levels used:    1
  2477 ;; Hardware stack levels required when called:    4
  2478 ;; This function calls:
  2479 ;;		___lmul
  2480 ;; This function is called by:
  2481 ;;		_Magne_Demag_Dispose
  2482 ;;		_Message_Manage
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           	psect	text8
  2487  0028F8                     __ptext8:
  2488                           	opt stack 0
  2489  0028F8                     _delay_ms:
  2490                           	opt stack 25
  2491                           
  2492                           ;delay.c: 47: nms = nms*1000;
  2493                           
  2494                           ;incstack = 0
  2495  0028F8  C02E  F022         	movff	delay_ms@nms,___lmul@multiplier
  2496  0028FC  C02F  F023         	movff	delay_ms@nms+1,___lmul@multiplier+1
  2497  002900  C030  F024         	movff	delay_ms@nms+2,___lmul@multiplier+2
  2498  002904  C031  F025         	movff	delay_ms@nms+3,___lmul@multiplier+3
  2499  002908  0EE8               	movlw	232
  2500  00290A  6E26               	movwf	___lmul@multiplicand,c
  2501  00290C  0E03               	movlw	3
  2502  00290E  6E27               	movwf	___lmul@multiplicand+1,c
  2503  002910  0E00               	movlw	0
  2504  002912  6E28               	movwf	___lmul@multiplicand+2,c
  2505  002914  0E00               	movlw	0
  2506  002916  6E29               	movwf	___lmul@multiplicand+3,c
  2507  002918  EC4F  F014         	call	___lmul	;wreg free
  2508  00291C  C022  F02E         	movff	?___lmul,delay_ms@nms
  2509  002920  C023  F02F         	movff	?___lmul+1,delay_ms@nms+1
  2510  002924  C024  F030         	movff	?___lmul+2,delay_ms@nms+2
  2511  002928  C025  F031         	movff	?___lmul+3,delay_ms@nms+3
  2512                           
  2513                           ;delay.c: 48: while(nms--);
  2514  00292C  D000               	goto	l2961
  2515  00292E                     l2961:
  2516  00292E  062E               	decf	delay_ms@nms,f,c
  2517  002930  0E00               	movlw	0
  2518  002932  5A2F               	subwfb	delay_ms@nms+1,f,c
  2519  002934  5A30               	subwfb	delay_ms@nms+2,f,c
  2520  002936  5A31               	subwfb	delay_ms@nms+3,f,c
  2521  002938  282E               	incf	delay_ms@nms,w,c
  2522  00293A  E1F9               	bnz	l2961
  2523  00293C  282F               	incf	delay_ms@nms+1,w,c
  2524  00293E  E1F7               	bnz	l2961
  2525  002940  2830               	incf	delay_ms@nms+2,w,c
  2526  002942  E1F5               	bnz	l2961
  2527  002944  2831               	incf	delay_ms@nms+3,w,c
  2528  002946  A4D8               	btfss	status,2,c
  2529  002948  D7F2               	goto	l2961
  2530  00294A  0012               	return		;funcret
  2531  00294C                     __end_of_delay_ms:
  2532                           	opt stack 0
  2533                           tblptru	equ	0xFF8
  2534                           tblptrh	equ	0xFF7
  2535                           tblptrl	equ	0xFF6
  2536                           tablat	equ	0xFF5
  2537                           prodh	equ	0xFF4
  2538                           prodl	equ	0xFF3
  2539                           intcon	equ	0xFF2
  2540                           postinc0	equ	0xFEE
  2541                           wreg	equ	0xFE8
  2542                           postinc1	equ	0xFE6
  2543                           postdec1	equ	0xFE5
  2544                           fsr1h	equ	0xFE2
  2545                           fsr1l	equ	0xFE1
  2546                           indf2	equ	0xFDF
  2547                           postinc2	equ	0xFDE
  2548                           postdec2	equ	0xFDD
  2549                           fsr2h	equ	0xFDA
  2550                           fsr2l	equ	0xFD9
  2551                           status	equ	0xFD8
  2552                           
  2553 ;; *************** function ___lmul *****************
  2554 ;; Defined at:
  2555 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v1.34\sources\common\Umul32.c"
  2556 ;; Parameters:    Size  Location     Type
  2557 ;;  multiplier      4   33[COMRAM] unsigned long 
  2558 ;;  multiplicand    4   37[COMRAM] unsigned long 
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;  product         4   41[COMRAM] unsigned long 
  2561 ;; Return value:  Size  Location     Type
  2562 ;;                  4   33[COMRAM] unsigned long 
  2563 ;; Registers used:
  2564 ;;		wreg, status,2, status,0
  2565 ;; Tracked objects:
  2566 ;;		On entry : 0/0
  2567 ;;		On exit  : 0/0
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2570 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2571 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2573 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2574 ;;Total ram usage:       12 bytes
  2575 ;; Hardware stack levels used:    1
  2576 ;; Hardware stack levels required when called:    3
  2577 ;; This function calls:
  2578 ;;		Nothing
  2579 ;; This function is called by:
  2580 ;;		_delay_ms
  2581 ;; This function uses a non-reentrant model
  2582 ;;
  2583                           
  2584                           	psect	text9
  2585  00289E                     __ptext9:
  2586                           	opt stack 0
  2587  00289E                     ___lmul:
  2588                           	opt stack 25
  2589                           
  2590                           ;incstack = 0
  2591  00289E  0E00               	movlw	0
  2592  0028A0  6E2A               	movwf	___lmul@product,c
  2593  0028A2  0E00               	movlw	0
  2594  0028A4  6E2B               	movwf	___lmul@product+1,c
  2595  0028A6  0E00               	movlw	0
  2596  0028A8  6E2C               	movwf	___lmul@product+2,c
  2597  0028AA  0E00               	movlw	0
  2598  0028AC  6E2D               	movwf	___lmul@product+3,c
  2599  0028AE  D000               	goto	l2735
  2600  0028B0                     l2735:
  2601  0028B0  A022               	btfss	___lmul@multiplier,0,c
  2602  0028B2  D009               	goto	l2739
  2603  0028B4  5026               	movf	___lmul@multiplicand,w,c
  2604  0028B6  262A               	addwf	___lmul@product,f,c
  2605  0028B8  5027               	movf	___lmul@multiplicand+1,w,c
  2606  0028BA  222B               	addwfc	___lmul@product+1,f,c
  2607  0028BC  5028               	movf	___lmul@multiplicand+2,w,c
  2608  0028BE  222C               	addwfc	___lmul@product+2,f,c
  2609  0028C0  5029               	movf	___lmul@multiplicand+3,w,c
  2610  0028C2  222D               	addwfc	___lmul@product+3,f,c
  2611  0028C4  D000               	goto	l2739
  2612  0028C6                     l2739:
  2613  0028C6  90D8               	bcf	status,0,c
  2614  0028C8  3626               	rlcf	___lmul@multiplicand,f,c
  2615  0028CA  3627               	rlcf	___lmul@multiplicand+1,f,c
  2616  0028CC  3628               	rlcf	___lmul@multiplicand+2,f,c
  2617  0028CE  3629               	rlcf	___lmul@multiplicand+3,f,c
  2618  0028D0  90D8               	bcf	status,0,c
  2619  0028D2  3225               	rrcf	___lmul@multiplier+3,f,c
  2620  0028D4  3224               	rrcf	___lmul@multiplier+2,f,c
  2621  0028D6  3223               	rrcf	___lmul@multiplier+1,f,c
  2622  0028D8  3222               	rrcf	___lmul@multiplier,f,c
  2623  0028DA  5022               	movf	___lmul@multiplier,w,c
  2624  0028DC  1023               	iorwf	___lmul@multiplier+1,w,c
  2625  0028DE  1024               	iorwf	___lmul@multiplier+2,w,c
  2626  0028E0  1025               	iorwf	___lmul@multiplier+3,w,c
  2627  0028E2  A4D8               	btfss	status,2,c
  2628  0028E4  D7E5               	goto	l2735
  2629  0028E6  C02A  F022         	movff	___lmul@product,?___lmul
  2630  0028EA  C02B  F023         	movff	___lmul@product+1,?___lmul+1
  2631  0028EE  C02C  F024         	movff	___lmul@product+2,?___lmul+2
  2632  0028F2  C02D  F025         	movff	___lmul@product+3,?___lmul+3
  2633  0028F6  0012               	return		;funcret
  2634  0028F8                     __end_of___lmul:
  2635                           	opt stack 0
  2636                           tblptru	equ	0xFF8
  2637                           tblptrh	equ	0xFF7
  2638                           tblptrl	equ	0xFF6
  2639                           tablat	equ	0xFF5
  2640                           prodh	equ	0xFF4
  2641                           prodl	equ	0xFF3
  2642                           intcon	equ	0xFF2
  2643                           postinc0	equ	0xFEE
  2644                           wreg	equ	0xFE8
  2645                           postinc1	equ	0xFE6
  2646                           postdec1	equ	0xFE5
  2647                           fsr1h	equ	0xFE2
  2648                           fsr1l	equ	0xFE1
  2649                           indf2	equ	0xFDF
  2650                           postinc2	equ	0xFDE
  2651                           postdec2	equ	0xFDD
  2652                           fsr2h	equ	0xFDA
  2653                           fsr2l	equ	0xFD9
  2654                           status	equ	0xFD8
  2655                           
  2656 ;; *************** function ___lwdiv *****************
  2657 ;; Defined at:
  2658 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;  dividend        2   33[COMRAM] unsigned int 
  2661 ;;  divisor         2   35[COMRAM] unsigned int 
  2662 ;; Auto vars:     Size  Location     Type
  2663 ;;  quotient        2   38[COMRAM] unsigned int 
  2664 ;;  counter         1   37[COMRAM] unsigned char 
  2665 ;; Return value:  Size  Location     Type
  2666 ;;                  2   33[COMRAM] unsigned int 
  2667 ;; Registers used:
  2668 ;;		wreg, status,2, status,0
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/0
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2674 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2675 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2677 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2678 ;;Total ram usage:        7 bytes
  2679 ;; Hardware stack levels used:    1
  2680 ;; Hardware stack levels required when called:    3
  2681 ;; This function calls:
  2682 ;;		Nothing
  2683 ;; This function is called by:
  2684 ;;		_Magne_Demag_Dispose
  2685 ;; This function uses a non-reentrant model
  2686 ;;
  2687                           
  2688                           	psect	text10
  2689  002842                     __ptext10:
  2690                           	opt stack 0
  2691  002842                     ___lwdiv:
  2692                           	opt stack 25
  2693                           
  2694                           ;incstack = 0
  2695  002842  0E00               	movlw	0
  2696  002844  6E28               	movwf	___lwdiv@quotient+1,c
  2697  002846  0E00               	movlw	0
  2698  002848  6E27               	movwf	___lwdiv@quotient,c
  2699  00284A  5024               	movf	___lwdiv@divisor,w,c
  2700  00284C  1025               	iorwf	___lwdiv@divisor+1,w,c
  2701  00284E  B4D8               	btfsc	status,2,c
  2702  002850  D021               	goto	l998
  2703  002852  0E01               	movlw	1
  2704  002854  6E26               	movwf	___lwdiv@counter,c
  2705  002856  D005               	goto	l3009
  2706  002858                     l3007:
  2707  002858  90D8               	bcf	status,0,c
  2708  00285A  3624               	rlcf	___lwdiv@divisor,f,c
  2709  00285C  3625               	rlcf	___lwdiv@divisor+1,f,c
  2710  00285E  2A26               	incf	___lwdiv@counter,f,c
  2711  002860  D000               	goto	l3009
  2712  002862                     l3009:
  2713  002862  BE25               	btfsc	___lwdiv@divisor+1,7,c
  2714  002864  D002               	goto	l3011
  2715  002866  D7F8               	goto	l3007
  2716  002868  D000               	goto	l3011
  2717  00286A                     l3011:
  2718  00286A  90D8               	bcf	status,0,c
  2719  00286C  3627               	rlcf	___lwdiv@quotient,f,c
  2720  00286E  3628               	rlcf	___lwdiv@quotient+1,f,c
  2721  002870  5024               	movf	___lwdiv@divisor,w,c
  2722  002872  5C22               	subwf	___lwdiv@dividend,w,c
  2723  002874  5025               	movf	___lwdiv@divisor+1,w,c
  2724  002876  5823               	subwfb	___lwdiv@dividend+1,w,c
  2725  002878  A0D8               	btfss	status,0,c
  2726  00287A  D006               	goto	l3019
  2727  00287C  5024               	movf	___lwdiv@divisor,w,c
  2728  00287E  5E22               	subwf	___lwdiv@dividend,f,c
  2729  002880  5025               	movf	___lwdiv@divisor+1,w,c
  2730  002882  5A23               	subwfb	___lwdiv@dividend+1,f,c
  2731  002884  8027               	bsf	___lwdiv@quotient,0,c
  2732  002886  D000               	goto	l3019
  2733  002888                     l3019:
  2734  002888  90D8               	bcf	status,0,c
  2735  00288A  3225               	rrcf	___lwdiv@divisor+1,f,c
  2736  00288C  3224               	rrcf	___lwdiv@divisor,f,c
  2737  00288E  2E26               	decfsz	___lwdiv@counter,f,c
  2738  002890  D7EC               	goto	l3011
  2739  002892  D000               	goto	l998
  2740  002894                     l998:
  2741  002894  C027  F022         	movff	___lwdiv@quotient,?___lwdiv
  2742  002898  C028  F023         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2743  00289C  0012               	return		;funcret
  2744  00289E                     __end_of___lwdiv:
  2745                           	opt stack 0
  2746                           tblptru	equ	0xFF8
  2747                           tblptrh	equ	0xFF7
  2748                           tblptrl	equ	0xFF6
  2749                           tablat	equ	0xFF5
  2750                           prodh	equ	0xFF4
  2751                           prodl	equ	0xFF3
  2752                           intcon	equ	0xFF2
  2753                           postinc0	equ	0xFEE
  2754                           wreg	equ	0xFE8
  2755                           postinc1	equ	0xFE6
  2756                           postdec1	equ	0xFE5
  2757                           fsr1h	equ	0xFE2
  2758                           fsr1l	equ	0xFE1
  2759                           indf2	equ	0xFDF
  2760                           postinc2	equ	0xFDE
  2761                           postdec2	equ	0xFDD
  2762                           fsr2h	equ	0xFDA
  2763                           fsr2l	equ	0xFD9
  2764                           status	equ	0xFD8
  2765                           
  2766 ;; *************** function _Trica_Mag *****************
  2767 ;; Defined at:
  2768 ;;		line 41 in file "nbproject/private/triac.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;  EMCC_State      1    wreg     enum E8799
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;  EMCC_State      1   14[BANK0 ] enum E8799
  2773 ;;  i               2   21[BANK0 ] unsigned int 
  2774 ;;  Elec            2   19[BANK0 ] unsigned int 
  2775 ;;  k               2   17[BANK0 ] unsigned int 
  2776 ;;  j               2   15[BANK0 ] unsigned int 
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  1    wreg      unsigned char 
  2779 ;; Registers used:
  2780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 0/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2787 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2788 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2789 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2790 ;;Total ram usage:       15 bytes
  2791 ;; Hardware stack levels used:    1
  2792 ;; Hardware stack levels required when called:    5
  2793 ;; This function calls:
  2794 ;;		_ADC_ElecGet
  2795 ;;		_Trica_Control
  2796 ;;		___wmul
  2797 ;;		_delay_us
  2798 ;; This function is called by:
  2799 ;;		_Magne_Demag_Dispose
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803                           	psect	text11
  2804  001012                     __ptext11:
  2805                           	opt stack 0
  2806  001012                     _Trica_Mag:
  2807                           	opt stack 23
  2808                           
  2809                           ;incstack = 0
  2810                           ;Trica_Mag@EMCC_State stored from wreg
  2811  001012  0100               	movlb	0	; () banked
  2812  001014  6FE7               	movwf	Trica_Mag@EMCC_State& (0+255),b
  2813                           
  2814                           ; BSR set to: 0
  2815                           ;triac.c: 43: uint16_t Elec = 0;
  2816  001016  0E00               	movlw	0
  2817  001018  0100               	movlb	0	; () banked
  2818  00101A  6FED               	movwf	(Trica_Mag@Elec+1)& (0+255),b
  2819  00101C  0E00               	movlw	0
  2820  00101E  6FEC               	movwf	Trica_Mag@Elec& (0+255),b
  2821                           
  2822                           ;triac.c: 44: uint16_t i=0,j,k;
  2823  001020  0E00               	movlw	0
  2824  001022  0100               	movlb	0	; () banked
  2825  001024  6FEF               	movwf	(Trica_Mag@i+1)& (0+255),b
  2826  001026  0E00               	movlw	0
  2827  001028  6FEE               	movwf	Trica_Mag@i& (0+255),b
  2828                           
  2829                           ;triac.c: 45: Houwa_Cuont = 0;
  2830  00102A  0E00               	movlw	0
  2831  00102C  0100               	movlb	0	; () banked
  2832  00102E  6FB5               	movwf	(_Houwa_Cuont+1)& (0+255),b
  2833  001030  0E00               	movlw	0
  2834  001032  6FB4               	movwf	_Houwa_Cuont& (0+255),b
  2835                           
  2836                           ;triac.c: 46: for(j = 0;j < 40;j++)
  2837  001034  0E00               	movlw	0
  2838  001036  0100               	movlb	0	; () banked
  2839  001038  6FE9               	movwf	(Trica_Mag@j+1)& (0+255),b
  2840  00103A  0E00               	movlw	0
  2841  00103C  6FE8               	movwf	Trica_Mag@j& (0+255),b
  2842  00103E                     l2745:
  2843                           
  2844                           ; BSR set to: 0
  2845  00103E  0100               	movlb	0	; () banked
  2846  001040  51E9               	movf	(Trica_Mag@j+1)& (0+255),w,b
  2847  001042  E11B               	bnz	l2755
  2848  001044  0E28               	movlw	40
  2849  001046  0100               	movlb	0	; () banked
  2850  001048  5DE8               	subwf	Trica_Mag@j& (0+255),w,b
  2851  00104A  B0D8               	btfsc	status,0,c
  2852  00104C  D016               	goto	l2755
  2853  00104E  D001               	goto	l2749
  2854                           
  2855                           ; BSR set to: 0
  2856  001050  D014               	goto	l2755
  2857  001052                     l2749:
  2858                           
  2859                           ; BSR set to: 0
  2860                           ;triac.c: 47: {
  2861                           ;triac.c: 48: Elec_Max[j] = 0;
  2862  001052  90D8               	bcf	status,0,c
  2863  001054  0100               	movlb	0	; () banked
  2864  001056  35E8               	rlcf	Trica_Mag@j& (0+255),w,b
  2865  001058  6ED9               	movwf	fsr2l,c
  2866  00105A  0100               	movlb	0	; () banked
  2867  00105C  35E9               	rlcf	(Trica_Mag@j+1)& (0+255),w,b
  2868  00105E  6EDA               	movwf	fsr2h,c
  2869  001060  0E60               	movlw	low _Elec_Max
  2870  001062  26D9               	addwf	fsr2l,f,c
  2871  001064  0E00               	movlw	high _Elec_Max
  2872  001066  22DA               	addwfc	fsr2h,f,c
  2873  001068  0E00               	movlw	0
  2874  00106A  6EDE               	movwf	postinc2,c
  2875  00106C  0E00               	movlw	0
  2876  00106E  6EDD               	movwf	postdec2,c
  2877                           
  2878                           ; BSR set to: 0
  2879  001070  0100               	movlb	0	; () banked
  2880  001072  4BE8               	infsnz	Trica_Mag@j& (0+255),f,b
  2881  001074  2BE9               	incf	(Trica_Mag@j+1)& (0+255),f,b
  2882  001076  D7E3               	goto	l2745
  2883                           
  2884                           ; BSR set to: 0
  2885  001078  D000               	goto	l2755
  2886  00107A                     l2755:
  2887                           
  2888                           ; BSR set to: 0
  2889                           ;triac.c: 49: }
  2890                           ;triac.c: 51: if(EMCC_State == MAGNET)
  2891  00107A  0100               	movlb	0	; () banked
  2892  00107C  05E7               	decf	Trica_Mag@EMCC_State& (0+255),w,b
  2893  00107E  A4D8               	btfss	status,2,c
  2894  001080  D1E4               	goto	l2855
  2895                           
  2896                           ; BSR set to: 0
  2897                           ;triac.c: 52: {
  2898                           ;triac.c: 53: if(Parameter[7].Value)
  2899  001082  0101               	movlb	1	; () banked
  2900  001084  5138               	movf	(_Parameter+56)& (0+255),w,b
  2901  001086  0101               	movlb	1	; () banked
  2902  001088  1139               	iorwf	(_Parameter+57)& (0+255),w,b
  2903  00108A  B4D8               	btfsc	status,2,c
  2904  00108C  D101               	goto	l2807
  2905                           
  2906                           ; BSR set to: 1
  2907                           ;triac.c: 54: {
  2908                           ;triac.c: 55: for(i = 0; i < Parameter[6].Value*2; i++)
  2909  00108E  0E00               	movlw	0
  2910  001090  0100               	movlb	0	; () banked
  2911  001092  6FEF               	movwf	(Trica_Mag@i+1)& (0+255),b
  2912  001094  0E00               	movlw	0
  2913  001096  6FEE               	movwf	Trica_Mag@i& (0+255),b
  2914  001098  D0B6               	goto	l2799
  2915                           
  2916                           ; BSR set to: 0
  2917                           ;triac.c: 56: {
  2918                           ;triac.c: 57: while(PORTCbits.RC3 == 0);
  2919  00109A  D000               	goto	l100
  2920  00109C                     l100:
  2921                           
  2922                           ; BSR set to: 0
  2923  00109C  B682               	btfsc	3970,3,c	;volatile
  2924  00109E  D002               	goto	l103
  2925  0010A0  D7FD               	goto	l100
  2926                           
  2927                           ; BSR set to: 0
  2928                           ;triac.c: 58: while(PORTCbits.RC3 == 1);
  2929  0010A2  D000               	goto	l103
  2930  0010A4                     l103:
  2931                           
  2932                           ; BSR set to: 0
  2933  0010A4  B682               	btfsc	3970,3,c	;volatile
  2934  0010A6  D7FE               	goto	l103
  2935                           
  2936                           ; BSR set to: 0
  2937                           ;triac.c: 59: delay_us(Gears_Timer[Parameter[1].Value]);
  2938                           
  2939                           ; BSR set to: 0
  2940  0010A8  90D8               	bcf	status,0,c
  2941  0010AA  0101               	movlb	1	; () banked
  2942  0010AC  3508               	rlcf	(_Parameter+8)& (0+255),w,b
  2943  0010AE  6ED9               	movwf	fsr2l,c
  2944  0010B0  0101               	movlb	1	; () banked
  2945  0010B2  3509               	rlcf	(_Parameter+9)& (0+255),w,b
  2946  0010B4  6EDA               	movwf	fsr2h,c
  2947  0010B6  0EB7               	movlw	low _Gears_Timer
  2948  0010B8  26D9               	addwf	fsr2l,f,c
  2949  0010BA  0E00               	movlw	high _Gears_Timer
  2950  0010BC  22DA               	addwfc	fsr2h,f,c
  2951  0010BE  CFDE F0E1          	movff	postinc2,??_Trica_Mag
  2952  0010C2  CFDD F0E2          	movff	postdec2,??_Trica_Mag+1
  2953  0010C6  C0E1  F022         	movff	??_Trica_Mag,delay_us@nus
  2954  0010CA  C0E2  F023         	movff	??_Trica_Mag+1,delay_us@nus+1
  2955  0010CE  6A24               	clrf	delay_us@nus+2,c
  2956  0010D0  6A25               	clrf	delay_us@nus+3,c
  2957  0010D2  EC3D  F015         	call	_delay_us	;wreg free
  2958                           
  2959                           ;triac.c: 60: Trica_Control(MAGNET);
  2960  0010D6  0E01               	movlw	1
  2961  0010D8  EC2E  F013         	call	_Trica_Control
  2962                           
  2963                           ;triac.c: 61: while(PORTCbits.RC3 == 0)
  2964  0010DC  D045               	goto	l106
  2965  0010DE                     l2765:
  2966                           
  2967                           ;triac.c: 62: {
  2968                           ;triac.c: 63: Elec = ADC_ElecGet();
  2969  0010DE  ECD7  F010         	call	_ADC_ElecGet	;wreg free
  2970  0010E2  C02F  F0EC         	movff	?_ADC_ElecGet,Trica_Mag@Elec
  2971  0010E6  C030  F0ED         	movff	?_ADC_ElecGet+1,Trica_Mag@Elec+1
  2972                           
  2973                           ;triac.c: 64: if(Elec_Max[i] < Elec && Elec <= 1000)
  2974  0010EA  90D8               	bcf	status,0,c
  2975  0010EC  0100               	movlb	0	; () banked
  2976  0010EE  35EE               	rlcf	Trica_Mag@i& (0+255),w,b
  2977  0010F0  6ED9               	movwf	fsr2l,c
  2978  0010F2  0100               	movlb	0	; () banked
  2979  0010F4  35EF               	rlcf	(Trica_Mag@i+1)& (0+255),w,b
  2980  0010F6  6EDA               	movwf	fsr2h,c
  2981  0010F8  0E60               	movlw	low _Elec_Max
  2982  0010FA  26D9               	addwf	fsr2l,f,c
  2983  0010FC  0E00               	movlw	high _Elec_Max
  2984  0010FE  22DA               	addwfc	fsr2h,f,c
  2985  001100  0100               	movlb	0	; () banked
  2986  001102  51EC               	movf	Trica_Mag@Elec& (0+255),w,b
  2987  001104  5CDE               	subwf	postinc2,w,c
  2988  001106  0100               	movlb	0	; () banked
  2989  001108  51ED               	movf	(Trica_Mag@Elec+1)& (0+255),w,b
  2990  00110A  58DE               	subwfb	postinc2,w,c
  2991  00110C  B0D8               	btfsc	status,0,c
  2992  00110E  D018               	goto	l2773
  2993                           
  2994                           ; BSR set to: 0
  2995  001110  0EE9               	movlw	233
  2996  001112  0100               	movlb	0	; () banked
  2997  001114  5DEC               	subwf	Trica_Mag@Elec& (0+255),w,b
  2998  001116  0E03               	movlw	3
  2999  001118  0100               	movlb	0	; () banked
  3000  00111A  59ED               	subwfb	(Trica_Mag@Elec+1)& (0+255),w,b
  3001  00111C  B0D8               	btfsc	status,0,c
  3002  00111E  D010               	goto	l2773
  3003                           
  3004                           ; BSR set to: 0
  3005                           ;triac.c: 65: Elec_Max[i] = Elec;
  3006  001120  90D8               	bcf	status,0,c
  3007  001122  0100               	movlb	0	; () banked
  3008  001124  35EE               	rlcf	Trica_Mag@i& (0+255),w,b
  3009  001126  6ED9               	movwf	fsr2l,c
  3010  001128  0100               	movlb	0	; () banked
  3011  00112A  35EF               	rlcf	(Trica_Mag@i+1)& (0+255),w,b
  3012  00112C  6EDA               	movwf	fsr2h,c
  3013  00112E  0E60               	movlw	low _Elec_Max
  3014  001130  26D9               	addwf	fsr2l,f,c
  3015  001132  0E00               	movlw	high _Elec_Max
  3016  001134  22DA               	addwfc	fsr2h,f,c
  3017  001136  C0EC  FFDE         	movff	Trica_Mag@Elec,postinc2
  3018  00113A  C0ED  FFDD         	movff	Trica_Mag@Elec+1,postdec2
  3019  00113E  D000               	goto	l2773
  3020  001140                     l2773:
  3021                           
  3022                           ; BSR set to: 0
  3023                           ;triac.c: 66: if(Elec > Parameter[9].Value*10)
  3024  001140  C148  F022         	movff	_Parameter+72,___wmul@multiplier
  3025  001144  C149  F023         	movff	_Parameter+73,___wmul@multiplier+1
  3026  001148  0E00               	movlw	0
  3027  00114A  6E25               	movwf	___wmul@multiplicand+1,c
  3028  00114C  0E0A               	movlw	10
  3029  00114E  6E24               	movwf	___wmul@multiplicand,c
  3030  001150  ECF5  F014         	call	___wmul	;wreg free
  3031  001154  0100               	movlb	0	; () banked
  3032  001156  51EC               	movf	Trica_Mag@Elec& (0+255),w,b
  3033  001158  5C22               	subwf	?___wmul,w,c
  3034  00115A  0100               	movlb	0	; () banked
  3035  00115C  51ED               	movf	(Trica_Mag@Elec+1)& (0+255),w,b
  3036  00115E  5823               	subwfb	?___wmul+1,w,c
  3037  001160  B0D8               	btfsc	status,0,c
  3038  001162  D002               	goto	l106
  3039                           
  3040                           ; BSR set to: 0
  3041                           ;triac.c: 67: return 0;
  3042  001164  0E00               	movlw	0
  3043                           
  3044                           ; BSR set to: 0
  3045  001166  0012               	return	
  3046  001168                     l106:
  3047  001168  A682               	btfss	3970,3,c	;volatile
  3048  00116A  D7B9               	goto	l2765
  3049                           
  3050                           ;triac.c: 68: }
  3051                           ;triac.c: 69: if(Elec_Max[i] >= Parameter[10].Value*10)
  3052  00116C  C150  F022         	movff	_Parameter+80,___wmul@multiplier
  3053  001170  C151  F023         	movff	_Parameter+81,___wmul@multiplier+1
  3054  001174  0E00               	movlw	0
  3055  001176  6E25               	movwf	___wmul@multiplicand+1,c
  3056  001178  0E0A               	movlw	10
  3057  00117A  6E24               	movwf	___wmul@multiplicand,c
  3058  00117C  ECF5  F014         	call	___wmul	;wreg free
  3059  001180  90D8               	bcf	status,0,c
  3060  001182  0100               	movlb	0	; () banked
  3061  001184  35EE               	rlcf	Trica_Mag@i& (0+255),w,b
  3062  001186  6ED9               	movwf	fsr2l,c
  3063  001188  0100               	movlb	0	; () banked
  3064  00118A  35EF               	rlcf	(Trica_Mag@i+1)& (0+255),w,b
  3065  00118C  6EDA               	movwf	fsr2h,c
  3066  00118E  0E60               	movlw	low _Elec_Max
  3067  001190  26D9               	addwf	fsr2l,f,c
  3068  001192  0E00               	movlw	high _Elec_Max
  3069  001194  22DA               	addwfc	fsr2h,f,c
  3070  001196  5022               	movf	?___wmul,w,c
  3071  001198  5CDE               	subwf	postinc2,w,c
  3072  00119A  5023               	movf	?___wmul+1,w,c
  3073  00119C  58DE               	subwfb	postinc2,w,c
  3074  00119E  A0D8               	btfss	status,0,c
  3075  0011A0  D004               	goto	l2783
  3076                           
  3077                           ; BSR set to: 0
  3078                           ;triac.c: 70: ++Houwa_Cuont;
  3079  0011A2  0100               	movlb	0	; () banked
  3080  0011A4  4BB4               	infsnz	_Houwa_Cuont& (0+255),f,b
  3081  0011A6  2BB5               	incf	(_Houwa_Cuont+1)& (0+255),f,b
  3082  0011A8  D000               	goto	l2783
  3083  0011AA                     l2783:
  3084                           
  3085                           ; BSR set to: 0
  3086                           ;triac.c: 71: if(Houwa_Cuont == Parameter[14].Value)
  3087  0011AA  0100               	movlb	0	; () banked
  3088  0011AC  51B4               	movf	_Houwa_Cuont& (0+255),w,b
  3089  0011AE  0101               	movlb	1	; () banked
  3090  0011B0  1970               	xorwf	(_Parameter+112)& (0+255),w,b
  3091  0011B2  E108               	bnz	l2789
  3092  0011B4  0100               	movlb	0	; () banked
  3093  0011B6  51B5               	movf	(_Houwa_Cuont+1)& (0+255),w,b
  3094  0011B8  0101               	movlb	1	; () banked
  3095  0011BA  1971               	xorwf	(_Parameter+113)& (0+255),w,b
  3096  0011BC  A4D8               	btfss	status,2,c
  3097  0011BE  D002               	goto	l2789
  3098                           
  3099                           ; BSR set to: 1
  3100                           ;triac.c: 72: return 1;
  3101  0011C0  0E01               	movlw	1
  3102                           
  3103                           ; BSR set to: 1
  3104  0011C2  0012               	return	
  3105  0011C4                     l2789:
  3106                           
  3107                           ; BSR set to: 1
  3108                           ;triac.c: 73: for(k = Parameter[15].Value*2;k > 0;k--)
  3109  0011C4  90D8               	bcf	status,0,c
  3110  0011C6  0101               	movlb	1	; () banked
  3111  0011C8  3578               	rlcf	(_Parameter+120)& (0+255),w,b
  3112  0011CA  0100               	movlb	0	; () banked
  3113  0011CC  6FEA               	movwf	Trica_Mag@k& (0+255),b
  3114  0011CE  0101               	movlb	1	; () banked
  3115  0011D0  3579               	rlcf	(_Parameter+121)& (0+255),w,b
  3116  0011D2  0100               	movlb	0	; () banked
  3117  0011D4  6FEB               	movwf	(Trica_Mag@k+1)& (0+255),b
  3118  0011D6  0100               	movlb	0	; () banked
  3119  0011D8  51EA               	movf	Trica_Mag@k& (0+255),w,b
  3120  0011DA  0100               	movlb	0	; () banked
  3121  0011DC  11EB               	iorwf	(Trica_Mag@k+1)& (0+255),w,b
  3122  0011DE  B4D8               	btfsc	status,2,c
  3123  0011E0  D00E               	goto	l2797
  3124  0011E2  D002               	goto	l116
  3125                           
  3126                           ; BSR set to: 0
  3127  0011E4  D00C               	goto	l2797
  3128                           
  3129                           ; BSR set to: 0
  3130                           ;triac.c: 74: {
  3131                           ;triac.c: 75: while(PORTCbits.RC3 == 0);
  3132  0011E6  D000               	goto	l116
  3133  0011E8                     l116:
  3134                           
  3135                           ; BSR set to: 0
  3136  0011E8  B682               	btfsc	3970,3,c	;volatile
  3137  0011EA  D002               	goto	l119
  3138  0011EC  D7FD               	goto	l116
  3139                           
  3140                           ; BSR set to: 0
  3141                           ;triac.c: 76: while(PORTCbits.RC3 == 1);
  3142  0011EE  D000               	goto	l119
  3143  0011F0                     l119:
  3144                           
  3145                           ; BSR set to: 0
  3146  0011F0  B682               	btfsc	3970,3,c	;volatile
  3147  0011F2  D7FE               	goto	l119
  3148                           
  3149                           ; BSR set to: 0
  3150                           
  3151                           ; BSR set to: 0
  3152  0011F4  0100               	movlb	0	; () banked
  3153  0011F6  07EA               	decf	Trica_Mag@k& (0+255),f,b
  3154  0011F8  A0D8               	btfss	status,0,c
  3155  0011FA  07EB               	decf	(Trica_Mag@k+1)& (0+255),f,b
  3156  0011FC  D7EC               	goto	L3
  3157  0011FE                     l2797:
  3158                           
  3159                           ; BSR set to: 0
  3160  0011FE  0100               	movlb	0	; () banked
  3161  001200  4BEE               	infsnz	Trica_Mag@i& (0+255),f,b
  3162  001202  2BEF               	incf	(Trica_Mag@i+1)& (0+255),f,b
  3163  001204  D000               	goto	l2799
  3164  001206                     l2799:
  3165                           
  3166                           ; BSR set to: 0
  3167  001206  EE21  F030         	lfsr	2,_Parameter+48
  3168  00120A  CFDE F0E1          	movff	postinc2,??_Trica_Mag
  3169  00120E  CFDD F0E2          	movff	postdec2,??_Trica_Mag+1
  3170  001212  90D8               	bcf	status,0,c
  3171  001214  0100               	movlb	0	; () banked
  3172  001216  37E1               	rlcf	??_Trica_Mag& (0+255),f,b
  3173  001218  37E2               	rlcf	(??_Trica_Mag+1)& (0+255),f,b
  3174  00121A  0100               	movlb	0	; () banked
  3175  00121C  51E1               	movf	??_Trica_Mag& (0+255),w,b
  3176  00121E  0100               	movlb	0	; () banked
  3177  001220  5DEE               	subwf	Trica_Mag@i& (0+255),w,b
  3178  001222  0100               	movlb	0	; () banked
  3179  001224  51E2               	movf	(??_Trica_Mag+1)& (0+255),w,b
  3180  001226  0100               	movlb	0	; () banked
  3181  001228  59EF               	subwfb	(Trica_Mag@i+1)& (0+255),w,b
  3182  00122A  A0D8               	btfss	status,0,c
  3183  00122C  D737               	goto	l100
  3184                           
  3185                           ; BSR set to: 0
  3186                           ;triac.c: 77: }
  3187                           ;triac.c: 78: }
  3188                           ;triac.c: 79: if(Elec_Max[i-1] < Parameter[8].Value*10)
  3189                           
  3190                           ; BSR set to: 0
  3191  00122E  C140  F022         	movff	_Parameter+64,___wmul@multiplier
  3192  001232  C141  F023         	movff	_Parameter+65,___wmul@multiplier+1
  3193  001236  0E00               	movlw	0
  3194  001238  6E25               	movwf	___wmul@multiplicand+1,c
  3195  00123A  0E0A               	movlw	10
  3196  00123C  6E24               	movwf	___wmul@multiplicand,c
  3197  00123E  ECF5  F014         	call	___wmul	;wreg free
  3198  001242                     L7:
  3199  001242  0EFE               	movlw	254
  3200  001244  0100               	movlb	0	; () banked
  3201  001246  6FE1               	movwf	??_Trica_Mag& (0+255),b
  3202  001248  0EFF               	movlw	255
  3203  00124A  0100               	movlb	0	; () banked
  3204  00124C  6FE2               	movwf	(??_Trica_Mag+1)& (0+255),b
  3205  00124E  C0EE  F0E3         	movff	Trica_Mag@i,??_Trica_Mag+2
  3206  001252  C0EF  F0E4         	movff	Trica_Mag@i+1,??_Trica_Mag+3
  3207  001256  90D8               	bcf	status,0,c
  3208  001258  0100               	movlb	0	; () banked
  3209  00125A  37E3               	rlcf	(??_Trica_Mag+2)& (0+255),f,b
  3210  00125C  37E4               	rlcf	(??_Trica_Mag+3)& (0+255),f,b
  3211  00125E  0100               	movlb	0	; () banked
  3212  001260  51E1               	movf	??_Trica_Mag& (0+255),w,b
  3213  001262  0100               	movlb	0	; () banked
  3214  001264  27E3               	addwf	(??_Trica_Mag+2)& (0+255),f,b
  3215  001266  0100               	movlb	0	; () banked
  3216  001268  51E2               	movf	(??_Trica_Mag+1)& (0+255),w,b
  3217  00126A  0100               	movlb	0	; () banked
  3218  00126C  23E4               	addwfc	(??_Trica_Mag+3)& (0+255),f,b
  3219  00126E  0E60               	movlw	low _Elec_Max
  3220  001270  0100               	movlb	0	; () banked
  3221  001272  25E3               	addwf	(??_Trica_Mag+2)& (0+255),w,b
  3222  001274  6ED9               	movwf	fsr2l,c
  3223  001276  0E00               	movlw	high _Elec_Max
  3224  001278  0100               	movlb	0	; () banked
  3225  00127A  21E4               	addwfc	(??_Trica_Mag+3)& (0+255),w,b
  3226  00127C  6EDA               	movwf	fsr2h,c
  3227  00127E  5022               	movf	?___wmul,w,c
  3228  001280  5CDE               	subwf	postinc2,w,c
  3229  001282  5023               	movf	?___wmul+1,w,c
  3230  001284  58DE               	subwfb	postinc2,w,c
  3231  001286  B0D8               	btfsc	status,0,c
  3232  001288  D2A5               	goto	l2955
  3233                           
  3234                           ; BSR set to: 0
  3235                           ;triac.c: 80: return 0;
  3236  00128A  0E00               	movlw	0
  3237                           
  3238                           ; BSR set to: 0
  3239  00128C  0012               	return	
  3240                           
  3241                           ; BSR set to: 0
  3242                           ;triac.c: 81: }
  3243  00128E  D2A2               	goto	l2955
  3244  001290                     l2807:
  3245                           
  3246                           ;triac.c: 82: else
  3247                           ;triac.c: 83: {
  3248                           ;triac.c: 84: for(i = 0; i < Parameter[6].Value*2; i++)
  3249  001290  0E00               	movlw	0
  3250  001292  0100               	movlb	0	; () banked
  3251  001294  6FEF               	movwf	(Trica_Mag@i+1)& (0+255),b
  3252  001296  0E00               	movlw	0
  3253  001298  6FEE               	movwf	Trica_Mag@i& (0+255),b
  3254  00129A  D0B6               	goto	l2847
  3255                           
  3256                           ; BSR set to: 0
  3257                           ;triac.c: 85: {
  3258                           ;triac.c: 86: while(PORTCbits.RC3 == 0);
  3259  00129C  D000               	goto	l127
  3260  00129E                     l127:
  3261                           
  3262                           ; BSR set to: 0
  3263  00129E  B682               	btfsc	3970,3,c	;volatile
  3264  0012A0  D002               	goto	l130
  3265  0012A2  D7FD               	goto	l127
  3266                           
  3267                           ; BSR set to: 0
  3268                           ;triac.c: 87: while(PORTCbits.RC3 == 1);
  3269  0012A4  D000               	goto	l130
  3270  0012A6                     l130:
  3271                           
  3272                           ; BSR set to: 0
  3273  0012A6  B682               	btfsc	3970,3,c	;volatile
  3274  0012A8  D7FE               	goto	l130
  3275                           
  3276                           ; BSR set to: 0
  3277                           ;triac.c: 88: delay_us(Gears_Timer[Parameter[1].Value]);
  3278                           
  3279                           ; BSR set to: 0
  3280  0012AA  90D8               	bcf	status,0,c
  3281  0012AC  0101               	movlb	1	; () banked
  3282  0012AE  3508               	rlcf	(_Parameter+8)& (0+255),w,b
  3283  0012B0  6ED9               	movwf	fsr2l,c
  3284  0012B2  0101               	movlb	1	; () banked
  3285  0012B4  3509               	rlcf	(_Parameter+9)& (0+255),w,b
  3286  0012B6  6EDA               	movwf	fsr2h,c
  3287  0012B8  0EB7               	movlw	low _Gears_Timer
  3288  0012BA  26D9               	addwf	fsr2l,f,c
  3289  0012BC  0E00               	movlw	high _Gears_Timer
  3290  0012BE  22DA               	addwfc	fsr2h,f,c
  3291  0012C0  CFDE F0E1          	movff	postinc2,??_Trica_Mag
  3292  0012C4  CFDD F0E2          	movff	postdec2,??_Trica_Mag+1
  3293  0012C8  C0E1  F022         	movff	??_Trica_Mag,delay_us@nus
  3294  0012CC  C0E2  F023         	movff	??_Trica_Mag+1,delay_us@nus+1
  3295  0012D0  6A24               	clrf	delay_us@nus+2,c
  3296  0012D2  6A25               	clrf	delay_us@nus+3,c
  3297  0012D4  EC3D  F015         	call	_delay_us	;wreg free
  3298                           
  3299                           ;triac.c: 89: Trica_Control(DEMAG);
  3300  0012D8  0E00               	movlw	0
  3301  0012DA  EC2E  F013         	call	_Trica_Control
  3302                           
  3303                           ;triac.c: 90: while(PORTCbits.RC3 == 0)
  3304  0012DE  D045               	goto	l133
  3305  0012E0                     l2813:
  3306                           
  3307                           ;triac.c: 91: {
  3308                           ;triac.c: 92: Elec = ADC_ElecGet();
  3309  0012E0  ECD7  F010         	call	_ADC_ElecGet	;wreg free
  3310  0012E4  C02F  F0EC         	movff	?_ADC_ElecGet,Trica_Mag@Elec
  3311  0012E8  C030  F0ED         	movff	?_ADC_ElecGet+1,Trica_Mag@Elec+1
  3312                           
  3313                           ;triac.c: 93: if(Elec_Max[i] < Elec && Elec <= 1000)
  3314  0012EC  90D8               	bcf	status,0,c
  3315  0012EE  0100               	movlb	0	; () banked
  3316  0012F0  35EE               	rlcf	Trica_Mag@i& (0+255),w,b
  3317  0012F2  6ED9               	movwf	fsr2l,c
  3318  0012F4  0100               	movlb	0	; () banked
  3319  0012F6  35EF               	rlcf	(Trica_Mag@i+1)& (0+255),w,b
  3320  0012F8  6EDA               	movwf	fsr2h,c
  3321  0012FA  0E60               	movlw	low _Elec_Max
  3322  0012FC  26D9               	addwf	fsr2l,f,c
  3323  0012FE  0E00               	movlw	high _Elec_Max
  3324  001300  22DA               	addwfc	fsr2h,f,c
  3325  001302  0100               	movlb	0	; () banked
  3326  001304  51EC               	movf	Trica_Mag@Elec& (0+255),w,b
  3327  001306  5CDE               	subwf	postinc2,w,c
  3328  001308  0100               	movlb	0	; () banked
  3329  00130A  51ED               	movf	(Trica_Mag@Elec+1)& (0+255),w,b
  3330  00130C  58DE               	subwfb	postinc2,w,c
  3331  00130E  B0D8               	btfsc	status,0,c
  3332  001310  D018               	goto	l2821
  3333                           
  3334                           ; BSR set to: 0
  3335  001312  0EE9               	movlw	233
  3336  001314  0100               	movlb	0	; () banked
  3337  001316  5DEC               	subwf	Trica_Mag@Elec& (0+255),w,b
  3338  001318  0E03               	movlw	3
  3339  00131A  0100               	movlb	0	; () banked
  3340  00131C  59ED               	subwfb	(Trica_Mag@Elec+1)& (0+255),w,b
  3341  00131E  B0D8               	btfsc	status,0,c
  3342  001320  D010               	goto	l2821
  3343                           
  3344                           ; BSR set to: 0
  3345                           ;triac.c: 94: Elec_Max[i] = Elec;
  3346  001322  90D8               	bcf	status,0,c
  3347  001324  0100               	movlb	0	; () banked
  3348  001326  35EE               	rlcf	Trica_Mag@i& (0+255),w,b
  3349  001328  6ED9               	movwf	fsr2l,c
  3350  00132A  0100               	movlb	0	; () banked
  3351  00132C  35EF               	rlcf	(Trica_Mag@i+1)& (0+255),w,b
  3352  00132E  6EDA               	movwf	fsr2h,c
  3353  001330  0E60               	movlw	low _Elec_Max
  3354  001332  26D9               	addwf	fsr2l,f,c
  3355  001334  0E00               	movlw	high _Elec_Max
  3356  001336  22DA               	addwfc	fsr2h,f,c
  3357  001338  C0EC  FFDE         	movff	Trica_Mag@Elec,postinc2
  3358  00133C  C0ED  FFDD         	movff	Trica_Mag@Elec+1,postdec2
  3359  001340  D000               	goto	l2821
  3360  001342                     l2821:
  3361                           
  3362                           ; BSR set to: 0
  3363                           ;triac.c: 95: if(Elec > Parameter[9].Value*10)
  3364  001342  C148  F022         	movff	_Parameter+72,___wmul@multiplier
  3365  001346  C149  F023         	movff	_Parameter+73,___wmul@multiplier+1
  3366  00134A  0E00               	movlw	0
  3367  00134C  6E25               	movwf	___wmul@multiplicand+1,c
  3368  00134E  0E0A               	movlw	10
  3369  001350  6E24               	movwf	___wmul@multiplicand,c
  3370  001352  ECF5  F014         	call	___wmul	;wreg free
  3371  001356  0100               	movlb	0	; () banked
  3372  001358  51EC               	movf	Trica_Mag@Elec& (0+255),w,b
  3373  00135A  5C22               	subwf	?___wmul,w,c
  3374  00135C  0100               	movlb	0	; () banked
  3375  00135E  51ED               	movf	(Trica_Mag@Elec+1)& (0+255),w,b
  3376  001360  5823               	subwfb	?___wmul+1,w,c
  3377  001362  B0D8               	btfsc	status,0,c
  3378  001364  D002               	goto	l133
  3379                           
  3380                           ; BSR set to: 0
  3381                           ;triac.c: 96: return 0;
  3382  001366  0E00               	movlw	0
  3383                           
  3384                           ; BSR set to: 0
  3385  001368  0012               	return	
  3386  00136A                     l133:
  3387  00136A  A682               	btfss	3970,3,c	;volatile
  3388  00136C  D7B9               	goto	l2813
  3389                           
  3390                           ;triac.c: 97: }
  3391                           ;triac.c: 98: if(Elec_Max[i] >= Parameter[10].Value*10)
  3392  00136E  C150  F022         	movff	_Parameter+80,___wmul@multiplier
  3393  001372  C151  F023         	movff	_Parameter+81,___wmul@multiplier+1
  3394  001376  0E00               	movlw	0
  3395  001378  6E25               	movwf	___wmul@multiplicand+1,c
  3396  00137A  0E0A               	movlw	10
  3397  00137C  6E24               	movwf	___wmul@multiplicand,c
  3398  00137E  ECF5  F014         	call	___wmul	;wreg free
  3399  001382  90D8               	bcf	status,0,c
  3400  001384  0100               	movlb	0	; () banked
  3401  001386  35EE               	rlcf	Trica_Mag@i& (0+255),w,b
  3402  001388  6ED9               	movwf	fsr2l,c
  3403  00138A  0100               	movlb	0	; () banked
  3404  00138C  35EF               	rlcf	(Trica_Mag@i+1)& (0+255),w,b
  3405  00138E  6EDA               	movwf	fsr2h,c
  3406  001390  0E60               	movlw	low _Elec_Max
  3407  001392  26D9               	addwf	fsr2l,f,c
  3408  001394  0E00               	movlw	high _Elec_Max
  3409  001396  22DA               	addwfc	fsr2h,f,c
  3410  001398  5022               	movf	?___wmul,w,c
  3411  00139A  5CDE               	subwf	postinc2,w,c
  3412  00139C  5023               	movf	?___wmul+1,w,c
  3413  00139E  58DE               	subwfb	postinc2,w,c
  3414  0013A0  A0D8               	btfss	status,0,c
  3415  0013A2  D004               	goto	l2831
  3416                           
  3417                           ; BSR set to: 0
  3418                           ;triac.c: 99: ++Houwa_Cuont;
  3419  0013A4  0100               	movlb	0	; () banked
  3420  0013A6  4BB4               	infsnz	_Houwa_Cuont& (0+255),f,b
  3421  0013A8  2BB5               	incf	(_Houwa_Cuont+1)& (0+255),f,b
  3422  0013AA  D000               	goto	l2831
  3423  0013AC                     l2831:
  3424                           
  3425                           ; BSR set to: 0
  3426                           ;triac.c: 100: if(Houwa_Cuont == Parameter[14].Value)
  3427  0013AC  0100               	movlb	0	; () banked
  3428  0013AE  51B4               	movf	_Houwa_Cuont& (0+255),w,b
  3429  0013B0  0101               	movlb	1	; () banked
  3430  0013B2  1970               	xorwf	(_Parameter+112)& (0+255),w,b
  3431  0013B4  E108               	bnz	l2837
  3432  0013B6  0100               	movlb	0	; () banked
  3433  0013B8  51B5               	movf	(_Houwa_Cuont+1)& (0+255),w,b
  3434  0013BA  0101               	movlb	1	; () banked
  3435  0013BC  1971               	xorwf	(_Parameter+113)& (0+255),w,b
  3436  0013BE  A4D8               	btfss	status,2,c
  3437  0013C0  D002               	goto	l2837
  3438                           
  3439                           ; BSR set to: 1
  3440                           ;triac.c: 101: return 1;
  3441  0013C2  0E01               	movlw	1
  3442                           
  3443                           ; BSR set to: 1
  3444  0013C4  0012               	return	
  3445  0013C6                     l2837:
  3446                           
  3447                           ; BSR set to: 1
  3448                           ;triac.c: 102: for(k = Parameter[15].Value*2;k > 0;k--)
  3449  0013C6  90D8               	bcf	status,0,c
  3450  0013C8  0101               	movlb	1	; () banked
  3451  0013CA  3578               	rlcf	(_Parameter+120)& (0+255),w,b
  3452  0013CC  0100               	movlb	0	; () banked
  3453  0013CE  6FEA               	movwf	Trica_Mag@k& (0+255),b
  3454  0013D0  0101               	movlb	1	; () banked
  3455  0013D2  3579               	rlcf	(_Parameter+121)& (0+255),w,b
  3456  0013D4  0100               	movlb	0	; () banked
  3457  0013D6  6FEB               	movwf	(Trica_Mag@k+1)& (0+255),b
  3458  0013D8  0100               	movlb	0	; () banked
  3459  0013DA  51EA               	movf	Trica_Mag@k& (0+255),w,b
  3460  0013DC  0100               	movlb	0	; () banked
  3461  0013DE  11EB               	iorwf	(Trica_Mag@k+1)& (0+255),w,b
  3462  0013E0  B4D8               	btfsc	status,2,c
  3463  0013E2  D00E               	goto	l2845
  3464  0013E4  D002               	goto	l142
  3465                           
  3466                           ; BSR set to: 0
  3467  0013E6  D00C               	goto	l2845
  3468                           
  3469                           ; BSR set to: 0
  3470                           ;triac.c: 103: {
  3471                           ;triac.c: 104: while(PORTCbits.RC3 == 0);
  3472  0013E8  D000               	goto	l142
  3473  0013EA                     l142:
  3474                           
  3475                           ; BSR set to: 0
  3476  0013EA  B682               	btfsc	3970,3,c	;volatile
  3477  0013EC  D002               	goto	l145
  3478  0013EE  D7FD               	goto	l142
  3479                           
  3480                           ; BSR set to: 0
  3481                           ;triac.c: 105: while(PORTCbits.RC3 == 1);
  3482  0013F0  D000               	goto	l145
  3483  0013F2                     l145:
  3484                           
  3485                           ; BSR set to: 0
  3486  0013F2  B682               	btfsc	3970,3,c	;volatile
  3487  0013F4  D7FE               	goto	l145
  3488                           
  3489                           ; BSR set to: 0
  3490                           
  3491                           ; BSR set to: 0
  3492  0013F6  0100               	movlb	0	; () banked
  3493  0013F8  07EA               	decf	Trica_Mag@k& (0+255),f,b
  3494  0013FA  A0D8               	btfss	status,0,c
  3495  0013FC  07EB               	decf	(Trica_Mag@k+1)& (0+255),f,b
  3496  0013FE  D7EC               	goto	L4
  3497  001400                     l2845:
  3498                           
  3499                           ; BSR set to: 0
  3500  001400  0100               	movlb	0	; () banked
  3501  001402  4BEE               	infsnz	Trica_Mag@i& (0+255),f,b
  3502  001404  2BEF               	incf	(Trica_Mag@i+1)& (0+255),f,b
  3503  001406  D000               	goto	l2847
  3504  001408                     l2847:
  3505                           
  3506                           ; BSR set to: 0
  3507  001408  EE21  F030         	lfsr	2,_Parameter+48
  3508  00140C  CFDE F0E1          	movff	postinc2,??_Trica_Mag
  3509  001410  CFDD F0E2          	movff	postdec2,??_Trica_Mag+1
  3510  001414  90D8               	bcf	status,0,c
  3511  001416  0100               	movlb	0	; () banked
  3512  001418  37E1               	rlcf	??_Trica_Mag& (0+255),f,b
  3513  00141A  37E2               	rlcf	(??_Trica_Mag+1)& (0+255),f,b
  3514  00141C  0100               	movlb	0	; () banked
  3515  00141E  51E1               	movf	??_Trica_Mag& (0+255),w,b
  3516  001420  0100               	movlb	0	; () banked
  3517  001422  5DEE               	subwf	Trica_Mag@i& (0+255),w,b
  3518  001424  0100               	movlb	0	; () banked
  3519  001426  51E2               	movf	(??_Trica_Mag+1)& (0+255),w,b
  3520  001428  0100               	movlb	0	; () banked
  3521  00142A  59EF               	subwfb	(Trica_Mag@i+1)& (0+255),w,b
  3522  00142C  A0D8               	btfss	status,0,c
  3523  00142E  D737               	goto	l127
  3524                           
  3525                           ; BSR set to: 0
  3526                           ;triac.c: 106: }
  3527                           ;triac.c: 107: }
  3528                           ;triac.c: 108: if(Elec_Max[i-1] < Parameter[8].Value*10)
  3529                           
  3530                           ; BSR set to: 0
  3531  001430  C140  F022         	movff	_Parameter+64,___wmul@multiplier
  3532  001434  C141  F023         	movff	_Parameter+65,___wmul@multiplier+1
  3533  001438  0E00               	movlw	0
  3534  00143A  6E25               	movwf	___wmul@multiplicand+1,c
  3535  00143C  0E0A               	movlw	10
  3536  00143E  6E24               	movwf	___wmul@multiplicand,c
  3537  001440  ECF5  F014         	call	___wmul	;wreg free
  3538  001444  D6FE               	goto	L7
  3539                           
  3540                           ; BSR set to: 0
  3541                           
  3542                           ; BSR set to: 0
  3543                           ;triac.c: 109: return 0;
  3544  001446  0012               	return	
  3545                           
  3546                           ; BSR set to: 0
  3547                           ;triac.c: 110: }
  3548                           ;triac.c: 111: }
  3549                           
  3550                           ; BSR set to: 0
  3551  001448  D1C5               	goto	l2955
  3552  00144A                     l2855:
  3553                           
  3554                           ; BSR set to: 0
  3555                           ;triac.c: 113: else if(EMCC_State == DEMAG)
  3556  00144A  0100               	movlb	0	; () banked
  3557  00144C  51E7               	movf	Trica_Mag@EMCC_State& (0+255),w,b
  3558  00144E  0100               	movlb	0	; () banked
  3559  001450  A4D8               	btfss	status,2,c
  3560  001452  D1C0               	goto	l2955
  3561                           
  3562                           ; BSR set to: 0
  3563                           ;triac.c: 114: {
  3564                           ;triac.c: 115: if(Parameter[7].Value)
  3565  001454  0101               	movlb	1	; () banked
  3566  001456  5138               	movf	(_Parameter+56)& (0+255),w,b
  3567  001458  0101               	movlb	1	; () banked
  3568  00145A  1139               	iorwf	(_Parameter+57)& (0+255),w,b
  3569  00145C  B4D8               	btfsc	status,2,c
  3570  00145E  D0DD               	goto	l2907
  3571                           
  3572                           ; BSR set to: 1
  3573                           ;triac.c: 116: {
  3574                           ;triac.c: 117: for(i = 0; i < Parameter[6].Value*2; i++)
  3575  001460  0E00               	movlw	0
  3576  001462  0100               	movlb	0	; () banked
  3577  001464  6FEF               	movwf	(Trica_Mag@i+1)& (0+255),b
  3578  001466  0E00               	movlw	0
  3579  001468  6FEE               	movwf	Trica_Mag@i& (0+255),b
  3580  00146A  D0B6               	goto	l2899
  3581                           
  3582                           ; BSR set to: 0
  3583                           ;triac.c: 118: {
  3584                           ;triac.c: 119: while(PORTCbits.RC3 == 0);
  3585  00146C  D000               	goto	l155
  3586  00146E                     l155:
  3587                           
  3588                           ; BSR set to: 0
  3589  00146E  B682               	btfsc	3970,3,c	;volatile
  3590  001470  D002               	goto	l158
  3591  001472  D7FD               	goto	l155
  3592                           
  3593                           ; BSR set to: 0
  3594                           ;triac.c: 120: while(PORTCbits.RC3 == 1);
  3595  001474  D000               	goto	l158
  3596  001476                     l158:
  3597                           
  3598                           ; BSR set to: 0
  3599  001476  B682               	btfsc	3970,3,c	;volatile
  3600  001478  D7FE               	goto	l158
  3601                           
  3602                           ; BSR set to: 0
  3603                           ;triac.c: 121: delay_us(Gears_Timer[Parameter[1].Value]);
  3604                           
  3605                           ; BSR set to: 0
  3606  00147A  90D8               	bcf	status,0,c
  3607  00147C  0101               	movlb	1	; () banked
  3608  00147E  3508               	rlcf	(_Parameter+8)& (0+255),w,b
  3609  001480  6ED9               	movwf	fsr2l,c
  3610  001482  0101               	movlb	1	; () banked
  3611  001484  3509               	rlcf	(_Parameter+9)& (0+255),w,b
  3612  001486  6EDA               	movwf	fsr2h,c
  3613  001488  0EB7               	movlw	low _Gears_Timer
  3614  00148A  26D9               	addwf	fsr2l,f,c
  3615  00148C  0E00               	movlw	high _Gears_Timer
  3616  00148E  22DA               	addwfc	fsr2h,f,c
  3617  001490  CFDE F0E1          	movff	postinc2,??_Trica_Mag
  3618  001494  CFDD F0E2          	movff	postdec2,??_Trica_Mag+1
  3619  001498  C0E1  F022         	movff	??_Trica_Mag,delay_us@nus
  3620  00149C  C0E2  F023         	movff	??_Trica_Mag+1,delay_us@nus+1
  3621  0014A0  6A24               	clrf	delay_us@nus+2,c
  3622  0014A2  6A25               	clrf	delay_us@nus+3,c
  3623  0014A4  EC3D  F015         	call	_delay_us	;wreg free
  3624                           
  3625                           ;triac.c: 122: Trica_Control(DEMAG);
  3626  0014A8  0E00               	movlw	0
  3627  0014AA  EC2E  F013         	call	_Trica_Control
  3628                           
  3629                           ;triac.c: 123: while(PORTCbits.RC3 == 0)
  3630  0014AE  D045               	goto	l161
  3631  0014B0                     l2865:
  3632                           
  3633                           ;triac.c: 124: {
  3634                           ;triac.c: 125: Elec = ADC_ElecGet();
  3635  0014B0  ECD7  F010         	call	_ADC_ElecGet	;wreg free
  3636  0014B4  C02F  F0EC         	movff	?_ADC_ElecGet,Trica_Mag@Elec
  3637  0014B8  C030  F0ED         	movff	?_ADC_ElecGet+1,Trica_Mag@Elec+1
  3638                           
  3639                           ;triac.c: 126: if(Elec_Max[i] < Elec && Elec <= 1000)
  3640  0014BC  90D8               	bcf	status,0,c
  3641  0014BE  0100               	movlb	0	; () banked
  3642  0014C0  35EE               	rlcf	Trica_Mag@i& (0+255),w,b
  3643  0014C2  6ED9               	movwf	fsr2l,c
  3644  0014C4  0100               	movlb	0	; () banked
  3645  0014C6  35EF               	rlcf	(Trica_Mag@i+1)& (0+255),w,b
  3646  0014C8  6EDA               	movwf	fsr2h,c
  3647  0014CA  0E60               	movlw	low _Elec_Max
  3648  0014CC  26D9               	addwf	fsr2l,f,c
  3649  0014CE  0E00               	movlw	high _Elec_Max
  3650  0014D0  22DA               	addwfc	fsr2h,f,c
  3651  0014D2  0100               	movlb	0	; () banked
  3652  0014D4  51EC               	movf	Trica_Mag@Elec& (0+255),w,b
  3653  0014D6  5CDE               	subwf	postinc2,w,c
  3654  0014D8  0100               	movlb	0	; () banked
  3655  0014DA  51ED               	movf	(Trica_Mag@Elec+1)& (0+255),w,b
  3656  0014DC  58DE               	subwfb	postinc2,w,c
  3657  0014DE  B0D8               	btfsc	status,0,c
  3658  0014E0  D018               	goto	l2873
  3659                           
  3660                           ; BSR set to: 0
  3661  0014E2  0EE9               	movlw	233
  3662  0014E4  0100               	movlb	0	; () banked
  3663  0014E6  5DEC               	subwf	Trica_Mag@Elec& (0+255),w,b
  3664  0014E8  0E03               	movlw	3
  3665  0014EA  0100               	movlb	0	; () banked
  3666  0014EC  59ED               	subwfb	(Trica_Mag@Elec+1)& (0+255),w,b
  3667  0014EE  B0D8               	btfsc	status,0,c
  3668  0014F0  D010               	goto	l2873
  3669                           
  3670                           ; BSR set to: 0
  3671                           ;triac.c: 127: Elec_Max[i] = Elec;
  3672  0014F2  90D8               	bcf	status,0,c
  3673  0014F4  0100               	movlb	0	; () banked
  3674  0014F6  35EE               	rlcf	Trica_Mag@i& (0+255),w,b
  3675  0014F8  6ED9               	movwf	fsr2l,c
  3676  0014FA  0100               	movlb	0	; () banked
  3677  0014FC  35EF               	rlcf	(Trica_Mag@i+1)& (0+255),w,b
  3678  0014FE  6EDA               	movwf	fsr2h,c
  3679  001500  0E60               	movlw	low _Elec_Max
  3680  001502  26D9               	addwf	fsr2l,f,c
  3681  001504  0E00               	movlw	high _Elec_Max
  3682  001506  22DA               	addwfc	fsr2h,f,c
  3683  001508  C0EC  FFDE         	movff	Trica_Mag@Elec,postinc2
  3684  00150C  C0ED  FFDD         	movff	Trica_Mag@Elec+1,postdec2
  3685  001510  D000               	goto	l2873
  3686  001512                     l2873:
  3687                           
  3688                           ; BSR set to: 0
  3689                           ;triac.c: 128: if(Elec > Parameter[9].Value*10)
  3690  001512  C148  F022         	movff	_Parameter+72,___wmul@multiplier
  3691  001516  C149  F023         	movff	_Parameter+73,___wmul@multiplier+1
  3692  00151A  0E00               	movlw	0
  3693  00151C  6E25               	movwf	___wmul@multiplicand+1,c
  3694  00151E  0E0A               	movlw	10
  3695  001520  6E24               	movwf	___wmul@multiplicand,c
  3696  001522  ECF5  F014         	call	___wmul	;wreg free
  3697  001526  0100               	movlb	0	; () banked
  3698  001528  51EC               	movf	Trica_Mag@Elec& (0+255),w,b
  3699  00152A  5C22               	subwf	?___wmul,w,c
  3700  00152C  0100               	movlb	0	; () banked
  3701  00152E  51ED               	movf	(Trica_Mag@Elec+1)& (0+255),w,b
  3702  001530  5823               	subwfb	?___wmul+1,w,c
  3703  001532  B0D8               	btfsc	status,0,c
  3704  001534  D002               	goto	l161
  3705                           
  3706                           ; BSR set to: 0
  3707                           ;triac.c: 129: return 0;
  3708  001536  0E00               	movlw	0
  3709                           
  3710                           ; BSR set to: 0
  3711  001538  0012               	return	
  3712  00153A                     l161:
  3713  00153A  A682               	btfss	3970,3,c	;volatile
  3714  00153C  D7B9               	goto	l2865
  3715                           
  3716                           ;triac.c: 130: }
  3717                           ;triac.c: 131: if(Elec_Max[i] >= Parameter[10].Value*10)
  3718  00153E  C150  F022         	movff	_Parameter+80,___wmul@multiplier
  3719  001542  C151  F023         	movff	_Parameter+81,___wmul@multiplier+1
  3720  001546  0E00               	movlw	0
  3721  001548  6E25               	movwf	___wmul@multiplicand+1,c
  3722  00154A  0E0A               	movlw	10
  3723  00154C  6E24               	movwf	___wmul@multiplicand,c
  3724  00154E  ECF5  F014         	call	___wmul	;wreg free
  3725  001552  90D8               	bcf	status,0,c
  3726  001554  0100               	movlb	0	; () banked
  3727  001556  35EE               	rlcf	Trica_Mag@i& (0+255),w,b
  3728  001558  6ED9               	movwf	fsr2l,c
  3729  00155A  0100               	movlb	0	; () banked
  3730  00155C  35EF               	rlcf	(Trica_Mag@i+1)& (0+255),w,b
  3731  00155E  6EDA               	movwf	fsr2h,c
  3732  001560  0E60               	movlw	low _Elec_Max
  3733  001562  26D9               	addwf	fsr2l,f,c
  3734  001564  0E00               	movlw	high _Elec_Max
  3735  001566  22DA               	addwfc	fsr2h,f,c
  3736  001568  5022               	movf	?___wmul,w,c
  3737  00156A  5CDE               	subwf	postinc2,w,c
  3738  00156C  5023               	movf	?___wmul+1,w,c
  3739  00156E  58DE               	subwfb	postinc2,w,c
  3740  001570  A0D8               	btfss	status,0,c
  3741  001572  D004               	goto	l2883
  3742                           
  3743                           ; BSR set to: 0
  3744                           ;triac.c: 132: ++Houwa_Cuont;
  3745  001574  0100               	movlb	0	; () banked
  3746  001576  4BB4               	infsnz	_Houwa_Cuont& (0+255),f,b
  3747  001578  2BB5               	incf	(_Houwa_Cuont+1)& (0+255),f,b
  3748  00157A  D000               	goto	l2883
  3749  00157C                     l2883:
  3750                           
  3751                           ; BSR set to: 0
  3752                           ;triac.c: 133: if(Houwa_Cuont == Parameter[14].Value)
  3753  00157C  0100               	movlb	0	; () banked
  3754  00157E  51B4               	movf	_Houwa_Cuont& (0+255),w,b
  3755  001580  0101               	movlb	1	; () banked
  3756  001582  1970               	xorwf	(_Parameter+112)& (0+255),w,b
  3757  001584  E108               	bnz	l2889
  3758  001586  0100               	movlb	0	; () banked
  3759  001588  51B5               	movf	(_Houwa_Cuont+1)& (0+255),w,b
  3760  00158A  0101               	movlb	1	; () banked
  3761  00158C  1971               	xorwf	(_Parameter+113)& (0+255),w,b
  3762  00158E  A4D8               	btfss	status,2,c
  3763  001590  D002               	goto	l2889
  3764                           
  3765                           ; BSR set to: 1
  3766                           ;triac.c: 134: return 1;
  3767  001592  0E01               	movlw	1
  3768                           
  3769                           ; BSR set to: 1
  3770  001594  0012               	return	
  3771  001596                     l2889:
  3772                           
  3773                           ; BSR set to: 1
  3774                           ;triac.c: 135: for(k = Parameter[15].Value*2;k > 0;k--)
  3775  001596  90D8               	bcf	status,0,c
  3776  001598  0101               	movlb	1	; () banked
  3777  00159A  3578               	rlcf	(_Parameter+120)& (0+255),w,b
  3778  00159C  0100               	movlb	0	; () banked
  3779  00159E  6FEA               	movwf	Trica_Mag@k& (0+255),b
  3780  0015A0  0101               	movlb	1	; () banked
  3781  0015A2  3579               	rlcf	(_Parameter+121)& (0+255),w,b
  3782  0015A4  0100               	movlb	0	; () banked
  3783  0015A6  6FEB               	movwf	(Trica_Mag@k+1)& (0+255),b
  3784  0015A8  0100               	movlb	0	; () banked
  3785  0015AA  51EA               	movf	Trica_Mag@k& (0+255),w,b
  3786  0015AC  0100               	movlb	0	; () banked
  3787  0015AE  11EB               	iorwf	(Trica_Mag@k+1)& (0+255),w,b
  3788  0015B0  B4D8               	btfsc	status,2,c
  3789  0015B2  D00E               	goto	l2897
  3790  0015B4  D002               	goto	l170
  3791                           
  3792                           ; BSR set to: 0
  3793  0015B6  D00C               	goto	l2897
  3794                           
  3795                           ; BSR set to: 0
  3796                           ;triac.c: 136: {
  3797                           ;triac.c: 137: while(PORTCbits.RC3 == 0);
  3798  0015B8  D000               	goto	l170
  3799  0015BA                     l170:
  3800                           
  3801                           ; BSR set to: 0
  3802  0015BA  B682               	btfsc	3970,3,c	;volatile
  3803  0015BC  D002               	goto	l173
  3804  0015BE  D7FD               	goto	l170
  3805                           
  3806                           ; BSR set to: 0
  3807                           ;triac.c: 138: while(PORTCbits.RC3 == 1);
  3808  0015C0  D000               	goto	l173
  3809  0015C2                     l173:
  3810                           
  3811                           ; BSR set to: 0
  3812  0015C2  B682               	btfsc	3970,3,c	;volatile
  3813  0015C4  D7FE               	goto	l173
  3814                           
  3815                           ; BSR set to: 0
  3816                           
  3817                           ; BSR set to: 0
  3818  0015C6  0100               	movlb	0	; () banked
  3819  0015C8  07EA               	decf	Trica_Mag@k& (0+255),f,b
  3820  0015CA  A0D8               	btfss	status,0,c
  3821  0015CC  07EB               	decf	(Trica_Mag@k+1)& (0+255),f,b
  3822  0015CE  D7EC               	goto	L5
  3823  0015D0                     l2897:
  3824                           
  3825                           ; BSR set to: 0
  3826  0015D0  0100               	movlb	0	; () banked
  3827  0015D2  4BEE               	infsnz	Trica_Mag@i& (0+255),f,b
  3828  0015D4  2BEF               	incf	(Trica_Mag@i+1)& (0+255),f,b
  3829  0015D6  D000               	goto	l2899
  3830  0015D8                     l2899:
  3831                           
  3832                           ; BSR set to: 0
  3833  0015D8  EE21  F030         	lfsr	2,_Parameter+48
  3834  0015DC  CFDE F0E1          	movff	postinc2,??_Trica_Mag
  3835  0015E0  CFDD F0E2          	movff	postdec2,??_Trica_Mag+1
  3836  0015E4  90D8               	bcf	status,0,c
  3837  0015E6  0100               	movlb	0	; () banked
  3838  0015E8  37E1               	rlcf	??_Trica_Mag& (0+255),f,b
  3839  0015EA  37E2               	rlcf	(??_Trica_Mag+1)& (0+255),f,b
  3840  0015EC  0100               	movlb	0	; () banked
  3841  0015EE  51E1               	movf	??_Trica_Mag& (0+255),w,b
  3842  0015F0  0100               	movlb	0	; () banked
  3843  0015F2  5DEE               	subwf	Trica_Mag@i& (0+255),w,b
  3844  0015F4  0100               	movlb	0	; () banked
  3845  0015F6  51E2               	movf	(??_Trica_Mag+1)& (0+255),w,b
  3846  0015F8  0100               	movlb	0	; () banked
  3847  0015FA  59EF               	subwfb	(Trica_Mag@i+1)& (0+255),w,b
  3848  0015FC  A0D8               	btfss	status,0,c
  3849  0015FE  D737               	goto	l155
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;triac.c: 139: }
  3853                           ;triac.c: 140: }
  3854                           ;triac.c: 141: if(Elec_Max[i-1] < Parameter[8].Value*10)
  3855                           
  3856                           ; BSR set to: 0
  3857  001600  C140  F022         	movff	_Parameter+64,___wmul@multiplier
  3858  001604  C141  F023         	movff	_Parameter+65,___wmul@multiplier+1
  3859  001608  0E00               	movlw	0
  3860  00160A  6E25               	movwf	___wmul@multiplicand+1,c
  3861  00160C  0E0A               	movlw	10
  3862  00160E  6E24               	movwf	___wmul@multiplicand,c
  3863  001610  ECF5  F014         	call	___wmul	;wreg free
  3864  001614  D616               	goto	L7
  3865                           
  3866                           ; BSR set to: 0
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;triac.c: 142: return 0;
  3870  001616  0012               	return	
  3871                           
  3872                           ; BSR set to: 0
  3873                           ;triac.c: 143: }
  3874  001618  D0DD               	goto	l2955
  3875  00161A                     l2907:
  3876                           
  3877                           ;triac.c: 144: else
  3878                           ;triac.c: 145: {
  3879                           ;triac.c: 146: for(i = 0; i < Parameter[6].Value*2; i++)
  3880  00161A  0E00               	movlw	0
  3881  00161C  0100               	movlb	0	; () banked
  3882  00161E  6FEF               	movwf	(Trica_Mag@i+1)& (0+255),b
  3883  001620  0E00               	movlw	0
  3884  001622  6FEE               	movwf	Trica_Mag@i& (0+255),b
  3885  001624  D0B6               	goto	l2947
  3886                           
  3887                           ; BSR set to: 0
  3888                           ;triac.c: 147: {
  3889                           ;triac.c: 148: while(PORTCbits.RC3 == 0);
  3890  001626  D000               	goto	l181
  3891  001628                     l181:
  3892                           
  3893                           ; BSR set to: 0
  3894  001628  B682               	btfsc	3970,3,c	;volatile
  3895  00162A  D002               	goto	l184
  3896  00162C  D7FD               	goto	l181
  3897                           
  3898                           ; BSR set to: 0
  3899                           ;triac.c: 149: while(PORTCbits.RC3 == 1);
  3900  00162E  D000               	goto	l184
  3901  001630                     l184:
  3902                           
  3903                           ; BSR set to: 0
  3904  001630  B682               	btfsc	3970,3,c	;volatile
  3905  001632  D7FE               	goto	l184
  3906                           
  3907                           ; BSR set to: 0
  3908                           ;triac.c: 150: delay_us(Gears_Timer[Parameter[1].Value]);
  3909                           
  3910                           ; BSR set to: 0
  3911  001634  90D8               	bcf	status,0,c
  3912  001636  0101               	movlb	1	; () banked
  3913  001638  3508               	rlcf	(_Parameter+8)& (0+255),w,b
  3914  00163A  6ED9               	movwf	fsr2l,c
  3915  00163C  0101               	movlb	1	; () banked
  3916  00163E  3509               	rlcf	(_Parameter+9)& (0+255),w,b
  3917  001640  6EDA               	movwf	fsr2h,c
  3918  001642  0EB7               	movlw	low _Gears_Timer
  3919  001644  26D9               	addwf	fsr2l,f,c
  3920  001646  0E00               	movlw	high _Gears_Timer
  3921  001648  22DA               	addwfc	fsr2h,f,c
  3922  00164A  CFDE F0E1          	movff	postinc2,??_Trica_Mag
  3923  00164E  CFDD F0E2          	movff	postdec2,??_Trica_Mag+1
  3924  001652  C0E1  F022         	movff	??_Trica_Mag,delay_us@nus
  3925  001656  C0E2  F023         	movff	??_Trica_Mag+1,delay_us@nus+1
  3926  00165A  6A24               	clrf	delay_us@nus+2,c
  3927  00165C  6A25               	clrf	delay_us@nus+3,c
  3928  00165E  EC3D  F015         	call	_delay_us	;wreg free
  3929                           
  3930                           ;triac.c: 151: Trica_Control(MAGNET);
  3931  001662  0E01               	movlw	1
  3932  001664  EC2E  F013         	call	_Trica_Control
  3933                           
  3934                           ;triac.c: 152: while(PORTCbits.RC3 == 0)
  3935  001668  D045               	goto	l187
  3936  00166A                     l2913:
  3937                           
  3938                           ;triac.c: 153: {
  3939                           ;triac.c: 154: Elec = ADC_ElecGet();
  3940  00166A  ECD7  F010         	call	_ADC_ElecGet	;wreg free
  3941  00166E  C02F  F0EC         	movff	?_ADC_ElecGet,Trica_Mag@Elec
  3942  001672  C030  F0ED         	movff	?_ADC_ElecGet+1,Trica_Mag@Elec+1
  3943                           
  3944                           ;triac.c: 155: if(Elec_Max[i] < Elec && Elec <= 1000)
  3945  001676  90D8               	bcf	status,0,c
  3946  001678  0100               	movlb	0	; () banked
  3947  00167A  35EE               	rlcf	Trica_Mag@i& (0+255),w,b
  3948  00167C  6ED9               	movwf	fsr2l,c
  3949  00167E  0100               	movlb	0	; () banked
  3950  001680  35EF               	rlcf	(Trica_Mag@i+1)& (0+255),w,b
  3951  001682  6EDA               	movwf	fsr2h,c
  3952  001684  0E60               	movlw	low _Elec_Max
  3953  001686  26D9               	addwf	fsr2l,f,c
  3954  001688  0E00               	movlw	high _Elec_Max
  3955  00168A  22DA               	addwfc	fsr2h,f,c
  3956  00168C  0100               	movlb	0	; () banked
  3957  00168E  51EC               	movf	Trica_Mag@Elec& (0+255),w,b
  3958  001690  5CDE               	subwf	postinc2,w,c
  3959  001692  0100               	movlb	0	; () banked
  3960  001694  51ED               	movf	(Trica_Mag@Elec+1)& (0+255),w,b
  3961  001696  58DE               	subwfb	postinc2,w,c
  3962  001698  B0D8               	btfsc	status,0,c
  3963  00169A  D018               	goto	l2921
  3964                           
  3965                           ; BSR set to: 0
  3966  00169C  0EE9               	movlw	233
  3967  00169E  0100               	movlb	0	; () banked
  3968  0016A0  5DEC               	subwf	Trica_Mag@Elec& (0+255),w,b
  3969  0016A2  0E03               	movlw	3
  3970  0016A4  0100               	movlb	0	; () banked
  3971  0016A6  59ED               	subwfb	(Trica_Mag@Elec+1)& (0+255),w,b
  3972  0016A8  B0D8               	btfsc	status,0,c
  3973  0016AA  D010               	goto	l2921
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;triac.c: 156: Elec_Max[i] = Elec;
  3977  0016AC  90D8               	bcf	status,0,c
  3978  0016AE  0100               	movlb	0	; () banked
  3979  0016B0  35EE               	rlcf	Trica_Mag@i& (0+255),w,b
  3980  0016B2  6ED9               	movwf	fsr2l,c
  3981  0016B4  0100               	movlb	0	; () banked
  3982  0016B6  35EF               	rlcf	(Trica_Mag@i+1)& (0+255),w,b
  3983  0016B8  6EDA               	movwf	fsr2h,c
  3984  0016BA  0E60               	movlw	low _Elec_Max
  3985  0016BC  26D9               	addwf	fsr2l,f,c
  3986  0016BE  0E00               	movlw	high _Elec_Max
  3987  0016C0  22DA               	addwfc	fsr2h,f,c
  3988  0016C2  C0EC  FFDE         	movff	Trica_Mag@Elec,postinc2
  3989  0016C6  C0ED  FFDD         	movff	Trica_Mag@Elec+1,postdec2
  3990  0016CA  D000               	goto	l2921
  3991  0016CC                     l2921:
  3992                           
  3993                           ; BSR set to: 0
  3994                           ;triac.c: 157: if(Elec > Parameter[9].Value*10)
  3995  0016CC  C148  F022         	movff	_Parameter+72,___wmul@multiplier
  3996  0016D0  C149  F023         	movff	_Parameter+73,___wmul@multiplier+1
  3997  0016D4  0E00               	movlw	0
  3998  0016D6  6E25               	movwf	___wmul@multiplicand+1,c
  3999  0016D8  0E0A               	movlw	10
  4000  0016DA  6E24               	movwf	___wmul@multiplicand,c
  4001  0016DC  ECF5  F014         	call	___wmul	;wreg free
  4002  0016E0  0100               	movlb	0	; () banked
  4003  0016E2  51EC               	movf	Trica_Mag@Elec& (0+255),w,b
  4004  0016E4  5C22               	subwf	?___wmul,w,c
  4005  0016E6  0100               	movlb	0	; () banked
  4006  0016E8  51ED               	movf	(Trica_Mag@Elec+1)& (0+255),w,b
  4007  0016EA  5823               	subwfb	?___wmul+1,w,c
  4008  0016EC  B0D8               	btfsc	status,0,c
  4009  0016EE  D002               	goto	l187
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;triac.c: 158: return 0;
  4013  0016F0  0E00               	movlw	0
  4014                           
  4015                           ; BSR set to: 0
  4016  0016F2  0012               	return	
  4017  0016F4                     l187:
  4018  0016F4  A682               	btfss	3970,3,c	;volatile
  4019  0016F6  D7B9               	goto	l2913
  4020                           
  4021                           ;triac.c: 159: }
  4022                           ;triac.c: 160: if(Elec_Max[i] >= Parameter[10].Value*10)
  4023  0016F8  C150  F022         	movff	_Parameter+80,___wmul@multiplier
  4024  0016FC  C151  F023         	movff	_Parameter+81,___wmul@multiplier+1
  4025  001700  0E00               	movlw	0
  4026  001702  6E25               	movwf	___wmul@multiplicand+1,c
  4027  001704  0E0A               	movlw	10
  4028  001706  6E24               	movwf	___wmul@multiplicand,c
  4029  001708  ECF5  F014         	call	___wmul	;wreg free
  4030  00170C  90D8               	bcf	status,0,c
  4031  00170E  0100               	movlb	0	; () banked
  4032  001710  35EE               	rlcf	Trica_Mag@i& (0+255),w,b
  4033  001712  6ED9               	movwf	fsr2l,c
  4034  001714  0100               	movlb	0	; () banked
  4035  001716  35EF               	rlcf	(Trica_Mag@i+1)& (0+255),w,b
  4036  001718  6EDA               	movwf	fsr2h,c
  4037  00171A  0E60               	movlw	low _Elec_Max
  4038  00171C  26D9               	addwf	fsr2l,f,c
  4039  00171E  0E00               	movlw	high _Elec_Max
  4040  001720  22DA               	addwfc	fsr2h,f,c
  4041  001722  5022               	movf	?___wmul,w,c
  4042  001724  5CDE               	subwf	postinc2,w,c
  4043  001726  5023               	movf	?___wmul+1,w,c
  4044  001728  58DE               	subwfb	postinc2,w,c
  4045  00172A  A0D8               	btfss	status,0,c
  4046  00172C  D004               	goto	l2931
  4047                           
  4048                           ; BSR set to: 0
  4049                           ;triac.c: 161: ++Houwa_Cuont;
  4050  00172E  0100               	movlb	0	; () banked
  4051  001730  4BB4               	infsnz	_Houwa_Cuont& (0+255),f,b
  4052  001732  2BB5               	incf	(_Houwa_Cuont+1)& (0+255),f,b
  4053  001734  D000               	goto	l2931
  4054  001736                     l2931:
  4055                           
  4056                           ; BSR set to: 0
  4057                           ;triac.c: 162: if(Houwa_Cuont == Parameter[14].Value)
  4058  001736  0100               	movlb	0	; () banked
  4059  001738  51B4               	movf	_Houwa_Cuont& (0+255),w,b
  4060  00173A  0101               	movlb	1	; () banked
  4061  00173C  1970               	xorwf	(_Parameter+112)& (0+255),w,b
  4062  00173E  E108               	bnz	l2937
  4063  001740  0100               	movlb	0	; () banked
  4064  001742  51B5               	movf	(_Houwa_Cuont+1)& (0+255),w,b
  4065  001744  0101               	movlb	1	; () banked
  4066  001746  1971               	xorwf	(_Parameter+113)& (0+255),w,b
  4067  001748  A4D8               	btfss	status,2,c
  4068  00174A  D002               	goto	l2937
  4069                           
  4070                           ; BSR set to: 1
  4071                           ;triac.c: 163: return 1;
  4072  00174C  0E01               	movlw	1
  4073                           
  4074                           ; BSR set to: 1
  4075  00174E  0012               	return	
  4076  001750                     l2937:
  4077                           
  4078                           ; BSR set to: 1
  4079                           ;triac.c: 164: for(k = Parameter[15].Value*2;k > 0;k--)
  4080  001750  90D8               	bcf	status,0,c
  4081  001752  0101               	movlb	1	; () banked
  4082  001754  3578               	rlcf	(_Parameter+120)& (0+255),w,b
  4083  001756  0100               	movlb	0	; () banked
  4084  001758  6FEA               	movwf	Trica_Mag@k& (0+255),b
  4085  00175A  0101               	movlb	1	; () banked
  4086  00175C  3579               	rlcf	(_Parameter+121)& (0+255),w,b
  4087  00175E  0100               	movlb	0	; () banked
  4088  001760  6FEB               	movwf	(Trica_Mag@k+1)& (0+255),b
  4089  001762  0100               	movlb	0	; () banked
  4090  001764  51EA               	movf	Trica_Mag@k& (0+255),w,b
  4091  001766  0100               	movlb	0	; () banked
  4092  001768  11EB               	iorwf	(Trica_Mag@k+1)& (0+255),w,b
  4093  00176A  B4D8               	btfsc	status,2,c
  4094  00176C  D00E               	goto	l2945
  4095  00176E  D002               	goto	l196
  4096                           
  4097                           ; BSR set to: 0
  4098  001770  D00C               	goto	l2945
  4099                           
  4100                           ; BSR set to: 0
  4101                           ;triac.c: 165: {
  4102                           ;triac.c: 166: while(PORTCbits.RC3 == 0);
  4103  001772  D000               	goto	l196
  4104  001774                     l196:
  4105                           
  4106                           ; BSR set to: 0
  4107  001774  B682               	btfsc	3970,3,c	;volatile
  4108  001776  D002               	goto	l199
  4109  001778  D7FD               	goto	l196
  4110                           
  4111                           ; BSR set to: 0
  4112                           ;triac.c: 167: while(PORTCbits.RC3 == 1);
  4113  00177A  D000               	goto	l199
  4114  00177C                     l199:
  4115                           
  4116                           ; BSR set to: 0
  4117  00177C  B682               	btfsc	3970,3,c	;volatile
  4118  00177E  D7FE               	goto	l199
  4119                           
  4120                           ; BSR set to: 0
  4121                           
  4122                           ; BSR set to: 0
  4123  001780  0100               	movlb	0	; () banked
  4124  001782  07EA               	decf	Trica_Mag@k& (0+255),f,b
  4125  001784  A0D8               	btfss	status,0,c
  4126  001786  07EB               	decf	(Trica_Mag@k+1)& (0+255),f,b
  4127  001788  D7EC               	goto	L6
  4128  00178A                     l2945:
  4129                           
  4130                           ; BSR set to: 0
  4131  00178A  0100               	movlb	0	; () banked
  4132  00178C  4BEE               	infsnz	Trica_Mag@i& (0+255),f,b
  4133  00178E  2BEF               	incf	(Trica_Mag@i+1)& (0+255),f,b
  4134  001790  D000               	goto	l2947
  4135  001792                     l2947:
  4136                           
  4137                           ; BSR set to: 0
  4138  001792  EE21  F030         	lfsr	2,_Parameter+48
  4139  001796  CFDE F0E1          	movff	postinc2,??_Trica_Mag
  4140  00179A  CFDD F0E2          	movff	postdec2,??_Trica_Mag+1
  4141  00179E  90D8               	bcf	status,0,c
  4142  0017A0  0100               	movlb	0	; () banked
  4143  0017A2  37E1               	rlcf	??_Trica_Mag& (0+255),f,b
  4144  0017A4  37E2               	rlcf	(??_Trica_Mag+1)& (0+255),f,b
  4145  0017A6  0100               	movlb	0	; () banked
  4146  0017A8  51E1               	movf	??_Trica_Mag& (0+255),w,b
  4147  0017AA  0100               	movlb	0	; () banked
  4148  0017AC  5DEE               	subwf	Trica_Mag@i& (0+255),w,b
  4149  0017AE  0100               	movlb	0	; () banked
  4150  0017B0  51E2               	movf	(??_Trica_Mag+1)& (0+255),w,b
  4151  0017B2  0100               	movlb	0	; () banked
  4152  0017B4  59EF               	subwfb	(Trica_Mag@i+1)& (0+255),w,b
  4153  0017B6  A0D8               	btfss	status,0,c
  4154  0017B8  D737               	goto	l181
  4155                           
  4156                           ; BSR set to: 0
  4157                           ;triac.c: 168: }
  4158                           ;triac.c: 169: }
  4159                           ;triac.c: 170: if(Elec_Max[i-1] < Parameter[8].Value*10)
  4160                           
  4161                           ; BSR set to: 0
  4162  0017BA  C140  F022         	movff	_Parameter+64,___wmul@multiplier
  4163  0017BE  C141  F023         	movff	_Parameter+65,___wmul@multiplier+1
  4164  0017C2  0E00               	movlw	0
  4165  0017C4  6E25               	movwf	___wmul@multiplicand+1,c
  4166  0017C6  0E0A               	movlw	10
  4167  0017C8  6E24               	movwf	___wmul@multiplicand,c
  4168  0017CA  ECF5  F014         	call	___wmul	;wreg free
  4169  0017CE  D539               	goto	L7
  4170                           
  4171                           ; BSR set to: 0
  4172                           
  4173                           ; BSR set to: 0
  4174                           ;triac.c: 171: return 0;
  4175  0017D0  0012               	return	
  4176                           
  4177                           ; BSR set to: 0
  4178                           
  4179                           ; BSR set to: 0
  4180                           
  4181                           ; BSR set to: 0
  4182  0017D2  D000               	goto	l2955
  4183  0017D4                     l2955:
  4184                           
  4185                           ; BSR set to: 0
  4186                           ;triac.c: 172: }
  4187                           ;triac.c: 173: }
  4188                           ;triac.c: 174: return 0;
  4189  0017D4  0E00               	movlw	0
  4190  0017D6  0012               	return	
  4191                           
  4192                           ; BSR set to: 0
  4193  0017D8  0012               	return		;funcret
  4194  0017DA                     __end_of_Trica_Mag:
  4195                           	opt stack 0
  4196                           tblptru	equ	0xFF8
  4197                           tblptrh	equ	0xFF7
  4198                           tblptrl	equ	0xFF6
  4199                           tablat	equ	0xFF5
  4200                           prodh	equ	0xFF4
  4201                           prodl	equ	0xFF3
  4202                           intcon	equ	0xFF2
  4203                           postinc0	equ	0xFEE
  4204                           wreg	equ	0xFE8
  4205                           postinc1	equ	0xFE6
  4206                           postdec1	equ	0xFE5
  4207                           fsr1h	equ	0xFE2
  4208                           fsr1l	equ	0xFE1
  4209                           indf2	equ	0xFDF
  4210                           postinc2	equ	0xFDE
  4211                           postdec2	equ	0xFDD
  4212                           fsr2h	equ	0xFDA
  4213                           fsr2l	equ	0xFD9
  4214                           status	equ	0xFD8
  4215                           
  4216 ;; *************** function ___wmul *****************
  4217 ;; Defined at:
  4218 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v1.34\sources\common\Umul16.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;  multiplier      2   33[COMRAM] unsigned int 
  4221 ;;  multiplicand    2   35[COMRAM] unsigned int 
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;  product         2   37[COMRAM] unsigned int 
  4224 ;; Return value:  Size  Location     Type
  4225 ;;                  2   33[COMRAM] unsigned int 
  4226 ;; Registers used:
  4227 ;;		wreg, status,2, status,0, prodl, prodh
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4233 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4234 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4236 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4237 ;;Total ram usage:        6 bytes
  4238 ;; Hardware stack levels used:    1
  4239 ;; Hardware stack levels required when called:    3
  4240 ;; This function calls:
  4241 ;;		Nothing
  4242 ;; This function is called by:
  4243 ;;		_Trica_Mag
  4244 ;;		_Magne_Demag_Dispose
  4245 ;; This function uses a non-reentrant model
  4246 ;;
  4247                           
  4248                           	psect	text12
  4249  0029EA                     __ptext12:
  4250                           	opt stack 0
  4251  0029EA                     ___wmul:
  4252                           	opt stack 25
  4253                           
  4254                           ;incstack = 0
  4255  0029EA  5022               	movf	___wmul@multiplier,w,c
  4256  0029EC  0224               	mulwf	___wmul@multiplicand,c
  4257  0029EE  CFF3 F026          	movff	prodl,___wmul@product
  4258  0029F2  CFF4 F027          	movff	prodh,___wmul@product+1
  4259  0029F6  5022               	movf	___wmul@multiplier,w,c
  4260  0029F8  0225               	mulwf	___wmul@multiplicand+1,c
  4261  0029FA  50F3               	movf	prodl,w,c
  4262  0029FC  2627               	addwf	___wmul@product+1,f,c
  4263  0029FE  5023               	movf	___wmul@multiplier+1,w,c
  4264  002A00  0224               	mulwf	___wmul@multiplicand,c
  4265  002A02  50F3               	movf	prodl,w,c
  4266  002A04  2627               	addwf	___wmul@product+1,f,c
  4267  002A06  C026  F022         	movff	___wmul@product,?___wmul
  4268  002A0A  C027  F023         	movff	___wmul@product+1,?___wmul+1
  4269  002A0E  0012               	return	
  4270  002A10  0012               	return		;funcret
  4271  002A12                     __end_of___wmul:
  4272                           	opt stack 0
  4273                           tblptru	equ	0xFF8
  4274                           tblptrh	equ	0xFF7
  4275                           tblptrl	equ	0xFF6
  4276                           tablat	equ	0xFF5
  4277                           prodh	equ	0xFF4
  4278                           prodl	equ	0xFF3
  4279                           intcon	equ	0xFF2
  4280                           postinc0	equ	0xFEE
  4281                           wreg	equ	0xFE8
  4282                           postinc1	equ	0xFE6
  4283                           postdec1	equ	0xFE5
  4284                           fsr1h	equ	0xFE2
  4285                           fsr1l	equ	0xFE1
  4286                           indf2	equ	0xFDF
  4287                           postinc2	equ	0xFDE
  4288                           postdec2	equ	0xFDD
  4289                           fsr2h	equ	0xFDA
  4290                           fsr2l	equ	0xFD9
  4291                           status	equ	0xFD8
  4292                           
  4293 ;; *************** function _Trica_Control *****************
  4294 ;; Defined at:
  4295 ;;		line 188 in file "nbproject/private/triac.c"
  4296 ;; Parameters:    Size  Location     Type
  4297 ;;  EMCC_State      1    wreg     enum E8799
  4298 ;; Auto vars:     Size  Location     Type
  4299 ;;  EMCC_State      1   37[COMRAM] enum E8799
  4300 ;;  i               1   38[COMRAM] unsigned char 
  4301 ;; Return value:  Size  Location     Type
  4302 ;;		None               void
  4303 ;; Registers used:
  4304 ;;		wreg, status,2, status,0, cstack
  4305 ;; Tracked objects:
  4306 ;;		On entry : 0/0
  4307 ;;		On exit  : 0/0
  4308 ;;		Unchanged: 0/0
  4309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4311 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4313 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4314 ;;Total ram usage:        2 bytes
  4315 ;; Hardware stack levels used:    1
  4316 ;; Hardware stack levels required when called:    4
  4317 ;; This function calls:
  4318 ;;		_delay_us
  4319 ;; This function is called by:
  4320 ;;		_Trica_Mag
  4321 ;; This function uses a non-reentrant model
  4322 ;;
  4323                           
  4324                           	psect	text13
  4325  00265C                     __ptext13:
  4326                           	opt stack 0
  4327  00265C                     _Trica_Control:
  4328                           	opt stack 23
  4329                           
  4330                           ;incstack = 0
  4331                           ;Trica_Control@EMCC_State stored from wreg
  4332  00265C  6E26               	movwf	Trica_Control@EMCC_State,c
  4333                           
  4334                           ;triac.c: 190: uint8_t i;
  4335                           ;triac.c: 191: if(EMCC_State == DEMAG)
  4336  00265E  5026               	movf	Trica_Control@EMCC_State,w,c
  4337  002660  A4D8               	btfss	status,2,c
  4338  002662  D020               	goto	l2711
  4339                           
  4340                           ;triac.c: 192: {
  4341                           ;triac.c: 193: for(i = 1; i <= 6; i++)
  4342  002664  0E01               	movlw	1
  4343  002666  6E27               	movwf	Trica_Control@i,c
  4344  002668  D018               	goto	l2709
  4345  00266A  D01A               	goto	l208
  4346  00266C                     l207:
  4347                           
  4348                           ;triac.c: 194: {
  4349                           ;triac.c: 195: PORTDbits.RD7 = 1;
  4350  00266C  8E83               	bsf	3971,7,c	;volatile
  4351                           
  4352                           ;triac.c: 196: delay_us(100);
  4353  00266E  0E64               	movlw	100
  4354  002670  6E22               	movwf	delay_us@nus,c
  4355  002672  0E00               	movlw	0
  4356  002674  6E23               	movwf	delay_us@nus+1,c
  4357  002676  0E00               	movlw	0
  4358  002678  6E24               	movwf	delay_us@nus+2,c
  4359  00267A  0E00               	movlw	0
  4360  00267C  6E25               	movwf	delay_us@nus+3,c
  4361  00267E  EC3D  F015         	call	_delay_us	;wreg free
  4362                           
  4363                           ;triac.c: 197: PORTDbits.RD7 = 0;
  4364  002682  9E83               	bcf	3971,7,c	;volatile
  4365                           
  4366                           ;triac.c: 198: delay_us(200);
  4367  002684  0EC8               	movlw	200
  4368  002686  6E22               	movwf	delay_us@nus,c
  4369  002688  0E00               	movlw	0
  4370  00268A  6E23               	movwf	delay_us@nus+1,c
  4371  00268C  0E00               	movlw	0
  4372  00268E  6E24               	movwf	delay_us@nus+2,c
  4373  002690  0E00               	movlw	0
  4374  002692  6E25               	movwf	delay_us@nus+3,c
  4375  002694  EC3D  F015         	call	_delay_us	;wreg free
  4376  002698  2A27               	incf	Trica_Control@i,f,c
  4377  00269A                     l2709:
  4378  00269A  0E06               	movlw	6
  4379  00269C  6427               	cpfsgt	Trica_Control@i,c
  4380  00269E  D7E6               	goto	l207
  4381  0026A0                     l208:
  4382                           
  4383                           ;triac.c: 199: }
  4384                           ;triac.c: 200: PORTDbits.RD7 = 0;
  4385  0026A0  9E83               	bcf	3971,7,c	;volatile
  4386                           
  4387                           ;triac.c: 201: }
  4388  0026A2  0012               	return	
  4389  0026A4                     l2711:
  4390                           
  4391                           ;triac.c: 202: else if(EMCC_State == MAGNET)
  4392  0026A4  0426               	decf	Trica_Control@EMCC_State,w,c
  4393  0026A6  A4D8               	btfss	status,2,c
  4394  0026A8  0012               	return	
  4395                           
  4396                           ;triac.c: 203: {
  4397                           ;triac.c: 204: for(i = 1; i <= 6; i++)
  4398  0026AA  0E01               	movlw	1
  4399  0026AC  6E27               	movwf	Trica_Control@i,c
  4400  0026AE  D018               	goto	l2725
  4401  0026B0  D01A               	goto	l212
  4402  0026B2                     l211:
  4403                           
  4404                           ;triac.c: 205: {
  4405                           ;triac.c: 206: PORTDbits.RD6 = 1;
  4406  0026B2  8C83               	bsf	3971,6,c	;volatile
  4407                           
  4408                           ;triac.c: 207: delay_us(100);
  4409  0026B4  0E64               	movlw	100
  4410  0026B6  6E22               	movwf	delay_us@nus,c
  4411  0026B8  0E00               	movlw	0
  4412  0026BA  6E23               	movwf	delay_us@nus+1,c
  4413  0026BC  0E00               	movlw	0
  4414  0026BE  6E24               	movwf	delay_us@nus+2,c
  4415  0026C0  0E00               	movlw	0
  4416  0026C2  6E25               	movwf	delay_us@nus+3,c
  4417  0026C4  EC3D  F015         	call	_delay_us	;wreg free
  4418                           
  4419                           ;triac.c: 208: PORTDbits.RD6 = 0;
  4420  0026C8  9C83               	bcf	3971,6,c	;volatile
  4421                           
  4422                           ;triac.c: 209: delay_us(200);
  4423  0026CA  0EC8               	movlw	200
  4424  0026CC  6E22               	movwf	delay_us@nus,c
  4425  0026CE  0E00               	movlw	0
  4426  0026D0  6E23               	movwf	delay_us@nus+1,c
  4427  0026D2  0E00               	movlw	0
  4428  0026D4  6E24               	movwf	delay_us@nus+2,c
  4429  0026D6  0E00               	movlw	0
  4430  0026D8  6E25               	movwf	delay_us@nus+3,c
  4431  0026DA  EC3D  F015         	call	_delay_us	;wreg free
  4432  0026DE  2A27               	incf	Trica_Control@i,f,c
  4433  0026E0                     l2725:
  4434  0026E0  0E06               	movlw	6
  4435  0026E2  6427               	cpfsgt	Trica_Control@i,c
  4436  0026E4  D7E6               	goto	l211
  4437  0026E6                     l212:
  4438                           
  4439                           ;triac.c: 210: }
  4440                           ;triac.c: 211: PORTDbits.RD6 = 0;
  4441  0026E6  9C83               	bcf	3971,6,c	;volatile
  4442  0026E8  0012               	return	
  4443  0026EA  0012               	return		;funcret
  4444  0026EC                     __end_of_Trica_Control:
  4445                           	opt stack 0
  4446                           tblptru	equ	0xFF8
  4447                           tblptrh	equ	0xFF7
  4448                           tblptrl	equ	0xFF6
  4449                           tablat	equ	0xFF5
  4450                           prodh	equ	0xFF4
  4451                           prodl	equ	0xFF3
  4452                           intcon	equ	0xFF2
  4453                           postinc0	equ	0xFEE
  4454                           wreg	equ	0xFE8
  4455                           postinc1	equ	0xFE6
  4456                           postdec1	equ	0xFE5
  4457                           fsr1h	equ	0xFE2
  4458                           fsr1l	equ	0xFE1
  4459                           indf2	equ	0xFDF
  4460                           postinc2	equ	0xFDE
  4461                           postdec2	equ	0xFDD
  4462                           fsr2h	equ	0xFDA
  4463                           fsr2l	equ	0xFD9
  4464                           status	equ	0xFD8
  4465                           
  4466 ;; *************** function _delay_us *****************
  4467 ;; Defined at:
  4468 ;;		line 32 in file "nbproject/private/delay.c"
  4469 ;; Parameters:    Size  Location     Type
  4470 ;;  nus             4   33[COMRAM] unsigned long 
  4471 ;; Auto vars:     Size  Location     Type
  4472 ;;		None
  4473 ;; Return value:  Size  Location     Type
  4474 ;;		None               void
  4475 ;; Registers used:
  4476 ;;		wreg, status,2, status,0
  4477 ;; Tracked objects:
  4478 ;;		On entry : 0/0
  4479 ;;		On exit  : 0/0
  4480 ;;		Unchanged: 0/0
  4481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4482 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4485 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4486 ;;Total ram usage:        4 bytes
  4487 ;; Hardware stack levels used:    1
  4488 ;; Hardware stack levels required when called:    3
  4489 ;; This function calls:
  4490 ;;		Nothing
  4491 ;; This function is called by:
  4492 ;;		_Trica_Mag
  4493 ;;		_Trica_Control
  4494 ;; This function uses a non-reentrant model
  4495 ;;
  4496                           
  4497                           	psect	text14
  4498  002A7A                     __ptext14:
  4499                           	opt stack 0
  4500  002A7A                     _delay_us:
  4501                           	opt stack 24
  4502                           
  4503                           ;delay.c: 34: while(nus--);
  4504                           
  4505                           ;incstack = 0
  4506  002A7A  D000               	goto	l2643
  4507  002A7C                     l2643:
  4508  002A7C  0622               	decf	delay_us@nus,f,c
  4509  002A7E  0E00               	movlw	0
  4510  002A80  5A23               	subwfb	delay_us@nus+1,f,c
  4511  002A82  5A24               	subwfb	delay_us@nus+2,f,c
  4512  002A84  5A25               	subwfb	delay_us@nus+3,f,c
  4513  002A86  2822               	incf	delay_us@nus,w,c
  4514  002A88  E1F9               	bnz	l2643
  4515  002A8A  2823               	incf	delay_us@nus+1,w,c
  4516  002A8C  E1F7               	bnz	l2643
  4517  002A8E  2824               	incf	delay_us@nus+2,w,c
  4518  002A90  E1F5               	bnz	l2643
  4519  002A92  2825               	incf	delay_us@nus+3,w,c
  4520  002A94  A4D8               	btfss	status,2,c
  4521  002A96  D7F2               	goto	l2643
  4522  002A98  0012               	return		;funcret
  4523  002A9A                     __end_of_delay_us:
  4524                           	opt stack 0
  4525                           tblptru	equ	0xFF8
  4526                           tblptrh	equ	0xFF7
  4527                           tblptrl	equ	0xFF6
  4528                           tablat	equ	0xFF5
  4529                           prodh	equ	0xFF4
  4530                           prodl	equ	0xFF3
  4531                           intcon	equ	0xFF2
  4532                           postinc0	equ	0xFEE
  4533                           wreg	equ	0xFE8
  4534                           postinc1	equ	0xFE6
  4535                           postdec1	equ	0xFE5
  4536                           fsr1h	equ	0xFE2
  4537                           fsr1l	equ	0xFE1
  4538                           indf2	equ	0xFDF
  4539                           postinc2	equ	0xFDE
  4540                           postdec2	equ	0xFDD
  4541                           fsr2h	equ	0xFDA
  4542                           fsr2l	equ	0xFD9
  4543                           status	equ	0xFD8
  4544                           
  4545 ;; *************** function _ADC_ElecGet *****************
  4546 ;; Defined at:
  4547 ;;		line 64 in file "nbproject/private/ADC.c"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;		None
  4550 ;; Auto vars:     Size  Location     Type
  4551 ;;  elec            4    4[BANK0 ] unsigned long 
  4552 ;;  i               4    0[BANK0 ] unsigned long 
  4553 ;; Return value:  Size  Location     Type
  4554 ;;                  2   46[COMRAM] unsigned int 
  4555 ;; Registers used:
  4556 ;;		wreg, status,2, status,0, cstack
  4557 ;; Tracked objects:
  4558 ;;		On entry : 0/0
  4559 ;;		On exit  : 0/0
  4560 ;;		Unchanged: 0/0
  4561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4562 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4563 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4564 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4565 ;;      Totals:         6       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4566 ;;Total ram usage:       14 bytes
  4567 ;; Hardware stack levels used:    1
  4568 ;; Hardware stack levels required when called:    4
  4569 ;; This function calls:
  4570 ;;		_BusyADC
  4571 ;;		_ConvertADC
  4572 ;;		_ReadADC
  4573 ;;		___lldiv
  4574 ;; This function is called by:
  4575 ;;		_Trica_Mag
  4576 ;; This function uses a non-reentrant model
  4577 ;;
  4578                           
  4579                           	psect	text15
  4580  0021AE                     __ptext15:
  4581                           	opt stack 0
  4582  0021AE                     _ADC_ElecGet:
  4583                           	opt stack 23
  4584                           
  4585                           ;ADC.c: 66: uint32_t elec = 0,i;
  4586                           
  4587                           ;incstack = 0
  4588  0021AE  0E00               	movlw	0
  4589  0021B0  0100               	movlb	0	; () banked
  4590  0021B2  6FDD               	movwf	ADC_ElecGet@elec& (0+255),b
  4591  0021B4  0E00               	movlw	0
  4592  0021B6  6FDE               	movwf	(ADC_ElecGet@elec+1)& (0+255),b
  4593  0021B8  0E00               	movlw	0
  4594  0021BA  6FDF               	movwf	(ADC_ElecGet@elec+2)& (0+255),b
  4595  0021BC  0E00               	movlw	0
  4596  0021BE  6FE0               	movwf	(ADC_ElecGet@elec+3)& (0+255),b
  4597                           
  4598                           ;ADC.c: 67: for(i = 0;i < 5;i++)
  4599  0021C0  0E00               	movlw	0
  4600  0021C2  0100               	movlb	0	; () banked
  4601  0021C4  6FD9               	movwf	ADC_ElecGet@i& (0+255),b
  4602  0021C6  0E00               	movlw	0
  4603  0021C8  6FDA               	movwf	(ADC_ElecGet@i+1)& (0+255),b
  4604  0021CA  0E00               	movlw	0
  4605  0021CC  6FDB               	movwf	(ADC_ElecGet@i+2)& (0+255),b
  4606  0021CE  0E00               	movlw	0
  4607  0021D0  6FDC               	movwf	(ADC_ElecGet@i+3)& (0+255),b
  4608  0021D2                     l2669:
  4609                           
  4610                           ; BSR set to: 0
  4611  0021D2  0100               	movlb	0	; () banked
  4612  0021D4  51DC               	movf	(ADC_ElecGet@i+3)& (0+255),w,b
  4613  0021D6  0100               	movlb	0	; () banked
  4614  0021D8  11DB               	iorwf	(ADC_ElecGet@i+2)& (0+255),w,b
  4615  0021DA  0100               	movlb	0	; () banked
  4616  0021DC  11DA               	iorwf	(ADC_ElecGet@i+1)& (0+255),w,b
  4617  0021DE  E12F               	bnz	l2683
  4618  0021E0  0E05               	movlw	5
  4619  0021E2  0100               	movlb	0	; () banked
  4620  0021E4  5DD9               	subwf	ADC_ElecGet@i& (0+255),w,b
  4621  0021E6  B0D8               	btfsc	status,0,c
  4622  0021E8  D02A               	goto	l2683
  4623  0021EA  D001               	goto	l2673
  4624                           
  4625                           ; BSR set to: 0
  4626  0021EC  D028               	goto	l2683
  4627  0021EE                     l2673:
  4628                           
  4629                           ; BSR set to: 0
  4630                           ;ADC.c: 68: {
  4631                           ;ADC.c: 69: ConvertADC();
  4632  0021EE  EC79  F015         	call	_ConvertADC	;wreg free
  4633                           
  4634                           ;ADC.c: 70: while(BusyADC());
  4635  0021F2  D000               	goto	l2675
  4636  0021F4                     l2675:
  4637  0021F4  EC72  F015         	call	_BusyADC	;wreg free
  4638  0021F8  0900               	iorlw	0
  4639  0021FA  A4D8               	btfss	status,2,c
  4640  0021FC  D7FB               	goto	l2675
  4641                           
  4642                           ;ADC.c: 71: elec += ReadADC();
  4643  0021FE  EC6A  F015         	call	_ReadADC	;wreg free
  4644  002202  C022  F031         	movff	?_ReadADC,??_ADC_ElecGet
  4645  002206  C023  F032         	movff	?_ReadADC+1,??_ADC_ElecGet+1
  4646  00220A  0E00               	movlw	0
  4647  00220C  BE32               	btfsc	(??_ADC_ElecGet+1)& (0+255),7,c
  4648  00220E  0EFF               	movlw	255
  4649  002210  6E33               	movwf	(??_ADC_ElecGet+2)& (0+255),c
  4650  002212  6E34               	movwf	(??_ADC_ElecGet+3)& (0+255),c
  4651  002214  5031               	movf	??_ADC_ElecGet,w,c
  4652  002216  0100               	movlb	0	; () banked
  4653  002218  27DD               	addwf	ADC_ElecGet@elec& (0+255),f,b
  4654  00221A  5032               	movf	??_ADC_ElecGet+1,w,c
  4655  00221C  0100               	movlb	0	; () banked
  4656  00221E  23DE               	addwfc	(ADC_ElecGet@elec+1)& (0+255),f,b
  4657  002220  5033               	movf	??_ADC_ElecGet+2,w,c
  4658  002222  0100               	movlb	0	; () banked
  4659  002224  23DF               	addwfc	(ADC_ElecGet@elec+2)& (0+255),f,b
  4660  002226  5034               	movf	??_ADC_ElecGet+3,w,c
  4661  002228  0100               	movlb	0	; () banked
  4662  00222A  23E0               	addwfc	(ADC_ElecGet@elec+3)& (0+255),f,b
  4663                           
  4664                           ; BSR set to: 0
  4665  00222C  0E01               	movlw	1
  4666  00222E  0100               	movlb	0	; () banked
  4667  002230  27D9               	addwf	ADC_ElecGet@i& (0+255),f,b
  4668  002232  0E00               	movlw	0
  4669  002234  23DA               	addwfc	(ADC_ElecGet@i+1)& (0+255),f,b
  4670  002236  23DB               	addwfc	(ADC_ElecGet@i+2)& (0+255),f,b
  4671  002238  23DC               	addwfc	(ADC_ElecGet@i+3)& (0+255),f,b
  4672  00223A  D7CB               	goto	l2669
  4673                           
  4674                           ; BSR set to: 0
  4675  00223C  D000               	goto	l2683
  4676  00223E                     l2683:
  4677                           
  4678                           ; BSR set to: 0
  4679                           ;ADC.c: 72: }
  4680                           ;ADC.c: 73: elec = elec/5;
  4681  00223E  C0DD  F022         	movff	ADC_ElecGet@elec,___lldiv@dividend
  4682  002242  C0DE  F023         	movff	ADC_ElecGet@elec+1,___lldiv@dividend+1
  4683  002246  C0DF  F024         	movff	ADC_ElecGet@elec+2,___lldiv@dividend+2
  4684  00224A  C0E0  F025         	movff	ADC_ElecGet@elec+3,___lldiv@dividend+3
  4685  00224E  0E05               	movlw	5
  4686  002250  6E26               	movwf	___lldiv@divisor,c
  4687  002252  0E00               	movlw	0
  4688  002254  6E27               	movwf	___lldiv@divisor+1,c
  4689  002256  0E00               	movlw	0
  4690  002258  6E28               	movwf	___lldiv@divisor+2,c
  4691  00225A  0E00               	movlw	0
  4692  00225C  6E29               	movwf	___lldiv@divisor+3,c
  4693  00225E  EC76  F013         	call	___lldiv	;wreg free
  4694  002262  C022  F0DD         	movff	?___lldiv,ADC_ElecGet@elec
  4695  002266  C023  F0DE         	movff	?___lldiv+1,ADC_ElecGet@elec+1
  4696  00226A  C024  F0DF         	movff	?___lldiv+2,ADC_ElecGet@elec+2
  4697  00226E  C025  F0E0         	movff	?___lldiv+3,ADC_ElecGet@elec+3
  4698                           
  4699                           ;ADC.c: 74: if(elec > Parameter[4].Value)
  4700  002272  0101               	movlb	1	; () banked
  4701  002274  5120               	movf	(_Parameter+32)& (0+255),w,b
  4702  002276  6E31               	movwf	??_ADC_ElecGet& (0+255),c
  4703  002278  0101               	movlb	1	; () banked
  4704  00227A  5121               	movf	(_Parameter+33)& (0+255),w,b
  4705  00227C  6E32               	movwf	(??_ADC_ElecGet+1)& (0+255),c
  4706  00227E  6A33               	clrf	(??_ADC_ElecGet+2)& (0+255),c
  4707  002280  6A34               	clrf	(??_ADC_ElecGet+3)& (0+255),c
  4708  002282  0100               	movlb	0	; () banked
  4709  002284  51DD               	movf	ADC_ElecGet@elec& (0+255),w,b
  4710  002286  5C31               	subwf	??_ADC_ElecGet,w,c
  4711  002288  0100               	movlb	0	; () banked
  4712  00228A  51DE               	movf	(ADC_ElecGet@elec+1)& (0+255),w,b
  4713  00228C  5832               	subwfb	??_ADC_ElecGet+1,w,c
  4714  00228E  0100               	movlb	0	; () banked
  4715  002290  51DF               	movf	(ADC_ElecGet@elec+2)& (0+255),w,b
  4716  002292  5833               	subwfb	??_ADC_ElecGet+2,w,c
  4717  002294  0100               	movlb	0	; () banked
  4718  002296  51E0               	movf	(ADC_ElecGet@elec+3)& (0+255),w,b
  4719  002298  5834               	subwfb	??_ADC_ElecGet+3,w,c
  4720  00229A  B0D8               	btfsc	status,0,c
  4721  00229C  D02A               	goto	l2689
  4722                           
  4723                           ; BSR set to: 0
  4724                           ;ADC.c: 75: elec = (elec-Parameter[4].Value)/Parameter[5].Value;
  4725  00229E  0101               	movlb	1	; () banked
  4726  0022A0  5120               	movf	(_Parameter+32)& (0+255),w,b
  4727  0022A2  6E31               	movwf	??_ADC_ElecGet& (0+255),c
  4728  0022A4  0101               	movlb	1	; () banked
  4729  0022A6  5121               	movf	(_Parameter+33)& (0+255),w,b
  4730  0022A8  6E32               	movwf	(??_ADC_ElecGet+1)& (0+255),c
  4731  0022AA  6A33               	clrf	(??_ADC_ElecGet+2)& (0+255),c
  4732  0022AC  6A34               	clrf	(??_ADC_ElecGet+3)& (0+255),c
  4733  0022AE  1E31               	comf	??_ADC_ElecGet,f,c
  4734  0022B0  1E32               	comf	??_ADC_ElecGet+1,f,c
  4735  0022B2  1E33               	comf	??_ADC_ElecGet+2,f,c
  4736  0022B4  1E34               	comf	??_ADC_ElecGet+3,f,c
  4737  0022B6  2A31               	incf	??_ADC_ElecGet,f,c
  4738  0022B8  0E00               	movlw	0
  4739  0022BA  2232               	addwfc	??_ADC_ElecGet+1,f,c
  4740  0022BC  2233               	addwfc	??_ADC_ElecGet+2,f,c
  4741  0022BE  2234               	addwfc	??_ADC_ElecGet+3,f,c
  4742  0022C0  0100               	movlb	0	; () banked
  4743  0022C2  51DD               	movf	ADC_ElecGet@elec& (0+255),w,b
  4744  0022C4  2431               	addwf	??_ADC_ElecGet,w,c
  4745  0022C6  6E22               	movwf	___lldiv@dividend,c
  4746  0022C8  0100               	movlb	0	; () banked
  4747  0022CA  51DE               	movf	(ADC_ElecGet@elec+1)& (0+255),w,b
  4748  0022CC  2032               	addwfc	??_ADC_ElecGet+1,w,c
  4749  0022CE  6E23               	movwf	___lldiv@dividend+1,c
  4750  0022D0  0100               	movlb	0	; () banked
  4751  0022D2  51DF               	movf	(ADC_ElecGet@elec+2)& (0+255),w,b
  4752  0022D4  2033               	addwfc	??_ADC_ElecGet+2,w,c
  4753  0022D6  6E24               	movwf	___lldiv@dividend+2,c
  4754  0022D8  0100               	movlb	0	; () banked
  4755  0022DA  51E0               	movf	(ADC_ElecGet@elec+3)& (0+255),w,b
  4756  0022DC  2034               	addwfc	??_ADC_ElecGet+3,w,c
  4757  0022DE  6E25               	movwf	___lldiv@dividend+3,c
  4758  0022E0  C128  F026         	movff	_Parameter+40,___lldiv@divisor
  4759  0022E4  C129  F027         	movff	_Parameter+41,___lldiv@divisor+1
  4760  0022E8  6A28               	clrf	___lldiv@divisor+2,c
  4761  0022EA  6A29               	clrf	___lldiv@divisor+3,c
  4762  0022EC  EC76  F013         	call	___lldiv	;wreg free
  4763  0022F0  D027               	goto	L8
  4764  0022F2                     l2689:
  4765                           
  4766                           ;ADC.c: 76: else
  4767                           ;ADC.c: 77: elec = (Parameter[4].Value - elec)/Parameter[5].Value;
  4768  0022F2  C0DD  F031         	movff	ADC_ElecGet@elec,??_ADC_ElecGet
  4769  0022F6  C0DE  F032         	movff	ADC_ElecGet@elec+1,??_ADC_ElecGet+1
  4770  0022FA  C0DF  F033         	movff	ADC_ElecGet@elec+2,??_ADC_ElecGet+2
  4771  0022FE  C0E0  F034         	movff	ADC_ElecGet@elec+3,??_ADC_ElecGet+3
  4772  002302  1E31               	comf	??_ADC_ElecGet,f,c
  4773  002304  1E32               	comf	??_ADC_ElecGet+1,f,c
  4774  002306  1E33               	comf	??_ADC_ElecGet+2,f,c
  4775  002308  1E34               	comf	??_ADC_ElecGet+3,f,c
  4776  00230A  2A31               	incf	??_ADC_ElecGet,f,c
  4777  00230C  0E00               	movlw	0
  4778  00230E  2232               	addwfc	??_ADC_ElecGet+1,f,c
  4779  002310  2233               	addwfc	??_ADC_ElecGet+2,f,c
  4780  002312  2234               	addwfc	??_ADC_ElecGet+3,f,c
  4781  002314  0101               	movlb	1	; () banked
  4782  002316  5120               	movf	(_Parameter+32)& (0+255),w,b
  4783  002318  2431               	addwf	??_ADC_ElecGet,w,c
  4784  00231A  6E22               	movwf	___lldiv@dividend,c
  4785  00231C  0101               	movlb	1	; () banked
  4786  00231E  5121               	movf	(_Parameter+33)& (0+255),w,b
  4787  002320  2032               	addwfc	??_ADC_ElecGet+1,w,c
  4788  002322  6E23               	movwf	___lldiv@dividend+1,c
  4789  002324  0E00               	movlw	0
  4790  002326  2033               	addwfc	??_ADC_ElecGet+2,w,c
  4791  002328  6E24               	movwf	___lldiv@dividend+2,c
  4792  00232A  0E00               	movlw	0
  4793  00232C  2034               	addwfc	??_ADC_ElecGet+3,w,c
  4794  00232E  6E25               	movwf	___lldiv@dividend+3,c
  4795  002330  C128  F026         	movff	_Parameter+40,___lldiv@divisor
  4796  002334  C129  F027         	movff	_Parameter+41,___lldiv@divisor+1
  4797  002338  6A28               	clrf	___lldiv@divisor+2,c
  4798  00233A  6A29               	clrf	___lldiv@divisor+3,c
  4799  00233C  EC76  F013         	call	___lldiv	;wreg free
  4800  002340                     L8:
  4801  002340  C022  F0DD         	movff	?___lldiv,ADC_ElecGet@elec
  4802  002344  C023  F0DE         	movff	?___lldiv+1,ADC_ElecGet@elec+1
  4803  002348  C024  F0DF         	movff	?___lldiv+2,ADC_ElecGet@elec+2
  4804  00234C  C025  F0E0         	movff	?___lldiv+3,ADC_ElecGet@elec+3
  4805  002350  D000               	goto	l2691
  4806  002352                     l2691:
  4807                           
  4808                           ;ADC.c: 78: return elec;
  4809  002352  C0DD  F02F         	movff	ADC_ElecGet@elec,?_ADC_ElecGet
  4810  002356  C0DE  F030         	movff	ADC_ElecGet@elec+1,?_ADC_ElecGet+1
  4811  00235A  0012               	return	
  4812  00235C  0012               	return		;funcret
  4813  00235E                     __end_of_ADC_ElecGet:
  4814                           	opt stack 0
  4815                           tblptru	equ	0xFF8
  4816                           tblptrh	equ	0xFF7
  4817                           tblptrl	equ	0xFF6
  4818                           tablat	equ	0xFF5
  4819                           prodh	equ	0xFF4
  4820                           prodl	equ	0xFF3
  4821                           intcon	equ	0xFF2
  4822                           postinc0	equ	0xFEE
  4823                           wreg	equ	0xFE8
  4824                           postinc1	equ	0xFE6
  4825                           postdec1	equ	0xFE5
  4826                           fsr1h	equ	0xFE2
  4827                           fsr1l	equ	0xFE1
  4828                           indf2	equ	0xFDF
  4829                           postinc2	equ	0xFDE
  4830                           postdec2	equ	0xFDD
  4831                           fsr2h	equ	0xFDA
  4832                           fsr2l	equ	0xFD9
  4833                           status	equ	0xFD8
  4834                           
  4835 ;; *************** function _Relay_Channel_SW *****************
  4836 ;; Defined at:
  4837 ;;		line 326 in file "nbproject/private/triac.c"
  4838 ;; Parameters:    Size  Location     Type
  4839 ;;  Channel         1    wreg     unsigned char 
  4840 ;;  Flag            1   33[COMRAM] enum E8803
  4841 ;; Auto vars:     Size  Location     Type
  4842 ;;  Channel         1   34[COMRAM] unsigned char 
  4843 ;; Return value:  Size  Location     Type
  4844 ;;		None               void
  4845 ;; Registers used:
  4846 ;;		wreg, status,2, status,0
  4847 ;; Tracked objects:
  4848 ;;		On entry : 0/0
  4849 ;;		On exit  : 0/0
  4850 ;;		Unchanged: 0/0
  4851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4852 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4853 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4855 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4856 ;;Total ram usage:        2 bytes
  4857 ;; Hardware stack levels used:    1
  4858 ;; Hardware stack levels required when called:    3
  4859 ;; This function calls:
  4860 ;;		Nothing
  4861 ;; This function is called by:
  4862 ;;		_Magne_Demag_Dispose
  4863 ;; This function uses a non-reentrant model
  4864 ;;
  4865                           
  4866                           	psect	text16
  4867  00250E                     __ptext16:
  4868                           	opt stack 0
  4869  00250E                     _Relay_Channel_SW:
  4870                           	opt stack 25
  4871                           
  4872                           ;incstack = 0
  4873                           ;Relay_Channel_SW@Channel stored from wreg
  4874  00250E  6E23               	movwf	Relay_Channel_SW@Channel,c
  4875                           
  4876                           ;triac.c: 328: switch(Channel)
  4877  002510  D038               	goto	l2999
  4878  002512                     l2965:
  4879                           
  4880                           ;triac.c: 331: if(Flag)
  4881  002512  5022               	movf	Relay_Channel_SW@Flag,w,c
  4882  002514  B4D8               	btfsc	status,2,c
  4883  002516  D002               	goto	l240
  4884                           
  4885                           ;triac.c: 332: {
  4886                           ;triac.c: 333: {PORTEbits.RE0 = 1;};
  4887  002518  8084               	bsf	3972,0,c	;volatile
  4888                           
  4889                           ;triac.c: 334: }
  4890  00251A  0012               	return	
  4891  00251C                     l240:
  4892                           
  4893                           ;triac.c: 335: else
  4894                           ;triac.c: 336: {
  4895                           ;triac.c: 337: {PORTEbits.RE0 = 0;};
  4896  00251C  9084               	bcf	3972,0,c	;volatile
  4897                           
  4898                           ;triac.c: 338: }
  4899                           ;triac.c: 339: break;
  4900  00251E  0012               	return	
  4901  002520                     l2969:
  4902                           
  4903                           ;triac.c: 342: if(Flag)
  4904  002520  5022               	movf	Relay_Channel_SW@Flag,w,c
  4905  002522  B4D8               	btfsc	status,2,c
  4906  002524  D002               	goto	l244
  4907                           
  4908                           ;triac.c: 343: {
  4909                           ;triac.c: 344: {PORTEbits.RE1 = 1;};
  4910  002526  8284               	bsf	3972,1,c	;volatile
  4911                           
  4912                           ;triac.c: 345: }
  4913  002528  0012               	return	
  4914  00252A                     l244:
  4915                           
  4916                           ;triac.c: 346: else
  4917                           ;triac.c: 347: {
  4918                           ;triac.c: 348: {PORTEbits.RE1 = 0;};
  4919  00252A  9284               	bcf	3972,1,c	;volatile
  4920                           
  4921                           ;triac.c: 349: }
  4922                           ;triac.c: 350: break;
  4923  00252C  0012               	return	
  4924  00252E                     l2973:
  4925                           
  4926                           ;triac.c: 353: if(Flag)
  4927  00252E  5022               	movf	Relay_Channel_SW@Flag,w,c
  4928  002530  B4D8               	btfsc	status,2,c
  4929  002532  D002               	goto	l247
  4930                           
  4931                           ;triac.c: 354: {
  4932                           ;triac.c: 355: PORTEbits.RE2 = 1;
  4933  002534  8484               	bsf	3972,2,c	;volatile
  4934                           
  4935                           ;triac.c: 356: }
  4936  002536  0012               	return	
  4937  002538                     l247:
  4938                           
  4939                           ;triac.c: 357: else
  4940                           ;triac.c: 358: {
  4941                           ;triac.c: 359: PORTEbits.RE2 = 0;
  4942  002538  9484               	bcf	3972,2,c	;volatile
  4943                           
  4944                           ;triac.c: 360: }
  4945                           ;triac.c: 361: break;
  4946  00253A  0012               	return	
  4947  00253C                     l2977:
  4948                           
  4949                           ;triac.c: 364: if(Flag)
  4950  00253C  5022               	movf	Relay_Channel_SW@Flag,w,c
  4951  00253E  B4D8               	btfsc	status,2,c
  4952  002540  D002               	goto	l250
  4953                           
  4954                           ;triac.c: 365: {
  4955                           ;triac.c: 366: PORTEbits.RE3 = 1;
  4956  002542  8684               	bsf	3972,3,c	;volatile
  4957                           
  4958                           ;triac.c: 367: }
  4959  002544  0012               	return	
  4960  002546                     l250:
  4961                           
  4962                           ;triac.c: 368: else
  4963                           ;triac.c: 369: {
  4964                           ;triac.c: 370: PORTEbits.RE3 = 0;
  4965  002546  9684               	bcf	3972,3,c	;volatile
  4966                           
  4967                           ;triac.c: 371: }
  4968                           ;triac.c: 372: break;
  4969  002548  0012               	return	
  4970  00254A                     l2981:
  4971                           
  4972                           ;triac.c: 375: if(Flag)
  4973  00254A  5022               	movf	Relay_Channel_SW@Flag,w,c
  4974  00254C  B4D8               	btfsc	status,2,c
  4975  00254E  D002               	goto	l253
  4976                           
  4977                           ;triac.c: 376: {
  4978                           ;triac.c: 377: PORTEbits.RE4 = 1;
  4979  002550  8884               	bsf	3972,4,c	;volatile
  4980                           
  4981                           ;triac.c: 378: }
  4982  002552  0012               	return	
  4983  002554                     l253:
  4984                           
  4985                           ;triac.c: 379: else
  4986                           ;triac.c: 380: {
  4987                           ;triac.c: 381: PORTEbits.RE4 = 0;
  4988  002554  9884               	bcf	3972,4,c	;volatile
  4989                           
  4990                           ;triac.c: 382: }
  4991                           ;triac.c: 383: break;
  4992  002556  0012               	return	
  4993  002558                     l2985:
  4994                           
  4995                           ;triac.c: 386: if(Flag)
  4996  002558  5022               	movf	Relay_Channel_SW@Flag,w,c
  4997  00255A  B4D8               	btfsc	status,2,c
  4998  00255C  D002               	goto	l256
  4999                           
  5000                           ;triac.c: 387: {
  5001                           ;triac.c: 388: PORTEbits.RE5 = 1;
  5002  00255E  8A84               	bsf	3972,5,c	;volatile
  5003                           
  5004                           ;triac.c: 389: }
  5005  002560  0012               	return	
  5006  002562                     l256:
  5007                           
  5008                           ;triac.c: 390: else
  5009                           ;triac.c: 391: {
  5010                           ;triac.c: 392: PORTEbits.RE5 = 0;
  5011  002562  9A84               	bcf	3972,5,c	;volatile
  5012                           
  5013                           ;triac.c: 393: }
  5014                           ;triac.c: 394: break;
  5015  002564  0012               	return	
  5016  002566                     l2989:
  5017                           
  5018                           ;triac.c: 397: if(Flag)
  5019  002566  5022               	movf	Relay_Channel_SW@Flag,w,c
  5020  002568  B4D8               	btfsc	status,2,c
  5021  00256A  D002               	goto	l259
  5022                           
  5023                           ;triac.c: 398: {
  5024                           ;triac.c: 399: PORTEbits.RE6 = 1;
  5025  00256C  8C84               	bsf	3972,6,c	;volatile
  5026                           
  5027                           ;triac.c: 400: }
  5028  00256E  0012               	return	
  5029  002570                     l259:
  5030                           
  5031                           ;triac.c: 401: else
  5032                           ;triac.c: 402: {
  5033                           ;triac.c: 403: PORTEbits.RE6 = 0;
  5034  002570  9C84               	bcf	3972,6,c	;volatile
  5035                           
  5036                           ;triac.c: 404: }
  5037                           ;triac.c: 405: break;
  5038  002572  0012               	return	
  5039  002574                     l2993:
  5040                           
  5041                           ;triac.c: 408: if(Flag)
  5042  002574  5022               	movf	Relay_Channel_SW@Flag,w,c
  5043  002576  B4D8               	btfsc	status,2,c
  5044  002578  D002               	goto	l262
  5045                           
  5046                           ;triac.c: 409: {
  5047                           ;triac.c: 410: PORTEbits.RE7 = 1;
  5048  00257A  8E84               	bsf	3972,7,c	;volatile
  5049                           
  5050                           ;triac.c: 411: }
  5051  00257C  0012               	return	
  5052  00257E                     l262:
  5053                           
  5054                           ;triac.c: 412: else
  5055                           ;triac.c: 413: {
  5056                           ;triac.c: 414: PORTEbits.RE7 = 0;
  5057  00257E  9E84               	bcf	3972,7,c	;volatile
  5058                           
  5059                           ;triac.c: 929: }
  5060                           
  5061                           ;triac.c: 928: break;
  5062                           
  5063                           ;triac.c: 927: default:
  5064                           
  5065                           ;triac.c: 415: }
  5066                           ;triac.c: 416: break;
  5067  002580  0012               	return	
  5068  002582                     l2999:
  5069  002582  5023               	movf	Relay_Channel_SW@Channel,w,c
  5070                           
  5071                           ; Switch size 1, requested type "space"
  5072                           ; Number of cases is 8, Range of values is 1 to 8
  5073                           ; switch strategies available:
  5074                           ; Name         Instructions Cycles
  5075                           ; simple_byte           25    13 (average)
  5076                           ;	Chosen strategy is simple_byte
  5077  002584  0A01               	xorlw	1	; case 1
  5078  002586  B4D8               	btfsc	status,2,c
  5079  002588  D7C4               	goto	l2965
  5080  00258A  0A03               	xorlw	3	; case 2
  5081  00258C  B4D8               	btfsc	status,2,c
  5082  00258E  D7C8               	goto	l2969
  5083  002590  0A01               	xorlw	1	; case 3
  5084  002592  B4D8               	btfsc	status,2,c
  5085  002594  D7CC               	goto	l2973
  5086  002596  0A07               	xorlw	7	; case 4
  5087  002598  B4D8               	btfsc	status,2,c
  5088  00259A  D7D0               	goto	l2977
  5089  00259C  0A01               	xorlw	1	; case 5
  5090  00259E  B4D8               	btfsc	status,2,c
  5091  0025A0  D7D4               	goto	l2981
  5092  0025A2  0A03               	xorlw	3	; case 6
  5093  0025A4  B4D8               	btfsc	status,2,c
  5094  0025A6  D7D8               	goto	l2985
  5095  0025A8  0A01               	xorlw	1	; case 7
  5096  0025AA  B4D8               	btfsc	status,2,c
  5097  0025AC  D7DC               	goto	l2989
  5098  0025AE  0A0F               	xorlw	15	; case 8
  5099  0025B0  A4D8               	btfss	status,2,c
  5100  0025B2  0012               	return	
  5101  0025B4  D7DF               	goto	l2993
  5102  0025B6  0012               	return		;funcret
  5103  0025B8                     __end_of_Relay_Channel_SW:
  5104                           	opt stack 0
  5105                           tblptru	equ	0xFF8
  5106                           tblptrh	equ	0xFF7
  5107                           tblptrl	equ	0xFF6
  5108                           tablat	equ	0xFF5
  5109                           prodh	equ	0xFF4
  5110                           prodl	equ	0xFF3
  5111                           intcon	equ	0xFF2
  5112                           postinc0	equ	0xFEE
  5113                           wreg	equ	0xFE8
  5114                           postinc1	equ	0xFE6
  5115                           postdec1	equ	0xFE5
  5116                           fsr1h	equ	0xFE2
  5117                           fsr1l	equ	0xFE1
  5118                           indf2	equ	0xFDF
  5119                           postinc2	equ	0xFDE
  5120                           postdec2	equ	0xFDD
  5121                           fsr2h	equ	0xFDA
  5122                           fsr2l	equ	0xFD9
  5123                           status	equ	0xFD8
  5124                           
  5125 ;; *************** function _GPIO_Init *****************
  5126 ;; Defined at:
  5127 ;;		line 32 in file "nbproject/private/gpio.c"
  5128 ;; Parameters:    Size  Location     Type
  5129 ;;		None
  5130 ;; Auto vars:     Size  Location     Type
  5131 ;;		None
  5132 ;; Return value:  Size  Location     Type
  5133 ;;		None               void
  5134 ;; Registers used:
  5135 ;;		wreg, status,2
  5136 ;; Tracked objects:
  5137 ;;		On entry : 0/0
  5138 ;;		On exit  : 0/0
  5139 ;;		Unchanged: 0/0
  5140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5145 ;;Total ram usage:        0 bytes
  5146 ;; Hardware stack levels used:    1
  5147 ;; Hardware stack levels required when called:    3
  5148 ;; This function calls:
  5149 ;;		Nothing
  5150 ;; This function is called by:
  5151 ;;		_main
  5152 ;; This function uses a non-reentrant model
  5153 ;;
  5154                           
  5155                           	psect	text17
  5156  00294C                     __ptext17:
  5157                           	opt stack 0
  5158  00294C                     _GPIO_Init:
  5159                           	opt stack 27
  5160                           
  5161                           ;gpio.c: 41: TRISCbits.TRISC2 = 0;
  5162                           
  5163                           ;incstack = 0
  5164  00294C  9494               	bcf	3988,2,c	;volatile
  5165                           
  5166                           ;gpio.c: 51: TRISDbits.TRISD0 = 0;
  5167  00294E  9095               	bcf	3989,0,c	;volatile
  5168                           
  5169                           ;gpio.c: 52: TRISDbits.TRISD1 = 0;
  5170  002950  9295               	bcf	3989,1,c	;volatile
  5171                           
  5172                           ;gpio.c: 53: TRISDbits.TRISD2 = 0;
  5173  002952  9495               	bcf	3989,2,c	;volatile
  5174                           
  5175                           ;gpio.c: 54: TRISDbits.TRISD3 = 0;
  5176  002954  9695               	bcf	3989,3,c	;volatile
  5177                           
  5178                           ;gpio.c: 55: TRISDbits.TRISD4 = 0;
  5179  002956  9895               	bcf	3989,4,c	;volatile
  5180                           
  5181                           ;gpio.c: 56: TRISDbits.TRISD5 = 0;
  5182  002958  9A95               	bcf	3989,5,c	;volatile
  5183                           
  5184                           ;gpio.c: 57: TRISDbits.TRISD6 = 0;
  5185  00295A  9C95               	bcf	3989,6,c	;volatile
  5186                           
  5187                           ;gpio.c: 58: TRISDbits.TRISD7 = 0;
  5188  00295C  9E95               	bcf	3989,7,c	;volatile
  5189                           
  5190                           ;gpio.c: 68: TRISEbits.TRISE0 = 0;
  5191  00295E  9096               	bcf	3990,0,c	;volatile
  5192                           
  5193                           ;gpio.c: 69: TRISEbits.TRISE1 = 0;
  5194  002960  9296               	bcf	3990,1,c	;volatile
  5195                           
  5196                           ;gpio.c: 70: TRISEbits.TRISE2 = 0;
  5197  002962  9496               	bcf	3990,2,c	;volatile
  5198                           
  5199                           ;gpio.c: 71: TRISEbits.TRISE3 = 0;
  5200  002964  9696               	bcf	3990,3,c	;volatile
  5201                           
  5202                           ;gpio.c: 72: TRISEbits.TRISE4 = 0;
  5203  002966  9896               	bcf	3990,4,c	;volatile
  5204                           
  5205                           ;gpio.c: 73: TRISEbits.TRISE5 = 0;
  5206  002968  9A96               	bcf	3990,5,c	;volatile
  5207                           
  5208                           ;gpio.c: 74: TRISEbits.TRISE6 = 0;
  5209  00296A  9C96               	bcf	3990,6,c	;volatile
  5210                           
  5211                           ;gpio.c: 75: TRISEbits.TRISE7 = 0;
  5212  00296C  9E96               	bcf	3990,7,c	;volatile
  5213                           
  5214                           ;gpio.c: 80: TRISGbits.TRISG0 = 0;
  5215  00296E  9098               	bcf	3992,0,c	;volatile
  5216                           
  5217                           ;gpio.c: 86: TRISAbits.TRISA4 = 1;
  5218  002970  8892               	bsf	3986,4,c	;volatile
  5219                           
  5220                           ;gpio.c: 87: TRISAbits.TRISA5 = 1;
  5221  002972  8A92               	bsf	3986,5,c	;volatile
  5222                           
  5223                           ;gpio.c: 88: ANCON0bits.ANSEL4 = 0;
  5224  002974  010F               	movlb	15	; () banked
  5225  002976  9925               	bcf	37,4,b	;volatile
  5226                           
  5227                           ;gpio.c: 96: TRISCbits.TRISC0 = 1;
  5228  002978  8094               	bsf	3988,0,c	;volatile
  5229                           
  5230                           ;gpio.c: 97: TRISCbits.TRISC1 = 1;
  5231  00297A  8294               	bsf	3988,1,c	;volatile
  5232                           
  5233                           ;gpio.c: 98: TRISCbits.TRISC3 = 1;
  5234  00297C  8694               	bsf	3988,3,c	;volatile
  5235                           
  5236                           ; BSR set to: 15
  5237                           ;gpio.c: 109: PORTA = 0;
  5238  00297E  0E00               	movlw	0
  5239  002980  6E80               	movwf	3968,c	;volatile
  5240                           
  5241                           ;gpio.c: 110: PORTB = 0;
  5242  002982  0E00               	movlw	0
  5243  002984  6E81               	movwf	3969,c	;volatile
  5244                           
  5245                           ;gpio.c: 111: PORTC = 0;
  5246  002986  0E00               	movlw	0
  5247  002988  6E82               	movwf	3970,c	;volatile
  5248                           
  5249                           ;gpio.c: 112: PORTD = 0;
  5250  00298A  0E00               	movlw	0
  5251  00298C  6E83               	movwf	3971,c	;volatile
  5252                           
  5253                           ;gpio.c: 113: PORTE = 0;
  5254  00298E  0E00               	movlw	0
  5255  002990  6E84               	movwf	3972,c	;volatile
  5256                           
  5257                           ;gpio.c: 114: PORTF = 0;
  5258  002992  0E00               	movlw	0
  5259  002994  6E85               	movwf	3973,c	;volatile
  5260                           
  5261                           ;gpio.c: 115: PORTG = 0;
  5262  002996  0E00               	movlw	0
  5263  002998  6E86               	movwf	3974,c	;volatile
  5264                           
  5265                           ; BSR set to: 15
  5266  00299A  0012               	return		;funcret
  5267  00299C                     __end_of_GPIO_Init:
  5268                           	opt stack 0
  5269                           tblptru	equ	0xFF8
  5270                           tblptrh	equ	0xFF7
  5271                           tblptrl	equ	0xFF6
  5272                           tablat	equ	0xFF5
  5273                           prodh	equ	0xFF4
  5274                           prodl	equ	0xFF3
  5275                           intcon	equ	0xFF2
  5276                           postinc0	equ	0xFEE
  5277                           wreg	equ	0xFE8
  5278                           postinc1	equ	0xFE6
  5279                           postdec1	equ	0xFE5
  5280                           fsr1h	equ	0xFE2
  5281                           fsr1l	equ	0xFE1
  5282                           indf2	equ	0xFDF
  5283                           postinc2	equ	0xFDE
  5284                           postdec2	equ	0xFDD
  5285                           fsr2h	equ	0xFDA
  5286                           fsr2l	equ	0xFD9
  5287                           status	equ	0xFD8
  5288                           
  5289 ;; *************** function _ADC_Init *****************
  5290 ;; Defined at:
  5291 ;;		line 32 in file "nbproject/private/ADC.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;		None
  5294 ;; Auto vars:     Size  Location     Type
  5295 ;;  i               4    4[BANK0 ] unsigned long 
  5296 ;;  elec            4    0[BANK0 ] unsigned long 
  5297 ;; Return value:  Size  Location     Type
  5298 ;;		None               void
  5299 ;; Registers used:
  5300 ;;		wreg, status,2, status,0, cstack
  5301 ;; Tracked objects:
  5302 ;;		On entry : 0/0
  5303 ;;		On exit  : 0/0
  5304 ;;		Unchanged: 0/0
  5305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5307 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5308 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5309 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5310 ;;Total ram usage:       12 bytes
  5311 ;; Hardware stack levels used:    1
  5312 ;; Hardware stack levels required when called:    4
  5313 ;; This function calls:
  5314 ;;		_BusyADC
  5315 ;;		_ConvertADC
  5316 ;;		_OpenADC
  5317 ;;		_ReadADC
  5318 ;;		___lldiv
  5319 ;; This function is called by:
  5320 ;;		_main
  5321 ;; This function uses a non-reentrant model
  5322 ;;
  5323                           
  5324                           	psect	text18
  5325  002442                     __ptext18:
  5326                           	opt stack 0
  5327  002442                     _ADC_Init:
  5328                           	opt stack 26
  5329                           
  5330                           ;ADC.c: 34: uint32_t elec = 0,i;
  5331                           
  5332                           ; BSR set to: 15
  5333                           ;incstack = 0
  5334  002442  0E00               	movlw	0
  5335  002444  0100               	movlb	0	; () banked
  5336  002446  6FD9               	movwf	ADC_Init@elec& (0+255),b
  5337  002448  0E00               	movlw	0
  5338  00244A  6FDA               	movwf	(ADC_Init@elec+1)& (0+255),b
  5339  00244C  0E00               	movlw	0
  5340  00244E  6FDB               	movwf	(ADC_Init@elec+2)& (0+255),b
  5341  002450  0E00               	movlw	0
  5342  002452  6FDC               	movwf	(ADC_Init@elec+3)& (0+255),b
  5343                           
  5344                           ; BSR set to: 0
  5345                           ;ADC.c: 35: OpenADC(0b11111111 &
  5346                           ;ADC.c: 36: 0b11110101 &
  5347                           ;ADC.c: 37: 0b10001111,
  5348                           ;ADC.c: 39: 0b10011011,
  5349                           ;ADC.c: 41: 0b00111111 &
  5350                           ;ADC.c: 42: 0b11111111 &
  5351                           ;ADC.c: 43: 0b11110111 &
  5352                           ;ADC.c: 44: 0b11111000
  5353                           ;ADC.c: 45: );
  5354  002454  0E9B               	movlw	155
  5355  002456  6E22               	movwf	OpenADC@config2,c
  5356  002458  0E30               	movlw	48
  5357  00245A  6E23               	movwf	OpenADC@config3,c
  5358  00245C  0E85               	movlw	133
  5359  00245E  ECCE  F014         	call	_OpenADC
  5360                           
  5361                           ;ADC.c: 46: for(i = 0;i < 5;i++)
  5362  002462  0E00               	movlw	0
  5363  002464  0100               	movlb	0	; () banked
  5364  002466  6FDD               	movwf	ADC_Init@i& (0+255),b
  5365  002468  0E00               	movlw	0
  5366  00246A  6FDE               	movwf	(ADC_Init@i+1)& (0+255),b
  5367  00246C  0E00               	movlw	0
  5368  00246E  6FDF               	movwf	(ADC_Init@i+2)& (0+255),b
  5369  002470  0E00               	movlw	0
  5370  002472  6FE0               	movwf	(ADC_Init@i+3)& (0+255),b
  5371  002474                     l3181:
  5372                           
  5373                           ; BSR set to: 0
  5374  002474  0100               	movlb	0	; () banked
  5375  002476  51E0               	movf	(ADC_Init@i+3)& (0+255),w,b
  5376  002478  0100               	movlb	0	; () banked
  5377  00247A  11DF               	iorwf	(ADC_Init@i+2)& (0+255),w,b
  5378  00247C  0100               	movlb	0	; () banked
  5379  00247E  11DE               	iorwf	(ADC_Init@i+1)& (0+255),w,b
  5380  002480  E12F               	bnz	l3195
  5381  002482  0E05               	movlw	5
  5382  002484  0100               	movlb	0	; () banked
  5383  002486  5DDD               	subwf	ADC_Init@i& (0+255),w,b
  5384  002488  B0D8               	btfsc	status,0,c
  5385  00248A  D02A               	goto	l3195
  5386  00248C  D001               	goto	l3185
  5387                           
  5388                           ; BSR set to: 0
  5389  00248E  D028               	goto	l3195
  5390  002490                     l3185:
  5391                           
  5392                           ; BSR set to: 0
  5393                           ;ADC.c: 47: {
  5394                           ;ADC.c: 48: ConvertADC();
  5395  002490  EC79  F015         	call	_ConvertADC	;wreg free
  5396                           
  5397                           ;ADC.c: 49: while(BusyADC());
  5398  002494  D000               	goto	l3187
  5399  002496                     l3187:
  5400  002496  EC72  F015         	call	_BusyADC	;wreg free
  5401  00249A  0900               	iorlw	0
  5402  00249C  A4D8               	btfss	status,2,c
  5403  00249E  D7FB               	goto	l3187
  5404                           
  5405                           ;ADC.c: 50: elec += ReadADC();
  5406  0024A0  EC6A  F015         	call	_ReadADC	;wreg free
  5407  0024A4  C022  F02F         	movff	?_ReadADC,??_ADC_Init
  5408  0024A8  C023  F030         	movff	?_ReadADC+1,??_ADC_Init+1
  5409  0024AC  0E00               	movlw	0
  5410  0024AE  BE30               	btfsc	(??_ADC_Init+1)& (0+255),7,c
  5411  0024B0  0EFF               	movlw	255
  5412  0024B2  6E31               	movwf	(??_ADC_Init+2)& (0+255),c
  5413  0024B4  6E32               	movwf	(??_ADC_Init+3)& (0+255),c
  5414  0024B6  502F               	movf	??_ADC_Init,w,c
  5415  0024B8  0100               	movlb	0	; () banked
  5416  0024BA  27D9               	addwf	ADC_Init@elec& (0+255),f,b
  5417  0024BC  5030               	movf	??_ADC_Init+1,w,c
  5418  0024BE  0100               	movlb	0	; () banked
  5419  0024C0  23DA               	addwfc	(ADC_Init@elec+1)& (0+255),f,b
  5420  0024C2  5031               	movf	??_ADC_Init+2,w,c
  5421  0024C4  0100               	movlb	0	; () banked
  5422  0024C6  23DB               	addwfc	(ADC_Init@elec+2)& (0+255),f,b
  5423  0024C8  5032               	movf	??_ADC_Init+3,w,c
  5424  0024CA  0100               	movlb	0	; () banked
  5425  0024CC  23DC               	addwfc	(ADC_Init@elec+3)& (0+255),f,b
  5426                           
  5427                           ; BSR set to: 0
  5428  0024CE  0E01               	movlw	1
  5429  0024D0  0100               	movlb	0	; () banked
  5430  0024D2  27DD               	addwf	ADC_Init@i& (0+255),f,b
  5431  0024D4  0E00               	movlw	0
  5432  0024D6  23DE               	addwfc	(ADC_Init@i+1)& (0+255),f,b
  5433  0024D8  23DF               	addwfc	(ADC_Init@i+2)& (0+255),f,b
  5434  0024DA  23E0               	addwfc	(ADC_Init@i+3)& (0+255),f,b
  5435  0024DC  D7CB               	goto	l3181
  5436                           
  5437                           ; BSR set to: 0
  5438  0024DE  D000               	goto	l3195
  5439  0024E0                     l3195:
  5440                           
  5441                           ; BSR set to: 0
  5442                           ;ADC.c: 51: }
  5443                           ;ADC.c: 52: Parameter[4].Value = elec/5;
  5444  0024E0  C0D9  F022         	movff	ADC_Init@elec,___lldiv@dividend
  5445  0024E4  C0DA  F023         	movff	ADC_Init@elec+1,___lldiv@dividend+1
  5446  0024E8  C0DB  F024         	movff	ADC_Init@elec+2,___lldiv@dividend+2
  5447  0024EC  C0DC  F025         	movff	ADC_Init@elec+3,___lldiv@dividend+3
  5448  0024F0  0E05               	movlw	5
  5449  0024F2  6E26               	movwf	___lldiv@divisor,c
  5450  0024F4  0E00               	movlw	0
  5451  0024F6  6E27               	movwf	___lldiv@divisor+1,c
  5452  0024F8  0E00               	movlw	0
  5453  0024FA  6E28               	movwf	___lldiv@divisor+2,c
  5454  0024FC  0E00               	movlw	0
  5455  0024FE  6E29               	movwf	___lldiv@divisor+3,c
  5456  002500  EC76  F013         	call	___lldiv	;wreg free
  5457  002504  C022  F120         	movff	?___lldiv,_Parameter+32
  5458  002508  C023  F121         	movff	?___lldiv+1,_Parameter+33
  5459  00250C  0012               	return		;funcret
  5460  00250E                     __end_of_ADC_Init:
  5461                           	opt stack 0
  5462                           tblptru	equ	0xFF8
  5463                           tblptrh	equ	0xFF7
  5464                           tblptrl	equ	0xFF6
  5465                           tablat	equ	0xFF5
  5466                           prodh	equ	0xFF4
  5467                           prodl	equ	0xFF3
  5468                           intcon	equ	0xFF2
  5469                           postinc0	equ	0xFEE
  5470                           wreg	equ	0xFE8
  5471                           postinc1	equ	0xFE6
  5472                           postdec1	equ	0xFE5
  5473                           fsr1h	equ	0xFE2
  5474                           fsr1l	equ	0xFE1
  5475                           indf2	equ	0xFDF
  5476                           postinc2	equ	0xFDE
  5477                           postdec2	equ	0xFDD
  5478                           fsr2h	equ	0xFDA
  5479                           fsr2l	equ	0xFD9
  5480                           status	equ	0xFD8
  5481                           
  5482 ;; *************** function ___lldiv *****************
  5483 ;; Defined at:
  5484 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v1.34\sources\common\lldiv.c"
  5485 ;; Parameters:    Size  Location     Type
  5486 ;;  dividend        4   33[COMRAM] unsigned long 
  5487 ;;  divisor         4   37[COMRAM] unsigned long 
  5488 ;; Auto vars:     Size  Location     Type
  5489 ;;  quotient        4   41[COMRAM] unsigned long 
  5490 ;;  counter         1   45[COMRAM] unsigned char 
  5491 ;; Return value:  Size  Location     Type
  5492 ;;                  4   33[COMRAM] unsigned long 
  5493 ;; Registers used:
  5494 ;;		wreg, status,2, status,0
  5495 ;; Tracked objects:
  5496 ;;		On entry : 0/0
  5497 ;;		On exit  : 0/0
  5498 ;;		Unchanged: 0/0
  5499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5500 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5501 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5503 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5504 ;;Total ram usage:       13 bytes
  5505 ;; Hardware stack levels used:    1
  5506 ;; Hardware stack levels required when called:    3
  5507 ;; This function calls:
  5508 ;;		Nothing
  5509 ;; This function is called by:
  5510 ;;		_ADC_Init
  5511 ;;		_ADC_ElecGet
  5512 ;; This function uses a non-reentrant model
  5513 ;;
  5514                           
  5515                           	psect	text19
  5516  0026EC                     __ptext19:
  5517                           	opt stack 0
  5518  0026EC                     ___lldiv:
  5519                           	opt stack 23
  5520                           
  5521                           ;incstack = 0
  5522  0026EC  0E00               	movlw	0
  5523  0026EE  6E2A               	movwf	___lldiv@quotient,c
  5524  0026F0  0E00               	movlw	0
  5525  0026F2  6E2B               	movwf	___lldiv@quotient+1,c
  5526  0026F4  0E00               	movlw	0
  5527  0026F6  6E2C               	movwf	___lldiv@quotient+2,c
  5528  0026F8  0E00               	movlw	0
  5529  0026FA  6E2D               	movwf	___lldiv@quotient+3,c
  5530  0026FC  5026               	movf	___lldiv@divisor,w,c
  5531  0026FE  1027               	iorwf	___lldiv@divisor+1,w,c
  5532  002700  1028               	iorwf	___lldiv@divisor+2,w,c
  5533  002702  1029               	iorwf	___lldiv@divisor+3,w,c
  5534  002704  B4D8               	btfsc	status,2,c
  5535  002706  D02F               	goto	l935
  5536  002708  0E01               	movlw	1
  5537  00270A  6E2E               	movwf	___lldiv@counter,c
  5538  00270C  D007               	goto	l2653
  5539  00270E                     l2651:
  5540  00270E  90D8               	bcf	status,0,c
  5541  002710  3626               	rlcf	___lldiv@divisor,f,c
  5542  002712  3627               	rlcf	___lldiv@divisor+1,f,c
  5543  002714  3628               	rlcf	___lldiv@divisor+2,f,c
  5544  002716  3629               	rlcf	___lldiv@divisor+3,f,c
  5545  002718  2A2E               	incf	___lldiv@counter,f,c
  5546  00271A  D000               	goto	l2653
  5547  00271C                     l2653:
  5548  00271C  BE29               	btfsc	___lldiv@divisor+3,7,c
  5549  00271E  D002               	goto	l2655
  5550  002720  D7F6               	goto	l2651
  5551  002722  D000               	goto	l2655
  5552  002724                     l2655:
  5553  002724  90D8               	bcf	status,0,c
  5554  002726  362A               	rlcf	___lldiv@quotient,f,c
  5555  002728  362B               	rlcf	___lldiv@quotient+1,f,c
  5556  00272A  362C               	rlcf	___lldiv@quotient+2,f,c
  5557  00272C  362D               	rlcf	___lldiv@quotient+3,f,c
  5558  00272E  5026               	movf	___lldiv@divisor,w,c
  5559  002730  5C22               	subwf	___lldiv@dividend,w,c
  5560  002732  5027               	movf	___lldiv@divisor+1,w,c
  5561  002734  5823               	subwfb	___lldiv@dividend+1,w,c
  5562  002736  5028               	movf	___lldiv@divisor+2,w,c
  5563  002738  5824               	subwfb	___lldiv@dividend+2,w,c
  5564  00273A  5029               	movf	___lldiv@divisor+3,w,c
  5565  00273C  5825               	subwfb	___lldiv@dividend+3,w,c
  5566  00273E  A0D8               	btfss	status,0,c
  5567  002740  D00A               	goto	l2663
  5568  002742  5026               	movf	___lldiv@divisor,w,c
  5569  002744  5E22               	subwf	___lldiv@dividend,f,c
  5570  002746  5027               	movf	___lldiv@divisor+1,w,c
  5571  002748  5A23               	subwfb	___lldiv@dividend+1,f,c
  5572  00274A  5028               	movf	___lldiv@divisor+2,w,c
  5573  00274C  5A24               	subwfb	___lldiv@dividend+2,f,c
  5574  00274E  5029               	movf	___lldiv@divisor+3,w,c
  5575  002750  5A25               	subwfb	___lldiv@dividend+3,f,c
  5576  002752  802A               	bsf	___lldiv@quotient,0,c
  5577  002754  D000               	goto	l2663
  5578  002756                     l2663:
  5579  002756  90D8               	bcf	status,0,c
  5580  002758  3229               	rrcf	___lldiv@divisor+3,f,c
  5581  00275A  3228               	rrcf	___lldiv@divisor+2,f,c
  5582  00275C  3227               	rrcf	___lldiv@divisor+1,f,c
  5583  00275E  3226               	rrcf	___lldiv@divisor,f,c
  5584  002760  2E2E               	decfsz	___lldiv@counter,f,c
  5585  002762  D7E0               	goto	l2655
  5586  002764  D000               	goto	l935
  5587  002766                     l935:
  5588  002766  C02A  F022         	movff	___lldiv@quotient,?___lldiv
  5589  00276A  C02B  F023         	movff	___lldiv@quotient+1,?___lldiv+1
  5590  00276E  C02C  F024         	movff	___lldiv@quotient+2,?___lldiv+2
  5591  002772  C02D  F025         	movff	___lldiv@quotient+3,?___lldiv+3
  5592  002776  0012               	return		;funcret
  5593  002778                     __end_of___lldiv:
  5594                           	opt stack 0
  5595                           tblptru	equ	0xFF8
  5596                           tblptrh	equ	0xFF7
  5597                           tblptrl	equ	0xFF6
  5598                           tablat	equ	0xFF5
  5599                           prodh	equ	0xFF4
  5600                           prodl	equ	0xFF3
  5601                           intcon	equ	0xFF2
  5602                           postinc0	equ	0xFEE
  5603                           wreg	equ	0xFE8
  5604                           postinc1	equ	0xFE6
  5605                           postdec1	equ	0xFE5
  5606                           fsr1h	equ	0xFE2
  5607                           fsr1l	equ	0xFE1
  5608                           indf2	equ	0xFDF
  5609                           postinc2	equ	0xFDE
  5610                           postdec2	equ	0xFDD
  5611                           fsr2h	equ	0xFDA
  5612                           fsr2l	equ	0xFD9
  5613                           status	equ	0xFD8
  5614                           
  5615 ;; *************** function _ReadADC *****************
  5616 ;; Defined at:
  5617 ;;		line 24 in file "D:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  5618 ;; Parameters:    Size  Location     Type
  5619 ;;		None
  5620 ;; Auto vars:     Size  Location     Type
  5621 ;;		None
  5622 ;; Return value:  Size  Location     Type
  5623 ;;                  2   33[COMRAM] int 
  5624 ;; Registers used:
  5625 ;;		wreg, status,2
  5626 ;; Tracked objects:
  5627 ;;		On entry : 0/0
  5628 ;;		On exit  : 0/0
  5629 ;;		Unchanged: 0/0
  5630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5631 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5633 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5634 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5635 ;;Total ram usage:        4 bytes
  5636 ;; Hardware stack levels used:    1
  5637 ;; Hardware stack levels required when called:    3
  5638 ;; This function calls:
  5639 ;;		Nothing
  5640 ;; This function is called by:
  5641 ;;		_ADC_Init
  5642 ;;		_ADC_ElecGet
  5643 ;; This function uses a non-reentrant model
  5644 ;;
  5645                           
  5646                           	psect	text20
  5647  002AD4                     __ptext20:
  5648                           	opt stack 0
  5649  002AD4                     _ReadADC:
  5650                           	opt stack 23
  5651                           
  5652                           ;incstack = 0
  5653  002AD4  50C4               	movf	4036,w,c	;volatile
  5654  002AD6  6E24               	movwf	??_ReadADC& (0+255),c
  5655  002AD8  50C3               	movf	4035,w,c	;volatile
  5656  002ADA  6E22               	movwf	?_ReadADC,c
  5657  002ADC  C024  F023         	movff	??_ReadADC,?_ReadADC+1
  5658  002AE0  0012               	return	
  5659  002AE2  0012               	return		;funcret
  5660  002AE4                     __end_of_ReadADC:
  5661                           	opt stack 0
  5662                           tblptru	equ	0xFF8
  5663                           tblptrh	equ	0xFF7
  5664                           tblptrl	equ	0xFF6
  5665                           tablat	equ	0xFF5
  5666                           prodh	equ	0xFF4
  5667                           prodl	equ	0xFF3
  5668                           intcon	equ	0xFF2
  5669                           postinc0	equ	0xFEE
  5670                           wreg	equ	0xFE8
  5671                           postinc1	equ	0xFE6
  5672                           postdec1	equ	0xFE5
  5673                           fsr1h	equ	0xFE2
  5674                           fsr1l	equ	0xFE1
  5675                           indf2	equ	0xFDF
  5676                           postinc2	equ	0xFDE
  5677                           postdec2	equ	0xFDD
  5678                           fsr2h	equ	0xFDA
  5679                           fsr2l	equ	0xFD9
  5680                           status	equ	0xFD8
  5681                           
  5682 ;; *************** function _OpenADC *****************
  5683 ;; Defined at:
  5684 ;;		line 305 in file "D:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  5685 ;; Parameters:    Size  Location     Type
  5686 ;;  config          1    wreg     unsigned char 
  5687 ;;  config2         1   33[COMRAM] unsigned char 
  5688 ;;  config3         1   34[COMRAM] unsigned char 
  5689 ;; Auto vars:     Size  Location     Type
  5690 ;;  config          1   37[COMRAM] unsigned char 
  5691 ;; Return value:  Size  Location     Type
  5692 ;;		None               void
  5693 ;; Registers used:
  5694 ;;		wreg, status,2, status,0
  5695 ;; Tracked objects:
  5696 ;;		On entry : 0/0
  5697 ;;		On exit  : 0/0
  5698 ;;		Unchanged: 0/0
  5699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5700 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5701 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5702 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5703 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5704 ;;Total ram usage:        5 bytes
  5705 ;; Hardware stack levels used:    1
  5706 ;; Hardware stack levels required when called:    3
  5707 ;; This function calls:
  5708 ;;		Nothing
  5709 ;; This function is called by:
  5710 ;;		_ADC_Init
  5711 ;; This function uses a non-reentrant model
  5712 ;;
  5713                           
  5714                           	psect	text21
  5715  00299C                     __ptext21:
  5716                           	opt stack 0
  5717  00299C                     _OpenADC:
  5718                           	opt stack 26
  5719                           
  5720                           ;incstack = 0
  5721                           ;OpenADC@config stored from wreg
  5722  00299C  6E26               	movwf	OpenADC@config,c
  5723  00299E  0E00               	movlw	0
  5724  0029A0  6EC2               	movwf	4034,c	;volatile
  5725  0029A2  0E00               	movlw	0
  5726  0029A4  6EC1               	movwf	4033,c	;volatile
  5727  0029A6  0E00               	movlw	0
  5728  0029A8  6EC0               	movwf	4032,c	;volatile
  5729  0029AA  5022               	movf	OpenADC@config2,w,c
  5730  0029AC  0B7C               	andlw	124
  5731  0029AE  6EC2               	movwf	4034,c	;volatile
  5732  0029B0  C023  FFC1         	movff	OpenADC@config3,4033	;volatile
  5733  0029B4  C026  F024         	movff	OpenADC@config,??_OpenADC
  5734  0029B8  90D8               	bcf	status,0,c
  5735  0029BA  3624               	rlcf	??_OpenADC,f,c
  5736  0029BC  90D8               	bcf	status,0,c
  5737  0029BE  3624               	rlcf	??_OpenADC,f,c
  5738  0029C0  0E38               	movlw	56
  5739  0029C2  1624               	andwf	??_OpenADC,f,c
  5740  0029C4  C026  F025         	movff	OpenADC@config,??_OpenADC+1
  5741  0029C8  3A25               	swapf	??_OpenADC+1,f,c
  5742  0029CA  0E0F               	movlw	15
  5743  0029CC  1625               	andwf	??_OpenADC+1,f,c
  5744  0029CE  0E07               	movlw	7
  5745  0029D0  1625               	andwf	??_OpenADC+1,f,c
  5746  0029D2  5026               	movf	OpenADC@config,w,c
  5747  0029D4  0B80               	andlw	128
  5748  0029D6  1025               	iorwf	??_OpenADC+1,w,c
  5749  0029D8  1024               	iorwf	??_OpenADC,w,c
  5750  0029DA  6EC0               	movwf	4032,c	;volatile
  5751  0029DC  AE22               	btfss	OpenADC@config2,7,c
  5752  0029DE  D003               	goto	l447
  5753  0029E0  9C9E               	bcf	3998,6,c	;volatile
  5754  0029E2  8C9D               	bsf	3997,6,c	;volatile
  5755  0029E4  8CF2               	bsf	intcon,6,c	;volatile
  5756  0029E6                     l447:
  5757  0029E6  80C2               	bsf	4034,0,c	;volatile
  5758  0029E8  0012               	return		;funcret
  5759  0029EA                     __end_of_OpenADC:
  5760                           	opt stack 0
  5761                           tblptru	equ	0xFF8
  5762                           tblptrh	equ	0xFF7
  5763                           tblptrl	equ	0xFF6
  5764                           tablat	equ	0xFF5
  5765                           prodh	equ	0xFF4
  5766                           prodl	equ	0xFF3
  5767                           intcon	equ	0xFF2
  5768                           postinc0	equ	0xFEE
  5769                           wreg	equ	0xFE8
  5770                           postinc1	equ	0xFE6
  5771                           postdec1	equ	0xFE5
  5772                           fsr1h	equ	0xFE2
  5773                           fsr1l	equ	0xFE1
  5774                           indf2	equ	0xFDF
  5775                           postinc2	equ	0xFDE
  5776                           postdec2	equ	0xFDD
  5777                           fsr2h	equ	0xFDA
  5778                           fsr2l	equ	0xFD9
  5779                           status	equ	0xFD8
  5780                           
  5781 ;; *************** function _ConvertADC *****************
  5782 ;; Defined at:
  5783 ;;		line 22 in file "D:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  5784 ;; Parameters:    Size  Location     Type
  5785 ;;		None
  5786 ;; Auto vars:     Size  Location     Type
  5787 ;;		None
  5788 ;; Return value:  Size  Location     Type
  5789 ;;		None               void
  5790 ;; Registers used:
  5791 ;;		None
  5792 ;; Tracked objects:
  5793 ;;		On entry : 0/0
  5794 ;;		On exit  : 0/0
  5795 ;;		Unchanged: 0/0
  5796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5801 ;;Total ram usage:        0 bytes
  5802 ;; Hardware stack levels used:    1
  5803 ;; Hardware stack levels required when called:    3
  5804 ;; This function calls:
  5805 ;;		Nothing
  5806 ;; This function is called by:
  5807 ;;		_ADC_Init
  5808 ;;		_ADC_ElecGet
  5809 ;; This function uses a non-reentrant model
  5810 ;;
  5811                           
  5812                           	psect	text22
  5813  002AF2                     __ptext22:
  5814                           	opt stack 0
  5815  002AF2                     _ConvertADC:
  5816                           	opt stack 23
  5817                           
  5818                           ;incstack = 0
  5819  002AF2  82C2               	bsf	4034,1,c	;volatile
  5820  002AF4  0012               	return		;funcret
  5821  002AF6                     __end_of_ConvertADC:
  5822                           	opt stack 0
  5823                           tblptru	equ	0xFF8
  5824                           tblptrh	equ	0xFF7
  5825                           tblptrl	equ	0xFF6
  5826                           tablat	equ	0xFF5
  5827                           prodh	equ	0xFF4
  5828                           prodl	equ	0xFF3
  5829                           intcon	equ	0xFF2
  5830                           postinc0	equ	0xFEE
  5831                           wreg	equ	0xFE8
  5832                           postinc1	equ	0xFE6
  5833                           postdec1	equ	0xFE5
  5834                           fsr1h	equ	0xFE2
  5835                           fsr1l	equ	0xFE1
  5836                           indf2	equ	0xFDF
  5837                           postinc2	equ	0xFDE
  5838                           postdec2	equ	0xFDD
  5839                           fsr2h	equ	0xFDA
  5840                           fsr2l	equ	0xFD9
  5841                           status	equ	0xFD8
  5842                           
  5843 ;; *************** function _BusyADC *****************
  5844 ;; Defined at:
  5845 ;;		line 26 in file "D:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  5846 ;; Parameters:    Size  Location     Type
  5847 ;;		None
  5848 ;; Auto vars:     Size  Location     Type
  5849 ;;		None
  5850 ;; Return value:  Size  Location     Type
  5851 ;;                  1    wreg      unsigned char 
  5852 ;; Registers used:
  5853 ;;		wreg
  5854 ;; Tracked objects:
  5855 ;;		On entry : 0/0
  5856 ;;		On exit  : 0/0
  5857 ;;		Unchanged: 0/0
  5858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5863 ;;Total ram usage:        0 bytes
  5864 ;; Hardware stack levels used:    1
  5865 ;; Hardware stack levels required when called:    3
  5866 ;; This function calls:
  5867 ;;		Nothing
  5868 ;; This function is called by:
  5869 ;;		_ADC_Init
  5870 ;;		_ADC_ElecGet
  5871 ;; This function uses a non-reentrant model
  5872 ;;
  5873                           
  5874                           	psect	text23
  5875  002AE4                     __ptext23:
  5876                           	opt stack 0
  5877  002AE4                     _BusyADC:
  5878                           	opt stack 23
  5879                           
  5880                           ;incstack = 0
  5881  002AE4  A2C2               	btfss	4034,1,c	;volatile
  5882  002AE6  D002               	goto	u3620
  5883  002AE8  0E01               	movlw	1
  5884  002AEA  0012               	return	
  5885  002AEC                     u3620:
  5886  002AEC  0E00               	movlw	0
  5887  002AEE  0012               	return	
  5888  002AF0  0012               	return		;funcret
  5889  002AF2                     __end_of_BusyADC:
  5890                           	opt stack 0
  5891                           tblptru	equ	0xFF8
  5892                           tblptrh	equ	0xFF7
  5893                           tblptrl	equ	0xFF6
  5894                           tablat	equ	0xFF5
  5895                           prodh	equ	0xFF4
  5896                           prodl	equ	0xFF3
  5897                           intcon	equ	0xFF2
  5898                           postinc0	equ	0xFEE
  5899                           wreg	equ	0xFE8
  5900                           postinc1	equ	0xFE6
  5901                           postdec1	equ	0xFE5
  5902                           fsr1h	equ	0xFE2
  5903                           fsr1l	equ	0xFE1
  5904                           indf2	equ	0xFDF
  5905                           postinc2	equ	0xFDE
  5906                           postdec2	equ	0xFDD
  5907                           fsr2h	equ	0xFDA
  5908                           fsr2l	equ	0xFD9
  5909                           status	equ	0xFD8
  5910                           
  5911 ;; *************** function _ISR *****************
  5912 ;; Defined at:
  5913 ;;		line 33 in file "nbproject/private/pic18f67xx_it.c"
  5914 ;; Parameters:    Size  Location     Type
  5915 ;;		None
  5916 ;; Auto vars:     Size  Location     Type
  5917 ;;		None
  5918 ;; Return value:  Size  Location     Type
  5919 ;;		None               void
  5920 ;; Registers used:
  5921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5922 ;; Tracked objects:
  5923 ;;		On entry : 0/0
  5924 ;;		On exit  : 0/0
  5925 ;;		Unchanged: 0/0
  5926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5929 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5930 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5931 ;;Total ram usage:       14 bytes
  5932 ;; Hardware stack levels used:    1
  5933 ;; Hardware stack levels required when called:    2
  5934 ;; This function calls:
  5935 ;;		_Key_State_Sweep
  5936 ;;		i2_WriteTimer0
  5937 ;; This function is called by:
  5938 ;;		Interrupt level 2
  5939 ;; This function uses a non-reentrant model
  5940 ;;
  5941                           
  5942                           	psect	intcode
  5943  000008                     __pintcode:
  5944                           	opt stack 0
  5945  000008                     _ISR:
  5946                           	opt stack 23
  5947                           
  5948                           ;incstack = 0
  5949  000008  CFFA F014          	movff	pclath,??_ISR
  5950  00000C  CFFB F015          	movff	pclatu,??_ISR+1
  5951  000010  CFE9 F016          	movff	fsr0l,??_ISR+2
  5952  000014  CFEA F017          	movff	fsr0h,??_ISR+3
  5953  000018  CFE1 F018          	movff	fsr1l,??_ISR+4
  5954  00001C  CFE2 F019          	movff	fsr1h,??_ISR+5
  5955  000020  CFD9 F01A          	movff	fsr2l,??_ISR+6
  5956  000024  CFDA F01B          	movff	fsr2h,??_ISR+7
  5957  000028  CFF3 F01C          	movff	prodl,??_ISR+8
  5958  00002C  CFF4 F01D          	movff	prodh,??_ISR+9
  5959  000030  CFF6 F01E          	movff	tblptrl,??_ISR+10
  5960  000034  CFF7 F01F          	movff	tblptrh,??_ISR+11
  5961  000038  CFF8 F020          	movff	tblptru,??_ISR+12
  5962  00003C  CFF5 F021          	movff	tablat,??_ISR+13
  5963                           
  5964                           ;pic18f67xx_it.c: 35: if(TMR0IF == 1)
  5965  000040  A4F2               	btfss	intcon,2,c	;volatile
  5966  000042  D016               	goto	i2l398
  5967                           
  5968                           ;pic18f67xx_it.c: 36: {
  5969                           ;pic18f67xx_it.c: 37: TMR0IF = 0;
  5970  000044  94F2               	bcf	intcon,2,c	;volatile
  5971                           
  5972                           ;pic18f67xx_it.c: 38: WriteTimer0(65536-50000);
  5973  000046  0E3C               	movlw	60
  5974  000048  6E02               	movwf	i2WriteTimer0@timer0+1,c
  5975  00004A  0EB0               	movlw	176
  5976  00004C  6E01               	movwf	i2WriteTimer0@timer0,c
  5977  00004E  EC61  F015         	call	i2_WriteTimer0	;wreg free
  5978                           
  5979                           ;pic18f67xx_it.c: 39: if(Spacing_Count)
  5980  000052  5035               	movf	_Spacing_Count,w,c
  5981  000054  1036               	iorwf	_Spacing_Count+1,w,c
  5982  000056  B4D8               	btfsc	status,2,c
  5983  000058  D004               	goto	i2l2613
  5984                           
  5985                           ;pic18f67xx_it.c: 40: Spacing_Count--;
  5986  00005A  0635               	decf	_Spacing_Count,f,c
  5987  00005C  A0D8               	btfss	status,0,c
  5988  00005E  0636               	decf	_Spacing_Count+1,f,c
  5989  000060  D000               	goto	i2l2613
  5990  000062                     i2l2613:
  5991                           
  5992                           ;pic18f67xx_it.c: 41: Key_State_Sweep(&Key_StateMachine_Local);
  5993  000062  0E37               	movlw	low _Key_StateMachine_Local
  5994  000064  6E08               	movwf	Key_State_Sweep@Key_State,c
  5995  000066  0E00               	movlw	high _Key_StateMachine_Local
  5996  000068  6E09               	movwf	Key_State_Sweep@Key_State+1,c
  5997  00006A  ECED  F00B         	call	_Key_State_Sweep	;wreg free
  5998                           
  5999                           ;pic18f67xx_it.c: 42: }
  6000  00006E  D004               	goto	i2l402
  6001  000070                     i2l398:
  6002                           
  6003                           ;pic18f67xx_it.c: 43: else if(ADIF == 1)
  6004  000070  AC9E               	btfss	3998,6,c	;volatile
  6005  000072  D002               	goto	i2l402
  6006                           
  6007                           ;pic18f67xx_it.c: 44: {
  6008                           ;pic18f67xx_it.c: 45: ADIF = 0;
  6009  000074  9C9E               	bcf	3998,6,c	;volatile
  6010  000076  D000               	goto	i2l402
  6011  000078                     i2l402:
  6012  000078  C021  FFF5         	movff	??_ISR+13,tablat
  6013  00007C  C020  FFF8         	movff	??_ISR+12,tblptru
  6014  000080  C01F  FFF7         	movff	??_ISR+11,tblptrh
  6015  000084  C01E  FFF6         	movff	??_ISR+10,tblptrl
  6016  000088  C01D  FFF4         	movff	??_ISR+9,prodh
  6017  00008C  C01C  FFF3         	movff	??_ISR+8,prodl
  6018  000090  C01B  FFDA         	movff	??_ISR+7,fsr2h
  6019  000094  C01A  FFD9         	movff	??_ISR+6,fsr2l
  6020  000098  C019  FFE2         	movff	??_ISR+5,fsr1h
  6021  00009C  C018  FFE1         	movff	??_ISR+4,fsr1l
  6022  0000A0  C017  FFEA         	movff	??_ISR+3,fsr0h
  6023  0000A4  C016  FFE9         	movff	??_ISR+2,fsr0l
  6024  0000A8  C015  FFFB         	movff	??_ISR+1,pclatu
  6025  0000AC  C014  FFFA         	movff	??_ISR,pclath
  6026  0000B0  0011               	retfie		f
  6027  0000B2                     __end_of_ISR:
  6028                           	opt stack 0
  6029                           pclatu	equ	0xFFB
  6030                           pclath	equ	0xFFA
  6031                           tblptru	equ	0xFF8
  6032                           tblptrh	equ	0xFF7
  6033                           tblptrl	equ	0xFF6
  6034                           tablat	equ	0xFF5
  6035                           prodh	equ	0xFF4
  6036                           prodl	equ	0xFF3
  6037                           intcon	equ	0xFF2
  6038                           postinc0	equ	0xFEE
  6039                           fsr0h	equ	0xFEA
  6040                           fsr0l	equ	0xFE9
  6041                           wreg	equ	0xFE8
  6042                           postinc1	equ	0xFE6
  6043                           postdec1	equ	0xFE5
  6044                           fsr1h	equ	0xFE2
  6045                           fsr1l	equ	0xFE1
  6046                           indf2	equ	0xFDF
  6047                           postinc2	equ	0xFDE
  6048                           postdec2	equ	0xFDD
  6049                           fsr2h	equ	0xFDA
  6050                           fsr2l	equ	0xFD9
  6051                           status	equ	0xFD8
  6052                           
  6053 ;; *************** function i2_WriteTimer0 *****************
  6054 ;; Defined at:
  6055 ;;		line 16 in file "D:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
  6056 ;; Parameters:    Size  Location     Type
  6057 ;;  timer0          2    0[COMRAM] unsigned int 
  6058 ;; Auto vars:     Size  Location     Type
  6059 ;;  WriteTimer0     2    2[COMRAM] struct Timers
  6060 ;; Return value:  Size  Location     Type
  6061 ;;		None               void
  6062 ;; Registers used:
  6063 ;;		None
  6064 ;; Tracked objects:
  6065 ;;		On entry : 0/0
  6066 ;;		On exit  : 0/0
  6067 ;;		Unchanged: 0/0
  6068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6069 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6070 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6072 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6073 ;;Total ram usage:        4 bytes
  6074 ;; Hardware stack levels used:    1
  6075 ;; This function calls:
  6076 ;;		Nothing
  6077 ;; This function is called by:
  6078 ;;		_ISR
  6079 ;; This function uses a non-reentrant model
  6080 ;;
  6081                           
  6082                           	psect	text25
  6083  002AC2                     __ptext25:
  6084                           	opt stack 0
  6085  002AC2                     i2_WriteTimer0:
  6086                           	opt stack 24
  6087                           
  6088                           ;incstack = 0
  6089  002AC2  C001  F003         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
  6090  002AC6  C002  F004         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
  6091  002ACA  C004  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
  6092  002ACE  C003  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
  6093  002AD2  0012               	return		;funcret
  6094  002AD4                     __end_ofi2_WriteTimer0:
  6095                           	opt stack 0
  6096                           pclatu	equ	0xFFB
  6097                           pclath	equ	0xFFA
  6098                           tblptru	equ	0xFF8
  6099                           tblptrh	equ	0xFF7
  6100                           tblptrl	equ	0xFF6
  6101                           tablat	equ	0xFF5
  6102                           prodh	equ	0xFF4
  6103                           prodl	equ	0xFF3
  6104                           intcon	equ	0xFF2
  6105                           postinc0	equ	0xFEE
  6106                           fsr0h	equ	0xFEA
  6107                           fsr0l	equ	0xFE9
  6108                           wreg	equ	0xFE8
  6109                           postinc1	equ	0xFE6
  6110                           postdec1	equ	0xFE5
  6111                           fsr1h	equ	0xFE2
  6112                           fsr1l	equ	0xFE1
  6113                           indf2	equ	0xFDF
  6114                           postinc2	equ	0xFDE
  6115                           postdec2	equ	0xFDD
  6116                           fsr2h	equ	0xFDA
  6117                           fsr2l	equ	0xFD9
  6118                           status	equ	0xFD8
  6119                           
  6120 ;; *************** function _Key_State_Sweep *****************
  6121 ;; Defined at:
  6122 ;;		line 33 in file "nbproject/private/KeyState.c"
  6123 ;; Parameters:    Size  Location     Type
  6124 ;;  Key_State       2    7[COMRAM] PTR volatile struct .
  6125 ;;		 -> Key_StateMachine_Local(8), 
  6126 ;; Auto vars:     Size  Location     Type
  6127 ;;		None
  6128 ;; Return value:  Size  Location     Type
  6129 ;;		None               void
  6130 ;; Registers used:
  6131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6132 ;; Tracked objects:
  6133 ;;		On entry : 0/0
  6134 ;;		On exit  : 0/0
  6135 ;;		Unchanged: 0/0
  6136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6137 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6139 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6140 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6141 ;;Total ram usage:       12 bytes
  6142 ;; Hardware stack levels used:    1
  6143 ;; Hardware stack levels required when called:    1
  6144 ;; This function calls:
  6145 ;;		_Key_Num_Get
  6146 ;; This function is called by:
  6147 ;;		_ISR
  6148 ;; This function uses a non-reentrant model
  6149 ;;
  6150                           
  6151                           	psect	text26
  6152  0017DA                     __ptext26:
  6153                           	opt stack 0
  6154  0017DA                     _Key_State_Sweep:
  6155                           	opt stack 23
  6156                           
  6157                           ;KeyState.c: 35: Key_State->KeyCode_Pre = ((uint16_t)PORTCbits.RC0<<0)
  6158                           ;KeyState.c: 36: | ((uint16_t)PORTCbits.RC1<<1)
  6159                           ;KeyState.c: 37: | ((uint16_t)PORTAbits.RA4<<2)
  6160                           ;KeyState.c: 38: | ((uint16_t)PORTAbits.RA5<<3)|0xfff0;
  6161                           
  6162                           ;incstack = 0
  6163  0017DA  0EF0               	movlw	240
  6164  0017DC  6E0A               	movwf	??_Key_State_Sweep& (0+255),c
  6165  0017DE  0EFF               	movlw	255
  6166  0017E0  6E0B               	movwf	(??_Key_State_Sweep+1)& (0+255),c
  6167  0017E2  AA80               	btfss	3968,5,c	;volatile
  6168  0017E4  D002               	goto	i2u329_40
  6169  0017E6  0E01               	movlw	1
  6170  0017E8  D001               	goto	i2u330_40
  6171  0017EA                     i2u329_40:
  6172  0017EA  0E00               	movlw	0
  6173  0017EC                     i2u330_40:
  6174  0017EC  6E0C               	movwf	(??_Key_State_Sweep+2)& (0+255),c
  6175  0017EE  6A0D               	clrf	(??_Key_State_Sweep+3)& (0+255),c
  6176  0017F0  90D8               	bcf	status,0,c
  6177  0017F2  360C               	rlcf	??_Key_State_Sweep+2,f,c
  6178  0017F4  360D               	rlcf	??_Key_State_Sweep+3,f,c
  6179  0017F6  90D8               	bcf	status,0,c
  6180  0017F8  360C               	rlcf	??_Key_State_Sweep+2,f,c
  6181  0017FA  360D               	rlcf	??_Key_State_Sweep+3,f,c
  6182  0017FC  90D8               	bcf	status,0,c
  6183  0017FE  360C               	rlcf	??_Key_State_Sweep+2,f,c
  6184  001800  360D               	rlcf	??_Key_State_Sweep+3,f,c
  6185  001802  A880               	btfss	3968,4,c	;volatile
  6186  001804  D002               	goto	i2u331_40
  6187  001806  0E01               	movlw	1
  6188  001808  D001               	goto	i2u332_40
  6189  00180A                     i2u331_40:
  6190  00180A  0E00               	movlw	0
  6191  00180C                     i2u332_40:
  6192  00180C  6E0E               	movwf	(??_Key_State_Sweep+4)& (0+255),c
  6193  00180E  6A0F               	clrf	(??_Key_State_Sweep+5)& (0+255),c
  6194  001810  90D8               	bcf	status,0,c
  6195  001812  360E               	rlcf	??_Key_State_Sweep+4,f,c
  6196  001814  360F               	rlcf	??_Key_State_Sweep+5,f,c
  6197  001816  90D8               	bcf	status,0,c
  6198  001818  360E               	rlcf	??_Key_State_Sweep+4,f,c
  6199  00181A  360F               	rlcf	??_Key_State_Sweep+5,f,c
  6200  00181C  A282               	btfss	3970,1,c	;volatile
  6201  00181E  D002               	goto	i2u333_40
  6202  001820  0E01               	movlw	1
  6203  001822  D001               	goto	i2u334_40
  6204  001824                     i2u333_40:
  6205  001824  0E00               	movlw	0
  6206  001826                     i2u334_40:
  6207  001826  6E10               	movwf	(??_Key_State_Sweep+6)& (0+255),c
  6208  001828  6A11               	clrf	(??_Key_State_Sweep+7)& (0+255),c
  6209  00182A  90D8               	bcf	status,0,c
  6210  00182C  3610               	rlcf	??_Key_State_Sweep+6,f,c
  6211  00182E  3611               	rlcf	??_Key_State_Sweep+7,f,c
  6212  001830  A082               	btfss	3970,0,c	;volatile
  6213  001832  D002               	goto	i2u335_40
  6214  001834  0E01               	movlw	1
  6215  001836  D001               	goto	i2u336_40
  6216  001838                     i2u335_40:
  6217  001838  0E00               	movlw	0
  6218  00183A                     i2u336_40:
  6219  00183A  6E12               	movwf	(??_Key_State_Sweep+8)& (0+255),c
  6220  00183C  6A13               	clrf	(??_Key_State_Sweep+9)& (0+255),c
  6221  00183E  5010               	movf	??_Key_State_Sweep+6,w,c
  6222  001840  1212               	iorwf	??_Key_State_Sweep+8,f,c
  6223  001842  5011               	movf	??_Key_State_Sweep+7,w,c
  6224  001844  1213               	iorwf	??_Key_State_Sweep+9,f,c
  6225  001846  500E               	movf	??_Key_State_Sweep+4,w,c
  6226  001848  1212               	iorwf	??_Key_State_Sweep+8,f,c
  6227  00184A  500F               	movf	??_Key_State_Sweep+5,w,c
  6228  00184C  1213               	iorwf	??_Key_State_Sweep+9,f,c
  6229  00184E  500C               	movf	??_Key_State_Sweep+2,w,c
  6230  001850  1212               	iorwf	??_Key_State_Sweep+8,f,c
  6231  001852  500D               	movf	??_Key_State_Sweep+3,w,c
  6232  001854  1213               	iorwf	??_Key_State_Sweep+9,f,c
  6233  001856  500A               	movf	??_Key_State_Sweep,w,c
  6234  001858  1212               	iorwf	??_Key_State_Sweep+8,f,c
  6235  00185A  500B               	movf	??_Key_State_Sweep+1,w,c
  6236  00185C  1213               	iorwf	??_Key_State_Sweep+9,f,c
  6237  00185E  EE20 F002          	lfsr	2,2
  6238  001862  5008               	movf	Key_State_Sweep@Key_State,w,c
  6239  001864  26D9               	addwf	fsr2l,f,c
  6240  001866  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6241  001868  22DA               	addwfc	fsr2h,f,c
  6242  00186A  C012  FFDE         	movff	??_Key_State_Sweep+8,postinc2
  6243  00186E  C013  FFDD         	movff	??_Key_State_Sweep+9,postdec2
  6244                           
  6245                           ;KeyState.c: 39: switch(Key_State->State_Flag)
  6246  001872  D195               	goto	i2l2593
  6247  001874                     i2l2521:
  6248                           
  6249                           ;KeyState.c: 42: if(Key_State->KeyCode_Pre != 0xffff)
  6250  001874  EE20 F002          	lfsr	2,2
  6251  001878  5008               	movf	Key_State_Sweep@Key_State,w,c
  6252  00187A  26D9               	addwf	fsr2l,f,c
  6253  00187C  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6254  00187E  22DA               	addwfc	fsr2h,f,c
  6255  001880  28DE               	incf	postinc2,w,c
  6256  001882  E103               	bnz	i2u337_40
  6257  001884  28DE               	incf	postinc2,w,c
  6258  001886  B4D8               	btfsc	status,2,c
  6259  001888  D061               	goto	i2l2531
  6260  00188A                     i2u337_40:
  6261                           
  6262                           ;KeyState.c: 43: {
  6263                           ;KeyState.c: 44: Key_State->State_Flag = 1;
  6264  00188A  C008  FFD9         	movff	Key_State_Sweep@Key_State,fsr2l
  6265  00188E  C009  FFDA         	movff	Key_State_Sweep@Key_State+1,fsr2h
  6266  001892  0E01               	movlw	1
  6267  001894  6EDF               	movwf	indf2,c
  6268                           
  6269                           ;KeyState.c: 45: Key_State->KeyCode_Bef = ((uint16_t)PORTCbits.RC0<<0)
  6270                           ;KeyState.c: 46: | ((uint16_t)PORTCbits.RC1<<1)
  6271                           ;KeyState.c: 47: | ((uint16_t)PORTAbits.RA4<<2)
  6272                           ;KeyState.c: 48: | ((uint16_t)PORTAbits.RA5<<3)|0xfff0;
  6273  001896  0EF0               	movlw	240
  6274  001898  6E0A               	movwf	??_Key_State_Sweep& (0+255),c
  6275  00189A  0EFF               	movlw	255
  6276  00189C  6E0B               	movwf	(??_Key_State_Sweep+1)& (0+255),c
  6277  00189E  AA80               	btfss	3968,5,c	;volatile
  6278  0018A0  D002               	goto	i2u338_40
  6279  0018A2  0E01               	movlw	1
  6280  0018A4  D001               	goto	i2u339_40
  6281  0018A6                     i2u338_40:
  6282  0018A6  0E00               	movlw	0
  6283  0018A8                     i2u339_40:
  6284  0018A8  6E0C               	movwf	(??_Key_State_Sweep+2)& (0+255),c
  6285  0018AA  6A0D               	clrf	(??_Key_State_Sweep+3)& (0+255),c
  6286  0018AC  90D8               	bcf	status,0,c
  6287  0018AE  360C               	rlcf	??_Key_State_Sweep+2,f,c
  6288  0018B0  360D               	rlcf	??_Key_State_Sweep+3,f,c
  6289  0018B2  90D8               	bcf	status,0,c
  6290  0018B4  360C               	rlcf	??_Key_State_Sweep+2,f,c
  6291  0018B6  360D               	rlcf	??_Key_State_Sweep+3,f,c
  6292  0018B8  90D8               	bcf	status,0,c
  6293  0018BA  360C               	rlcf	??_Key_State_Sweep+2,f,c
  6294  0018BC  360D               	rlcf	??_Key_State_Sweep+3,f,c
  6295  0018BE  A880               	btfss	3968,4,c	;volatile
  6296  0018C0  D002               	goto	i2u340_40
  6297  0018C2  0E01               	movlw	1
  6298  0018C4  D001               	goto	i2u341_40
  6299  0018C6                     i2u340_40:
  6300  0018C6  0E00               	movlw	0
  6301  0018C8                     i2u341_40:
  6302  0018C8  6E0E               	movwf	(??_Key_State_Sweep+4)& (0+255),c
  6303  0018CA  6A0F               	clrf	(??_Key_State_Sweep+5)& (0+255),c
  6304  0018CC  90D8               	bcf	status,0,c
  6305  0018CE  360E               	rlcf	??_Key_State_Sweep+4,f,c
  6306  0018D0  360F               	rlcf	??_Key_State_Sweep+5,f,c
  6307  0018D2  90D8               	bcf	status,0,c
  6308  0018D4  360E               	rlcf	??_Key_State_Sweep+4,f,c
  6309  0018D6  360F               	rlcf	??_Key_State_Sweep+5,f,c
  6310  0018D8  A282               	btfss	3970,1,c	;volatile
  6311  0018DA  D002               	goto	i2u342_40
  6312  0018DC  0E01               	movlw	1
  6313  0018DE  D001               	goto	i2u343_40
  6314  0018E0                     i2u342_40:
  6315  0018E0  0E00               	movlw	0
  6316  0018E2                     i2u343_40:
  6317  0018E2  6E10               	movwf	(??_Key_State_Sweep+6)& (0+255),c
  6318  0018E4  6A11               	clrf	(??_Key_State_Sweep+7)& (0+255),c
  6319  0018E6  90D8               	bcf	status,0,c
  6320  0018E8  3610               	rlcf	??_Key_State_Sweep+6,f,c
  6321  0018EA  3611               	rlcf	??_Key_State_Sweep+7,f,c
  6322  0018EC  A082               	btfss	3970,0,c	;volatile
  6323  0018EE  D002               	goto	i2u344_40
  6324  0018F0  0E01               	movlw	1
  6325  0018F2  D001               	goto	i2u345_40
  6326  0018F4                     i2u344_40:
  6327  0018F4  0E00               	movlw	0
  6328  0018F6                     i2u345_40:
  6329  0018F6  6E12               	movwf	(??_Key_State_Sweep+8)& (0+255),c
  6330  0018F8  6A13               	clrf	(??_Key_State_Sweep+9)& (0+255),c
  6331  0018FA  5010               	movf	??_Key_State_Sweep+6,w,c
  6332  0018FC  1212               	iorwf	??_Key_State_Sweep+8,f,c
  6333  0018FE  5011               	movf	??_Key_State_Sweep+7,w,c
  6334  001900  1213               	iorwf	??_Key_State_Sweep+9,f,c
  6335  001902  500E               	movf	??_Key_State_Sweep+4,w,c
  6336  001904  1212               	iorwf	??_Key_State_Sweep+8,f,c
  6337  001906  500F               	movf	??_Key_State_Sweep+5,w,c
  6338  001908  1213               	iorwf	??_Key_State_Sweep+9,f,c
  6339  00190A  500C               	movf	??_Key_State_Sweep+2,w,c
  6340  00190C  1212               	iorwf	??_Key_State_Sweep+8,f,c
  6341  00190E  500D               	movf	??_Key_State_Sweep+3,w,c
  6342  001910  1213               	iorwf	??_Key_State_Sweep+9,f,c
  6343  001912  500A               	movf	??_Key_State_Sweep,w,c
  6344  001914  1212               	iorwf	??_Key_State_Sweep+8,f,c
  6345  001916  500B               	movf	??_Key_State_Sweep+1,w,c
  6346  001918  1213               	iorwf	??_Key_State_Sweep+9,f,c
  6347  00191A  EE20 F004          	lfsr	2,4
  6348  00191E  5008               	movf	Key_State_Sweep@Key_State,w,c
  6349  001920  26D9               	addwf	fsr2l,f,c
  6350  001922  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6351  001924  22DA               	addwfc	fsr2h,f,c
  6352  001926  C012  FFDE         	movff	??_Key_State_Sweep+8,postinc2
  6353  00192A  C013  FFDD         	movff	??_Key_State_Sweep+9,postdec2
  6354                           
  6355                           ;KeyState.c: 49: Key_Num_Get(Key_State);
  6356  00192E  C008  F001         	movff	Key_State_Sweep@Key_State,Key_Num_Get@Key_State
  6357  001932  C009  F002         	movff	Key_State_Sweep@Key_State+1,Key_Num_Get@Key_State+1
  6358  001936  ECBC  F013         	call	_Key_Num_Get	;wreg free
  6359                           
  6360                           ;KeyState.c: 50: Key_State->Key_Mode = 0;
  6361  00193A  EE20 F001          	lfsr	2,1
  6362  00193E  5008               	movf	Key_State_Sweep@Key_State,w,c
  6363  001940  26D9               	addwf	fsr2l,f,c
  6364  001942  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6365  001944  22DA               	addwfc	fsr2h,f,c
  6366  001946  0E00               	movlw	0
  6367  001948  6EDF               	movwf	indf2,c
  6368                           
  6369                           ;KeyState.c: 51: }
  6370  00194A  0012               	return	
  6371  00194C                     i2l2531:
  6372                           
  6373                           ;KeyState.c: 52: else
  6374                           ;KeyState.c: 53: {
  6375                           ;KeyState.c: 54: Key_State->State_Flag = 0;
  6376  00194C  C008  FFD9         	movff	Key_State_Sweep@Key_State,fsr2l
  6377  001950  C009  FFDA         	movff	Key_State_Sweep@Key_State+1,fsr2h
  6378  001954  0E00               	movlw	0
  6379  001956  6EDF               	movwf	indf2,c
  6380                           
  6381                           ;KeyState.c: 55: Key_State->Key_Mode = 0;
  6382  001958  EE20 F001          	lfsr	2,1
  6383  00195C  5008               	movf	Key_State_Sweep@Key_State,w,c
  6384  00195E  26D9               	addwf	fsr2l,f,c
  6385  001960  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6386  001962  22DA               	addwfc	fsr2h,f,c
  6387  001964  0E00               	movlw	0
  6388  001966  6EDF               	movwf	indf2,c
  6389                           
  6390                           ;KeyState.c: 56: }
  6391                           ;KeyState.c: 57: break;
  6392  001968  0012               	return	
  6393  00196A                     i2l2535:
  6394                           
  6395                           ;KeyState.c: 60: if((Key_State->KeyCode_Pre != 0xffff) &&
  6396                           ;KeyState.c: 61: (Key_State->KeyCode_Pre == Key_State->KeyCode_Bef))
  6397  00196A  EE20 F002          	lfsr	2,2
  6398  00196E  5008               	movf	Key_State_Sweep@Key_State,w,c
  6399  001970  26D9               	addwf	fsr2l,f,c
  6400  001972  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6401  001974  22DA               	addwfc	fsr2h,f,c
  6402  001976  28DE               	incf	postinc2,w,c
  6403  001978  E103               	bnz	i2u346_40
  6404  00197A  28DE               	incf	postinc2,w,c
  6405  00197C  B4D8               	btfsc	status,2,c
  6406  00197E  D09A               	goto	i2l2567
  6407  001980                     i2u346_40:
  6408  001980  EE20 F004          	lfsr	2,4
  6409  001984  5008               	movf	Key_State_Sweep@Key_State,w,c
  6410  001986  26D9               	addwf	fsr2l,f,c
  6411  001988  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6412  00198A  22DA               	addwfc	fsr2h,f,c
  6413  00198C  EE10 F002          	lfsr	1,2
  6414  001990  5008               	movf	Key_State_Sweep@Key_State,w,c
  6415  001992  26E1               	addwf	fsr1l,f,c
  6416  001994  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6417  001996  22E2               	addwfc	fsr1h,f,c
  6418  001998  50DE               	movf	postinc2,w,c
  6419  00199A  18E6               	xorwf	postinc1,w,c
  6420  00199C  E103               	bnz	i2u347_41
  6421  00199E  50DE               	movf	postinc2,w,c
  6422  0019A0  18E6               	xorwf	postinc1,w,c
  6423  0019A2  A4D8               	btfss	status,2,c
  6424  0019A4                     i2u347_41:
  6425  0019A4  D087               	goto	i2l2567
  6426                           
  6427                           ;KeyState.c: 62: {
  6428                           ;KeyState.c: 63: Key_State->Key_Mode = 0;
  6429  0019A6  EE20 F001          	lfsr	2,1
  6430  0019AA  5008               	movf	Key_State_Sweep@Key_State,w,c
  6431  0019AC  26D9               	addwf	fsr2l,f,c
  6432  0019AE  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6433  0019B0  22DA               	addwfc	fsr2h,f,c
  6434  0019B2  0E00               	movlw	0
  6435  0019B4  6EDF               	movwf	indf2,c
  6436                           
  6437                           ;KeyState.c: 64: Key_State->State_Flag = 1;
  6438  0019B6  C008  FFD9         	movff	Key_State_Sweep@Key_State,fsr2l
  6439  0019BA  C009  FFDA         	movff	Key_State_Sweep@Key_State+1,fsr2h
  6440  0019BE  0E01               	movlw	1
  6441  0019C0  6EDF               	movwf	indf2,c
  6442                           
  6443                           ;KeyState.c: 65: Key_State->Key_Count++;
  6444  0019C2  EE20 F007          	lfsr	2,7
  6445  0019C6  5008               	movf	Key_State_Sweep@Key_State,w,c
  6446  0019C8  26D9               	addwf	fsr2l,f,c
  6447  0019CA  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6448  0019CC  22DA               	addwfc	fsr2h,f,c
  6449  0019CE  2ADF               	incf	indf2,f,c
  6450                           
  6451                           ;KeyState.c: 66: if(Key_State->Key_Count == 3)
  6452  0019D0  EE20 F007          	lfsr	2,7
  6453  0019D4  5008               	movf	Key_State_Sweep@Key_State,w,c
  6454  0019D6  26D9               	addwf	fsr2l,f,c
  6455  0019D8  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6456  0019DA  22DA               	addwfc	fsr2h,f,c
  6457  0019DC  0E03               	movlw	3
  6458  0019DE  18DE               	xorwf	postinc2,w,c
  6459  0019E0  A4D8               	btfss	status,2,c
  6460  0019E2  D023               	goto	i2l342
  6461                           
  6462                           ;KeyState.c: 67: {
  6463                           ;KeyState.c: 68: if(Key_State->Key_Num == 1)
  6464  0019E4  EE20 F006          	lfsr	2,6
  6465  0019E8  5008               	movf	Key_State_Sweep@Key_State,w,c
  6466  0019EA  26D9               	addwf	fsr2l,f,c
  6467  0019EC  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6468  0019EE  22DA               	addwfc	fsr2h,f,c
  6469  0019F0  04DE               	decf	postinc2,w,c
  6470  0019F2  A4D8               	btfss	status,2,c
  6471  0019F4  D008               	goto	i2l2551
  6472                           
  6473                           ;KeyState.c: 69: {
  6474                           ;KeyState.c: 70: Key_State->Key_Mode = 1;
  6475  0019F6  EE20 F001          	lfsr	2,1
  6476  0019FA  5008               	movf	Key_State_Sweep@Key_State,w,c
  6477  0019FC  26D9               	addwf	fsr2l,f,c
  6478  0019FE  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6479  001A00  22DA               	addwfc	fsr2h,f,c
  6480  001A02  0E01               	movlw	1
  6481  001A04  D010               	goto	L9
  6482  001A06                     i2l2551:
  6483                           
  6484                           ;KeyState.c: 72: else if(Key_State->Key_Num > 1)
  6485  001A06  EE20 F006          	lfsr	2,6
  6486  001A0A  5008               	movf	Key_State_Sweep@Key_State,w,c
  6487  001A0C  26D9               	addwf	fsr2l,f,c
  6488  001A0E  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6489  001A10  22DA               	addwfc	fsr2h,f,c
  6490  001A12  0E01               	movlw	1
  6491  001A14  64DF               	cpfsgt	indf2,c
  6492  001A16  D009               	goto	i2l342
  6493                           
  6494                           ;KeyState.c: 73: {
  6495                           ;KeyState.c: 74: Key_State->Key_Mode = 2;
  6496  001A18  EE20 F001          	lfsr	2,1
  6497  001A1C  5008               	movf	Key_State_Sweep@Key_State,w,c
  6498  001A1E  26D9               	addwf	fsr2l,f,c
  6499  001A20  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6500  001A22  22DA               	addwfc	fsr2h,f,c
  6501  001A24  0E02               	movlw	2
  6502  001A26                     L9:
  6503  001A26  6EDF               	movwf	indf2,c
  6504  001A28  D000               	goto	i2l342
  6505  001A2A                     i2l342:
  6506                           
  6507                           ;KeyState.c: 75: }
  6508                           ;KeyState.c: 76: }
  6509                           ;KeyState.c: 77: if(Key_State->Key_Count == 15)
  6510  001A2A  EE20 F007          	lfsr	2,7
  6511  001A2E  5008               	movf	Key_State_Sweep@Key_State,w,c
  6512  001A30  26D9               	addwf	fsr2l,f,c
  6513  001A32  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6514  001A34  22DA               	addwfc	fsr2h,f,c
  6515  001A36  0E0F               	movlw	15
  6516  001A38  18DE               	xorwf	postinc2,w,c
  6517  001A3A  A4D8               	btfss	status,2,c
  6518  001A3C  0012               	return	
  6519                           
  6520                           ;KeyState.c: 78: {
  6521                           ;KeyState.c: 79: if(!(Key_State->Key_Mode))
  6522  001A3E  EE20 F001          	lfsr	2,1
  6523  001A42  5008               	movf	Key_State_Sweep@Key_State,w,c
  6524  001A44  26D9               	addwf	fsr2l,f,c
  6525  001A46  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6526  001A48  22DA               	addwfc	fsr2h,f,c
  6527  001A4A  50DF               	movf	indf2,w,c
  6528  001A4C  A4D8               	btfss	status,2,c
  6529  001A4E  D023               	goto	i2l347
  6530                           
  6531                           ;KeyState.c: 80: {
  6532                           ;KeyState.c: 81: if(Key_State->Key_Num == 1)
  6533  001A50  EE20 F006          	lfsr	2,6
  6534  001A54  5008               	movf	Key_State_Sweep@Key_State,w,c
  6535  001A56  26D9               	addwf	fsr2l,f,c
  6536  001A58  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6537  001A5A  22DA               	addwfc	fsr2h,f,c
  6538  001A5C  04DE               	decf	postinc2,w,c
  6539  001A5E  A4D8               	btfss	status,2,c
  6540  001A60  D008               	goto	i2l2561
  6541                           
  6542                           ;KeyState.c: 82: {
  6543                           ;KeyState.c: 83: Key_State->Key_Mode = 3;
  6544  001A62  EE20 F001          	lfsr	2,1
  6545  001A66  5008               	movf	Key_State_Sweep@Key_State,w,c
  6546  001A68  26D9               	addwf	fsr2l,f,c
  6547  001A6A  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6548  001A6C  22DA               	addwfc	fsr2h,f,c
  6549  001A6E  0E03               	movlw	3
  6550  001A70  D010               	goto	L10
  6551  001A72                     i2l2561:
  6552                           
  6553                           ;KeyState.c: 85: else if(Key_State->Key_Num > 1)
  6554  001A72  EE20 F006          	lfsr	2,6
  6555  001A76  5008               	movf	Key_State_Sweep@Key_State,w,c
  6556  001A78  26D9               	addwf	fsr2l,f,c
  6557  001A7A  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6558  001A7C  22DA               	addwfc	fsr2h,f,c
  6559  001A7E  0E01               	movlw	1
  6560  001A80  64DF               	cpfsgt	indf2,c
  6561  001A82  D009               	goto	i2l347
  6562                           
  6563                           ;KeyState.c: 86: {
  6564                           ;KeyState.c: 87: Key_State->Key_Mode = 4;
  6565  001A84  EE20 F001          	lfsr	2,1
  6566  001A88  5008               	movf	Key_State_Sweep@Key_State,w,c
  6567  001A8A  26D9               	addwf	fsr2l,f,c
  6568  001A8C  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6569  001A8E  22DA               	addwfc	fsr2h,f,c
  6570  001A90  0E04               	movlw	4
  6571  001A92                     L10:
  6572  001A92  6EDF               	movwf	indf2,c
  6573  001A94  D000               	goto	i2l347
  6574  001A96                     i2l347:
  6575                           
  6576                           ;KeyState.c: 88: }
  6577                           ;KeyState.c: 89: }
  6578                           ;KeyState.c: 90: Key_State->Key_Count = 0;
  6579  001A96  EE20 F007          	lfsr	2,7
  6580  001A9A  5008               	movf	Key_State_Sweep@Key_State,w,c
  6581  001A9C  26D9               	addwf	fsr2l,f,c
  6582  001A9E  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6583  001AA0  22DA               	addwfc	fsr2h,f,c
  6584  001AA2  0E00               	movlw	0
  6585  001AA4  6EDF               	movwf	indf2,c
  6586                           
  6587                           ;KeyState.c: 91: Key_State->State_Flag = 2;
  6588  001AA6  C008  FFD9         	movff	Key_State_Sweep@Key_State,fsr2l
  6589  001AAA  C009  FFDA         	movff	Key_State_Sweep@Key_State+1,fsr2h
  6590  001AAE  0E02               	movlw	2
  6591  001AB0  6EDF               	movwf	indf2,c
  6592                           
  6593                           ;KeyState.c: 92: }
  6594                           ;KeyState.c: 93: }
  6595  001AB2  0012               	return	
  6596  001AB4                     i2l2567:
  6597                           
  6598                           ;KeyState.c: 94: else
  6599                           ;KeyState.c: 95: {
  6600                           ;KeyState.c: 96: Key_State->Key_Count = 0;
  6601  001AB4  EE20 F007          	lfsr	2,7
  6602  001AB8  5008               	movf	Key_State_Sweep@Key_State,w,c
  6603  001ABA  26D9               	addwf	fsr2l,f,c
  6604  001ABC  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6605  001ABE  22DA               	addwfc	fsr2h,f,c
  6606  001AC0  0E00               	movlw	0
  6607  001AC2  6EDF               	movwf	indf2,c
  6608                           
  6609                           ;KeyState.c: 97: Key_State->State_Flag = 0;
  6610  001AC4  C008  FFD9         	movff	Key_State_Sweep@Key_State,fsr2l
  6611  001AC8  C009  FFDA         	movff	Key_State_Sweep@Key_State+1,fsr2h
  6612  001ACC  0E00               	movlw	0
  6613  001ACE  6EDF               	movwf	indf2,c
  6614                           
  6615                           ;KeyState.c: 98: Key_State->Key_Mode = 0;
  6616  001AD0  EE20 F001          	lfsr	2,1
  6617  001AD4  5008               	movf	Key_State_Sweep@Key_State,w,c
  6618  001AD6  26D9               	addwf	fsr2l,f,c
  6619  001AD8  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6620  001ADA  22DA               	addwfc	fsr2h,f,c
  6621  001ADC  0E00               	movlw	0
  6622  001ADE  6EDF               	movwf	indf2,c
  6623                           
  6624                           ;KeyState.c: 99: }
  6625                           ;KeyState.c: 100: break;
  6626  001AE0  0012               	return	
  6627  001AE2                     i2l2573:
  6628                           
  6629                           ;KeyState.c: 103: if((Key_State->KeyCode_Pre != 0xffff) &&
  6630                           ;KeyState.c: 104: (Key_State->KeyCode_Pre == Key_State->KeyCode_Bef))
  6631  001AE2  EE20 F002          	lfsr	2,2
  6632  001AE6  5008               	movf	Key_State_Sweep@Key_State,w,c
  6633  001AE8  26D9               	addwf	fsr2l,f,c
  6634  001AEA  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6635  001AEC  22DA               	addwfc	fsr2h,f,c
  6636  001AEE  28DE               	incf	postinc2,w,c
  6637  001AF0  E103               	bnz	i2u355_40
  6638  001AF2  28DE               	incf	postinc2,w,c
  6639  001AF4  B4D8               	btfsc	status,2,c
  6640  001AF6  D03C               	goto	i2l2585
  6641  001AF8                     i2u355_40:
  6642  001AF8  EE20 F004          	lfsr	2,4
  6643  001AFC  5008               	movf	Key_State_Sweep@Key_State,w,c
  6644  001AFE  26D9               	addwf	fsr2l,f,c
  6645  001B00  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6646  001B02  22DA               	addwfc	fsr2h,f,c
  6647  001B04  EE10 F002          	lfsr	1,2
  6648  001B08  5008               	movf	Key_State_Sweep@Key_State,w,c
  6649  001B0A  26E1               	addwf	fsr1l,f,c
  6650  001B0C  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6651  001B0E  22E2               	addwfc	fsr1h,f,c
  6652  001B10  50DE               	movf	postinc2,w,c
  6653  001B12  18E6               	xorwf	postinc1,w,c
  6654  001B14  E12D               	bnz	i2l2585
  6655  001B16  50DE               	movf	postinc2,w,c
  6656  001B18  18E6               	xorwf	postinc1,w,c
  6657  001B1A  A4D8               	btfss	status,2,c
  6658  001B1C  D029               	goto	i2l2585
  6659                           
  6660                           ;KeyState.c: 105: {
  6661                           ;KeyState.c: 106: Key_State->State_Flag = 2;
  6662  001B1E  C008  FFD9         	movff	Key_State_Sweep@Key_State,fsr2l
  6663  001B22  C009  FFDA         	movff	Key_State_Sweep@Key_State+1,fsr2h
  6664  001B26  0E02               	movlw	2
  6665  001B28  6EDF               	movwf	indf2,c
  6666                           
  6667                           ;KeyState.c: 107: if(Key_State->Key_Num == 1)
  6668  001B2A  EE20 F006          	lfsr	2,6
  6669  001B2E  5008               	movf	Key_State_Sweep@Key_State,w,c
  6670  001B30  26D9               	addwf	fsr2l,f,c
  6671  001B32  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6672  001B34  22DA               	addwfc	fsr2h,f,c
  6673  001B36  04DE               	decf	postinc2,w,c
  6674  001B38  A4D8               	btfss	status,2,c
  6675  001B3A  D008               	goto	i2l354
  6676                           
  6677                           ;KeyState.c: 108: {
  6678                           ;KeyState.c: 109: Key_State->Key_Mode = 5;
  6679  001B3C  EE20 F001          	lfsr	2,1
  6680  001B40  5008               	movf	Key_State_Sweep@Key_State,w,c
  6681  001B42  26D9               	addwf	fsr2l,f,c
  6682  001B44  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6683  001B46  22DA               	addwfc	fsr2h,f,c
  6684  001B48  0E05               	movlw	5
  6685  001B4A  6EDF               	movwf	indf2,c
  6686  001B4C                     i2l354:
  6687                           
  6688                           ;KeyState.c: 110: }
  6689                           ;KeyState.c: 111: if(Key_State->Key_Num > 1)
  6690  001B4C  EE20 F006          	lfsr	2,6
  6691  001B50  5008               	movf	Key_State_Sweep@Key_State,w,c
  6692  001B52  26D9               	addwf	fsr2l,f,c
  6693  001B54  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6694  001B56  22DA               	addwfc	fsr2h,f,c
  6695  001B58  0E01               	movlw	1
  6696  001B5A  64DF               	cpfsgt	indf2,c
  6697  001B5C  0012               	return	
  6698                           
  6699                           ;KeyState.c: 112: {
  6700                           ;KeyState.c: 113: Key_State->Key_Mode = 6;
  6701  001B5E  EE20 F001          	lfsr	2,1
  6702  001B62  5008               	movf	Key_State_Sweep@Key_State,w,c
  6703  001B64  26D9               	addwf	fsr2l,f,c
  6704  001B66  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6705  001B68  22DA               	addwfc	fsr2h,f,c
  6706  001B6A  0E06               	movlw	6
  6707  001B6C  6EDF               	movwf	indf2,c
  6708                           
  6709                           ;KeyState.c: 114: }
  6710                           ;KeyState.c: 115: }
  6711  001B6E  0012               	return	
  6712  001B70                     i2l2585:
  6713                           
  6714                           ;KeyState.c: 116: else
  6715                           ;KeyState.c: 117: {
  6716                           ;KeyState.c: 118: Key_State->Key_Mode = 0;
  6717  001B70  EE20 F001          	lfsr	2,1
  6718  001B74  5008               	movf	Key_State_Sweep@Key_State,w,c
  6719  001B76  26D9               	addwf	fsr2l,f,c
  6720  001B78  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6721  001B7A  22DA               	addwfc	fsr2h,f,c
  6722  001B7C  0E00               	movlw	0
  6723  001B7E  6EDF               	movwf	indf2,c
  6724                           
  6725                           ;KeyState.c: 119: Key_State->State_Flag = 0;
  6726  001B80  C008  FFD9         	movff	Key_State_Sweep@Key_State,fsr2l
  6727  001B84  C009  FFDA         	movff	Key_State_Sweep@Key_State+1,fsr2h
  6728  001B88  0E00               	movlw	0
  6729  001B8A  6EDF               	movwf	indf2,c
  6730                           
  6731                           ;KeyState.c: 120: Key_State->Key_Count = 0;
  6732  001B8C  EE20 F007          	lfsr	2,7
  6733  001B90  5008               	movf	Key_State_Sweep@Key_State,w,c
  6734  001B92  26D9               	addwf	fsr2l,f,c
  6735  001B94  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6736  001B96  22DA               	addwfc	fsr2h,f,c
  6737  001B98  0E00               	movlw	0
  6738  001B9A  6EDF               	movwf	indf2,c
  6739                           
  6740                           ;KeyState.c: 123: }
  6741                           
  6742                           ;KeyState.c: 121: }
  6743                           ;KeyState.c: 122: break;
  6744  001B9C  0012               	return	
  6745  001B9E                     i2l2593:
  6746  001B9E  C008  FFD9         	movff	Key_State_Sweep@Key_State,fsr2l
  6747  001BA2  C009  FFDA         	movff	Key_State_Sweep@Key_State+1,fsr2h
  6748  001BA6  50DF               	movf	indf2,w,c
  6749                           
  6750                           ; Switch size 1, requested type "space"
  6751                           ; Number of cases is 3, Range of values is 0 to 2
  6752                           ; switch strategies available:
  6753                           ; Name         Instructions Cycles
  6754                           ; simple_byte           10     6 (average)
  6755                           ;	Chosen strategy is simple_byte
  6756  001BA8  0A00               	xorlw	0	; case 0
  6757  001BAA  B4D8               	btfsc	status,2,c
  6758  001BAC  D663               	goto	i2l2521
  6759  001BAE  0A01               	xorlw	1	; case 1
  6760  001BB0  B4D8               	btfsc	status,2,c
  6761  001BB2  D6DB               	goto	i2l2535
  6762  001BB4  0A03               	xorlw	3	; case 2
  6763  001BB6  A4D8               	btfss	status,2,c
  6764  001BB8  0012               	return	
  6765  001BBA  D793               	goto	i2l2573
  6766  001BBC  0012               	return		;funcret
  6767  001BBE                     __end_of_Key_State_Sweep:
  6768                           	opt stack 0
  6769                           pclatu	equ	0xFFB
  6770                           pclath	equ	0xFFA
  6771                           tblptru	equ	0xFF8
  6772                           tblptrh	equ	0xFF7
  6773                           tblptrl	equ	0xFF6
  6774                           tablat	equ	0xFF5
  6775                           prodh	equ	0xFF4
  6776                           prodl	equ	0xFF3
  6777                           intcon	equ	0xFF2
  6778                           postinc0	equ	0xFEE
  6779                           fsr0h	equ	0xFEA
  6780                           fsr0l	equ	0xFE9
  6781                           wreg	equ	0xFE8
  6782                           postinc1	equ	0xFE6
  6783                           postdec1	equ	0xFE5
  6784                           fsr1h	equ	0xFE2
  6785                           fsr1l	equ	0xFE1
  6786                           indf2	equ	0xFDF
  6787                           postinc2	equ	0xFDE
  6788                           postdec2	equ	0xFDD
  6789                           fsr2h	equ	0xFDA
  6790                           fsr2l	equ	0xFD9
  6791                           status	equ	0xFD8
  6792                           
  6793 ;; *************** function _Key_Num_Get *****************
  6794 ;; Defined at:
  6795 ;;		line 134 in file "nbproject/private/KeyState.c"
  6796 ;; Parameters:    Size  Location     Type
  6797 ;;  Key_State       2    0[COMRAM] PTR volatile struct .
  6798 ;;		 -> Key_StateMachine_Local(8), 
  6799 ;; Auto vars:     Size  Location     Type
  6800 ;;  i               1    6[COMRAM] unsigned char 
  6801 ;; Return value:  Size  Location     Type
  6802 ;;		None               void
  6803 ;; Registers used:
  6804 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6805 ;; Tracked objects:
  6806 ;;		On entry : 0/0
  6807 ;;		On exit  : 0/0
  6808 ;;		Unchanged: 0/0
  6809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6810 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6811 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6812 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6813 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6814 ;;Total ram usage:        7 bytes
  6815 ;; Hardware stack levels used:    1
  6816 ;; This function calls:
  6817 ;;		Nothing
  6818 ;; This function is called by:
  6819 ;;		_Key_State_Sweep
  6820 ;; This function uses a non-reentrant model
  6821 ;;
  6822                           
  6823                           	psect	text27
  6824  002778                     __ptext27:
  6825                           	opt stack 0
  6826  002778                     _Key_Num_Get:
  6827                           	opt stack 23
  6828                           
  6829                           ;KeyState.c: 136: uint8_t i;
  6830                           ;KeyState.c: 137: Key_State->Key_Num = 0;
  6831                           
  6832                           ;incstack = 0
  6833  002778  EE20 F006          	lfsr	2,6
  6834  00277C  5001               	movf	Key_Num_Get@Key_State,w,c
  6835  00277E  26D9               	addwf	fsr2l,f,c
  6836  002780  5002               	movf	Key_Num_Get@Key_State+1,w,c
  6837  002782  22DA               	addwfc	fsr2h,f,c
  6838  002784  0E00               	movlw	0
  6839  002786  6EDF               	movwf	indf2,c
  6840                           
  6841                           ;KeyState.c: 138: for(i = 0;i < 16;i++)
  6842  002788  0E00               	movlw	0
  6843  00278A  6E07               	movwf	Key_Num_Get@i,c
  6844  00278C  0E0F               	movlw	15
  6845  00278E  6407               	cpfsgt	Key_Num_Get@i,c
  6846  002790  D002               	goto	i2l2391
  6847  002792  0012               	return	
  6848  002794  0012               	return	
  6849  002796                     i2l2391:
  6850                           
  6851                           ;KeyState.c: 139: {
  6852                           ;KeyState.c: 140: Key_State->Key_Num += !((Key_State->KeyCode_Bef >> i) & 0x0001);
  6853  002796  C007  F003         	movff	Key_Num_Get@i,??_Key_Num_Get
  6854  00279A  EE20 F004          	lfsr	2,4
  6855  00279E  5001               	movf	Key_Num_Get@Key_State,w,c
  6856  0027A0  26D9               	addwf	fsr2l,f,c
  6857  0027A2  5002               	movf	Key_Num_Get@Key_State+1,w,c
  6858  0027A4  22DA               	addwfc	fsr2h,f,c
  6859  0027A6  CFDE F004          	movff	postinc2,??_Key_Num_Get+1
  6860  0027AA  CFDD F005          	movff	postdec2,??_Key_Num_Get+2
  6861  0027AE  2A03               	incf	??_Key_Num_Get,f,c
  6862  0027B0  D003               	goto	i2u295_44
  6863  0027B2                     i2u295_45:
  6864  0027B2  90D8               	bcf	status,0,c
  6865  0027B4  3205               	rrcf	??_Key_Num_Get+2,f,c
  6866  0027B6  3204               	rrcf	??_Key_Num_Get+1,f,c
  6867  0027B8                     i2u295_44:
  6868  0027B8  2E03               	decfsz	??_Key_Num_Get,f,c
  6869  0027BA  D7FB               	goto	i2u295_45
  6870  0027BC  B004               	btfsc	??_Key_Num_Get+1,0,c
  6871  0027BE  D003               	goto	i2u296_40
  6872  0027C0  6A06               	clrf	(??_Key_Num_Get+3)& (0+255),c
  6873  0027C2  2A06               	incf	(??_Key_Num_Get+3)& (0+255),f,c
  6874  0027C4  D001               	goto	i2u297_48
  6875  0027C6                     i2u296_40:
  6876  0027C6  6A06               	clrf	(??_Key_Num_Get+3)& (0+255),c
  6877  0027C8                     i2u297_48:
  6878  0027C8  EE20 F006          	lfsr	2,6
  6879  0027CC  5001               	movf	Key_Num_Get@Key_State,w,c
  6880  0027CE  26D9               	addwf	fsr2l,f,c
  6881  0027D0  5002               	movf	Key_Num_Get@Key_State+1,w,c
  6882  0027D2  22DA               	addwfc	fsr2h,f,c
  6883  0027D4  5006               	movf	??_Key_Num_Get+3,w,c
  6884  0027D6  26DF               	addwf	indf2,f,c
  6885  0027D8  2A07               	incf	Key_Num_Get@i,f,c
  6886  0027DA  0E0F               	movlw	15
  6887  0027DC  6407               	cpfsgt	Key_Num_Get@i,c
  6888  0027DE  D7DB               	goto	i2l2391
  6889  0027E0  0012               	return	
  6890  0027E2  0012               	return		;funcret
  6891  0027E4                     __end_of_Key_Num_Get:
  6892                           	opt stack 0
  6893                           pclatu	equ	0xFFB
  6894                           pclath	equ	0xFFA
  6895                           tblptru	equ	0xFF8
  6896                           tblptrh	equ	0xFF7
  6897                           tblptrl	equ	0xFF6
  6898                           tablat	equ	0xFF5
  6899                           prodh	equ	0xFF4
  6900                           prodl	equ	0xFF3
  6901                           intcon	equ	0xFF2
  6902                           postinc0	equ	0xFEE
  6903                           fsr0h	equ	0xFEA
  6904                           fsr0l	equ	0xFE9
  6905                           wreg	equ	0xFE8
  6906                           postinc1	equ	0xFE6
  6907                           postdec1	equ	0xFE5
  6908                           fsr1h	equ	0xFE2
  6909                           fsr1l	equ	0xFE1
  6910                           indf2	equ	0xFDF
  6911                           postinc2	equ	0xFDE
  6912                           postdec2	equ	0xFDD
  6913                           fsr2h	equ	0xFDA
  6914                           fsr2l	equ	0xFD9
  6915                           status	equ	0xFD8
  6916                           pclatu	equ	0xFFB
  6917                           pclath	equ	0xFFA
  6918                           tblptru	equ	0xFF8
  6919                           tblptrh	equ	0xFF7
  6920                           tblptrl	equ	0xFF6
  6921                           tablat	equ	0xFF5
  6922                           prodh	equ	0xFF4
  6923                           prodl	equ	0xFF3
  6924                           intcon	equ	0xFF2
  6925                           postinc0	equ	0xFEE
  6926                           fsr0h	equ	0xFEA
  6927                           fsr0l	equ	0xFE9
  6928                           wreg	equ	0xFE8
  6929                           postinc1	equ	0xFE6
  6930                           postdec1	equ	0xFE5
  6931                           fsr1h	equ	0xFE2
  6932                           fsr1l	equ	0xFE1
  6933                           indf2	equ	0xFDF
  6934                           postinc2	equ	0xFDE
  6935                           postdec2	equ	0xFDD
  6936                           fsr2h	equ	0xFDA
  6937                           fsr2l	equ	0xFD9
  6938                           status	equ	0xFD8
  6939                           
  6940                           	psect	rparam
  6941  0000                     pclatu	equ	0xFFB
  6942                           pclath	equ	0xFFA
  6943                           tblptru	equ	0xFF8
  6944                           tblptrh	equ	0xFF7
  6945                           tblptrl	equ	0xFF6
  6946                           tablat	equ	0xFF5
  6947                           prodh	equ	0xFF4
  6948                           prodl	equ	0xFF3
  6949                           intcon	equ	0xFF2
  6950                           postinc0	equ	0xFEE
  6951                           fsr0h	equ	0xFEA
  6952                           fsr0l	equ	0xFE9
  6953                           wreg	equ	0xFE8
  6954                           postinc1	equ	0xFE6
  6955                           postdec1	equ	0xFE5
  6956                           fsr1h	equ	0xFE2
  6957                           fsr1l	equ	0xFE1
  6958                           indf2	equ	0xFDF
  6959                           postinc2	equ	0xFDE
  6960                           postdec2	equ	0xFDD
  6961                           fsr2h	equ	0xFDA
  6962                           fsr2l	equ	0xFD9
  6963                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    16
    Data        34
    BSS         873
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     52      62
    BANK0           160     31     152
    BANK1           256      0     136
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    Key_Num_Get@Key_State	PTR volatile struct . size(2) Largest target is 8
		 -> Key_StateMachine_Local(COMRAM[8]), 

    Key_State_Sweep@Key_State	PTR volatile struct . size(2) Largest target is 8
		 -> Key_StateMachine_Local(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _Timer_Init->_WriteTimer0
    _delay_ms->___lmul
    _Trica_Mag->_ADC_ElecGet
    _Trica_Control->_delay_us
    _ADC_ElecGet->___lldiv
    _ADC_Init->___lldiv

Critical Paths under _ISR in COMRAM

    _ISR->_Key_State_Sweep
    _Key_State_Sweep->_Key_Num_Get

Critical Paths under _main in BANK0

    _Message_Manage->_Magne_Demag_Dispose
    _Magne_Demag_Dispose->_Trica_Mag
    _Trica_Mag->_ADC_ElecGet

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   13438
                                             30 BANK0      1     1      0
                           _ADC_Init
                          _GPIO_Init
                     _Message_Manage
                       _Message_Send
                     _Parameter_Init
                         _Timer_Init
 ---------------------------------------------------------------------------------
 (1) _Timer_Init                                           0     0      0     241
                         _OpenTimer0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     197
                                             33 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      44
                                             33 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Parameter_Init                                       1     1      0     130
                                             33 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Message_Send                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Message_Manage                                       1     1      0   11882
                _Magne_Demag_Dispose
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _Magne_Demag_Dispose                                  7     7      0   10681
                                             23 BANK0      7     7      0
                   _Relay_Channel_SW
                          _Trica_Mag
                            ___lwdiv
                             ___wmul
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             4     0      4    1201
                                             45 COMRAM     4     0      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     356
                                             33 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     501
                                             33 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _Trica_Mag                                           15    15      0    5812
                                              8 BANK0     15    15      0
                        _ADC_ElecGet
                      _Trica_Control
                             ___wmul
                           _delay_us
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1922
                                             33 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _Trica_Control                                        2     2      0     749
                                             37 COMRAM     2     2      0
                           _delay_us
 ---------------------------------------------------------------------------------
 (4) _delay_us                                             4     0      4     551
                                             33 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _ADC_ElecGet                                         14    12      2     999
                                             46 COMRAM     6     4      2
                                              0 BANK0      8     8      0
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _Relay_Channel_SW                                     2     1      1     539
                                             33 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _GPIO_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                            12    12      0    1182
                                             46 COMRAM     4     4      0
                                              0 BANK0      8     8      0
                            _BusyADC
                         _ConvertADC
                            _OpenADC
                            _ReadADC
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     761
                                             33 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) _ReadADC                                              4     2      2       0
                                             33 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     316
                                             33 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (5) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                 14    14      0    1257
                                             19 COMRAM    14    14      0
                    _Key_State_Sweep
                      i2_WriteTimer0
 ---------------------------------------------------------------------------------
 (7) i2_WriteTimer0                                        4     2      2      93
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _Key_State_Sweep                                     12    10      2    1164
                                              7 COMRAM    12    10      2
                        _Key_Num_Get
 ---------------------------------------------------------------------------------
 (8) _Key_Num_Get                                          7     5      2     187
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
     _BusyADC
     _ConvertADC
     _OpenADC
     _ReadADC
     ___lldiv
   _GPIO_Init
   _Message_Manage
     _Magne_Demag_Dispose
       _Relay_Channel_SW
       _Trica_Mag
         _ADC_ElecGet
           _BusyADC
           _ConvertADC
           _ReadADC
           ___lldiv
         _Trica_Control
           _delay_us
         ___wmul
         _delay_us
       ___lwdiv
       ___wmul
       _delay_ms
         ___lmul
     _delay_ms
       ___lmul
   _Message_Send
   _Parameter_Init
   _Timer_Init
     _OpenTimer0
     _WriteTimer0

 _ISR (ROOT)
   _Key_State_Sweep
     _Key_Num_Get
   i2_WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0     280      37       16.6%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      88       7       53.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1F      98       5       95.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     34      3E       1       65.3%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     15E      12        0.0%
DATA                 0      0     3DE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sun Oct 11 18:33:58 2015

          ___wmul@multiplicand 0024                    __CFG_BORV$3 000000                ??_Trica_Control 0026  
         Magne_Demag_Dispose@i 00F6           Magne_Demag_Dispose@j 00F5                   __CFG_CP0$OFF 000000  
                 __CFG_CP1$OFF 000000                   __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000  
                 __CFG_CP4$OFF 000000                   __CFG_CP5$OFF 000000                   __CFG_CP6$OFF 000000  
                 __CFG_CP7$OFF 000000                            l100 109C                            l103 10A4  
                          l130 12A6                            l106 1168                            l211 26B2  
                          l212 26E6                            l116 11E8                            l133 136A  
                          l301 25F4                            l142 13EA                            l207 266C  
                          l127 129E                            l119 11F0                            l311 2644  
                          l240 251C                            l208 26A0                            l304 2630  
                          l161 153A                            l145 13F2                            l250 2546  
                          l170 15BA                            l155 146E                            l315 2656  
                          l244 252A                            l308 263A                            l253 2554  
                          l181 1628                            l173 15C2                            l262 257E  
                          l158 1476                            l247 2538                            l256 2562  
                          l184 1630                            l259 2570                            l187 16F4  
                          l291 23CE                            l196 1774                            l447 29E6  
                          l199 177C                            l468 2A74                            l469 2A76  
                          l935 2766                            l998 2894                   __CFG_CPB$OFF 000000  
                 __CFG_CPD$OFF 000000                            _ISR 0008           __size_of_WriteTimer0 0012  
                          prod 000FF3                            wreg 000FE8               _Relay_Channel_SW 250E  
         __size_of_ADC_ElecGet 01B0                           ?_ISR 0001                           l3011 286A  
                         l3101 1DD6                           l3007 2858                           l3103 1DDC  
                         l3009 2862                           l3121 1E66                           l3041 1C00  
                         l3019 2888                           l3131 1EE6                           l3107 1DE6  
                         l3043 1C06                           l3141 1F10                           l3125 1E70  
                         l3061 1C90                           l3221 23BC                           l3213 23A8  
                         l3205 2382                           l3071 1D10                           l3047 1C10  
                         l3311 2A2A                           l3081 1D3A                           l3065 1C9A  
                         l3155 1F6C                           l3181 2474                           l3149 1F3E  
                         l3245 242C                           l3237 2418                           l3229 23F2  
                         l2711 26A4                           l3095 1D96                           l3185 2490  
                         l3089 1D68                           l2651 270E                           l3187 2496  
                         l3195 24E0                           l2643 2A7C                           l2653 271C  
                         l2725 26E0                           l2709 269A                           l2821 1342  
                         l2813 12E0                           l2663 2756                           l2655 2724  
                         l2831 13AC                           l2807 1290                           l2735 28B0  
                         l2673 21EE                           l2921 16CC                           l2913 166A  
                         l2745 103E                           l3289 2172                           l2691 2352  
                         l2675 21F4                           l2683 223E                           l2931 1736  
                         l2907 161A                           l2755 107A                           l2739 28C6  
                         l2669 21D2                           l2845 1400                           l2837 13C6  
                         l2773 1140                           l2765 10DE                           l2749 1052  
                         l2847 1408                           l2783 11AA                           l2855 144A  
                         l2689 22F2                           l2945 178A                           l2937 1750  
                         l2873 1512                           l2865 14B0                           l2961 292E  
                         l2947 1792                           l2883 157C                           l2955 17D4  
                         l2981 254A                           l2973 252E                           l2965 2512  
                         l2797 11FE                           l2789 11C4                           l2799 1206  
                         l2993 2574                           l2985 2558                           l2977 253C  
                         l2969 2520                           l2897 15D0                           l2889 1596  
                         l2899 15D8                           l2989 2566                           l2999 2582  
                         _ADIF 007CF6                           u3620 2AEC                           u4574 1C34  
                         u4575 1C2C                           u4674 1E0A                           u4675 1E02  
                   _Demag_Flag 00D7       Key_State_Sweep@Key_State 0008                           _Elec 0188  
                ??_Key_Num_Get 0003                           _main 2A12                           fsr0h 000FEA  
                         fsr1h 000FE2                           fsr0l 000FE9                           fsr2h 000FDA  
                         fsr1l 000FE1                           indf2 000FDF                           fsr2l 000FD9  
       __size_ofi2_WriteTimer0 0012               __end_of_ADC_Init 250E                           pclat 000FFA  
                         prodh 000FF4                           prodl 000FF3                           start 00B2  
           __size_of_GPIO_Init 0050                  __CFG_IESO$OFF 000000                  __CFG_FOSC$HS1 000000  
                __CFG_MCLRE$ON 000000                   ___param_bank 000010                __end_of_BusyADC 2AF2  
              __end_of_ReadADC 2AE4                          ??_ISR 0014                __end_of_OpenADC 29EA  
                __CFG_RETEN$ON 000000                          ?_main 0001                __end_of___lldiv 2778  
                        _T0CON 000FD5                __end_of___lwdiv 289E                          i2l402 0078  
                        i2l342 1A2A                          i2l354 1B4C                          i2l347 1A96  
                        i2l398 0070                          _TMR0H 000FD7                          _TMR0L 000FD6  
                        _PORTA 000F80                          _PORTB 000F81                          _PORTC 000F82  
                        _PORTD 000F83                          _PORTE 000F84                          _PORTF 000F85  
                        _PORTG 000F86                          _Gears 1001                  __CFG_WRT0$OFF 000000  
                __CFG_WRT1$OFF 000000                  __CFG_WRT2$OFF 000000            ___lmul@multiplicand 0026  
                __CFG_WRT3$OFF 000000                  __CFG_WRT4$OFF 000000                 __CFG_EBRT0$OFF 000000  
                __CFG_WRT5$OFF 000000                 __CFG_EBRT1$OFF 000000                  __CFG_WRT6$OFF 000000  
               __CFG_EBRT2$OFF 000000                  __CFG_WRT7$OFF 000000                 __CFG_EBRT3$OFF 000000  
               __CFG_EBRT4$OFF 000000                 __CFG_FCMEN$OFF 000000                 __CFG_EBRT5$OFF 000000  
               __CFG_EBRT6$OFF 000000                 __CFG_EBRT7$OFF 000000                  __CFG_WRTB$OFF 000000  
                __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000                 __CFG_EBRTB$OFF 000000  
                        main@i 00F7                _Key_State_Sweep 17DA                     _ConvertADC 2AF2  
          _Magne_Demag_Dispose 1BBE         _Key_StateMachine_Local 0037                          tablat 000FF5  
                        status 000FD8            __end_of_Key_Num_Get 27E4                __initialization 27E4  
                 __end_of_main 2A38                   Key_Num_Get@i 0007           ?_Magne_Demag_Dispose 0001  
                  _Gears_Timer 00B7                         ??_main 0035                  i2_WriteTimer0 2AC2  
                __activetblptr 000003                  ?_Message_Send 0001                 __CFG_PLLCFG$ON 000000  
            __end_of_GPIO_Init 299C                         _ADCON0 000FC2                         _ADCON1 000FC1  
                       _ADCON2 000FC0                         _ADRESH 000FC4                         _ADRESL 000FC3  
                    ADC_Init@i 00DD                __CFG_BBSIZ$BB2K 000000                         i2l2521 1874  
                   _OpenTimer0 2A5A                         i2l2531 194C                         i2l2613 0062  
                       i2l2391 2796                         i2l2551 1A06                         i2l2535 196A  
                       i2l2561 1A72                         i2l2573 1AE2                         i2l2567 1AB4  
                       i2l2585 1B70                         i2l2593 1B9E                         _INTCON 000FF2  
                       _TMR0IF 007F92                      ??_BusyADC 0022                      ??_ReadADC 0024  
             __end_of_delay_ms 294C               __end_of_delay_us 2A9A                      ??_OpenADC 0024  
               __CFG_XINST$OFF 000000                         ___lmul 289E                         ___wmul 29EA  
               __CFG_STVREN$ON 000000          ??_Magne_Demag_Dispose 00F0                      ??___lldiv 002A  
             OpenTimer0@config 0022                      ??___lwdiv 0026                     _Timer_Init 2A9A  
                       clear_0 27EC                         clear_1 27FE                         clear_2 280A  
                       clear_3 2816                 ?i2_WriteTimer0 0001                 ??_Message_Send 0022  
                  _Magnet_Flag 00D8        __end_of_Key_State_Sweep 1BBE                      ?_ADC_Init 0001  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
           __size_of_Trica_Mag 07C8                         tblptru 000FF8                     Trica_Mag@i 00EE  
                   Trica_Mag@j 00E8                     Trica_Mag@k 00EA                    ?_ConvertADC 0001  
      __size_of_Parameter_Init 0224                     __accesstop 0060        __end_of__initialization 283C  
                  _Key_Num_Get 2778                  ___rparam_used 000001       __end_of_Relay_Channel_SW 25B8  
                __end_of_Gears 1011                 __pcstackCOMRAM 0001                   __pidataBANK0 2A38  
                   ??_ADC_Init 002F        Relay_Channel_SW@Channel 0023        __size_of_Message_Manage 00A4  
                   __pbssBANK0 0060                     __pbssBANK1 0100                    ?_OpenTimer0 0001  
                  _Houwa_Cuont 00B4              __end_of_Trica_Mag 17DA                        ?___lmul 0022  
                      ?___wmul 0022                    ?_Timer_Init 0001           Key_Num_Get@Key_State 0001  
              ??i2_WriteTimer0 0003               WriteTimer0@timer 0024                  ??_WriteTimer0 0024  
               ___lmul@product 002A            __size_of_ConvertADC 0004                  ??_ADC_ElecGet 0031  
        __end_of_Trica_Control 26EC               ?_Key_State_Sweep 0008                      ?_delay_ms 002E  
                    ?_delay_us 0022                   ADC_ElecGet@i 00D9                        _BusyADC 2AE4  
                      _ReadADC 2AD4           __end_of_Message_Send 2442            i2WriteTimer0@timer0 0001  
              __CFG_PWRTEN$OFF 000000                        _OpenADC 299C                        _Message 00B0  
                      __Hparam 0000                        __Lparam 0000                   ADC_Init@elec 00D9  
              __size_of___lmul 005A                        ___lldiv 26EC                __size_of___wmul 0028  
                      ___lwdiv 2842                   __psmallconst 1000                        __pcinit 27E4  
                      __ramtop 1000            __size_of_OpenTimer0 0020                        __ptext0 2A12  
                      __ptext1 2A9A                        __ptext2 2AB0                        __ptext3 2A5A  
                      __ptext4 1F8A                        __ptext5 235E                        __ptext6 25B8  
                      __ptext7 1BBE                        __ptext8 28F8                        __ptext9 289E  
                    _T0CONbits 000FD5                   __size_of_ISR 00AA              __CFG_MSSPMSK$MSK7 000000  
          __end_of_WriteTimer0 2AC2                     ??_delay_ms 0032                     ??_delay_us 0026  
               OpenADC@config2 0022                 OpenADC@config3 0023            __end_of_ADC_ElecGet 235E  
                    _GPIO_Init 294C        Trica_Control@EMCC_State 0026           end_of_initialization 283C  
               _Parameter_Init 1F8A            __size_of_Timer_Init 0016                ___lldiv@divisor 0026  
              ___lldiv@counter 002E                        postdec1 000FE5                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
                    _PORTAbits 000F80                      _PORTCbits 000F82                      _PORTDbits 000F83  
                    _PORTEbits 000F84  Magne_Demag_Dispose@EMCC_State 00F4                      _TRISAbits 000F92  
                    _TRISCbits 000F94                      _TRISDbits 000F95                      _TRISEbits 000F96  
                    _TRISGbits 000F98                 _Message_Manage 25B8         __end_of_Parameter_Init 21AE  
            __size_of_ADC_Init 00CC                     ?_GPIO_Init 0001                   ??_ConvertADC 0022  
                 ?_Key_Num_Get 0001    __end_of_Magne_Demag_Dispose 1F8A              ?_Relay_Channel_SW 0022  
         Relay_Channel_SW@Flag 0022             ??_Relay_Channel_SW 0023                 __end_of___lmul 28F8  
               __end_of___wmul 2A12                    _WriteTimer0 2AB0             __end_of_ConvertADC 2AF6  
                  _ADC_ElecGet 21AE         __end_of_Message_Manage 265C            start_initialization 27E4  
                  __end_of_ISR 00B2                ?_Parameter_Init 0001                      _Parameter 0100  
        __size_of_Message_Send 00E4                   ??_OpenTimer0 0022                       ??___lmul 002A  
                     ??___wmul 0026                   ??_Timer_Init 0026                    __pdataBANK0 00B7  
                    _Trica_Mag 1012             __end_of_OpenTimer0 2A7A                    __pbssBIGRAM 0188  
                 _Message_Send 235E                ?_Message_Manage 0001                    __pbssCOMRAM 0035  
                __pcstackBANK0 00D9                  _Spacing_Count 0035                    ??_GPIO_Init 0022  
            __size_of_delay_ms 0054              __size_of_delay_us 0020             __end_of_Timer_Init 2AB0  
                     ?_BusyADC 0001                       ?_ReadADC 0022                       ?_OpenADC 0022  
             ___lwdiv@dividend 0022              __CFG_CCP2MX$PORTC 000000                      __pintcode 0008  
                     ?___lldiv 0022                       ?___lwdiv 0022                     ?_Trica_Mag 0001  
        __end_ofi2_WriteTimer0 2AD4                    __smallconst 1000              WriteTimer0@timer0 0022  
           i2WriteTimer0@timer 0003                       _ADC_Init 2442               ___lwdiv@quotient 0027  
     __size_of_Key_State_Sweep 03E4                 ___wmul@product 0026                  OpenADC@config 0026  
                     _PIE1bits 000F9D           __size_of_Key_Num_Get 006C         __size_of_Trica_Control 0090  
                     i2u330_40 17EC                       i2u331_40 180A                       i2u340_40 18C6  
                     i2u332_40 180C                       i2u341_40 18C8                       i2u333_40 1824  
                     i2u342_40 18E0                       i2u334_40 1826                       i2u343_40 18E2  
                     i2u335_40 1838                       i2u344_40 18F4                       i2u336_40 183A  
                     i2u345_40 18F6                       i2u337_40 188A                       i2u329_40 17EA  
                     _PIR1bits 000F9E                       i2u346_40 1980                       i2u338_40 18A6  
                     i2u355_40 1AF8                       i2u339_40 18A8                       i2u347_41 19A4  
                     i2u295_44 27B8                       i2u295_45 27B2                       i2u296_40 27C6  
                     i2u297_48 27C8                     _ADCON0bits 000FC2              ___wmul@multiplier 0022  
             __CFG_SOSCSEL$DIG 000000                       _Elec_Max 0060              ___lmul@multiplier 0022  
                    copy_data0 2830               __size_of_BusyADC 000E               __size_of_ReadADC 0010  
                   _ANCON0bits 000F25                       __Hrparam 0000               __size_of_OpenADC 004E  
                     __Lrparam 0000             __CFG_BOREN$SBORDIS 000000               __size_of___lldiv 008C  
                  ??_Trica_Mag 00E1               __size_of___lwdiv 005C                   ?_WriteTimer0 0022  
             ??_Parameter_Init 0022                   ?_ADC_ElecGet 002F                  _Trica_Control 265C  
    __size_of_Relay_Channel_SW 00AA                       _delay_ms 28F8                       _delay_us 2A7A  
              ___lwdiv@divisor 0024                ___lwdiv@counter 0026                       __ptext10 2842  
                     __ptext11 1012                       __ptext20 2AD4                       __ptext12 29EA  
                     __ptext21 299C                       __ptext13 265C                       __ptext22 2AF2  
                     __ptext14 2A7A                       __ptext23 2AE4                       __ptext15 21AE  
                     __ptext16 250E                       __ptext25 2AC2                       __ptext17 294C  
                     __ptext26 17DA                       __ptext18 2442                       __ptext27 2778  
                     __ptext19 26EC                 Trica_Control@i 0027                     _MAGNE_Flag 00B6  
                __size_of_main 0026                Parameter_Init@i 0022            Trica_Mag@EMCC_State 00E7  
          __CFG_RTCOSC$SOSCREF 000000              ??_Key_State_Sweep 000A   __size_of_Magne_Demag_Dispose 03CC  
             ??_Message_Manage 0035            __CFG_INTOSCSEL$HIGH 000000                    delay_ms@nms 002E  
               ?_Trica_Control 0001                    delay_us@nus 0022             __CFG_WDTEN$SWDTDIS 000000  
                   _INTCONbits 000FF2                  Trica_Mag@Elec 00EC                       intlevel2 0000  
             ___lldiv@dividend 0022                ADC_ElecGet@elec 00DD             __CFG_WDTPS$1048576 000000  
             ___lldiv@quotient 002A            __CFG_BORPWR$ZPBORMV 000000  
