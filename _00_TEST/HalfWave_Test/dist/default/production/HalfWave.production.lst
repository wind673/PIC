

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sun Oct 11 18:38:50 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F67K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    45  0000                     
    46                           	psect	idataBANK0
    47  002A3A                     __pidataBANK0:
    48                           	opt stack 0
    49                           
    50                           ;initializer for _Gears_Timer
    51  002A3A  1F40               	dw	8000
    52  002A3C  1D4C               	dw	7500
    53  002A3E  1B8A               	dw	7050
    54  002A40  19FA               	dw	6650
    55  002A42  186A               	dw	6250
    56  002A44  16DA               	dw	5850
    57  002A46  157C               	dw	5500
    58  002A48  141E               	dw	5150
    59  002A4A  128E               	dw	4750
    60  002A4C  10FE               	dw	4350
    61  002A4E  0FA0               	dw	4000
    62  002A50  0DAC               	dw	3500
    63  002A52  0ABE               	dw	2750
    64  002A54  07D0               	dw	2000
    65  002A56  04E2               	dw	1250
    66  002A58  01F4               	dw	500
    67                           
    68                           ;initializer for _Demag_Flag
    69  002A5A  01                 	db	1
    70                           
    71                           ;initializer for _Magnet_Flag
    72  002A5B  01                 	db	1
    73                           
    74                           	psect	smallconst
    75  001000                     __psmallconst:
    76                           	opt stack 0
    77  001000  00                 	db	0
    78  001001                     _Gears:
    79                           	opt stack 0
    80  001001  7D                 	db	125
    81  001002  60                 	db	96
    82  001003  57                 	db	87
    83  001004  76                 	db	118
    84  001005  6A                 	db	106
    85  001006  3E                 	db	62
    86  001007  3F                 	db	63
    87  001008  70                 	db	112
    88  001009  7F                 	db	127
    89  00100A  7E                 	db	126
    90  00100B  7B                 	db	123
    91  00100C  2F                 	db	47
    92  00100D  1D                 	db	29
    93  00100E  67                 	db	103
    94  00100F  1F                 	db	31
    95  001010  1B                 	db	27
    96  001011                     __end_of_Gears:
    97                           	opt stack 0
    98  0000                     _ANCON0bits	set	3877
    99  0000                     _ADCON0	set	4034
   100  0000                     _ADCON0bits	set	4034
   101  0000                     _ADCON1	set	4033
   102  0000                     _ADCON2	set	4032
   103  0000                     _ADRESH	set	4036
   104  0000                     _ADRESL	set	4035
   105  0000                     _INTCON	set	4082
   106  0000                     _INTCONbits	set	4082
   107  0000                     _PIE1bits	set	3997
   108  0000                     _PIR1bits	set	3998
   109  0000                     _PORTA	set	3968
   110  0000                     _PORTAbits	set	3968
   111  0000                     _PORTB	set	3969
   112  0000                     _PORTC	set	3970
   113  0000                     _PORTCbits	set	3970
   114  0000                     _PORTD	set	3971
   115  0000                     _PORTDbits	set	3971
   116  0000                     _PORTE	set	3972
   117  0000                     _PORTEbits	set	3972
   118  0000                     _PORTF	set	3973
   119  0000                     _PORTG	set	3974
   120  0000                     _T0CON	set	4053
   121  0000                     _T0CONbits	set	4053
   122  0000                     _TMR0H	set	4055
   123  0000                     _TMR0L	set	4054
   124  0000                     _TRISAbits	set	3986
   125  0000                     _TRISCbits	set	3988
   126  0000                     _TRISDbits	set	3989
   127  0000                     _TRISEbits	set	3990
   128  0000                     _TRISGbits	set	3992
   129  0000                     _TMR0IF	set	32658
   130                           
   131                           ; #config settings
   132  001011  00                 	db	0	; dummy byte at the end
   133  0000                     
   134                           	psect	cinit
   135  0027E6                     __pcinit:
   136                           	opt stack 0
   137  0027E6                     start_initialization:
   138                           	opt stack 0
   139  0027E6                     __initialization:
   140                           	opt stack 0
   141                           
   142                           ; Clear objects allocated to BIGRAM (640 bytes)
   143  0027E6  EE01  F088         	lfsr	0,__pbssBIGRAM
   144  0027EA  EE12 F080          	lfsr	1,640
   145  0027EE                     clear_0:
   146  0027EE  6AEE               	clrf	postinc0,c
   147  0027F0  50E5               	movf	postdec1,w,c
   148  0027F2  50E1               	movf	fsr1l,w,c
   149  0027F4  E1FC               	bnz	clear_0
   150  0027F6  50E2               	movf	fsr1h,w,c
   151  0027F8  E1FA               	bnz	clear_0
   152                           
   153                           ; Clear objects allocated to BANK1 (136 bytes)
   154  0027FA  EE01  F000         	lfsr	0,__pbssBANK1
   155  0027FE  0E88               	movlw	136
   156  002800                     clear_1:
   157  002800  6AEE               	clrf	postinc0,c
   158  002802  06E8               	decf	wreg,f,c
   159  002804  E1FD               	bnz	clear_1
   160                           
   161                           ; Clear objects allocated to BANK0 (87 bytes)
   162  002806  EE00  F060         	lfsr	0,__pbssBANK0
   163  00280A  0E57               	movlw	87
   164  00280C                     clear_2:
   165  00280C  6AEE               	clrf	postinc0,c
   166  00280E  06E8               	decf	wreg,f,c
   167  002810  E1FD               	bnz	clear_2
   168                           
   169                           ; Clear objects allocated to COMRAM (10 bytes)
   170  002812  EE00  F035         	lfsr	0,__pbssCOMRAM
   171  002816  0E0A               	movlw	10
   172  002818                     clear_3:
   173  002818  6AEE               	clrf	postinc0,c
   174  00281A  06E8               	decf	wreg,f,c
   175  00281C  E1FD               	bnz	clear_3
   176                           
   177                           ; Initialize objects allocated to BANK0 (34 bytes)
   178                           ; load TBLPTR registers with __pidataBANK0
   179  00281E  0E3A               	movlw	low __pidataBANK0
   180  002820  6EF6               	movwf	tblptrl,c
   181  002822  0E2A               	movlw	high __pidataBANK0
   182  002824  6EF7               	movwf	tblptrh,c
   183  002826  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   184  002828  6EF8               	movwf	tblptru,c
   185  00282A  EE00  F0B7         	lfsr	0,__pdataBANK0
   186  00282E  EE10 F022          	lfsr	1,34
   187  002832                     copy_data0:
   188  002832  0009               	tblrd		*+
   189  002834  CFF5 FFEE          	movff	tablat,postinc0
   190  002838  50E5               	movf	postdec1,w,c
   191  00283A  50E1               	movf	fsr1l,w,c
   192  00283C  E1FA               	bnz	copy_data0
   193  00283E                     end_of_initialization:
   194                           	opt stack 0
   195  00283E                     __end_of__initialization:
   196                           	opt stack 0
   197  00283E  0100               	movlb	0
   198  002840  EF0A  F015         	goto	_main	;jump to C main() function
   199                           tblptru	equ	0xFF8
   200                           tblptrh	equ	0xFF7
   201                           tblptrl	equ	0xFF6
   202                           tablat	equ	0xFF5
   203                           postinc0	equ	0xFEE
   204                           wreg	equ	0xFE8
   205                           postdec1	equ	0xFE5
   206                           fsr1h	equ	0xFE2
   207                           fsr1l	equ	0xFE1
   208                           
   209                           	psect	bssCOMRAM
   210  000035                     __pbssCOMRAM:
   211                           	opt stack 0
   212  000035                     _Spacing_Count:
   213                           	opt stack 0
   214  000035                     	ds	2
   215  000037                     _Key_StateMachine_Local:
   216                           	opt stack 0
   217  000037                     	ds	8
   218                           tblptru	equ	0xFF8
   219                           tblptrh	equ	0xFF7
   220                           tblptrl	equ	0xFF6
   221                           tablat	equ	0xFF5
   222                           postinc0	equ	0xFEE
   223                           wreg	equ	0xFE8
   224                           postdec1	equ	0xFE5
   225                           fsr1h	equ	0xFE2
   226                           fsr1l	equ	0xFE1
   227                           
   228                           	psect	bssBANK0
   229  000060                     __pbssBANK0:
   230                           	opt stack 0
   231  000060                     _Elec_Max:
   232                           	opt stack 0
   233  000060                     	ds	80
   234  0000B0                     _Message:
   235                           	opt stack 0
   236  0000B0                     	ds	4
   237  0000B4                     _Houwa_Cuont:
   238                           	opt stack 0
   239  0000B4                     	ds	2
   240  0000B6                     _MAGNE_Flag:
   241                           	opt stack 0
   242  0000B6                     	ds	1
   243                           tblptru	equ	0xFF8
   244                           tblptrh	equ	0xFF7
   245                           tblptrl	equ	0xFF6
   246                           tablat	equ	0xFF5
   247                           postinc0	equ	0xFEE
   248                           wreg	equ	0xFE8
   249                           postdec1	equ	0xFE5
   250                           fsr1h	equ	0xFE2
   251                           fsr1l	equ	0xFE1
   252                           
   253                           	psect	dataBANK0
   254  0000B7                     __pdataBANK0:
   255                           	opt stack 0
   256  0000B7                     _Gears_Timer:
   257                           	opt stack 0
   258  0000B7                     	ds	32
   259  0000D7                     _Demag_Flag:
   260                           	opt stack 0
   261  0000D7                     	ds	1
   262  0000D8                     _Magnet_Flag:
   263                           	opt stack 0
   264  0000D8                     	ds	1
   265                           tblptru	equ	0xFF8
   266                           tblptrh	equ	0xFF7
   267                           tblptrl	equ	0xFF6
   268                           tablat	equ	0xFF5
   269                           postinc0	equ	0xFEE
   270                           wreg	equ	0xFE8
   271                           postdec1	equ	0xFE5
   272                           fsr1h	equ	0xFE2
   273                           fsr1l	equ	0xFE1
   274                           
   275                           	psect	bssBANK1
   276  000100                     __pbssBANK1:
   277                           	opt stack 0
   278  000100                     _Parameter:
   279                           	opt stack 0
   280  000100                     	ds	136
   281                           tblptru	equ	0xFF8
   282                           tblptrh	equ	0xFF7
   283                           tblptrl	equ	0xFF6
   284                           tablat	equ	0xFF5
   285                           postinc0	equ	0xFEE
   286                           wreg	equ	0xFE8
   287                           postdec1	equ	0xFE5
   288                           fsr1h	equ	0xFE2
   289                           fsr1l	equ	0xFE1
   290                           
   291                           	psect	bssBIGRAM
   292  000188                     __pbssBIGRAM:
   293                           	opt stack 0
   294  000188                     _Elec:
   295                           	opt stack 0
   296  000188                     	ds	640
   297                           tblptru	equ	0xFF8
   298                           tblptrh	equ	0xFF7
   299                           tblptrl	equ	0xFF6
   300                           tablat	equ	0xFF5
   301                           postinc0	equ	0xFEE
   302                           wreg	equ	0xFE8
   303                           postdec1	equ	0xFE5
   304                           fsr1h	equ	0xFE2
   305                           fsr1l	equ	0xFE1
   306                           
   307                           	psect	cstackBANK0
   308  0000D9                     __pcstackBANK0:
   309                           	opt stack 0
   310  0000D9                     ADC_Init@elec:
   311                           	opt stack 0
   312  0000D9                     ADC_ElecGet@i:
   313                           	opt stack 0
   314                           
   315                           ; 4 bytes @ 0x0
   316  0000D9                     	ds	4
   317  0000DD                     ADC_Init@i:
   318                           	opt stack 0
   319  0000DD                     ADC_ElecGet@elec:
   320                           	opt stack 0
   321                           
   322                           ; 4 bytes @ 0x4
   323  0000DD                     	ds	4
   324  0000E1                     ??_Trica_Mag:
   325                           
   326                           ; 0 bytes @ 0x8
   327  0000E1                     	ds	6
   328  0000E7                     Trica_Mag@EMCC_State:
   329                           	opt stack 0
   330                           
   331                           ; 1 bytes @ 0xE
   332  0000E7                     	ds	1
   333  0000E8                     Trica_Mag@j:
   334                           	opt stack 0
   335                           
   336                           ; 2 bytes @ 0xF
   337  0000E8                     	ds	2
   338  0000EA                     Trica_Mag@k:
   339                           	opt stack 0
   340                           
   341                           ; 2 bytes @ 0x11
   342  0000EA                     	ds	2
   343  0000EC                     Trica_Mag@Elec:
   344                           	opt stack 0
   345                           
   346                           ; 2 bytes @ 0x13
   347  0000EC                     	ds	2
   348  0000EE                     Trica_Mag@i:
   349                           	opt stack 0
   350                           
   351                           ; 2 bytes @ 0x15
   352  0000EE                     	ds	2
   353  0000F0                     ??_Magne_Demag_Dispose:
   354                           
   355                           ; 0 bytes @ 0x17
   356  0000F0                     	ds	4
   357  0000F4                     Magne_Demag_Dispose@EMCC_State:
   358                           	opt stack 0
   359                           
   360                           ; 1 bytes @ 0x1B
   361  0000F4                     	ds	1
   362  0000F5                     Magne_Demag_Dispose@j:
   363                           	opt stack 0
   364                           
   365                           ; 1 bytes @ 0x1C
   366  0000F5                     	ds	1
   367  0000F6                     Magne_Demag_Dispose@i:
   368                           	opt stack 0
   369                           
   370                           ; 1 bytes @ 0x1D
   371  0000F6                     	ds	1
   372  0000F7                     main@i:
   373                           	opt stack 0
   374                           
   375                           ; 1 bytes @ 0x1E
   376  0000F7                     	ds	1
   377                           tblptru	equ	0xFF8
   378                           tblptrh	equ	0xFF7
   379                           tblptrl	equ	0xFF6
   380                           tablat	equ	0xFF5
   381                           postinc0	equ	0xFEE
   382                           wreg	equ	0xFE8
   383                           postdec1	equ	0xFE5
   384                           fsr1h	equ	0xFE2
   385                           fsr1l	equ	0xFE1
   386                           
   387                           	psect	cstackCOMRAM
   388  000001                     __pcstackCOMRAM:
   389                           	opt stack 0
   390  000001                     Key_Num_Get@Key_State:
   391                           	opt stack 0
   392  000001                     i2WriteTimer0@timer0:
   393                           	opt stack 0
   394                           
   395                           ; 2 bytes @ 0x0
   396  000001                     	ds	2
   397  000003                     ??_Key_Num_Get:
   398  000003                     i2WriteTimer0@timer:
   399                           	opt stack 0
   400                           
   401                           ; 2 bytes @ 0x2
   402  000003                     	ds	4
   403  000007                     Key_Num_Get@i:
   404                           	opt stack 0
   405                           
   406                           ; 1 bytes @ 0x6
   407  000007                     	ds	1
   408  000008                     Key_State_Sweep@Key_State:
   409                           	opt stack 0
   410                           
   411                           ; 2 bytes @ 0x7
   412  000008                     	ds	2
   413  00000A                     ??_Key_State_Sweep:
   414                           
   415                           ; 0 bytes @ 0x9
   416  00000A                     	ds	10
   417  000014                     ??_ISR:
   418                           
   419                           ; 0 bytes @ 0x13
   420  000014                     	ds	14
   421  000022                     ?_ReadADC:
   422                           	opt stack 0
   423  000022                     ?___wmul:
   424                           	opt stack 0
   425  000022                     ?___lwdiv:
   426                           	opt stack 0
   427  000022                     ?___lmul:
   428                           	opt stack 0
   429  000022                     ?___lldiv:
   430                           	opt stack 0
   431  000022                     Relay_Channel_SW@Flag:
   432                           	opt stack 0
   433  000022                     Parameter_Init@i:
   434                           	opt stack 0
   435  000022                     OpenADC@config2:
   436                           	opt stack 0
   437  000022                     OpenTimer0@config:
   438                           	opt stack 0
   439  000022                     WriteTimer0@timer0:
   440                           	opt stack 0
   441  000022                     ___wmul@multiplier:
   442                           	opt stack 0
   443  000022                     ___lwdiv@dividend:
   444                           	opt stack 0
   445  000022                     delay_us@nus:
   446                           	opt stack 0
   447  000022                     ___lmul@multiplier:
   448                           	opt stack 0
   449  000022                     ___lldiv@dividend:
   450                           	opt stack 0
   451                           
   452                           ; 4 bytes @ 0x21
   453  000022                     	ds	1
   454  000023                     Relay_Channel_SW@Channel:
   455                           	opt stack 0
   456  000023                     OpenADC@config3:
   457                           	opt stack 0
   458                           
   459                           ; 1 bytes @ 0x22
   460  000023                     	ds	1
   461  000024                     ??_OpenADC:
   462  000024                     ??_ReadADC:
   463  000024                     WriteTimer0@timer:
   464                           	opt stack 0
   465  000024                     ___wmul@multiplicand:
   466                           	opt stack 0
   467  000024                     ___lwdiv@divisor:
   468                           	opt stack 0
   469                           
   470                           ; 2 bytes @ 0x23
   471  000024                     	ds	2
   472  000026                     Trica_Control@EMCC_State:
   473                           	opt stack 0
   474  000026                     OpenADC@config:
   475                           	opt stack 0
   476  000026                     ___lwdiv@counter:
   477                           	opt stack 0
   478  000026                     ___wmul@product:
   479                           	opt stack 0
   480  000026                     ___lmul@multiplicand:
   481                           	opt stack 0
   482  000026                     ___lldiv@divisor:
   483                           	opt stack 0
   484                           
   485                           ; 4 bytes @ 0x25
   486  000026                     	ds	1
   487  000027                     Trica_Control@i:
   488                           	opt stack 0
   489  000027                     ___lwdiv@quotient:
   490                           	opt stack 0
   491                           
   492                           ; 2 bytes @ 0x26
   493  000027                     	ds	3
   494  00002A                     ___lmul@product:
   495                           	opt stack 0
   496  00002A                     ___lldiv@quotient:
   497                           	opt stack 0
   498                           
   499                           ; 4 bytes @ 0x29
   500  00002A                     	ds	4
   501  00002E                     ___lldiv@counter:
   502                           	opt stack 0
   503  00002E                     delay_ms@nms:
   504                           	opt stack 0
   505                           
   506                           ; 4 bytes @ 0x2D
   507  00002E                     	ds	1
   508  00002F                     ??_ADC_Init:
   509  00002F                     ?_ADC_ElecGet:
   510                           	opt stack 0
   511                           
   512                           ; 2 bytes @ 0x2E
   513  00002F                     	ds	2
   514  000031                     ??_ADC_ElecGet:
   515                           
   516                           ; 0 bytes @ 0x30
   517  000031                     	ds	1
   518  000032                     
   519                           ; 0 bytes @ 0x31
   520  000032                     	ds	3
   521  000035                     tblptru	equ	0xFF8
   522                           tblptrh	equ	0xFF7
   523                           tblptrl	equ	0xFF6
   524                           tablat	equ	0xFF5
   525                           postinc0	equ	0xFEE
   526                           wreg	equ	0xFE8
   527                           postdec1	equ	0xFE5
   528                           fsr1h	equ	0xFE2
   529                           fsr1l	equ	0xFE1
   530                           
   531                           ; 0 bytes @ 0x34
   532 ;;
   533 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   534 ;;
   535 ;; *************** function _main *****************
   536 ;; Defined at:
   537 ;;		line 32 in file "nbproject/private/main.c"
   538 ;; Parameters:    Size  Location     Type
   539 ;;		None
   540 ;; Auto vars:     Size  Location     Type
   541 ;;  i               1   30[BANK0 ] unsigned char 
   542 ;; Return value:  Size  Location     Type
   543 ;;                  2  414[None  ] int 
   544 ;; Registers used:
   545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   546 ;; Tracked objects:
   547 ;;		On entry : 0/0
   548 ;;		On exit  : 0/0
   549 ;;		Unchanged: 0/0
   550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   552 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   554 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   555 ;;Total ram usage:        1 bytes
   556 ;; Hardware stack levels required when called:    8
   557 ;; This function calls:
   558 ;;		_ADC_Init
   559 ;;		_GPIO_Init
   560 ;;		_Message_Manage
   561 ;;		_Message_Send
   562 ;;		_Parameter_Init
   563 ;;		_Timer_Init
   564 ;; This function is called by:
   565 ;;		Startup code after reset
   566 ;; This function uses a non-reentrant model
   567 ;;
   568                           
   569                           	psect	text0
   570  002A14                     __ptext0:
   571                           	opt stack 0
   572  002A14                     _main:
   573                           	opt stack 23
   574                           
   575                           ;main.c: 34: uint8_t i = 0;
   576                           
   577                           ;incstack = 0
   578  002A14  0E00               	movlw	0
   579  002A16  0100               	movlb	0	; () banked
   580  002A18  6FF7               	movwf	main@i& (0+255),b
   581                           
   582                           ; BSR set to: 0
   583                           ;main.c: 35: GPIO_Init();
   584  002A1A  ECA7  F014         	call	_GPIO_Init	;wreg free
   585                           
   586                           ;main.c: 36: Parameter_Init();
   587  002A1E  ECC5  F00F         	call	_Parameter_Init	;wreg free
   588                           
   589                           ;main.c: 37: ADC_Init();
   590  002A22  EC21  F012         	call	_ADC_Init	;wreg free
   591                           
   592                           ;main.c: 38: Timer_Init();
   593  002A26  EC4E  F015         	call	_Timer_Init	;wreg free
   594  002A2A  D000               	goto	l3311
   595  002A2C                     l3311:
   596                           
   597                           ;main.c: 40: {
   598                           ;main.c: 41: Message_Send();
   599  002A2C  ECAF  F011         	call	_Message_Send	;wreg free
   600                           
   601                           ;main.c: 42: Message_Manage();
   602  002A30  ECDD  F012         	call	_Message_Manage	;wreg free
   603  002A34  D7FB               	goto	l3311
   604  002A36  EF55  F000         	goto	start
   605  002A3A                     __end_of_main:
   606                           	opt stack 0
   607                           tblptru	equ	0xFF8
   608                           tblptrh	equ	0xFF7
   609                           tblptrl	equ	0xFF6
   610                           tablat	equ	0xFF5
   611                           postinc0	equ	0xFEE
   612                           wreg	equ	0xFE8
   613                           postdec1	equ	0xFE5
   614                           fsr1h	equ	0xFE2
   615                           fsr1l	equ	0xFE1
   616                           
   617 ;; *************** function _Timer_Init *****************
   618 ;; Defined at:
   619 ;;		line 32 in file "nbproject/private/timer.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;		None
   622 ;; Auto vars:     Size  Location     Type
   623 ;;		None
   624 ;; Return value:  Size  Location     Type
   625 ;;		None               void
   626 ;; Registers used:
   627 ;;		wreg, status,2, status,0, cstack
   628 ;; Tracked objects:
   629 ;;		On entry : 0/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   637 ;;Total ram usage:        0 bytes
   638 ;; Hardware stack levels used:    1
   639 ;; Hardware stack levels required when called:    4
   640 ;; This function calls:
   641 ;;		_OpenTimer0
   642 ;;		_WriteTimer0
   643 ;; This function is called by:
   644 ;;		_main
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648                           	psect	text1
   649  002A9C                     __ptext1:
   650                           	opt stack 0
   651  002A9C                     _Timer_Init:
   652                           	opt stack 26
   653                           
   654                           ;timer.c: 34: OpenTimer0( 0b11111111 &
   655                           ;timer.c: 35: 0b10111111 &
   656                           ;timer.c: 36: 0b11011111 &
   657                           ;timer.c: 37: 0b11110010 );
   658                           
   659                           ;incstack = 0
   660  002A9C  0E92               	movlw	146
   661  002A9E  EC2E  F015         	call	_OpenTimer0
   662                           
   663                           ;timer.c: 38: INTCON |= 0x80;
   664  002AA2  8EF2               	bsf	intcon,7,c	;volatile
   665                           
   666                           ;timer.c: 39: WriteTimer0(65536-50000);
   667  002AA4  0E3C               	movlw	60
   668  002AA6  6E23               	movwf	WriteTimer0@timer0+1,c
   669  002AA8  0EB0               	movlw	176
   670  002AAA  6E22               	movwf	WriteTimer0@timer0,c
   671  002AAC  EC59  F015         	call	_WriteTimer0	;wreg free
   672  002AB0  0012               	return		;funcret
   673  002AB2                     __end_of_Timer_Init:
   674                           	opt stack 0
   675                           tblptru	equ	0xFF8
   676                           tblptrh	equ	0xFF7
   677                           tblptrl	equ	0xFF6
   678                           tablat	equ	0xFF5
   679                           intcon	equ	0xFF2
   680                           postinc0	equ	0xFEE
   681                           wreg	equ	0xFE8
   682                           postdec1	equ	0xFE5
   683                           fsr1h	equ	0xFE2
   684                           fsr1l	equ	0xFE1
   685                           
   686 ;; *************** function _WriteTimer0 *****************
   687 ;; Defined at:
   688 ;;		line 16 in file "D:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
   689 ;; Parameters:    Size  Location     Type
   690 ;;  timer0          2   33[COMRAM] unsigned int 
   691 ;; Auto vars:     Size  Location     Type
   692 ;;  timer           2   35[COMRAM] struct Timers
   693 ;; Return value:  Size  Location     Type
   694 ;;		None               void
   695 ;; Registers used:
   696 ;;		None
   697 ;; Tracked objects:
   698 ;;		On entry : 0/0
   699 ;;		On exit  : 0/0
   700 ;;		Unchanged: 0/0
   701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   702 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   703 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   705 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   706 ;;Total ram usage:        4 bytes
   707 ;; Hardware stack levels used:    1
   708 ;; Hardware stack levels required when called:    3
   709 ;; This function calls:
   710 ;;		Nothing
   711 ;; This function is called by:
   712 ;;		_Timer_Init
   713 ;; This function uses a non-reentrant model
   714 ;;
   715                           
   716                           	psect	text2
   717  002AB2                     __ptext2:
   718                           	opt stack 0
   719  002AB2                     _WriteTimer0:
   720                           	opt stack 26
   721                           
   722                           ;incstack = 0
   723  002AB2  C022  F024         	movff	WriteTimer0@timer0,WriteTimer0@timer
   724  002AB6  C023  F025         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
   725  002ABA  C025  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
   726  002ABE  C024  FFD6         	movff	WriteTimer0@timer,4054	;volatile
   727  002AC2  0012               	return		;funcret
   728  002AC4                     __end_of_WriteTimer0:
   729                           	opt stack 0
   730                           tblptru	equ	0xFF8
   731                           tblptrh	equ	0xFF7
   732                           tblptrl	equ	0xFF6
   733                           tablat	equ	0xFF5
   734                           intcon	equ	0xFF2
   735                           postinc0	equ	0xFEE
   736                           wreg	equ	0xFE8
   737                           postdec1	equ	0xFE5
   738                           fsr1h	equ	0xFE2
   739                           fsr1l	equ	0xFE1
   740                           
   741 ;; *************** function _OpenTimer0 *****************
   742 ;; Defined at:
   743 ;;		line 18 in file "D:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0open.c"
   744 ;; Parameters:    Size  Location     Type
   745 ;;  config          1    wreg     unsigned char 
   746 ;; Auto vars:     Size  Location     Type
   747 ;;  config          1   33[COMRAM] unsigned char 
   748 ;; Return value:  Size  Location     Type
   749 ;;		None               void
   750 ;; Registers used:
   751 ;;		wreg, status,2, status,0
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   758 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   760 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   761 ;;Total ram usage:        1 bytes
   762 ;; Hardware stack levels used:    1
   763 ;; Hardware stack levels required when called:    3
   764 ;; This function calls:
   765 ;;		Nothing
   766 ;; This function is called by:
   767 ;;		_Timer_Init
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771                           	psect	text3
   772  002A5C                     __ptext3:
   773                           	opt stack 0
   774  002A5C                     _OpenTimer0:
   775                           	opt stack 26
   776                           
   777                           ;incstack = 0
   778                           ;OpenTimer0@config stored from wreg
   779  002A5C  6E22               	movwf	OpenTimer0@config,c
   780  002A5E  5022               	movf	OpenTimer0@config,w,c
   781  002A60  0B7F               	andlw	127
   782  002A62  6ED5               	movwf	4053,c	;volatile
   783  002A64  0E00               	movlw	0
   784  002A66  6ED7               	movwf	4055,c	;volatile
   785  002A68  0E00               	movlw	0
   786  002A6A  6ED6               	movwf	4054,c	;volatile
   787  002A6C  94F2               	bcf	intcon,2,c	;volatile
   788  002A6E  AE22               	btfss	OpenTimer0@config,7,c
   789  002A70  D002               	goto	l466
   790  002A72  8AF2               	bsf	intcon,5,c	;volatile
   791  002A74  D001               	goto	l467
   792  002A76                     l466:
   793  002A76  9AF2               	bcf	intcon,5,c	;volatile
   794  002A78                     l467:
   795  002A78  8ED5               	bsf	4053,7,c	;volatile
   796  002A7A  0012               	return		;funcret
   797  002A7C                     __end_of_OpenTimer0:
   798                           	opt stack 0
   799                           tblptru	equ	0xFF8
   800                           tblptrh	equ	0xFF7
   801                           tblptrl	equ	0xFF6
   802                           tablat	equ	0xFF5
   803                           intcon	equ	0xFF2
   804                           postinc0	equ	0xFEE
   805                           wreg	equ	0xFE8
   806                           postdec1	equ	0xFE5
   807                           fsr1h	equ	0xFE2
   808                           fsr1l	equ	0xFE1
   809                           
   810 ;; *************** function _Parameter_Init *****************
   811 ;; Defined at:
   812 ;;		line 34 in file "nbproject/private/parameter.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;		None
   815 ;; Auto vars:     Size  Location     Type
   816 ;;  i               1   33[COMRAM] unsigned char 
   817 ;; Return value:  Size  Location     Type
   818 ;;		None               void
   819 ;; Registers used:
   820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   827 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   829 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   830 ;;Total ram usage:        1 bytes
   831 ;; Hardware stack levels used:    1
   832 ;; Hardware stack levels required when called:    3
   833 ;; This function calls:
   834 ;;		Nothing
   835 ;; This function is called by:
   836 ;;		_main
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840                           	psect	text4
   841  001F8A                     __ptext4:
   842                           	opt stack 0
   843  001F8A                     _Parameter_Init:
   844                           	opt stack 27
   845                           
   846                           ;parameter.c: 36: uint8_t i;
   847                           ;parameter.c: 38: Parameter[1].Min = 0;
   848                           
   849                           ;incstack = 0
   850  001F8A  0E00               	movlw	0
   851  001F8C  0101               	movlb	1	; () banked
   852  001F8E  6F0B               	movwf	(_Parameter+11)& (0+255),b
   853  001F90  0E00               	movlw	0
   854  001F92  6F0A               	movwf	(_Parameter+10)& (0+255),b
   855                           
   856                           ;parameter.c: 39: Parameter[1].Max = 15;
   857  001F94  0E00               	movlw	0
   858  001F96  0101               	movlb	1	; () banked
   859  001F98  6F0D               	movwf	(_Parameter+13)& (0+255),b
   860  001F9A  0E0F               	movlw	15
   861  001F9C  6F0C               	movwf	(_Parameter+12)& (0+255),b
   862                           
   863                           ;parameter.c: 40: Parameter[1].Default = 15;
   864  001F9E  0E00               	movlw	0
   865  001FA0  0101               	movlb	1	; () banked
   866  001FA2  6F0F               	movwf	(_Parameter+15)& (0+255),b
   867  001FA4  0E0F               	movlw	15
   868  001FA6  6F0E               	movwf	(_Parameter+14)& (0+255),b
   869                           
   870                           ;parameter.c: 42: Parameter[2].Min = 0;
   871  001FA8  0E00               	movlw	0
   872  001FAA  0101               	movlb	1	; () banked
   873  001FAC  6F13               	movwf	(_Parameter+19)& (0+255),b
   874  001FAE  0E00               	movlw	0
   875  001FB0  6F12               	movwf	(_Parameter+18)& (0+255),b
   876                           
   877                           ;parameter.c: 43: Parameter[2].Max = 15;
   878  001FB2  0E00               	movlw	0
   879  001FB4  0101               	movlb	1	; () banked
   880  001FB6  6F15               	movwf	(_Parameter+21)& (0+255),b
   881  001FB8  0E0F               	movlw	15
   882  001FBA  6F14               	movwf	(_Parameter+20)& (0+255),b
   883                           
   884                           ;parameter.c: 44: Parameter[2].Default = 15;
   885  001FBC  0E00               	movlw	0
   886  001FBE  0101               	movlb	1	; () banked
   887  001FC0  6F17               	movwf	(_Parameter+23)& (0+255),b
   888  001FC2  0E0F               	movlw	15
   889  001FC4  6F16               	movwf	(_Parameter+22)& (0+255),b
   890                           
   891                           ;parameter.c: 46: Parameter[3].Min = 0;
   892  001FC6  0E00               	movlw	0
   893  001FC8  0101               	movlb	1	; () banked
   894  001FCA  6F1B               	movwf	(_Parameter+27)& (0+255),b
   895  001FCC  0E00               	movlw	0
   896  001FCE  6F1A               	movwf	(_Parameter+26)& (0+255),b
   897                           
   898                           ; BSR set to: 1
   899                           ;parameter.c: 47: Parameter[3].Max = 0xffff;
   900  001FD0  0101               	movlb	1	; () banked
   901  001FD2  691C               	setf	(_Parameter+28)& (0+255),b
   902  001FD4  691D               	setf	(_Parameter+29)& (0+255),b
   903                           
   904                           ;parameter.c: 48: Parameter[3].Default = 0x00ff;
   905  001FD6  0E00               	movlw	0
   906  001FD8  0101               	movlb	1	; () banked
   907  001FDA  6F1F               	movwf	(_Parameter+31)& (0+255),b
   908  001FDC  691E               	setf	(_Parameter+30)& (0+255),b
   909                           
   910                           ;parameter.c: 50: Parameter[4].Min = 100;
   911  001FDE  0E00               	movlw	0
   912  001FE0  0101               	movlb	1	; () banked
   913  001FE2  6F23               	movwf	(_Parameter+35)& (0+255),b
   914  001FE4  0E64               	movlw	100
   915  001FE6  6F22               	movwf	(_Parameter+34)& (0+255),b
   916                           
   917                           ;parameter.c: 51: Parameter[4].Max = 3000;
   918  001FE8  0E0B               	movlw	11
   919  001FEA  0101               	movlb	1	; () banked
   920  001FEC  6F25               	movwf	(_Parameter+37)& (0+255),b
   921  001FEE  0EB8               	movlw	184
   922  001FF0  6F24               	movwf	(_Parameter+36)& (0+255),b
   923                           
   924                           ;parameter.c: 52: Parameter[4].Default = 2045;
   925  001FF2  0E07               	movlw	7
   926  001FF4  0101               	movlb	1	; () banked
   927  001FF6  6F27               	movwf	(_Parameter+39)& (0+255),b
   928  001FF8  0EFD               	movlw	253
   929  001FFA  6F26               	movwf	(_Parameter+38)& (0+255),b
   930                           
   931                           ;parameter.c: 54: Parameter[5].Min = 10;
   932  001FFC  0E00               	movlw	0
   933  001FFE  0101               	movlb	1	; () banked
   934  002000  6F2B               	movwf	(_Parameter+43)& (0+255),b
   935  002002  0E0A               	movlw	10
   936  002004  6F2A               	movwf	(_Parameter+42)& (0+255),b
   937                           
   938                           ;parameter.c: 55: Parameter[5].Max = 80;
   939  002006  0E00               	movlw	0
   940  002008  0101               	movlb	1	; () banked
   941  00200A  6F2D               	movwf	(_Parameter+45)& (0+255),b
   942  00200C  0E50               	movlw	80
   943  00200E  6F2C               	movwf	(_Parameter+44)& (0+255),b
   944                           
   945                           ;parameter.c: 56: Parameter[5].Default = 20;
   946  002010  0E00               	movlw	0
   947  002012  0101               	movlb	1	; () banked
   948  002014  6F2F               	movwf	(_Parameter+47)& (0+255),b
   949  002016  0E14               	movlw	20
   950  002018  6F2E               	movwf	(_Parameter+46)& (0+255),b
   951                           
   952                           ;parameter.c: 58: Parameter[6].Min = 20;
   953  00201A  0E00               	movlw	0
   954  00201C  0101               	movlb	1	; () banked
   955  00201E  6F33               	movwf	(_Parameter+51)& (0+255),b
   956  002020  0E14               	movlw	20
   957  002022  6F32               	movwf	(_Parameter+50)& (0+255),b
   958                           
   959                           ;parameter.c: 59: Parameter[6].Max = 40;
   960  002024  0E00               	movlw	0
   961  002026  0101               	movlb	1	; () banked
   962  002028  6F35               	movwf	(_Parameter+53)& (0+255),b
   963  00202A  0E28               	movlw	40
   964  00202C  6F34               	movwf	(_Parameter+52)& (0+255),b
   965                           
   966                           ;parameter.c: 60: Parameter[6].Default = 20;
   967  00202E  0E00               	movlw	0
   968  002030  0101               	movlb	1	; () banked
   969  002032  6F37               	movwf	(_Parameter+55)& (0+255),b
   970  002034  0E14               	movlw	20
   971  002036  6F36               	movwf	(_Parameter+54)& (0+255),b
   972                           
   973                           ;parameter.c: 62: Parameter[7].Min = 0;
   974  002038  0E00               	movlw	0
   975  00203A  0101               	movlb	1	; () banked
   976  00203C  6F3B               	movwf	(_Parameter+59)& (0+255),b
   977  00203E  0E00               	movlw	0
   978  002040  6F3A               	movwf	(_Parameter+58)& (0+255),b
   979                           
   980                           ;parameter.c: 63: Parameter[7].Max = 1;
   981  002042  0E00               	movlw	0
   982  002044  0101               	movlb	1	; () banked
   983  002046  6F3D               	movwf	(_Parameter+61)& (0+255),b
   984  002048  0E01               	movlw	1
   985  00204A  6F3C               	movwf	(_Parameter+60)& (0+255),b
   986                           
   987                           ;parameter.c: 64: Parameter[7].Default = 1;
   988  00204C  0E00               	movlw	0
   989  00204E  0101               	movlb	1	; () banked
   990  002050  6F3F               	movwf	(_Parameter+63)& (0+255),b
   991  002052  0E01               	movlw	1
   992  002054  6F3E               	movwf	(_Parameter+62)& (0+255),b
   993                           
   994                           ;parameter.c: 66: Parameter[8].Min = 3;
   995  002056  0E00               	movlw	0
   996  002058  0101               	movlb	1	; () banked
   997  00205A  6F43               	movwf	(_Parameter+67)& (0+255),b
   998  00205C  0E03               	movlw	3
   999  00205E  6F42               	movwf	(_Parameter+66)& (0+255),b
  1000                           
  1001                           ;parameter.c: 67: Parameter[8].Max = 200;
  1002  002060  0E00               	movlw	0
  1003  002062  0101               	movlb	1	; () banked
  1004  002064  6F45               	movwf	(_Parameter+69)& (0+255),b
  1005  002066  0EC8               	movlw	200
  1006  002068  6F44               	movwf	(_Parameter+68)& (0+255),b
  1007                           
  1008                           ;parameter.c: 68: Parameter[8].Default = 10;
  1009  00206A  0E00               	movlw	0
  1010  00206C  0101               	movlb	1	; () banked
  1011  00206E  6F47               	movwf	(_Parameter+71)& (0+255),b
  1012  002070  0E0A               	movlw	10
  1013  002072  6F46               	movwf	(_Parameter+70)& (0+255),b
  1014                           
  1015                           ;parameter.c: 70: Parameter[9].Min = 3;
  1016  002074  0E00               	movlw	0
  1017  002076  0101               	movlb	1	; () banked
  1018  002078  6F4B               	movwf	(_Parameter+75)& (0+255),b
  1019  00207A  0E03               	movlw	3
  1020  00207C  6F4A               	movwf	(_Parameter+74)& (0+255),b
  1021                           
  1022                           ;parameter.c: 71: Parameter[9].Max = 200;
  1023  00207E  0E00               	movlw	0
  1024  002080  0101               	movlb	1	; () banked
  1025  002082  6F4D               	movwf	(_Parameter+77)& (0+255),b
  1026  002084  0EC8               	movlw	200
  1027  002086  6F4C               	movwf	(_Parameter+76)& (0+255),b
  1028                           
  1029                           ;parameter.c: 72: Parameter[9].Default = 65;
  1030  002088  0E00               	movlw	0
  1031  00208A  0101               	movlb	1	; () banked
  1032  00208C  6F4F               	movwf	(_Parameter+79)& (0+255),b
  1033  00208E  0E41               	movlw	65
  1034  002090  6F4E               	movwf	(_Parameter+78)& (0+255),b
  1035                           
  1036                           ;parameter.c: 74: Parameter[10].Min = 3;
  1037  002092  0E00               	movlw	0
  1038  002094  0101               	movlb	1	; () banked
  1039  002096  6F53               	movwf	(_Parameter+83)& (0+255),b
  1040  002098  0E03               	movlw	3
  1041  00209A  6F52               	movwf	(_Parameter+82)& (0+255),b
  1042                           
  1043                           ;parameter.c: 75: Parameter[10].Max = 200;
  1044  00209C  0E00               	movlw	0
  1045  00209E  0101               	movlb	1	; () banked
  1046  0020A0  6F55               	movwf	(_Parameter+85)& (0+255),b
  1047  0020A2  0EC8               	movlw	200
  1048  0020A4  6F54               	movwf	(_Parameter+84)& (0+255),b
  1049                           
  1050                           ;parameter.c: 76: Parameter[10].Default = 10;
  1051  0020A6  0E00               	movlw	0
  1052  0020A8  0101               	movlb	1	; () banked
  1053  0020AA  6F57               	movwf	(_Parameter+87)& (0+255),b
  1054  0020AC  0E0A               	movlw	10
  1055  0020AE  6F56               	movwf	(_Parameter+86)& (0+255),b
  1056                           
  1057                           ;parameter.c: 78: Parameter[11].Min = 3;
  1058  0020B0  0E00               	movlw	0
  1059  0020B2  0101               	movlb	1	; () banked
  1060  0020B4  6F5B               	movwf	(_Parameter+91)& (0+255),b
  1061  0020B6  0E03               	movlw	3
  1062  0020B8  6F5A               	movwf	(_Parameter+90)& (0+255),b
  1063                           
  1064                           ;parameter.c: 79: Parameter[11].Max = 200;
  1065  0020BA  0E00               	movlw	0
  1066  0020BC  0101               	movlb	1	; () banked
  1067  0020BE  6F5D               	movwf	(_Parameter+93)& (0+255),b
  1068  0020C0  0EC8               	movlw	200
  1069  0020C2  6F5C               	movwf	(_Parameter+92)& (0+255),b
  1070                           
  1071                           ;parameter.c: 80: Parameter[11].Default = 10;
  1072  0020C4  0E00               	movlw	0
  1073  0020C6  0101               	movlb	1	; () banked
  1074  0020C8  6F5F               	movwf	(_Parameter+95)& (0+255),b
  1075  0020CA  0E0A               	movlw	10
  1076  0020CC  6F5E               	movwf	(_Parameter+94)& (0+255),b
  1077                           
  1078                           ;parameter.c: 82: Parameter[12].Min = 0;
  1079  0020CE  0E00               	movlw	0
  1080  0020D0  0101               	movlb	1	; () banked
  1081  0020D2  6F63               	movwf	(_Parameter+99)& (0+255),b
  1082  0020D4  0E00               	movlw	0
  1083  0020D6  6F62               	movwf	(_Parameter+98)& (0+255),b
  1084                           
  1085                           ;parameter.c: 83: Parameter[12].Max = 1;
  1086  0020D8  0E00               	movlw	0
  1087  0020DA  0101               	movlb	1	; () banked
  1088  0020DC  6F65               	movwf	(_Parameter+101)& (0+255),b
  1089  0020DE  0E01               	movlw	1
  1090  0020E0  6F64               	movwf	(_Parameter+100)& (0+255),b
  1091                           
  1092                           ;parameter.c: 84: Parameter[12].Default = 1;
  1093  0020E2  0E00               	movlw	0
  1094  0020E4  0101               	movlb	1	; () banked
  1095  0020E6  6F67               	movwf	(_Parameter+103)& (0+255),b
  1096  0020E8  0E01               	movlw	1
  1097  0020EA  6F66               	movwf	(_Parameter+102)& (0+255),b
  1098                           
  1099                           ;parameter.c: 86: Parameter[13].Min = 1;
  1100  0020EC  0E00               	movlw	0
  1101  0020EE  0101               	movlb	1	; () banked
  1102  0020F0  6F6B               	movwf	(_Parameter+107)& (0+255),b
  1103  0020F2  0E01               	movlw	1
  1104  0020F4  6F6A               	movwf	(_Parameter+106)& (0+255),b
  1105                           
  1106                           ;parameter.c: 87: Parameter[13].Max = 20;
  1107  0020F6  0E00               	movlw	0
  1108  0020F8  0101               	movlb	1	; () banked
  1109  0020FA  6F6D               	movwf	(_Parameter+109)& (0+255),b
  1110  0020FC  0E14               	movlw	20
  1111  0020FE  6F6C               	movwf	(_Parameter+108)& (0+255),b
  1112                           
  1113                           ;parameter.c: 88: Parameter[13].Default = 3;
  1114  002100  0E00               	movlw	0
  1115  002102  0101               	movlb	1	; () banked
  1116  002104  6F6F               	movwf	(_Parameter+111)& (0+255),b
  1117  002106  0E03               	movlw	3
  1118  002108  6F6E               	movwf	(_Parameter+110)& (0+255),b
  1119                           
  1120                           ;parameter.c: 90: Parameter[14].Min = 3;
  1121  00210A  0E00               	movlw	0
  1122  00210C  0101               	movlb	1	; () banked
  1123  00210E  6F73               	movwf	(_Parameter+115)& (0+255),b
  1124  002110  0E03               	movlw	3
  1125  002112  6F72               	movwf	(_Parameter+114)& (0+255),b
  1126                           
  1127                           ;parameter.c: 91: Parameter[14].Max = 15;
  1128  002114  0E00               	movlw	0
  1129  002116  0101               	movlb	1	; () banked
  1130  002118  6F75               	movwf	(_Parameter+117)& (0+255),b
  1131  00211A  0E0F               	movlw	15
  1132  00211C  6F74               	movwf	(_Parameter+116)& (0+255),b
  1133                           
  1134                           ;parameter.c: 92: Parameter[14].Default = 3;
  1135  00211E  0E00               	movlw	0
  1136  002120  0101               	movlb	1	; () banked
  1137  002122  6F77               	movwf	(_Parameter+119)& (0+255),b
  1138  002124  0E03               	movlw	3
  1139  002126  6F76               	movwf	(_Parameter+118)& (0+255),b
  1140                           
  1141                           ;parameter.c: 94: Parameter[15].Min = 0;
  1142  002128  0E00               	movlw	0
  1143  00212A  0101               	movlb	1	; () banked
  1144  00212C  6F7B               	movwf	(_Parameter+123)& (0+255),b
  1145  00212E  0E00               	movlw	0
  1146  002130  6F7A               	movwf	(_Parameter+122)& (0+255),b
  1147                           
  1148                           ;parameter.c: 95: Parameter[15].Max = 15;
  1149  002132  0E00               	movlw	0
  1150  002134  0101               	movlb	1	; () banked
  1151  002136  6F7D               	movwf	(_Parameter+125)& (0+255),b
  1152  002138  0E0F               	movlw	15
  1153  00213A  6F7C               	movwf	(_Parameter+124)& (0+255),b
  1154                           
  1155                           ;parameter.c: 96: Parameter[15].Default = 0;
  1156  00213C  0E00               	movlw	0
  1157  00213E  0101               	movlb	1	; () banked
  1158  002140  6F7F               	movwf	(_Parameter+127)& (0+255),b
  1159  002142  0E00               	movlw	0
  1160  002144  6F7E               	movwf	(_Parameter+126)& (0+255),b
  1161                           
  1162                           ;parameter.c: 98: Parameter[16].Min = 0;
  1163  002146  0E00               	movlw	0
  1164  002148  0101               	movlb	1	; () banked
  1165  00214A  6F83               	movwf	(_Parameter+131)& (0+255),b
  1166  00214C  0E00               	movlw	0
  1167  00214E  6F82               	movwf	(_Parameter+130)& (0+255),b
  1168                           
  1169                           ;parameter.c: 99: Parameter[16].Max = 1;
  1170  002150  0E00               	movlw	0
  1171  002152  0101               	movlb	1	; () banked
  1172  002154  6F85               	movwf	(_Parameter+133)& (0+255),b
  1173  002156  0E01               	movlw	1
  1174  002158  6F84               	movwf	(_Parameter+132)& (0+255),b
  1175                           
  1176                           ;parameter.c: 100: Parameter[16].Default = 0;
  1177  00215A  0E00               	movlw	0
  1178  00215C  0101               	movlb	1	; () banked
  1179  00215E  6F87               	movwf	(_Parameter+135)& (0+255),b
  1180  002160  0E00               	movlw	0
  1181  002162  6F86               	movwf	(_Parameter+134)& (0+255),b
  1182                           
  1183                           ;parameter.c: 103: for(i = 1;i < 16+1;i++)
  1184  002164  0E01               	movlw	1
  1185  002166  6E22               	movwf	Parameter_Init@i,c
  1186                           
  1187                           ; BSR set to: 1
  1188  002168  0E10               	movlw	16
  1189  00216A  6422               	cpfsgt	Parameter_Init@i,c
  1190  00216C  D002               	goto	l3289
  1191  00216E  0012               	return	
  1192                           
  1193                           ; BSR set to: 1
  1194  002170  0012               	return	
  1195  002172                     l3289:
  1196                           
  1197                           ;parameter.c: 104: {
  1198                           ;parameter.c: 105: Parameter[i].Value = Parameter[i].Default;
  1199  002172  5022               	movf	Parameter_Init@i,w,c
  1200  002174  0D08               	mullw	8
  1201  002176  0E06               	movlw	6
  1202  002178  26F3               	addwf	prodl,f,c
  1203  00217A  0E00               	movlw	0
  1204  00217C  22F4               	addwfc	prodh,f,c
  1205  00217E  0E00               	movlw	low _Parameter
  1206  002180  24F3               	addwf	prodl,w,c
  1207  002182  6ED9               	movwf	fsr2l,c
  1208  002184  0E01               	movlw	high _Parameter
  1209  002186  20F4               	addwfc	prodh,w,c
  1210  002188  6EDA               	movwf	fsr2h,c
  1211  00218A  5022               	movf	Parameter_Init@i,w,c
  1212  00218C  0D08               	mullw	8
  1213  00218E  0E00               	movlw	low _Parameter
  1214  002190  24F3               	addwf	prodl,w,c
  1215  002192  6EE1               	movwf	fsr1l,c
  1216  002194  0E01               	movlw	high _Parameter
  1217  002196  20F4               	addwfc	prodh,w,c
  1218  002198  6EE2               	movwf	fsr1h,c
  1219  00219A  CFDE FFE6          	movff	postinc2,postinc1
  1220  00219E  CFDD FFE5          	movff	postdec2,postdec1
  1221  0021A2  2A22               	incf	Parameter_Init@i,f,c
  1222  0021A4  0E10               	movlw	16
  1223  0021A6  6422               	cpfsgt	Parameter_Init@i,c
  1224  0021A8  D7E4               	goto	l3289
  1225  0021AA  0012               	return	
  1226  0021AC  0012               	return		;funcret
  1227  0021AE                     __end_of_Parameter_Init:
  1228                           	opt stack 0
  1229                           tblptru	equ	0xFF8
  1230                           tblptrh	equ	0xFF7
  1231                           tblptrl	equ	0xFF6
  1232                           tablat	equ	0xFF5
  1233                           prodh	equ	0xFF4
  1234                           prodl	equ	0xFF3
  1235                           intcon	equ	0xFF2
  1236                           postinc0	equ	0xFEE
  1237                           wreg	equ	0xFE8
  1238                           postinc1	equ	0xFE6
  1239                           postdec1	equ	0xFE5
  1240                           fsr1h	equ	0xFE2
  1241                           fsr1l	equ	0xFE1
  1242                           postinc2	equ	0xFDE
  1243                           postdec2	equ	0xFDD
  1244                           fsr2h	equ	0xFDA
  1245                           fsr2l	equ	0xFD9
  1246                           
  1247 ;; *************** function _Message_Send *****************
  1248 ;; Defined at:
  1249 ;;		line 37 in file "nbproject/private/message.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;		None
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;		None
  1254 ;; Return value:  Size  Location     Type
  1255 ;;		None               void
  1256 ;; Registers used:
  1257 ;;		wreg, status,2, status,0
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1267 ;;Total ram usage:        0 bytes
  1268 ;; Hardware stack levels used:    1
  1269 ;; Hardware stack levels required when called:    3
  1270 ;; This function calls:
  1271 ;;		Nothing
  1272 ;; This function is called by:
  1273 ;;		_main
  1274 ;; This function uses a non-reentrant model
  1275 ;;
  1276                           
  1277                           	psect	text5
  1278  00235E                     __ptext5:
  1279                           	opt stack 0
  1280  00235E                     _Message_Send:
  1281                           	opt stack 27
  1282                           
  1283                           ;message.c: 40: if(((((Key_StateMachine_Local.KeyCode_Bef == 0xfffe)&&(Key_StateMachine_
      +                          Local.Key_Num == 1)&&(Key_StateMachine_Local.Key_Mode == 1)) && !Parameter[16].Value) ||
  1284                           ;message.c: 41: (((Key_StateMachine_Local.KeyCode_Bef == 0xfffe)&&(Key_StateMachine_Loca
      +                          l.Key_Num == 1)&&(Key_StateMachine_Local.Key_Mode == 3)) && Parameter[16].Value)) && (Sp
      +                          acing_Count == 0))
  1285                           
  1286                           ;incstack = 0
  1287  00235E  0EFE               	movlw	254
  1288  002360  183B               	xorwf	_Key_StateMachine_Local+4,w,c	;volatile
  1289  002362  E10F               	bnz	l3205
  1290  002364  283C               	incf	_Key_StateMachine_Local+5,w,c	;volatile
  1291  002366  A4D8               	btfss	status,2,c
  1292  002368  D00C               	goto	l3205
  1293  00236A  043D               	decf	_Key_StateMachine_Local+6,w,c	;volatile
  1294  00236C  A4D8               	btfss	status,2,c
  1295  00236E  D009               	goto	l3205
  1296  002370  0438               	decf	_Key_StateMachine_Local+1,w,c	;volatile
  1297  002372  A4D8               	btfss	status,2,c
  1298  002374  D006               	goto	l3205
  1299  002376  0101               	movlb	1	; () banked
  1300  002378  5180               	movf	(_Parameter+128)& (0+255),w,b
  1301  00237A  0101               	movlb	1	; () banked
  1302  00237C  1181               	iorwf	(_Parameter+129)& (0+255),w,b
  1303  00237E  B4D8               	btfsc	status,2,c
  1304  002380  D013               	goto	l3213
  1305  002382                     l3205:
  1306  002382  0EFE               	movlw	254
  1307  002384  183B               	xorwf	_Key_StateMachine_Local+4,w,c	;volatile
  1308  002386  E11A               	bnz	l3221
  1309  002388  283C               	incf	_Key_StateMachine_Local+5,w,c	;volatile
  1310  00238A  A4D8               	btfss	status,2,c
  1311  00238C  D017               	goto	l3221
  1312  00238E  043D               	decf	_Key_StateMachine_Local+6,w,c	;volatile
  1313  002390  A4D8               	btfss	status,2,c
  1314  002392  D014               	goto	l3221
  1315  002394  0E03               	movlw	3
  1316  002396  1838               	xorwf	_Key_StateMachine_Local+1,w,c	;volatile
  1317  002398  A4D8               	btfss	status,2,c
  1318  00239A  D010               	goto	l3221
  1319  00239C  0101               	movlb	1	; () banked
  1320  00239E  5180               	movf	(_Parameter+128)& (0+255),w,b
  1321  0023A0  0101               	movlb	1	; () banked
  1322  0023A2  1181               	iorwf	(_Parameter+129)& (0+255),w,b
  1323  0023A4  B4D8               	btfsc	status,2,c
  1324  0023A6  D00A               	goto	l3221
  1325  0023A8                     l3213:
  1326                           
  1327                           ; BSR set to: 1
  1328  0023A8  5035               	movf	_Spacing_Count,w,c
  1329  0023AA  1036               	iorwf	_Spacing_Count+1,w,c
  1330  0023AC  A4D8               	btfss	status,2,c
  1331  0023AE  D006               	goto	l3221
  1332                           
  1333                           ; BSR set to: 1
  1334                           ;message.c: 42: {
  1335                           ;message.c: 43: {PORTDbits.RD5 = 1;};
  1336  0023B0  8A83               	bsf	3971,5,c	;volatile
  1337                           
  1338                           ; BSR set to: 1
  1339                           ;message.c: 44: Message |= ((uint32_t)(1<<0));
  1340  0023B2  0100               	movlb	0	; () banked
  1341  0023B4  81B0               	bsf	_Message& (0+255),0,b	;volatile
  1342                           
  1343                           ; BSR set to: 0
  1344                           ;message.c: 45: Key_StateMachine_Local.Key_Mode = 0;
  1345  0023B6  0E00               	movlw	0
  1346  0023B8  6E38               	movwf	_Key_StateMachine_Local+1,c	;volatile
  1347                           
  1348                           ;message.c: 46: }
  1349  0023BA  D009               	goto	l293
  1350  0023BC                     l3221:
  1351                           
  1352                           ;message.c: 47: else
  1353                           ;message.c: 48: {
  1354                           ;message.c: 49: Message &= ~((uint32_t)(1<<0));
  1355  0023BC  0EFE               	movlw	254
  1356  0023BE  0100               	movlb	0	; () banked
  1357  0023C0  17B0               	andwf	_Message& (0+255),f,b	;volatile
  1358  0023C2  0EFF               	movlw	255
  1359  0023C4  17B1               	andwf	(_Message+1)& (0+255),f,b	;volatile
  1360  0023C6  0EFF               	movlw	255
  1361  0023C8  17B2               	andwf	(_Message+2)& (0+255),f,b	;volatile
  1362  0023CA  0EFF               	movlw	255
  1363  0023CC  17B3               	andwf	(_Message+3)& (0+255),f,b	;volatile
  1364  0023CE                     l293:
  1365                           
  1366                           ; BSR set to: 0
  1367                           ;message.c: 50: }
  1368                           ;message.c: 52: if(((((Key_StateMachine_Local.KeyCode_Bef == 0xfffd)&&(Key_StateMachine_
      +                          Local.Key_Num == 1)&&(Key_StateMachine_Local.Key_Mode == 1)) && !Parameter[16].Value) ||
  1369                           ;message.c: 53: (((Key_StateMachine_Local.KeyCode_Bef == 0xfffd)&&(Key_StateMachine_Loca
      +                          l.Key_Num == 1)&&(Key_StateMachine_Local.Key_Mode == 3)) && Parameter[16].Value)) && (Sp
      +                          acing_Count == 0))
  1370  0023CE  0EFD               	movlw	253
  1371  0023D0  183B               	xorwf	_Key_StateMachine_Local+4,w,c	;volatile
  1372  0023D2  E10F               	bnz	l3229
  1373  0023D4  283C               	incf	_Key_StateMachine_Local+5,w,c	;volatile
  1374  0023D6  A4D8               	btfss	status,2,c
  1375  0023D8  D00C               	goto	l3229
  1376                           
  1377                           ; BSR set to: 0
  1378  0023DA  043D               	decf	_Key_StateMachine_Local+6,w,c	;volatile
  1379  0023DC  A4D8               	btfss	status,2,c
  1380  0023DE  D009               	goto	l3229
  1381                           
  1382                           ; BSR set to: 0
  1383  0023E0  0438               	decf	_Key_StateMachine_Local+1,w,c	;volatile
  1384  0023E2  A4D8               	btfss	status,2,c
  1385  0023E4  D006               	goto	l3229
  1386                           
  1387                           ; BSR set to: 0
  1388  0023E6  0101               	movlb	1	; () banked
  1389  0023E8  5180               	movf	(_Parameter+128)& (0+255),w,b
  1390  0023EA  0101               	movlb	1	; () banked
  1391  0023EC  1181               	iorwf	(_Parameter+129)& (0+255),w,b
  1392  0023EE  B4D8               	btfsc	status,2,c
  1393  0023F0  D013               	goto	l3237
  1394  0023F2                     l3229:
  1395  0023F2  0EFD               	movlw	253
  1396  0023F4  183B               	xorwf	_Key_StateMachine_Local+4,w,c	;volatile
  1397  0023F6  E11A               	bnz	l3245
  1398  0023F8  283C               	incf	_Key_StateMachine_Local+5,w,c	;volatile
  1399  0023FA  A4D8               	btfss	status,2,c
  1400  0023FC  D017               	goto	l3245
  1401  0023FE  043D               	decf	_Key_StateMachine_Local+6,w,c	;volatile
  1402  002400  A4D8               	btfss	status,2,c
  1403  002402  D014               	goto	l3245
  1404  002404  0E03               	movlw	3
  1405  002406  1838               	xorwf	_Key_StateMachine_Local+1,w,c	;volatile
  1406  002408  A4D8               	btfss	status,2,c
  1407  00240A  D010               	goto	l3245
  1408  00240C  0101               	movlb	1	; () banked
  1409  00240E  5180               	movf	(_Parameter+128)& (0+255),w,b
  1410  002410  0101               	movlb	1	; () banked
  1411  002412  1181               	iorwf	(_Parameter+129)& (0+255),w,b
  1412  002414  B4D8               	btfsc	status,2,c
  1413  002416  D00A               	goto	l3245
  1414  002418                     l3237:
  1415                           
  1416                           ; BSR set to: 1
  1417  002418  5035               	movf	_Spacing_Count,w,c
  1418  00241A  1036               	iorwf	_Spacing_Count+1,w,c
  1419  00241C  A4D8               	btfss	status,2,c
  1420  00241E  D006               	goto	l3245
  1421                           
  1422                           ; BSR set to: 1
  1423                           ;message.c: 54: {
  1424                           ;message.c: 55: {PORTDbits.RD5 = 0;};
  1425  002420  9A83               	bcf	3971,5,c	;volatile
  1426                           
  1427                           ; BSR set to: 1
  1428                           ;message.c: 56: Message |= ((uint32_t)(1<<1));
  1429  002422  0100               	movlb	0	; () banked
  1430  002424  83B0               	bsf	_Message& (0+255),1,b	;volatile
  1431                           
  1432                           ; BSR set to: 0
  1433                           ;message.c: 57: Key_StateMachine_Local.Key_Mode = 0;
  1434  002426  0E00               	movlw	0
  1435  002428  6E38               	movwf	_Key_StateMachine_Local+1,c	;volatile
  1436                           
  1437                           ;message.c: 58: }
  1438  00242A  0012               	return	
  1439  00242C                     l3245:
  1440                           
  1441                           ;message.c: 59: else
  1442                           ;message.c: 60: {
  1443                           ;message.c: 61: Message &= ~((uint32_t)(1<<1));
  1444  00242C  0EFD               	movlw	253
  1445  00242E  0100               	movlb	0	; () banked
  1446  002430  17B0               	andwf	_Message& (0+255),f,b	;volatile
  1447  002432  0EFF               	movlw	255
  1448  002434  17B1               	andwf	(_Message+1)& (0+255),f,b	;volatile
  1449  002436  0EFF               	movlw	255
  1450  002438  17B2               	andwf	(_Message+2)& (0+255),f,b	;volatile
  1451  00243A  0EFF               	movlw	255
  1452  00243C  17B3               	andwf	(_Message+3)& (0+255),f,b	;volatile
  1453  00243E  0012               	return	
  1454                           
  1455                           ; BSR set to: 0
  1456                           
  1457                           ; BSR set to: 0
  1458  002440  0012               	return		;funcret
  1459  002442                     __end_of_Message_Send:
  1460                           	opt stack 0
  1461                           tblptru	equ	0xFF8
  1462                           tblptrh	equ	0xFF7
  1463                           tblptrl	equ	0xFF6
  1464                           tablat	equ	0xFF5
  1465                           prodh	equ	0xFF4
  1466                           prodl	equ	0xFF3
  1467                           intcon	equ	0xFF2
  1468                           postinc0	equ	0xFEE
  1469                           wreg	equ	0xFE8
  1470                           postinc1	equ	0xFE6
  1471                           postdec1	equ	0xFE5
  1472                           fsr1h	equ	0xFE2
  1473                           fsr1l	equ	0xFE1
  1474                           postinc2	equ	0xFDE
  1475                           postdec2	equ	0xFDD
  1476                           fsr2h	equ	0xFDA
  1477                           fsr2l	equ	0xFD9
  1478                           status	equ	0xFD8
  1479                           
  1480 ;; *************** function _Message_Manage *****************
  1481 ;; Defined at:
  1482 ;;		line 74 in file "nbproject/private/message.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;		None
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;  i               1    0        unsigned char 
  1487 ;; Return value:  Size  Location     Type
  1488 ;;		None               void
  1489 ;; Registers used:
  1490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1500 ;;Total ram usage:        0 bytes
  1501 ;; Hardware stack levels used:    1
  1502 ;; Hardware stack levels required when called:    7
  1503 ;; This function calls:
  1504 ;;		_Magne_Demag_Dispose
  1505 ;;		_delay_ms
  1506 ;; This function is called by:
  1507 ;;		_main
  1508 ;; This function uses a non-reentrant model
  1509 ;;
  1510                           
  1511                           	psect	text6
  1512  0025BA                     __ptext6:
  1513                           	opt stack 0
  1514  0025BA                     _Message_Manage:
  1515                           	opt stack 23
  1516                           
  1517                           ;message.c: 76: uint8_t i;
  1518                           ;message.c: 78: if(Message & ((uint32_t)(1<<0)))
  1519                           
  1520                           ; BSR set to: 0
  1521                           ;incstack = 0
  1522  0025BA  0100               	movlb	0	; () banked
  1523  0025BC  A1B0               	btfss	_Message& (0+255),0,b	;volatile
  1524  0025BE  D01B               	goto	l303
  1525                           
  1526                           ; BSR set to: 0
  1527                           ;message.c: 79: {
  1528                           ;message.c: 80: ;
  1529                           ;message.c: 81: ;
  1530                           ;message.c: 82: ;
  1531                           ;message.c: 83: delay_ms(10);
  1532  0025C0  0E0A               	movlw	10
  1533  0025C2  6E2E               	movwf	delay_ms@nms,c
  1534  0025C4  0E00               	movlw	0
  1535  0025C6  6E2F               	movwf	delay_ms@nms+1,c
  1536  0025C8  0E00               	movlw	0
  1537  0025CA  6E30               	movwf	delay_ms@nms+2,c
  1538  0025CC  0E00               	movlw	0
  1539  0025CE  6E31               	movwf	delay_ms@nms+3,c
  1540  0025D0  EC7D  F014         	call	_delay_ms	;wreg free
  1541                           
  1542                           ;message.c: 84: MAGNE_Flag = 0;
  1543  0025D4  0E00               	movlw	0
  1544  0025D6  0100               	movlb	0	; () banked
  1545  0025D8  6FB6               	movwf	_MAGNE_Flag& (0+255),b
  1546                           
  1547                           ; BSR set to: 0
  1548                           ;message.c: 85: Magne_Demag_Dispose(MAGNET);
  1549  0025DA  0E01               	movlw	1
  1550  0025DC  ECDF  F00D         	call	_Magne_Demag_Dispose
  1551                           
  1552                           ;message.c: 86: delay_ms(100);
  1553  0025E0  0E64               	movlw	100
  1554  0025E2  6E2E               	movwf	delay_ms@nms,c
  1555  0025E4  0E00               	movlw	0
  1556  0025E6  6E2F               	movwf	delay_ms@nms+1,c
  1557  0025E8  0E00               	movlw	0
  1558  0025EA  6E30               	movwf	delay_ms@nms+2,c
  1559  0025EC  0E00               	movlw	0
  1560  0025EE  6E31               	movwf	delay_ms@nms+3,c
  1561  0025F0  EC7D  F014         	call	_delay_ms	;wreg free
  1562                           
  1563                           ;message.c: 88: {
  1564                           ;message.c: 90: }
  1565  0025F4  D000               	goto	l303
  1566  0025F6                     l303:
  1567                           
  1568                           ;message.c: 94: }
  1569                           ;message.c: 95: }
  1570                           ;message.c: 97: if(Message & ((uint32_t)(1<<1)))
  1571  0025F6  0100               	movlb	0	; () banked
  1572  0025F8  A3B0               	btfss	_Message& (0+255),1,b	;volatile
  1573  0025FA  D01B               	goto	l306
  1574                           
  1575                           ; BSR set to: 0
  1576                           ;message.c: 98: {
  1577                           ;message.c: 99: ;
  1578                           ;message.c: 100: ;
  1579                           ;message.c: 101: ;
  1580                           ;message.c: 102: delay_ms(10);
  1581  0025FC  0E0A               	movlw	10
  1582  0025FE  6E2E               	movwf	delay_ms@nms,c
  1583  002600  0E00               	movlw	0
  1584  002602  6E2F               	movwf	delay_ms@nms+1,c
  1585  002604  0E00               	movlw	0
  1586  002606  6E30               	movwf	delay_ms@nms+2,c
  1587  002608  0E00               	movlw	0
  1588  00260A  6E31               	movwf	delay_ms@nms+3,c
  1589  00260C  EC7D  F014         	call	_delay_ms	;wreg free
  1590                           
  1591                           ;message.c: 103: MAGNE_Flag = 1;
  1592  002610  0E01               	movlw	1
  1593  002612  0100               	movlb	0	; () banked
  1594  002614  6FB6               	movwf	_MAGNE_Flag& (0+255),b
  1595                           
  1596                           ; BSR set to: 0
  1597                           ;message.c: 104: Magne_Demag_Dispose(DEMAG);
  1598  002616  0E00               	movlw	0
  1599  002618  ECDF  F00D         	call	_Magne_Demag_Dispose
  1600                           
  1601                           ;message.c: 105: delay_ms(100);
  1602  00261C  0E64               	movlw	100
  1603  00261E  6E2E               	movwf	delay_ms@nms,c
  1604  002620  0E00               	movlw	0
  1605  002622  6E2F               	movwf	delay_ms@nms+1,c
  1606  002624  0E00               	movlw	0
  1607  002626  6E30               	movwf	delay_ms@nms+2,c
  1608  002628  0E00               	movlw	0
  1609  00262A  6E31               	movwf	delay_ms@nms+3,c
  1610  00262C  EC7D  F014         	call	_delay_ms	;wreg free
  1611                           
  1612                           ;message.c: 107: {
  1613                           ;message.c: 109: }
  1614  002630  D000               	goto	l306
  1615  002632                     l306:
  1616                           
  1617                           ;message.c: 113: }
  1618                           ;message.c: 114: }
  1619                           ;message.c: 117: if(Message & ((uint32_t)(1<<2)))
  1620  002632  0100               	movlb	0	; () banked
  1621  002634  A5B0               	btfss	_Message& (0+255),2,b	;volatile
  1622  002636  D002               	goto	l310
  1623                           
  1624                           ; BSR set to: 0
  1625                           ;message.c: 118: {
  1626                           ;message.c: 119: {PORTDbits.RD4 = 0;};
  1627  002638  9883               	bcf	3971,4,c	;volatile
  1628                           
  1629                           ; BSR set to: 0
  1630                           
  1631                           ;message.c: 120: ;
  1632                           ;message.c: 121: }
  1633  00263A  D000               	goto	l310
  1634  00263C                     l310:
  1635                           
  1636                           ; BSR set to: 0
  1637                           ;message.c: 125: }
  1638                           ;message.c: 127: if(Message & ((uint32_t)(1<<3)))
  1639  00263C  0100               	movlb	0	; () banked
  1640  00263E  A7B0               	btfss	_Message& (0+255),3,b	;volatile
  1641  002640  D002               	goto	l313
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;message.c: 128: {
  1645                           ;message.c: 129: {PORTDbits.RD4 = 0;};
  1646  002642  9883               	bcf	3971,4,c	;volatile
  1647                           
  1648                           ; BSR set to: 0
  1649                           
  1650                           ;message.c: 130: ;
  1651                           ;message.c: 131: }
  1652  002644  D000               	goto	l313
  1653  002646                     l313:
  1654                           
  1655                           ; BSR set to: 0
  1656                           ;message.c: 135: }
  1657                           ;message.c: 137: if((Message & ((uint32_t)(1<<11))) || (Message & ((uint32_t)(1<<4))) ||
      +                           (Message & ((uint32_t)(1<<5))))
  1658  002646  0100               	movlb	0	; () banked
  1659  002648  B7B1               	btfsc	(_Message+1)& (0+255),3,b	;volatile
  1660  00264A  D006               	goto	l317
  1661                           
  1662                           ; BSR set to: 0
  1663  00264C  0100               	movlb	0	; () banked
  1664  00264E  B9B0               	btfsc	_Message& (0+255),4,b	;volatile
  1665  002650  D003               	goto	l317
  1666                           
  1667                           ; BSR set to: 0
  1668  002652  0100               	movlb	0	; () banked
  1669  002654  ABB0               	btfss	_Message& (0+255),5,b	;volatile
  1670  002656  0012               	return	
  1671  002658                     l317:
  1672                           
  1673                           ; BSR set to: 0
  1674                           ;message.c: 138: {
  1675                           ;message.c: 139: {PORTDbits.RD4 = 1;};
  1676  002658  8883               	bsf	3971,4,c	;volatile
  1677                           
  1678                           ; BSR set to: 0
  1679                           
  1680                           ;message.c: 140: ;
  1681                           ;message.c: 141: }
  1682  00265A  0012               	return	
  1683                           
  1684                           ; BSR set to: 0
  1685                           
  1686                           ; BSR set to: 0
  1687                           
  1688                           ;message.c: 142: else
  1689                           ;message.c: 143: {
  1690                           ;message.c: 144: ;
  1691  00265C  0012               	return		;funcret
  1692  00265E                     __end_of_Message_Manage:
  1693                           	opt stack 0
  1694                           tblptru	equ	0xFF8
  1695                           tblptrh	equ	0xFF7
  1696                           tblptrl	equ	0xFF6
  1697                           tablat	equ	0xFF5
  1698                           prodh	equ	0xFF4
  1699                           prodl	equ	0xFF3
  1700                           intcon	equ	0xFF2
  1701                           postinc0	equ	0xFEE
  1702                           wreg	equ	0xFE8
  1703                           postinc1	equ	0xFE6
  1704                           postdec1	equ	0xFE5
  1705                           fsr1h	equ	0xFE2
  1706                           fsr1l	equ	0xFE1
  1707                           postinc2	equ	0xFDE
  1708                           postdec2	equ	0xFDD
  1709                           fsr2h	equ	0xFDA
  1710                           fsr2l	equ	0xFD9
  1711                           status	equ	0xFD8
  1712                           
  1713 ;; *************** function _Magne_Demag_Dispose *****************
  1714 ;; Defined at:
  1715 ;;		line 223 in file "nbproject/private/triac.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;  EMCC_State      1    wreg     enum E8799
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;  EMCC_State      1   27[BANK0 ] enum E8799
  1720 ;;  i               1   29[BANK0 ] unsigned char 
  1721 ;;  j               1   28[BANK0 ] unsigned char 
  1722 ;; Return value:  Size  Location     Type
  1723 ;;		None               void
  1724 ;; Registers used:
  1725 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1732 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1733 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1734 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1735 ;;Total ram usage:        7 bytes
  1736 ;; Hardware stack levels used:    1
  1737 ;; Hardware stack levels required when called:    6
  1738 ;; This function calls:
  1739 ;;		_Relay_Channel_SW
  1740 ;;		_Trica_Mag
  1741 ;;		___lwdiv
  1742 ;;		___wmul
  1743 ;;		_delay_ms
  1744 ;; This function is called by:
  1745 ;;		_Message_Manage
  1746 ;; This function uses a non-reentrant model
  1747 ;;
  1748                           
  1749                           	psect	text7
  1750  001BBE                     __ptext7:
  1751                           	opt stack 0
  1752  001BBE                     _Magne_Demag_Dispose:
  1753                           	opt stack 23
  1754                           
  1755                           ; BSR set to: 0
  1756                           ;incstack = 0
  1757                           ;Magne_Demag_Dispose@EMCC_State stored from wreg
  1758  001BBE  0100               	movlb	0	; () banked
  1759  001BC0  6FF4               	movwf	Magne_Demag_Dispose@EMCC_State& (0+255),b
  1760                           
  1761                           ; BSR set to: 0
  1762                           ;triac.c: 225: uint8_t i,j;
  1763                           ;triac.c: 226: if(EMCC_State == MAGNET)
  1764  001BC2  0100               	movlb	0	; () banked
  1765  001BC4  05F4               	decf	Magne_Demag_Dispose@EMCC_State& (0+255),w,b
  1766  001BC6  A4D8               	btfss	status,2,c
  1767  001BC8  D0E6               	goto	l3093
  1768                           
  1769                           ; BSR set to: 0
  1770                           ;triac.c: 227: {
  1771                           ;triac.c: 228: Message &= ~((uint32_t)(1<<4));
  1772  001BCA  0EEF               	movlw	239
  1773  001BCC  0100               	movlb	0	; () banked
  1774  001BCE  17B0               	andwf	_Message& (0+255),f,b	;volatile
  1775  001BD0  0EFF               	movlw	255
  1776  001BD2  17B1               	andwf	(_Message+1)& (0+255),f,b	;volatile
  1777  001BD4  0EFF               	movlw	255
  1778  001BD6  17B2               	andwf	(_Message+2)& (0+255),f,b	;volatile
  1779  001BD8  0EFF               	movlw	255
  1780  001BDA  17B3               	andwf	(_Message+3)& (0+255),f,b	;volatile
  1781                           
  1782                           ;triac.c: 229: Message &= ~((uint32_t)(1<<5));
  1783  001BDC  0EDF               	movlw	223
  1784  001BDE  0100               	movlb	0	; () banked
  1785  001BE0  17B0               	andwf	_Message& (0+255),f,b	;volatile
  1786  001BE2  0EFF               	movlw	255
  1787  001BE4  17B1               	andwf	(_Message+1)& (0+255),f,b	;volatile
  1788  001BE6  0EFF               	movlw	255
  1789  001BE8  17B2               	andwf	(_Message+2)& (0+255),f,b	;volatile
  1790  001BEA  0EFF               	movlw	255
  1791  001BEC  17B3               	andwf	(_Message+3)& (0+255),f,b	;volatile
  1792                           
  1793                           ;triac.c: 230: if(Parameter[3].Value > 0)
  1794  001BEE  0101               	movlb	1	; () banked
  1795  001BF0  5118               	movf	(_Parameter+24)& (0+255),w,b
  1796  001BF2  0101               	movlb	1	; () banked
  1797  001BF4  1119               	iorwf	(_Parameter+25)& (0+255),w,b
  1798  001BF6  B4D8               	btfsc	status,2,c
  1799  001BF8  D003               	goto	l3039
  1800                           
  1801                           ; BSR set to: 1
  1802                           ;triac.c: 231: {
  1803                           ;triac.c: 232: {PORTDbits.RD0 = 1;PORTDbits.RD1 = 1;};
  1804  001BFA  8083               	bsf	3971,0,c	;volatile
  1805  001BFC  8283               	bsf	3971,1,c	;volatile
  1806  001BFE  D000               	goto	l3039
  1807  001C00                     l3039:
  1808                           
  1809                           ; BSR set to: 1
  1810                           ;triac.c: 234: }
  1811                           ;triac.c: 235: for(i = 0; i < 16; i++)
  1812  001C00  0E00               	movlw	0
  1813  001C02  0100               	movlb	0	; () banked
  1814  001C04  6FF6               	movwf	Magne_Demag_Dispose@i& (0+255),b
  1815  001C06                     l3041:
  1816                           
  1817                           ; BSR set to: 0
  1818  001C06  0E0F               	movlw	15
  1819  001C08  0100               	movlb	0	; () banked
  1820  001C0A  65F6               	cpfsgt	Magne_Demag_Dispose@i& (0+255),b
  1821  001C0C  D001               	goto	l3045
  1822                           
  1823                           ; BSR set to: 0
  1824  001C0E  D0AC               	goto	l3087
  1825  001C10                     l3045:
  1826                           
  1827                           ; BSR set to: 0
  1828                           ;triac.c: 236: {
  1829                           ;triac.c: 237: Magnet_Flag = 1;
  1830  001C10  0E01               	movlw	1
  1831  001C12  0100               	movlb	0	; () banked
  1832  001C14  6FD8               	movwf	_Magnet_Flag& (0+255),b
  1833                           
  1834                           ; BSR set to: 0
  1835                           ;triac.c: 238: if((Parameter[3].Value >> i)&(uint16_t)1)
  1836  001C16  C0F6  F0F0         	movff	Magne_Demag_Dispose@i,??_Magne_Demag_Dispose
  1837  001C1A  EE21  F018         	lfsr	2,_Parameter+24
  1838  001C1E  CFDE F0F1          	movff	postinc2,??_Magne_Demag_Dispose+1
  1839  001C22  CFDD F0F2          	movff	postdec2,??_Magne_Demag_Dispose+2
  1840  001C26  0100               	movlb	0	; () banked
  1841  001C28  2BF0               	incf	??_Magne_Demag_Dispose& (0+255),f,b
  1842  001C2A  D004               	goto	u4554
  1843  001C2C                     u4555:
  1844  001C2C  0100               	movlb	0	; () banked
  1845  001C2E  90D8               	bcf	status,0,c
  1846  001C30  33F2               	rrcf	(??_Magne_Demag_Dispose+2)& (0+255),f,b
  1847  001C32  33F1               	rrcf	(??_Magne_Demag_Dispose+1)& (0+255),f,b
  1848  001C34                     u4554:
  1849  001C34  0100               	movlb	0	; () banked
  1850  001C36  2FF0               	decfsz	??_Magne_Demag_Dispose& (0+255),f,b
  1851  001C38  D7F9               	goto	u4555
  1852  001C3A  0100               	movlb	0	; () banked
  1853  001C3C  A1F1               	btfss	(??_Magne_Demag_Dispose+1)& (0+255),0,b
  1854  001C3E  D068               	goto	l3069
  1855                           
  1856                           ; BSR set to: 0
  1857                           ;triac.c: 239: {
  1858                           ;triac.c: 240: delay_ms(200);
  1859  001C40  0EC8               	movlw	200
  1860  001C42  6E2E               	movwf	delay_ms@nms,c
  1861  001C44  0E00               	movlw	0
  1862  001C46  6E2F               	movwf	delay_ms@nms+1,c
  1863  001C48  0E00               	movlw	0
  1864  001C4A  6E30               	movwf	delay_ms@nms+2,c
  1865  001C4C  0E00               	movlw	0
  1866  001C4E  6E31               	movwf	delay_ms@nms+3,c
  1867  001C50  EC7D  F014         	call	_delay_ms	;wreg free
  1868                           
  1869                           ;triac.c: 241: Relay_Channel_SW(i+1,ENABLE);
  1870  001C54  0E01               	movlw	1
  1871  001C56  6E22               	movwf	Relay_Channel_SW@Flag,c
  1872  001C58  0100               	movlb	0	; () banked
  1873  001C5A  29F6               	incf	Magne_Demag_Dispose@i& (0+255),w,b
  1874  001C5C  EC88  F012         	call	_Relay_Channel_SW
  1875                           
  1876                           ;triac.c: 242: Magnet_Flag = Trica_Mag(MAGNET);
  1877  001C60  0E01               	movlw	1
  1878  001C62  EC09  F008         	call	_Trica_Mag
  1879  001C66  0100               	movlb	0	; () banked
  1880  001C68  6FD8               	movwf	_Magnet_Flag& (0+255),b
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;triac.c: 243: delay_ms(200);
  1884  001C6A  0EC8               	movlw	200
  1885  001C6C  6E2E               	movwf	delay_ms@nms,c
  1886  001C6E  0E00               	movlw	0
  1887  001C70  6E2F               	movwf	delay_ms@nms+1,c
  1888  001C72  0E00               	movlw	0
  1889  001C74  6E30               	movwf	delay_ms@nms+2,c
  1890  001C76  0E00               	movlw	0
  1891  001C78  6E31               	movwf	delay_ms@nms+3,c
  1892  001C7A  EC7D  F014         	call	_delay_ms	;wreg free
  1893                           
  1894                           ;triac.c: 244: Relay_Channel_SW(i+1,DISABLE);
  1895  001C7E  0E00               	movlw	0
  1896  001C80  6E22               	movwf	Relay_Channel_SW@Flag,c
  1897  001C82  0100               	movlb	0	; () banked
  1898  001C84  29F6               	incf	Magne_Demag_Dispose@i& (0+255),w,b
  1899  001C86  EC88  F012         	call	_Relay_Channel_SW
  1900                           
  1901                           ;triac.c: 245: for(j = 0;j < 40; j++)
  1902  001C8A  0E00               	movlw	0
  1903  001C8C  0100               	movlb	0	; () banked
  1904  001C8E  6FF5               	movwf	Magne_Demag_Dispose@j& (0+255),b
  1905  001C90                     l3059:
  1906                           
  1907                           ; BSR set to: 0
  1908  001C90  0E27               	movlw	39
  1909  001C92  0100               	movlb	0	; () banked
  1910  001C94  65F5               	cpfsgt	Magne_Demag_Dispose@j& (0+255),b
  1911  001C96  D001               	goto	l3063
  1912                           
  1913                           ; BSR set to: 0
  1914  001C98  D03B               	goto	l3069
  1915  001C9A                     l3063:
  1916                           
  1917                           ; BSR set to: 0
  1918                           ;triac.c: 246: {
  1919                           ;triac.c: 247: Elec[i][j] = (uint8_t)((Elec_Max[j]+9)/10);
  1920  001C9A  0100               	movlb	0	; () banked
  1921  001C9C  51F6               	movf	Magne_Demag_Dispose@i& (0+255),w,b
  1922  001C9E  0D28               	mullw	40
  1923  001CA0  0E88               	movlw	low _Elec
  1924  001CA2  0100               	movlb	0	; () banked
  1925  001CA4  6FF0               	movwf	??_Magne_Demag_Dispose& (0+255),b
  1926  001CA6  0E01               	movlw	high _Elec
  1927  001CA8  0100               	movlb	0	; () banked
  1928  001CAA  6FF1               	movwf	(??_Magne_Demag_Dispose+1)& (0+255),b
  1929  001CAC  50F3               	movf	prodl,w,c
  1930  001CAE  0100               	movlb	0	; () banked
  1931  001CB0  27F0               	addwf	??_Magne_Demag_Dispose& (0+255),f,b
  1932  001CB2  50F4               	movf	prodh,w,c
  1933  001CB4  0100               	movlb	0	; () banked
  1934  001CB6  23F1               	addwfc	(??_Magne_Demag_Dispose+1)& (0+255),f,b
  1935  001CB8  0100               	movlb	0	; () banked
  1936  001CBA  51F5               	movf	Magne_Demag_Dispose@j& (0+255),w,b
  1937  001CBC  0D01               	mullw	1
  1938  001CBE  50F3               	movf	prodl,w,c
  1939  001CC0  0100               	movlb	0	; () banked
  1940  001CC2  25F0               	addwf	??_Magne_Demag_Dispose& (0+255),w,b
  1941  001CC4  6ED9               	movwf	fsr2l,c
  1942  001CC6  50F4               	movf	prodh,w,c
  1943  001CC8  0100               	movlb	0	; () banked
  1944  001CCA  21F1               	addwfc	(??_Magne_Demag_Dispose+1)& (0+255),w,b
  1945  001CCC  6EDA               	movwf	fsr2h,c
  1946  001CCE  0100               	movlb	0	; () banked
  1947  001CD0  51F5               	movf	Magne_Demag_Dispose@j& (0+255),w,b
  1948  001CD2  0D02               	mullw	2
  1949  001CD4  0E60               	movlw	low _Elec_Max
  1950  001CD6  24F3               	addwf	prodl,w,c
  1951  001CD8  6EE1               	movwf	fsr1l,c
  1952  001CDA  0E00               	movlw	high _Elec_Max
  1953  001CDC  20F4               	addwfc	prodh,w,c
  1954  001CDE  6EE2               	movwf	fsr1h,c
  1955  001CE0  CFE6 F0F2          	movff	postinc1,??_Magne_Demag_Dispose+2
  1956  001CE4  CFE5 F0F3          	movff	postdec1,??_Magne_Demag_Dispose+3
  1957  001CE8  0E09               	movlw	9
  1958  001CEA  0100               	movlb	0	; () banked
  1959  001CEC  25F2               	addwf	(??_Magne_Demag_Dispose+2)& (0+255),w,b
  1960  001CEE  6E22               	movwf	___lwdiv@dividend,c
  1961  001CF0  0E00               	movlw	0
  1962  001CF2  0100               	movlb	0	; () banked
  1963  001CF4  21F3               	addwfc	(??_Magne_Demag_Dispose+3)& (0+255),w,b
  1964  001CF6  6E23               	movwf	___lwdiv@dividend+1,c
  1965  001CF8  0E00               	movlw	0
  1966  001CFA  6E25               	movwf	___lwdiv@divisor+1,c
  1967  001CFC  0E0A               	movlw	10
  1968  001CFE  6E24               	movwf	___lwdiv@divisor,c
  1969  001D00  EC22  F014         	call	___lwdiv	;wreg free
  1970  001D04  5022               	movf	?___lwdiv,w,c
  1971  001D06  6EDF               	movwf	indf2,c
  1972  001D08  0100               	movlb	0	; () banked
  1973  001D0A  2BF5               	incf	Magne_Demag_Dispose@j& (0+255),f,b
  1974  001D0C  D7C1               	goto	l3059
  1975                           
  1976                           ; BSR set to: 0
  1977                           
  1978                           ; BSR set to: 0
  1979  001D0E  D000               	goto	l3069
  1980  001D10                     l3069:
  1981                           
  1982                           ; BSR set to: 0
  1983                           ;triac.c: 248: }
  1984                           ;triac.c: 250: }
  1985                           ;triac.c: 251: if(Magnet_Flag && !(Message & ((uint32_t)(1<<4))))
  1986  001D10  0100               	movlb	0	; () banked
  1987  001D12  51D8               	movf	_Magnet_Flag& (0+255),w,b
  1988  001D14  0100               	movlb	0	; () banked
  1989  001D16  B4D8               	btfsc	status,2,c
  1990  001D18  D010               	goto	l3079
  1991                           
  1992                           ; BSR set to: 0
  1993  001D1A  0100               	movlb	0	; () banked
  1994  001D1C  B9B0               	btfsc	_Message& (0+255),4,b	;volatile
  1995  001D1E  D00D               	goto	l3079
  1996                           
  1997                           ; BSR set to: 0
  1998                           ;triac.c: 252: {
  1999                           ;triac.c: 253: Message |= ((uint32_t)(1<<2));
  2000  001D20  0100               	movlb	0	; () banked
  2001  001D22  85B0               	bsf	_Message& (0+255),2,b	;volatile
  2002                           
  2003                           ; BSR set to: 0
  2004                           ;triac.c: 254: Message &= ~((uint32_t)(1<<3));
  2005  001D24  0EF7               	movlw	247
  2006  001D26  0100               	movlb	0	; () banked
  2007  001D28  17B0               	andwf	_Message& (0+255),f,b	;volatile
  2008  001D2A  0EFF               	movlw	255
  2009  001D2C  17B1               	andwf	(_Message+1)& (0+255),f,b	;volatile
  2010  001D2E  0EFF               	movlw	255
  2011  001D30  17B2               	andwf	(_Message+2)& (0+255),f,b	;volatile
  2012  001D32  0EFF               	movlw	255
  2013  001D34  17B3               	andwf	(_Message+3)& (0+255),f,b	;volatile
  2014                           
  2015                           ; BSR set to: 0
  2016                           ;triac.c: 255: Message &= ~((uint32_t)(1<<4));
  2017  001D36  0EEF               	movlw	239
  2018  001D38  D00C               	goto	L1
  2019  001D3A                     l3079:
  2020                           
  2021                           ; BSR set to: 0
  2022                           ;triac.c: 257: else
  2023                           ;triac.c: 258: {
  2024                           ;triac.c: 259: Message |= ((uint32_t)(1<<4));
  2025  001D3A  0100               	movlb	0	; () banked
  2026  001D3C  89B0               	bsf	_Message& (0+255),4,b	;volatile
  2027                           
  2028                           ; BSR set to: 0
  2029                           ;triac.c: 260: Message &= ~((uint32_t)(1<<2));
  2030  001D3E  0EFB               	movlw	251
  2031  001D40  0100               	movlb	0	; () banked
  2032  001D42  17B0               	andwf	_Message& (0+255),f,b	;volatile
  2033  001D44  0EFF               	movlw	255
  2034  001D46  17B1               	andwf	(_Message+1)& (0+255),f,b	;volatile
  2035  001D48  0EFF               	movlw	255
  2036  001D4A  17B2               	andwf	(_Message+2)& (0+255),f,b	;volatile
  2037  001D4C  0EFF               	movlw	255
  2038  001D4E  17B3               	andwf	(_Message+3)& (0+255),f,b	;volatile
  2039                           
  2040                           ; BSR set to: 0
  2041                           ;triac.c: 261: Message &= ~((uint32_t)(1<<3));
  2042  001D50  0EF7               	movlw	247
  2043  001D52                     L1:
  2044  001D52  0100               	movlb	0	; () banked
  2045  001D54  17B0               	andwf	_Message& (0+255),f,b	;volatile
  2046  001D56  0EFF               	movlw	255
  2047  001D58  17B1               	andwf	(_Message+1)& (0+255),f,b	;volatile
  2048  001D5A  0EFF               	movlw	255
  2049  001D5C  17B2               	andwf	(_Message+2)& (0+255),f,b	;volatile
  2050  001D5E  0EFF               	movlw	255
  2051  001D60  17B3               	andwf	(_Message+3)& (0+255),f,b	;volatile
  2052                           
  2053                           ; BSR set to: 0
  2054  001D62  0100               	movlb	0	; () banked
  2055  001D64  2BF6               	incf	Magne_Demag_Dispose@i& (0+255),f,b
  2056  001D66  D74F               	goto	l3041
  2057  001D68                     l3087:
  2058                           
  2059                           ; BSR set to: 0
  2060                           ;triac.c: 262: }
  2061                           ;triac.c: 263: }
  2062                           ;triac.c: 264: delay_ms(200);
  2063  001D68  0EC8               	movlw	200
  2064  001D6A  6E2E               	movwf	delay_ms@nms,c
  2065  001D6C  0E00               	movlw	0
  2066  001D6E  6E2F               	movwf	delay_ms@nms+1,c
  2067  001D70  0E00               	movlw	0
  2068  001D72  6E30               	movwf	delay_ms@nms+2,c
  2069  001D74  0E00               	movlw	0
  2070  001D76  6E31               	movwf	delay_ms@nms+3,c
  2071  001D78  EC7D  F014         	call	_delay_ms	;wreg free
  2072                           
  2073                           ;triac.c: 265: {PORTDbits.RD0 = 0;PORTDbits.RD1 = 0;};
  2074  001D7C  9083               	bcf	3971,0,c	;volatile
  2075  001D7E  9283               	bcf	3971,1,c	;volatile
  2076                           
  2077                           ;triac.c: 267: delay_ms(200);
  2078  001D80  0EC8               	movlw	200
  2079  001D82  6E2E               	movwf	delay_ms@nms,c
  2080  001D84  0E00               	movlw	0
  2081  001D86  6E2F               	movwf	delay_ms@nms+1,c
  2082  001D88  0E00               	movlw	0
  2083  001D8A  6E30               	movwf	delay_ms@nms+2,c
  2084  001D8C  0E00               	movlw	0
  2085  001D8E  6E31               	movwf	delay_ms@nms+3,c
  2086  001D90  EC7D  F014         	call	_delay_ms	;wreg free
  2087                           
  2088                           ;triac.c: 268: }
  2089  001D94  D0EB               	goto	l3153
  2090  001D96                     l3093:
  2091                           
  2092                           ;triac.c: 269: else if(EMCC_State == DEMAG)
  2093  001D96  0100               	movlb	0	; () banked
  2094  001D98  51F4               	movf	Magne_Demag_Dispose@EMCC_State& (0+255),w,b
  2095  001D9A  0100               	movlb	0	; () banked
  2096  001D9C  A4D8               	btfss	status,2,c
  2097  001D9E  D0E6               	goto	l3153
  2098                           
  2099                           ; BSR set to: 0
  2100                           ;triac.c: 270: {
  2101                           ;triac.c: 271: Message &= ~((uint32_t)(1<<5));
  2102  001DA0  0EDF               	movlw	223
  2103  001DA2  0100               	movlb	0	; () banked
  2104  001DA4  17B0               	andwf	_Message& (0+255),f,b	;volatile
  2105  001DA6  0EFF               	movlw	255
  2106  001DA8  17B1               	andwf	(_Message+1)& (0+255),f,b	;volatile
  2107  001DAA  0EFF               	movlw	255
  2108  001DAC  17B2               	andwf	(_Message+2)& (0+255),f,b	;volatile
  2109  001DAE  0EFF               	movlw	255
  2110  001DB0  17B3               	andwf	(_Message+3)& (0+255),f,b	;volatile
  2111                           
  2112                           ;triac.c: 272: Message &= ~((uint32_t)(1<<4));
  2113  001DB2  0EEF               	movlw	239
  2114  001DB4  0100               	movlb	0	; () banked
  2115  001DB6  17B0               	andwf	_Message& (0+255),f,b	;volatile
  2116  001DB8  0EFF               	movlw	255
  2117  001DBA  17B1               	andwf	(_Message+1)& (0+255),f,b	;volatile
  2118  001DBC  0EFF               	movlw	255
  2119  001DBE  17B2               	andwf	(_Message+2)& (0+255),f,b	;volatile
  2120  001DC0  0EFF               	movlw	255
  2121  001DC2  17B3               	andwf	(_Message+3)& (0+255),f,b	;volatile
  2122                           
  2123                           ;triac.c: 273: if(Parameter[3].Value > 0)
  2124  001DC4  0101               	movlb	1	; () banked
  2125  001DC6  5118               	movf	(_Parameter+24)& (0+255),w,b
  2126  001DC8  0101               	movlb	1	; () banked
  2127  001DCA  1119               	iorwf	(_Parameter+25)& (0+255),w,b
  2128  001DCC  B4D8               	btfsc	status,2,c
  2129  001DCE  D003               	goto	l3099
  2130                           
  2131                           ; BSR set to: 1
  2132                           ;triac.c: 274: {
  2133                           ;triac.c: 275: {PORTDbits.RD0 = 1;PORTDbits.RD1 = 1;};
  2134  001DD0  8083               	bsf	3971,0,c	;volatile
  2135  001DD2  8283               	bsf	3971,1,c	;volatile
  2136  001DD4  D000               	goto	l3099
  2137  001DD6                     l3099:
  2138                           
  2139                           ; BSR set to: 1
  2140                           ;triac.c: 277: }
  2141                           ;triac.c: 278: for(i = 0; i < 16; i++)
  2142  001DD6  0E00               	movlw	0
  2143  001DD8  0100               	movlb	0	; () banked
  2144  001DDA  6FF6               	movwf	Magne_Demag_Dispose@i& (0+255),b
  2145  001DDC                     l3101:
  2146                           
  2147                           ; BSR set to: 0
  2148  001DDC  0E0F               	movlw	15
  2149  001DDE  0100               	movlb	0	; () banked
  2150  001DE0  65F6               	cpfsgt	Magne_Demag_Dispose@i& (0+255),b
  2151  001DE2  D001               	goto	l3105
  2152                           
  2153                           ; BSR set to: 0
  2154  001DE4  D0AC               	goto	l3147
  2155  001DE6                     l3105:
  2156                           
  2157                           ; BSR set to: 0
  2158                           ;triac.c: 279: {
  2159                           ;triac.c: 280: Demag_Flag = 1;
  2160  001DE6  0E01               	movlw	1
  2161  001DE8  0100               	movlb	0	; () banked
  2162  001DEA  6FD7               	movwf	_Demag_Flag& (0+255),b
  2163                           
  2164                           ; BSR set to: 0
  2165                           ;triac.c: 281: if((Parameter[3].Value >> i)&(uint16_t)1)
  2166  001DEC  C0F6  F0F0         	movff	Magne_Demag_Dispose@i,??_Magne_Demag_Dispose
  2167  001DF0  EE21  F018         	lfsr	2,_Parameter+24
  2168  001DF4  CFDE F0F1          	movff	postinc2,??_Magne_Demag_Dispose+1
  2169  001DF8  CFDD F0F2          	movff	postdec2,??_Magne_Demag_Dispose+2
  2170  001DFC  0100               	movlb	0	; () banked
  2171  001DFE  2BF0               	incf	??_Magne_Demag_Dispose& (0+255),f,b
  2172  001E00  D004               	goto	u4654
  2173  001E02                     u4655:
  2174  001E02  0100               	movlb	0	; () banked
  2175  001E04  90D8               	bcf	status,0,c
  2176  001E06  33F2               	rrcf	(??_Magne_Demag_Dispose+2)& (0+255),f,b
  2177  001E08  33F1               	rrcf	(??_Magne_Demag_Dispose+1)& (0+255),f,b
  2178  001E0A                     u4654:
  2179  001E0A  0100               	movlb	0	; () banked
  2180  001E0C  2FF0               	decfsz	??_Magne_Demag_Dispose& (0+255),f,b
  2181  001E0E  D7F9               	goto	u4655
  2182  001E10  0100               	movlb	0	; () banked
  2183  001E12  A1F1               	btfss	(??_Magne_Demag_Dispose+1)& (0+255),0,b
  2184  001E14  D068               	goto	l3129
  2185                           
  2186                           ; BSR set to: 0
  2187                           ;triac.c: 282: {
  2188                           ;triac.c: 283: delay_ms(200);
  2189  001E16  0EC8               	movlw	200
  2190  001E18  6E2E               	movwf	delay_ms@nms,c
  2191  001E1A  0E00               	movlw	0
  2192  001E1C  6E2F               	movwf	delay_ms@nms+1,c
  2193  001E1E  0E00               	movlw	0
  2194  001E20  6E30               	movwf	delay_ms@nms+2,c
  2195  001E22  0E00               	movlw	0
  2196  001E24  6E31               	movwf	delay_ms@nms+3,c
  2197  001E26  EC7D  F014         	call	_delay_ms	;wreg free
  2198                           
  2199                           ;triac.c: 284: Relay_Channel_SW(i+1,ENABLE);
  2200  001E2A  0E01               	movlw	1
  2201  001E2C  6E22               	movwf	Relay_Channel_SW@Flag,c
  2202  001E2E  0100               	movlb	0	; () banked
  2203  001E30  29F6               	incf	Magne_Demag_Dispose@i& (0+255),w,b
  2204  001E32  EC88  F012         	call	_Relay_Channel_SW
  2205                           
  2206                           ;triac.c: 285: Demag_Flag = Trica_Mag(DEMAG);
  2207  001E36  0E00               	movlw	0
  2208  001E38  EC09  F008         	call	_Trica_Mag
  2209  001E3C  0100               	movlb	0	; () banked
  2210  001E3E  6FD7               	movwf	_Demag_Flag& (0+255),b
  2211                           
  2212                           ; BSR set to: 0
  2213                           ;triac.c: 286: delay_ms(200);
  2214  001E40  0EC8               	movlw	200
  2215  001E42  6E2E               	movwf	delay_ms@nms,c
  2216  001E44  0E00               	movlw	0
  2217  001E46  6E2F               	movwf	delay_ms@nms+1,c
  2218  001E48  0E00               	movlw	0
  2219  001E4A  6E30               	movwf	delay_ms@nms+2,c
  2220  001E4C  0E00               	movlw	0
  2221  001E4E  6E31               	movwf	delay_ms@nms+3,c
  2222  001E50  EC7D  F014         	call	_delay_ms	;wreg free
  2223                           
  2224                           ;triac.c: 287: Relay_Channel_SW(i+1,DISABLE);
  2225  001E54  0E00               	movlw	0
  2226  001E56  6E22               	movwf	Relay_Channel_SW@Flag,c
  2227  001E58  0100               	movlb	0	; () banked
  2228  001E5A  29F6               	incf	Magne_Demag_Dispose@i& (0+255),w,b
  2229  001E5C  EC88  F012         	call	_Relay_Channel_SW
  2230                           
  2231                           ;triac.c: 289: for(j = 0;j < 40; j++)
  2232  001E60  0E00               	movlw	0
  2233  001E62  0100               	movlb	0	; () banked
  2234  001E64  6FF5               	movwf	Magne_Demag_Dispose@j& (0+255),b
  2235  001E66                     l3119:
  2236                           
  2237                           ; BSR set to: 0
  2238  001E66  0E27               	movlw	39
  2239  001E68  0100               	movlb	0	; () banked
  2240  001E6A  65F5               	cpfsgt	Magne_Demag_Dispose@j& (0+255),b
  2241  001E6C  D001               	goto	l3123
  2242                           
  2243                           ; BSR set to: 0
  2244  001E6E  D03B               	goto	l3129
  2245  001E70                     l3123:
  2246                           
  2247                           ; BSR set to: 0
  2248                           ;triac.c: 290: {
  2249                           ;triac.c: 291: Elec[i][j] = (uint8_t)((Elec_Max[j]+9)/10);
  2250  001E70  0100               	movlb	0	; () banked
  2251  001E72  51F6               	movf	Magne_Demag_Dispose@i& (0+255),w,b
  2252  001E74  0D28               	mullw	40
  2253  001E76  0E88               	movlw	low _Elec
  2254  001E78  0100               	movlb	0	; () banked
  2255  001E7A  6FF0               	movwf	??_Magne_Demag_Dispose& (0+255),b
  2256  001E7C  0E01               	movlw	high _Elec
  2257  001E7E  0100               	movlb	0	; () banked
  2258  001E80  6FF1               	movwf	(??_Magne_Demag_Dispose+1)& (0+255),b
  2259  001E82  50F3               	movf	prodl,w,c
  2260  001E84  0100               	movlb	0	; () banked
  2261  001E86  27F0               	addwf	??_Magne_Demag_Dispose& (0+255),f,b
  2262  001E88  50F4               	movf	prodh,w,c
  2263  001E8A  0100               	movlb	0	; () banked
  2264  001E8C  23F1               	addwfc	(??_Magne_Demag_Dispose+1)& (0+255),f,b
  2265  001E8E  0100               	movlb	0	; () banked
  2266  001E90  51F5               	movf	Magne_Demag_Dispose@j& (0+255),w,b
  2267  001E92  0D01               	mullw	1
  2268  001E94  50F3               	movf	prodl,w,c
  2269  001E96  0100               	movlb	0	; () banked
  2270  001E98  25F0               	addwf	??_Magne_Demag_Dispose& (0+255),w,b
  2271  001E9A  6ED9               	movwf	fsr2l,c
  2272  001E9C  50F4               	movf	prodh,w,c
  2273  001E9E  0100               	movlb	0	; () banked
  2274  001EA0  21F1               	addwfc	(??_Magne_Demag_Dispose+1)& (0+255),w,b
  2275  001EA2  6EDA               	movwf	fsr2h,c
  2276  001EA4  0100               	movlb	0	; () banked
  2277  001EA6  51F5               	movf	Magne_Demag_Dispose@j& (0+255),w,b
  2278  001EA8  0D02               	mullw	2
  2279  001EAA  0E60               	movlw	low _Elec_Max
  2280  001EAC  24F3               	addwf	prodl,w,c
  2281  001EAE  6EE1               	movwf	fsr1l,c
  2282  001EB0  0E00               	movlw	high _Elec_Max
  2283  001EB2  20F4               	addwfc	prodh,w,c
  2284  001EB4  6EE2               	movwf	fsr1h,c
  2285  001EB6  CFE6 F0F2          	movff	postinc1,??_Magne_Demag_Dispose+2
  2286  001EBA  CFE5 F0F3          	movff	postdec1,??_Magne_Demag_Dispose+3
  2287  001EBE  0E09               	movlw	9
  2288  001EC0  0100               	movlb	0	; () banked
  2289  001EC2  25F2               	addwf	(??_Magne_Demag_Dispose+2)& (0+255),w,b
  2290  001EC4  6E22               	movwf	___lwdiv@dividend,c
  2291  001EC6  0E00               	movlw	0
  2292  001EC8  0100               	movlb	0	; () banked
  2293  001ECA  21F3               	addwfc	(??_Magne_Demag_Dispose+3)& (0+255),w,b
  2294  001ECC  6E23               	movwf	___lwdiv@dividend+1,c
  2295  001ECE  0E00               	movlw	0
  2296  001ED0  6E25               	movwf	___lwdiv@divisor+1,c
  2297  001ED2  0E0A               	movlw	10
  2298  001ED4  6E24               	movwf	___lwdiv@divisor,c
  2299  001ED6  EC22  F014         	call	___lwdiv	;wreg free
  2300  001EDA  5022               	movf	?___lwdiv,w,c
  2301  001EDC  6EDF               	movwf	indf2,c
  2302  001EDE  0100               	movlb	0	; () banked
  2303  001EE0  2BF5               	incf	Magne_Demag_Dispose@j& (0+255),f,b
  2304  001EE2  D7C1               	goto	l3119
  2305                           
  2306                           ; BSR set to: 0
  2307                           
  2308                           ; BSR set to: 0
  2309  001EE4  D000               	goto	l3129
  2310  001EE6                     l3129:
  2311                           
  2312                           ; BSR set to: 0
  2313                           ;triac.c: 292: }
  2314                           ;triac.c: 294: }
  2315                           ;triac.c: 295: if(Demag_Flag && !(Message & ((uint32_t)(1<<5))))
  2316  001EE6  0100               	movlb	0	; () banked
  2317  001EE8  51D7               	movf	_Demag_Flag& (0+255),w,b
  2318  001EEA  0100               	movlb	0	; () banked
  2319  001EEC  B4D8               	btfsc	status,2,c
  2320  001EEE  D010               	goto	l3139
  2321                           
  2322                           ; BSR set to: 0
  2323  001EF0  0100               	movlb	0	; () banked
  2324  001EF2  BBB0               	btfsc	_Message& (0+255),5,b	;volatile
  2325  001EF4  D00D               	goto	l3139
  2326                           
  2327                           ; BSR set to: 0
  2328                           ;triac.c: 296: {
  2329                           ;triac.c: 297: Message |= ((uint32_t)(1<<3));
  2330  001EF6  0100               	movlb	0	; () banked
  2331  001EF8  87B0               	bsf	_Message& (0+255),3,b	;volatile
  2332                           
  2333                           ; BSR set to: 0
  2334                           ;triac.c: 298: Message &= ~((uint32_t)(1<<2));
  2335  001EFA  0EFB               	movlw	251
  2336  001EFC  0100               	movlb	0	; () banked
  2337  001EFE  17B0               	andwf	_Message& (0+255),f,b	;volatile
  2338  001F00  0EFF               	movlw	255
  2339  001F02  17B1               	andwf	(_Message+1)& (0+255),f,b	;volatile
  2340  001F04  0EFF               	movlw	255
  2341  001F06  17B2               	andwf	(_Message+2)& (0+255),f,b	;volatile
  2342  001F08  0EFF               	movlw	255
  2343  001F0A  17B3               	andwf	(_Message+3)& (0+255),f,b	;volatile
  2344                           
  2345                           ; BSR set to: 0
  2346                           ;triac.c: 299: Message &= ~((uint32_t)(1<<5));
  2347  001F0C  0EDF               	movlw	223
  2348  001F0E  D00C               	goto	L2
  2349  001F10                     l3139:
  2350                           
  2351                           ; BSR set to: 0
  2352                           ;triac.c: 301: else
  2353                           ;triac.c: 302: {
  2354                           ;triac.c: 303: Message |= ((uint32_t)(1<<5));
  2355  001F10  0100               	movlb	0	; () banked
  2356  001F12  8BB0               	bsf	_Message& (0+255),5,b	;volatile
  2357                           
  2358                           ; BSR set to: 0
  2359                           ;triac.c: 304: Message &= ~((uint32_t)(1<<3));
  2360  001F14  0EF7               	movlw	247
  2361  001F16  0100               	movlb	0	; () banked
  2362  001F18  17B0               	andwf	_Message& (0+255),f,b	;volatile
  2363  001F1A  0EFF               	movlw	255
  2364  001F1C  17B1               	andwf	(_Message+1)& (0+255),f,b	;volatile
  2365  001F1E  0EFF               	movlw	255
  2366  001F20  17B2               	andwf	(_Message+2)& (0+255),f,b	;volatile
  2367  001F22  0EFF               	movlw	255
  2368  001F24  17B3               	andwf	(_Message+3)& (0+255),f,b	;volatile
  2369                           
  2370                           ; BSR set to: 0
  2371                           ;triac.c: 305: Message &= ~((uint32_t)(1<<2));
  2372  001F26  0EFB               	movlw	251
  2373  001F28                     L2:
  2374  001F28  0100               	movlb	0	; () banked
  2375  001F2A  17B0               	andwf	_Message& (0+255),f,b	;volatile
  2376  001F2C  0EFF               	movlw	255
  2377  001F2E  17B1               	andwf	(_Message+1)& (0+255),f,b	;volatile
  2378  001F30  0EFF               	movlw	255
  2379  001F32  17B2               	andwf	(_Message+2)& (0+255),f,b	;volatile
  2380  001F34  0EFF               	movlw	255
  2381  001F36  17B3               	andwf	(_Message+3)& (0+255),f,b	;volatile
  2382                           
  2383                           ; BSR set to: 0
  2384  001F38  0100               	movlb	0	; () banked
  2385  001F3A  2BF6               	incf	Magne_Demag_Dispose@i& (0+255),f,b
  2386  001F3C  D74F               	goto	l3101
  2387  001F3E                     l3147:
  2388                           
  2389                           ; BSR set to: 0
  2390                           ;triac.c: 306: }
  2391                           ;triac.c: 307: }
  2392                           ;triac.c: 308: delay_ms(200);
  2393  001F3E  0EC8               	movlw	200
  2394  001F40  6E2E               	movwf	delay_ms@nms,c
  2395  001F42  0E00               	movlw	0
  2396  001F44  6E2F               	movwf	delay_ms@nms+1,c
  2397  001F46  0E00               	movlw	0
  2398  001F48  6E30               	movwf	delay_ms@nms+2,c
  2399  001F4A  0E00               	movlw	0
  2400  001F4C  6E31               	movwf	delay_ms@nms+3,c
  2401  001F4E  EC7D  F014         	call	_delay_ms	;wreg free
  2402                           
  2403                           ;triac.c: 309: {PORTDbits.RD0 = 0;PORTDbits.RD1 = 0;};
  2404  001F52  9083               	bcf	3971,0,c	;volatile
  2405  001F54  9283               	bcf	3971,1,c	;volatile
  2406                           
  2407                           ;triac.c: 311: delay_ms(200);
  2408  001F56  0EC8               	movlw	200
  2409  001F58  6E2E               	movwf	delay_ms@nms,c
  2410  001F5A  0E00               	movlw	0
  2411  001F5C  6E2F               	movwf	delay_ms@nms+1,c
  2412  001F5E  0E00               	movlw	0
  2413  001F60  6E30               	movwf	delay_ms@nms+2,c
  2414  001F62  0E00               	movlw	0
  2415  001F64  6E31               	movwf	delay_ms@nms+3,c
  2416  001F66  EC7D  F014         	call	_delay_ms	;wreg free
  2417  001F6A  D000               	goto	l3153
  2418  001F6C                     l3153:
  2419                           
  2420                           ;triac.c: 312: }
  2421                           ;triac.c: 313: Spacing_Count = Parameter[13].Value*50;
  2422  001F6C  C168  F022         	movff	_Parameter+104,___wmul@multiplier
  2423  001F70  C169  F023         	movff	_Parameter+105,___wmul@multiplier+1
  2424  001F74  0E00               	movlw	0
  2425  001F76  6E25               	movwf	___wmul@multiplicand+1,c
  2426  001F78  0E32               	movlw	50
  2427  001F7A  6E24               	movwf	___wmul@multiplicand,c
  2428  001F7C  ECF6  F014         	call	___wmul	;wreg free
  2429  001F80  C022  F035         	movff	?___wmul,_Spacing_Count
  2430  001F84  C023  F036         	movff	?___wmul+1,_Spacing_Count+1
  2431  001F88  0012               	return		;funcret
  2432  001F8A                     __end_of_Magne_Demag_Dispose:
  2433                           	opt stack 0
  2434                           tblptru	equ	0xFF8
  2435                           tblptrh	equ	0xFF7
  2436                           tblptrl	equ	0xFF6
  2437                           tablat	equ	0xFF5
  2438                           prodh	equ	0xFF4
  2439                           prodl	equ	0xFF3
  2440                           intcon	equ	0xFF2
  2441                           postinc0	equ	0xFEE
  2442                           wreg	equ	0xFE8
  2443                           postinc1	equ	0xFE6
  2444                           postdec1	equ	0xFE5
  2445                           fsr1h	equ	0xFE2
  2446                           fsr1l	equ	0xFE1
  2447                           indf2	equ	0xFDF
  2448                           postinc2	equ	0xFDE
  2449                           postdec2	equ	0xFDD
  2450                           fsr2h	equ	0xFDA
  2451                           fsr2l	equ	0xFD9
  2452                           status	equ	0xFD8
  2453                           
  2454 ;; *************** function _delay_ms *****************
  2455 ;; Defined at:
  2456 ;;		line 45 in file "nbproject/private/delay.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;  nms             4   45[COMRAM] unsigned long 
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;		None
  2461 ;; Return value:  Size  Location     Type
  2462 ;;		None               void
  2463 ;; Registers used:
  2464 ;;		wreg, status,2, status,0, cstack
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2470 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2473 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2474 ;;Total ram usage:        4 bytes
  2475 ;; Hardware stack levels used:    1
  2476 ;; Hardware stack levels required when called:    4
  2477 ;; This function calls:
  2478 ;;		___lmul
  2479 ;; This function is called by:
  2480 ;;		_Magne_Demag_Dispose
  2481 ;;		_Message_Manage
  2482 ;; This function uses a non-reentrant model
  2483 ;;
  2484                           
  2485                           	psect	text8
  2486  0028FA                     __ptext8:
  2487                           	opt stack 0
  2488  0028FA                     _delay_ms:
  2489                           	opt stack 25
  2490                           
  2491                           ;delay.c: 47: nms = nms*1000;
  2492                           
  2493                           ;incstack = 0
  2494  0028FA  C02E  F022         	movff	delay_ms@nms,___lmul@multiplier
  2495  0028FE  C02F  F023         	movff	delay_ms@nms+1,___lmul@multiplier+1
  2496  002902  C030  F024         	movff	delay_ms@nms+2,___lmul@multiplier+2
  2497  002906  C031  F025         	movff	delay_ms@nms+3,___lmul@multiplier+3
  2498  00290A  0EE8               	movlw	232
  2499  00290C  6E26               	movwf	___lmul@multiplicand,c
  2500  00290E  0E03               	movlw	3
  2501  002910  6E27               	movwf	___lmul@multiplicand+1,c
  2502  002912  0E00               	movlw	0
  2503  002914  6E28               	movwf	___lmul@multiplicand+2,c
  2504  002916  0E00               	movlw	0
  2505  002918  6E29               	movwf	___lmul@multiplicand+3,c
  2506  00291A  EC50  F014         	call	___lmul	;wreg free
  2507  00291E  C022  F02E         	movff	?___lmul,delay_ms@nms
  2508  002922  C023  F02F         	movff	?___lmul+1,delay_ms@nms+1
  2509  002926  C024  F030         	movff	?___lmul+2,delay_ms@nms+2
  2510  00292A  C025  F031         	movff	?___lmul+3,delay_ms@nms+3
  2511                           
  2512                           ;delay.c: 48: while(nms--);
  2513  00292E  D000               	goto	l2959
  2514  002930                     l2959:
  2515  002930  062E               	decf	delay_ms@nms,f,c
  2516  002932  0E00               	movlw	0
  2517  002934  5A2F               	subwfb	delay_ms@nms+1,f,c
  2518  002936  5A30               	subwfb	delay_ms@nms+2,f,c
  2519  002938  5A31               	subwfb	delay_ms@nms+3,f,c
  2520  00293A  282E               	incf	delay_ms@nms,w,c
  2521  00293C  E1F9               	bnz	l2959
  2522  00293E  282F               	incf	delay_ms@nms+1,w,c
  2523  002940  E1F7               	bnz	l2959
  2524  002942  2830               	incf	delay_ms@nms+2,w,c
  2525  002944  E1F5               	bnz	l2959
  2526  002946  2831               	incf	delay_ms@nms+3,w,c
  2527  002948  A4D8               	btfss	status,2,c
  2528  00294A  D7F2               	goto	l2959
  2529  00294C  0012               	return		;funcret
  2530  00294E                     __end_of_delay_ms:
  2531                           	opt stack 0
  2532                           tblptru	equ	0xFF8
  2533                           tblptrh	equ	0xFF7
  2534                           tblptrl	equ	0xFF6
  2535                           tablat	equ	0xFF5
  2536                           prodh	equ	0xFF4
  2537                           prodl	equ	0xFF3
  2538                           intcon	equ	0xFF2
  2539                           postinc0	equ	0xFEE
  2540                           wreg	equ	0xFE8
  2541                           postinc1	equ	0xFE6
  2542                           postdec1	equ	0xFE5
  2543                           fsr1h	equ	0xFE2
  2544                           fsr1l	equ	0xFE1
  2545                           indf2	equ	0xFDF
  2546                           postinc2	equ	0xFDE
  2547                           postdec2	equ	0xFDD
  2548                           fsr2h	equ	0xFDA
  2549                           fsr2l	equ	0xFD9
  2550                           status	equ	0xFD8
  2551                           
  2552 ;; *************** function ___lmul *****************
  2553 ;; Defined at:
  2554 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v1.34\sources\common\Umul32.c"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;  multiplier      4   33[COMRAM] unsigned long 
  2557 ;;  multiplicand    4   37[COMRAM] unsigned long 
  2558 ;; Auto vars:     Size  Location     Type
  2559 ;;  product         4   41[COMRAM] unsigned long 
  2560 ;; Return value:  Size  Location     Type
  2561 ;;                  4   33[COMRAM] unsigned long 
  2562 ;; Registers used:
  2563 ;;		wreg, status,2, status,0
  2564 ;; Tracked objects:
  2565 ;;		On entry : 0/0
  2566 ;;		On exit  : 0/0
  2567 ;;		Unchanged: 0/0
  2568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2569 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2570 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2572 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2573 ;;Total ram usage:       12 bytes
  2574 ;; Hardware stack levels used:    1
  2575 ;; Hardware stack levels required when called:    3
  2576 ;; This function calls:
  2577 ;;		Nothing
  2578 ;; This function is called by:
  2579 ;;		_delay_ms
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           
  2583                           	psect	text9
  2584  0028A0                     __ptext9:
  2585                           	opt stack 0
  2586  0028A0                     ___lmul:
  2587                           	opt stack 25
  2588                           
  2589                           ;incstack = 0
  2590  0028A0  0E00               	movlw	0
  2591  0028A2  6E2A               	movwf	___lmul@product,c
  2592  0028A4  0E00               	movlw	0
  2593  0028A6  6E2B               	movwf	___lmul@product+1,c
  2594  0028A8  0E00               	movlw	0
  2595  0028AA  6E2C               	movwf	___lmul@product+2,c
  2596  0028AC  0E00               	movlw	0
  2597  0028AE  6E2D               	movwf	___lmul@product+3,c
  2598  0028B0  D000               	goto	l2733
  2599  0028B2                     l2733:
  2600  0028B2  A022               	btfss	___lmul@multiplier,0,c
  2601  0028B4  D009               	goto	l2737
  2602  0028B6  5026               	movf	___lmul@multiplicand,w,c
  2603  0028B8  262A               	addwf	___lmul@product,f,c
  2604  0028BA  5027               	movf	___lmul@multiplicand+1,w,c
  2605  0028BC  222B               	addwfc	___lmul@product+1,f,c
  2606  0028BE  5028               	movf	___lmul@multiplicand+2,w,c
  2607  0028C0  222C               	addwfc	___lmul@product+2,f,c
  2608  0028C2  5029               	movf	___lmul@multiplicand+3,w,c
  2609  0028C4  222D               	addwfc	___lmul@product+3,f,c
  2610  0028C6  D000               	goto	l2737
  2611  0028C8                     l2737:
  2612  0028C8  90D8               	bcf	status,0,c
  2613  0028CA  3626               	rlcf	___lmul@multiplicand,f,c
  2614  0028CC  3627               	rlcf	___lmul@multiplicand+1,f,c
  2615  0028CE  3628               	rlcf	___lmul@multiplicand+2,f,c
  2616  0028D0  3629               	rlcf	___lmul@multiplicand+3,f,c
  2617  0028D2  90D8               	bcf	status,0,c
  2618  0028D4  3225               	rrcf	___lmul@multiplier+3,f,c
  2619  0028D6  3224               	rrcf	___lmul@multiplier+2,f,c
  2620  0028D8  3223               	rrcf	___lmul@multiplier+1,f,c
  2621  0028DA  3222               	rrcf	___lmul@multiplier,f,c
  2622  0028DC  5022               	movf	___lmul@multiplier,w,c
  2623  0028DE  1023               	iorwf	___lmul@multiplier+1,w,c
  2624  0028E0  1024               	iorwf	___lmul@multiplier+2,w,c
  2625  0028E2  1025               	iorwf	___lmul@multiplier+3,w,c
  2626  0028E4  A4D8               	btfss	status,2,c
  2627  0028E6  D7E5               	goto	l2733
  2628  0028E8  C02A  F022         	movff	___lmul@product,?___lmul
  2629  0028EC  C02B  F023         	movff	___lmul@product+1,?___lmul+1
  2630  0028F0  C02C  F024         	movff	___lmul@product+2,?___lmul+2
  2631  0028F4  C02D  F025         	movff	___lmul@product+3,?___lmul+3
  2632  0028F8  0012               	return		;funcret
  2633  0028FA                     __end_of___lmul:
  2634                           	opt stack 0
  2635                           tblptru	equ	0xFF8
  2636                           tblptrh	equ	0xFF7
  2637                           tblptrl	equ	0xFF6
  2638                           tablat	equ	0xFF5
  2639                           prodh	equ	0xFF4
  2640                           prodl	equ	0xFF3
  2641                           intcon	equ	0xFF2
  2642                           postinc0	equ	0xFEE
  2643                           wreg	equ	0xFE8
  2644                           postinc1	equ	0xFE6
  2645                           postdec1	equ	0xFE5
  2646                           fsr1h	equ	0xFE2
  2647                           fsr1l	equ	0xFE1
  2648                           indf2	equ	0xFDF
  2649                           postinc2	equ	0xFDE
  2650                           postdec2	equ	0xFDD
  2651                           fsr2h	equ	0xFDA
  2652                           fsr2l	equ	0xFD9
  2653                           status	equ	0xFD8
  2654                           
  2655 ;; *************** function ___lwdiv *****************
  2656 ;; Defined at:
  2657 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;  dividend        2   33[COMRAM] unsigned int 
  2660 ;;  divisor         2   35[COMRAM] unsigned int 
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;  quotient        2   38[COMRAM] unsigned int 
  2663 ;;  counter         1   37[COMRAM] unsigned char 
  2664 ;; Return value:  Size  Location     Type
  2665 ;;                  2   33[COMRAM] unsigned int 
  2666 ;; Registers used:
  2667 ;;		wreg, status,2, status,0
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/0
  2670 ;;		On exit  : 0/0
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2673 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2674 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2676 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2677 ;;Total ram usage:        7 bytes
  2678 ;; Hardware stack levels used:    1
  2679 ;; Hardware stack levels required when called:    3
  2680 ;; This function calls:
  2681 ;;		Nothing
  2682 ;; This function is called by:
  2683 ;;		_Magne_Demag_Dispose
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686                           
  2687                           	psect	text10
  2688  002844                     __ptext10:
  2689                           	opt stack 0
  2690  002844                     ___lwdiv:
  2691                           	opt stack 25
  2692                           
  2693                           ;incstack = 0
  2694  002844  0E00               	movlw	0
  2695  002846  6E28               	movwf	___lwdiv@quotient+1,c
  2696  002848  0E00               	movlw	0
  2697  00284A  6E27               	movwf	___lwdiv@quotient,c
  2698  00284C  5024               	movf	___lwdiv@divisor,w,c
  2699  00284E  1025               	iorwf	___lwdiv@divisor+1,w,c
  2700  002850  B4D8               	btfsc	status,2,c
  2701  002852  D021               	goto	l996
  2702  002854  0E01               	movlw	1
  2703  002856  6E26               	movwf	___lwdiv@counter,c
  2704  002858  D005               	goto	l3007
  2705  00285A                     l3005:
  2706  00285A  90D8               	bcf	status,0,c
  2707  00285C  3624               	rlcf	___lwdiv@divisor,f,c
  2708  00285E  3625               	rlcf	___lwdiv@divisor+1,f,c
  2709  002860  2A26               	incf	___lwdiv@counter,f,c
  2710  002862  D000               	goto	l3007
  2711  002864                     l3007:
  2712  002864  BE25               	btfsc	___lwdiv@divisor+1,7,c
  2713  002866  D002               	goto	l3009
  2714  002868  D7F8               	goto	l3005
  2715  00286A  D000               	goto	l3009
  2716  00286C                     l3009:
  2717  00286C  90D8               	bcf	status,0,c
  2718  00286E  3627               	rlcf	___lwdiv@quotient,f,c
  2719  002870  3628               	rlcf	___lwdiv@quotient+1,f,c
  2720  002872  5024               	movf	___lwdiv@divisor,w,c
  2721  002874  5C22               	subwf	___lwdiv@dividend,w,c
  2722  002876  5025               	movf	___lwdiv@divisor+1,w,c
  2723  002878  5823               	subwfb	___lwdiv@dividend+1,w,c
  2724  00287A  A0D8               	btfss	status,0,c
  2725  00287C  D006               	goto	l3017
  2726  00287E  5024               	movf	___lwdiv@divisor,w,c
  2727  002880  5E22               	subwf	___lwdiv@dividend,f,c
  2728  002882  5025               	movf	___lwdiv@divisor+1,w,c
  2729  002884  5A23               	subwfb	___lwdiv@dividend+1,f,c
  2730  002886  8027               	bsf	___lwdiv@quotient,0,c
  2731  002888  D000               	goto	l3017
  2732  00288A                     l3017:
  2733  00288A  90D8               	bcf	status,0,c
  2734  00288C  3225               	rrcf	___lwdiv@divisor+1,f,c
  2735  00288E  3224               	rrcf	___lwdiv@divisor,f,c
  2736  002890  2E26               	decfsz	___lwdiv@counter,f,c
  2737  002892  D7EC               	goto	l3009
  2738  002894  D000               	goto	l996
  2739  002896                     l996:
  2740  002896  C027  F022         	movff	___lwdiv@quotient,?___lwdiv
  2741  00289A  C028  F023         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2742  00289E  0012               	return		;funcret
  2743  0028A0                     __end_of___lwdiv:
  2744                           	opt stack 0
  2745                           tblptru	equ	0xFF8
  2746                           tblptrh	equ	0xFF7
  2747                           tblptrl	equ	0xFF6
  2748                           tablat	equ	0xFF5
  2749                           prodh	equ	0xFF4
  2750                           prodl	equ	0xFF3
  2751                           intcon	equ	0xFF2
  2752                           postinc0	equ	0xFEE
  2753                           wreg	equ	0xFE8
  2754                           postinc1	equ	0xFE6
  2755                           postdec1	equ	0xFE5
  2756                           fsr1h	equ	0xFE2
  2757                           fsr1l	equ	0xFE1
  2758                           indf2	equ	0xFDF
  2759                           postinc2	equ	0xFDE
  2760                           postdec2	equ	0xFDD
  2761                           fsr2h	equ	0xFDA
  2762                           fsr2l	equ	0xFD9
  2763                           status	equ	0xFD8
  2764                           
  2765 ;; *************** function _Trica_Mag *****************
  2766 ;; Defined at:
  2767 ;;		line 41 in file "nbproject/private/triac.c"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;  EMCC_State      1    wreg     enum E8799
  2770 ;; Auto vars:     Size  Location     Type
  2771 ;;  EMCC_State      1   14[BANK0 ] enum E8799
  2772 ;;  i               2   21[BANK0 ] unsigned int 
  2773 ;;  Elec            2   19[BANK0 ] unsigned int 
  2774 ;;  k               2   17[BANK0 ] unsigned int 
  2775 ;;  j               2   15[BANK0 ] unsigned int 
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  1    wreg      unsigned char 
  2778 ;; Registers used:
  2779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2786 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2787 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2788 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2789 ;;Total ram usage:       15 bytes
  2790 ;; Hardware stack levels used:    1
  2791 ;; Hardware stack levels required when called:    5
  2792 ;; This function calls:
  2793 ;;		_ADC_ElecGet
  2794 ;;		_Trica_Control
  2795 ;;		___wmul
  2796 ;;		_delay_us
  2797 ;; This function is called by:
  2798 ;;		_Magne_Demag_Dispose
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           	psect	text11
  2803  001012                     __ptext11:
  2804                           	opt stack 0
  2805  001012                     _Trica_Mag:
  2806                           	opt stack 23
  2807                           
  2808                           ;incstack = 0
  2809                           ;Trica_Mag@EMCC_State stored from wreg
  2810  001012  0100               	movlb	0	; () banked
  2811  001014  6FE7               	movwf	Trica_Mag@EMCC_State& (0+255),b
  2812                           
  2813                           ; BSR set to: 0
  2814                           ;triac.c: 43: uint16_t Elec = 0;
  2815  001016  0E00               	movlw	0
  2816  001018  0100               	movlb	0	; () banked
  2817  00101A  6FED               	movwf	(Trica_Mag@Elec+1)& (0+255),b
  2818  00101C  0E00               	movlw	0
  2819  00101E  6FEC               	movwf	Trica_Mag@Elec& (0+255),b
  2820                           
  2821                           ;triac.c: 44: uint16_t i=0,j,k;
  2822  001020  0E00               	movlw	0
  2823  001022  0100               	movlb	0	; () banked
  2824  001024  6FEF               	movwf	(Trica_Mag@i+1)& (0+255),b
  2825  001026  0E00               	movlw	0
  2826  001028  6FEE               	movwf	Trica_Mag@i& (0+255),b
  2827                           
  2828                           ;triac.c: 45: Houwa_Cuont = 0;
  2829  00102A  0E00               	movlw	0
  2830  00102C  0100               	movlb	0	; () banked
  2831  00102E  6FB5               	movwf	(_Houwa_Cuont+1)& (0+255),b
  2832  001030  0E00               	movlw	0
  2833  001032  6FB4               	movwf	_Houwa_Cuont& (0+255),b
  2834                           
  2835                           ;triac.c: 46: for(j = 0;j < 40;j++)
  2836  001034  0E00               	movlw	0
  2837  001036  0100               	movlb	0	; () banked
  2838  001038  6FE9               	movwf	(Trica_Mag@j+1)& (0+255),b
  2839  00103A  0E00               	movlw	0
  2840  00103C  6FE8               	movwf	Trica_Mag@j& (0+255),b
  2841  00103E                     l2743:
  2842                           
  2843                           ; BSR set to: 0
  2844  00103E  0100               	movlb	0	; () banked
  2845  001040  51E9               	movf	(Trica_Mag@j+1)& (0+255),w,b
  2846  001042  E11B               	bnz	l2753
  2847  001044  0E28               	movlw	40
  2848  001046  0100               	movlb	0	; () banked
  2849  001048  5DE8               	subwf	Trica_Mag@j& (0+255),w,b
  2850  00104A  B0D8               	btfsc	status,0,c
  2851  00104C  D016               	goto	l2753
  2852  00104E  D001               	goto	l2747
  2853                           
  2854                           ; BSR set to: 0
  2855  001050  D014               	goto	l2753
  2856  001052                     l2747:
  2857                           
  2858                           ; BSR set to: 0
  2859                           ;triac.c: 47: {
  2860                           ;triac.c: 48: Elec_Max[j] = 0;
  2861  001052  90D8               	bcf	status,0,c
  2862  001054  0100               	movlb	0	; () banked
  2863  001056  35E8               	rlcf	Trica_Mag@j& (0+255),w,b
  2864  001058  6ED9               	movwf	fsr2l,c
  2865  00105A  0100               	movlb	0	; () banked
  2866  00105C  35E9               	rlcf	(Trica_Mag@j+1)& (0+255),w,b
  2867  00105E  6EDA               	movwf	fsr2h,c
  2868  001060  0E60               	movlw	low _Elec_Max
  2869  001062  26D9               	addwf	fsr2l,f,c
  2870  001064  0E00               	movlw	high _Elec_Max
  2871  001066  22DA               	addwfc	fsr2h,f,c
  2872  001068  0E00               	movlw	0
  2873  00106A  6EDE               	movwf	postinc2,c
  2874  00106C  0E00               	movlw	0
  2875  00106E  6EDD               	movwf	postdec2,c
  2876                           
  2877                           ; BSR set to: 0
  2878  001070  0100               	movlb	0	; () banked
  2879  001072  4BE8               	infsnz	Trica_Mag@j& (0+255),f,b
  2880  001074  2BE9               	incf	(Trica_Mag@j+1)& (0+255),f,b
  2881  001076  D7E3               	goto	l2743
  2882                           
  2883                           ; BSR set to: 0
  2884  001078  D000               	goto	l2753
  2885  00107A                     l2753:
  2886                           
  2887                           ; BSR set to: 0
  2888                           ;triac.c: 49: }
  2889                           ;triac.c: 51: if(EMCC_State == MAGNET)
  2890  00107A  0100               	movlb	0	; () banked
  2891  00107C  05E7               	decf	Trica_Mag@EMCC_State& (0+255),w,b
  2892  00107E  A4D8               	btfss	status,2,c
  2893  001080  D1E4               	goto	l2853
  2894                           
  2895                           ; BSR set to: 0
  2896                           ;triac.c: 52: {
  2897                           ;triac.c: 53: if(Parameter[7].Value)
  2898  001082  0101               	movlb	1	; () banked
  2899  001084  5138               	movf	(_Parameter+56)& (0+255),w,b
  2900  001086  0101               	movlb	1	; () banked
  2901  001088  1139               	iorwf	(_Parameter+57)& (0+255),w,b
  2902  00108A  B4D8               	btfsc	status,2,c
  2903  00108C  D101               	goto	l2805
  2904                           
  2905                           ; BSR set to: 1
  2906                           ;triac.c: 54: {
  2907                           ;triac.c: 55: for(i = 0; i < Parameter[6].Value*2; i++)
  2908  00108E  0E00               	movlw	0
  2909  001090  0100               	movlb	0	; () banked
  2910  001092  6FEF               	movwf	(Trica_Mag@i+1)& (0+255),b
  2911  001094  0E00               	movlw	0
  2912  001096  6FEE               	movwf	Trica_Mag@i& (0+255),b
  2913  001098  D0B6               	goto	l2797
  2914                           
  2915                           ; BSR set to: 0
  2916                           ;triac.c: 56: {
  2917                           ;triac.c: 57: while(PORTCbits.RC3 == 0);
  2918  00109A  D000               	goto	l102
  2919  00109C                     l102:
  2920                           
  2921                           ; BSR set to: 0
  2922  00109C  B682               	btfsc	3970,3,c	;volatile
  2923  00109E  D002               	goto	l105
  2924  0010A0  D7FD               	goto	l102
  2925                           
  2926                           ; BSR set to: 0
  2927                           ;triac.c: 58: while(PORTCbits.RC3 == 1);
  2928  0010A2  D000               	goto	l105
  2929  0010A4                     l105:
  2930                           
  2931                           ; BSR set to: 0
  2932  0010A4  B682               	btfsc	3970,3,c	;volatile
  2933  0010A6  D7FE               	goto	l105
  2934                           
  2935                           ; BSR set to: 0
  2936                           ;triac.c: 59: delay_us(Gears_Timer[Parameter[1].Value]);
  2937                           
  2938                           ; BSR set to: 0
  2939  0010A8  90D8               	bcf	status,0,c
  2940  0010AA  0101               	movlb	1	; () banked
  2941  0010AC  3508               	rlcf	(_Parameter+8)& (0+255),w,b
  2942  0010AE  6ED9               	movwf	fsr2l,c
  2943  0010B0  0101               	movlb	1	; () banked
  2944  0010B2  3509               	rlcf	(_Parameter+9)& (0+255),w,b
  2945  0010B4  6EDA               	movwf	fsr2h,c
  2946  0010B6  0EB7               	movlw	low _Gears_Timer
  2947  0010B8  26D9               	addwf	fsr2l,f,c
  2948  0010BA  0E00               	movlw	high _Gears_Timer
  2949  0010BC  22DA               	addwfc	fsr2h,f,c
  2950  0010BE  CFDE F0E1          	movff	postinc2,??_Trica_Mag
  2951  0010C2  CFDD F0E2          	movff	postdec2,??_Trica_Mag+1
  2952  0010C6  C0E1  F022         	movff	??_Trica_Mag,delay_us@nus
  2953  0010CA  C0E2  F023         	movff	??_Trica_Mag+1,delay_us@nus+1
  2954  0010CE  6A24               	clrf	delay_us@nus+2,c
  2955  0010D0  6A25               	clrf	delay_us@nus+3,c
  2956  0010D2  EC3E  F015         	call	_delay_us	;wreg free
  2957                           
  2958                           ;triac.c: 60: Trica_Control(MAGNET);
  2959  0010D6  0E01               	movlw	1
  2960  0010D8  EC2F  F013         	call	_Trica_Control
  2961                           
  2962                           ;triac.c: 61: while(PORTCbits.RC3 == 0)
  2963  0010DC  D045               	goto	l108
  2964  0010DE                     l2763:
  2965                           
  2966                           ;triac.c: 62: {
  2967                           ;triac.c: 63: Elec = ADC_ElecGet();
  2968  0010DE  ECD7  F010         	call	_ADC_ElecGet	;wreg free
  2969  0010E2  C02F  F0EC         	movff	?_ADC_ElecGet,Trica_Mag@Elec
  2970  0010E6  C030  F0ED         	movff	?_ADC_ElecGet+1,Trica_Mag@Elec+1
  2971                           
  2972                           ;triac.c: 64: if(Elec_Max[i] < Elec && Elec <= 1000)
  2973  0010EA  90D8               	bcf	status,0,c
  2974  0010EC  0100               	movlb	0	; () banked
  2975  0010EE  35EE               	rlcf	Trica_Mag@i& (0+255),w,b
  2976  0010F0  6ED9               	movwf	fsr2l,c
  2977  0010F2  0100               	movlb	0	; () banked
  2978  0010F4  35EF               	rlcf	(Trica_Mag@i+1)& (0+255),w,b
  2979  0010F6  6EDA               	movwf	fsr2h,c
  2980  0010F8  0E60               	movlw	low _Elec_Max
  2981  0010FA  26D9               	addwf	fsr2l,f,c
  2982  0010FC  0E00               	movlw	high _Elec_Max
  2983  0010FE  22DA               	addwfc	fsr2h,f,c
  2984  001100  0100               	movlb	0	; () banked
  2985  001102  51EC               	movf	Trica_Mag@Elec& (0+255),w,b
  2986  001104  5CDE               	subwf	postinc2,w,c
  2987  001106  0100               	movlb	0	; () banked
  2988  001108  51ED               	movf	(Trica_Mag@Elec+1)& (0+255),w,b
  2989  00110A  58DE               	subwfb	postinc2,w,c
  2990  00110C  B0D8               	btfsc	status,0,c
  2991  00110E  D018               	goto	l2771
  2992                           
  2993                           ; BSR set to: 0
  2994  001110  0EE9               	movlw	233
  2995  001112  0100               	movlb	0	; () banked
  2996  001114  5DEC               	subwf	Trica_Mag@Elec& (0+255),w,b
  2997  001116  0E03               	movlw	3
  2998  001118  0100               	movlb	0	; () banked
  2999  00111A  59ED               	subwfb	(Trica_Mag@Elec+1)& (0+255),w,b
  3000  00111C  B0D8               	btfsc	status,0,c
  3001  00111E  D010               	goto	l2771
  3002                           
  3003                           ; BSR set to: 0
  3004                           ;triac.c: 65: Elec_Max[i] = Elec;
  3005  001120  90D8               	bcf	status,0,c
  3006  001122  0100               	movlb	0	; () banked
  3007  001124  35EE               	rlcf	Trica_Mag@i& (0+255),w,b
  3008  001126  6ED9               	movwf	fsr2l,c
  3009  001128  0100               	movlb	0	; () banked
  3010  00112A  35EF               	rlcf	(Trica_Mag@i+1)& (0+255),w,b
  3011  00112C  6EDA               	movwf	fsr2h,c
  3012  00112E  0E60               	movlw	low _Elec_Max
  3013  001130  26D9               	addwf	fsr2l,f,c
  3014  001132  0E00               	movlw	high _Elec_Max
  3015  001134  22DA               	addwfc	fsr2h,f,c
  3016  001136  C0EC  FFDE         	movff	Trica_Mag@Elec,postinc2
  3017  00113A  C0ED  FFDD         	movff	Trica_Mag@Elec+1,postdec2
  3018  00113E  D000               	goto	l2771
  3019  001140                     l2771:
  3020                           
  3021                           ; BSR set to: 0
  3022                           ;triac.c: 66: if(Elec > Parameter[9].Value*10)
  3023  001140  C148  F022         	movff	_Parameter+72,___wmul@multiplier
  3024  001144  C149  F023         	movff	_Parameter+73,___wmul@multiplier+1
  3025  001148  0E00               	movlw	0
  3026  00114A  6E25               	movwf	___wmul@multiplicand+1,c
  3027  00114C  0E0A               	movlw	10
  3028  00114E  6E24               	movwf	___wmul@multiplicand,c
  3029  001150  ECF6  F014         	call	___wmul	;wreg free
  3030  001154  0100               	movlb	0	; () banked
  3031  001156  51EC               	movf	Trica_Mag@Elec& (0+255),w,b
  3032  001158  5C22               	subwf	?___wmul,w,c
  3033  00115A  0100               	movlb	0	; () banked
  3034  00115C  51ED               	movf	(Trica_Mag@Elec+1)& (0+255),w,b
  3035  00115E  5823               	subwfb	?___wmul+1,w,c
  3036  001160  B0D8               	btfsc	status,0,c
  3037  001162  D002               	goto	l108
  3038                           
  3039                           ; BSR set to: 0
  3040                           ;triac.c: 67: return 0;
  3041  001164  0E00               	movlw	0
  3042                           
  3043                           ; BSR set to: 0
  3044  001166  0012               	return	
  3045  001168                     l108:
  3046  001168  A682               	btfss	3970,3,c	;volatile
  3047  00116A  D7B9               	goto	l2763
  3048                           
  3049                           ;triac.c: 68: }
  3050                           ;triac.c: 69: if(Elec_Max[i] >= Parameter[10].Value*10)
  3051  00116C  C150  F022         	movff	_Parameter+80,___wmul@multiplier
  3052  001170  C151  F023         	movff	_Parameter+81,___wmul@multiplier+1
  3053  001174  0E00               	movlw	0
  3054  001176  6E25               	movwf	___wmul@multiplicand+1,c
  3055  001178  0E0A               	movlw	10
  3056  00117A  6E24               	movwf	___wmul@multiplicand,c
  3057  00117C  ECF6  F014         	call	___wmul	;wreg free
  3058  001180  90D8               	bcf	status,0,c
  3059  001182  0100               	movlb	0	; () banked
  3060  001184  35EE               	rlcf	Trica_Mag@i& (0+255),w,b
  3061  001186  6ED9               	movwf	fsr2l,c
  3062  001188  0100               	movlb	0	; () banked
  3063  00118A  35EF               	rlcf	(Trica_Mag@i+1)& (0+255),w,b
  3064  00118C  6EDA               	movwf	fsr2h,c
  3065  00118E  0E60               	movlw	low _Elec_Max
  3066  001190  26D9               	addwf	fsr2l,f,c
  3067  001192  0E00               	movlw	high _Elec_Max
  3068  001194  22DA               	addwfc	fsr2h,f,c
  3069  001196  5022               	movf	?___wmul,w,c
  3070  001198  5CDE               	subwf	postinc2,w,c
  3071  00119A  5023               	movf	?___wmul+1,w,c
  3072  00119C  58DE               	subwfb	postinc2,w,c
  3073  00119E  A0D8               	btfss	status,0,c
  3074  0011A0  D004               	goto	l2781
  3075                           
  3076                           ; BSR set to: 0
  3077                           ;triac.c: 70: ++Houwa_Cuont;
  3078  0011A2  0100               	movlb	0	; () banked
  3079  0011A4  4BB4               	infsnz	_Houwa_Cuont& (0+255),f,b
  3080  0011A6  2BB5               	incf	(_Houwa_Cuont+1)& (0+255),f,b
  3081  0011A8  D000               	goto	l2781
  3082  0011AA                     l2781:
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;triac.c: 71: if(Houwa_Cuont == Parameter[14].Value)
  3086  0011AA  0100               	movlb	0	; () banked
  3087  0011AC  51B4               	movf	_Houwa_Cuont& (0+255),w,b
  3088  0011AE  0101               	movlb	1	; () banked
  3089  0011B0  1970               	xorwf	(_Parameter+112)& (0+255),w,b
  3090  0011B2  E108               	bnz	l2787
  3091  0011B4  0100               	movlb	0	; () banked
  3092  0011B6  51B5               	movf	(_Houwa_Cuont+1)& (0+255),w,b
  3093  0011B8  0101               	movlb	1	; () banked
  3094  0011BA  1971               	xorwf	(_Parameter+113)& (0+255),w,b
  3095  0011BC  A4D8               	btfss	status,2,c
  3096  0011BE  D002               	goto	l2787
  3097                           
  3098                           ; BSR set to: 1
  3099                           ;triac.c: 72: return 1;
  3100  0011C0  0E01               	movlw	1
  3101                           
  3102                           ; BSR set to: 1
  3103  0011C2  0012               	return	
  3104  0011C4                     l2787:
  3105                           
  3106                           ; BSR set to: 1
  3107                           ;triac.c: 73: for(k = Parameter[15].Value*2;k > 0;k--)
  3108  0011C4  90D8               	bcf	status,0,c
  3109  0011C6  0101               	movlb	1	; () banked
  3110  0011C8  3578               	rlcf	(_Parameter+120)& (0+255),w,b
  3111  0011CA  0100               	movlb	0	; () banked
  3112  0011CC  6FEA               	movwf	Trica_Mag@k& (0+255),b
  3113  0011CE  0101               	movlb	1	; () banked
  3114  0011D0  3579               	rlcf	(_Parameter+121)& (0+255),w,b
  3115  0011D2  0100               	movlb	0	; () banked
  3116  0011D4  6FEB               	movwf	(Trica_Mag@k+1)& (0+255),b
  3117  0011D6  0100               	movlb	0	; () banked
  3118  0011D8  51EA               	movf	Trica_Mag@k& (0+255),w,b
  3119  0011DA  0100               	movlb	0	; () banked
  3120  0011DC  11EB               	iorwf	(Trica_Mag@k+1)& (0+255),w,b
  3121  0011DE  B4D8               	btfsc	status,2,c
  3122  0011E0  D00E               	goto	l2795
  3123  0011E2  D002               	goto	l118
  3124                           
  3125                           ; BSR set to: 0
  3126  0011E4  D00C               	goto	l2795
  3127                           
  3128                           ; BSR set to: 0
  3129                           ;triac.c: 74: {
  3130                           ;triac.c: 75: while(PORTCbits.RC3 == 0);
  3131  0011E6  D000               	goto	l118
  3132  0011E8                     l118:
  3133                           
  3134                           ; BSR set to: 0
  3135  0011E8  B682               	btfsc	3970,3,c	;volatile
  3136  0011EA  D002               	goto	l121
  3137  0011EC  D7FD               	goto	l118
  3138                           
  3139                           ; BSR set to: 0
  3140                           ;triac.c: 76: while(PORTCbits.RC3 == 1);
  3141  0011EE  D000               	goto	l121
  3142  0011F0                     l121:
  3143                           
  3144                           ; BSR set to: 0
  3145  0011F0  B682               	btfsc	3970,3,c	;volatile
  3146  0011F2  D7FE               	goto	l121
  3147                           
  3148                           ; BSR set to: 0
  3149                           
  3150                           ; BSR set to: 0
  3151  0011F4  0100               	movlb	0	; () banked
  3152  0011F6  07EA               	decf	Trica_Mag@k& (0+255),f,b
  3153  0011F8  A0D8               	btfss	status,0,c
  3154  0011FA  07EB               	decf	(Trica_Mag@k+1)& (0+255),f,b
  3155  0011FC  D7EC               	goto	L3
  3156  0011FE                     l2795:
  3157                           
  3158                           ; BSR set to: 0
  3159  0011FE  0100               	movlb	0	; () banked
  3160  001200  4BEE               	infsnz	Trica_Mag@i& (0+255),f,b
  3161  001202  2BEF               	incf	(Trica_Mag@i+1)& (0+255),f,b
  3162  001204  D000               	goto	l2797
  3163  001206                     l2797:
  3164                           
  3165                           ; BSR set to: 0
  3166  001206  EE21  F030         	lfsr	2,_Parameter+48
  3167  00120A  CFDE F0E1          	movff	postinc2,??_Trica_Mag
  3168  00120E  CFDD F0E2          	movff	postdec2,??_Trica_Mag+1
  3169  001212  90D8               	bcf	status,0,c
  3170  001214  0100               	movlb	0	; () banked
  3171  001216  37E1               	rlcf	??_Trica_Mag& (0+255),f,b
  3172  001218  37E2               	rlcf	(??_Trica_Mag+1)& (0+255),f,b
  3173  00121A  0100               	movlb	0	; () banked
  3174  00121C  51E1               	movf	??_Trica_Mag& (0+255),w,b
  3175  00121E  0100               	movlb	0	; () banked
  3176  001220  5DEE               	subwf	Trica_Mag@i& (0+255),w,b
  3177  001222  0100               	movlb	0	; () banked
  3178  001224  51E2               	movf	(??_Trica_Mag+1)& (0+255),w,b
  3179  001226  0100               	movlb	0	; () banked
  3180  001228  59EF               	subwfb	(Trica_Mag@i+1)& (0+255),w,b
  3181  00122A  A0D8               	btfss	status,0,c
  3182  00122C  D737               	goto	l102
  3183                           
  3184                           ; BSR set to: 0
  3185                           ;triac.c: 77: }
  3186                           ;triac.c: 78: }
  3187                           ;triac.c: 79: if(Elec_Max[i-1] < Parameter[8].Value*10)
  3188                           
  3189                           ; BSR set to: 0
  3190  00122E  C140  F022         	movff	_Parameter+64,___wmul@multiplier
  3191  001232  C141  F023         	movff	_Parameter+65,___wmul@multiplier+1
  3192  001236  0E00               	movlw	0
  3193  001238  6E25               	movwf	___wmul@multiplicand+1,c
  3194  00123A  0E0A               	movlw	10
  3195  00123C  6E24               	movwf	___wmul@multiplicand,c
  3196  00123E  ECF6  F014         	call	___wmul	;wreg free
  3197  001242                     L7:
  3198  001242  0EFE               	movlw	254
  3199  001244  0100               	movlb	0	; () banked
  3200  001246  6FE1               	movwf	??_Trica_Mag& (0+255),b
  3201  001248  0EFF               	movlw	255
  3202  00124A  0100               	movlb	0	; () banked
  3203  00124C  6FE2               	movwf	(??_Trica_Mag+1)& (0+255),b
  3204  00124E  C0EE  F0E3         	movff	Trica_Mag@i,??_Trica_Mag+2
  3205  001252  C0EF  F0E4         	movff	Trica_Mag@i+1,??_Trica_Mag+3
  3206  001256  90D8               	bcf	status,0,c
  3207  001258  0100               	movlb	0	; () banked
  3208  00125A  37E3               	rlcf	(??_Trica_Mag+2)& (0+255),f,b
  3209  00125C  37E4               	rlcf	(??_Trica_Mag+3)& (0+255),f,b
  3210  00125E  0100               	movlb	0	; () banked
  3211  001260  51E1               	movf	??_Trica_Mag& (0+255),w,b
  3212  001262  0100               	movlb	0	; () banked
  3213  001264  27E3               	addwf	(??_Trica_Mag+2)& (0+255),f,b
  3214  001266  0100               	movlb	0	; () banked
  3215  001268  51E2               	movf	(??_Trica_Mag+1)& (0+255),w,b
  3216  00126A  0100               	movlb	0	; () banked
  3217  00126C  23E4               	addwfc	(??_Trica_Mag+3)& (0+255),f,b
  3218  00126E  0E60               	movlw	low _Elec_Max
  3219  001270  0100               	movlb	0	; () banked
  3220  001272  25E3               	addwf	(??_Trica_Mag+2)& (0+255),w,b
  3221  001274  6ED9               	movwf	fsr2l,c
  3222  001276  0E00               	movlw	high _Elec_Max
  3223  001278  0100               	movlb	0	; () banked
  3224  00127A  21E4               	addwfc	(??_Trica_Mag+3)& (0+255),w,b
  3225  00127C  6EDA               	movwf	fsr2h,c
  3226  00127E  5022               	movf	?___wmul,w,c
  3227  001280  5CDE               	subwf	postinc2,w,c
  3228  001282  5023               	movf	?___wmul+1,w,c
  3229  001284  58DE               	subwfb	postinc2,w,c
  3230  001286  B0D8               	btfsc	status,0,c
  3231  001288  D2A5               	goto	l2953
  3232                           
  3233                           ; BSR set to: 0
  3234                           ;triac.c: 80: return 0;
  3235  00128A  0E00               	movlw	0
  3236                           
  3237                           ; BSR set to: 0
  3238  00128C  0012               	return	
  3239                           
  3240                           ; BSR set to: 0
  3241                           ;triac.c: 81: }
  3242  00128E  D2A2               	goto	l2953
  3243  001290                     l2805:
  3244                           
  3245                           ;triac.c: 82: else
  3246                           ;triac.c: 83: {
  3247                           ;triac.c: 84: for(i = 0; i < Parameter[6].Value*2; i++)
  3248  001290  0E00               	movlw	0
  3249  001292  0100               	movlb	0	; () banked
  3250  001294  6FEF               	movwf	(Trica_Mag@i+1)& (0+255),b
  3251  001296  0E00               	movlw	0
  3252  001298  6FEE               	movwf	Trica_Mag@i& (0+255),b
  3253  00129A  D0B6               	goto	l2845
  3254                           
  3255                           ; BSR set to: 0
  3256                           ;triac.c: 85: {
  3257                           ;triac.c: 86: while(PORTCbits.RC3 == 0);
  3258  00129C  D000               	goto	l129
  3259  00129E                     l129:
  3260                           
  3261                           ; BSR set to: 0
  3262  00129E  B682               	btfsc	3970,3,c	;volatile
  3263  0012A0  D002               	goto	l132
  3264  0012A2  D7FD               	goto	l129
  3265                           
  3266                           ; BSR set to: 0
  3267                           ;triac.c: 87: while(PORTCbits.RC3 == 1);
  3268  0012A4  D000               	goto	l132
  3269  0012A6                     l132:
  3270                           
  3271                           ; BSR set to: 0
  3272  0012A6  B682               	btfsc	3970,3,c	;volatile
  3273  0012A8  D7FE               	goto	l132
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;triac.c: 88: delay_us(Gears_Timer[Parameter[1].Value]);
  3277                           
  3278                           ; BSR set to: 0
  3279  0012AA  90D8               	bcf	status,0,c
  3280  0012AC  0101               	movlb	1	; () banked
  3281  0012AE  3508               	rlcf	(_Parameter+8)& (0+255),w,b
  3282  0012B0  6ED9               	movwf	fsr2l,c
  3283  0012B2  0101               	movlb	1	; () banked
  3284  0012B4  3509               	rlcf	(_Parameter+9)& (0+255),w,b
  3285  0012B6  6EDA               	movwf	fsr2h,c
  3286  0012B8  0EB7               	movlw	low _Gears_Timer
  3287  0012BA  26D9               	addwf	fsr2l,f,c
  3288  0012BC  0E00               	movlw	high _Gears_Timer
  3289  0012BE  22DA               	addwfc	fsr2h,f,c
  3290  0012C0  CFDE F0E1          	movff	postinc2,??_Trica_Mag
  3291  0012C4  CFDD F0E2          	movff	postdec2,??_Trica_Mag+1
  3292  0012C8  C0E1  F022         	movff	??_Trica_Mag,delay_us@nus
  3293  0012CC  C0E2  F023         	movff	??_Trica_Mag+1,delay_us@nus+1
  3294  0012D0  6A24               	clrf	delay_us@nus+2,c
  3295  0012D2  6A25               	clrf	delay_us@nus+3,c
  3296  0012D4  EC3E  F015         	call	_delay_us	;wreg free
  3297                           
  3298                           ;triac.c: 89: Trica_Control(DEMAG);
  3299  0012D8  0E00               	movlw	0
  3300  0012DA  EC2F  F013         	call	_Trica_Control
  3301                           
  3302                           ;triac.c: 90: while(PORTCbits.RC3 == 0)
  3303  0012DE  D045               	goto	l135
  3304  0012E0                     l2811:
  3305                           
  3306                           ;triac.c: 91: {
  3307                           ;triac.c: 92: Elec = ADC_ElecGet();
  3308  0012E0  ECD7  F010         	call	_ADC_ElecGet	;wreg free
  3309  0012E4  C02F  F0EC         	movff	?_ADC_ElecGet,Trica_Mag@Elec
  3310  0012E8  C030  F0ED         	movff	?_ADC_ElecGet+1,Trica_Mag@Elec+1
  3311                           
  3312                           ;triac.c: 93: if(Elec_Max[i] < Elec && Elec <= 1000)
  3313  0012EC  90D8               	bcf	status,0,c
  3314  0012EE  0100               	movlb	0	; () banked
  3315  0012F0  35EE               	rlcf	Trica_Mag@i& (0+255),w,b
  3316  0012F2  6ED9               	movwf	fsr2l,c
  3317  0012F4  0100               	movlb	0	; () banked
  3318  0012F6  35EF               	rlcf	(Trica_Mag@i+1)& (0+255),w,b
  3319  0012F8  6EDA               	movwf	fsr2h,c
  3320  0012FA  0E60               	movlw	low _Elec_Max
  3321  0012FC  26D9               	addwf	fsr2l,f,c
  3322  0012FE  0E00               	movlw	high _Elec_Max
  3323  001300  22DA               	addwfc	fsr2h,f,c
  3324  001302  0100               	movlb	0	; () banked
  3325  001304  51EC               	movf	Trica_Mag@Elec& (0+255),w,b
  3326  001306  5CDE               	subwf	postinc2,w,c
  3327  001308  0100               	movlb	0	; () banked
  3328  00130A  51ED               	movf	(Trica_Mag@Elec+1)& (0+255),w,b
  3329  00130C  58DE               	subwfb	postinc2,w,c
  3330  00130E  B0D8               	btfsc	status,0,c
  3331  001310  D018               	goto	l2819
  3332                           
  3333                           ; BSR set to: 0
  3334  001312  0EE9               	movlw	233
  3335  001314  0100               	movlb	0	; () banked
  3336  001316  5DEC               	subwf	Trica_Mag@Elec& (0+255),w,b
  3337  001318  0E03               	movlw	3
  3338  00131A  0100               	movlb	0	; () banked
  3339  00131C  59ED               	subwfb	(Trica_Mag@Elec+1)& (0+255),w,b
  3340  00131E  B0D8               	btfsc	status,0,c
  3341  001320  D010               	goto	l2819
  3342                           
  3343                           ; BSR set to: 0
  3344                           ;triac.c: 94: Elec_Max[i] = Elec;
  3345  001322  90D8               	bcf	status,0,c
  3346  001324  0100               	movlb	0	; () banked
  3347  001326  35EE               	rlcf	Trica_Mag@i& (0+255),w,b
  3348  001328  6ED9               	movwf	fsr2l,c
  3349  00132A  0100               	movlb	0	; () banked
  3350  00132C  35EF               	rlcf	(Trica_Mag@i+1)& (0+255),w,b
  3351  00132E  6EDA               	movwf	fsr2h,c
  3352  001330  0E60               	movlw	low _Elec_Max
  3353  001332  26D9               	addwf	fsr2l,f,c
  3354  001334  0E00               	movlw	high _Elec_Max
  3355  001336  22DA               	addwfc	fsr2h,f,c
  3356  001338  C0EC  FFDE         	movff	Trica_Mag@Elec,postinc2
  3357  00133C  C0ED  FFDD         	movff	Trica_Mag@Elec+1,postdec2
  3358  001340  D000               	goto	l2819
  3359  001342                     l2819:
  3360                           
  3361                           ; BSR set to: 0
  3362                           ;triac.c: 95: if(Elec > Parameter[9].Value*10)
  3363  001342  C148  F022         	movff	_Parameter+72,___wmul@multiplier
  3364  001346  C149  F023         	movff	_Parameter+73,___wmul@multiplier+1
  3365  00134A  0E00               	movlw	0
  3366  00134C  6E25               	movwf	___wmul@multiplicand+1,c
  3367  00134E  0E0A               	movlw	10
  3368  001350  6E24               	movwf	___wmul@multiplicand,c
  3369  001352  ECF6  F014         	call	___wmul	;wreg free
  3370  001356  0100               	movlb	0	; () banked
  3371  001358  51EC               	movf	Trica_Mag@Elec& (0+255),w,b
  3372  00135A  5C22               	subwf	?___wmul,w,c
  3373  00135C  0100               	movlb	0	; () banked
  3374  00135E  51ED               	movf	(Trica_Mag@Elec+1)& (0+255),w,b
  3375  001360  5823               	subwfb	?___wmul+1,w,c
  3376  001362  B0D8               	btfsc	status,0,c
  3377  001364  D002               	goto	l135
  3378                           
  3379                           ; BSR set to: 0
  3380                           ;triac.c: 96: return 0;
  3381  001366  0E00               	movlw	0
  3382                           
  3383                           ; BSR set to: 0
  3384  001368  0012               	return	
  3385  00136A                     l135:
  3386  00136A  A682               	btfss	3970,3,c	;volatile
  3387  00136C  D7B9               	goto	l2811
  3388                           
  3389                           ;triac.c: 97: }
  3390                           ;triac.c: 98: if(Elec_Max[i] >= Parameter[10].Value*10)
  3391  00136E  C150  F022         	movff	_Parameter+80,___wmul@multiplier
  3392  001372  C151  F023         	movff	_Parameter+81,___wmul@multiplier+1
  3393  001376  0E00               	movlw	0
  3394  001378  6E25               	movwf	___wmul@multiplicand+1,c
  3395  00137A  0E0A               	movlw	10
  3396  00137C  6E24               	movwf	___wmul@multiplicand,c
  3397  00137E  ECF6  F014         	call	___wmul	;wreg free
  3398  001382  90D8               	bcf	status,0,c
  3399  001384  0100               	movlb	0	; () banked
  3400  001386  35EE               	rlcf	Trica_Mag@i& (0+255),w,b
  3401  001388  6ED9               	movwf	fsr2l,c
  3402  00138A  0100               	movlb	0	; () banked
  3403  00138C  35EF               	rlcf	(Trica_Mag@i+1)& (0+255),w,b
  3404  00138E  6EDA               	movwf	fsr2h,c
  3405  001390  0E60               	movlw	low _Elec_Max
  3406  001392  26D9               	addwf	fsr2l,f,c
  3407  001394  0E00               	movlw	high _Elec_Max
  3408  001396  22DA               	addwfc	fsr2h,f,c
  3409  001398  5022               	movf	?___wmul,w,c
  3410  00139A  5CDE               	subwf	postinc2,w,c
  3411  00139C  5023               	movf	?___wmul+1,w,c
  3412  00139E  58DE               	subwfb	postinc2,w,c
  3413  0013A0  A0D8               	btfss	status,0,c
  3414  0013A2  D004               	goto	l2829
  3415                           
  3416                           ; BSR set to: 0
  3417                           ;triac.c: 99: ++Houwa_Cuont;
  3418  0013A4  0100               	movlb	0	; () banked
  3419  0013A6  4BB4               	infsnz	_Houwa_Cuont& (0+255),f,b
  3420  0013A8  2BB5               	incf	(_Houwa_Cuont+1)& (0+255),f,b
  3421  0013AA  D000               	goto	l2829
  3422  0013AC                     l2829:
  3423                           
  3424                           ; BSR set to: 0
  3425                           ;triac.c: 100: if(Houwa_Cuont == Parameter[14].Value)
  3426  0013AC  0100               	movlb	0	; () banked
  3427  0013AE  51B4               	movf	_Houwa_Cuont& (0+255),w,b
  3428  0013B0  0101               	movlb	1	; () banked
  3429  0013B2  1970               	xorwf	(_Parameter+112)& (0+255),w,b
  3430  0013B4  E108               	bnz	l2835
  3431  0013B6  0100               	movlb	0	; () banked
  3432  0013B8  51B5               	movf	(_Houwa_Cuont+1)& (0+255),w,b
  3433  0013BA  0101               	movlb	1	; () banked
  3434  0013BC  1971               	xorwf	(_Parameter+113)& (0+255),w,b
  3435  0013BE  A4D8               	btfss	status,2,c
  3436  0013C0  D002               	goto	l2835
  3437                           
  3438                           ; BSR set to: 1
  3439                           ;triac.c: 101: return 1;
  3440  0013C2  0E01               	movlw	1
  3441                           
  3442                           ; BSR set to: 1
  3443  0013C4  0012               	return	
  3444  0013C6                     l2835:
  3445                           
  3446                           ; BSR set to: 1
  3447                           ;triac.c: 102: for(k = Parameter[15].Value*2;k > 0;k--)
  3448  0013C6  90D8               	bcf	status,0,c
  3449  0013C8  0101               	movlb	1	; () banked
  3450  0013CA  3578               	rlcf	(_Parameter+120)& (0+255),w,b
  3451  0013CC  0100               	movlb	0	; () banked
  3452  0013CE  6FEA               	movwf	Trica_Mag@k& (0+255),b
  3453  0013D0  0101               	movlb	1	; () banked
  3454  0013D2  3579               	rlcf	(_Parameter+121)& (0+255),w,b
  3455  0013D4  0100               	movlb	0	; () banked
  3456  0013D6  6FEB               	movwf	(Trica_Mag@k+1)& (0+255),b
  3457  0013D8  0100               	movlb	0	; () banked
  3458  0013DA  51EA               	movf	Trica_Mag@k& (0+255),w,b
  3459  0013DC  0100               	movlb	0	; () banked
  3460  0013DE  11EB               	iorwf	(Trica_Mag@k+1)& (0+255),w,b
  3461  0013E0  B4D8               	btfsc	status,2,c
  3462  0013E2  D00E               	goto	l2843
  3463  0013E4  D002               	goto	l144
  3464                           
  3465                           ; BSR set to: 0
  3466  0013E6  D00C               	goto	l2843
  3467                           
  3468                           ; BSR set to: 0
  3469                           ;triac.c: 103: {
  3470                           ;triac.c: 104: while(PORTCbits.RC3 == 0);
  3471  0013E8  D000               	goto	l144
  3472  0013EA                     l144:
  3473                           
  3474                           ; BSR set to: 0
  3475  0013EA  B682               	btfsc	3970,3,c	;volatile
  3476  0013EC  D002               	goto	l147
  3477  0013EE  D7FD               	goto	l144
  3478                           
  3479                           ; BSR set to: 0
  3480                           ;triac.c: 105: while(PORTCbits.RC3 == 1);
  3481  0013F0  D000               	goto	l147
  3482  0013F2                     l147:
  3483                           
  3484                           ; BSR set to: 0
  3485  0013F2  B682               	btfsc	3970,3,c	;volatile
  3486  0013F4  D7FE               	goto	l147
  3487                           
  3488                           ; BSR set to: 0
  3489                           
  3490                           ; BSR set to: 0
  3491  0013F6  0100               	movlb	0	; () banked
  3492  0013F8  07EA               	decf	Trica_Mag@k& (0+255),f,b
  3493  0013FA  A0D8               	btfss	status,0,c
  3494  0013FC  07EB               	decf	(Trica_Mag@k+1)& (0+255),f,b
  3495  0013FE  D7EC               	goto	L4
  3496  001400                     l2843:
  3497                           
  3498                           ; BSR set to: 0
  3499  001400  0100               	movlb	0	; () banked
  3500  001402  4BEE               	infsnz	Trica_Mag@i& (0+255),f,b
  3501  001404  2BEF               	incf	(Trica_Mag@i+1)& (0+255),f,b
  3502  001406  D000               	goto	l2845
  3503  001408                     l2845:
  3504                           
  3505                           ; BSR set to: 0
  3506  001408  EE21  F030         	lfsr	2,_Parameter+48
  3507  00140C  CFDE F0E1          	movff	postinc2,??_Trica_Mag
  3508  001410  CFDD F0E2          	movff	postdec2,??_Trica_Mag+1
  3509  001414  90D8               	bcf	status,0,c
  3510  001416  0100               	movlb	0	; () banked
  3511  001418  37E1               	rlcf	??_Trica_Mag& (0+255),f,b
  3512  00141A  37E2               	rlcf	(??_Trica_Mag+1)& (0+255),f,b
  3513  00141C  0100               	movlb	0	; () banked
  3514  00141E  51E1               	movf	??_Trica_Mag& (0+255),w,b
  3515  001420  0100               	movlb	0	; () banked
  3516  001422  5DEE               	subwf	Trica_Mag@i& (0+255),w,b
  3517  001424  0100               	movlb	0	; () banked
  3518  001426  51E2               	movf	(??_Trica_Mag+1)& (0+255),w,b
  3519  001428  0100               	movlb	0	; () banked
  3520  00142A  59EF               	subwfb	(Trica_Mag@i+1)& (0+255),w,b
  3521  00142C  A0D8               	btfss	status,0,c
  3522  00142E  D737               	goto	l129
  3523                           
  3524                           ; BSR set to: 0
  3525                           ;triac.c: 106: }
  3526                           ;triac.c: 107: }
  3527                           ;triac.c: 108: if(Elec_Max[i-1] < Parameter[8].Value*10)
  3528                           
  3529                           ; BSR set to: 0
  3530  001430  C140  F022         	movff	_Parameter+64,___wmul@multiplier
  3531  001434  C141  F023         	movff	_Parameter+65,___wmul@multiplier+1
  3532  001438  0E00               	movlw	0
  3533  00143A  6E25               	movwf	___wmul@multiplicand+1,c
  3534  00143C  0E0A               	movlw	10
  3535  00143E  6E24               	movwf	___wmul@multiplicand,c
  3536  001440  ECF6  F014         	call	___wmul	;wreg free
  3537  001444  D6FE               	goto	L7
  3538                           
  3539                           ; BSR set to: 0
  3540                           
  3541                           ; BSR set to: 0
  3542                           ;triac.c: 109: return 0;
  3543  001446  0012               	return	
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;triac.c: 110: }
  3547                           ;triac.c: 111: }
  3548                           
  3549                           ; BSR set to: 0
  3550  001448  D1C5               	goto	l2953
  3551  00144A                     l2853:
  3552                           
  3553                           ; BSR set to: 0
  3554                           ;triac.c: 113: else if(EMCC_State == DEMAG)
  3555  00144A  0100               	movlb	0	; () banked
  3556  00144C  51E7               	movf	Trica_Mag@EMCC_State& (0+255),w,b
  3557  00144E  0100               	movlb	0	; () banked
  3558  001450  A4D8               	btfss	status,2,c
  3559  001452  D1C0               	goto	l2953
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;triac.c: 114: {
  3563                           ;triac.c: 115: if(Parameter[7].Value)
  3564  001454  0101               	movlb	1	; () banked
  3565  001456  5138               	movf	(_Parameter+56)& (0+255),w,b
  3566  001458  0101               	movlb	1	; () banked
  3567  00145A  1139               	iorwf	(_Parameter+57)& (0+255),w,b
  3568  00145C  B4D8               	btfsc	status,2,c
  3569  00145E  D0DD               	goto	l2905
  3570                           
  3571                           ; BSR set to: 1
  3572                           ;triac.c: 116: {
  3573                           ;triac.c: 117: for(i = 0; i < Parameter[6].Value*2; i++)
  3574  001460  0E00               	movlw	0
  3575  001462  0100               	movlb	0	; () banked
  3576  001464  6FEF               	movwf	(Trica_Mag@i+1)& (0+255),b
  3577  001466  0E00               	movlw	0
  3578  001468  6FEE               	movwf	Trica_Mag@i& (0+255),b
  3579  00146A  D0B6               	goto	l2897
  3580                           
  3581                           ; BSR set to: 0
  3582                           ;triac.c: 118: {
  3583                           ;triac.c: 119: while(PORTCbits.RC3 == 0);
  3584  00146C  D000               	goto	l157
  3585  00146E                     l157:
  3586                           
  3587                           ; BSR set to: 0
  3588  00146E  B682               	btfsc	3970,3,c	;volatile
  3589  001470  D002               	goto	l160
  3590  001472  D7FD               	goto	l157
  3591                           
  3592                           ; BSR set to: 0
  3593                           ;triac.c: 120: while(PORTCbits.RC3 == 1);
  3594  001474  D000               	goto	l160
  3595  001476                     l160:
  3596                           
  3597                           ; BSR set to: 0
  3598  001476  B682               	btfsc	3970,3,c	;volatile
  3599  001478  D7FE               	goto	l160
  3600                           
  3601                           ; BSR set to: 0
  3602                           ;triac.c: 121: delay_us(Gears_Timer[Parameter[1].Value]);
  3603                           
  3604                           ; BSR set to: 0
  3605  00147A  90D8               	bcf	status,0,c
  3606  00147C  0101               	movlb	1	; () banked
  3607  00147E  3508               	rlcf	(_Parameter+8)& (0+255),w,b
  3608  001480  6ED9               	movwf	fsr2l,c
  3609  001482  0101               	movlb	1	; () banked
  3610  001484  3509               	rlcf	(_Parameter+9)& (0+255),w,b
  3611  001486  6EDA               	movwf	fsr2h,c
  3612  001488  0EB7               	movlw	low _Gears_Timer
  3613  00148A  26D9               	addwf	fsr2l,f,c
  3614  00148C  0E00               	movlw	high _Gears_Timer
  3615  00148E  22DA               	addwfc	fsr2h,f,c
  3616  001490  CFDE F0E1          	movff	postinc2,??_Trica_Mag
  3617  001494  CFDD F0E2          	movff	postdec2,??_Trica_Mag+1
  3618  001498  C0E1  F022         	movff	??_Trica_Mag,delay_us@nus
  3619  00149C  C0E2  F023         	movff	??_Trica_Mag+1,delay_us@nus+1
  3620  0014A0  6A24               	clrf	delay_us@nus+2,c
  3621  0014A2  6A25               	clrf	delay_us@nus+3,c
  3622  0014A4  EC3E  F015         	call	_delay_us	;wreg free
  3623                           
  3624                           ;triac.c: 122: Trica_Control(DEMAG);
  3625  0014A8  0E00               	movlw	0
  3626  0014AA  EC2F  F013         	call	_Trica_Control
  3627                           
  3628                           ;triac.c: 123: while(PORTCbits.RC3 == 0)
  3629  0014AE  D045               	goto	l163
  3630  0014B0                     l2863:
  3631                           
  3632                           ;triac.c: 124: {
  3633                           ;triac.c: 125: Elec = ADC_ElecGet();
  3634  0014B0  ECD7  F010         	call	_ADC_ElecGet	;wreg free
  3635  0014B4  C02F  F0EC         	movff	?_ADC_ElecGet,Trica_Mag@Elec
  3636  0014B8  C030  F0ED         	movff	?_ADC_ElecGet+1,Trica_Mag@Elec+1
  3637                           
  3638                           ;triac.c: 126: if(Elec_Max[i] < Elec && Elec <= 1000)
  3639  0014BC  90D8               	bcf	status,0,c
  3640  0014BE  0100               	movlb	0	; () banked
  3641  0014C0  35EE               	rlcf	Trica_Mag@i& (0+255),w,b
  3642  0014C2  6ED9               	movwf	fsr2l,c
  3643  0014C4  0100               	movlb	0	; () banked
  3644  0014C6  35EF               	rlcf	(Trica_Mag@i+1)& (0+255),w,b
  3645  0014C8  6EDA               	movwf	fsr2h,c
  3646  0014CA  0E60               	movlw	low _Elec_Max
  3647  0014CC  26D9               	addwf	fsr2l,f,c
  3648  0014CE  0E00               	movlw	high _Elec_Max
  3649  0014D0  22DA               	addwfc	fsr2h,f,c
  3650  0014D2  0100               	movlb	0	; () banked
  3651  0014D4  51EC               	movf	Trica_Mag@Elec& (0+255),w,b
  3652  0014D6  5CDE               	subwf	postinc2,w,c
  3653  0014D8  0100               	movlb	0	; () banked
  3654  0014DA  51ED               	movf	(Trica_Mag@Elec+1)& (0+255),w,b
  3655  0014DC  58DE               	subwfb	postinc2,w,c
  3656  0014DE  B0D8               	btfsc	status,0,c
  3657  0014E0  D018               	goto	l2871
  3658                           
  3659                           ; BSR set to: 0
  3660  0014E2  0EE9               	movlw	233
  3661  0014E4  0100               	movlb	0	; () banked
  3662  0014E6  5DEC               	subwf	Trica_Mag@Elec& (0+255),w,b
  3663  0014E8  0E03               	movlw	3
  3664  0014EA  0100               	movlb	0	; () banked
  3665  0014EC  59ED               	subwfb	(Trica_Mag@Elec+1)& (0+255),w,b
  3666  0014EE  B0D8               	btfsc	status,0,c
  3667  0014F0  D010               	goto	l2871
  3668                           
  3669                           ; BSR set to: 0
  3670                           ;triac.c: 127: Elec_Max[i] = Elec;
  3671  0014F2  90D8               	bcf	status,0,c
  3672  0014F4  0100               	movlb	0	; () banked
  3673  0014F6  35EE               	rlcf	Trica_Mag@i& (0+255),w,b
  3674  0014F8  6ED9               	movwf	fsr2l,c
  3675  0014FA  0100               	movlb	0	; () banked
  3676  0014FC  35EF               	rlcf	(Trica_Mag@i+1)& (0+255),w,b
  3677  0014FE  6EDA               	movwf	fsr2h,c
  3678  001500  0E60               	movlw	low _Elec_Max
  3679  001502  26D9               	addwf	fsr2l,f,c
  3680  001504  0E00               	movlw	high _Elec_Max
  3681  001506  22DA               	addwfc	fsr2h,f,c
  3682  001508  C0EC  FFDE         	movff	Trica_Mag@Elec,postinc2
  3683  00150C  C0ED  FFDD         	movff	Trica_Mag@Elec+1,postdec2
  3684  001510  D000               	goto	l2871
  3685  001512                     l2871:
  3686                           
  3687                           ; BSR set to: 0
  3688                           ;triac.c: 128: if(Elec > Parameter[9].Value*10)
  3689  001512  C148  F022         	movff	_Parameter+72,___wmul@multiplier
  3690  001516  C149  F023         	movff	_Parameter+73,___wmul@multiplier+1
  3691  00151A  0E00               	movlw	0
  3692  00151C  6E25               	movwf	___wmul@multiplicand+1,c
  3693  00151E  0E0A               	movlw	10
  3694  001520  6E24               	movwf	___wmul@multiplicand,c
  3695  001522  ECF6  F014         	call	___wmul	;wreg free
  3696  001526  0100               	movlb	0	; () banked
  3697  001528  51EC               	movf	Trica_Mag@Elec& (0+255),w,b
  3698  00152A  5C22               	subwf	?___wmul,w,c
  3699  00152C  0100               	movlb	0	; () banked
  3700  00152E  51ED               	movf	(Trica_Mag@Elec+1)& (0+255),w,b
  3701  001530  5823               	subwfb	?___wmul+1,w,c
  3702  001532  B0D8               	btfsc	status,0,c
  3703  001534  D002               	goto	l163
  3704                           
  3705                           ; BSR set to: 0
  3706                           ;triac.c: 129: return 0;
  3707  001536  0E00               	movlw	0
  3708                           
  3709                           ; BSR set to: 0
  3710  001538  0012               	return	
  3711  00153A                     l163:
  3712  00153A  A682               	btfss	3970,3,c	;volatile
  3713  00153C  D7B9               	goto	l2863
  3714                           
  3715                           ;triac.c: 130: }
  3716                           ;triac.c: 131: if(Elec_Max[i] >= Parameter[10].Value*10)
  3717  00153E  C150  F022         	movff	_Parameter+80,___wmul@multiplier
  3718  001542  C151  F023         	movff	_Parameter+81,___wmul@multiplier+1
  3719  001546  0E00               	movlw	0
  3720  001548  6E25               	movwf	___wmul@multiplicand+1,c
  3721  00154A  0E0A               	movlw	10
  3722  00154C  6E24               	movwf	___wmul@multiplicand,c
  3723  00154E  ECF6  F014         	call	___wmul	;wreg free
  3724  001552  90D8               	bcf	status,0,c
  3725  001554  0100               	movlb	0	; () banked
  3726  001556  35EE               	rlcf	Trica_Mag@i& (0+255),w,b
  3727  001558  6ED9               	movwf	fsr2l,c
  3728  00155A  0100               	movlb	0	; () banked
  3729  00155C  35EF               	rlcf	(Trica_Mag@i+1)& (0+255),w,b
  3730  00155E  6EDA               	movwf	fsr2h,c
  3731  001560  0E60               	movlw	low _Elec_Max
  3732  001562  26D9               	addwf	fsr2l,f,c
  3733  001564  0E00               	movlw	high _Elec_Max
  3734  001566  22DA               	addwfc	fsr2h,f,c
  3735  001568  5022               	movf	?___wmul,w,c
  3736  00156A  5CDE               	subwf	postinc2,w,c
  3737  00156C  5023               	movf	?___wmul+1,w,c
  3738  00156E  58DE               	subwfb	postinc2,w,c
  3739  001570  A0D8               	btfss	status,0,c
  3740  001572  D004               	goto	l2881
  3741                           
  3742                           ; BSR set to: 0
  3743                           ;triac.c: 132: ++Houwa_Cuont;
  3744  001574  0100               	movlb	0	; () banked
  3745  001576  4BB4               	infsnz	_Houwa_Cuont& (0+255),f,b
  3746  001578  2BB5               	incf	(_Houwa_Cuont+1)& (0+255),f,b
  3747  00157A  D000               	goto	l2881
  3748  00157C                     l2881:
  3749                           
  3750                           ; BSR set to: 0
  3751                           ;triac.c: 133: if(Houwa_Cuont == Parameter[14].Value)
  3752  00157C  0100               	movlb	0	; () banked
  3753  00157E  51B4               	movf	_Houwa_Cuont& (0+255),w,b
  3754  001580  0101               	movlb	1	; () banked
  3755  001582  1970               	xorwf	(_Parameter+112)& (0+255),w,b
  3756  001584  E108               	bnz	l2887
  3757  001586  0100               	movlb	0	; () banked
  3758  001588  51B5               	movf	(_Houwa_Cuont+1)& (0+255),w,b
  3759  00158A  0101               	movlb	1	; () banked
  3760  00158C  1971               	xorwf	(_Parameter+113)& (0+255),w,b
  3761  00158E  A4D8               	btfss	status,2,c
  3762  001590  D002               	goto	l2887
  3763                           
  3764                           ; BSR set to: 1
  3765                           ;triac.c: 134: return 1;
  3766  001592  0E01               	movlw	1
  3767                           
  3768                           ; BSR set to: 1
  3769  001594  0012               	return	
  3770  001596                     l2887:
  3771                           
  3772                           ; BSR set to: 1
  3773                           ;triac.c: 135: for(k = Parameter[15].Value*2;k > 0;k--)
  3774  001596  90D8               	bcf	status,0,c
  3775  001598  0101               	movlb	1	; () banked
  3776  00159A  3578               	rlcf	(_Parameter+120)& (0+255),w,b
  3777  00159C  0100               	movlb	0	; () banked
  3778  00159E  6FEA               	movwf	Trica_Mag@k& (0+255),b
  3779  0015A0  0101               	movlb	1	; () banked
  3780  0015A2  3579               	rlcf	(_Parameter+121)& (0+255),w,b
  3781  0015A4  0100               	movlb	0	; () banked
  3782  0015A6  6FEB               	movwf	(Trica_Mag@k+1)& (0+255),b
  3783  0015A8  0100               	movlb	0	; () banked
  3784  0015AA  51EA               	movf	Trica_Mag@k& (0+255),w,b
  3785  0015AC  0100               	movlb	0	; () banked
  3786  0015AE  11EB               	iorwf	(Trica_Mag@k+1)& (0+255),w,b
  3787  0015B0  B4D8               	btfsc	status,2,c
  3788  0015B2  D00E               	goto	l2895
  3789  0015B4  D002               	goto	l172
  3790                           
  3791                           ; BSR set to: 0
  3792  0015B6  D00C               	goto	l2895
  3793                           
  3794                           ; BSR set to: 0
  3795                           ;triac.c: 136: {
  3796                           ;triac.c: 137: while(PORTCbits.RC3 == 0);
  3797  0015B8  D000               	goto	l172
  3798  0015BA                     l172:
  3799                           
  3800                           ; BSR set to: 0
  3801  0015BA  B682               	btfsc	3970,3,c	;volatile
  3802  0015BC  D002               	goto	l175
  3803  0015BE  D7FD               	goto	l172
  3804                           
  3805                           ; BSR set to: 0
  3806                           ;triac.c: 138: while(PORTCbits.RC3 == 1);
  3807  0015C0  D000               	goto	l175
  3808  0015C2                     l175:
  3809                           
  3810                           ; BSR set to: 0
  3811  0015C2  B682               	btfsc	3970,3,c	;volatile
  3812  0015C4  D7FE               	goto	l175
  3813                           
  3814                           ; BSR set to: 0
  3815                           
  3816                           ; BSR set to: 0
  3817  0015C6  0100               	movlb	0	; () banked
  3818  0015C8  07EA               	decf	Trica_Mag@k& (0+255),f,b
  3819  0015CA  A0D8               	btfss	status,0,c
  3820  0015CC  07EB               	decf	(Trica_Mag@k+1)& (0+255),f,b
  3821  0015CE  D7EC               	goto	L5
  3822  0015D0                     l2895:
  3823                           
  3824                           ; BSR set to: 0
  3825  0015D0  0100               	movlb	0	; () banked
  3826  0015D2  4BEE               	infsnz	Trica_Mag@i& (0+255),f,b
  3827  0015D4  2BEF               	incf	(Trica_Mag@i+1)& (0+255),f,b
  3828  0015D6  D000               	goto	l2897
  3829  0015D8                     l2897:
  3830                           
  3831                           ; BSR set to: 0
  3832  0015D8  EE21  F030         	lfsr	2,_Parameter+48
  3833  0015DC  CFDE F0E1          	movff	postinc2,??_Trica_Mag
  3834  0015E0  CFDD F0E2          	movff	postdec2,??_Trica_Mag+1
  3835  0015E4  90D8               	bcf	status,0,c
  3836  0015E6  0100               	movlb	0	; () banked
  3837  0015E8  37E1               	rlcf	??_Trica_Mag& (0+255),f,b
  3838  0015EA  37E2               	rlcf	(??_Trica_Mag+1)& (0+255),f,b
  3839  0015EC  0100               	movlb	0	; () banked
  3840  0015EE  51E1               	movf	??_Trica_Mag& (0+255),w,b
  3841  0015F0  0100               	movlb	0	; () banked
  3842  0015F2  5DEE               	subwf	Trica_Mag@i& (0+255),w,b
  3843  0015F4  0100               	movlb	0	; () banked
  3844  0015F6  51E2               	movf	(??_Trica_Mag+1)& (0+255),w,b
  3845  0015F8  0100               	movlb	0	; () banked
  3846  0015FA  59EF               	subwfb	(Trica_Mag@i+1)& (0+255),w,b
  3847  0015FC  A0D8               	btfss	status,0,c
  3848  0015FE  D737               	goto	l157
  3849                           
  3850                           ; BSR set to: 0
  3851                           ;triac.c: 139: }
  3852                           ;triac.c: 140: }
  3853                           ;triac.c: 141: if(Elec_Max[i-1] < Parameter[8].Value*10)
  3854                           
  3855                           ; BSR set to: 0
  3856  001600  C140  F022         	movff	_Parameter+64,___wmul@multiplier
  3857  001604  C141  F023         	movff	_Parameter+65,___wmul@multiplier+1
  3858  001608  0E00               	movlw	0
  3859  00160A  6E25               	movwf	___wmul@multiplicand+1,c
  3860  00160C  0E0A               	movlw	10
  3861  00160E  6E24               	movwf	___wmul@multiplicand,c
  3862  001610  ECF6  F014         	call	___wmul	;wreg free
  3863  001614  D616               	goto	L7
  3864                           
  3865                           ; BSR set to: 0
  3866                           
  3867                           ; BSR set to: 0
  3868                           ;triac.c: 142: return 0;
  3869  001616  0012               	return	
  3870                           
  3871                           ; BSR set to: 0
  3872                           ;triac.c: 143: }
  3873  001618  D0DD               	goto	l2953
  3874  00161A                     l2905:
  3875                           
  3876                           ;triac.c: 144: else
  3877                           ;triac.c: 145: {
  3878                           ;triac.c: 146: for(i = 0; i < Parameter[6].Value*2; i++)
  3879  00161A  0E00               	movlw	0
  3880  00161C  0100               	movlb	0	; () banked
  3881  00161E  6FEF               	movwf	(Trica_Mag@i+1)& (0+255),b
  3882  001620  0E00               	movlw	0
  3883  001622  6FEE               	movwf	Trica_Mag@i& (0+255),b
  3884  001624  D0B6               	goto	l2945
  3885                           
  3886                           ; BSR set to: 0
  3887                           ;triac.c: 147: {
  3888                           ;triac.c: 148: while(PORTCbits.RC3 == 0);
  3889  001626  D000               	goto	l183
  3890  001628                     l183:
  3891                           
  3892                           ; BSR set to: 0
  3893  001628  B682               	btfsc	3970,3,c	;volatile
  3894  00162A  D002               	goto	l186
  3895  00162C  D7FD               	goto	l183
  3896                           
  3897                           ; BSR set to: 0
  3898                           ;triac.c: 149: while(PORTCbits.RC3 == 1);
  3899  00162E  D000               	goto	l186
  3900  001630                     l186:
  3901                           
  3902                           ; BSR set to: 0
  3903  001630  B682               	btfsc	3970,3,c	;volatile
  3904  001632  D7FE               	goto	l186
  3905                           
  3906                           ; BSR set to: 0
  3907                           ;triac.c: 150: delay_us(Gears_Timer[Parameter[1].Value]);
  3908                           
  3909                           ; BSR set to: 0
  3910  001634  90D8               	bcf	status,0,c
  3911  001636  0101               	movlb	1	; () banked
  3912  001638  3508               	rlcf	(_Parameter+8)& (0+255),w,b
  3913  00163A  6ED9               	movwf	fsr2l,c
  3914  00163C  0101               	movlb	1	; () banked
  3915  00163E  3509               	rlcf	(_Parameter+9)& (0+255),w,b
  3916  001640  6EDA               	movwf	fsr2h,c
  3917  001642  0EB7               	movlw	low _Gears_Timer
  3918  001644  26D9               	addwf	fsr2l,f,c
  3919  001646  0E00               	movlw	high _Gears_Timer
  3920  001648  22DA               	addwfc	fsr2h,f,c
  3921  00164A  CFDE F0E1          	movff	postinc2,??_Trica_Mag
  3922  00164E  CFDD F0E2          	movff	postdec2,??_Trica_Mag+1
  3923  001652  C0E1  F022         	movff	??_Trica_Mag,delay_us@nus
  3924  001656  C0E2  F023         	movff	??_Trica_Mag+1,delay_us@nus+1
  3925  00165A  6A24               	clrf	delay_us@nus+2,c
  3926  00165C  6A25               	clrf	delay_us@nus+3,c
  3927  00165E  EC3E  F015         	call	_delay_us	;wreg free
  3928                           
  3929                           ;triac.c: 151: Trica_Control(MAGNET);
  3930  001662  0E01               	movlw	1
  3931  001664  EC2F  F013         	call	_Trica_Control
  3932                           
  3933                           ;triac.c: 152: while(PORTCbits.RC3 == 0)
  3934  001668  D045               	goto	l189
  3935  00166A                     l2911:
  3936                           
  3937                           ;triac.c: 153: {
  3938                           ;triac.c: 154: Elec = ADC_ElecGet();
  3939  00166A  ECD7  F010         	call	_ADC_ElecGet	;wreg free
  3940  00166E  C02F  F0EC         	movff	?_ADC_ElecGet,Trica_Mag@Elec
  3941  001672  C030  F0ED         	movff	?_ADC_ElecGet+1,Trica_Mag@Elec+1
  3942                           
  3943                           ;triac.c: 155: if(Elec_Max[i] < Elec && Elec <= 1000)
  3944  001676  90D8               	bcf	status,0,c
  3945  001678  0100               	movlb	0	; () banked
  3946  00167A  35EE               	rlcf	Trica_Mag@i& (0+255),w,b
  3947  00167C  6ED9               	movwf	fsr2l,c
  3948  00167E  0100               	movlb	0	; () banked
  3949  001680  35EF               	rlcf	(Trica_Mag@i+1)& (0+255),w,b
  3950  001682  6EDA               	movwf	fsr2h,c
  3951  001684  0E60               	movlw	low _Elec_Max
  3952  001686  26D9               	addwf	fsr2l,f,c
  3953  001688  0E00               	movlw	high _Elec_Max
  3954  00168A  22DA               	addwfc	fsr2h,f,c
  3955  00168C  0100               	movlb	0	; () banked
  3956  00168E  51EC               	movf	Trica_Mag@Elec& (0+255),w,b
  3957  001690  5CDE               	subwf	postinc2,w,c
  3958  001692  0100               	movlb	0	; () banked
  3959  001694  51ED               	movf	(Trica_Mag@Elec+1)& (0+255),w,b
  3960  001696  58DE               	subwfb	postinc2,w,c
  3961  001698  B0D8               	btfsc	status,0,c
  3962  00169A  D018               	goto	l2919
  3963                           
  3964                           ; BSR set to: 0
  3965  00169C  0EE9               	movlw	233
  3966  00169E  0100               	movlb	0	; () banked
  3967  0016A0  5DEC               	subwf	Trica_Mag@Elec& (0+255),w,b
  3968  0016A2  0E03               	movlw	3
  3969  0016A4  0100               	movlb	0	; () banked
  3970  0016A6  59ED               	subwfb	(Trica_Mag@Elec+1)& (0+255),w,b
  3971  0016A8  B0D8               	btfsc	status,0,c
  3972  0016AA  D010               	goto	l2919
  3973                           
  3974                           ; BSR set to: 0
  3975                           ;triac.c: 156: Elec_Max[i] = Elec;
  3976  0016AC  90D8               	bcf	status,0,c
  3977  0016AE  0100               	movlb	0	; () banked
  3978  0016B0  35EE               	rlcf	Trica_Mag@i& (0+255),w,b
  3979  0016B2  6ED9               	movwf	fsr2l,c
  3980  0016B4  0100               	movlb	0	; () banked
  3981  0016B6  35EF               	rlcf	(Trica_Mag@i+1)& (0+255),w,b
  3982  0016B8  6EDA               	movwf	fsr2h,c
  3983  0016BA  0E60               	movlw	low _Elec_Max
  3984  0016BC  26D9               	addwf	fsr2l,f,c
  3985  0016BE  0E00               	movlw	high _Elec_Max
  3986  0016C0  22DA               	addwfc	fsr2h,f,c
  3987  0016C2  C0EC  FFDE         	movff	Trica_Mag@Elec,postinc2
  3988  0016C6  C0ED  FFDD         	movff	Trica_Mag@Elec+1,postdec2
  3989  0016CA  D000               	goto	l2919
  3990  0016CC                     l2919:
  3991                           
  3992                           ; BSR set to: 0
  3993                           ;triac.c: 157: if(Elec > Parameter[9].Value*10)
  3994  0016CC  C148  F022         	movff	_Parameter+72,___wmul@multiplier
  3995  0016D0  C149  F023         	movff	_Parameter+73,___wmul@multiplier+1
  3996  0016D4  0E00               	movlw	0
  3997  0016D6  6E25               	movwf	___wmul@multiplicand+1,c
  3998  0016D8  0E0A               	movlw	10
  3999  0016DA  6E24               	movwf	___wmul@multiplicand,c
  4000  0016DC  ECF6  F014         	call	___wmul	;wreg free
  4001  0016E0  0100               	movlb	0	; () banked
  4002  0016E2  51EC               	movf	Trica_Mag@Elec& (0+255),w,b
  4003  0016E4  5C22               	subwf	?___wmul,w,c
  4004  0016E6  0100               	movlb	0	; () banked
  4005  0016E8  51ED               	movf	(Trica_Mag@Elec+1)& (0+255),w,b
  4006  0016EA  5823               	subwfb	?___wmul+1,w,c
  4007  0016EC  B0D8               	btfsc	status,0,c
  4008  0016EE  D002               	goto	l189
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;triac.c: 158: return 0;
  4012  0016F0  0E00               	movlw	0
  4013                           
  4014                           ; BSR set to: 0
  4015  0016F2  0012               	return	
  4016  0016F4                     l189:
  4017  0016F4  A682               	btfss	3970,3,c	;volatile
  4018  0016F6  D7B9               	goto	l2911
  4019                           
  4020                           ;triac.c: 159: }
  4021                           ;triac.c: 160: if(Elec_Max[i] >= Parameter[10].Value*10)
  4022  0016F8  C150  F022         	movff	_Parameter+80,___wmul@multiplier
  4023  0016FC  C151  F023         	movff	_Parameter+81,___wmul@multiplier+1
  4024  001700  0E00               	movlw	0
  4025  001702  6E25               	movwf	___wmul@multiplicand+1,c
  4026  001704  0E0A               	movlw	10
  4027  001706  6E24               	movwf	___wmul@multiplicand,c
  4028  001708  ECF6  F014         	call	___wmul	;wreg free
  4029  00170C  90D8               	bcf	status,0,c
  4030  00170E  0100               	movlb	0	; () banked
  4031  001710  35EE               	rlcf	Trica_Mag@i& (0+255),w,b
  4032  001712  6ED9               	movwf	fsr2l,c
  4033  001714  0100               	movlb	0	; () banked
  4034  001716  35EF               	rlcf	(Trica_Mag@i+1)& (0+255),w,b
  4035  001718  6EDA               	movwf	fsr2h,c
  4036  00171A  0E60               	movlw	low _Elec_Max
  4037  00171C  26D9               	addwf	fsr2l,f,c
  4038  00171E  0E00               	movlw	high _Elec_Max
  4039  001720  22DA               	addwfc	fsr2h,f,c
  4040  001722  5022               	movf	?___wmul,w,c
  4041  001724  5CDE               	subwf	postinc2,w,c
  4042  001726  5023               	movf	?___wmul+1,w,c
  4043  001728  58DE               	subwfb	postinc2,w,c
  4044  00172A  A0D8               	btfss	status,0,c
  4045  00172C  D004               	goto	l2929
  4046                           
  4047                           ; BSR set to: 0
  4048                           ;triac.c: 161: ++Houwa_Cuont;
  4049  00172E  0100               	movlb	0	; () banked
  4050  001730  4BB4               	infsnz	_Houwa_Cuont& (0+255),f,b
  4051  001732  2BB5               	incf	(_Houwa_Cuont+1)& (0+255),f,b
  4052  001734  D000               	goto	l2929
  4053  001736                     l2929:
  4054                           
  4055                           ; BSR set to: 0
  4056                           ;triac.c: 162: if(Houwa_Cuont == Parameter[14].Value)
  4057  001736  0100               	movlb	0	; () banked
  4058  001738  51B4               	movf	_Houwa_Cuont& (0+255),w,b
  4059  00173A  0101               	movlb	1	; () banked
  4060  00173C  1970               	xorwf	(_Parameter+112)& (0+255),w,b
  4061  00173E  E108               	bnz	l2935
  4062  001740  0100               	movlb	0	; () banked
  4063  001742  51B5               	movf	(_Houwa_Cuont+1)& (0+255),w,b
  4064  001744  0101               	movlb	1	; () banked
  4065  001746  1971               	xorwf	(_Parameter+113)& (0+255),w,b
  4066  001748  A4D8               	btfss	status,2,c
  4067  00174A  D002               	goto	l2935
  4068                           
  4069                           ; BSR set to: 1
  4070                           ;triac.c: 163: return 1;
  4071  00174C  0E01               	movlw	1
  4072                           
  4073                           ; BSR set to: 1
  4074  00174E  0012               	return	
  4075  001750                     l2935:
  4076                           
  4077                           ; BSR set to: 1
  4078                           ;triac.c: 164: for(k = Parameter[15].Value*2;k > 0;k--)
  4079  001750  90D8               	bcf	status,0,c
  4080  001752  0101               	movlb	1	; () banked
  4081  001754  3578               	rlcf	(_Parameter+120)& (0+255),w,b
  4082  001756  0100               	movlb	0	; () banked
  4083  001758  6FEA               	movwf	Trica_Mag@k& (0+255),b
  4084  00175A  0101               	movlb	1	; () banked
  4085  00175C  3579               	rlcf	(_Parameter+121)& (0+255),w,b
  4086  00175E  0100               	movlb	0	; () banked
  4087  001760  6FEB               	movwf	(Trica_Mag@k+1)& (0+255),b
  4088  001762  0100               	movlb	0	; () banked
  4089  001764  51EA               	movf	Trica_Mag@k& (0+255),w,b
  4090  001766  0100               	movlb	0	; () banked
  4091  001768  11EB               	iorwf	(Trica_Mag@k+1)& (0+255),w,b
  4092  00176A  B4D8               	btfsc	status,2,c
  4093  00176C  D00E               	goto	l2943
  4094  00176E  D002               	goto	l198
  4095                           
  4096                           ; BSR set to: 0
  4097  001770  D00C               	goto	l2943
  4098                           
  4099                           ; BSR set to: 0
  4100                           ;triac.c: 165: {
  4101                           ;triac.c: 166: while(PORTCbits.RC3 == 0);
  4102  001772  D000               	goto	l198
  4103  001774                     l198:
  4104                           
  4105                           ; BSR set to: 0
  4106  001774  B682               	btfsc	3970,3,c	;volatile
  4107  001776  D002               	goto	l201
  4108  001778  D7FD               	goto	l198
  4109                           
  4110                           ; BSR set to: 0
  4111                           ;triac.c: 167: while(PORTCbits.RC3 == 1);
  4112  00177A  D000               	goto	l201
  4113  00177C                     l201:
  4114                           
  4115                           ; BSR set to: 0
  4116  00177C  B682               	btfsc	3970,3,c	;volatile
  4117  00177E  D7FE               	goto	l201
  4118                           
  4119                           ; BSR set to: 0
  4120                           
  4121                           ; BSR set to: 0
  4122  001780  0100               	movlb	0	; () banked
  4123  001782  07EA               	decf	Trica_Mag@k& (0+255),f,b
  4124  001784  A0D8               	btfss	status,0,c
  4125  001786  07EB               	decf	(Trica_Mag@k+1)& (0+255),f,b
  4126  001788  D7EC               	goto	L6
  4127  00178A                     l2943:
  4128                           
  4129                           ; BSR set to: 0
  4130  00178A  0100               	movlb	0	; () banked
  4131  00178C  4BEE               	infsnz	Trica_Mag@i& (0+255),f,b
  4132  00178E  2BEF               	incf	(Trica_Mag@i+1)& (0+255),f,b
  4133  001790  D000               	goto	l2945
  4134  001792                     l2945:
  4135                           
  4136                           ; BSR set to: 0
  4137  001792  EE21  F030         	lfsr	2,_Parameter+48
  4138  001796  CFDE F0E1          	movff	postinc2,??_Trica_Mag
  4139  00179A  CFDD F0E2          	movff	postdec2,??_Trica_Mag+1
  4140  00179E  90D8               	bcf	status,0,c
  4141  0017A0  0100               	movlb	0	; () banked
  4142  0017A2  37E1               	rlcf	??_Trica_Mag& (0+255),f,b
  4143  0017A4  37E2               	rlcf	(??_Trica_Mag+1)& (0+255),f,b
  4144  0017A6  0100               	movlb	0	; () banked
  4145  0017A8  51E1               	movf	??_Trica_Mag& (0+255),w,b
  4146  0017AA  0100               	movlb	0	; () banked
  4147  0017AC  5DEE               	subwf	Trica_Mag@i& (0+255),w,b
  4148  0017AE  0100               	movlb	0	; () banked
  4149  0017B0  51E2               	movf	(??_Trica_Mag+1)& (0+255),w,b
  4150  0017B2  0100               	movlb	0	; () banked
  4151  0017B4  59EF               	subwfb	(Trica_Mag@i+1)& (0+255),w,b
  4152  0017B6  A0D8               	btfss	status,0,c
  4153  0017B8  D737               	goto	l183
  4154                           
  4155                           ; BSR set to: 0
  4156                           ;triac.c: 168: }
  4157                           ;triac.c: 169: }
  4158                           ;triac.c: 170: if(Elec_Max[i-1] < Parameter[8].Value*10)
  4159                           
  4160                           ; BSR set to: 0
  4161  0017BA  C140  F022         	movff	_Parameter+64,___wmul@multiplier
  4162  0017BE  C141  F023         	movff	_Parameter+65,___wmul@multiplier+1
  4163  0017C2  0E00               	movlw	0
  4164  0017C4  6E25               	movwf	___wmul@multiplicand+1,c
  4165  0017C6  0E0A               	movlw	10
  4166  0017C8  6E24               	movwf	___wmul@multiplicand,c
  4167  0017CA  ECF6  F014         	call	___wmul	;wreg free
  4168  0017CE  D539               	goto	L7
  4169                           
  4170                           ; BSR set to: 0
  4171                           
  4172                           ; BSR set to: 0
  4173                           ;triac.c: 171: return 0;
  4174  0017D0  0012               	return	
  4175                           
  4176                           ; BSR set to: 0
  4177                           
  4178                           ; BSR set to: 0
  4179                           
  4180                           ; BSR set to: 0
  4181  0017D2  D000               	goto	l2953
  4182  0017D4                     l2953:
  4183                           
  4184                           ; BSR set to: 0
  4185                           ;triac.c: 172: }
  4186                           ;triac.c: 173: }
  4187                           ;triac.c: 174: return 0;
  4188  0017D4  0E00               	movlw	0
  4189  0017D6  0012               	return	
  4190                           
  4191                           ; BSR set to: 0
  4192  0017D8  0012               	return		;funcret
  4193  0017DA                     __end_of_Trica_Mag:
  4194                           	opt stack 0
  4195                           tblptru	equ	0xFF8
  4196                           tblptrh	equ	0xFF7
  4197                           tblptrl	equ	0xFF6
  4198                           tablat	equ	0xFF5
  4199                           prodh	equ	0xFF4
  4200                           prodl	equ	0xFF3
  4201                           intcon	equ	0xFF2
  4202                           postinc0	equ	0xFEE
  4203                           wreg	equ	0xFE8
  4204                           postinc1	equ	0xFE6
  4205                           postdec1	equ	0xFE5
  4206                           fsr1h	equ	0xFE2
  4207                           fsr1l	equ	0xFE1
  4208                           indf2	equ	0xFDF
  4209                           postinc2	equ	0xFDE
  4210                           postdec2	equ	0xFDD
  4211                           fsr2h	equ	0xFDA
  4212                           fsr2l	equ	0xFD9
  4213                           status	equ	0xFD8
  4214                           
  4215 ;; *************** function ___wmul *****************
  4216 ;; Defined at:
  4217 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v1.34\sources\common\Umul16.c"
  4218 ;; Parameters:    Size  Location     Type
  4219 ;;  multiplier      2   33[COMRAM] unsigned int 
  4220 ;;  multiplicand    2   35[COMRAM] unsigned int 
  4221 ;; Auto vars:     Size  Location     Type
  4222 ;;  product         2   37[COMRAM] unsigned int 
  4223 ;; Return value:  Size  Location     Type
  4224 ;;                  2   33[COMRAM] unsigned int 
  4225 ;; Registers used:
  4226 ;;		wreg, status,2, status,0, prodl, prodh
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/0
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4232 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4233 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4235 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4236 ;;Total ram usage:        6 bytes
  4237 ;; Hardware stack levels used:    1
  4238 ;; Hardware stack levels required when called:    3
  4239 ;; This function calls:
  4240 ;;		Nothing
  4241 ;; This function is called by:
  4242 ;;		_Trica_Mag
  4243 ;;		_Magne_Demag_Dispose
  4244 ;; This function uses a non-reentrant model
  4245 ;;
  4246                           
  4247                           	psect	text12
  4248  0029EC                     __ptext12:
  4249                           	opt stack 0
  4250  0029EC                     ___wmul:
  4251                           	opt stack 25
  4252                           
  4253                           ;incstack = 0
  4254  0029EC  5022               	movf	___wmul@multiplier,w,c
  4255  0029EE  0224               	mulwf	___wmul@multiplicand,c
  4256  0029F0  CFF3 F026          	movff	prodl,___wmul@product
  4257  0029F4  CFF4 F027          	movff	prodh,___wmul@product+1
  4258  0029F8  5022               	movf	___wmul@multiplier,w,c
  4259  0029FA  0225               	mulwf	___wmul@multiplicand+1,c
  4260  0029FC  50F3               	movf	prodl,w,c
  4261  0029FE  2627               	addwf	___wmul@product+1,f,c
  4262  002A00  5023               	movf	___wmul@multiplier+1,w,c
  4263  002A02  0224               	mulwf	___wmul@multiplicand,c
  4264  002A04  50F3               	movf	prodl,w,c
  4265  002A06  2627               	addwf	___wmul@product+1,f,c
  4266  002A08  C026  F022         	movff	___wmul@product,?___wmul
  4267  002A0C  C027  F023         	movff	___wmul@product+1,?___wmul+1
  4268  002A10  0012               	return	
  4269  002A12  0012               	return		;funcret
  4270  002A14                     __end_of___wmul:
  4271                           	opt stack 0
  4272                           tblptru	equ	0xFF8
  4273                           tblptrh	equ	0xFF7
  4274                           tblptrl	equ	0xFF6
  4275                           tablat	equ	0xFF5
  4276                           prodh	equ	0xFF4
  4277                           prodl	equ	0xFF3
  4278                           intcon	equ	0xFF2
  4279                           postinc0	equ	0xFEE
  4280                           wreg	equ	0xFE8
  4281                           postinc1	equ	0xFE6
  4282                           postdec1	equ	0xFE5
  4283                           fsr1h	equ	0xFE2
  4284                           fsr1l	equ	0xFE1
  4285                           indf2	equ	0xFDF
  4286                           postinc2	equ	0xFDE
  4287                           postdec2	equ	0xFDD
  4288                           fsr2h	equ	0xFDA
  4289                           fsr2l	equ	0xFD9
  4290                           status	equ	0xFD8
  4291                           
  4292 ;; *************** function _Trica_Control *****************
  4293 ;; Defined at:
  4294 ;;		line 188 in file "nbproject/private/triac.c"
  4295 ;; Parameters:    Size  Location     Type
  4296 ;;  EMCC_State      1    wreg     enum E8799
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;  EMCC_State      1   37[COMRAM] enum E8799
  4299 ;;  i               1   38[COMRAM] unsigned char 
  4300 ;; Return value:  Size  Location     Type
  4301 ;;		None               void
  4302 ;; Registers used:
  4303 ;;		wreg, status,2, status,0, cstack
  4304 ;; Tracked objects:
  4305 ;;		On entry : 0/0
  4306 ;;		On exit  : 0/0
  4307 ;;		Unchanged: 0/0
  4308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4310 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4312 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4313 ;;Total ram usage:        2 bytes
  4314 ;; Hardware stack levels used:    1
  4315 ;; Hardware stack levels required when called:    4
  4316 ;; This function calls:
  4317 ;;		_delay_us
  4318 ;; This function is called by:
  4319 ;;		_Trica_Mag
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323                           	psect	text13
  4324  00265E                     __ptext13:
  4325                           	opt stack 0
  4326  00265E                     _Trica_Control:
  4327                           	opt stack 23
  4328                           
  4329                           ;incstack = 0
  4330                           ;Trica_Control@EMCC_State stored from wreg
  4331  00265E  6E26               	movwf	Trica_Control@EMCC_State,c
  4332                           
  4333                           ;triac.c: 190: uint8_t i;
  4334                           ;triac.c: 191: if(EMCC_State == DEMAG)
  4335  002660  5026               	movf	Trica_Control@EMCC_State,w,c
  4336  002662  A4D8               	btfss	status,2,c
  4337  002664  D020               	goto	l2709
  4338                           
  4339                           ;triac.c: 192: {
  4340                           ;triac.c: 193: for(i = 1; i <= 6; i++)
  4341  002666  0E01               	movlw	1
  4342  002668  6E27               	movwf	Trica_Control@i,c
  4343  00266A  D018               	goto	l2707
  4344  00266C  D01A               	goto	l210
  4345  00266E                     l209:
  4346                           
  4347                           ;triac.c: 194: {
  4348                           ;triac.c: 195: PORTDbits.RD7 = 1;
  4349  00266E  8E83               	bsf	3971,7,c	;volatile
  4350                           
  4351                           ;triac.c: 196: delay_us(100);
  4352  002670  0E64               	movlw	100
  4353  002672  6E22               	movwf	delay_us@nus,c
  4354  002674  0E00               	movlw	0
  4355  002676  6E23               	movwf	delay_us@nus+1,c
  4356  002678  0E00               	movlw	0
  4357  00267A  6E24               	movwf	delay_us@nus+2,c
  4358  00267C  0E00               	movlw	0
  4359  00267E  6E25               	movwf	delay_us@nus+3,c
  4360  002680  EC3E  F015         	call	_delay_us	;wreg free
  4361                           
  4362                           ;triac.c: 197: PORTDbits.RD7 = 0;
  4363  002684  9E83               	bcf	3971,7,c	;volatile
  4364                           
  4365                           ;triac.c: 198: delay_us(200);
  4366  002686  0EC8               	movlw	200
  4367  002688  6E22               	movwf	delay_us@nus,c
  4368  00268A  0E00               	movlw	0
  4369  00268C  6E23               	movwf	delay_us@nus+1,c
  4370  00268E  0E00               	movlw	0
  4371  002690  6E24               	movwf	delay_us@nus+2,c
  4372  002692  0E00               	movlw	0
  4373  002694  6E25               	movwf	delay_us@nus+3,c
  4374  002696  EC3E  F015         	call	_delay_us	;wreg free
  4375  00269A  2A27               	incf	Trica_Control@i,f,c
  4376  00269C                     l2707:
  4377  00269C  0E06               	movlw	6
  4378  00269E  6427               	cpfsgt	Trica_Control@i,c
  4379  0026A0  D7E6               	goto	l209
  4380  0026A2                     l210:
  4381                           
  4382                           ;triac.c: 199: }
  4383                           ;triac.c: 200: PORTDbits.RD7 = 0;
  4384  0026A2  9E83               	bcf	3971,7,c	;volatile
  4385                           
  4386                           ;triac.c: 201: }
  4387  0026A4  0012               	return	
  4388  0026A6                     l2709:
  4389                           
  4390                           ;triac.c: 202: else if(EMCC_State == MAGNET)
  4391  0026A6  0426               	decf	Trica_Control@EMCC_State,w,c
  4392  0026A8  A4D8               	btfss	status,2,c
  4393  0026AA  0012               	return	
  4394                           
  4395                           ;triac.c: 203: {
  4396                           ;triac.c: 204: for(i = 1; i <= 6; i++)
  4397  0026AC  0E01               	movlw	1
  4398  0026AE  6E27               	movwf	Trica_Control@i,c
  4399  0026B0  D018               	goto	l2723
  4400  0026B2  D01A               	goto	l214
  4401  0026B4                     l213:
  4402                           
  4403                           ;triac.c: 205: {
  4404                           ;triac.c: 206: PORTDbits.RD6 = 1;
  4405  0026B4  8C83               	bsf	3971,6,c	;volatile
  4406                           
  4407                           ;triac.c: 207: delay_us(100);
  4408  0026B6  0E64               	movlw	100
  4409  0026B8  6E22               	movwf	delay_us@nus,c
  4410  0026BA  0E00               	movlw	0
  4411  0026BC  6E23               	movwf	delay_us@nus+1,c
  4412  0026BE  0E00               	movlw	0
  4413  0026C0  6E24               	movwf	delay_us@nus+2,c
  4414  0026C2  0E00               	movlw	0
  4415  0026C4  6E25               	movwf	delay_us@nus+3,c
  4416  0026C6  EC3E  F015         	call	_delay_us	;wreg free
  4417                           
  4418                           ;triac.c: 208: PORTDbits.RD6 = 0;
  4419  0026CA  9C83               	bcf	3971,6,c	;volatile
  4420                           
  4421                           ;triac.c: 209: delay_us(200);
  4422  0026CC  0EC8               	movlw	200
  4423  0026CE  6E22               	movwf	delay_us@nus,c
  4424  0026D0  0E00               	movlw	0
  4425  0026D2  6E23               	movwf	delay_us@nus+1,c
  4426  0026D4  0E00               	movlw	0
  4427  0026D6  6E24               	movwf	delay_us@nus+2,c
  4428  0026D8  0E00               	movlw	0
  4429  0026DA  6E25               	movwf	delay_us@nus+3,c
  4430  0026DC  EC3E  F015         	call	_delay_us	;wreg free
  4431  0026E0  2A27               	incf	Trica_Control@i,f,c
  4432  0026E2                     l2723:
  4433  0026E2  0E06               	movlw	6
  4434  0026E4  6427               	cpfsgt	Trica_Control@i,c
  4435  0026E6  D7E6               	goto	l213
  4436  0026E8                     l214:
  4437                           
  4438                           ;triac.c: 210: }
  4439                           ;triac.c: 211: PORTDbits.RD6 = 0;
  4440  0026E8  9C83               	bcf	3971,6,c	;volatile
  4441  0026EA  0012               	return	
  4442  0026EC  0012               	return		;funcret
  4443  0026EE                     __end_of_Trica_Control:
  4444                           	opt stack 0
  4445                           tblptru	equ	0xFF8
  4446                           tblptrh	equ	0xFF7
  4447                           tblptrl	equ	0xFF6
  4448                           tablat	equ	0xFF5
  4449                           prodh	equ	0xFF4
  4450                           prodl	equ	0xFF3
  4451                           intcon	equ	0xFF2
  4452                           postinc0	equ	0xFEE
  4453                           wreg	equ	0xFE8
  4454                           postinc1	equ	0xFE6
  4455                           postdec1	equ	0xFE5
  4456                           fsr1h	equ	0xFE2
  4457                           fsr1l	equ	0xFE1
  4458                           indf2	equ	0xFDF
  4459                           postinc2	equ	0xFDE
  4460                           postdec2	equ	0xFDD
  4461                           fsr2h	equ	0xFDA
  4462                           fsr2l	equ	0xFD9
  4463                           status	equ	0xFD8
  4464                           
  4465 ;; *************** function _delay_us *****************
  4466 ;; Defined at:
  4467 ;;		line 32 in file "nbproject/private/delay.c"
  4468 ;; Parameters:    Size  Location     Type
  4469 ;;  nus             4   33[COMRAM] unsigned long 
  4470 ;; Auto vars:     Size  Location     Type
  4471 ;;		None
  4472 ;; Return value:  Size  Location     Type
  4473 ;;		None               void
  4474 ;; Registers used:
  4475 ;;		wreg, status,2, status,0
  4476 ;; Tracked objects:
  4477 ;;		On entry : 0/0
  4478 ;;		On exit  : 0/0
  4479 ;;		Unchanged: 0/0
  4480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4481 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4484 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4485 ;;Total ram usage:        4 bytes
  4486 ;; Hardware stack levels used:    1
  4487 ;; Hardware stack levels required when called:    3
  4488 ;; This function calls:
  4489 ;;		Nothing
  4490 ;; This function is called by:
  4491 ;;		_Trica_Mag
  4492 ;;		_Trica_Control
  4493 ;; This function uses a non-reentrant model
  4494 ;;
  4495                           
  4496                           	psect	text14
  4497  002A7C                     __ptext14:
  4498                           	opt stack 0
  4499  002A7C                     _delay_us:
  4500                           	opt stack 24
  4501                           
  4502                           ;delay.c: 34: while(nus--);
  4503                           
  4504                           ;incstack = 0
  4505  002A7C  D000               	goto	l2641
  4506  002A7E                     l2641:
  4507  002A7E  0622               	decf	delay_us@nus,f,c
  4508  002A80  0E00               	movlw	0
  4509  002A82  5A23               	subwfb	delay_us@nus+1,f,c
  4510  002A84  5A24               	subwfb	delay_us@nus+2,f,c
  4511  002A86  5A25               	subwfb	delay_us@nus+3,f,c
  4512  002A88  2822               	incf	delay_us@nus,w,c
  4513  002A8A  E1F9               	bnz	l2641
  4514  002A8C  2823               	incf	delay_us@nus+1,w,c
  4515  002A8E  E1F7               	bnz	l2641
  4516  002A90  2824               	incf	delay_us@nus+2,w,c
  4517  002A92  E1F5               	bnz	l2641
  4518  002A94  2825               	incf	delay_us@nus+3,w,c
  4519  002A96  A4D8               	btfss	status,2,c
  4520  002A98  D7F2               	goto	l2641
  4521  002A9A  0012               	return		;funcret
  4522  002A9C                     __end_of_delay_us:
  4523                           	opt stack 0
  4524                           tblptru	equ	0xFF8
  4525                           tblptrh	equ	0xFF7
  4526                           tblptrl	equ	0xFF6
  4527                           tablat	equ	0xFF5
  4528                           prodh	equ	0xFF4
  4529                           prodl	equ	0xFF3
  4530                           intcon	equ	0xFF2
  4531                           postinc0	equ	0xFEE
  4532                           wreg	equ	0xFE8
  4533                           postinc1	equ	0xFE6
  4534                           postdec1	equ	0xFE5
  4535                           fsr1h	equ	0xFE2
  4536                           fsr1l	equ	0xFE1
  4537                           indf2	equ	0xFDF
  4538                           postinc2	equ	0xFDE
  4539                           postdec2	equ	0xFDD
  4540                           fsr2h	equ	0xFDA
  4541                           fsr2l	equ	0xFD9
  4542                           status	equ	0xFD8
  4543                           
  4544 ;; *************** function _ADC_ElecGet *****************
  4545 ;; Defined at:
  4546 ;;		line 65 in file "nbproject/private/ADC.c"
  4547 ;; Parameters:    Size  Location     Type
  4548 ;;		None
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;  elec            4    4[BANK0 ] unsigned long 
  4551 ;;  i               4    0[BANK0 ] unsigned long 
  4552 ;; Return value:  Size  Location     Type
  4553 ;;                  2   46[COMRAM] unsigned int 
  4554 ;; Registers used:
  4555 ;;		wreg, status,2, status,0, cstack
  4556 ;; Tracked objects:
  4557 ;;		On entry : 0/0
  4558 ;;		On exit  : 0/0
  4559 ;;		Unchanged: 0/0
  4560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4561 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4562 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4563 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4564 ;;      Totals:         6       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4565 ;;Total ram usage:       14 bytes
  4566 ;; Hardware stack levels used:    1
  4567 ;; Hardware stack levels required when called:    4
  4568 ;; This function calls:
  4569 ;;		_BusyADC
  4570 ;;		_ConvertADC
  4571 ;;		_ReadADC
  4572 ;;		___lldiv
  4573 ;; This function is called by:
  4574 ;;		_Trica_Mag
  4575 ;; This function uses a non-reentrant model
  4576 ;;
  4577                           
  4578                           	psect	text15
  4579  0021AE                     __ptext15:
  4580                           	opt stack 0
  4581  0021AE                     _ADC_ElecGet:
  4582                           	opt stack 23
  4583                           
  4584                           ;ADC.c: 67: uint32_t elec = 0,i;
  4585                           
  4586                           ;incstack = 0
  4587  0021AE  0E00               	movlw	0
  4588  0021B0  0100               	movlb	0	; () banked
  4589  0021B2  6FDD               	movwf	ADC_ElecGet@elec& (0+255),b
  4590  0021B4  0E00               	movlw	0
  4591  0021B6  6FDE               	movwf	(ADC_ElecGet@elec+1)& (0+255),b
  4592  0021B8  0E00               	movlw	0
  4593  0021BA  6FDF               	movwf	(ADC_ElecGet@elec+2)& (0+255),b
  4594  0021BC  0E00               	movlw	0
  4595  0021BE  6FE0               	movwf	(ADC_ElecGet@elec+3)& (0+255),b
  4596                           
  4597                           ;ADC.c: 68: for(i = 0;i < 5;i++)
  4598  0021C0  0E00               	movlw	0
  4599  0021C2  0100               	movlb	0	; () banked
  4600  0021C4  6FD9               	movwf	ADC_ElecGet@i& (0+255),b
  4601  0021C6  0E00               	movlw	0
  4602  0021C8  6FDA               	movwf	(ADC_ElecGet@i+1)& (0+255),b
  4603  0021CA  0E00               	movlw	0
  4604  0021CC  6FDB               	movwf	(ADC_ElecGet@i+2)& (0+255),b
  4605  0021CE  0E00               	movlw	0
  4606  0021D0  6FDC               	movwf	(ADC_ElecGet@i+3)& (0+255),b
  4607  0021D2                     l2667:
  4608                           
  4609                           ; BSR set to: 0
  4610  0021D2  0100               	movlb	0	; () banked
  4611  0021D4  51DC               	movf	(ADC_ElecGet@i+3)& (0+255),w,b
  4612  0021D6  0100               	movlb	0	; () banked
  4613  0021D8  11DB               	iorwf	(ADC_ElecGet@i+2)& (0+255),w,b
  4614  0021DA  0100               	movlb	0	; () banked
  4615  0021DC  11DA               	iorwf	(ADC_ElecGet@i+1)& (0+255),w,b
  4616  0021DE  E12F               	bnz	l2681
  4617  0021E0  0E05               	movlw	5
  4618  0021E2  0100               	movlb	0	; () banked
  4619  0021E4  5DD9               	subwf	ADC_ElecGet@i& (0+255),w,b
  4620  0021E6  B0D8               	btfsc	status,0,c
  4621  0021E8  D02A               	goto	l2681
  4622  0021EA  D001               	goto	l2671
  4623                           
  4624                           ; BSR set to: 0
  4625  0021EC  D028               	goto	l2681
  4626  0021EE                     l2671:
  4627                           
  4628                           ; BSR set to: 0
  4629                           ;ADC.c: 69: {
  4630                           ;ADC.c: 70: ConvertADC();
  4631  0021EE  EC7A  F015         	call	_ConvertADC	;wreg free
  4632                           
  4633                           ;ADC.c: 71: while(BusyADC());
  4634  0021F2  D000               	goto	l2673
  4635  0021F4                     l2673:
  4636  0021F4  EC73  F015         	call	_BusyADC	;wreg free
  4637  0021F8  0900               	iorlw	0
  4638  0021FA  A4D8               	btfss	status,2,c
  4639  0021FC  D7FB               	goto	l2673
  4640                           
  4641                           ;ADC.c: 72: elec += ReadADC();
  4642  0021FE  EC6B  F015         	call	_ReadADC	;wreg free
  4643  002202  C022  F031         	movff	?_ReadADC,??_ADC_ElecGet
  4644  002206  C023  F032         	movff	?_ReadADC+1,??_ADC_ElecGet+1
  4645  00220A  0E00               	movlw	0
  4646  00220C  BE32               	btfsc	(??_ADC_ElecGet+1)& (0+255),7,c
  4647  00220E  0EFF               	movlw	255
  4648  002210  6E33               	movwf	(??_ADC_ElecGet+2)& (0+255),c
  4649  002212  6E34               	movwf	(??_ADC_ElecGet+3)& (0+255),c
  4650  002214  5031               	movf	??_ADC_ElecGet,w,c
  4651  002216  0100               	movlb	0	; () banked
  4652  002218  27DD               	addwf	ADC_ElecGet@elec& (0+255),f,b
  4653  00221A  5032               	movf	??_ADC_ElecGet+1,w,c
  4654  00221C  0100               	movlb	0	; () banked
  4655  00221E  23DE               	addwfc	(ADC_ElecGet@elec+1)& (0+255),f,b
  4656  002220  5033               	movf	??_ADC_ElecGet+2,w,c
  4657  002222  0100               	movlb	0	; () banked
  4658  002224  23DF               	addwfc	(ADC_ElecGet@elec+2)& (0+255),f,b
  4659  002226  5034               	movf	??_ADC_ElecGet+3,w,c
  4660  002228  0100               	movlb	0	; () banked
  4661  00222A  23E0               	addwfc	(ADC_ElecGet@elec+3)& (0+255),f,b
  4662                           
  4663                           ; BSR set to: 0
  4664  00222C  0E01               	movlw	1
  4665  00222E  0100               	movlb	0	; () banked
  4666  002230  27D9               	addwf	ADC_ElecGet@i& (0+255),f,b
  4667  002232  0E00               	movlw	0
  4668  002234  23DA               	addwfc	(ADC_ElecGet@i+1)& (0+255),f,b
  4669  002236  23DB               	addwfc	(ADC_ElecGet@i+2)& (0+255),f,b
  4670  002238  23DC               	addwfc	(ADC_ElecGet@i+3)& (0+255),f,b
  4671  00223A  D7CB               	goto	l2667
  4672                           
  4673                           ; BSR set to: 0
  4674  00223C  D000               	goto	l2681
  4675  00223E                     l2681:
  4676                           
  4677                           ; BSR set to: 0
  4678                           ;ADC.c: 73: }
  4679                           ;ADC.c: 74: elec = elec/5;
  4680  00223E  C0DD  F022         	movff	ADC_ElecGet@elec,___lldiv@dividend
  4681  002242  C0DE  F023         	movff	ADC_ElecGet@elec+1,___lldiv@dividend+1
  4682  002246  C0DF  F024         	movff	ADC_ElecGet@elec+2,___lldiv@dividend+2
  4683  00224A  C0E0  F025         	movff	ADC_ElecGet@elec+3,___lldiv@dividend+3
  4684  00224E  0E05               	movlw	5
  4685  002250  6E26               	movwf	___lldiv@divisor,c
  4686  002252  0E00               	movlw	0
  4687  002254  6E27               	movwf	___lldiv@divisor+1,c
  4688  002256  0E00               	movlw	0
  4689  002258  6E28               	movwf	___lldiv@divisor+2,c
  4690  00225A  0E00               	movlw	0
  4691  00225C  6E29               	movwf	___lldiv@divisor+3,c
  4692  00225E  EC77  F013         	call	___lldiv	;wreg free
  4693  002262  C022  F0DD         	movff	?___lldiv,ADC_ElecGet@elec
  4694  002266  C023  F0DE         	movff	?___lldiv+1,ADC_ElecGet@elec+1
  4695  00226A  C024  F0DF         	movff	?___lldiv+2,ADC_ElecGet@elec+2
  4696  00226E  C025  F0E0         	movff	?___lldiv+3,ADC_ElecGet@elec+3
  4697                           
  4698                           ;ADC.c: 75: if(elec > Parameter[4].Value)
  4699  002272  0101               	movlb	1	; () banked
  4700  002274  5120               	movf	(_Parameter+32)& (0+255),w,b
  4701  002276  6E31               	movwf	??_ADC_ElecGet& (0+255),c
  4702  002278  0101               	movlb	1	; () banked
  4703  00227A  5121               	movf	(_Parameter+33)& (0+255),w,b
  4704  00227C  6E32               	movwf	(??_ADC_ElecGet+1)& (0+255),c
  4705  00227E  6A33               	clrf	(??_ADC_ElecGet+2)& (0+255),c
  4706  002280  6A34               	clrf	(??_ADC_ElecGet+3)& (0+255),c
  4707  002282  0100               	movlb	0	; () banked
  4708  002284  51DD               	movf	ADC_ElecGet@elec& (0+255),w,b
  4709  002286  5C31               	subwf	??_ADC_ElecGet,w,c
  4710  002288  0100               	movlb	0	; () banked
  4711  00228A  51DE               	movf	(ADC_ElecGet@elec+1)& (0+255),w,b
  4712  00228C  5832               	subwfb	??_ADC_ElecGet+1,w,c
  4713  00228E  0100               	movlb	0	; () banked
  4714  002290  51DF               	movf	(ADC_ElecGet@elec+2)& (0+255),w,b
  4715  002292  5833               	subwfb	??_ADC_ElecGet+2,w,c
  4716  002294  0100               	movlb	0	; () banked
  4717  002296  51E0               	movf	(ADC_ElecGet@elec+3)& (0+255),w,b
  4718  002298  5834               	subwfb	??_ADC_ElecGet+3,w,c
  4719  00229A  B0D8               	btfsc	status,0,c
  4720  00229C  D02A               	goto	l2687
  4721                           
  4722                           ; BSR set to: 0
  4723                           ;ADC.c: 76: elec = (elec-Parameter[4].Value)/Parameter[5].Value;
  4724  00229E  0101               	movlb	1	; () banked
  4725  0022A0  5120               	movf	(_Parameter+32)& (0+255),w,b
  4726  0022A2  6E31               	movwf	??_ADC_ElecGet& (0+255),c
  4727  0022A4  0101               	movlb	1	; () banked
  4728  0022A6  5121               	movf	(_Parameter+33)& (0+255),w,b
  4729  0022A8  6E32               	movwf	(??_ADC_ElecGet+1)& (0+255),c
  4730  0022AA  6A33               	clrf	(??_ADC_ElecGet+2)& (0+255),c
  4731  0022AC  6A34               	clrf	(??_ADC_ElecGet+3)& (0+255),c
  4732  0022AE  1E31               	comf	??_ADC_ElecGet,f,c
  4733  0022B0  1E32               	comf	??_ADC_ElecGet+1,f,c
  4734  0022B2  1E33               	comf	??_ADC_ElecGet+2,f,c
  4735  0022B4  1E34               	comf	??_ADC_ElecGet+3,f,c
  4736  0022B6  2A31               	incf	??_ADC_ElecGet,f,c
  4737  0022B8  0E00               	movlw	0
  4738  0022BA  2232               	addwfc	??_ADC_ElecGet+1,f,c
  4739  0022BC  2233               	addwfc	??_ADC_ElecGet+2,f,c
  4740  0022BE  2234               	addwfc	??_ADC_ElecGet+3,f,c
  4741  0022C0  0100               	movlb	0	; () banked
  4742  0022C2  51DD               	movf	ADC_ElecGet@elec& (0+255),w,b
  4743  0022C4  2431               	addwf	??_ADC_ElecGet,w,c
  4744  0022C6  6E22               	movwf	___lldiv@dividend,c
  4745  0022C8  0100               	movlb	0	; () banked
  4746  0022CA  51DE               	movf	(ADC_ElecGet@elec+1)& (0+255),w,b
  4747  0022CC  2032               	addwfc	??_ADC_ElecGet+1,w,c
  4748  0022CE  6E23               	movwf	___lldiv@dividend+1,c
  4749  0022D0  0100               	movlb	0	; () banked
  4750  0022D2  51DF               	movf	(ADC_ElecGet@elec+2)& (0+255),w,b
  4751  0022D4  2033               	addwfc	??_ADC_ElecGet+2,w,c
  4752  0022D6  6E24               	movwf	___lldiv@dividend+2,c
  4753  0022D8  0100               	movlb	0	; () banked
  4754  0022DA  51E0               	movf	(ADC_ElecGet@elec+3)& (0+255),w,b
  4755  0022DC  2034               	addwfc	??_ADC_ElecGet+3,w,c
  4756  0022DE  6E25               	movwf	___lldiv@dividend+3,c
  4757  0022E0  C128  F026         	movff	_Parameter+40,___lldiv@divisor
  4758  0022E4  C129  F027         	movff	_Parameter+41,___lldiv@divisor+1
  4759  0022E8  6A28               	clrf	___lldiv@divisor+2,c
  4760  0022EA  6A29               	clrf	___lldiv@divisor+3,c
  4761  0022EC  EC77  F013         	call	___lldiv	;wreg free
  4762  0022F0  D027               	goto	L8
  4763  0022F2                     l2687:
  4764                           
  4765                           ;ADC.c: 77: else
  4766                           ;ADC.c: 78: elec = (Parameter[4].Value - elec)/Parameter[5].Value;
  4767  0022F2  C0DD  F031         	movff	ADC_ElecGet@elec,??_ADC_ElecGet
  4768  0022F6  C0DE  F032         	movff	ADC_ElecGet@elec+1,??_ADC_ElecGet+1
  4769  0022FA  C0DF  F033         	movff	ADC_ElecGet@elec+2,??_ADC_ElecGet+2
  4770  0022FE  C0E0  F034         	movff	ADC_ElecGet@elec+3,??_ADC_ElecGet+3
  4771  002302  1E31               	comf	??_ADC_ElecGet,f,c
  4772  002304  1E32               	comf	??_ADC_ElecGet+1,f,c
  4773  002306  1E33               	comf	??_ADC_ElecGet+2,f,c
  4774  002308  1E34               	comf	??_ADC_ElecGet+3,f,c
  4775  00230A  2A31               	incf	??_ADC_ElecGet,f,c
  4776  00230C  0E00               	movlw	0
  4777  00230E  2232               	addwfc	??_ADC_ElecGet+1,f,c
  4778  002310  2233               	addwfc	??_ADC_ElecGet+2,f,c
  4779  002312  2234               	addwfc	??_ADC_ElecGet+3,f,c
  4780  002314  0101               	movlb	1	; () banked
  4781  002316  5120               	movf	(_Parameter+32)& (0+255),w,b
  4782  002318  2431               	addwf	??_ADC_ElecGet,w,c
  4783  00231A  6E22               	movwf	___lldiv@dividend,c
  4784  00231C  0101               	movlb	1	; () banked
  4785  00231E  5121               	movf	(_Parameter+33)& (0+255),w,b
  4786  002320  2032               	addwfc	??_ADC_ElecGet+1,w,c
  4787  002322  6E23               	movwf	___lldiv@dividend+1,c
  4788  002324  0E00               	movlw	0
  4789  002326  2033               	addwfc	??_ADC_ElecGet+2,w,c
  4790  002328  6E24               	movwf	___lldiv@dividend+2,c
  4791  00232A  0E00               	movlw	0
  4792  00232C  2034               	addwfc	??_ADC_ElecGet+3,w,c
  4793  00232E  6E25               	movwf	___lldiv@dividend+3,c
  4794  002330  C128  F026         	movff	_Parameter+40,___lldiv@divisor
  4795  002334  C129  F027         	movff	_Parameter+41,___lldiv@divisor+1
  4796  002338  6A28               	clrf	___lldiv@divisor+2,c
  4797  00233A  6A29               	clrf	___lldiv@divisor+3,c
  4798  00233C  EC77  F013         	call	___lldiv	;wreg free
  4799  002340                     L8:
  4800  002340  C022  F0DD         	movff	?___lldiv,ADC_ElecGet@elec
  4801  002344  C023  F0DE         	movff	?___lldiv+1,ADC_ElecGet@elec+1
  4802  002348  C024  F0DF         	movff	?___lldiv+2,ADC_ElecGet@elec+2
  4803  00234C  C025  F0E0         	movff	?___lldiv+3,ADC_ElecGet@elec+3
  4804  002350  D000               	goto	l2689
  4805  002352                     l2689:
  4806                           
  4807                           ;ADC.c: 79: return elec;
  4808  002352  C0DD  F02F         	movff	ADC_ElecGet@elec,?_ADC_ElecGet
  4809  002356  C0DE  F030         	movff	ADC_ElecGet@elec+1,?_ADC_ElecGet+1
  4810  00235A  0012               	return	
  4811  00235C  0012               	return		;funcret
  4812  00235E                     __end_of_ADC_ElecGet:
  4813                           	opt stack 0
  4814                           tblptru	equ	0xFF8
  4815                           tblptrh	equ	0xFF7
  4816                           tblptrl	equ	0xFF6
  4817                           tablat	equ	0xFF5
  4818                           prodh	equ	0xFF4
  4819                           prodl	equ	0xFF3
  4820                           intcon	equ	0xFF2
  4821                           postinc0	equ	0xFEE
  4822                           wreg	equ	0xFE8
  4823                           postinc1	equ	0xFE6
  4824                           postdec1	equ	0xFE5
  4825                           fsr1h	equ	0xFE2
  4826                           fsr1l	equ	0xFE1
  4827                           indf2	equ	0xFDF
  4828                           postinc2	equ	0xFDE
  4829                           postdec2	equ	0xFDD
  4830                           fsr2h	equ	0xFDA
  4831                           fsr2l	equ	0xFD9
  4832                           status	equ	0xFD8
  4833                           
  4834 ;; *************** function _Relay_Channel_SW *****************
  4835 ;; Defined at:
  4836 ;;		line 326 in file "nbproject/private/triac.c"
  4837 ;; Parameters:    Size  Location     Type
  4838 ;;  Channel         1    wreg     unsigned char 
  4839 ;;  Flag            1   33[COMRAM] enum E8803
  4840 ;; Auto vars:     Size  Location     Type
  4841 ;;  Channel         1   34[COMRAM] unsigned char 
  4842 ;; Return value:  Size  Location     Type
  4843 ;;		None               void
  4844 ;; Registers used:
  4845 ;;		wreg, status,2, status,0
  4846 ;; Tracked objects:
  4847 ;;		On entry : 0/0
  4848 ;;		On exit  : 0/0
  4849 ;;		Unchanged: 0/0
  4850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4851 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4852 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4854 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4855 ;;Total ram usage:        2 bytes
  4856 ;; Hardware stack levels used:    1
  4857 ;; Hardware stack levels required when called:    3
  4858 ;; This function calls:
  4859 ;;		Nothing
  4860 ;; This function is called by:
  4861 ;;		_Magne_Demag_Dispose
  4862 ;; This function uses a non-reentrant model
  4863 ;;
  4864                           
  4865                           	psect	text16
  4866  002510                     __ptext16:
  4867                           	opt stack 0
  4868  002510                     _Relay_Channel_SW:
  4869                           	opt stack 25
  4870                           
  4871                           ;incstack = 0
  4872                           ;Relay_Channel_SW@Channel stored from wreg
  4873  002510  6E23               	movwf	Relay_Channel_SW@Channel,c
  4874                           
  4875                           ;triac.c: 328: switch(Channel)
  4876  002512  D038               	goto	l2997
  4877  002514                     l2963:
  4878                           
  4879                           ;triac.c: 331: if(Flag)
  4880  002514  5022               	movf	Relay_Channel_SW@Flag,w,c
  4881  002516  B4D8               	btfsc	status,2,c
  4882  002518  D002               	goto	l242
  4883                           
  4884                           ;triac.c: 332: {
  4885                           ;triac.c: 333: {PORTEbits.RE0 = 1;};
  4886  00251A  8084               	bsf	3972,0,c	;volatile
  4887                           
  4888                           ;triac.c: 334: }
  4889  00251C  0012               	return	
  4890  00251E                     l242:
  4891                           
  4892                           ;triac.c: 335: else
  4893                           ;triac.c: 336: {
  4894                           ;triac.c: 337: {PORTEbits.RE0 = 0;};
  4895  00251E  9084               	bcf	3972,0,c	;volatile
  4896                           
  4897                           ;triac.c: 338: }
  4898                           ;triac.c: 339: break;
  4899  002520  0012               	return	
  4900  002522                     l2967:
  4901                           
  4902                           ;triac.c: 342: if(Flag)
  4903  002522  5022               	movf	Relay_Channel_SW@Flag,w,c
  4904  002524  B4D8               	btfsc	status,2,c
  4905  002526  D002               	goto	l246
  4906                           
  4907                           ;triac.c: 343: {
  4908                           ;triac.c: 344: {PORTEbits.RE1 = 1;};
  4909  002528  8284               	bsf	3972,1,c	;volatile
  4910                           
  4911                           ;triac.c: 345: }
  4912  00252A  0012               	return	
  4913  00252C                     l246:
  4914                           
  4915                           ;triac.c: 346: else
  4916                           ;triac.c: 347: {
  4917                           ;triac.c: 348: {PORTEbits.RE1 = 0;};
  4918  00252C  9284               	bcf	3972,1,c	;volatile
  4919                           
  4920                           ;triac.c: 349: }
  4921                           ;triac.c: 350: break;
  4922  00252E  0012               	return	
  4923  002530                     l2971:
  4924                           
  4925                           ;triac.c: 353: if(Flag)
  4926  002530  5022               	movf	Relay_Channel_SW@Flag,w,c
  4927  002532  B4D8               	btfsc	status,2,c
  4928  002534  D002               	goto	l249
  4929                           
  4930                           ;triac.c: 354: {
  4931                           ;triac.c: 355: PORTEbits.RE2 = 1;
  4932  002536  8484               	bsf	3972,2,c	;volatile
  4933                           
  4934                           ;triac.c: 356: }
  4935  002538  0012               	return	
  4936  00253A                     l249:
  4937                           
  4938                           ;triac.c: 357: else
  4939                           ;triac.c: 358: {
  4940                           ;triac.c: 359: PORTEbits.RE2 = 0;
  4941  00253A  9484               	bcf	3972,2,c	;volatile
  4942                           
  4943                           ;triac.c: 360: }
  4944                           ;triac.c: 361: break;
  4945  00253C  0012               	return	
  4946  00253E                     l2975:
  4947                           
  4948                           ;triac.c: 364: if(Flag)
  4949  00253E  5022               	movf	Relay_Channel_SW@Flag,w,c
  4950  002540  B4D8               	btfsc	status,2,c
  4951  002542  D002               	goto	l252
  4952                           
  4953                           ;triac.c: 365: {
  4954                           ;triac.c: 366: PORTEbits.RE3 = 1;
  4955  002544  8684               	bsf	3972,3,c	;volatile
  4956                           
  4957                           ;triac.c: 367: }
  4958  002546  0012               	return	
  4959  002548                     l252:
  4960                           
  4961                           ;triac.c: 368: else
  4962                           ;triac.c: 369: {
  4963                           ;triac.c: 370: PORTEbits.RE3 = 0;
  4964  002548  9684               	bcf	3972,3,c	;volatile
  4965                           
  4966                           ;triac.c: 371: }
  4967                           ;triac.c: 372: break;
  4968  00254A  0012               	return	
  4969  00254C                     l2979:
  4970                           
  4971                           ;triac.c: 375: if(Flag)
  4972  00254C  5022               	movf	Relay_Channel_SW@Flag,w,c
  4973  00254E  B4D8               	btfsc	status,2,c
  4974  002550  D002               	goto	l255
  4975                           
  4976                           ;triac.c: 376: {
  4977                           ;triac.c: 377: PORTEbits.RE4 = 1;
  4978  002552  8884               	bsf	3972,4,c	;volatile
  4979                           
  4980                           ;triac.c: 378: }
  4981  002554  0012               	return	
  4982  002556                     l255:
  4983                           
  4984                           ;triac.c: 379: else
  4985                           ;triac.c: 380: {
  4986                           ;triac.c: 381: PORTEbits.RE4 = 0;
  4987  002556  9884               	bcf	3972,4,c	;volatile
  4988                           
  4989                           ;triac.c: 382: }
  4990                           ;triac.c: 383: break;
  4991  002558  0012               	return	
  4992  00255A                     l2983:
  4993                           
  4994                           ;triac.c: 386: if(Flag)
  4995  00255A  5022               	movf	Relay_Channel_SW@Flag,w,c
  4996  00255C  B4D8               	btfsc	status,2,c
  4997  00255E  D002               	goto	l258
  4998                           
  4999                           ;triac.c: 387: {
  5000                           ;triac.c: 388: PORTEbits.RE5 = 1;
  5001  002560  8A84               	bsf	3972,5,c	;volatile
  5002                           
  5003                           ;triac.c: 389: }
  5004  002562  0012               	return	
  5005  002564                     l258:
  5006                           
  5007                           ;triac.c: 390: else
  5008                           ;triac.c: 391: {
  5009                           ;triac.c: 392: PORTEbits.RE5 = 0;
  5010  002564  9A84               	bcf	3972,5,c	;volatile
  5011                           
  5012                           ;triac.c: 393: }
  5013                           ;triac.c: 394: break;
  5014  002566  0012               	return	
  5015  002568                     l2987:
  5016                           
  5017                           ;triac.c: 397: if(Flag)
  5018  002568  5022               	movf	Relay_Channel_SW@Flag,w,c
  5019  00256A  B4D8               	btfsc	status,2,c
  5020  00256C  D002               	goto	l261
  5021                           
  5022                           ;triac.c: 398: {
  5023                           ;triac.c: 399: PORTEbits.RE6 = 1;
  5024  00256E  8C84               	bsf	3972,6,c	;volatile
  5025                           
  5026                           ;triac.c: 400: }
  5027  002570  0012               	return	
  5028  002572                     l261:
  5029                           
  5030                           ;triac.c: 401: else
  5031                           ;triac.c: 402: {
  5032                           ;triac.c: 403: PORTEbits.RE6 = 0;
  5033  002572  9C84               	bcf	3972,6,c	;volatile
  5034                           
  5035                           ;triac.c: 404: }
  5036                           ;triac.c: 405: break;
  5037  002574  0012               	return	
  5038  002576                     l2991:
  5039                           
  5040                           ;triac.c: 408: if(Flag)
  5041  002576  5022               	movf	Relay_Channel_SW@Flag,w,c
  5042  002578  B4D8               	btfsc	status,2,c
  5043  00257A  D002               	goto	l264
  5044                           
  5045                           ;triac.c: 409: {
  5046                           ;triac.c: 410: PORTEbits.RE7 = 1;
  5047  00257C  8E84               	bsf	3972,7,c	;volatile
  5048                           
  5049                           ;triac.c: 411: }
  5050  00257E  0012               	return	
  5051  002580                     l264:
  5052                           
  5053                           ;triac.c: 412: else
  5054                           ;triac.c: 413: {
  5055                           ;triac.c: 414: PORTEbits.RE7 = 0;
  5056  002580  9E84               	bcf	3972,7,c	;volatile
  5057                           
  5058                           ;triac.c: 929: }
  5059                           
  5060                           ;triac.c: 928: break;
  5061                           
  5062                           ;triac.c: 927: default:
  5063                           
  5064                           ;triac.c: 415: }
  5065                           ;triac.c: 416: break;
  5066  002582  0012               	return	
  5067  002584                     l2997:
  5068  002584  5023               	movf	Relay_Channel_SW@Channel,w,c
  5069                           
  5070                           ; Switch size 1, requested type "space"
  5071                           ; Number of cases is 8, Range of values is 1 to 8
  5072                           ; switch strategies available:
  5073                           ; Name         Instructions Cycles
  5074                           ; simple_byte           25    13 (average)
  5075                           ;	Chosen strategy is simple_byte
  5076  002586  0A01               	xorlw	1	; case 1
  5077  002588  B4D8               	btfsc	status,2,c
  5078  00258A  D7C4               	goto	l2963
  5079  00258C  0A03               	xorlw	3	; case 2
  5080  00258E  B4D8               	btfsc	status,2,c
  5081  002590  D7C8               	goto	l2967
  5082  002592  0A01               	xorlw	1	; case 3
  5083  002594  B4D8               	btfsc	status,2,c
  5084  002596  D7CC               	goto	l2971
  5085  002598  0A07               	xorlw	7	; case 4
  5086  00259A  B4D8               	btfsc	status,2,c
  5087  00259C  D7D0               	goto	l2975
  5088  00259E  0A01               	xorlw	1	; case 5
  5089  0025A0  B4D8               	btfsc	status,2,c
  5090  0025A2  D7D4               	goto	l2979
  5091  0025A4  0A03               	xorlw	3	; case 6
  5092  0025A6  B4D8               	btfsc	status,2,c
  5093  0025A8  D7D8               	goto	l2983
  5094  0025AA  0A01               	xorlw	1	; case 7
  5095  0025AC  B4D8               	btfsc	status,2,c
  5096  0025AE  D7DC               	goto	l2987
  5097  0025B0  0A0F               	xorlw	15	; case 8
  5098  0025B2  A4D8               	btfss	status,2,c
  5099  0025B4  0012               	return	
  5100  0025B6  D7DF               	goto	l2991
  5101  0025B8  0012               	return		;funcret
  5102  0025BA                     __end_of_Relay_Channel_SW:
  5103                           	opt stack 0
  5104                           tblptru	equ	0xFF8
  5105                           tblptrh	equ	0xFF7
  5106                           tblptrl	equ	0xFF6
  5107                           tablat	equ	0xFF5
  5108                           prodh	equ	0xFF4
  5109                           prodl	equ	0xFF3
  5110                           intcon	equ	0xFF2
  5111                           postinc0	equ	0xFEE
  5112                           wreg	equ	0xFE8
  5113                           postinc1	equ	0xFE6
  5114                           postdec1	equ	0xFE5
  5115                           fsr1h	equ	0xFE2
  5116                           fsr1l	equ	0xFE1
  5117                           indf2	equ	0xFDF
  5118                           postinc2	equ	0xFDE
  5119                           postdec2	equ	0xFDD
  5120                           fsr2h	equ	0xFDA
  5121                           fsr2l	equ	0xFD9
  5122                           status	equ	0xFD8
  5123                           
  5124 ;; *************** function _GPIO_Init *****************
  5125 ;; Defined at:
  5126 ;;		line 32 in file "nbproject/private/gpio.c"
  5127 ;; Parameters:    Size  Location     Type
  5128 ;;		None
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;		None
  5131 ;; Return value:  Size  Location     Type
  5132 ;;		None               void
  5133 ;; Registers used:
  5134 ;;		wreg, status,2
  5135 ;; Tracked objects:
  5136 ;;		On entry : 0/0
  5137 ;;		On exit  : 0/0
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5144 ;;Total ram usage:        0 bytes
  5145 ;; Hardware stack levels used:    1
  5146 ;; Hardware stack levels required when called:    3
  5147 ;; This function calls:
  5148 ;;		Nothing
  5149 ;; This function is called by:
  5150 ;;		_main
  5151 ;; This function uses a non-reentrant model
  5152 ;;
  5153                           
  5154                           	psect	text17
  5155  00294E                     __ptext17:
  5156                           	opt stack 0
  5157  00294E                     _GPIO_Init:
  5158                           	opt stack 27
  5159                           
  5160                           ;gpio.c: 41: TRISCbits.TRISC2 = 0;
  5161                           
  5162                           ;incstack = 0
  5163  00294E  9494               	bcf	3988,2,c	;volatile
  5164                           
  5165                           ;gpio.c: 51: TRISDbits.TRISD0 = 0;
  5166  002950  9095               	bcf	3989,0,c	;volatile
  5167                           
  5168                           ;gpio.c: 52: TRISDbits.TRISD1 = 0;
  5169  002952  9295               	bcf	3989,1,c	;volatile
  5170                           
  5171                           ;gpio.c: 53: TRISDbits.TRISD2 = 0;
  5172  002954  9495               	bcf	3989,2,c	;volatile
  5173                           
  5174                           ;gpio.c: 54: TRISDbits.TRISD3 = 0;
  5175  002956  9695               	bcf	3989,3,c	;volatile
  5176                           
  5177                           ;gpio.c: 55: TRISDbits.TRISD4 = 0;
  5178  002958  9895               	bcf	3989,4,c	;volatile
  5179                           
  5180                           ;gpio.c: 56: TRISDbits.TRISD5 = 0;
  5181  00295A  9A95               	bcf	3989,5,c	;volatile
  5182                           
  5183                           ;gpio.c: 57: TRISDbits.TRISD6 = 0;
  5184  00295C  9C95               	bcf	3989,6,c	;volatile
  5185                           
  5186                           ;gpio.c: 58: TRISDbits.TRISD7 = 0;
  5187  00295E  9E95               	bcf	3989,7,c	;volatile
  5188                           
  5189                           ;gpio.c: 68: TRISEbits.TRISE0 = 0;
  5190  002960  9096               	bcf	3990,0,c	;volatile
  5191                           
  5192                           ;gpio.c: 69: TRISEbits.TRISE1 = 0;
  5193  002962  9296               	bcf	3990,1,c	;volatile
  5194                           
  5195                           ;gpio.c: 70: TRISEbits.TRISE2 = 0;
  5196  002964  9496               	bcf	3990,2,c	;volatile
  5197                           
  5198                           ;gpio.c: 71: TRISEbits.TRISE3 = 0;
  5199  002966  9696               	bcf	3990,3,c	;volatile
  5200                           
  5201                           ;gpio.c: 72: TRISEbits.TRISE4 = 0;
  5202  002968  9896               	bcf	3990,4,c	;volatile
  5203                           
  5204                           ;gpio.c: 73: TRISEbits.TRISE5 = 0;
  5205  00296A  9A96               	bcf	3990,5,c	;volatile
  5206                           
  5207                           ;gpio.c: 74: TRISEbits.TRISE6 = 0;
  5208  00296C  9C96               	bcf	3990,6,c	;volatile
  5209                           
  5210                           ;gpio.c: 75: TRISEbits.TRISE7 = 0;
  5211  00296E  9E96               	bcf	3990,7,c	;volatile
  5212                           
  5213                           ;gpio.c: 80: TRISGbits.TRISG0 = 0;
  5214  002970  9098               	bcf	3992,0,c	;volatile
  5215                           
  5216                           ;gpio.c: 86: TRISAbits.TRISA4 = 1;
  5217  002972  8892               	bsf	3986,4,c	;volatile
  5218                           
  5219                           ;gpio.c: 87: TRISAbits.TRISA5 = 1;
  5220  002974  8A92               	bsf	3986,5,c	;volatile
  5221                           
  5222                           ;gpio.c: 88: ANCON0bits.ANSEL4 = 0;
  5223  002976  010F               	movlb	15	; () banked
  5224  002978  9925               	bcf	37,4,b	;volatile
  5225                           
  5226                           ;gpio.c: 96: TRISCbits.TRISC0 = 1;
  5227  00297A  8094               	bsf	3988,0,c	;volatile
  5228                           
  5229                           ;gpio.c: 97: TRISCbits.TRISC1 = 1;
  5230  00297C  8294               	bsf	3988,1,c	;volatile
  5231                           
  5232                           ;gpio.c: 98: TRISCbits.TRISC3 = 1;
  5233  00297E  8694               	bsf	3988,3,c	;volatile
  5234                           
  5235                           ; BSR set to: 15
  5236                           ;gpio.c: 109: PORTA = 0;
  5237  002980  0E00               	movlw	0
  5238  002982  6E80               	movwf	3968,c	;volatile
  5239                           
  5240                           ;gpio.c: 110: PORTB = 0;
  5241  002984  0E00               	movlw	0
  5242  002986  6E81               	movwf	3969,c	;volatile
  5243                           
  5244                           ;gpio.c: 111: PORTC = 0;
  5245  002988  0E00               	movlw	0
  5246  00298A  6E82               	movwf	3970,c	;volatile
  5247                           
  5248                           ;gpio.c: 112: PORTD = 0;
  5249  00298C  0E00               	movlw	0
  5250  00298E  6E83               	movwf	3971,c	;volatile
  5251                           
  5252                           ;gpio.c: 113: PORTE = 0;
  5253  002990  0E00               	movlw	0
  5254  002992  6E84               	movwf	3972,c	;volatile
  5255                           
  5256                           ;gpio.c: 114: PORTF = 0;
  5257  002994  0E00               	movlw	0
  5258  002996  6E85               	movwf	3973,c	;volatile
  5259                           
  5260                           ;gpio.c: 115: PORTG = 0;
  5261  002998  0E00               	movlw	0
  5262  00299A  6E86               	movwf	3974,c	;volatile
  5263                           
  5264                           ; BSR set to: 15
  5265  00299C  0012               	return		;funcret
  5266  00299E                     __end_of_GPIO_Init:
  5267                           	opt stack 0
  5268                           tblptru	equ	0xFF8
  5269                           tblptrh	equ	0xFF7
  5270                           tblptrl	equ	0xFF6
  5271                           tablat	equ	0xFF5
  5272                           prodh	equ	0xFF4
  5273                           prodl	equ	0xFF3
  5274                           intcon	equ	0xFF2
  5275                           postinc0	equ	0xFEE
  5276                           wreg	equ	0xFE8
  5277                           postinc1	equ	0xFE6
  5278                           postdec1	equ	0xFE5
  5279                           fsr1h	equ	0xFE2
  5280                           fsr1l	equ	0xFE1
  5281                           indf2	equ	0xFDF
  5282                           postinc2	equ	0xFDE
  5283                           postdec2	equ	0xFDD
  5284                           fsr2h	equ	0xFDA
  5285                           fsr2l	equ	0xFD9
  5286                           status	equ	0xFD8
  5287                           
  5288 ;; *************** function _ADC_Init *****************
  5289 ;; Defined at:
  5290 ;;		line 32 in file "nbproject/private/ADC.c"
  5291 ;; Parameters:    Size  Location     Type
  5292 ;;		None
  5293 ;; Auto vars:     Size  Location     Type
  5294 ;;  i               4    4[BANK0 ] unsigned long 
  5295 ;;  elec            4    0[BANK0 ] unsigned long 
  5296 ;; Return value:  Size  Location     Type
  5297 ;;		None               void
  5298 ;; Registers used:
  5299 ;;		wreg, status,2, status,0, cstack
  5300 ;; Tracked objects:
  5301 ;;		On entry : 0/0
  5302 ;;		On exit  : 0/0
  5303 ;;		Unchanged: 0/0
  5304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5306 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5307 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5308 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5309 ;;Total ram usage:       12 bytes
  5310 ;; Hardware stack levels used:    1
  5311 ;; Hardware stack levels required when called:    4
  5312 ;; This function calls:
  5313 ;;		_BusyADC
  5314 ;;		_ConvertADC
  5315 ;;		_OpenADC
  5316 ;;		_ReadADC
  5317 ;;		___lldiv
  5318 ;; This function is called by:
  5319 ;;		_main
  5320 ;; This function uses a non-reentrant model
  5321 ;;
  5322                           
  5323                           	psect	text18
  5324  002442                     __ptext18:
  5325                           	opt stack 0
  5326  002442                     _ADC_Init:
  5327                           	opt stack 26
  5328                           
  5329                           ;ADC.c: 34: uint32_t elec = 0,i;
  5330                           
  5331                           ; BSR set to: 15
  5332                           ;incstack = 0
  5333  002442  0E00               	movlw	0
  5334  002444  0100               	movlb	0	; () banked
  5335  002446  6FD9               	movwf	ADC_Init@elec& (0+255),b
  5336  002448  0E00               	movlw	0
  5337  00244A  6FDA               	movwf	(ADC_Init@elec+1)& (0+255),b
  5338  00244C  0E00               	movlw	0
  5339  00244E  6FDB               	movwf	(ADC_Init@elec+2)& (0+255),b
  5340  002450  0E00               	movlw	0
  5341  002452  6FDC               	movwf	(ADC_Init@elec+3)& (0+255),b
  5342                           
  5343                           ; BSR set to: 0
  5344                           ;ADC.c: 35: OpenADC(0b11111111 &
  5345                           ;ADC.c: 36: 0b11110101 &
  5346                           ;ADC.c: 37: 0b10001111,
  5347                           ;ADC.c: 39: 0b10011011,
  5348                           ;ADC.c: 41: 0b00111111 &
  5349                           ;ADC.c: 42: 0b11111111 &
  5350                           ;ADC.c: 43: 0b11110111 &
  5351                           ;ADC.c: 44: 0b11111000
  5352                           ;ADC.c: 45: );
  5353  002454  0E9B               	movlw	155
  5354  002456  6E22               	movwf	OpenADC@config2,c
  5355  002458  0E30               	movlw	48
  5356  00245A  6E23               	movwf	OpenADC@config3,c
  5357  00245C  0E85               	movlw	133
  5358  00245E  ECCF  F014         	call	_OpenADC
  5359                           
  5360                           ;ADC.c: 46: (PIE1bits.ADIE=0);
  5361  002462  9C9D               	bcf	3997,6,c	;volatile
  5362                           
  5363                           ;ADC.c: 47: for(i = 0;i < 5;i++)
  5364  002464  0E00               	movlw	0
  5365  002466  0100               	movlb	0	; () banked
  5366  002468  6FDD               	movwf	ADC_Init@i& (0+255),b
  5367  00246A  0E00               	movlw	0
  5368  00246C  6FDE               	movwf	(ADC_Init@i+1)& (0+255),b
  5369  00246E  0E00               	movlw	0
  5370  002470  6FDF               	movwf	(ADC_Init@i+2)& (0+255),b
  5371  002472  0E00               	movlw	0
  5372  002474  6FE0               	movwf	(ADC_Init@i+3)& (0+255),b
  5373  002476                     l3181:
  5374                           
  5375                           ; BSR set to: 0
  5376  002476  0100               	movlb	0	; () banked
  5377  002478  51E0               	movf	(ADC_Init@i+3)& (0+255),w,b
  5378  00247A  0100               	movlb	0	; () banked
  5379  00247C  11DF               	iorwf	(ADC_Init@i+2)& (0+255),w,b
  5380  00247E  0100               	movlb	0	; () banked
  5381  002480  11DE               	iorwf	(ADC_Init@i+1)& (0+255),w,b
  5382  002482  E12F               	bnz	l3195
  5383  002484  0E05               	movlw	5
  5384  002486  0100               	movlb	0	; () banked
  5385  002488  5DDD               	subwf	ADC_Init@i& (0+255),w,b
  5386  00248A  B0D8               	btfsc	status,0,c
  5387  00248C  D02A               	goto	l3195
  5388  00248E  D001               	goto	l3185
  5389                           
  5390                           ; BSR set to: 0
  5391  002490  D028               	goto	l3195
  5392  002492                     l3185:
  5393                           
  5394                           ; BSR set to: 0
  5395                           ;ADC.c: 48: {
  5396                           ;ADC.c: 49: ConvertADC();
  5397  002492  EC7A  F015         	call	_ConvertADC	;wreg free
  5398                           
  5399                           ;ADC.c: 50: while(BusyADC());
  5400  002496  D000               	goto	l3187
  5401  002498                     l3187:
  5402  002498  EC73  F015         	call	_BusyADC	;wreg free
  5403  00249C  0900               	iorlw	0
  5404  00249E  A4D8               	btfss	status,2,c
  5405  0024A0  D7FB               	goto	l3187
  5406                           
  5407                           ;ADC.c: 51: elec += ReadADC();
  5408  0024A2  EC6B  F015         	call	_ReadADC	;wreg free
  5409  0024A6  C022  F02F         	movff	?_ReadADC,??_ADC_Init
  5410  0024AA  C023  F030         	movff	?_ReadADC+1,??_ADC_Init+1
  5411  0024AE  0E00               	movlw	0
  5412  0024B0  BE30               	btfsc	(??_ADC_Init+1)& (0+255),7,c
  5413  0024B2  0EFF               	movlw	255
  5414  0024B4  6E31               	movwf	(??_ADC_Init+2)& (0+255),c
  5415  0024B6  6E32               	movwf	(??_ADC_Init+3)& (0+255),c
  5416  0024B8  502F               	movf	??_ADC_Init,w,c
  5417  0024BA  0100               	movlb	0	; () banked
  5418  0024BC  27D9               	addwf	ADC_Init@elec& (0+255),f,b
  5419  0024BE  5030               	movf	??_ADC_Init+1,w,c
  5420  0024C0  0100               	movlb	0	; () banked
  5421  0024C2  23DA               	addwfc	(ADC_Init@elec+1)& (0+255),f,b
  5422  0024C4  5031               	movf	??_ADC_Init+2,w,c
  5423  0024C6  0100               	movlb	0	; () banked
  5424  0024C8  23DB               	addwfc	(ADC_Init@elec+2)& (0+255),f,b
  5425  0024CA  5032               	movf	??_ADC_Init+3,w,c
  5426  0024CC  0100               	movlb	0	; () banked
  5427  0024CE  23DC               	addwfc	(ADC_Init@elec+3)& (0+255),f,b
  5428                           
  5429                           ; BSR set to: 0
  5430  0024D0  0E01               	movlw	1
  5431  0024D2  0100               	movlb	0	; () banked
  5432  0024D4  27DD               	addwf	ADC_Init@i& (0+255),f,b
  5433  0024D6  0E00               	movlw	0
  5434  0024D8  23DE               	addwfc	(ADC_Init@i+1)& (0+255),f,b
  5435  0024DA  23DF               	addwfc	(ADC_Init@i+2)& (0+255),f,b
  5436  0024DC  23E0               	addwfc	(ADC_Init@i+3)& (0+255),f,b
  5437  0024DE  D7CB               	goto	l3181
  5438                           
  5439                           ; BSR set to: 0
  5440  0024E0  D000               	goto	l3195
  5441  0024E2                     l3195:
  5442                           
  5443                           ; BSR set to: 0
  5444                           ;ADC.c: 52: }
  5445                           ;ADC.c: 53: Parameter[4].Value = elec/5;
  5446  0024E2  C0D9  F022         	movff	ADC_Init@elec,___lldiv@dividend
  5447  0024E6  C0DA  F023         	movff	ADC_Init@elec+1,___lldiv@dividend+1
  5448  0024EA  C0DB  F024         	movff	ADC_Init@elec+2,___lldiv@dividend+2
  5449  0024EE  C0DC  F025         	movff	ADC_Init@elec+3,___lldiv@dividend+3
  5450  0024F2  0E05               	movlw	5
  5451  0024F4  6E26               	movwf	___lldiv@divisor,c
  5452  0024F6  0E00               	movlw	0
  5453  0024F8  6E27               	movwf	___lldiv@divisor+1,c
  5454  0024FA  0E00               	movlw	0
  5455  0024FC  6E28               	movwf	___lldiv@divisor+2,c
  5456  0024FE  0E00               	movlw	0
  5457  002500  6E29               	movwf	___lldiv@divisor+3,c
  5458  002502  EC77  F013         	call	___lldiv	;wreg free
  5459  002506  C022  F120         	movff	?___lldiv,_Parameter+32
  5460  00250A  C023  F121         	movff	?___lldiv+1,_Parameter+33
  5461  00250E  0012               	return		;funcret
  5462  002510                     __end_of_ADC_Init:
  5463                           	opt stack 0
  5464                           tblptru	equ	0xFF8
  5465                           tblptrh	equ	0xFF7
  5466                           tblptrl	equ	0xFF6
  5467                           tablat	equ	0xFF5
  5468                           prodh	equ	0xFF4
  5469                           prodl	equ	0xFF3
  5470                           intcon	equ	0xFF2
  5471                           postinc0	equ	0xFEE
  5472                           wreg	equ	0xFE8
  5473                           postinc1	equ	0xFE6
  5474                           postdec1	equ	0xFE5
  5475                           fsr1h	equ	0xFE2
  5476                           fsr1l	equ	0xFE1
  5477                           indf2	equ	0xFDF
  5478                           postinc2	equ	0xFDE
  5479                           postdec2	equ	0xFDD
  5480                           fsr2h	equ	0xFDA
  5481                           fsr2l	equ	0xFD9
  5482                           status	equ	0xFD8
  5483                           
  5484 ;; *************** function ___lldiv *****************
  5485 ;; Defined at:
  5486 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v1.34\sources\common\lldiv.c"
  5487 ;; Parameters:    Size  Location     Type
  5488 ;;  dividend        4   33[COMRAM] unsigned long 
  5489 ;;  divisor         4   37[COMRAM] unsigned long 
  5490 ;; Auto vars:     Size  Location     Type
  5491 ;;  quotient        4   41[COMRAM] unsigned long 
  5492 ;;  counter         1   45[COMRAM] unsigned char 
  5493 ;; Return value:  Size  Location     Type
  5494 ;;                  4   33[COMRAM] unsigned long 
  5495 ;; Registers used:
  5496 ;;		wreg, status,2, status,0
  5497 ;; Tracked objects:
  5498 ;;		On entry : 0/0
  5499 ;;		On exit  : 0/0
  5500 ;;		Unchanged: 0/0
  5501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5502 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5503 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5505 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5506 ;;Total ram usage:       13 bytes
  5507 ;; Hardware stack levels used:    1
  5508 ;; Hardware stack levels required when called:    3
  5509 ;; This function calls:
  5510 ;;		Nothing
  5511 ;; This function is called by:
  5512 ;;		_ADC_Init
  5513 ;;		_ADC_ElecGet
  5514 ;; This function uses a non-reentrant model
  5515 ;;
  5516                           
  5517                           	psect	text19
  5518  0026EE                     __ptext19:
  5519                           	opt stack 0
  5520  0026EE                     ___lldiv:
  5521                           	opt stack 23
  5522                           
  5523                           ;incstack = 0
  5524  0026EE  0E00               	movlw	0
  5525  0026F0  6E2A               	movwf	___lldiv@quotient,c
  5526  0026F2  0E00               	movlw	0
  5527  0026F4  6E2B               	movwf	___lldiv@quotient+1,c
  5528  0026F6  0E00               	movlw	0
  5529  0026F8  6E2C               	movwf	___lldiv@quotient+2,c
  5530  0026FA  0E00               	movlw	0
  5531  0026FC  6E2D               	movwf	___lldiv@quotient+3,c
  5532  0026FE  5026               	movf	___lldiv@divisor,w,c
  5533  002700  1027               	iorwf	___lldiv@divisor+1,w,c
  5534  002702  1028               	iorwf	___lldiv@divisor+2,w,c
  5535  002704  1029               	iorwf	___lldiv@divisor+3,w,c
  5536  002706  B4D8               	btfsc	status,2,c
  5537  002708  D02F               	goto	l933
  5538  00270A  0E01               	movlw	1
  5539  00270C  6E2E               	movwf	___lldiv@counter,c
  5540  00270E  D007               	goto	l2651
  5541  002710                     l2649:
  5542  002710  90D8               	bcf	status,0,c
  5543  002712  3626               	rlcf	___lldiv@divisor,f,c
  5544  002714  3627               	rlcf	___lldiv@divisor+1,f,c
  5545  002716  3628               	rlcf	___lldiv@divisor+2,f,c
  5546  002718  3629               	rlcf	___lldiv@divisor+3,f,c
  5547  00271A  2A2E               	incf	___lldiv@counter,f,c
  5548  00271C  D000               	goto	l2651
  5549  00271E                     l2651:
  5550  00271E  BE29               	btfsc	___lldiv@divisor+3,7,c
  5551  002720  D002               	goto	l2653
  5552  002722  D7F6               	goto	l2649
  5553  002724  D000               	goto	l2653
  5554  002726                     l2653:
  5555  002726  90D8               	bcf	status,0,c
  5556  002728  362A               	rlcf	___lldiv@quotient,f,c
  5557  00272A  362B               	rlcf	___lldiv@quotient+1,f,c
  5558  00272C  362C               	rlcf	___lldiv@quotient+2,f,c
  5559  00272E  362D               	rlcf	___lldiv@quotient+3,f,c
  5560  002730  5026               	movf	___lldiv@divisor,w,c
  5561  002732  5C22               	subwf	___lldiv@dividend,w,c
  5562  002734  5027               	movf	___lldiv@divisor+1,w,c
  5563  002736  5823               	subwfb	___lldiv@dividend+1,w,c
  5564  002738  5028               	movf	___lldiv@divisor+2,w,c
  5565  00273A  5824               	subwfb	___lldiv@dividend+2,w,c
  5566  00273C  5029               	movf	___lldiv@divisor+3,w,c
  5567  00273E  5825               	subwfb	___lldiv@dividend+3,w,c
  5568  002740  A0D8               	btfss	status,0,c
  5569  002742  D00A               	goto	l2661
  5570  002744  5026               	movf	___lldiv@divisor,w,c
  5571  002746  5E22               	subwf	___lldiv@dividend,f,c
  5572  002748  5027               	movf	___lldiv@divisor+1,w,c
  5573  00274A  5A23               	subwfb	___lldiv@dividend+1,f,c
  5574  00274C  5028               	movf	___lldiv@divisor+2,w,c
  5575  00274E  5A24               	subwfb	___lldiv@dividend+2,f,c
  5576  002750  5029               	movf	___lldiv@divisor+3,w,c
  5577  002752  5A25               	subwfb	___lldiv@dividend+3,f,c
  5578  002754  802A               	bsf	___lldiv@quotient,0,c
  5579  002756  D000               	goto	l2661
  5580  002758                     l2661:
  5581  002758  90D8               	bcf	status,0,c
  5582  00275A  3229               	rrcf	___lldiv@divisor+3,f,c
  5583  00275C  3228               	rrcf	___lldiv@divisor+2,f,c
  5584  00275E  3227               	rrcf	___lldiv@divisor+1,f,c
  5585  002760  3226               	rrcf	___lldiv@divisor,f,c
  5586  002762  2E2E               	decfsz	___lldiv@counter,f,c
  5587  002764  D7E0               	goto	l2653
  5588  002766  D000               	goto	l933
  5589  002768                     l933:
  5590  002768  C02A  F022         	movff	___lldiv@quotient,?___lldiv
  5591  00276C  C02B  F023         	movff	___lldiv@quotient+1,?___lldiv+1
  5592  002770  C02C  F024         	movff	___lldiv@quotient+2,?___lldiv+2
  5593  002774  C02D  F025         	movff	___lldiv@quotient+3,?___lldiv+3
  5594  002778  0012               	return		;funcret
  5595  00277A                     __end_of___lldiv:
  5596                           	opt stack 0
  5597                           tblptru	equ	0xFF8
  5598                           tblptrh	equ	0xFF7
  5599                           tblptrl	equ	0xFF6
  5600                           tablat	equ	0xFF5
  5601                           prodh	equ	0xFF4
  5602                           prodl	equ	0xFF3
  5603                           intcon	equ	0xFF2
  5604                           postinc0	equ	0xFEE
  5605                           wreg	equ	0xFE8
  5606                           postinc1	equ	0xFE6
  5607                           postdec1	equ	0xFE5
  5608                           fsr1h	equ	0xFE2
  5609                           fsr1l	equ	0xFE1
  5610                           indf2	equ	0xFDF
  5611                           postinc2	equ	0xFDE
  5612                           postdec2	equ	0xFDD
  5613                           fsr2h	equ	0xFDA
  5614                           fsr2l	equ	0xFD9
  5615                           status	equ	0xFD8
  5616                           
  5617 ;; *************** function _ReadADC *****************
  5618 ;; Defined at:
  5619 ;;		line 24 in file "D:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  5620 ;; Parameters:    Size  Location     Type
  5621 ;;		None
  5622 ;; Auto vars:     Size  Location     Type
  5623 ;;		None
  5624 ;; Return value:  Size  Location     Type
  5625 ;;                  2   33[COMRAM] int 
  5626 ;; Registers used:
  5627 ;;		wreg, status,2
  5628 ;; Tracked objects:
  5629 ;;		On entry : 0/0
  5630 ;;		On exit  : 0/0
  5631 ;;		Unchanged: 0/0
  5632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5633 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5635 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5636 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5637 ;;Total ram usage:        4 bytes
  5638 ;; Hardware stack levels used:    1
  5639 ;; Hardware stack levels required when called:    3
  5640 ;; This function calls:
  5641 ;;		Nothing
  5642 ;; This function is called by:
  5643 ;;		_ADC_Init
  5644 ;;		_ADC_ElecGet
  5645 ;; This function uses a non-reentrant model
  5646 ;;
  5647                           
  5648                           	psect	text20
  5649  002AD6                     __ptext20:
  5650                           	opt stack 0
  5651  002AD6                     _ReadADC:
  5652                           	opt stack 23
  5653                           
  5654                           ;incstack = 0
  5655  002AD6  50C4               	movf	4036,w,c	;volatile
  5656  002AD8  6E24               	movwf	??_ReadADC& (0+255),c
  5657  002ADA  50C3               	movf	4035,w,c	;volatile
  5658  002ADC  6E22               	movwf	?_ReadADC,c
  5659  002ADE  C024  F023         	movff	??_ReadADC,?_ReadADC+1
  5660  002AE2  0012               	return	
  5661  002AE4  0012               	return		;funcret
  5662  002AE6                     __end_of_ReadADC:
  5663                           	opt stack 0
  5664                           tblptru	equ	0xFF8
  5665                           tblptrh	equ	0xFF7
  5666                           tblptrl	equ	0xFF6
  5667                           tablat	equ	0xFF5
  5668                           prodh	equ	0xFF4
  5669                           prodl	equ	0xFF3
  5670                           intcon	equ	0xFF2
  5671                           postinc0	equ	0xFEE
  5672                           wreg	equ	0xFE8
  5673                           postinc1	equ	0xFE6
  5674                           postdec1	equ	0xFE5
  5675                           fsr1h	equ	0xFE2
  5676                           fsr1l	equ	0xFE1
  5677                           indf2	equ	0xFDF
  5678                           postinc2	equ	0xFDE
  5679                           postdec2	equ	0xFDD
  5680                           fsr2h	equ	0xFDA
  5681                           fsr2l	equ	0xFD9
  5682                           status	equ	0xFD8
  5683                           
  5684 ;; *************** function _OpenADC *****************
  5685 ;; Defined at:
  5686 ;;		line 305 in file "D:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  5687 ;; Parameters:    Size  Location     Type
  5688 ;;  config          1    wreg     unsigned char 
  5689 ;;  config2         1   33[COMRAM] unsigned char 
  5690 ;;  config3         1   34[COMRAM] unsigned char 
  5691 ;; Auto vars:     Size  Location     Type
  5692 ;;  config          1   37[COMRAM] unsigned char 
  5693 ;; Return value:  Size  Location     Type
  5694 ;;		None               void
  5695 ;; Registers used:
  5696 ;;		wreg, status,2, status,0
  5697 ;; Tracked objects:
  5698 ;;		On entry : 0/0
  5699 ;;		On exit  : 0/0
  5700 ;;		Unchanged: 0/0
  5701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5702 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5703 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5704 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5705 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5706 ;;Total ram usage:        5 bytes
  5707 ;; Hardware stack levels used:    1
  5708 ;; Hardware stack levels required when called:    3
  5709 ;; This function calls:
  5710 ;;		Nothing
  5711 ;; This function is called by:
  5712 ;;		_ADC_Init
  5713 ;; This function uses a non-reentrant model
  5714 ;;
  5715                           
  5716                           	psect	text21
  5717  00299E                     __ptext21:
  5718                           	opt stack 0
  5719  00299E                     _OpenADC:
  5720                           	opt stack 26
  5721                           
  5722                           ;incstack = 0
  5723                           ;OpenADC@config stored from wreg
  5724  00299E  6E26               	movwf	OpenADC@config,c
  5725  0029A0  0E00               	movlw	0
  5726  0029A2  6EC2               	movwf	4034,c	;volatile
  5727  0029A4  0E00               	movlw	0
  5728  0029A6  6EC1               	movwf	4033,c	;volatile
  5729  0029A8  0E00               	movlw	0
  5730  0029AA  6EC0               	movwf	4032,c	;volatile
  5731  0029AC  5022               	movf	OpenADC@config2,w,c
  5732  0029AE  0B7C               	andlw	124
  5733  0029B0  6EC2               	movwf	4034,c	;volatile
  5734  0029B2  C023  FFC1         	movff	OpenADC@config3,4033	;volatile
  5735  0029B6  C026  F024         	movff	OpenADC@config,??_OpenADC
  5736  0029BA  90D8               	bcf	status,0,c
  5737  0029BC  3624               	rlcf	??_OpenADC,f,c
  5738  0029BE  90D8               	bcf	status,0,c
  5739  0029C0  3624               	rlcf	??_OpenADC,f,c
  5740  0029C2  0E38               	movlw	56
  5741  0029C4  1624               	andwf	??_OpenADC,f,c
  5742  0029C6  C026  F025         	movff	OpenADC@config,??_OpenADC+1
  5743  0029CA  3A25               	swapf	??_OpenADC+1,f,c
  5744  0029CC  0E0F               	movlw	15
  5745  0029CE  1625               	andwf	??_OpenADC+1,f,c
  5746  0029D0  0E07               	movlw	7
  5747  0029D2  1625               	andwf	??_OpenADC+1,f,c
  5748  0029D4  5026               	movf	OpenADC@config,w,c
  5749  0029D6  0B80               	andlw	128
  5750  0029D8  1025               	iorwf	??_OpenADC+1,w,c
  5751  0029DA  1024               	iorwf	??_OpenADC,w,c
  5752  0029DC  6EC0               	movwf	4032,c	;volatile
  5753  0029DE  AE22               	btfss	OpenADC@config2,7,c
  5754  0029E0  D003               	goto	l445
  5755  0029E2  9C9E               	bcf	3998,6,c	;volatile
  5756  0029E4  8C9D               	bsf	3997,6,c	;volatile
  5757  0029E6  8CF2               	bsf	intcon,6,c	;volatile
  5758  0029E8                     l445:
  5759  0029E8  80C2               	bsf	4034,0,c	;volatile
  5760  0029EA  0012               	return		;funcret
  5761  0029EC                     __end_of_OpenADC:
  5762                           	opt stack 0
  5763                           tblptru	equ	0xFF8
  5764                           tblptrh	equ	0xFF7
  5765                           tblptrl	equ	0xFF6
  5766                           tablat	equ	0xFF5
  5767                           prodh	equ	0xFF4
  5768                           prodl	equ	0xFF3
  5769                           intcon	equ	0xFF2
  5770                           postinc0	equ	0xFEE
  5771                           wreg	equ	0xFE8
  5772                           postinc1	equ	0xFE6
  5773                           postdec1	equ	0xFE5
  5774                           fsr1h	equ	0xFE2
  5775                           fsr1l	equ	0xFE1
  5776                           indf2	equ	0xFDF
  5777                           postinc2	equ	0xFDE
  5778                           postdec2	equ	0xFDD
  5779                           fsr2h	equ	0xFDA
  5780                           fsr2l	equ	0xFD9
  5781                           status	equ	0xFD8
  5782                           
  5783 ;; *************** function _ConvertADC *****************
  5784 ;; Defined at:
  5785 ;;		line 22 in file "D:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  5786 ;; Parameters:    Size  Location     Type
  5787 ;;		None
  5788 ;; Auto vars:     Size  Location     Type
  5789 ;;		None
  5790 ;; Return value:  Size  Location     Type
  5791 ;;		None               void
  5792 ;; Registers used:
  5793 ;;		None
  5794 ;; Tracked objects:
  5795 ;;		On entry : 0/0
  5796 ;;		On exit  : 0/0
  5797 ;;		Unchanged: 0/0
  5798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5803 ;;Total ram usage:        0 bytes
  5804 ;; Hardware stack levels used:    1
  5805 ;; Hardware stack levels required when called:    3
  5806 ;; This function calls:
  5807 ;;		Nothing
  5808 ;; This function is called by:
  5809 ;;		_ADC_Init
  5810 ;;		_ADC_ElecGet
  5811 ;; This function uses a non-reentrant model
  5812 ;;
  5813                           
  5814                           	psect	text22
  5815  002AF4                     __ptext22:
  5816                           	opt stack 0
  5817  002AF4                     _ConvertADC:
  5818                           	opt stack 23
  5819                           
  5820                           ;incstack = 0
  5821  002AF4  82C2               	bsf	4034,1,c	;volatile
  5822  002AF6  0012               	return		;funcret
  5823  002AF8                     __end_of_ConvertADC:
  5824                           	opt stack 0
  5825                           tblptru	equ	0xFF8
  5826                           tblptrh	equ	0xFF7
  5827                           tblptrl	equ	0xFF6
  5828                           tablat	equ	0xFF5
  5829                           prodh	equ	0xFF4
  5830                           prodl	equ	0xFF3
  5831                           intcon	equ	0xFF2
  5832                           postinc0	equ	0xFEE
  5833                           wreg	equ	0xFE8
  5834                           postinc1	equ	0xFE6
  5835                           postdec1	equ	0xFE5
  5836                           fsr1h	equ	0xFE2
  5837                           fsr1l	equ	0xFE1
  5838                           indf2	equ	0xFDF
  5839                           postinc2	equ	0xFDE
  5840                           postdec2	equ	0xFDD
  5841                           fsr2h	equ	0xFDA
  5842                           fsr2l	equ	0xFD9
  5843                           status	equ	0xFD8
  5844                           
  5845 ;; *************** function _BusyADC *****************
  5846 ;; Defined at:
  5847 ;;		line 26 in file "D:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  5848 ;; Parameters:    Size  Location     Type
  5849 ;;		None
  5850 ;; Auto vars:     Size  Location     Type
  5851 ;;		None
  5852 ;; Return value:  Size  Location     Type
  5853 ;;                  1    wreg      unsigned char 
  5854 ;; Registers used:
  5855 ;;		wreg
  5856 ;; Tracked objects:
  5857 ;;		On entry : 0/0
  5858 ;;		On exit  : 0/0
  5859 ;;		Unchanged: 0/0
  5860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5865 ;;Total ram usage:        0 bytes
  5866 ;; Hardware stack levels used:    1
  5867 ;; Hardware stack levels required when called:    3
  5868 ;; This function calls:
  5869 ;;		Nothing
  5870 ;; This function is called by:
  5871 ;;		_ADC_Init
  5872 ;;		_ADC_ElecGet
  5873 ;; This function uses a non-reentrant model
  5874 ;;
  5875                           
  5876                           	psect	text23
  5877  002AE6                     __ptext23:
  5878                           	opt stack 0
  5879  002AE6                     _BusyADC:
  5880                           	opt stack 23
  5881                           
  5882                           ;incstack = 0
  5883  002AE6  A2C2               	btfss	4034,1,c	;volatile
  5884  002AE8  D002               	goto	u3600
  5885  002AEA  0E01               	movlw	1
  5886  002AEC  0012               	return	
  5887  002AEE                     u3600:
  5888  002AEE  0E00               	movlw	0
  5889  002AF0  0012               	return	
  5890  002AF2  0012               	return		;funcret
  5891  002AF4                     __end_of_BusyADC:
  5892                           	opt stack 0
  5893                           tblptru	equ	0xFF8
  5894                           tblptrh	equ	0xFF7
  5895                           tblptrl	equ	0xFF6
  5896                           tablat	equ	0xFF5
  5897                           prodh	equ	0xFF4
  5898                           prodl	equ	0xFF3
  5899                           intcon	equ	0xFF2
  5900                           postinc0	equ	0xFEE
  5901                           wreg	equ	0xFE8
  5902                           postinc1	equ	0xFE6
  5903                           postdec1	equ	0xFE5
  5904                           fsr1h	equ	0xFE2
  5905                           fsr1l	equ	0xFE1
  5906                           indf2	equ	0xFDF
  5907                           postinc2	equ	0xFDE
  5908                           postdec2	equ	0xFDD
  5909                           fsr2h	equ	0xFDA
  5910                           fsr2l	equ	0xFD9
  5911                           status	equ	0xFD8
  5912                           
  5913 ;; *************** function _ISR *****************
  5914 ;; Defined at:
  5915 ;;		line 33 in file "nbproject/private/pic18f67xx_it.c"
  5916 ;; Parameters:    Size  Location     Type
  5917 ;;		None
  5918 ;; Auto vars:     Size  Location     Type
  5919 ;;		None
  5920 ;; Return value:  Size  Location     Type
  5921 ;;		None               void
  5922 ;; Registers used:
  5923 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5924 ;; Tracked objects:
  5925 ;;		On entry : 0/0
  5926 ;;		On exit  : 0/0
  5927 ;;		Unchanged: 0/0
  5928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5931 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5932 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5933 ;;Total ram usage:       14 bytes
  5934 ;; Hardware stack levels used:    1
  5935 ;; Hardware stack levels required when called:    2
  5936 ;; This function calls:
  5937 ;;		_Key_State_Sweep
  5938 ;;		i2_WriteTimer0
  5939 ;; This function is called by:
  5940 ;;		Interrupt level 2
  5941 ;; This function uses a non-reentrant model
  5942 ;;
  5943                           
  5944                           	psect	intcode
  5945  000008                     __pintcode:
  5946                           	opt stack 0
  5947  000008                     _ISR:
  5948                           	opt stack 23
  5949                           
  5950                           ;incstack = 0
  5951  000008  CFFA F014          	movff	pclath,??_ISR
  5952  00000C  CFFB F015          	movff	pclatu,??_ISR+1
  5953  000010  CFE9 F016          	movff	fsr0l,??_ISR+2
  5954  000014  CFEA F017          	movff	fsr0h,??_ISR+3
  5955  000018  CFE1 F018          	movff	fsr1l,??_ISR+4
  5956  00001C  CFE2 F019          	movff	fsr1h,??_ISR+5
  5957  000020  CFD9 F01A          	movff	fsr2l,??_ISR+6
  5958  000024  CFDA F01B          	movff	fsr2h,??_ISR+7
  5959  000028  CFF3 F01C          	movff	prodl,??_ISR+8
  5960  00002C  CFF4 F01D          	movff	prodh,??_ISR+9
  5961  000030  CFF6 F01E          	movff	tblptrl,??_ISR+10
  5962  000034  CFF7 F01F          	movff	tblptrh,??_ISR+11
  5963  000038  CFF8 F020          	movff	tblptru,??_ISR+12
  5964  00003C  CFF5 F021          	movff	tablat,??_ISR+13
  5965                           
  5966                           ;pic18f67xx_it.c: 35: if(TMR0IF == 1)
  5967  000040  A4F2               	btfss	intcon,2,c	;volatile
  5968  000042  D016               	goto	i2l400
  5969                           
  5970                           ;pic18f67xx_it.c: 36: {
  5971                           ;pic18f67xx_it.c: 37: TMR0IF = 0;
  5972  000044  94F2               	bcf	intcon,2,c	;volatile
  5973                           
  5974                           ;pic18f67xx_it.c: 38: WriteTimer0(65536-50000);
  5975  000046  0E3C               	movlw	60
  5976  000048  6E02               	movwf	i2WriteTimer0@timer0+1,c
  5977  00004A  0EB0               	movlw	176
  5978  00004C  6E01               	movwf	i2WriteTimer0@timer0,c
  5979  00004E  EC62  F015         	call	i2_WriteTimer0	;wreg free
  5980                           
  5981                           ;pic18f67xx_it.c: 39: if(Spacing_Count)
  5982  000052  5035               	movf	_Spacing_Count,w,c
  5983  000054  1036               	iorwf	_Spacing_Count+1,w,c
  5984  000056  B4D8               	btfsc	status,2,c
  5985  000058  D004               	goto	i2l2613
  5986                           
  5987                           ;pic18f67xx_it.c: 40: Spacing_Count--;
  5988  00005A  0635               	decf	_Spacing_Count,f,c
  5989  00005C  A0D8               	btfss	status,0,c
  5990  00005E  0636               	decf	_Spacing_Count+1,f,c
  5991  000060  D000               	goto	i2l2613
  5992  000062                     i2l2613:
  5993                           
  5994                           ;pic18f67xx_it.c: 41: Key_State_Sweep(&Key_StateMachine_Local);
  5995  000062  0E37               	movlw	low _Key_StateMachine_Local
  5996  000064  6E08               	movwf	Key_State_Sweep@Key_State,c
  5997  000066  0E00               	movlw	high _Key_StateMachine_Local
  5998  000068  6E09               	movwf	Key_State_Sweep@Key_State+1,c
  5999  00006A  ECED  F00B         	call	_Key_State_Sweep	;wreg free
  6000  00006E  D000               	goto	i2l400
  6001  000070                     i2l400:
  6002  000070  C021  FFF5         	movff	??_ISR+13,tablat
  6003  000074  C020  FFF8         	movff	??_ISR+12,tblptru
  6004  000078  C01F  FFF7         	movff	??_ISR+11,tblptrh
  6005  00007C  C01E  FFF6         	movff	??_ISR+10,tblptrl
  6006  000080  C01D  FFF4         	movff	??_ISR+9,prodh
  6007  000084  C01C  FFF3         	movff	??_ISR+8,prodl
  6008  000088  C01B  FFDA         	movff	??_ISR+7,fsr2h
  6009  00008C  C01A  FFD9         	movff	??_ISR+6,fsr2l
  6010  000090  C019  FFE2         	movff	??_ISR+5,fsr1h
  6011  000094  C018  FFE1         	movff	??_ISR+4,fsr1l
  6012  000098  C017  FFEA         	movff	??_ISR+3,fsr0h
  6013  00009C  C016  FFE9         	movff	??_ISR+2,fsr0l
  6014  0000A0  C015  FFFB         	movff	??_ISR+1,pclatu
  6015  0000A4  C014  FFFA         	movff	??_ISR,pclath
  6016  0000A8  0011               	retfie		f
  6017  0000AA                     __end_of_ISR:
  6018                           	opt stack 0
  6019                           pclatu	equ	0xFFB
  6020                           pclath	equ	0xFFA
  6021                           tblptru	equ	0xFF8
  6022                           tblptrh	equ	0xFF7
  6023                           tblptrl	equ	0xFF6
  6024                           tablat	equ	0xFF5
  6025                           prodh	equ	0xFF4
  6026                           prodl	equ	0xFF3
  6027                           intcon	equ	0xFF2
  6028                           postinc0	equ	0xFEE
  6029                           fsr0h	equ	0xFEA
  6030                           fsr0l	equ	0xFE9
  6031                           wreg	equ	0xFE8
  6032                           postinc1	equ	0xFE6
  6033                           postdec1	equ	0xFE5
  6034                           fsr1h	equ	0xFE2
  6035                           fsr1l	equ	0xFE1
  6036                           indf2	equ	0xFDF
  6037                           postinc2	equ	0xFDE
  6038                           postdec2	equ	0xFDD
  6039                           fsr2h	equ	0xFDA
  6040                           fsr2l	equ	0xFD9
  6041                           status	equ	0xFD8
  6042                           
  6043 ;; *************** function i2_WriteTimer0 *****************
  6044 ;; Defined at:
  6045 ;;		line 16 in file "D:\Program Files\Microchip\xc8\v1.34\sources\pic18\plib\Timers\t0write.c"
  6046 ;; Parameters:    Size  Location     Type
  6047 ;;  timer0          2    0[COMRAM] unsigned int 
  6048 ;; Auto vars:     Size  Location     Type
  6049 ;;  WriteTimer0     2    2[COMRAM] struct Timers
  6050 ;; Return value:  Size  Location     Type
  6051 ;;		None               void
  6052 ;; Registers used:
  6053 ;;		None
  6054 ;; Tracked objects:
  6055 ;;		On entry : 0/0
  6056 ;;		On exit  : 0/0
  6057 ;;		Unchanged: 0/0
  6058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6059 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6060 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6062 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6063 ;;Total ram usage:        4 bytes
  6064 ;; Hardware stack levels used:    1
  6065 ;; This function calls:
  6066 ;;		Nothing
  6067 ;; This function is called by:
  6068 ;;		_ISR
  6069 ;; This function uses a non-reentrant model
  6070 ;;
  6071                           
  6072                           	psect	text25
  6073  002AC4                     __ptext25:
  6074                           	opt stack 0
  6075  002AC4                     i2_WriteTimer0:
  6076                           	opt stack 24
  6077                           
  6078                           ;incstack = 0
  6079  002AC4  C001  F003         	movff	i2WriteTimer0@timer0,i2WriteTimer0@timer
  6080  002AC8  C002  F004         	movff	i2WriteTimer0@timer0+1,i2WriteTimer0@timer+1
  6081  002ACC  C004  FFD7         	movff	i2WriteTimer0@timer+1,4055	;volatile
  6082  002AD0  C003  FFD6         	movff	i2WriteTimer0@timer,4054	;volatile
  6083  002AD4  0012               	return		;funcret
  6084  002AD6                     __end_ofi2_WriteTimer0:
  6085                           	opt stack 0
  6086                           pclatu	equ	0xFFB
  6087                           pclath	equ	0xFFA
  6088                           tblptru	equ	0xFF8
  6089                           tblptrh	equ	0xFF7
  6090                           tblptrl	equ	0xFF6
  6091                           tablat	equ	0xFF5
  6092                           prodh	equ	0xFF4
  6093                           prodl	equ	0xFF3
  6094                           intcon	equ	0xFF2
  6095                           postinc0	equ	0xFEE
  6096                           fsr0h	equ	0xFEA
  6097                           fsr0l	equ	0xFE9
  6098                           wreg	equ	0xFE8
  6099                           postinc1	equ	0xFE6
  6100                           postdec1	equ	0xFE5
  6101                           fsr1h	equ	0xFE2
  6102                           fsr1l	equ	0xFE1
  6103                           indf2	equ	0xFDF
  6104                           postinc2	equ	0xFDE
  6105                           postdec2	equ	0xFDD
  6106                           fsr2h	equ	0xFDA
  6107                           fsr2l	equ	0xFD9
  6108                           status	equ	0xFD8
  6109                           
  6110 ;; *************** function _Key_State_Sweep *****************
  6111 ;; Defined at:
  6112 ;;		line 33 in file "nbproject/private/KeyState.c"
  6113 ;; Parameters:    Size  Location     Type
  6114 ;;  Key_State       2    7[COMRAM] PTR volatile struct .
  6115 ;;		 -> Key_StateMachine_Local(8), 
  6116 ;; Auto vars:     Size  Location     Type
  6117 ;;		None
  6118 ;; Return value:  Size  Location     Type
  6119 ;;		None               void
  6120 ;; Registers used:
  6121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6122 ;; Tracked objects:
  6123 ;;		On entry : 0/0
  6124 ;;		On exit  : 0/0
  6125 ;;		Unchanged: 0/0
  6126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6127 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6129 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6130 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6131 ;;Total ram usage:       12 bytes
  6132 ;; Hardware stack levels used:    1
  6133 ;; Hardware stack levels required when called:    1
  6134 ;; This function calls:
  6135 ;;		_Key_Num_Get
  6136 ;; This function is called by:
  6137 ;;		_ISR
  6138 ;; This function uses a non-reentrant model
  6139 ;;
  6140                           
  6141                           	psect	text26
  6142  0017DA                     __ptext26:
  6143                           	opt stack 0
  6144  0017DA                     _Key_State_Sweep:
  6145                           	opt stack 23
  6146                           
  6147                           ;KeyState.c: 35: Key_State->KeyCode_Pre = ((uint16_t)PORTCbits.RC0<<0)
  6148                           ;KeyState.c: 36: | ((uint16_t)PORTCbits.RC1<<1)
  6149                           ;KeyState.c: 37: | ((uint16_t)PORTAbits.RA4<<2)
  6150                           ;KeyState.c: 38: | ((uint16_t)PORTAbits.RA5<<3)|0xfff0;
  6151                           
  6152                           ;incstack = 0
  6153  0017DA  0EF0               	movlw	240
  6154  0017DC  6E0A               	movwf	??_Key_State_Sweep& (0+255),c
  6155  0017DE  0EFF               	movlw	255
  6156  0017E0  6E0B               	movwf	(??_Key_State_Sweep+1)& (0+255),c
  6157  0017E2  AA80               	btfss	3968,5,c	;volatile
  6158  0017E4  D002               	goto	i2u328_40
  6159  0017E6  0E01               	movlw	1
  6160  0017E8  D001               	goto	i2u329_40
  6161  0017EA                     i2u328_40:
  6162  0017EA  0E00               	movlw	0
  6163  0017EC                     i2u329_40:
  6164  0017EC  6E0C               	movwf	(??_Key_State_Sweep+2)& (0+255),c
  6165  0017EE  6A0D               	clrf	(??_Key_State_Sweep+3)& (0+255),c
  6166  0017F0  90D8               	bcf	status,0,c
  6167  0017F2  360C               	rlcf	??_Key_State_Sweep+2,f,c
  6168  0017F4  360D               	rlcf	??_Key_State_Sweep+3,f,c
  6169  0017F6  90D8               	bcf	status,0,c
  6170  0017F8  360C               	rlcf	??_Key_State_Sweep+2,f,c
  6171  0017FA  360D               	rlcf	??_Key_State_Sweep+3,f,c
  6172  0017FC  90D8               	bcf	status,0,c
  6173  0017FE  360C               	rlcf	??_Key_State_Sweep+2,f,c
  6174  001800  360D               	rlcf	??_Key_State_Sweep+3,f,c
  6175  001802  A880               	btfss	3968,4,c	;volatile
  6176  001804  D002               	goto	i2u330_40
  6177  001806  0E01               	movlw	1
  6178  001808  D001               	goto	i2u331_40
  6179  00180A                     i2u330_40:
  6180  00180A  0E00               	movlw	0
  6181  00180C                     i2u331_40:
  6182  00180C  6E0E               	movwf	(??_Key_State_Sweep+4)& (0+255),c
  6183  00180E  6A0F               	clrf	(??_Key_State_Sweep+5)& (0+255),c
  6184  001810  90D8               	bcf	status,0,c
  6185  001812  360E               	rlcf	??_Key_State_Sweep+4,f,c
  6186  001814  360F               	rlcf	??_Key_State_Sweep+5,f,c
  6187  001816  90D8               	bcf	status,0,c
  6188  001818  360E               	rlcf	??_Key_State_Sweep+4,f,c
  6189  00181A  360F               	rlcf	??_Key_State_Sweep+5,f,c
  6190  00181C  A282               	btfss	3970,1,c	;volatile
  6191  00181E  D002               	goto	i2u332_40
  6192  001820  0E01               	movlw	1
  6193  001822  D001               	goto	i2u333_40
  6194  001824                     i2u332_40:
  6195  001824  0E00               	movlw	0
  6196  001826                     i2u333_40:
  6197  001826  6E10               	movwf	(??_Key_State_Sweep+6)& (0+255),c
  6198  001828  6A11               	clrf	(??_Key_State_Sweep+7)& (0+255),c
  6199  00182A  90D8               	bcf	status,0,c
  6200  00182C  3610               	rlcf	??_Key_State_Sweep+6,f,c
  6201  00182E  3611               	rlcf	??_Key_State_Sweep+7,f,c
  6202  001830  A082               	btfss	3970,0,c	;volatile
  6203  001832  D002               	goto	i2u334_40
  6204  001834  0E01               	movlw	1
  6205  001836  D001               	goto	i2u335_40
  6206  001838                     i2u334_40:
  6207  001838  0E00               	movlw	0
  6208  00183A                     i2u335_40:
  6209  00183A  6E12               	movwf	(??_Key_State_Sweep+8)& (0+255),c
  6210  00183C  6A13               	clrf	(??_Key_State_Sweep+9)& (0+255),c
  6211  00183E  5010               	movf	??_Key_State_Sweep+6,w,c
  6212  001840  1212               	iorwf	??_Key_State_Sweep+8,f,c
  6213  001842  5011               	movf	??_Key_State_Sweep+7,w,c
  6214  001844  1213               	iorwf	??_Key_State_Sweep+9,f,c
  6215  001846  500E               	movf	??_Key_State_Sweep+4,w,c
  6216  001848  1212               	iorwf	??_Key_State_Sweep+8,f,c
  6217  00184A  500F               	movf	??_Key_State_Sweep+5,w,c
  6218  00184C  1213               	iorwf	??_Key_State_Sweep+9,f,c
  6219  00184E  500C               	movf	??_Key_State_Sweep+2,w,c
  6220  001850  1212               	iorwf	??_Key_State_Sweep+8,f,c
  6221  001852  500D               	movf	??_Key_State_Sweep+3,w,c
  6222  001854  1213               	iorwf	??_Key_State_Sweep+9,f,c
  6223  001856  500A               	movf	??_Key_State_Sweep,w,c
  6224  001858  1212               	iorwf	??_Key_State_Sweep+8,f,c
  6225  00185A  500B               	movf	??_Key_State_Sweep+1,w,c
  6226  00185C  1213               	iorwf	??_Key_State_Sweep+9,f,c
  6227  00185E  EE20 F002          	lfsr	2,2
  6228  001862  5008               	movf	Key_State_Sweep@Key_State,w,c
  6229  001864  26D9               	addwf	fsr2l,f,c
  6230  001866  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6231  001868  22DA               	addwfc	fsr2h,f,c
  6232  00186A  C012  FFDE         	movff	??_Key_State_Sweep+8,postinc2
  6233  00186E  C013  FFDD         	movff	??_Key_State_Sweep+9,postdec2
  6234                           
  6235                           ;KeyState.c: 39: switch(Key_State->State_Flag)
  6236  001872  D195               	goto	i2l2593
  6237  001874                     i2l2521:
  6238                           
  6239                           ;KeyState.c: 42: if(Key_State->KeyCode_Pre != 0xffff)
  6240  001874  EE20 F002          	lfsr	2,2
  6241  001878  5008               	movf	Key_State_Sweep@Key_State,w,c
  6242  00187A  26D9               	addwf	fsr2l,f,c
  6243  00187C  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6244  00187E  22DA               	addwfc	fsr2h,f,c
  6245  001880  28DE               	incf	postinc2,w,c
  6246  001882  E103               	bnz	i2u336_40
  6247  001884  28DE               	incf	postinc2,w,c
  6248  001886  B4D8               	btfsc	status,2,c
  6249  001888  D061               	goto	i2l2531
  6250  00188A                     i2u336_40:
  6251                           
  6252                           ;KeyState.c: 43: {
  6253                           ;KeyState.c: 44: Key_State->State_Flag = 1;
  6254  00188A  C008  FFD9         	movff	Key_State_Sweep@Key_State,fsr2l
  6255  00188E  C009  FFDA         	movff	Key_State_Sweep@Key_State+1,fsr2h
  6256  001892  0E01               	movlw	1
  6257  001894  6EDF               	movwf	indf2,c
  6258                           
  6259                           ;KeyState.c: 45: Key_State->KeyCode_Bef = ((uint16_t)PORTCbits.RC0<<0)
  6260                           ;KeyState.c: 46: | ((uint16_t)PORTCbits.RC1<<1)
  6261                           ;KeyState.c: 47: | ((uint16_t)PORTAbits.RA4<<2)
  6262                           ;KeyState.c: 48: | ((uint16_t)PORTAbits.RA5<<3)|0xfff0;
  6263  001896  0EF0               	movlw	240
  6264  001898  6E0A               	movwf	??_Key_State_Sweep& (0+255),c
  6265  00189A  0EFF               	movlw	255
  6266  00189C  6E0B               	movwf	(??_Key_State_Sweep+1)& (0+255),c
  6267  00189E  AA80               	btfss	3968,5,c	;volatile
  6268  0018A0  D002               	goto	i2u337_40
  6269  0018A2  0E01               	movlw	1
  6270  0018A4  D001               	goto	i2u338_40
  6271  0018A6                     i2u337_40:
  6272  0018A6  0E00               	movlw	0
  6273  0018A8                     i2u338_40:
  6274  0018A8  6E0C               	movwf	(??_Key_State_Sweep+2)& (0+255),c
  6275  0018AA  6A0D               	clrf	(??_Key_State_Sweep+3)& (0+255),c
  6276  0018AC  90D8               	bcf	status,0,c
  6277  0018AE  360C               	rlcf	??_Key_State_Sweep+2,f,c
  6278  0018B0  360D               	rlcf	??_Key_State_Sweep+3,f,c
  6279  0018B2  90D8               	bcf	status,0,c
  6280  0018B4  360C               	rlcf	??_Key_State_Sweep+2,f,c
  6281  0018B6  360D               	rlcf	??_Key_State_Sweep+3,f,c
  6282  0018B8  90D8               	bcf	status,0,c
  6283  0018BA  360C               	rlcf	??_Key_State_Sweep+2,f,c
  6284  0018BC  360D               	rlcf	??_Key_State_Sweep+3,f,c
  6285  0018BE  A880               	btfss	3968,4,c	;volatile
  6286  0018C0  D002               	goto	i2u339_40
  6287  0018C2  0E01               	movlw	1
  6288  0018C4  D001               	goto	i2u340_40
  6289  0018C6                     i2u339_40:
  6290  0018C6  0E00               	movlw	0
  6291  0018C8                     i2u340_40:
  6292  0018C8  6E0E               	movwf	(??_Key_State_Sweep+4)& (0+255),c
  6293  0018CA  6A0F               	clrf	(??_Key_State_Sweep+5)& (0+255),c
  6294  0018CC  90D8               	bcf	status,0,c
  6295  0018CE  360E               	rlcf	??_Key_State_Sweep+4,f,c
  6296  0018D0  360F               	rlcf	??_Key_State_Sweep+5,f,c
  6297  0018D2  90D8               	bcf	status,0,c
  6298  0018D4  360E               	rlcf	??_Key_State_Sweep+4,f,c
  6299  0018D6  360F               	rlcf	??_Key_State_Sweep+5,f,c
  6300  0018D8  A282               	btfss	3970,1,c	;volatile
  6301  0018DA  D002               	goto	i2u341_40
  6302  0018DC  0E01               	movlw	1
  6303  0018DE  D001               	goto	i2u342_40
  6304  0018E0                     i2u341_40:
  6305  0018E0  0E00               	movlw	0
  6306  0018E2                     i2u342_40:
  6307  0018E2  6E10               	movwf	(??_Key_State_Sweep+6)& (0+255),c
  6308  0018E4  6A11               	clrf	(??_Key_State_Sweep+7)& (0+255),c
  6309  0018E6  90D8               	bcf	status,0,c
  6310  0018E8  3610               	rlcf	??_Key_State_Sweep+6,f,c
  6311  0018EA  3611               	rlcf	??_Key_State_Sweep+7,f,c
  6312  0018EC  A082               	btfss	3970,0,c	;volatile
  6313  0018EE  D002               	goto	i2u343_40
  6314  0018F0  0E01               	movlw	1
  6315  0018F2  D001               	goto	i2u344_40
  6316  0018F4                     i2u343_40:
  6317  0018F4  0E00               	movlw	0
  6318  0018F6                     i2u344_40:
  6319  0018F6  6E12               	movwf	(??_Key_State_Sweep+8)& (0+255),c
  6320  0018F8  6A13               	clrf	(??_Key_State_Sweep+9)& (0+255),c
  6321  0018FA  5010               	movf	??_Key_State_Sweep+6,w,c
  6322  0018FC  1212               	iorwf	??_Key_State_Sweep+8,f,c
  6323  0018FE  5011               	movf	??_Key_State_Sweep+7,w,c
  6324  001900  1213               	iorwf	??_Key_State_Sweep+9,f,c
  6325  001902  500E               	movf	??_Key_State_Sweep+4,w,c
  6326  001904  1212               	iorwf	??_Key_State_Sweep+8,f,c
  6327  001906  500F               	movf	??_Key_State_Sweep+5,w,c
  6328  001908  1213               	iorwf	??_Key_State_Sweep+9,f,c
  6329  00190A  500C               	movf	??_Key_State_Sweep+2,w,c
  6330  00190C  1212               	iorwf	??_Key_State_Sweep+8,f,c
  6331  00190E  500D               	movf	??_Key_State_Sweep+3,w,c
  6332  001910  1213               	iorwf	??_Key_State_Sweep+9,f,c
  6333  001912  500A               	movf	??_Key_State_Sweep,w,c
  6334  001914  1212               	iorwf	??_Key_State_Sweep+8,f,c
  6335  001916  500B               	movf	??_Key_State_Sweep+1,w,c
  6336  001918  1213               	iorwf	??_Key_State_Sweep+9,f,c
  6337  00191A  EE20 F004          	lfsr	2,4
  6338  00191E  5008               	movf	Key_State_Sweep@Key_State,w,c
  6339  001920  26D9               	addwf	fsr2l,f,c
  6340  001922  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6341  001924  22DA               	addwfc	fsr2h,f,c
  6342  001926  C012  FFDE         	movff	??_Key_State_Sweep+8,postinc2
  6343  00192A  C013  FFDD         	movff	??_Key_State_Sweep+9,postdec2
  6344                           
  6345                           ;KeyState.c: 49: Key_Num_Get(Key_State);
  6346  00192E  C008  F001         	movff	Key_State_Sweep@Key_State,Key_Num_Get@Key_State
  6347  001932  C009  F002         	movff	Key_State_Sweep@Key_State+1,Key_Num_Get@Key_State+1
  6348  001936  ECBD  F013         	call	_Key_Num_Get	;wreg free
  6349                           
  6350                           ;KeyState.c: 50: Key_State->Key_Mode = 0;
  6351  00193A  EE20 F001          	lfsr	2,1
  6352  00193E  5008               	movf	Key_State_Sweep@Key_State,w,c
  6353  001940  26D9               	addwf	fsr2l,f,c
  6354  001942  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6355  001944  22DA               	addwfc	fsr2h,f,c
  6356  001946  0E00               	movlw	0
  6357  001948  6EDF               	movwf	indf2,c
  6358                           
  6359                           ;KeyState.c: 51: }
  6360  00194A  0012               	return	
  6361  00194C                     i2l2531:
  6362                           
  6363                           ;KeyState.c: 52: else
  6364                           ;KeyState.c: 53: {
  6365                           ;KeyState.c: 54: Key_State->State_Flag = 0;
  6366  00194C  C008  FFD9         	movff	Key_State_Sweep@Key_State,fsr2l
  6367  001950  C009  FFDA         	movff	Key_State_Sweep@Key_State+1,fsr2h
  6368  001954  0E00               	movlw	0
  6369  001956  6EDF               	movwf	indf2,c
  6370                           
  6371                           ;KeyState.c: 55: Key_State->Key_Mode = 0;
  6372  001958  EE20 F001          	lfsr	2,1
  6373  00195C  5008               	movf	Key_State_Sweep@Key_State,w,c
  6374  00195E  26D9               	addwf	fsr2l,f,c
  6375  001960  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6376  001962  22DA               	addwfc	fsr2h,f,c
  6377  001964  0E00               	movlw	0
  6378  001966  6EDF               	movwf	indf2,c
  6379                           
  6380                           ;KeyState.c: 56: }
  6381                           ;KeyState.c: 57: break;
  6382  001968  0012               	return	
  6383  00196A                     i2l2535:
  6384                           
  6385                           ;KeyState.c: 60: if((Key_State->KeyCode_Pre != 0xffff) &&
  6386                           ;KeyState.c: 61: (Key_State->KeyCode_Pre == Key_State->KeyCode_Bef))
  6387  00196A  EE20 F002          	lfsr	2,2
  6388  00196E  5008               	movf	Key_State_Sweep@Key_State,w,c
  6389  001970  26D9               	addwf	fsr2l,f,c
  6390  001972  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6391  001974  22DA               	addwfc	fsr2h,f,c
  6392  001976  28DE               	incf	postinc2,w,c
  6393  001978  E103               	bnz	i2u345_40
  6394  00197A  28DE               	incf	postinc2,w,c
  6395  00197C  B4D8               	btfsc	status,2,c
  6396  00197E  D09A               	goto	i2l2567
  6397  001980                     i2u345_40:
  6398  001980  EE20 F004          	lfsr	2,4
  6399  001984  5008               	movf	Key_State_Sweep@Key_State,w,c
  6400  001986  26D9               	addwf	fsr2l,f,c
  6401  001988  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6402  00198A  22DA               	addwfc	fsr2h,f,c
  6403  00198C  EE10 F002          	lfsr	1,2
  6404  001990  5008               	movf	Key_State_Sweep@Key_State,w,c
  6405  001992  26E1               	addwf	fsr1l,f,c
  6406  001994  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6407  001996  22E2               	addwfc	fsr1h,f,c
  6408  001998  50DE               	movf	postinc2,w,c
  6409  00199A  18E6               	xorwf	postinc1,w,c
  6410  00199C  E103               	bnz	i2u346_41
  6411  00199E  50DE               	movf	postinc2,w,c
  6412  0019A0  18E6               	xorwf	postinc1,w,c
  6413  0019A2  A4D8               	btfss	status,2,c
  6414  0019A4                     i2u346_41:
  6415  0019A4  D087               	goto	i2l2567
  6416                           
  6417                           ;KeyState.c: 62: {
  6418                           ;KeyState.c: 63: Key_State->Key_Mode = 0;
  6419  0019A6  EE20 F001          	lfsr	2,1
  6420  0019AA  5008               	movf	Key_State_Sweep@Key_State,w,c
  6421  0019AC  26D9               	addwf	fsr2l,f,c
  6422  0019AE  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6423  0019B0  22DA               	addwfc	fsr2h,f,c
  6424  0019B2  0E00               	movlw	0
  6425  0019B4  6EDF               	movwf	indf2,c
  6426                           
  6427                           ;KeyState.c: 64: Key_State->State_Flag = 1;
  6428  0019B6  C008  FFD9         	movff	Key_State_Sweep@Key_State,fsr2l
  6429  0019BA  C009  FFDA         	movff	Key_State_Sweep@Key_State+1,fsr2h
  6430  0019BE  0E01               	movlw	1
  6431  0019C0  6EDF               	movwf	indf2,c
  6432                           
  6433                           ;KeyState.c: 65: Key_State->Key_Count++;
  6434  0019C2  EE20 F007          	lfsr	2,7
  6435  0019C6  5008               	movf	Key_State_Sweep@Key_State,w,c
  6436  0019C8  26D9               	addwf	fsr2l,f,c
  6437  0019CA  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6438  0019CC  22DA               	addwfc	fsr2h,f,c
  6439  0019CE  2ADF               	incf	indf2,f,c
  6440                           
  6441                           ;KeyState.c: 66: if(Key_State->Key_Count == 3)
  6442  0019D0  EE20 F007          	lfsr	2,7
  6443  0019D4  5008               	movf	Key_State_Sweep@Key_State,w,c
  6444  0019D6  26D9               	addwf	fsr2l,f,c
  6445  0019D8  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6446  0019DA  22DA               	addwfc	fsr2h,f,c
  6447  0019DC  0E03               	movlw	3
  6448  0019DE  18DE               	xorwf	postinc2,w,c
  6449  0019E0  A4D8               	btfss	status,2,c
  6450  0019E2  D023               	goto	i2l344
  6451                           
  6452                           ;KeyState.c: 67: {
  6453                           ;KeyState.c: 68: if(Key_State->Key_Num == 1)
  6454  0019E4  EE20 F006          	lfsr	2,6
  6455  0019E8  5008               	movf	Key_State_Sweep@Key_State,w,c
  6456  0019EA  26D9               	addwf	fsr2l,f,c
  6457  0019EC  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6458  0019EE  22DA               	addwfc	fsr2h,f,c
  6459  0019F0  04DE               	decf	postinc2,w,c
  6460  0019F2  A4D8               	btfss	status,2,c
  6461  0019F4  D008               	goto	i2l2551
  6462                           
  6463                           ;KeyState.c: 69: {
  6464                           ;KeyState.c: 70: Key_State->Key_Mode = 1;
  6465  0019F6  EE20 F001          	lfsr	2,1
  6466  0019FA  5008               	movf	Key_State_Sweep@Key_State,w,c
  6467  0019FC  26D9               	addwf	fsr2l,f,c
  6468  0019FE  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6469  001A00  22DA               	addwfc	fsr2h,f,c
  6470  001A02  0E01               	movlw	1
  6471  001A04  D010               	goto	L9
  6472  001A06                     i2l2551:
  6473                           
  6474                           ;KeyState.c: 72: else if(Key_State->Key_Num > 1)
  6475  001A06  EE20 F006          	lfsr	2,6
  6476  001A0A  5008               	movf	Key_State_Sweep@Key_State,w,c
  6477  001A0C  26D9               	addwf	fsr2l,f,c
  6478  001A0E  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6479  001A10  22DA               	addwfc	fsr2h,f,c
  6480  001A12  0E01               	movlw	1
  6481  001A14  64DF               	cpfsgt	indf2,c
  6482  001A16  D009               	goto	i2l344
  6483                           
  6484                           ;KeyState.c: 73: {
  6485                           ;KeyState.c: 74: Key_State->Key_Mode = 2;
  6486  001A18  EE20 F001          	lfsr	2,1
  6487  001A1C  5008               	movf	Key_State_Sweep@Key_State,w,c
  6488  001A1E  26D9               	addwf	fsr2l,f,c
  6489  001A20  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6490  001A22  22DA               	addwfc	fsr2h,f,c
  6491  001A24  0E02               	movlw	2
  6492  001A26                     L9:
  6493  001A26  6EDF               	movwf	indf2,c
  6494  001A28  D000               	goto	i2l344
  6495  001A2A                     i2l344:
  6496                           
  6497                           ;KeyState.c: 75: }
  6498                           ;KeyState.c: 76: }
  6499                           ;KeyState.c: 77: if(Key_State->Key_Count == 15)
  6500  001A2A  EE20 F007          	lfsr	2,7
  6501  001A2E  5008               	movf	Key_State_Sweep@Key_State,w,c
  6502  001A30  26D9               	addwf	fsr2l,f,c
  6503  001A32  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6504  001A34  22DA               	addwfc	fsr2h,f,c
  6505  001A36  0E0F               	movlw	15
  6506  001A38  18DE               	xorwf	postinc2,w,c
  6507  001A3A  A4D8               	btfss	status,2,c
  6508  001A3C  0012               	return	
  6509                           
  6510                           ;KeyState.c: 78: {
  6511                           ;KeyState.c: 79: if(!(Key_State->Key_Mode))
  6512  001A3E  EE20 F001          	lfsr	2,1
  6513  001A42  5008               	movf	Key_State_Sweep@Key_State,w,c
  6514  001A44  26D9               	addwf	fsr2l,f,c
  6515  001A46  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6516  001A48  22DA               	addwfc	fsr2h,f,c
  6517  001A4A  50DF               	movf	indf2,w,c
  6518  001A4C  A4D8               	btfss	status,2,c
  6519  001A4E  D023               	goto	i2l349
  6520                           
  6521                           ;KeyState.c: 80: {
  6522                           ;KeyState.c: 81: if(Key_State->Key_Num == 1)
  6523  001A50  EE20 F006          	lfsr	2,6
  6524  001A54  5008               	movf	Key_State_Sweep@Key_State,w,c
  6525  001A56  26D9               	addwf	fsr2l,f,c
  6526  001A58  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6527  001A5A  22DA               	addwfc	fsr2h,f,c
  6528  001A5C  04DE               	decf	postinc2,w,c
  6529  001A5E  A4D8               	btfss	status,2,c
  6530  001A60  D008               	goto	i2l2561
  6531                           
  6532                           ;KeyState.c: 82: {
  6533                           ;KeyState.c: 83: Key_State->Key_Mode = 3;
  6534  001A62  EE20 F001          	lfsr	2,1
  6535  001A66  5008               	movf	Key_State_Sweep@Key_State,w,c
  6536  001A68  26D9               	addwf	fsr2l,f,c
  6537  001A6A  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6538  001A6C  22DA               	addwfc	fsr2h,f,c
  6539  001A6E  0E03               	movlw	3
  6540  001A70  D010               	goto	L10
  6541  001A72                     i2l2561:
  6542                           
  6543                           ;KeyState.c: 85: else if(Key_State->Key_Num > 1)
  6544  001A72  EE20 F006          	lfsr	2,6
  6545  001A76  5008               	movf	Key_State_Sweep@Key_State,w,c
  6546  001A78  26D9               	addwf	fsr2l,f,c
  6547  001A7A  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6548  001A7C  22DA               	addwfc	fsr2h,f,c
  6549  001A7E  0E01               	movlw	1
  6550  001A80  64DF               	cpfsgt	indf2,c
  6551  001A82  D009               	goto	i2l349
  6552                           
  6553                           ;KeyState.c: 86: {
  6554                           ;KeyState.c: 87: Key_State->Key_Mode = 4;
  6555  001A84  EE20 F001          	lfsr	2,1
  6556  001A88  5008               	movf	Key_State_Sweep@Key_State,w,c
  6557  001A8A  26D9               	addwf	fsr2l,f,c
  6558  001A8C  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6559  001A8E  22DA               	addwfc	fsr2h,f,c
  6560  001A90  0E04               	movlw	4
  6561  001A92                     L10:
  6562  001A92  6EDF               	movwf	indf2,c
  6563  001A94  D000               	goto	i2l349
  6564  001A96                     i2l349:
  6565                           
  6566                           ;KeyState.c: 88: }
  6567                           ;KeyState.c: 89: }
  6568                           ;KeyState.c: 90: Key_State->Key_Count = 0;
  6569  001A96  EE20 F007          	lfsr	2,7
  6570  001A9A  5008               	movf	Key_State_Sweep@Key_State,w,c
  6571  001A9C  26D9               	addwf	fsr2l,f,c
  6572  001A9E  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6573  001AA0  22DA               	addwfc	fsr2h,f,c
  6574  001AA2  0E00               	movlw	0
  6575  001AA4  6EDF               	movwf	indf2,c
  6576                           
  6577                           ;KeyState.c: 91: Key_State->State_Flag = 2;
  6578  001AA6  C008  FFD9         	movff	Key_State_Sweep@Key_State,fsr2l
  6579  001AAA  C009  FFDA         	movff	Key_State_Sweep@Key_State+1,fsr2h
  6580  001AAE  0E02               	movlw	2
  6581  001AB0  6EDF               	movwf	indf2,c
  6582                           
  6583                           ;KeyState.c: 92: }
  6584                           ;KeyState.c: 93: }
  6585  001AB2  0012               	return	
  6586  001AB4                     i2l2567:
  6587                           
  6588                           ;KeyState.c: 94: else
  6589                           ;KeyState.c: 95: {
  6590                           ;KeyState.c: 96: Key_State->Key_Count = 0;
  6591  001AB4  EE20 F007          	lfsr	2,7
  6592  001AB8  5008               	movf	Key_State_Sweep@Key_State,w,c
  6593  001ABA  26D9               	addwf	fsr2l,f,c
  6594  001ABC  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6595  001ABE  22DA               	addwfc	fsr2h,f,c
  6596  001AC0  0E00               	movlw	0
  6597  001AC2  6EDF               	movwf	indf2,c
  6598                           
  6599                           ;KeyState.c: 97: Key_State->State_Flag = 0;
  6600  001AC4  C008  FFD9         	movff	Key_State_Sweep@Key_State,fsr2l
  6601  001AC8  C009  FFDA         	movff	Key_State_Sweep@Key_State+1,fsr2h
  6602  001ACC  0E00               	movlw	0
  6603  001ACE  6EDF               	movwf	indf2,c
  6604                           
  6605                           ;KeyState.c: 98: Key_State->Key_Mode = 0;
  6606  001AD0  EE20 F001          	lfsr	2,1
  6607  001AD4  5008               	movf	Key_State_Sweep@Key_State,w,c
  6608  001AD6  26D9               	addwf	fsr2l,f,c
  6609  001AD8  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6610  001ADA  22DA               	addwfc	fsr2h,f,c
  6611  001ADC  0E00               	movlw	0
  6612  001ADE  6EDF               	movwf	indf2,c
  6613                           
  6614                           ;KeyState.c: 99: }
  6615                           ;KeyState.c: 100: break;
  6616  001AE0  0012               	return	
  6617  001AE2                     i2l2573:
  6618                           
  6619                           ;KeyState.c: 103: if((Key_State->KeyCode_Pre != 0xffff) &&
  6620                           ;KeyState.c: 104: (Key_State->KeyCode_Pre == Key_State->KeyCode_Bef))
  6621  001AE2  EE20 F002          	lfsr	2,2
  6622  001AE6  5008               	movf	Key_State_Sweep@Key_State,w,c
  6623  001AE8  26D9               	addwf	fsr2l,f,c
  6624  001AEA  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6625  001AEC  22DA               	addwfc	fsr2h,f,c
  6626  001AEE  28DE               	incf	postinc2,w,c
  6627  001AF0  E103               	bnz	i2u354_40
  6628  001AF2  28DE               	incf	postinc2,w,c
  6629  001AF4  B4D8               	btfsc	status,2,c
  6630  001AF6  D03C               	goto	i2l2585
  6631  001AF8                     i2u354_40:
  6632  001AF8  EE20 F004          	lfsr	2,4
  6633  001AFC  5008               	movf	Key_State_Sweep@Key_State,w,c
  6634  001AFE  26D9               	addwf	fsr2l,f,c
  6635  001B00  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6636  001B02  22DA               	addwfc	fsr2h,f,c
  6637  001B04  EE10 F002          	lfsr	1,2
  6638  001B08  5008               	movf	Key_State_Sweep@Key_State,w,c
  6639  001B0A  26E1               	addwf	fsr1l,f,c
  6640  001B0C  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6641  001B0E  22E2               	addwfc	fsr1h,f,c
  6642  001B10  50DE               	movf	postinc2,w,c
  6643  001B12  18E6               	xorwf	postinc1,w,c
  6644  001B14  E12D               	bnz	i2l2585
  6645  001B16  50DE               	movf	postinc2,w,c
  6646  001B18  18E6               	xorwf	postinc1,w,c
  6647  001B1A  A4D8               	btfss	status,2,c
  6648  001B1C  D029               	goto	i2l2585
  6649                           
  6650                           ;KeyState.c: 105: {
  6651                           ;KeyState.c: 106: Key_State->State_Flag = 2;
  6652  001B1E  C008  FFD9         	movff	Key_State_Sweep@Key_State,fsr2l
  6653  001B22  C009  FFDA         	movff	Key_State_Sweep@Key_State+1,fsr2h
  6654  001B26  0E02               	movlw	2
  6655  001B28  6EDF               	movwf	indf2,c
  6656                           
  6657                           ;KeyState.c: 107: if(Key_State->Key_Num == 1)
  6658  001B2A  EE20 F006          	lfsr	2,6
  6659  001B2E  5008               	movf	Key_State_Sweep@Key_State,w,c
  6660  001B30  26D9               	addwf	fsr2l,f,c
  6661  001B32  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6662  001B34  22DA               	addwfc	fsr2h,f,c
  6663  001B36  04DE               	decf	postinc2,w,c
  6664  001B38  A4D8               	btfss	status,2,c
  6665  001B3A  D008               	goto	i2l356
  6666                           
  6667                           ;KeyState.c: 108: {
  6668                           ;KeyState.c: 109: Key_State->Key_Mode = 5;
  6669  001B3C  EE20 F001          	lfsr	2,1
  6670  001B40  5008               	movf	Key_State_Sweep@Key_State,w,c
  6671  001B42  26D9               	addwf	fsr2l,f,c
  6672  001B44  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6673  001B46  22DA               	addwfc	fsr2h,f,c
  6674  001B48  0E05               	movlw	5
  6675  001B4A  6EDF               	movwf	indf2,c
  6676  001B4C                     i2l356:
  6677                           
  6678                           ;KeyState.c: 110: }
  6679                           ;KeyState.c: 111: if(Key_State->Key_Num > 1)
  6680  001B4C  EE20 F006          	lfsr	2,6
  6681  001B50  5008               	movf	Key_State_Sweep@Key_State,w,c
  6682  001B52  26D9               	addwf	fsr2l,f,c
  6683  001B54  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6684  001B56  22DA               	addwfc	fsr2h,f,c
  6685  001B58  0E01               	movlw	1
  6686  001B5A  64DF               	cpfsgt	indf2,c
  6687  001B5C  0012               	return	
  6688                           
  6689                           ;KeyState.c: 112: {
  6690                           ;KeyState.c: 113: Key_State->Key_Mode = 6;
  6691  001B5E  EE20 F001          	lfsr	2,1
  6692  001B62  5008               	movf	Key_State_Sweep@Key_State,w,c
  6693  001B64  26D9               	addwf	fsr2l,f,c
  6694  001B66  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6695  001B68  22DA               	addwfc	fsr2h,f,c
  6696  001B6A  0E06               	movlw	6
  6697  001B6C  6EDF               	movwf	indf2,c
  6698                           
  6699                           ;KeyState.c: 114: }
  6700                           ;KeyState.c: 115: }
  6701  001B6E  0012               	return	
  6702  001B70                     i2l2585:
  6703                           
  6704                           ;KeyState.c: 116: else
  6705                           ;KeyState.c: 117: {
  6706                           ;KeyState.c: 118: Key_State->Key_Mode = 0;
  6707  001B70  EE20 F001          	lfsr	2,1
  6708  001B74  5008               	movf	Key_State_Sweep@Key_State,w,c
  6709  001B76  26D9               	addwf	fsr2l,f,c
  6710  001B78  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6711  001B7A  22DA               	addwfc	fsr2h,f,c
  6712  001B7C  0E00               	movlw	0
  6713  001B7E  6EDF               	movwf	indf2,c
  6714                           
  6715                           ;KeyState.c: 119: Key_State->State_Flag = 0;
  6716  001B80  C008  FFD9         	movff	Key_State_Sweep@Key_State,fsr2l
  6717  001B84  C009  FFDA         	movff	Key_State_Sweep@Key_State+1,fsr2h
  6718  001B88  0E00               	movlw	0
  6719  001B8A  6EDF               	movwf	indf2,c
  6720                           
  6721                           ;KeyState.c: 120: Key_State->Key_Count = 0;
  6722  001B8C  EE20 F007          	lfsr	2,7
  6723  001B90  5008               	movf	Key_State_Sweep@Key_State,w,c
  6724  001B92  26D9               	addwf	fsr2l,f,c
  6725  001B94  5009               	movf	Key_State_Sweep@Key_State+1,w,c
  6726  001B96  22DA               	addwfc	fsr2h,f,c
  6727  001B98  0E00               	movlw	0
  6728  001B9A  6EDF               	movwf	indf2,c
  6729                           
  6730                           ;KeyState.c: 123: }
  6731                           
  6732                           ;KeyState.c: 121: }
  6733                           ;KeyState.c: 122: break;
  6734  001B9C  0012               	return	
  6735  001B9E                     i2l2593:
  6736  001B9E  C008  FFD9         	movff	Key_State_Sweep@Key_State,fsr2l
  6737  001BA2  C009  FFDA         	movff	Key_State_Sweep@Key_State+1,fsr2h
  6738  001BA6  50DF               	movf	indf2,w,c
  6739                           
  6740                           ; Switch size 1, requested type "space"
  6741                           ; Number of cases is 3, Range of values is 0 to 2
  6742                           ; switch strategies available:
  6743                           ; Name         Instructions Cycles
  6744                           ; simple_byte           10     6 (average)
  6745                           ;	Chosen strategy is simple_byte
  6746  001BA8  0A00               	xorlw	0	; case 0
  6747  001BAA  B4D8               	btfsc	status,2,c
  6748  001BAC  D663               	goto	i2l2521
  6749  001BAE  0A01               	xorlw	1	; case 1
  6750  001BB0  B4D8               	btfsc	status,2,c
  6751  001BB2  D6DB               	goto	i2l2535
  6752  001BB4  0A03               	xorlw	3	; case 2
  6753  001BB6  A4D8               	btfss	status,2,c
  6754  001BB8  0012               	return	
  6755  001BBA  D793               	goto	i2l2573
  6756  001BBC  0012               	return		;funcret
  6757  001BBE                     __end_of_Key_State_Sweep:
  6758                           	opt stack 0
  6759                           pclatu	equ	0xFFB
  6760                           pclath	equ	0xFFA
  6761                           tblptru	equ	0xFF8
  6762                           tblptrh	equ	0xFF7
  6763                           tblptrl	equ	0xFF6
  6764                           tablat	equ	0xFF5
  6765                           prodh	equ	0xFF4
  6766                           prodl	equ	0xFF3
  6767                           intcon	equ	0xFF2
  6768                           postinc0	equ	0xFEE
  6769                           fsr0h	equ	0xFEA
  6770                           fsr0l	equ	0xFE9
  6771                           wreg	equ	0xFE8
  6772                           postinc1	equ	0xFE6
  6773                           postdec1	equ	0xFE5
  6774                           fsr1h	equ	0xFE2
  6775                           fsr1l	equ	0xFE1
  6776                           indf2	equ	0xFDF
  6777                           postinc2	equ	0xFDE
  6778                           postdec2	equ	0xFDD
  6779                           fsr2h	equ	0xFDA
  6780                           fsr2l	equ	0xFD9
  6781                           status	equ	0xFD8
  6782                           
  6783 ;; *************** function _Key_Num_Get *****************
  6784 ;; Defined at:
  6785 ;;		line 134 in file "nbproject/private/KeyState.c"
  6786 ;; Parameters:    Size  Location     Type
  6787 ;;  Key_State       2    0[COMRAM] PTR volatile struct .
  6788 ;;		 -> Key_StateMachine_Local(8), 
  6789 ;; Auto vars:     Size  Location     Type
  6790 ;;  i               1    6[COMRAM] unsigned char 
  6791 ;; Return value:  Size  Location     Type
  6792 ;;		None               void
  6793 ;; Registers used:
  6794 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6795 ;; Tracked objects:
  6796 ;;		On entry : 0/0
  6797 ;;		On exit  : 0/0
  6798 ;;		Unchanged: 0/0
  6799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6800 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6801 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6802 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6803 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6804 ;;Total ram usage:        7 bytes
  6805 ;; Hardware stack levels used:    1
  6806 ;; This function calls:
  6807 ;;		Nothing
  6808 ;; This function is called by:
  6809 ;;		_Key_State_Sweep
  6810 ;; This function uses a non-reentrant model
  6811 ;;
  6812                           
  6813                           	psect	text27
  6814  00277A                     __ptext27:
  6815                           	opt stack 0
  6816  00277A                     _Key_Num_Get:
  6817                           	opt stack 23
  6818                           
  6819                           ;KeyState.c: 136: uint8_t i;
  6820                           ;KeyState.c: 137: Key_State->Key_Num = 0;
  6821                           
  6822                           ;incstack = 0
  6823  00277A  EE20 F006          	lfsr	2,6
  6824  00277E  5001               	movf	Key_Num_Get@Key_State,w,c
  6825  002780  26D9               	addwf	fsr2l,f,c
  6826  002782  5002               	movf	Key_Num_Get@Key_State+1,w,c
  6827  002784  22DA               	addwfc	fsr2h,f,c
  6828  002786  0E00               	movlw	0
  6829  002788  6EDF               	movwf	indf2,c
  6830                           
  6831                           ;KeyState.c: 138: for(i = 0;i < 16;i++)
  6832  00278A  0E00               	movlw	0
  6833  00278C  6E07               	movwf	Key_Num_Get@i,c
  6834  00278E  0E0F               	movlw	15
  6835  002790  6407               	cpfsgt	Key_Num_Get@i,c
  6836  002792  D002               	goto	i2l2389
  6837  002794  0012               	return	
  6838  002796  0012               	return	
  6839  002798                     i2l2389:
  6840                           
  6841                           ;KeyState.c: 139: {
  6842                           ;KeyState.c: 140: Key_State->Key_Num += !((Key_State->KeyCode_Bef >> i) & 0x0001);
  6843  002798  C007  F003         	movff	Key_Num_Get@i,??_Key_Num_Get
  6844  00279C  EE20 F004          	lfsr	2,4
  6845  0027A0  5001               	movf	Key_Num_Get@Key_State,w,c
  6846  0027A2  26D9               	addwf	fsr2l,f,c
  6847  0027A4  5002               	movf	Key_Num_Get@Key_State+1,w,c
  6848  0027A6  22DA               	addwfc	fsr2h,f,c
  6849  0027A8  CFDE F004          	movff	postinc2,??_Key_Num_Get+1
  6850  0027AC  CFDD F005          	movff	postdec2,??_Key_Num_Get+2
  6851  0027B0  2A03               	incf	??_Key_Num_Get,f,c
  6852  0027B2  D003               	goto	i2u294_44
  6853  0027B4                     i2u294_45:
  6854  0027B4  90D8               	bcf	status,0,c
  6855  0027B6  3205               	rrcf	??_Key_Num_Get+2,f,c
  6856  0027B8  3204               	rrcf	??_Key_Num_Get+1,f,c
  6857  0027BA                     i2u294_44:
  6858  0027BA  2E03               	decfsz	??_Key_Num_Get,f,c
  6859  0027BC  D7FB               	goto	i2u294_45
  6860  0027BE  B004               	btfsc	??_Key_Num_Get+1,0,c
  6861  0027C0  D003               	goto	i2u295_40
  6862  0027C2  6A06               	clrf	(??_Key_Num_Get+3)& (0+255),c
  6863  0027C4  2A06               	incf	(??_Key_Num_Get+3)& (0+255),f,c
  6864  0027C6  D001               	goto	i2u296_48
  6865  0027C8                     i2u295_40:
  6866  0027C8  6A06               	clrf	(??_Key_Num_Get+3)& (0+255),c
  6867  0027CA                     i2u296_48:
  6868  0027CA  EE20 F006          	lfsr	2,6
  6869  0027CE  5001               	movf	Key_Num_Get@Key_State,w,c
  6870  0027D0  26D9               	addwf	fsr2l,f,c
  6871  0027D2  5002               	movf	Key_Num_Get@Key_State+1,w,c
  6872  0027D4  22DA               	addwfc	fsr2h,f,c
  6873  0027D6  5006               	movf	??_Key_Num_Get+3,w,c
  6874  0027D8  26DF               	addwf	indf2,f,c
  6875  0027DA  2A07               	incf	Key_Num_Get@i,f,c
  6876  0027DC  0E0F               	movlw	15
  6877  0027DE  6407               	cpfsgt	Key_Num_Get@i,c
  6878  0027E0  D7DB               	goto	i2l2389
  6879  0027E2  0012               	return	
  6880  0027E4  0012               	return		;funcret
  6881  0027E6                     __end_of_Key_Num_Get:
  6882                           	opt stack 0
  6883                           pclatu	equ	0xFFB
  6884                           pclath	equ	0xFFA
  6885                           tblptru	equ	0xFF8
  6886                           tblptrh	equ	0xFF7
  6887                           tblptrl	equ	0xFF6
  6888                           tablat	equ	0xFF5
  6889                           prodh	equ	0xFF4
  6890                           prodl	equ	0xFF3
  6891                           intcon	equ	0xFF2
  6892                           postinc0	equ	0xFEE
  6893                           fsr0h	equ	0xFEA
  6894                           fsr0l	equ	0xFE9
  6895                           wreg	equ	0xFE8
  6896                           postinc1	equ	0xFE6
  6897                           postdec1	equ	0xFE5
  6898                           fsr1h	equ	0xFE2
  6899                           fsr1l	equ	0xFE1
  6900                           indf2	equ	0xFDF
  6901                           postinc2	equ	0xFDE
  6902                           postdec2	equ	0xFDD
  6903                           fsr2h	equ	0xFDA
  6904                           fsr2l	equ	0xFD9
  6905                           status	equ	0xFD8
  6906                           pclatu	equ	0xFFB
  6907                           pclath	equ	0xFFA
  6908                           tblptru	equ	0xFF8
  6909                           tblptrh	equ	0xFF7
  6910                           tblptrl	equ	0xFF6
  6911                           tablat	equ	0xFF5
  6912                           prodh	equ	0xFF4
  6913                           prodl	equ	0xFF3
  6914                           intcon	equ	0xFF2
  6915                           postinc0	equ	0xFEE
  6916                           fsr0h	equ	0xFEA
  6917                           fsr0l	equ	0xFE9
  6918                           wreg	equ	0xFE8
  6919                           postinc1	equ	0xFE6
  6920                           postdec1	equ	0xFE5
  6921                           fsr1h	equ	0xFE2
  6922                           fsr1l	equ	0xFE1
  6923                           indf2	equ	0xFDF
  6924                           postinc2	equ	0xFDE
  6925                           postdec2	equ	0xFDD
  6926                           fsr2h	equ	0xFDA
  6927                           fsr2l	equ	0xFD9
  6928                           status	equ	0xFD8
  6929                           
  6930                           	psect	rparam
  6931  0000                     pclatu	equ	0xFFB
  6932                           pclath	equ	0xFFA
  6933                           tblptru	equ	0xFF8
  6934                           tblptrh	equ	0xFF7
  6935                           tblptrl	equ	0xFF6
  6936                           tablat	equ	0xFF5
  6937                           prodh	equ	0xFF4
  6938                           prodl	equ	0xFF3
  6939                           intcon	equ	0xFF2
  6940                           postinc0	equ	0xFEE
  6941                           fsr0h	equ	0xFEA
  6942                           fsr0l	equ	0xFE9
  6943                           wreg	equ	0xFE8
  6944                           postinc1	equ	0xFE6
  6945                           postdec1	equ	0xFE5
  6946                           fsr1h	equ	0xFE2
  6947                           fsr1l	equ	0xFE1
  6948                           indf2	equ	0xFDF
  6949                           postinc2	equ	0xFDE
  6950                           postdec2	equ	0xFDD
  6951                           fsr2h	equ	0xFDA
  6952                           fsr2l	equ	0xFD9
  6953                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    16
    Data        34
    BSS         873
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     52      62
    BANK0           160     31     152
    BANK1           256      0     136
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    Key_Num_Get@Key_State	PTR volatile struct . size(2) Largest target is 8
		 -> Key_StateMachine_Local(COMRAM[8]), 

    Key_State_Sweep@Key_State	PTR volatile struct . size(2) Largest target is 8
		 -> Key_StateMachine_Local(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _Timer_Init->_WriteTimer0
    _delay_ms->___lmul
    _Trica_Mag->_ADC_ElecGet
    _Trica_Control->_delay_us
    _ADC_ElecGet->___lldiv
    _ADC_Init->___lldiv

Critical Paths under _ISR in COMRAM

    _ISR->_Key_State_Sweep
    _Key_State_Sweep->_Key_Num_Get

Critical Paths under _main in BANK0

    _Message_Manage->_Magne_Demag_Dispose
    _Magne_Demag_Dispose->_Trica_Mag
    _Trica_Mag->_ADC_ElecGet

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   13438
                                             30 BANK0      1     1      0
                           _ADC_Init
                          _GPIO_Init
                     _Message_Manage
                       _Message_Send
                     _Parameter_Init
                         _Timer_Init
 ---------------------------------------------------------------------------------
 (1) _Timer_Init                                           0     0      0     241
                         _OpenTimer0
                        _WriteTimer0
 ---------------------------------------------------------------------------------
 (2) _WriteTimer0                                          4     2      2     197
                                             33 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenTimer0                                           1     1      0      44
                                             33 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Parameter_Init                                       1     1      0     130
                                             33 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Message_Send                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Message_Manage                                       1     1      0   11882
                _Magne_Demag_Dispose
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _Magne_Demag_Dispose                                  7     7      0   10681
                                             23 BANK0      7     7      0
                   _Relay_Channel_SW
                          _Trica_Mag
                            ___lwdiv
                             ___wmul
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             4     0      4    1201
                                             45 COMRAM     4     0      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     356
                                             33 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     501
                                             33 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _Trica_Mag                                           15    15      0    5812
                                              8 BANK0     15    15      0
                        _ADC_ElecGet
                      _Trica_Control
                             ___wmul
                           _delay_us
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1922
                                             33 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _Trica_Control                                        2     2      0     749
                                             37 COMRAM     2     2      0
                           _delay_us
 ---------------------------------------------------------------------------------
 (4) _delay_us                                             4     0      4     551
                                             33 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _ADC_ElecGet                                         14    12      2     999
                                             46 COMRAM     6     4      2
                                              0 BANK0      8     8      0
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _Relay_Channel_SW                                     2     1      1     539
                                             33 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _GPIO_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                            12    12      0    1182
                                             46 COMRAM     4     4      0
                                              0 BANK0      8     8      0
                            _BusyADC
                         _ConvertADC
                            _OpenADC
                            _ReadADC
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     761
                                             33 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) _ReadADC                                              4     2      2       0
                                             33 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     316
                                             33 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (5) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                 14    14      0    1257
                                             19 COMRAM    14    14      0
                    _Key_State_Sweep
                      i2_WriteTimer0
 ---------------------------------------------------------------------------------
 (7) i2_WriteTimer0                                        4     2      2      93
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _Key_State_Sweep                                     12    10      2    1164
                                              7 COMRAM    12    10      2
                        _Key_Num_Get
 ---------------------------------------------------------------------------------
 (8) _Key_Num_Get                                          7     5      2     187
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
     _BusyADC
     _ConvertADC
     _OpenADC
     _ReadADC
     ___lldiv
   _GPIO_Init
   _Message_Manage
     _Magne_Demag_Dispose
       _Relay_Channel_SW
       _Trica_Mag
         _ADC_ElecGet
           _BusyADC
           _ConvertADC
           _ReadADC
           ___lldiv
         _Trica_Control
           _delay_us
         ___wmul
         _delay_us
       ___lwdiv
       ___wmul
       _delay_ms
         ___lmul
     _delay_ms
       ___lmul
   _Message_Send
   _Parameter_Init
   _Timer_Init
     _OpenTimer0
     _WriteTimer0

 _ISR (ROOT)
   _Key_State_Sweep
     _Key_Num_Get
   i2_WriteTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0     280      37       16.6%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      88       7       53.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1F      98       5       95.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     34      3E       1       65.3%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     15E      12        0.0%
DATA                 0      0     3DE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sun Oct 11 18:38:50 2015

          ___wmul@multiplicand 0024                    __CFG_BORV$3 000000                ??_Trica_Control 0026  
         Magne_Demag_Dispose@i 00F6           Magne_Demag_Dispose@j 00F5                   __CFG_CP0$OFF 000000  
                 __CFG_CP1$OFF 000000                   __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000  
                 __CFG_CP4$OFF 000000                   __CFG_CP5$OFF 000000                   __CFG_CP6$OFF 000000  
                 __CFG_CP7$OFF 000000                            l102 109C                            l201 177C  
                          l121 11F0                            l105 10A4                            l210 26A2  
                          l132 12A6                            l108 1168                            l213 26B4  
                          l214 26E8                            l118 11E8                            l310 263C  
                          l135 136A                            l303 25F6                            l160 1476  
                          l144 13EA                            l209 266E                            l129 129E  
                          l313 2646                            l242 251E                            l306 2632  
                          l163 153A                            l147 13F2                            l252 2548  
                          l172 15BA                            l261 2572                            l157 146E  
                          l317 2658                            l246 252C                            l255 2556  
                          l183 1628                            l175 15C2                            l264 2580  
                          l249 253A                            l258 2564                            l186 1630  
                          l445 29E8                            l189 16F4                            l293 23CE  
                          l198 1774                            l466 2A76                            l467 2A78  
                          l933 2768                            l996 2896                   __CFG_CPB$OFF 000000  
                 __CFG_CPD$OFF 000000                            _ISR 0008           __size_of_WriteTimer0 0012  
                          prod 000FF3                            wreg 000FE8               _Relay_Channel_SW 2510  
         __size_of_ADC_ElecGet 01B0                           ?_ISR 0001                           l3005 285A  
                         l3101 1DDC                           l3007 2864                           l3017 288A  
                         l3009 286C                           l3105 1DE6                           l3041 1C06  
                         l3123 1E70                           l3045 1C10                           l3221 23BC  
                         l3213 23A8                           l3205 2382                           l3119 1E66  
                         l3063 1C9A                           l3039 1C00                           l3311 2A2C  
                         l3129 1EE6                           l3153 1F6C                           l3139 1F10  
                         l3147 1F3E                           l3059 1C90                           l3181 2476  
                         l3069 1D10                           l3093 1D96                           l3245 242C  
                         l3237 2418                           l3229 23F2                           l3079 1D3A  
                         l3087 1D68                           l3185 2492                           l2641 2A7E  
                         l2651 271E                           l3187 2498                           l3195 24E2  
                         l2723 26E2                           l2707 269C                           l2811 12E0  
                         l3099 1DD6                           l2661 2758                           l2653 2726  
                         l2709 26A6                           l2805 1290                           l2733 28B2  
                         l2671 21EE                           l2911 166A                           l2743 103E  
                         l2649 2710                           l2673 21F4                           l2681 223E  
                         l2905 161A                           l2753 107A                           l2737 28C8  
                         l3289 2172                           l2667 21D2                           l2843 1400  
                         l2835 13C6                           l2819 1342                           l2771 1140  
                         l2763 10DE                           l2747 1052                           l2829 13AC  
                         l2845 1408                           l2781 11AA                           l2853 144A  
                         l2687 22F2                           l2943 178A                           l2935 1750  
                         l2919 16CC                           l2871 1512                           l2863 14B0  
                         l2689 2352                           l2929 1736                           l2945 1792  
                         l2881 157C                           l2953 17D4                           l2971 2530  
                         l2963 2514                           l2795 11FE                           l2787 11C4  
                         l2797 1206                           l2991 2576                           l2983 255A  
                         l2975 253E                           l2967 2522                           l2895 15D0  
                         l2887 1596                           l2959 2930                           l2897 15D8  
                         l2987 2568                           l2979 254C                           l2997 2584  
                         u3600 2AEE                           u4554 1C34                           u4555 1C2C  
                         u4654 1E0A                           u4655 1E02                     _Demag_Flag 00D7  
     Key_State_Sweep@Key_State 0008                           _Elec 0188                  ??_Key_Num_Get 0003  
                         _main 2A14                           fsr0h 000FEA                           fsr1h 000FE2  
                         fsr0l 000FE9                           fsr2h 000FDA                           fsr1l 000FE1  
                         indf2 000FDF                           fsr2l 000FD9         __size_ofi2_WriteTimer0 0012  
             __end_of_ADC_Init 2510                           pclat 000FFA                           prodh 000FF4  
                         prodl 000FF3                           start 00AA             __size_of_GPIO_Init 0050  
                __CFG_IESO$OFF 000000                  __CFG_FOSC$HS1 000000                  __CFG_MCLRE$ON 000000  
                 ___param_bank 000010                __end_of_BusyADC 2AF4                __end_of_ReadADC 2AE6  
                        ??_ISR 0014                __end_of_OpenADC 29EC                  __CFG_RETEN$ON 000000  
                        ?_main 0001                __end_of___lldiv 277A                          _T0CON 000FD5  
              __end_of___lwdiv 28A0                          i2l400 0070                          i2l344 1A2A  
                        i2l356 1B4C                          i2l349 1A96                          _TMR0H 000FD7  
                        _TMR0L 000FD6                          _PORTA 000F80                          _PORTB 000F81  
                        _PORTC 000F82                          _PORTD 000F83                          _PORTE 000F84  
                        _PORTF 000F85                          _PORTG 000F86                          _Gears 1001  
                __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000                  __CFG_WRT2$OFF 000000  
          ___lmul@multiplicand 0026                  __CFG_WRT3$OFF 000000                  __CFG_WRT4$OFF 000000  
               __CFG_EBRT0$OFF 000000                  __CFG_WRT5$OFF 000000                 __CFG_EBRT1$OFF 000000  
                __CFG_WRT6$OFF 000000                 __CFG_EBRT2$OFF 000000                  __CFG_WRT7$OFF 000000  
               __CFG_EBRT3$OFF 000000                 __CFG_EBRT4$OFF 000000                 __CFG_FCMEN$OFF 000000  
               __CFG_EBRT5$OFF 000000                 __CFG_EBRT6$OFF 000000                 __CFG_EBRT7$OFF 000000  
                __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000  
               __CFG_EBRTB$OFF 000000                          main@i 00F7                _Key_State_Sweep 17DA  
                   _ConvertADC 2AF4            _Magne_Demag_Dispose 1BBE         _Key_StateMachine_Local 0037  
                        tablat 000FF5                          status 000FD8            __end_of_Key_Num_Get 27E6  
              __initialization 27E6                   __end_of_main 2A3A                   Key_Num_Get@i 0007  
         ?_Magne_Demag_Dispose 0001                    _Gears_Timer 00B7                         ??_main 0035  
                i2_WriteTimer0 2AC4                  __activetblptr 000003                  ?_Message_Send 0001  
               __CFG_PLLCFG$ON 000000              __end_of_GPIO_Init 299E                         _ADCON0 000FC2  
                       _ADCON1 000FC1                         _ADCON2 000FC0                         _ADRESH 000FC4  
                       _ADRESL 000FC3                      ADC_Init@i 00DD                __CFG_BBSIZ$BB2K 000000  
                       i2l2521 1874                     _OpenTimer0 2A5C                         i2l2531 194C  
                       i2l2613 0062                         i2l2551 1A06                         i2l2535 196A  
                       i2l2561 1A72                         i2l2389 2798                         i2l2573 1AE2  
                       i2l2567 1AB4                         i2l2585 1B70                         i2l2593 1B9E  
                       _INTCON 000FF2                         _TMR0IF 007F92                      ??_BusyADC 0022  
                    ??_ReadADC 0024               __end_of_delay_ms 294E               __end_of_delay_us 2A9C  
                    ??_OpenADC 0024                 __CFG_XINST$OFF 000000                         ___lmul 28A0  
                       ___wmul 29EC                 __CFG_STVREN$ON 000000          ??_Magne_Demag_Dispose 00F0  
                    ??___lldiv 002A               OpenTimer0@config 0022                      ??___lwdiv 0026  
                   _Timer_Init 2A9C                         clear_0 27EE                         clear_1 2800  
                       clear_2 280C                         clear_3 2818                 ?i2_WriteTimer0 0001  
               ??_Message_Send 0022                    _Magnet_Flag 00D8        __end_of_Key_State_Sweep 1BBE  
                    ?_ADC_Init 0001                   __mediumconst 0000                         tblptrh 000FF7  
                       tblptrl 000FF6             __size_of_Trica_Mag 07C8                         tblptru 000FF8  
                   Trica_Mag@i 00EE                     Trica_Mag@j 00E8                     Trica_Mag@k 00EA  
                  ?_ConvertADC 0001        __size_of_Parameter_Init 0224                     __accesstop 0060  
      __end_of__initialization 283E                    _Key_Num_Get 277A                  ___rparam_used 000001  
     __end_of_Relay_Channel_SW 25BA                  __end_of_Gears 1011                 __pcstackCOMRAM 0001  
                 __pidataBANK0 2A3A                     ??_ADC_Init 002F        Relay_Channel_SW@Channel 0023  
      __size_of_Message_Manage 00A4                     __pbssBANK0 0060                     __pbssBANK1 0100  
                  ?_OpenTimer0 0001                    _Houwa_Cuont 00B4              __end_of_Trica_Mag 17DA  
                      ?___lmul 0022                        ?___wmul 0022                    ?_Timer_Init 0001  
         Key_Num_Get@Key_State 0001                ??i2_WriteTimer0 0003               WriteTimer0@timer 0024  
                ??_WriteTimer0 0024                 ___lmul@product 002A            __size_of_ConvertADC 0004  
                ??_ADC_ElecGet 0031          __end_of_Trica_Control 26EE               ?_Key_State_Sweep 0008  
                    ?_delay_ms 002E                      ?_delay_us 0022                   ADC_ElecGet@i 00D9  
                      _BusyADC 2AE6                        _ReadADC 2AD6           __end_of_Message_Send 2442  
          i2WriteTimer0@timer0 0001                __CFG_PWRTEN$OFF 000000                        _OpenADC 299E  
                      _Message 00B0                        __Hparam 0000                        __Lparam 0000  
                 ADC_Init@elec 00D9                __size_of___lmul 005A                        ___lldiv 26EE  
              __size_of___wmul 0028                        ___lwdiv 2844                   __psmallconst 1000  
                      __pcinit 27E6                        __ramtop 1000            __size_of_OpenTimer0 0020  
                      __ptext0 2A14                        __ptext1 2A9C                        __ptext2 2AB2  
                      __ptext3 2A5C                        __ptext4 1F8A                        __ptext5 235E  
                      __ptext6 25BA                        __ptext7 1BBE                        __ptext8 28FA  
                      __ptext9 28A0                      _T0CONbits 000FD5                   __size_of_ISR 00A2  
            __CFG_MSSPMSK$MSK7 000000            __end_of_WriteTimer0 2AC4                     ??_delay_ms 0032  
                   ??_delay_us 0026                 OpenADC@config2 0022                 OpenADC@config3 0023  
          __end_of_ADC_ElecGet 235E                      _GPIO_Init 294E        Trica_Control@EMCC_State 0026  
         end_of_initialization 283E                 _Parameter_Init 1F8A            __size_of_Timer_Init 0016  
              ___lldiv@divisor 0026                ___lldiv@counter 002E                        postdec1 000FE5  
                      postdec2 000FDD                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE                      _PORTAbits 000F80                      _PORTCbits 000F82  
                    _PORTDbits 000F83                      _PORTEbits 000F84  Magne_Demag_Dispose@EMCC_State 00F4  
                    _TRISAbits 000F92                      _TRISCbits 000F94                      _TRISDbits 000F95  
                    _TRISEbits 000F96                      _TRISGbits 000F98                 _Message_Manage 25BA  
       __end_of_Parameter_Init 21AE              __size_of_ADC_Init 00CE                     ?_GPIO_Init 0001  
                 ??_ConvertADC 0022                   ?_Key_Num_Get 0001    __end_of_Magne_Demag_Dispose 1F8A  
            ?_Relay_Channel_SW 0022           Relay_Channel_SW@Flag 0022             ??_Relay_Channel_SW 0023  
               __end_of___lmul 28FA                 __end_of___wmul 2A14                    _WriteTimer0 2AB2  
           __end_of_ConvertADC 2AF8                    _ADC_ElecGet 21AE         __end_of_Message_Manage 265E  
          start_initialization 27E6                    __end_of_ISR 00AA                ?_Parameter_Init 0001  
                    _Parameter 0100          __size_of_Message_Send 00E4                   ??_OpenTimer0 0022  
                     ??___lmul 002A                       ??___wmul 0026                   ??_Timer_Init 0026  
                  __pdataBANK0 00B7                      _Trica_Mag 1012             __end_of_OpenTimer0 2A7C  
                  __pbssBIGRAM 0188                   _Message_Send 235E                ?_Message_Manage 0001  
                  __pbssCOMRAM 0035                  __pcstackBANK0 00D9                  _Spacing_Count 0035  
                  ??_GPIO_Init 0022              __size_of_delay_ms 0054              __size_of_delay_us 0020  
           __end_of_Timer_Init 2AB2                       ?_BusyADC 0001                       ?_ReadADC 0022  
                     ?_OpenADC 0022               ___lwdiv@dividend 0022              __CFG_CCP2MX$PORTC 000000  
                    __pintcode 0008                       ?___lldiv 0022                       ?___lwdiv 0022  
                   ?_Trica_Mag 0001          __end_ofi2_WriteTimer0 2AD6                    __smallconst 1000  
            WriteTimer0@timer0 0022             i2WriteTimer0@timer 0003                       _ADC_Init 2442  
             ___lwdiv@quotient 0027       __size_of_Key_State_Sweep 03E4                 ___wmul@product 0026  
                OpenADC@config 0026                       _PIE1bits 000F9D           __size_of_Key_Num_Get 006C  
       __size_of_Trica_Control 0090                       i2u330_40 180A                       i2u331_40 180C  
                     i2u340_40 18C8                       i2u332_40 1824                       i2u341_40 18E0  
                     i2u333_40 1826                       i2u342_40 18E2                       i2u334_40 1838  
                     i2u343_40 18F4                       i2u335_40 183A                       i2u344_40 18F6  
                     i2u336_40 188A                       i2u328_40 17EA                       i2u345_40 1980  
                     i2u337_40 18A6                       i2u329_40 17EC                       _PIR1bits 000F9E  
                     i2u354_40 1AF8                       i2u338_40 18A8                       i2u346_41 19A4  
                     i2u339_40 18C6                       i2u294_44 27BA                       i2u294_45 27B4  
                     i2u295_40 27C8                       i2u296_48 27CA                     _ADCON0bits 000FC2  
            ___wmul@multiplier 0022               __CFG_SOSCSEL$DIG 000000                       _Elec_Max 0060  
            ___lmul@multiplier 0022                      copy_data0 2832               __size_of_BusyADC 000E  
             __size_of_ReadADC 0010                     _ANCON0bits 000F25                       __Hrparam 0000  
             __size_of_OpenADC 004E                       __Lrparam 0000             __CFG_BOREN$SBORDIS 000000  
             __size_of___lldiv 008C                    ??_Trica_Mag 00E1               __size_of___lwdiv 005C  
                 ?_WriteTimer0 0022               ??_Parameter_Init 0022                   ?_ADC_ElecGet 002F  
                _Trica_Control 265E      __size_of_Relay_Channel_SW 00AA                       _delay_ms 28FA  
                     _delay_us 2A7C                ___lwdiv@divisor 0024                ___lwdiv@counter 0026  
                     __ptext10 2844                       __ptext11 1012                       __ptext20 2AD6  
                     __ptext12 29EC                       __ptext21 299E                       __ptext13 265E  
                     __ptext22 2AF4                       __ptext14 2A7C                       __ptext23 2AE6  
                     __ptext15 21AE                       __ptext16 2510                       __ptext25 2AC4  
                     __ptext17 294E                       __ptext26 17DA                       __ptext18 2442  
                     __ptext27 277A                       __ptext19 26EE                 Trica_Control@i 0027  
                   _MAGNE_Flag 00B6                  __size_of_main 0026                Parameter_Init@i 0022  
          Trica_Mag@EMCC_State 00E7            __CFG_RTCOSC$SOSCREF 000000              ??_Key_State_Sweep 000A  
 __size_of_Magne_Demag_Dispose 03CC               ??_Message_Manage 0035            __CFG_INTOSCSEL$HIGH 000000  
                  delay_ms@nms 002E                 ?_Trica_Control 0001                    delay_us@nus 0022  
           __CFG_WDTEN$SWDTDIS 000000                     _INTCONbits 000FF2                  Trica_Mag@Elec 00EC  
                     intlevel2 0000               ___lldiv@dividend 0022                ADC_ElecGet@elec 00DD  
           __CFG_WDTPS$1048576 000000               ___lldiv@quotient 002A            __CFG_BORPWR$ZPBORMV 000000  
