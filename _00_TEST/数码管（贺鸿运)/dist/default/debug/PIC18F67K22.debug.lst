

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Dec 04 13:27:51 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F67K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    24  0000                     
    25                           	psect	idataCOMRAM
    26  01FA0E                     __pidataCOMRAM:
    27                           	opt stack 0
    28                           
    29                           ;initializer for _LED_Number
    30  01FA0E  3F                 	db	63
    31  01FA0F  06                 	db	6
    32  01FA10  5B                 	db	91
    33  01FA11  4F                 	db	79
    34  01FA12  66                 	db	102
    35  01FA13  6D                 	db	109
    36  01FA14  7D                 	db	125
    37  01FA15  07                 	db	7
    38  01FA16  7F                 	db	127
    39  01FA17  6F                 	db	111
    40  01FA18  77                 	db	119
    41  01FA19  7C                 	db	124
    42  01FA1A  39                 	db	57
    43  01FA1B  5E                 	db	94
    44  01FA1C  79                 	db	121
    45  01FA1D  71                 	db	113
    46  0000                     _TRISCbits	set	3988
    47  0000                     _RC3	set	31763
    48  0000                     _RC4	set	31764
    49  0000                     _RD6	set	31774
    50  0000                     _RD7	set	31775
    51  0000                     _RE2	set	31778
    52  0000                     _RE3	set	31779
    53  0000                     _RE4	set	31780
    54  0000                     _RE5	set	31781
    55  0000                     _RE6	set	31782
    56  0000                     _RE7	set	31783
    57  0000                     _TRISD6	set	31918
    58  0000                     _TRISD7	set	31919
    59  0000                     _TRISE2	set	31922
    60  0000                     _TRISE3	set	31923
    61  0000                     _TRISE4	set	31924
    62  0000                     _TRISE5	set	31925
    63  0000                     _TRISE6	set	31926
    64  0000                     _TRISE7	set	31927
    65                           
    66                           ; #config settings
    67                           
    68                           	psect	cinit
    69  01FADE                     __pcinit:
    70                           	opt stack 0
    71  01FADE                     start_initialization:
    72                           	opt stack 0
    73  01FADE                     __initialization:
    74                           	opt stack 0
    75                           
    76                           ; Initialize objects allocated to COMRAM (16 bytes)
    77                           ; load TBLPTR registers with __pidataCOMRAM
    78  01FADE  0E0E               	movlw	low __pidataCOMRAM
    79  01FAE0  6EF6               	movwf	tblptrl,c
    80  01FAE2  0EFA               	movlw	high __pidataCOMRAM
    81  01FAE4  6EF7               	movwf	tblptrh,c
    82  01FAE6  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
    83  01FAE8  6EF8               	movwf	tblptru,c
    84  01FAEA  EE00  F001         	lfsr	0,__pdataCOMRAM
    85  01FAEE  EE10 F010          	lfsr	1,16
    86  01FAF2                     copy_data0:
    87  01FAF2  0009               	tblrd		*+
    88  01FAF4  CFF5 FFEE          	movff	tablat,postinc0
    89  01FAF8  50E5               	movf	postdec1,w,c
    90  01FAFA  50E1               	movf	fsr1l,w,c
    91  01FAFC  E1FA               	bnz	copy_data0
    92  01FAFE                     end_of_initialization:
    93                           	opt stack 0
    94  01FAFE                     __end_of__initialization:
    95                           	opt stack 0
    96  01FAFE  0100               	movlb	0
    97  01FB00  EF0F  F0FD         	goto	_main	;jump to C main() function
    98                           tblptru	equ	0xFF8
    99                           tblptrh	equ	0xFF7
   100                           tblptrl	equ	0xFF6
   101                           tablat	equ	0xFF5
   102                           postinc0	equ	0xFEE
   103                           postdec1	equ	0xFE5
   104                           fsr1l	equ	0xFE1
   105                           
   106                           	psect	dataCOMRAM
   107  000001                     __pdataCOMRAM:
   108                           	opt stack 0
   109  000001                     _LED_Number:
   110                           	opt stack 0
   111  000001                     	ds	16
   112                           tblptru	equ	0xFF8
   113                           tblptrh	equ	0xFF7
   114                           tblptrl	equ	0xFF6
   115                           tablat	equ	0xFF5
   116                           postinc0	equ	0xFEE
   117                           postdec1	equ	0xFE5
   118                           fsr1l	equ	0xFE1
   119                           
   120                           	psect	cstackCOMRAM
   121  000011                     __pcstackCOMRAM:
   122                           	opt stack 0
   123  000011                     ?___awdiv:
   124                           	opt stack 0
   125  000011                     ?___awmod:
   126                           	opt stack 0
   127  000011                     TM1640_Delay@Time:
   128                           	opt stack 0
   129  000011                     ___awdiv@dividend:
   130                           	opt stack 0
   131  000011                     ___awmod@dividend:
   132                           	opt stack 0
   133                           
   134                           ; 2 bytes @ 0x0
   135  000011                     	ds	1
   136  000012                     TM1640_Delay@i:
   137                           	opt stack 0
   138                           
   139                           ; 1 bytes @ 0x1
   140  000012                     	ds	1
   141  000013                     TM1640_Writer_Byte@Date:
   142                           	opt stack 0
   143  000013                     ___awdiv@divisor:
   144                           	opt stack 0
   145  000013                     ___awmod@divisor:
   146                           	opt stack 0
   147                           
   148                           ; 2 bytes @ 0x2
   149  000013                     	ds	1
   150  000014                     TM1640_Writer_Byte@mask:
   151                           	opt stack 0
   152                           
   153                           ; 1 bytes @ 0x3
   154  000014                     	ds	1
   155  000015                     TM1640_Writer_Dates@Date:
   156                           	opt stack 0
   157  000015                     ___awdiv@counter:
   158                           	opt stack 0
   159  000015                     ___awmod@counter:
   160                           	opt stack 0
   161                           
   162                           ; 1 bytes @ 0x4
   163  000015                     	ds	1
   164  000016                     TM1640_Writer_Dates@Addr:
   165                           	opt stack 0
   166  000016                     ___awdiv@sign:
   167                           	opt stack 0
   168  000016                     ___awmod@sign:
   169                           	opt stack 0
   170                           
   171                           ; 1 bytes @ 0x5
   172  000016                     	ds	1
   173  000017                     ___awdiv@quotient:
   174                           	opt stack 0
   175                           
   176                           ; 2 bytes @ 0x6
   177  000017                     	ds	2
   178  000019                     TM1640_Show_Numbers@Numbers:
   179                           	opt stack 0
   180                           
   181                           ; 2 bytes @ 0x8
   182  000019                     	ds	2
   183  00001B                     TM1640_Show_Numbers@Num:
   184                           	opt stack 0
   185                           
   186                           ; 1 bytes @ 0xA
   187  00001B                     	ds	1
   188  00001C                     tblptru	equ	0xFF8
   189                           tblptrh	equ	0xFF7
   190                           tblptrl	equ	0xFF6
   191                           tablat	equ	0xFF5
   192                           postinc0	equ	0xFEE
   193                           postdec1	equ	0xFE5
   194                           fsr1l	equ	0xFE1
   195                           
   196                           ; 0 bytes @ 0xB
   197 ;;
   198 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   199 ;;
   200 ;; *************** function _main *****************
   201 ;; Defined at:
   202 ;;		line 15 in file "User/main.c"
   203 ;; Parameters:    Size  Location     Type
   204 ;;		None
   205 ;; Auto vars:     Size  Location     Type
   206 ;;		None
   207 ;; Return value:  Size  Location     Type
   208 ;;		None               void
   209 ;; Registers used:
   210 ;;		wreg, status,2, status,0, cstack
   211 ;; Tracked objects:
   212 ;;		On entry : 0/0
   213 ;;		On exit  : 0/0
   214 ;;		Unchanged: 0/0
   215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   220 ;;Total ram usage:        0 bytes
   221 ;; Hardware stack levels required when called:    4
   222 ;; This function calls:
   223 ;;		_Init_System
   224 ;;		_TM1640_Show_Numbers
   225 ;; This function is called by:
   226 ;;		Startup code after reset
   227 ;; This function uses a non-reentrant model
   228 ;;
   229                           
   230                           	psect	text0
   231  01FA1E                     __ptext0:
   232                           	opt stack 0
   233  01FA1E                     _main:
   234                           	opt stack 27
   235                           
   236                           ;main.c: 17: Init_System();
   237                           
   238                           ;incstack = 0
   239  01FA1E  EC00  F0FD         	call	_Init_System	;wreg free
   240                           
   241                           ;main.c: 19: TM1640_Show_Numbers(7664);
   242  01FA22  0E1D               	movlw	29
   243  01FA24  6E1A               	movwf	TM1640_Show_Numbers@Numbers+1,c
   244  01FA26  0EF0               	movlw	240
   245  01FA28  6E19               	movwf	TM1640_Show_Numbers@Numbers,c
   246  01FA2A  EC2D  F0FE         	call	_TM1640_Show_Numbers	;wreg free
   247  01FA2E  D7FF               	goto	l14
   248  01FA30  EF01  F000         	goto	start
   249  01FA34                     __end_of_main:
   250                           	opt stack 0
   251                           tblptru	equ	0xFF8
   252                           tblptrh	equ	0xFF7
   253                           tblptrl	equ	0xFF6
   254                           tablat	equ	0xFF5
   255                           postinc0	equ	0xFEE
   256                           postdec1	equ	0xFE5
   257                           fsr1l	equ	0xFE1
   258                           
   259 ;; *************** function _TM1640_Show_Numbers *****************
   260 ;; Defined at:
   261 ;;		line 43 in file "User/TM1640.c"
   262 ;; Parameters:    Size  Location     Type
   263 ;;  Numbers         2    8[COMRAM] int 
   264 ;; Auto vars:     Size  Location     Type
   265 ;;  Num             1   10[COMRAM] unsigned char 
   266 ;; Return value:  Size  Location     Type
   267 ;;		None               void
   268 ;; Registers used:
   269 ;;		wreg, status,2, status,0, cstack
   270 ;; Tracked objects:
   271 ;;		On entry : 0/0
   272 ;;		On exit  : 0/0
   273 ;;		Unchanged: 0/0
   274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   275 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   276 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   278 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   279 ;;Total ram usage:        3 bytes
   280 ;; Hardware stack levels used:    1
   281 ;; Hardware stack levels required when called:    3
   282 ;; This function calls:
   283 ;;		_TM1640_Writer_Dates
   284 ;;		___awdiv
   285 ;;		___awmod
   286 ;; This function is called by:
   287 ;;		_main
   288 ;; This function uses a non-reentrant model
   289 ;;
   290                           
   291                           	psect	text1
   292  01FC5A                     __ptext1:
   293                           	opt stack 0
   294  01FC5A                     _TM1640_Show_Numbers:
   295                           	opt stack 27
   296                           
   297                           ;TM1640.c: 45: unsigned char Num = 0;
   298                           
   299                           ;incstack = 0
   300  01FC5A  0E00               	movlw	0
   301  01FC5C  6E1B               	movwf	TM1640_Show_Numbers@Num,c
   302                           
   303                           ;TM1640.c: 47: while(Num < 4)
   304  01FC5E  D1CB               	goto	l1392
   305                           
   306                           ;TM1640.c: 48: {
   307                           ;TM1640.c: 49: switch(Num)
   308  01FC60  D1AC               	goto	l1386
   309                           
   310                           ;TM1640.c: 50: {
   311                           ;TM1640.c: 51: case 0: switch(Numbers % 10)
   312  01FC62  D03C               	goto	l1310
   313  01FC64                     l1288:
   314  01FC64  0E3F               	movlw	63
   315  01FC66  6E15               	movwf	TM1640_Writer_Dates@Date,c
   316  01FC68  0E03               	movlw	3
   317  01FC6A  EC27  F0FD         	call	_TM1640_Writer_Dates
   318  01FC6E  D1B3               	goto	l1388
   319  01FC70                     l1290:
   320  01FC70  0E06               	movlw	6
   321  01FC72  6E15               	movwf	TM1640_Writer_Dates@Date,c
   322  01FC74  0E03               	movlw	3
   323  01FC76  EC27  F0FD         	call	_TM1640_Writer_Dates
   324  01FC7A  D1AD               	goto	l1388
   325  01FC7C                     l1292:
   326  01FC7C  0E5B               	movlw	91
   327  01FC7E  6E15               	movwf	TM1640_Writer_Dates@Date,c
   328  01FC80  0E03               	movlw	3
   329  01FC82  EC27  F0FD         	call	_TM1640_Writer_Dates
   330  01FC86  D1A7               	goto	l1388
   331  01FC88                     l1294:
   332  01FC88  0E4F               	movlw	79
   333  01FC8A  6E15               	movwf	TM1640_Writer_Dates@Date,c
   334  01FC8C  0E03               	movlw	3
   335  01FC8E  EC27  F0FD         	call	_TM1640_Writer_Dates
   336  01FC92  D1A1               	goto	l1388
   337  01FC94                     l1296:
   338  01FC94  0E66               	movlw	102
   339  01FC96  6E15               	movwf	TM1640_Writer_Dates@Date,c
   340  01FC98  0E03               	movlw	3
   341  01FC9A  EC27  F0FD         	call	_TM1640_Writer_Dates
   342  01FC9E  D19B               	goto	l1388
   343  01FCA0                     l1298:
   344  01FCA0  0E6D               	movlw	109
   345  01FCA2  6E15               	movwf	TM1640_Writer_Dates@Date,c
   346  01FCA4  0E03               	movlw	3
   347  01FCA6  EC27  F0FD         	call	_TM1640_Writer_Dates
   348  01FCAA  D195               	goto	l1388
   349  01FCAC                     l1300:
   350  01FCAC  0E7D               	movlw	125
   351  01FCAE  6E15               	movwf	TM1640_Writer_Dates@Date,c
   352  01FCB0  0E03               	movlw	3
   353  01FCB2  EC27  F0FD         	call	_TM1640_Writer_Dates
   354  01FCB6  D18F               	goto	l1388
   355  01FCB8                     l1302:
   356  01FCB8  0E07               	movlw	7
   357  01FCBA  6E15               	movwf	TM1640_Writer_Dates@Date,c
   358  01FCBC  0E03               	movlw	3
   359  01FCBE  EC27  F0FD         	call	_TM1640_Writer_Dates
   360  01FCC2  D189               	goto	l1388
   361  01FCC4                     l1304:
   362  01FCC4  0E7F               	movlw	127
   363  01FCC6  6E15               	movwf	TM1640_Writer_Dates@Date,c
   364  01FCC8  0E03               	movlw	3
   365  01FCCA  EC27  F0FD         	call	_TM1640_Writer_Dates
   366  01FCCE  D183               	goto	l1388
   367  01FCD0                     l1306:
   368  01FCD0  0E6F               	movlw	111
   369  01FCD2  6E15               	movwf	TM1640_Writer_Dates@Date,c
   370  01FCD4  0E03               	movlw	3
   371  01FCD6  EC27  F0FD         	call	_TM1640_Writer_Dates
   372                           
   373                           ;TM1640.c: 63: } break;
   374  01FCDA  D17D               	goto	l1388
   375  01FCDC                     l1310:
   376  01FCDC  C019  F011         	movff	TM1640_Show_Numbers@Numbers,___awmod@dividend
   377  01FCE0  C01A  F012         	movff	TM1640_Show_Numbers@Numbers+1,___awmod@dividend+1
   378  01FCE4  0E00               	movlw	0
   379  01FCE6  6E14               	movwf	___awmod@divisor+1,c
   380  01FCE8  0E0A               	movlw	10
   381  01FCEA  6E13               	movwf	___awmod@divisor,c
   382  01FCEC  ECA1  F0FD         	call	___awmod	;wreg free
   383                           
   384                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   385                           ; Switch size 1, requested type "space"
   386                           ; Number of cases is 1, Range of values is 0 to 0
   387                           ; switch strategies available:
   388                           ; Name         Instructions Cycles
   389                           ; simple_byte            4     3 (average)
   390                           ;	Chosen strategy is simple_byte
   391  01FCF0  5012               	movf	?___awmod+1,w,c
   392  01FCF2  0A00               	xorlw	0	; case 0
   393  01FCF4  A4D8               	btfss	status,2,c
   394  01FCF6  D16F               	goto	l1388
   395                           
   396                           ; Switch size 1, requested type "space"
   397                           ; Number of cases is 10, Range of values is 0 to 9
   398                           ; switch strategies available:
   399                           ; Name         Instructions Cycles
   400                           ; simple_byte           31    16 (average)
   401                           ;	Chosen strategy is simple_byte
   402  01FCF8  5011               	movf	?___awmod,w,c
   403  01FCFA  0A00               	xorlw	0	; case 0
   404  01FCFC  B4D8               	btfsc	status,2,c
   405  01FCFE  D7B2               	goto	l1288
   406  01FD00  0A01               	xorlw	1	; case 1
   407  01FD02  B4D8               	btfsc	status,2,c
   408  01FD04  D7B5               	goto	l1290
   409  01FD06  0A03               	xorlw	3	; case 2
   410  01FD08  B4D8               	btfsc	status,2,c
   411  01FD0A  D7B8               	goto	l1292
   412  01FD0C  0A01               	xorlw	1	; case 3
   413  01FD0E  B4D8               	btfsc	status,2,c
   414  01FD10  D7BB               	goto	l1294
   415  01FD12  0A07               	xorlw	7	; case 4
   416  01FD14  B4D8               	btfsc	status,2,c
   417  01FD16  D7BE               	goto	l1296
   418  01FD18  0A01               	xorlw	1	; case 5
   419  01FD1A  B4D8               	btfsc	status,2,c
   420  01FD1C  D7C1               	goto	l1298
   421  01FD1E  0A03               	xorlw	3	; case 6
   422  01FD20  B4D8               	btfsc	status,2,c
   423  01FD22  D7C4               	goto	l1300
   424  01FD24  0A01               	xorlw	1	; case 7
   425  01FD26  B4D8               	btfsc	status,2,c
   426  01FD28  D7C7               	goto	l1302
   427  01FD2A  0A0F               	xorlw	15	; case 8
   428  01FD2C  B4D8               	btfsc	status,2,c
   429  01FD2E  D7CA               	goto	l1304
   430  01FD30  0A01               	xorlw	1	; case 9
   431  01FD32  B4D8               	btfsc	status,2,c
   432  01FD34  D7CD               	goto	l1306
   433  01FD36  D14F               	goto	l1388
   434                           
   435                           ;TM1640.c: 64: case 1: switch(Numbers % 10)
   436  01FD38  D03C               	goto	l1334
   437  01FD3A                     l1312:
   438  01FD3A  0E3F               	movlw	63
   439  01FD3C  6E15               	movwf	TM1640_Writer_Dates@Date,c
   440  01FD3E  0E02               	movlw	2
   441  01FD40  EC27  F0FD         	call	_TM1640_Writer_Dates
   442  01FD44  D148               	goto	l1388
   443  01FD46                     l1314:
   444  01FD46  0E06               	movlw	6
   445  01FD48  6E15               	movwf	TM1640_Writer_Dates@Date,c
   446  01FD4A  0E02               	movlw	2
   447  01FD4C  EC27  F0FD         	call	_TM1640_Writer_Dates
   448  01FD50  D142               	goto	l1388
   449  01FD52                     l1316:
   450  01FD52  0E5B               	movlw	91
   451  01FD54  6E15               	movwf	TM1640_Writer_Dates@Date,c
   452  01FD56  0E02               	movlw	2
   453  01FD58  EC27  F0FD         	call	_TM1640_Writer_Dates
   454  01FD5C  D13C               	goto	l1388
   455  01FD5E                     l1318:
   456  01FD5E  0E4F               	movlw	79
   457  01FD60  6E15               	movwf	TM1640_Writer_Dates@Date,c
   458  01FD62  0E02               	movlw	2
   459  01FD64  EC27  F0FD         	call	_TM1640_Writer_Dates
   460  01FD68  D136               	goto	l1388
   461  01FD6A                     l1320:
   462  01FD6A  0E66               	movlw	102
   463  01FD6C  6E15               	movwf	TM1640_Writer_Dates@Date,c
   464  01FD6E  0E02               	movlw	2
   465  01FD70  EC27  F0FD         	call	_TM1640_Writer_Dates
   466  01FD74  D130               	goto	l1388
   467  01FD76                     l1322:
   468  01FD76  0E6D               	movlw	109
   469  01FD78  6E15               	movwf	TM1640_Writer_Dates@Date,c
   470  01FD7A  0E02               	movlw	2
   471  01FD7C  EC27  F0FD         	call	_TM1640_Writer_Dates
   472  01FD80  D12A               	goto	l1388
   473  01FD82                     l1324:
   474  01FD82  0E7D               	movlw	125
   475  01FD84  6E15               	movwf	TM1640_Writer_Dates@Date,c
   476  01FD86  0E02               	movlw	2
   477  01FD88  EC27  F0FD         	call	_TM1640_Writer_Dates
   478  01FD8C  D124               	goto	l1388
   479  01FD8E                     l1326:
   480  01FD8E  0E07               	movlw	7
   481  01FD90  6E15               	movwf	TM1640_Writer_Dates@Date,c
   482  01FD92  0E02               	movlw	2
   483  01FD94  EC27  F0FD         	call	_TM1640_Writer_Dates
   484  01FD98  D11E               	goto	l1388
   485  01FD9A                     l1328:
   486  01FD9A  0E7F               	movlw	127
   487  01FD9C  6E15               	movwf	TM1640_Writer_Dates@Date,c
   488  01FD9E  0E02               	movlw	2
   489  01FDA0  EC27  F0FD         	call	_TM1640_Writer_Dates
   490  01FDA4  D118               	goto	l1388
   491  01FDA6                     l1330:
   492  01FDA6  0E6F               	movlw	111
   493  01FDA8  6E15               	movwf	TM1640_Writer_Dates@Date,c
   494  01FDAA  0E02               	movlw	2
   495  01FDAC  EC27  F0FD         	call	_TM1640_Writer_Dates
   496                           
   497                           ;TM1640.c: 76: } break;
   498  01FDB0  D112               	goto	l1388
   499  01FDB2                     l1334:
   500  01FDB2  C019  F011         	movff	TM1640_Show_Numbers@Numbers,___awmod@dividend
   501  01FDB6  C01A  F012         	movff	TM1640_Show_Numbers@Numbers+1,___awmod@dividend+1
   502  01FDBA  0E00               	movlw	0
   503  01FDBC  6E14               	movwf	___awmod@divisor+1,c
   504  01FDBE  0E0A               	movlw	10
   505  01FDC0  6E13               	movwf	___awmod@divisor,c
   506  01FDC2  ECA1  F0FD         	call	___awmod	;wreg free
   507                           
   508                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   509                           ; Switch size 1, requested type "space"
   510                           ; Number of cases is 1, Range of values is 0 to 0
   511                           ; switch strategies available:
   512                           ; Name         Instructions Cycles
   513                           ; simple_byte            4     3 (average)
   514                           ;	Chosen strategy is simple_byte
   515  01FDC6  5012               	movf	?___awmod+1,w,c
   516  01FDC8  0A00               	xorlw	0	; case 0
   517  01FDCA  A4D8               	btfss	status,2,c
   518  01FDCC  D104               	goto	l1388
   519                           
   520                           ; Switch size 1, requested type "space"
   521                           ; Number of cases is 10, Range of values is 0 to 9
   522                           ; switch strategies available:
   523                           ; Name         Instructions Cycles
   524                           ; simple_byte           31    16 (average)
   525                           ;	Chosen strategy is simple_byte
   526  01FDCE  5011               	movf	?___awmod,w,c
   527  01FDD0  0A00               	xorlw	0	; case 0
   528  01FDD2  B4D8               	btfsc	status,2,c
   529  01FDD4  D7B2               	goto	l1312
   530  01FDD6  0A01               	xorlw	1	; case 1
   531  01FDD8  B4D8               	btfsc	status,2,c
   532  01FDDA  D7B5               	goto	l1314
   533  01FDDC  0A03               	xorlw	3	; case 2
   534  01FDDE  B4D8               	btfsc	status,2,c
   535  01FDE0  D7B8               	goto	l1316
   536  01FDE2  0A01               	xorlw	1	; case 3
   537  01FDE4  B4D8               	btfsc	status,2,c
   538  01FDE6  D7BB               	goto	l1318
   539  01FDE8  0A07               	xorlw	7	; case 4
   540  01FDEA  B4D8               	btfsc	status,2,c
   541  01FDEC  D7BE               	goto	l1320
   542  01FDEE  0A01               	xorlw	1	; case 5
   543  01FDF0  B4D8               	btfsc	status,2,c
   544  01FDF2  D7C1               	goto	l1322
   545  01FDF4  0A03               	xorlw	3	; case 6
   546  01FDF6  B4D8               	btfsc	status,2,c
   547  01FDF8  D7C4               	goto	l1324
   548  01FDFA  0A01               	xorlw	1	; case 7
   549  01FDFC  B4D8               	btfsc	status,2,c
   550  01FDFE  D7C7               	goto	l1326
   551  01FE00  0A0F               	xorlw	15	; case 8
   552  01FE02  B4D8               	btfsc	status,2,c
   553  01FE04  D7CA               	goto	l1328
   554  01FE06  0A01               	xorlw	1	; case 9
   555  01FE08  B4D8               	btfsc	status,2,c
   556  01FE0A  D7CD               	goto	l1330
   557  01FE0C  D0E4               	goto	l1388
   558                           
   559                           ;TM1640.c: 77: case 2: switch(Numbers % 10)
   560  01FE0E  D03C               	goto	l1358
   561  01FE10                     l1336:
   562  01FE10  0E3F               	movlw	63
   563  01FE12  6E15               	movwf	TM1640_Writer_Dates@Date,c
   564  01FE14  0E01               	movlw	1
   565  01FE16  EC27  F0FD         	call	_TM1640_Writer_Dates
   566  01FE1A  D0DD               	goto	l1388
   567  01FE1C                     l1338:
   568  01FE1C  0E06               	movlw	6
   569  01FE1E  6E15               	movwf	TM1640_Writer_Dates@Date,c
   570  01FE20  0E01               	movlw	1
   571  01FE22  EC27  F0FD         	call	_TM1640_Writer_Dates
   572  01FE26  D0D7               	goto	l1388
   573  01FE28                     l1340:
   574  01FE28  0E5B               	movlw	91
   575  01FE2A  6E15               	movwf	TM1640_Writer_Dates@Date,c
   576  01FE2C  0E01               	movlw	1
   577  01FE2E  EC27  F0FD         	call	_TM1640_Writer_Dates
   578  01FE32  D0D1               	goto	l1388
   579  01FE34                     l1342:
   580  01FE34  0E4F               	movlw	79
   581  01FE36  6E15               	movwf	TM1640_Writer_Dates@Date,c
   582  01FE38  0E01               	movlw	1
   583  01FE3A  EC27  F0FD         	call	_TM1640_Writer_Dates
   584  01FE3E  D0CB               	goto	l1388
   585  01FE40                     l1344:
   586  01FE40  0E66               	movlw	102
   587  01FE42  6E15               	movwf	TM1640_Writer_Dates@Date,c
   588  01FE44  0E01               	movlw	1
   589  01FE46  EC27  F0FD         	call	_TM1640_Writer_Dates
   590  01FE4A  D0C5               	goto	l1388
   591  01FE4C                     l1346:
   592  01FE4C  0E6D               	movlw	109
   593  01FE4E  6E15               	movwf	TM1640_Writer_Dates@Date,c
   594  01FE50  0E01               	movlw	1
   595  01FE52  EC27  F0FD         	call	_TM1640_Writer_Dates
   596  01FE56  D0BF               	goto	l1388
   597  01FE58                     l1348:
   598  01FE58  0E7D               	movlw	125
   599  01FE5A  6E15               	movwf	TM1640_Writer_Dates@Date,c
   600  01FE5C  0E01               	movlw	1
   601  01FE5E  EC27  F0FD         	call	_TM1640_Writer_Dates
   602  01FE62  D0B9               	goto	l1388
   603  01FE64                     l1350:
   604  01FE64  0E07               	movlw	7
   605  01FE66  6E15               	movwf	TM1640_Writer_Dates@Date,c
   606  01FE68  0E01               	movlw	1
   607  01FE6A  EC27  F0FD         	call	_TM1640_Writer_Dates
   608  01FE6E  D0B3               	goto	l1388
   609  01FE70                     l1352:
   610  01FE70  0E7F               	movlw	127
   611  01FE72  6E15               	movwf	TM1640_Writer_Dates@Date,c
   612  01FE74  0E01               	movlw	1
   613  01FE76  EC27  F0FD         	call	_TM1640_Writer_Dates
   614  01FE7A  D0AD               	goto	l1388
   615  01FE7C                     l1354:
   616  01FE7C  0E6F               	movlw	111
   617  01FE7E  6E15               	movwf	TM1640_Writer_Dates@Date,c
   618  01FE80  0E01               	movlw	1
   619  01FE82  EC27  F0FD         	call	_TM1640_Writer_Dates
   620                           
   621                           ;TM1640.c: 89: } break;
   622  01FE86  D0A7               	goto	l1388
   623  01FE88                     l1358:
   624  01FE88  C019  F011         	movff	TM1640_Show_Numbers@Numbers,___awmod@dividend
   625  01FE8C  C01A  F012         	movff	TM1640_Show_Numbers@Numbers+1,___awmod@dividend+1
   626  01FE90  0E00               	movlw	0
   627  01FE92  6E14               	movwf	___awmod@divisor+1,c
   628  01FE94  0E0A               	movlw	10
   629  01FE96  6E13               	movwf	___awmod@divisor,c
   630  01FE98  ECA1  F0FD         	call	___awmod	;wreg free
   631                           
   632                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   633                           ; Switch size 1, requested type "space"
   634                           ; Number of cases is 1, Range of values is 0 to 0
   635                           ; switch strategies available:
   636                           ; Name         Instructions Cycles
   637                           ; simple_byte            4     3 (average)
   638                           ;	Chosen strategy is simple_byte
   639  01FE9C  5012               	movf	?___awmod+1,w,c
   640  01FE9E  0A00               	xorlw	0	; case 0
   641  01FEA0  A4D8               	btfss	status,2,c
   642  01FEA2  D099               	goto	l1388
   643                           
   644                           ; Switch size 1, requested type "space"
   645                           ; Number of cases is 10, Range of values is 0 to 9
   646                           ; switch strategies available:
   647                           ; Name         Instructions Cycles
   648                           ; simple_byte           31    16 (average)
   649                           ;	Chosen strategy is simple_byte
   650  01FEA4  5011               	movf	?___awmod,w,c
   651  01FEA6  0A00               	xorlw	0	; case 0
   652  01FEA8  B4D8               	btfsc	status,2,c
   653  01FEAA  D7B2               	goto	l1336
   654  01FEAC  0A01               	xorlw	1	; case 1
   655  01FEAE  B4D8               	btfsc	status,2,c
   656  01FEB0  D7B5               	goto	l1338
   657  01FEB2  0A03               	xorlw	3	; case 2
   658  01FEB4  B4D8               	btfsc	status,2,c
   659  01FEB6  D7B8               	goto	l1340
   660  01FEB8  0A01               	xorlw	1	; case 3
   661  01FEBA  B4D8               	btfsc	status,2,c
   662  01FEBC  D7BB               	goto	l1342
   663  01FEBE  0A07               	xorlw	7	; case 4
   664  01FEC0  B4D8               	btfsc	status,2,c
   665  01FEC2  D7BE               	goto	l1344
   666  01FEC4  0A01               	xorlw	1	; case 5
   667  01FEC6  B4D8               	btfsc	status,2,c
   668  01FEC8  D7C1               	goto	l1346
   669  01FECA  0A03               	xorlw	3	; case 6
   670  01FECC  B4D8               	btfsc	status,2,c
   671  01FECE  D7C4               	goto	l1348
   672  01FED0  0A01               	xorlw	1	; case 7
   673  01FED2  B4D8               	btfsc	status,2,c
   674  01FED4  D7C7               	goto	l1350
   675  01FED6  0A0F               	xorlw	15	; case 8
   676  01FED8  B4D8               	btfsc	status,2,c
   677  01FEDA  D7CA               	goto	l1352
   678  01FEDC  0A01               	xorlw	1	; case 9
   679  01FEDE  B4D8               	btfsc	status,2,c
   680  01FEE0  D7CD               	goto	l1354
   681  01FEE2  D079               	goto	l1388
   682                           
   683                           ;TM1640.c: 90: case 3: switch(Numbers % 10)
   684  01FEE4  D03C               	goto	l1382
   685  01FEE6                     l1360:
   686  01FEE6  0E3F               	movlw	63
   687  01FEE8  6E15               	movwf	TM1640_Writer_Dates@Date,c
   688  01FEEA  0E00               	movlw	0
   689  01FEEC  EC27  F0FD         	call	_TM1640_Writer_Dates
   690  01FEF0  D072               	goto	l1388
   691  01FEF2                     l1362:
   692  01FEF2  0E06               	movlw	6
   693  01FEF4  6E15               	movwf	TM1640_Writer_Dates@Date,c
   694  01FEF6  0E00               	movlw	0
   695  01FEF8  EC27  F0FD         	call	_TM1640_Writer_Dates
   696  01FEFC  D06C               	goto	l1388
   697  01FEFE                     l1364:
   698  01FEFE  0E5B               	movlw	91
   699  01FF00  6E15               	movwf	TM1640_Writer_Dates@Date,c
   700  01FF02  0E00               	movlw	0
   701  01FF04  EC27  F0FD         	call	_TM1640_Writer_Dates
   702  01FF08  D066               	goto	l1388
   703  01FF0A                     l1366:
   704  01FF0A  0E4F               	movlw	79
   705  01FF0C  6E15               	movwf	TM1640_Writer_Dates@Date,c
   706  01FF0E  0E00               	movlw	0
   707  01FF10  EC27  F0FD         	call	_TM1640_Writer_Dates
   708  01FF14  D060               	goto	l1388
   709  01FF16                     l1368:
   710  01FF16  0E66               	movlw	102
   711  01FF18  6E15               	movwf	TM1640_Writer_Dates@Date,c
   712  01FF1A  0E00               	movlw	0
   713  01FF1C  EC27  F0FD         	call	_TM1640_Writer_Dates
   714  01FF20  D05A               	goto	l1388
   715  01FF22                     l1370:
   716  01FF22  0E6D               	movlw	109
   717  01FF24  6E15               	movwf	TM1640_Writer_Dates@Date,c
   718  01FF26  0E00               	movlw	0
   719  01FF28  EC27  F0FD         	call	_TM1640_Writer_Dates
   720  01FF2C  D054               	goto	l1388
   721  01FF2E                     l1372:
   722  01FF2E  0E7D               	movlw	125
   723  01FF30  6E15               	movwf	TM1640_Writer_Dates@Date,c
   724  01FF32  0E00               	movlw	0
   725  01FF34  EC27  F0FD         	call	_TM1640_Writer_Dates
   726  01FF38  D04E               	goto	l1388
   727  01FF3A                     l1374:
   728  01FF3A  0E07               	movlw	7
   729  01FF3C  6E15               	movwf	TM1640_Writer_Dates@Date,c
   730  01FF3E  0E00               	movlw	0
   731  01FF40  EC27  F0FD         	call	_TM1640_Writer_Dates
   732  01FF44  D048               	goto	l1388
   733  01FF46                     l1376:
   734  01FF46  0E7F               	movlw	127
   735  01FF48  6E15               	movwf	TM1640_Writer_Dates@Date,c
   736  01FF4A  0E00               	movlw	0
   737  01FF4C  EC27  F0FD         	call	_TM1640_Writer_Dates
   738  01FF50  D042               	goto	l1388
   739  01FF52                     l1378:
   740  01FF52  0E6F               	movlw	111
   741  01FF54  6E15               	movwf	TM1640_Writer_Dates@Date,c
   742  01FF56  0E00               	movlw	0
   743  01FF58  EC27  F0FD         	call	_TM1640_Writer_Dates
   744                           
   745                           ;TM1640.c: 102: } break;
   746  01FF5C  D03C               	goto	l1388
   747  01FF5E                     l1382:
   748  01FF5E  C019  F011         	movff	TM1640_Show_Numbers@Numbers,___awmod@dividend
   749  01FF62  C01A  F012         	movff	TM1640_Show_Numbers@Numbers+1,___awmod@dividend+1
   750  01FF66  0E00               	movlw	0
   751  01FF68  6E14               	movwf	___awmod@divisor+1,c
   752  01FF6A  0E0A               	movlw	10
   753  01FF6C  6E13               	movwf	___awmod@divisor,c
   754  01FF6E  ECA1  F0FD         	call	___awmod	;wreg free
   755                           
   756                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   757                           ; Switch size 1, requested type "space"
   758                           ; Number of cases is 1, Range of values is 0 to 0
   759                           ; switch strategies available:
   760                           ; Name         Instructions Cycles
   761                           ; simple_byte            4     3 (average)
   762                           ;	Chosen strategy is simple_byte
   763  01FF72  5012               	movf	?___awmod+1,w,c
   764  01FF74  0A00               	xorlw	0	; case 0
   765  01FF76  A4D8               	btfss	status,2,c
   766  01FF78  D02E               	goto	l1388
   767                           
   768                           ; Switch size 1, requested type "space"
   769                           ; Number of cases is 10, Range of values is 0 to 9
   770                           ; switch strategies available:
   771                           ; Name         Instructions Cycles
   772                           ; simple_byte           31    16 (average)
   773                           ;	Chosen strategy is simple_byte
   774  01FF7A  5011               	movf	?___awmod,w,c
   775  01FF7C  0A00               	xorlw	0	; case 0
   776  01FF7E  B4D8               	btfsc	status,2,c
   777  01FF80  D7B2               	goto	l1360
   778  01FF82  0A01               	xorlw	1	; case 1
   779  01FF84  B4D8               	btfsc	status,2,c
   780  01FF86  D7B5               	goto	l1362
   781  01FF88  0A03               	xorlw	3	; case 2
   782  01FF8A  B4D8               	btfsc	status,2,c
   783  01FF8C  D7B8               	goto	l1364
   784  01FF8E  0A01               	xorlw	1	; case 3
   785  01FF90  B4D8               	btfsc	status,2,c
   786  01FF92  D7BB               	goto	l1366
   787  01FF94  0A07               	xorlw	7	; case 4
   788  01FF96  B4D8               	btfsc	status,2,c
   789  01FF98  D7BE               	goto	l1368
   790  01FF9A  0A01               	xorlw	1	; case 5
   791  01FF9C  B4D8               	btfsc	status,2,c
   792  01FF9E  D7C1               	goto	l1370
   793  01FFA0  0A03               	xorlw	3	; case 6
   794  01FFA2  B4D8               	btfsc	status,2,c
   795  01FFA4  D7C4               	goto	l1372
   796  01FFA6  0A01               	xorlw	1	; case 7
   797  01FFA8  B4D8               	btfsc	status,2,c
   798  01FFAA  D7C7               	goto	l1374
   799  01FFAC  0A0F               	xorlw	15	; case 8
   800  01FFAE  B4D8               	btfsc	status,2,c
   801  01FFB0  D7CA               	goto	l1376
   802  01FFB2  0A01               	xorlw	1	; case 9
   803  01FFB4  B4D8               	btfsc	status,2,c
   804  01FFB6  D7CD               	goto	l1378
   805                           
   806                           ;TM1640.c: 103: }
   807  01FFB8  D00E               	goto	l1388
   808  01FFBA                     l1386:
   809  01FFBA  501B               	movf	TM1640_Show_Numbers@Num,w,c
   810                           
   811                           ; Switch size 1, requested type "space"
   812                           ; Number of cases is 4, Range of values is 0 to 3
   813                           ; switch strategies available:
   814                           ; Name         Instructions Cycles
   815                           ; simple_byte           13     7 (average)
   816                           ;	Chosen strategy is simple_byte
   817  01FFBC  0A00               	xorlw	0	; case 0
   818  01FFBE  B4D8               	btfsc	status,2,c
   819  01FFC0  D68D               	goto	l1310
   820  01FFC2  0A01               	xorlw	1	; case 1
   821  01FFC4  B4D8               	btfsc	status,2,c
   822  01FFC6  D6F5               	goto	l1334
   823  01FFC8  0A03               	xorlw	3	; case 2
   824  01FFCA  B4D8               	btfsc	status,2,c
   825  01FFCC  D75D               	goto	l1358
   826  01FFCE  0A01               	xorlw	1	; case 3
   827  01FFD0  B4D8               	btfsc	status,2,c
   828  01FFD2  D7C5               	goto	l1382
   829  01FFD4  D000               	goto	l1388
   830  01FFD6                     l1388:
   831                           
   832                           ;TM1640.c: 104: ++Num;
   833  01FFD6  2A1B               	incf	TM1640_Show_Numbers@Num,f,c
   834                           
   835                           ;TM1640.c: 105: Numbers /= 10;
   836  01FFD8  C019  F011         	movff	TM1640_Show_Numbers@Numbers,___awdiv@dividend
   837  01FFDC  C01A  F012         	movff	TM1640_Show_Numbers@Numbers+1,___awdiv@dividend+1
   838  01FFE0  0E00               	movlw	0
   839  01FFE2  6E14               	movwf	___awdiv@divisor+1,c
   840  01FFE4  0E0A               	movlw	10
   841  01FFE6  6E13               	movwf	___awdiv@divisor,c
   842  01FFE8  ECE2  F0FD         	call	___awdiv	;wreg free
   843  01FFEC  C011  F019         	movff	?___awdiv,TM1640_Show_Numbers@Numbers
   844  01FFF0  C012  F01A         	movff	?___awdiv+1,TM1640_Show_Numbers@Numbers+1
   845  01FFF4  D000               	goto	l1392
   846  01FFF6                     l1392:
   847  01FFF6  0E03               	movlw	3
   848  01FFF8  641B               	cpfsgt	TM1640_Show_Numbers@Num,c
   849  01FFFA  D7DF               	goto	l1386
   850  01FFFC  0012               	return	
   851  01FFFE  0012               	return		;funcret
   852  020000                     __end_of_TM1640_Show_Numbers:
   853                           	opt stack 0
   854                           tblptru	equ	0xFF8
   855                           tblptrh	equ	0xFF7
   856                           tblptrl	equ	0xFF6
   857                           tablat	equ	0xFF5
   858                           postinc0	equ	0xFEE
   859                           postdec1	equ	0xFE5
   860                           fsr1l	equ	0xFE1
   861                           status	equ	0xFD8
   862                           
   863 ;; *************** function ___awmod *****************
   864 ;; Defined at:
   865 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
   866 ;; Parameters:    Size  Location     Type
   867 ;;  dividend        2    0[COMRAM] int 
   868 ;;  divisor         2    2[COMRAM] int 
   869 ;; Auto vars:     Size  Location     Type
   870 ;;  sign            1    5[COMRAM] unsigned char 
   871 ;;  counter         1    4[COMRAM] unsigned char 
   872 ;; Return value:  Size  Location     Type
   873 ;;                  2    0[COMRAM] int 
   874 ;; Registers used:
   875 ;;		wreg, status,2, status,0
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   881 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   882 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   884 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   885 ;;Total ram usage:        6 bytes
   886 ;; Hardware stack levels used:    1
   887 ;; This function calls:
   888 ;;		Nothing
   889 ;; This function is called by:
   890 ;;		_TM1640_Show_Numbers
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894                           	psect	text2
   895  01FB42                     __ptext2:
   896                           	opt stack 0
   897  01FB42                     ___awmod:
   898                           	opt stack 29
   899                           
   900                           ;incstack = 0
   901  01FB42  0E00               	movlw	0
   902  01FB44  6E16               	movwf	___awmod@sign,c
   903  01FB46  AE12               	btfss	___awmod@dividend+1,7,c
   904  01FB48  D007               	goto	l1258
   905  01FB4A  6C11               	negf	___awmod@dividend,c
   906  01FB4C  1E12               	comf	___awmod@dividend+1,f,c
   907  01FB4E  B0D8               	btfsc	status,0,c
   908  01FB50  2A12               	incf	___awmod@dividend+1,f,c
   909  01FB52  0E01               	movlw	1
   910  01FB54  6E16               	movwf	___awmod@sign,c
   911  01FB56  D000               	goto	l1258
   912  01FB58                     l1258:
   913  01FB58  AE14               	btfss	___awmod@divisor+1,7,c
   914  01FB5A  D005               	goto	l1262
   915  01FB5C  6C13               	negf	___awmod@divisor,c
   916  01FB5E  1E14               	comf	___awmod@divisor+1,f,c
   917  01FB60  B0D8               	btfsc	status,0,c
   918  01FB62  2A14               	incf	___awmod@divisor+1,f,c
   919  01FB64  D000               	goto	l1262
   920  01FB66                     l1262:
   921  01FB66  5013               	movf	___awmod@divisor,w,c
   922  01FB68  1014               	iorwf	___awmod@divisor+1,w,c
   923  01FB6A  B4D8               	btfsc	status,2,c
   924  01FB6C  D01D               	goto	l1278
   925  01FB6E  0E01               	movlw	1
   926  01FB70  6E15               	movwf	___awmod@counter,c
   927  01FB72  D005               	goto	l1268
   928  01FB74                     l1266:
   929  01FB74  90D8               	bcf	status,0,c
   930  01FB76  3613               	rlcf	___awmod@divisor,f,c
   931  01FB78  3614               	rlcf	___awmod@divisor+1,f,c
   932  01FB7A  2A15               	incf	___awmod@counter,f,c
   933  01FB7C  D000               	goto	l1268
   934  01FB7E                     l1268:
   935  01FB7E  BE14               	btfsc	___awmod@divisor+1,7,c
   936  01FB80  D002               	goto	l1270
   937  01FB82  D7F8               	goto	l1266
   938  01FB84  D000               	goto	l1270
   939  01FB86                     l1270:
   940  01FB86  5013               	movf	___awmod@divisor,w,c
   941  01FB88  5C11               	subwf	___awmod@dividend,w,c
   942  01FB8A  5014               	movf	___awmod@divisor+1,w,c
   943  01FB8C  5812               	subwfb	___awmod@dividend+1,w,c
   944  01FB8E  A0D8               	btfss	status,0,c
   945  01FB90  D005               	goto	l1274
   946  01FB92  5013               	movf	___awmod@divisor,w,c
   947  01FB94  5E11               	subwf	___awmod@dividend,f,c
   948  01FB96  5014               	movf	___awmod@divisor+1,w,c
   949  01FB98  5A12               	subwfb	___awmod@dividend+1,f,c
   950  01FB9A  D000               	goto	l1274
   951  01FB9C                     l1274:
   952  01FB9C  90D8               	bcf	status,0,c
   953  01FB9E  3214               	rrcf	___awmod@divisor+1,f,c
   954  01FBA0  3213               	rrcf	___awmod@divisor,f,c
   955  01FBA2  2E15               	decfsz	___awmod@counter,f,c
   956  01FBA4  D7F0               	goto	l1270
   957  01FBA6  D000               	goto	l1278
   958  01FBA8                     l1278:
   959  01FBA8  5016               	movf	___awmod@sign,w,c
   960  01FBAA  B4D8               	btfsc	status,2,c
   961  01FBAC  D005               	goto	l1282
   962  01FBAE  6C11               	negf	___awmod@dividend,c
   963  01FBB0  1E12               	comf	___awmod@dividend+1,f,c
   964  01FBB2  B0D8               	btfsc	status,0,c
   965  01FBB4  2A12               	incf	___awmod@dividend+1,f,c
   966  01FBB6  D000               	goto	l1282
   967  01FBB8                     l1282:
   968  01FBB8  C011  F011         	movff	___awmod@dividend,?___awmod
   969  01FBBC  C012  F012         	movff	___awmod@dividend+1,?___awmod+1
   970  01FBC0  0012               	return	
   971  01FBC2  0012               	return		;funcret
   972  01FBC4                     __end_of___awmod:
   973                           	opt stack 0
   974                           tblptru	equ	0xFF8
   975                           tblptrh	equ	0xFF7
   976                           tblptrl	equ	0xFF6
   977                           tablat	equ	0xFF5
   978                           postinc0	equ	0xFEE
   979                           postdec1	equ	0xFE5
   980                           fsr1l	equ	0xFE1
   981                           status	equ	0xFD8
   982                           
   983 ;; *************** function ___awdiv *****************
   984 ;; Defined at:
   985 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;  dividend        2    0[COMRAM] int 
   988 ;;  divisor         2    2[COMRAM] int 
   989 ;; Auto vars:     Size  Location     Type
   990 ;;  quotient        2    6[COMRAM] int 
   991 ;;  sign            1    5[COMRAM] unsigned char 
   992 ;;  counter         1    4[COMRAM] unsigned char 
   993 ;; Return value:  Size  Location     Type
   994 ;;                  2    0[COMRAM] int 
   995 ;; Registers used:
   996 ;;		wreg, status,2, status,0
   997 ;; Tracked objects:
   998 ;;		On entry : 0/0
   999 ;;		On exit  : 0/0
  1000 ;;		Unchanged: 0/0
  1001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1002 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1003 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1005 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1006 ;;Total ram usage:        8 bytes
  1007 ;; Hardware stack levels used:    1
  1008 ;; This function calls:
  1009 ;;		Nothing
  1010 ;; This function is called by:
  1011 ;;		_TM1640_Show_Numbers
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           
  1015                           	psect	text3
  1016  01FBC4                     __ptext3:
  1017                           	opt stack 0
  1018  01FBC4                     ___awdiv:
  1019                           	opt stack 29
  1020                           
  1021                           ;incstack = 0
  1022  01FBC4  0E00               	movlw	0
  1023  01FBC6  6E16               	movwf	___awdiv@sign,c
  1024  01FBC8  AE14               	btfss	___awdiv@divisor+1,7,c
  1025  01FBCA  D007               	goto	l1214
  1026  01FBCC  6C13               	negf	___awdiv@divisor,c
  1027  01FBCE  1E14               	comf	___awdiv@divisor+1,f,c
  1028  01FBD0  B0D8               	btfsc	status,0,c
  1029  01FBD2  2A14               	incf	___awdiv@divisor+1,f,c
  1030  01FBD4  0E01               	movlw	1
  1031  01FBD6  6E16               	movwf	___awdiv@sign,c
  1032  01FBD8  D000               	goto	l1214
  1033  01FBDA                     l1214:
  1034  01FBDA  AE12               	btfss	___awdiv@dividend+1,7,c
  1035  01FBDC  D007               	goto	l1220
  1036  01FBDE  6C11               	negf	___awdiv@dividend,c
  1037  01FBE0  1E12               	comf	___awdiv@dividend+1,f,c
  1038  01FBE2  B0D8               	btfsc	status,0,c
  1039  01FBE4  2A12               	incf	___awdiv@dividend+1,f,c
  1040  01FBE6  0E01               	movlw	1
  1041  01FBE8  1A16               	xorwf	___awdiv@sign,f,c
  1042  01FBEA  D000               	goto	l1220
  1043  01FBEC                     l1220:
  1044  01FBEC  0E00               	movlw	0
  1045  01FBEE  6E18               	movwf	___awdiv@quotient+1,c
  1046  01FBF0  0E00               	movlw	0
  1047  01FBF2  6E17               	movwf	___awdiv@quotient,c
  1048  01FBF4  5013               	movf	___awdiv@divisor,w,c
  1049  01FBF6  1014               	iorwf	___awdiv@divisor+1,w,c
  1050  01FBF8  B4D8               	btfsc	status,2,c
  1051  01FBFA  D021               	goto	l1242
  1052  01FBFC  0E01               	movlw	1
  1053  01FBFE  6E15               	movwf	___awdiv@counter,c
  1054  01FC00  D005               	goto	l1228
  1055  01FC02                     l1226:
  1056  01FC02  90D8               	bcf	status,0,c
  1057  01FC04  3613               	rlcf	___awdiv@divisor,f,c
  1058  01FC06  3614               	rlcf	___awdiv@divisor+1,f,c
  1059  01FC08  2A15               	incf	___awdiv@counter,f,c
  1060  01FC0A  D000               	goto	l1228
  1061  01FC0C                     l1228:
  1062  01FC0C  BE14               	btfsc	___awdiv@divisor+1,7,c
  1063  01FC0E  D002               	goto	l1230
  1064  01FC10  D7F8               	goto	l1226
  1065  01FC12  D000               	goto	l1230
  1066  01FC14                     l1230:
  1067  01FC14  90D8               	bcf	status,0,c
  1068  01FC16  3617               	rlcf	___awdiv@quotient,f,c
  1069  01FC18  3618               	rlcf	___awdiv@quotient+1,f,c
  1070  01FC1A  5013               	movf	___awdiv@divisor,w,c
  1071  01FC1C  5C11               	subwf	___awdiv@dividend,w,c
  1072  01FC1E  5014               	movf	___awdiv@divisor+1,w,c
  1073  01FC20  5812               	subwfb	___awdiv@dividend+1,w,c
  1074  01FC22  A0D8               	btfss	status,0,c
  1075  01FC24  D006               	goto	l1238
  1076  01FC26  5013               	movf	___awdiv@divisor,w,c
  1077  01FC28  5E11               	subwf	___awdiv@dividend,f,c
  1078  01FC2A  5014               	movf	___awdiv@divisor+1,w,c
  1079  01FC2C  5A12               	subwfb	___awdiv@dividend+1,f,c
  1080  01FC2E  8017               	bsf	___awdiv@quotient,0,c
  1081  01FC30  D000               	goto	l1238
  1082  01FC32                     l1238:
  1083  01FC32  90D8               	bcf	status,0,c
  1084  01FC34  3214               	rrcf	___awdiv@divisor+1,f,c
  1085  01FC36  3213               	rrcf	___awdiv@divisor,f,c
  1086  01FC38  2E15               	decfsz	___awdiv@counter,f,c
  1087  01FC3A  D7EC               	goto	l1230
  1088  01FC3C  D000               	goto	l1242
  1089  01FC3E                     l1242:
  1090  01FC3E  5016               	movf	___awdiv@sign,w,c
  1091  01FC40  B4D8               	btfsc	status,2,c
  1092  01FC42  D005               	goto	l1246
  1093  01FC44  6C17               	negf	___awdiv@quotient,c
  1094  01FC46  1E18               	comf	___awdiv@quotient+1,f,c
  1095  01FC48  B0D8               	btfsc	status,0,c
  1096  01FC4A  2A18               	incf	___awdiv@quotient+1,f,c
  1097  01FC4C  D000               	goto	l1246
  1098  01FC4E                     l1246:
  1099  01FC4E  C017  F011         	movff	___awdiv@quotient,?___awdiv
  1100  01FC52  C018  F012         	movff	___awdiv@quotient+1,?___awdiv+1
  1101  01FC56  0012               	return	
  1102  01FC58  0012               	return		;funcret
  1103  01FC5A                     __end_of___awdiv:
  1104                           	opt stack 0
  1105                           tblptru	equ	0xFF8
  1106                           tblptrh	equ	0xFF7
  1107                           tblptrl	equ	0xFF6
  1108                           tablat	equ	0xFF5
  1109                           postinc0	equ	0xFEE
  1110                           postdec1	equ	0xFE5
  1111                           fsr1l	equ	0xFE1
  1112                           status	equ	0xFD8
  1113                           
  1114 ;; *************** function _TM1640_Writer_Dates *****************
  1115 ;; Defined at:
  1116 ;;		line 109 in file "User/TM1640.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;  Addr            1    wreg     const unsigned char 
  1119 ;;  Date            1    4[COMRAM] const unsigned char 
  1120 ;; Auto vars:     Size  Location     Type
  1121 ;;  Addr            1    5[COMRAM] const unsigned char 
  1122 ;; Return value:  Size  Location     Type
  1123 ;;		None               void
  1124 ;; Registers used:
  1125 ;;		wreg, status,2, status,0, cstack
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1131 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1132 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1134 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1135 ;;Total ram usage:        2 bytes
  1136 ;; Hardware stack levels used:    1
  1137 ;; Hardware stack levels required when called:    2
  1138 ;; This function calls:
  1139 ;;		_TM1640_Start
  1140 ;;		_TM1640_Stop
  1141 ;;		_TM1640_Writer_Byte
  1142 ;; This function is called by:
  1143 ;;		_TM1640_Show_Numbers
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147                           	psect	text4
  1148  01FA4E                     __ptext4:
  1149                           	opt stack 0
  1150  01FA4E                     _TM1640_Writer_Dates:
  1151                           	opt stack 27
  1152                           
  1153                           ;incstack = 0
  1154                           ;TM1640_Writer_Dates@Addr stored from wreg
  1155  01FA4E  6E16               	movwf	TM1640_Writer_Dates@Addr,c
  1156                           
  1157                           ;TM1640.c: 111: if((Addr >= 0) && (Addr <= 3))
  1158  01FA50  0E04               	movlw	4
  1159  01FA52  6016               	cpfslt	TM1640_Writer_Dates@Addr,c
  1160  01FA54  0012               	return	
  1161                           
  1162                           ;TM1640.c: 112: {
  1163                           ;TM1640.c: 113: TM1640_Start();
  1164  01FA56  EC38  F0FD         	call	_TM1640_Start	;wreg free
  1165                           
  1166                           ;TM1640.c: 114: TM1640_Writer_Byte(0xC0 + Addr);
  1167  01FA5A  5016               	movf	TM1640_Writer_Dates@Addr,w,c
  1168  01FA5C  0FC0               	addlw	192
  1169  01FA5E  EC82  F0FD         	call	_TM1640_Writer_Byte
  1170                           
  1171                           ;TM1640.c: 115: TM1640_Writer_Byte(Date);
  1172  01FA62  5015               	movf	TM1640_Writer_Dates@Date,w,c
  1173  01FA64  EC82  F0FD         	call	_TM1640_Writer_Byte
  1174                           
  1175                           ;TM1640.c: 116: TM1640_Stop();
  1176  01FA68  EC4A  F0FD         	call	_TM1640_Stop	;wreg free
  1177  01FA6C  0012               	return	
  1178  01FA6E  0012               	return		;funcret
  1179  01FA70                     __end_of_TM1640_Writer_Dates:
  1180                           	opt stack 0
  1181                           tblptru	equ	0xFF8
  1182                           tblptrh	equ	0xFF7
  1183                           tblptrl	equ	0xFF6
  1184                           tablat	equ	0xFF5
  1185                           postinc0	equ	0xFEE
  1186                           postdec1	equ	0xFE5
  1187                           fsr1l	equ	0xFE1
  1188                           status	equ	0xFD8
  1189                           
  1190 ;; *************** function _Init_System *****************
  1191 ;; Defined at:
  1192 ;;		line 30 in file "User/main.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;		None
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;		None
  1197 ;; Return value:  Size  Location     Type
  1198 ;;		None               void
  1199 ;; Registers used:
  1200 ;;		wreg, status,2, status,0, cstack
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1210 ;;Total ram usage:        0 bytes
  1211 ;; Hardware stack levels used:    1
  1212 ;; Hardware stack levels required when called:    3
  1213 ;; This function calls:
  1214 ;;		_Init_Key
  1215 ;;		_Init_LED
  1216 ;;		_Init_TM1640
  1217 ;; This function is called by:
  1218 ;;		_main
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           	psect	text5
  1223  01FA00                     __ptext5:
  1224                           	opt stack 0
  1225  01FA00                     _Init_System:
  1226                           	opt stack 27
  1227                           
  1228                           ;main.c: 32: Init_LED();
  1229                           
  1230                           ;incstack = 0
  1231  01FA00  ECF9  F0FC         	call	_Init_LED	;wreg free
  1232                           
  1233                           ;main.c: 33: Init_Key();
  1234  01FA04  ECF3  F0FC         	call	_Init_Key	;wreg free
  1235                           
  1236                           ;main.c: 34: Init_TM1640();
  1237  01FA08  EC5C  F0FD         	call	_Init_TM1640	;wreg free
  1238  01FA0C  0012               	return		;funcret
  1239  01FA0E                     __end_of_Init_System:
  1240                           	opt stack 0
  1241                           tblptru	equ	0xFF8
  1242                           tblptrh	equ	0xFF7
  1243                           tblptrl	equ	0xFF6
  1244                           tablat	equ	0xFF5
  1245                           postinc0	equ	0xFEE
  1246                           postdec1	equ	0xFE5
  1247                           fsr1l	equ	0xFE1
  1248                           status	equ	0xFD8
  1249                           
  1250 ;; *************** function _Init_TM1640 *****************
  1251 ;; Defined at:
  1252 ;;		line 162 in file "User/TM1640.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;		None
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;		None
  1257 ;; Return value:  Size  Location     Type
  1258 ;;		None               void
  1259 ;; Registers used:
  1260 ;;		wreg, status,2, status,0, cstack
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1270 ;;Total ram usage:        0 bytes
  1271 ;; Hardware stack levels used:    1
  1272 ;; Hardware stack levels required when called:    2
  1273 ;; This function calls:
  1274 ;;		_TM1640_Start
  1275 ;;		_TM1640_Stop
  1276 ;;		_TM1640_Writer_Byte
  1277 ;; This function is called by:
  1278 ;;		_Init_System
  1279 ;; This function uses a non-reentrant model
  1280 ;;
  1281                           
  1282                           	psect	text6
  1283  01FAB8                     __ptext6:
  1284                           	opt stack 0
  1285  01FAB8                     _Init_TM1640:
  1286                           	opt stack 27
  1287                           
  1288                           ;TM1640.c: 164: TRISCbits.TRISC3 = 0;
  1289                           
  1290                           ;incstack = 0
  1291  01FAB8  9694               	bcf	3988,3,c	;volatile
  1292                           
  1293                           ;TM1640.c: 165: TRISCbits.TRISC4 = 0;
  1294  01FABA  9894               	bcf	3988,4,c	;volatile
  1295                           
  1296                           ;TM1640.c: 166: TM1640_Stop();
  1297  01FABC  EC4A  F0FD         	call	_TM1640_Stop	;wreg free
  1298                           
  1299                           ;TM1640.c: 168: TM1640_Start();
  1300  01FAC0  EC38  F0FD         	call	_TM1640_Start	;wreg free
  1301                           
  1302                           ;TM1640.c: 169: TM1640_Writer_Byte(0x44);
  1303  01FAC4  0E44               	movlw	68
  1304  01FAC6  EC82  F0FD         	call	_TM1640_Writer_Byte
  1305                           
  1306                           ;TM1640.c: 170: TM1640_Stop();
  1307  01FACA  EC4A  F0FD         	call	_TM1640_Stop	;wreg free
  1308                           
  1309                           ;TM1640.c: 172: TM1640_Start();
  1310  01FACE  EC38  F0FD         	call	_TM1640_Start	;wreg free
  1311                           
  1312                           ;TM1640.c: 173: TM1640_Writer_Byte(0x8F);
  1313  01FAD2  0E8F               	movlw	143
  1314  01FAD4  EC82  F0FD         	call	_TM1640_Writer_Byte
  1315                           
  1316                           ;TM1640.c: 174: TM1640_Stop();
  1317  01FAD8  EC4A  F0FD         	call	_TM1640_Stop	;wreg free
  1318  01FADC  0012               	return		;funcret
  1319  01FADE                     __end_of_Init_TM1640:
  1320                           	opt stack 0
  1321                           tblptru	equ	0xFF8
  1322                           tblptrh	equ	0xFF7
  1323                           tblptrl	equ	0xFF6
  1324                           tablat	equ	0xFF5
  1325                           postinc0	equ	0xFEE
  1326                           postdec1	equ	0xFE5
  1327                           fsr1l	equ	0xFE1
  1328                           status	equ	0xFD8
  1329                           
  1330 ;; *************** function _TM1640_Writer_Byte *****************
  1331 ;; Defined at:
  1332 ;;		line 120 in file "User/TM1640.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;  Date            1    wreg     const unsigned char 
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;  Date            1    2[COMRAM] const unsigned char 
  1337 ;;  mask            1    3[COMRAM] unsigned char 
  1338 ;; Return value:  Size  Location     Type
  1339 ;;		None               void
  1340 ;; Registers used:
  1341 ;;		wreg, status,2, status,0, cstack
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/0
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1348 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1350 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1351 ;;Total ram usage:        2 bytes
  1352 ;; Hardware stack levels used:    1
  1353 ;; Hardware stack levels required when called:    1
  1354 ;; This function calls:
  1355 ;;		_TM1640_Delay
  1356 ;; This function is called by:
  1357 ;;		_TM1640_Writer_Dates
  1358 ;;		_Init_TM1640
  1359 ;;		_Open_Display
  1360 ;;		_Disable_Display
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           	psect	text7
  1365  01FB04                     __ptext7:
  1366                           	opt stack 0
  1367  01FB04                     _TM1640_Writer_Byte:
  1368                           	opt stack 27
  1369                           
  1370                           ;incstack = 0
  1371                           ;TM1640_Writer_Byte@Date stored from wreg
  1372  01FB04  6E13               	movwf	TM1640_Writer_Byte@Date,c
  1373                           
  1374                           ;TM1640.c: 122: unsigned char mask;
  1375                           ;TM1640.c: 124: for(mask=0x01; mask; mask<<=1)
  1376  01FB06  0E01               	movlw	1
  1377  01FB08  6E14               	movwf	TM1640_Writer_Byte@mask,c
  1378  01FB0A  D017               	goto	l830
  1379  01FB0C                     l180:
  1380                           
  1381                           ;TM1640.c: 125: {
  1382                           ;TM1640.c: 126: RC3 = 0;
  1383  01FB0C  9682               	bcf	3970,3,c	;volatile
  1384                           
  1385                           ;TM1640.c: 127: TM1640_Delay(1);
  1386  01FB0E  0E01               	movlw	1
  1387  01FB10  EC1A  F0FD         	call	_TM1640_Delay
  1388                           
  1389                           ;TM1640.c: 128: if(mask & Date)
  1390  01FB14  5014               	movf	TM1640_Writer_Byte@mask,w,c
  1391  01FB16  1413               	andwf	TM1640_Writer_Byte@Date,w,c
  1392  01FB18  0900               	iorlw	0
  1393  01FB1A  B4D8               	btfsc	status,2,c
  1394  01FB1C  D002               	goto	l181
  1395                           
  1396                           ;TM1640.c: 129: RC4 = 1;
  1397  01FB1E  8882               	bsf	3970,4,c	;volatile
  1398  01FB20  D002               	goto	l824
  1399  01FB22                     l181:
  1400                           
  1401                           ;TM1640.c: 130: else
  1402                           ;TM1640.c: 131: RC4 = 0;
  1403  01FB22  9882               	bcf	3970,4,c	;volatile
  1404  01FB24  D000               	goto	l824
  1405  01FB26                     l824:
  1406                           
  1407                           ;TM1640.c: 132: TM1640_Delay(1);
  1408  01FB26  0E01               	movlw	1
  1409  01FB28  EC1A  F0FD         	call	_TM1640_Delay
  1410                           
  1411                           ;TM1640.c: 133: RC3 = 1;
  1412  01FB2C  8682               	bsf	3970,3,c	;volatile
  1413                           
  1414                           ;TM1640.c: 134: TM1640_Delay(1);
  1415  01FB2E  0E01               	movlw	1
  1416  01FB30  EC1A  F0FD         	call	_TM1640_Delay
  1417  01FB34  90D8               	bcf	status,0,c
  1418  01FB36  3614               	rlcf	TM1640_Writer_Byte@mask,f,c
  1419  01FB38  D000               	goto	l830
  1420  01FB3A                     l830:
  1421  01FB3A  5014               	movf	TM1640_Writer_Byte@mask,w,c
  1422  01FB3C  A4D8               	btfss	status,2,c
  1423  01FB3E  D7E6               	goto	l180
  1424  01FB40  0012               	return		;funcret
  1425  01FB42                     __end_of_TM1640_Writer_Byte:
  1426                           	opt stack 0
  1427                           tblptru	equ	0xFF8
  1428                           tblptrh	equ	0xFF7
  1429                           tblptrl	equ	0xFF6
  1430                           tablat	equ	0xFF5
  1431                           postinc0	equ	0xFEE
  1432                           postdec1	equ	0xFE5
  1433                           fsr1l	equ	0xFE1
  1434                           status	equ	0xFD8
  1435                           
  1436 ;; *************** function _TM1640_Stop *****************
  1437 ;; Defined at:
  1438 ;;		line 30 in file "User/TM1640.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;		None
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;		None
  1443 ;; Return value:  Size  Location     Type
  1444 ;;		None               void
  1445 ;; Registers used:
  1446 ;;		wreg, status,2, status,0, cstack
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1456 ;;Total ram usage:        0 bytes
  1457 ;; Hardware stack levels used:    1
  1458 ;; Hardware stack levels required when called:    1
  1459 ;; This function calls:
  1460 ;;		_TM1640_Delay
  1461 ;; This function is called by:
  1462 ;;		_TM1640_Writer_Dates
  1463 ;;		_Init_TM1640
  1464 ;;		_Open_Display
  1465 ;;		_Disable_Display
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           	psect	text8
  1470  01FA94                     __ptext8:
  1471                           	opt stack 0
  1472  01FA94                     _TM1640_Stop:
  1473                           	opt stack 27
  1474                           
  1475                           ;TM1640.c: 32: RC3 = 0;
  1476                           
  1477                           ;incstack = 0
  1478  01FA94  9682               	bcf	3970,3,c	;volatile
  1479                           
  1480                           ;TM1640.c: 33: TM1640_Delay(1);
  1481  01FA96  0E01               	movlw	1
  1482  01FA98  EC1A  F0FD         	call	_TM1640_Delay
  1483                           
  1484                           ;TM1640.c: 34: RC4 = 0;
  1485  01FA9C  9882               	bcf	3970,4,c	;volatile
  1486                           
  1487                           ;TM1640.c: 35: TM1640_Delay(1);
  1488  01FA9E  0E01               	movlw	1
  1489  01FAA0  EC1A  F0FD         	call	_TM1640_Delay
  1490                           
  1491                           ;TM1640.c: 36: RC3 = 1;
  1492  01FAA4  8682               	bsf	3970,3,c	;volatile
  1493                           
  1494                           ;TM1640.c: 37: TM1640_Delay(1);
  1495  01FAA6  0E01               	movlw	1
  1496  01FAA8  EC1A  F0FD         	call	_TM1640_Delay
  1497                           
  1498                           ;TM1640.c: 38: RC4 = 1;
  1499  01FAAC  8882               	bsf	3970,4,c	;volatile
  1500                           
  1501                           ;TM1640.c: 39: TM1640_Delay(1);
  1502  01FAAE  0E01               	movlw	1
  1503  01FAB0  EC1A  F0FD         	call	_TM1640_Delay
  1504                           
  1505                           ;TM1640.c: 40: RC3 = 0;
  1506  01FAB4  9682               	bcf	3970,3,c	;volatile
  1507  01FAB6  0012               	return		;funcret
  1508  01FAB8                     __end_of_TM1640_Stop:
  1509                           	opt stack 0
  1510                           tblptru	equ	0xFF8
  1511                           tblptrh	equ	0xFF7
  1512                           tblptrl	equ	0xFF6
  1513                           tablat	equ	0xFF5
  1514                           postinc0	equ	0xFEE
  1515                           postdec1	equ	0xFE5
  1516                           fsr1l	equ	0xFE1
  1517                           status	equ	0xFD8
  1518                           
  1519 ;; *************** function _TM1640_Start *****************
  1520 ;; Defined at:
  1521 ;;		line 17 in file "User/TM1640.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;		None
  1524 ;; Auto vars:     Size  Location     Type
  1525 ;;		None
  1526 ;; Return value:  Size  Location     Type
  1527 ;;		None               void
  1528 ;; Registers used:
  1529 ;;		wreg, status,2, status,0, cstack
  1530 ;; Tracked objects:
  1531 ;;		On entry : 0/0
  1532 ;;		On exit  : 0/0
  1533 ;;		Unchanged: 0/0
  1534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1539 ;;Total ram usage:        0 bytes
  1540 ;; Hardware stack levels used:    1
  1541 ;; Hardware stack levels required when called:    1
  1542 ;; This function calls:
  1543 ;;		_TM1640_Delay
  1544 ;; This function is called by:
  1545 ;;		_TM1640_Writer_Dates
  1546 ;;		_Init_TM1640
  1547 ;;		_Open_Display
  1548 ;;		_Disable_Display
  1549 ;; This function uses a non-reentrant model
  1550 ;;
  1551                           
  1552                           	psect	text9
  1553  01FA70                     __ptext9:
  1554                           	opt stack 0
  1555  01FA70                     _TM1640_Start:
  1556                           	opt stack 27
  1557                           
  1558                           ;TM1640.c: 19: RC3 = 0;
  1559                           
  1560                           ;incstack = 0
  1561  01FA70  9682               	bcf	3970,3,c	;volatile
  1562                           
  1563                           ;TM1640.c: 20: TM1640_Delay(1);
  1564  01FA72  0E01               	movlw	1
  1565  01FA74  EC1A  F0FD         	call	_TM1640_Delay
  1566                           
  1567                           ;TM1640.c: 21: RC4 = 1;
  1568  01FA78  8882               	bsf	3970,4,c	;volatile
  1569                           
  1570                           ;TM1640.c: 22: TM1640_Delay(1);
  1571  01FA7A  0E01               	movlw	1
  1572  01FA7C  EC1A  F0FD         	call	_TM1640_Delay
  1573                           
  1574                           ;TM1640.c: 23: RC3 = 1;
  1575  01FA80  8682               	bsf	3970,3,c	;volatile
  1576                           
  1577                           ;TM1640.c: 24: TM1640_Delay(1);
  1578  01FA82  0E01               	movlw	1
  1579  01FA84  EC1A  F0FD         	call	_TM1640_Delay
  1580                           
  1581                           ;TM1640.c: 25: RC4 = 0;
  1582  01FA88  9882               	bcf	3970,4,c	;volatile
  1583                           
  1584                           ;TM1640.c: 26: TM1640_Delay(1);
  1585  01FA8A  0E01               	movlw	1
  1586  01FA8C  EC1A  F0FD         	call	_TM1640_Delay
  1587                           
  1588                           ;TM1640.c: 27: RC3 = 0;
  1589  01FA90  9682               	bcf	3970,3,c	;volatile
  1590  01FA92  0012               	return		;funcret
  1591  01FA94                     __end_of_TM1640_Start:
  1592                           	opt stack 0
  1593                           tblptru	equ	0xFF8
  1594                           tblptrh	equ	0xFF7
  1595                           tblptrl	equ	0xFF6
  1596                           tablat	equ	0xFF5
  1597                           postinc0	equ	0xFEE
  1598                           postdec1	equ	0xFE5
  1599                           fsr1l	equ	0xFE1
  1600                           status	equ	0xFD8
  1601                           
  1602 ;; *************** function _TM1640_Delay *****************
  1603 ;; Defined at:
  1604 ;;		line 152 in file "User/TM1640.c"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;  Time            1    wreg     unsigned char 
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;  Time            1    0[COMRAM] unsigned char 
  1609 ;;  i               1    1[COMRAM] unsigned char 
  1610 ;; Return value:  Size  Location     Type
  1611 ;;		None               void
  1612 ;; Registers used:
  1613 ;;		wreg, status,2, status,0
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1620 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1622 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1623 ;;Total ram usage:        2 bytes
  1624 ;; Hardware stack levels used:    1
  1625 ;; This function calls:
  1626 ;;		Nothing
  1627 ;; This function is called by:
  1628 ;;		_TM1640_Start
  1629 ;;		_TM1640_Stop
  1630 ;;		_TM1640_Writer_Byte
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           	psect	text10
  1635  01FA34                     __ptext10:
  1636                           	opt stack 0
  1637  01FA34                     _TM1640_Delay:
  1638                           	opt stack 27
  1639                           
  1640                           ;incstack = 0
  1641                           ;TM1640_Delay@Time stored from wreg
  1642  01FA34  6E11               	movwf	TM1640_Delay@Time,c
  1643  01FA36                     
  1644                           ;TM1640.c: 157: {
  1645                           ;TM1640.c: 158: for(i=0; i<10; ++i);
  1646  01FA36  0E00               	movlw	0
  1647  01FA38  6E12               	movwf	TM1640_Delay@i,c
  1648  01FA3A  D002               	goto	l790
  1649  01FA3C  D004               	goto	l195
  1650  01FA3E                     l788:
  1651  01FA3E  2A12               	incf	TM1640_Delay@i,f,c
  1652  01FA40                     l790:
  1653  01FA40  0E09               	movlw	9
  1654  01FA42  6412               	cpfsgt	TM1640_Delay@i,c
  1655  01FA44  D7FC               	goto	l788
  1656  01FA46                     l195:
  1657                           
  1658                           ;TM1640.c: 159: }while(--Time);
  1659  01FA46  2E11               	decfsz	TM1640_Delay@Time,f,c
  1660  01FA48  D7F6               	goto	l782
  1661  01FA4A  0012               	return	
  1662  01FA4C  0012               	return		;funcret
  1663  01FA4E                     __end_of_TM1640_Delay:
  1664                           	opt stack 0
  1665                           tblptru	equ	0xFF8
  1666                           tblptrh	equ	0xFF7
  1667                           tblptrl	equ	0xFF6
  1668                           tablat	equ	0xFF5
  1669                           postinc0	equ	0xFEE
  1670                           postdec1	equ	0xFE5
  1671                           fsr1l	equ	0xFE1
  1672                           status	equ	0xFD8
  1673                           
  1674 ;; *************** function _Init_LED *****************
  1675 ;; Defined at:
  1676 ;;		line 12 in file "User/LED.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;		None
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;		None
  1681 ;; Return value:  Size  Location     Type
  1682 ;;		None               void
  1683 ;; Registers used:
  1684 ;;		None
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1694 ;;Total ram usage:        0 bytes
  1695 ;; Hardware stack levels used:    1
  1696 ;; This function calls:
  1697 ;;		Nothing
  1698 ;; This function is called by:
  1699 ;;		_Init_System
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           	psect	text11
  1704  01F9F2                     __ptext11:
  1705                           	opt stack 0
  1706  01F9F2                     _Init_LED:
  1707                           	opt stack 29
  1708                           
  1709                           ;LED.c: 14: TRISE5 = 0;
  1710                           
  1711                           ;incstack = 0
  1712  01F9F2  9A96               	bcf	3990,5,c	;volatile
  1713                           
  1714                           ;LED.c: 15: TRISE6 = 0;
  1715  01F9F4  9C96               	bcf	3990,6,c	;volatile
  1716                           
  1717                           ;LED.c: 16: TRISE7 = 0;
  1718  01F9F6  9E96               	bcf	3990,7,c	;volatile
  1719                           
  1720                           ;LED.c: 18: RE7 = 0;
  1721  01F9F8  9E84               	bcf	3972,7,c	;volatile
  1722                           
  1723                           ;LED.c: 19: RE6 = 0;
  1724  01F9FA  9C84               	bcf	3972,6,c	;volatile
  1725                           
  1726                           ;LED.c: 20: RE5 = 0;
  1727  01F9FC  9A84               	bcf	3972,5,c	;volatile
  1728  01F9FE  0012               	return		;funcret
  1729  01FA00                     __end_of_Init_LED:
  1730                           	opt stack 0
  1731                           tblptru	equ	0xFF8
  1732                           tblptrh	equ	0xFF7
  1733                           tblptrl	equ	0xFF6
  1734                           tablat	equ	0xFF5
  1735                           postinc0	equ	0xFEE
  1736                           postdec1	equ	0xFE5
  1737                           fsr1l	equ	0xFE1
  1738                           status	equ	0xFD8
  1739                           
  1740 ;; *************** function _Init_Key *****************
  1741 ;; Defined at:
  1742 ;;		line 12 in file "User/Key.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;		None
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;		None
  1747 ;; Return value:  Size  Location     Type
  1748 ;;		None               void
  1749 ;; Registers used:
  1750 ;;		None
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1760 ;;Total ram usage:        0 bytes
  1761 ;; Hardware stack levels used:    1
  1762 ;; This function calls:
  1763 ;;		Nothing
  1764 ;; This function is called by:
  1765 ;;		_Init_System
  1766 ;; This function uses a non-reentrant model
  1767 ;;
  1768                           
  1769                           	psect	text12
  1770  01F9E6                     __ptext12:
  1771                           	opt stack 0
  1772  01F9E6                     _Init_Key:
  1773                           	opt stack 29
  1774                           
  1775                           ;Key.c: 14: TRISE2 = 1;
  1776                           
  1777                           ;incstack = 0
  1778  01F9E6  8496               	bsf	3990,2,c	;volatile
  1779                           
  1780                           ;Key.c: 15: TRISE3 = 1;
  1781  01F9E8  8696               	bsf	3990,3,c	;volatile
  1782                           
  1783                           ;Key.c: 16: TRISE4 = 1;
  1784  01F9EA  8896               	bsf	3990,4,c	;volatile
  1785                           
  1786                           ;Key.c: 17: TRISD6 = 1;
  1787  01F9EC  8C95               	bsf	3989,6,c	;volatile
  1788                           
  1789                           ;Key.c: 18: TRISD7 = 1;
  1790  01F9EE  8E95               	bsf	3989,7,c	;volatile
  1791  01F9F0  0012               	return		;funcret
  1792  01F9F2                     __end_of_Init_Key:
  1793                           	opt stack 0
  1794  0000                     tblptru	equ	0xFF8
  1795                           tblptrh	equ	0xFF7
  1796                           tblptrl	equ	0xFF6
  1797                           tablat	equ	0xFF5
  1798                           postinc0	equ	0xFEE
  1799                           postdec1	equ	0xFE5
  1800                           fsr1l	equ	0xFE1
  1801                           status	equ	0xFD8
  1802                           tblptru	equ	0xFF8
  1803                           tblptrh	equ	0xFF7
  1804                           tblptrl	equ	0xFF6
  1805                           tablat	equ	0xFF5
  1806                           postinc0	equ	0xFEE
  1807                           postdec1	equ	0xFE5
  1808                           fsr1l	equ	0xFE1
  1809                           status	equ	0xFD8
  1810                           
  1811                           	psect	rparam
  1812  0000                     tblptru	equ	0xFF8
  1813                           tblptrh	equ	0xFF7
  1814                           tblptrl	equ	0xFF6
  1815                           tablat	equ	0xFF5
  1816                           postinc0	equ	0xFEE
  1817                           postdec1	equ	0xFE5
  1818                           fsr1l	equ	0xFE1
  1819                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     11      27
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_TM1640_Show_Numbers
    _TM1640_Show_Numbers->___awdiv
    _TM1640_Writer_Dates->_TM1640_Writer_Byte
    _Init_TM1640->_TM1640_Writer_Byte
    _TM1640_Writer_Byte->_TM1640_Delay
    _TM1640_Stop->_TM1640_Delay
    _TM1640_Start->_TM1640_Delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3372
                        _Init_System
                _TM1640_Show_Numbers
 ---------------------------------------------------------------------------------
 (1) _TM1640_Show_Numbers                                  3     1      2    3192
                                              8 COMRAM     3     1      2
                _TM1640_Writer_Dates
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     640
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     386
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _TM1640_Writer_Dates                                  2     1      1    1966
                                              4 COMRAM     2     1      1
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
 ---------------------------------------------------------------------------------
 (1) _Init_System                                          0     0      0     180
                           _Init_Key
                           _Init_LED
                        _Init_TM1640
 ---------------------------------------------------------------------------------
 (2) _Init_TM1640                                          0     0      0     180
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
 ---------------------------------------------------------------------------------
 (3) _TM1640_Writer_Byte                                   2     2      0      90
                                              2 COMRAM     2     2      0
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (3) _TM1640_Stop                                          0     0      0      45
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (3) _TM1640_Start                                         0     0      0      45
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (4) _TM1640_Delay                                         2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Init_LED                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Init_Key                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_System
     _Init_Key
     _Init_LED
     _Init_TM1640
       _TM1640_Start
         _TM1640_Delay
       _TM1640_Stop
         _TM1640_Delay
       _TM1640_Writer_Byte
         _TM1640_Delay
   _TM1640_Show_Numbers
     _TM1640_Writer_Dates
       _TM1640_Start
         _TM1640_Delay
       _TM1640_Stop
         _TM1640_Delay
       _TM1640_Writer_Byte
         _TM1640_Delay
     ___awdiv
     ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      B      1B       1       28.4%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1B      12        0.0%
DATA                 0      0      1B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Dec 04 13:27:51 2015

        ?_TM1640_Show_Numbers 0019                  ?_TM1640_Stop 0011  __size_of_TM1640_Writer_Dates 0022  
               ?_TM1640_Delay 0011                            l14 FA2E                  ___awdiv@sign 0016  
               ?_TM1640_Start 0011                           l180 FB0C                           l181 FB22  
                         l195 FA46                           l830 FB3A                           l824 FB26  
                         l790 FA40                           l782 FA36                           l788 FA3E  
                         _RC3 007C13                           _RC4 007C14                           _RE2 007C22  
                         _RE3 007C23                           _RE4 007C24                           _RD6 007C1E  
                         _RE5 007C25                           _RD7 007C1F                           _RE6 007C26  
                         _RE7 007C27                  ___awmod@sign 0016                          l1220 FBEC  
                        l1300 FCAC                          l1230 FC14                          l1214 FBDA  
                        l1302 FCB8                          l1310 FCDC                          l1320 FD6A  
                        l1312 FD3A                          l1304 FCC4                          l1226 FC02  
                        l1242 FC3E                          l1330 FDA6                          l1322 FD76  
                        l1314 FD46                          l1306 FCD0                          l1228 FC0C  
                        l1340 FE28                          l1324 FD82                          l1316 FD52  
                        l1246 FC4E                          l1238 FC32                          l1270 FB86  
                        l1262 FB66                          l1350 FE64                          l1342 FE34  
                        l1326 FD8E                          l1318 FD5E                          l1334 FDB2  
                        l1360 FEE6                          l1352 FE70                          l1344 FE40  
                        l1336 FE10                          l1328 FD9A                          l1282 FBB8  
                        l1274 FB9C                          l1266 FB74                          l1258 FB58  
                        l1370 FF22                          l1362 FEF2                          l1354 FE7C  
                        l1346 FE4C                          l1338 FE1C                          l1290 FC70  
                        l1268 FB7E                          l1372 FF2E                          l1364 FEFE  
                        l1348 FE58                          l1292 FC7C                          l1278 FBA8  
                        l1374 FF3A                          l1366 FF0A                          l1382 FF5E  
                        l1358 FE88                          l1294 FC88                          l1376 FF46  
                        l1368 FF16                          l1296 FC94                          l1288 FC64  
                        l1392 FFF6                          l1378 FF52                          l1298 FCA0  
                        l1386 FFBA                          l1388 FFD6                 ??_Init_TM1640 0015  
                        _main FA1E                          fsr1l 000FE1                          start 0002  
                ___param_bank 000010         ??_TM1640_Show_Numbers 001B                ??_TM1640_Delay 0011  
               ??_Init_System 0015                ??_TM1640_Start 0013                         ?_main 0011  
             __end_of___awdiv FC5A               __end_of___awmod FBC4               ___awdiv@divisor 0013  
             ___awdiv@counter 0015                         tablat 000FF5                         status 000FD8  
          _TM1640_Writer_Byte FB04               __initialization FADE           __end_of_Init_TM1640 FADE  
                __end_of_main FA34           ?_TM1640_Writer_Byte 0011              __end_of_Init_LED FA00  
            __end_of_Init_Key F9F2                        ??_main 001C                 __activetblptr 000003  
         __end_of_Init_System FA0E          ??_TM1640_Writer_Byte 0013              ___awdiv@dividend 0011  
                      _TRISE2 007CB2                 TM1640_Delay@i 0012                        _TRISE3 007CB3  
                      _TRISE4 007CB4                        _TRISD6 007CAE                        _TRISE5 007CB5  
                      _TRISD7 007CAF                        _TRISE6 007CB6                        _TRISE7 007CB7  
      TM1640_Writer_Byte@Date 0013        TM1640_Writer_Byte@mask 0014                     ??___awdiv 0015  
                   ??___awmod 0015              ___awdiv@quotient 0017               ___awmod@divisor 0013  
             ___awmod@counter 0015          __size_of_TM1640_Stop 0024                  __pdataCOMRAM 0001  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
         _TM1640_Writer_Dates FA4E          __end_of_TM1640_Delay FA4E          __end_of_TM1640_Start FA94  
                  __accesstop 0060       __end_of__initialization FAFE                   _Init_TM1640 FAB8  
               ___rparam_used 000001                __pcstackCOMRAM 0011          ?_TM1640_Writer_Dates 0015  
                 _Init_System FA00                     ?_Init_LED 0011                     ?_Init_Key 0011  
     TM1640_Writer_Dates@Addr 0016       TM1640_Writer_Dates@Date 0015         ??_TM1640_Writer_Dates 0016  
                  ??_Init_LED 0011                    ??_Init_Key 0011   __end_of_TM1640_Show_Numbers 0000  
                     __Hparam 0000                       __Lparam 0000                       ___awdiv FBC4  
                     ___awmod FB42                       __pcinit FADE                       __ramtop 1000  
                     __ptext0 FA1E                       __ptext1 FC5A                       __ptext2 FB42  
                     __ptext3 FBC4                       __ptext4 FA4E                       __ptext5 FA00  
                     __ptext6 FAB8                       __ptext7 FB04                       __ptext8 FA94  
                     __ptext9 FA70              ___awmod@dividend 0011         __size_of_TM1640_Delay 001A  
       __size_of_TM1640_Start 0024          end_of_initialization FAFE                       postdec1 000FE5  
                     postinc0 000FEE                  _TM1640_Delay FA34                  _TM1640_Start FA70  
            TM1640_Delay@Time 0011                     _TRISCbits 000F94   __size_of_TM1640_Writer_Byte 003E  
                ?_Init_TM1640 0011                 ??_TM1640_Stop 0013                  ?_Init_System 0011  
               __pidataCOMRAM FA0E           start_initialization FADE             __size_of_Init_LED 000E  
           __size_of_Init_Key 000C           __end_of_TM1640_Stop FAB8   __end_of_TM1640_Writer_Dates FA70  
                    ?___awdiv 0011                      ?___awmod 0011    TM1640_Show_Numbers@Numbers 0019  
        __size_of_Init_TM1640 0026  __size_of_TM1640_Show_Numbers 03A6                   _TM1640_Stop FA94  
        __size_of_Init_System 000E                     copy_data0 FAF2                      _Init_LED F9F2  
                    _Init_Key F9E6                      __Hrparam 0000                      __Lrparam 0000  
            __size_of___awdiv 0096              __size_of___awmod 0082    __end_of_TM1640_Writer_Byte FB42  
                    __ptext10 FA34                      __ptext11 F9F2                      __ptext12 F9E6  
      TM1640_Show_Numbers@Num 001B                 __size_of_main 0016                    _LED_Number 0001  
         _TM1640_Show_Numbers FC5A  
