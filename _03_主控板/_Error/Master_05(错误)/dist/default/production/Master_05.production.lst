

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Dec 22 19:08:49 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F67K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    43  0000                     
    44                           	psect	idataBANK0
    45  000948                     __pidataBANK0:
    46                           	opt stack 0
    47                           
    48                           ;initializer for _LED_Number
    49  000948  3F                 	db	63
    50  000949  06                 	db	6
    51  00094A  5B                 	db	91
    52  00094B  4F                 	db	79
    53  00094C  66                 	db	102
    54  00094D  6D                 	db	109
    55  00094E  7D                 	db	125
    56  00094F  07                 	db	7
    57  000950  7F                 	db	127
    58  000951  6F                 	db	111
    59  000952  77                 	db	119
    60  000953  7C                 	db	124
    61  000954  39                 	db	57
    62  000955  5E                 	db	94
    63  000956  79                 	db	121
    64  000957  71                 	db	113
    65  0000                     _ANSEL4	set	31020
    66  0000                     _ANSEL6	set	31022
    67  0000                     _ANSEL7	set	31023
    68  0000                     _ANSEL8	set	31008
    69  0000                     _ADCON0	set	4034
    70  0000                     _ADCON0bits	set	4034
    71  0000                     _ADCON1	set	4033
    72  0000                     _ADCON2	set	4032
    73  0000                     _INTCONbits	set	4082
    74  0000                     _PIE1bits	set	3997
    75  0000                     _PIR1bits	set	3998
    76  0000                     _RCREG1	set	4014
    77  0000                     _RCSTA1	set	4011
    78  0000                     _RCSTA1bits	set	4011
    79  0000                     _SPBRG1	set	4015
    80  0000                     _SPBRGH1	set	4052
    81  0000                     _TMR0H	set	4055
    82  0000                     _TMR0L	set	4054
    83  0000                     _TXREG1	set	4013
    84  0000                     _TXSTA1	set	4012
    85  0000                     _TXSTA1bits	set	4012
    86  0000                     _GIE	set	32663
    87  0000                     _IPEN	set	32391
    88  0000                     _PSA	set	32427
    89  0000                     _RA4	set	31748
    90  0000                     _RA5	set	31749
    91  0000                     _RB0	set	31752
    92  0000                     _RB1	set	31753
    93  0000                     _RC0	set	31760
    94  0000                     _RC1	set	31761
    95  0000                     _RC1IF	set	31989
    96  0000                     _RD0	set	31768
    97  0000                     _RD1	set	31769
    98  0000                     _RD2	set	31770
    99  0000                     _RD3	set	31771
   100  0000                     _RD4	set	31772
   101  0000                     _RD5	set	31773
   102  0000                     _RD6	set	31774
   103  0000                     _RD7	set	31775
   104  0000                     _RF1	set	31785
   105  0000                     _RF2	set	31786
   106  0000                     _RF3	set	31787
   107  0000                     _T08BIT	set	32430
   108  0000                     _T0CS	set	32429
   109  0000                     _T0PS0	set	32424
   110  0000                     _T0PS1	set	32425
   111  0000                     _T0PS2	set	32426
   112  0000                     _T0SE	set	32428
   113  0000                     _TMR0IE	set	32661
   114  0000                     _TMR0IF	set	32658
   115  0000                     _TMR0ON	set	32431
   116  0000                     _TRISA4	set	31892
   117  0000                     _TRISA5	set	31893
   118  0000                     _TRISB0	set	31896
   119  0000                     _TRISB1	set	31897
   120  0000                     _TRISB2	set	31898
   121  0000                     _TRISC0	set	31904
   122  0000                     _TRISC1	set	31905
   123  0000                     _TRISC6	set	31910
   124  0000                     _TRISC7	set	31911
   125  0000                     _TRISD0	set	31912
   126  0000                     _TRISD1	set	31913
   127  0000                     _TRISD2	set	31914
   128  0000                     _TRISD3	set	31915
   129  0000                     _TRISD4	set	31916
   130  0000                     _TRISD5	set	31917
   131  0000                     _TRISD6	set	31918
   132  0000                     _TRISD7	set	31919
   133  0000                     _TRISF1	set	31929
   134  0000                     _TRISF2	set	31930
   135  0000                     _TRISF3	set	31931
   136                           
   137                           ; #config settings
   138  0000                     
   139                           	psect	cinit
   140  000714                     __pcinit:
   141                           	opt stack 0
   142  000714                     start_initialization:
   143                           	opt stack 0
   144  000714                     __initialization:
   145                           	opt stack 0
   146                           
   147                           ; Clear objects allocated to BANK0 (111 bytes)
   148  000714  EE00  F060         	lfsr	0,__pbssBANK0
   149  000718  0E6F               	movlw	111
   150  00071A                     clear_0:
   151  00071A  6AEE               	clrf	postinc0,c
   152  00071C  06E8               	decf	wreg,f,c
   153  00071E  E1FD               	bnz	clear_0
   154                           
   155                           ; Clear objects allocated to COMRAM (60 bytes)
   156  000720  EE00  F001         	lfsr	0,__pbssCOMRAM
   157  000724  0E3C               	movlw	60
   158  000726                     clear_1:
   159  000726  6AEE               	clrf	postinc0,c
   160  000728  06E8               	decf	wreg,f,c
   161  00072A  E1FD               	bnz	clear_1
   162                           
   163                           ; Initialize objects allocated to BANK0 (16 bytes)
   164                           ; load TBLPTR registers with __pidataBANK0
   165  00072C  0E48               	movlw	low __pidataBANK0
   166  00072E  6EF6               	movwf	tblptrl,c
   167  000730  0E09               	movlw	high __pidataBANK0
   168  000732  6EF7               	movwf	tblptrh,c
   169  000734  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   170  000736  6EF8               	movwf	tblptru,c
   171  000738  EE00  F0CF         	lfsr	0,__pdataBANK0
   172  00073C  EE10 F010          	lfsr	1,16
   173  000740                     copy_data0:
   174  000740  0009               	tblrd		*+
   175  000742  CFF5 FFEE          	movff	tablat,postinc0
   176  000746  50E5               	movf	postdec1,w,c
   177  000748  50E1               	movf	fsr1l,w,c
   178  00074A  E1FA               	bnz	copy_data0
   179  00074C                     end_of_initialization:
   180                           	opt stack 0
   181  00074C                     __end_of__initialization:
   182                           	opt stack 0
   183  00074C  0100               	movlb	0
   184  00074E  EFBE  F002         	goto	_main	;jump to C main() function
   185                           tblptru	equ	0xFF8
   186                           tblptrh	equ	0xFF7
   187                           tblptrl	equ	0xFF6
   188                           tablat	equ	0xFF5
   189                           postinc0	equ	0xFEE
   190                           wreg	equ	0xFE8
   191                           postdec1	equ	0xFE5
   192                           fsr1l	equ	0xFE1
   193                           
   194                           	psect	bssCOMRAM
   195  000001                     __pbssCOMRAM:
   196                           	opt stack 0
   197  000001                     _gs_ComData:
   198                           	opt stack 0
   199  000001                     	ds	7
   200  000008                     _g_Timer_Cyc:
   201                           	opt stack 0
   202  000008                     	ds	4
   203  00000C                     _gf_ADC6_Buff:
   204                           	opt stack 0
   205  00000C                     	ds	3
   206  00000F                     Pulse_1Khz@_overturn_1Khz:
   207                           	opt stack 0
   208  00000F                     	ds	1
   209  000010                     Sys_Cyc@_Byte:
   210                           	opt stack 0
   211  000010                     	ds	1
   212  000011                     Sys_Cyc@_flag:
   213                           	opt stack 0
   214  000011                     	ds	1
   215  000012                     Sys_Cyc@_overturn_LED:
   216                           	opt stack 0
   217  000012                     	ds	1
   218  000013                     _LED_BUS:
   219                           	opt stack 0
   220  000013                     	ds	1
   221  000014                     _g_RS485_Byte:
   222                           	opt stack 0
   223  000014                     	ds	1
   224  000015                     _g_RS485_Receive_Flag:
   225                           	opt stack 0
   226  000015                     	ds	1
   227  000016                     _g_RS485_Send_Flag:
   228                           	opt stack 0
   229  000016                     	ds	1
   230  000017                     _gs_Local_Key_User:
   231                           	opt stack 0
   232  000017                     	ds	21
   233  00002C                     _ga_RS485_SendBuff:
   234                           	opt stack 0
   235  00002C                     	ds	10
   236  000036                     _gs_Switch:
   237                           	opt stack 0
   238  000036                     	ds	7
   239                           tblptru	equ	0xFF8
   240                           tblptrh	equ	0xFF7
   241                           tblptrl	equ	0xFF6
   242                           tablat	equ	0xFF5
   243                           postinc0	equ	0xFEE
   244                           wreg	equ	0xFE8
   245                           postdec1	equ	0xFE5
   246                           fsr1l	equ	0xFE1
   247                           
   248                           	psect	bssBANK0
   249  000060                     __pbssBANK0:
   250                           	opt stack 0
   251  000060                     _ReceiveBuff:
   252                           	opt stack 0
   253  000060                     	ds	10
   254  00006A                     _gsa_Msg:
   255                           	opt stack 0
   256  00006A                     	ds	70
   257  0000B0                     _s_Local_Key_FSM:
   258                           	opt stack 0
   259  0000B0                     	ds	21
   260  0000C5                     _ga_RS485_ReceiveBuff:
   261                           	opt stack 0
   262  0000C5                     	ds	10
   263                           tblptru	equ	0xFF8
   264                           tblptrh	equ	0xFF7
   265                           tblptrl	equ	0xFF6
   266                           tablat	equ	0xFF5
   267                           postinc0	equ	0xFEE
   268                           wreg	equ	0xFE8
   269                           postdec1	equ	0xFE5
   270                           fsr1l	equ	0xFE1
   271                           
   272                           	psect	dataBANK0
   273  0000CF                     __pdataBANK0:
   274                           	opt stack 0
   275  0000CF                     _LED_Number:
   276                           	opt stack 0
   277  0000CF                     	ds	16
   278                           tblptru	equ	0xFF8
   279                           tblptrh	equ	0xFF7
   280                           tblptrl	equ	0xFF6
   281                           tablat	equ	0xFF5
   282                           postinc0	equ	0xFEE
   283                           wreg	equ	0xFE8
   284                           postdec1	equ	0xFE5
   285                           fsr1l	equ	0xFE1
   286                           
   287                           	psect	cstackBANK0
   288  0000DF                     __pcstackBANK0:
   289                           	opt stack 0
   290  0000DF                     ?___wmul:
   291                           	opt stack 0
   292  0000DF                     ?___lwdiv:
   293                           	opt stack 0
   294  0000DF                     ?___lwmod:
   295                           	opt stack 0
   296  0000DF                     delay1ms@a:
   297                           	opt stack 0
   298  0000DF                     LED_Control@_switch:
   299                           	opt stack 0
   300  0000DF                     TM1640_Delay@Time:
   301                           	opt stack 0
   302  0000DF                     OpenADC@config2:
   303                           	opt stack 0
   304  0000DF                     SetTimer0@_tmr:
   305                           	opt stack 0
   306  0000DF                     Open1USART@spbrg:
   307                           	opt stack 0
   308  0000DF                     ___wmul@multiplier:
   309                           	opt stack 0
   310  0000DF                     ___lwdiv@dividend:
   311                           	opt stack 0
   312  0000DF                     ___lwmod@dividend:
   313                           	opt stack 0
   314                           
   315                           ; 2 bytes @ 0x0
   316  0000DF                     	ds	1
   317  0000E0                     delay1ms@b:
   318                           	opt stack 0
   319  0000E0                     LED_Control@_LED_num:
   320                           	opt stack 0
   321  0000E0                     TM1640_Delay@i:
   322                           	opt stack 0
   323  0000E0                     OpenADC@config3:
   324                           	opt stack 0
   325                           
   326                           ; 1 bytes @ 0x1
   327  0000E0                     	ds	1
   328  0000E1                     ??_SetTimer0:
   329  0000E1                     ??_OpenADC:
   330  0000E1                     delay1ms@c:
   331                           	opt stack 0
   332  0000E1                     TM1640_Writer_Byte@Date:
   333                           	opt stack 0
   334  0000E1                     Open1USART@config:
   335                           	opt stack 0
   336  0000E1                     ___wmul@multiplicand:
   337                           	opt stack 0
   338  0000E1                     ___lwdiv@divisor:
   339                           	opt stack 0
   340  0000E1                     ___lwmod@divisor:
   341                           	opt stack 0
   342                           
   343                           ; 2 bytes @ 0x2
   344  0000E1                     	ds	1
   345  0000E2                     TM1640_Writer_Byte@mask:
   346                           	opt stack 0
   347  0000E2                     delay_ms@_ms:
   348                           	opt stack 0
   349                           
   350                           ; 2 bytes @ 0x3
   351  0000E2                     	ds	1
   352  0000E3                     OpenADC@config:
   353                           	opt stack 0
   354  0000E3                     ___lwdiv@counter:
   355                           	opt stack 0
   356  0000E3                     ___lwmod@counter:
   357                           	opt stack 0
   358  0000E3                     ___wmul@product:
   359                           	opt stack 0
   360                           
   361                           ; 2 bytes @ 0x4
   362  0000E3                     	ds	1
   363  0000E4                     TM1640_Writer_Dates@Date:
   364                           	opt stack 0
   365  0000E4                     ___lwdiv@quotient:
   366                           	opt stack 0
   367                           
   368                           ; 2 bytes @ 0x5
   369  0000E4                     	ds	1
   370  0000E5                     TM1640_Writer_Dates@Addr:
   371                           	opt stack 0
   372                           
   373                           ; 1 bytes @ 0x6
   374  0000E5                     	ds	1
   375  0000E6                     TM1640_Show_integer@Numbers:
   376                           	opt stack 0
   377                           
   378                           ; 2 bytes @ 0x7
   379  0000E6                     	ds	2
   380  0000E8                     ??_ShowResult:
   381  0000E8                     
   382                           ; 0 bytes @ 0x9
   383  0000E8                     	ds	1
   384  0000E9                     tblptru	equ	0xFF8
   385                           tblptrh	equ	0xFF7
   386                           tblptrl	equ	0xFF6
   387                           tablat	equ	0xFF5
   388                           postinc0	equ	0xFEE
   389                           wreg	equ	0xFE8
   390                           postdec1	equ	0xFE5
   391                           fsr1l	equ	0xFE1
   392                           
   393                           ; 0 bytes @ 0xA
   394                           
   395                           	psect	cstackCOMRAM
   396  00003D                     __pcstackCOMRAM:
   397                           	opt stack 0
   398  00003D                     ?___llmod:
   399                           	opt stack 0
   400  00003D                     i2LED_Control@_switch:
   401                           	opt stack 0
   402  00003D                     i2SetTimer0@_tmr:
   403                           	opt stack 0
   404  00003D                     ___llmod@dividend:
   405                           	opt stack 0
   406                           
   407                           ; 4 bytes @ 0x0
   408  00003D                     	ds	1
   409  00003E                     i2LED_Control@_LED_num:
   410                           	opt stack 0
   411                           
   412                           ; 1 bytes @ 0x1
   413  00003E                     	ds	1
   414  00003F                     ??i2_SetTimer0:
   415                           
   416                           ; 0 bytes @ 0x2
   417  00003F                     	ds	2
   418  000041                     ___llmod@divisor:
   419                           	opt stack 0
   420                           
   421                           ; 4 bytes @ 0x4
   422  000041                     	ds	4
   423  000045                     ___llmod@counter:
   424                           	opt stack 0
   425                           
   426                           ; 1 bytes @ 0x8
   427  000045                     	ds	1
   428  000046                     ??_Sys_Cyc:
   429                           
   430                           ; 0 bytes @ 0x9
   431  000046                     	ds	14
   432  000054                     Sys_Cyc@_temp:
   433                           	opt stack 0
   434                           
   435                           ; 1 bytes @ 0x17
   436  000054                     	ds	1
   437                           tblptru	equ	0xFF8
   438                           tblptrh	equ	0xFF7
   439                           tblptrl	equ	0xFF6
   440                           tablat	equ	0xFF5
   441                           postinc0	equ	0xFEE
   442                           wreg	equ	0xFE8
   443                           postdec1	equ	0xFE5
   444                           fsr1l	equ	0xFE1
   445                           
   446 ;;
   447 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   448 ;;
   449 ;; *************** function _main *****************
   450 ;; Defined at:
   451 ;;		line 40 in file "_01_USER/main.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;		None
   454 ;; Auto vars:     Size  Location     Type
   455 ;;		None
   456 ;; Return value:  Size  Location     Type
   457 ;;                  2   24[None  ] int 
   458 ;; Registers used:
   459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   460 ;; Tracked objects:
   461 ;;		On entry : 0/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   469 ;;Total ram usage:        0 bytes
   470 ;; Hardware stack levels required when called:    7
   471 ;; This function calls:
   472 ;;		_ADC6_Init
   473 ;;		_GPIO_Config
   474 ;;		_Init_TM1640
   475 ;;		_Key_Init
   476 ;;		_LED_Control
   477 ;;		_RS485_Init
   478 ;;		_Relay_Init
   479 ;;		_SCR_Init
   480 ;;		_ShowResult
   481 ;;		_Timer0_Init
   482 ;;		_delay_ms
   483 ;; This function is called by:
   484 ;;		Startup code after reset
   485 ;; This function uses a non-reentrant model
   486 ;;
   487                           
   488                           	psect	text0
   489  00057C                     __ptext0:
   490                           	opt stack 0
   491  00057C                     _main:
   492                           	opt stack 24
   493                           
   494                           ;main.c: 46: GPIO_Config();
   495                           
   496                           ;incstack = 0
   497  00057C  ECB9  F004         	call	_GPIO_Config	;wreg free
   498                           
   499                           ;main.c: 47: Key_Init();
   500  000580  EC7D  F004         	call	_Key_Init	;wreg free
   501                           
   502                           ;main.c: 48: Timer0_Init();
   503  000584  EC11  F004         	call	_Timer0_Init	;wreg free
   504                           
   505                           ;main.c: 49: ADC6_Init();
   506  000588  EC99  F004         	call	_ADC6_Init	;wreg free
   507                           
   508                           ;main.c: 50: RS485_Init();
   509  00058C  EC8C  F004         	call	_RS485_Init	;wreg free
   510                           
   511                           ;main.c: 51: Relay_Init();
   512  000590  ECAC  F004         	call	_Relay_Init	;wreg free
   513                           
   514                           ;main.c: 52: SCR_Init();
   515  000594  ECB3  F004         	call	_SCR_Init	;wreg free
   516                           
   517                           ;main.c: 53: Init_TM1640();
   518  000598  EC24  F004         	call	_Init_TM1640	;wreg free
   519  00059C  D000               	goto	l3684
   520  00059E                     l3684:
   521                           
   522                           ;main.c: 59: {
   523                           ;main.c: 61: LED_Control(1,1);
   524  00059E  0E01               	movlw	1
   525  0005A0  0100               	movlb	0	; () banked
   526  0005A2  6FDF               	movwf	LED_Control@_switch& (0+255),b
   527  0005A4  0E01               	movlw	1
   528  0005A6  ECEE  F002         	call	_LED_Control
   529                           
   530                           ;main.c: 62: delay_ms(300);
   531  0005AA  0E01               	movlw	1
   532  0005AC  0100               	movlb	0	; () banked
   533  0005AE  6FE3               	movwf	(delay_ms@_ms+1)& (0+255),b
   534  0005B0  0E2C               	movlw	44
   535  0005B2  6FE2               	movwf	delay_ms@_ms& (0+255),b
   536  0005B4  EC6D  F004         	call	_delay_ms	;wreg free
   537                           
   538                           ;main.c: 64: LED_Control(1,0);
   539  0005B8  0E00               	movlw	0
   540  0005BA  0100               	movlb	0	; () banked
   541  0005BC  6FDF               	movwf	LED_Control@_switch& (0+255),b
   542  0005BE  0E01               	movlw	1
   543  0005C0  ECEE  F002         	call	_LED_Control
   544                           
   545                           ;main.c: 65: delay_ms(300);
   546  0005C4  0E01               	movlw	1
   547  0005C6  0100               	movlb	0	; () banked
   548  0005C8  6FE3               	movwf	(delay_ms@_ms+1)& (0+255),b
   549  0005CA  0E2C               	movlw	44
   550  0005CC  6FE2               	movwf	delay_ms@_ms& (0+255),b
   551  0005CE  EC6D  F004         	call	_delay_ms	;wreg free
   552                           
   553                           ;main.c: 70: ShowResult();
   554  0005D2  EC44  F001         	call	_ShowResult	;wreg free
   555  0005D6  D7E3               	goto	l3684
   556                           
   557                           ;main.c: 71: }
   558                           ;main.c: 73: return 0;
   559                           ;	Return value of _main is never used
   560  0005D8  EFB0  F000         	goto	start
   561  0005DC                     __end_of_main:
   562                           	opt stack 0
   563                           tblptru	equ	0xFF8
   564                           tblptrh	equ	0xFF7
   565                           tblptrl	equ	0xFF6
   566                           tablat	equ	0xFF5
   567                           postinc0	equ	0xFEE
   568                           wreg	equ	0xFE8
   569                           postdec1	equ	0xFE5
   570                           fsr1l	equ	0xFE1
   571                           
   572 ;; *************** function _delay_ms *****************
   573 ;; Defined at:
   574 ;;		line 37 in file "_01_USER/My_Delay.c"
   575 ;; Parameters:    Size  Location     Type
   576 ;;  _ms             2    3[BANK0 ] unsigned int 
   577 ;; Auto vars:     Size  Location     Type
   578 ;;		None
   579 ;; Return value:  Size  Location     Type
   580 ;;		None               void
   581 ;; Registers used:
   582 ;;		wreg, status,2, status,0, cstack
   583 ;; Tracked objects:
   584 ;;		On entry : 0/0
   585 ;;		On exit  : 0/0
   586 ;;		Unchanged: 0/0
   587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   588 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   591 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   592 ;;Total ram usage:        2 bytes
   593 ;; Hardware stack levels used:    1
   594 ;; Hardware stack levels required when called:    3
   595 ;; This function calls:
   596 ;;		_delay1ms
   597 ;; This function is called by:
   598 ;;		_main
   599 ;;		_Relay_Control
   600 ;; This function uses a non-reentrant model
   601 ;;
   602                           
   603                           	psect	text1
   604  0008DA                     __ptext1:
   605                           	opt stack 0
   606  0008DA                     _delay_ms:
   607                           	opt stack 27
   608                           
   609                           ;My_Delay.c: 39: while(_ms--) delay1ms();
   610                           
   611                           ;incstack = 0
   612  0008DA  D003               	goto	l3560
   613  0008DC                     l3558:
   614  0008DC  EC1A  F003         	call	_delay1ms	;wreg free
   615  0008E0  D000               	goto	l3560
   616  0008E2                     l3560:
   617  0008E2  0100               	movlb	0	; () banked
   618  0008E4  07E2               	decf	delay_ms@_ms& (0+255),f,b
   619  0008E6  A0D8               	btfss	status,0,c
   620  0008E8  07E3               	decf	(delay_ms@_ms+1)& (0+255),f,b
   621  0008EA  0100               	movlb	0	; () banked
   622  0008EC  29E2               	incf	delay_ms@_ms& (0+255),w,b
   623  0008EE  E1F6               	bnz	l3558
   624  0008F0  0100               	movlb	0	; () banked
   625  0008F2  29E3               	incf	(delay_ms@_ms+1)& (0+255),w,b
   626  0008F4  A4D8               	btfss	status,2,c
   627  0008F6  D7F2               	goto	l3558
   628                           
   629                           ; BSR set to: 0
   630                           
   631                           ; BSR set to: 0
   632  0008F8  0012               	return		;funcret
   633  0008FA                     __end_of_delay_ms:
   634                           	opt stack 0
   635                           tblptru	equ	0xFF8
   636                           tblptrh	equ	0xFF7
   637                           tblptrl	equ	0xFF6
   638                           tablat	equ	0xFF5
   639                           postinc0	equ	0xFEE
   640                           wreg	equ	0xFE8
   641                           postdec1	equ	0xFE5
   642                           fsr1l	equ	0xFE1
   643                           status	equ	0xFD8
   644                           
   645 ;; *************** function _delay1ms *****************
   646 ;; Defined at:
   647 ;;		line 59 in file "_01_USER/My_Delay.c"
   648 ;; Parameters:    Size  Location     Type
   649 ;;		None
   650 ;; Auto vars:     Size  Location     Type
   651 ;;  c               1    2[BANK0 ] unsigned char 
   652 ;;  b               1    1[BANK0 ] unsigned char 
   653 ;;  a               1    0[BANK0 ] unsigned char 
   654 ;; Return value:  Size  Location     Type
   655 ;;		None               void
   656 ;; Registers used:
   657 ;;		wreg, status,2, status,0
   658 ;; Tracked objects:
   659 ;;		On entry : 0/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   664 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   666 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   667 ;;Total ram usage:        3 bytes
   668 ;; Hardware stack levels used:    1
   669 ;; Hardware stack levels required when called:    2
   670 ;; This function calls:
   671 ;;		Nothing
   672 ;; This function is called by:
   673 ;;		_delay_ms
   674 ;; This function uses a non-reentrant model
   675 ;;
   676                           
   677                           	psect	text2
   678  000634                     __ptext2:
   679                           	opt stack 0
   680  000634                     _delay1ms:
   681                           	opt stack 27
   682                           
   683                           ;My_Delay.c: 61: unsigned char a,b,c;
   684                           ;My_Delay.c: 62: for(c=1;c>0;c--)
   685                           
   686                           ; BSR set to: 0
   687                           ;incstack = 0
   688  000634  0E01               	movlw	1
   689  000636  0100               	movlb	0	; () banked
   690  000638  6FE1               	movwf	delay1ms@c& (0+255),b
   691  00063A  0100               	movlb	0	; () banked
   692  00063C  51E1               	movf	delay1ms@c& (0+255),w,b
   693  00063E  0100               	movlb	0	; () banked
   694  000640  B4D8               	btfsc	status,2,c
   695  000642  0012               	return	
   696  000644  D001               	goto	l3420
   697                           
   698                           ; BSR set to: 0
   699  000646  0012               	return	
   700  000648                     l3420:
   701                           
   702                           ; BSR set to: 0
   703                           ;My_Delay.c: 63: for(b=94;b>0;b--)
   704  000648  0E5E               	movlw	94
   705  00064A  0100               	movlb	0	; () banked
   706  00064C  6FE0               	movwf	delay1ms@b& (0+255),b
   707  00064E  0100               	movlb	0	; () banked
   708  000650  51E0               	movf	delay1ms@b& (0+255),w,b
   709  000652  0100               	movlb	0	; () banked
   710  000654  B4D8               	btfsc	status,2,c
   711  000656  D012               	goto	l3436
   712  000658  D001               	goto	l3424
   713                           
   714                           ; BSR set to: 0
   715  00065A  D010               	goto	l3436
   716  00065C                     l3424:
   717                           
   718                           ; BSR set to: 0
   719                           ;My_Delay.c: 64: for(a=2;a>0;a--);
   720  00065C  0E02               	movlw	2
   721  00065E  0100               	movlb	0	; () banked
   722  000660  6FDF               	movwf	delay1ms@a& (0+255),b
   723  000662  0100               	movlb	0	; () banked
   724  000664  51DF               	movf	delay1ms@a& (0+255),w,b
   725  000666  0100               	movlb	0	; () banked
   726  000668  B4D8               	btfsc	status,2,c
   727  00066A  D005               	goto	l3432
   728  00066C  D001               	goto	l3428
   729                           
   730                           ; BSR set to: 0
   731  00066E  D003               	goto	l3432
   732  000670                     l3428:
   733                           
   734                           ; BSR set to: 0
   735  000670  0100               	movlb	0	; () banked
   736  000672  07DF               	decf	delay1ms@a& (0+255),f,b
   737  000674  D7F6               	goto	L1
   738  000676                     l3432:
   739                           
   740                           ; BSR set to: 0
   741  000676  0100               	movlb	0	; () banked
   742  000678  07E0               	decf	delay1ms@b& (0+255),f,b
   743  00067A  D7E9               	goto	L2
   744  00067C                     l3436:
   745                           
   746                           ; BSR set to: 0
   747  00067C  0100               	movlb	0	; () banked
   748  00067E  07E1               	decf	delay1ms@c& (0+255),f,b
   749  000680  D7DC               	goto	L3
   750                           
   751                           ; BSR set to: 0
   752                           
   753                           ; BSR set to: 0
   754                           
   755                           ; BSR set to: 0
   756  000682  0012               	return		;funcret
   757  000684                     __end_of_delay1ms:
   758                           	opt stack 0
   759                           tblptru	equ	0xFF8
   760                           tblptrh	equ	0xFF7
   761                           tblptrl	equ	0xFF6
   762                           tablat	equ	0xFF5
   763                           postinc0	equ	0xFEE
   764                           wreg	equ	0xFE8
   765                           postdec1	equ	0xFE5
   766                           fsr1l	equ	0xFE1
   767                           status	equ	0xFD8
   768                           
   769 ;; *************** function _Timer0_Init *****************
   770 ;; Defined at:
   771 ;;		line 43 in file "_01_USER/My_Timer.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;		None
   774 ;; Auto vars:     Size  Location     Type
   775 ;;		None
   776 ;; Return value:  Size  Location     Type
   777 ;;		None               void
   778 ;; Registers used:
   779 ;;		wreg, status,2, status,0, cstack
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   789 ;;Total ram usage:        0 bytes
   790 ;; Hardware stack levels used:    1
   791 ;; Hardware stack levels required when called:    3
   792 ;; This function calls:
   793 ;;		_SetTimer0
   794 ;; This function is called by:
   795 ;;		_main
   796 ;; This function uses a non-reentrant model
   797 ;;
   798                           
   799                           	psect	text3
   800  000822                     __ptext3:
   801                           	opt stack 0
   802  000822                     _Timer0_Init:
   803                           	opt stack 27
   804                           
   805                           ;My_Timer.c: 45: T08BIT = 0;
   806                           
   807                           ; BSR set to: 0
   808                           ;incstack = 0
   809  000822  9CD5               	bcf	4053,6,c	;volatile
   810                           
   811                           ;My_Timer.c: 46: T0CS = 0;
   812  000824  9AD5               	bcf	4053,5,c	;volatile
   813                           
   814                           ;My_Timer.c: 47: T0SE = 0;
   815  000826  98D5               	bcf	4053,4,c	;volatile
   816                           
   817                           ;My_Timer.c: 48: PSA = 0;
   818  000828  96D5               	bcf	4053,3,c	;volatile
   819                           
   820                           ;My_Timer.c: 49: T0PS2 = 1;
   821  00082A  84D5               	bsf	4053,2,c	;volatile
   822                           
   823                           ;My_Timer.c: 50: T0PS1 = 1;
   824  00082C  82D5               	bsf	4053,1,c	;volatile
   825                           
   826                           ;My_Timer.c: 51: T0PS0 = 1;
   827  00082E  80D5               	bsf	4053,0,c	;volatile
   828                           
   829                           ;My_Timer.c: 65: SetTimer0(1);
   830  000830  0E00               	movlw	0
   831  000832  0100               	movlb	0	; () banked
   832  000834  6FE0               	movwf	(SetTimer0@_tmr+1)& (0+255),b
   833  000836  0E01               	movlw	1
   834  000838  6FDF               	movwf	SetTimer0@_tmr& (0+255),b
   835  00083A  ECA9  F003         	call	_SetTimer0	;wreg free
   836                           
   837                           ;My_Timer.c: 66: TMR0ON = 1;
   838  00083E  8ED5               	bsf	4053,7,c	;volatile
   839                           
   840                           ;My_Timer.c: 67: TMR0IE = 1;
   841  000840  8AF2               	bsf	intcon,5,c	;volatile
   842                           
   843                           ;My_Timer.c: 68: IPEN = 0;GIE = 1;
   844  000842  9ED0               	bcf	4048,7,c	;volatile
   845  000844  8EF2               	bsf	intcon,7,c	;volatile
   846  000846  0012               	return		;funcret
   847  000848                     __end_of_Timer0_Init:
   848                           	opt stack 0
   849                           tblptru	equ	0xFF8
   850                           tblptrh	equ	0xFF7
   851                           tblptrl	equ	0xFF6
   852                           tablat	equ	0xFF5
   853                           intcon	equ	0xFF2
   854                           postinc0	equ	0xFEE
   855                           wreg	equ	0xFE8
   856                           postdec1	equ	0xFE5
   857                           fsr1l	equ	0xFE1
   858                           status	equ	0xFD8
   859                           
   860 ;; *************** function _SetTimer0 *****************
   861 ;; Defined at:
   862 ;;		line 81 in file "_01_USER/My_Timer.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;  _tmr            2    0[BANK0 ] unsigned int 
   865 ;; Auto vars:     Size  Location     Type
   866 ;;		None
   867 ;; Return value:  Size  Location     Type
   868 ;;		None               void
   869 ;; Registers used:
   870 ;;		wreg, status,2, status,0
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   876 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   878 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   879 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   880 ;;Total ram usage:        4 bytes
   881 ;; Hardware stack levels used:    1
   882 ;; Hardware stack levels required when called:    2
   883 ;; This function calls:
   884 ;;		Nothing
   885 ;; This function is called by:
   886 ;;		_Timer0_Init
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           	psect	text4
   891  000752                     __ptext4:
   892                           	opt stack 0
   893  000752                     _SetTimer0:
   894                           	opt stack 27
   895                           
   896                           ;My_Timer.c: 83: if(_tmr > 0xffff) _tmr = 0xffff;
   897                           
   898                           ;incstack = 0
   899  000752  D004               	goto	l3484
   900  000754  0100               	movlb	0	; () banked
   901  000756  69DF               	setf	SetTimer0@_tmr& (0+255),b
   902  000758  69E0               	setf	(SetTimer0@_tmr+1)& (0+255),b
   903  00075A  D000               	goto	l3484
   904  00075C                     l3484:
   905                           
   906                           ;My_Timer.c: 84: _tmr=0xffff-_tmr;
   907  00075C  C0DF  F0E1         	movff	SetTimer0@_tmr,??_SetTimer0
   908  000760  C0E0  F0E2         	movff	SetTimer0@_tmr+1,??_SetTimer0+1
   909  000764  0100               	movlb	0	; () banked
   910  000766  1FE1               	comf	??_SetTimer0& (0+255),f,b
   911  000768  1FE2               	comf	(??_SetTimer0+1)& (0+255),f,b
   912  00076A  4BE1               	infsnz	??_SetTimer0& (0+255),f,b
   913  00076C  2BE2               	incf	(??_SetTimer0+1)& (0+255),f,b
   914  00076E  0EFF               	movlw	255
   915  000770  0100               	movlb	0	; () banked
   916  000772  25E1               	addwf	??_SetTimer0& (0+255),w,b
   917  000774  0100               	movlb	0	; () banked
   918  000776  6FDF               	movwf	SetTimer0@_tmr& (0+255),b
   919  000778  0EFF               	movlw	255
   920  00077A  0100               	movlb	0	; () banked
   921  00077C  21E2               	addwfc	(??_SetTimer0+1)& (0+255),w,b
   922  00077E  0100               	movlb	0	; () banked
   923  000780  6FE0               	movwf	(SetTimer0@_tmr+1)& (0+255),b
   924                           
   925                           ; BSR set to: 0
   926                           ;My_Timer.c: 85: TMR0H = _tmr/256;
   927  000782  0100               	movlb	0	; () banked
   928  000784  51E0               	movf	(SetTimer0@_tmr+1)& (0+255),w,b
   929  000786  6ED7               	movwf	4055,c	;volatile
   930                           
   931                           ; BSR set to: 0
   932                           ;My_Timer.c: 86: TMR0L = _tmr%256;
   933  000788  C0DF  FFD6         	movff	SetTimer0@_tmr,4054	;volatile
   934                           
   935                           ; BSR set to: 0
   936                           ;My_Timer.c: 87: TMR0IF = 0;
   937  00078C  94F2               	bcf	intcon,2,c	;volatile
   938                           
   939                           ; BSR set to: 0
   940  00078E  0012               	return		;funcret
   941  000790                     __end_of_SetTimer0:
   942                           	opt stack 0
   943                           tblptru	equ	0xFF8
   944                           tblptrh	equ	0xFF7
   945                           tblptrl	equ	0xFF6
   946                           tablat	equ	0xFF5
   947                           intcon	equ	0xFF2
   948                           postinc0	equ	0xFEE
   949                           wreg	equ	0xFE8
   950                           postdec1	equ	0xFE5
   951                           fsr1l	equ	0xFE1
   952                           status	equ	0xFD8
   953                           
   954 ;; *************** function _ShowResult *****************
   955 ;; Defined at:
   956 ;;		line 95 in file "_01_USER/Run.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;		None
   959 ;; Auto vars:     Size  Location     Type
   960 ;;		None
   961 ;; Return value:  Size  Location     Type
   962 ;;		None               void
   963 ;; Registers used:
   964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   972 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   973 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   974 ;;Total ram usage:        1 bytes
   975 ;; Hardware stack levels used:    1
   976 ;; Hardware stack levels required when called:    6
   977 ;; This function calls:
   978 ;;		_LED_Control
   979 ;;		_TM1640_Show_integer
   980 ;;		_TM1640_Writer_Dates
   981 ;;		___wmul
   982 ;; This function is called by:
   983 ;;		_main
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           	psect	text5
   988  000288                     __ptext5:
   989                           	opt stack 0
   990  000288                     _ShowResult:
   991                           	opt stack 24
   992                           
   993                           ;Run.c: 97: if( gs_Switch.Show_Send_Receive )
   994                           
   995                           ; BSR set to: 0
   996                           ;incstack = 0
   997  000288  5039               	movf	_gs_Switch+3,w,c
   998  00028A  B4D8               	btfsc	status,2,c
   999  00028C  D02A               	goto	l3568
  1000                           
  1001                           ;Run.c: 98: {
  1002                           ;Run.c: 99: TM1640_Show_integer( ga_RS485_SendBuff[g_RS485_Byte] + (g_RS485_Byte * 1000)
      +                           );
  1003  00028E  C014  F0DF         	movff	_g_RS485_Byte,___wmul@multiplier
  1004  000292  0100               	movlb	0	; () banked
  1005  000294  6BE0               	clrf	(___wmul@multiplier+1)& (0+255),b
  1006  000296  0E03               	movlw	3
  1007  000298  0100               	movlb	0	; () banked
  1008  00029A  6FE2               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1009  00029C  0EE8               	movlw	232
  1010  00029E  6FE1               	movwf	___wmul@multiplicand& (0+255),b
  1011  0002A0  ECC8  F003         	call	___wmul	;wreg free
  1012  0002A4  5014               	movf	_g_RS485_Byte,w,c
  1013  0002A6  0D01               	mullw	1
  1014  0002A8  0E2C               	movlw	low _ga_RS485_SendBuff
  1015  0002AA  24F3               	addwf	prodl,w,c
  1016  0002AC  6ED9               	movwf	fsr2l,c
  1017  0002AE  0E00               	movlw	high _ga_RS485_SendBuff
  1018  0002B0  20F4               	addwfc	prodh,w,c
  1019  0002B2  6EDA               	movwf	fsr2h,c
  1020  0002B4  50DF               	movf	indf2,w,c
  1021  0002B6  0100               	movlb	0	; () banked
  1022  0002B8  6FE8               	movwf	??_ShowResult& (0+255),b
  1023  0002BA  0100               	movlb	0	; () banked
  1024  0002BC  51E8               	movf	??_ShowResult& (0+255),w,b
  1025  0002BE  0100               	movlb	0	; () banked
  1026  0002C0  25DF               	addwf	?___wmul& (0+255),w,b
  1027  0002C2  0100               	movlb	0	; () banked
  1028  0002C4  6FE6               	movwf	TM1640_Show_integer@Numbers& (0+255),b
  1029  0002C6  0E00               	movlw	0
  1030  0002C8  0100               	movlb	0	; () banked
  1031  0002CA  21E0               	addwfc	(?___wmul+1)& (0+255),w,b
  1032  0002CC  0100               	movlb	0	; () banked
  1033  0002CE  6FE7               	movwf	(TM1640_Show_integer@Numbers+1)& (0+255),b
  1034  0002D0  ECB2  F000         	call	_TM1640_Show_integer	;wreg free
  1035                           
  1036                           ;Run.c: 100: LED_Control(1,1);
  1037  0002D4  0E01               	movlw	1
  1038  0002D6  0100               	movlb	0	; () banked
  1039  0002D8  6FDF               	movwf	LED_Control@_switch& (0+255),b
  1040  0002DA  0E01               	movlw	1
  1041  0002DC  ECEE  F002         	call	_LED_Control
  1042                           
  1043                           ;Run.c: 101: }
  1044  0002E0  D02A               	goto	l3572
  1045  0002E2                     l3568:
  1046                           
  1047                           ;Run.c: 103: else
  1048                           ;Run.c: 104: {
  1049                           ;Run.c: 105: TM1640_Show_integer( ga_RS485_ReceiveBuff[g_RS485_Byte] + (g_RS485_Byte * 1
      +                          000) );
  1050  0002E2  C014  F0DF         	movff	_g_RS485_Byte,___wmul@multiplier
  1051  0002E6  0100               	movlb	0	; () banked
  1052  0002E8  6BE0               	clrf	(___wmul@multiplier+1)& (0+255),b
  1053  0002EA  0E03               	movlw	3
  1054  0002EC  0100               	movlb	0	; () banked
  1055  0002EE  6FE2               	movwf	(___wmul@multiplicand+1)& (0+255),b
  1056  0002F0  0EE8               	movlw	232
  1057  0002F2  6FE1               	movwf	___wmul@multiplicand& (0+255),b
  1058  0002F4  ECC8  F003         	call	___wmul	;wreg free
  1059  0002F8  5014               	movf	_g_RS485_Byte,w,c
  1060  0002FA  0D01               	mullw	1
  1061  0002FC  0EC5               	movlw	low _ga_RS485_ReceiveBuff
  1062  0002FE  24F3               	addwf	prodl,w,c
  1063  000300  6ED9               	movwf	fsr2l,c
  1064  000302  0E00               	movlw	high _ga_RS485_ReceiveBuff
  1065  000304  20F4               	addwfc	prodh,w,c
  1066  000306  6EDA               	movwf	fsr2h,c
  1067  000308  50DF               	movf	indf2,w,c
  1068  00030A  0100               	movlb	0	; () banked
  1069  00030C  6FE8               	movwf	??_ShowResult& (0+255),b
  1070  00030E  0100               	movlb	0	; () banked
  1071  000310  51E8               	movf	??_ShowResult& (0+255),w,b
  1072  000312  0100               	movlb	0	; () banked
  1073  000314  25DF               	addwf	?___wmul& (0+255),w,b
  1074  000316  0100               	movlb	0	; () banked
  1075  000318  6FE6               	movwf	TM1640_Show_integer@Numbers& (0+255),b
  1076  00031A  0E00               	movlw	0
  1077  00031C  0100               	movlb	0	; () banked
  1078  00031E  21E0               	addwfc	(?___wmul+1)& (0+255),w,b
  1079  000320  0100               	movlb	0	; () banked
  1080  000322  6FE7               	movwf	(TM1640_Show_integer@Numbers+1)& (0+255),b
  1081  000324  ECB2  F000         	call	_TM1640_Show_integer	;wreg free
  1082                           
  1083                           ;Run.c: 106: LED_Control(1,0);
  1084  000328  0E00               	movlw	0
  1085  00032A  0100               	movlb	0	; () banked
  1086  00032C  6FDF               	movwf	LED_Control@_switch& (0+255),b
  1087  00032E  0E01               	movlw	1
  1088  000330  ECEE  F002         	call	_LED_Control
  1089  000334  D000               	goto	l3572
  1090  000336                     l3572:
  1091                           
  1092                           ;Run.c: 107: }
  1093                           ;Run.c: 109: TM1640_Writer_Dates(4, LED_BUS);
  1094  000336  C013  F0E4         	movff	_LED_BUS,TM1640_Writer_Dates@Date
  1095  00033A  0E04               	movlw	4
  1096  00033C  ECFC  F003         	call	_TM1640_Writer_Dates
  1097  000340  0012               	return		;funcret
  1098  000342                     __end_of_ShowResult:
  1099                           	opt stack 0
  1100                           tblptru	equ	0xFF8
  1101                           tblptrh	equ	0xFF7
  1102                           tblptrl	equ	0xFF6
  1103                           tablat	equ	0xFF5
  1104                           prodh	equ	0xFF4
  1105                           prodl	equ	0xFF3
  1106                           intcon	equ	0xFF2
  1107                           postinc0	equ	0xFEE
  1108                           wreg	equ	0xFE8
  1109                           postdec1	equ	0xFE5
  1110                           fsr1l	equ	0xFE1
  1111                           indf2	equ	0xFDF
  1112                           fsr2h	equ	0xFDA
  1113                           fsr2l	equ	0xFD9
  1114                           status	equ	0xFD8
  1115                           
  1116 ;; *************** function ___wmul *****************
  1117 ;; Defined at:
  1118 ;;		line 15 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1121 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1122 ;; Auto vars:     Size  Location     Type
  1123 ;;  product         2    4[BANK0 ] unsigned int 
  1124 ;; Return value:  Size  Location     Type
  1125 ;;                  2    0[BANK0 ] unsigned int 
  1126 ;; Registers used:
  1127 ;;		wreg, status,2, status,0, prodl, prodh
  1128 ;; Tracked objects:
  1129 ;;		On entry : 0/0
  1130 ;;		On exit  : 0/0
  1131 ;;		Unchanged: 0/0
  1132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1133 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1134 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1136 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1137 ;;Total ram usage:        6 bytes
  1138 ;; Hardware stack levels used:    1
  1139 ;; Hardware stack levels required when called:    2
  1140 ;; This function calls:
  1141 ;;		Nothing
  1142 ;; This function is called by:
  1143 ;;		_ShowResult
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147                           	psect	text6
  1148  000790                     __ptext6:
  1149                           	opt stack 0
  1150  000790                     ___wmul:
  1151                           	opt stack 27
  1152                           
  1153                           ;incstack = 0
  1154  000790  0100               	movlb	0	; () banked
  1155  000792  51DF               	movf	___wmul@multiplier& (0+255),w,b
  1156  000794  0100               	movlb	0	; () banked
  1157  000796  03E1               	mulwf	___wmul@multiplicand& (0+255),b
  1158  000798  CFF3 F0E3          	movff	prodl,___wmul@product
  1159  00079C  CFF4 F0E4          	movff	prodh,___wmul@product+1
  1160  0007A0  0100               	movlb	0	; () banked
  1161  0007A2  51DF               	movf	___wmul@multiplier& (0+255),w,b
  1162  0007A4  0100               	movlb	0	; () banked
  1163  0007A6  03E2               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1164  0007A8  50F3               	movf	prodl,w,c
  1165  0007AA  0100               	movlb	0	; () banked
  1166  0007AC  27E4               	addwf	(___wmul@product+1)& (0+255),f,b
  1167  0007AE  0100               	movlb	0	; () banked
  1168  0007B0  51E0               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1169  0007B2  0100               	movlb	0	; () banked
  1170  0007B4  03E1               	mulwf	___wmul@multiplicand& (0+255),b
  1171  0007B6  50F3               	movf	prodl,w,c
  1172  0007B8  0100               	movlb	0	; () banked
  1173  0007BA  27E4               	addwf	(___wmul@product+1)& (0+255),f,b
  1174                           
  1175                           ; BSR set to: 0
  1176  0007BC  C0E3  F0DF         	movff	___wmul@product,?___wmul
  1177  0007C0  C0E4  F0E0         	movff	___wmul@product+1,?___wmul+1
  1178  0007C4  0012               	return	
  1179                           
  1180                           ; BSR set to: 0
  1181                           
  1182                           ; BSR set to: 0
  1183  0007C6  0012               	return		;funcret
  1184  0007C8                     __end_of___wmul:
  1185                           	opt stack 0
  1186                           tblptru	equ	0xFF8
  1187                           tblptrh	equ	0xFF7
  1188                           tblptrl	equ	0xFF6
  1189                           tablat	equ	0xFF5
  1190                           prodh	equ	0xFF4
  1191                           prodl	equ	0xFF3
  1192                           intcon	equ	0xFF2
  1193                           postinc0	equ	0xFEE
  1194                           wreg	equ	0xFE8
  1195                           postdec1	equ	0xFE5
  1196                           fsr1l	equ	0xFE1
  1197                           indf2	equ	0xFDF
  1198                           fsr2h	equ	0xFDA
  1199                           fsr2l	equ	0xFD9
  1200                           status	equ	0xFD8
  1201                           
  1202 ;; *************** function _TM1640_Show_integer *****************
  1203 ;; Defined at:
  1204 ;;		line 206 in file "_01_USER/TM1640.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;  Numbers         2    7[BANK0 ] unsigned int 
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;		None
  1209 ;; Return value:  Size  Location     Type
  1210 ;;		None               void
  1211 ;; Registers used:
  1212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1213 ;; Tracked objects:
  1214 ;;		On entry : 0/0
  1215 ;;		On exit  : 0/0
  1216 ;;		Unchanged: 0/0
  1217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1218 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1221 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1222 ;;Total ram usage:        2 bytes
  1223 ;; Hardware stack levels used:    1
  1224 ;; Hardware stack levels required when called:    5
  1225 ;; This function calls:
  1226 ;;		_TM1640_Writer_Dates
  1227 ;;		___lwdiv
  1228 ;;		___lwmod
  1229 ;; This function is called by:
  1230 ;;		_ShowResult
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           	psect	text7
  1235  000164                     __ptext7:
  1236                           	opt stack 0
  1237  000164                     _TM1640_Show_integer:
  1238                           	opt stack 24
  1239                           
  1240                           ;TM1640.c: 209: TM1640_Writer_Dates(3,LED_Number[Numbers%10]); Numbers/=10;
  1241                           
  1242                           ; BSR set to: 0
  1243                           ;incstack = 0
  1244  000164  C0E6  F0DF         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1245  000168  C0E7  F0E0         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1246  00016C  0E00               	movlw	0
  1247  00016E  0100               	movlb	0	; () banked
  1248  000170  6FE2               	movwf	(___lwmod@divisor+1)& (0+255),b
  1249  000172  0E0A               	movlw	10
  1250  000174  6FE1               	movwf	___lwmod@divisor& (0+255),b
  1251  000176  EC56  F002         	call	___lwmod	;wreg free
  1252  00017A  0ECF               	movlw	low _LED_Number
  1253  00017C  0100               	movlb	0	; () banked
  1254  00017E  25DF               	addwf	?___lwmod& (0+255),w,b
  1255  000180  6ED9               	movwf	fsr2l,c
  1256  000182  0E00               	movlw	high _LED_Number
  1257  000184  0100               	movlb	0	; () banked
  1258  000186  21E0               	addwfc	(?___lwmod+1)& (0+255),w,b
  1259  000188  6EDA               	movwf	fsr2h,c
  1260  00018A  50DF               	movf	indf2,w,c
  1261  00018C  0100               	movlb	0	; () banked
  1262  00018E  6FE4               	movwf	TM1640_Writer_Dates@Date& (0+255),b
  1263  000190  0E03               	movlw	3
  1264  000192  ECFC  F003         	call	_TM1640_Writer_Dates
  1265  000196  C0E6  F0DF         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1266  00019A  C0E7  F0E0         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1267  00019E  0E00               	movlw	0
  1268  0001A0  0100               	movlb	0	; () banked
  1269  0001A2  6FE2               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1270  0001A4  0E0A               	movlw	10
  1271  0001A6  6FE1               	movwf	___lwdiv@divisor& (0+255),b
  1272  0001A8  ECA1  F001         	call	___lwdiv	;wreg free
  1273  0001AC  C0DF  F0E6         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1274  0001B0  C0E0  F0E7         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1275                           
  1276                           ;TM1640.c: 210: TM1640_Writer_Dates(2,LED_Number[Numbers%10]); Numbers/=10;
  1277  0001B4  C0E6  F0DF         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1278  0001B8  C0E7  F0E0         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1279  0001BC  0E00               	movlw	0
  1280  0001BE  0100               	movlb	0	; () banked
  1281  0001C0  6FE2               	movwf	(___lwmod@divisor+1)& (0+255),b
  1282  0001C2  0E0A               	movlw	10
  1283  0001C4  6FE1               	movwf	___lwmod@divisor& (0+255),b
  1284  0001C6  EC56  F002         	call	___lwmod	;wreg free
  1285  0001CA  0ECF               	movlw	low _LED_Number
  1286  0001CC  0100               	movlb	0	; () banked
  1287  0001CE  25DF               	addwf	?___lwmod& (0+255),w,b
  1288  0001D0  6ED9               	movwf	fsr2l,c
  1289  0001D2  0E00               	movlw	high _LED_Number
  1290  0001D4  0100               	movlb	0	; () banked
  1291  0001D6  21E0               	addwfc	(?___lwmod+1)& (0+255),w,b
  1292  0001D8  6EDA               	movwf	fsr2h,c
  1293  0001DA  50DF               	movf	indf2,w,c
  1294  0001DC  0100               	movlb	0	; () banked
  1295  0001DE  6FE4               	movwf	TM1640_Writer_Dates@Date& (0+255),b
  1296  0001E0  0E02               	movlw	2
  1297  0001E2  ECFC  F003         	call	_TM1640_Writer_Dates
  1298  0001E6  C0E6  F0DF         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1299  0001EA  C0E7  F0E0         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1300  0001EE  0E00               	movlw	0
  1301  0001F0  0100               	movlb	0	; () banked
  1302  0001F2  6FE2               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1303  0001F4  0E0A               	movlw	10
  1304  0001F6  6FE1               	movwf	___lwdiv@divisor& (0+255),b
  1305  0001F8  ECA1  F001         	call	___lwdiv	;wreg free
  1306  0001FC  C0DF  F0E6         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1307  000200  C0E0  F0E7         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1308                           
  1309                           ;TM1640.c: 211: TM1640_Writer_Dates(1,LED_Number[Numbers%10]); Numbers/=10;
  1310  000204  C0E6  F0DF         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1311  000208  C0E7  F0E0         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1312  00020C  0E00               	movlw	0
  1313  00020E  0100               	movlb	0	; () banked
  1314  000210  6FE2               	movwf	(___lwmod@divisor+1)& (0+255),b
  1315  000212  0E0A               	movlw	10
  1316  000214  6FE1               	movwf	___lwmod@divisor& (0+255),b
  1317  000216  EC56  F002         	call	___lwmod	;wreg free
  1318  00021A  0ECF               	movlw	low _LED_Number
  1319  00021C  0100               	movlb	0	; () banked
  1320  00021E  25DF               	addwf	?___lwmod& (0+255),w,b
  1321  000220  6ED9               	movwf	fsr2l,c
  1322  000222  0E00               	movlw	high _LED_Number
  1323  000224  0100               	movlb	0	; () banked
  1324  000226  21E0               	addwfc	(?___lwmod+1)& (0+255),w,b
  1325  000228  6EDA               	movwf	fsr2h,c
  1326  00022A  50DF               	movf	indf2,w,c
  1327  00022C  0100               	movlb	0	; () banked
  1328  00022E  6FE4               	movwf	TM1640_Writer_Dates@Date& (0+255),b
  1329  000230  0E01               	movlw	1
  1330  000232  ECFC  F003         	call	_TM1640_Writer_Dates
  1331  000236  C0E6  F0DF         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1332  00023A  C0E7  F0E0         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1333  00023E  0E00               	movlw	0
  1334  000240  0100               	movlb	0	; () banked
  1335  000242  6FE2               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1336  000244  0E0A               	movlw	10
  1337  000246  6FE1               	movwf	___lwdiv@divisor& (0+255),b
  1338  000248  ECA1  F001         	call	___lwdiv	;wreg free
  1339  00024C  C0DF  F0E6         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1340  000250  C0E0  F0E7         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1341                           
  1342                           ;TM1640.c: 212: TM1640_Writer_Dates(0,LED_Number[Numbers%10]);
  1343  000254  C0E6  F0DF         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1344  000258  C0E7  F0E0         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1345  00025C  0E00               	movlw	0
  1346  00025E  0100               	movlb	0	; () banked
  1347  000260  6FE2               	movwf	(___lwmod@divisor+1)& (0+255),b
  1348  000262  0E0A               	movlw	10
  1349  000264  6FE1               	movwf	___lwmod@divisor& (0+255),b
  1350  000266  EC56  F002         	call	___lwmod	;wreg free
  1351  00026A  0ECF               	movlw	low _LED_Number
  1352  00026C  0100               	movlb	0	; () banked
  1353  00026E  25DF               	addwf	?___lwmod& (0+255),w,b
  1354  000270  6ED9               	movwf	fsr2l,c
  1355  000272  0E00               	movlw	high _LED_Number
  1356  000274  0100               	movlb	0	; () banked
  1357  000276  21E0               	addwfc	(?___lwmod+1)& (0+255),w,b
  1358  000278  6EDA               	movwf	fsr2h,c
  1359  00027A  50DF               	movf	indf2,w,c
  1360  00027C  0100               	movlb	0	; () banked
  1361  00027E  6FE4               	movwf	TM1640_Writer_Dates@Date& (0+255),b
  1362  000280  0E00               	movlw	0
  1363  000282  ECFC  F003         	call	_TM1640_Writer_Dates
  1364  000286  0012               	return		;funcret
  1365  000288                     __end_of_TM1640_Show_integer:
  1366                           	opt stack 0
  1367                           tblptru	equ	0xFF8
  1368                           tblptrh	equ	0xFF7
  1369                           tblptrl	equ	0xFF6
  1370                           tablat	equ	0xFF5
  1371                           prodh	equ	0xFF4
  1372                           prodl	equ	0xFF3
  1373                           intcon	equ	0xFF2
  1374                           postinc0	equ	0xFEE
  1375                           wreg	equ	0xFE8
  1376                           postdec1	equ	0xFE5
  1377                           fsr1l	equ	0xFE1
  1378                           indf2	equ	0xFDF
  1379                           fsr2h	equ	0xFDA
  1380                           fsr2l	equ	0xFD9
  1381                           status	equ	0xFD8
  1382                           
  1383 ;; *************** function ___lwmod *****************
  1384 ;; Defined at:
  1385 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;  dividend        2    0[BANK0 ] unsigned int 
  1388 ;;  divisor         2    2[BANK0 ] unsigned int 
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;  counter         1    4[BANK0 ] unsigned char 
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  2    0[BANK0 ] unsigned int 
  1393 ;; Registers used:
  1394 ;;		wreg, status,2, status,0
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1400 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1401 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1403 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1404 ;;Total ram usage:        5 bytes
  1405 ;; Hardware stack levels used:    1
  1406 ;; Hardware stack levels required when called:    2
  1407 ;; This function calls:
  1408 ;;		Nothing
  1409 ;; This function is called by:
  1410 ;;		_TM1640_Show_integer
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           	psect	text8
  1415  0004AC                     __ptext8:
  1416                           	opt stack 0
  1417  0004AC                     ___lwmod:
  1418                           	opt stack 26
  1419                           
  1420                           ;incstack = 0
  1421  0004AC  0100               	movlb	0	; () banked
  1422  0004AE  51E1               	movf	___lwmod@divisor& (0+255),w,b
  1423  0004B0  0100               	movlb	0	; () banked
  1424  0004B2  11E2               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  1425  0004B4  B4D8               	btfsc	status,2,c
  1426  0004B6  D02B               	goto	l1211
  1427                           
  1428                           ; BSR set to: 0
  1429  0004B8  0E01               	movlw	1
  1430  0004BA  0100               	movlb	0	; () banked
  1431  0004BC  6FE3               	movwf	___lwmod@counter& (0+255),b
  1432  0004BE  D007               	goto	l3382
  1433  0004C0                     l3380:
  1434                           
  1435                           ; BSR set to: 0
  1436  0004C0  0100               	movlb	0	; () banked
  1437  0004C2  90D8               	bcf	status,0,c
  1438  0004C4  37E1               	rlcf	___lwmod@divisor& (0+255),f,b
  1439  0004C6  37E2               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1440  0004C8  0100               	movlb	0	; () banked
  1441  0004CA  2BE3               	incf	___lwmod@counter& (0+255),f,b
  1442  0004CC  D000               	goto	l3382
  1443  0004CE                     l3382:
  1444                           
  1445                           ; BSR set to: 0
  1446  0004CE  0100               	movlb	0	; () banked
  1447  0004D0  BFE2               	btfsc	(___lwmod@divisor+1)& (0+255),7,b
  1448  0004D2  D002               	goto	l3384
  1449  0004D4  D7F5               	goto	l3380
  1450                           
  1451                           ; BSR set to: 0
  1452  0004D6  D000               	goto	l3384
  1453  0004D8                     l3384:
  1454                           
  1455                           ; BSR set to: 0
  1456  0004D8  0100               	movlb	0	; () banked
  1457  0004DA  51E1               	movf	___lwmod@divisor& (0+255),w,b
  1458  0004DC  0100               	movlb	0	; () banked
  1459  0004DE  5DDF               	subwf	___lwmod@dividend& (0+255),w,b
  1460  0004E0  0100               	movlb	0	; () banked
  1461  0004E2  51E2               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1462  0004E4  0100               	movlb	0	; () banked
  1463  0004E6  59E0               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1464  0004E8  A0D8               	btfss	status,0,c
  1465  0004EA  D009               	goto	l3388
  1466                           
  1467                           ; BSR set to: 0
  1468  0004EC  0100               	movlb	0	; () banked
  1469  0004EE  51E1               	movf	___lwmod@divisor& (0+255),w,b
  1470  0004F0  0100               	movlb	0	; () banked
  1471  0004F2  5FDF               	subwf	___lwmod@dividend& (0+255),f,b
  1472  0004F4  0100               	movlb	0	; () banked
  1473  0004F6  51E2               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1474  0004F8  0100               	movlb	0	; () banked
  1475  0004FA  5BE0               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1476  0004FC  D000               	goto	l3388
  1477  0004FE                     l3388:
  1478                           
  1479                           ; BSR set to: 0
  1480  0004FE  0100               	movlb	0	; () banked
  1481  000500  90D8               	bcf	status,0,c
  1482  000502  33E2               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1483  000504  33E1               	rrcf	___lwmod@divisor& (0+255),f,b
  1484                           
  1485                           ; BSR set to: 0
  1486  000506  0100               	movlb	0	; () banked
  1487  000508  2FE3               	decfsz	___lwmod@counter& (0+255),f,b
  1488  00050A  D7E6               	goto	l3384
  1489  00050C  D000               	goto	l1211
  1490  00050E                     l1211:
  1491                           
  1492                           ; BSR set to: 0
  1493  00050E  C0DF  F0DF         	movff	___lwmod@dividend,?___lwmod
  1494  000512  C0E0  F0E0         	movff	___lwmod@dividend+1,?___lwmod+1
  1495                           
  1496                           ; BSR set to: 0
  1497  000516  0012               	return		;funcret
  1498  000518                     __end_of___lwmod:
  1499                           	opt stack 0
  1500                           tblptru	equ	0xFF8
  1501                           tblptrh	equ	0xFF7
  1502                           tblptrl	equ	0xFF6
  1503                           tablat	equ	0xFF5
  1504                           prodh	equ	0xFF4
  1505                           prodl	equ	0xFF3
  1506                           intcon	equ	0xFF2
  1507                           postinc0	equ	0xFEE
  1508                           wreg	equ	0xFE8
  1509                           postdec1	equ	0xFE5
  1510                           fsr1l	equ	0xFE1
  1511                           indf2	equ	0xFDF
  1512                           fsr2h	equ	0xFDA
  1513                           fsr2l	equ	0xFD9
  1514                           status	equ	0xFD8
  1515                           
  1516 ;; *************** function ___lwdiv *****************
  1517 ;; Defined at:
  1518 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;  dividend        2    0[BANK0 ] unsigned int 
  1521 ;;  divisor         2    2[BANK0 ] unsigned int 
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;  quotient        2    5[BANK0 ] unsigned int 
  1524 ;;  counter         1    4[BANK0 ] unsigned char 
  1525 ;; Return value:  Size  Location     Type
  1526 ;;                  2    0[BANK0 ] unsigned int 
  1527 ;; Registers used:
  1528 ;;		wreg, status,2, status,0
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1534 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1535 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1537 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1538 ;;Total ram usage:        7 bytes
  1539 ;; Hardware stack levels used:    1
  1540 ;; Hardware stack levels required when called:    2
  1541 ;; This function calls:
  1542 ;;		Nothing
  1543 ;; This function is called by:
  1544 ;;		_TM1640_Show_integer
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           	psect	text9
  1549  000342                     __ptext9:
  1550                           	opt stack 0
  1551  000342                     ___lwdiv:
  1552                           	opt stack 26
  1553                           
  1554                           ; BSR set to: 0
  1555                           ;incstack = 0
  1556  000342  0E00               	movlw	0
  1557  000344  0100               	movlb	0	; () banked
  1558  000346  6FE5               	movwf	(___lwdiv@quotient+1)& (0+255),b
  1559  000348  0E00               	movlw	0
  1560  00034A  6FE4               	movwf	___lwdiv@quotient& (0+255),b
  1561                           
  1562                           ; BSR set to: 0
  1563  00034C  0100               	movlb	0	; () banked
  1564  00034E  51E1               	movf	___lwdiv@divisor& (0+255),w,b
  1565  000350  0100               	movlb	0	; () banked
  1566  000352  11E2               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  1567  000354  B4D8               	btfsc	status,2,c
  1568  000356  D031               	goto	l1201
  1569                           
  1570                           ; BSR set to: 0
  1571  000358  0E01               	movlw	1
  1572  00035A  0100               	movlb	0	; () banked
  1573  00035C  6FE3               	movwf	___lwdiv@counter& (0+255),b
  1574  00035E  D007               	goto	l3362
  1575  000360                     l3360:
  1576                           
  1577                           ; BSR set to: 0
  1578  000360  0100               	movlb	0	; () banked
  1579  000362  90D8               	bcf	status,0,c
  1580  000364  37E1               	rlcf	___lwdiv@divisor& (0+255),f,b
  1581  000366  37E2               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  1582  000368  0100               	movlb	0	; () banked
  1583  00036A  2BE3               	incf	___lwdiv@counter& (0+255),f,b
  1584  00036C  D000               	goto	l3362
  1585  00036E                     l3362:
  1586                           
  1587                           ; BSR set to: 0
  1588  00036E  0100               	movlb	0	; () banked
  1589  000370  BFE2               	btfsc	(___lwdiv@divisor+1)& (0+255),7,b
  1590  000372  D002               	goto	l3364
  1591  000374  D7F5               	goto	l3360
  1592                           
  1593                           ; BSR set to: 0
  1594  000376  D000               	goto	l3364
  1595  000378                     l3364:
  1596                           
  1597                           ; BSR set to: 0
  1598  000378  0100               	movlb	0	; () banked
  1599  00037A  90D8               	bcf	status,0,c
  1600  00037C  37E4               	rlcf	___lwdiv@quotient& (0+255),f,b
  1601  00037E  37E5               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  1602                           
  1603                           ; BSR set to: 0
  1604  000380  0100               	movlb	0	; () banked
  1605  000382  51E1               	movf	___lwdiv@divisor& (0+255),w,b
  1606  000384  0100               	movlb	0	; () banked
  1607  000386  5DDF               	subwf	___lwdiv@dividend& (0+255),w,b
  1608  000388  0100               	movlb	0	; () banked
  1609  00038A  51E2               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  1610  00038C  0100               	movlb	0	; () banked
  1611  00038E  59E0               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  1612  000390  A0D8               	btfss	status,0,c
  1613  000392  D00B               	goto	l3372
  1614                           
  1615                           ; BSR set to: 0
  1616  000394  0100               	movlb	0	; () banked
  1617  000396  51E1               	movf	___lwdiv@divisor& (0+255),w,b
  1618  000398  0100               	movlb	0	; () banked
  1619  00039A  5FDF               	subwf	___lwdiv@dividend& (0+255),f,b
  1620  00039C  0100               	movlb	0	; () banked
  1621  00039E  51E2               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  1622  0003A0  0100               	movlb	0	; () banked
  1623  0003A2  5BE0               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  1624                           
  1625                           ; BSR set to: 0
  1626  0003A4  0100               	movlb	0	; () banked
  1627  0003A6  81E4               	bsf	___lwdiv@quotient& (0+255),0,b
  1628  0003A8  D000               	goto	l3372
  1629  0003AA                     l3372:
  1630                           
  1631                           ; BSR set to: 0
  1632  0003AA  0100               	movlb	0	; () banked
  1633  0003AC  90D8               	bcf	status,0,c
  1634  0003AE  33E2               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  1635  0003B0  33E1               	rrcf	___lwdiv@divisor& (0+255),f,b
  1636                           
  1637                           ; BSR set to: 0
  1638  0003B2  0100               	movlb	0	; () banked
  1639  0003B4  2FE3               	decfsz	___lwdiv@counter& (0+255),f,b
  1640  0003B6  D7E0               	goto	l3364
  1641  0003B8  D000               	goto	l1201
  1642  0003BA                     l1201:
  1643                           
  1644                           ; BSR set to: 0
  1645  0003BA  C0E4  F0DF         	movff	___lwdiv@quotient,?___lwdiv
  1646  0003BE  C0E5  F0E0         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1647                           
  1648                           ; BSR set to: 0
  1649  0003C2  0012               	return		;funcret
  1650  0003C4                     __end_of___lwdiv:
  1651                           	opt stack 0
  1652                           tblptru	equ	0xFF8
  1653                           tblptrh	equ	0xFF7
  1654                           tblptrl	equ	0xFF6
  1655                           tablat	equ	0xFF5
  1656                           prodh	equ	0xFF4
  1657                           prodl	equ	0xFF3
  1658                           intcon	equ	0xFF2
  1659                           postinc0	equ	0xFEE
  1660                           wreg	equ	0xFE8
  1661                           postdec1	equ	0xFE5
  1662                           fsr1l	equ	0xFE1
  1663                           indf2	equ	0xFDF
  1664                           fsr2h	equ	0xFDA
  1665                           fsr2l	equ	0xFD9
  1666                           status	equ	0xFD8
  1667                           
  1668 ;; *************** function _TM1640_Writer_Dates *****************
  1669 ;; Defined at:
  1670 ;;		line 99 in file "_01_USER/TM1640.c"
  1671 ;; Parameters:    Size  Location     Type
  1672 ;;  Addr            1    wreg     unsigned char 
  1673 ;;  Date            1    5[BANK0 ] unsigned char 
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;  Addr            1    6[BANK0 ] unsigned char 
  1676 ;; Return value:  Size  Location     Type
  1677 ;;		None               void
  1678 ;; Registers used:
  1679 ;;		wreg, status,2, status,0, cstack
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1685 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1686 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1688 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1689 ;;Total ram usage:        2 bytes
  1690 ;; Hardware stack levels used:    1
  1691 ;; Hardware stack levels required when called:    4
  1692 ;; This function calls:
  1693 ;;		_TM1640_Start
  1694 ;;		_TM1640_Stop
  1695 ;;		_TM1640_Writer_Byte
  1696 ;; This function is called by:
  1697 ;;		_TM1640_Show_integer
  1698 ;;		_ShowResult
  1699 ;;		_TM1640_Show_Numbers
  1700 ;;		_TM1640_Show_Decimal
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704                           	psect	text10
  1705  0007F8                     __ptext10:
  1706                           	opt stack 0
  1707  0007F8                     _TM1640_Writer_Dates:
  1708                           	opt stack 25
  1709                           
  1710                           ; BSR set to: 0
  1711                           ;incstack = 0
  1712                           ;TM1640_Writer_Dates@Addr stored from wreg
  1713  0007F8  0100               	movlb	0	; () banked
  1714  0007FA  6FE5               	movwf	TM1640_Writer_Dates@Addr& (0+255),b
  1715                           
  1716                           ; BSR set to: 0
  1717                           ;TM1640.c: 101: if((Addr >= 0) && (Addr <= 15))
  1718  0007FC  0E10               	movlw	16
  1719  0007FE  0100               	movlb	0	; () banked
  1720  000800  61E5               	cpfslt	TM1640_Writer_Dates@Addr& (0+255),b
  1721  000802  0012               	return	
  1722                           
  1723                           ; BSR set to: 0
  1724                           ;TM1640.c: 102: {
  1725                           ;TM1640.c: 103: TM1640_Start();
  1726  000804  EC49  F004         	call	_TM1640_Start	;wreg free
  1727                           
  1728                           ;TM1640.c: 104: TM1640_Writer_Byte(0xC0 + Addr);
  1729  000808  0100               	movlb	0	; () banked
  1730  00080A  51E5               	movf	TM1640_Writer_Dates@Addr& (0+255),w,b
  1731  00080C  0FC0               	addlw	192
  1732  00080E  EC42  F003         	call	_TM1640_Writer_Byte
  1733                           
  1734                           ;TM1640.c: 105: TM1640_Writer_Byte(Date);
  1735  000812  0100               	movlb	0	; () banked
  1736  000814  51E4               	movf	TM1640_Writer_Dates@Date& (0+255),w,b
  1737  000816  EC42  F003         	call	_TM1640_Writer_Byte
  1738                           
  1739                           ;TM1640.c: 106: TM1640_Stop();
  1740  00081A  EC37  F004         	call	_TM1640_Stop	;wreg free
  1741  00081E  0012               	return	
  1742  000820  0012               	return		;funcret
  1743  000822                     __end_of_TM1640_Writer_Dates:
  1744                           	opt stack 0
  1745                           tblptru	equ	0xFF8
  1746                           tblptrh	equ	0xFF7
  1747                           tblptrl	equ	0xFF6
  1748                           tablat	equ	0xFF5
  1749                           prodh	equ	0xFF4
  1750                           prodl	equ	0xFF3
  1751                           intcon	equ	0xFF2
  1752                           postinc0	equ	0xFEE
  1753                           wreg	equ	0xFE8
  1754                           postdec1	equ	0xFE5
  1755                           fsr1l	equ	0xFE1
  1756                           indf2	equ	0xFDF
  1757                           fsr2h	equ	0xFDA
  1758                           fsr2l	equ	0xFD9
  1759                           status	equ	0xFD8
  1760                           
  1761 ;; *************** function _LED_Control *****************
  1762 ;; Defined at:
  1763 ;;		line 58 in file "_01_USER/GPIO.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;  _LED_num        1    wreg     unsigned char 
  1766 ;;  _switch         1    0[BANK0 ] unsigned char 
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;  _LED_num        1    1[BANK0 ] unsigned char 
  1769 ;; Return value:  Size  Location     Type
  1770 ;;		None               void
  1771 ;; Registers used:
  1772 ;;		wreg, status,2, status,0
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1778 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1779 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1781 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1782 ;;Total ram usage:        2 bytes
  1783 ;; Hardware stack levels used:    1
  1784 ;; Hardware stack levels required when called:    2
  1785 ;; This function calls:
  1786 ;;		Nothing
  1787 ;; This function is called by:
  1788 ;;		_main
  1789 ;;		_ShowResult
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793                           	psect	text11
  1794  0005DC                     __ptext11:
  1795                           	opt stack 0
  1796  0005DC                     _LED_Control:
  1797                           	opt stack 27
  1798                           
  1799                           ;incstack = 0
  1800                           ;LED_Control@_LED_num stored from wreg
  1801  0005DC  0100               	movlb	0	; () banked
  1802  0005DE  6FE0               	movwf	LED_Control@_LED_num& (0+255),b
  1803                           
  1804                           ; BSR set to: 0
  1805                           ;GPIO.c: 62: if(_LED_num == 1)
  1806  0005E0  0100               	movlb	0	; () banked
  1807  0005E2  05E0               	decf	LED_Control@_LED_num& (0+255),w,b
  1808  0005E4  A4D8               	btfss	status,2,c
  1809  0005E6  D009               	goto	l3400
  1810                           
  1811                           ; BSR set to: 0
  1812                           ;GPIO.c: 63: if(_switch) LED_BUS |= 0x01;
  1813  0005E8  0100               	movlb	0	; () banked
  1814  0005EA  51DF               	movf	LED_Control@_switch& (0+255),w,b
  1815  0005EC  0100               	movlb	0	; () banked
  1816  0005EE  B4D8               	btfsc	status,2,c
  1817  0005F0  D002               	goto	l3398
  1818                           
  1819                           ; BSR set to: 0
  1820  0005F2  8013               	bsf	_LED_BUS,0,c
  1821  0005F4  D002               	goto	l3400
  1822  0005F6                     l3398:
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;GPIO.c: 64: else LED_BUS &= 0xFE;
  1826  0005F6  9013               	bcf	_LED_BUS,0,c
  1827                           
  1828                           ; BSR set to: 0
  1829  0005F8  D000               	goto	l3400
  1830  0005FA                     l3400:
  1831                           
  1832                           ; BSR set to: 0
  1833                           ;GPIO.c: 66: if(_LED_num == 2)
  1834  0005FA  0E02               	movlw	2
  1835  0005FC  0100               	movlb	0	; () banked
  1836  0005FE  19E0               	xorwf	LED_Control@_LED_num& (0+255),w,b
  1837  000600  A4D8               	btfss	status,2,c
  1838  000602  D009               	goto	l3408
  1839                           
  1840                           ; BSR set to: 0
  1841                           ;GPIO.c: 67: if(_switch) LED_BUS |= 0x02;
  1842  000604  0100               	movlb	0	; () banked
  1843  000606  51DF               	movf	LED_Control@_switch& (0+255),w,b
  1844  000608  0100               	movlb	0	; () banked
  1845  00060A  B4D8               	btfsc	status,2,c
  1846  00060C  D002               	goto	l3406
  1847                           
  1848                           ; BSR set to: 0
  1849  00060E  8213               	bsf	_LED_BUS,1,c
  1850  000610  D002               	goto	l3408
  1851  000612                     l3406:
  1852                           
  1853                           ; BSR set to: 0
  1854                           ;GPIO.c: 68: else LED_BUS &= 0xFD;
  1855  000612  9213               	bcf	_LED_BUS,1,c
  1856                           
  1857                           ; BSR set to: 0
  1858  000614  D000               	goto	l3408
  1859  000616                     l3408:
  1860                           
  1861                           ; BSR set to: 0
  1862                           ;GPIO.c: 70: if(_LED_num == 3)
  1863  000616  0E03               	movlw	3
  1864  000618  0100               	movlb	0	; () banked
  1865  00061A  19E0               	xorwf	LED_Control@_LED_num& (0+255),w,b
  1866  00061C  A4D8               	btfss	status,2,c
  1867  00061E  0012               	return	
  1868                           
  1869                           ; BSR set to: 0
  1870                           ;GPIO.c: 71: if(_switch) LED_BUS |= 0x04;
  1871  000620  0100               	movlb	0	; () banked
  1872  000622  51DF               	movf	LED_Control@_switch& (0+255),w,b
  1873  000624  0100               	movlb	0	; () banked
  1874  000626  B4D8               	btfsc	status,2,c
  1875  000628  D002               	goto	l3414
  1876                           
  1877                           ; BSR set to: 0
  1878  00062A  8413               	bsf	_LED_BUS,2,c
  1879  00062C  0012               	return	
  1880  00062E                     l3414:
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;GPIO.c: 72: else LED_BUS &= 0xFB;
  1884  00062E  9413               	bcf	_LED_BUS,2,c
  1885                           
  1886                           ; BSR set to: 0
  1887  000630  0012               	return	
  1888                           
  1889                           ; BSR set to: 0
  1890                           
  1891                           ; BSR set to: 0
  1892  000632  0012               	return		;funcret
  1893  000634                     __end_of_LED_Control:
  1894                           	opt stack 0
  1895                           tblptru	equ	0xFF8
  1896                           tblptrh	equ	0xFF7
  1897                           tblptrl	equ	0xFF6
  1898                           tablat	equ	0xFF5
  1899                           prodh	equ	0xFF4
  1900                           prodl	equ	0xFF3
  1901                           intcon	equ	0xFF2
  1902                           postinc0	equ	0xFEE
  1903                           wreg	equ	0xFE8
  1904                           postdec1	equ	0xFE5
  1905                           fsr1l	equ	0xFE1
  1906                           indf2	equ	0xFDF
  1907                           fsr2h	equ	0xFDA
  1908                           fsr2l	equ	0xFD9
  1909                           status	equ	0xFD8
  1910                           
  1911 ;; *************** function _SCR_Init *****************
  1912 ;; Defined at:
  1913 ;;		line 39 in file "_01_USER/SCR.c"
  1914 ;; Parameters:    Size  Location     Type
  1915 ;;		None
  1916 ;; Auto vars:     Size  Location     Type
  1917 ;;		None
  1918 ;; Return value:  Size  Location     Type
  1919 ;;		None               void
  1920 ;; Registers used:
  1921 ;;		None
  1922 ;; Tracked objects:
  1923 ;;		On entry : 0/0
  1924 ;;		On exit  : 0/0
  1925 ;;		Unchanged: 0/0
  1926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1931 ;;Total ram usage:        0 bytes
  1932 ;; Hardware stack levels used:    1
  1933 ;; Hardware stack levels required when called:    2
  1934 ;; This function calls:
  1935 ;;		Nothing
  1936 ;; This function is called by:
  1937 ;;		_main
  1938 ;; This function uses a non-reentrant model
  1939 ;;
  1940                           
  1941                           	psect	text12
  1942  000966                     __ptext12:
  1943                           	opt stack 0
  1944  000966                     _SCR_Init:
  1945                           	opt stack 28
  1946                           
  1947                           ;SCR.c: 42: TRISB1 = 0;
  1948                           
  1949                           ; BSR set to: 0
  1950                           ;incstack = 0
  1951  000966  9293               	bcf	3987,1,c	;volatile
  1952                           
  1953                           ;SCR.c: 43: TRISB0 = 0;
  1954  000968  9093               	bcf	3987,0,c	;volatile
  1955                           
  1956                           ;SCR.c: 46: TRISB2 = 1;
  1957  00096A  8493               	bsf	3987,2,c	;volatile
  1958                           
  1959                           ;SCR.c: 49: RB1 = 0;
  1960  00096C  9281               	bcf	3969,1,c	;volatile
  1961                           
  1962                           ;SCR.c: 50: RB0 = 0;
  1963  00096E  9081               	bcf	3969,0,c	;volatile
  1964  000970  0012               	return		;funcret
  1965  000972                     __end_of_SCR_Init:
  1966                           	opt stack 0
  1967                           tblptru	equ	0xFF8
  1968                           tblptrh	equ	0xFF7
  1969                           tblptrl	equ	0xFF6
  1970                           tablat	equ	0xFF5
  1971                           prodh	equ	0xFF4
  1972                           prodl	equ	0xFF3
  1973                           intcon	equ	0xFF2
  1974                           postinc0	equ	0xFEE
  1975                           wreg	equ	0xFE8
  1976                           postdec1	equ	0xFE5
  1977                           fsr1l	equ	0xFE1
  1978                           indf2	equ	0xFDF
  1979                           fsr2h	equ	0xFDA
  1980                           fsr2l	equ	0xFD9
  1981                           status	equ	0xFD8
  1982                           
  1983 ;; *************** function _Relay_Init *****************
  1984 ;; Defined at:
  1985 ;;		line 39 in file "_01_USER/Relay.c"
  1986 ;; Parameters:    Size  Location     Type
  1987 ;;		None
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;		None
  1990 ;; Return value:  Size  Location     Type
  1991 ;;		None               void
  1992 ;; Registers used:
  1993 ;;		None
  1994 ;; Tracked objects:
  1995 ;;		On entry : 0/0
  1996 ;;		On exit  : 0/0
  1997 ;;		Unchanged: 0/0
  1998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2003 ;;Total ram usage:        0 bytes
  2004 ;; Hardware stack levels used:    1
  2005 ;; Hardware stack levels required when called:    2
  2006 ;; This function calls:
  2007 ;;		Nothing
  2008 ;; This function is called by:
  2009 ;;		_main
  2010 ;; This function uses a non-reentrant model
  2011 ;;
  2012                           
  2013                           	psect	text13
  2014  000958                     __ptext13:
  2015                           	opt stack 0
  2016  000958                     _Relay_Init:
  2017                           	opt stack 28
  2018                           
  2019                           ;Relay.c: 42: TRISD0 = 0;
  2020                           
  2021                           ;incstack = 0
  2022  000958  9095               	bcf	3989,0,c	;volatile
  2023                           
  2024                           ;Relay.c: 43: TRISD1 = 0;
  2025  00095A  9295               	bcf	3989,1,c	;volatile
  2026                           
  2027                           ;Relay.c: 44: TRISD2 = 0;
  2028  00095C  9495               	bcf	3989,2,c	;volatile
  2029                           
  2030                           ;Relay.c: 45: TRISD3 = 0;
  2031  00095E  9695               	bcf	3989,3,c	;volatile
  2032                           
  2033                           ;Relay.c: 46: TRISD4 = 0;
  2034  000960  9895               	bcf	3989,4,c	;volatile
  2035                           
  2036                           ;Relay.c: 47: TRISD7 = 0;
  2037  000962  9E95               	bcf	3989,7,c	;volatile
  2038  000964  0012               	return		;funcret
  2039  000966                     __end_of_Relay_Init:
  2040                           	opt stack 0
  2041                           tblptru	equ	0xFF8
  2042                           tblptrh	equ	0xFF7
  2043                           tblptrl	equ	0xFF6
  2044                           tablat	equ	0xFF5
  2045                           prodh	equ	0xFF4
  2046                           prodl	equ	0xFF3
  2047                           intcon	equ	0xFF2
  2048                           postinc0	equ	0xFEE
  2049                           wreg	equ	0xFE8
  2050                           postdec1	equ	0xFE5
  2051                           fsr1l	equ	0xFE1
  2052                           indf2	equ	0xFDF
  2053                           fsr2h	equ	0xFDA
  2054                           fsr2l	equ	0xFD9
  2055                           status	equ	0xFD8
  2056                           
  2057 ;; *************** function _RS485_Init *****************
  2058 ;; Defined at:
  2059 ;;		line 47 in file "_01_USER/My_USART.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;		None
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;		None
  2064 ;; Return value:  Size  Location     Type
  2065 ;;		None               void
  2066 ;; Registers used:
  2067 ;;		wreg, status,2, cstack
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2077 ;;Total ram usage:        0 bytes
  2078 ;; Hardware stack levels used:    1
  2079 ;; Hardware stack levels required when called:    3
  2080 ;; This function calls:
  2081 ;;		_Open1USART
  2082 ;; This function is called by:
  2083 ;;		_main
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           	psect	text14
  2088  000918                     __ptext14:
  2089                           	opt stack 0
  2090  000918                     _RS485_Init:
  2091                           	opt stack 27
  2092                           
  2093                           ;My_USART.c: 49: Open1USART( 0b01111111 &
  2094                           ;My_USART.c: 50: 0b11111111 &
  2095                           ;My_USART.c: 51: 0b11111110 &
  2096                           ;My_USART.c: 52: 0b11111101 &
  2097                           ;My_USART.c: 53: 0b11111111 &
  2098                           ;My_USART.c: 54: 0b11101111
  2099                           ;My_USART.c: 55: ,
  2100                           ;My_USART.c: 56: 12
  2101                           ;My_USART.c: 57: );
  2102                           
  2103                           ;incstack = 0
  2104  000918  0E00               	movlw	0
  2105  00091A  0100               	movlb	0	; () banked
  2106  00091C  6FE0               	movwf	(Open1USART@spbrg+1)& (0+255),b
  2107  00091E  0E0C               	movlw	12
  2108  000920  6FDF               	movwf	Open1USART@spbrg& (0+255),b
  2109  000922  0E6C               	movlw	108
  2110  000924  ECE2  F001         	call	_Open1USART
  2111                           
  2112                           ;My_USART.c: 59: TRISC7 = 1;
  2113  000928  8E94               	bsf	3988,7,c	;volatile
  2114                           
  2115                           ;My_USART.c: 60: TRISC6 = 0;
  2116  00092A  9C94               	bcf	3988,6,c	;volatile
  2117                           
  2118                           ;My_USART.c: 61: TRISC0 = 0;
  2119  00092C  9094               	bcf	3988,0,c	;volatile
  2120                           
  2121                           ;My_USART.c: 62: RC0 = 1;
  2122  00092E  8082               	bsf	3970,0,c	;volatile
  2123  000930  0012               	return		;funcret
  2124  000932                     __end_of_RS485_Init:
  2125                           	opt stack 0
  2126                           tblptru	equ	0xFF8
  2127                           tblptrh	equ	0xFF7
  2128                           tblptrl	equ	0xFF6
  2129                           tablat	equ	0xFF5
  2130                           prodh	equ	0xFF4
  2131                           prodl	equ	0xFF3
  2132                           intcon	equ	0xFF2
  2133                           postinc0	equ	0xFEE
  2134                           wreg	equ	0xFE8
  2135                           postdec1	equ	0xFE5
  2136                           fsr1l	equ	0xFE1
  2137                           indf2	equ	0xFDF
  2138                           fsr2h	equ	0xFDA
  2139                           fsr2l	equ	0xFD9
  2140                           status	equ	0xFD8
  2141                           
  2142 ;; *************** function _Open1USART *****************
  2143 ;; Defined at:
  2144 ;;		line 124 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1open.c"
  2145 ;; Parameters:    Size  Location     Type
  2146 ;;  config          1    wreg     unsigned char 
  2147 ;;  spbrg           2    0[BANK0 ] unsigned int 
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;  config          1    2[BANK0 ] unsigned char 
  2150 ;; Return value:  Size  Location     Type
  2151 ;;		None               void
  2152 ;; Registers used:
  2153 ;;		wreg, status,2
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2159 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2160 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2162 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2163 ;;Total ram usage:        3 bytes
  2164 ;; Hardware stack levels used:    1
  2165 ;; Hardware stack levels required when called:    2
  2166 ;; This function calls:
  2167 ;;		Nothing
  2168 ;; This function is called by:
  2169 ;;		_RS485_Init
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           	psect	text15
  2174  0003C4                     __ptext15:
  2175                           	opt stack 0
  2176  0003C4                     _Open1USART:
  2177                           	opt stack 27
  2178                           
  2179                           ;incstack = 0
  2180                           ;Open1USART@config stored from wreg
  2181  0003C4  0100               	movlb	0	; () banked
  2182  0003C6  6FE1               	movwf	Open1USART@config& (0+255),b
  2183                           
  2184                           ; BSR set to: 0
  2185  0003C8  0E00               	movlw	0
  2186  0003CA  6EAC               	movwf	4012,c	;volatile
  2187  0003CC  0E00               	movlw	0
  2188  0003CE  6EAB               	movwf	4011,c	;volatile
  2189                           
  2190                           ; BSR set to: 0
  2191  0003D0  0100               	movlb	0	; () banked
  2192  0003D2  A1E1               	btfss	Open1USART@config& (0+255),0,b
  2193  0003D4  D002               	goto	l3446
  2194                           
  2195                           ; BSR set to: 0
  2196  0003D6  88AC               	bsf	4012,4,c	;volatile
  2197  0003D8  D000               	goto	l3446
  2198  0003DA                     l3446:
  2199                           
  2200                           ; BSR set to: 0
  2201  0003DA  0100               	movlb	0	; () banked
  2202  0003DC  A3E1               	btfss	Open1USART@config& (0+255),1,b
  2203  0003DE  D003               	goto	l3450
  2204                           
  2205                           ; BSR set to: 0
  2206  0003E0  8CAC               	bsf	4012,6,c	;volatile
  2207  0003E2  8CAB               	bsf	4011,6,c	;volatile
  2208  0003E4  D000               	goto	l3450
  2209  0003E6                     l3450:
  2210                           
  2211                           ; BSR set to: 0
  2212  0003E6  0100               	movlb	0	; () banked
  2213  0003E8  A5E1               	btfss	Open1USART@config& (0+255),2,b
  2214  0003EA  D002               	goto	l3454
  2215                           
  2216                           ; BSR set to: 0
  2217  0003EC  8EAC               	bsf	4012,7,c	;volatile
  2218  0003EE  D000               	goto	l3454
  2219  0003F0                     l3454:
  2220                           
  2221                           ; BSR set to: 0
  2222  0003F0  0100               	movlb	0	; () banked
  2223  0003F2  A7E1               	btfss	Open1USART@config& (0+255),3,b
  2224  0003F4  D002               	goto	l672
  2225                           
  2226                           ; BSR set to: 0
  2227  0003F6  88AB               	bsf	4011,4,c	;volatile
  2228  0003F8  D002               	goto	l3458
  2229  0003FA                     l672:
  2230                           
  2231                           ; BSR set to: 0
  2232  0003FA  8AAB               	bsf	4011,5,c	;volatile
  2233  0003FC  D000               	goto	l3458
  2234  0003FE                     l3458:
  2235                           
  2236                           ; BSR set to: 0
  2237  0003FE  0100               	movlb	0	; () banked
  2238  000400  A9E1               	btfss	Open1USART@config& (0+255),4,b
  2239  000402  D002               	goto	l3462
  2240                           
  2241                           ; BSR set to: 0
  2242  000404  84AC               	bsf	4012,2,c	;volatile
  2243  000406  D000               	goto	l3462
  2244  000408                     l3462:
  2245                           
  2246                           ; BSR set to: 0
  2247  000408  0100               	movlb	0	; () banked
  2248  00040A  ABE1               	btfss	Open1USART@config& (0+255),5,b
  2249  00040C  D002               	goto	l3466
  2250                           
  2251                           ; BSR set to: 0
  2252  00040E  86AB               	bsf	4011,3,c	;volatile
  2253  000410  D000               	goto	l3466
  2254  000412                     l3466:
  2255                           
  2256                           ; BSR set to: 0
  2257  000412  0100               	movlb	0	; () banked
  2258  000414  ADE1               	btfss	Open1USART@config& (0+255),6,b
  2259  000416  D002               	goto	l676
  2260                           
  2261                           ; BSR set to: 0
  2262  000418  8A9D               	bsf	3997,5,c	;volatile
  2263  00041A  D002               	goto	l3470
  2264  00041C                     l676:
  2265                           
  2266                           ; BSR set to: 0
  2267  00041C  9A9D               	bcf	3997,5,c	;volatile
  2268  00041E  D000               	goto	l3470
  2269  000420                     l3470:
  2270                           
  2271                           ; BSR set to: 0
  2272  000420  0100               	movlb	0	; () banked
  2273  000422  AFE1               	btfss	Open1USART@config& (0+255),7,b
  2274  000424  D002               	goto	l678
  2275                           
  2276                           ; BSR set to: 0
  2277  000426  889D               	bsf	3997,4,c	;volatile
  2278  000428  D001               	goto	l679
  2279  00042A                     l678:
  2280                           
  2281                           ; BSR set to: 0
  2282  00042A  989D               	bcf	3997,4,c	;volatile
  2283  00042C                     l679:
  2284                           
  2285                           ; BSR set to: 0
  2286  00042C  C0DF  FFAF         	movff	Open1USART@spbrg,4015	;volatile
  2287                           
  2288                           ; BSR set to: 0
  2289  000430  0100               	movlb	0	; () banked
  2290  000432  51E0               	movf	(Open1USART@spbrg+1)& (0+255),w,b
  2291  000434  6ED4               	movwf	4052,c	;volatile
  2292                           
  2293                           ; BSR set to: 0
  2294  000436  8AAC               	bsf	4012,5,c	;volatile
  2295                           
  2296                           ; BSR set to: 0
  2297  000438  8EAB               	bsf	4011,7,c	;volatile
  2298                           
  2299                           ; BSR set to: 0
  2300  00043A  0012               	return		;funcret
  2301  00043C                     __end_of_Open1USART:
  2302                           	opt stack 0
  2303                           tblptru	equ	0xFF8
  2304                           tblptrh	equ	0xFF7
  2305                           tblptrl	equ	0xFF6
  2306                           tablat	equ	0xFF5
  2307                           prodh	equ	0xFF4
  2308                           prodl	equ	0xFF3
  2309                           intcon	equ	0xFF2
  2310                           postinc0	equ	0xFEE
  2311                           wreg	equ	0xFE8
  2312                           postdec1	equ	0xFE5
  2313                           fsr1l	equ	0xFE1
  2314                           indf2	equ	0xFDF
  2315                           fsr2h	equ	0xFDA
  2316                           fsr2l	equ	0xFD9
  2317                           status	equ	0xFD8
  2318                           
  2319 ;; *************** function _Key_Init *****************
  2320 ;; Defined at:
  2321 ;;		line 42 in file "_01_USER/Key.c"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;		None
  2324 ;; Auto vars:     Size  Location     Type
  2325 ;;		None
  2326 ;; Return value:  Size  Location     Type
  2327 ;;		None               void
  2328 ;; Registers used:
  2329 ;;		None
  2330 ;; Tracked objects:
  2331 ;;		On entry : 0/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2339 ;;Total ram usage:        0 bytes
  2340 ;; Hardware stack levels used:    1
  2341 ;; Hardware stack levels required when called:    2
  2342 ;; This function calls:
  2343 ;;		Nothing
  2344 ;; This function is called by:
  2345 ;;		_main
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349                           	psect	text16
  2350  0008FA                     __ptext16:
  2351                           	opt stack 0
  2352  0008FA                     _Key_Init:
  2353                           	opt stack 28
  2354                           
  2355                           ;Key.c: 45: TRISC1 = 1;
  2356                           
  2357                           ; BSR set to: 0
  2358                           ;incstack = 0
  2359  0008FA  8294               	bsf	3988,1,c	;volatile
  2360                           
  2361                           ;Key.c: 46: TRISF1 = 1;
  2362  0008FC  8297               	bsf	3991,1,c	;volatile
  2363                           
  2364                           ;Key.c: 47: TRISF2 = 1;
  2365  0008FE  8497               	bsf	3991,2,c	;volatile
  2366                           
  2367                           ;Key.c: 48: TRISA4 = 1;
  2368  000900  8892               	bsf	3986,4,c	;volatile
  2369                           
  2370                           ;Key.c: 49: TRISA5 = 1;
  2371  000902  8A92               	bsf	3986,5,c	;volatile
  2372                           
  2373                           ;Key.c: 50: TRISF3 = 1;
  2374  000904  8697               	bsf	3991,3,c	;volatile
  2375                           
  2376                           ;Key.c: 53: ANSEL4 = 0;
  2377  000906  010F               	movlb	15	; () banked
  2378  000908  9925               	bcf	37,4,b	;volatile
  2379                           
  2380                           ;Key.c: 54: ANSEL6 = 0;
  2381  00090A  010F               	movlb	15	; () banked
  2382  00090C  9D25               	bcf	37,6,b	;volatile
  2383                           
  2384                           ;Key.c: 55: ANSEL7 = 0;
  2385  00090E  010F               	movlb	15	; () banked
  2386  000910  9F25               	bcf	37,7,b	;volatile
  2387                           
  2388                           ;Key.c: 56: ANSEL8 = 0;
  2389  000912  010F               	movlb	15	; () banked
  2390  000914  9124               	bcf	36,0,b	;volatile
  2391                           
  2392                           ; BSR set to: 15
  2393  000916  0012               	return		;funcret
  2394  000918                     __end_of_Key_Init:
  2395                           	opt stack 0
  2396                           tblptru	equ	0xFF8
  2397                           tblptrh	equ	0xFF7
  2398                           tblptrl	equ	0xFF6
  2399                           tablat	equ	0xFF5
  2400                           prodh	equ	0xFF4
  2401                           prodl	equ	0xFF3
  2402                           intcon	equ	0xFF2
  2403                           postinc0	equ	0xFEE
  2404                           wreg	equ	0xFE8
  2405                           postdec1	equ	0xFE5
  2406                           fsr1l	equ	0xFE1
  2407                           indf2	equ	0xFDF
  2408                           fsr2h	equ	0xFDA
  2409                           fsr2l	equ	0xFD9
  2410                           status	equ	0xFD8
  2411                           
  2412 ;; *************** function _Init_TM1640 *****************
  2413 ;; Defined at:
  2414 ;;		line 21 in file "_01_USER/TM1640.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;		None
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;		None
  2419 ;; Return value:  Size  Location     Type
  2420 ;;		None               void
  2421 ;; Registers used:
  2422 ;;		wreg, status,2, status,0, cstack
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2432 ;;Total ram usage:        0 bytes
  2433 ;; Hardware stack levels used:    1
  2434 ;; Hardware stack levels required when called:    4
  2435 ;; This function calls:
  2436 ;;		_TM1640_Start
  2437 ;;		_TM1640_Stop
  2438 ;;		_TM1640_Writer_Byte
  2439 ;; This function is called by:
  2440 ;;		_main
  2441 ;; This function uses a non-reentrant model
  2442 ;;
  2443                           
  2444                           	psect	text17
  2445  000848                     __ptext17:
  2446                           	opt stack 0
  2447  000848                     _Init_TM1640:
  2448                           	opt stack 26
  2449                           
  2450                           ;TM1640.c: 24: TRISD5 = 0;
  2451                           
  2452                           ; BSR set to: 15
  2453                           ;incstack = 0
  2454  000848  9A95               	bcf	3989,5,c	;volatile
  2455                           
  2456                           ;TM1640.c: 25: TRISD6 = 0;
  2457  00084A  9C95               	bcf	3989,6,c	;volatile
  2458                           
  2459                           ;TM1640.c: 27: TM1640_Stop();
  2460  00084C  EC37  F004         	call	_TM1640_Stop	;wreg free
  2461                           
  2462                           ;TM1640.c: 29: TM1640_Start();
  2463  000850  EC49  F004         	call	_TM1640_Start	;wreg free
  2464                           
  2465                           ;TM1640.c: 30: TM1640_Writer_Byte(0x44);
  2466  000854  0E44               	movlw	68
  2467  000856  EC42  F003         	call	_TM1640_Writer_Byte
  2468                           
  2469                           ;TM1640.c: 31: TM1640_Stop();
  2470  00085A  EC37  F004         	call	_TM1640_Stop	;wreg free
  2471                           
  2472                           ;TM1640.c: 33: TM1640_Start();
  2473  00085E  EC49  F004         	call	_TM1640_Start	;wreg free
  2474                           
  2475                           ;TM1640.c: 34: TM1640_Writer_Byte(0x8F);
  2476  000862  0E8F               	movlw	143
  2477  000864  EC42  F003         	call	_TM1640_Writer_Byte
  2478                           
  2479                           ;TM1640.c: 35: TM1640_Stop();
  2480  000868  EC37  F004         	call	_TM1640_Stop	;wreg free
  2481  00086C  0012               	return		;funcret
  2482  00086E                     __end_of_Init_TM1640:
  2483                           	opt stack 0
  2484                           tblptru	equ	0xFF8
  2485                           tblptrh	equ	0xFF7
  2486                           tblptrl	equ	0xFF6
  2487                           tablat	equ	0xFF5
  2488                           prodh	equ	0xFF4
  2489                           prodl	equ	0xFF3
  2490                           intcon	equ	0xFF2
  2491                           postinc0	equ	0xFEE
  2492                           wreg	equ	0xFE8
  2493                           postdec1	equ	0xFE5
  2494                           fsr1l	equ	0xFE1
  2495                           indf2	equ	0xFDF
  2496                           fsr2h	equ	0xFDA
  2497                           fsr2l	equ	0xFD9
  2498                           status	equ	0xFD8
  2499                           
  2500 ;; *************** function _TM1640_Writer_Byte *****************
  2501 ;; Defined at:
  2502 ;;		line 116 in file "_01_USER/TM1640.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;  Date            1    wreg     unsigned char 
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;  Date            1    2[BANK0 ] unsigned char 
  2507 ;;  mask            1    3[BANK0 ] unsigned char 
  2508 ;; Return value:  Size  Location     Type
  2509 ;;		None               void
  2510 ;; Registers used:
  2511 ;;		wreg, status,2, status,0, cstack
  2512 ;; Tracked objects:
  2513 ;;		On entry : 0/0
  2514 ;;		On exit  : 0/0
  2515 ;;		Unchanged: 0/0
  2516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2518 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2520 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2521 ;;Total ram usage:        2 bytes
  2522 ;; Hardware stack levels used:    1
  2523 ;; Hardware stack levels required when called:    3
  2524 ;; This function calls:
  2525 ;;		_TM1640_Delay
  2526 ;; This function is called by:
  2527 ;;		_Init_TM1640
  2528 ;;		_TM1640_Writer_Dates
  2529 ;;		_Open_Display
  2530 ;;		_Disable_Display
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534                           	psect	text18
  2535  000684                     __ptext18:
  2536                           	opt stack 0
  2537  000684                     _TM1640_Writer_Byte:
  2538                           	opt stack 25
  2539                           
  2540                           ;incstack = 0
  2541                           ;TM1640_Writer_Byte@Date stored from wreg
  2542  000684  0100               	movlb	0	; () banked
  2543  000686  6FE1               	movwf	TM1640_Writer_Byte@Date& (0+255),b
  2544                           
  2545                           ; BSR set to: 0
  2546                           ;TM1640.c: 118: unsigned char mask;
  2547                           ;TM1640.c: 120: for(mask=0x01; mask; mask<<=1)
  2548  000688  0E01               	movlw	1
  2549  00068A  0100               	movlb	0	; () banked
  2550  00068C  6FE2               	movwf	TM1640_Writer_Byte@mask& (0+255),b
  2551  00068E  D01A               	goto	l3348
  2552  000690                     l394:
  2553                           
  2554                           ; BSR set to: 0
  2555                           ;TM1640.c: 121: {
  2556                           ;TM1640.c: 122: RD6 = 0;
  2557  000690  9C83               	bcf	3971,6,c	;volatile
  2558                           
  2559                           ; BSR set to: 0
  2560                           ;TM1640.c: 123: TM1640_Delay(1);
  2561  000692  0E01               	movlw	1
  2562  000694  EC5B  F004         	call	_TM1640_Delay
  2563                           
  2564                           ;TM1640.c: 124: if(mask & Date)
  2565  000698  0100               	movlb	0	; () banked
  2566  00069A  51E2               	movf	TM1640_Writer_Byte@mask& (0+255),w,b
  2567  00069C  0100               	movlb	0	; () banked
  2568  00069E  15E1               	andwf	TM1640_Writer_Byte@Date& (0+255),w,b
  2569  0006A0  0900               	iorlw	0
  2570  0006A2  B4D8               	btfsc	status,2,c
  2571  0006A4  D002               	goto	l395
  2572                           
  2573                           ; BSR set to: 0
  2574                           ;TM1640.c: 125: RD5 = 1;
  2575  0006A6  8A83               	bsf	3971,5,c	;volatile
  2576  0006A8  D002               	goto	l3342
  2577  0006AA                     l395:
  2578                           
  2579                           ; BSR set to: 0
  2580                           ;TM1640.c: 126: else
  2581                           ;TM1640.c: 127: RD5 = 0;
  2582  0006AA  9A83               	bcf	3971,5,c	;volatile
  2583  0006AC  D000               	goto	l3342
  2584  0006AE                     l3342:
  2585                           
  2586                           ; BSR set to: 0
  2587                           ;TM1640.c: 128: TM1640_Delay(1);
  2588  0006AE  0E01               	movlw	1
  2589  0006B0  EC5B  F004         	call	_TM1640_Delay
  2590                           
  2591                           ;TM1640.c: 129: RD6 = 1;
  2592  0006B4  8C83               	bsf	3971,6,c	;volatile
  2593                           
  2594                           ;TM1640.c: 130: TM1640_Delay(1);
  2595  0006B6  0E01               	movlw	1
  2596  0006B8  EC5B  F004         	call	_TM1640_Delay
  2597  0006BC  0100               	movlb	0	; () banked
  2598  0006BE  90D8               	bcf	status,0,c
  2599  0006C0  37E2               	rlcf	TM1640_Writer_Byte@mask& (0+255),f,b
  2600  0006C2  D000               	goto	l3348
  2601  0006C4                     l3348:
  2602                           
  2603                           ; BSR set to: 0
  2604  0006C4  0100               	movlb	0	; () banked
  2605  0006C6  51E2               	movf	TM1640_Writer_Byte@mask& (0+255),w,b
  2606  0006C8  0100               	movlb	0	; () banked
  2607  0006CA  A4D8               	btfss	status,2,c
  2608  0006CC  D7E1               	goto	l394
  2609                           
  2610                           ; BSR set to: 0
  2611                           
  2612                           ; BSR set to: 0
  2613  0006CE  0012               	return		;funcret
  2614  0006D0                     __end_of_TM1640_Writer_Byte:
  2615                           	opt stack 0
  2616                           tblptru	equ	0xFF8
  2617                           tblptrh	equ	0xFF7
  2618                           tblptrl	equ	0xFF6
  2619                           tablat	equ	0xFF5
  2620                           prodh	equ	0xFF4
  2621                           prodl	equ	0xFF3
  2622                           intcon	equ	0xFF2
  2623                           postinc0	equ	0xFEE
  2624                           wreg	equ	0xFE8
  2625                           postdec1	equ	0xFE5
  2626                           fsr1l	equ	0xFE1
  2627                           indf2	equ	0xFDF
  2628                           fsr2h	equ	0xFDA
  2629                           fsr2l	equ	0xFD9
  2630                           status	equ	0xFD8
  2631                           
  2632 ;; *************** function _TM1640_Stop *****************
  2633 ;; Defined at:
  2634 ;;		line 63 in file "_01_USER/TM1640.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;		None
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;		None
  2639 ;; Return value:  Size  Location     Type
  2640 ;;		None               void
  2641 ;; Registers used:
  2642 ;;		wreg, status,2, status,0, cstack
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2652 ;;Total ram usage:        0 bytes
  2653 ;; Hardware stack levels used:    1
  2654 ;; Hardware stack levels required when called:    3
  2655 ;; This function calls:
  2656 ;;		_TM1640_Delay
  2657 ;; This function is called by:
  2658 ;;		_Init_TM1640
  2659 ;;		_TM1640_Writer_Dates
  2660 ;;		_Open_Display
  2661 ;;		_Disable_Display
  2662 ;; This function uses a non-reentrant model
  2663 ;;
  2664                           
  2665                           	psect	text19
  2666  00086E                     __ptext19:
  2667                           	opt stack 0
  2668  00086E                     _TM1640_Stop:
  2669                           	opt stack 25
  2670                           
  2671                           ;TM1640.c: 65: RD6 = 0;
  2672                           
  2673                           ; BSR set to: 0
  2674                           ;incstack = 0
  2675  00086E  9C83               	bcf	3971,6,c	;volatile
  2676                           
  2677                           ;TM1640.c: 66: TM1640_Delay(1);
  2678  000870  0E01               	movlw	1
  2679  000872  EC5B  F004         	call	_TM1640_Delay
  2680                           
  2681                           ;TM1640.c: 67: RD5 = 0;
  2682  000876  9A83               	bcf	3971,5,c	;volatile
  2683                           
  2684                           ;TM1640.c: 68: TM1640_Delay(1);
  2685  000878  0E01               	movlw	1
  2686  00087A  EC5B  F004         	call	_TM1640_Delay
  2687                           
  2688                           ;TM1640.c: 69: RD6 = 1;
  2689  00087E  8C83               	bsf	3971,6,c	;volatile
  2690                           
  2691                           ;TM1640.c: 70: TM1640_Delay(1);
  2692  000880  0E01               	movlw	1
  2693  000882  EC5B  F004         	call	_TM1640_Delay
  2694                           
  2695                           ;TM1640.c: 71: RD5 = 1;
  2696  000886  8A83               	bsf	3971,5,c	;volatile
  2697                           
  2698                           ;TM1640.c: 72: TM1640_Delay(1);
  2699  000888  0E01               	movlw	1
  2700  00088A  EC5B  F004         	call	_TM1640_Delay
  2701                           
  2702                           ;TM1640.c: 73: RD6 = 0;
  2703  00088E  9C83               	bcf	3971,6,c	;volatile
  2704  000890  0012               	return		;funcret
  2705  000892                     __end_of_TM1640_Stop:
  2706                           	opt stack 0
  2707                           tblptru	equ	0xFF8
  2708                           tblptrh	equ	0xFF7
  2709                           tblptrl	equ	0xFF6
  2710                           tablat	equ	0xFF5
  2711                           prodh	equ	0xFF4
  2712                           prodl	equ	0xFF3
  2713                           intcon	equ	0xFF2
  2714                           postinc0	equ	0xFEE
  2715                           wreg	equ	0xFE8
  2716                           postdec1	equ	0xFE5
  2717                           fsr1l	equ	0xFE1
  2718                           indf2	equ	0xFDF
  2719                           fsr2h	equ	0xFDA
  2720                           fsr2l	equ	0xFD9
  2721                           status	equ	0xFD8
  2722                           
  2723 ;; *************** function _TM1640_Start *****************
  2724 ;; Defined at:
  2725 ;;		line 44 in file "_01_USER/TM1640.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;		None
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;		None
  2730 ;; Return value:  Size  Location     Type
  2731 ;;		None               void
  2732 ;; Registers used:
  2733 ;;		wreg, status,2, status,0, cstack
  2734 ;; Tracked objects:
  2735 ;;		On entry : 0/0
  2736 ;;		On exit  : 0/0
  2737 ;;		Unchanged: 0/0
  2738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2743 ;;Total ram usage:        0 bytes
  2744 ;; Hardware stack levels used:    1
  2745 ;; Hardware stack levels required when called:    3
  2746 ;; This function calls:
  2747 ;;		_TM1640_Delay
  2748 ;; This function is called by:
  2749 ;;		_Init_TM1640
  2750 ;;		_TM1640_Writer_Dates
  2751 ;;		_Open_Display
  2752 ;;		_Disable_Display
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           	psect	text20
  2757  000892                     __ptext20:
  2758                           	opt stack 0
  2759  000892                     _TM1640_Start:
  2760                           	opt stack 25
  2761                           
  2762                           ;TM1640.c: 46: RD6 = 0;
  2763                           
  2764                           ;incstack = 0
  2765  000892  9C83               	bcf	3971,6,c	;volatile
  2766                           
  2767                           ;TM1640.c: 47: TM1640_Delay(1);
  2768  000894  0E01               	movlw	1
  2769  000896  EC5B  F004         	call	_TM1640_Delay
  2770                           
  2771                           ;TM1640.c: 48: RD5 = 1;
  2772  00089A  8A83               	bsf	3971,5,c	;volatile
  2773                           
  2774                           ;TM1640.c: 49: TM1640_Delay(1);
  2775  00089C  0E01               	movlw	1
  2776  00089E  EC5B  F004         	call	_TM1640_Delay
  2777                           
  2778                           ;TM1640.c: 50: RD6 = 1;
  2779  0008A2  8C83               	bsf	3971,6,c	;volatile
  2780                           
  2781                           ;TM1640.c: 51: TM1640_Delay(1);
  2782  0008A4  0E01               	movlw	1
  2783  0008A6  EC5B  F004         	call	_TM1640_Delay
  2784                           
  2785                           ;TM1640.c: 52: RD5 = 0;
  2786  0008AA  9A83               	bcf	3971,5,c	;volatile
  2787                           
  2788                           ;TM1640.c: 53: TM1640_Delay(1);
  2789  0008AC  0E01               	movlw	1
  2790  0008AE  EC5B  F004         	call	_TM1640_Delay
  2791                           
  2792                           ;TM1640.c: 54: RD6 = 0;
  2793  0008B2  9C83               	bcf	3971,6,c	;volatile
  2794  0008B4  0012               	return		;funcret
  2795  0008B6                     __end_of_TM1640_Start:
  2796                           	opt stack 0
  2797                           tblptru	equ	0xFF8
  2798                           tblptrh	equ	0xFF7
  2799                           tblptrl	equ	0xFF6
  2800                           tablat	equ	0xFF5
  2801                           prodh	equ	0xFF4
  2802                           prodl	equ	0xFF3
  2803                           intcon	equ	0xFF2
  2804                           postinc0	equ	0xFEE
  2805                           wreg	equ	0xFE8
  2806                           postdec1	equ	0xFE5
  2807                           fsr1l	equ	0xFE1
  2808                           indf2	equ	0xFDF
  2809                           fsr2h	equ	0xFDA
  2810                           fsr2l	equ	0xFD9
  2811                           status	equ	0xFD8
  2812                           
  2813 ;; *************** function _TM1640_Delay *****************
  2814 ;; Defined at:
  2815 ;;		line 166 in file "_01_USER/TM1640.c"
  2816 ;; Parameters:    Size  Location     Type
  2817 ;;  Time            1    wreg     unsigned char 
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;  Time            1    0[BANK0 ] unsigned char 
  2820 ;;  i               1    1[BANK0 ] unsigned char 
  2821 ;; Return value:  Size  Location     Type
  2822 ;;		None               void
  2823 ;; Registers used:
  2824 ;;		wreg, status,2, status,0
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2831 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2833 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2834 ;;Total ram usage:        2 bytes
  2835 ;; Hardware stack levels used:    1
  2836 ;; Hardware stack levels required when called:    2
  2837 ;; This function calls:
  2838 ;;		Nothing
  2839 ;; This function is called by:
  2840 ;;		_TM1640_Start
  2841 ;;		_TM1640_Stop
  2842 ;;		_TM1640_Writer_Byte
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           	psect	text21
  2847  0008B6                     __ptext21:
  2848                           	opt stack 0
  2849  0008B6                     _TM1640_Delay:
  2850                           	opt stack 25
  2851                           
  2852                           ;incstack = 0
  2853                           ;TM1640_Delay@Time stored from wreg
  2854  0008B6  0100               	movlb	0	; () banked
  2855  0008B8  6FDF               	movwf	TM1640_Delay@Time& (0+255),b
  2856  0008BA                     
  2857                           ; BSR set to: 0
  2858                           ;TM1640.c: 171: {
  2859                           ;TM1640.c: 172: for(i=0; i<10; ++i);
  2860  0008BA  0E00               	movlw	0
  2861  0008BC  0100               	movlb	0	; () banked
  2862  0008BE  6FE0               	movwf	TM1640_Delay@i& (0+255),b
  2863  0008C0  D003               	goto	l3308
  2864                           
  2865                           ; BSR set to: 0
  2866                           
  2867                           ; BSR set to: 0
  2868  0008C2  D006               	goto	l409
  2869  0008C4                     l3306:
  2870                           
  2871                           ; BSR set to: 0
  2872  0008C4  0100               	movlb	0	; () banked
  2873  0008C6  2BE0               	incf	TM1640_Delay@i& (0+255),f,b
  2874  0008C8                     l3308:
  2875                           
  2876                           ; BSR set to: 0
  2877  0008C8  0E09               	movlw	9
  2878  0008CA  0100               	movlb	0	; () banked
  2879  0008CC  65E0               	cpfsgt	TM1640_Delay@i& (0+255),b
  2880  0008CE  D7FA               	goto	l3306
  2881  0008D0                     l409:
  2882                           
  2883                           ; BSR set to: 0
  2884                           ;TM1640.c: 173: }while(--Time);
  2885  0008D0  0100               	movlb	0	; () banked
  2886  0008D2  2FDF               	decfsz	TM1640_Delay@Time& (0+255),f,b
  2887  0008D4  D7F2               	goto	l3300
  2888  0008D6  0012               	return	
  2889                           
  2890                           ; BSR set to: 0
  2891                           
  2892                           ; BSR set to: 0
  2893  0008D8  0012               	return		;funcret
  2894  0008DA                     __end_of_TM1640_Delay:
  2895                           	opt stack 0
  2896                           tblptru	equ	0xFF8
  2897                           tblptrh	equ	0xFF7
  2898                           tblptrl	equ	0xFF6
  2899                           tablat	equ	0xFF5
  2900                           prodh	equ	0xFF4
  2901                           prodl	equ	0xFF3
  2902                           intcon	equ	0xFF2
  2903                           postinc0	equ	0xFEE
  2904                           wreg	equ	0xFE8
  2905                           postdec1	equ	0xFE5
  2906                           fsr1l	equ	0xFE1
  2907                           indf2	equ	0xFDF
  2908                           fsr2h	equ	0xFDA
  2909                           fsr2l	equ	0xFD9
  2910                           status	equ	0xFD8
  2911                           
  2912 ;; *************** function _GPIO_Config *****************
  2913 ;; Defined at:
  2914 ;;		line 39 in file "_01_USER/GPIO.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;		None
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;		None
  2919 ;; Return value:  Size  Location     Type
  2920 ;;		None               void
  2921 ;; Registers used:
  2922 ;;		None
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2932 ;;Total ram usage:        0 bytes
  2933 ;; Hardware stack levels used:    1
  2934 ;; Hardware stack levels required when called:    2
  2935 ;; This function calls:
  2936 ;;		Nothing
  2937 ;; This function is called by:
  2938 ;;		_main
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942                           	psect	text22
  2943  000972                     __ptext22:
  2944                           	opt stack 0
  2945  000972                     _GPIO_Config:
  2946                           	opt stack 28
  2947                           
  2948                           ; BSR set to: 0
  2949                           ;incstack = 0
  2950  000972  0012               	return		;funcret
  2951  000974                     __end_of_GPIO_Config:
  2952                           	opt stack 0
  2953                           tblptru	equ	0xFF8
  2954                           tblptrh	equ	0xFF7
  2955                           tblptrl	equ	0xFF6
  2956                           tablat	equ	0xFF5
  2957                           prodh	equ	0xFF4
  2958                           prodl	equ	0xFF3
  2959                           intcon	equ	0xFF2
  2960                           postinc0	equ	0xFEE
  2961                           wreg	equ	0xFE8
  2962                           postdec1	equ	0xFE5
  2963                           fsr1l	equ	0xFE1
  2964                           indf2	equ	0xFDF
  2965                           fsr2h	equ	0xFDA
  2966                           fsr2l	equ	0xFD9
  2967                           status	equ	0xFD8
  2968                           
  2969 ;; *************** function _ADC6_Init *****************
  2970 ;; Defined at:
  2971 ;;		line 37 in file "_01_USER/My_ADC.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;		None
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;		None
  2976 ;; Return value:  Size  Location     Type
  2977 ;;		None               void
  2978 ;; Registers used:
  2979 ;;		wreg, status,2, status,0, cstack
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2989 ;;Total ram usage:        0 bytes
  2990 ;; Hardware stack levels used:    1
  2991 ;; Hardware stack levels required when called:    3
  2992 ;; This function calls:
  2993 ;;		_OpenADC
  2994 ;; This function is called by:
  2995 ;;		_main
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           	psect	text23
  3000  000932                     __ptext23:
  3001                           	opt stack 0
  3002  000932                     _ADC6_Init:
  3003                           	opt stack 27
  3004                           
  3005                           ;My_ADC.c: 40: OpenADC(0b11111111 &
  3006                           ;My_ADC.c: 41: 0b11110011 &
  3007                           ;My_ADC.c: 42: 0b10001111
  3008                           ;My_ADC.c: 43: ,
  3009                           ;My_ADC.c: 44: 0b10011011
  3010                           ;My_ADC.c: 45: ,
  3011                           ;My_ADC.c: 46: 0b00111111 &
  3012                           ;My_ADC.c: 47: 0b11111111 &
  3013                           ;My_ADC.c: 48: 0b11110111 &
  3014                           ;My_ADC.c: 49: 0b11111000
  3015                           ;My_ADC.c: 50: );
  3016                           
  3017                           ;incstack = 0
  3018  000932  0E9B               	movlw	155
  3019  000934  0100               	movlb	0	; () banked
  3020  000936  6FDF               	movwf	OpenADC@config2& (0+255),b
  3021  000938  0E30               	movlw	48
  3022  00093A  0100               	movlb	0	; () banked
  3023  00093C  6FE0               	movwf	OpenADC@config3& (0+255),b
  3024  00093E  0E83               	movlw	131
  3025  000940  EC8C  F002         	call	_OpenADC
  3026                           
  3027                           ;My_ADC.c: 52: (PIE1bits.ADIE=0);
  3028  000944  9C9D               	bcf	3997,6,c	;volatile
  3029  000946  0012               	return		;funcret
  3030  000948                     __end_of_ADC6_Init:
  3031                           	opt stack 0
  3032                           tblptru	equ	0xFF8
  3033                           tblptrh	equ	0xFF7
  3034                           tblptrl	equ	0xFF6
  3035                           tablat	equ	0xFF5
  3036                           prodh	equ	0xFF4
  3037                           prodl	equ	0xFF3
  3038                           intcon	equ	0xFF2
  3039                           postinc0	equ	0xFEE
  3040                           wreg	equ	0xFE8
  3041                           postdec1	equ	0xFE5
  3042                           fsr1l	equ	0xFE1
  3043                           indf2	equ	0xFDF
  3044                           fsr2h	equ	0xFDA
  3045                           fsr2l	equ	0xFD9
  3046                           status	equ	0xFD8
  3047                           
  3048 ;; *************** function _OpenADC *****************
  3049 ;; Defined at:
  3050 ;;		line 305 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;  config          1    wreg     unsigned char 
  3053 ;;  config2         1    0[BANK0 ] unsigned char 
  3054 ;;  config3         1    1[BANK0 ] unsigned char 
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;  config          1    4[BANK0 ] unsigned char 
  3057 ;; Return value:  Size  Location     Type
  3058 ;;		None               void
  3059 ;; Registers used:
  3060 ;;		wreg, status,2, status,0
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3066 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3067 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3068 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3069 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3070 ;;Total ram usage:        5 bytes
  3071 ;; Hardware stack levels used:    1
  3072 ;; Hardware stack levels required when called:    2
  3073 ;; This function calls:
  3074 ;;		Nothing
  3075 ;; This function is called by:
  3076 ;;		_ADC6_Init
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079                           
  3080                           	psect	text24
  3081  000518                     __ptext24:
  3082                           	opt stack 0
  3083  000518                     _OpenADC:
  3084                           	opt stack 27
  3085                           
  3086                           ;incstack = 0
  3087                           ;OpenADC@config stored from wreg
  3088  000518  0100               	movlb	0	; () banked
  3089  00051A  6FE3               	movwf	OpenADC@config& (0+255),b
  3090                           
  3091                           ; BSR set to: 0
  3092  00051C  0E00               	movlw	0
  3093  00051E  6EC2               	movwf	4034,c	;volatile
  3094  000520  0E00               	movlw	0
  3095  000522  6EC1               	movwf	4033,c	;volatile
  3096  000524  0E00               	movlw	0
  3097  000526  6EC0               	movwf	4032,c	;volatile
  3098                           
  3099                           ; BSR set to: 0
  3100  000528  0100               	movlb	0	; () banked
  3101  00052A  51DF               	movf	OpenADC@config2& (0+255),w,b
  3102  00052C  0B7C               	andlw	124
  3103  00052E  6EC2               	movwf	4034,c	;volatile
  3104                           
  3105                           ; BSR set to: 0
  3106  000530  C0E0  FFC1         	movff	OpenADC@config3,4033	;volatile
  3107                           
  3108                           ; BSR set to: 0
  3109  000534  C0E3  F0E1         	movff	OpenADC@config,??_OpenADC
  3110  000538  0100               	movlb	0	; () banked
  3111  00053A  90D8               	bcf	status,0,c
  3112  00053C  37E1               	rlcf	??_OpenADC& (0+255),f,b
  3113  00053E  0100               	movlb	0	; () banked
  3114  000540  90D8               	bcf	status,0,c
  3115  000542  37E1               	rlcf	??_OpenADC& (0+255),f,b
  3116  000544  0E38               	movlw	56
  3117  000546  0100               	movlb	0	; () banked
  3118  000548  17E1               	andwf	??_OpenADC& (0+255),f,b
  3119  00054A  C0E3  F0E2         	movff	OpenADC@config,??_OpenADC+1
  3120  00054E  0100               	movlb	0	; () banked
  3121  000550  3BE2               	swapf	(??_OpenADC+1)& (0+255),f,b
  3122  000552  0E0F               	movlw	15
  3123  000554  17E2               	andwf	(??_OpenADC+1)& (0+255),f,b
  3124  000556  0E07               	movlw	7
  3125  000558  0100               	movlb	0	; () banked
  3126  00055A  17E2               	andwf	(??_OpenADC+1)& (0+255),f,b
  3127  00055C  0100               	movlb	0	; () banked
  3128  00055E  51E3               	movf	OpenADC@config& (0+255),w,b
  3129  000560  0B80               	andlw	128
  3130  000562  0100               	movlb	0	; () banked
  3131  000564  11E2               	iorwf	(??_OpenADC+1)& (0+255),w,b
  3132  000566  0100               	movlb	0	; () banked
  3133  000568  11E1               	iorwf	??_OpenADC& (0+255),w,b
  3134  00056A  6EC0               	movwf	4032,c	;volatile
  3135                           
  3136                           ; BSR set to: 0
  3137  00056C  0100               	movlb	0	; () banked
  3138  00056E  AFDF               	btfss	OpenADC@config2& (0+255),7,b
  3139  000570  D003               	goto	l613
  3140                           
  3141                           ; BSR set to: 0
  3142  000572  9C9E               	bcf	3998,6,c	;volatile
  3143  000574  8C9D               	bsf	3997,6,c	;volatile
  3144  000576  8CF2               	bsf	intcon,6,c	;volatile
  3145  000578                     l613:
  3146                           
  3147                           ; BSR set to: 0
  3148  000578  80C2               	bsf	4034,0,c	;volatile
  3149                           
  3150                           ; BSR set to: 0
  3151  00057A  0012               	return		;funcret
  3152  00057C                     __end_of_OpenADC:
  3153                           	opt stack 0
  3154                           tblptru	equ	0xFF8
  3155                           tblptrh	equ	0xFF7
  3156                           tblptrl	equ	0xFF6
  3157                           tablat	equ	0xFF5
  3158                           prodh	equ	0xFF4
  3159                           prodl	equ	0xFF3
  3160                           intcon	equ	0xFF2
  3161                           postinc0	equ	0xFEE
  3162                           wreg	equ	0xFE8
  3163                           postdec1	equ	0xFE5
  3164                           fsr1l	equ	0xFE1
  3165                           indf2	equ	0xFDF
  3166                           fsr2h	equ	0xFDA
  3167                           fsr2l	equ	0xFD9
  3168                           status	equ	0xFD8
  3169                           
  3170 ;; *************** function _Sys_Cyc *****************
  3171 ;; Defined at:
  3172 ;;		line 100 in file "_01_USER/My_Timer.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;		None
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;  _temp           1   23[COMRAM] unsigned char 
  3177 ;; Return value:  Size  Location     Type
  3178 ;;		None               void
  3179 ;; Registers used:
  3180 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/0
  3183 ;;		On exit  : 0/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3187 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3188 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3189 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3190 ;;Total ram usage:       15 bytes
  3191 ;; Hardware stack levels used:    1
  3192 ;; Hardware stack levels required when called:    1
  3193 ;; This function calls:
  3194 ;;		___llmod
  3195 ;;		i2_LED_Control
  3196 ;;		i2_SetTimer0
  3197 ;; This function is called by:
  3198 ;;		Interrupt level 2
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           	psect	intcode
  3203  000008                     __pintcode:
  3204                           	opt stack 0
  3205  000008                     _Sys_Cyc:
  3206                           	opt stack 24
  3207                           
  3208                           ; BSR set to: 0
  3209                           ;incstack = 0
  3210  000008  CFFA F046          	movff	pclath,??_Sys_Cyc
  3211  00000C  CFFB F047          	movff	pclatu,??_Sys_Cyc+1
  3212  000010  CFE9 F048          	movff	fsr0l,??_Sys_Cyc+2
  3213  000014  CFEA F049          	movff	fsr0h,??_Sys_Cyc+3
  3214  000018  CFE1 F04A          	movff	fsr1l,??_Sys_Cyc+4
  3215  00001C  CFE2 F04B          	movff	fsr1h,??_Sys_Cyc+5
  3216  000020  CFD9 F04C          	movff	fsr2l,??_Sys_Cyc+6
  3217  000024  CFDA F04D          	movff	fsr2h,??_Sys_Cyc+7
  3218  000028  CFF3 F04E          	movff	prodl,??_Sys_Cyc+8
  3219  00002C  CFF4 F04F          	movff	prodh,??_Sys_Cyc+9
  3220  000030  CFF6 F050          	movff	tblptrl,??_Sys_Cyc+10
  3221  000034  CFF7 F051          	movff	tblptrh,??_Sys_Cyc+11
  3222  000038  CFF8 F052          	movff	tblptru,??_Sys_Cyc+12
  3223  00003C  CFF5 F053          	movff	tablat,??_Sys_Cyc+13
  3224                           
  3225                           ;My_Timer.c: 102: static unsigned char _overturn_LED = 0;
  3226                           ;My_Timer.c: 103: static char _Byte;
  3227                           ;My_Timer.c: 104: static char _flag = 0;
  3228                           ;My_Timer.c: 105: unsigned char _temp;
  3229                           ;My_Timer.c: 108: if(TMR0IF)
  3230  000040  A4F2               	btfss	intcon,2,c	;volatile
  3231  000042  D04C               	goto	i2l2998
  3232                           
  3233                           ;My_Timer.c: 109: {
  3234                           ;My_Timer.c: 110: g_Timer_Cyc = (g_Timer_Cyc+1) % 4294967296;
  3235  000044  0E01               	movlw	1
  3236  000046  2408               	addwf	_g_Timer_Cyc,w,c
  3237  000048  6E3D               	movwf	___llmod@dividend,c
  3238  00004A  0E00               	movlw	0
  3239  00004C  2009               	addwfc	_g_Timer_Cyc+1,w,c
  3240  00004E  6E3E               	movwf	___llmod@dividend+1,c
  3241  000050  0E00               	movlw	0
  3242  000052  200A               	addwfc	_g_Timer_Cyc+2,w,c
  3243  000054  6E3F               	movwf	___llmod@dividend+2,c
  3244  000056  0E00               	movlw	0
  3245  000058  200B               	addwfc	_g_Timer_Cyc+3,w,c
  3246  00005A  6E40               	movwf	___llmod@dividend+3,c
  3247  00005C  0E00               	movlw	0
  3248  00005E  6E41               	movwf	___llmod@divisor,c
  3249  000060  0E00               	movlw	0
  3250  000062  6E42               	movwf	___llmod@divisor+1,c
  3251  000064  0E00               	movlw	0
  3252  000066  6E43               	movwf	___llmod@divisor+2,c
  3253  000068  0E00               	movlw	0
  3254  00006A  6E44               	movwf	___llmod@divisor+3,c
  3255  00006C  EC1E  F002         	call	___llmod	;wreg free
  3256  000070  C03D  F008         	movff	?___llmod,_g_Timer_Cyc
  3257  000074  C03E  F009         	movff	?___llmod+1,_g_Timer_Cyc+1
  3258  000078  C03F  F00A         	movff	?___llmod+2,_g_Timer_Cyc+2
  3259  00007C  C040  F00B         	movff	?___llmod+3,_g_Timer_Cyc+3
  3260                           
  3261                           ;My_Timer.c: 111: SetTimer0(8);
  3262  000080  0E00               	movlw	0
  3263  000082  6E3E               	movwf	i2SetTimer0@_tmr+1,c
  3264  000084  0E08               	movlw	8
  3265  000086  6E3D               	movwf	i2SetTimer0@_tmr,c
  3266  000088  ECE4  F003         	call	i2_SetTimer0	;wreg free
  3267                           
  3268                           ;My_Timer.c: 114: if( g_Timer_Cyc%300 == 0 )
  3269  00008C  C008  F03D         	movff	_g_Timer_Cyc,___llmod@dividend
  3270  000090  C009  F03E         	movff	_g_Timer_Cyc+1,___llmod@dividend+1
  3271  000094  C00A  F03F         	movff	_g_Timer_Cyc+2,___llmod@dividend+2
  3272  000098  C00B  F040         	movff	_g_Timer_Cyc+3,___llmod@dividend+3
  3273  00009C  0E2C               	movlw	44
  3274  00009E  6E41               	movwf	___llmod@divisor,c
  3275  0000A0  0E01               	movlw	1
  3276  0000A2  6E42               	movwf	___llmod@divisor+1,c
  3277  0000A4  0E00               	movlw	0
  3278  0000A6  6E43               	movwf	___llmod@divisor+2,c
  3279  0000A8  0E00               	movlw	0
  3280  0000AA  6E44               	movwf	___llmod@divisor+3,c
  3281  0000AC  EC1E  F002         	call	___llmod	;wreg free
  3282  0000B0  503D               	movf	?___llmod,w,c
  3283  0000B2  103E               	iorwf	?___llmod+1,w,c
  3284  0000B4  103F               	iorwf	?___llmod+2,w,c
  3285  0000B6  1040               	iorwf	?___llmod+3,w,c
  3286  0000B8  A4D8               	btfss	status,2,c
  3287  0000BA  D010               	goto	i2l2998
  3288                           
  3289                           ;My_Timer.c: 115: {
  3290                           ;My_Timer.c: 116: _overturn_LED = ~_overturn_LED;
  3291  0000BC  1E12               	comf	Sys_Cyc@_overturn_LED,f,c
  3292                           
  3293                           ;My_Timer.c: 117: if(_overturn_LED) LED_Control(3,1);
  3294  0000BE  5012               	movf	Sys_Cyc@_overturn_LED,w,c
  3295  0000C0  B4D8               	btfsc	status,2,c
  3296  0000C2  D006               	goto	i2l2996
  3297  0000C4  0E01               	movlw	1
  3298  0000C6  6E3D               	movwf	i2LED_Control@_switch,c
  3299  0000C8  0E03               	movlw	3
  3300  0000CA  EC68  F003         	call	i2_LED_Control
  3301  0000CE  D006               	goto	i2l2998
  3302  0000D0                     i2l2996:
  3303                           
  3304                           ;My_Timer.c: 118: else LED_Control(3,0);
  3305  0000D0  0E00               	movlw	0
  3306  0000D2  6E3D               	movwf	i2LED_Control@_switch,c
  3307  0000D4  0E03               	movlw	3
  3308  0000D6  EC68  F003         	call	i2_LED_Control
  3309  0000DA  D000               	goto	i2l2998
  3310  0000DC                     i2l2998:
  3311                           
  3312                           ;My_Timer.c: 119: }
  3313                           ;My_Timer.c: 129: }
  3314                           ;My_Timer.c: 132: if( RC1IF )
  3315  0000DC  AA9E               	btfss	3998,5,c	;volatile
  3316  0000DE  D023               	goto	i2l336
  3317                           
  3318                           ;My_Timer.c: 133: {
  3319                           ;My_Timer.c: 134: _temp = RCREG1;
  3320  0000E0  CFAE F054          	movff	4014,Sys_Cyc@_temp	;volatile
  3321                           
  3322                           ;My_Timer.c: 135: if( g_RS485_Receive_Flag == 0 )
  3323  0000E4  5015               	movf	_g_RS485_Receive_Flag,w,c
  3324  0000E6  A4D8               	btfss	status,2,c
  3325  0000E8  D01E               	goto	i2l336
  3326                           
  3327                           ;My_Timer.c: 136: {
  3328                           ;My_Timer.c: 138: if( _temp == 0xff )
  3329  0000EA  2854               	incf	Sys_Cyc@_temp,w,c
  3330  0000EC  A4D8               	btfss	status,2,c
  3331  0000EE  D004               	goto	i2l333
  3332                           
  3333                           ;My_Timer.c: 139: {
  3334                           ;My_Timer.c: 140: _Byte = 10 ;
  3335  0000F0  0E0A               	movlw	10
  3336  0000F2  6E10               	movwf	Sys_Cyc@_Byte,c
  3337                           
  3338                           ;My_Timer.c: 141: _flag = 0;
  3339  0000F4  0E00               	movlw	0
  3340  0000F6  6E11               	movwf	Sys_Cyc@_flag,c
  3341  0000F8                     i2l333:
  3342                           
  3343                           ;My_Timer.c: 142: }
  3344                           ;My_Timer.c: 145: if ( _flag == 0 )
  3345  0000F8  5011               	movf	Sys_Cyc@_flag,w,c
  3346  0000FA  A4D8               	btfss	status,2,c
  3347  0000FC  D00C               	goto	i2l3012
  3348                           
  3349                           ;My_Timer.c: 146: {
  3350                           ;My_Timer.c: 147: _Byte -- ;
  3351  0000FE  0610               	decf	Sys_Cyc@_Byte,f,c
  3352                           
  3353                           ;My_Timer.c: 148: ga_RS485_ReceiveBuff[ _Byte ] = _temp;
  3354  000100  5010               	movf	Sys_Cyc@_Byte,w,c
  3355  000102  0D01               	mullw	1
  3356  000104  0EC5               	movlw	low _ga_RS485_ReceiveBuff
  3357  000106  24F3               	addwf	prodl,w,c
  3358  000108  6ED9               	movwf	fsr2l,c
  3359  00010A  0E00               	movlw	high _ga_RS485_ReceiveBuff
  3360  00010C  20F4               	addwfc	prodh,w,c
  3361  00010E  6EDA               	movwf	fsr2h,c
  3362  000110  C054  FFDF         	movff	Sys_Cyc@_temp,indf2
  3363  000114  D000               	goto	i2l3012
  3364  000116                     i2l3012:
  3365                           
  3366                           ;My_Timer.c: 149: }
  3367                           ;My_Timer.c: 152: if( _Byte == 0 )
  3368  000116  5010               	movf	Sys_Cyc@_Byte,w,c
  3369  000118  A4D8               	btfss	status,2,c
  3370  00011A  D005               	goto	i2l336
  3371                           
  3372                           ;My_Timer.c: 153: {
  3373                           ;My_Timer.c: 154: g_RS485_Receive_Flag = 1 ;
  3374  00011C  0E01               	movlw	1
  3375  00011E  6E15               	movwf	_g_RS485_Receive_Flag,c
  3376                           
  3377                           ;My_Timer.c: 155: _flag = 1;
  3378  000120  0E01               	movlw	1
  3379  000122  6E11               	movwf	Sys_Cyc@_flag,c
  3380  000124  D000               	goto	i2l336
  3381  000126                     i2l336:
  3382  000126  C053  FFF5         	movff	??_Sys_Cyc+13,tablat
  3383  00012A  C052  FFF8         	movff	??_Sys_Cyc+12,tblptru
  3384  00012E  C051  FFF7         	movff	??_Sys_Cyc+11,tblptrh
  3385  000132  C050  FFF6         	movff	??_Sys_Cyc+10,tblptrl
  3386  000136  C04F  FFF4         	movff	??_Sys_Cyc+9,prodh
  3387  00013A  C04E  FFF3         	movff	??_Sys_Cyc+8,prodl
  3388  00013E  C04D  FFDA         	movff	??_Sys_Cyc+7,fsr2h
  3389  000142  C04C  FFD9         	movff	??_Sys_Cyc+6,fsr2l
  3390  000146  C04B  FFE2         	movff	??_Sys_Cyc+5,fsr1h
  3391  00014A  C04A  FFE1         	movff	??_Sys_Cyc+4,fsr1l
  3392  00014E  C049  FFEA         	movff	??_Sys_Cyc+3,fsr0h
  3393  000152  C048  FFE9         	movff	??_Sys_Cyc+2,fsr0l
  3394  000156  C047  FFFB         	movff	??_Sys_Cyc+1,pclatu
  3395  00015A  C046  FFFA         	movff	??_Sys_Cyc,pclath
  3396  00015E  0011               	retfie		f
  3397  000160                     __end_of_Sys_Cyc:
  3398                           	opt stack 0
  3399                           pclatu	equ	0xFFB
  3400                           pclath	equ	0xFFA
  3401                           tblptru	equ	0xFF8
  3402                           tblptrh	equ	0xFF7
  3403                           tblptrl	equ	0xFF6
  3404                           tablat	equ	0xFF5
  3405                           prodh	equ	0xFF4
  3406                           prodl	equ	0xFF3
  3407                           intcon	equ	0xFF2
  3408                           postinc0	equ	0xFEE
  3409                           fsr0h	equ	0xFEA
  3410                           fsr0l	equ	0xFE9
  3411                           wreg	equ	0xFE8
  3412                           postdec1	equ	0xFE5
  3413                           fsr1h	equ	0xFE2
  3414                           fsr1l	equ	0xFE1
  3415                           indf2	equ	0xFDF
  3416                           fsr2h	equ	0xFDA
  3417                           fsr2l	equ	0xFD9
  3418                           status	equ	0xFD8
  3419                           
  3420 ;; *************** function i2_SetTimer0 *****************
  3421 ;; Defined at:
  3422 ;;		line 81 in file "_01_USER/My_Timer.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;  _tmr            2    0[COMRAM] unsigned int 
  3425 ;; Auto vars:     Size  Location     Type
  3426 ;;		None
  3427 ;; Return value:  Size  Location     Type
  3428 ;;		None               void
  3429 ;; Registers used:
  3430 ;;		wreg, status,2, status,0
  3431 ;; Tracked objects:
  3432 ;;		On entry : 0/0
  3433 ;;		On exit  : 0/0
  3434 ;;		Unchanged: 0/0
  3435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3436 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3438 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3439 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3440 ;;Total ram usage:        4 bytes
  3441 ;; Hardware stack levels used:    1
  3442 ;; This function calls:
  3443 ;;		Nothing
  3444 ;; This function is called by:
  3445 ;;		_Sys_Cyc
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449                           	psect	text26
  3450  0007C8                     __ptext26:
  3451                           	opt stack 0
  3452  0007C8                     i2_SetTimer0:
  3453                           	opt stack 24
  3454                           
  3455                           ;My_Timer.c: 83: if(_tmr > 0xffff) _tmr = 0xffff;
  3456                           
  3457                           ;incstack = 0
  3458  0007C8  D003               	goto	i2l2868
  3459  0007CA  683D               	setf	i2SetTimer0@_tmr,c
  3460  0007CC  683E               	setf	i2SetTimer0@_tmr+1,c
  3461  0007CE  D000               	goto	i2l2868
  3462  0007D0                     i2l2868:
  3463                           
  3464                           ;My_Timer.c: 84: _tmr=0xffff-_tmr;
  3465  0007D0  C03D  F03F         	movff	i2SetTimer0@_tmr,??i2_SetTimer0
  3466  0007D4  C03E  F040         	movff	i2SetTimer0@_tmr+1,??i2_SetTimer0+1
  3467  0007D8  1E3F               	comf	??i2_SetTimer0,f,c
  3468  0007DA  1E40               	comf	??i2_SetTimer0+1,f,c
  3469  0007DC  4A3F               	infsnz	??i2_SetTimer0,f,c
  3470  0007DE  2A40               	incf	??i2_SetTimer0+1,f,c
  3471  0007E0  0EFF               	movlw	255
  3472  0007E2  243F               	addwf	??i2_SetTimer0,w,c
  3473  0007E4  6E3D               	movwf	i2SetTimer0@_tmr,c
  3474  0007E6  0EFF               	movlw	255
  3475  0007E8  2040               	addwfc	??i2_SetTimer0+1,w,c
  3476  0007EA  6E3E               	movwf	i2SetTimer0@_tmr+1,c
  3477                           
  3478                           ;My_Timer.c: 85: TMR0H = _tmr/256;
  3479  0007EC  503E               	movf	i2SetTimer0@_tmr+1,w,c
  3480  0007EE  6ED7               	movwf	4055,c	;volatile
  3481                           
  3482                           ;My_Timer.c: 86: TMR0L = _tmr%256;
  3483  0007F0  C03D  FFD6         	movff	i2SetTimer0@_tmr,4054	;volatile
  3484                           
  3485                           ;My_Timer.c: 87: TMR0IF = 0;
  3486  0007F4  94F2               	bcf	intcon,2,c	;volatile
  3487  0007F6  0012               	return		;funcret
  3488  0007F8                     __end_ofi2_SetTimer0:
  3489                           	opt stack 0
  3490                           pclatu	equ	0xFFB
  3491                           pclath	equ	0xFFA
  3492                           tblptru	equ	0xFF8
  3493                           tblptrh	equ	0xFF7
  3494                           tblptrl	equ	0xFF6
  3495                           tablat	equ	0xFF5
  3496                           prodh	equ	0xFF4
  3497                           prodl	equ	0xFF3
  3498                           intcon	equ	0xFF2
  3499                           postinc0	equ	0xFEE
  3500                           fsr0h	equ	0xFEA
  3501                           fsr0l	equ	0xFE9
  3502                           wreg	equ	0xFE8
  3503                           postdec1	equ	0xFE5
  3504                           fsr1h	equ	0xFE2
  3505                           fsr1l	equ	0xFE1
  3506                           indf2	equ	0xFDF
  3507                           fsr2h	equ	0xFDA
  3508                           fsr2l	equ	0xFD9
  3509                           status	equ	0xFD8
  3510                           
  3511 ;; *************** function i2_LED_Control *****************
  3512 ;; Defined at:
  3513 ;;		line 58 in file "_01_USER/GPIO.c"
  3514 ;; Parameters:    Size  Location     Type
  3515 ;;  _LED_num        1    wreg     unsigned char 
  3516 ;;  _switch         1    0[COMRAM] unsigned char 
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;  _LED_num        1    1[COMRAM] unsigned char 
  3519 ;; Return value:  Size  Location     Type
  3520 ;;		None               void
  3521 ;; Registers used:
  3522 ;;		wreg, status,2, status,0
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3528 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3529 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3531 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3532 ;;Total ram usage:        2 bytes
  3533 ;; Hardware stack levels used:    1
  3534 ;; This function calls:
  3535 ;;		Nothing
  3536 ;; This function is called by:
  3537 ;;		_Sys_Cyc
  3538 ;; This function uses a non-reentrant model
  3539 ;;
  3540                           
  3541                           	psect	text27
  3542  0006D0                     __ptext27:
  3543                           	opt stack 0
  3544  0006D0                     i2_LED_Control:
  3545                           	opt stack 24
  3546                           
  3547                           ;incstack = 0
  3548                           ;i2LED_Control@_LED_num stored from wreg
  3549  0006D0  6E3E               	movwf	i2LED_Control@_LED_num,c
  3550                           
  3551                           ;GPIO.c: 62: if(_LED_num == 1)
  3552  0006D2  043E               	decf	i2LED_Control@_LED_num,w,c
  3553  0006D4  A4D8               	btfss	status,2,c
  3554  0006D6  D007               	goto	i2l2884
  3555                           
  3556                           ;GPIO.c: 63: if(_switch) LED_BUS |= 0x01;
  3557  0006D8  503D               	movf	i2LED_Control@_switch,w,c
  3558  0006DA  B4D8               	btfsc	status,2,c
  3559  0006DC  D002               	goto	i2l2882
  3560  0006DE  8013               	bsf	_LED_BUS,0,c
  3561  0006E0  D002               	goto	i2l2884
  3562  0006E2                     i2l2882:
  3563                           
  3564                           ;GPIO.c: 64: else LED_BUS &= 0xFE;
  3565  0006E2  9013               	bcf	_LED_BUS,0,c
  3566  0006E4  D000               	goto	i2l2884
  3567  0006E6                     i2l2884:
  3568                           
  3569                           ;GPIO.c: 66: if(_LED_num == 2)
  3570  0006E6  0E02               	movlw	2
  3571  0006E8  183E               	xorwf	i2LED_Control@_LED_num,w,c
  3572  0006EA  A4D8               	btfss	status,2,c
  3573  0006EC  D007               	goto	i2l2892
  3574                           
  3575                           ;GPIO.c: 67: if(_switch) LED_BUS |= 0x02;
  3576  0006EE  503D               	movf	i2LED_Control@_switch,w,c
  3577  0006F0  B4D8               	btfsc	status,2,c
  3578  0006F2  D002               	goto	i2l2890
  3579  0006F4  8213               	bsf	_LED_BUS,1,c
  3580  0006F6  D002               	goto	i2l2892
  3581  0006F8                     i2l2890:
  3582                           
  3583                           ;GPIO.c: 68: else LED_BUS &= 0xFD;
  3584  0006F8  9213               	bcf	_LED_BUS,1,c
  3585  0006FA  D000               	goto	i2l2892
  3586  0006FC                     i2l2892:
  3587                           
  3588                           ;GPIO.c: 70: if(_LED_num == 3)
  3589  0006FC  0E03               	movlw	3
  3590  0006FE  183E               	xorwf	i2LED_Control@_LED_num,w,c
  3591  000700  A4D8               	btfss	status,2,c
  3592  000702  0012               	return	
  3593                           
  3594                           ;GPIO.c: 71: if(_switch) LED_BUS |= 0x04;
  3595  000704  503D               	movf	i2LED_Control@_switch,w,c
  3596  000706  B4D8               	btfsc	status,2,c
  3597  000708  D002               	goto	i2l2898
  3598  00070A  8413               	bsf	_LED_BUS,2,c
  3599  00070C  0012               	return	
  3600  00070E                     i2l2898:
  3601                           
  3602                           ;GPIO.c: 72: else LED_BUS &= 0xFB;
  3603  00070E  9413               	bcf	_LED_BUS,2,c
  3604  000710  0012               	return	
  3605  000712  0012               	return		;funcret
  3606  000714                     __end_ofi2_LED_Control:
  3607                           	opt stack 0
  3608                           pclatu	equ	0xFFB
  3609                           pclath	equ	0xFFA
  3610                           tblptru	equ	0xFF8
  3611                           tblptrh	equ	0xFF7
  3612                           tblptrl	equ	0xFF6
  3613                           tablat	equ	0xFF5
  3614                           prodh	equ	0xFF4
  3615                           prodl	equ	0xFF3
  3616                           intcon	equ	0xFF2
  3617                           postinc0	equ	0xFEE
  3618                           fsr0h	equ	0xFEA
  3619                           fsr0l	equ	0xFE9
  3620                           wreg	equ	0xFE8
  3621                           postdec1	equ	0xFE5
  3622                           fsr1h	equ	0xFE2
  3623                           fsr1l	equ	0xFE1
  3624                           indf2	equ	0xFDF
  3625                           fsr2h	equ	0xFDA
  3626                           fsr2l	equ	0xFD9
  3627                           status	equ	0xFD8
  3628                           
  3629 ;; *************** function ___llmod *****************
  3630 ;; Defined at:
  3631 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;  dividend        4    0[COMRAM] unsigned long 
  3634 ;;  divisor         4    4[COMRAM] unsigned long 
  3635 ;; Auto vars:     Size  Location     Type
  3636 ;;  counter         1    8[COMRAM] unsigned char 
  3637 ;; Return value:  Size  Location     Type
  3638 ;;                  4    0[COMRAM] unsigned long 
  3639 ;; Registers used:
  3640 ;;		wreg, status,2, status,0
  3641 ;; Tracked objects:
  3642 ;;		On entry : 0/0
  3643 ;;		On exit  : 0/0
  3644 ;;		Unchanged: 0/0
  3645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3646 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3647 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3649 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3650 ;;Total ram usage:        9 bytes
  3651 ;; Hardware stack levels used:    1
  3652 ;; This function calls:
  3653 ;;		Nothing
  3654 ;; This function is called by:
  3655 ;;		_Sys_Cyc
  3656 ;;		_VerifyCRC
  3657 ;; This function uses a non-reentrant model
  3658 ;;
  3659                           
  3660                           	psect	text28
  3661  00043C                     __ptext28:
  3662                           	opt stack 0
  3663  00043C                     ___llmod:
  3664                           	opt stack 24
  3665                           
  3666                           ;incstack = 0
  3667  00043C  5041               	movf	___llmod@divisor,w,c
  3668  00043E  1042               	iorwf	___llmod@divisor+1,w,c
  3669  000440  1043               	iorwf	___llmod@divisor+2,w,c
  3670  000442  1044               	iorwf	___llmod@divisor+3,w,c
  3671  000444  B4D8               	btfsc	status,2,c
  3672  000446  D029               	goto	i2l1148
  3673  000448  0E01               	movlw	1
  3674  00044A  6E45               	movwf	___llmod@counter,c
  3675  00044C  D007               	goto	i2l2854
  3676  00044E                     i2l2852:
  3677  00044E  90D8               	bcf	status,0,c
  3678  000450  3641               	rlcf	___llmod@divisor,f,c
  3679  000452  3642               	rlcf	___llmod@divisor+1,f,c
  3680  000454  3643               	rlcf	___llmod@divisor+2,f,c
  3681  000456  3644               	rlcf	___llmod@divisor+3,f,c
  3682  000458  2A45               	incf	___llmod@counter,f,c
  3683  00045A  D000               	goto	i2l2854
  3684  00045C                     i2l2854:
  3685  00045C  BE44               	btfsc	___llmod@divisor+3,7,c
  3686  00045E  D002               	goto	i2l2856
  3687  000460  D7F6               	goto	i2l2852
  3688  000462  D000               	goto	i2l2856
  3689  000464                     i2l2856:
  3690  000464  5041               	movf	___llmod@divisor,w,c
  3691  000466  5C3D               	subwf	___llmod@dividend,w,c
  3692  000468  5042               	movf	___llmod@divisor+1,w,c
  3693  00046A  583E               	subwfb	___llmod@dividend+1,w,c
  3694  00046C  5043               	movf	___llmod@divisor+2,w,c
  3695  00046E  583F               	subwfb	___llmod@dividend+2,w,c
  3696  000470  5044               	movf	___llmod@divisor+3,w,c
  3697  000472  5840               	subwfb	___llmod@dividend+3,w,c
  3698  000474  A0D8               	btfss	status,0,c
  3699  000476  D009               	goto	i2l2860
  3700  000478  5041               	movf	___llmod@divisor,w,c
  3701  00047A  5E3D               	subwf	___llmod@dividend,f,c
  3702  00047C  5042               	movf	___llmod@divisor+1,w,c
  3703  00047E  5A3E               	subwfb	___llmod@dividend+1,f,c
  3704  000480  5043               	movf	___llmod@divisor+2,w,c
  3705  000482  5A3F               	subwfb	___llmod@dividend+2,f,c
  3706  000484  5044               	movf	___llmod@divisor+3,w,c
  3707  000486  5A40               	subwfb	___llmod@dividend+3,f,c
  3708  000488  D000               	goto	i2l2860
  3709  00048A                     i2l2860:
  3710  00048A  90D8               	bcf	status,0,c
  3711  00048C  3244               	rrcf	___llmod@divisor+3,f,c
  3712  00048E  3243               	rrcf	___llmod@divisor+2,f,c
  3713  000490  3242               	rrcf	___llmod@divisor+1,f,c
  3714  000492  3241               	rrcf	___llmod@divisor,f,c
  3715  000494  2E45               	decfsz	___llmod@counter,f,c
  3716  000496  D7E6               	goto	i2l2856
  3717  000498  D000               	goto	i2l1148
  3718  00049A                     i2l1148:
  3719  00049A  C03D  F03D         	movff	___llmod@dividend,?___llmod
  3720  00049E  C03E  F03E         	movff	___llmod@dividend+1,?___llmod+1
  3721  0004A2  C03F  F03F         	movff	___llmod@dividend+2,?___llmod+2
  3722  0004A6  C040  F040         	movff	___llmod@dividend+3,?___llmod+3
  3723  0004AA  0012               	return		;funcret
  3724  0004AC                     __end_of___llmod:
  3725                           	opt stack 0
  3726  0000                     pclatu	equ	0xFFB
  3727                           pclath	equ	0xFFA
  3728                           tblptru	equ	0xFF8
  3729                           tblptrh	equ	0xFF7
  3730                           tblptrl	equ	0xFF6
  3731                           tablat	equ	0xFF5
  3732                           prodh	equ	0xFF4
  3733                           prodl	equ	0xFF3
  3734                           intcon	equ	0xFF2
  3735                           postinc0	equ	0xFEE
  3736                           fsr0h	equ	0xFEA
  3737                           fsr0l	equ	0xFE9
  3738                           wreg	equ	0xFE8
  3739                           postdec1	equ	0xFE5
  3740                           fsr1h	equ	0xFE2
  3741                           fsr1l	equ	0xFE1
  3742                           indf2	equ	0xFDF
  3743                           fsr2h	equ	0xFDA
  3744                           fsr2l	equ	0xFD9
  3745                           status	equ	0xFD8
  3746                           pclatu	equ	0xFFB
  3747                           pclath	equ	0xFFA
  3748                           tblptru	equ	0xFF8
  3749                           tblptrh	equ	0xFF7
  3750                           tblptrl	equ	0xFF6
  3751                           tablat	equ	0xFF5
  3752                           prodh	equ	0xFF4
  3753                           prodl	equ	0xFF3
  3754                           intcon	equ	0xFF2
  3755                           postinc0	equ	0xFEE
  3756                           fsr0h	equ	0xFEA
  3757                           fsr0l	equ	0xFE9
  3758                           wreg	equ	0xFE8
  3759                           postdec1	equ	0xFE5
  3760                           fsr1h	equ	0xFE2
  3761                           fsr1l	equ	0xFE1
  3762                           indf2	equ	0xFDF
  3763                           fsr2h	equ	0xFDA
  3764                           fsr2l	equ	0xFD9
  3765                           status	equ	0xFD8
  3766                           
  3767                           	psect	rparam
  3768  0000                     pclatu	equ	0xFFB
  3769                           pclath	equ	0xFFA
  3770                           tblptru	equ	0xFF8
  3771                           tblptrh	equ	0xFF7
  3772                           tblptrl	equ	0xFF6
  3773                           tablat	equ	0xFF5
  3774                           prodh	equ	0xFF4
  3775                           prodl	equ	0xFF3
  3776                           intcon	equ	0xFF2
  3777                           postinc0	equ	0xFEE
  3778                           fsr0h	equ	0xFEA
  3779                           fsr0l	equ	0xFE9
  3780                           wreg	equ	0xFE8
  3781                           postdec1	equ	0xFE5
  3782                           fsr1h	equ	0xFE2
  3783                           fsr1l	equ	0xFE1
  3784                           indf2	equ	0xFDF
  3785                           fsr2h	equ	0xFDA
  3786                           fsr2l	equ	0xFD9
  3787                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         171
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     24      84
    BANK0           160     10     137
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _Sys_Cyc in COMRAM

    _Sys_Cyc->___llmod

Critical Paths under _main in BANK0

    _main->_ShowResult
    _delay_ms->_delay1ms
    _Timer0_Init->_SetTimer0
    _ShowResult->_TM1640_Show_integer
    _TM1640_Show_integer->_TM1640_Writer_Dates
    _TM1640_Show_integer->___lwdiv
    _TM1640_Writer_Dates->___lwmod
    _RS485_Init->_Open1USART
    _Init_TM1640->_TM1640_Writer_Byte
    _TM1640_Writer_Byte->_TM1640_Delay
    _TM1640_Stop->_TM1640_Delay
    _TM1640_Start->_TM1640_Delay
    _ADC6_Init->_OpenADC

Critical Paths under _Sys_Cyc in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Sys_Cyc in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Sys_Cyc in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Sys_Cyc in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Sys_Cyc in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Sys_Cyc in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Sys_Cyc in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Sys_Cyc in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Sys_Cyc in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Sys_Cyc in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Sys_Cyc in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Sys_Cyc in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Sys_Cyc in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Sys_Cyc in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Sys_Cyc in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Sys_Cyc in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    8414
                          _ADC6_Init
                        _GPIO_Config
                        _Init_TM1640
                           _Key_Init
                        _LED_Control
                         _RS485_Init
                         _Relay_Init
                           _SCR_Init
                         _ShowResult
                        _Timer0_Init
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     466
                                              3 BANK0      2     0      2
                           _delay1ms
 ---------------------------------------------------------------------------------
 (2) _delay1ms                                             3     3      0     204
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0     218
                          _SetTimer0
 ---------------------------------------------------------------------------------
 (2) _SetTimer0                                            4     2      2     218
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _ShowResult                                           1     1      0    6029
                                              9 BANK0      1     1      0
                        _LED_Control
                _TM1640_Show_integer
                _TM1640_Writer_Dates
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     540
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _TM1640_Show_integer                                  2     0      2    3421
                                              7 BANK0      2     0      2
                _TM1640_Writer_Dates
                            ___lwdiv
                            ___lwmod
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     848
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     703
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _TM1640_Writer_Dates                                  2     1      1    1490
                                              5 BANK0      2     1      1
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _LED_Control                                          2     1      1     578
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _SCR_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Relay_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RS485_Init                                           0     0      0     387
                         _Open1USART
 ---------------------------------------------------------------------------------
 (2) _Open1USART                                           3     1      2     387
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _Key_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_TM1640                                          0     0      0     396
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
 ---------------------------------------------------------------------------------
 (3) _TM1640_Writer_Byte                                   2     2      0     198
                                              2 BANK0      2     2      0
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (3) _TM1640_Stop                                          0     0      0      99
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (3) _TM1640_Start                                         0     0      0      99
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (4) _TM1640_Delay                                         2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC6_Init                                            0     0      0     340
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     340
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Sys_Cyc                                             15    15      0     994
                                              9 COMRAM    15    15      0
                            ___llmod
                      i2_LED_Control
                        i2_SetTimer0
 ---------------------------------------------------------------------------------
 (7) i2_SetTimer0                                          4     2      2      94
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) i2_LED_Control                                        2     1      1     184
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8     671
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC6_Init
     _OpenADC
   _GPIO_Config
   _Init_TM1640
     _TM1640_Start
       _TM1640_Delay
     _TM1640_Stop
       _TM1640_Delay
     _TM1640_Writer_Byte
       _TM1640_Delay
   _Key_Init
   _LED_Control
   _RS485_Init
     _Open1USART
   _Relay_Init
   _SCR_Init
   _ShowResult
     _LED_Control
     _TM1640_Show_integer
       _TM1640_Writer_Dates
         _TM1640_Start
           _TM1640_Delay
         _TM1640_Stop
           _TM1640_Delay
         _TM1640_Writer_Byte
           _TM1640_Delay
         ___lwmod (ARG)
       ___lwdiv
       ___lwmod
       ___wmul (ARG)
     _TM1640_Writer_Dates
       _TM1640_Start
         _TM1640_Delay
       _TM1640_Stop
         _TM1640_Delay
       _TM1640_Writer_Byte
         _TM1640_Delay
       ___lwmod (ARG)
     ___wmul
   _Timer0_Init
     _SetTimer0
   _delay_ms
     _delay1ms

 _Sys_Cyc (ROOT)
   ___llmod
   i2_LED_Control
   i2_SetTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      A      89       5       85.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     18      54       1       88.4%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      DD      12        0.0%
DATA                 0      0      DD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Dec 22 19:08:49 2015

                ?_TM1640_Stop 003D  __size_of_TM1640_Writer_Dates 002A                 ?_TM1640_Delay 003D  
         ___wmul@multiplicand 00E1                   __CFG_BORV$3 000000                 ?_TM1640_Start 003D  
                _gf_ADC6_Buff 000C                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000                  __CFG_CP4$OFF 000000  
                __CFG_CP5$OFF 000000                  __CFG_CP6$OFF 000000                  __CFG_CP7$OFF 000000  
                         l409 08D0                           l613 0578                           l394 0690  
                         l395 06AA                           l672 03FA                           l676 041C  
                         l678 042A                           l679 042C                           _GIE 007F97  
                __CFG_CPB$OFF 000000                           _RB0 007C08                           _RB1 007C09  
                         _RC0 007C10                           _RA4 007C04                           _RC1 007C11  
                         _RA5 007C05                           _RD0 007C18                           _RD1 007C19  
                         _RD2 007C1A                           _RD3 007C1B                           _RD4 007C1C  
                         _RF1 007C29                           _RD5 007C1D                           _RF2 007C2A  
                         _RD6 007C1E                           _RF3 007C2B                           _RD7 007C1F  
                __CFG_CPD$OFF 000000                           _PSA 007EAB                           prod 000FF3  
                ?_LED_Control 00DF                           wreg 000FE8                  ?_GPIO_Config 003D  
                  _TXSTA1bits 000FAC          ?_TM1640_Show_integer 00E6                   ?_RS485_Init 003D  
                        l1201 03BA                          l1211 050E                          l3300 08BA  
                        l3400 05FA                          l3306 08C4                          l3308 08C8  
                        l3420 0648                          l3342 06AE                          l3414 062E  
                        l3406 0612                          l3408 0616                          l3360 0360  
                        l3432 0676                          l3424 065C                          l3450 03E6  
                        l3362 036E                          l3348 06C4                          l3372 03AA  
                        l3364 0378                          l3380 04C0                          l3428 0670  
                        l3436 067C                          l3470 0420                          l3462 0408  
                        l3454 03F0                          l3446 03DA                          l3382 04CE  
                        l3384 04D8                          l3560 08E2                          l3466 0412  
                        l3458 03FE                          l3388 04FE                          l3572 0336  
                        l3484 075C                          l3398 05F6                          l3558 08DC  
                        l3568 02E2                          l3684 059E                          _T0CS 007EAD  
                        _T0SE 007EAC                          _IPEN 007E87                 ??_Init_TM1640 00E3  
                        _main 057C                          fsr0h 000FEA                          fsr1h 000FE2  
                        fsr0l 000FE9                          fsr2h 000FDA                          fsr1l 000FE1  
                        indf2 000FDF                          fsr2l 000FD9                          pclat 000FFA  
                        prodh 000FF4                          prodl 000FF3                          start 0160  
               __CFG_IESO$OFF 000000                 __CFG_FOSC$HS1 000000                 __CFG_MCLRE$ON 000000  
                ___param_bank 000010                ??_TM1640_Delay 00DF               __end_of_OpenADC 057C  
              ??_TM1640_Start 00E1                 __CFG_RETEN$ON 000000                         ?_main 003D  
             __end_of_Sys_Cyc 0160               __end_of___llmod 04AC                         _RC1IF 007CF5  
                       _T0PS0 007EA8                         _T0PS1 007EA9                         _T0PS2 007EAA  
             __end_of___lwdiv 03C4               __end_of___lwmod 0518                         i2l333 00F8  
                       i2l336 0126             __end_of_ADC6_Init 0948                         _TMR0H 000FD7  
                       _TMR0L 000FD6         ??_TM1640_Show_integer 00E8                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
               __CFG_WRT4$OFF 000000                __CFG_EBRT0$OFF 000000                 __CFG_WRT5$OFF 000000  
              __CFG_EBRT1$OFF 000000                 __CFG_WRT6$OFF 000000                __CFG_EBRT2$OFF 000000  
               __CFG_WRT7$OFF 000000                __CFG_EBRT3$OFF 000000                __CFG_EBRT4$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBRT5$OFF 000000                __CFG_EBRT6$OFF 000000  
              __CFG_EBRT7$OFF 000000              __end_of_SCR_Init 0972                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBRTB$OFF 000000  
                       tablat 000FF5                         status 000FD8            _TM1640_Writer_Byte 0684  
             __initialization 0714           __end_of_Init_TM1640 086E           __size_of_RS485_Init 001A  
                __end_of_main 05DC           ?_TM1640_Writer_Byte 003D              __end_of_Key_Init 0918  
       i2LED_Control@_LED_num 003E                    _Open1USART 03C4                        ??_main 00E9  
               __activetblptr 000000          ??_TM1640_Writer_Byte 00E1                        _ADCON0 000FC2  
                      _ADCON1 000FC1                        _ADCON2 000FC0              ___llmod@dividend 003D  
                  _Relay_Init 0958                        _T08BIT 007EAE                        _ANSEL4 00792C  
                      _ANSEL6 00792E                        _ANSEL7 00792F                        _ANSEL8 007920  
             __CFG_BBSIZ$BB2K 000000                        i2l1148 049A                        i2l3012 0116  
              __CFG_WDTEN$OFF 000000                        i2l2860 048A                        i2l2852 044E  
                      i2l2854 045C                        i2l2856 0464                        i2l2890 06F8  
                      i2l2882 06E2                        i2l2892 06FC                        i2l2884 06E6  
                      i2l2868 07D0                        i2l2898 070E                        i2l2996 00D0  
                      i2l2998 00DC                 SetTimer0@_tmr 00DF                        _RCREG1 000FAE  
                      _RCSTA1 000FAB                        _TMR0IE 007F95                        _SPBRG1 000FAF  
                      _TMR0IF 007F92                        _TMR0ON 007EAF                        _TRISB0 007C98  
                      _TRISB1 007C99                        _TRISC0 007CA0                        _TRISB2 007C9A  
                      _TRISA4 007C94                        _TRISC1 007CA1                        _TRISA5 007C95  
                      _TRISD0 007CA8                        _TRISD1 007CA9                        _TRISD2 007CAA  
                      _TRISD3 007CAB                        _TRISD4 007CAC                        _TRISC6 007CA6  
               TM1640_Delay@i 00E0                        _TRISF1 007CB9                        _TRISD5 007CAD  
                      _TRISC7 007CA7                        _TRISF2 007CBA                        _TRISD6 007CAE  
                      _TRISF3 007CBB                        _TRISD7 007CAF                        _TXREG1 000FAD  
                      _TXSTA1 000FAC              __end_of_delay1ms 0684              __end_of_delay_ms 08FA  
               ??_Timer0_Init 00E3                     ??_OpenADC 00E1                  Sys_Cyc@_Byte 0010  
      TM1640_Writer_Byte@Date 00E1                  Sys_Cyc@_flag 0011                __CFG_XINST$OFF 000000  
                Sys_Cyc@_temp 0054        TM1640_Writer_Byte@mask 00E2                        ___wmul 0790  
              __CFG_STVREN$ON 000000                     ??_Sys_Cyc 0046                     ??___llmod 0045  
        Sys_Cyc@_overturn_LED 0012                     ??___lwdiv 00E3            __size_of_SetTimer0 003E  
                   ??___lwmod 00E3                    _ShowResult 0288            LED_Control@_switch 00DF  
                      clear_0 071A                        clear_1 0726          __size_of_TM1640_Stop 0024  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
           _g_RS485_Send_Flag 0016          __size_of_LED_Control 0058          __size_of_GPIO_Config 0002  
         _TM1640_Writer_Dates 07F8          __end_of_TM1640_Delay 08DA          __end_of_TM1640_Start 08B6  
                  __accesstop 0060       __end_of__initialization 074C                   _Init_TM1640 0848  
                ?i2_SetTimer0 003D                 ___rparam_used 000001                __pcstackCOMRAM 003D  
      __size_ofi2_LED_Control 0044                  __pidataBANK0 0948                     ?_SCR_Init 003D  
        ?_TM1640_Writer_Dates 00E4           __end_of_Timer0_Init 0848                   ?_Open1USART 00DF  
                ??_RS485_Init 00E2                   ?_Relay_Init 003D             __end_of_SetTimer0 0790  
                  __pbssBANK0 0060                     ?_Key_Init 003D                   _ReceiveBuff 0060  
             __CFG_PLLCFG$OFF 000000       TM1640_Writer_Dates@Addr 00E5       TM1640_Writer_Dates@Date 00E4  
       ??_TM1640_Writer_Dates 00E5                       ?___wmul 00DF                    ??_SCR_Init 00DF  
          __end_of_RS485_Init 0932                   ?_ShowResult 003D           LED_Control@_LED_num 00E0  
                  _gs_ComData 0001              Open1USART@config 00E1                       _LED_BUS 0013  
                   ?_delay1ms 003D                     ?_delay_ms 00E2                 i2_LED_Control 06D0  
                     _SPBRGH1 000FD4                     _ADC6_Init 0932             _ga_RS485_SendBuff 002C  
                  ??_Key_Init 00DF           __size_of_Open1USART 0078               __CFG_PWRTEN$OFF 000000  
                     _OpenADC 0518                       __Hparam 0000                   _Timer0_Init 0822  
                     __Lparam 0000                       _Sys_Cyc 0008               __size_of___wmul 0038  
                     ___llmod 043C                       ___lwdiv 0342                       ___lwmod 04AC  
         __size_of_Relay_Init 000E   __end_of_TM1640_Show_integer 0288                       __pcinit 0714  
                     __ramtop 1000                       __ptext0 057C                       __ptext1 08DA  
                     __ptext2 0634                       __ptext3 0822                       __ptext4 0752  
                     __ptext5 0288                       __ptext6 0790                       __ptext7 0164  
                     __ptext8 04AC                       __ptext9 0342                       _gsa_Msg 006A  
                  ??_delay1ms 00DF         __size_of_TM1640_Delay 0024             __CFG_MSSPMSK$MSK7 000000  
              ?i2_LED_Control 003D                    ??_delay_ms 00E4         __size_of_TM1640_Start 0024  
                  ?_ADC6_Init 003D                OpenADC@config2 00DF                OpenADC@config3 00E0  
        end_of_initialization 074C           __size_of_ShowResult 00BA          __size_ofi2_SetTimer0 0030  
                     postdec1 000FE5                       postinc0 000FEE                  _TM1640_Delay 08B6  
                _TM1640_Start 0892              TM1640_Delay@Time 00DF   __size_of_TM1640_Writer_Byte 004C  
                ?_Init_TM1640 003D                 ??_TM1640_Stop 00E1                __end_of___wmul 07C8  
                ??_Open1USART 00E1             __size_of_SCR_Init 000C               ??i2_LED_Control 003E  
               ??_LED_Control 00E0                 ??_GPIO_Config 00DF           start_initialization 0714  
                 _g_Timer_Cyc 0008                   ??_ADC6_Init 00E4                  ??_Relay_Init 00DF  
  TM1640_Show_integer@Numbers 00E6               ___llmod@divisor 0041             __size_of_Key_Init 001E  
             ___llmod@counter 0045                     _SetTimer0 0752            __end_of_Open1USART 043C  
             i2SetTimer0@_tmr 003D                      ??___wmul 00E3                  ??_ShowResult 00E8  
                 __pdataBANK0 00CF          i2LED_Control@_switch 003D            __end_of_Relay_Init 0966  
         __end_of_TM1640_Stop 0892                   __pbssCOMRAM 0001                 __pcstackBANK0 00DF  
           __size_of_delay1ms 0050             __size_of_delay_ms 0020           __end_of_LED_Control 0634  
         __end_of_GPIO_Config 0974            __end_of_ShowResult 0342   __end_of_TM1640_Writer_Dates 0822  
                  ?_SetTimer0 00DF                      ?_OpenADC 00DF                  ?_Timer0_Init 003D  
            ___lwdiv@dividend 00DF             __CFG_CCP2MX$PORTC 000000                     __pintcode 0008  
                    ?_Sys_Cyc 003D                      ?___llmod 003D                      ?___lwdiv 00DF  
                    ?___lwmod 00DF               Open1USART@spbrg 00DF                     _gs_Switch 0036  
            ___lwdiv@quotient 00E4                     delay1ms@a 00DF                     delay1ms@b 00E0  
                   delay1ms@c 00E1               _s_Local_Key_FSM 00B0                ___wmul@product 00E3  
               OpenADC@config 00E3                      _PIE1bits 000F9D          __size_of_Init_TM1640 0026  
                    _PIR1bits 000F9E                      _SCR_Init 0966                   _TM1640_Stop 086E  
                  _ADCON0bits 000FC2             ___wmul@multiplier 00DF              __CFG_SOSCSEL$DIG 000000  
                 _LED_Control 05DC                   _GPIO_Config 0972  __size_of_TM1640_Show_integer 0124  
                   copy_data0 0740                      _Key_Init 08FA                 ??i2_SetTimer0 003F  
                 ??_SetTimer0 00E1                      __Hrparam 0000              __size_of_OpenADC 0064  
                    __Lrparam 0000            __CFG_BOREN$SBORDIS 000000      Pulse_1Khz@_overturn_1Khz 000F  
            __size_of_Sys_Cyc 0158              __size_of___llmod 0070              __size_of___lwdiv 0082  
            __size_of___lwmod 006C                  _g_RS485_Byte 0014          _g_RS485_Receive_Flag 0015  
                    _delay1ms 0634    __end_of_TM1640_Writer_Byte 06D0                      _delay_ms 08DA  
             ___lwdiv@divisor 00E1               ___lwdiv@counter 00E3                      __ptext10 07F8  
                    __ptext11 05DC                      __ptext20 0892                      __ptext12 0966  
                    __ptext21 08B6                      __ptext13 0958                      __ptext22 0972  
                    __ptext14 0918                      __ptext23 0932                      __ptext15 03C4  
                    __ptext24 0518                      __ptext16 08FA                      __ptext17 0848  
                    __ptext26 07C8                      __ptext18 0684                      __ptext27 06D0  
                    __ptext19 086E                      __ptext28 043C                 __size_of_main 0060  
         __CFG_RTCOSC$SOSCREF 000000          __size_of_Timer0_Init 0026           __end_ofi2_SetTimer0 07F8  
         __CFG_INTOSCSEL$HIGH 000000                   delay_ms@_ms 00E2                    _LED_Number 00CF  
                  _INTCONbits 000FF2         __end_ofi2_LED_Control 0714                    _RS485_Init 0918  
                    intlevel2 0000              ___lwmod@dividend 00DF                    _RCSTA1bits 000FAB  
          __CFG_WDTPS$1048576 000000             _gs_Local_Key_User 0017          _ga_RS485_ReceiveBuff 00C5  
             ___lwmod@divisor 00E1               ___lwmod@counter 00E3           __CFG_BORPWR$ZPBORMV 000000  
          __size_of_ADC6_Init 0016                   i2_SetTimer0 07C8           _TM1640_Show_integer 0164  
