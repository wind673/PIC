

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sun Dec 20 14:22:54 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F67K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    68  0000                     
    69                           	psect	idataBANK0
    70  001846                     __pidataBANK0:
    71                           	opt stack 0
    72                           
    73                           ;initializer for _LED_Number
    74  001846  3F                 	db	63
    75  001847  06                 	db	6
    76  001848  5B                 	db	91
    77  001849  4F                 	db	79
    78  00184A  66                 	db	102
    79  00184B  6D                 	db	109
    80  00184C  7D                 	db	125
    81  00184D  07                 	db	7
    82  00184E  7F                 	db	127
    83  00184F  6F                 	db	111
    84  001850  77                 	db	119
    85  001851  7C                 	db	124
    86  001852  39                 	db	57
    87  001853  5E                 	db	94
    88  001854  79                 	db	121
    89  001855  71                 	db	113
    90  0000                     _ANSEL4	set	31020
    91  0000                     _ANSEL6	set	31022
    92  0000                     _ANSEL7	set	31023
    93  0000                     _ANSEL8	set	31008
    94  0000                     _ADCON0	set	4034
    95  0000                     _ADCON0bits	set	4034
    96  0000                     _ADCON1	set	4033
    97  0000                     _ADCON2	set	4032
    98  0000                     _ADRESH	set	4036
    99  0000                     _ADRESL	set	4035
   100  0000                     _INTCONbits	set	4082
   101  0000                     _PIE1bits	set	3997
   102  0000                     _PIR1bits	set	3998
   103  0000                     _RCREG1	set	4014
   104  0000                     _RCSTA1	set	4011
   105  0000                     _RCSTA1bits	set	4011
   106  0000                     _SPBRG1	set	4015
   107  0000                     _SPBRGH1	set	4052
   108  0000                     _TMR0H	set	4055
   109  0000                     _TMR0L	set	4054
   110  0000                     _TXREG1	set	4013
   111  0000                     _TXSTA1	set	4012
   112  0000                     _TXSTA1bits	set	4012
   113  0000                     _GIE	set	32663
   114  0000                     _IPEN	set	32391
   115  0000                     _PSA	set	32427
   116  0000                     _RA4	set	31748
   117  0000                     _RA5	set	31749
   118  0000                     _RB0	set	31752
   119  0000                     _RB1	set	31753
   120  0000                     _RC0	set	31760
   121  0000                     _RC1	set	31761
   122  0000                     _RC1IF	set	31989
   123  0000                     _RD0	set	31768
   124  0000                     _RD1	set	31769
   125  0000                     _RD2	set	31770
   126  0000                     _RD3	set	31771
   127  0000                     _RD4	set	31772
   128  0000                     _RD5	set	31773
   129  0000                     _RD6	set	31774
   130  0000                     _RD7	set	31775
   131  0000                     _RF1	set	31785
   132  0000                     _RF2	set	31786
   133  0000                     _RF3	set	31787
   134  0000                     _T08BIT	set	32430
   135  0000                     _T0CS	set	32429
   136  0000                     _T0PS0	set	32424
   137  0000                     _T0PS1	set	32425
   138  0000                     _T0PS2	set	32426
   139  0000                     _T0SE	set	32428
   140  0000                     _TMR0IE	set	32661
   141  0000                     _TMR0IF	set	32658
   142  0000                     _TMR0ON	set	32431
   143  0000                     _TRISA4	set	31892
   144  0000                     _TRISA5	set	31893
   145  0000                     _TRISB0	set	31896
   146  0000                     _TRISB1	set	31897
   147  0000                     _TRISB2	set	31898
   148  0000                     _TRISC0	set	31904
   149  0000                     _TRISC1	set	31905
   150  0000                     _TRISC6	set	31910
   151  0000                     _TRISC7	set	31911
   152  0000                     _TRISD0	set	31912
   153  0000                     _TRISD1	set	31913
   154  0000                     _TRISD2	set	31914
   155  0000                     _TRISD3	set	31915
   156  0000                     _TRISD4	set	31916
   157  0000                     _TRISD5	set	31917
   158  0000                     _TRISD6	set	31918
   159  0000                     _TRISD7	set	31919
   160  0000                     _TRISF1	set	31929
   161  0000                     _TRISF2	set	31930
   162  0000                     _TRISF3	set	31931
   163                           
   164                           ; #config settings
   165  0000                     
   166                           	psect	cinit
   167  0014FA                     __pcinit:
   168                           	opt stack 0
   169  0014FA                     start_initialization:
   170                           	opt stack 0
   171  0014FA                     __initialization:
   172                           	opt stack 0
   173                           
   174                           ; Clear objects allocated to BANK0 (142 bytes)
   175  0014FA  EE00  F060         	lfsr	0,__pbssBANK0
   176  0014FE  0E8E               	movlw	142
   177  001500                     clear_0:
   178  001500  6AEE               	clrf	postinc0,c
   179  001502  06E8               	decf	wreg,f,c
   180  001504  E1FD               	bnz	clear_0
   181                           
   182                           ; Clear objects allocated to COMRAM (21 bytes)
   183  001506  EE00  F033         	lfsr	0,__pbssCOMRAM
   184  00150A  0E15               	movlw	21
   185  00150C                     clear_1:
   186  00150C  6AEE               	clrf	postinc0,c
   187  00150E  06E8               	decf	wreg,f,c
   188  001510  E1FD               	bnz	clear_1
   189                           
   190                           ; Initialize objects allocated to BANK0 (16 bytes)
   191                           ; load TBLPTR registers with __pidataBANK0
   192  001512  0E46               	movlw	low __pidataBANK0
   193  001514  6EF6               	movwf	tblptrl,c
   194  001516  0E18               	movlw	high __pidataBANK0
   195  001518  6EF7               	movwf	tblptrh,c
   196  00151A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   197  00151C  6EF8               	movwf	tblptru,c
   198  00151E  EE00  F0EE         	lfsr	0,__pdataBANK0
   199  001522  EE10 F010          	lfsr	1,16
   200  001526                     copy_data0:
   201  001526  0009               	tblrd		*+
   202  001528  CFF5 FFEE          	movff	tablat,postinc0
   203  00152C  50E5               	movf	postdec1,w,c
   204  00152E  50E1               	movf	fsr1l,w,c
   205  001530  E1FA               	bnz	copy_data0
   206  001532                     end_of_initialization:
   207                           	opt stack 0
   208  001532                     __end_of__initialization:
   209                           	opt stack 0
   210  001532  0100               	movlb	0
   211  001534  EFF3  F00A         	goto	_main	;jump to C main() function
   212                           tblptru	equ	0xFF8
   213                           tblptrh	equ	0xFF7
   214                           tblptrl	equ	0xFF6
   215                           tablat	equ	0xFF5
   216                           postinc0	equ	0xFEE
   217                           wreg	equ	0xFE8
   218                           postdec1	equ	0xFE5
   219                           fsr1l	equ	0xFE1
   220                           
   221                           	psect	bssCOMRAM
   222  000033                     __pbssCOMRAM:
   223                           	opt stack 0
   224  000033                     _g_Timer_Cyc:
   225                           	opt stack 0
   226  000033                     	ds	4
   227  000037                     _gf_ADC6_Buff:
   228                           	opt stack 0
   229  000037                     	ds	3
   230  00003A                     Pulse_1Khz@_overturn_1Khz:
   231                           	opt stack 0
   232  00003A                     	ds	1
   233  00003B                     Sys_Cyc@_Byte:
   234                           	opt stack 0
   235  00003B                     	ds	1
   236  00003C                     Sys_Cyc@_flag:
   237                           	opt stack 0
   238  00003C                     	ds	1
   239  00003D                     Sys_Cyc@_overturn_LED:
   240                           	opt stack 0
   241  00003D                     	ds	1
   242  00003E                     _LED_BUS:
   243                           	opt stack 0
   244  00003E                     	ds	1
   245  00003F                     _g_RS485_Byte:
   246                           	opt stack 0
   247  00003F                     	ds	1
   248  000040                     _g_RS485_Receive_Flag:
   249                           	opt stack 0
   250  000040                     	ds	1
   251  000041                     _gs_Switch:
   252                           	opt stack 0
   253  000041                     	ds	7
   254                           tblptru	equ	0xFF8
   255                           tblptrh	equ	0xFF7
   256                           tblptrl	equ	0xFF6
   257                           tablat	equ	0xFF5
   258                           postinc0	equ	0xFEE
   259                           wreg	equ	0xFE8
   260                           postdec1	equ	0xFE5
   261                           fsr1l	equ	0xFE1
   262                           
   263                           	psect	bssBANK0
   264  000060                     __pbssBANK0:
   265                           	opt stack 0
   266  000060                     _ReceiveBuff:
   267                           	opt stack 0
   268  000060                     	ds	10
   269  00006A                     _gsa_Msg:
   270                           	opt stack 0
   271  00006A                     	ds	70
   272  0000B0                     _gs_Local_Key_User:
   273                           	opt stack 0
   274  0000B0                     	ds	21
   275  0000C5                     _s_Local_Key_FSM:
   276                           	opt stack 0
   277  0000C5                     	ds	21
   278  0000DA                     _ga_RS485_ReceiveBuff:
   279                           	opt stack 0
   280  0000DA                     	ds	10
   281  0000E4                     _ga_RS485_SendBuff:
   282                           	opt stack 0
   283  0000E4                     	ds	10
   284                           tblptru	equ	0xFF8
   285                           tblptrh	equ	0xFF7
   286                           tblptrl	equ	0xFF6
   287                           tablat	equ	0xFF5
   288                           postinc0	equ	0xFEE
   289                           wreg	equ	0xFE8
   290                           postdec1	equ	0xFE5
   291                           fsr1l	equ	0xFE1
   292                           
   293                           	psect	dataBANK0
   294  0000EE                     __pdataBANK0:
   295                           	opt stack 0
   296  0000EE                     _LED_Number:
   297                           	opt stack 0
   298  0000EE                     	ds	16
   299                           tblptru	equ	0xFF8
   300                           tblptrh	equ	0xFF7
   301                           tblptrl	equ	0xFF6
   302                           tablat	equ	0xFF5
   303                           postinc0	equ	0xFEE
   304                           wreg	equ	0xFE8
   305                           postdec1	equ	0xFE5
   306                           fsr1l	equ	0xFE1
   307                           
   308                           	psect	cstackBANK1
   309  000100                     __pcstackBANK1:
   310                           	opt stack 0
   311  000100                     ?___ftdiv:
   312                           	opt stack 0
   313  000100                     RS485_SendDate@date_dress:
   314                           	opt stack 0
   315  000100                     RS485_ManageMessage@DataBuff:
   316                           	opt stack 0
   317  000100                     ___ftdiv@f1:
   318                           	opt stack 0
   319                           
   320                           ; 3 bytes @ 0x0
   321  000100                     	ds	2
   322  000102                     RS485_SendDate@date_lenth:
   323                           	opt stack 0
   324  000102                     RS485_ManageMessage@date_lenth:
   325                           	opt stack 0
   326                           
   327                           ; 1 bytes @ 0x2
   328  000102                     	ds	1
   329  000103                     ??_RS485_ManageMessage:
   330  000103                     ___ftdiv@f2:
   331                           	opt stack 0
   332                           
   333                           ; 3 bytes @ 0x3
   334  000103                     	ds	3
   335  000106                     ??___ftdiv:
   336                           
   337                           ; 0 bytes @ 0x6
   338  000106                     	ds	2
   339  000108                     RS485_ManageMessage@CRC_H:
   340                           	opt stack 0
   341                           
   342                           ; 1 bytes @ 0x8
   343  000108                     	ds	1
   344  000109                     RS485_ManageMessage@CRC_L:
   345                           	opt stack 0
   346  000109                     ___ftdiv@cntr:
   347                           	opt stack 0
   348                           
   349                           ; 1 bytes @ 0x9
   350  000109                     	ds	1
   351  00010A                     RS485_ManageMessage@from_dress:
   352                           	opt stack 0
   353  00010A                     ___ftdiv@f3:
   354                           	opt stack 0
   355                           
   356                           ; 3 bytes @ 0xA
   357  00010A                     	ds	3
   358  00010D                     ___ftdiv@exp:
   359                           	opt stack 0
   360                           
   361                           ; 1 bytes @ 0xD
   362  00010D                     	ds	1
   363  00010E                     ___ftdiv@sign:
   364                           	opt stack 0
   365                           
   366                           ; 1 bytes @ 0xE
   367  00010E                     	ds	1
   368  00010F                     ??_Run:
   369                           
   370                           ; 0 bytes @ 0xF
   371  00010F                     	ds	4
   372                           tblptru	equ	0xFF8
   373                           tblptrh	equ	0xFF7
   374                           tblptrl	equ	0xFF6
   375                           tablat	equ	0xFF5
   376                           postinc0	equ	0xFEE
   377                           wreg	equ	0xFE8
   378                           postdec1	equ	0xFE5
   379                           fsr1l	equ	0xFE1
   380                           
   381                           	psect	cstackBANK0
   382  0000FE                     __pcstackBANK0:
   383                           	opt stack 0
   384  0000FE                     
   385                           ; 0 bytes @ 0x0
   386  0000FE                     	ds	1
   387                           tblptru	equ	0xFF8
   388                           tblptrh	equ	0xFF7
   389                           tblptrl	equ	0xFF6
   390                           tablat	equ	0xFF5
   391                           postinc0	equ	0xFEE
   392                           wreg	equ	0xFE8
   393                           postdec1	equ	0xFE5
   394                           fsr1l	equ	0xFE1
   395                           
   396                           	psect	cstackCOMRAM
   397  000001                     __pcstackCOMRAM:
   398                           	opt stack 0
   399  000001                     ?i2___llmod:
   400                           	opt stack 0
   401  000001                     Delay_1Khz@a:
   402                           	opt stack 0
   403  000001                     i2LED_Control@_switch:
   404                           	opt stack 0
   405  000001                     i2SetTimer0@_tmr:
   406                           	opt stack 0
   407  000001                     i2___llmod@dividend:
   408                           	opt stack 0
   409                           
   410                           ; 4 bytes @ 0x0
   411  000001                     	ds	1
   412  000002                     Delay_1Khz@b:
   413                           	opt stack 0
   414  000002                     i2LED_Control@_LED_num:
   415                           	opt stack 0
   416                           
   417                           ; 1 bytes @ 0x1
   418  000002                     	ds	1
   419  000003                     ??i2_SetTimer0:
   420  000003                     Delay_1Khz@c:
   421                           	opt stack 0
   422                           
   423                           ; 1 bytes @ 0x2
   424  000003                     	ds	1
   425  000004                     Pulse_1Khz@_QD:
   426                           	opt stack 0
   427                           
   428                           ; 1 bytes @ 0x3
   429  000004                     	ds	1
   430  000005                     Pulse_1Khz@_pulse:
   431                           	opt stack 0
   432  000005                     i2___llmod@divisor:
   433                           	opt stack 0
   434                           
   435                           ; 4 bytes @ 0x4
   436  000005                     	ds	4
   437  000009                     i2___llmod@counter:
   438                           	opt stack 0
   439                           
   440                           ; 1 bytes @ 0x8
   441  000009                     	ds	1
   442  00000A                     ??_Sys_Cyc:
   443                           
   444                           ; 0 bytes @ 0x9
   445  00000A                     	ds	14
   446  000018                     Sys_Cyc@_temp:
   447                           	opt stack 0
   448                           
   449                           ; 1 bytes @ 0x17
   450  000018                     	ds	1
   451  000019                     ??_Key_ReadFSM:
   452  000019                     ?_ReadADC:
   453                           	opt stack 0
   454  000019                     ?___wmul:
   455                           	opt stack 0
   456  000019                     ?___lwdiv:
   457                           	opt stack 0
   458  000019                     ?___lwmod:
   459                           	opt stack 0
   460  000019                     ?___ftpack:
   461                           	opt stack 0
   462  000019                     ?___lldiv:
   463                           	opt stack 0
   464  000019                     ?___llmod:
   465                           	opt stack 0
   466  000019                     delay1ms@a:
   467                           	opt stack 0
   468  000019                     Key_ResetFSM@t:
   469                           	opt stack 0
   470  000019                     LED_Control@_switch:
   471                           	opt stack 0
   472  000019                     TM1640_Delay@Time:
   473                           	opt stack 0
   474  000019                     OpenADC@config2:
   475                           	opt stack 0
   476  000019                     ___lbmod@divisor:
   477                           	opt stack 0
   478  000019                     SetTimer0@_tmr:
   479                           	opt stack 0
   480  000019                     Open1USART@spbrg:
   481                           	opt stack 0
   482  000019                     ___wmul@multiplier:
   483                           	opt stack 0
   484  000019                     ___lwdiv@dividend:
   485                           	opt stack 0
   486  000019                     ___lwmod@dividend:
   487                           	opt stack 0
   488  000019                     ___ftpack@arg:
   489                           	opt stack 0
   490  000019                     ___lldiv@dividend:
   491                           	opt stack 0
   492  000019                     ___llmod@dividend:
   493                           	opt stack 0
   494                           
   495                           ; 4 bytes @ 0x18
   496  000019                     	ds	1
   497  00001A                     delay1ms@b:
   498                           	opt stack 0
   499  00001A                     LED_Control@_LED_num:
   500                           	opt stack 0
   501  00001A                     TM1640_Delay@i:
   502                           	opt stack 0
   503  00001A                     OpenADC@config3:
   504                           	opt stack 0
   505  00001A                     ___lbmod@dividend:
   506                           	opt stack 0
   507                           
   508                           ; 1 bytes @ 0x19
   509  00001A                     	ds	1
   510  00001B                     ??_SetTimer0:
   511  00001B                     ??_OpenADC:
   512  00001B                     ??_ReadADC:
   513  00001B                     delay1ms@c:
   514                           	opt stack 0
   515  00001B                     TM1640_Writer_Byte@Date:
   516                           	opt stack 0
   517  00001B                     Open1USART@config:
   518                           	opt stack 0
   519  00001B                     ___lbmod@counter:
   520                           	opt stack 0
   521  00001B                     ___wmul@multiplicand:
   522                           	opt stack 0
   523  00001B                     ___lwdiv@divisor:
   524                           	opt stack 0
   525  00001B                     ___lwmod@divisor:
   526                           	opt stack 0
   527                           
   528                           ; 2 bytes @ 0x1A
   529  00001B                     	ds	1
   530  00001C                     TM1640_Writer_Byte@mask:
   531                           	opt stack 0
   532  00001C                     ___ftpack@exp:
   533                           	opt stack 0
   534  00001C                     ___lbmod@rem:
   535                           	opt stack 0
   536  00001C                     delay_ms@_ms:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0x1B
   540  00001C                     	ds	1
   541  00001D                     Key_ReadFSM@key_num_mate:
   542                           	opt stack 0
   543  00001D                     OpenADC@config:
   544                           	opt stack 0
   545  00001D                     ___ftpack@sign:
   546                           	opt stack 0
   547  00001D                     ___lwmod@counter:
   548                           	opt stack 0
   549  00001D                     ___wmul@product:
   550                           	opt stack 0
   551  00001D                     ___lwdiv@quotient:
   552                           	opt stack 0
   553  00001D                     ___lldiv@divisor:
   554                           	opt stack 0
   555  00001D                     ___llmod@divisor:
   556                           	opt stack 0
   557                           
   558                           ; 4 bytes @ 0x1C
   559  00001D                     	ds	1
   560  00001E                     ??___ftpack:
   561  00001E                     Key_ReadFSM@key_num:
   562                           	opt stack 0
   563  00001E                     TM1640_Writer_Dates@Date:
   564                           	opt stack 0
   565  00001E                     Relay_Control@_switch:
   566                           	opt stack 0
   567                           
   568                           ; 1 bytes @ 0x1D
   569  00001E                     	ds	1
   570  00001F                     ??_Key_ManageMessage:
   571  00001F                     TM1640_Writer_Dates@Addr:
   572                           	opt stack 0
   573  00001F                     Relay_Control@relay_num:
   574                           	opt stack 0
   575  00001F                     ___lwdiv@counter:
   576                           	opt stack 0
   577                           
   578                           ; 1 bytes @ 0x1E
   579  00001F                     	ds	1
   580  000020                     TM1640_Show_integer@Numbers:
   581                           	opt stack 0
   582                           
   583                           ; 2 bytes @ 0x1F
   584  000020                     	ds	1
   585  000021                     ?___lwtoft:
   586                           	opt stack 0
   587  000021                     ___llmod@counter:
   588                           	opt stack 0
   589  000021                     ___lwtoft@c:
   590                           	opt stack 0
   591  000021                     ___lldiv@quotient:
   592                           	opt stack 0
   593                           
   594                           ; 4 bytes @ 0x20
   595  000021                     	ds	1
   596  000022                     ??_ShowResult:
   597  000022                     
   598                           ; 0 bytes @ 0x21
   599  000022                     	ds	2
   600  000024                     ?___ftmul:
   601                           	opt stack 0
   602  000024                     ___ftmul@f1:
   603                           	opt stack 0
   604                           
   605                           ; 3 bytes @ 0x23
   606  000024                     	ds	1
   607  000025                     ___lldiv@counter:
   608                           	opt stack 0
   609                           
   610                           ; 1 bytes @ 0x24
   611  000025                     	ds	1
   612  000026                     VerifyCRC@DataBuff:
   613                           	opt stack 0
   614                           
   615                           ; 2 bytes @ 0x25
   616  000026                     	ds	1
   617  000027                     ___ftmul@f2:
   618                           	opt stack 0
   619                           
   620                           ; 3 bytes @ 0x26
   621  000027                     	ds	1
   622  000028                     VerifyCRC@date_lenth:
   623                           	opt stack 0
   624                           
   625                           ; 1 bytes @ 0x27
   626  000028                     	ds	1
   627  000029                     ??_VerifyCRC:
   628                           
   629                           ; 0 bytes @ 0x28
   630  000029                     	ds	1
   631  00002A                     ??___ftmul:
   632                           
   633                           ; 0 bytes @ 0x29
   634  00002A                     	ds	3
   635  00002D                     ___ftmul@exp:
   636                           	opt stack 0
   637                           
   638                           ; 1 bytes @ 0x2C
   639  00002D                     	ds	1
   640  00002E                     ___ftmul@f3_as_product:
   641                           	opt stack 0
   642  00002E                     VerifyCRC@CRC_Value:
   643                           	opt stack 0
   644                           
   645                           ; 4 bytes @ 0x2D
   646  00002E                     	ds	3
   647  000031                     ___ftmul@cntr:
   648                           	opt stack 0
   649                           
   650                           ; 1 bytes @ 0x30
   651  000031                     	ds	1
   652  000032                     VerifyCRC@CRC_Byte:
   653                           	opt stack 0
   654  000032                     ___ftmul@sign:
   655                           	opt stack 0
   656                           
   657                           ; 1 bytes @ 0x31
   658  000032                     	ds	1
   659  000033                     tblptru	equ	0xFF8
   660                           tblptrh	equ	0xFF7
   661                           tblptrl	equ	0xFF6
   662                           tablat	equ	0xFF5
   663                           postinc0	equ	0xFEE
   664                           wreg	equ	0xFE8
   665                           postdec1	equ	0xFE5
   666                           fsr1l	equ	0xFE1
   667                           
   668                           ; 0 bytes @ 0x32
   669 ;;
   670 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   671 ;;
   672 ;; *************** function _main *****************
   673 ;; Defined at:
   674 ;;		line 40 in file "_01_USER/main.c"
   675 ;; Parameters:    Size  Location     Type
   676 ;;		None
   677 ;; Auto vars:     Size  Location     Type
   678 ;;		None
   679 ;; Return value:  Size  Location     Type
   680 ;;                  2   24[None  ] int 
   681 ;; Registers used:
   682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   683 ;; Tracked objects:
   684 ;;		On entry : 0/0
   685 ;;		On exit  : 0/0
   686 ;;		Unchanged: 0/0
   687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   692 ;;Total ram usage:        0 bytes
   693 ;; Hardware stack levels required when called:    8
   694 ;; This function calls:
   695 ;;		_ADC6_Init
   696 ;;		_GPIO_Config
   697 ;;		_Init_TM1640
   698 ;;		_Key_Init
   699 ;;		_ManageMessage
   700 ;;		_RS485_Init
   701 ;;		_Relay_Init
   702 ;;		_Run
   703 ;;		_SCR_Init
   704 ;;		_ShowResult
   705 ;;		_Timer0_Init
   706 ;; This function is called by:
   707 ;;		Startup code after reset
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711                           	psect	text0
   712  0015E6                     __ptext0:
   713                           	opt stack 0
   714  0015E6                     _main:
   715                           	opt stack 23
   716                           
   717                           ;main.c: 45: GPIO_Config();
   718                           
   719                           ; BSR set to: 0
   720                           ;incstack = 0
   721  0015E6  EC49  F00C         	call	_GPIO_Config	;wreg free
   722                           
   723                           ;main.c: 46: Key_Init();
   724  0015EA  ECD7  F00B         	call	_Key_Init	;wreg free
   725                           
   726                           ;main.c: 47: Timer0_Init();
   727  0015EE  EC90  F00B         	call	_Timer0_Init	;wreg free
   728                           
   729                           ;main.c: 48: Init_TM1640();
   730  0015F2  EC7D  F00B         	call	_Init_TM1640	;wreg free
   731                           
   732                           ;main.c: 49: ADC6_Init();
   733  0015F6  EC1A  F00C         	call	_ADC6_Init	;wreg free
   734                           
   735                           ;main.c: 50: RS485_Init();
   736  0015FA  EC0E  F00C         	call	_RS485_Init	;wreg free
   737                           
   738                           ;main.c: 51: Relay_Init();
   739  0015FE  EC3A  F00C         	call	_Relay_Init	;wreg free
   740                           
   741                           ;main.c: 52: SCR_Init();
   742  001602  EC41  F00C         	call	_SCR_Init	;wreg free
   743  001606  D000               	goto	l3679
   744  001608                     l3679:
   745                           
   746                           ;main.c: 56: {
   747                           ;main.c: 57: ManageMessage();
   748  001608  ECE6  F00B         	call	_ManageMessage	;wreg free
   749                           
   750                           ;main.c: 58: Run();
   751  00160C  EC83  F008         	call	_Run	;wreg free
   752                           
   753                           ;main.c: 59: ShowResult();
   754  001610  EC47  F007         	call	_ShowResult	;wreg free
   755  001614  D7F9               	goto	l3679
   756                           
   757                           ;main.c: 60: }
   758                           ;main.c: 62: return 0;
   759                           ;	Return value of _main is never used
   760  001616  EFD1  F000         	goto	start
   761  00161A                     __end_of_main:
   762                           	opt stack 0
   763                           tblptru	equ	0xFF8
   764                           tblptrh	equ	0xFF7
   765                           tblptrl	equ	0xFF6
   766                           tablat	equ	0xFF5
   767                           postinc0	equ	0xFEE
   768                           wreg	equ	0xFE8
   769                           postdec1	equ	0xFE5
   770                           fsr1l	equ	0xFE1
   771                           
   772 ;; *************** function _Timer0_Init *****************
   773 ;; Defined at:
   774 ;;		line 43 in file "_01_USER/My_Timer.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;		None
   777 ;; Auto vars:     Size  Location     Type
   778 ;;		None
   779 ;; Return value:  Size  Location     Type
   780 ;;		None               void
   781 ;; Registers used:
   782 ;;		wreg, status,2, status,0, cstack
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   792 ;;Total ram usage:        0 bytes
   793 ;; Hardware stack levels used:    1
   794 ;; Hardware stack levels required when called:    4
   795 ;; This function calls:
   796 ;;		_SetTimer0
   797 ;; This function is called by:
   798 ;;		_main
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802                           	psect	text1
   803  001720                     __ptext1:
   804                           	opt stack 0
   805  001720                     _Timer0_Init:
   806                           	opt stack 26
   807                           
   808                           ;My_Timer.c: 45: T08BIT = 0;
   809                           
   810                           ;incstack = 0
   811  001720  9CD5               	bcf	4053,6,c	;volatile
   812                           
   813                           ;My_Timer.c: 46: T0CS = 0;
   814  001722  9AD5               	bcf	4053,5,c	;volatile
   815                           
   816                           ;My_Timer.c: 47: T0SE = 0;
   817  001724  98D5               	bcf	4053,4,c	;volatile
   818                           
   819                           ;My_Timer.c: 48: PSA = 0;
   820  001726  96D5               	bcf	4053,3,c	;volatile
   821                           
   822                           ;My_Timer.c: 49: T0PS2 = 1;
   823  001728  84D5               	bsf	4053,2,c	;volatile
   824                           
   825                           ;My_Timer.c: 50: T0PS1 = 1;
   826  00172A  82D5               	bsf	4053,1,c	;volatile
   827                           
   828                           ;My_Timer.c: 51: T0PS0 = 1;
   829  00172C  80D5               	bsf	4053,0,c	;volatile
   830                           
   831                           ;My_Timer.c: 65: SetTimer0(1);
   832  00172E  0E00               	movlw	0
   833  001730  6E1A               	movwf	SetTimer0@_tmr+1,c
   834  001732  0E01               	movlw	1
   835  001734  6E19               	movwf	SetTimer0@_tmr,c
   836  001736  EC26  F00B         	call	_SetTimer0	;wreg free
   837                           
   838                           ;My_Timer.c: 66: TMR0ON = 1;
   839  00173A  8ED5               	bsf	4053,7,c	;volatile
   840                           
   841                           ;My_Timer.c: 67: TMR0IE = 1;
   842  00173C  8AF2               	bsf	intcon,5,c	;volatile
   843                           
   844                           ;My_Timer.c: 68: IPEN = 0;GIE = 1;
   845  00173E  9ED0               	bcf	4048,7,c	;volatile
   846  001740  8EF2               	bsf	intcon,7,c	;volatile
   847  001742  0012               	return		;funcret
   848  001744                     __end_of_Timer0_Init:
   849                           	opt stack 0
   850                           tblptru	equ	0xFF8
   851                           tblptrh	equ	0xFF7
   852                           tblptrl	equ	0xFF6
   853                           tablat	equ	0xFF5
   854                           intcon	equ	0xFF2
   855                           postinc0	equ	0xFEE
   856                           wreg	equ	0xFE8
   857                           postdec1	equ	0xFE5
   858                           fsr1l	equ	0xFE1
   859                           
   860 ;; *************** function _SetTimer0 *****************
   861 ;; Defined at:
   862 ;;		line 81 in file "_01_USER/My_Timer.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;  _tmr            2   24[COMRAM] unsigned int 
   865 ;; Auto vars:     Size  Location     Type
   866 ;;		None
   867 ;; Return value:  Size  Location     Type
   868 ;;		None               void
   869 ;; Registers used:
   870 ;;		wreg, status,2, status,0
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   876 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   878 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   879 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   880 ;;Total ram usage:        4 bytes
   881 ;; Hardware stack levels used:    1
   882 ;; Hardware stack levels required when called:    3
   883 ;; This function calls:
   884 ;;		Nothing
   885 ;; This function is called by:
   886 ;;		_Timer0_Init
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           	psect	text2
   891  00164C                     __ptext2:
   892                           	opt stack 0
   893  00164C                     _SetTimer0:
   894                           	opt stack 26
   895                           
   896                           ;My_Timer.c: 83: if(_tmr > 0xffff) _tmr = 0xffff;
   897                           
   898                           ;incstack = 0
   899  00164C  D003               	goto	l2889
   900  00164E  6819               	setf	SetTimer0@_tmr,c
   901  001650  681A               	setf	SetTimer0@_tmr+1,c
   902  001652  D000               	goto	l2889
   903  001654                     l2889:
   904                           
   905                           ;My_Timer.c: 84: _tmr=0xffff-_tmr;
   906  001654  C019  F01B         	movff	SetTimer0@_tmr,??_SetTimer0
   907  001658  C01A  F01C         	movff	SetTimer0@_tmr+1,??_SetTimer0+1
   908  00165C  1E1B               	comf	??_SetTimer0,f,c
   909  00165E  1E1C               	comf	??_SetTimer0+1,f,c
   910  001660  4A1B               	infsnz	??_SetTimer0,f,c
   911  001662  2A1C               	incf	??_SetTimer0+1,f,c
   912  001664  0EFF               	movlw	255
   913  001666  241B               	addwf	??_SetTimer0,w,c
   914  001668  6E19               	movwf	SetTimer0@_tmr,c
   915  00166A  0EFF               	movlw	255
   916  00166C  201C               	addwfc	??_SetTimer0+1,w,c
   917  00166E  6E1A               	movwf	SetTimer0@_tmr+1,c
   918                           
   919                           ;My_Timer.c: 85: TMR0H = _tmr/256;
   920  001670  501A               	movf	SetTimer0@_tmr+1,w,c
   921  001672  6ED7               	movwf	4055,c	;volatile
   922                           
   923                           ;My_Timer.c: 86: TMR0L = _tmr%256;
   924  001674  C019  FFD6         	movff	SetTimer0@_tmr,4054	;volatile
   925                           
   926                           ;My_Timer.c: 87: TMR0IF = 0;
   927  001678  94F2               	bcf	intcon,2,c	;volatile
   928  00167A  0012               	return		;funcret
   929  00167C                     __end_of_SetTimer0:
   930                           	opt stack 0
   931                           tblptru	equ	0xFF8
   932                           tblptrh	equ	0xFF7
   933                           tblptrl	equ	0xFF6
   934                           tablat	equ	0xFF5
   935                           intcon	equ	0xFF2
   936                           postinc0	equ	0xFEE
   937                           wreg	equ	0xFE8
   938                           postdec1	equ	0xFE5
   939                           fsr1l	equ	0xFE1
   940                           
   941 ;; *************** function _ShowResult *****************
   942 ;; Defined at:
   943 ;;		line 94 in file "_01_USER/Run.c"
   944 ;; Parameters:    Size  Location     Type
   945 ;;		None
   946 ;; Auto vars:     Size  Location     Type
   947 ;;		None
   948 ;; Return value:  Size  Location     Type
   949 ;;		None               void
   950 ;; Registers used:
   951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   952 ;; Tracked objects:
   953 ;;		On entry : 0/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   959 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   960 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   961 ;;Total ram usage:        1 bytes
   962 ;; Hardware stack levels used:    1
   963 ;; Hardware stack levels required when called:    7
   964 ;; This function calls:
   965 ;;		_LED_Control
   966 ;;		_TM1640_Show_integer
   967 ;;		_TM1640_Writer_Dates
   968 ;;		___wmul
   969 ;; This function is called by:
   970 ;;		_main
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974                           	psect	text3
   975  000E8E                     __ptext3:
   976                           	opt stack 0
   977  000E8E                     _ShowResult:
   978                           	opt stack 23
   979                           
   980                           ;Run.c: 96: if( gs_Switch.Show_Send_Receive )
   981                           
   982                           ;incstack = 0
   983  000E8E  5044               	movf	_gs_Switch+3,w,c
   984  000E90  B4D8               	btfsc	status,2,c
   985  000E92  D021               	goto	l3065
   986                           
   987                           ;Run.c: 97: {
   988                           ;Run.c: 98: TM1640_Show_integer( ga_RS485_SendBuff[g_RS485_Byte] + (g_RS485_Byte * 1000)
      +                           );
   989  000E94  C03F  F019         	movff	_g_RS485_Byte,___wmul@multiplier
   990  000E98  6A1A               	clrf	___wmul@multiplier+1,c
   991  000E9A  0E03               	movlw	3
   992  000E9C  6E1C               	movwf	___wmul@multiplicand+1,c
   993  000E9E  0EE8               	movlw	232
   994  000EA0  6E1B               	movwf	___wmul@multiplicand,c
   995  000EA2  EC56  F00B         	call	___wmul	;wreg free
   996  000EA6  503F               	movf	_g_RS485_Byte,w,c
   997  000EA8  0D01               	mullw	1
   998  000EAA  0EE4               	movlw	low _ga_RS485_SendBuff
   999  000EAC  24F3               	addwf	prodl,w,c
  1000  000EAE  6ED9               	movwf	fsr2l,c
  1001  000EB0  0E00               	movlw	high _ga_RS485_SendBuff
  1002  000EB2  20F4               	addwfc	prodh,w,c
  1003  000EB4  6EDA               	movwf	fsr2h,c
  1004  000EB6  50DF               	movf	indf2,w,c
  1005  000EB8  6E22               	movwf	??_ShowResult& (0+255),c
  1006  000EBA  5022               	movf	??_ShowResult,w,c
  1007  000EBC  2419               	addwf	?___wmul,w,c
  1008  000EBE  6E20               	movwf	TM1640_Show_integer@Numbers,c
  1009  000EC0  0E00               	movlw	0
  1010  000EC2  201A               	addwfc	?___wmul+1,w,c
  1011  000EC4  6E21               	movwf	TM1640_Show_integer@Numbers+1,c
  1012  000EC6  EC04  F006         	call	_TM1640_Show_integer	;wreg free
  1013                           
  1014                           ;Run.c: 99: LED_Control(1,1);
  1015  000ECA  0E01               	movlw	1
  1016  000ECC  6E19               	movwf	LED_Control@_switch,c
  1017  000ECE  0E01               	movlw	1
  1018  000ED0  EC17  F00A         	call	_LED_Control
  1019                           
  1020                           ;Run.c: 100: }
  1021  000ED4  D021               	goto	l3069
  1022  000ED6                     l3065:
  1023                           
  1024                           ;Run.c: 102: else
  1025                           ;Run.c: 103: {
  1026                           ;Run.c: 104: TM1640_Show_integer( ga_RS485_ReceiveBuff[g_RS485_Byte] + (g_RS485_Byte * 1
      +                          000) );
  1027  000ED6  C03F  F019         	movff	_g_RS485_Byte,___wmul@multiplier
  1028  000EDA  6A1A               	clrf	___wmul@multiplier+1,c
  1029  000EDC  0E03               	movlw	3
  1030  000EDE  6E1C               	movwf	___wmul@multiplicand+1,c
  1031  000EE0  0EE8               	movlw	232
  1032  000EE2  6E1B               	movwf	___wmul@multiplicand,c
  1033  000EE4  EC56  F00B         	call	___wmul	;wreg free
  1034  000EE8  503F               	movf	_g_RS485_Byte,w,c
  1035  000EEA  0D01               	mullw	1
  1036  000EEC  0EDA               	movlw	low _ga_RS485_ReceiveBuff
  1037  000EEE  24F3               	addwf	prodl,w,c
  1038  000EF0  6ED9               	movwf	fsr2l,c
  1039  000EF2  0E00               	movlw	high _ga_RS485_ReceiveBuff
  1040  000EF4  20F4               	addwfc	prodh,w,c
  1041  000EF6  6EDA               	movwf	fsr2h,c
  1042  000EF8  50DF               	movf	indf2,w,c
  1043  000EFA  6E22               	movwf	??_ShowResult& (0+255),c
  1044  000EFC  5022               	movf	??_ShowResult,w,c
  1045  000EFE  2419               	addwf	?___wmul,w,c
  1046  000F00  6E20               	movwf	TM1640_Show_integer@Numbers,c
  1047  000F02  0E00               	movlw	0
  1048  000F04  201A               	addwfc	?___wmul+1,w,c
  1049  000F06  6E21               	movwf	TM1640_Show_integer@Numbers+1,c
  1050  000F08  EC04  F006         	call	_TM1640_Show_integer	;wreg free
  1051                           
  1052                           ;Run.c: 105: LED_Control(1,0);
  1053  000F0C  0E00               	movlw	0
  1054  000F0E  6E19               	movwf	LED_Control@_switch,c
  1055  000F10  0E01               	movlw	1
  1056  000F12  EC17  F00A         	call	_LED_Control
  1057  000F16  D000               	goto	l3069
  1058  000F18                     l3069:
  1059                           
  1060                           ;Run.c: 106: }
  1061                           ;Run.c: 108: TM1640_Writer_Dates(4, LED_BUS);
  1062  000F18  C03E  F01E         	movff	_LED_BUS,TM1640_Writer_Dates@Date
  1063  000F1C  0E04               	movlw	4
  1064  000F1E  ECC6  F00B         	call	_TM1640_Writer_Dates
  1065  000F22  0012               	return		;funcret
  1066  000F24                     __end_of_ShowResult:
  1067                           	opt stack 0
  1068                           tblptru	equ	0xFF8
  1069                           tblptrh	equ	0xFF7
  1070                           tblptrl	equ	0xFF6
  1071                           tablat	equ	0xFF5
  1072                           prodh	equ	0xFF4
  1073                           prodl	equ	0xFF3
  1074                           intcon	equ	0xFF2
  1075                           postinc0	equ	0xFEE
  1076                           wreg	equ	0xFE8
  1077                           postdec1	equ	0xFE5
  1078                           fsr1l	equ	0xFE1
  1079                           indf2	equ	0xFDF
  1080                           fsr2h	equ	0xFDA
  1081                           fsr2l	equ	0xFD9
  1082                           status	equ	0xFD8
  1083                           
  1084 ;; *************** function ___wmul *****************
  1085 ;; Defined at:
  1086 ;;		line 15 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;  multiplier      2   24[COMRAM] unsigned int 
  1089 ;;  multiplicand    2   26[COMRAM] unsigned int 
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;  product         2   28[COMRAM] unsigned int 
  1092 ;; Return value:  Size  Location     Type
  1093 ;;                  2   24[COMRAM] unsigned int 
  1094 ;; Registers used:
  1095 ;;		wreg, status,2, status,0, prodl, prodh
  1096 ;; Tracked objects:
  1097 ;;		On entry : 0/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1101 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1102 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1104 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1105 ;;Total ram usage:        6 bytes
  1106 ;; Hardware stack levels used:    1
  1107 ;; Hardware stack levels required when called:    3
  1108 ;; This function calls:
  1109 ;;		Nothing
  1110 ;; This function is called by:
  1111 ;;		_ShowResult
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115                           	psect	text4
  1116  0016AC                     __ptext4:
  1117                           	opt stack 0
  1118  0016AC                     ___wmul:
  1119                           	opt stack 26
  1120                           
  1121                           ;incstack = 0
  1122  0016AC  5019               	movf	___wmul@multiplier,w,c
  1123  0016AE  021B               	mulwf	___wmul@multiplicand,c
  1124  0016B0  CFF3 F01D          	movff	prodl,___wmul@product
  1125  0016B4  CFF4 F01E          	movff	prodh,___wmul@product+1
  1126  0016B8  5019               	movf	___wmul@multiplier,w,c
  1127  0016BA  021C               	mulwf	___wmul@multiplicand+1,c
  1128  0016BC  50F3               	movf	prodl,w,c
  1129  0016BE  261E               	addwf	___wmul@product+1,f,c
  1130  0016C0  501A               	movf	___wmul@multiplier+1,w,c
  1131  0016C2  021B               	mulwf	___wmul@multiplicand,c
  1132  0016C4  50F3               	movf	prodl,w,c
  1133  0016C6  261E               	addwf	___wmul@product+1,f,c
  1134  0016C8  C01D  F019         	movff	___wmul@product,?___wmul
  1135  0016CC  C01E  F01A         	movff	___wmul@product+1,?___wmul+1
  1136  0016D0  0012               	return	
  1137  0016D2  0012               	return		;funcret
  1138  0016D4                     __end_of___wmul:
  1139                           	opt stack 0
  1140                           tblptru	equ	0xFF8
  1141                           tblptrh	equ	0xFF7
  1142                           tblptrl	equ	0xFF6
  1143                           tablat	equ	0xFF5
  1144                           prodh	equ	0xFF4
  1145                           prodl	equ	0xFF3
  1146                           intcon	equ	0xFF2
  1147                           postinc0	equ	0xFEE
  1148                           wreg	equ	0xFE8
  1149                           postdec1	equ	0xFE5
  1150                           fsr1l	equ	0xFE1
  1151                           indf2	equ	0xFDF
  1152                           fsr2h	equ	0xFDA
  1153                           fsr2l	equ	0xFD9
  1154                           status	equ	0xFD8
  1155                           
  1156 ;; *************** function _TM1640_Show_integer *****************
  1157 ;; Defined at:
  1158 ;;		line 206 in file "_01_USER/TM1640.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;  Numbers         2   31[COMRAM] unsigned int 
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;		None
  1163 ;; Return value:  Size  Location     Type
  1164 ;;		None               void
  1165 ;; Registers used:
  1166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1172 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1175 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1176 ;;Total ram usage:        2 bytes
  1177 ;; Hardware stack levels used:    1
  1178 ;; Hardware stack levels required when called:    6
  1179 ;; This function calls:
  1180 ;;		_TM1640_Writer_Dates
  1181 ;;		___lwdiv
  1182 ;;		___lwmod
  1183 ;; This function is called by:
  1184 ;;		_ShowResult
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188                           	psect	text5
  1189  000C08                     __ptext5:
  1190                           	opt stack 0
  1191  000C08                     _TM1640_Show_integer:
  1192                           	opt stack 23
  1193                           
  1194                           ;TM1640.c: 209: TM1640_Writer_Dates(3,LED_Number[Numbers%10]); Numbers/=10;
  1195                           
  1196                           ;incstack = 0
  1197  000C08  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1198  000C0C  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1199  000C10  0E00               	movlw	0
  1200  000C12  6E1C               	movwf	___lwmod@divisor+1,c
  1201  000C14  0E0A               	movlw	10
  1202  000C16  6E1B               	movwf	___lwmod@divisor,c
  1203  000C18  ECCC  F009         	call	___lwmod	;wreg free
  1204  000C1C  0EEE               	movlw	low _LED_Number
  1205  000C1E  2419               	addwf	?___lwmod,w,c
  1206  000C20  6ED9               	movwf	fsr2l,c
  1207  000C22  0E00               	movlw	high _LED_Number
  1208  000C24  201A               	addwfc	?___lwmod+1,w,c
  1209  000C26  6EDA               	movwf	fsr2h,c
  1210  000C28  50DF               	movf	indf2,w,c
  1211  000C2A  6E1E               	movwf	TM1640_Writer_Dates@Date,c
  1212  000C2C  0E03               	movlw	3
  1213  000C2E  ECC6  F00B         	call	_TM1640_Writer_Dates
  1214  000C32  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1215  000C36  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1216  000C3A  0E00               	movlw	0
  1217  000C3C  6E1C               	movwf	___lwdiv@divisor+1,c
  1218  000C3E  0E0A               	movlw	10
  1219  000C40  6E1B               	movwf	___lwdiv@divisor,c
  1220  000C42  EC22  F009         	call	___lwdiv	;wreg free
  1221  000C46  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1222  000C4A  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1223                           
  1224                           ;TM1640.c: 210: TM1640_Writer_Dates(2,LED_Number[Numbers%10]); Numbers/=10;
  1225  000C4E  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1226  000C52  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1227  000C56  0E00               	movlw	0
  1228  000C58  6E1C               	movwf	___lwmod@divisor+1,c
  1229  000C5A  0E0A               	movlw	10
  1230  000C5C  6E1B               	movwf	___lwmod@divisor,c
  1231  000C5E  ECCC  F009         	call	___lwmod	;wreg free
  1232  000C62  0EEE               	movlw	low _LED_Number
  1233  000C64  2419               	addwf	?___lwmod,w,c
  1234  000C66  6ED9               	movwf	fsr2l,c
  1235  000C68  0E00               	movlw	high _LED_Number
  1236  000C6A  201A               	addwfc	?___lwmod+1,w,c
  1237  000C6C  6EDA               	movwf	fsr2h,c
  1238  000C6E  50DF               	movf	indf2,w,c
  1239  000C70  6E1E               	movwf	TM1640_Writer_Dates@Date,c
  1240  000C72  0E02               	movlw	2
  1241  000C74  ECC6  F00B         	call	_TM1640_Writer_Dates
  1242  000C78  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1243  000C7C  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1244  000C80  0E00               	movlw	0
  1245  000C82  6E1C               	movwf	___lwdiv@divisor+1,c
  1246  000C84  0E0A               	movlw	10
  1247  000C86  6E1B               	movwf	___lwdiv@divisor,c
  1248  000C88  EC22  F009         	call	___lwdiv	;wreg free
  1249  000C8C  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1250  000C90  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1251                           
  1252                           ;TM1640.c: 211: TM1640_Writer_Dates(1,LED_Number[Numbers%10]); Numbers/=10;
  1253  000C94  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1254  000C98  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1255  000C9C  0E00               	movlw	0
  1256  000C9E  6E1C               	movwf	___lwmod@divisor+1,c
  1257  000CA0  0E0A               	movlw	10
  1258  000CA2  6E1B               	movwf	___lwmod@divisor,c
  1259  000CA4  ECCC  F009         	call	___lwmod	;wreg free
  1260  000CA8  0EEE               	movlw	low _LED_Number
  1261  000CAA  2419               	addwf	?___lwmod,w,c
  1262  000CAC  6ED9               	movwf	fsr2l,c
  1263  000CAE  0E00               	movlw	high _LED_Number
  1264  000CB0  201A               	addwfc	?___lwmod+1,w,c
  1265  000CB2  6EDA               	movwf	fsr2h,c
  1266  000CB4  50DF               	movf	indf2,w,c
  1267  000CB6  6E1E               	movwf	TM1640_Writer_Dates@Date,c
  1268  000CB8  0E01               	movlw	1
  1269  000CBA  ECC6  F00B         	call	_TM1640_Writer_Dates
  1270  000CBE  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1271  000CC2  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1272  000CC6  0E00               	movlw	0
  1273  000CC8  6E1C               	movwf	___lwdiv@divisor+1,c
  1274  000CCA  0E0A               	movlw	10
  1275  000CCC  6E1B               	movwf	___lwdiv@divisor,c
  1276  000CCE  EC22  F009         	call	___lwdiv	;wreg free
  1277  000CD2  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1278  000CD6  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1279                           
  1280                           ;TM1640.c: 212: TM1640_Writer_Dates(0,LED_Number[Numbers%10]);
  1281  000CDA  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1282  000CDE  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1283  000CE2  0E00               	movlw	0
  1284  000CE4  6E1C               	movwf	___lwmod@divisor+1,c
  1285  000CE6  0E0A               	movlw	10
  1286  000CE8  6E1B               	movwf	___lwmod@divisor,c
  1287  000CEA  ECCC  F009         	call	___lwmod	;wreg free
  1288  000CEE  0EEE               	movlw	low _LED_Number
  1289  000CF0  2419               	addwf	?___lwmod,w,c
  1290  000CF2  6ED9               	movwf	fsr2l,c
  1291  000CF4  0E00               	movlw	high _LED_Number
  1292  000CF6  201A               	addwfc	?___lwmod+1,w,c
  1293  000CF8  6EDA               	movwf	fsr2h,c
  1294  000CFA  50DF               	movf	indf2,w,c
  1295  000CFC  6E1E               	movwf	TM1640_Writer_Dates@Date,c
  1296  000CFE  0E00               	movlw	0
  1297  000D00  ECC6  F00B         	call	_TM1640_Writer_Dates
  1298  000D04  0012               	return		;funcret
  1299  000D06                     __end_of_TM1640_Show_integer:
  1300                           	opt stack 0
  1301                           tblptru	equ	0xFF8
  1302                           tblptrh	equ	0xFF7
  1303                           tblptrl	equ	0xFF6
  1304                           tablat	equ	0xFF5
  1305                           prodh	equ	0xFF4
  1306                           prodl	equ	0xFF3
  1307                           intcon	equ	0xFF2
  1308                           postinc0	equ	0xFEE
  1309                           wreg	equ	0xFE8
  1310                           postdec1	equ	0xFE5
  1311                           fsr1l	equ	0xFE1
  1312                           indf2	equ	0xFDF
  1313                           fsr2h	equ	0xFDA
  1314                           fsr2l	equ	0xFD9
  1315                           status	equ	0xFD8
  1316                           
  1317 ;; *************** function ___lwmod *****************
  1318 ;; Defined at:
  1319 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;  dividend        2   24[COMRAM] unsigned int 
  1322 ;;  divisor         2   26[COMRAM] unsigned int 
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;  counter         1   28[COMRAM] unsigned char 
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  2   24[COMRAM] unsigned int 
  1327 ;; Registers used:
  1328 ;;		wreg, status,2, status,0
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1334 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1335 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1337 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1338 ;;Total ram usage:        5 bytes
  1339 ;; Hardware stack levels used:    1
  1340 ;; Hardware stack levels required when called:    3
  1341 ;; This function calls:
  1342 ;;		Nothing
  1343 ;; This function is called by:
  1344 ;;		_TM1640_Show_integer
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           	psect	text6
  1349  001398                     __ptext6:
  1350                           	opt stack 0
  1351  001398                     ___lwmod:
  1352                           	opt stack 25
  1353                           
  1354                           ;incstack = 0
  1355  001398  501B               	movf	___lwmod@divisor,w,c
  1356  00139A  101C               	iorwf	___lwmod@divisor+1,w,c
  1357  00139C  B4D8               	btfsc	status,2,c
  1358  00139E  D01D               	goto	l1182
  1359  0013A0  0E01               	movlw	1
  1360  0013A2  6E1D               	movwf	___lwmod@counter,c
  1361  0013A4  D005               	goto	l2659
  1362  0013A6                     l2657:
  1363  0013A6  90D8               	bcf	status,0,c
  1364  0013A8  361B               	rlcf	___lwmod@divisor,f,c
  1365  0013AA  361C               	rlcf	___lwmod@divisor+1,f,c
  1366  0013AC  2A1D               	incf	___lwmod@counter,f,c
  1367  0013AE  D000               	goto	l2659
  1368  0013B0                     l2659:
  1369  0013B0  BE1C               	btfsc	___lwmod@divisor+1,7,c
  1370  0013B2  D002               	goto	l2661
  1371  0013B4  D7F8               	goto	l2657
  1372  0013B6  D000               	goto	l2661
  1373  0013B8                     l2661:
  1374  0013B8  501B               	movf	___lwmod@divisor,w,c
  1375  0013BA  5C19               	subwf	___lwmod@dividend,w,c
  1376  0013BC  501C               	movf	___lwmod@divisor+1,w,c
  1377  0013BE  581A               	subwfb	___lwmod@dividend+1,w,c
  1378  0013C0  A0D8               	btfss	status,0,c
  1379  0013C2  D005               	goto	l2665
  1380  0013C4  501B               	movf	___lwmod@divisor,w,c
  1381  0013C6  5E19               	subwf	___lwmod@dividend,f,c
  1382  0013C8  501C               	movf	___lwmod@divisor+1,w,c
  1383  0013CA  5A1A               	subwfb	___lwmod@dividend+1,f,c
  1384  0013CC  D000               	goto	l2665
  1385  0013CE                     l2665:
  1386  0013CE  90D8               	bcf	status,0,c
  1387  0013D0  321C               	rrcf	___lwmod@divisor+1,f,c
  1388  0013D2  321B               	rrcf	___lwmod@divisor,f,c
  1389  0013D4  2E1D               	decfsz	___lwmod@counter,f,c
  1390  0013D6  D7F0               	goto	l2661
  1391  0013D8  D000               	goto	l1182
  1392  0013DA                     l1182:
  1393  0013DA  C019  F019         	movff	___lwmod@dividend,?___lwmod
  1394  0013DE  C01A  F01A         	movff	___lwmod@dividend+1,?___lwmod+1
  1395  0013E2  0012               	return		;funcret
  1396  0013E4                     __end_of___lwmod:
  1397                           	opt stack 0
  1398                           tblptru	equ	0xFF8
  1399                           tblptrh	equ	0xFF7
  1400                           tblptrl	equ	0xFF6
  1401                           tablat	equ	0xFF5
  1402                           prodh	equ	0xFF4
  1403                           prodl	equ	0xFF3
  1404                           intcon	equ	0xFF2
  1405                           postinc0	equ	0xFEE
  1406                           wreg	equ	0xFE8
  1407                           postdec1	equ	0xFE5
  1408                           fsr1l	equ	0xFE1
  1409                           indf2	equ	0xFDF
  1410                           fsr2h	equ	0xFDA
  1411                           fsr2l	equ	0xFD9
  1412                           status	equ	0xFD8
  1413                           
  1414 ;; *************** function ___lwdiv *****************
  1415 ;; Defined at:
  1416 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;  dividend        2   24[COMRAM] unsigned int 
  1419 ;;  divisor         2   26[COMRAM] unsigned int 
  1420 ;; Auto vars:     Size  Location     Type
  1421 ;;  quotient        2   28[COMRAM] unsigned int 
  1422 ;;  counter         1   30[COMRAM] unsigned char 
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  2   24[COMRAM] unsigned int 
  1425 ;; Registers used:
  1426 ;;		wreg, status,2, status,0
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1432 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1433 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1435 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1436 ;;Total ram usage:        7 bytes
  1437 ;; Hardware stack levels used:    1
  1438 ;; Hardware stack levels required when called:    3
  1439 ;; This function calls:
  1440 ;;		Nothing
  1441 ;; This function is called by:
  1442 ;;		_TM1640_Show_integer
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           	psect	text7
  1447  001244                     __ptext7:
  1448                           	opt stack 0
  1449  001244                     ___lwdiv:
  1450                           	opt stack 25
  1451                           
  1452                           ;incstack = 0
  1453  001244  0E00               	movlw	0
  1454  001246  6E1E               	movwf	___lwdiv@quotient+1,c
  1455  001248  0E00               	movlw	0
  1456  00124A  6E1D               	movwf	___lwdiv@quotient,c
  1457  00124C  501B               	movf	___lwdiv@divisor,w,c
  1458  00124E  101C               	iorwf	___lwdiv@divisor+1,w,c
  1459  001250  B4D8               	btfsc	status,2,c
  1460  001252  D021               	goto	l1172
  1461  001254  0E01               	movlw	1
  1462  001256  6E1F               	movwf	___lwdiv@counter,c
  1463  001258  D005               	goto	l2639
  1464  00125A                     l2637:
  1465  00125A  90D8               	bcf	status,0,c
  1466  00125C  361B               	rlcf	___lwdiv@divisor,f,c
  1467  00125E  361C               	rlcf	___lwdiv@divisor+1,f,c
  1468  001260  2A1F               	incf	___lwdiv@counter,f,c
  1469  001262  D000               	goto	l2639
  1470  001264                     l2639:
  1471  001264  BE1C               	btfsc	___lwdiv@divisor+1,7,c
  1472  001266  D002               	goto	l2641
  1473  001268  D7F8               	goto	l2637
  1474  00126A  D000               	goto	l2641
  1475  00126C                     l2641:
  1476  00126C  90D8               	bcf	status,0,c
  1477  00126E  361D               	rlcf	___lwdiv@quotient,f,c
  1478  001270  361E               	rlcf	___lwdiv@quotient+1,f,c
  1479  001272  501B               	movf	___lwdiv@divisor,w,c
  1480  001274  5C19               	subwf	___lwdiv@dividend,w,c
  1481  001276  501C               	movf	___lwdiv@divisor+1,w,c
  1482  001278  581A               	subwfb	___lwdiv@dividend+1,w,c
  1483  00127A  A0D8               	btfss	status,0,c
  1484  00127C  D006               	goto	l2649
  1485  00127E  501B               	movf	___lwdiv@divisor,w,c
  1486  001280  5E19               	subwf	___lwdiv@dividend,f,c
  1487  001282  501C               	movf	___lwdiv@divisor+1,w,c
  1488  001284  5A1A               	subwfb	___lwdiv@dividend+1,f,c
  1489  001286  801D               	bsf	___lwdiv@quotient,0,c
  1490  001288  D000               	goto	l2649
  1491  00128A                     l2649:
  1492  00128A  90D8               	bcf	status,0,c
  1493  00128C  321C               	rrcf	___lwdiv@divisor+1,f,c
  1494  00128E  321B               	rrcf	___lwdiv@divisor,f,c
  1495  001290  2E1F               	decfsz	___lwdiv@counter,f,c
  1496  001292  D7EC               	goto	l2641
  1497  001294  D000               	goto	l1172
  1498  001296                     l1172:
  1499  001296  C01D  F019         	movff	___lwdiv@quotient,?___lwdiv
  1500  00129A  C01E  F01A         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1501  00129E  0012               	return		;funcret
  1502  0012A0                     __end_of___lwdiv:
  1503                           	opt stack 0
  1504                           tblptru	equ	0xFF8
  1505                           tblptrh	equ	0xFF7
  1506                           tblptrl	equ	0xFF6
  1507                           tablat	equ	0xFF5
  1508                           prodh	equ	0xFF4
  1509                           prodl	equ	0xFF3
  1510                           intcon	equ	0xFF2
  1511                           postinc0	equ	0xFEE
  1512                           wreg	equ	0xFE8
  1513                           postdec1	equ	0xFE5
  1514                           fsr1l	equ	0xFE1
  1515                           indf2	equ	0xFDF
  1516                           fsr2h	equ	0xFDA
  1517                           fsr2l	equ	0xFD9
  1518                           status	equ	0xFD8
  1519                           
  1520 ;; *************** function _TM1640_Writer_Dates *****************
  1521 ;; Defined at:
  1522 ;;		line 99 in file "_01_USER/TM1640.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;  Addr            1    wreg     unsigned char 
  1525 ;;  Date            1   29[COMRAM] unsigned char 
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;  Addr            1   30[COMRAM] unsigned char 
  1528 ;; Return value:  Size  Location     Type
  1529 ;;		None               void
  1530 ;; Registers used:
  1531 ;;		wreg, status,2, status,0, cstack
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1537 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1538 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1540 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1541 ;;Total ram usage:        2 bytes
  1542 ;; Hardware stack levels used:    1
  1543 ;; Hardware stack levels required when called:    5
  1544 ;; This function calls:
  1545 ;;		_TM1640_Start
  1546 ;;		_TM1640_Stop
  1547 ;;		_TM1640_Writer_Byte
  1548 ;; This function is called by:
  1549 ;;		_TM1640_Show_integer
  1550 ;;		_ShowResult
  1551 ;;		_TM1640_Show_Numbers
  1552 ;;		_TM1640_Show_Decimal
  1553 ;; This function uses a non-reentrant model
  1554 ;;
  1555                           
  1556                           	psect	text8
  1557  00178C                     __ptext8:
  1558                           	opt stack 0
  1559  00178C                     _TM1640_Writer_Dates:
  1560                           	opt stack 24
  1561                           
  1562                           ;incstack = 0
  1563                           ;TM1640_Writer_Dates@Addr stored from wreg
  1564  00178C  6E1F               	movwf	TM1640_Writer_Dates@Addr,c
  1565                           
  1566                           ;TM1640.c: 101: if((Addr >= 0) && (Addr <= 15))
  1567  00178E  0E10               	movlw	16
  1568  001790  601F               	cpfslt	TM1640_Writer_Dates@Addr,c
  1569  001792  0012               	return	
  1570                           
  1571                           ;TM1640.c: 102: {
  1572                           ;TM1640.c: 103: TM1640_Start();
  1573  001794  ECB4  F00B         	call	_TM1640_Start	;wreg free
  1574                           
  1575                           ;TM1640.c: 104: TM1640_Writer_Byte(0xC0 + Addr);
  1576  001798  501F               	movf	TM1640_Writer_Dates@Addr,w,c
  1577  00179A  0FC0               	addlw	192
  1578  00179C  EC9C  F00A         	call	_TM1640_Writer_Byte
  1579                           
  1580                           ;TM1640.c: 105: TM1640_Writer_Byte(Date);
  1581  0017A0  501E               	movf	TM1640_Writer_Dates@Date,w,c
  1582  0017A2  EC9C  F00A         	call	_TM1640_Writer_Byte
  1583                           
  1584                           ;TM1640.c: 106: TM1640_Stop();
  1585  0017A6  ECA2  F00B         	call	_TM1640_Stop	;wreg free
  1586  0017AA  0012               	return	
  1587  0017AC  0012               	return		;funcret
  1588  0017AE                     __end_of_TM1640_Writer_Dates:
  1589                           	opt stack 0
  1590                           tblptru	equ	0xFF8
  1591                           tblptrh	equ	0xFF7
  1592                           tblptrl	equ	0xFF6
  1593                           tablat	equ	0xFF5
  1594                           prodh	equ	0xFF4
  1595                           prodl	equ	0xFF3
  1596                           intcon	equ	0xFF2
  1597                           postinc0	equ	0xFEE
  1598                           wreg	equ	0xFE8
  1599                           postdec1	equ	0xFE5
  1600                           fsr1l	equ	0xFE1
  1601                           indf2	equ	0xFDF
  1602                           fsr2h	equ	0xFDA
  1603                           fsr2l	equ	0xFD9
  1604                           status	equ	0xFD8
  1605                           
  1606 ;; *************** function _LED_Control *****************
  1607 ;; Defined at:
  1608 ;;		line 58 in file "_01_USER/GPIO.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;  _LED_num        1    wreg     unsigned char 
  1611 ;;  _switch         1   24[COMRAM] unsigned char 
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;  _LED_num        1   25[COMRAM] unsigned char 
  1614 ;; Return value:  Size  Location     Type
  1615 ;;		None               void
  1616 ;; Registers used:
  1617 ;;		wreg, status,2, status,0
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1623 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1624 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1626 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1627 ;;Total ram usage:        2 bytes
  1628 ;; Hardware stack levels used:    1
  1629 ;; Hardware stack levels required when called:    3
  1630 ;; This function calls:
  1631 ;;		Nothing
  1632 ;; This function is called by:
  1633 ;;		_ShowResult
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           	psect	text9
  1638  00142E                     __ptext9:
  1639                           	opt stack 0
  1640  00142E                     _LED_Control:
  1641                           	opt stack 26
  1642                           
  1643                           ;incstack = 0
  1644                           ;LED_Control@_LED_num stored from wreg
  1645  00142E  6E1A               	movwf	LED_Control@_LED_num,c
  1646                           
  1647                           ;GPIO.c: 62: if(_LED_num == 1)
  1648  001430  041A               	decf	LED_Control@_LED_num,w,c
  1649  001432  A4D8               	btfss	status,2,c
  1650  001434  D007               	goto	l2905
  1651                           
  1652                           ;GPIO.c: 63: if(_switch) LED_BUS |= 0x01;
  1653  001436  5019               	movf	LED_Control@_switch,w,c
  1654  001438  B4D8               	btfsc	status,2,c
  1655  00143A  D002               	goto	l2903
  1656  00143C  803E               	bsf	_LED_BUS,0,c
  1657  00143E  D002               	goto	l2905
  1658  001440                     l2903:
  1659                           
  1660                           ;GPIO.c: 64: else LED_BUS &= 0xFE;
  1661  001440  903E               	bcf	_LED_BUS,0,c
  1662  001442  D000               	goto	l2905
  1663  001444                     l2905:
  1664                           
  1665                           ;GPIO.c: 66: if(_LED_num == 2)
  1666  001444  0E02               	movlw	2
  1667  001446  181A               	xorwf	LED_Control@_LED_num,w,c
  1668  001448  A4D8               	btfss	status,2,c
  1669  00144A  D007               	goto	l2913
  1670                           
  1671                           ;GPIO.c: 67: if(_switch) LED_BUS |= 0x02;
  1672  00144C  5019               	movf	LED_Control@_switch,w,c
  1673  00144E  B4D8               	btfsc	status,2,c
  1674  001450  D002               	goto	l2911
  1675  001452  823E               	bsf	_LED_BUS,1,c
  1676  001454  D002               	goto	l2913
  1677  001456                     l2911:
  1678                           
  1679                           ;GPIO.c: 68: else LED_BUS &= 0xFD;
  1680  001456  923E               	bcf	_LED_BUS,1,c
  1681  001458  D000               	goto	l2913
  1682  00145A                     l2913:
  1683                           
  1684                           ;GPIO.c: 70: if(_LED_num == 3)
  1685  00145A  0E03               	movlw	3
  1686  00145C  181A               	xorwf	LED_Control@_LED_num,w,c
  1687  00145E  A4D8               	btfss	status,2,c
  1688  001460  0012               	return	
  1689                           
  1690                           ;GPIO.c: 71: if(_switch) LED_BUS |= 0x04;
  1691  001462  5019               	movf	LED_Control@_switch,w,c
  1692  001464  B4D8               	btfsc	status,2,c
  1693  001466  D002               	goto	l2919
  1694  001468  843E               	bsf	_LED_BUS,2,c
  1695  00146A  0012               	return	
  1696  00146C                     l2919:
  1697                           
  1698                           ;GPIO.c: 72: else LED_BUS &= 0xFB;
  1699  00146C  943E               	bcf	_LED_BUS,2,c
  1700  00146E  0012               	return	
  1701  001470  0012               	return		;funcret
  1702  001472                     __end_of_LED_Control:
  1703                           	opt stack 0
  1704                           tblptru	equ	0xFF8
  1705                           tblptrh	equ	0xFF7
  1706                           tblptrl	equ	0xFF6
  1707                           tablat	equ	0xFF5
  1708                           prodh	equ	0xFF4
  1709                           prodl	equ	0xFF3
  1710                           intcon	equ	0xFF2
  1711                           postinc0	equ	0xFEE
  1712                           wreg	equ	0xFE8
  1713                           postdec1	equ	0xFE5
  1714                           fsr1l	equ	0xFE1
  1715                           indf2	equ	0xFDF
  1716                           fsr2h	equ	0xFDA
  1717                           fsr2l	equ	0xFD9
  1718                           status	equ	0xFD8
  1719                           
  1720 ;; *************** function _SCR_Init *****************
  1721 ;; Defined at:
  1722 ;;		line 38 in file "_01_USER/SCR.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;		None
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;		None
  1727 ;; Return value:  Size  Location     Type
  1728 ;;		None               void
  1729 ;; Registers used:
  1730 ;;		None
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1740 ;;Total ram usage:        0 bytes
  1741 ;; Hardware stack levels used:    1
  1742 ;; Hardware stack levels required when called:    3
  1743 ;; This function calls:
  1744 ;;		Nothing
  1745 ;; This function is called by:
  1746 ;;		_main
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           	psect	text10
  1751  001882                     __ptext10:
  1752                           	opt stack 0
  1753  001882                     _SCR_Init:
  1754                           	opt stack 27
  1755                           
  1756                           ;SCR.c: 41: TRISB1 = 0;
  1757                           
  1758                           ;incstack = 0
  1759  001882  9293               	bcf	3987,1,c	;volatile
  1760                           
  1761                           ;SCR.c: 42: TRISB0 = 0;
  1762  001884  9093               	bcf	3987,0,c	;volatile
  1763                           
  1764                           ;SCR.c: 45: TRISB2 = 1;
  1765  001886  8493               	bsf	3987,2,c	;volatile
  1766                           
  1767                           ;SCR.c: 48: RB1 = 0;
  1768  001888  9281               	bcf	3969,1,c	;volatile
  1769                           
  1770                           ;SCR.c: 49: RB0 = 0;
  1771  00188A  9081               	bcf	3969,0,c	;volatile
  1772  00188C  0012               	return		;funcret
  1773  00188E                     __end_of_SCR_Init:
  1774                           	opt stack 0
  1775                           tblptru	equ	0xFF8
  1776                           tblptrh	equ	0xFF7
  1777                           tblptrl	equ	0xFF6
  1778                           tablat	equ	0xFF5
  1779                           prodh	equ	0xFF4
  1780                           prodl	equ	0xFF3
  1781                           intcon	equ	0xFF2
  1782                           postinc0	equ	0xFEE
  1783                           wreg	equ	0xFE8
  1784                           postdec1	equ	0xFE5
  1785                           fsr1l	equ	0xFE1
  1786                           indf2	equ	0xFDF
  1787                           fsr2h	equ	0xFDA
  1788                           fsr2l	equ	0xFD9
  1789                           status	equ	0xFD8
  1790                           
  1791 ;; *************** function _Run *****************
  1792 ;; Defined at:
  1793 ;;		line 68 in file "_01_USER/Run.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;		None
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;		None
  1798 ;; Return value:  Size  Location     Type
  1799 ;;		None               void
  1800 ;; Registers used:
  1801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1809 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1810 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1811 ;;Total ram usage:        4 bytes
  1812 ;; Hardware stack levels used:    1
  1813 ;; Hardware stack levels required when called:    6
  1814 ;; This function calls:
  1815 ;;		_GetADC6
  1816 ;;		_RS485_SendDate
  1817 ;;		_Relay_Control
  1818 ;; This function is called by:
  1819 ;;		_main
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823                           	psect	text11
  1824  001106                     __ptext11:
  1825                           	opt stack 0
  1826  001106                     _Run:
  1827                           	opt stack 24
  1828                           
  1829                           ;Run.c: 71: if( gs_Switch.ADC6 ) GetADC6();
  1830                           
  1831                           ;incstack = 0
  1832  001106  5042               	movf	_gs_Switch+1,w,c
  1833  001108  B4D8               	btfsc	status,2,c
  1834  00110A  D003               	goto	l3657
  1835  00110C  ECBA  F008         	call	_GetADC6	;wreg free
  1836  001110  D000               	goto	l3657
  1837  001112                     l3657:
  1838                           
  1839                           ;Run.c: 74: if ( gs_Switch.Usart_OneDate )
  1840  001112  5043               	movf	_gs_Switch+2,w,c
  1841  001114  B4D8               	btfsc	status,2,c
  1842  001116  D00E               	goto	l3663
  1843                           
  1844                           ;Run.c: 75: {
  1845                           ;Run.c: 76: gs_Switch.Usart_OneDate = 0;
  1846  001118  0E00               	movlw	0
  1847  00111A  6E43               	movwf	_gs_Switch+2,c
  1848                           
  1849                           ;Run.c: 77: RS485_SendDate(ga_RS485_SendBuff,10);
  1850  00111C  0EE4               	movlw	low _ga_RS485_SendBuff
  1851  00111E  0101               	movlb	1	; () banked
  1852  001120  6F00               	movwf	RS485_SendDate@date_dress& (0+255),b
  1853  001122  0E00               	movlw	high _ga_RS485_SendBuff
  1854  001124  0101               	movlb	1	; () banked
  1855  001126  6F01               	movwf	(RS485_SendDate@date_dress+1)& (0+255),b
  1856  001128  0E0A               	movlw	10
  1857  00112A  0101               	movlb	1	; () banked
  1858  00112C  6F02               	movwf	RS485_SendDate@date_lenth& (0+255),b
  1859  00112E  ECE6  F006         	call	_RS485_SendDate	;wreg free
  1860  001132  D000               	goto	l3663
  1861  001134                     l3663:
  1862                           
  1863                           ;Run.c: 78: }
  1864                           ;Run.c: 80: Relay_Control(g_RS485_Byte,gs_Switch.Relay[g_RS485_Byte - 1]);
  1865  001134  0EFF               	movlw	255
  1866  001136  0101               	movlb	1	; () banked
  1867  001138  6F0F               	movwf	??_Run& (0+255),b
  1868  00113A  0EFF               	movlw	255
  1869  00113C  0101               	movlb	1	; () banked
  1870  00113E  6F10               	movwf	(??_Run+1)& (0+255),b
  1871  001140  503F               	movf	_g_RS485_Byte,w,c
  1872  001142  0101               	movlb	1	; () banked
  1873  001144  6F11               	movwf	(??_Run+2)& (0+255),b
  1874  001146  6B12               	clrf	(??_Run+3)& (0+255),b
  1875  001148  0101               	movlb	1	; () banked
  1876  00114A  510F               	movf	??_Run& (0+255),w,b
  1877  00114C  0101               	movlb	1	; () banked
  1878  00114E  2711               	addwf	(??_Run+2)& (0+255),f,b
  1879  001150  0101               	movlb	1	; () banked
  1880  001152  5110               	movf	(??_Run+1)& (0+255),w,b
  1881  001154  0101               	movlb	1	; () banked
  1882  001156  2312               	addwfc	(??_Run+3)& (0+255),f,b
  1883  001158  0E45               	movlw	low (_gs_Switch+4)
  1884  00115A  0101               	movlb	1	; () banked
  1885  00115C  2511               	addwf	(??_Run+2)& (0+255),w,b
  1886  00115E  6ED9               	movwf	fsr2l,c
  1887  001160  0E00               	movlw	high (_gs_Switch+4)
  1888  001162  0101               	movlb	1	; () banked
  1889  001164  2112               	addwfc	(??_Run+3)& (0+255),w,b
  1890  001166  6EDA               	movwf	fsr2h,c
  1891  001168  50DF               	movf	indf2,w,c
  1892  00116A  6E1E               	movwf	Relay_Control@_switch,c
  1893  00116C  503F               	movf	_g_RS485_Byte,w,c
  1894  00116E  ECD8  F007         	call	_Relay_Control
  1895  001172  0012               	return		;funcret
  1896  001174                     __end_of_Run:
  1897                           	opt stack 0
  1898                           tblptru	equ	0xFF8
  1899                           tblptrh	equ	0xFF7
  1900                           tblptrl	equ	0xFF6
  1901                           tablat	equ	0xFF5
  1902                           prodh	equ	0xFF4
  1903                           prodl	equ	0xFF3
  1904                           intcon	equ	0xFF2
  1905                           postinc0	equ	0xFEE
  1906                           wreg	equ	0xFE8
  1907                           postdec1	equ	0xFE5
  1908                           fsr1l	equ	0xFE1
  1909                           indf2	equ	0xFDF
  1910                           fsr2h	equ	0xFDA
  1911                           fsr2l	equ	0xFD9
  1912                           status	equ	0xFD8
  1913                           
  1914 ;; *************** function _Relay_Control *****************
  1915 ;; Defined at:
  1916 ;;		line 60 in file "_01_USER/Relay.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;  relay_num       1    wreg     unsigned char 
  1919 ;;  _switch         1   29[COMRAM] unsigned char 
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;  relay_num       1   30[COMRAM] unsigned char 
  1922 ;; Return value:  Size  Location     Type
  1923 ;;		None               void
  1924 ;; Registers used:
  1925 ;;		wreg, status,2, status,0, cstack
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1931 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1932 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1934 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1935 ;;Total ram usage:        2 bytes
  1936 ;; Hardware stack levels used:    1
  1937 ;; Hardware stack levels required when called:    5
  1938 ;; This function calls:
  1939 ;;		_delay_ms
  1940 ;; This function is called by:
  1941 ;;		_Run
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           	psect	text12
  1946  000FB0                     __ptext12:
  1947                           	opt stack 0
  1948  000FB0                     _Relay_Control:
  1949                           	opt stack 24
  1950                           
  1951                           ;incstack = 0
  1952                           ;Relay_Control@relay_num stored from wreg
  1953  000FB0  6E1F               	movwf	Relay_Control@relay_num,c
  1954                           
  1955                           ;Relay.c: 63: if( relay_num == 1)
  1956  000FB2  041F               	decf	Relay_Control@relay_num,w,c
  1957  000FB4  A4D8               	btfss	status,2,c
  1958  000FB6  D009               	goto	l2955
  1959                           
  1960                           ;Relay.c: 64: {
  1961                           ;Relay.c: 65: if(_switch)
  1962  000FB8  501E               	movf	Relay_Control@_switch,w,c
  1963  000FBA  B4D8               	btfsc	status,2,c
  1964  000FBC  D003               	goto	l509
  1965                           
  1966                           ;Relay.c: 66: {
  1967                           ;Relay.c: 67: RD0 = 1,RD1 = 0;
  1968  000FBE  8083               	bsf	3971,0,c	;volatile
  1969  000FC0  9283               	bcf	3971,1,c	;volatile
  1970                           
  1971                           ;Relay.c: 68: }
  1972  000FC2  D003               	goto	l2955
  1973  000FC4                     l509:
  1974                           
  1975                           ;Relay.c: 69: else
  1976                           ;Relay.c: 70: {
  1977                           ;Relay.c: 71: RD0 = 0,RD1 = 1;
  1978  000FC4  9083               	bcf	3971,0,c	;volatile
  1979  000FC6  8283               	bsf	3971,1,c	;volatile
  1980  000FC8  D000               	goto	l2955
  1981  000FCA                     l2955:
  1982                           
  1983                           ;Relay.c: 72: }
  1984                           ;Relay.c: 73: }
  1985                           ;Relay.c: 76: if( relay_num == 2)
  1986  000FCA  0E02               	movlw	2
  1987  000FCC  181F               	xorwf	Relay_Control@relay_num,w,c
  1988  000FCE  A4D8               	btfss	status,2,c
  1989  000FD0  D009               	goto	l2961
  1990                           
  1991                           ;Relay.c: 77: {
  1992                           ;Relay.c: 78: if(_switch)
  1993  000FD2  501E               	movf	Relay_Control@_switch,w,c
  1994  000FD4  B4D8               	btfsc	status,2,c
  1995  000FD6  D003               	goto	l512
  1996                           
  1997                           ;Relay.c: 79: {
  1998                           ;Relay.c: 80: RD2 = 1,RD3 = 0;
  1999  000FD8  8483               	bsf	3971,2,c	;volatile
  2000  000FDA  9683               	bcf	3971,3,c	;volatile
  2001                           
  2002                           ;Relay.c: 81: }
  2003  000FDC  D003               	goto	l2961
  2004  000FDE                     l512:
  2005                           
  2006                           ;Relay.c: 82: else
  2007                           ;Relay.c: 83: {
  2008                           ;Relay.c: 84: RD2 = 0,RD3 = 1;
  2009  000FDE  9483               	bcf	3971,2,c	;volatile
  2010  000FE0  8683               	bsf	3971,3,c	;volatile
  2011  000FE2  D000               	goto	l2961
  2012  000FE4                     l2961:
  2013                           
  2014                           ;Relay.c: 85: }
  2015                           ;Relay.c: 86: }
  2016                           ;Relay.c: 89: if( relay_num == 3)
  2017  000FE4  0E03               	movlw	3
  2018  000FE6  181F               	xorwf	Relay_Control@relay_num,w,c
  2019  000FE8  A4D8               	btfss	status,2,c
  2020  000FEA  D009               	goto	l2967
  2021                           
  2022                           ;Relay.c: 90: {
  2023                           ;Relay.c: 91: if(_switch)
  2024  000FEC  501E               	movf	Relay_Control@_switch,w,c
  2025  000FEE  B4D8               	btfsc	status,2,c
  2026  000FF0  D003               	goto	l515
  2027                           
  2028                           ;Relay.c: 92: {
  2029                           ;Relay.c: 93: RD4 = 1,RD7 = 0;
  2030  000FF2  8883               	bsf	3971,4,c	;volatile
  2031  000FF4  9E83               	bcf	3971,7,c	;volatile
  2032                           
  2033                           ;Relay.c: 94: }
  2034  000FF6  D003               	goto	l2967
  2035  000FF8                     l515:
  2036                           
  2037                           ;Relay.c: 95: else
  2038                           ;Relay.c: 96: {
  2039                           ;Relay.c: 97: RD4 = 0,RD7 = 1;
  2040  000FF8  9883               	bcf	3971,4,c	;volatile
  2041  000FFA  8E83               	bsf	3971,7,c	;volatile
  2042  000FFC  D000               	goto	l2967
  2043  000FFE                     l2967:
  2044                           
  2045                           ;Relay.c: 98: }
  2046                           ;Relay.c: 99: }
  2047                           ;Relay.c: 102: if( relay_num >= 1 && relay_num <=3 )
  2048  000FFE  501F               	movf	Relay_Control@relay_num,w,c
  2049  001000  B4D8               	btfsc	status,2,c
  2050  001002  D00A               	goto	l2973
  2051  001004  0E04               	movlw	4
  2052  001006  601F               	cpfslt	Relay_Control@relay_num,c
  2053  001008  D007               	goto	l2973
  2054                           
  2055                           ;Relay.c: 103: {
  2056                           ;Relay.c: 104: delay_ms(2);
  2057  00100A  0E00               	movlw	0
  2058  00100C  6E1D               	movwf	delay_ms@_ms+1,c
  2059  00100E  0E02               	movlw	2
  2060  001010  6E1C               	movwf	delay_ms@_ms,c
  2061  001012  ECF4  F00B         	call	_delay_ms	;wreg free
  2062  001016  D000               	goto	l2973
  2063  001018                     l2973:
  2064                           
  2065                           ;Relay.c: 105: }
  2066                           ;Relay.c: 108: RD0 = 0;
  2067  001018  9083               	bcf	3971,0,c	;volatile
  2068                           
  2069                           ;Relay.c: 109: RD1 = 0;
  2070  00101A  9283               	bcf	3971,1,c	;volatile
  2071                           
  2072                           ;Relay.c: 110: RD2 = 0;
  2073  00101C  9483               	bcf	3971,2,c	;volatile
  2074                           
  2075                           ;Relay.c: 111: RD3 = 0;
  2076  00101E  9683               	bcf	3971,3,c	;volatile
  2077                           
  2078                           ;Relay.c: 112: RD4 = 0;
  2079  001020  9883               	bcf	3971,4,c	;volatile
  2080                           
  2081                           ;Relay.c: 113: RD7 = 0;
  2082  001022  9E83               	bcf	3971,7,c	;volatile
  2083  001024  0012               	return		;funcret
  2084  001026                     __end_of_Relay_Control:
  2085                           	opt stack 0
  2086                           tblptru	equ	0xFF8
  2087                           tblptrh	equ	0xFF7
  2088                           tblptrl	equ	0xFF6
  2089                           tablat	equ	0xFF5
  2090                           prodh	equ	0xFF4
  2091                           prodl	equ	0xFF3
  2092                           intcon	equ	0xFF2
  2093                           postinc0	equ	0xFEE
  2094                           wreg	equ	0xFE8
  2095                           postdec1	equ	0xFE5
  2096                           fsr1l	equ	0xFE1
  2097                           indf2	equ	0xFDF
  2098                           fsr2h	equ	0xFDA
  2099                           fsr2l	equ	0xFD9
  2100                           status	equ	0xFD8
  2101                           
  2102 ;; *************** function _delay_ms *****************
  2103 ;; Defined at:
  2104 ;;		line 37 in file "_01_USER/My_Delay.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;  _ms             2   27[COMRAM] unsigned int 
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;		None
  2109 ;; Return value:  Size  Location     Type
  2110 ;;		None               void
  2111 ;; Registers used:
  2112 ;;		wreg, status,2, status,0, cstack
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2118 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2121 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2122 ;;Total ram usage:        2 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; Hardware stack levels required when called:    4
  2125 ;; This function calls:
  2126 ;;		_delay1ms
  2127 ;; This function is called by:
  2128 ;;		_Relay_Control
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           
  2132                           	psect	text13
  2133  0017E8                     __ptext13:
  2134                           	opt stack 0
  2135  0017E8                     _delay_ms:
  2136                           	opt stack 24
  2137                           
  2138                           ;My_Delay.c: 39: while(_ms--) delay1ms();
  2139                           
  2140                           ;incstack = 0
  2141  0017E8  D003               	goto	l2435
  2142  0017EA                     l2433:
  2143  0017EA  ECBB  F00A         	call	_delay1ms	;wreg free
  2144  0017EE  D000               	goto	l2435
  2145  0017F0                     l2435:
  2146  0017F0  061C               	decf	delay_ms@_ms,f,c
  2147  0017F2  A0D8               	btfss	status,0,c
  2148  0017F4  061D               	decf	delay_ms@_ms+1,f,c
  2149  0017F6  281C               	incf	delay_ms@_ms,w,c
  2150  0017F8  E1F8               	bnz	l2433
  2151  0017FA  281D               	incf	delay_ms@_ms+1,w,c
  2152  0017FC  A4D8               	btfss	status,2,c
  2153  0017FE  D7F5               	goto	l2433
  2154  001800  0012               	return		;funcret
  2155  001802                     __end_of_delay_ms:
  2156                           	opt stack 0
  2157                           tblptru	equ	0xFF8
  2158                           tblptrh	equ	0xFF7
  2159                           tblptrl	equ	0xFF6
  2160                           tablat	equ	0xFF5
  2161                           prodh	equ	0xFF4
  2162                           prodl	equ	0xFF3
  2163                           intcon	equ	0xFF2
  2164                           postinc0	equ	0xFEE
  2165                           wreg	equ	0xFE8
  2166                           postdec1	equ	0xFE5
  2167                           fsr1l	equ	0xFE1
  2168                           indf2	equ	0xFDF
  2169                           fsr2h	equ	0xFDA
  2170                           fsr2l	equ	0xFD9
  2171                           status	equ	0xFD8
  2172                           
  2173 ;; *************** function _delay1ms *****************
  2174 ;; Defined at:
  2175 ;;		line 59 in file "_01_USER/My_Delay.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;		None
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  c               1   26[COMRAM] unsigned char 
  2180 ;;  b               1   25[COMRAM] unsigned char 
  2181 ;;  a               1   24[COMRAM] unsigned char 
  2182 ;; Return value:  Size  Location     Type
  2183 ;;		None               void
  2184 ;; Registers used:
  2185 ;;		wreg, status,2, status,0
  2186 ;; Tracked objects:
  2187 ;;		On entry : 0/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2192 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2194 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2195 ;;Total ram usage:        3 bytes
  2196 ;; Hardware stack levels used:    1
  2197 ;; Hardware stack levels required when called:    3
  2198 ;; This function calls:
  2199 ;;		Nothing
  2200 ;; This function is called by:
  2201 ;;		_delay_ms
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205                           	psect	text14
  2206  001576                     __ptext14:
  2207                           	opt stack 0
  2208  001576                     _delay1ms:
  2209                           	opt stack 24
  2210                           
  2211                           ;My_Delay.c: 61: unsigned char a,b,c;
  2212                           ;My_Delay.c: 62: for(c=1;c>0;c--)
  2213                           
  2214                           ;incstack = 0
  2215  001576  0E01               	movlw	1
  2216  001578  6E1B               	movwf	delay1ms@c,c
  2217  00157A  501B               	movf	delay1ms@c,w,c
  2218  00157C  B4D8               	btfsc	status,2,c
  2219  00157E  0012               	return	
  2220  001580  D001               	goto	l2297
  2221  001582  0012               	return	
  2222  001584                     l2297:
  2223                           
  2224                           ;My_Delay.c: 63: for(b=94;b>0;b--)
  2225  001584  0E5E               	movlw	94
  2226  001586  6E1A               	movwf	delay1ms@b,c
  2227  001588  501A               	movf	delay1ms@b,w,c
  2228  00158A  B4D8               	btfsc	status,2,c
  2229  00158C  D00D               	goto	l2313
  2230  00158E  D001               	goto	l2301
  2231  001590  D00B               	goto	l2313
  2232  001592                     l2301:
  2233                           
  2234                           ;My_Delay.c: 64: for(a=2;a>0;a--);
  2235  001592  0E02               	movlw	2
  2236  001594  6E19               	movwf	delay1ms@a,c
  2237  001596  5019               	movf	delay1ms@a,w,c
  2238  001598  B4D8               	btfsc	status,2,c
  2239  00159A  D004               	goto	l2309
  2240  00159C  D001               	goto	l2305
  2241  00159E  D002               	goto	l2309
  2242  0015A0                     l2305:
  2243  0015A0  0619               	decf	delay1ms@a,f,c
  2244  0015A2  D7F9               	goto	L1
  2245  0015A4                     l2309:
  2246  0015A4  061A               	decf	delay1ms@b,f,c
  2247  0015A6  D7F0               	goto	L2
  2248  0015A8                     l2313:
  2249  0015A8  061B               	decf	delay1ms@c,f,c
  2250  0015AA  D7E7               	goto	L3
  2251  0015AC  0012               	return		;funcret
  2252  0015AE                     __end_of_delay1ms:
  2253                           	opt stack 0
  2254                           tblptru	equ	0xFF8
  2255                           tblptrh	equ	0xFF7
  2256                           tblptrl	equ	0xFF6
  2257                           tablat	equ	0xFF5
  2258                           prodh	equ	0xFF4
  2259                           prodl	equ	0xFF3
  2260                           intcon	equ	0xFF2
  2261                           postinc0	equ	0xFEE
  2262                           wreg	equ	0xFE8
  2263                           postdec1	equ	0xFE5
  2264                           fsr1l	equ	0xFE1
  2265                           indf2	equ	0xFDF
  2266                           fsr2h	equ	0xFDA
  2267                           fsr2l	equ	0xFD9
  2268                           status	equ	0xFD8
  2269                           
  2270 ;; *************** function _RS485_SendDate *****************
  2271 ;; Defined at:
  2272 ;;		line 76 in file "_01_USER/My_USART.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;  date_dress      2    0[BANK1 ] PTR unsigned char 
  2275 ;;		 -> ga_RS485_SendBuff(10), 
  2276 ;;  date_lenth      1    2[BANK1 ] unsigned char 
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;		None
  2279 ;; Return value:  Size  Location     Type
  2280 ;;		None               void
  2281 ;; Registers used:
  2282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2288 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2290 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2291 ;;      Totals:         0       1       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2292 ;;Total ram usage:        4 bytes
  2293 ;; Hardware stack levels used:    1
  2294 ;; Hardware stack levels required when called:    5
  2295 ;; This function calls:
  2296 ;;		_VerifyCRC
  2297 ;; This function is called by:
  2298 ;;		_Run
  2299 ;; This function uses a non-reentrant model
  2300 ;;
  2301                           
  2302                           	psect	text15
  2303  000DCC                     __ptext15:
  2304                           	opt stack 0
  2305  000DCC                     _RS485_SendDate:
  2306                           	opt stack 24
  2307                           
  2308                           ;My_USART.c: 79: date_dress[--date_lenth] = 0xff;
  2309                           
  2310                           ;incstack = 0
  2311  000DCC  0101               	movlb	1	; () banked
  2312  000DCE  0702               	decf	RS485_SendDate@date_lenth& (0+255),f,b
  2313  000DD0  0101               	movlb	1	; () banked
  2314  000DD2  5102               	movf	RS485_SendDate@date_lenth& (0+255),w,b
  2315  000DD4  0D01               	mullw	1
  2316  000DD6  50F3               	movf	prodl,w,c
  2317  000DD8  0101               	movlb	1	; () banked
  2318  000DDA  2500               	addwf	RS485_SendDate@date_dress& (0+255),w,b
  2319  000DDC  6ED9               	movwf	fsr2l,c
  2320  000DDE  50F4               	movf	prodh,w,c
  2321  000DE0  0101               	movlb	1	; () banked
  2322  000DE2  2101               	addwfc	(RS485_SendDate@date_dress+1)& (0+255),w,b
  2323  000DE4  6EDA               	movwf	fsr2h,c
  2324  000DE6  0EFF               	movlw	255
  2325  000DE8  6EDF               	movwf	indf2,c
  2326                           
  2327                           ; BSR set to: 1
  2328                           ;My_USART.c: 82: VerifyCRC(date_dress,10);
  2329  000DEA  C100  F026         	movff	RS485_SendDate@date_dress,VerifyCRC@DataBuff
  2330  000DEE  C101  F027         	movff	RS485_SendDate@date_dress+1,VerifyCRC@DataBuff+1
  2331  000DF2  0E0A               	movlw	10
  2332  000DF4  6E28               	movwf	VerifyCRC@date_lenth,c
  2333  000DF6  ECEF  F004         	call	_VerifyCRC	;wreg free
  2334                           
  2335                           ;My_USART.c: 85: while( (!TXSTA1bits.TRMT) );
  2336  000DFA  D000               	goto	l202
  2337  000DFC                     l202:
  2338  000DFC  A2AC               	btfss	4012,1,c	;volatile
  2339  000DFE  D7FE               	goto	l202
  2340                           
  2341                           ;My_USART.c: 86: RC0 = 0;
  2342  000E00  9082               	bcf	3970,0,c	;volatile
  2343                           
  2344                           ;My_USART.c: 89: TXREG1 = date_dress[date_lenth];
  2345  000E02  0101               	movlb	1	; () banked
  2346  000E04  5102               	movf	RS485_SendDate@date_lenth& (0+255),w,b
  2347  000E06  0D01               	mullw	1
  2348  000E08  50F3               	movf	prodl,w,c
  2349  000E0A  0101               	movlb	1	; () banked
  2350  000E0C  2500               	addwf	RS485_SendDate@date_dress& (0+255),w,b
  2351  000E0E  6ED9               	movwf	fsr2l,c
  2352  000E10  50F4               	movf	prodh,w,c
  2353  000E12  0101               	movlb	1	; () banked
  2354  000E14  2101               	addwfc	(RS485_SendDate@date_dress+1)& (0+255),w,b
  2355  000E16  6EDA               	movwf	fsr2h,c
  2356  000E18  50DF               	movf	indf2,w,c
  2357  000E1A  6EAD               	movwf	4013,c	;volatile
  2358                           
  2359                           ;My_USART.c: 90: while( (!TXSTA1bits.TRMT) );
  2360  000E1C  D000               	goto	l205
  2361  000E1E                     l205:
  2362  000E1E  B2AC               	btfsc	4012,1,c	;volatile
  2363  000E20  D02E               	goto	l3581
  2364  000E22  D7FD               	goto	l205
  2365                           
  2366                           ;My_USART.c: 93: while( date_lenth --)
  2367  000E24  D02C               	goto	l3581
  2368  000E26                     l3577:
  2369                           
  2370                           ;My_USART.c: 94: {
  2371                           ;My_USART.c: 95: if(date_dress[date_lenth] == 0xff ) date_dress[date_lenth]--;
  2372  000E26  0101               	movlb	1	; () banked
  2373  000E28  5102               	movf	RS485_SendDate@date_lenth& (0+255),w,b
  2374  000E2A  0D01               	mullw	1
  2375  000E2C  50F3               	movf	prodl,w,c
  2376  000E2E  0101               	movlb	1	; () banked
  2377  000E30  2500               	addwf	RS485_SendDate@date_dress& (0+255),w,b
  2378  000E32  6ED9               	movwf	fsr2l,c
  2379  000E34  50F4               	movf	prodh,w,c
  2380  000E36  0101               	movlb	1	; () banked
  2381  000E38  2101               	addwfc	(RS485_SendDate@date_dress+1)& (0+255),w,b
  2382  000E3A  6EDA               	movwf	fsr2h,c
  2383  000E3C  28DE               	incf	postinc2,w,c
  2384  000E3E  A4D8               	btfss	status,2,c
  2385  000E40  D00C               	goto	l210
  2386                           
  2387                           ; BSR set to: 1
  2388  000E42  0101               	movlb	1	; () banked
  2389  000E44  5102               	movf	RS485_SendDate@date_lenth& (0+255),w,b
  2390  000E46  0D01               	mullw	1
  2391  000E48  50F3               	movf	prodl,w,c
  2392  000E4A  0101               	movlb	1	; () banked
  2393  000E4C  2500               	addwf	RS485_SendDate@date_dress& (0+255),w,b
  2394  000E4E  6ED9               	movwf	fsr2l,c
  2395  000E50  50F4               	movf	prodh,w,c
  2396  000E52  0101               	movlb	1	; () banked
  2397  000E54  2101               	addwfc	(RS485_SendDate@date_dress+1)& (0+255),w,b
  2398  000E56  6EDA               	movwf	fsr2h,c
  2399  000E58  06DF               	decf	indf2,f,c
  2400  000E5A                     l210:
  2401                           
  2402                           ; BSR set to: 1
  2403                           ;My_USART.c: 96: TXREG1 = date_dress[date_lenth];
  2404  000E5A  0101               	movlb	1	; () banked
  2405  000E5C  5102               	movf	RS485_SendDate@date_lenth& (0+255),w,b
  2406  000E5E  0D01               	mullw	1
  2407  000E60  50F3               	movf	prodl,w,c
  2408  000E62  0101               	movlb	1	; () banked
  2409  000E64  2500               	addwf	RS485_SendDate@date_dress& (0+255),w,b
  2410  000E66  6ED9               	movwf	fsr2l,c
  2411  000E68  50F4               	movf	prodh,w,c
  2412  000E6A  0101               	movlb	1	; () banked
  2413  000E6C  2101               	addwfc	(RS485_SendDate@date_dress+1)& (0+255),w,b
  2414  000E6E  6EDA               	movwf	fsr2h,c
  2415  000E70  50DF               	movf	indf2,w,c
  2416  000E72  6EAD               	movwf	4013,c	;volatile
  2417                           
  2418                           ;My_USART.c: 97: while( (!TXSTA1bits.TRMT));
  2419  000E74  D000               	goto	l211
  2420  000E76                     l211:
  2421  000E76  B2AC               	btfsc	4012,1,c	;volatile
  2422  000E78  D002               	goto	l3581
  2423  000E7A  D7FD               	goto	l211
  2424  000E7C  D000               	goto	l3581
  2425  000E7E                     l3581:
  2426  000E7E  0101               	movlb	1	; () banked
  2427  000E80  0702               	decf	RS485_SendDate@date_lenth& (0+255),f,b
  2428  000E82  0101               	movlb	1	; () banked
  2429  000E84  2902               	incf	RS485_SendDate@date_lenth& (0+255),w,b
  2430  000E86  A4D8               	btfss	status,2,c
  2431  000E88  D7CE               	goto	l3577
  2432                           
  2433                           ; BSR set to: 1
  2434                           ;My_USART.c: 98: }
  2435                           ;My_USART.c: 100: RC0 = 1;
  2436  000E8A  8082               	bsf	3970,0,c	;volatile
  2437                           
  2438                           ; BSR set to: 1
  2439  000E8C  0012               	return		;funcret
  2440  000E8E                     __end_of_RS485_SendDate:
  2441                           	opt stack 0
  2442                           tblptru	equ	0xFF8
  2443                           tblptrh	equ	0xFF7
  2444                           tblptrl	equ	0xFF6
  2445                           tablat	equ	0xFF5
  2446                           prodh	equ	0xFF4
  2447                           prodl	equ	0xFF3
  2448                           intcon	equ	0xFF2
  2449                           postinc0	equ	0xFEE
  2450                           wreg	equ	0xFE8
  2451                           postdec1	equ	0xFE5
  2452                           fsr1l	equ	0xFE1
  2453                           indf2	equ	0xFDF
  2454                           postinc2	equ	0xFDE
  2455                           fsr2h	equ	0xFDA
  2456                           fsr2l	equ	0xFD9
  2457                           status	equ	0xFD8
  2458                           
  2459 ;; *************** function _GetADC6 *****************
  2460 ;; Defined at:
  2461 ;;		line 67 in file "_01_USER/My_ADC.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;		None
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;		None
  2466 ;; Return value:  Size  Location     Type
  2467 ;;		None               void
  2468 ;; Registers used:
  2469 ;;		wreg, status,2, status,0, cstack
  2470 ;; Tracked objects:
  2471 ;;		On entry : 0/0
  2472 ;;		On exit  : 0/0
  2473 ;;		Unchanged: 0/0
  2474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2479 ;;Total ram usage:        0 bytes
  2480 ;; Hardware stack levels used:    1
  2481 ;; Hardware stack levels required when called:    5
  2482 ;; This function calls:
  2483 ;;		_BusyADC
  2484 ;;		_ConvertADC
  2485 ;;		_ReadADC
  2486 ;;		___ftdiv
  2487 ;;		___ftmul
  2488 ;;		___lwtoft
  2489 ;; This function is called by:
  2490 ;;		_Run
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494                           	psect	text16
  2495  001174                     __ptext16:
  2496                           	opt stack 0
  2497  001174                     _GetADC6:
  2498                           	opt stack 24
  2499                           
  2500                           ;My_ADC.c: 69: ConvertADC();
  2501                           
  2502                           ; BSR set to: 1
  2503                           ;incstack = 0
  2504  001174  EC47  F00C         	call	_ConvertADC	;wreg free
  2505                           
  2506                           ;My_ADC.c: 70: while(BusyADC());
  2507  001178  D000               	goto	l3647
  2508  00117A                     l3647:
  2509  00117A  EC33  F00C         	call	_BusyADC	;wreg free
  2510  00117E  0900               	iorlw	0
  2511  001180  A4D8               	btfss	status,2,c
  2512  001182  D7FB               	goto	l3647
  2513                           
  2514                           ;My_ADC.c: 71: gf_ADC6_Buff =(unsigned int)ReadADC()*4.096f/4095.0f;
  2515  001184  0E12               	movlw	18
  2516  001186  6E27               	movwf	___ftmul@f2,c
  2517  001188  0E83               	movlw	131
  2518  00118A  6E28               	movwf	___ftmul@f2+1,c
  2519  00118C  0E40               	movlw	64
  2520  00118E  6E29               	movwf	___ftmul@f2+2,c
  2521  001190  EC2B  F00C         	call	_ReadADC	;wreg free
  2522  001194  C019  F021         	movff	?_ReadADC,___lwtoft@c
  2523  001198  C01A  F022         	movff	?_ReadADC+1,___lwtoft@c+1
  2524  00119C  EC6A  F00B         	call	___lwtoft	;wreg free
  2525  0011A0  C021  F024         	movff	?___lwtoft,___ftmul@f1
  2526  0011A4  C022  F025         	movff	?___lwtoft+1,___ftmul@f1+1
  2527  0011A8  C023  F026         	movff	?___lwtoft+2,___ftmul@f1+2
  2528  0011AC  EC83  F005         	call	___ftmul	;wreg free
  2529  0011B0  C024  F100         	movff	?___ftmul,___ftdiv@f1
  2530  0011B4  C025  F101         	movff	?___ftmul+1,___ftdiv@f1+1
  2531  0011B8  C026  F102         	movff	?___ftmul+2,___ftdiv@f1+2
  2532  0011BC  0EF0               	movlw	240
  2533  0011BE  0101               	movlb	1	; () banked
  2534  0011C0  6F03               	movwf	___ftdiv@f2& (0+255),b
  2535  0011C2  0E7F               	movlw	127
  2536  0011C4  0101               	movlb	1	; () banked
  2537  0011C6  6F04               	movwf	(___ftdiv@f2+1)& (0+255),b
  2538  0011C8  0E45               	movlw	69
  2539  0011CA  0101               	movlb	1	; () banked
  2540  0011CC  6F05               	movwf	(___ftdiv@f2+2)& (0+255),b
  2541  0011CE  EC46  F004         	call	___ftdiv	;wreg free
  2542  0011D2  C100  F037         	movff	?___ftdiv,_gf_ADC6_Buff	;volatile
  2543  0011D6  C101  F038         	movff	?___ftdiv+1,_gf_ADC6_Buff+1	;volatile
  2544  0011DA  C102  F039         	movff	?___ftdiv+2,_gf_ADC6_Buff+2	;volatile
  2545  0011DE  0012               	return		;funcret
  2546  0011E0                     __end_of_GetADC6:
  2547                           	opt stack 0
  2548                           tblptru	equ	0xFF8
  2549                           tblptrh	equ	0xFF7
  2550                           tblptrl	equ	0xFF6
  2551                           tablat	equ	0xFF5
  2552                           prodh	equ	0xFF4
  2553                           prodl	equ	0xFF3
  2554                           intcon	equ	0xFF2
  2555                           postinc0	equ	0xFEE
  2556                           wreg	equ	0xFE8
  2557                           postdec1	equ	0xFE5
  2558                           fsr1l	equ	0xFE1
  2559                           indf2	equ	0xFDF
  2560                           postinc2	equ	0xFDE
  2561                           fsr2h	equ	0xFDA
  2562                           fsr2l	equ	0xFD9
  2563                           status	equ	0xFD8
  2564                           
  2565 ;; *************** function ___lwtoft *****************
  2566 ;; Defined at:
  2567 ;;		line 28 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;  c               2   32[COMRAM] unsigned int 
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;		None
  2572 ;; Return value:  Size  Location     Type
  2573 ;;                  3   32[COMRAM] float 
  2574 ;; Registers used:
  2575 ;;		wreg, status,2, status,0, cstack
  2576 ;; Tracked objects:
  2577 ;;		On entry : 0/0
  2578 ;;		On exit  : 0/0
  2579 ;;		Unchanged: 0/0
  2580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2581 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2584 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2585 ;;Total ram usage:        3 bytes
  2586 ;; Hardware stack levels used:    1
  2587 ;; Hardware stack levels required when called:    4
  2588 ;; This function calls:
  2589 ;;		___ftpack
  2590 ;; This function is called by:
  2591 ;;		_GetADC6
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595                           	psect	text17
  2596  0016D4                     __ptext17:
  2597                           	opt stack 0
  2598  0016D4                     ___lwtoft:
  2599                           	opt stack 24
  2600                           
  2601                           ;incstack = 0
  2602  0016D4  C021  F019         	movff	___lwtoft@c,___ftpack@arg
  2603  0016D8  C022  F01A         	movff	___lwtoft@c+1,___ftpack@arg+1
  2604  0016DC  6A1B               	clrf	___ftpack@arg+2,c
  2605  0016DE  0E8E               	movlw	142
  2606  0016E0  6E1C               	movwf	___ftpack@exp,c
  2607  0016E2  0E00               	movlw	0
  2608  0016E4  6E1D               	movwf	___ftpack@sign,c
  2609  0016E6  EC83  F006         	call	___ftpack	;wreg free
  2610  0016EA  C019  F021         	movff	?___ftpack,?___lwtoft
  2611  0016EE  C01A  F022         	movff	?___ftpack+1,?___lwtoft+1
  2612  0016F2  C01B  F023         	movff	?___ftpack+2,?___lwtoft+2
  2613  0016F6  0012               	return	
  2614  0016F8  0012               	return		;funcret
  2615  0016FA                     __end_of___lwtoft:
  2616                           	opt stack 0
  2617                           tblptru	equ	0xFF8
  2618                           tblptrh	equ	0xFF7
  2619                           tblptrl	equ	0xFF6
  2620                           tablat	equ	0xFF5
  2621                           prodh	equ	0xFF4
  2622                           prodl	equ	0xFF3
  2623                           intcon	equ	0xFF2
  2624                           postinc0	equ	0xFEE
  2625                           wreg	equ	0xFE8
  2626                           postdec1	equ	0xFE5
  2627                           fsr1l	equ	0xFE1
  2628                           indf2	equ	0xFDF
  2629                           postinc2	equ	0xFDE
  2630                           fsr2h	equ	0xFDA
  2631                           fsr2l	equ	0xFD9
  2632                           status	equ	0xFD8
  2633                           
  2634 ;; *************** function ___ftmul *****************
  2635 ;; Defined at:
  2636 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;  f1              3   35[COMRAM] float 
  2639 ;;  f2              3   38[COMRAM] float 
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;  f3_as_produc    3   45[COMRAM] unsigned um
  2642 ;;  sign            1   49[COMRAM] unsigned char 
  2643 ;;  cntr            1   48[COMRAM] unsigned char 
  2644 ;;  exp             1   44[COMRAM] unsigned char 
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  3   35[COMRAM] float 
  2647 ;; Registers used:
  2648 ;;		wreg, status,2, status,0, cstack
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2654 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2655 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2656 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2657 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2658 ;;Total ram usage:       15 bytes
  2659 ;; Hardware stack levels used:    1
  2660 ;; Hardware stack levels required when called:    4
  2661 ;; This function calls:
  2662 ;;		___ftpack
  2663 ;; This function is called by:
  2664 ;;		_GetADC6
  2665 ;;		_TM1640_Show_Decimal
  2666 ;; This function uses a non-reentrant model
  2667 ;;
  2668                           
  2669                           	psect	text18
  2670  000B06                     __ptext18:
  2671                           	opt stack 0
  2672  000B06                     ___ftmul:
  2673                           	opt stack 24
  2674                           
  2675                           ;incstack = 0
  2676  000B06  C026  F02A         	movff	___ftmul@f1+2,??___ftmul
  2677  000B0A  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  2678  000B0C  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  2679  000B0E  3425               	rlcf	___ftmul@f1+1,w,c
  2680  000B10  362A               	rlcf	??___ftmul& (0+255),f,c
  2681  000B12  E301               	bnc	u3881
  2682  000B14  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  2683  000B16                     u3881:
  2684  000B16  502A               	movf	??___ftmul,w,c
  2685  000B18  6E2D               	movwf	___ftmul@exp,c
  2686  000B1A  502D               	movf	___ftmul@exp,w,c
  2687  000B1C  A4D8               	btfss	status,2,c
  2688  000B1E  D007               	goto	l3525
  2689  000B20  0E00               	movlw	0
  2690  000B22  6E24               	movwf	?___ftmul,c
  2691  000B24  0E00               	movlw	0
  2692  000B26  6E25               	movwf	?___ftmul+1,c
  2693  000B28  0E00               	movlw	0
  2694  000B2A  6E26               	movwf	?___ftmul+2,c
  2695  000B2C  0012               	return	
  2696  000B2E                     l3525:
  2697  000B2E  C029  F02A         	movff	___ftmul@f2+2,??___ftmul
  2698  000B32  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  2699  000B34  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  2700  000B36  3428               	rlcf	___ftmul@f2+1,w,c
  2701  000B38  362A               	rlcf	??___ftmul& (0+255),f,c
  2702  000B3A  E301               	bnc	u3901
  2703  000B3C  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  2704  000B3E                     u3901:
  2705  000B3E  502A               	movf	??___ftmul,w,c
  2706  000B40  6E32               	movwf	___ftmul@sign,c
  2707  000B42  5032               	movf	___ftmul@sign,w,c
  2708  000B44  A4D8               	btfss	status,2,c
  2709  000B46  D007               	goto	l3531
  2710  000B48  0E00               	movlw	0
  2711  000B4A  6E24               	movwf	?___ftmul,c
  2712  000B4C  0E00               	movlw	0
  2713  000B4E  6E25               	movwf	?___ftmul+1,c
  2714  000B50  0E00               	movlw	0
  2715  000B52  6E26               	movwf	?___ftmul+2,c
  2716  000B54  0012               	return	
  2717  000B56                     l3531:
  2718  000B56  5032               	movf	___ftmul@sign,w,c
  2719  000B58  0F7B               	addlw	123
  2720  000B5A  262D               	addwf	___ftmul@exp,f,c
  2721  000B5C  C026  F032         	movff	___ftmul@f1+2,___ftmul@sign
  2722  000B60  5029               	movf	___ftmul@f2+2,w,c
  2723  000B62  1A32               	xorwf	___ftmul@sign,f,c
  2724  000B64  0E80               	movlw	128
  2725  000B66  1632               	andwf	___ftmul@sign,f,c
  2726  000B68  8E25               	bsf	___ftmul@f1+1,7,c
  2727  000B6A  8E28               	bsf	___ftmul@f2+1,7,c
  2728  000B6C  0EFF               	movlw	255
  2729  000B6E  1627               	andwf	___ftmul@f2,f,c
  2730  000B70  0EFF               	movlw	255
  2731  000B72  1628               	andwf	___ftmul@f2+1,f,c
  2732  000B74  0E00               	movlw	0
  2733  000B76  1629               	andwf	___ftmul@f2+2,f,c
  2734  000B78  0E00               	movlw	0
  2735  000B7A  6E2E               	movwf	___ftmul@f3_as_product,c
  2736  000B7C  0E00               	movlw	0
  2737  000B7E  6E2F               	movwf	___ftmul@f3_as_product+1,c
  2738  000B80  0E00               	movlw	0
  2739  000B82  6E30               	movwf	___ftmul@f3_as_product+2,c
  2740  000B84  0E07               	movlw	7
  2741  000B86  6E31               	movwf	___ftmul@cntr,c
  2742  000B88  D000               	goto	l3545
  2743  000B8A                     l3545:
  2744  000B8A  A024               	btfss	___ftmul@f1,0,c
  2745  000B8C  D007               	goto	l3549
  2746  000B8E  5027               	movf	___ftmul@f2,w,c
  2747  000B90  262E               	addwf	___ftmul@f3_as_product,f,c
  2748  000B92  5028               	movf	___ftmul@f2+1,w,c
  2749  000B94  222F               	addwfc	___ftmul@f3_as_product+1,f,c
  2750  000B96  5029               	movf	___ftmul@f2+2,w,c
  2751  000B98  2230               	addwfc	___ftmul@f3_as_product+2,f,c
  2752  000B9A  D000               	goto	l3549
  2753  000B9C                     l3549:
  2754  000B9C  90D8               	bcf	status,0,c
  2755  000B9E  3226               	rrcf	___ftmul@f1+2,f,c
  2756  000BA0  3225               	rrcf	___ftmul@f1+1,f,c
  2757  000BA2  3224               	rrcf	___ftmul@f1,f,c
  2758  000BA4  90D8               	bcf	status,0,c
  2759  000BA6  3627               	rlcf	___ftmul@f2,f,c
  2760  000BA8  3628               	rlcf	___ftmul@f2+1,f,c
  2761  000BAA  3629               	rlcf	___ftmul@f2+2,f,c
  2762  000BAC  2E31               	decfsz	___ftmul@cntr,f,c
  2763  000BAE  D7ED               	goto	l3545
  2764  000BB0  D000               	goto	l3553
  2765  000BB2                     l3553:
  2766  000BB2  0E09               	movlw	9
  2767  000BB4  6E31               	movwf	___ftmul@cntr,c
  2768  000BB6  D000               	goto	l3555
  2769  000BB8                     l3555:
  2770  000BB8  A024               	btfss	___ftmul@f1,0,c
  2771  000BBA  D007               	goto	l3559
  2772  000BBC  5027               	movf	___ftmul@f2,w,c
  2773  000BBE  262E               	addwf	___ftmul@f3_as_product,f,c
  2774  000BC0  5028               	movf	___ftmul@f2+1,w,c
  2775  000BC2  222F               	addwfc	___ftmul@f3_as_product+1,f,c
  2776  000BC4  5029               	movf	___ftmul@f2+2,w,c
  2777  000BC6  2230               	addwfc	___ftmul@f3_as_product+2,f,c
  2778  000BC8  D000               	goto	l3559
  2779  000BCA                     l3559:
  2780  000BCA  90D8               	bcf	status,0,c
  2781  000BCC  3226               	rrcf	___ftmul@f1+2,f,c
  2782  000BCE  3225               	rrcf	___ftmul@f1+1,f,c
  2783  000BD0  3224               	rrcf	___ftmul@f1,f,c
  2784  000BD2  90D8               	bcf	status,0,c
  2785  000BD4  3230               	rrcf	___ftmul@f3_as_product+2,f,c
  2786  000BD6  322F               	rrcf	___ftmul@f3_as_product+1,f,c
  2787  000BD8  322E               	rrcf	___ftmul@f3_as_product,f,c
  2788  000BDA  2E31               	decfsz	___ftmul@cntr,f,c
  2789  000BDC  D7ED               	goto	l3555
  2790  000BDE  D000               	goto	l3563
  2791  000BE0                     l3563:
  2792  000BE0  C02E  F019         	movff	___ftmul@f3_as_product,___ftpack@arg
  2793  000BE4  C02F  F01A         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2794  000BE8  C030  F01B         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2795  000BEC  C02D  F01C         	movff	___ftmul@exp,___ftpack@exp
  2796  000BF0  C032  F01D         	movff	___ftmul@sign,___ftpack@sign
  2797  000BF4  EC83  F006         	call	___ftpack	;wreg free
  2798  000BF8  C019  F024         	movff	?___ftpack,?___ftmul
  2799  000BFC  C01A  F025         	movff	?___ftpack+1,?___ftmul+1
  2800  000C00  C01B  F026         	movff	?___ftpack+2,?___ftmul+2
  2801  000C04  0012               	return	
  2802  000C06  0012               	return		;funcret
  2803  000C08                     __end_of___ftmul:
  2804                           	opt stack 0
  2805                           tblptru	equ	0xFF8
  2806                           tblptrh	equ	0xFF7
  2807                           tblptrl	equ	0xFF6
  2808                           tablat	equ	0xFF5
  2809                           prodh	equ	0xFF4
  2810                           prodl	equ	0xFF3
  2811                           intcon	equ	0xFF2
  2812                           postinc0	equ	0xFEE
  2813                           wreg	equ	0xFE8
  2814                           postdec1	equ	0xFE5
  2815                           fsr1l	equ	0xFE1
  2816                           indf2	equ	0xFDF
  2817                           postinc2	equ	0xFDE
  2818                           fsr2h	equ	0xFDA
  2819                           fsr2l	equ	0xFD9
  2820                           status	equ	0xFD8
  2821                           
  2822 ;; *************** function ___ftdiv *****************
  2823 ;; Defined at:
  2824 ;;		line 54 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  2825 ;; Parameters:    Size  Location     Type
  2826 ;;  f1              3    0[BANK1 ] float 
  2827 ;;  f2              3    3[BANK1 ] float 
  2828 ;; Auto vars:     Size  Location     Type
  2829 ;;  f3              3   10[BANK1 ] float 
  2830 ;;  sign            1   14[BANK1 ] unsigned char 
  2831 ;;  exp             1   13[BANK1 ] unsigned char 
  2832 ;;  cntr            1    9[BANK1 ] unsigned char 
  2833 ;; Return value:  Size  Location     Type
  2834 ;;                  3    0[BANK1 ] float 
  2835 ;; Registers used:
  2836 ;;		wreg, status,2, status,0, cstack
  2837 ;; Tracked objects:
  2838 ;;		On entry : 0/0
  2839 ;;		On exit  : 0/0
  2840 ;;		Unchanged: 0/0
  2841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2842 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2843 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2844 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2845 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2846 ;;Total ram usage:       15 bytes
  2847 ;; Hardware stack levels used:    1
  2848 ;; Hardware stack levels required when called:    4
  2849 ;; This function calls:
  2850 ;;		___ftpack
  2851 ;; This function is called by:
  2852 ;;		_GetADC6
  2853 ;;		_TM1640_Show_Decimal
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857                           	psect	text19
  2858  00088C                     __ptext19:
  2859                           	opt stack 0
  2860  00088C                     ___ftdiv:
  2861                           	opt stack 24
  2862                           
  2863                           ;incstack = 0
  2864  00088C  C102  F106         	movff	___ftdiv@f1+2,??___ftdiv
  2865  000890  0101               	movlb	1	; () banked
  2866  000892  6B07               	clrf	(??___ftdiv+1)& (0+255),b
  2867  000894  6B08               	clrf	(??___ftdiv+2)& (0+255),b
  2868  000896  0101               	movlb	1	; () banked
  2869  000898  3501               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  2870  00089A  0101               	movlb	1	; () banked
  2871  00089C  3706               	rlcf	??___ftdiv& (0+255),f,b
  2872  00089E  E301               	bnc	u3831
  2873  0008A0  8107               	bsf	(??___ftdiv+1)& (0+255),0,b
  2874  0008A2                     u3831:
  2875  0008A2  0101               	movlb	1	; () banked
  2876  0008A4  5106               	movf	??___ftdiv& (0+255),w,b
  2877  0008A6  0101               	movlb	1	; () banked
  2878  0008A8  6F0D               	movwf	___ftdiv@exp& (0+255),b
  2879  0008AA  0101               	movlb	1	; () banked
  2880  0008AC  510D               	movf	___ftdiv@exp& (0+255),w,b
  2881  0008AE  A4D8               	btfss	status,2,c
  2882  0008B0  D00A               	goto	l3479
  2883                           
  2884                           ; BSR set to: 1
  2885  0008B2  0E00               	movlw	0
  2886  0008B4  0101               	movlb	1	; () banked
  2887  0008B6  6F00               	movwf	?___ftdiv& (0+255),b
  2888  0008B8  0E00               	movlw	0
  2889  0008BA  0101               	movlb	1	; () banked
  2890  0008BC  6F01               	movwf	(?___ftdiv+1)& (0+255),b
  2891  0008BE  0E00               	movlw	0
  2892  0008C0  0101               	movlb	1	; () banked
  2893  0008C2  6F02               	movwf	(?___ftdiv+2)& (0+255),b
  2894                           
  2895                           ; BSR set to: 1
  2896  0008C4  0012               	return	
  2897  0008C6                     l3479:
  2898                           
  2899                           ; BSR set to: 1
  2900  0008C6  C105  F106         	movff	___ftdiv@f2+2,??___ftdiv
  2901  0008CA  0101               	movlb	1	; () banked
  2902  0008CC  6B07               	clrf	(??___ftdiv+1)& (0+255),b
  2903  0008CE  6B08               	clrf	(??___ftdiv+2)& (0+255),b
  2904  0008D0  0101               	movlb	1	; () banked
  2905  0008D2  3504               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  2906  0008D4  0101               	movlb	1	; () banked
  2907  0008D6  3706               	rlcf	??___ftdiv& (0+255),f,b
  2908  0008D8  E301               	bnc	u3851
  2909  0008DA  8107               	bsf	(??___ftdiv+1)& (0+255),0,b
  2910  0008DC                     u3851:
  2911  0008DC  0101               	movlb	1	; () banked
  2912  0008DE  5106               	movf	??___ftdiv& (0+255),w,b
  2913  0008E0  0101               	movlb	1	; () banked
  2914  0008E2  6F0E               	movwf	___ftdiv@sign& (0+255),b
  2915  0008E4  0101               	movlb	1	; () banked
  2916  0008E6  510E               	movf	___ftdiv@sign& (0+255),w,b
  2917  0008E8  A4D8               	btfss	status,2,c
  2918  0008EA  D00A               	goto	l3485
  2919                           
  2920                           ; BSR set to: 1
  2921  0008EC  0E00               	movlw	0
  2922  0008EE  0101               	movlb	1	; () banked
  2923  0008F0  6F00               	movwf	?___ftdiv& (0+255),b
  2924  0008F2  0E00               	movlw	0
  2925  0008F4  0101               	movlb	1	; () banked
  2926  0008F6  6F01               	movwf	(?___ftdiv+1)& (0+255),b
  2927  0008F8  0E00               	movlw	0
  2928  0008FA  0101               	movlb	1	; () banked
  2929  0008FC  6F02               	movwf	(?___ftdiv+2)& (0+255),b
  2930                           
  2931                           ; BSR set to: 1
  2932  0008FE  0012               	return	
  2933  000900                     l3485:
  2934                           
  2935                           ; BSR set to: 1
  2936  000900  0E00               	movlw	0
  2937  000902  0101               	movlb	1	; () banked
  2938  000904  6F0A               	movwf	___ftdiv@f3& (0+255),b
  2939  000906  0E00               	movlw	0
  2940  000908  0101               	movlb	1	; () banked
  2941  00090A  6F0B               	movwf	(___ftdiv@f3+1)& (0+255),b
  2942  00090C  0E00               	movlw	0
  2943  00090E  0101               	movlb	1	; () banked
  2944  000910  6F0C               	movwf	(___ftdiv@f3+2)& (0+255),b
  2945                           
  2946                           ; BSR set to: 1
  2947  000912  0101               	movlb	1	; () banked
  2948  000914  510E               	movf	___ftdiv@sign& (0+255),w,b
  2949  000916  0F89               	addlw	137
  2950  000918  0101               	movlb	1	; () banked
  2951  00091A  5F0D               	subwf	___ftdiv@exp& (0+255),f,b
  2952                           
  2953                           ; BSR set to: 1
  2954  00091C  C102  F10E         	movff	___ftdiv@f1+2,___ftdiv@sign
  2955                           
  2956                           ; BSR set to: 1
  2957  000920  0101               	movlb	1	; () banked
  2958  000922  5105               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2959  000924  0101               	movlb	1	; () banked
  2960  000926  1B0E               	xorwf	___ftdiv@sign& (0+255),f,b
  2961                           
  2962                           ; BSR set to: 1
  2963  000928  0E80               	movlw	128
  2964  00092A  0101               	movlb	1	; () banked
  2965  00092C  170E               	andwf	___ftdiv@sign& (0+255),f,b
  2966                           
  2967                           ; BSR set to: 1
  2968  00092E  0101               	movlb	1	; () banked
  2969  000930  8F01               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  2970                           
  2971                           ; BSR set to: 1
  2972  000932  0EFF               	movlw	255
  2973  000934  0101               	movlb	1	; () banked
  2974  000936  1700               	andwf	___ftdiv@f1& (0+255),f,b
  2975  000938  0EFF               	movlw	255
  2976  00093A  0101               	movlb	1	; () banked
  2977  00093C  1701               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  2978  00093E  0E00               	movlw	0
  2979  000940  0101               	movlb	1	; () banked
  2980  000942  1702               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  2981                           
  2982                           ; BSR set to: 1
  2983  000944  0101               	movlb	1	; () banked
  2984  000946  8F04               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  2985                           
  2986                           ; BSR set to: 1
  2987  000948  0EFF               	movlw	255
  2988  00094A  0101               	movlb	1	; () banked
  2989  00094C  1703               	andwf	___ftdiv@f2& (0+255),f,b
  2990  00094E  0EFF               	movlw	255
  2991  000950  0101               	movlb	1	; () banked
  2992  000952  1704               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  2993  000954  0E00               	movlw	0
  2994  000956  0101               	movlb	1	; () banked
  2995  000958  1705               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  2996                           
  2997                           ; BSR set to: 1
  2998  00095A  0E18               	movlw	24
  2999  00095C  0101               	movlb	1	; () banked
  3000  00095E  6F09               	movwf	___ftdiv@cntr& (0+255),b
  3001  000960  D000               	goto	l3505
  3002  000962                     l3505:
  3003                           
  3004                           ; BSR set to: 1
  3005  000962  0101               	movlb	1	; () banked
  3006  000964  90D8               	bcf	status,0,c
  3007  000966  370A               	rlcf	___ftdiv@f3& (0+255),f,b
  3008  000968  370B               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  3009  00096A  370C               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  3010                           
  3011                           ; BSR set to: 1
  3012  00096C  0101               	movlb	1	; () banked
  3013  00096E  5103               	movf	___ftdiv@f2& (0+255),w,b
  3014  000970  0101               	movlb	1	; () banked
  3015  000972  5D00               	subwf	___ftdiv@f1& (0+255),w,b
  3016  000974  0101               	movlb	1	; () banked
  3017  000976  5104               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3018  000978  0101               	movlb	1	; () banked
  3019  00097A  5901               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  3020  00097C  0101               	movlb	1	; () banked
  3021  00097E  5105               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3022  000980  0101               	movlb	1	; () banked
  3023  000982  5902               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  3024  000984  A0D8               	btfss	status,0,c
  3025  000986  D00E               	goto	l1037
  3026                           
  3027                           ; BSR set to: 1
  3028  000988  0101               	movlb	1	; () banked
  3029  00098A  5103               	movf	___ftdiv@f2& (0+255),w,b
  3030  00098C  0101               	movlb	1	; () banked
  3031  00098E  5F00               	subwf	___ftdiv@f1& (0+255),f,b
  3032  000990  0101               	movlb	1	; () banked
  3033  000992  5104               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3034  000994  0101               	movlb	1	; () banked
  3035  000996  5B01               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  3036  000998  0101               	movlb	1	; () banked
  3037  00099A  5105               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3038  00099C  0101               	movlb	1	; () banked
  3039  00099E  5B02               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  3040                           
  3041                           ; BSR set to: 1
  3042  0009A0  0101               	movlb	1	; () banked
  3043  0009A2  810A               	bsf	___ftdiv@f3& (0+255),0,b
  3044  0009A4                     l1037:
  3045                           
  3046                           ; BSR set to: 1
  3047  0009A4  0101               	movlb	1	; () banked
  3048  0009A6  90D8               	bcf	status,0,c
  3049  0009A8  3700               	rlcf	___ftdiv@f1& (0+255),f,b
  3050  0009AA  3701               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  3051  0009AC  3702               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  3052                           
  3053                           ; BSR set to: 1
  3054  0009AE  0101               	movlb	1	; () banked
  3055  0009B0  2F09               	decfsz	___ftdiv@cntr& (0+255),f,b
  3056  0009B2  D7D7               	goto	l3505
  3057  0009B4  D000               	goto	l3515
  3058  0009B6                     l3515:
  3059                           
  3060                           ; BSR set to: 1
  3061  0009B6  C10A  F019         	movff	___ftdiv@f3,___ftpack@arg
  3062  0009BA  C10B  F01A         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3063  0009BE  C10C  F01B         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3064  0009C2  C10D  F01C         	movff	___ftdiv@exp,___ftpack@exp
  3065  0009C6  C10E  F01D         	movff	___ftdiv@sign,___ftpack@sign
  3066  0009CA  EC83  F006         	call	___ftpack	;wreg free
  3067  0009CE  C019  F100         	movff	?___ftpack,?___ftdiv
  3068  0009D2  C01A  F101         	movff	?___ftpack+1,?___ftdiv+1
  3069  0009D6  C01B  F102         	movff	?___ftpack+2,?___ftdiv+2
  3070  0009DA  0012               	return	
  3071  0009DC  0012               	return		;funcret
  3072  0009DE                     __end_of___ftdiv:
  3073                           	opt stack 0
  3074                           tblptru	equ	0xFF8
  3075                           tblptrh	equ	0xFF7
  3076                           tblptrl	equ	0xFF6
  3077                           tablat	equ	0xFF5
  3078                           prodh	equ	0xFF4
  3079                           prodl	equ	0xFF3
  3080                           intcon	equ	0xFF2
  3081                           postinc0	equ	0xFEE
  3082                           wreg	equ	0xFE8
  3083                           postdec1	equ	0xFE5
  3084                           fsr1l	equ	0xFE1
  3085                           indf2	equ	0xFDF
  3086                           postinc2	equ	0xFDE
  3087                           fsr2h	equ	0xFDA
  3088                           fsr2l	equ	0xFD9
  3089                           status	equ	0xFD8
  3090                           
  3091 ;; *************** function ___ftpack *****************
  3092 ;; Defined at:
  3093 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;  arg             3   24[COMRAM] unsigned um
  3096 ;;  exp             1   27[COMRAM] unsigned char 
  3097 ;;  sign            1   28[COMRAM] unsigned char 
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;		None
  3100 ;; Return value:  Size  Location     Type
  3101 ;;                  3   24[COMRAM] float 
  3102 ;; Registers used:
  3103 ;;		wreg, status,2, status,0
  3104 ;; Tracked objects:
  3105 ;;		On entry : 0/0
  3106 ;;		On exit  : 0/0
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3109 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3111 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3112 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3113 ;;Total ram usage:        8 bytes
  3114 ;; Hardware stack levels used:    1
  3115 ;; Hardware stack levels required when called:    3
  3116 ;; This function calls:
  3117 ;;		Nothing
  3118 ;; This function is called by:
  3119 ;;		___ftdiv
  3120 ;;		___ftmul
  3121 ;;		___lwtoft
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125                           	psect	text20
  3126  000D06                     __ptext20:
  3127                           	opt stack 0
  3128  000D06                     ___ftpack:
  3129                           	opt stack 24
  3130                           
  3131                           ;incstack = 0
  3132  000D06  501C               	movf	___ftpack@exp,w,c
  3133  000D08  B4D8               	btfsc	status,2,c
  3134  000D0A  D005               	goto	l3387
  3135  000D0C  5019               	movf	___ftpack@arg,w,c
  3136  000D0E  101A               	iorwf	___ftpack@arg+1,w,c
  3137  000D10  101B               	iorwf	___ftpack@arg+2,w,c
  3138  000D12  A4D8               	btfss	status,2,c
  3139  000D14  D00E               	goto	l3393
  3140  000D16                     l3387:
  3141  000D16  0E00               	movlw	0
  3142  000D18  6E19               	movwf	?___ftpack,c
  3143  000D1A  0E00               	movlw	0
  3144  000D1C  6E1A               	movwf	?___ftpack+1,c
  3145  000D1E  0E00               	movlw	0
  3146  000D20  6E1B               	movwf	?___ftpack+2,c
  3147  000D22  0012               	return	
  3148  000D24  D006               	goto	l3393
  3149  000D26                     l3391:
  3150  000D26  2A1C               	incf	___ftpack@exp,f,c
  3151  000D28  90D8               	bcf	status,0,c
  3152  000D2A  321B               	rrcf	___ftpack@arg+2,f,c
  3153  000D2C  321A               	rrcf	___ftpack@arg+1,f,c
  3154  000D2E  3219               	rrcf	___ftpack@arg,f,c
  3155  000D30  D000               	goto	l3393
  3156  000D32                     l3393:
  3157  000D32  0E00               	movlw	0
  3158  000D34  1419               	andwf	___ftpack@arg,w,c
  3159  000D36  6E1E               	movwf	??___ftpack& (0+255),c
  3160  000D38  0E00               	movlw	0
  3161  000D3A  141A               	andwf	___ftpack@arg+1,w,c
  3162  000D3C  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  3163  000D3E  0EFE               	movlw	254
  3164  000D40  141B               	andwf	___ftpack@arg+2,w,c
  3165  000D42  6E20               	movwf	(??___ftpack+2)& (0+255),c
  3166  000D44  501E               	movf	??___ftpack,w,c
  3167  000D46  101F               	iorwf	??___ftpack+1,w,c
  3168  000D48  1020               	iorwf	??___ftpack+2,w,c
  3169  000D4A  B4D8               	btfsc	status,2,c
  3170  000D4C  D00E               	goto	l3399
  3171  000D4E  D7EB               	goto	l3391
  3172  000D50  D00C               	goto	l3399
  3173  000D52                     l3395:
  3174  000D52  2A1C               	incf	___ftpack@exp,f,c
  3175  000D54  0E01               	movlw	1
  3176  000D56  2619               	addwf	___ftpack@arg,f,c
  3177  000D58  0E00               	movlw	0
  3178  000D5A  221A               	addwfc	___ftpack@arg+1,f,c
  3179  000D5C  0E00               	movlw	0
  3180  000D5E  221B               	addwfc	___ftpack@arg+2,f,c
  3181  000D60  90D8               	bcf	status,0,c
  3182  000D62  321B               	rrcf	___ftpack@arg+2,f,c
  3183  000D64  321A               	rrcf	___ftpack@arg+1,f,c
  3184  000D66  3219               	rrcf	___ftpack@arg,f,c
  3185  000D68  D000               	goto	l3399
  3186  000D6A                     l3399:
  3187  000D6A  0E00               	movlw	0
  3188  000D6C  1419               	andwf	___ftpack@arg,w,c
  3189  000D6E  6E1E               	movwf	??___ftpack& (0+255),c
  3190  000D70  0E00               	movlw	0
  3191  000D72  141A               	andwf	___ftpack@arg+1,w,c
  3192  000D74  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  3193  000D76  0EFF               	movlw	255
  3194  000D78  141B               	andwf	___ftpack@arg+2,w,c
  3195  000D7A  6E20               	movwf	(??___ftpack+2)& (0+255),c
  3196  000D7C  501E               	movf	??___ftpack,w,c
  3197  000D7E  101F               	iorwf	??___ftpack+1,w,c
  3198  000D80  1020               	iorwf	??___ftpack+2,w,c
  3199  000D82  B4D8               	btfsc	status,2,c
  3200  000D84  D008               	goto	l3403
  3201  000D86  D7E5               	goto	l3395
  3202  000D88  D006               	goto	l3403
  3203  000D8A                     l3401:
  3204  000D8A  061C               	decf	___ftpack@exp,f,c
  3205  000D8C  90D8               	bcf	status,0,c
  3206  000D8E  3619               	rlcf	___ftpack@arg,f,c
  3207  000D90  361A               	rlcf	___ftpack@arg+1,f,c
  3208  000D92  361B               	rlcf	___ftpack@arg+2,f,c
  3209  000D94  D000               	goto	l3403
  3210  000D96                     l3403:
  3211  000D96  BE1A               	btfsc	___ftpack@arg+1,7,c
  3212  000D98  D004               	goto	l973
  3213  000D9A  0E02               	movlw	2
  3214  000D9C  601C               	cpfslt	___ftpack@exp,c
  3215  000D9E  D7F5               	goto	l3401
  3216  000DA0  D000               	goto	l973
  3217  000DA2                     l973:
  3218  000DA2  B01C               	btfsc	___ftpack@exp,0,c
  3219  000DA4  D002               	goto	l3409
  3220  000DA6  9E1A               	bcf	___ftpack@arg+1,7,c
  3221  000DA8  D000               	goto	l3409
  3222  000DAA                     l3409:
  3223  000DAA  90D8               	bcf	status,0,c
  3224  000DAC  321C               	rrcf	___ftpack@exp,f,c
  3225  000DAE  501C               	movf	___ftpack@exp,w,c
  3226  000DB0  121B               	iorwf	___ftpack@arg+2,f,c
  3227  000DB2  501D               	movf	___ftpack@sign,w,c
  3228  000DB4  B4D8               	btfsc	status,2,c
  3229  000DB6  D002               	goto	l3415
  3230  000DB8  8E1B               	bsf	___ftpack@arg+2,7,c
  3231  000DBA  D000               	goto	l3415
  3232  000DBC                     l3415:
  3233  000DBC  C019  F019         	movff	___ftpack@arg,?___ftpack
  3234  000DC0  C01A  F01A         	movff	___ftpack@arg+1,?___ftpack+1
  3235  000DC4  C01B  F01B         	movff	___ftpack@arg+2,?___ftpack+2
  3236  000DC8  0012               	return	
  3237  000DCA  0012               	return		;funcret
  3238  000DCC                     __end_of___ftpack:
  3239                           	opt stack 0
  3240                           tblptru	equ	0xFF8
  3241                           tblptrh	equ	0xFF7
  3242                           tblptrl	equ	0xFF6
  3243                           tablat	equ	0xFF5
  3244                           prodh	equ	0xFF4
  3245                           prodl	equ	0xFF3
  3246                           intcon	equ	0xFF2
  3247                           postinc0	equ	0xFEE
  3248                           wreg	equ	0xFE8
  3249                           postdec1	equ	0xFE5
  3250                           fsr1l	equ	0xFE1
  3251                           indf2	equ	0xFDF
  3252                           postinc2	equ	0xFDE
  3253                           fsr2h	equ	0xFDA
  3254                           fsr2l	equ	0xFD9
  3255                           status	equ	0xFD8
  3256                           
  3257 ;; *************** function _ReadADC *****************
  3258 ;; Defined at:
  3259 ;;		line 24 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;		None
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;		None
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  2   24[COMRAM] int 
  3266 ;; Registers used:
  3267 ;;		wreg, status,2
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3273 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3275 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3276 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3277 ;;Total ram usage:        4 bytes
  3278 ;; Hardware stack levels used:    1
  3279 ;; Hardware stack levels required when called:    3
  3280 ;; This function calls:
  3281 ;;		Nothing
  3282 ;; This function is called by:
  3283 ;;		_GetADC6
  3284 ;; This function uses a non-reentrant model
  3285 ;;
  3286                           
  3287                           	psect	text21
  3288  001856                     __ptext21:
  3289                           	opt stack 0
  3290  001856                     _ReadADC:
  3291                           	opt stack 25
  3292                           
  3293                           ;incstack = 0
  3294  001856  50C4               	movf	4036,w,c	;volatile
  3295  001858  6E1B               	movwf	??_ReadADC& (0+255),c
  3296  00185A  50C3               	movf	4035,w,c	;volatile
  3297  00185C  6E19               	movwf	?_ReadADC,c
  3298  00185E  C01B  F01A         	movff	??_ReadADC,?_ReadADC+1
  3299  001862  0012               	return	
  3300  001864  0012               	return		;funcret
  3301  001866                     __end_of_ReadADC:
  3302                           	opt stack 0
  3303                           tblptru	equ	0xFF8
  3304                           tblptrh	equ	0xFF7
  3305                           tblptrl	equ	0xFF6
  3306                           tablat	equ	0xFF5
  3307                           prodh	equ	0xFF4
  3308                           prodl	equ	0xFF3
  3309                           intcon	equ	0xFF2
  3310                           postinc0	equ	0xFEE
  3311                           wreg	equ	0xFE8
  3312                           postdec1	equ	0xFE5
  3313                           fsr1l	equ	0xFE1
  3314                           indf2	equ	0xFDF
  3315                           postinc2	equ	0xFDE
  3316                           fsr2h	equ	0xFDA
  3317                           fsr2l	equ	0xFD9
  3318                           status	equ	0xFD8
  3319                           
  3320 ;; *************** function _ConvertADC *****************
  3321 ;; Defined at:
  3322 ;;		line 22 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;		None
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;		None
  3327 ;; Return value:  Size  Location     Type
  3328 ;;		None               void
  3329 ;; Registers used:
  3330 ;;		None
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 0/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3340 ;;Total ram usage:        0 bytes
  3341 ;; Hardware stack levels used:    1
  3342 ;; Hardware stack levels required when called:    3
  3343 ;; This function calls:
  3344 ;;		Nothing
  3345 ;; This function is called by:
  3346 ;;		_GetADC6
  3347 ;; This function uses a non-reentrant model
  3348 ;;
  3349                           
  3350                           	psect	text22
  3351  00188E                     __ptext22:
  3352                           	opt stack 0
  3353  00188E                     _ConvertADC:
  3354                           	opt stack 25
  3355                           
  3356                           ;incstack = 0
  3357  00188E  82C2               	bsf	4034,1,c	;volatile
  3358  001890  0012               	return		;funcret
  3359  001892                     __end_of_ConvertADC:
  3360                           	opt stack 0
  3361                           tblptru	equ	0xFF8
  3362                           tblptrh	equ	0xFF7
  3363                           tblptrl	equ	0xFF6
  3364                           tablat	equ	0xFF5
  3365                           prodh	equ	0xFF4
  3366                           prodl	equ	0xFF3
  3367                           intcon	equ	0xFF2
  3368                           postinc0	equ	0xFEE
  3369                           wreg	equ	0xFE8
  3370                           postdec1	equ	0xFE5
  3371                           fsr1l	equ	0xFE1
  3372                           indf2	equ	0xFDF
  3373                           postinc2	equ	0xFDE
  3374                           fsr2h	equ	0xFDA
  3375                           fsr2l	equ	0xFD9
  3376                           status	equ	0xFD8
  3377                           
  3378 ;; *************** function _BusyADC *****************
  3379 ;; Defined at:
  3380 ;;		line 26 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;		None
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;		None
  3385 ;; Return value:  Size  Location     Type
  3386 ;;                  1    wreg      unsigned char 
  3387 ;; Registers used:
  3388 ;;		wreg
  3389 ;; Tracked objects:
  3390 ;;		On entry : 0/0
  3391 ;;		On exit  : 0/0
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3398 ;;Total ram usage:        0 bytes
  3399 ;; Hardware stack levels used:    1
  3400 ;; Hardware stack levels required when called:    3
  3401 ;; This function calls:
  3402 ;;		Nothing
  3403 ;; This function is called by:
  3404 ;;		_GetADC6
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           	psect	text23
  3409  001866                     __ptext23:
  3410                           	opt stack 0
  3411  001866                     _BusyADC:
  3412                           	opt stack 25
  3413                           
  3414                           ;incstack = 0
  3415  001866  A2C2               	btfss	4034,1,c	;volatile
  3416  001868  D002               	goto	u2220
  3417  00186A  0E01               	movlw	1
  3418  00186C  0012               	return	
  3419  00186E                     u2220:
  3420  00186E  0E00               	movlw	0
  3421  001870  0012               	return	
  3422  001872  0012               	return		;funcret
  3423  001874                     __end_of_BusyADC:
  3424                           	opt stack 0
  3425                           tblptru	equ	0xFF8
  3426                           tblptrh	equ	0xFF7
  3427                           tblptrl	equ	0xFF6
  3428                           tablat	equ	0xFF5
  3429                           prodh	equ	0xFF4
  3430                           prodl	equ	0xFF3
  3431                           intcon	equ	0xFF2
  3432                           postinc0	equ	0xFEE
  3433                           wreg	equ	0xFE8
  3434                           postdec1	equ	0xFE5
  3435                           fsr1l	equ	0xFE1
  3436                           indf2	equ	0xFDF
  3437                           postinc2	equ	0xFDE
  3438                           fsr2h	equ	0xFDA
  3439                           fsr2l	equ	0xFD9
  3440                           status	equ	0xFD8
  3441                           
  3442 ;; *************** function _Relay_Init *****************
  3443 ;; Defined at:
  3444 ;;		line 39 in file "_01_USER/Relay.c"
  3445 ;; Parameters:    Size  Location     Type
  3446 ;;		None
  3447 ;; Auto vars:     Size  Location     Type
  3448 ;;		None
  3449 ;; Return value:  Size  Location     Type
  3450 ;;		None               void
  3451 ;; Registers used:
  3452 ;;		None
  3453 ;; Tracked objects:
  3454 ;;		On entry : 0/0
  3455 ;;		On exit  : 0/0
  3456 ;;		Unchanged: 0/0
  3457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3462 ;;Total ram usage:        0 bytes
  3463 ;; Hardware stack levels used:    1
  3464 ;; Hardware stack levels required when called:    3
  3465 ;; This function calls:
  3466 ;;		Nothing
  3467 ;; This function is called by:
  3468 ;;		_main
  3469 ;; This function uses a non-reentrant model
  3470 ;;
  3471                           
  3472                           	psect	text24
  3473  001874                     __ptext24:
  3474                           	opt stack 0
  3475  001874                     _Relay_Init:
  3476                           	opt stack 27
  3477                           
  3478                           ;Relay.c: 42: TRISD0 = 0;
  3479                           
  3480                           ;incstack = 0
  3481  001874  9095               	bcf	3989,0,c	;volatile
  3482                           
  3483                           ;Relay.c: 43: TRISD1 = 0;
  3484  001876  9295               	bcf	3989,1,c	;volatile
  3485                           
  3486                           ;Relay.c: 44: TRISD2 = 0;
  3487  001878  9495               	bcf	3989,2,c	;volatile
  3488                           
  3489                           ;Relay.c: 45: TRISD3 = 0;
  3490  00187A  9695               	bcf	3989,3,c	;volatile
  3491                           
  3492                           ;Relay.c: 46: TRISD4 = 0;
  3493  00187C  9895               	bcf	3989,4,c	;volatile
  3494                           
  3495                           ;Relay.c: 47: TRISD7 = 0;
  3496  00187E  9E95               	bcf	3989,7,c	;volatile
  3497  001880  0012               	return		;funcret
  3498  001882                     __end_of_Relay_Init:
  3499                           	opt stack 0
  3500                           tblptru	equ	0xFF8
  3501                           tblptrh	equ	0xFF7
  3502                           tblptrl	equ	0xFF6
  3503                           tablat	equ	0xFF5
  3504                           prodh	equ	0xFF4
  3505                           prodl	equ	0xFF3
  3506                           intcon	equ	0xFF2
  3507                           postinc0	equ	0xFEE
  3508                           wreg	equ	0xFE8
  3509                           postdec1	equ	0xFE5
  3510                           fsr1l	equ	0xFE1
  3511                           indf2	equ	0xFDF
  3512                           postinc2	equ	0xFDE
  3513                           fsr2h	equ	0xFDA
  3514                           fsr2l	equ	0xFD9
  3515                           status	equ	0xFD8
  3516                           
  3517 ;; *************** function _RS485_Init *****************
  3518 ;; Defined at:
  3519 ;;		line 46 in file "_01_USER/My_USART.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;		None
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;		None
  3524 ;; Return value:  Size  Location     Type
  3525 ;;		None               void
  3526 ;; Registers used:
  3527 ;;		wreg, status,2, cstack
  3528 ;; Tracked objects:
  3529 ;;		On entry : 0/0
  3530 ;;		On exit  : 0/0
  3531 ;;		Unchanged: 0/0
  3532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3537 ;;Total ram usage:        0 bytes
  3538 ;; Hardware stack levels used:    1
  3539 ;; Hardware stack levels required when called:    4
  3540 ;; This function calls:
  3541 ;;		_Open1USART
  3542 ;; This function is called by:
  3543 ;;		_main
  3544 ;; This function uses a non-reentrant model
  3545 ;;
  3546                           
  3547                           	psect	text25
  3548  00181C                     __ptext25:
  3549                           	opt stack 0
  3550  00181C                     _RS485_Init:
  3551                           	opt stack 26
  3552                           
  3553                           ;My_USART.c: 48: Open1USART( 0b01111111 &
  3554                           ;My_USART.c: 49: 0b11111111 &
  3555                           ;My_USART.c: 50: 0b11111110 &
  3556                           ;My_USART.c: 51: 0b11111101 &
  3557                           ;My_USART.c: 52: 0b11111111 &
  3558                           ;My_USART.c: 53: 0b11101111
  3559                           ;My_USART.c: 54: ,
  3560                           ;My_USART.c: 55: 12
  3561                           ;My_USART.c: 56: );
  3562                           
  3563                           ;incstack = 0
  3564  00181C  0E00               	movlw	0
  3565  00181E  6E1A               	movwf	Open1USART@spbrg+1,c
  3566  001820  0E0C               	movlw	12
  3567  001822  6E19               	movwf	Open1USART@spbrg,c
  3568  001824  0E6C               	movlw	108
  3569  001826  ECF0  F008         	call	_Open1USART
  3570                           
  3571                           ;My_USART.c: 58: TRISC7 = 1;
  3572  00182A  8E94               	bsf	3988,7,c	;volatile
  3573                           
  3574                           ;My_USART.c: 59: TRISC6 = 0;
  3575  00182C  9C94               	bcf	3988,6,c	;volatile
  3576                           
  3577                           ;My_USART.c: 60: TRISC0 = 0;
  3578  00182E  9094               	bcf	3988,0,c	;volatile
  3579                           
  3580                           ;My_USART.c: 61: RC0 = 1;
  3581  001830  8082               	bsf	3970,0,c	;volatile
  3582  001832  0012               	return		;funcret
  3583  001834                     __end_of_RS485_Init:
  3584                           	opt stack 0
  3585                           tblptru	equ	0xFF8
  3586                           tblptrh	equ	0xFF7
  3587                           tblptrl	equ	0xFF6
  3588                           tablat	equ	0xFF5
  3589                           prodh	equ	0xFF4
  3590                           prodl	equ	0xFF3
  3591                           intcon	equ	0xFF2
  3592                           postinc0	equ	0xFEE
  3593                           wreg	equ	0xFE8
  3594                           postdec1	equ	0xFE5
  3595                           fsr1l	equ	0xFE1
  3596                           indf2	equ	0xFDF
  3597                           postinc2	equ	0xFDE
  3598                           fsr2h	equ	0xFDA
  3599                           fsr2l	equ	0xFD9
  3600                           status	equ	0xFD8
  3601                           
  3602 ;; *************** function _Open1USART *****************
  3603 ;; Defined at:
  3604 ;;		line 124 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1open.c"
  3605 ;; Parameters:    Size  Location     Type
  3606 ;;  config          1    wreg     unsigned char 
  3607 ;;  spbrg           2   24[COMRAM] unsigned int 
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;  config          1   26[COMRAM] unsigned char 
  3610 ;; Return value:  Size  Location     Type
  3611 ;;		None               void
  3612 ;; Registers used:
  3613 ;;		wreg, status,2
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3619 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3620 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3622 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3623 ;;Total ram usage:        3 bytes
  3624 ;; Hardware stack levels used:    1
  3625 ;; Hardware stack levels required when called:    3
  3626 ;; This function calls:
  3627 ;;		Nothing
  3628 ;; This function is called by:
  3629 ;;		_RS485_Init
  3630 ;; This function uses a non-reentrant model
  3631 ;;
  3632                           
  3633                           	psect	text26
  3634  0011E0                     __ptext26:
  3635                           	opt stack 0
  3636  0011E0                     _Open1USART:
  3637                           	opt stack 26
  3638                           
  3639                           ;incstack = 0
  3640                           ;Open1USART@config stored from wreg
  3641  0011E0  6E1B               	movwf	Open1USART@config,c
  3642  0011E2  0E00               	movlw	0
  3643  0011E4  6EAC               	movwf	4012,c	;volatile
  3644  0011E6  0E00               	movlw	0
  3645  0011E8  6EAB               	movwf	4011,c	;volatile
  3646  0011EA  A01B               	btfss	Open1USART@config,0,c
  3647  0011EC  D002               	goto	l2777
  3648  0011EE  88AC               	bsf	4012,4,c	;volatile
  3649  0011F0  D000               	goto	l2777
  3650  0011F2                     l2777:
  3651  0011F2  A21B               	btfss	Open1USART@config,1,c
  3652  0011F4  D003               	goto	l2781
  3653  0011F6  8CAC               	bsf	4012,6,c	;volatile
  3654  0011F8  8CAB               	bsf	4011,6,c	;volatile
  3655  0011FA  D000               	goto	l2781
  3656  0011FC                     l2781:
  3657  0011FC  A41B               	btfss	Open1USART@config,2,c
  3658  0011FE  D002               	goto	l2785
  3659  001200  8EAC               	bsf	4012,7,c	;volatile
  3660  001202  D000               	goto	l2785
  3661  001204                     l2785:
  3662  001204  A61B               	btfss	Open1USART@config,3,c
  3663  001206  D002               	goto	l643
  3664  001208  88AB               	bsf	4011,4,c	;volatile
  3665  00120A  D002               	goto	l2789
  3666  00120C                     l643:
  3667  00120C  8AAB               	bsf	4011,5,c	;volatile
  3668  00120E  D000               	goto	l2789
  3669  001210                     l2789:
  3670  001210  A81B               	btfss	Open1USART@config,4,c
  3671  001212  D002               	goto	l2793
  3672  001214  84AC               	bsf	4012,2,c	;volatile
  3673  001216  D000               	goto	l2793
  3674  001218                     l2793:
  3675  001218  AA1B               	btfss	Open1USART@config,5,c
  3676  00121A  D002               	goto	l2797
  3677  00121C  86AB               	bsf	4011,3,c	;volatile
  3678  00121E  D000               	goto	l2797
  3679  001220                     l2797:
  3680  001220  AC1B               	btfss	Open1USART@config,6,c
  3681  001222  D002               	goto	l647
  3682  001224  8A9D               	bsf	3997,5,c	;volatile
  3683  001226  D002               	goto	l2801
  3684  001228                     l647:
  3685  001228  9A9D               	bcf	3997,5,c	;volatile
  3686  00122A  D000               	goto	l2801
  3687  00122C                     l2801:
  3688  00122C  AE1B               	btfss	Open1USART@config,7,c
  3689  00122E  D002               	goto	l649
  3690  001230  889D               	bsf	3997,4,c	;volatile
  3691  001232  D001               	goto	l650
  3692  001234                     l649:
  3693  001234  989D               	bcf	3997,4,c	;volatile
  3694  001236                     l650:
  3695  001236  C019  FFAF         	movff	Open1USART@spbrg,4015	;volatile
  3696  00123A  501A               	movf	Open1USART@spbrg+1,w,c
  3697  00123C  6ED4               	movwf	4052,c	;volatile
  3698  00123E  8AAC               	bsf	4012,5,c	;volatile
  3699  001240  8EAB               	bsf	4011,7,c	;volatile
  3700  001242  0012               	return		;funcret
  3701  001244                     __end_of_Open1USART:
  3702                           	opt stack 0
  3703                           tblptru	equ	0xFF8
  3704                           tblptrh	equ	0xFF7
  3705                           tblptrl	equ	0xFF6
  3706                           tablat	equ	0xFF5
  3707                           prodh	equ	0xFF4
  3708                           prodl	equ	0xFF3
  3709                           intcon	equ	0xFF2
  3710                           postinc0	equ	0xFEE
  3711                           wreg	equ	0xFE8
  3712                           postdec1	equ	0xFE5
  3713                           fsr1l	equ	0xFE1
  3714                           indf2	equ	0xFDF
  3715                           postinc2	equ	0xFDE
  3716                           fsr2h	equ	0xFDA
  3717                           fsr2l	equ	0xFD9
  3718                           status	equ	0xFD8
  3719                           
  3720 ;; *************** function _ManageMessage *****************
  3721 ;; Defined at:
  3722 ;;		line 51 in file "_01_USER/Run.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;		None
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;		None
  3727 ;; Return value:  Size  Location     Type
  3728 ;;		None               void
  3729 ;; Registers used:
  3730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3740 ;;Total ram usage:        0 bytes
  3741 ;; Hardware stack levels used:    1
  3742 ;; Hardware stack levels required when called:    6
  3743 ;; This function calls:
  3744 ;;		_Key_ManageMessage
  3745 ;;		_RS485_ManageMessage
  3746 ;; This function is called by:
  3747 ;;		_main
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751                           	psect	text27
  3752  0017CC                     __ptext27:
  3753                           	opt stack 0
  3754  0017CC                     _ManageMessage:
  3755                           	opt stack 24
  3756                           
  3757                           ;Run.c: 53: Key_ManageMessage();
  3758                           
  3759                           ;incstack = 0
  3760  0017CC  EC87  F003         	call	_Key_ManageMessage	;wreg free
  3761                           
  3762                           ;Run.c: 54: RS485_ManageMessage(ga_RS485_ReceiveBuff,10);
  3763  0017D0  0EDA               	movlw	low _ga_RS485_ReceiveBuff
  3764  0017D2  0101               	movlb	1	; () banked
  3765  0017D4  6F00               	movwf	RS485_ManageMessage@DataBuff& (0+255),b
  3766  0017D6  0E00               	movlw	high _ga_RS485_ReceiveBuff
  3767  0017D8  0101               	movlb	1	; () banked
  3768  0017DA  6F01               	movwf	(RS485_ManageMessage@DataBuff+1)& (0+255),b
  3769  0017DC  0E0A               	movlw	10
  3770  0017DE  0101               	movlb	1	; () banked
  3771  0017E0  6F02               	movwf	RS485_ManageMessage@date_lenth& (0+255),b
  3772  0017E2  ECD3  F000         	call	_RS485_ManageMessage	;wreg free
  3773  0017E6  0012               	return		;funcret
  3774  0017E8                     __end_of_ManageMessage:
  3775                           	opt stack 0
  3776                           tblptru	equ	0xFF8
  3777                           tblptrh	equ	0xFF7
  3778                           tblptrl	equ	0xFF6
  3779                           tablat	equ	0xFF5
  3780                           prodh	equ	0xFF4
  3781                           prodl	equ	0xFF3
  3782                           intcon	equ	0xFF2
  3783                           postinc0	equ	0xFEE
  3784                           wreg	equ	0xFE8
  3785                           postdec1	equ	0xFE5
  3786                           fsr1l	equ	0xFE1
  3787                           indf2	equ	0xFDF
  3788                           postinc2	equ	0xFDE
  3789                           fsr2h	equ	0xFDA
  3790                           fsr2l	equ	0xFD9
  3791                           status	equ	0xFD8
  3792                           
  3793 ;; *************** function _RS485_ManageMessage *****************
  3794 ;; Defined at:
  3795 ;;		line 113 in file "_01_USER/My_USART.c"
  3796 ;; Parameters:    Size  Location     Type
  3797 ;;  DataBuff        2    0[BANK1 ] PTR unsigned char 
  3798 ;;		 -> ga_RS485_ReceiveBuff(10), 
  3799 ;;  date_lenth      1    2[BANK1 ] unsigned char 
  3800 ;; Auto vars:     Size  Location     Type
  3801 ;;  from_dress      1   10[BANK1 ] unsigned char 
  3802 ;;  CRC_L           1    9[BANK1 ] unsigned char 
  3803 ;;  CRC_H           1    8[BANK1 ] unsigned char 
  3804 ;; Return value:  Size  Location     Type
  3805 ;;                  1    wreg      unsigned char 
  3806 ;; Registers used:
  3807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3808 ;; Tracked objects:
  3809 ;;		On entry : 0/0
  3810 ;;		On exit  : 0/0
  3811 ;;		Unchanged: 0/0
  3812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3813 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3814 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3815 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3816 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3817 ;;Total ram usage:       11 bytes
  3818 ;; Hardware stack levels used:    1
  3819 ;; Hardware stack levels required when called:    5
  3820 ;; This function calls:
  3821 ;;		_VerifyCRC
  3822 ;; This function is called by:
  3823 ;;		_ManageMessage
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           	psect	text28
  3828  0001A6                     __ptext28:
  3829                           	opt stack 0
  3830  0001A6                     _RS485_ManageMessage:
  3831                           	opt stack 24
  3832                           
  3833                           ;My_USART.c: 115: unsigned char CRC_H,CRC_L,from_dress;
  3834                           ;My_USART.c: 116: if( g_RS485_Receive_Flag == 1 )
  3835                           
  3836                           ;incstack = 0
  3837  0001A6  0440               	decf	_g_RS485_Receive_Flag,w,c
  3838  0001A8  A4D8               	btfss	status,2,c
  3839  0001AA  0012               	return	
  3840                           
  3841                           ;My_USART.c: 117: {
  3842                           ;My_USART.c: 120: if( DataBuff [date_lenth-1] != 0xaa) { g_RS485_Receive_Flag = 0; retur
      +                          n 1;}
  3843  0001AC  0EFF               	movlw	255
  3844  0001AE  0101               	movlb	1	; () banked
  3845  0001B0  6F03               	movwf	??_RS485_ManageMessage& (0+255),b
  3846  0001B2  0EFF               	movlw	255
  3847  0001B4  0101               	movlb	1	; () banked
  3848  0001B6  6F04               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  3849  0001B8  0101               	movlb	1	; () banked
  3850  0001BA  5102               	movf	RS485_ManageMessage@date_lenth& (0+255),w,b
  3851  0001BC  0101               	movlb	1	; () banked
  3852  0001BE  6F05               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  3853  0001C0  6B06               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  3854  0001C2  0101               	movlb	1	; () banked
  3855  0001C4  5103               	movf	??_RS485_ManageMessage& (0+255),w,b
  3856  0001C6  0101               	movlb	1	; () banked
  3857  0001C8  2705               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  3858  0001CA  0101               	movlb	1	; () banked
  3859  0001CC  5104               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  3860  0001CE  0101               	movlb	1	; () banked
  3861  0001D0  2306               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  3862  0001D2  0101               	movlb	1	; () banked
  3863  0001D4  5105               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  3864  0001D6  0101               	movlb	1	; () banked
  3865  0001D8  2500               	addwf	RS485_ManageMessage@DataBuff& (0+255),w,b
  3866  0001DA  6ED9               	movwf	fsr2l,c
  3867  0001DC  0101               	movlb	1	; () banked
  3868  0001DE  5106               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  3869  0001E0  0101               	movlb	1	; () banked
  3870  0001E2  2101               	addwfc	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  3871  0001E4  6EDA               	movwf	fsr2h,c
  3872  0001E6  0EAA               	movlw	170
  3873  0001E8  18DE               	xorwf	postinc2,w,c
  3874  0001EA  B4D8               	btfsc	status,2,c
  3875  0001EC  D003               	goto	l3591
  3876                           
  3877                           ; BSR set to: 1
  3878  0001EE  0E00               	movlw	0
  3879  0001F0  6E40               	movwf	_g_RS485_Receive_Flag,c
  3880                           
  3881                           ; BSR set to: 1
  3882                           ;	Return value of _RS485_ManageMessage is never used
  3883  0001F2  0012               	return	
  3884  0001F4                     l3591:
  3885                           
  3886                           ; BSR set to: 1
  3887                           ;My_USART.c: 123: CRC_H = DataBuff[1];
  3888  0001F4  0101               	movlb	1	; () banked
  3889  0001F6  EE20 F001          	lfsr	2,1
  3890  0001FA  5100               	movf	RS485_ManageMessage@DataBuff& (0+255),w,b
  3891  0001FC  26D9               	addwf	fsr2l,f,c
  3892  0001FE  5101               	movf	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  3893  000200  22DA               	addwfc	fsr2h,f,c
  3894  000202  50DF               	movf	indf2,w,c
  3895  000204  0101               	movlb	1	; () banked
  3896  000206  6F08               	movwf	RS485_ManageMessage@CRC_H& (0+255),b
  3897                           
  3898                           ; BSR set to: 1
  3899                           ;My_USART.c: 124: CRC_L = DataBuff[0];
  3900  000208  C100  FFD9         	movff	RS485_ManageMessage@DataBuff,fsr2l
  3901  00020C  C101  FFDA         	movff	RS485_ManageMessage@DataBuff+1,fsr2h
  3902  000210  50DF               	movf	indf2,w,c
  3903  000212  0101               	movlb	1	; () banked
  3904  000214  6F09               	movwf	RS485_ManageMessage@CRC_L& (0+255),b
  3905                           
  3906                           ; BSR set to: 1
  3907                           ;My_USART.c: 125: VerifyCRC(DataBuff,10);
  3908  000216  C100  F026         	movff	RS485_ManageMessage@DataBuff,VerifyCRC@DataBuff
  3909  00021A  C101  F027         	movff	RS485_ManageMessage@DataBuff+1,VerifyCRC@DataBuff+1
  3910  00021E  0E0A               	movlw	10
  3911  000220  6E28               	movwf	VerifyCRC@date_lenth,c
  3912  000222  ECEF  F004         	call	_VerifyCRC	;wreg free
  3913                           
  3914                           ;My_USART.c: 126: if( DataBuff[1] != CRC_H ) { g_RS485_Receive_Flag = 0; return 2 ;}
  3915  000226  0101               	movlb	1	; () banked
  3916  000228  EE20 F001          	lfsr	2,1
  3917  00022C  5100               	movf	RS485_ManageMessage@DataBuff& (0+255),w,b
  3918  00022E  26D9               	addwf	fsr2l,f,c
  3919  000230  5101               	movf	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  3920  000232  22DA               	addwfc	fsr2h,f,c
  3921  000234  0101               	movlb	1	; () banked
  3922  000236  5108               	movf	RS485_ManageMessage@CRC_H& (0+255),w,b
  3923  000238  18DE               	xorwf	postinc2,w,c
  3924  00023A  B4D8               	btfsc	status,2,c
  3925  00023C  D003               	goto	l3603
  3926                           
  3927                           ; BSR set to: 1
  3928  00023E  0E00               	movlw	0
  3929  000240  6E40               	movwf	_g_RS485_Receive_Flag,c
  3930                           
  3931                           ; BSR set to: 1
  3932                           ;	Return value of _RS485_ManageMessage is never used
  3933  000242  0012               	return	
  3934  000244                     l3603:
  3935                           
  3936                           ; BSR set to: 1
  3937                           ;My_USART.c: 127: if( DataBuff[0] != CRC_L ) { g_RS485_Receive_Flag = 0; return 2 ;}
  3938  000244  C100  FFD9         	movff	RS485_ManageMessage@DataBuff,fsr2l
  3939  000248  C101  FFDA         	movff	RS485_ManageMessage@DataBuff+1,fsr2h
  3940  00024C  0101               	movlb	1	; () banked
  3941  00024E  5109               	movf	RS485_ManageMessage@CRC_L& (0+255),w,b
  3942  000250  18DE               	xorwf	postinc2,w,c
  3943  000252  B4D8               	btfsc	status,2,c
  3944  000254  D003               	goto	l3609
  3945                           
  3946                           ; BSR set to: 1
  3947  000256  0E00               	movlw	0
  3948  000258  6E40               	movwf	_g_RS485_Receive_Flag,c
  3949                           
  3950                           ; BSR set to: 1
  3951                           ;	Return value of _RS485_ManageMessage is never used
  3952  00025A  0012               	return	
  3953  00025C                     l3609:
  3954                           
  3955                           ; BSR set to: 1
  3956                           ;My_USART.c: 130: if( ( DataBuff[date_lenth - 2] != Address_Master ) && ( DataBuff[date_
      +                          lenth - 2] != Address_All) ) { g_RS485_Receive_Flag = 0; return 3;}
  3957  00025C  0EFE               	movlw	254
  3958  00025E  0101               	movlb	1	; () banked
  3959  000260  6F03               	movwf	??_RS485_ManageMessage& (0+255),b
  3960  000262  0EFF               	movlw	255
  3961  000264  0101               	movlb	1	; () banked
  3962  000266  6F04               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  3963  000268  0101               	movlb	1	; () banked
  3964  00026A  5102               	movf	RS485_ManageMessage@date_lenth& (0+255),w,b
  3965  00026C  0101               	movlb	1	; () banked
  3966  00026E  6F05               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  3967  000270  6B06               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  3968  000272  0101               	movlb	1	; () banked
  3969  000274  5103               	movf	??_RS485_ManageMessage& (0+255),w,b
  3970  000276  0101               	movlb	1	; () banked
  3971  000278  2705               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  3972  00027A  0101               	movlb	1	; () banked
  3973  00027C  5104               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  3974  00027E  0101               	movlb	1	; () banked
  3975  000280  2306               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  3976  000282  0101               	movlb	1	; () banked
  3977  000284  5105               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  3978  000286  0101               	movlb	1	; () banked
  3979  000288  2500               	addwf	RS485_ManageMessage@DataBuff& (0+255),w,b
  3980  00028A  6ED9               	movwf	fsr2l,c
  3981  00028C  0101               	movlb	1	; () banked
  3982  00028E  5106               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  3983  000290  0101               	movlb	1	; () banked
  3984  000292  2101               	addwfc	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  3985  000294  6EDA               	movwf	fsr2h,c
  3986  000296  04DE               	decf	postinc2,w,c
  3987  000298  B4D8               	btfsc	status,2,c
  3988  00029A  D023               	goto	l3617
  3989                           
  3990                           ; BSR set to: 1
  3991  00029C  0EFE               	movlw	254
  3992  00029E  0101               	movlb	1	; () banked
  3993  0002A0  6F03               	movwf	??_RS485_ManageMessage& (0+255),b
  3994  0002A2  0EFF               	movlw	255
  3995  0002A4  0101               	movlb	1	; () banked
  3996  0002A6  6F04               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  3997  0002A8  0101               	movlb	1	; () banked
  3998  0002AA  5102               	movf	RS485_ManageMessage@date_lenth& (0+255),w,b
  3999  0002AC  0101               	movlb	1	; () banked
  4000  0002AE  6F05               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  4001  0002B0  6B06               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  4002  0002B2  0101               	movlb	1	; () banked
  4003  0002B4  5103               	movf	??_RS485_ManageMessage& (0+255),w,b
  4004  0002B6  0101               	movlb	1	; () banked
  4005  0002B8  2705               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  4006  0002BA  0101               	movlb	1	; () banked
  4007  0002BC  5104               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  4008  0002BE  0101               	movlb	1	; () banked
  4009  0002C0  2306               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  4010  0002C2  0101               	movlb	1	; () banked
  4011  0002C4  5105               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  4012  0002C6  0101               	movlb	1	; () banked
  4013  0002C8  2500               	addwf	RS485_ManageMessage@DataBuff& (0+255),w,b
  4014  0002CA  6ED9               	movwf	fsr2l,c
  4015  0002CC  0101               	movlb	1	; () banked
  4016  0002CE  5106               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  4017  0002D0  0101               	movlb	1	; () banked
  4018  0002D2  2101               	addwfc	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  4019  0002D4  6EDA               	movwf	fsr2h,c
  4020  0002D6  50DF               	movf	indf2,w,c
  4021  0002D8  B4D8               	btfsc	status,2,c
  4022  0002DA  D003               	goto	l3617
  4023                           
  4024                           ; BSR set to: 1
  4025  0002DC  0E00               	movlw	0
  4026  0002DE  6E40               	movwf	_g_RS485_Receive_Flag,c
  4027                           
  4028                           ; BSR set to: 1
  4029                           ;	Return value of _RS485_ManageMessage is never used
  4030  0002E0  0012               	return	
  4031  0002E2                     l3617:
  4032                           
  4033                           ; BSR set to: 1
  4034                           ;My_USART.c: 133: from_dress = DataBuff[date_lenth - 3];
  4035  0002E2  0EFD               	movlw	253
  4036  0002E4  0101               	movlb	1	; () banked
  4037  0002E6  6F03               	movwf	??_RS485_ManageMessage& (0+255),b
  4038  0002E8  0EFF               	movlw	255
  4039  0002EA  0101               	movlb	1	; () banked
  4040  0002EC  6F04               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  4041  0002EE  0101               	movlb	1	; () banked
  4042  0002F0  5102               	movf	RS485_ManageMessage@date_lenth& (0+255),w,b
  4043  0002F2  0101               	movlb	1	; () banked
  4044  0002F4  6F05               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  4045  0002F6  6B06               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  4046  0002F8  0101               	movlb	1	; () banked
  4047  0002FA  5103               	movf	??_RS485_ManageMessage& (0+255),w,b
  4048  0002FC  0101               	movlb	1	; () banked
  4049  0002FE  2705               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  4050  000300  0101               	movlb	1	; () banked
  4051  000302  5104               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  4052  000304  0101               	movlb	1	; () banked
  4053  000306  2306               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  4054  000308  0101               	movlb	1	; () banked
  4055  00030A  5105               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  4056  00030C  0101               	movlb	1	; () banked
  4057  00030E  2500               	addwf	RS485_ManageMessage@DataBuff& (0+255),w,b
  4058  000310  6ED9               	movwf	fsr2l,c
  4059  000312  0101               	movlb	1	; () banked
  4060  000314  5106               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  4061  000316  0101               	movlb	1	; () banked
  4062  000318  2101               	addwfc	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  4063  00031A  6EDA               	movwf	fsr2h,c
  4064  00031C  50DF               	movf	indf2,w,c
  4065  00031E  0101               	movlb	1	; () banked
  4066  000320  6F0A               	movwf	RS485_ManageMessage@from_dress& (0+255),b
  4067                           
  4068                           ; BSR set to: 1
  4069                           ;My_USART.c: 134: if( from_dress < 0x10 ) gsa_Msg[from_dress].Hardware_Type = Type_HANDL
      +                          E;
  4070  000322  0E10               	movlw	16
  4071  000324  0101               	movlb	1	; () banked
  4072  000326  610A               	cpfslt	RS485_ManageMessage@from_dress& (0+255),b
  4073  000328  D00F               	goto	l3623
  4074                           
  4075                           ; BSR set to: 1
  4076  00032A  0101               	movlb	1	; () banked
  4077  00032C  510A               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  4078  00032E  0D07               	mullw	7
  4079  000330  0E05               	movlw	5
  4080  000332  26F3               	addwf	prodl,f,c
  4081  000334  0E00               	movlw	0
  4082  000336  22F4               	addwfc	prodh,f,c
  4083  000338  0E6A               	movlw	low _gsa_Msg
  4084  00033A  24F3               	addwf	prodl,w,c
  4085  00033C  6ED9               	movwf	fsr2l,c
  4086  00033E  0E00               	movlw	high _gsa_Msg
  4087  000340  20F4               	addwfc	prodh,w,c
  4088  000342  6EDA               	movwf	fsr2h,c
  4089  000344  0E00               	movlw	0
  4090  000346  D025               	goto	L5
  4091  000348                     l3623:
  4092                           
  4093                           ; BSR set to: 1
  4094                           ;My_USART.c: 135: else if( from_dress < 0x20 ) gsa_Msg[from_dress].Hardware_Type = Type_
      +                          MASTER;
  4095  000348  0E20               	movlw	32
  4096  00034A  0101               	movlb	1	; () banked
  4097  00034C  610A               	cpfslt	RS485_ManageMessage@from_dress& (0+255),b
  4098  00034E  D00F               	goto	l3627
  4099                           
  4100                           ; BSR set to: 1
  4101  000350  0101               	movlb	1	; () banked
  4102  000352  510A               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  4103  000354  0D07               	mullw	7
  4104  000356  0E05               	movlw	5
  4105  000358  26F3               	addwf	prodl,f,c
  4106  00035A  0E00               	movlw	0
  4107  00035C  22F4               	addwfc	prodh,f,c
  4108  00035E  0E6A               	movlw	low _gsa_Msg
  4109  000360  24F3               	addwf	prodl,w,c
  4110  000362  6ED9               	movwf	fsr2l,c
  4111  000364  0E00               	movlw	high _gsa_Msg
  4112  000366  20F4               	addwfc	prodh,w,c
  4113  000368  6EDA               	movwf	fsr2h,c
  4114  00036A  0E01               	movlw	1
  4115  00036C  D012               	goto	L5
  4116  00036E                     l3627:
  4117                           
  4118                           ; BSR set to: 1
  4119                           ;My_USART.c: 136: else if( from_dress < 0x30 ) gsa_Msg[from_dress].Hardware_Type = Type_
      +                          SENSOR;
  4120  00036E  0E30               	movlw	48
  4121  000370  0101               	movlb	1	; () banked
  4122  000372  610A               	cpfslt	RS485_ManageMessage@from_dress& (0+255),b
  4123  000374  D010               	goto	l3631
  4124                           
  4125                           ; BSR set to: 1
  4126  000376  0101               	movlb	1	; () banked
  4127  000378  510A               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  4128  00037A  0D07               	mullw	7
  4129  00037C  0E05               	movlw	5
  4130  00037E  26F3               	addwf	prodl,f,c
  4131  000380  0E00               	movlw	0
  4132  000382  22F4               	addwfc	prodh,f,c
  4133  000384  0E6A               	movlw	low _gsa_Msg
  4134  000386  24F3               	addwf	prodl,w,c
  4135  000388  6ED9               	movwf	fsr2l,c
  4136  00038A  0E00               	movlw	high _gsa_Msg
  4137  00038C  20F4               	addwfc	prodh,w,c
  4138  00038E  6EDA               	movwf	fsr2h,c
  4139  000390  0E02               	movlw	2
  4140  000392                     L5:
  4141  000392  6EDF               	movwf	indf2,c
  4142                           
  4143                           ; BSR set to: 1
  4144                           
  4145                           ; BSR set to: 1
  4146  000394  D000               	goto	l3631
  4147  000396                     l3631:
  4148                           
  4149                           ; BSR set to: 1
  4150                           ;My_USART.c: 139: gsa_Msg[from_dress].Order = DataBuff[date_lenth - 4];
  4151  000396  0EFC               	movlw	252
  4152  000398  0101               	movlb	1	; () banked
  4153  00039A  6F03               	movwf	??_RS485_ManageMessage& (0+255),b
  4154  00039C  0EFF               	movlw	255
  4155  00039E  0101               	movlb	1	; () banked
  4156  0003A0  6F04               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  4157  0003A2  0101               	movlb	1	; () banked
  4158  0003A4  5102               	movf	RS485_ManageMessage@date_lenth& (0+255),w,b
  4159  0003A6  0101               	movlb	1	; () banked
  4160  0003A8  6F05               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  4161  0003AA  6B06               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  4162  0003AC  0101               	movlb	1	; () banked
  4163  0003AE  5103               	movf	??_RS485_ManageMessage& (0+255),w,b
  4164  0003B0  0101               	movlb	1	; () banked
  4165  0003B2  2705               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  4166  0003B4  0101               	movlb	1	; () banked
  4167  0003B6  5104               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  4168  0003B8  0101               	movlb	1	; () banked
  4169  0003BA  2306               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  4170  0003BC  0101               	movlb	1	; () banked
  4171  0003BE  5105               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  4172  0003C0  0101               	movlb	1	; () banked
  4173  0003C2  2500               	addwf	RS485_ManageMessage@DataBuff& (0+255),w,b
  4174  0003C4  6ED9               	movwf	fsr2l,c
  4175  0003C6  0101               	movlb	1	; () banked
  4176  0003C8  5106               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  4177  0003CA  0101               	movlb	1	; () banked
  4178  0003CC  2101               	addwfc	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  4179  0003CE  6EDA               	movwf	fsr2h,c
  4180  0003D0  0101               	movlb	1	; () banked
  4181  0003D2  510A               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  4182  0003D4  0D07               	mullw	7
  4183  0003D6  0E6A               	movlw	low _gsa_Msg
  4184  0003D8  24F3               	addwf	prodl,w,c
  4185  0003DA  6EE1               	movwf	fsr1l,c
  4186  0003DC  0E00               	movlw	high _gsa_Msg
  4187  0003DE  20F4               	addwfc	prodh,w,c
  4188  0003E0  6EE2               	movwf	fsr1h,c
  4189  0003E2  CFDF FFE7          	movff	indf2,indf1
  4190                           
  4191                           ; BSR set to: 1
  4192                           ;My_USART.c: 140: gsa_Msg[from_dress].a_Parameter[3] = DataBuff[date_lenth -5];
  4193  0003E6  0EFB               	movlw	251
  4194  0003E8  0101               	movlb	1	; () banked
  4195  0003EA  6F03               	movwf	??_RS485_ManageMessage& (0+255),b
  4196  0003EC  0EFF               	movlw	255
  4197  0003EE  0101               	movlb	1	; () banked
  4198  0003F0  6F04               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  4199  0003F2  0101               	movlb	1	; () banked
  4200  0003F4  5102               	movf	RS485_ManageMessage@date_lenth& (0+255),w,b
  4201  0003F6  0101               	movlb	1	; () banked
  4202  0003F8  6F05               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  4203  0003FA  6B06               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  4204  0003FC  0101               	movlb	1	; () banked
  4205  0003FE  5103               	movf	??_RS485_ManageMessage& (0+255),w,b
  4206  000400  0101               	movlb	1	; () banked
  4207  000402  2705               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  4208  000404  0101               	movlb	1	; () banked
  4209  000406  5104               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  4210  000408  0101               	movlb	1	; () banked
  4211  00040A  2306               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  4212  00040C  0101               	movlb	1	; () banked
  4213  00040E  5105               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  4214  000410  0101               	movlb	1	; () banked
  4215  000412  2500               	addwf	RS485_ManageMessage@DataBuff& (0+255),w,b
  4216  000414  6ED9               	movwf	fsr2l,c
  4217  000416  0101               	movlb	1	; () banked
  4218  000418  5106               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  4219  00041A  0101               	movlb	1	; () banked
  4220  00041C  2101               	addwfc	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  4221  00041E  6EDA               	movwf	fsr2h,c
  4222  000420  0101               	movlb	1	; () banked
  4223  000422  510A               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  4224  000424  0D07               	mullw	7
  4225  000426  0E04               	movlw	4
  4226  000428  26F3               	addwf	prodl,f,c
  4227  00042A  0E00               	movlw	0
  4228  00042C  22F4               	addwfc	prodh,f,c
  4229  00042E  0E6A               	movlw	low _gsa_Msg
  4230  000430  24F3               	addwf	prodl,w,c
  4231  000432  6EE1               	movwf	fsr1l,c
  4232  000434  0E00               	movlw	high _gsa_Msg
  4233  000436  20F4               	addwfc	prodh,w,c
  4234  000438  6EE2               	movwf	fsr1h,c
  4235  00043A  CFDF FFE7          	movff	indf2,indf1
  4236                           
  4237                           ; BSR set to: 1
  4238                           ;My_USART.c: 141: gsa_Msg[from_dress].a_Parameter[2] = DataBuff[date_lenth -6];
  4239  00043E  0EFA               	movlw	250
  4240  000440  0101               	movlb	1	; () banked
  4241  000442  6F03               	movwf	??_RS485_ManageMessage& (0+255),b
  4242  000444  0EFF               	movlw	255
  4243  000446  0101               	movlb	1	; () banked
  4244  000448  6F04               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  4245  00044A  0101               	movlb	1	; () banked
  4246  00044C  5102               	movf	RS485_ManageMessage@date_lenth& (0+255),w,b
  4247  00044E  0101               	movlb	1	; () banked
  4248  000450  6F05               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  4249  000452  6B06               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  4250  000454  0101               	movlb	1	; () banked
  4251  000456  5103               	movf	??_RS485_ManageMessage& (0+255),w,b
  4252  000458  0101               	movlb	1	; () banked
  4253  00045A  2705               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  4254  00045C  0101               	movlb	1	; () banked
  4255  00045E  5104               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  4256  000460  0101               	movlb	1	; () banked
  4257  000462  2306               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  4258  000464  0101               	movlb	1	; () banked
  4259  000466  5105               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  4260  000468  0101               	movlb	1	; () banked
  4261  00046A  2500               	addwf	RS485_ManageMessage@DataBuff& (0+255),w,b
  4262  00046C  6ED9               	movwf	fsr2l,c
  4263  00046E  0101               	movlb	1	; () banked
  4264  000470  5106               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  4265  000472  0101               	movlb	1	; () banked
  4266  000474  2101               	addwfc	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  4267  000476  6EDA               	movwf	fsr2h,c
  4268  000478  0101               	movlb	1	; () banked
  4269  00047A  510A               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  4270  00047C  0D07               	mullw	7
  4271  00047E  0E03               	movlw	3
  4272  000480  26F3               	addwf	prodl,f,c
  4273  000482  0E00               	movlw	0
  4274  000484  22F4               	addwfc	prodh,f,c
  4275  000486  0E6A               	movlw	low _gsa_Msg
  4276  000488  24F3               	addwf	prodl,w,c
  4277  00048A  6EE1               	movwf	fsr1l,c
  4278  00048C  0E00               	movlw	high _gsa_Msg
  4279  00048E  20F4               	addwfc	prodh,w,c
  4280  000490  6EE2               	movwf	fsr1h,c
  4281  000492  CFDF FFE7          	movff	indf2,indf1
  4282                           
  4283                           ; BSR set to: 1
  4284                           ;My_USART.c: 142: gsa_Msg[from_dress].a_Parameter[1] = DataBuff[date_lenth -7];
  4285  000496  0EF9               	movlw	249
  4286  000498  0101               	movlb	1	; () banked
  4287  00049A  6F03               	movwf	??_RS485_ManageMessage& (0+255),b
  4288  00049C  0EFF               	movlw	255
  4289  00049E  0101               	movlb	1	; () banked
  4290  0004A0  6F04               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  4291  0004A2  0101               	movlb	1	; () banked
  4292  0004A4  5102               	movf	RS485_ManageMessage@date_lenth& (0+255),w,b
  4293  0004A6  0101               	movlb	1	; () banked
  4294  0004A8  6F05               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  4295  0004AA  6B06               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  4296  0004AC  0101               	movlb	1	; () banked
  4297  0004AE  5103               	movf	??_RS485_ManageMessage& (0+255),w,b
  4298  0004B0  0101               	movlb	1	; () banked
  4299  0004B2  2705               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  4300  0004B4  0101               	movlb	1	; () banked
  4301  0004B6  5104               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  4302  0004B8  0101               	movlb	1	; () banked
  4303  0004BA  2306               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  4304  0004BC  0101               	movlb	1	; () banked
  4305  0004BE  5105               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  4306  0004C0  0101               	movlb	1	; () banked
  4307  0004C2  2500               	addwf	RS485_ManageMessage@DataBuff& (0+255),w,b
  4308  0004C4  6ED9               	movwf	fsr2l,c
  4309  0004C6  0101               	movlb	1	; () banked
  4310  0004C8  5106               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  4311  0004CA  0101               	movlb	1	; () banked
  4312  0004CC  2101               	addwfc	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  4313  0004CE  6EDA               	movwf	fsr2h,c
  4314  0004D0  0101               	movlb	1	; () banked
  4315  0004D2  510A               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  4316  0004D4  0D07               	mullw	7
  4317  0004D6  0E02               	movlw	2
  4318  0004D8  26F3               	addwf	prodl,f,c
  4319  0004DA  0E00               	movlw	0
  4320  0004DC  22F4               	addwfc	prodh,f,c
  4321  0004DE  0E6A               	movlw	low _gsa_Msg
  4322  0004E0  24F3               	addwf	prodl,w,c
  4323  0004E2  6EE1               	movwf	fsr1l,c
  4324  0004E4  0E00               	movlw	high _gsa_Msg
  4325  0004E6  20F4               	addwfc	prodh,w,c
  4326  0004E8  6EE2               	movwf	fsr1h,c
  4327  0004EA  CFDF FFE7          	movff	indf2,indf1
  4328                           
  4329                           ; BSR set to: 1
  4330                           ;My_USART.c: 143: gsa_Msg[from_dress].a_Parameter[0] = DataBuff[date_lenth -8];
  4331  0004EE  0EF8               	movlw	248
  4332  0004F0  0101               	movlb	1	; () banked
  4333  0004F2  6F03               	movwf	??_RS485_ManageMessage& (0+255),b
  4334  0004F4  0EFF               	movlw	255
  4335  0004F6  0101               	movlb	1	; () banked
  4336  0004F8  6F04               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  4337  0004FA  0101               	movlb	1	; () banked
  4338  0004FC  5102               	movf	RS485_ManageMessage@date_lenth& (0+255),w,b
  4339  0004FE  0101               	movlb	1	; () banked
  4340  000500  6F05               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  4341  000502  6B06               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  4342  000504  0101               	movlb	1	; () banked
  4343  000506  5103               	movf	??_RS485_ManageMessage& (0+255),w,b
  4344  000508  0101               	movlb	1	; () banked
  4345  00050A  2705               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  4346  00050C  0101               	movlb	1	; () banked
  4347  00050E  5104               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  4348  000510  0101               	movlb	1	; () banked
  4349  000512  2306               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  4350  000514  0101               	movlb	1	; () banked
  4351  000516  5105               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  4352  000518  0101               	movlb	1	; () banked
  4353  00051A  2500               	addwf	RS485_ManageMessage@DataBuff& (0+255),w,b
  4354  00051C  6ED9               	movwf	fsr2l,c
  4355  00051E  0101               	movlb	1	; () banked
  4356  000520  5106               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  4357  000522  0101               	movlb	1	; () banked
  4358  000524  2101               	addwfc	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  4359  000526  6EDA               	movwf	fsr2h,c
  4360  000528  0101               	movlb	1	; () banked
  4361  00052A  510A               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  4362  00052C  0D07               	mullw	7
  4363  00052E  0E01               	movlw	1
  4364  000530  26F3               	addwf	prodl,f,c
  4365  000532  0E00               	movlw	0
  4366  000534  22F4               	addwfc	prodh,f,c
  4367  000536  0E6A               	movlw	low _gsa_Msg
  4368  000538  24F3               	addwf	prodl,w,c
  4369  00053A  6EE1               	movwf	fsr1l,c
  4370  00053C  0E00               	movlw	high _gsa_Msg
  4371  00053E  20F4               	addwfc	prodh,w,c
  4372  000540  6EE2               	movwf	fsr1h,c
  4373  000542  CFDF FFE7          	movff	indf2,indf1
  4374                           
  4375                           ; BSR set to: 1
  4376                           ;My_USART.c: 146: gsa_Msg[from_dress].hand_info = 1;
  4377  000546  0101               	movlb	1	; () banked
  4378  000548  510A               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  4379  00054A  0D07               	mullw	7
  4380  00054C  0E06               	movlw	6
  4381  00054E  26F3               	addwf	prodl,f,c
  4382  000550  0E00               	movlw	0
  4383  000552  22F4               	addwfc	prodh,f,c
  4384  000554  0E6A               	movlw	low _gsa_Msg
  4385  000556  24F3               	addwf	prodl,w,c
  4386  000558  6ED9               	movwf	fsr2l,c
  4387  00055A  0E00               	movlw	high _gsa_Msg
  4388  00055C  20F4               	addwfc	prodh,w,c
  4389  00055E  6EDA               	movwf	fsr2h,c
  4390  000560  0E01               	movlw	1
  4391  000562  6EDF               	movwf	indf2,c
  4392                           
  4393                           ; BSR set to: 1
  4394                           ;My_USART.c: 147: g_RS485_Receive_Flag = 0;
  4395  000564  0E00               	movlw	0
  4396  000566  6E40               	movwf	_g_RS485_Receive_Flag,c
  4397  000568  0012               	return	
  4398                           
  4399                           ; BSR set to: 1
  4400  00056A  0012               	return		;funcret
  4401  00056C                     __end_of_RS485_ManageMessage:
  4402                           	opt stack 0
  4403                           tblptru	equ	0xFF8
  4404                           tblptrh	equ	0xFF7
  4405                           tblptrl	equ	0xFF6
  4406                           tablat	equ	0xFF5
  4407                           prodh	equ	0xFF4
  4408                           prodl	equ	0xFF3
  4409                           intcon	equ	0xFF2
  4410                           postinc0	equ	0xFEE
  4411                           wreg	equ	0xFE8
  4412                           indf1	equ	0xFE7
  4413                           postdec1	equ	0xFE5
  4414                           fsr1h	equ	0xFE2
  4415                           fsr1l	equ	0xFE1
  4416                           indf2	equ	0xFDF
  4417                           postinc2	equ	0xFDE
  4418                           fsr2h	equ	0xFDA
  4419                           fsr2l	equ	0xFD9
  4420                           status	equ	0xFD8
  4421                           
  4422 ;; *************** function _VerifyCRC *****************
  4423 ;; Defined at:
  4424 ;;		line 162 in file "_01_USER/My_USART.c"
  4425 ;; Parameters:    Size  Location     Type
  4426 ;;  DataBuff        2   37[COMRAM] PTR unsigned char 
  4427 ;;		 -> ga_RS485_ReceiveBuff(10), ga_RS485_SendBuff(10), 
  4428 ;;  date_lenth      1   39[COMRAM] unsigned char 
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;  CRC_Value       4   45[COMRAM] unsigned long 
  4431 ;;  CRC_Byte        1   49[COMRAM] unsigned char 
  4432 ;; Return value:  Size  Location     Type
  4433 ;;		None               void
  4434 ;; Registers used:
  4435 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4436 ;; Tracked objects:
  4437 ;;		On entry : 0/0
  4438 ;;		On exit  : 0/0
  4439 ;;		Unchanged: 0/0
  4440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4441 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4442 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4443 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4444 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4445 ;;Total ram usage:       13 bytes
  4446 ;; Hardware stack levels used:    1
  4447 ;; Hardware stack levels required when called:    4
  4448 ;; This function calls:
  4449 ;;		___lldiv
  4450 ;;		___llmod
  4451 ;; This function is called by:
  4452 ;;		_RS485_SendDate
  4453 ;;		_RS485_ManageMessage
  4454 ;; This function uses a non-reentrant model
  4455 ;;
  4456                           
  4457                           	psect	text29
  4458  0009DE                     __ptext29:
  4459                           	opt stack 0
  4460  0009DE                     _VerifyCRC:
  4461                           	opt stack 24
  4462                           
  4463                           ;My_USART.c: 164: unsigned long int CRC_Value = 0;
  4464                           
  4465                           ;incstack = 0
  4466  0009DE  0E00               	movlw	0
  4467  0009E0  6E2E               	movwf	VerifyCRC@CRC_Value,c
  4468  0009E2  0E00               	movlw	0
  4469  0009E4  6E2F               	movwf	VerifyCRC@CRC_Value+1,c
  4470  0009E6  0E00               	movlw	0
  4471  0009E8  6E30               	movwf	VerifyCRC@CRC_Value+2,c
  4472  0009EA  0E00               	movlw	0
  4473  0009EC  6E31               	movwf	VerifyCRC@CRC_Value+3,c
  4474                           
  4475                           ;My_USART.c: 165: unsigned char CRC_Byte;
  4476                           ;My_USART.c: 167: for(CRC_Byte = 2; CRC_Byte < date_lenth ;CRC_Byte++)
  4477  0009EE  0E02               	movlw	2
  4478  0009F0  6E32               	movwf	VerifyCRC@CRC_Byte,c
  4479  0009F2  D035               	goto	l3463
  4480  0009F4                     l3459:
  4481                           
  4482                           ;My_USART.c: 168: CRC_Value = ( CRC_Value + DataBuff[CRC_Byte]*CRC_Byte ) % 0xffff;
  4483  0009F4  5032               	movf	VerifyCRC@CRC_Byte,w,c
  4484  0009F6  0D01               	mullw	1
  4485  0009F8  50F3               	movf	prodl,w,c
  4486  0009FA  2426               	addwf	VerifyCRC@DataBuff,w,c
  4487  0009FC  6ED9               	movwf	fsr2l,c
  4488  0009FE  50F4               	movf	prodh,w,c
  4489  000A00  2027               	addwfc	VerifyCRC@DataBuff+1,w,c
  4490  000A02  6EDA               	movwf	fsr2h,c
  4491  000A04  50DF               	movf	indf2,w,c
  4492  000A06  6E29               	movwf	??_VerifyCRC& (0+255),c
  4493  000A08  5029               	movf	??_VerifyCRC,w,c
  4494  000A0A  0232               	mulwf	VerifyCRC@CRC_Byte,c
  4495  000A0C  CFF3 F02A          	movff	prodl,??_VerifyCRC+1
  4496  000A10  CFF4 F02B          	movff	prodh,??_VerifyCRC+2
  4497  000A14  0E00               	movlw	0
  4498  000A16  BE2B               	btfsc	(??_VerifyCRC+2)& (0+255),7,c
  4499  000A18  0EFF               	movlw	255
  4500  000A1A  6E2C               	movwf	(??_VerifyCRC+3)& (0+255),c
  4501  000A1C  6E2D               	movwf	(??_VerifyCRC+4)& (0+255),c
  4502  000A1E  502E               	movf	VerifyCRC@CRC_Value,w,c
  4503  000A20  242A               	addwf	??_VerifyCRC+1,w,c
  4504  000A22  6E19               	movwf	___llmod@dividend,c
  4505  000A24  502F               	movf	VerifyCRC@CRC_Value+1,w,c
  4506  000A26  202B               	addwfc	??_VerifyCRC+2,w,c
  4507  000A28  6E1A               	movwf	___llmod@dividend+1,c
  4508  000A2A  5030               	movf	VerifyCRC@CRC_Value+2,w,c
  4509  000A2C  202C               	addwfc	??_VerifyCRC+3,w,c
  4510  000A2E  6E1B               	movwf	___llmod@dividend+2,c
  4511  000A30  5031               	movf	VerifyCRC@CRC_Value+3,w,c
  4512  000A32  202D               	addwfc	??_VerifyCRC+4,w,c
  4513  000A34  6E1C               	movwf	___llmod@dividend+3,c
  4514  000A36  0EFF               	movlw	255
  4515  000A38  6E1D               	movwf	___llmod@divisor,c
  4516  000A3A  0EFF               	movlw	255
  4517  000A3C  6E1E               	movwf	___llmod@divisor+1,c
  4518  000A3E  0E00               	movlw	0
  4519  000A40  6E1F               	movwf	___llmod@divisor+2,c
  4520  000A42  0E00               	movlw	0
  4521  000A44  6E20               	movwf	___llmod@divisor+3,c
  4522  000A46  EC13  F008         	call	___llmod	;wreg free
  4523  000A4A  C019  F02E         	movff	?___llmod,VerifyCRC@CRC_Value
  4524  000A4E  C01A  F02F         	movff	?___llmod+1,VerifyCRC@CRC_Value+1
  4525  000A52  C01B  F030         	movff	?___llmod+2,VerifyCRC@CRC_Value+2
  4526  000A56  C01C  F031         	movff	?___llmod+3,VerifyCRC@CRC_Value+3
  4527  000A5A  2A32               	incf	VerifyCRC@CRC_Byte,f,c
  4528  000A5C  D000               	goto	l3463
  4529  000A5E                     l3463:
  4530  000A5E  5028               	movf	VerifyCRC@date_lenth,w,c
  4531  000A60  5C32               	subwf	VerifyCRC@CRC_Byte,w,c
  4532  000A62  A0D8               	btfss	status,0,c
  4533  000A64  D7C7               	goto	l3459
  4534                           
  4535                           ;My_USART.c: 170: DataBuff[1] = CRC_Value/0xff;
  4536  000A66  EE20 F001          	lfsr	2,1
  4537  000A6A  5026               	movf	VerifyCRC@DataBuff,w,c
  4538  000A6C  26D9               	addwf	fsr2l,f,c
  4539  000A6E  5027               	movf	VerifyCRC@DataBuff+1,w,c
  4540  000A70  22DA               	addwfc	fsr2h,f,c
  4541  000A72  C02E  F019         	movff	VerifyCRC@CRC_Value,___lldiv@dividend
  4542  000A76  C02F  F01A         	movff	VerifyCRC@CRC_Value+1,___lldiv@dividend+1
  4543  000A7A  C030  F01B         	movff	VerifyCRC@CRC_Value+2,___lldiv@dividend+2
  4544  000A7E  C031  F01C         	movff	VerifyCRC@CRC_Value+3,___lldiv@dividend+3
  4545  000A82  0EFF               	movlw	255
  4546  000A84  6E1D               	movwf	___lldiv@divisor,c
  4547  000A86  0E00               	movlw	0
  4548  000A88  6E1E               	movwf	___lldiv@divisor+1,c
  4549  000A8A  0E00               	movlw	0
  4550  000A8C  6E1F               	movwf	___lldiv@divisor+2,c
  4551  000A8E  0E00               	movlw	0
  4552  000A90  6E20               	movwf	___lldiv@divisor+3,c
  4553  000A92  EC92  F007         	call	___lldiv	;wreg free
  4554  000A96  5019               	movf	?___lldiv,w,c
  4555  000A98  6EDF               	movwf	indf2,c
  4556                           
  4557                           ;My_USART.c: 171: DataBuff[0] = CRC_Value%0xff;
  4558  000A9A  C02E  F019         	movff	VerifyCRC@CRC_Value,___llmod@dividend
  4559  000A9E  C02F  F01A         	movff	VerifyCRC@CRC_Value+1,___llmod@dividend+1
  4560  000AA2  C030  F01B         	movff	VerifyCRC@CRC_Value+2,___llmod@dividend+2
  4561  000AA6  C031  F01C         	movff	VerifyCRC@CRC_Value+3,___llmod@dividend+3
  4562  000AAA  0EFF               	movlw	255
  4563  000AAC  6E1D               	movwf	___llmod@divisor,c
  4564  000AAE  0E00               	movlw	0
  4565  000AB0  6E1E               	movwf	___llmod@divisor+1,c
  4566  000AB2  0E00               	movlw	0
  4567  000AB4  6E1F               	movwf	___llmod@divisor+2,c
  4568  000AB6  0E00               	movlw	0
  4569  000AB8  6E20               	movwf	___llmod@divisor+3,c
  4570  000ABA  EC13  F008         	call	___llmod	;wreg free
  4571  000ABE  5019               	movf	?___llmod,w,c
  4572  000AC0  C026  FFD9         	movff	VerifyCRC@DataBuff,fsr2l
  4573  000AC4  C027  FFDA         	movff	VerifyCRC@DataBuff+1,fsr2h
  4574  000AC8  6EDF               	movwf	indf2,c
  4575                           
  4576                           ;My_USART.c: 173: if( DataBuff[1] == 0xff ) DataBuff[1] --;
  4577  000ACA  EE20 F001          	lfsr	2,1
  4578  000ACE  5026               	movf	VerifyCRC@DataBuff,w,c
  4579  000AD0  26D9               	addwf	fsr2l,f,c
  4580  000AD2  5027               	movf	VerifyCRC@DataBuff+1,w,c
  4581  000AD4  22DA               	addwfc	fsr2h,f,c
  4582  000AD6  28DE               	incf	postinc2,w,c
  4583  000AD8  A4D8               	btfss	status,2,c
  4584  000ADA  D007               	goto	l234
  4585  000ADC  EE20 F001          	lfsr	2,1
  4586  000AE0  5026               	movf	VerifyCRC@DataBuff,w,c
  4587  000AE2  26D9               	addwf	fsr2l,f,c
  4588  000AE4  5027               	movf	VerifyCRC@DataBuff+1,w,c
  4589  000AE6  22DA               	addwfc	fsr2h,f,c
  4590  000AE8  06DF               	decf	indf2,f,c
  4591  000AEA                     l234:
  4592                           
  4593                           ;My_USART.c: 174: if( DataBuff[0] == 0xff ) DataBuff[0] --;
  4594  000AEA  C026  FFD9         	movff	VerifyCRC@DataBuff,fsr2l
  4595  000AEE  C027  FFDA         	movff	VerifyCRC@DataBuff+1,fsr2h
  4596  000AF2  28DE               	incf	postinc2,w,c
  4597  000AF4  A4D8               	btfss	status,2,c
  4598  000AF6  0012               	return	
  4599  000AF8  C026  FFD9         	movff	VerifyCRC@DataBuff,fsr2l
  4600  000AFC  C027  FFDA         	movff	VerifyCRC@DataBuff+1,fsr2h
  4601  000B00  06DF               	decf	indf2,f,c
  4602  000B02  0012               	return	
  4603  000B04  0012               	return		;funcret
  4604  000B06                     __end_of_VerifyCRC:
  4605                           	opt stack 0
  4606                           tblptru	equ	0xFF8
  4607                           tblptrh	equ	0xFF7
  4608                           tblptrl	equ	0xFF6
  4609                           tablat	equ	0xFF5
  4610                           prodh	equ	0xFF4
  4611                           prodl	equ	0xFF3
  4612                           intcon	equ	0xFF2
  4613                           postinc0	equ	0xFEE
  4614                           wreg	equ	0xFE8
  4615                           indf1	equ	0xFE7
  4616                           postdec1	equ	0xFE5
  4617                           fsr1h	equ	0xFE2
  4618                           fsr1l	equ	0xFE1
  4619                           indf2	equ	0xFDF
  4620                           postinc2	equ	0xFDE
  4621                           fsr2h	equ	0xFDA
  4622                           fsr2l	equ	0xFD9
  4623                           status	equ	0xFD8
  4624                           
  4625 ;; *************** function ___llmod *****************
  4626 ;; Defined at:
  4627 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;  dividend        4   24[COMRAM] unsigned long 
  4630 ;;  divisor         4   28[COMRAM] unsigned long 
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;  counter         1   32[COMRAM] unsigned char 
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  4   24[COMRAM] unsigned long 
  4635 ;; Registers used:
  4636 ;;		wreg, status,2, status,0
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4642 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4643 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4645 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4646 ;;Total ram usage:        9 bytes
  4647 ;; Hardware stack levels used:    1
  4648 ;; Hardware stack levels required when called:    3
  4649 ;; This function calls:
  4650 ;;		Nothing
  4651 ;; This function is called by:
  4652 ;;		_VerifyCRC
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656                           	psect	text30
  4657  001026                     __ptext30:
  4658                           	opt stack 0
  4659  001026                     ___llmod:
  4660                           	opt stack 24
  4661                           
  4662                           ;incstack = 0
  4663  001026  501D               	movf	___llmod@divisor,w,c
  4664  001028  101E               	iorwf	___llmod@divisor+1,w,c
  4665  00102A  101F               	iorwf	___llmod@divisor+2,w,c
  4666  00102C  1020               	iorwf	___llmod@divisor+3,w,c
  4667  00102E  B4D8               	btfsc	status,2,c
  4668  001030  D029               	goto	l1119
  4669  001032  0E01               	movlw	1
  4670  001034  6E21               	movwf	___llmod@counter,c
  4671  001036  D007               	goto	l3447
  4672  001038                     l3445:
  4673  001038  90D8               	bcf	status,0,c
  4674  00103A  361D               	rlcf	___llmod@divisor,f,c
  4675  00103C  361E               	rlcf	___llmod@divisor+1,f,c
  4676  00103E  361F               	rlcf	___llmod@divisor+2,f,c
  4677  001040  3620               	rlcf	___llmod@divisor+3,f,c
  4678  001042  2A21               	incf	___llmod@counter,f,c
  4679  001044  D000               	goto	l3447
  4680  001046                     l3447:
  4681  001046  BE20               	btfsc	___llmod@divisor+3,7,c
  4682  001048  D002               	goto	l3449
  4683  00104A  D7F6               	goto	l3445
  4684  00104C  D000               	goto	l3449
  4685  00104E                     l3449:
  4686  00104E  501D               	movf	___llmod@divisor,w,c
  4687  001050  5C19               	subwf	___llmod@dividend,w,c
  4688  001052  501E               	movf	___llmod@divisor+1,w,c
  4689  001054  581A               	subwfb	___llmod@dividend+1,w,c
  4690  001056  501F               	movf	___llmod@divisor+2,w,c
  4691  001058  581B               	subwfb	___llmod@dividend+2,w,c
  4692  00105A  5020               	movf	___llmod@divisor+3,w,c
  4693  00105C  581C               	subwfb	___llmod@dividend+3,w,c
  4694  00105E  A0D8               	btfss	status,0,c
  4695  001060  D009               	goto	l3453
  4696  001062  501D               	movf	___llmod@divisor,w,c
  4697  001064  5E19               	subwf	___llmod@dividend,f,c
  4698  001066  501E               	movf	___llmod@divisor+1,w,c
  4699  001068  5A1A               	subwfb	___llmod@dividend+1,f,c
  4700  00106A  501F               	movf	___llmod@divisor+2,w,c
  4701  00106C  5A1B               	subwfb	___llmod@dividend+2,f,c
  4702  00106E  5020               	movf	___llmod@divisor+3,w,c
  4703  001070  5A1C               	subwfb	___llmod@dividend+3,f,c
  4704  001072  D000               	goto	l3453
  4705  001074                     l3453:
  4706  001074  90D8               	bcf	status,0,c
  4707  001076  3220               	rrcf	___llmod@divisor+3,f,c
  4708  001078  321F               	rrcf	___llmod@divisor+2,f,c
  4709  00107A  321E               	rrcf	___llmod@divisor+1,f,c
  4710  00107C  321D               	rrcf	___llmod@divisor,f,c
  4711  00107E  2E21               	decfsz	___llmod@counter,f,c
  4712  001080  D7E6               	goto	l3449
  4713  001082  D000               	goto	l1119
  4714  001084                     l1119:
  4715  001084  C019  F019         	movff	___llmod@dividend,?___llmod
  4716  001088  C01A  F01A         	movff	___llmod@dividend+1,?___llmod+1
  4717  00108C  C01B  F01B         	movff	___llmod@dividend+2,?___llmod+2
  4718  001090  C01C  F01C         	movff	___llmod@dividend+3,?___llmod+3
  4719  001094  0012               	return		;funcret
  4720  001096                     __end_of___llmod:
  4721                           	opt stack 0
  4722                           tblptru	equ	0xFF8
  4723                           tblptrh	equ	0xFF7
  4724                           tblptrl	equ	0xFF6
  4725                           tablat	equ	0xFF5
  4726                           prodh	equ	0xFF4
  4727                           prodl	equ	0xFF3
  4728                           intcon	equ	0xFF2
  4729                           postinc0	equ	0xFEE
  4730                           wreg	equ	0xFE8
  4731                           indf1	equ	0xFE7
  4732                           postdec1	equ	0xFE5
  4733                           fsr1h	equ	0xFE2
  4734                           fsr1l	equ	0xFE1
  4735                           indf2	equ	0xFDF
  4736                           postinc2	equ	0xFDE
  4737                           fsr2h	equ	0xFDA
  4738                           fsr2l	equ	0xFD9
  4739                           status	equ	0xFD8
  4740                           
  4741 ;; *************** function ___lldiv *****************
  4742 ;; Defined at:
  4743 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  4744 ;; Parameters:    Size  Location     Type
  4745 ;;  dividend        4   24[COMRAM] unsigned long 
  4746 ;;  divisor         4   28[COMRAM] unsigned long 
  4747 ;; Auto vars:     Size  Location     Type
  4748 ;;  quotient        4   32[COMRAM] unsigned long 
  4749 ;;  counter         1   36[COMRAM] unsigned char 
  4750 ;; Return value:  Size  Location     Type
  4751 ;;                  4   24[COMRAM] unsigned long 
  4752 ;; Registers used:
  4753 ;;		wreg, status,2, status,0
  4754 ;; Tracked objects:
  4755 ;;		On entry : 0/0
  4756 ;;		On exit  : 0/0
  4757 ;;		Unchanged: 0/0
  4758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4759 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4760 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4762 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4763 ;;Total ram usage:       13 bytes
  4764 ;; Hardware stack levels used:    1
  4765 ;; Hardware stack levels required when called:    3
  4766 ;; This function calls:
  4767 ;;		Nothing
  4768 ;; This function is called by:
  4769 ;;		_VerifyCRC
  4770 ;; This function uses a non-reentrant model
  4771 ;;
  4772                           
  4773                           	psect	text31
  4774  000F24                     __ptext31:
  4775                           	opt stack 0
  4776  000F24                     ___lldiv:
  4777                           	opt stack 24
  4778                           
  4779                           ;incstack = 0
  4780  000F24  0E00               	movlw	0
  4781  000F26  6E21               	movwf	___lldiv@quotient,c
  4782  000F28  0E00               	movlw	0
  4783  000F2A  6E22               	movwf	___lldiv@quotient+1,c
  4784  000F2C  0E00               	movlw	0
  4785  000F2E  6E23               	movwf	___lldiv@quotient+2,c
  4786  000F30  0E00               	movlw	0
  4787  000F32  6E24               	movwf	___lldiv@quotient+3,c
  4788  000F34  501D               	movf	___lldiv@divisor,w,c
  4789  000F36  101E               	iorwf	___lldiv@divisor+1,w,c
  4790  000F38  101F               	iorwf	___lldiv@divisor+2,w,c
  4791  000F3A  1020               	iorwf	___lldiv@divisor+3,w,c
  4792  000F3C  B4D8               	btfsc	status,2,c
  4793  000F3E  D02F               	goto	l1109
  4794  000F40  0E01               	movlw	1
  4795  000F42  6E25               	movwf	___lldiv@counter,c
  4796  000F44  D007               	goto	l3427
  4797  000F46                     l3425:
  4798  000F46  90D8               	bcf	status,0,c
  4799  000F48  361D               	rlcf	___lldiv@divisor,f,c
  4800  000F4A  361E               	rlcf	___lldiv@divisor+1,f,c
  4801  000F4C  361F               	rlcf	___lldiv@divisor+2,f,c
  4802  000F4E  3620               	rlcf	___lldiv@divisor+3,f,c
  4803  000F50  2A25               	incf	___lldiv@counter,f,c
  4804  000F52  D000               	goto	l3427
  4805  000F54                     l3427:
  4806  000F54  BE20               	btfsc	___lldiv@divisor+3,7,c
  4807  000F56  D002               	goto	l3429
  4808  000F58  D7F6               	goto	l3425
  4809  000F5A  D000               	goto	l3429
  4810  000F5C                     l3429:
  4811  000F5C  90D8               	bcf	status,0,c
  4812  000F5E  3621               	rlcf	___lldiv@quotient,f,c
  4813  000F60  3622               	rlcf	___lldiv@quotient+1,f,c
  4814  000F62  3623               	rlcf	___lldiv@quotient+2,f,c
  4815  000F64  3624               	rlcf	___lldiv@quotient+3,f,c
  4816  000F66  501D               	movf	___lldiv@divisor,w,c
  4817  000F68  5C19               	subwf	___lldiv@dividend,w,c
  4818  000F6A  501E               	movf	___lldiv@divisor+1,w,c
  4819  000F6C  581A               	subwfb	___lldiv@dividend+1,w,c
  4820  000F6E  501F               	movf	___lldiv@divisor+2,w,c
  4821  000F70  581B               	subwfb	___lldiv@dividend+2,w,c
  4822  000F72  5020               	movf	___lldiv@divisor+3,w,c
  4823  000F74  581C               	subwfb	___lldiv@dividend+3,w,c
  4824  000F76  A0D8               	btfss	status,0,c
  4825  000F78  D00A               	goto	l3437
  4826  000F7A  501D               	movf	___lldiv@divisor,w,c
  4827  000F7C  5E19               	subwf	___lldiv@dividend,f,c
  4828  000F7E  501E               	movf	___lldiv@divisor+1,w,c
  4829  000F80  5A1A               	subwfb	___lldiv@dividend+1,f,c
  4830  000F82  501F               	movf	___lldiv@divisor+2,w,c
  4831  000F84  5A1B               	subwfb	___lldiv@dividend+2,f,c
  4832  000F86  5020               	movf	___lldiv@divisor+3,w,c
  4833  000F88  5A1C               	subwfb	___lldiv@dividend+3,f,c
  4834  000F8A  8021               	bsf	___lldiv@quotient,0,c
  4835  000F8C  D000               	goto	l3437
  4836  000F8E                     l3437:
  4837  000F8E  90D8               	bcf	status,0,c
  4838  000F90  3220               	rrcf	___lldiv@divisor+3,f,c
  4839  000F92  321F               	rrcf	___lldiv@divisor+2,f,c
  4840  000F94  321E               	rrcf	___lldiv@divisor+1,f,c
  4841  000F96  321D               	rrcf	___lldiv@divisor,f,c
  4842  000F98  2E25               	decfsz	___lldiv@counter,f,c
  4843  000F9A  D7E0               	goto	l3429
  4844  000F9C  D000               	goto	l1109
  4845  000F9E                     l1109:
  4846  000F9E  C021  F019         	movff	___lldiv@quotient,?___lldiv
  4847  000FA2  C022  F01A         	movff	___lldiv@quotient+1,?___lldiv+1
  4848  000FA6  C023  F01B         	movff	___lldiv@quotient+2,?___lldiv+2
  4849  000FAA  C024  F01C         	movff	___lldiv@quotient+3,?___lldiv+3
  4850  000FAE  0012               	return		;funcret
  4851  000FB0                     __end_of___lldiv:
  4852                           	opt stack 0
  4853                           tblptru	equ	0xFF8
  4854                           tblptrh	equ	0xFF7
  4855                           tblptrl	equ	0xFF6
  4856                           tablat	equ	0xFF5
  4857                           prodh	equ	0xFF4
  4858                           prodl	equ	0xFF3
  4859                           intcon	equ	0xFF2
  4860                           postinc0	equ	0xFEE
  4861                           wreg	equ	0xFE8
  4862                           indf1	equ	0xFE7
  4863                           postdec1	equ	0xFE5
  4864                           fsr1h	equ	0xFE2
  4865                           fsr1l	equ	0xFE1
  4866                           indf2	equ	0xFDF
  4867                           postinc2	equ	0xFDE
  4868                           fsr2h	equ	0xFDA
  4869                           fsr2l	equ	0xFD9
  4870                           status	equ	0xFD8
  4871                           
  4872 ;; *************** function _Key_ManageMessage *****************
  4873 ;; Defined at:
  4874 ;;		line 182 in file "_01_USER/Key.c"
  4875 ;; Parameters:    Size  Location     Type
  4876 ;;		None
  4877 ;; Auto vars:     Size  Location     Type
  4878 ;;		None
  4879 ;; Return value:  Size  Location     Type
  4880 ;;		None               void
  4881 ;; Registers used:
  4882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4883 ;; Tracked objects:
  4884 ;;		On entry : 0/0
  4885 ;;		On exit  : 0/0
  4886 ;;		Unchanged: 0/0
  4887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4890 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4891 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4892 ;;Total ram usage:        4 bytes
  4893 ;; Hardware stack levels used:    1
  4894 ;; Hardware stack levels required when called:    4
  4895 ;; This function calls:
  4896 ;;		_Key_ReadFSM
  4897 ;;		_Key_ResetFSM
  4898 ;;		___lbmod
  4899 ;; This function is called by:
  4900 ;;		_ManageMessage
  4901 ;; This function uses a non-reentrant model
  4902 ;;
  4903                           
  4904                           	psect	text32
  4905  00070E                     __ptext32:
  4906                           	opt stack 0
  4907  00070E                     _Key_ManageMessage:
  4908                           	opt stack 25
  4909                           
  4910                           ;Key.c: 184: Key_ReadFSM();
  4911                           
  4912                           ;incstack = 0
  4913  00070E  ECB6  F002         	call	_Key_ReadFSM	;wreg free
  4914                           
  4915                           ;Key.c: 186: if ( gs_Local_Key_User.key_group == ((0x01<<3)|(0x01<<4)) && gs_Local_Key_U
      +                          ser.key_group_state == KEY_short )
  4916  000712  0E18               	movlw	24
  4917  000714  0100               	movlb	0	; () banked
  4918  000716  19B1               	xorwf	(_gs_Local_Key_User+1)& (0+255),w,b	;volatile
  4919  000718  A4D8               	btfss	status,2,c
  4920  00071A  D021               	goto	l2713
  4921                           
  4922                           ; BSR set to: 0
  4923  00071C  0100               	movlb	0	; () banked
  4924  00071E  05B2               	decf	(_gs_Local_Key_User+2)& (0+255),w,b	;volatile
  4925  000720  A4D8               	btfss	status,2,c
  4926  000722  D01D               	goto	l2713
  4927                           
  4928                           ; BSR set to: 0
  4929                           ;Key.c: 187: {
  4930                           ;Key.c: 188: if(g_RS485_Byte >=1 && g_RS485_Byte <=3)
  4931  000724  503F               	movf	_g_RS485_Byte,w,c
  4932  000726  B4D8               	btfsc	status,2,c
  4933  000728  D017               	goto	l2711
  4934                           
  4935                           ; BSR set to: 0
  4936  00072A  0E04               	movlw	4
  4937  00072C  603F               	cpfslt	_g_RS485_Byte,c
  4938  00072E  D014               	goto	l2711
  4939                           
  4940                           ; BSR set to: 0
  4941                           ;Key.c: 189: gs_Switch.Relay[g_RS485_Byte - 1] = 1;
  4942  000730  0EFF               	movlw	255
  4943  000732  6E1F               	movwf	??_Key_ManageMessage& (0+255),c
  4944  000734  0EFF               	movlw	255
  4945  000736  6E20               	movwf	(??_Key_ManageMessage+1)& (0+255),c
  4946  000738  503F               	movf	_g_RS485_Byte,w,c
  4947  00073A  6E21               	movwf	(??_Key_ManageMessage+2)& (0+255),c
  4948  00073C  6A22               	clrf	(??_Key_ManageMessage+3)& (0+255),c
  4949  00073E  501F               	movf	??_Key_ManageMessage,w,c
  4950  000740  2621               	addwf	??_Key_ManageMessage+2,f,c
  4951  000742  5020               	movf	??_Key_ManageMessage+1,w,c
  4952  000744  2222               	addwfc	??_Key_ManageMessage+3,f,c
  4953  000746  0E45               	movlw	low (_gs_Switch+4)
  4954  000748  2421               	addwf	??_Key_ManageMessage+2,w,c
  4955  00074A  6ED9               	movwf	fsr2l,c
  4956  00074C  0E00               	movlw	high (_gs_Switch+4)
  4957  00074E  2022               	addwfc	??_Key_ManageMessage+3,w,c
  4958  000750  6EDA               	movwf	fsr2h,c
  4959  000752  0E01               	movlw	1
  4960  000754  6EDF               	movwf	indf2,c
  4961  000756  D000               	goto	l2711
  4962  000758                     l2711:
  4963                           
  4964                           ; BSR set to: 0
  4965                           ;Key.c: 190: Key_ResetFSM();
  4966  000758  ECF2  F009         	call	_Key_ResetFSM	;wreg free
  4967  00075C  D000               	goto	l2713
  4968  00075E                     l2713:
  4969                           
  4970                           ;Key.c: 191: }
  4971                           ;Key.c: 193: if ( gs_Local_Key_User.key_group == ((0x01<<4)|(0x01<<5)) && gs_Local_Key_U
      +                          ser.key_group_state == KEY_short )
  4972  00075E  0E30               	movlw	48
  4973  000760  0100               	movlb	0	; () banked
  4974  000762  19B1               	xorwf	(_gs_Local_Key_User+1)& (0+255),w,b	;volatile
  4975  000764  A4D8               	btfss	status,2,c
  4976  000766  D021               	goto	l2725
  4977                           
  4978                           ; BSR set to: 0
  4979  000768  0100               	movlb	0	; () banked
  4980  00076A  05B2               	decf	(_gs_Local_Key_User+2)& (0+255),w,b	;volatile
  4981  00076C  A4D8               	btfss	status,2,c
  4982  00076E  D01D               	goto	l2725
  4983                           
  4984                           ; BSR set to: 0
  4985                           ;Key.c: 194: {
  4986                           ;Key.c: 195: if(g_RS485_Byte >=1 && g_RS485_Byte <=3)
  4987  000770  503F               	movf	_g_RS485_Byte,w,c
  4988  000772  B4D8               	btfsc	status,2,c
  4989  000774  D017               	goto	l2723
  4990                           
  4991                           ; BSR set to: 0
  4992  000776  0E04               	movlw	4
  4993  000778  603F               	cpfslt	_g_RS485_Byte,c
  4994  00077A  D014               	goto	l2723
  4995                           
  4996                           ; BSR set to: 0
  4997                           ;Key.c: 196: gs_Switch.Relay[g_RS485_Byte - 1] = 0;
  4998  00077C  0EFF               	movlw	255
  4999  00077E  6E1F               	movwf	??_Key_ManageMessage& (0+255),c
  5000  000780  0EFF               	movlw	255
  5001  000782  6E20               	movwf	(??_Key_ManageMessage+1)& (0+255),c
  5002  000784  503F               	movf	_g_RS485_Byte,w,c
  5003  000786  6E21               	movwf	(??_Key_ManageMessage+2)& (0+255),c
  5004  000788  6A22               	clrf	(??_Key_ManageMessage+3)& (0+255),c
  5005  00078A  501F               	movf	??_Key_ManageMessage,w,c
  5006  00078C  2621               	addwf	??_Key_ManageMessage+2,f,c
  5007  00078E  5020               	movf	??_Key_ManageMessage+1,w,c
  5008  000790  2222               	addwfc	??_Key_ManageMessage+3,f,c
  5009  000792  0E45               	movlw	low (_gs_Switch+4)
  5010  000794  2421               	addwf	??_Key_ManageMessage+2,w,c
  5011  000796  6ED9               	movwf	fsr2l,c
  5012  000798  0E00               	movlw	high (_gs_Switch+4)
  5013  00079A  2022               	addwfc	??_Key_ManageMessage+3,w,c
  5014  00079C  6EDA               	movwf	fsr2h,c
  5015  00079E  0E00               	movlw	0
  5016  0007A0  6EDF               	movwf	indf2,c
  5017  0007A2  D000               	goto	l2723
  5018  0007A4                     l2723:
  5019                           
  5020                           ; BSR set to: 0
  5021                           ;Key.c: 197: Key_ResetFSM();
  5022  0007A4  ECF2  F009         	call	_Key_ResetFSM	;wreg free
  5023  0007A8  D000               	goto	l2725
  5024  0007AA                     l2725:
  5025                           
  5026                           ;Key.c: 198: }
  5027                           ;Key.c: 201: if (gs_Local_Key_User.a_key_state[1-1] == KEY_short) g_RS485_Byte ++ ;
  5028  0007AA  0100               	movlb	0	; () banked
  5029  0007AC  05BF               	decf	(_gs_Local_Key_User+15)& (0+255),w,b	;volatile
  5030  0007AE  A4D8               	btfss	status,2,c
  5031  0007B0  D002               	goto	l2729
  5032                           
  5033                           ; BSR set to: 0
  5034  0007B2  2A3F               	incf	_g_RS485_Byte,f,c
  5035  0007B4  D000               	goto	l2729
  5036  0007B6                     l2729:
  5037                           
  5038                           ; BSR set to: 0
  5039                           ;Key.c: 202: if (gs_Local_Key_User.a_key_state[1-1] == KEY_hold) g_RS485_Byte ++ ;
  5040  0007B6  0E03               	movlw	3
  5041  0007B8  0100               	movlb	0	; () banked
  5042  0007BA  19BF               	xorwf	(_gs_Local_Key_User+15)& (0+255),w,b	;volatile
  5043  0007BC  A4D8               	btfss	status,2,c
  5044  0007BE  D002               	goto	l2733
  5045                           
  5046                           ; BSR set to: 0
  5047  0007C0  2A3F               	incf	_g_RS485_Byte,f,c
  5048  0007C2  D000               	goto	l2733
  5049  0007C4                     l2733:
  5050                           
  5051                           ; BSR set to: 0
  5052                           ;Key.c: 205: if (gs_Local_Key_User.a_key_state[2-1] == KEY_short) gs_Switch.Show_Send_Re
      +                          ceive = ~gs_Switch.Show_Send_Receive;
  5053  0007C4  0100               	movlb	0	; () banked
  5054  0007C6  05C0               	decf	(_gs_Local_Key_User+16)& (0+255),w,b	;volatile
  5055  0007C8  A4D8               	btfss	status,2,c
  5056  0007CA  D003               	goto	l160
  5057                           
  5058                           ; BSR set to: 0
  5059  0007CC  5044               	movf	_gs_Switch+3,w,c
  5060  0007CE  0AFF               	xorlw	255
  5061  0007D0  6E44               	movwf	_gs_Switch+3,c
  5062  0007D2                     l160:
  5063                           
  5064                           ; BSR set to: 0
  5065                           ;Key.c: 208: if (gs_Local_Key_User.a_key_state[3-1] == KEY_short) g_RS485_Byte -- ;
  5066  0007D2  0100               	movlb	0	; () banked
  5067  0007D4  05C1               	decf	(_gs_Local_Key_User+17)& (0+255),w,b	;volatile
  5068  0007D6  A4D8               	btfss	status,2,c
  5069  0007D8  D002               	goto	l2739
  5070                           
  5071                           ; BSR set to: 0
  5072  0007DA  063F               	decf	_g_RS485_Byte,f,c
  5073  0007DC  D000               	goto	l2739
  5074  0007DE                     l2739:
  5075                           
  5076                           ; BSR set to: 0
  5077                           ;Key.c: 209: if (gs_Local_Key_User.a_key_state[3-1] == KEY_hold) g_RS485_Byte -- ;
  5078  0007DE  0E03               	movlw	3
  5079  0007E0  0100               	movlb	0	; () banked
  5080  0007E2  19C1               	xorwf	(_gs_Local_Key_User+17)& (0+255),w,b	;volatile
  5081  0007E4  A4D8               	btfss	status,2,c
  5082  0007E6  D002               	goto	l2743
  5083                           
  5084                           ; BSR set to: 0
  5085  0007E8  063F               	decf	_g_RS485_Byte,f,c
  5086  0007EA  D000               	goto	l2743
  5087  0007EC                     l2743:
  5088                           
  5089                           ; BSR set to: 0
  5090                           ;Key.c: 212: if (gs_Local_Key_User.a_key_state[4-1] == KEY_short) ga_RS485_SendBuff[g_RS
      +                          485_Byte] ++ ;
  5091  0007EC  0100               	movlb	0	; () banked
  5092  0007EE  05C2               	decf	(_gs_Local_Key_User+18)& (0+255),w,b	;volatile
  5093  0007F0  A4D8               	btfss	status,2,c
  5094  0007F2  D00A               	goto	l2747
  5095                           
  5096                           ; BSR set to: 0
  5097  0007F4  503F               	movf	_g_RS485_Byte,w,c
  5098  0007F6  0D01               	mullw	1
  5099  0007F8  0EE4               	movlw	low _ga_RS485_SendBuff
  5100  0007FA  24F3               	addwf	prodl,w,c
  5101  0007FC  6ED9               	movwf	fsr2l,c
  5102  0007FE  0E00               	movlw	high _ga_RS485_SendBuff
  5103  000800  20F4               	addwfc	prodh,w,c
  5104  000802  6EDA               	movwf	fsr2h,c
  5105  000804  2ADF               	incf	indf2,f,c
  5106  000806  D000               	goto	l2747
  5107  000808                     l2747:
  5108                           
  5109                           ; BSR set to: 0
  5110                           ;Key.c: 213: if (gs_Local_Key_User.a_key_state[4-1] == KEY_hold) ga_RS485_SendBuff[g_RS4
      +                          85_Byte] ++ ;
  5111  000808  0E03               	movlw	3
  5112  00080A  0100               	movlb	0	; () banked
  5113  00080C  19C2               	xorwf	(_gs_Local_Key_User+18)& (0+255),w,b	;volatile
  5114  00080E  A4D8               	btfss	status,2,c
  5115  000810  D00A               	goto	l2751
  5116                           
  5117                           ; BSR set to: 0
  5118  000812  503F               	movf	_g_RS485_Byte,w,c
  5119  000814  0D01               	mullw	1
  5120  000816  0EE4               	movlw	low _ga_RS485_SendBuff
  5121  000818  24F3               	addwf	prodl,w,c
  5122  00081A  6ED9               	movwf	fsr2l,c
  5123  00081C  0E00               	movlw	high _ga_RS485_SendBuff
  5124  00081E  20F4               	addwfc	prodh,w,c
  5125  000820  6EDA               	movwf	fsr2h,c
  5126  000822  2ADF               	incf	indf2,f,c
  5127  000824  D000               	goto	l2751
  5128  000826                     l2751:
  5129                           
  5130                           ; BSR set to: 0
  5131                           ;Key.c: 216: if (gs_Local_Key_User.a_key_state[5-1] == KEY_short)
  5132  000826  0100               	movlb	0	; () banked
  5133  000828  05C3               	decf	(_gs_Local_Key_User+19)& (0+255),w,b	;volatile
  5134  00082A  A4D8               	btfss	status,2,c
  5135  00082C  D003               	goto	l2755
  5136                           
  5137                           ; BSR set to: 0
  5138                           ;Key.c: 217: gs_Switch.Usart_OneDate = 1;
  5139  00082E  0E01               	movlw	1
  5140  000830  6E43               	movwf	_gs_Switch+2,c
  5141  000832  D000               	goto	l2755
  5142  000834                     l2755:
  5143                           
  5144                           ; BSR set to: 0
  5145                           ;Key.c: 220: if (gs_Local_Key_User.a_key_state[6-1] == KEY_short) ga_RS485_SendBuff[g_RS
      +                          485_Byte] -- ;
  5146  000834  0100               	movlb	0	; () banked
  5147  000836  05C4               	decf	(_gs_Local_Key_User+20)& (0+255),w,b	;volatile
  5148  000838  A4D8               	btfss	status,2,c
  5149  00083A  D00A               	goto	l2759
  5150                           
  5151                           ; BSR set to: 0
  5152  00083C  503F               	movf	_g_RS485_Byte,w,c
  5153  00083E  0D01               	mullw	1
  5154  000840  0EE4               	movlw	low _ga_RS485_SendBuff
  5155  000842  24F3               	addwf	prodl,w,c
  5156  000844  6ED9               	movwf	fsr2l,c
  5157  000846  0E00               	movlw	high _ga_RS485_SendBuff
  5158  000848  20F4               	addwfc	prodh,w,c
  5159  00084A  6EDA               	movwf	fsr2h,c
  5160  00084C  06DF               	decf	indf2,f,c
  5161  00084E  D000               	goto	l2759
  5162  000850                     l2759:
  5163                           
  5164                           ; BSR set to: 0
  5165                           ;Key.c: 221: if (gs_Local_Key_User.a_key_state[6-1] == KEY_hold) ga_RS485_SendBuff[g_RS4
      +                          85_Byte] -- ;
  5166  000850  0E03               	movlw	3
  5167  000852  0100               	movlb	0	; () banked
  5168  000854  19C4               	xorwf	(_gs_Local_Key_User+20)& (0+255),w,b	;volatile
  5169  000856  A4D8               	btfss	status,2,c
  5170  000858  D00A               	goto	l2763
  5171                           
  5172                           ; BSR set to: 0
  5173  00085A  503F               	movf	_g_RS485_Byte,w,c
  5174  00085C  0D01               	mullw	1
  5175  00085E  0EE4               	movlw	low _ga_RS485_SendBuff
  5176  000860  24F3               	addwf	prodl,w,c
  5177  000862  6ED9               	movwf	fsr2l,c
  5178  000864  0E00               	movlw	high _ga_RS485_SendBuff
  5179  000866  20F4               	addwfc	prodh,w,c
  5180  000868  6EDA               	movwf	fsr2h,c
  5181  00086A  06DF               	decf	indf2,f,c
  5182  00086C  D000               	goto	l2763
  5183  00086E                     l2763:
  5184                           
  5185                           ; BSR set to: 0
  5186                           ;Key.c: 225: if( g_RS485_Byte > 250 ) g_RS485_Byte = 10 - 1;
  5187  00086E  0EFA               	movlw	250
  5188  000870  643F               	cpfsgt	_g_RS485_Byte,c
  5189  000872  D002               	goto	l2767
  5190                           
  5191                           ; BSR set to: 0
  5192  000874  0E09               	movlw	9
  5193  000876  D005               	goto	L6
  5194  000878                     l2767:
  5195                           
  5196                           ; BSR set to: 0
  5197                           ;Key.c: 226: else g_RS485_Byte %= 10;
  5198  000878  0E0A               	movlw	10
  5199  00087A  6E19               	movwf	___lbmod@divisor,c
  5200  00087C  503F               	movf	_g_RS485_Byte,w,c
  5201  00087E  EC0D  F00B         	call	___lbmod
  5202  000882                     L6:
  5203  000882  6E3F               	movwf	_g_RS485_Byte,c
  5204  000884  D000               	goto	l2769
  5205  000886                     l2769:
  5206                           
  5207                           ;Key.c: 229: Key_ResetFSM();
  5208  000886  ECF2  F009         	call	_Key_ResetFSM	;wreg free
  5209  00088A  0012               	return		;funcret
  5210  00088C                     __end_of_Key_ManageMessage:
  5211                           	opt stack 0
  5212                           tblptru	equ	0xFF8
  5213                           tblptrh	equ	0xFF7
  5214                           tblptrl	equ	0xFF6
  5215                           tablat	equ	0xFF5
  5216                           prodh	equ	0xFF4
  5217                           prodl	equ	0xFF3
  5218                           intcon	equ	0xFF2
  5219                           postinc0	equ	0xFEE
  5220                           wreg	equ	0xFE8
  5221                           indf1	equ	0xFE7
  5222                           postdec1	equ	0xFE5
  5223                           fsr1h	equ	0xFE2
  5224                           fsr1l	equ	0xFE1
  5225                           indf2	equ	0xFDF
  5226                           postinc2	equ	0xFDE
  5227                           fsr2h	equ	0xFDA
  5228                           fsr2l	equ	0xFD9
  5229                           status	equ	0xFD8
  5230                           
  5231 ;; *************** function ___lbmod *****************
  5232 ;; Defined at:
  5233 ;;		line 4 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbmod.c"
  5234 ;; Parameters:    Size  Location     Type
  5235 ;;  dividend        1    wreg     unsigned char 
  5236 ;;  divisor         1   24[COMRAM] unsigned char 
  5237 ;; Auto vars:     Size  Location     Type
  5238 ;;  dividend        1   25[COMRAM] unsigned char 
  5239 ;;  rem             1   27[COMRAM] unsigned char 
  5240 ;;  counter         1   26[COMRAM] unsigned char 
  5241 ;; Return value:  Size  Location     Type
  5242 ;;                  1    wreg      unsigned char 
  5243 ;; Registers used:
  5244 ;;		wreg, status,2, status,0
  5245 ;; Tracked objects:
  5246 ;;		On entry : 0/0
  5247 ;;		On exit  : 0/0
  5248 ;;		Unchanged: 0/0
  5249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5250 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5251 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5253 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5254 ;;Total ram usage:        4 bytes
  5255 ;; Hardware stack levels used:    1
  5256 ;; Hardware stack levels required when called:    3
  5257 ;; This function calls:
  5258 ;;		Nothing
  5259 ;; This function is called by:
  5260 ;;		_Key_ManageMessage
  5261 ;; This function uses a non-reentrant model
  5262 ;;
  5263                           
  5264                           	psect	text33
  5265  00161A                     __ptext33:
  5266                           	opt stack 0
  5267  00161A                     ___lbmod:
  5268                           	opt stack 25
  5269                           
  5270                           ;incstack = 0
  5271                           ;___lbmod@dividend stored from wreg
  5272  00161A  6E1A               	movwf	___lbmod@dividend,c
  5273  00161C  0E08               	movlw	8
  5274  00161E  6E1B               	movwf	___lbmod@counter,c
  5275  001620  0E00               	movlw	0
  5276  001622  6E1C               	movwf	___lbmod@rem,c
  5277  001624  D000               	goto	l2617
  5278  001626                     l2617:
  5279  001626  90D8               	bcf	status,0,c
  5280  001628  341A               	rlcf	___lbmod@dividend,w,c
  5281  00162A  341C               	rlcf	___lbmod@rem,w,c
  5282  00162C  6E1C               	movwf	___lbmod@rem,c
  5283  00162E  90D8               	bcf	status,0,c
  5284  001630  361A               	rlcf	___lbmod@dividend,f,c
  5285  001632  5019               	movf	___lbmod@divisor,w,c
  5286  001634  5C1C               	subwf	___lbmod@rem,w,c
  5287  001636  A0D8               	btfss	status,0,c
  5288  001638  D003               	goto	l2625
  5289  00163A  5019               	movf	___lbmod@divisor,w,c
  5290  00163C  5E1C               	subwf	___lbmod@rem,f,c
  5291  00163E  D000               	goto	l2625
  5292  001640                     l2625:
  5293  001640  2E1B               	decfsz	___lbmod@counter,f,c
  5294  001642  D7F1               	goto	l2617
  5295  001644  D000               	goto	l2627
  5296  001646                     l2627:
  5297  001646  501C               	movf	___lbmod@rem,w,c
  5298  001648  0012               	return	
  5299  00164A  0012               	return		;funcret
  5300  00164C                     __end_of___lbmod:
  5301                           	opt stack 0
  5302                           tblptru	equ	0xFF8
  5303                           tblptrh	equ	0xFF7
  5304                           tblptrl	equ	0xFF6
  5305                           tablat	equ	0xFF5
  5306                           prodh	equ	0xFF4
  5307                           prodl	equ	0xFF3
  5308                           intcon	equ	0xFF2
  5309                           postinc0	equ	0xFEE
  5310                           wreg	equ	0xFE8
  5311                           indf1	equ	0xFE7
  5312                           postdec1	equ	0xFE5
  5313                           fsr1h	equ	0xFE2
  5314                           fsr1l	equ	0xFE1
  5315                           indf2	equ	0xFDF
  5316                           postinc2	equ	0xFDE
  5317                           fsr2h	equ	0xFDA
  5318                           fsr2l	equ	0xFD9
  5319                           status	equ	0xFD8
  5320                           
  5321 ;; *************** function _Key_ResetFSM *****************
  5322 ;; Defined at:
  5323 ;;		line 162 in file "_01_USER/Key.c"
  5324 ;; Parameters:    Size  Location     Type
  5325 ;;		None
  5326 ;; Auto vars:     Size  Location     Type
  5327 ;;  t               1   24[COMRAM] unsigned char 
  5328 ;; Return value:  Size  Location     Type
  5329 ;;		None               void
  5330 ;; Registers used:
  5331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5332 ;; Tracked objects:
  5333 ;;		On entry : 0/0
  5334 ;;		On exit  : 0/0
  5335 ;;		Unchanged: 0/0
  5336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5338 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5340 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5341 ;;Total ram usage:        1 bytes
  5342 ;; Hardware stack levels used:    1
  5343 ;; Hardware stack levels required when called:    3
  5344 ;; This function calls:
  5345 ;;		Nothing
  5346 ;; This function is called by:
  5347 ;;		_Key_ManageMessage
  5348 ;; This function uses a non-reentrant model
  5349 ;;
  5350                           
  5351                           	psect	text34
  5352  0013E4                     __ptext34:
  5353                           	opt stack 0
  5354  0013E4                     _Key_ResetFSM:
  5355                           	opt stack 25
  5356                           
  5357                           ;Key.c: 164: unsigned char t;
  5358                           ;Key.c: 165: gs_Local_Key_User.key_BUS = 0x00;
  5359                           
  5360                           ;incstack = 0
  5361  0013E4  0E00               	movlw	0
  5362  0013E6  0100               	movlb	0	; () banked
  5363  0013E8  6FB0               	movwf	_gs_Local_Key_User& (0+255),b	;volatile
  5364                           
  5365                           ;Key.c: 166: gs_Local_Key_User.key_group = KEY_default;
  5366  0013EA  0E00               	movlw	0
  5367  0013EC  0100               	movlb	0	; () banked
  5368  0013EE  6FB1               	movwf	(_gs_Local_Key_User+1)& (0+255),b	;volatile
  5369                           
  5370                           ;Key.c: 167: t=4;
  5371  0013F0  0E04               	movlw	4
  5372  0013F2  6E19               	movwf	Key_ResetFSM@t,c
  5373                           
  5374                           ;Key.c: 168: while(t--) gs_Local_Key_User.a_key_count[t] = 0,
  5375  0013F4  D017               	goto	l2489
  5376  0013F6                     l2487:
  5377                           
  5378                           ;Key.c: 169: gs_Local_Key_User.a_key_state[t] = KEY_default;
  5379  0013F6  5019               	movf	Key_ResetFSM@t,w,c
  5380  0013F8  0D02               	mullw	2
  5381  0013FA  0EB3               	movlw	low (_gs_Local_Key_User+3)
  5382  0013FC  24F3               	addwf	prodl,w,c
  5383  0013FE  6ED9               	movwf	fsr2l,c
  5384  001400  0E00               	movlw	high (_gs_Local_Key_User+3)
  5385  001402  20F4               	addwfc	prodh,w,c
  5386  001404  6EDA               	movwf	fsr2h,c
  5387  001406  0E00               	movlw	0
  5388  001408  6EDE               	movwf	postinc2,c
  5389  00140A  0E00               	movlw	0
  5390  00140C  6EDD               	movwf	postdec2,c
  5391  00140E  5019               	movf	Key_ResetFSM@t,w,c
  5392  001410  0D01               	mullw	1
  5393  001412  0EBF               	movlw	low (_gs_Local_Key_User+15)
  5394  001414  24F3               	addwf	prodl,w,c
  5395  001416  6ED9               	movwf	fsr2l,c
  5396  001418  0E00               	movlw	high (_gs_Local_Key_User+15)
  5397  00141A  20F4               	addwfc	prodh,w,c
  5398  00141C  6EDA               	movwf	fsr2h,c
  5399  00141E  0E00               	movlw	0
  5400  001420  6EDF               	movwf	indf2,c
  5401  001422  D000               	goto	l2489
  5402  001424                     l2489:
  5403  001424  0619               	decf	Key_ResetFSM@t,f,c
  5404  001426  2819               	incf	Key_ResetFSM@t,w,c
  5405  001428  A4D8               	btfss	status,2,c
  5406  00142A  D7E5               	goto	l2487
  5407  00142C  0012               	return		;funcret
  5408  00142E                     __end_of_Key_ResetFSM:
  5409                           	opt stack 0
  5410                           tblptru	equ	0xFF8
  5411                           tblptrh	equ	0xFF7
  5412                           tblptrl	equ	0xFF6
  5413                           tablat	equ	0xFF5
  5414                           prodh	equ	0xFF4
  5415                           prodl	equ	0xFF3
  5416                           intcon	equ	0xFF2
  5417                           postinc0	equ	0xFEE
  5418                           wreg	equ	0xFE8
  5419                           indf1	equ	0xFE7
  5420                           postdec1	equ	0xFE5
  5421                           fsr1h	equ	0xFE2
  5422                           fsr1l	equ	0xFE1
  5423                           indf2	equ	0xFDF
  5424                           postinc2	equ	0xFDE
  5425                           postdec2	equ	0xFDD
  5426                           fsr2h	equ	0xFDA
  5427                           fsr2l	equ	0xFD9
  5428                           status	equ	0xFD8
  5429                           
  5430 ;; *************** function _Key_ReadFSM *****************
  5431 ;; Defined at:
  5432 ;;		line 113 in file "_01_USER/Key.c"
  5433 ;; Parameters:    Size  Location     Type
  5434 ;;		None
  5435 ;; Auto vars:     Size  Location     Type
  5436 ;;  key_num         1   29[COMRAM] unsigned char 
  5437 ;;  key_num_mate    1   28[COMRAM] unsigned char 
  5438 ;; Return value:  Size  Location     Type
  5439 ;;		None               void
  5440 ;; Registers used:
  5441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5442 ;; Tracked objects:
  5443 ;;		On entry : 0/0
  5444 ;;		On exit  : 0/0
  5445 ;;		Unchanged: 0/0
  5446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5448 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5449 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5450 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5451 ;;Total ram usage:        6 bytes
  5452 ;; Hardware stack levels used:    1
  5453 ;; Hardware stack levels required when called:    3
  5454 ;; This function calls:
  5455 ;;		Nothing
  5456 ;; This function is called by:
  5457 ;;		_Key_ManageMessage
  5458 ;; This function uses a non-reentrant model
  5459 ;;
  5460                           
  5461                           	psect	text35
  5462  00056C                     __ptext35:
  5463                           	opt stack 0
  5464  00056C                     _Key_ReadFSM:
  5465                           	opt stack 25
  5466                           
  5467                           ;Key.c: 115: unsigned char key_num = 6,key_num_mate;
  5468                           
  5469                           ;incstack = 0
  5470  00056C  0E06               	movlw	6
  5471  00056E  6E1E               	movwf	Key_ReadFSM@key_num,c
  5472                           
  5473                           ;Key.c: 118: while(key_num--)
  5474  000570  D072               	goto	l2457
  5475  000572                     l2439:
  5476                           
  5477                           ;Key.c: 119: {
  5478                           ;Key.c: 121: if( s_Local_Key_FSM.key_BUS == 0x00 )
  5479  000572  0100               	movlb	0	; () banked
  5480  000574  51C5               	movf	_s_Local_Key_FSM& (0+255),w,b	;volatile
  5481  000576  A4D8               	btfss	status,2,c
  5482  000578  D04A               	goto	l2451
  5483                           
  5484                           ; BSR set to: 0
  5485                           ;Key.c: 122: {
  5486                           ;Key.c: 123: if( s_Local_Key_FSM.a_key_count[key_num] > 5 )
  5487  00057A  501E               	movf	Key_ReadFSM@key_num,w,c
  5488  00057C  0D02               	mullw	2
  5489  00057E  0EC8               	movlw	low (_s_Local_Key_FSM+3)
  5490  000580  24F3               	addwf	prodl,w,c
  5491  000582  6ED9               	movwf	fsr2l,c
  5492  000584  0E00               	movlw	high (_s_Local_Key_FSM+3)
  5493  000586  20F4               	addwfc	prodh,w,c
  5494  000588  6EDA               	movwf	fsr2h,c
  5495  00058A  0E01               	movlw	1
  5496  00058C  50DB               	movf	plusw2,w,c
  5497  00058E  E104               	bnz	u2050
  5498  000590  0E06               	movlw	6
  5499  000592  5CDE               	subwf	postinc2,w,c
  5500  000594  A0D8               	btfss	status,0,c
  5501  000596  D024               	goto	l2449
  5502  000598                     u2050:
  5503                           
  5504                           ; BSR set to: 0
  5505                           ;Key.c: 124: {
  5506                           ;Key.c: 125: if( s_Local_Key_FSM.a_key_count[key_num] > 60 )
  5507  000598  501E               	movf	Key_ReadFSM@key_num,w,c
  5508  00059A  0D02               	mullw	2
  5509  00059C  0EC8               	movlw	low (_s_Local_Key_FSM+3)
  5510  00059E  24F3               	addwf	prodl,w,c
  5511  0005A0  6ED9               	movwf	fsr2l,c
  5512  0005A2  0E00               	movlw	high (_s_Local_Key_FSM+3)
  5513  0005A4  20F4               	addwfc	prodh,w,c
  5514  0005A6  6EDA               	movwf	fsr2h,c
  5515  0005A8  0E01               	movlw	1
  5516  0005AA  50DB               	movf	plusw2,w,c
  5517  0005AC  E104               	bnz	u2060
  5518  0005AE  0E3D               	movlw	61
  5519  0005B0  5CDE               	subwf	postinc2,w,c
  5520  0005B2  A0D8               	btfss	status,0,c
  5521  0005B4  D00A               	goto	l2447
  5522  0005B6                     u2060:
  5523                           
  5524                           ; BSR set to: 0
  5525                           ;Key.c: 126: gs_Local_Key_User.a_key_state[key_num] = KEY_long;
  5526  0005B6  501E               	movf	Key_ReadFSM@key_num,w,c
  5527  0005B8  0D01               	mullw	1
  5528  0005BA  0EBF               	movlw	low (_gs_Local_Key_User+15)
  5529  0005BC  24F3               	addwf	prodl,w,c
  5530  0005BE  6ED9               	movwf	fsr2l,c
  5531  0005C0  0E00               	movlw	high (_gs_Local_Key_User+15)
  5532  0005C2  20F4               	addwfc	prodh,w,c
  5533  0005C4  6EDA               	movwf	fsr2h,c
  5534  0005C6  0E05               	movlw	5
  5535  0005C8  D014               	goto	L7
  5536  0005CA                     l2447:
  5537                           
  5538                           ; BSR set to: 0
  5539                           ;Key.c: 127: else gs_Local_Key_User.a_key_state[key_num] = KEY_short;
  5540  0005CA  501E               	movf	Key_ReadFSM@key_num,w,c
  5541  0005CC  0D01               	mullw	1
  5542  0005CE  0EBF               	movlw	low (_gs_Local_Key_User+15)
  5543  0005D0  24F3               	addwf	prodl,w,c
  5544  0005D2  6ED9               	movwf	fsr2l,c
  5545  0005D4  0E00               	movlw	high (_gs_Local_Key_User+15)
  5546  0005D6  20F4               	addwfc	prodh,w,c
  5547  0005D8  6EDA               	movwf	fsr2h,c
  5548  0005DA  0E01               	movlw	1
  5549  0005DC  6EDF               	movwf	indf2,c
  5550                           
  5551                           ; BSR set to: 0
  5552                           ;Key.c: 128: }
  5553  0005DE  D00A               	goto	l134
  5554  0005E0                     l2449:
  5555                           
  5556                           ; BSR set to: 0
  5557                           ;Key.c: 129: else gs_Local_Key_User.a_key_state[key_num] = KEY_default;
  5558  0005E0  501E               	movf	Key_ReadFSM@key_num,w,c
  5559  0005E2  0D01               	mullw	1
  5560  0005E4  0EBF               	movlw	low (_gs_Local_Key_User+15)
  5561  0005E6  24F3               	addwf	prodl,w,c
  5562  0005E8  6ED9               	movwf	fsr2l,c
  5563  0005EA  0E00               	movlw	high (_gs_Local_Key_User+15)
  5564  0005EC  20F4               	addwfc	prodh,w,c
  5565  0005EE  6EDA               	movwf	fsr2h,c
  5566  0005F0  0E00               	movlw	0
  5567  0005F2                     L7:
  5568  0005F2  6EDF               	movwf	indf2,c
  5569  0005F4                     l134:
  5570                           
  5571                           ; BSR set to: 0
  5572                           ;Key.c: 130: s_Local_Key_FSM.a_key_count[key_num] = 0;
  5573  0005F4  501E               	movf	Key_ReadFSM@key_num,w,c
  5574  0005F6  0D02               	mullw	2
  5575  0005F8  0EC8               	movlw	low (_s_Local_Key_FSM+3)
  5576  0005FA  24F3               	addwf	prodl,w,c
  5577  0005FC  6ED9               	movwf	fsr2l,c
  5578  0005FE  0E00               	movlw	high (_s_Local_Key_FSM+3)
  5579  000600  20F4               	addwfc	prodh,w,c
  5580  000602  6EDA               	movwf	fsr2h,c
  5581  000604  0E00               	movlw	0
  5582  000606  6EDE               	movwf	postinc2,c
  5583  000608  0E00               	movlw	0
  5584  00060A  6EDD               	movwf	postdec2,c
  5585                           
  5586                           ;Key.c: 131: }
  5587  00060C  D024               	goto	l2457
  5588  00060E                     l2451:
  5589                           
  5590                           ; BSR set to: 0
  5591                           ;Key.c: 133: else if( s_Local_Key_FSM.a_key_count[key_num] > 60 )
  5592  00060E  501E               	movf	Key_ReadFSM@key_num,w,c
  5593  000610  0D02               	mullw	2
  5594  000612  0EC8               	movlw	low (_s_Local_Key_FSM+3)
  5595  000614  24F3               	addwf	prodl,w,c
  5596  000616  6ED9               	movwf	fsr2l,c
  5597  000618  0E00               	movlw	high (_s_Local_Key_FSM+3)
  5598  00061A  20F4               	addwfc	prodh,w,c
  5599  00061C  6EDA               	movwf	fsr2h,c
  5600  00061E  0E01               	movlw	1
  5601  000620  50DB               	movf	plusw2,w,c
  5602  000622  E104               	bnz	u2070
  5603  000624  0E3D               	movlw	61
  5604  000626  5CDE               	subwf	postinc2,w,c
  5605  000628  A0D8               	btfss	status,0,c
  5606  00062A  D00A               	goto	l2455
  5607  00062C                     u2070:
  5608                           
  5609                           ; BSR set to: 0
  5610                           ;Key.c: 134: gs_Local_Key_User.a_key_state[key_num] = KEY_hold;
  5611  00062C  501E               	movf	Key_ReadFSM@key_num,w,c
  5612  00062E  0D01               	mullw	1
  5613  000630  0EBF               	movlw	low (_gs_Local_Key_User+15)
  5614  000632  24F3               	addwf	prodl,w,c
  5615  000634  6ED9               	movwf	fsr2l,c
  5616  000636  0E00               	movlw	high (_gs_Local_Key_User+15)
  5617  000638  20F4               	addwfc	prodh,w,c
  5618  00063A  6EDA               	movwf	fsr2h,c
  5619  00063C  0E03               	movlw	3
  5620  00063E  D009               	goto	L8
  5621  000640                     l2455:
  5622                           
  5623                           ; BSR set to: 0
  5624                           ;Key.c: 137: else gs_Local_Key_User.a_key_state[key_num] = KEY_busy;
  5625  000640  501E               	movf	Key_ReadFSM@key_num,w,c
  5626  000642  0D01               	mullw	1
  5627  000644  0EBF               	movlw	low (_gs_Local_Key_User+15)
  5628  000646  24F3               	addwf	prodl,w,c
  5629  000648  6ED9               	movwf	fsr2l,c
  5630  00064A  0E00               	movlw	high (_gs_Local_Key_User+15)
  5631  00064C  20F4               	addwfc	prodh,w,c
  5632  00064E  6EDA               	movwf	fsr2h,c
  5633  000650  0E04               	movlw	4
  5634  000652                     L8:
  5635  000652  6EDF               	movwf	indf2,c
  5636                           
  5637                           ; BSR set to: 0
  5638                           
  5639                           ; BSR set to: 0
  5640  000654  D000               	goto	l2457
  5641  000656                     l2457:
  5642  000656  061E               	decf	Key_ReadFSM@key_num,f,c
  5643  000658  281E               	incf	Key_ReadFSM@key_num,w,c
  5644  00065A  A4D8               	btfss	status,2,c
  5645  00065C  D78A               	goto	l2439
  5646                           
  5647                           ;Key.c: 138: }
  5648                           ;Key.c: 141: for( key_num = 0;key_num < 6 - 1; key_num ++)
  5649  00065E  0E00               	movlw	0
  5650  000660  6E1E               	movwf	Key_ReadFSM@key_num,c
  5651  000662  0E04               	movlw	4
  5652  000664  641E               	cpfsgt	Key_ReadFSM@key_num,c
  5653  000666  D002               	goto	l2465
  5654  000668  0012               	return	
  5655  00066A  0012               	return	
  5656  00066C                     l2465:
  5657                           
  5658                           ;Key.c: 142: for( key_num_mate = key_num+1;key_num_mate < 6 ; key_num_mate ++)
  5659  00066C  281E               	incf	Key_ReadFSM@key_num,w,c
  5660  00066E  6E1D               	movwf	Key_ReadFSM@key_num_mate,c
  5661  000670  0E05               	movlw	5
  5662  000672  641D               	cpfsgt	Key_ReadFSM@key_num_mate,c
  5663  000674  D001               	goto	l2469
  5664  000676  D045               	goto	l2481
  5665  000678                     l2469:
  5666                           
  5667                           ;Key.c: 143: if( gs_Local_Key_User.a_key_state[key_num] == gs_Local_Key_User.a_key_state
      +                          [key_num_mate] )
  5668  000678  501D               	movf	Key_ReadFSM@key_num_mate,w,c
  5669  00067A  0D01               	mullw	1
  5670  00067C  0EBF               	movlw	low (_gs_Local_Key_User+15)
  5671  00067E  24F3               	addwf	prodl,w,c
  5672  000680  6ED9               	movwf	fsr2l,c
  5673  000682  0E00               	movlw	high (_gs_Local_Key_User+15)
  5674  000684  20F4               	addwfc	prodh,w,c
  5675  000686  6EDA               	movwf	fsr2h,c
  5676  000688  501E               	movf	Key_ReadFSM@key_num,w,c
  5677  00068A  0D01               	mullw	1
  5678  00068C  0EBF               	movlw	low (_gs_Local_Key_User+15)
  5679  00068E  24F3               	addwf	prodl,w,c
  5680  000690  6EE1               	movwf	fsr1l,c
  5681  000692  0E00               	movlw	high (_gs_Local_Key_User+15)
  5682  000694  20F4               	addwfc	prodh,w,c
  5683  000696  6EE2               	movwf	fsr1h,c
  5684  000698  50DE               	movf	postinc2,w,c
  5685  00069A  18E6               	xorwf	postinc1,w,c
  5686  00069C  A4D8               	btfss	status,2,c
  5687  00069E  D02F               	goto	l2477
  5688                           
  5689                           ;Key.c: 144: if(gs_Local_Key_User.a_key_state[key_num] != KEY_default)
  5690  0006A0  501E               	movf	Key_ReadFSM@key_num,w,c
  5691  0006A2  0D01               	mullw	1
  5692  0006A4  0EBF               	movlw	low (_gs_Local_Key_User+15)
  5693  0006A6  24F3               	addwf	prodl,w,c
  5694  0006A8  6ED9               	movwf	fsr2l,c
  5695  0006AA  0E00               	movlw	high (_gs_Local_Key_User+15)
  5696  0006AC  20F4               	addwfc	prodh,w,c
  5697  0006AE  6EDA               	movwf	fsr2h,c
  5698  0006B0  50DF               	movf	indf2,w,c
  5699  0006B2  B4D8               	btfsc	status,2,c
  5700  0006B4  D024               	goto	l2477
  5701                           
  5702                           ;Key.c: 145: {
  5703                           ;Key.c: 146: gs_Local_Key_User.key_group = (0x01 << key_num)|(0x01 << key_num_mate);
  5704  0006B6  C01D  F019         	movff	Key_ReadFSM@key_num_mate,??_Key_ReadFSM
  5705  0006BA  0E01               	movlw	1
  5706  0006BC  6E1A               	movwf	(??_Key_ReadFSM+1)& (0+255),c
  5707  0006BE  2A19               	incf	??_Key_ReadFSM,f,c
  5708  0006C0  D002               	goto	u2134
  5709  0006C2                     u2135:
  5710  0006C2  90D8               	bcf	status,0,c
  5711  0006C4  361A               	rlcf	??_Key_ReadFSM+1,f,c
  5712  0006C6                     u2134:
  5713  0006C6  2E19               	decfsz	??_Key_ReadFSM,f,c
  5714  0006C8  D7FC               	goto	u2135
  5715  0006CA  C01E  F01B         	movff	Key_ReadFSM@key_num,??_Key_ReadFSM+2
  5716  0006CE  0E01               	movlw	1
  5717  0006D0  6E1C               	movwf	(??_Key_ReadFSM+3)& (0+255),c
  5718  0006D2  2A1B               	incf	??_Key_ReadFSM+2,f,c
  5719  0006D4  D002               	goto	u2144
  5720  0006D6                     u2145:
  5721  0006D6  90D8               	bcf	status,0,c
  5722  0006D8  361C               	rlcf	??_Key_ReadFSM+3,f,c
  5723  0006DA                     u2144:
  5724  0006DA  2E1B               	decfsz	??_Key_ReadFSM+2,f,c
  5725  0006DC  D7FC               	goto	u2145
  5726  0006DE  501C               	movf	??_Key_ReadFSM+3,w,c
  5727  0006E0  101A               	iorwf	??_Key_ReadFSM+1,w,c
  5728  0006E2  0100               	movlb	0	; () banked
  5729  0006E4  6FB1               	movwf	(_gs_Local_Key_User+1)& (0+255),b	;volatile
  5730                           
  5731                           ; BSR set to: 0
  5732                           ;Key.c: 147: gs_Local_Key_User.key_group_state = gs_Local_Key_User.a_key_state[key_num];
  5733  0006E6  501E               	movf	Key_ReadFSM@key_num,w,c
  5734  0006E8  0D01               	mullw	1
  5735  0006EA  0EBF               	movlw	low (_gs_Local_Key_User+15)
  5736  0006EC  24F3               	addwf	prodl,w,c
  5737  0006EE  6ED9               	movwf	fsr2l,c
  5738  0006F0  0E00               	movlw	high (_gs_Local_Key_User+15)
  5739  0006F2  20F4               	addwfc	prodh,w,c
  5740  0006F4  6EDA               	movwf	fsr2h,c
  5741  0006F6  50DF               	movf	indf2,w,c
  5742  0006F8  0100               	movlb	0	; () banked
  5743  0006FA  6FB2               	movwf	(_gs_Local_Key_User+2)& (0+255),b	;volatile
  5744                           
  5745                           ; BSR set to: 0
  5746  0006FC  D000               	goto	l2477
  5747  0006FE                     l2477:
  5748  0006FE  2A1D               	incf	Key_ReadFSM@key_num_mate,f,c
  5749  000700  D7B7               	goto	L9
  5750  000702                     l2481:
  5751  000702  2A1E               	incf	Key_ReadFSM@key_num,f,c
  5752  000704  0E04               	movlw	4
  5753  000706  641E               	cpfsgt	Key_ReadFSM@key_num,c
  5754  000708  D7B1               	goto	l2465
  5755  00070A  0012               	return	
  5756  00070C  0012               	return		;funcret
  5757  00070E                     __end_of_Key_ReadFSM:
  5758                           	opt stack 0
  5759                           tblptru	equ	0xFF8
  5760                           tblptrh	equ	0xFF7
  5761                           tblptrl	equ	0xFF6
  5762                           tablat	equ	0xFF5
  5763                           prodh	equ	0xFF4
  5764                           prodl	equ	0xFF3
  5765                           intcon	equ	0xFF2
  5766                           postinc0	equ	0xFEE
  5767                           wreg	equ	0xFE8
  5768                           indf1	equ	0xFE7
  5769                           postinc1	equ	0xFE6
  5770                           postdec1	equ	0xFE5
  5771                           fsr1h	equ	0xFE2
  5772                           fsr1l	equ	0xFE1
  5773                           indf2	equ	0xFDF
  5774                           postinc2	equ	0xFDE
  5775                           postdec2	equ	0xFDD
  5776                           plusw2	equ	0xFDB
  5777                           fsr2h	equ	0xFDA
  5778                           fsr2l	equ	0xFD9
  5779                           status	equ	0xFD8
  5780                           
  5781 ;; *************** function _Key_Init *****************
  5782 ;; Defined at:
  5783 ;;		line 42 in file "_01_USER/Key.c"
  5784 ;; Parameters:    Size  Location     Type
  5785 ;;		None
  5786 ;; Auto vars:     Size  Location     Type
  5787 ;;		None
  5788 ;; Return value:  Size  Location     Type
  5789 ;;		None               void
  5790 ;; Registers used:
  5791 ;;		None
  5792 ;; Tracked objects:
  5793 ;;		On entry : 0/0
  5794 ;;		On exit  : 0/0
  5795 ;;		Unchanged: 0/0
  5796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5801 ;;Total ram usage:        0 bytes
  5802 ;; Hardware stack levels used:    1
  5803 ;; Hardware stack levels required when called:    3
  5804 ;; This function calls:
  5805 ;;		Nothing
  5806 ;; This function is called by:
  5807 ;;		_main
  5808 ;; This function uses a non-reentrant model
  5809 ;;
  5810                           
  5811                           	psect	text36
  5812  0017AE                     __ptext36:
  5813                           	opt stack 0
  5814  0017AE                     _Key_Init:
  5815                           	opt stack 27
  5816                           
  5817                           ;Key.c: 45: TRISC1 = 1;
  5818                           
  5819                           ;incstack = 0
  5820  0017AE  8294               	bsf	3988,1,c	;volatile
  5821                           
  5822                           ;Key.c: 46: TRISF1 = 1;
  5823  0017B0  8297               	bsf	3991,1,c	;volatile
  5824                           
  5825                           ;Key.c: 47: TRISF2 = 1;
  5826  0017B2  8497               	bsf	3991,2,c	;volatile
  5827                           
  5828                           ;Key.c: 48: TRISA4 = 1;
  5829  0017B4  8892               	bsf	3986,4,c	;volatile
  5830                           
  5831                           ;Key.c: 49: TRISA5 = 1;
  5832  0017B6  8A92               	bsf	3986,5,c	;volatile
  5833                           
  5834                           ;Key.c: 50: TRISF3 = 1;
  5835  0017B8  8697               	bsf	3991,3,c	;volatile
  5836                           
  5837                           ;Key.c: 53: ANSEL4 = 0;
  5838  0017BA  010F               	movlb	15	; () banked
  5839  0017BC  9925               	bcf	37,4,b	;volatile
  5840                           
  5841                           ;Key.c: 54: ANSEL6 = 0;
  5842  0017BE  010F               	movlb	15	; () banked
  5843  0017C0  9D25               	bcf	37,6,b	;volatile
  5844                           
  5845                           ;Key.c: 55: ANSEL7 = 0;
  5846  0017C2  010F               	movlb	15	; () banked
  5847  0017C4  9F25               	bcf	37,7,b	;volatile
  5848                           
  5849                           ;Key.c: 56: ANSEL8 = 0;
  5850  0017C6  010F               	movlb	15	; () banked
  5851  0017C8  9124               	bcf	36,0,b	;volatile
  5852                           
  5853                           ; BSR set to: 15
  5854  0017CA  0012               	return		;funcret
  5855  0017CC                     __end_of_Key_Init:
  5856                           	opt stack 0
  5857                           tblptru	equ	0xFF8
  5858                           tblptrh	equ	0xFF7
  5859                           tblptrl	equ	0xFF6
  5860                           tablat	equ	0xFF5
  5861                           prodh	equ	0xFF4
  5862                           prodl	equ	0xFF3
  5863                           intcon	equ	0xFF2
  5864                           postinc0	equ	0xFEE
  5865                           wreg	equ	0xFE8
  5866                           indf1	equ	0xFE7
  5867                           postinc1	equ	0xFE6
  5868                           postdec1	equ	0xFE5
  5869                           fsr1h	equ	0xFE2
  5870                           fsr1l	equ	0xFE1
  5871                           indf2	equ	0xFDF
  5872                           postinc2	equ	0xFDE
  5873                           postdec2	equ	0xFDD
  5874                           plusw2	equ	0xFDB
  5875                           fsr2h	equ	0xFDA
  5876                           fsr2l	equ	0xFD9
  5877                           status	equ	0xFD8
  5878                           
  5879 ;; *************** function _Init_TM1640 *****************
  5880 ;; Defined at:
  5881 ;;		line 21 in file "_01_USER/TM1640.c"
  5882 ;; Parameters:    Size  Location     Type
  5883 ;;		None
  5884 ;; Auto vars:     Size  Location     Type
  5885 ;;		None
  5886 ;; Return value:  Size  Location     Type
  5887 ;;		None               void
  5888 ;; Registers used:
  5889 ;;		wreg, status,2, status,0, cstack
  5890 ;; Tracked objects:
  5891 ;;		On entry : 0/0
  5892 ;;		On exit  : 0/0
  5893 ;;		Unchanged: 0/0
  5894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5899 ;;Total ram usage:        0 bytes
  5900 ;; Hardware stack levels used:    1
  5901 ;; Hardware stack levels required when called:    5
  5902 ;; This function calls:
  5903 ;;		_TM1640_Start
  5904 ;;		_TM1640_Stop
  5905 ;;		_TM1640_Writer_Byte
  5906 ;; This function is called by:
  5907 ;;		_main
  5908 ;; This function uses a non-reentrant model
  5909 ;;
  5910                           
  5911                           	psect	text37
  5912  0016FA                     __ptext37:
  5913                           	opt stack 0
  5914  0016FA                     _Init_TM1640:
  5915                           	opt stack 25
  5916                           
  5917                           ;TM1640.c: 24: TRISD5 = 0;
  5918                           
  5919                           ; BSR set to: 15
  5920                           ;incstack = 0
  5921  0016FA  9A95               	bcf	3989,5,c	;volatile
  5922                           
  5923                           ;TM1640.c: 25: TRISD6 = 0;
  5924  0016FC  9C95               	bcf	3989,6,c	;volatile
  5925                           
  5926                           ;TM1640.c: 27: TM1640_Stop();
  5927  0016FE  ECA2  F00B         	call	_TM1640_Stop	;wreg free
  5928                           
  5929                           ;TM1640.c: 29: TM1640_Start();
  5930  001702  ECB4  F00B         	call	_TM1640_Start	;wreg free
  5931                           
  5932                           ;TM1640.c: 30: TM1640_Writer_Byte(0x44);
  5933  001706  0E44               	movlw	68
  5934  001708  EC9C  F00A         	call	_TM1640_Writer_Byte
  5935                           
  5936                           ;TM1640.c: 31: TM1640_Stop();
  5937  00170C  ECA2  F00B         	call	_TM1640_Stop	;wreg free
  5938                           
  5939                           ;TM1640.c: 33: TM1640_Start();
  5940  001710  ECB4  F00B         	call	_TM1640_Start	;wreg free
  5941                           
  5942                           ;TM1640.c: 34: TM1640_Writer_Byte(0x8F);
  5943  001714  0E8F               	movlw	143
  5944  001716  EC9C  F00A         	call	_TM1640_Writer_Byte
  5945                           
  5946                           ;TM1640.c: 35: TM1640_Stop();
  5947  00171A  ECA2  F00B         	call	_TM1640_Stop	;wreg free
  5948  00171E  0012               	return		;funcret
  5949  001720                     __end_of_Init_TM1640:
  5950                           	opt stack 0
  5951                           tblptru	equ	0xFF8
  5952                           tblptrh	equ	0xFF7
  5953                           tblptrl	equ	0xFF6
  5954                           tablat	equ	0xFF5
  5955                           prodh	equ	0xFF4
  5956                           prodl	equ	0xFF3
  5957                           intcon	equ	0xFF2
  5958                           postinc0	equ	0xFEE
  5959                           wreg	equ	0xFE8
  5960                           indf1	equ	0xFE7
  5961                           postinc1	equ	0xFE6
  5962                           postdec1	equ	0xFE5
  5963                           fsr1h	equ	0xFE2
  5964                           fsr1l	equ	0xFE1
  5965                           indf2	equ	0xFDF
  5966                           postinc2	equ	0xFDE
  5967                           postdec2	equ	0xFDD
  5968                           plusw2	equ	0xFDB
  5969                           fsr2h	equ	0xFDA
  5970                           fsr2l	equ	0xFD9
  5971                           status	equ	0xFD8
  5972                           
  5973 ;; *************** function _TM1640_Writer_Byte *****************
  5974 ;; Defined at:
  5975 ;;		line 116 in file "_01_USER/TM1640.c"
  5976 ;; Parameters:    Size  Location     Type
  5977 ;;  Date            1    wreg     unsigned char 
  5978 ;; Auto vars:     Size  Location     Type
  5979 ;;  Date            1   26[COMRAM] unsigned char 
  5980 ;;  mask            1   27[COMRAM] unsigned char 
  5981 ;; Return value:  Size  Location     Type
  5982 ;;		None               void
  5983 ;; Registers used:
  5984 ;;		wreg, status,2, status,0, cstack
  5985 ;; Tracked objects:
  5986 ;;		On entry : 0/0
  5987 ;;		On exit  : 0/0
  5988 ;;		Unchanged: 0/0
  5989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5991 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5993 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5994 ;;Total ram usage:        2 bytes
  5995 ;; Hardware stack levels used:    1
  5996 ;; Hardware stack levels required when called:    4
  5997 ;; This function calls:
  5998 ;;		_TM1640_Delay
  5999 ;; This function is called by:
  6000 ;;		_Init_TM1640
  6001 ;;		_TM1640_Writer_Dates
  6002 ;;		_Open_Display
  6003 ;;		_Disable_Display
  6004 ;; This function uses a non-reentrant model
  6005 ;;
  6006                           
  6007                           	psect	text38
  6008  001538                     __ptext38:
  6009                           	opt stack 0
  6010  001538                     _TM1640_Writer_Byte:
  6011                           	opt stack 24
  6012                           
  6013                           ;incstack = 0
  6014                           ;TM1640_Writer_Byte@Date stored from wreg
  6015  001538  6E1B               	movwf	TM1640_Writer_Byte@Date,c
  6016                           
  6017                           ;TM1640.c: 118: unsigned char mask;
  6018                           ;TM1640.c: 120: for(mask=0x01; mask; mask<<=1)
  6019  00153A  0E01               	movlw	1
  6020  00153C  6E1C               	movwf	TM1640_Writer_Byte@mask,c
  6021  00153E  D017               	goto	l2355
  6022  001540                     l369:
  6023                           
  6024                           ;TM1640.c: 121: {
  6025                           ;TM1640.c: 122: RD6 = 0;
  6026  001540  9C83               	bcf	3971,6,c	;volatile
  6027                           
  6028                           ;TM1640.c: 123: TM1640_Delay(1);
  6029  001542  0E01               	movlw	1
  6030  001544  EC01  F00C         	call	_TM1640_Delay
  6031                           
  6032                           ;TM1640.c: 124: if(mask & Date)
  6033  001548  501C               	movf	TM1640_Writer_Byte@mask,w,c
  6034  00154A  141B               	andwf	TM1640_Writer_Byte@Date,w,c
  6035  00154C  0900               	iorlw	0
  6036  00154E  B4D8               	btfsc	status,2,c
  6037  001550  D002               	goto	l370
  6038                           
  6039                           ;TM1640.c: 125: RD5 = 1;
  6040  001552  8A83               	bsf	3971,5,c	;volatile
  6041  001554  D002               	goto	l2349
  6042  001556                     l370:
  6043                           
  6044                           ;TM1640.c: 126: else
  6045                           ;TM1640.c: 127: RD5 = 0;
  6046  001556  9A83               	bcf	3971,5,c	;volatile
  6047  001558  D000               	goto	l2349
  6048  00155A                     l2349:
  6049                           
  6050                           ;TM1640.c: 128: TM1640_Delay(1);
  6051  00155A  0E01               	movlw	1
  6052  00155C  EC01  F00C         	call	_TM1640_Delay
  6053                           
  6054                           ;TM1640.c: 129: RD6 = 1;
  6055  001560  8C83               	bsf	3971,6,c	;volatile
  6056                           
  6057                           ;TM1640.c: 130: TM1640_Delay(1);
  6058  001562  0E01               	movlw	1
  6059  001564  EC01  F00C         	call	_TM1640_Delay
  6060  001568  90D8               	bcf	status,0,c
  6061  00156A  361C               	rlcf	TM1640_Writer_Byte@mask,f,c
  6062  00156C  D000               	goto	l2355
  6063  00156E                     l2355:
  6064  00156E  501C               	movf	TM1640_Writer_Byte@mask,w,c
  6065  001570  A4D8               	btfss	status,2,c
  6066  001572  D7E6               	goto	l369
  6067  001574  0012               	return		;funcret
  6068  001576                     __end_of_TM1640_Writer_Byte:
  6069                           	opt stack 0
  6070                           tblptru	equ	0xFF8
  6071                           tblptrh	equ	0xFF7
  6072                           tblptrl	equ	0xFF6
  6073                           tablat	equ	0xFF5
  6074                           prodh	equ	0xFF4
  6075                           prodl	equ	0xFF3
  6076                           intcon	equ	0xFF2
  6077                           postinc0	equ	0xFEE
  6078                           wreg	equ	0xFE8
  6079                           indf1	equ	0xFE7
  6080                           postinc1	equ	0xFE6
  6081                           postdec1	equ	0xFE5
  6082                           fsr1h	equ	0xFE2
  6083                           fsr1l	equ	0xFE1
  6084                           indf2	equ	0xFDF
  6085                           postinc2	equ	0xFDE
  6086                           postdec2	equ	0xFDD
  6087                           plusw2	equ	0xFDB
  6088                           fsr2h	equ	0xFDA
  6089                           fsr2l	equ	0xFD9
  6090                           status	equ	0xFD8
  6091                           
  6092 ;; *************** function _TM1640_Stop *****************
  6093 ;; Defined at:
  6094 ;;		line 63 in file "_01_USER/TM1640.c"
  6095 ;; Parameters:    Size  Location     Type
  6096 ;;		None
  6097 ;; Auto vars:     Size  Location     Type
  6098 ;;		None
  6099 ;; Return value:  Size  Location     Type
  6100 ;;		None               void
  6101 ;; Registers used:
  6102 ;;		wreg, status,2, status,0, cstack
  6103 ;; Tracked objects:
  6104 ;;		On entry : 0/0
  6105 ;;		On exit  : 0/0
  6106 ;;		Unchanged: 0/0
  6107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6112 ;;Total ram usage:        0 bytes
  6113 ;; Hardware stack levels used:    1
  6114 ;; Hardware stack levels required when called:    4
  6115 ;; This function calls:
  6116 ;;		_TM1640_Delay
  6117 ;; This function is called by:
  6118 ;;		_Init_TM1640
  6119 ;;		_TM1640_Writer_Dates
  6120 ;;		_Open_Display
  6121 ;;		_Disable_Display
  6122 ;; This function uses a non-reentrant model
  6123 ;;
  6124                           
  6125                           	psect	text39
  6126  001744                     __ptext39:
  6127                           	opt stack 0
  6128  001744                     _TM1640_Stop:
  6129                           	opt stack 24
  6130                           
  6131                           ;TM1640.c: 65: RD6 = 0;
  6132                           
  6133                           ;incstack = 0
  6134  001744  9C83               	bcf	3971,6,c	;volatile
  6135                           
  6136                           ;TM1640.c: 66: TM1640_Delay(1);
  6137  001746  0E01               	movlw	1
  6138  001748  EC01  F00C         	call	_TM1640_Delay
  6139                           
  6140                           ;TM1640.c: 67: RD5 = 0;
  6141  00174C  9A83               	bcf	3971,5,c	;volatile
  6142                           
  6143                           ;TM1640.c: 68: TM1640_Delay(1);
  6144  00174E  0E01               	movlw	1
  6145  001750  EC01  F00C         	call	_TM1640_Delay
  6146                           
  6147                           ;TM1640.c: 69: RD6 = 1;
  6148  001754  8C83               	bsf	3971,6,c	;volatile
  6149                           
  6150                           ;TM1640.c: 70: TM1640_Delay(1);
  6151  001756  0E01               	movlw	1
  6152  001758  EC01  F00C         	call	_TM1640_Delay
  6153                           
  6154                           ;TM1640.c: 71: RD5 = 1;
  6155  00175C  8A83               	bsf	3971,5,c	;volatile
  6156                           
  6157                           ;TM1640.c: 72: TM1640_Delay(1);
  6158  00175E  0E01               	movlw	1
  6159  001760  EC01  F00C         	call	_TM1640_Delay
  6160                           
  6161                           ;TM1640.c: 73: RD6 = 0;
  6162  001764  9C83               	bcf	3971,6,c	;volatile
  6163  001766  0012               	return		;funcret
  6164  001768                     __end_of_TM1640_Stop:
  6165                           	opt stack 0
  6166                           tblptru	equ	0xFF8
  6167                           tblptrh	equ	0xFF7
  6168                           tblptrl	equ	0xFF6
  6169                           tablat	equ	0xFF5
  6170                           prodh	equ	0xFF4
  6171                           prodl	equ	0xFF3
  6172                           intcon	equ	0xFF2
  6173                           postinc0	equ	0xFEE
  6174                           wreg	equ	0xFE8
  6175                           indf1	equ	0xFE7
  6176                           postinc1	equ	0xFE6
  6177                           postdec1	equ	0xFE5
  6178                           fsr1h	equ	0xFE2
  6179                           fsr1l	equ	0xFE1
  6180                           indf2	equ	0xFDF
  6181                           postinc2	equ	0xFDE
  6182                           postdec2	equ	0xFDD
  6183                           plusw2	equ	0xFDB
  6184                           fsr2h	equ	0xFDA
  6185                           fsr2l	equ	0xFD9
  6186                           status	equ	0xFD8
  6187                           
  6188 ;; *************** function _TM1640_Start *****************
  6189 ;; Defined at:
  6190 ;;		line 44 in file "_01_USER/TM1640.c"
  6191 ;; Parameters:    Size  Location     Type
  6192 ;;		None
  6193 ;; Auto vars:     Size  Location     Type
  6194 ;;		None
  6195 ;; Return value:  Size  Location     Type
  6196 ;;		None               void
  6197 ;; Registers used:
  6198 ;;		wreg, status,2, status,0, cstack
  6199 ;; Tracked objects:
  6200 ;;		On entry : 0/0
  6201 ;;		On exit  : 0/0
  6202 ;;		Unchanged: 0/0
  6203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6208 ;;Total ram usage:        0 bytes
  6209 ;; Hardware stack levels used:    1
  6210 ;; Hardware stack levels required when called:    4
  6211 ;; This function calls:
  6212 ;;		_TM1640_Delay
  6213 ;; This function is called by:
  6214 ;;		_Init_TM1640
  6215 ;;		_TM1640_Writer_Dates
  6216 ;;		_Open_Display
  6217 ;;		_Disable_Display
  6218 ;; This function uses a non-reentrant model
  6219 ;;
  6220                           
  6221                           	psect	text40
  6222  001768                     __ptext40:
  6223                           	opt stack 0
  6224  001768                     _TM1640_Start:
  6225                           	opt stack 24
  6226                           
  6227                           ;TM1640.c: 46: RD6 = 0;
  6228                           
  6229                           ;incstack = 0
  6230  001768  9C83               	bcf	3971,6,c	;volatile
  6231                           
  6232                           ;TM1640.c: 47: TM1640_Delay(1);
  6233  00176A  0E01               	movlw	1
  6234  00176C  EC01  F00C         	call	_TM1640_Delay
  6235                           
  6236                           ;TM1640.c: 48: RD5 = 1;
  6237  001770  8A83               	bsf	3971,5,c	;volatile
  6238                           
  6239                           ;TM1640.c: 49: TM1640_Delay(1);
  6240  001772  0E01               	movlw	1
  6241  001774  EC01  F00C         	call	_TM1640_Delay
  6242                           
  6243                           ;TM1640.c: 50: RD6 = 1;
  6244  001778  8C83               	bsf	3971,6,c	;volatile
  6245                           
  6246                           ;TM1640.c: 51: TM1640_Delay(1);
  6247  00177A  0E01               	movlw	1
  6248  00177C  EC01  F00C         	call	_TM1640_Delay
  6249                           
  6250                           ;TM1640.c: 52: RD5 = 0;
  6251  001780  9A83               	bcf	3971,5,c	;volatile
  6252                           
  6253                           ;TM1640.c: 53: TM1640_Delay(1);
  6254  001782  0E01               	movlw	1
  6255  001784  EC01  F00C         	call	_TM1640_Delay
  6256                           
  6257                           ;TM1640.c: 54: RD6 = 0;
  6258  001788  9C83               	bcf	3971,6,c	;volatile
  6259  00178A  0012               	return		;funcret
  6260  00178C                     __end_of_TM1640_Start:
  6261                           	opt stack 0
  6262                           tblptru	equ	0xFF8
  6263                           tblptrh	equ	0xFF7
  6264                           tblptrl	equ	0xFF6
  6265                           tablat	equ	0xFF5
  6266                           prodh	equ	0xFF4
  6267                           prodl	equ	0xFF3
  6268                           intcon	equ	0xFF2
  6269                           postinc0	equ	0xFEE
  6270                           wreg	equ	0xFE8
  6271                           indf1	equ	0xFE7
  6272                           postinc1	equ	0xFE6
  6273                           postdec1	equ	0xFE5
  6274                           fsr1h	equ	0xFE2
  6275                           fsr1l	equ	0xFE1
  6276                           indf2	equ	0xFDF
  6277                           postinc2	equ	0xFDE
  6278                           postdec2	equ	0xFDD
  6279                           plusw2	equ	0xFDB
  6280                           fsr2h	equ	0xFDA
  6281                           fsr2l	equ	0xFD9
  6282                           status	equ	0xFD8
  6283                           
  6284 ;; *************** function _TM1640_Delay *****************
  6285 ;; Defined at:
  6286 ;;		line 166 in file "_01_USER/TM1640.c"
  6287 ;; Parameters:    Size  Location     Type
  6288 ;;  Time            1    wreg     unsigned char 
  6289 ;; Auto vars:     Size  Location     Type
  6290 ;;  Time            1   24[COMRAM] unsigned char 
  6291 ;;  i               1   25[COMRAM] unsigned char 
  6292 ;; Return value:  Size  Location     Type
  6293 ;;		None               void
  6294 ;; Registers used:
  6295 ;;		wreg, status,2, status,0
  6296 ;; Tracked objects:
  6297 ;;		On entry : 0/0
  6298 ;;		On exit  : 0/0
  6299 ;;		Unchanged: 0/0
  6300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6302 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6304 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6305 ;;Total ram usage:        2 bytes
  6306 ;; Hardware stack levels used:    1
  6307 ;; Hardware stack levels required when called:    3
  6308 ;; This function calls:
  6309 ;;		Nothing
  6310 ;; This function is called by:
  6311 ;;		_TM1640_Start
  6312 ;;		_TM1640_Stop
  6313 ;;		_TM1640_Writer_Byte
  6314 ;; This function uses a non-reentrant model
  6315 ;;
  6316                           
  6317                           	psect	text41
  6318  001802                     __ptext41:
  6319                           	opt stack 0
  6320  001802                     _TM1640_Delay:
  6321                           	opt stack 24
  6322                           
  6323                           ;incstack = 0
  6324                           ;TM1640_Delay@Time stored from wreg
  6325  001802  6E19               	movwf	TM1640_Delay@Time,c
  6326  001804                     
  6327                           ;TM1640.c: 171: {
  6328                           ;TM1640.c: 172: for(i=0; i<10; ++i);
  6329  001804  0E00               	movlw	0
  6330  001806  6E1A               	movwf	TM1640_Delay@i,c
  6331  001808  D002               	goto	l2291
  6332  00180A  D004               	goto	l384
  6333  00180C                     l2289:
  6334  00180C  2A1A               	incf	TM1640_Delay@i,f,c
  6335  00180E                     l2291:
  6336  00180E  0E09               	movlw	9
  6337  001810  641A               	cpfsgt	TM1640_Delay@i,c
  6338  001812  D7FC               	goto	l2289
  6339  001814                     l384:
  6340                           
  6341                           ;TM1640.c: 173: }while(--Time);
  6342  001814  2E19               	decfsz	TM1640_Delay@Time,f,c
  6343  001816  D7F6               	goto	l2283
  6344  001818  0012               	return	
  6345  00181A  0012               	return		;funcret
  6346  00181C                     __end_of_TM1640_Delay:
  6347                           	opt stack 0
  6348                           tblptru	equ	0xFF8
  6349                           tblptrh	equ	0xFF7
  6350                           tblptrl	equ	0xFF6
  6351                           tablat	equ	0xFF5
  6352                           prodh	equ	0xFF4
  6353                           prodl	equ	0xFF3
  6354                           intcon	equ	0xFF2
  6355                           postinc0	equ	0xFEE
  6356                           wreg	equ	0xFE8
  6357                           indf1	equ	0xFE7
  6358                           postinc1	equ	0xFE6
  6359                           postdec1	equ	0xFE5
  6360                           fsr1h	equ	0xFE2
  6361                           fsr1l	equ	0xFE1
  6362                           indf2	equ	0xFDF
  6363                           postinc2	equ	0xFDE
  6364                           postdec2	equ	0xFDD
  6365                           plusw2	equ	0xFDB
  6366                           fsr2h	equ	0xFDA
  6367                           fsr2l	equ	0xFD9
  6368                           status	equ	0xFD8
  6369                           
  6370 ;; *************** function _GPIO_Config *****************
  6371 ;; Defined at:
  6372 ;;		line 39 in file "_01_USER/GPIO.c"
  6373 ;; Parameters:    Size  Location     Type
  6374 ;;		None
  6375 ;; Auto vars:     Size  Location     Type
  6376 ;;		None
  6377 ;; Return value:  Size  Location     Type
  6378 ;;		None               void
  6379 ;; Registers used:
  6380 ;;		None
  6381 ;; Tracked objects:
  6382 ;;		On entry : 0/0
  6383 ;;		On exit  : 0/0
  6384 ;;		Unchanged: 0/0
  6385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6390 ;;Total ram usage:        0 bytes
  6391 ;; Hardware stack levels used:    1
  6392 ;; Hardware stack levels required when called:    3
  6393 ;; This function calls:
  6394 ;;		Nothing
  6395 ;; This function is called by:
  6396 ;;		_main
  6397 ;; This function uses a non-reentrant model
  6398 ;;
  6399                           
  6400                           	psect	text42
  6401  001892                     __ptext42:
  6402                           	opt stack 0
  6403  001892                     _GPIO_Config:
  6404                           	opt stack 27
  6405                           
  6406                           ;incstack = 0
  6407  001892  0012               	return		;funcret
  6408  001894                     __end_of_GPIO_Config:
  6409                           	opt stack 0
  6410                           tblptru	equ	0xFF8
  6411                           tblptrh	equ	0xFF7
  6412                           tblptrl	equ	0xFF6
  6413                           tablat	equ	0xFF5
  6414                           prodh	equ	0xFF4
  6415                           prodl	equ	0xFF3
  6416                           intcon	equ	0xFF2
  6417                           postinc0	equ	0xFEE
  6418                           wreg	equ	0xFE8
  6419                           indf1	equ	0xFE7
  6420                           postinc1	equ	0xFE6
  6421                           postdec1	equ	0xFE5
  6422                           fsr1h	equ	0xFE2
  6423                           fsr1l	equ	0xFE1
  6424                           indf2	equ	0xFDF
  6425                           postinc2	equ	0xFDE
  6426                           postdec2	equ	0xFDD
  6427                           plusw2	equ	0xFDB
  6428                           fsr2h	equ	0xFDA
  6429                           fsr2l	equ	0xFD9
  6430                           status	equ	0xFD8
  6431                           
  6432 ;; *************** function _ADC6_Init *****************
  6433 ;; Defined at:
  6434 ;;		line 37 in file "_01_USER/My_ADC.c"
  6435 ;; Parameters:    Size  Location     Type
  6436 ;;		None
  6437 ;; Auto vars:     Size  Location     Type
  6438 ;;		None
  6439 ;; Return value:  Size  Location     Type
  6440 ;;		None               void
  6441 ;; Registers used:
  6442 ;;		wreg, status,2, status,0, cstack
  6443 ;; Tracked objects:
  6444 ;;		On entry : 0/0
  6445 ;;		On exit  : 0/0
  6446 ;;		Unchanged: 0/0
  6447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6452 ;;Total ram usage:        0 bytes
  6453 ;; Hardware stack levels used:    1
  6454 ;; Hardware stack levels required when called:    4
  6455 ;; This function calls:
  6456 ;;		_OpenADC
  6457 ;; This function is called by:
  6458 ;;		_main
  6459 ;; This function uses a non-reentrant model
  6460 ;;
  6461                           
  6462                           	psect	text43
  6463  001834                     __ptext43:
  6464                           	opt stack 0
  6465  001834                     _ADC6_Init:
  6466                           	opt stack 26
  6467                           
  6468                           ;My_ADC.c: 40: OpenADC(0b11111111 &
  6469                           ;My_ADC.c: 41: 0b11110011 &
  6470                           ;My_ADC.c: 42: 0b10001111
  6471                           ;My_ADC.c: 43: ,
  6472                           ;My_ADC.c: 44: 0b10011011
  6473                           ;My_ADC.c: 45: ,
  6474                           ;My_ADC.c: 46: 0b00111111 &
  6475                           ;My_ADC.c: 47: 0b11111111 &
  6476                           ;My_ADC.c: 48: 0b11110111 &
  6477                           ;My_ADC.c: 49: 0b11111000
  6478                           ;My_ADC.c: 50: );
  6479                           
  6480                           ;incstack = 0
  6481  001834  0E9B               	movlw	155
  6482  001836  6E19               	movwf	OpenADC@config2,c
  6483  001838  0E30               	movlw	48
  6484  00183A  6E1A               	movwf	OpenADC@config3,c
  6485  00183C  0E83               	movlw	131
  6486  00183E  ECA5  F009         	call	_OpenADC
  6487                           
  6488                           ;My_ADC.c: 52: (PIE1bits.ADIE=0);
  6489  001842  9C9D               	bcf	3997,6,c	;volatile
  6490  001844  0012               	return		;funcret
  6491  001846                     __end_of_ADC6_Init:
  6492                           	opt stack 0
  6493                           tblptru	equ	0xFF8
  6494                           tblptrh	equ	0xFF7
  6495                           tblptrl	equ	0xFF6
  6496                           tablat	equ	0xFF5
  6497                           prodh	equ	0xFF4
  6498                           prodl	equ	0xFF3
  6499                           intcon	equ	0xFF2
  6500                           postinc0	equ	0xFEE
  6501                           wreg	equ	0xFE8
  6502                           indf1	equ	0xFE7
  6503                           postinc1	equ	0xFE6
  6504                           postdec1	equ	0xFE5
  6505                           fsr1h	equ	0xFE2
  6506                           fsr1l	equ	0xFE1
  6507                           indf2	equ	0xFDF
  6508                           postinc2	equ	0xFDE
  6509                           postdec2	equ	0xFDD
  6510                           plusw2	equ	0xFDB
  6511                           fsr2h	equ	0xFDA
  6512                           fsr2l	equ	0xFD9
  6513                           status	equ	0xFD8
  6514                           
  6515 ;; *************** function _OpenADC *****************
  6516 ;; Defined at:
  6517 ;;		line 305 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  6518 ;; Parameters:    Size  Location     Type
  6519 ;;  config          1    wreg     unsigned char 
  6520 ;;  config2         1   24[COMRAM] unsigned char 
  6521 ;;  config3         1   25[COMRAM] unsigned char 
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;  config          1   28[COMRAM] unsigned char 
  6524 ;; Return value:  Size  Location     Type
  6525 ;;		None               void
  6526 ;; Registers used:
  6527 ;;		wreg, status,2, status,0
  6528 ;; Tracked objects:
  6529 ;;		On entry : 0/0
  6530 ;;		On exit  : 0/0
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6533 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6534 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6535 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6536 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6537 ;;Total ram usage:        5 bytes
  6538 ;; Hardware stack levels used:    1
  6539 ;; Hardware stack levels required when called:    3
  6540 ;; This function calls:
  6541 ;;		Nothing
  6542 ;; This function is called by:
  6543 ;;		_ADC6_Init
  6544 ;; This function uses a non-reentrant model
  6545 ;;
  6546                           
  6547                           	psect	text44
  6548  00134A                     __ptext44:
  6549                           	opt stack 0
  6550  00134A                     _OpenADC:
  6551                           	opt stack 26
  6552                           
  6553                           ;incstack = 0
  6554                           ;OpenADC@config stored from wreg
  6555  00134A  6E1D               	movwf	OpenADC@config,c
  6556  00134C  0E00               	movlw	0
  6557  00134E  6EC2               	movwf	4034,c	;volatile
  6558  001350  0E00               	movlw	0
  6559  001352  6EC1               	movwf	4033,c	;volatile
  6560  001354  0E00               	movlw	0
  6561  001356  6EC0               	movwf	4032,c	;volatile
  6562  001358  5019               	movf	OpenADC@config2,w,c
  6563  00135A  0B7C               	andlw	124
  6564  00135C  6EC2               	movwf	4034,c	;volatile
  6565  00135E  C01A  FFC1         	movff	OpenADC@config3,4033	;volatile
  6566  001362  C01D  F01B         	movff	OpenADC@config,??_OpenADC
  6567  001366  90D8               	bcf	status,0,c
  6568  001368  361B               	rlcf	??_OpenADC,f,c
  6569  00136A  90D8               	bcf	status,0,c
  6570  00136C  361B               	rlcf	??_OpenADC,f,c
  6571  00136E  0E38               	movlw	56
  6572  001370  161B               	andwf	??_OpenADC,f,c
  6573  001372  C01D  F01C         	movff	OpenADC@config,??_OpenADC+1
  6574  001376  3A1C               	swapf	??_OpenADC+1,f,c
  6575  001378  0E0F               	movlw	15
  6576  00137A  161C               	andwf	??_OpenADC+1,f,c
  6577  00137C  0E07               	movlw	7
  6578  00137E  161C               	andwf	??_OpenADC+1,f,c
  6579  001380  501D               	movf	OpenADC@config,w,c
  6580  001382  0B80               	andlw	128
  6581  001384  101C               	iorwf	??_OpenADC+1,w,c
  6582  001386  101B               	iorwf	??_OpenADC,w,c
  6583  001388  6EC0               	movwf	4032,c	;volatile
  6584  00138A  AE19               	btfss	OpenADC@config2,7,c
  6585  00138C  D003               	goto	l584
  6586  00138E  9C9E               	bcf	3998,6,c	;volatile
  6587  001390  8C9D               	bsf	3997,6,c	;volatile
  6588  001392  8CF2               	bsf	intcon,6,c	;volatile
  6589  001394                     l584:
  6590  001394  80C2               	bsf	4034,0,c	;volatile
  6591  001396  0012               	return		;funcret
  6592  001398                     __end_of_OpenADC:
  6593                           	opt stack 0
  6594                           tblptru	equ	0xFF8
  6595                           tblptrh	equ	0xFF7
  6596                           tblptrl	equ	0xFF6
  6597                           tablat	equ	0xFF5
  6598                           prodh	equ	0xFF4
  6599                           prodl	equ	0xFF3
  6600                           intcon	equ	0xFF2
  6601                           postinc0	equ	0xFEE
  6602                           wreg	equ	0xFE8
  6603                           indf1	equ	0xFE7
  6604                           postinc1	equ	0xFE6
  6605                           postdec1	equ	0xFE5
  6606                           fsr1h	equ	0xFE2
  6607                           fsr1l	equ	0xFE1
  6608                           indf2	equ	0xFDF
  6609                           postinc2	equ	0xFDE
  6610                           postdec2	equ	0xFDD
  6611                           plusw2	equ	0xFDB
  6612                           fsr2h	equ	0xFDA
  6613                           fsr2l	equ	0xFD9
  6614                           status	equ	0xFD8
  6615                           
  6616 ;; *************** function _Sys_Cyc *****************
  6617 ;; Defined at:
  6618 ;;		line 100 in file "_01_USER/My_Timer.c"
  6619 ;; Parameters:    Size  Location     Type
  6620 ;;		None
  6621 ;; Auto vars:     Size  Location     Type
  6622 ;;  _temp           1   23[COMRAM] unsigned char 
  6623 ;; Return value:  Size  Location     Type
  6624 ;;		None               void
  6625 ;; Registers used:
  6626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6627 ;; Tracked objects:
  6628 ;;		On entry : 0/0
  6629 ;;		On exit  : 0/0
  6630 ;;		Unchanged: 0/0
  6631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6633 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6634 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6635 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6636 ;;Total ram usage:       15 bytes
  6637 ;; Hardware stack levels used:    1
  6638 ;; Hardware stack levels required when called:    2
  6639 ;; This function calls:
  6640 ;;		_Key_ScanFSM
  6641 ;;		_Pulse_1Khz
  6642 ;;		i2_LED_Control
  6643 ;;		i2_SetTimer0
  6644 ;;		i2___llmod
  6645 ;; This function is called by:
  6646 ;;		Interrupt level 2
  6647 ;; This function uses a non-reentrant model
  6648 ;;
  6649                           
  6650                           	psect	intcode
  6651  000008                     __pintcode:
  6652                           	opt stack 0
  6653  000008                     _Sys_Cyc:
  6654                           	opt stack 23
  6655                           
  6656                           ;incstack = 0
  6657  000008  CFFA F00A          	movff	pclath,??_Sys_Cyc
  6658  00000C  CFFB F00B          	movff	pclatu,??_Sys_Cyc+1
  6659  000010  CFE9 F00C          	movff	fsr0l,??_Sys_Cyc+2
  6660  000014  CFEA F00D          	movff	fsr0h,??_Sys_Cyc+3
  6661  000018  CFE1 F00E          	movff	fsr1l,??_Sys_Cyc+4
  6662  00001C  CFE2 F00F          	movff	fsr1h,??_Sys_Cyc+5
  6663  000020  CFD9 F010          	movff	fsr2l,??_Sys_Cyc+6
  6664  000024  CFDA F011          	movff	fsr2h,??_Sys_Cyc+7
  6665  000028  CFF3 F012          	movff	prodl,??_Sys_Cyc+8
  6666  00002C  CFF4 F013          	movff	prodh,??_Sys_Cyc+9
  6667  000030  CFF6 F014          	movff	tblptrl,??_Sys_Cyc+10
  6668  000034  CFF7 F015          	movff	tblptrh,??_Sys_Cyc+11
  6669  000038  CFF8 F016          	movff	tblptru,??_Sys_Cyc+12
  6670  00003C  CFF5 F017          	movff	tablat,??_Sys_Cyc+13
  6671                           
  6672                           ;My_Timer.c: 102: static unsigned char _overturn_LED = 0;
  6673                           ;My_Timer.c: 103: static char _Byte;
  6674                           ;My_Timer.c: 104: static char _flag = 0;
  6675                           ;My_Timer.c: 105: unsigned char _temp;
  6676                           ;My_Timer.c: 108: if(TMR0IF)
  6677  000040  A4F2               	btfss	intcon,2,c	;volatile
  6678  000042  D06D               	goto	i2l3217
  6679                           
  6680                           ;My_Timer.c: 109: {
  6681                           ;My_Timer.c: 110: g_Timer_Cyc = (g_Timer_Cyc+1) % 4294967296;
  6682  000044  0E01               	movlw	1
  6683  000046  2433               	addwf	_g_Timer_Cyc,w,c
  6684  000048  6E01               	movwf	i2___llmod@dividend,c
  6685  00004A  0E00               	movlw	0
  6686  00004C  2034               	addwfc	_g_Timer_Cyc+1,w,c
  6687  00004E  6E02               	movwf	i2___llmod@dividend+1,c
  6688  000050  0E00               	movlw	0
  6689  000052  2035               	addwfc	_g_Timer_Cyc+2,w,c
  6690  000054  6E03               	movwf	i2___llmod@dividend+2,c
  6691  000056  0E00               	movlw	0
  6692  000058  2036               	addwfc	_g_Timer_Cyc+3,w,c
  6693  00005A  6E04               	movwf	i2___llmod@dividend+3,c
  6694  00005C  0E00               	movlw	0
  6695  00005E  6E05               	movwf	i2___llmod@divisor,c
  6696  000060  0E00               	movlw	0
  6697  000062  6E06               	movwf	i2___llmod@divisor+1,c
  6698  000064  0E00               	movlw	0
  6699  000066  6E07               	movwf	i2___llmod@divisor+2,c
  6700  000068  0E00               	movlw	0
  6701  00006A  6E08               	movwf	i2___llmod@divisor+3,c
  6702  00006C  EC4B  F008         	call	i2___llmod	;wreg free
  6703  000070  C001  F033         	movff	?i2___llmod,_g_Timer_Cyc
  6704  000074  C002  F034         	movff	?i2___llmod+1,_g_Timer_Cyc+1
  6705  000078  C003  F035         	movff	?i2___llmod+2,_g_Timer_Cyc+2
  6706  00007C  C004  F036         	movff	?i2___llmod+3,_g_Timer_Cyc+3
  6707                           
  6708                           ;My_Timer.c: 111: SetTimer0(8);
  6709  000080  0E00               	movlw	0
  6710  000082  6E02               	movwf	i2SetTimer0@_tmr+1,c
  6711  000084  0E08               	movlw	8
  6712  000086  6E01               	movwf	i2SetTimer0@_tmr,c
  6713  000088  EC3E  F00B         	call	i2_SetTimer0	;wreg free
  6714                           
  6715                           ;My_Timer.c: 114: if( g_Timer_Cyc%300 == 0 )
  6716  00008C  C033  F001         	movff	_g_Timer_Cyc,i2___llmod@dividend
  6717  000090  C034  F002         	movff	_g_Timer_Cyc+1,i2___llmod@dividend+1
  6718  000094  C035  F003         	movff	_g_Timer_Cyc+2,i2___llmod@dividend+2
  6719  000098  C036  F004         	movff	_g_Timer_Cyc+3,i2___llmod@dividend+3
  6720  00009C  0E2C               	movlw	44
  6721  00009E  6E05               	movwf	i2___llmod@divisor,c
  6722  0000A0  0E01               	movlw	1
  6723  0000A2  6E06               	movwf	i2___llmod@divisor+1,c
  6724  0000A4  0E00               	movlw	0
  6725  0000A6  6E07               	movwf	i2___llmod@divisor+2,c
  6726  0000A8  0E00               	movlw	0
  6727  0000AA  6E08               	movwf	i2___llmod@divisor+3,c
  6728  0000AC  EC4B  F008         	call	i2___llmod	;wreg free
  6729  0000B0  5001               	movf	?i2___llmod,w,c
  6730  0000B2  1002               	iorwf	?i2___llmod+1,w,c
  6731  0000B4  1003               	iorwf	?i2___llmod+2,w,c
  6732  0000B6  1004               	iorwf	?i2___llmod+3,w,c
  6733  0000B8  A4D8               	btfss	status,2,c
  6734  0000BA  D010               	goto	i2l3211
  6735                           
  6736                           ;My_Timer.c: 115: {
  6737                           ;My_Timer.c: 116: _overturn_LED = ~_overturn_LED;
  6738  0000BC  1E3D               	comf	Sys_Cyc@_overturn_LED,f,c
  6739                           
  6740                           ;My_Timer.c: 117: if(_overturn_LED) LED_Control(3,1);
  6741  0000BE  503D               	movf	Sys_Cyc@_overturn_LED,w,c
  6742  0000C0  B4D8               	btfsc	status,2,c
  6743  0000C2  D006               	goto	i2l3209
  6744  0000C4  0E01               	movlw	1
  6745  0000C6  6E01               	movwf	i2LED_Control@_switch,c
  6746  0000C8  0E03               	movlw	3
  6747  0000CA  EC39  F00A         	call	i2_LED_Control
  6748  0000CE  D006               	goto	i2l3211
  6749  0000D0                     i2l3209:
  6750                           
  6751                           ;My_Timer.c: 118: else LED_Control(3,0);
  6752  0000D0  0E00               	movlw	0
  6753  0000D2  6E01               	movwf	i2LED_Control@_switch,c
  6754  0000D4  0E03               	movlw	3
  6755  0000D6  EC39  F00A         	call	i2_LED_Control
  6756  0000DA  D000               	goto	i2l3211
  6757  0000DC                     i2l3211:
  6758                           
  6759                           ;My_Timer.c: 119: }
  6760                           ;My_Timer.c: 122: if( gs_Switch._1Khz )
  6761  0000DC  5041               	movf	_gs_Switch,w,c
  6762  0000DE  B4D8               	btfsc	status,2,c
  6763  0000E0  D003               	goto	i2l304
  6764                           
  6765                           ;My_Timer.c: 123: Pulse_1Khz(1);
  6766  0000E2  0E01               	movlw	1
  6767  0000E4  EC7D  F009         	call	_Pulse_1Khz
  6768  0000E8                     i2l304:
  6769                           
  6770                           ;My_Timer.c: 126: if( g_Timer_Cyc%10 == 0 )
  6771  0000E8  C033  F001         	movff	_g_Timer_Cyc,i2___llmod@dividend
  6772  0000EC  C034  F002         	movff	_g_Timer_Cyc+1,i2___llmod@dividend+1
  6773  0000F0  C035  F003         	movff	_g_Timer_Cyc+2,i2___llmod@dividend+2
  6774  0000F4  C036  F004         	movff	_g_Timer_Cyc+3,i2___llmod@dividend+3
  6775  0000F8  0E0A               	movlw	10
  6776  0000FA  6E05               	movwf	i2___llmod@divisor,c
  6777  0000FC  0E00               	movlw	0
  6778  0000FE  6E06               	movwf	i2___llmod@divisor+1,c
  6779  000100  0E00               	movlw	0
  6780  000102  6E07               	movwf	i2___llmod@divisor+2,c
  6781  000104  0E00               	movlw	0
  6782  000106  6E08               	movwf	i2___llmod@divisor+3,c
  6783  000108  EC4B  F008         	call	i2___llmod	;wreg free
  6784  00010C  5001               	movf	?i2___llmod,w,c
  6785  00010E  1002               	iorwf	?i2___llmod+1,w,c
  6786  000110  1003               	iorwf	?i2___llmod+2,w,c
  6787  000112  1004               	iorwf	?i2___llmod+3,w,c
  6788  000114  A4D8               	btfss	status,2,c
  6789  000116  D003               	goto	i2l3217
  6790                           
  6791                           ;My_Timer.c: 127: Key_ScanFSM();
  6792  000118  EC50  F009         	call	_Key_ScanFSM	;wreg free
  6793  00011C  D000               	goto	i2l3217
  6794  00011E                     i2l3217:
  6795                           
  6796                           ;My_Timer.c: 128: }
  6797                           ;My_Timer.c: 131: if( RC1IF )
  6798  00011E  AA9E               	btfss	3998,5,c	;volatile
  6799  000120  D023               	goto	i2l311
  6800                           
  6801                           ;My_Timer.c: 132: {
  6802                           ;My_Timer.c: 133: _temp = RCREG1;
  6803  000122  CFAE F018          	movff	4014,Sys_Cyc@_temp	;volatile
  6804                           
  6805                           ;My_Timer.c: 134: if( g_RS485_Receive_Flag == 0 )
  6806  000126  5040               	movf	_g_RS485_Receive_Flag,w,c
  6807  000128  A4D8               	btfss	status,2,c
  6808  00012A  D01E               	goto	i2l311
  6809                           
  6810                           ;My_Timer.c: 135: {
  6811                           ;My_Timer.c: 137: if( _temp == 0xff )
  6812  00012C  2818               	incf	Sys_Cyc@_temp,w,c
  6813  00012E  A4D8               	btfss	status,2,c
  6814  000130  D004               	goto	i2l308
  6815                           
  6816                           ;My_Timer.c: 138: {
  6817                           ;My_Timer.c: 139: _Byte = 10 ;
  6818  000132  0E0A               	movlw	10
  6819  000134  6E3B               	movwf	Sys_Cyc@_Byte,c
  6820                           
  6821                           ;My_Timer.c: 140: _flag = 0;
  6822  000136  0E00               	movlw	0
  6823  000138  6E3C               	movwf	Sys_Cyc@_flag,c
  6824  00013A                     i2l308:
  6825                           
  6826                           ;My_Timer.c: 141: }
  6827                           ;My_Timer.c: 144: if ( _flag == 0 )
  6828  00013A  503C               	movf	Sys_Cyc@_flag,w,c
  6829  00013C  A4D8               	btfss	status,2,c
  6830  00013E  D00C               	goto	i2l3231
  6831                           
  6832                           ;My_Timer.c: 145: {
  6833                           ;My_Timer.c: 146: _Byte -- ;
  6834  000140  063B               	decf	Sys_Cyc@_Byte,f,c
  6835                           
  6836                           ;My_Timer.c: 147: ga_RS485_ReceiveBuff[ _Byte ] = _temp;
  6837  000142  503B               	movf	Sys_Cyc@_Byte,w,c
  6838  000144  0D01               	mullw	1
  6839  000146  0EDA               	movlw	low _ga_RS485_ReceiveBuff
  6840  000148  24F3               	addwf	prodl,w,c
  6841  00014A  6ED9               	movwf	fsr2l,c
  6842  00014C  0E00               	movlw	high _ga_RS485_ReceiveBuff
  6843  00014E  20F4               	addwfc	prodh,w,c
  6844  000150  6EDA               	movwf	fsr2h,c
  6845  000152  C018  FFDF         	movff	Sys_Cyc@_temp,indf2
  6846  000156  D000               	goto	i2l3231
  6847  000158                     i2l3231:
  6848                           
  6849                           ;My_Timer.c: 148: }
  6850                           ;My_Timer.c: 151: if( _Byte == 0 )
  6851  000158  503B               	movf	Sys_Cyc@_Byte,w,c
  6852  00015A  A4D8               	btfss	status,2,c
  6853  00015C  D005               	goto	i2l311
  6854                           
  6855                           ;My_Timer.c: 152: {
  6856                           ;My_Timer.c: 153: g_RS485_Receive_Flag = 1 ;
  6857  00015E  0E01               	movlw	1
  6858  000160  6E40               	movwf	_g_RS485_Receive_Flag,c
  6859                           
  6860                           ;My_Timer.c: 154: _flag = 1;
  6861  000162  0E01               	movlw	1
  6862  000164  6E3C               	movwf	Sys_Cyc@_flag,c
  6863  000166  D000               	goto	i2l311
  6864  000168                     i2l311:
  6865  000168  C017  FFF5         	movff	??_Sys_Cyc+13,tablat
  6866  00016C  C016  FFF8         	movff	??_Sys_Cyc+12,tblptru
  6867  000170  C015  FFF7         	movff	??_Sys_Cyc+11,tblptrh
  6868  000174  C014  FFF6         	movff	??_Sys_Cyc+10,tblptrl
  6869  000178  C013  FFF4         	movff	??_Sys_Cyc+9,prodh
  6870  00017C  C012  FFF3         	movff	??_Sys_Cyc+8,prodl
  6871  000180  C011  FFDA         	movff	??_Sys_Cyc+7,fsr2h
  6872  000184  C010  FFD9         	movff	??_Sys_Cyc+6,fsr2l
  6873  000188  C00F  FFE2         	movff	??_Sys_Cyc+5,fsr1h
  6874  00018C  C00E  FFE1         	movff	??_Sys_Cyc+4,fsr1l
  6875  000190  C00D  FFEA         	movff	??_Sys_Cyc+3,fsr0h
  6876  000194  C00C  FFE9         	movff	??_Sys_Cyc+2,fsr0l
  6877  000198  C00B  FFFB         	movff	??_Sys_Cyc+1,pclatu
  6878  00019C  C00A  FFFA         	movff	??_Sys_Cyc,pclath
  6879  0001A0  0011               	retfie		f
  6880  0001A2                     __end_of_Sys_Cyc:
  6881                           	opt stack 0
  6882                           pclatu	equ	0xFFB
  6883                           pclath	equ	0xFFA
  6884                           tblptru	equ	0xFF8
  6885                           tblptrh	equ	0xFF7
  6886                           tblptrl	equ	0xFF6
  6887                           tablat	equ	0xFF5
  6888                           prodh	equ	0xFF4
  6889                           prodl	equ	0xFF3
  6890                           intcon	equ	0xFF2
  6891                           postinc0	equ	0xFEE
  6892                           fsr0h	equ	0xFEA
  6893                           fsr0l	equ	0xFE9
  6894                           wreg	equ	0xFE8
  6895                           indf1	equ	0xFE7
  6896                           postinc1	equ	0xFE6
  6897                           postdec1	equ	0xFE5
  6898                           fsr1h	equ	0xFE2
  6899                           fsr1l	equ	0xFE1
  6900                           indf2	equ	0xFDF
  6901                           postinc2	equ	0xFDE
  6902                           postdec2	equ	0xFDD
  6903                           plusw2	equ	0xFDB
  6904                           fsr2h	equ	0xFDA
  6905                           fsr2l	equ	0xFD9
  6906                           status	equ	0xFD8
  6907                           
  6908 ;; *************** function i2___llmod *****************
  6909 ;; Defined at:
  6910 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  6911 ;; Parameters:    Size  Location     Type
  6912 ;;  dividend        4    0[COMRAM] unsigned long 
  6913 ;;  divisor         4    4[COMRAM] unsigned long 
  6914 ;; Auto vars:     Size  Location     Type
  6915 ;;  __llmod         1    8[COMRAM] unsigned char 
  6916 ;; Return value:  Size  Location     Type
  6917 ;;                  4    0[COMRAM] unsigned long 
  6918 ;; Registers used:
  6919 ;;		wreg, status,2, status,0
  6920 ;; Tracked objects:
  6921 ;;		On entry : 0/0
  6922 ;;		On exit  : 0/0
  6923 ;;		Unchanged: 0/0
  6924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6925 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6926 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6928 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6929 ;;Total ram usage:        9 bytes
  6930 ;; Hardware stack levels used:    1
  6931 ;; This function calls:
  6932 ;;		Nothing
  6933 ;; This function is called by:
  6934 ;;		_Sys_Cyc
  6935 ;; This function uses a non-reentrant model
  6936 ;;
  6937                           
  6938                           	psect	text46
  6939  001096                     __ptext46:
  6940                           	opt stack 0
  6941  001096                     i2___llmod:
  6942                           	opt stack 24
  6943                           
  6944                           ;incstack = 0
  6945  001096  5005               	movf	i2___llmod@divisor,w,c
  6946  001098  1006               	iorwf	i2___llmod@divisor+1,w,c
  6947  00109A  1007               	iorwf	i2___llmod@divisor+2,w,c
  6948  00109C  1008               	iorwf	i2___llmod@divisor+3,w,c
  6949  00109E  B4D8               	btfsc	status,2,c
  6950  0010A0  D029               	goto	i2l1119
  6951  0010A2  0E01               	movlw	1
  6952  0010A4  6E09               	movwf	i2___llmod@counter,c
  6953  0010A6  D007               	goto	i2l3169
  6954  0010A8                     i2l3167:
  6955  0010A8  90D8               	bcf	status,0,c
  6956  0010AA  3605               	rlcf	i2___llmod@divisor,f,c
  6957  0010AC  3606               	rlcf	i2___llmod@divisor+1,f,c
  6958  0010AE  3607               	rlcf	i2___llmod@divisor+2,f,c
  6959  0010B0  3608               	rlcf	i2___llmod@divisor+3,f,c
  6960  0010B2  2A09               	incf	i2___llmod@counter,f,c
  6961  0010B4  D000               	goto	i2l3169
  6962  0010B6                     i2l3169:
  6963  0010B6  BE08               	btfsc	i2___llmod@divisor+3,7,c
  6964  0010B8  D002               	goto	i2l3171
  6965  0010BA  D7F6               	goto	i2l3167
  6966  0010BC  D000               	goto	i2l3171
  6967  0010BE                     i2l3171:
  6968  0010BE  5005               	movf	i2___llmod@divisor,w,c
  6969  0010C0  5C01               	subwf	i2___llmod@dividend,w,c
  6970  0010C2  5006               	movf	i2___llmod@divisor+1,w,c
  6971  0010C4  5802               	subwfb	i2___llmod@dividend+1,w,c
  6972  0010C6  5007               	movf	i2___llmod@divisor+2,w,c
  6973  0010C8  5803               	subwfb	i2___llmod@dividend+2,w,c
  6974  0010CA  5008               	movf	i2___llmod@divisor+3,w,c
  6975  0010CC  5804               	subwfb	i2___llmod@dividend+3,w,c
  6976  0010CE  A0D8               	btfss	status,0,c
  6977  0010D0  D009               	goto	i2l3175
  6978  0010D2  5005               	movf	i2___llmod@divisor,w,c
  6979  0010D4  5E01               	subwf	i2___llmod@dividend,f,c
  6980  0010D6  5006               	movf	i2___llmod@divisor+1,w,c
  6981  0010D8  5A02               	subwfb	i2___llmod@dividend+1,f,c
  6982  0010DA  5007               	movf	i2___llmod@divisor+2,w,c
  6983  0010DC  5A03               	subwfb	i2___llmod@dividend+2,f,c
  6984  0010DE  5008               	movf	i2___llmod@divisor+3,w,c
  6985  0010E0  5A04               	subwfb	i2___llmod@dividend+3,f,c
  6986  0010E2  D000               	goto	i2l3175
  6987  0010E4                     i2l3175:
  6988  0010E4  90D8               	bcf	status,0,c
  6989  0010E6  3208               	rrcf	i2___llmod@divisor+3,f,c
  6990  0010E8  3207               	rrcf	i2___llmod@divisor+2,f,c
  6991  0010EA  3206               	rrcf	i2___llmod@divisor+1,f,c
  6992  0010EC  3205               	rrcf	i2___llmod@divisor,f,c
  6993  0010EE  2E09               	decfsz	i2___llmod@counter,f,c
  6994  0010F0  D7E6               	goto	i2l3171
  6995  0010F2  D000               	goto	i2l1119
  6996  0010F4                     i2l1119:
  6997  0010F4  C001  F001         	movff	i2___llmod@dividend,?i2___llmod
  6998  0010F8  C002  F002         	movff	i2___llmod@dividend+1,?i2___llmod+1
  6999  0010FC  C003  F003         	movff	i2___llmod@dividend+2,?i2___llmod+2
  7000  001100  C004  F004         	movff	i2___llmod@dividend+3,?i2___llmod+3
  7001  001104  0012               	return		;funcret
  7002  001106                     __end_ofi2___llmod:
  7003                           	opt stack 0
  7004                           pclatu	equ	0xFFB
  7005                           pclath	equ	0xFFA
  7006                           tblptru	equ	0xFF8
  7007                           tblptrh	equ	0xFF7
  7008                           tblptrl	equ	0xFF6
  7009                           tablat	equ	0xFF5
  7010                           prodh	equ	0xFF4
  7011                           prodl	equ	0xFF3
  7012                           intcon	equ	0xFF2
  7013                           postinc0	equ	0xFEE
  7014                           fsr0h	equ	0xFEA
  7015                           fsr0l	equ	0xFE9
  7016                           wreg	equ	0xFE8
  7017                           indf1	equ	0xFE7
  7018                           postinc1	equ	0xFE6
  7019                           postdec1	equ	0xFE5
  7020                           fsr1h	equ	0xFE2
  7021                           fsr1l	equ	0xFE1
  7022                           indf2	equ	0xFDF
  7023                           postinc2	equ	0xFDE
  7024                           postdec2	equ	0xFDD
  7025                           plusw2	equ	0xFDB
  7026                           fsr2h	equ	0xFDA
  7027                           fsr2l	equ	0xFD9
  7028                           status	equ	0xFD8
  7029                           
  7030 ;; *************** function i2_SetTimer0 *****************
  7031 ;; Defined at:
  7032 ;;		line 81 in file "_01_USER/My_Timer.c"
  7033 ;; Parameters:    Size  Location     Type
  7034 ;;  _tmr            2    0[COMRAM] unsigned int 
  7035 ;; Auto vars:     Size  Location     Type
  7036 ;;		None
  7037 ;; Return value:  Size  Location     Type
  7038 ;;		None               void
  7039 ;; Registers used:
  7040 ;;		wreg, status,2, status,0
  7041 ;; Tracked objects:
  7042 ;;		On entry : 0/0
  7043 ;;		On exit  : 0/0
  7044 ;;		Unchanged: 0/0
  7045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7046 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7048 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7049 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7050 ;;Total ram usage:        4 bytes
  7051 ;; Hardware stack levels used:    1
  7052 ;; This function calls:
  7053 ;;		Nothing
  7054 ;; This function is called by:
  7055 ;;		_Sys_Cyc
  7056 ;; This function uses a non-reentrant model
  7057 ;;
  7058                           
  7059                           	psect	text47
  7060  00167C                     __ptext47:
  7061                           	opt stack 0
  7062  00167C                     i2_SetTimer0:
  7063                           	opt stack 24
  7064                           
  7065                           ;My_Timer.c: 83: if(_tmr > 0xffff) _tmr = 0xffff;
  7066                           
  7067                           ;incstack = 0
  7068  00167C  D003               	goto	i2l3131
  7069  00167E  6801               	setf	i2SetTimer0@_tmr,c
  7070  001680  6802               	setf	i2SetTimer0@_tmr+1,c
  7071  001682  D000               	goto	i2l3131
  7072  001684                     i2l3131:
  7073                           
  7074                           ;My_Timer.c: 84: _tmr=0xffff-_tmr;
  7075  001684  C001  F003         	movff	i2SetTimer0@_tmr,??i2_SetTimer0
  7076  001688  C002  F004         	movff	i2SetTimer0@_tmr+1,??i2_SetTimer0+1
  7077  00168C  1E03               	comf	??i2_SetTimer0,f,c
  7078  00168E  1E04               	comf	??i2_SetTimer0+1,f,c
  7079  001690  4A03               	infsnz	??i2_SetTimer0,f,c
  7080  001692  2A04               	incf	??i2_SetTimer0+1,f,c
  7081  001694  0EFF               	movlw	255
  7082  001696  2403               	addwf	??i2_SetTimer0,w,c
  7083  001698  6E01               	movwf	i2SetTimer0@_tmr,c
  7084  00169A  0EFF               	movlw	255
  7085  00169C  2004               	addwfc	??i2_SetTimer0+1,w,c
  7086  00169E  6E02               	movwf	i2SetTimer0@_tmr+1,c
  7087                           
  7088                           ;My_Timer.c: 85: TMR0H = _tmr/256;
  7089  0016A0  5002               	movf	i2SetTimer0@_tmr+1,w,c
  7090  0016A2  6ED7               	movwf	4055,c	;volatile
  7091                           
  7092                           ;My_Timer.c: 86: TMR0L = _tmr%256;
  7093  0016A4  C001  FFD6         	movff	i2SetTimer0@_tmr,4054	;volatile
  7094                           
  7095                           ;My_Timer.c: 87: TMR0IF = 0;
  7096  0016A8  94F2               	bcf	intcon,2,c	;volatile
  7097  0016AA  0012               	return		;funcret
  7098  0016AC                     __end_ofi2_SetTimer0:
  7099                           	opt stack 0
  7100                           pclatu	equ	0xFFB
  7101                           pclath	equ	0xFFA
  7102                           tblptru	equ	0xFF8
  7103                           tblptrh	equ	0xFF7
  7104                           tblptrl	equ	0xFF6
  7105                           tablat	equ	0xFF5
  7106                           prodh	equ	0xFF4
  7107                           prodl	equ	0xFF3
  7108                           intcon	equ	0xFF2
  7109                           postinc0	equ	0xFEE
  7110                           fsr0h	equ	0xFEA
  7111                           fsr0l	equ	0xFE9
  7112                           wreg	equ	0xFE8
  7113                           indf1	equ	0xFE7
  7114                           postinc1	equ	0xFE6
  7115                           postdec1	equ	0xFE5
  7116                           fsr1h	equ	0xFE2
  7117                           fsr1l	equ	0xFE1
  7118                           indf2	equ	0xFDF
  7119                           postinc2	equ	0xFDE
  7120                           postdec2	equ	0xFDD
  7121                           plusw2	equ	0xFDB
  7122                           fsr2h	equ	0xFDA
  7123                           fsr2l	equ	0xFD9
  7124                           status	equ	0xFD8
  7125                           
  7126 ;; *************** function i2_LED_Control *****************
  7127 ;; Defined at:
  7128 ;;		line 58 in file "_01_USER/GPIO.c"
  7129 ;; Parameters:    Size  Location     Type
  7130 ;;  _LED_num        1    wreg     unsigned char 
  7131 ;;  _switch         1    0[COMRAM] unsigned char 
  7132 ;; Auto vars:     Size  Location     Type
  7133 ;;  _LED_num        1    1[COMRAM] unsigned char 
  7134 ;; Return value:  Size  Location     Type
  7135 ;;		None               void
  7136 ;; Registers used:
  7137 ;;		wreg, status,2, status,0
  7138 ;; Tracked objects:
  7139 ;;		On entry : 0/0
  7140 ;;		On exit  : 0/0
  7141 ;;		Unchanged: 0/0
  7142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7143 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7144 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7146 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7147 ;;Total ram usage:        2 bytes
  7148 ;; Hardware stack levels used:    1
  7149 ;; This function calls:
  7150 ;;		Nothing
  7151 ;; This function is called by:
  7152 ;;		_Sys_Cyc
  7153 ;; This function uses a non-reentrant model
  7154 ;;
  7155                           
  7156                           	psect	text48
  7157  001472                     __ptext48:
  7158                           	opt stack 0
  7159  001472                     i2_LED_Control:
  7160                           	opt stack 24
  7161                           
  7162                           ;incstack = 0
  7163                           ;i2LED_Control@_LED_num stored from wreg
  7164  001472  6E02               	movwf	i2LED_Control@_LED_num,c
  7165                           
  7166                           ;GPIO.c: 62: if(_LED_num == 1)
  7167  001474  0402               	decf	i2LED_Control@_LED_num,w,c
  7168  001476  A4D8               	btfss	status,2,c
  7169  001478  D007               	goto	i2l3147
  7170                           
  7171                           ;GPIO.c: 63: if(_switch) LED_BUS |= 0x01;
  7172  00147A  5001               	movf	i2LED_Control@_switch,w,c
  7173  00147C  B4D8               	btfsc	status,2,c
  7174  00147E  D002               	goto	i2l3145
  7175  001480  803E               	bsf	_LED_BUS,0,c
  7176  001482  D002               	goto	i2l3147
  7177  001484                     i2l3145:
  7178                           
  7179                           ;GPIO.c: 64: else LED_BUS &= 0xFE;
  7180  001484  903E               	bcf	_LED_BUS,0,c
  7181  001486  D000               	goto	i2l3147
  7182  001488                     i2l3147:
  7183                           
  7184                           ;GPIO.c: 66: if(_LED_num == 2)
  7185  001488  0E02               	movlw	2
  7186  00148A  1802               	xorwf	i2LED_Control@_LED_num,w,c
  7187  00148C  A4D8               	btfss	status,2,c
  7188  00148E  D007               	goto	i2l3155
  7189                           
  7190                           ;GPIO.c: 67: if(_switch) LED_BUS |= 0x02;
  7191  001490  5001               	movf	i2LED_Control@_switch,w,c
  7192  001492  B4D8               	btfsc	status,2,c
  7193  001494  D002               	goto	i2l3153
  7194  001496  823E               	bsf	_LED_BUS,1,c
  7195  001498  D002               	goto	i2l3155
  7196  00149A                     i2l3153:
  7197                           
  7198                           ;GPIO.c: 68: else LED_BUS &= 0xFD;
  7199  00149A  923E               	bcf	_LED_BUS,1,c
  7200  00149C  D000               	goto	i2l3155
  7201  00149E                     i2l3155:
  7202                           
  7203                           ;GPIO.c: 70: if(_LED_num == 3)
  7204  00149E  0E03               	movlw	3
  7205  0014A0  1802               	xorwf	i2LED_Control@_LED_num,w,c
  7206  0014A2  A4D8               	btfss	status,2,c
  7207  0014A4  0012               	return	
  7208                           
  7209                           ;GPIO.c: 71: if(_switch) LED_BUS |= 0x04;
  7210  0014A6  5001               	movf	i2LED_Control@_switch,w,c
  7211  0014A8  B4D8               	btfsc	status,2,c
  7212  0014AA  D002               	goto	i2l3161
  7213  0014AC  843E               	bsf	_LED_BUS,2,c
  7214  0014AE  0012               	return	
  7215  0014B0                     i2l3161:
  7216                           
  7217                           ;GPIO.c: 72: else LED_BUS &= 0xFB;
  7218  0014B0  943E               	bcf	_LED_BUS,2,c
  7219  0014B2  0012               	return	
  7220  0014B4  0012               	return		;funcret
  7221  0014B6                     __end_ofi2_LED_Control:
  7222                           	opt stack 0
  7223                           pclatu	equ	0xFFB
  7224                           pclath	equ	0xFFA
  7225                           tblptru	equ	0xFF8
  7226                           tblptrh	equ	0xFF7
  7227                           tblptrl	equ	0xFF6
  7228                           tablat	equ	0xFF5
  7229                           prodh	equ	0xFF4
  7230                           prodl	equ	0xFF3
  7231                           intcon	equ	0xFF2
  7232                           postinc0	equ	0xFEE
  7233                           fsr0h	equ	0xFEA
  7234                           fsr0l	equ	0xFE9
  7235                           wreg	equ	0xFE8
  7236                           indf1	equ	0xFE7
  7237                           postinc1	equ	0xFE6
  7238                           postdec1	equ	0xFE5
  7239                           fsr1h	equ	0xFE2
  7240                           fsr1l	equ	0xFE1
  7241                           indf2	equ	0xFDF
  7242                           postinc2	equ	0xFDE
  7243                           postdec2	equ	0xFDD
  7244                           plusw2	equ	0xFDB
  7245                           fsr2h	equ	0xFDA
  7246                           fsr2l	equ	0xFD9
  7247                           status	equ	0xFD8
  7248                           
  7249 ;; *************** function _Pulse_1Khz *****************
  7250 ;; Defined at:
  7251 ;;		line 79 in file "_01_USER/SCR.c"
  7252 ;; Parameters:    Size  Location     Type
  7253 ;;  _QD             1    wreg     unsigned char 
  7254 ;; Auto vars:     Size  Location     Type
  7255 ;;  _QD             1    3[COMRAM] unsigned char 
  7256 ;;  _pulse          1    4[COMRAM] unsigned char 
  7257 ;; Return value:  Size  Location     Type
  7258 ;;		None               void
  7259 ;; Registers used:
  7260 ;;		wreg, status,2, status,0, cstack
  7261 ;; Tracked objects:
  7262 ;;		On entry : 0/0
  7263 ;;		On exit  : 0/0
  7264 ;;		Unchanged: 0/0
  7265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7267 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7269 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7270 ;;Total ram usage:        2 bytes
  7271 ;; Hardware stack levels used:    1
  7272 ;; Hardware stack levels required when called:    1
  7273 ;; This function calls:
  7274 ;;		_Delay_1Khz
  7275 ;; This function is called by:
  7276 ;;		_Sys_Cyc
  7277 ;; This function uses a non-reentrant model
  7278 ;;
  7279                           
  7280                           	psect	text49
  7281  0012FA                     __ptext49:
  7282                           	opt stack 0
  7283  0012FA                     _Pulse_1Khz:
  7284                           	opt stack 23
  7285                           
  7286                           ;incstack = 0
  7287                           ;Pulse_1Khz@_QD stored from wreg
  7288  0012FA  6E04               	movwf	Pulse_1Khz@_QD,c
  7289                           
  7290                           ;SCR.c: 81: unsigned char _pulse = 8;
  7291  0012FC  0E08               	movlw	8
  7292  0012FE  6E05               	movwf	Pulse_1Khz@_pulse,c
  7293                           
  7294                           ;SCR.c: 82: static unsigned char _overturn_1Khz = 0;
  7295                           ;SCR.c: 85: if(_QD == 1)
  7296  001300  0404               	decf	Pulse_1Khz@_QD,w,c
  7297  001302  B4D8               	btfsc	status,2,c
  7298  001304  D009               	goto	i2l3111
  7299  001306  D00E               	goto	i2l3113
  7300                           
  7301                           ;SCR.c: 86: while( _pulse-- )
  7302  001308  D007               	goto	i2l3111
  7303  00130A                     i2l3103:
  7304                           
  7305                           ;SCR.c: 87: {
  7306                           ;SCR.c: 88: _overturn_1Khz =~ _overturn_1Khz;
  7307  00130A  1E3A               	comf	Pulse_1Khz@_overturn_1Khz,f,c
  7308                           
  7309                           ;SCR.c: 89: if(_overturn_1Khz) RB1 = 1;
  7310  00130C  503A               	movf	Pulse_1Khz@_overturn_1Khz,w,c
  7311                           
  7312                           ;SCR.c: 90: else RB1 = 1;
  7313  00130E  8281               	bsf	3969,1,c	;volatile
  7314  001310  D000               	goto	i2l3109
  7315  001312                     i2l3109:
  7316                           
  7317                           ;SCR.c: 91: Delay_1Khz();
  7318  001312  ECD7  F00A         	call	_Delay_1Khz	;wreg free
  7319  001316  D000               	goto	i2l3111
  7320  001318                     i2l3111:
  7321  001318  0605               	decf	Pulse_1Khz@_pulse,f,c
  7322  00131A  2805               	incf	Pulse_1Khz@_pulse,w,c
  7323  00131C  B4D8               	btfsc	status,2,c
  7324  00131E  D002               	goto	i2l3113
  7325  001320  D7F4               	goto	i2l3103
  7326  001322  D000               	goto	i2l3113
  7327  001324                     i2l3113:
  7328                           
  7329                           ;SCR.c: 92: }
  7330                           ;SCR.c: 95: if(_QD == 2)
  7331  001324  0E02               	movlw	2
  7332  001326  1804               	xorwf	Pulse_1Khz@_QD,w,c
  7333  001328  A4D8               	btfss	status,2,c
  7334  00132A  0012               	return	
  7335                           
  7336                           ;SCR.c: 96: while( _pulse-- )
  7337  00132C  D007               	goto	i2l3125
  7338  00132E                     i2l3117:
  7339                           
  7340                           ;SCR.c: 97: {
  7341                           ;SCR.c: 98: _overturn_1Khz =~ _overturn_1Khz;
  7342  00132E  1E3A               	comf	Pulse_1Khz@_overturn_1Khz,f,c
  7343                           
  7344                           ;SCR.c: 99: if(_overturn_1Khz) RB0 = 1;
  7345  001330  503A               	movf	Pulse_1Khz@_overturn_1Khz,w,c
  7346                           
  7347                           ;SCR.c: 100: else RB0 = 1;
  7348  001332  8081               	bsf	3969,0,c	;volatile
  7349  001334  D000               	goto	i2l3123
  7350  001336                     i2l3123:
  7351                           
  7352                           ;SCR.c: 101: Delay_1Khz();
  7353  001336  ECD7  F00A         	call	_Delay_1Khz	;wreg free
  7354  00133A  D000               	goto	i2l3125
  7355  00133C                     i2l3125:
  7356  00133C  0605               	decf	Pulse_1Khz@_pulse,f,c
  7357  00133E  2805               	incf	Pulse_1Khz@_pulse,w,c
  7358  001340  B4D8               	btfsc	status,2,c
  7359  001342  0012               	return	
  7360  001344  D7F4               	goto	i2l3117
  7361  001346  0012               	return	
  7362  001348  0012               	return		;funcret
  7363  00134A                     __end_of_Pulse_1Khz:
  7364                           	opt stack 0
  7365                           pclatu	equ	0xFFB
  7366                           pclath	equ	0xFFA
  7367                           tblptru	equ	0xFF8
  7368                           tblptrh	equ	0xFF7
  7369                           tblptrl	equ	0xFF6
  7370                           tablat	equ	0xFF5
  7371                           prodh	equ	0xFF4
  7372                           prodl	equ	0xFF3
  7373                           intcon	equ	0xFF2
  7374                           postinc0	equ	0xFEE
  7375                           fsr0h	equ	0xFEA
  7376                           fsr0l	equ	0xFE9
  7377                           wreg	equ	0xFE8
  7378                           indf1	equ	0xFE7
  7379                           postinc1	equ	0xFE6
  7380                           postdec1	equ	0xFE5
  7381                           fsr1h	equ	0xFE2
  7382                           fsr1l	equ	0xFE1
  7383                           indf2	equ	0xFDF
  7384                           postinc2	equ	0xFDE
  7385                           postdec2	equ	0xFDD
  7386                           plusw2	equ	0xFDB
  7387                           fsr2h	equ	0xFDA
  7388                           fsr2l	equ	0xFD9
  7389                           status	equ	0xFD8
  7390                           
  7391 ;; *************** function _Delay_1Khz *****************
  7392 ;; Defined at:
  7393 ;;		line 62 in file "_01_USER/SCR.c"
  7394 ;; Parameters:    Size  Location     Type
  7395 ;;		None
  7396 ;; Auto vars:     Size  Location     Type
  7397 ;;  c               1    2[COMRAM] unsigned char 
  7398 ;;  b               1    1[COMRAM] unsigned char 
  7399 ;;  a               1    0[COMRAM] unsigned char 
  7400 ;; Return value:  Size  Location     Type
  7401 ;;		None               void
  7402 ;; Registers used:
  7403 ;;		wreg, status,2, status,0
  7404 ;; Tracked objects:
  7405 ;;		On entry : 0/0
  7406 ;;		On exit  : 0/0
  7407 ;;		Unchanged: 0/0
  7408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7410 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7412 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7413 ;;Total ram usage:        3 bytes
  7414 ;; Hardware stack levels used:    1
  7415 ;; This function calls:
  7416 ;;		Nothing
  7417 ;; This function is called by:
  7418 ;;		_Pulse_1Khz
  7419 ;; This function uses a non-reentrant model
  7420 ;;
  7421                           
  7422                           	psect	text50
  7423  0015AE                     __ptext50:
  7424                           	opt stack 0
  7425  0015AE                     _Delay_1Khz:
  7426                           	opt stack 23
  7427                           
  7428                           ;SCR.c: 64: unsigned char a,b,c;
  7429                           ;SCR.c: 65: for(c=1;c>0;c--)
  7430                           
  7431                           ;incstack = 0
  7432  0015AE  0E01               	movlw	1
  7433  0015B0  6E03               	movwf	Delay_1Khz@c,c
  7434  0015B2  5003               	movf	Delay_1Khz@c,w,c
  7435  0015B4  B4D8               	btfsc	status,2,c
  7436  0015B6  0012               	return	
  7437  0015B8  D001               	goto	i2l2989
  7438  0015BA  0012               	return	
  7439  0015BC                     i2l2989:
  7440                           
  7441                           ;SCR.c: 66: for(b=32;b>0;b--)
  7442  0015BC  0E20               	movlw	32
  7443  0015BE  6E02               	movwf	Delay_1Khz@b,c
  7444  0015C0  5002               	movf	Delay_1Khz@b,w,c
  7445  0015C2  B4D8               	btfsc	status,2,c
  7446  0015C4  D00D               	goto	i2l3005
  7447  0015C6  D001               	goto	i2l2993
  7448  0015C8  D00B               	goto	i2l3005
  7449  0015CA                     i2l2993:
  7450                           
  7451                           ;SCR.c: 67: for(a=2;a>0;a--);
  7452  0015CA  0E02               	movlw	2
  7453  0015CC  6E01               	movwf	Delay_1Khz@a,c
  7454  0015CE  5001               	movf	Delay_1Khz@a,w,c
  7455  0015D0  B4D8               	btfsc	status,2,c
  7456  0015D2  D004               	goto	i2l3001
  7457  0015D4  D001               	goto	i2l2997
  7458  0015D6  D002               	goto	i2l3001
  7459  0015D8                     i2l2997:
  7460  0015D8  0601               	decf	Delay_1Khz@a,f,c
  7461  0015DA  D7F9               	goto	L10
  7462  0015DC                     i2l3001:
  7463  0015DC  0602               	decf	Delay_1Khz@b,f,c
  7464  0015DE  D7F0               	goto	L11
  7465  0015E0                     i2l3005:
  7466  0015E0  0603               	decf	Delay_1Khz@c,f,c
  7467  0015E2  D7E7               	goto	L12
  7468  0015E4  0012               	return		;funcret
  7469  0015E6                     __end_of_Delay_1Khz:
  7470                           	opt stack 0
  7471                           pclatu	equ	0xFFB
  7472                           pclath	equ	0xFFA
  7473                           tblptru	equ	0xFF8
  7474                           tblptrh	equ	0xFF7
  7475                           tblptrl	equ	0xFF6
  7476                           tablat	equ	0xFF5
  7477                           prodh	equ	0xFF4
  7478                           prodl	equ	0xFF3
  7479                           intcon	equ	0xFF2
  7480                           postinc0	equ	0xFEE
  7481                           fsr0h	equ	0xFEA
  7482                           fsr0l	equ	0xFE9
  7483                           wreg	equ	0xFE8
  7484                           indf1	equ	0xFE7
  7485                           postinc1	equ	0xFE6
  7486                           postdec1	equ	0xFE5
  7487                           fsr1h	equ	0xFE2
  7488                           fsr1l	equ	0xFE1
  7489                           indf2	equ	0xFDF
  7490                           postinc2	equ	0xFDE
  7491                           postdec2	equ	0xFDD
  7492                           plusw2	equ	0xFDB
  7493                           fsr2h	equ	0xFDA
  7494                           fsr2l	equ	0xFD9
  7495                           status	equ	0xFD8
  7496                           
  7497 ;; *************** function _Key_ScanFSM *****************
  7498 ;; Defined at:
  7499 ;;		line 91 in file "_01_USER/Key.c"
  7500 ;; Parameters:    Size  Location     Type
  7501 ;;		None
  7502 ;; Auto vars:     Size  Location     Type
  7503 ;;		None
  7504 ;; Return value:  Size  Location     Type
  7505 ;;		None               void
  7506 ;; Registers used:
  7507 ;;		wreg, status,2, status,0, cstack
  7508 ;; Tracked objects:
  7509 ;;		On entry : 0/0
  7510 ;;		On exit  : 0/0
  7511 ;;		Unchanged: 0/0
  7512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7517 ;;Total ram usage:        0 bytes
  7518 ;; Hardware stack levels used:    1
  7519 ;; Hardware stack levels required when called:    1
  7520 ;; This function calls:
  7521 ;;		_Key_Scan
  7522 ;; This function is called by:
  7523 ;;		_Sys_Cyc
  7524 ;; This function uses a non-reentrant model
  7525 ;;
  7526                           
  7527                           	psect	text51
  7528  0012A0                     __ptext51:
  7529                           	opt stack 0
  7530  0012A0                     _Key_ScanFSM:
  7531                           	opt stack 23
  7532                           
  7533                           ;Key.c: 93: Key_Scan();
  7534                           
  7535                           ;incstack = 0
  7536  0012A0  EC5B  F00A         	call	_Key_Scan	;wreg free
  7537                           
  7538                           ;Key.c: 94: if( s_Local_Key_FSM.key_BUS & 0x01 ) s_Local_Key_FSM.a_key_count[0]++;
  7539  0012A4  0100               	movlb	0	; () banked
  7540  0012A6  A1C5               	btfss	_s_Local_Key_FSM& (0+255),0,b	;volatile
  7541  0012A8  D004               	goto	i2l3077
  7542                           
  7543                           ; BSR set to: 0
  7544  0012AA  0100               	movlb	0	; () banked
  7545  0012AC  4BC8               	infsnz	(_s_Local_Key_FSM+3)& (0+255),f,b	;volatile
  7546  0012AE  2BC9               	incf	(_s_Local_Key_FSM+4)& (0+255),f,b	;volatile
  7547  0012B0  D000               	goto	i2l3077
  7548  0012B2                     i2l3077:
  7549                           
  7550                           ; BSR set to: 0
  7551                           ;Key.c: 95: if( s_Local_Key_FSM.key_BUS & 0x02 ) s_Local_Key_FSM.a_key_count[1]++;
  7552  0012B2  0100               	movlb	0	; () banked
  7553  0012B4  A3C5               	btfss	_s_Local_Key_FSM& (0+255),1,b	;volatile
  7554  0012B6  D004               	goto	i2l3081
  7555                           
  7556                           ; BSR set to: 0
  7557  0012B8  0100               	movlb	0	; () banked
  7558  0012BA  4BCA               	infsnz	(_s_Local_Key_FSM+5)& (0+255),f,b	;volatile
  7559  0012BC  2BCB               	incf	(_s_Local_Key_FSM+6)& (0+255),f,b	;volatile
  7560  0012BE  D000               	goto	i2l3081
  7561  0012C0                     i2l3081:
  7562                           
  7563                           ; BSR set to: 0
  7564                           ;Key.c: 96: if( s_Local_Key_FSM.key_BUS & 0x04 ) s_Local_Key_FSM.a_key_count[2]++;
  7565  0012C0  0100               	movlb	0	; () banked
  7566  0012C2  A5C5               	btfss	_s_Local_Key_FSM& (0+255),2,b	;volatile
  7567  0012C4  D004               	goto	i2l3085
  7568                           
  7569                           ; BSR set to: 0
  7570  0012C6  0100               	movlb	0	; () banked
  7571  0012C8  4BCC               	infsnz	(_s_Local_Key_FSM+7)& (0+255),f,b	;volatile
  7572  0012CA  2BCD               	incf	(_s_Local_Key_FSM+8)& (0+255),f,b	;volatile
  7573  0012CC  D000               	goto	i2l3085
  7574  0012CE                     i2l3085:
  7575                           
  7576                           ; BSR set to: 0
  7577                           ;Key.c: 97: if( s_Local_Key_FSM.key_BUS & 0x08 ) s_Local_Key_FSM.a_key_count[3]++;
  7578  0012CE  0100               	movlb	0	; () banked
  7579  0012D0  A7C5               	btfss	_s_Local_Key_FSM& (0+255),3,b	;volatile
  7580  0012D2  D004               	goto	i2l3089
  7581                           
  7582                           ; BSR set to: 0
  7583  0012D4  0100               	movlb	0	; () banked
  7584  0012D6  4BCE               	infsnz	(_s_Local_Key_FSM+9)& (0+255),f,b	;volatile
  7585  0012D8  2BCF               	incf	(_s_Local_Key_FSM+10)& (0+255),f,b	;volatile
  7586  0012DA  D000               	goto	i2l3089
  7587  0012DC                     i2l3089:
  7588                           
  7589                           ; BSR set to: 0
  7590                           ;Key.c: 98: if( s_Local_Key_FSM.key_BUS & 0x10 ) s_Local_Key_FSM.a_key_count[4]++;
  7591  0012DC  0100               	movlb	0	; () banked
  7592  0012DE  A9C5               	btfss	_s_Local_Key_FSM& (0+255),4,b	;volatile
  7593  0012E0  D004               	goto	i2l3093
  7594                           
  7595                           ; BSR set to: 0
  7596  0012E2  0100               	movlb	0	; () banked
  7597  0012E4  4BD0               	infsnz	(_s_Local_Key_FSM+11)& (0+255),f,b	;volatile
  7598  0012E6  2BD1               	incf	(_s_Local_Key_FSM+12)& (0+255),f,b	;volatile
  7599  0012E8  D000               	goto	i2l3093
  7600  0012EA                     i2l3093:
  7601                           
  7602                           ; BSR set to: 0
  7603                           ;Key.c: 99: if( s_Local_Key_FSM.key_BUS & 0x20 ) s_Local_Key_FSM.a_key_count[5]++;
  7604  0012EA  0100               	movlb	0	; () banked
  7605  0012EC  ABC5               	btfss	_s_Local_Key_FSM& (0+255),5,b	;volatile
  7606  0012EE  0012               	return	
  7607                           
  7608                           ; BSR set to: 0
  7609  0012F0  0100               	movlb	0	; () banked
  7610  0012F2  4BD2               	infsnz	(_s_Local_Key_FSM+13)& (0+255),f,b	;volatile
  7611  0012F4  2BD3               	incf	(_s_Local_Key_FSM+14)& (0+255),f,b	;volatile
  7612  0012F6  0012               	return	
  7613                           
  7614                           ; BSR set to: 0
  7615                           
  7616                           ; BSR set to: 0
  7617  0012F8  0012               	return		;funcret
  7618  0012FA                     __end_of_Key_ScanFSM:
  7619                           	opt stack 0
  7620                           pclatu	equ	0xFFB
  7621                           pclath	equ	0xFFA
  7622                           tblptru	equ	0xFF8
  7623                           tblptrh	equ	0xFF7
  7624                           tblptrl	equ	0xFF6
  7625                           tablat	equ	0xFF5
  7626                           prodh	equ	0xFF4
  7627                           prodl	equ	0xFF3
  7628                           intcon	equ	0xFF2
  7629                           postinc0	equ	0xFEE
  7630                           fsr0h	equ	0xFEA
  7631                           fsr0l	equ	0xFE9
  7632                           wreg	equ	0xFE8
  7633                           indf1	equ	0xFE7
  7634                           postinc1	equ	0xFE6
  7635                           postdec1	equ	0xFE5
  7636                           fsr1h	equ	0xFE2
  7637                           fsr1l	equ	0xFE1
  7638                           indf2	equ	0xFDF
  7639                           postinc2	equ	0xFDE
  7640                           postdec2	equ	0xFDD
  7641                           plusw2	equ	0xFDB
  7642                           fsr2h	equ	0xFDA
  7643                           fsr2l	equ	0xFD9
  7644                           status	equ	0xFD8
  7645                           
  7646 ;; *************** function _Key_Scan *****************
  7647 ;; Defined at:
  7648 ;;		line 69 in file "_01_USER/Key.c"
  7649 ;; Parameters:    Size  Location     Type
  7650 ;;		None
  7651 ;; Auto vars:     Size  Location     Type
  7652 ;;		None
  7653 ;; Return value:  Size  Location     Type
  7654 ;;		None               void
  7655 ;; Registers used:
  7656 ;;		wreg, status,2, status,0
  7657 ;; Tracked objects:
  7658 ;;		On entry : 0/0
  7659 ;;		On exit  : 0/0
  7660 ;;		Unchanged: 0/0
  7661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7666 ;;Total ram usage:        0 bytes
  7667 ;; Hardware stack levels used:    1
  7668 ;; This function calls:
  7669 ;;		Nothing
  7670 ;; This function is called by:
  7671 ;;		_Key_ScanFSM
  7672 ;; This function uses a non-reentrant model
  7673 ;;
  7674                           
  7675                           	psect	text52
  7676  0014B6                     __ptext52:
  7677                           	opt stack 0
  7678  0014B6                     _Key_Scan:
  7679                           	opt stack 23
  7680                           
  7681                           ;Key.c: 71: s_Local_Key_FSM.key_BUS = 0x00;
  7682                           
  7683                           ; BSR set to: 0
  7684                           ;incstack = 0
  7685  0014B6  0E00               	movlw	0
  7686  0014B8  0100               	movlb	0	; () banked
  7687  0014BA  6FC5               	movwf	_s_Local_Key_FSM& (0+255),b	;volatile
  7688                           
  7689                           ; BSR set to: 0
  7690                           ;Key.c: 73: if( RC1 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 0) ;
  7691  0014BC  B282               	btfsc	3970,1,c	;volatile
  7692  0014BE  D003               	goto	i2l2679
  7693                           
  7694                           ; BSR set to: 0
  7695  0014C0  0100               	movlb	0	; () banked
  7696  0014C2  81C5               	bsf	_s_Local_Key_FSM& (0+255),0,b	;volatile
  7697  0014C4  D000               	goto	i2l2679
  7698  0014C6                     i2l2679:
  7699                           
  7700                           ; BSR set to: 0
  7701                           ;Key.c: 74: if( RF1 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 1) ;
  7702  0014C6  B285               	btfsc	3973,1,c	;volatile
  7703  0014C8  D003               	goto	i2l2683
  7704                           
  7705                           ; BSR set to: 0
  7706  0014CA  0100               	movlb	0	; () banked
  7707  0014CC  83C5               	bsf	_s_Local_Key_FSM& (0+255),1,b	;volatile
  7708  0014CE  D000               	goto	i2l2683
  7709  0014D0                     i2l2683:
  7710                           
  7711                           ; BSR set to: 0
  7712                           ;Key.c: 75: if( RF2 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 2) ;
  7713  0014D0  B485               	btfsc	3973,2,c	;volatile
  7714  0014D2  D003               	goto	i2l2687
  7715                           
  7716                           ; BSR set to: 0
  7717  0014D4  0100               	movlb	0	; () banked
  7718  0014D6  85C5               	bsf	_s_Local_Key_FSM& (0+255),2,b	;volatile
  7719  0014D8  D000               	goto	i2l2687
  7720  0014DA                     i2l2687:
  7721                           
  7722                           ; BSR set to: 0
  7723                           ;Key.c: 76: if( RA4 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 3) ;
  7724  0014DA  B880               	btfsc	3968,4,c	;volatile
  7725  0014DC  D003               	goto	i2l2691
  7726                           
  7727                           ; BSR set to: 0
  7728  0014DE  0100               	movlb	0	; () banked
  7729  0014E0  87C5               	bsf	_s_Local_Key_FSM& (0+255),3,b	;volatile
  7730  0014E2  D000               	goto	i2l2691
  7731  0014E4                     i2l2691:
  7732                           
  7733                           ; BSR set to: 0
  7734                           ;Key.c: 77: if( RA5 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 4) ;
  7735  0014E4  BA80               	btfsc	3968,5,c	;volatile
  7736  0014E6  D003               	goto	i2l2695
  7737                           
  7738                           ; BSR set to: 0
  7739  0014E8  0100               	movlb	0	; () banked
  7740  0014EA  89C5               	bsf	_s_Local_Key_FSM& (0+255),4,b	;volatile
  7741  0014EC  D000               	goto	i2l2695
  7742  0014EE                     i2l2695:
  7743                           
  7744                           ; BSR set to: 0
  7745                           ;Key.c: 78: if( RF3 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 5) ;
  7746  0014EE  B685               	btfsc	3973,3,c	;volatile
  7747  0014F0  0012               	return	
  7748                           
  7749                           ; BSR set to: 0
  7750  0014F2  0100               	movlb	0	; () banked
  7751  0014F4  8BC5               	bsf	_s_Local_Key_FSM& (0+255),5,b	;volatile
  7752  0014F6  0012               	return	
  7753                           
  7754                           ; BSR set to: 0
  7755                           
  7756                           ; BSR set to: 0
  7757  0014F8  0012               	return		;funcret
  7758  0014FA                     __end_of_Key_Scan:
  7759                           	opt stack 0
  7760  0000                     pclatu	equ	0xFFB
  7761                           pclath	equ	0xFFA
  7762                           tblptru	equ	0xFF8
  7763                           tblptrh	equ	0xFF7
  7764                           tblptrl	equ	0xFF6
  7765                           tablat	equ	0xFF5
  7766                           prodh	equ	0xFF4
  7767                           prodl	equ	0xFF3
  7768                           intcon	equ	0xFF2
  7769                           postinc0	equ	0xFEE
  7770                           fsr0h	equ	0xFEA
  7771                           fsr0l	equ	0xFE9
  7772                           wreg	equ	0xFE8
  7773                           indf1	equ	0xFE7
  7774                           postinc1	equ	0xFE6
  7775                           postdec1	equ	0xFE5
  7776                           fsr1h	equ	0xFE2
  7777                           fsr1l	equ	0xFE1
  7778                           indf2	equ	0xFDF
  7779                           postinc2	equ	0xFDE
  7780                           postdec2	equ	0xFDD
  7781                           plusw2	equ	0xFDB
  7782                           fsr2h	equ	0xFDA
  7783                           fsr2l	equ	0xFD9
  7784                           status	equ	0xFD8
  7785                           pclatu	equ	0xFFB
  7786                           pclath	equ	0xFFA
  7787                           tblptru	equ	0xFF8
  7788                           tblptrh	equ	0xFF7
  7789                           tblptrl	equ	0xFF6
  7790                           tablat	equ	0xFF5
  7791                           prodh	equ	0xFF4
  7792                           prodl	equ	0xFF3
  7793                           intcon	equ	0xFF2
  7794                           postinc0	equ	0xFEE
  7795                           fsr0h	equ	0xFEA
  7796                           fsr0l	equ	0xFE9
  7797                           wreg	equ	0xFE8
  7798                           indf1	equ	0xFE7
  7799                           postinc1	equ	0xFE6
  7800                           postdec1	equ	0xFE5
  7801                           fsr1h	equ	0xFE2
  7802                           fsr1l	equ	0xFE1
  7803                           indf2	equ	0xFDF
  7804                           postinc2	equ	0xFDE
  7805                           postdec2	equ	0xFDD
  7806                           plusw2	equ	0xFDB
  7807                           fsr2h	equ	0xFDA
  7808                           fsr2l	equ	0xFD9
  7809                           status	equ	0xFD8
  7810                           
  7811                           	psect	rparam
  7812  0000                     pclatu	equ	0xFFB
  7813                           pclath	equ	0xFFA
  7814                           tblptru	equ	0xFF8
  7815                           tblptrh	equ	0xFF7
  7816                           tblptrl	equ	0xFF6
  7817                           tablat	equ	0xFF5
  7818                           prodh	equ	0xFF4
  7819                           prodl	equ	0xFF3
  7820                           intcon	equ	0xFF2
  7821                           postinc0	equ	0xFEE
  7822                           fsr0h	equ	0xFEA
  7823                           fsr0l	equ	0xFE9
  7824                           wreg	equ	0xFE8
  7825                           indf1	equ	0xFE7
  7826                           postinc1	equ	0xFE6
  7827                           postdec1	equ	0xFE5
  7828                           fsr1h	equ	0xFE2
  7829                           fsr1l	equ	0xFE1
  7830                           indf2	equ	0xFDF
  7831                           postinc2	equ	0xFDE
  7832                           postdec2	equ	0xFDD
  7833                           plusw2	equ	0xFDB
  7834                           fsr2h	equ	0xFDA
  7835                           fsr2l	equ	0xFD9
  7836                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         163
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     50      71
    BANK0           160      1     159
    BANK1           256     19      19
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    VerifyCRC@DataBuff	PTR unsigned char  size(2) Largest target is 10
		 -> ga_RS485_ReceiveBuff(BANK0[10]), ga_RS485_SendBuff(BANK0[10]), 

    RS485_ManageMessage@DataBuff	PTR unsigned char  size(2) Largest target is 10
		 -> ga_RS485_ReceiveBuff(BANK0[10]), 

    RS485_SendDate@date_dress	PTR unsigned char  size(2) Largest target is 10
		 -> ga_RS485_SendBuff(BANK0[10]), 


Critical Paths under _main in COMRAM

    _Timer0_Init->_SetTimer0
    _ShowResult->_TM1640_Show_integer
    _TM1640_Show_integer->_TM1640_Writer_Dates
    _TM1640_Show_integer->___lwdiv
    _TM1640_Writer_Dates->___lwmod
    _Relay_Control->_delay_ms
    _delay_ms->_delay1ms
    _RS485_SendDate->_VerifyCRC
    _GetADC6->___ftmul
    ___lwtoft->___ftpack
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul
    _RS485_Init->_Open1USART
    _RS485_ManageMessage->_VerifyCRC
    _VerifyCRC->___lldiv
    _Key_ManageMessage->_Key_ReadFSM
    _Init_TM1640->_TM1640_Writer_Byte
    _TM1640_Writer_Byte->_TM1640_Delay
    _TM1640_Stop->_TM1640_Delay
    _TM1640_Start->_TM1640_Delay
    _ADC6_Init->_OpenADC

Critical Paths under _Sys_Cyc in COMRAM

    _Sys_Cyc->i2___llmod
    _Pulse_1Khz->_Delay_1Khz

Critical Paths under _main in BANK0

    _Run->_RS485_SendDate

Critical Paths under _Sys_Cyc in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Run
    _GetADC6->___ftdiv
    _ManageMessage->_RS485_ManageMessage

Critical Paths under _Sys_Cyc in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Sys_Cyc in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Sys_Cyc in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Sys_Cyc in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Sys_Cyc in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Sys_Cyc in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Sys_Cyc in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Sys_Cyc in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Sys_Cyc in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Sys_Cyc in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Sys_Cyc in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Sys_Cyc in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Sys_Cyc in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Sys_Cyc in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Sys_Cyc in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   21898
                          _ADC6_Init
                        _GPIO_Config
                        _Init_TM1640
                           _Key_Init
                      _ManageMessage
                         _RS485_Init
                         _Relay_Init
                                _Run
                           _SCR_Init
                         _ShowResult
                        _Timer0_Init
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0     170
                          _SetTimer0
 ---------------------------------------------------------------------------------
 (2) _SetTimer0                                            4     2      2     170
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ShowResult                                           1     1      0    4593
                                             33 COMRAM     1     1      0
                        _LED_Control
                _TM1640_Show_integer
                _TM1640_Writer_Dates
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     415
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _TM1640_Show_integer                                  2     0      2    2672
                                             31 COMRAM     2     0      2
                _TM1640_Writer_Dates
                            ___lwdiv
                            ___lwmod
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     671
                                             24 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     546
                                             24 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _TM1640_Writer_Dates                                  2     1      1    1170
                                             29 COMRAM     2     1      1
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _LED_Control                                          2     1      1     336
                                             24 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _SCR_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Run                                                  4     4      0   12311
                                             15 BANK1      4     4      0
                            _GetADC6
                     _RS485_SendDate
                      _Relay_Control
 ---------------------------------------------------------------------------------
 (2) _Relay_Control                                        2     1      1     464
                                             29 COMRAM     2     1      1
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             2     0      2     224
                                             27 COMRAM     2     0      2
                           _delay1ms
 ---------------------------------------------------------------------------------
 (4) _delay1ms                                             3     3      0     138
                                             24 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _RS485_SendDate                                       4     1      3    2467
                                              0 BANK0      1     1      0
                                              0 BANK1      3     0      3
                          _VerifyCRC
 ---------------------------------------------------------------------------------
 (2) _GetADC6                                              0     0      0    9380
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2512
                                             32 COMRAM     3     0      3
                            _ReadADC (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3314
                                             35 COMRAM    15     9      6
                            _ReadADC (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3554
                                              0 BANK1     15     9      6
                            _ReadADC (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2404
                                             24 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) _ReadADC                                              4     2      2       0
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Relay_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RS485_Init                                           0     0      0     284
                         _Open1USART
 ---------------------------------------------------------------------------------
 (2) _Open1USART                                           3     1      2     284
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _ManageMessage                                        0     0      0    4008
                  _Key_ManageMessage
                _RS485_ManageMessage
 ---------------------------------------------------------------------------------
 (2) _RS485_ManageMessage                                 11     8      3    3251
                                              0 BANK1     11     8      3
                          _VerifyCRC
 ---------------------------------------------------------------------------------
 (3) _VerifyCRC                                           13    10      3    1941
                                             37 COMRAM    13    10      3
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     792
                                             24 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     395
                                             24 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _Key_ManageMessage                                    4     4      0     757
                                             30 COMRAM     4     4      0
                        _Key_ReadFSM
                       _Key_ResetFSM
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     223
                                             24 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) _Key_ResetFSM                                         1     1      0      67
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Key_ReadFSM                                          6     6      0     467
                                             24 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _Key_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_TM1640                                          0     0      0     272
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
 ---------------------------------------------------------------------------------
 (3) _TM1640_Writer_Byte                                   2     2      0     136
                                             26 COMRAM     2     2      0
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (3) _TM1640_Stop                                          0     0      0      68
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (3) _TM1640_Start                                         0     0      0      68
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (4) _TM1640_Delay                                         2     2      0      68
                                             24 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC6_Init                                            0     0      0     260
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     260
                                             24 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Sys_Cyc                                             15    15      0     865
                                              9 COMRAM    15    15      0
                        _Key_ScanFSM
                         _Pulse_1Khz
                      i2_LED_Control
                        i2_SetTimer0
                          i2___llmod
 ---------------------------------------------------------------------------------
 (7) i2___llmod                                            9     1      8     315
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) i2_SetTimer0                                          4     2      2      94
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) i2_LED_Control                                        2     1      1     184
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (7) _Pulse_1Khz                                           2     2      0     227
                                              3 COMRAM     2     2      0
                         _Delay_1Khz
 ---------------------------------------------------------------------------------
 (8) _Delay_1Khz                                           3     3      0     138
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (7) _Key_ScanFSM                                          0     0      0       0
                           _Key_Scan
 ---------------------------------------------------------------------------------
 (8) _Key_Scan                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC6_Init
     _OpenADC
   _GPIO_Config
   _Init_TM1640
     _TM1640_Start
       _TM1640_Delay
     _TM1640_Stop
       _TM1640_Delay
     _TM1640_Writer_Byte
       _TM1640_Delay
   _Key_Init
   _ManageMessage
     _Key_ManageMessage
       _Key_ReadFSM
       _Key_ResetFSM
       ___lbmod
     _RS485_ManageMessage
       _VerifyCRC
         ___lldiv
         ___llmod
   _RS485_Init
     _Open1USART
   _Relay_Init
   _Run
     _GetADC6
       _BusyADC
       _ConvertADC
       _ReadADC
       ___ftdiv
         _ReadADC (ARG)
         ___ftmul (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___ftmul
         _ReadADC (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___lwtoft
         _ReadADC (ARG)
         ___ftpack (ARG)
     _RS485_SendDate
       _VerifyCRC
         ___lldiv
         ___llmod
     _Relay_Control
       _delay_ms
         _delay1ms
   _SCR_Init
   _ShowResult
     _LED_Control
     _TM1640_Show_integer
       _TM1640_Writer_Dates
         _TM1640_Start
           _TM1640_Delay
         _TM1640_Stop
           _TM1640_Delay
         _TM1640_Writer_Byte
           _TM1640_Delay
         ___lwmod (ARG)
       ___lwdiv
       ___lwmod
       ___wmul (ARG)
     _TM1640_Writer_Dates
       _TM1640_Start
         _TM1640_Delay
       _TM1640_Stop
         _TM1640_Delay
       _TM1640_Writer_Byte
         _TM1640_Delay
       ___lwmod (ARG)
     ___wmul
   _Timer0_Init
     _SetTimer0

 _Sys_Cyc (ROOT)
   _Key_ScanFSM
     _Key_Scan
   _Pulse_1Khz
     _Delay_1Khz
   i2_LED_Control
   i2_SetTimer0
   i2___llmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     13      13       7        7.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      1      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     32      47       1       74.7%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F9      12        0.0%
DATA                 0      0      F9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sun Dec 20 14:22:54 2015

                 ?_TM1640_Stop 0001   __size_of_TM1640_Writer_Dates 0022                  ?_TM1640_Delay 0001  
          ___wmul@multiplicand 001B                    __CFG_BORV$3 000000                  ?_TM1640_Start 0001  
                 _gf_ADC6_Buff 0037                   __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000  
                 __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000                   __CFG_CP4$OFF 000000  
                 __CFG_CP5$OFF 000000                   __CFG_CP6$OFF 000000                   __CFG_CP7$OFF 000000  
                          l210 0E5A                            l202 0DFC                            l211 0E76  
                          l205 0E1E                            l134 05F4                            l160 07D2  
                          l234 0AEA                            l512 0FDE                            l370 1556  
                          l515 0FF8                            l509 0FC4                            l384 1814  
                          l369 1540                            l650 1236                            l643 120C  
                          l647 1228                            l584 1394                            l649 1234  
                          l973 0DA2                            _GIE 007F97                   __CFG_CPB$OFF 000000  
                          _RB0 007C08                            _RB1 007C09                            _RC0 007C10  
                          _RA4 007C04                            _RC1 007C11                            _RA5 007C05  
                          _RD0 007C18                            _RD1 007C19                            _RD2 007C1A  
                          _RD3 007C1B                            _RD4 007C1C                            _RF1 007C29  
                          _RD5 007C1D                            _RF2 007C2A                            _RD6 007C1E  
                          _RF3 007C2B                            _RD7 007C1F                   __CFG_CPD$OFF 000000  
                          _PSA 007EAB                            _Run 1106       RS485_SendDate@date_dress 0100  
                          prod 000FF3       RS485_SendDate@date_lenth 0102                   ?_LED_Control 0019  
                          wreg 000FE8                   ?_GPIO_Config 0001                     _TXSTA1bits 000FAC  
         ?_TM1640_Show_integer 0020                  ?_Key_ResetFSM 0001                    ?_RS485_Init 0001  
                ??_Key_ReadFSM 0019                   ___ftdiv@cntr 0109                  ??_Key_ScanFSM 0001  
                         ?_Run 0001                   ___ftdiv@sign 010E                           l1109 0F9E  
                         l1037 09A4                           l1119 1084                           l1172 1296  
                         l2301 1592                           l1182 13DA                           l2305 15A0  
                         l2313 15A8                           l2309 15A4                           l3401 0D8A  
                         l2433 17EA                           l3065 0ED6                           l2291 180E  
                         l2283 1804                           l2355 156E                           l2451 060E  
                         l3403 0D96                           l2435 17F0                           l2349 155A  
                         l3069 0F18                           l2455 0640                           l2447 05CA  
                         l2439 0572                           l2711 0758                           l3415 0DBC  
                         l2289 180C                           l2481 0702                           l2465 066C  
                         l2449 05E0                           l2457 0656                           l2625 1640  
                         l2617 1626                           l2713 075E                           l3425 0F46  
                         l2801 122C                           l3409 0DAA                           l3505 0962  
                         l2297 1584                           l2641 126C                           l2627 1646  
                         l2723 07A4                           l3427 0F54                           l3603 0244  
                         l3515 09B6                           l3531 0B56                           l2477 06FE  
                         l2469 0678                           l2733 07C4                           l2725 07AA  
                         l3437 0F8E                           l3429 0F5C                           l3453 1074  
                         l3445 1038                           l3525 0B2E                           l2637 125A  
                         l2661 13B8                           l2487 13F6                           l2751 0826  
                         l2743 07EC                           l3447 1046                           l3463 0A5E  
                         l3631 0396                           l3623 0348                           l3391 0D26  
                         l2911 1456                           l2903 1440                           l2639 1264  
                         l2489 1424                           l2729 07B6                           l3449 104E  
                         l3617 02E2                           l3609 025C                           l3393 0D32  
                         l3553 0BB2                           l3545 0B8A                           l2913 145A  
                         l2905 1444                           l2649 128A                           l2665 13CE  
                         l2657 13A6                           l2763 086E                           l2755 0834  
                         l2747 0808                           l2739 07DE                           l3459 09F4  
                         l3627 036E                           l3395 0D52                           l3387 0D16  
                         l3563 0BE0                           l3555 0BB8                           l2659 13B0  
                         l2781 11FC                           l3485 0900                           l3549 0B9C  
                         l3581 0E7E                           l2767 0878                           l2759 0850  
                         l3591 01F4                           l3399 0D6A                           l3479 08C6  
                         l3559 0BCA                           l3647 117A                           l3663 1134  
                         l2919 146C                           l2769 0886                           l2793 1218  
                         l2785 1204                           l2777 11F2                           l3577 0E26  
                         l2961 0FE4                           l3657 1112                           l2955 0FCA  
                         l2797 1220                           l2789 1210                           l2973 1018  
                         l2967 0FFE                           l3679 1608                           l2889 1654  
                         _T0CS 007EAD                           u2050 0598                           _T0SE 007EAC  
                         u2060 05B6                           u2220 186E                           u2134 06C6  
                         u2070 062C                           u2135 06C2                           u2144 06DA  
                         u2145 06D6                           _IPEN 007E87                           u3901 0B3E  
                         u3831 08A2                           u3851 08DC                           u3881 0B16  
     RS485_ManageMessage@CRC_H 0108       RS485_ManageMessage@CRC_L 0109                  ??_Init_TM1640 001D  
                   _Delay_1Khz 15AE                           _main 15E6                   ___ftpack@arg 0019  
                 ___ftpack@exp 001C                           fsr0h 000FEA                           fsr1h 000FE2  
                         fsr0l 000FE9                           fsr2h 000FDA                           indf1 000FE7  
                         fsr1l 000FE1                           indf2 000FDF                           fsr2l 000FD9  
                         pclat 000FFA                __end_of_GetADC6 11E0                           prodh 000FF4  
                         prodl 000FF3                           start 01A2                  __CFG_IESO$OFF 000000  
                __CFG_FOSC$HS1 000000                  __CFG_MCLRE$ON 000000                   ___ftmul@cntr 0031  
                 ___param_bank 000010                   ___ftmul@sign 0032                __end_of_BusyADC 1874  
              __end_of_ReadADC 1866                 ??_TM1640_Delay 0019                __end_of_OpenADC 1398  
                        ??_Run 010F                ??_ManageMessage 0033                 ??_TM1640_Start 001B  
                __CFG_RETEN$ON 000000                          ?_main 0001                __end_of___lbmod 164C  
              __end_of_Sys_Cyc 01A2                __end_of___ftdiv 09DE                __end_of___lldiv 0FB0  
              __end_of___ftmul 0C08                __end_of___llmod 1096                          _RC1IF 007CF5  
                        _T0PS0 007EA8                          _T0PS1 007EA9                          _T0PS2 007EAA  
              __end_of___lwdiv 12A0                __end_of___lwmod 13E4                          i2l311 0168  
                        i2l304 00E8                          i2l308 013A              __end_of_ADC6_Init 1846  
                        _TMR0H 000FD7                          _TMR0L 000FD6                 ??_Key_ResetFSM 0019  
        ??_TM1640_Show_integer 0022                  __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000  
                __CFG_WRT2$OFF 000000                  __CFG_WRT3$OFF 000000                  __CFG_WRT4$OFF 000000  
               __CFG_EBRT0$OFF 000000                  __CFG_WRT5$OFF 000000                 __CFG_EBRT1$OFF 000000  
                __CFG_WRT6$OFF 000000                 __CFG_EBRT2$OFF 000000                  __CFG_WRT7$OFF 000000  
               __CFG_EBRT3$OFF 000000                 __CFG_EBRT4$OFF 000000                 __CFG_FCMEN$OFF 000000  
               __CFG_EBRT5$OFF 000000                 __CFG_EBRT6$OFF 000000                 __CFG_EBRT7$OFF 000000  
             __end_of_SCR_Init 188E                  __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000  
                __CFG_WRTD$OFF 000000                 __CFG_EBRTB$OFF 000000                  ___ftpack@sign 001D  
                   _ConvertADC 188E                          tablat 000FF5                          plusw2 000FDB  
                        status 000FD8             _TM1640_Writer_Byte 1538            __end_of_Key_ReadFSM 070E  
          __end_of_Key_ScanFSM 12FA             __size_ofi2___llmod 0070                __initialization 14FA  
          __end_of_Init_TM1640 1720            __size_of_RS485_Init 0018                   __end_of_main 161A  
          ?_TM1640_Writer_Byte 0001               __end_of_Key_Init 17CC               __end_of_Key_Scan 14FA  
        i2LED_Control@_LED_num 0002                     _Open1USART 11E0                         ??_main 0033  
                __activetblptr 000000  RS485_ManageMessage@date_lenth 0102           ??_TM1640_Writer_Byte 001B  
                       _ADCON0 000FC2                         _ADCON1 000FC1                         _ADCON2 000FC0  
             ___llmod@dividend 0019                     _Relay_Init 1874                         _ADRESH 000FC4  
                       _ADRESL 000FC3                         _T08BIT 007EAE                         _ANSEL4 00792C  
                       _ANSEL6 00792E                         _ANSEL7 00792F                         _ANSEL8 007920  
             __end_of___ftpack 0DCC                      ??_GetADC6 0033                         i2l1119 10F4  
              __CFG_BBSIZ$BB2K 000000                         i2l3001 15DC                         i2l3005 15E0  
                       i2l3103 130A                         i2l3111 1318                         i2l3113 1324  
                       i2l3123 1336                         i2l3131 1684                         i2l3211 00DC  
                       i2l3117 132E                         i2l3125 133C                         i2l3109 1312  
                       i2l3231 0158                         i2l3081 12C0                         i2l3161 14B0  
                       i2l3153 149A                         i2l3145 1484                         i2l3209 00D0  
                       i2l3217 011E                         i2l3155 149E                         i2l3147 1488  
                       i2l3171 10BE                         i2l3093 12EA                         i2l3085 12CE  
                       i2l3077 12B2                 __CFG_WDTEN$OFF 000000                         i2l3175 10E4  
                       i2l3167 10A8                         i2l3089 12DC                         i2l3169 10B6  
                       i2l2691 14E4                         i2l2683 14D0                         i2l2695 14EE  
                       i2l2687 14DA                         i2l2679 14C6                         i2l2993 15CA  
                       i2l2997 15D8                         i2l2989 15BC                  SetTimer0@_tmr 0019  
                       _RCREG1 000FAE               __end_of___lwtoft 16FA                         _RCSTA1 000FAB  
                  ?_Delay_1Khz 0001                         _TMR0IE 007F95                         _SPBRG1 000FAF  
                       _TMR0IF 007F92                         _TMR0ON 007EAF                         _TRISB0 007C98  
                       _TRISB1 007C99                         _TRISC0 007CA0                         _TRISB2 007C9A  
                       _TRISA4 007C94                         _TRISC1 007CA1                         _TRISA5 007C95  
                       _TRISD0 007CA8                         _TRISD1 007CA9                         _TRISD2 007CAA  
                       _TRISD3 007CAB                         _TRISD4 007CAC                         _TRISC6 007CA6  
                TM1640_Delay@i 001A                         _TRISF1 007CB9                         _TRISD5 007CAD  
                       _TRISC7 007CA7                         _TRISF2 007CBA                         _TRISD6 007CAE  
                       _TRISF3 007CBB                         _TRISD7 007CAF                      ??_BusyADC 0019  
                       _TXREG1 000FAD                      ??_ReadADC 001B                         _TXSTA1 000FAC  
             __end_of_delay1ms 15AE               __end_of_delay_ms 1802                  ??_Timer0_Init 001D  
                    ??_OpenADC 001B                   Sys_Cyc@_Byte 003B         TM1640_Writer_Byte@Date 001B  
                 Sys_Cyc@_flag 003C                 __CFG_XINST$OFF 000000                   Sys_Cyc@_temp 0018  
       TM1640_Writer_Byte@mask 001C        __size_of_RS485_SendDate 00C2                         ___wmul 16AC  
               __CFG_STVREN$ON 000000                      ??___lbmod 001A                      ??_Sys_Cyc 000A  
                    ??___ftdiv 0106                      ??___lldiv 0021                      ??___ftmul 002A  
                    ??___llmod 0021           Sys_Cyc@_overturn_LED 003D                      ??___lwdiv 001D  
           __size_of_SetTimer0 0030                      ??___lwmod 001D                     _ShowResult 0E8E  
           LED_Control@_switch 0019                         clear_0 1500                         clear_1 150C  
         __size_of_TM1640_Stop 0024   __size_of_RS485_ManageMessage 03C6          ___ftmul@f3_as_product 002E  
                   _Pulse_1Khz 12FA             __size_of_VerifyCRC 0128              __end_ofi2___llmod 1106  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
         __size_of_LED_Control 0044           __size_of_GPIO_Config 0002                    _Key_ReadFSM 056C  
          _TM1640_Writer_Dates 178C                    ?_ConvertADC 0001           __end_of_TM1640_Delay 181C  
                  _Key_ScanFSM 12A0  RS485_ManageMessage@from_dress 010A                ___lbmod@divisor 0019  
         __end_of_TM1640_Start 178C                     __accesstop 0060        __end_of__initialization 1532  
              ___lbmod@counter 001B                    _Init_TM1640 16FA                   ?i2_SetTimer0 0001  
                ___rparam_used 000001                     ___ftdiv@f1 0100                     ___ftdiv@f2 0103  
                   ___ftdiv@f3 010A              i2___llmod@divisor 0005               Pulse_1Khz@_pulse 0005  
            i2___llmod@counter 0009           __end_of_Key_ResetFSM 142E                     ___ftmul@f1 0024  
                   ___ftmul@f2 0027                 __pcstackCOMRAM 0001         __size_ofi2_LED_Control 0044  
                 __pidataBANK0 1846                  Key_ResetFSM@t 0019                      ?_SCR_Init 0001  
         ?_TM1640_Writer_Dates 001E            __end_of_Timer0_Init 1744                    ?_Open1USART 0019  
                   ___lwtoft@c 0021            __size_of_Delay_1Khz 0038         __size_of_Relay_Control 0076  
                 ??_RS485_Init 001C                    ?_Relay_Init 0001              __end_of_SetTimer0 167C  
                   __pbssBANK0 0060                      ?_Key_Init 0001                      ?_Key_Scan 0001  
                  _ReceiveBuff 0060                __CFG_PLLCFG$OFF 000000        TM1640_Writer_Dates@Addr 001F  
      TM1640_Writer_Dates@Date 001E              __end_of_VerifyCRC 0B06          ??_TM1640_Writer_Dates 001F  
                      ?___wmul 0019                     ??_SCR_Init 0019             __end_of_RS485_Init 1834  
                  ?_ShowResult 0001            LED_Control@_LED_num 001A            __size_of_ConvertADC 0004  
                    ?___ftpack 0019                      ?___lwtoft 0021               Open1USART@config 001B  
                      _LED_BUS 003E                    ?_Pulse_1Khz 0001                      ?_delay1ms 0001  
                    ?_delay_ms 001C                  i2_LED_Control 1472                        _SPBRGH1 000FD4  
                    _ADC6_Init 1834              _ga_RS485_SendBuff 00E4                        _GetADC6 1174  
                   ??_Key_Init 0019                     ??_Key_Scan 0001                  _Relay_Control 0FB0  
          __size_of_Open1USART 0064                        _BusyADC 1866                        _ReadADC 1856  
              __CFG_PWRTEN$OFF 000000                        _OpenADC 134A                        __Hparam 0000  
                  _Timer0_Init 1720                        __Lparam 0000                 _RS485_SendDate 0DCC  
                      ___lbmod 161A                        _Sys_Cyc 0008                        ___ftdiv 088C  
                      ___lldiv 0F24                __size_of___wmul 0028                        ___ftmul 0B06  
                      ___llmod 1026                        ___lwdiv 1244                        ___lwmod 1398  
          __size_of_Relay_Init 000E    __end_of_TM1640_Show_integer 0D06                        __pcinit 14FA  
                   ??___ftpack 001E                        __ramtop 1000          __end_of_ManageMessage 17E8  
                      __ptext0 15E6                        __ptext1 1720                        __ptext2 164C  
                      __ptext3 0E8E                        __ptext4 16AC                        __ptext5 0C08  
                      __ptext6 1398                        __ptext7 1244                        __ptext8 178C  
                      __ptext9 142E                        _gsa_Msg 006A                     ??___lwtoft 0024  
                 __size_of_Run 006E                     ??_delay1ms 0019          __size_of_TM1640_Delay 001A  
            __CFG_MSSPMSK$MSK7 000000                 ?i2_LED_Control 0001                     ??_delay_ms 001E  
        __size_of_TM1640_Start 0024                     ?_ADC6_Init 0001                 OpenADC@config2 0019  
               OpenADC@config3 001A           end_of_initialization 1532                   ??_Delay_1Khz 0001  
          __size_of_ShowResult 0096                 ?_Relay_Control 001E          __size_of_Key_ResetFSM 004A  
          _RS485_ManageMessage 01A6                ___lldiv@divisor 001D         __end_of_RS485_SendDate 0E8E  
            _Key_ManageMessage 070E                ___lldiv@counter 0025            __size_of_Pulse_1Khz 0050  
         __size_ofi2_SetTimer0 0030             ?_Key_ManageMessage 0001                        postdec1 000FE5  
                      postdec2 000FDD                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE                   _TM1640_Delay 1802           ?_RS485_ManageMessage 0100  
                 _TM1640_Start 1768            ??_Key_ManageMessage 001F               TM1640_Delay@Time 0019  
           __end_of_Delay_1Khz 15E6               ___lbmod@dividend 001A                   _Key_ResetFSM 13E4  
  __size_of_TM1640_Writer_Byte 003E                   ?_Key_ReadFSM 0001                      i2___llmod 1096  
                 ??_ConvertADC 0019                   ?_Key_ScanFSM 0001            VerifyCRC@date_lenth 0028  
                  ___lbmod@rem 001C                   ?_Init_TM1640 0001                    ___ftdiv@exp 010D  
    __end_of_Key_ManageMessage 088C             i2___llmod@dividend 0001             VerifyCRC@CRC_Value 002E  
              ?_RS485_SendDate 0100                    ___ftmul@exp 002D                  ??_TM1640_Stop 001B  
               __end_of___wmul 16D4          ??_RS485_ManageMessage 0103                   ??_Open1USART 001B  
            __size_of_SCR_Init 000C             __end_of_ConvertADC 1892                ??i2_LED_Control 0002  
                ??_LED_Control 001A                  ??_GPIO_Config 0019            start_initialization 14FA  
                  _g_Timer_Cyc 0033                    __end_of_Run 1174                    ??_ADC6_Init 001E  
                 ??_Relay_Init 0019                     ?i2___llmod 0001                ??_Relay_Control 001F  
   TM1640_Show_integer@Numbers 0020                ___llmod@divisor 001D              __size_of_Key_Init 001E  
            __size_of_Key_Scan 0044                ___llmod@counter 0021                      _SetTimer0 164C  
           __end_of_Open1USART 1244                i2SetTimer0@_tmr 0001                       ??___wmul 001D  
                 ??_ShowResult 0022                      _VerifyCRC 09DE                    __pdataBANK0 00EE  
         i2LED_Control@_switch 0001             __end_of_Relay_Init 1882            __end_of_TM1640_Stop 1768  
            __size_of___ftpack 00C6                   ??_Pulse_1Khz 0004                    __pbssCOMRAM 0033  
            __size_of___lwtoft 0026                  __pcstackBANK0 00FE                  __pcstackBANK1 0100  
            __size_of_delay1ms 0038              __size_of_delay_ms 001A                       ?_GetADC6 0001  
          __end_of_LED_Control 1472            __end_of_GPIO_Config 1894             __end_of_ShowResult 0F24  
   __size_of_Key_ManageMessage 017E                       ?_BusyADC 0001                       ?_ReadADC 0019  
  __end_of_TM1640_Writer_Dates 17AE                     ?_SetTimer0 0019                       ?_OpenADC 0019  
                 ?_Timer0_Init 0001               ___lwdiv@dividend 0019              __CFG_CCP2MX$PORTC 000000  
           __end_of_Pulse_1Khz 134A                      __pintcode 0008                       ?___lbmod 0019  
                     ?_Sys_Cyc 0001                       ?___ftdiv 0100                       ?___lldiv 0019  
                     ?___ftmul 0024                       ?___llmod 0019                       ?___lwdiv 0019  
                     ?___lwmod 0019                     ?_VerifyCRC 0026                Open1USART@spbrg 0019  
                    _gs_Switch 0041           Relay_Control@_switch 001E               ___lwdiv@quotient 001D  
                  ??i2___llmod 0009                      delay1ms@a 0019                      delay1ms@b 001A  
                    delay1ms@c 001B                _s_Local_Key_FSM 00C5           __size_of_Key_ReadFSM 01A2  
         __size_of_Key_ScanFSM 005A                 ___wmul@product 001D                  OpenADC@config 001D  
                     _PIE1bits 000F9D           __size_of_Init_TM1640 0026                       _PIR1bits 000F9E  
                     _SCR_Init 1882                    _TM1640_Stop 1744                     _ADCON0bits 000FC2  
            ___wmul@multiplier 0019               __CFG_SOSCSEL$DIG 000000              VerifyCRC@CRC_Byte 0032  
                  _LED_Control 142E                    _GPIO_Config 1892                    Delay_1Khz@a 0001  
                  Delay_1Khz@b 0002                    Delay_1Khz@c 0003   __size_of_TM1640_Show_integer 00FE  
  RS485_ManageMessage@DataBuff 0100                      copy_data0 1526                       _Key_Init 17AE  
                     _Key_Scan 14B6               ??_RS485_SendDate 00FE               __size_of_GetADC6 006C  
                ??i2_SetTimer0 0003         __size_of_ManageMessage 001C                    ??_SetTimer0 001B  
             __size_of_BusyADC 000E               __size_of_ReadADC 0010                       __Hrparam 0000  
             __size_of_OpenADC 004E                       __Lrparam 0000             __CFG_BOREN$SBORDIS 000000  
            VerifyCRC@DataBuff 0026                    ??_VerifyCRC 0029             Key_ReadFSM@key_num 001E  
     Pulse_1Khz@_overturn_1Khz 003A               __size_of___lbmod 0032               __size_of_Sys_Cyc 019A  
             __size_of___ftdiv 0152               __size_of___lldiv 008C               __size_of___ftmul 0102  
             __size_of___llmod 0070               __size_of___lwdiv 005C               __size_of___lwmod 004C  
                     ___ftpack 0D06                   _g_RS485_Byte 003F           _g_RS485_Receive_Flag 0040  
                     ___lwtoft 16D4                       _delay1ms 1576     __end_of_TM1640_Writer_Byte 1576  
                     _delay_ms 17E8                ___lwdiv@divisor 001B                ___lwdiv@counter 001F  
                     __ptext10 1882                       __ptext11 1106                       __ptext20 0D06  
                     __ptext12 0FB0                       __ptext21 1856                       __ptext13 17E8  
                     __ptext30 1026                       __ptext22 188E                       __ptext14 1576  
                     __ptext31 0F24                       __ptext23 1866                       __ptext15 0DCC  
                     __ptext40 1768                       __ptext32 070E                       __ptext24 1874  
                     __ptext16 1174                       __ptext41 1802                       __ptext33 161A  
                     __ptext25 181C                       __ptext17 16D4                       __ptext50 15AE  
                     __ptext42 1892                       __ptext34 13E4                       __ptext26 11E0  
                     __ptext18 0B06                       __ptext51 12A0                       __ptext43 1834  
                     __ptext35 056C                       __ptext27 17CC                       __ptext19 088C  
                     __ptext52 14B6                       __ptext44 134A                       __ptext36 17AE  
                     __ptext28 01A6                       __ptext37 16FA                       __ptext29 09DE  
                     __ptext46 1096                       __ptext38 1538                       __ptext47 167C  
                     __ptext39 1744                       __ptext48 1472                       __ptext49 12FA  
       Relay_Control@relay_num 001F                  __size_of_main 0034            __CFG_RTCOSC$SOSCREF 000000  
  __end_of_RS485_ManageMessage 056C           __size_of_Timer0_Init 0024            __end_ofi2_SetTimer0 16AC  
          __CFG_INTOSCSEL$HIGH 000000                    delay_ms@_ms 001C                     _LED_Number 00EE  
                _ManageMessage 17CC                     _INTCONbits 000FF2          __end_ofi2_LED_Control 14B6  
                   _RS485_Init 181C                  Pulse_1Khz@_QD 0004                       intlevel2 0000  
        __end_of_Relay_Control 1026               ___lwmod@dividend 0019               ___lldiv@dividend 0019  
                   _RCSTA1bits 000FAB        Key_ReadFSM@key_num_mate 001D             __CFG_WDTPS$1048576 000000  
            _gs_Local_Key_User 00B0                 ?_ManageMessage 0001           _ga_RS485_ReceiveBuff 00DA  
             ___lldiv@quotient 0021                ___lwmod@divisor 001B                ___lwmod@counter 001D  
          __CFG_BORPWR$ZPBORMV 000000             __size_of_ADC6_Init 0012                    i2_SetTimer0 167C  
          _TM1640_Show_integer 0C08  
