

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Dec 18 14:37:50 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F67K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    63  0000                     
    64                           	psect	idataBANK0
    65  001632                     __pidataBANK0:
    66                           	opt stack 0
    67                           
    68                           ;initializer for _LED_Number
    69  001632  3F                 	db	63
    70  001633  06                 	db	6
    71  001634  5B                 	db	91
    72  001635  4F                 	db	79
    73  001636  66                 	db	102
    74  001637  6D                 	db	109
    75  001638  7D                 	db	125
    76  001639  07                 	db	7
    77  00163A  7F                 	db	127
    78  00163B  6F                 	db	111
    79  00163C  77                 	db	119
    80  00163D  7C                 	db	124
    81  00163E  39                 	db	57
    82  00163F  5E                 	db	94
    83  001640  79                 	db	121
    84  001641  71                 	db	113
    85  0000                     _ANSEL4	set	31020
    86  0000                     _ANSEL6	set	31022
    87  0000                     _ANSEL7	set	31023
    88  0000                     _ANSEL8	set	31008
    89  0000                     _ADCON0	set	4034
    90  0000                     _ADCON0bits	set	4034
    91  0000                     _ADCON1	set	4033
    92  0000                     _ADCON2	set	4032
    93  0000                     _ADRESH	set	4036
    94  0000                     _ADRESL	set	4035
    95  0000                     _INTCONbits	set	4082
    96  0000                     _PIE1bits	set	3997
    97  0000                     _PIR1bits	set	3998
    98  0000                     _PORTEbits	set	3972
    99  0000                     _RCREG1	set	4014
   100  0000                     _RCSTA1	set	4011
   101  0000                     _RCSTA1bits	set	4011
   102  0000                     _SPBRG1	set	4015
   103  0000                     _SPBRGH1	set	4052
   104  0000                     _TMR0H	set	4055
   105  0000                     _TMR0L	set	4054
   106  0000                     _TXREG1	set	4013
   107  0000                     _TXSTA1	set	4012
   108  0000                     _TXSTA1bits	set	4012
   109  0000                     _GIE	set	32663
   110  0000                     _IPEN	set	32391
   111  0000                     _PSA	set	32427
   112  0000                     _RA4	set	31748
   113  0000                     _RA5	set	31749
   114  0000                     _RC0	set	31760
   115  0000                     _RC1	set	31761
   116  0000                     _RC1IF	set	31989
   117  0000                     _RD5	set	31773
   118  0000                     _RD6	set	31774
   119  0000                     _RF1	set	31785
   120  0000                     _RF2	set	31786
   121  0000                     _RF3	set	31787
   122  0000                     _T08BIT	set	32430
   123  0000                     _T0CS	set	32429
   124  0000                     _T0PS0	set	32424
   125  0000                     _T0PS1	set	32425
   126  0000                     _T0PS2	set	32426
   127  0000                     _T0SE	set	32428
   128  0000                     _TMR0IE	set	32661
   129  0000                     _TMR0IF	set	32658
   130  0000                     _TMR0ON	set	32431
   131  0000                     _TRISA4	set	31892
   132  0000                     _TRISA5	set	31893
   133  0000                     _TRISC0	set	31904
   134  0000                     _TRISC1	set	31905
   135  0000                     _TRISC6	set	31910
   136  0000                     _TRISC7	set	31911
   137  0000                     _TRISD5	set	31917
   138  0000                     _TRISD6	set	31918
   139  0000                     _TRISF1	set	31929
   140  0000                     _TRISF2	set	31930
   141  0000                     _TRISF3	set	31931
   142                           
   143                           ; #config settings
   144  0000                     
   145                           	psect	cinit
   146  0012F6                     __pcinit:
   147                           	opt stack 0
   148  0012F6                     start_initialization:
   149                           	opt stack 0
   150  0012F6                     __initialization:
   151                           	opt stack 0
   152                           
   153                           ; Clear objects allocated to BANK0 (132 bytes)
   154  0012F6  EE00  F060         	lfsr	0,__pbssBANK0
   155  0012FA  0E84               	movlw	132
   156  0012FC                     clear_0:
   157  0012FC  6AEE               	clrf	postinc0,c
   158  0012FE  06E8               	decf	wreg,f,c
   159  001300  E1FD               	bnz	clear_0
   160                           
   161                           ; Clear objects allocated to COMRAM (28 bytes)
   162  001302  EE00  F02C         	lfsr	0,__pbssCOMRAM
   163  001306  0E1C               	movlw	28
   164  001308                     clear_1:
   165  001308  6AEE               	clrf	postinc0,c
   166  00130A  06E8               	decf	wreg,f,c
   167  00130C  E1FD               	bnz	clear_1
   168                           
   169                           ; Initialize objects allocated to BANK0 (16 bytes)
   170                           ; load TBLPTR registers with __pidataBANK0
   171  00130E  0E32               	movlw	low __pidataBANK0
   172  001310  6EF6               	movwf	tblptrl,c
   173  001312  0E16               	movlw	high __pidataBANK0
   174  001314  6EF7               	movwf	tblptrh,c
   175  001316  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   176  001318  6EF8               	movwf	tblptru,c
   177  00131A  EE00  F0E4         	lfsr	0,__pdataBANK0
   178  00131E  EE10 F010          	lfsr	1,16
   179  001322                     copy_data0:
   180  001322  0009               	tblrd		*+
   181  001324  CFF5 FFEE          	movff	tablat,postinc0
   182  001328  50E5               	movf	postdec1,w,c
   183  00132A  50E1               	movf	fsr1l,w,c
   184  00132C  E1FA               	bnz	copy_data0
   185  00132E                     end_of_initialization:
   186                           	opt stack 0
   187  00132E                     __end_of__initialization:
   188                           	opt stack 0
   189  00132E  0100               	movlb	0
   190  001330  EF1E  F00A         	goto	_main	;jump to C main() function
   191                           tblptru	equ	0xFF8
   192                           tblptrh	equ	0xFF7
   193                           tblptrl	equ	0xFF6
   194                           tablat	equ	0xFF5
   195                           postinc0	equ	0xFEE
   196                           wreg	equ	0xFE8
   197                           postdec1	equ	0xFE5
   198                           fsr1l	equ	0xFE1
   199                           
   200                           	psect	bssCOMRAM
   201  00002C                     __pbssCOMRAM:
   202                           	opt stack 0
   203  00002C                     _g_Timer_Cyc:
   204                           	opt stack 0
   205  00002C                     	ds	4
   206  000030                     _gs_Handle_Switch:
   207                           	opt stack 0
   208  000030                     	ds	4
   209  000034                     _gf_ADC6_Buff:
   210                           	opt stack 0
   211  000034                     	ds	3
   212  000037                     Pulse_1Khz@_overturn_1Khz:
   213                           	opt stack 0
   214  000037                     	ds	1
   215  000038                     Sys_Cyc@_Byte:
   216                           	opt stack 0
   217  000038                     	ds	1
   218  000039                     Sys_Cyc@_flag:
   219                           	opt stack 0
   220  000039                     	ds	1
   221  00003A                     Sys_Cyc@_overturn_LED:
   222                           	opt stack 0
   223  00003A                     	ds	1
   224  00003B                     _LED_BUS:
   225                           	opt stack 0
   226  00003B                     	ds	1
   227  00003C                     _g_RS485_Byte:
   228                           	opt stack 0
   229  00003C                     	ds	1
   230  00003D                     _g_RS485_Receive_Flag:
   231                           	opt stack 0
   232  00003D                     	ds	1
   233  00003E                     _ga_RS485_SendBuff:
   234                           	opt stack 0
   235  00003E                     	ds	10
   236                           tblptru	equ	0xFF8
   237                           tblptrh	equ	0xFF7
   238                           tblptrl	equ	0xFF6
   239                           tablat	equ	0xFF5
   240                           postinc0	equ	0xFEE
   241                           wreg	equ	0xFE8
   242                           postdec1	equ	0xFE5
   243                           fsr1l	equ	0xFE1
   244                           
   245                           	psect	bssBANK0
   246  000060                     __pbssBANK0:
   247                           	opt stack 0
   248  000060                     _ReceiveBuff:
   249                           	opt stack 0
   250  000060                     	ds	10
   251  00006A                     _gsa_Handle_Msg:
   252                           	opt stack 0
   253  00006A                     	ds	70
   254  0000B0                     _gs_Local_Key_User:
   255                           	opt stack 0
   256  0000B0                     	ds	21
   257  0000C5                     _s_Local_Key_FSM:
   258                           	opt stack 0
   259  0000C5                     	ds	21
   260  0000DA                     _ga_RS485_ReceiveBuff:
   261                           	opt stack 0
   262  0000DA                     	ds	10
   263                           tblptru	equ	0xFF8
   264                           tblptrh	equ	0xFF7
   265                           tblptrl	equ	0xFF6
   266                           tablat	equ	0xFF5
   267                           postinc0	equ	0xFEE
   268                           wreg	equ	0xFE8
   269                           postdec1	equ	0xFE5
   270                           fsr1l	equ	0xFE1
   271                           
   272                           	psect	dataBANK0
   273  0000E4                     __pdataBANK0:
   274                           	opt stack 0
   275  0000E4                     _LED_Number:
   276                           	opt stack 0
   277  0000E4                     	ds	16
   278                           tblptru	equ	0xFF8
   279                           tblptrh	equ	0xFF7
   280                           tblptrl	equ	0xFF6
   281                           tablat	equ	0xFF5
   282                           postinc0	equ	0xFEE
   283                           wreg	equ	0xFE8
   284                           postdec1	equ	0xFE5
   285                           fsr1l	equ	0xFE1
   286                           
   287                           	psect	cstackBANK1
   288  000100                     __pcstackBANK1:
   289                           	opt stack 0
   290  000100                     ??_RS485_ManageMessage:
   291  000100                     ?___ftdiv:
   292                           	opt stack 0
   293  000100                     ___ftdiv@f1:
   294                           	opt stack 0
   295                           
   296                           ; 3 bytes @ 0x0
   297  000100                     	ds	3
   298  000103                     ___ftdiv@f2:
   299                           	opt stack 0
   300                           
   301                           ; 3 bytes @ 0x3
   302  000103                     	ds	2
   303  000105                     RS485_ManageMessage@CRC_H:
   304                           	opt stack 0
   305                           
   306                           ; 1 bytes @ 0x5
   307  000105                     	ds	1
   308  000106                     RS485_ManageMessage@CRC_L:
   309                           	opt stack 0
   310  000106                     ___ftdiv@cntr:
   311                           	opt stack 0
   312                           
   313                           ; 1 bytes @ 0x6
   314  000106                     	ds	1
   315  000107                     RS485_ManageMessage@from_dress:
   316                           	opt stack 0
   317  000107                     ___ftdiv@f3:
   318                           	opt stack 0
   319                           
   320                           ; 3 bytes @ 0x7
   321  000107                     	ds	3
   322  00010A                     ___ftdiv@exp:
   323                           	opt stack 0
   324                           
   325                           ; 1 bytes @ 0xA
   326  00010A                     	ds	1
   327  00010B                     ___ftdiv@sign:
   328                           	opt stack 0
   329                           
   330                           ; 1 bytes @ 0xB
   331  00010B                     	ds	1
   332                           tblptru	equ	0xFF8
   333                           tblptrh	equ	0xFF7
   334                           tblptrl	equ	0xFF6
   335                           tablat	equ	0xFF5
   336                           postinc0	equ	0xFEE
   337                           wreg	equ	0xFE8
   338                           postdec1	equ	0xFE5
   339                           fsr1l	equ	0xFE1
   340                           
   341                           	psect	cstackBANK0
   342  0000F4                     __pcstackBANK0:
   343                           	opt stack 0
   344  0000F4                     ??_VerifyCRC:
   345  0000F4                     ??___ftmul:
   346                           
   347                           ; 0 bytes @ 0x0
   348  0000F4                     	ds	3
   349  0000F7                     ___ftmul@exp:
   350                           	opt stack 0
   351                           
   352                           ; 1 bytes @ 0x3
   353  0000F7                     	ds	1
   354  0000F8                     ___ftmul@f3_as_product:
   355                           	opt stack 0
   356                           
   357                           ; 3 bytes @ 0x4
   358  0000F8                     	ds	1
   359  0000F9                     VerifyCRC@CRC_Value:
   360                           	opt stack 0
   361                           
   362                           ; 4 bytes @ 0x5
   363  0000F9                     	ds	2
   364  0000FB                     ___ftmul@cntr:
   365                           	opt stack 0
   366                           
   367                           ; 1 bytes @ 0x7
   368  0000FB                     	ds	1
   369  0000FC                     ___ftmul@sign:
   370                           	opt stack 0
   371                           
   372                           ; 1 bytes @ 0x8
   373  0000FC                     	ds	1
   374  0000FD                     ??___ftdiv:
   375  0000FD                     VerifyCRC@CRC_Byte:
   376                           	opt stack 0
   377                           
   378                           ; 1 bytes @ 0x9
   379  0000FD                     	ds	1
   380  0000FE                     
   381                           ; 0 bytes @ 0xA
   382  0000FE                     	ds	2
   383                           tblptru	equ	0xFF8
   384                           tblptrh	equ	0xFF7
   385                           tblptrl	equ	0xFF6
   386                           tablat	equ	0xFF5
   387                           postinc0	equ	0xFEE
   388                           wreg	equ	0xFE8
   389                           postdec1	equ	0xFE5
   390                           fsr1l	equ	0xFE1
   391                           
   392                           	psect	cstackCOMRAM
   393  000001                     __pcstackCOMRAM:
   394                           	opt stack 0
   395  000001                     ?i2___llmod:
   396                           	opt stack 0
   397  000001                     Delay_1Khz@a:
   398                           	opt stack 0
   399  000001                     i2LED_Control@_switch:
   400                           	opt stack 0
   401  000001                     i2SetTimer0@_tmr:
   402                           	opt stack 0
   403  000001                     i2___llmod@dividend:
   404                           	opt stack 0
   405                           
   406                           ; 4 bytes @ 0x0
   407  000001                     	ds	1
   408  000002                     Delay_1Khz@b:
   409                           	opt stack 0
   410  000002                     i2LED_Control@_LED_num:
   411                           	opt stack 0
   412                           
   413                           ; 1 bytes @ 0x1
   414  000002                     	ds	1
   415  000003                     ??i2_SetTimer0:
   416  000003                     Delay_1Khz@c:
   417                           	opt stack 0
   418                           
   419                           ; 1 bytes @ 0x2
   420  000003                     	ds	1
   421  000004                     Pulse_1Khz@_pulse:
   422                           	opt stack 0
   423                           
   424                           ; 1 bytes @ 0x3
   425  000004                     	ds	1
   426  000005                     i2___llmod@divisor:
   427                           	opt stack 0
   428                           
   429                           ; 4 bytes @ 0x4
   430  000005                     	ds	4
   431  000009                     i2___llmod@counter:
   432                           	opt stack 0
   433                           
   434                           ; 1 bytes @ 0x8
   435  000009                     	ds	1
   436  00000A                     ??_Sys_Cyc:
   437                           
   438                           ; 0 bytes @ 0x9
   439  00000A                     	ds	14
   440  000018                     Sys_Cyc@_temp:
   441                           	opt stack 0
   442                           
   443                           ; 1 bytes @ 0x17
   444  000018                     	ds	1
   445  000019                     ??_Key_ReadFSM:
   446  000019                     ?_ReadADC:
   447                           	opt stack 0
   448  000019                     ?___wmul:
   449                           	opt stack 0
   450  000019                     ?___lwdiv:
   451                           	opt stack 0
   452  000019                     ?___lwmod:
   453                           	opt stack 0
   454  000019                     ?___ftpack:
   455                           	opt stack 0
   456  000019                     ?___lldiv:
   457                           	opt stack 0
   458  000019                     ?___llmod:
   459                           	opt stack 0
   460  000019                     Key_ResetFSM@t:
   461                           	opt stack 0
   462  000019                     LED_Control@_switch:
   463                           	opt stack 0
   464  000019                     TM1640_Delay@Time:
   465                           	opt stack 0
   466  000019                     OpenADC@config2:
   467                           	opt stack 0
   468  000019                     ___lbmod@divisor:
   469                           	opt stack 0
   470  000019                     SetTimer0@_tmr:
   471                           	opt stack 0
   472  000019                     Open1USART@spbrg:
   473                           	opt stack 0
   474  000019                     ___wmul@multiplier:
   475                           	opt stack 0
   476  000019                     ___lwdiv@dividend:
   477                           	opt stack 0
   478  000019                     ___lwmod@dividend:
   479                           	opt stack 0
   480  000019                     ___ftpack@arg:
   481                           	opt stack 0
   482  000019                     ___lldiv@dividend:
   483                           	opt stack 0
   484  000019                     ___llmod@dividend:
   485                           	opt stack 0
   486                           
   487                           ; 4 bytes @ 0x18
   488  000019                     	ds	1
   489  00001A                     LED_Control@_LED_num:
   490                           	opt stack 0
   491  00001A                     TM1640_Delay@i:
   492                           	opt stack 0
   493  00001A                     OpenADC@config3:
   494                           	opt stack 0
   495  00001A                     ___lbmod@dividend:
   496                           	opt stack 0
   497                           
   498                           ; 1 bytes @ 0x19
   499  00001A                     	ds	1
   500  00001B                     ??_SetTimer0:
   501  00001B                     ??_OpenADC:
   502  00001B                     ??_ReadADC:
   503  00001B                     TM1640_Writer_Byte@Date:
   504                           	opt stack 0
   505  00001B                     Open1USART@config:
   506                           	opt stack 0
   507  00001B                     ___lbmod@counter:
   508                           	opt stack 0
   509  00001B                     ___wmul@multiplicand:
   510                           	opt stack 0
   511  00001B                     ___lwdiv@divisor:
   512                           	opt stack 0
   513  00001B                     ___lwmod@divisor:
   514                           	opt stack 0
   515                           
   516                           ; 2 bytes @ 0x1A
   517  00001B                     	ds	1
   518  00001C                     TM1640_Writer_Byte@mask:
   519                           	opt stack 0
   520  00001C                     ___ftpack@exp:
   521                           	opt stack 0
   522  00001C                     ___lbmod@rem:
   523                           	opt stack 0
   524                           
   525                           ; 1 bytes @ 0x1B
   526  00001C                     	ds	1
   527  00001D                     Key_ReadFSM@key_num_mate:
   528                           	opt stack 0
   529  00001D                     OpenADC@config:
   530                           	opt stack 0
   531  00001D                     ___ftpack@sign:
   532                           	opt stack 0
   533  00001D                     ___lwmod@counter:
   534                           	opt stack 0
   535  00001D                     ___wmul@product:
   536                           	opt stack 0
   537  00001D                     ___lwdiv@quotient:
   538                           	opt stack 0
   539  00001D                     ___lldiv@divisor:
   540                           	opt stack 0
   541  00001D                     ___llmod@divisor:
   542                           	opt stack 0
   543                           
   544                           ; 4 bytes @ 0x1C
   545  00001D                     	ds	1
   546  00001E                     ??___ftpack:
   547  00001E                     Key_ReadFSM@key_num:
   548                           	opt stack 0
   549  00001E                     TM1640_Writer_Dates@Date:
   550                           	opt stack 0
   551                           
   552                           ; 1 bytes @ 0x1D
   553  00001E                     	ds	1
   554  00001F                     TM1640_Writer_Dates@Addr:
   555                           	opt stack 0
   556  00001F                     ___lwdiv@counter:
   557                           	opt stack 0
   558                           
   559                           ; 1 bytes @ 0x1E
   560  00001F                     	ds	1
   561  000020                     TM1640_Show_integer@Numbers:
   562                           	opt stack 0
   563                           
   564                           ; 2 bytes @ 0x1F
   565  000020                     	ds	1
   566  000021                     ?___lwtoft:
   567                           	opt stack 0
   568  000021                     ___llmod@counter:
   569                           	opt stack 0
   570  000021                     ___lwtoft@c:
   571                           	opt stack 0
   572  000021                     ___lldiv@quotient:
   573                           	opt stack 0
   574                           
   575                           ; 4 bytes @ 0x20
   576  000021                     	ds	1
   577  000022                     ??_ShowResult:
   578  000022                     
   579                           ; 0 bytes @ 0x21
   580  000022                     	ds	2
   581  000024                     ?___ftmul:
   582                           	opt stack 0
   583  000024                     ___ftmul@f1:
   584                           	opt stack 0
   585                           
   586                           ; 3 bytes @ 0x23
   587  000024                     	ds	1
   588  000025                     ___lldiv@counter:
   589                           	opt stack 0
   590                           
   591                           ; 1 bytes @ 0x24
   592  000025                     	ds	1
   593  000026                     VerifyCRC@DataBuff:
   594                           	opt stack 0
   595                           
   596                           ; 2 bytes @ 0x25
   597  000026                     	ds	1
   598  000027                     ___ftmul@f2:
   599                           	opt stack 0
   600                           
   601                           ; 3 bytes @ 0x26
   602  000027                     	ds	1
   603  000028                     VerifyCRC@date_lenth:
   604                           	opt stack 0
   605                           
   606                           ; 1 bytes @ 0x27
   607  000028                     	ds	1
   608  000029                     RS485_SendDate@date_dress:
   609                           	opt stack 0
   610  000029                     RS485_ManageMessage@DataBuff:
   611                           	opt stack 0
   612                           
   613                           ; 2 bytes @ 0x28
   614  000029                     	ds	1
   615  00002A                     
   616                           ; 0 bytes @ 0x29
   617  00002A                     	ds	1
   618  00002B                     RS485_SendDate@date_lenth:
   619                           	opt stack 0
   620  00002B                     RS485_ManageMessage@date_lenth:
   621                           	opt stack 0
   622                           
   623                           ; 1 bytes @ 0x2A
   624  00002B                     	ds	1
   625  00002C                     tblptru	equ	0xFF8
   626                           tblptrh	equ	0xFF7
   627                           tblptrl	equ	0xFF6
   628                           tablat	equ	0xFF5
   629                           postinc0	equ	0xFEE
   630                           wreg	equ	0xFE8
   631                           postdec1	equ	0xFE5
   632                           fsr1l	equ	0xFE1
   633                           
   634                           ; 0 bytes @ 0x2B
   635 ;;
   636 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   637 ;;
   638 ;; *************** function _main *****************
   639 ;; Defined at:
   640 ;;		line 38 in file "_01_USER/main.c"
   641 ;; Parameters:    Size  Location     Type
   642 ;;		None
   643 ;; Auto vars:     Size  Location     Type
   644 ;;		None
   645 ;; Return value:  Size  Location     Type
   646 ;;                  2   20[None  ] int 
   647 ;; Registers used:
   648 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   658 ;;Total ram usage:        0 bytes
   659 ;; Hardware stack levels required when called:    8
   660 ;; This function calls:
   661 ;;		_ADC6_Init
   662 ;;		_GPIO_Config
   663 ;;		_Init_TM1640
   664 ;;		_Key_Init
   665 ;;		_ManageMessage
   666 ;;		_RS485_Init
   667 ;;		_Run
   668 ;;		_ShowResult
   669 ;;		_Timer0_Init
   670 ;; This function is called by:
   671 ;;		Startup code after reset
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675                           	psect	text0
   676  00143C                     __ptext0:
   677                           	opt stack 0
   678  00143C                     _main:
   679                           	opt stack 23
   680                           
   681                           ;main.c: 43: GPIO_Config();
   682                           
   683                           ; BSR set to: 0
   684                           ;incstack = 0
   685  00143C  EC32  F00B         	call	_GPIO_Config	;wreg free
   686                           
   687                           ;main.c: 44: Key_Init();
   688  001440  ECDD  F00A         	call	_Key_Init	;wreg free
   689                           
   690                           ;main.c: 45: Timer0_Init();
   691  001444  EC96  F00A         	call	_Timer0_Init	;wreg free
   692                           
   693                           ;main.c: 46: Init_TM1640();
   694  001448  EC70  F00A         	call	_Init_TM1640	;wreg free
   695                           
   696                           ;main.c: 47: ADC6_Init();
   697  00144C  EC10  F00B         	call	_ADC6_Init	;wreg free
   698                           
   699                           ;main.c: 48: RS485_Init();
   700  001450  ECF9  F00A         	call	_RS485_Init	;wreg free
   701  001454  D000               	goto	l3390
   702  001456                     l3390:
   703                           
   704                           ;main.c: 52: {
   705                           ;main.c: 54: ManageMessage();
   706  001456  EC05  F00B         	call	_ManageMessage	;wreg free
   707                           
   708                           ;main.c: 55: Run();
   709  00145A  EC34  F00A         	call	_Run	;wreg free
   710                           
   711                           ;main.c: 56: ShowResult();
   712  00145E  ECDF  F006         	call	_ShowResult	;wreg free
   713  001462  D7F9               	goto	l3390
   714                           
   715                           ;main.c: 58: }
   716                           ;main.c: 60: return 0;
   717                           ;	Return value of _main is never used
   718  001464  EFB7  F000         	goto	start
   719  001468                     __end_of_main:
   720                           	opt stack 0
   721                           tblptru	equ	0xFF8
   722                           tblptrh	equ	0xFF7
   723                           tblptrl	equ	0xFF6
   724                           tablat	equ	0xFF5
   725                           postinc0	equ	0xFEE
   726                           wreg	equ	0xFE8
   727                           postdec1	equ	0xFE5
   728                           fsr1l	equ	0xFE1
   729                           
   730 ;; *************** function _Timer0_Init *****************
   731 ;; Defined at:
   732 ;;		line 43 in file "_01_USER/My_Timer.c"
   733 ;; Parameters:    Size  Location     Type
   734 ;;		None
   735 ;; Auto vars:     Size  Location     Type
   736 ;;		None
   737 ;; Return value:  Size  Location     Type
   738 ;;		None               void
   739 ;; Registers used:
   740 ;;		wreg, status,2, status,0, cstack
   741 ;; Tracked objects:
   742 ;;		On entry : 0/0
   743 ;;		On exit  : 0/0
   744 ;;		Unchanged: 0/0
   745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   750 ;;Total ram usage:        0 bytes
   751 ;; Hardware stack levels used:    1
   752 ;; Hardware stack levels required when called:    4
   753 ;; This function calls:
   754 ;;		_SetTimer0
   755 ;; This function is called by:
   756 ;;		_main
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760                           	psect	text1
   761  00152C                     __ptext1:
   762                           	opt stack 0
   763  00152C                     _Timer0_Init:
   764                           	opt stack 26
   765                           
   766                           ;My_Timer.c: 45: T08BIT = 0;
   767                           
   768                           ;incstack = 0
   769  00152C  9CD5               	bcf	4053,6,c	;volatile
   770                           
   771                           ;My_Timer.c: 46: T0CS = 0;
   772  00152E  9AD5               	bcf	4053,5,c	;volatile
   773                           
   774                           ;My_Timer.c: 47: T0SE = 0;
   775  001530  98D5               	bcf	4053,4,c	;volatile
   776                           
   777                           ;My_Timer.c: 48: PSA = 0;
   778  001532  96D5               	bcf	4053,3,c	;volatile
   779                           
   780                           ;My_Timer.c: 49: T0PS2 = 1;
   781  001534  84D5               	bsf	4053,2,c	;volatile
   782                           
   783                           ;My_Timer.c: 50: T0PS1 = 1;
   784  001536  82D5               	bsf	4053,1,c	;volatile
   785                           
   786                           ;My_Timer.c: 51: T0PS0 = 1;
   787  001538  80D5               	bsf	4053,0,c	;volatile
   788                           
   789                           ;My_Timer.c: 65: SetTimer0(1);
   790  00153A  0E00               	movlw	0
   791  00153C  6E1A               	movwf	SetTimer0@_tmr+1,c
   792  00153E  0E01               	movlw	1
   793  001540  6E19               	movwf	SetTimer0@_tmr,c
   794  001542  ECEE  F009         	call	_SetTimer0	;wreg free
   795                           
   796                           ;My_Timer.c: 66: TMR0ON = 1;
   797  001546  8ED5               	bsf	4053,7,c	;volatile
   798                           
   799                           ;My_Timer.c: 67: TMR0IE = 1;
   800  001548  8AF2               	bsf	intcon,5,c	;volatile
   801                           
   802                           ;My_Timer.c: 68: IPEN = 0;GIE = 1;
   803  00154A  9ED0               	bcf	4048,7,c	;volatile
   804  00154C  8EF2               	bsf	intcon,7,c	;volatile
   805  00154E  0012               	return		;funcret
   806  001550                     __end_of_Timer0_Init:
   807                           	opt stack 0
   808                           tblptru	equ	0xFF8
   809                           tblptrh	equ	0xFF7
   810                           tblptrl	equ	0xFF6
   811                           tablat	equ	0xFF5
   812                           intcon	equ	0xFF2
   813                           postinc0	equ	0xFEE
   814                           wreg	equ	0xFE8
   815                           postdec1	equ	0xFE5
   816                           fsr1l	equ	0xFE1
   817                           
   818 ;; *************** function _SetTimer0 *****************
   819 ;; Defined at:
   820 ;;		line 81 in file "_01_USER/My_Timer.c"
   821 ;; Parameters:    Size  Location     Type
   822 ;;  _tmr            2   24[COMRAM] unsigned int 
   823 ;; Auto vars:     Size  Location     Type
   824 ;;		None
   825 ;; Return value:  Size  Location     Type
   826 ;;		None               void
   827 ;; Registers used:
   828 ;;		wreg, status,2, status,0
   829 ;; Tracked objects:
   830 ;;		On entry : 0/0
   831 ;;		On exit  : 0/0
   832 ;;		Unchanged: 0/0
   833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   834 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   836 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   837 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   838 ;;Total ram usage:        4 bytes
   839 ;; Hardware stack levels used:    1
   840 ;; Hardware stack levels required when called:    3
   841 ;; This function calls:
   842 ;;		Nothing
   843 ;; This function is called by:
   844 ;;		_Timer0_Init
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848                           	psect	text2
   849  0013DC                     __ptext2:
   850                           	opt stack 0
   851  0013DC                     _SetTimer0:
   852                           	opt stack 26
   853                           
   854                           ;My_Timer.c: 83: if(_tmr > 0xffff) _tmr = 0xffff;
   855                           
   856                           ;incstack = 0
   857  0013DC  D003               	goto	l2692
   858  0013DE  6819               	setf	SetTimer0@_tmr,c
   859  0013E0  681A               	setf	SetTimer0@_tmr+1,c
   860  0013E2  D000               	goto	l2692
   861  0013E4                     l2692:
   862                           
   863                           ;My_Timer.c: 84: _tmr=0xffff-_tmr;
   864  0013E4  C019  F01B         	movff	SetTimer0@_tmr,??_SetTimer0
   865  0013E8  C01A  F01C         	movff	SetTimer0@_tmr+1,??_SetTimer0+1
   866  0013EC  1E1B               	comf	??_SetTimer0,f,c
   867  0013EE  1E1C               	comf	??_SetTimer0+1,f,c
   868  0013F0  4A1B               	infsnz	??_SetTimer0,f,c
   869  0013F2  2A1C               	incf	??_SetTimer0+1,f,c
   870  0013F4  0EFF               	movlw	255
   871  0013F6  241B               	addwf	??_SetTimer0,w,c
   872  0013F8  6E19               	movwf	SetTimer0@_tmr,c
   873  0013FA  0EFF               	movlw	255
   874  0013FC  201C               	addwfc	??_SetTimer0+1,w,c
   875  0013FE  6E1A               	movwf	SetTimer0@_tmr+1,c
   876                           
   877                           ;My_Timer.c: 85: TMR0H = _tmr/256;
   878  001400  501A               	movf	SetTimer0@_tmr+1,w,c
   879  001402  6ED7               	movwf	4055,c	;volatile
   880                           
   881                           ;My_Timer.c: 86: TMR0L = _tmr%256;
   882  001404  C019  FFD6         	movff	SetTimer0@_tmr,4054	;volatile
   883                           
   884                           ;My_Timer.c: 87: TMR0IF = 0;
   885  001408  94F2               	bcf	intcon,2,c	;volatile
   886  00140A  0012               	return		;funcret
   887  00140C                     __end_of_SetTimer0:
   888                           	opt stack 0
   889                           tblptru	equ	0xFF8
   890                           tblptrh	equ	0xFF7
   891                           tblptrl	equ	0xFF6
   892                           tablat	equ	0xFF5
   893                           intcon	equ	0xFF2
   894                           postinc0	equ	0xFEE
   895                           wreg	equ	0xFE8
   896                           postdec1	equ	0xFE5
   897                           fsr1l	equ	0xFE1
   898                           
   899 ;; *************** function _ShowResult *****************
   900 ;; Defined at:
   901 ;;		line 96 in file "_01_USER/Run.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;		None
   904 ;; Auto vars:     Size  Location     Type
   905 ;;		None
   906 ;; Return value:  Size  Location     Type
   907 ;;		None               void
   908 ;; Registers used:
   909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   917 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   918 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   919 ;;Total ram usage:        1 bytes
   920 ;; Hardware stack levels used:    1
   921 ;; Hardware stack levels required when called:    7
   922 ;; This function calls:
   923 ;;		_LED_Control
   924 ;;		_TM1640_Show_integer
   925 ;;		_TM1640_Writer_Dates
   926 ;;		___wmul
   927 ;; This function is called by:
   928 ;;		_main
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           	psect	text3
   933  000DBE                     __ptext3:
   934                           	opt stack 0
   935  000DBE                     _ShowResult:
   936                           	opt stack 23
   937                           
   938                           ;Run.c: 98: if( gs_Handle_Switch.Show_Send_Receive )
   939                           
   940                           ;incstack = 0
   941  000DBE  5033               	movf	_gs_Handle_Switch+3,w,c
   942  000DC0  B4D8               	btfsc	status,2,c
   943  000DC2  D021               	goto	l2806
   944                           
   945                           ;Run.c: 99: {
   946                           ;Run.c: 100: TM1640_Show_integer( ga_RS485_SendBuff[g_RS485_Byte] + (g_RS485_Byte * 1000
      +                          ) );
   947  000DC4  C03C  F019         	movff	_g_RS485_Byte,___wmul@multiplier
   948  000DC8  6A1A               	clrf	___wmul@multiplier+1,c
   949  000DCA  0E03               	movlw	3
   950  000DCC  6E1C               	movwf	___wmul@multiplicand+1,c
   951  000DCE  0EE8               	movlw	232
   952  000DD0  6E1B               	movwf	___wmul@multiplicand,c
   953  000DD2  EC49  F00A         	call	___wmul	;wreg free
   954  000DD6  503C               	movf	_g_RS485_Byte,w,c
   955  000DD8  0D01               	mullw	1
   956  000DDA  0E3E               	movlw	low _ga_RS485_SendBuff
   957  000DDC  24F3               	addwf	prodl,w,c
   958  000DDE  6ED9               	movwf	fsr2l,c
   959  000DE0  0E00               	movlw	high _ga_RS485_SendBuff
   960  000DE2  20F4               	addwfc	prodh,w,c
   961  000DE4  6EDA               	movwf	fsr2h,c
   962  000DE6  50DF               	movf	indf2,w,c
   963  000DE8  6E22               	movwf	??_ShowResult& (0+255),c
   964  000DEA  5022               	movf	??_ShowResult,w,c
   965  000DEC  2419               	addwf	?___wmul,w,c
   966  000DEE  6E20               	movwf	TM1640_Show_integer@Numbers,c
   967  000DF0  0E00               	movlw	0
   968  000DF2  201A               	addwfc	?___wmul+1,w,c
   969  000DF4  6E21               	movwf	TM1640_Show_integer@Numbers+1,c
   970  000DF6  EC3B  F005         	call	_TM1640_Show_integer	;wreg free
   971                           
   972                           ;Run.c: 101: LED_Control(1,1);
   973  000DFA  0E01               	movlw	1
   974  000DFC  6E19               	movwf	LED_Control@_switch,c
   975  000DFE  0E01               	movlw	1
   976  000E00  EC15  F009         	call	_LED_Control
   977                           
   978                           ;Run.c: 102: }
   979  000E04  D021               	goto	l2810
   980  000E06                     l2806:
   981                           
   982                           ;Run.c: 104: else
   983                           ;Run.c: 105: {
   984                           ;Run.c: 106: TM1640_Show_integer( ga_RS485_ReceiveBuff[g_RS485_Byte] + (g_RS485_Byte * 1
      +                          000) );
   985  000E06  C03C  F019         	movff	_g_RS485_Byte,___wmul@multiplier
   986  000E0A  6A1A               	clrf	___wmul@multiplier+1,c
   987  000E0C  0E03               	movlw	3
   988  000E0E  6E1C               	movwf	___wmul@multiplicand+1,c
   989  000E10  0EE8               	movlw	232
   990  000E12  6E1B               	movwf	___wmul@multiplicand,c
   991  000E14  EC49  F00A         	call	___wmul	;wreg free
   992  000E18  503C               	movf	_g_RS485_Byte,w,c
   993  000E1A  0D01               	mullw	1
   994  000E1C  0EDA               	movlw	low _ga_RS485_ReceiveBuff
   995  000E1E  24F3               	addwf	prodl,w,c
   996  000E20  6ED9               	movwf	fsr2l,c
   997  000E22  0E00               	movlw	high _ga_RS485_ReceiveBuff
   998  000E24  20F4               	addwfc	prodh,w,c
   999  000E26  6EDA               	movwf	fsr2h,c
  1000  000E28  50DF               	movf	indf2,w,c
  1001  000E2A  6E22               	movwf	??_ShowResult& (0+255),c
  1002  000E2C  5022               	movf	??_ShowResult,w,c
  1003  000E2E  2419               	addwf	?___wmul,w,c
  1004  000E30  6E20               	movwf	TM1640_Show_integer@Numbers,c
  1005  000E32  0E00               	movlw	0
  1006  000E34  201A               	addwfc	?___wmul+1,w,c
  1007  000E36  6E21               	movwf	TM1640_Show_integer@Numbers+1,c
  1008  000E38  EC3B  F005         	call	_TM1640_Show_integer	;wreg free
  1009                           
  1010                           ;Run.c: 107: LED_Control(1,0);
  1011  000E3C  0E00               	movlw	0
  1012  000E3E  6E19               	movwf	LED_Control@_switch,c
  1013  000E40  0E01               	movlw	1
  1014  000E42  EC15  F009         	call	_LED_Control
  1015  000E46  D000               	goto	l2810
  1016  000E48                     l2810:
  1017                           
  1018                           ;Run.c: 108: }
  1019                           ;Run.c: 110: TM1640_Writer_Dates(4, LED_BUS);
  1020  000E48  C03B  F01E         	movff	_LED_BUS,TM1640_Writer_Dates@Date
  1021  000E4C  0E04               	movlw	4
  1022  000E4E  ECCC  F00A         	call	_TM1640_Writer_Dates
  1023  000E52  0012               	return		;funcret
  1024  000E54                     __end_of_ShowResult:
  1025                           	opt stack 0
  1026                           tblptru	equ	0xFF8
  1027                           tblptrh	equ	0xFF7
  1028                           tblptrl	equ	0xFF6
  1029                           tablat	equ	0xFF5
  1030                           prodh	equ	0xFF4
  1031                           prodl	equ	0xFF3
  1032                           intcon	equ	0xFF2
  1033                           postinc0	equ	0xFEE
  1034                           wreg	equ	0xFE8
  1035                           postdec1	equ	0xFE5
  1036                           fsr1l	equ	0xFE1
  1037                           indf2	equ	0xFDF
  1038                           fsr2h	equ	0xFDA
  1039                           fsr2l	equ	0xFD9
  1040                           status	equ	0xFD8
  1041                           
  1042 ;; *************** function ___wmul *****************
  1043 ;; Defined at:
  1044 ;;		line 15 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;  multiplier      2   24[COMRAM] unsigned int 
  1047 ;;  multiplicand    2   26[COMRAM] unsigned int 
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;  product         2   28[COMRAM] unsigned int 
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  2   24[COMRAM] unsigned int 
  1052 ;; Registers used:
  1053 ;;		wreg, status,2, status,0, prodl, prodh
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1059 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1060 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1062 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1063 ;;Total ram usage:        6 bytes
  1064 ;; Hardware stack levels used:    1
  1065 ;; Hardware stack levels required when called:    3
  1066 ;; This function calls:
  1067 ;;		Nothing
  1068 ;; This function is called by:
  1069 ;;		_ShowResult
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           	psect	text4
  1074  001492                     __ptext4:
  1075                           	opt stack 0
  1076  001492                     ___wmul:
  1077                           	opt stack 26
  1078                           
  1079                           ;incstack = 0
  1080  001492  5019               	movf	___wmul@multiplier,w,c
  1081  001494  021B               	mulwf	___wmul@multiplicand,c
  1082  001496  CFF3 F01D          	movff	prodl,___wmul@product
  1083  00149A  CFF4 F01E          	movff	prodh,___wmul@product+1
  1084  00149E  5019               	movf	___wmul@multiplier,w,c
  1085  0014A0  021C               	mulwf	___wmul@multiplicand+1,c
  1086  0014A2  50F3               	movf	prodl,w,c
  1087  0014A4  261E               	addwf	___wmul@product+1,f,c
  1088  0014A6  501A               	movf	___wmul@multiplier+1,w,c
  1089  0014A8  021B               	mulwf	___wmul@multiplicand,c
  1090  0014AA  50F3               	movf	prodl,w,c
  1091  0014AC  261E               	addwf	___wmul@product+1,f,c
  1092  0014AE  C01D  F019         	movff	___wmul@product,?___wmul
  1093  0014B2  C01E  F01A         	movff	___wmul@product+1,?___wmul+1
  1094  0014B6  0012               	return	
  1095  0014B8  0012               	return		;funcret
  1096  0014BA                     __end_of___wmul:
  1097                           	opt stack 0
  1098                           tblptru	equ	0xFF8
  1099                           tblptrh	equ	0xFF7
  1100                           tblptrl	equ	0xFF6
  1101                           tablat	equ	0xFF5
  1102                           prodh	equ	0xFF4
  1103                           prodl	equ	0xFF3
  1104                           intcon	equ	0xFF2
  1105                           postinc0	equ	0xFEE
  1106                           wreg	equ	0xFE8
  1107                           postdec1	equ	0xFE5
  1108                           fsr1l	equ	0xFE1
  1109                           indf2	equ	0xFDF
  1110                           fsr2h	equ	0xFDA
  1111                           fsr2l	equ	0xFD9
  1112                           status	equ	0xFD8
  1113                           
  1114 ;; *************** function _TM1640_Show_integer *****************
  1115 ;; Defined at:
  1116 ;;		line 206 in file "_01_USER/TM1640.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;  Numbers         2   31[COMRAM] unsigned int 
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;		None
  1121 ;; Return value:  Size  Location     Type
  1122 ;;		None               void
  1123 ;; Registers used:
  1124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1130 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1133 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1134 ;;Total ram usage:        2 bytes
  1135 ;; Hardware stack levels used:    1
  1136 ;; Hardware stack levels required when called:    6
  1137 ;; This function calls:
  1138 ;;		_TM1640_Writer_Dates
  1139 ;;		___lwdiv
  1140 ;;		___lwmod
  1141 ;; This function is called by:
  1142 ;;		_ShowResult
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           
  1146                           	psect	text5
  1147  000A76                     __ptext5:
  1148                           	opt stack 0
  1149  000A76                     _TM1640_Show_integer:
  1150                           	opt stack 23
  1151                           
  1152                           ;TM1640.c: 209: TM1640_Writer_Dates(3,LED_Number[Numbers%10]); Numbers/=10;
  1153                           
  1154                           ;incstack = 0
  1155  000A76  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1156  000A7A  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1157  000A7E  0E00               	movlw	0
  1158  000A80  6E1C               	movwf	___lwmod@divisor+1,c
  1159  000A82  0E0A               	movlw	10
  1160  000A84  6E1B               	movwf	___lwmod@divisor,c
  1161  000A86  ECCA  F008         	call	___lwmod	;wreg free
  1162  000A8A  0EE4               	movlw	low _LED_Number
  1163  000A8C  2419               	addwf	?___lwmod,w,c
  1164  000A8E  6ED9               	movwf	fsr2l,c
  1165  000A90  0E00               	movlw	high _LED_Number
  1166  000A92  201A               	addwfc	?___lwmod+1,w,c
  1167  000A94  6EDA               	movwf	fsr2h,c
  1168  000A96  50DF               	movf	indf2,w,c
  1169  000A98  6E1E               	movwf	TM1640_Writer_Dates@Date,c
  1170  000A9A  0E03               	movlw	3
  1171  000A9C  ECCC  F00A         	call	_TM1640_Writer_Dates
  1172  000AA0  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1173  000AA4  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1174  000AA8  0E00               	movlw	0
  1175  000AAA  6E1C               	movwf	___lwdiv@divisor+1,c
  1176  000AAC  0E0A               	movlw	10
  1177  000AAE  6E1B               	movwf	___lwdiv@divisor,c
  1178  000AB0  EC48  F008         	call	___lwdiv	;wreg free
  1179  000AB4  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1180  000AB8  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1181                           
  1182                           ;TM1640.c: 210: TM1640_Writer_Dates(2,LED_Number[Numbers%10]); Numbers/=10;
  1183  000ABC  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1184  000AC0  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1185  000AC4  0E00               	movlw	0
  1186  000AC6  6E1C               	movwf	___lwmod@divisor+1,c
  1187  000AC8  0E0A               	movlw	10
  1188  000ACA  6E1B               	movwf	___lwmod@divisor,c
  1189  000ACC  ECCA  F008         	call	___lwmod	;wreg free
  1190  000AD0  0EE4               	movlw	low _LED_Number
  1191  000AD2  2419               	addwf	?___lwmod,w,c
  1192  000AD4  6ED9               	movwf	fsr2l,c
  1193  000AD6  0E00               	movlw	high _LED_Number
  1194  000AD8  201A               	addwfc	?___lwmod+1,w,c
  1195  000ADA  6EDA               	movwf	fsr2h,c
  1196  000ADC  50DF               	movf	indf2,w,c
  1197  000ADE  6E1E               	movwf	TM1640_Writer_Dates@Date,c
  1198  000AE0  0E02               	movlw	2
  1199  000AE2  ECCC  F00A         	call	_TM1640_Writer_Dates
  1200  000AE6  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1201  000AEA  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1202  000AEE  0E00               	movlw	0
  1203  000AF0  6E1C               	movwf	___lwdiv@divisor+1,c
  1204  000AF2  0E0A               	movlw	10
  1205  000AF4  6E1B               	movwf	___lwdiv@divisor,c
  1206  000AF6  EC48  F008         	call	___lwdiv	;wreg free
  1207  000AFA  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1208  000AFE  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1209                           
  1210                           ;TM1640.c: 211: TM1640_Writer_Dates(1,LED_Number[Numbers%10]); Numbers/=10;
  1211  000B02  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1212  000B06  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1213  000B0A  0E00               	movlw	0
  1214  000B0C  6E1C               	movwf	___lwmod@divisor+1,c
  1215  000B0E  0E0A               	movlw	10
  1216  000B10  6E1B               	movwf	___lwmod@divisor,c
  1217  000B12  ECCA  F008         	call	___lwmod	;wreg free
  1218  000B16  0EE4               	movlw	low _LED_Number
  1219  000B18  2419               	addwf	?___lwmod,w,c
  1220  000B1A  6ED9               	movwf	fsr2l,c
  1221  000B1C  0E00               	movlw	high _LED_Number
  1222  000B1E  201A               	addwfc	?___lwmod+1,w,c
  1223  000B20  6EDA               	movwf	fsr2h,c
  1224  000B22  50DF               	movf	indf2,w,c
  1225  000B24  6E1E               	movwf	TM1640_Writer_Dates@Date,c
  1226  000B26  0E01               	movlw	1
  1227  000B28  ECCC  F00A         	call	_TM1640_Writer_Dates
  1228  000B2C  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1229  000B30  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1230  000B34  0E00               	movlw	0
  1231  000B36  6E1C               	movwf	___lwdiv@divisor+1,c
  1232  000B38  0E0A               	movlw	10
  1233  000B3A  6E1B               	movwf	___lwdiv@divisor,c
  1234  000B3C  EC48  F008         	call	___lwdiv	;wreg free
  1235  000B40  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1236  000B44  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1237                           
  1238                           ;TM1640.c: 212: TM1640_Writer_Dates(0,LED_Number[Numbers%10]);
  1239  000B48  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1240  000B4C  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1241  000B50  0E00               	movlw	0
  1242  000B52  6E1C               	movwf	___lwmod@divisor+1,c
  1243  000B54  0E0A               	movlw	10
  1244  000B56  6E1B               	movwf	___lwmod@divisor,c
  1245  000B58  ECCA  F008         	call	___lwmod	;wreg free
  1246  000B5C  0EE4               	movlw	low _LED_Number
  1247  000B5E  2419               	addwf	?___lwmod,w,c
  1248  000B60  6ED9               	movwf	fsr2l,c
  1249  000B62  0E00               	movlw	high _LED_Number
  1250  000B64  201A               	addwfc	?___lwmod+1,w,c
  1251  000B66  6EDA               	movwf	fsr2h,c
  1252  000B68  50DF               	movf	indf2,w,c
  1253  000B6A  6E1E               	movwf	TM1640_Writer_Dates@Date,c
  1254  000B6C  0E00               	movlw	0
  1255  000B6E  ECCC  F00A         	call	_TM1640_Writer_Dates
  1256  000B72  0012               	return		;funcret
  1257  000B74                     __end_of_TM1640_Show_integer:
  1258                           	opt stack 0
  1259                           tblptru	equ	0xFF8
  1260                           tblptrh	equ	0xFF7
  1261                           tblptrl	equ	0xFF6
  1262                           tablat	equ	0xFF5
  1263                           prodh	equ	0xFF4
  1264                           prodl	equ	0xFF3
  1265                           intcon	equ	0xFF2
  1266                           postinc0	equ	0xFEE
  1267                           wreg	equ	0xFE8
  1268                           postdec1	equ	0xFE5
  1269                           fsr1l	equ	0xFE1
  1270                           indf2	equ	0xFDF
  1271                           fsr2h	equ	0xFDA
  1272                           fsr2l	equ	0xFD9
  1273                           status	equ	0xFD8
  1274                           
  1275 ;; *************** function ___lwmod *****************
  1276 ;; Defined at:
  1277 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1278 ;; Parameters:    Size  Location     Type
  1279 ;;  dividend        2   24[COMRAM] unsigned int 
  1280 ;;  divisor         2   26[COMRAM] unsigned int 
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;  counter         1   28[COMRAM] unsigned char 
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  2   24[COMRAM] unsigned int 
  1285 ;; Registers used:
  1286 ;;		wreg, status,2, status,0
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1292 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1293 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1295 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1296 ;;Total ram usage:        5 bytes
  1297 ;; Hardware stack levels used:    1
  1298 ;; Hardware stack levels required when called:    3
  1299 ;; This function calls:
  1300 ;;		Nothing
  1301 ;; This function is called by:
  1302 ;;		_TM1640_Show_integer
  1303 ;; This function uses a non-reentrant model
  1304 ;;
  1305                           
  1306                           	psect	text6
  1307  001194                     __ptext6:
  1308                           	opt stack 0
  1309  001194                     ___lwmod:
  1310                           	opt stack 25
  1311                           
  1312                           ;incstack = 0
  1313  001194  501B               	movf	___lwmod@divisor,w,c
  1314  001196  101C               	iorwf	___lwmod@divisor+1,w,c
  1315  001198  B4D8               	btfsc	status,2,c
  1316  00119A  D01D               	goto	l1111
  1317  00119C  0E01               	movlw	1
  1318  00119E  6E1D               	movwf	___lwmod@counter,c
  1319  0011A0  D005               	goto	l2462
  1320  0011A2                     l2460:
  1321  0011A2  90D8               	bcf	status,0,c
  1322  0011A4  361B               	rlcf	___lwmod@divisor,f,c
  1323  0011A6  361C               	rlcf	___lwmod@divisor+1,f,c
  1324  0011A8  2A1D               	incf	___lwmod@counter,f,c
  1325  0011AA  D000               	goto	l2462
  1326  0011AC                     l2462:
  1327  0011AC  BE1C               	btfsc	___lwmod@divisor+1,7,c
  1328  0011AE  D002               	goto	l2464
  1329  0011B0  D7F8               	goto	l2460
  1330  0011B2  D000               	goto	l2464
  1331  0011B4                     l2464:
  1332  0011B4  501B               	movf	___lwmod@divisor,w,c
  1333  0011B6  5C19               	subwf	___lwmod@dividend,w,c
  1334  0011B8  501C               	movf	___lwmod@divisor+1,w,c
  1335  0011BA  581A               	subwfb	___lwmod@dividend+1,w,c
  1336  0011BC  A0D8               	btfss	status,0,c
  1337  0011BE  D005               	goto	l2468
  1338  0011C0  501B               	movf	___lwmod@divisor,w,c
  1339  0011C2  5E19               	subwf	___lwmod@dividend,f,c
  1340  0011C4  501C               	movf	___lwmod@divisor+1,w,c
  1341  0011C6  5A1A               	subwfb	___lwmod@dividend+1,f,c
  1342  0011C8  D000               	goto	l2468
  1343  0011CA                     l2468:
  1344  0011CA  90D8               	bcf	status,0,c
  1345  0011CC  321C               	rrcf	___lwmod@divisor+1,f,c
  1346  0011CE  321B               	rrcf	___lwmod@divisor,f,c
  1347  0011D0  2E1D               	decfsz	___lwmod@counter,f,c
  1348  0011D2  D7F0               	goto	l2464
  1349  0011D4  D000               	goto	l1111
  1350  0011D6                     l1111:
  1351  0011D6  C019  F019         	movff	___lwmod@dividend,?___lwmod
  1352  0011DA  C01A  F01A         	movff	___lwmod@dividend+1,?___lwmod+1
  1353  0011DE  0012               	return		;funcret
  1354  0011E0                     __end_of___lwmod:
  1355                           	opt stack 0
  1356                           tblptru	equ	0xFF8
  1357                           tblptrh	equ	0xFF7
  1358                           tblptrl	equ	0xFF6
  1359                           tablat	equ	0xFF5
  1360                           prodh	equ	0xFF4
  1361                           prodl	equ	0xFF3
  1362                           intcon	equ	0xFF2
  1363                           postinc0	equ	0xFEE
  1364                           wreg	equ	0xFE8
  1365                           postdec1	equ	0xFE5
  1366                           fsr1l	equ	0xFE1
  1367                           indf2	equ	0xFDF
  1368                           fsr2h	equ	0xFDA
  1369                           fsr2l	equ	0xFD9
  1370                           status	equ	0xFD8
  1371                           
  1372 ;; *************** function ___lwdiv *****************
  1373 ;; Defined at:
  1374 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  1375 ;; Parameters:    Size  Location     Type
  1376 ;;  dividend        2   24[COMRAM] unsigned int 
  1377 ;;  divisor         2   26[COMRAM] unsigned int 
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;  quotient        2   28[COMRAM] unsigned int 
  1380 ;;  counter         1   30[COMRAM] unsigned char 
  1381 ;; Return value:  Size  Location     Type
  1382 ;;                  2   24[COMRAM] unsigned int 
  1383 ;; Registers used:
  1384 ;;		wreg, status,2, status,0
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1390 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1391 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1393 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1394 ;;Total ram usage:        7 bytes
  1395 ;; Hardware stack levels used:    1
  1396 ;; Hardware stack levels required when called:    3
  1397 ;; This function calls:
  1398 ;;		Nothing
  1399 ;; This function is called by:
  1400 ;;		_TM1640_Show_integer
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404                           	psect	text7
  1405  001090                     __ptext7:
  1406                           	opt stack 0
  1407  001090                     ___lwdiv:
  1408                           	opt stack 25
  1409                           
  1410                           ;incstack = 0
  1411  001090  0E00               	movlw	0
  1412  001092  6E1E               	movwf	___lwdiv@quotient+1,c
  1413  001094  0E00               	movlw	0
  1414  001096  6E1D               	movwf	___lwdiv@quotient,c
  1415  001098  501B               	movf	___lwdiv@divisor,w,c
  1416  00109A  101C               	iorwf	___lwdiv@divisor+1,w,c
  1417  00109C  B4D8               	btfsc	status,2,c
  1418  00109E  D021               	goto	l1101
  1419  0010A0  0E01               	movlw	1
  1420  0010A2  6E1F               	movwf	___lwdiv@counter,c
  1421  0010A4  D005               	goto	l2442
  1422  0010A6                     l2440:
  1423  0010A6  90D8               	bcf	status,0,c
  1424  0010A8  361B               	rlcf	___lwdiv@divisor,f,c
  1425  0010AA  361C               	rlcf	___lwdiv@divisor+1,f,c
  1426  0010AC  2A1F               	incf	___lwdiv@counter,f,c
  1427  0010AE  D000               	goto	l2442
  1428  0010B0                     l2442:
  1429  0010B0  BE1C               	btfsc	___lwdiv@divisor+1,7,c
  1430  0010B2  D002               	goto	l2444
  1431  0010B4  D7F8               	goto	l2440
  1432  0010B6  D000               	goto	l2444
  1433  0010B8                     l2444:
  1434  0010B8  90D8               	bcf	status,0,c
  1435  0010BA  361D               	rlcf	___lwdiv@quotient,f,c
  1436  0010BC  361E               	rlcf	___lwdiv@quotient+1,f,c
  1437  0010BE  501B               	movf	___lwdiv@divisor,w,c
  1438  0010C0  5C19               	subwf	___lwdiv@dividend,w,c
  1439  0010C2  501C               	movf	___lwdiv@divisor+1,w,c
  1440  0010C4  581A               	subwfb	___lwdiv@dividend+1,w,c
  1441  0010C6  A0D8               	btfss	status,0,c
  1442  0010C8  D006               	goto	l2452
  1443  0010CA  501B               	movf	___lwdiv@divisor,w,c
  1444  0010CC  5E19               	subwf	___lwdiv@dividend,f,c
  1445  0010CE  501C               	movf	___lwdiv@divisor+1,w,c
  1446  0010D0  5A1A               	subwfb	___lwdiv@dividend+1,f,c
  1447  0010D2  801D               	bsf	___lwdiv@quotient,0,c
  1448  0010D4  D000               	goto	l2452
  1449  0010D6                     l2452:
  1450  0010D6  90D8               	bcf	status,0,c
  1451  0010D8  321C               	rrcf	___lwdiv@divisor+1,f,c
  1452  0010DA  321B               	rrcf	___lwdiv@divisor,f,c
  1453  0010DC  2E1F               	decfsz	___lwdiv@counter,f,c
  1454  0010DE  D7EC               	goto	l2444
  1455  0010E0  D000               	goto	l1101
  1456  0010E2                     l1101:
  1457  0010E2  C01D  F019         	movff	___lwdiv@quotient,?___lwdiv
  1458  0010E6  C01E  F01A         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1459  0010EA  0012               	return		;funcret
  1460  0010EC                     __end_of___lwdiv:
  1461                           	opt stack 0
  1462                           tblptru	equ	0xFF8
  1463                           tblptrh	equ	0xFF7
  1464                           tblptrl	equ	0xFF6
  1465                           tablat	equ	0xFF5
  1466                           prodh	equ	0xFF4
  1467                           prodl	equ	0xFF3
  1468                           intcon	equ	0xFF2
  1469                           postinc0	equ	0xFEE
  1470                           wreg	equ	0xFE8
  1471                           postdec1	equ	0xFE5
  1472                           fsr1l	equ	0xFE1
  1473                           indf2	equ	0xFDF
  1474                           fsr2h	equ	0xFDA
  1475                           fsr2l	equ	0xFD9
  1476                           status	equ	0xFD8
  1477                           
  1478 ;; *************** function _TM1640_Writer_Dates *****************
  1479 ;; Defined at:
  1480 ;;		line 99 in file "_01_USER/TM1640.c"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;  Addr            1    wreg     unsigned char 
  1483 ;;  Date            1   29[COMRAM] unsigned char 
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;  Addr            1   30[COMRAM] unsigned char 
  1486 ;; Return value:  Size  Location     Type
  1487 ;;		None               void
  1488 ;; Registers used:
  1489 ;;		wreg, status,2, status,0, cstack
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1495 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1496 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1498 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1499 ;;Total ram usage:        2 bytes
  1500 ;; Hardware stack levels used:    1
  1501 ;; Hardware stack levels required when called:    5
  1502 ;; This function calls:
  1503 ;;		_TM1640_Start
  1504 ;;		_TM1640_Stop
  1505 ;;		_TM1640_Writer_Byte
  1506 ;; This function is called by:
  1507 ;;		_TM1640_Show_integer
  1508 ;;		_ShowResult
  1509 ;;		_TM1640_Show_Numbers
  1510 ;;		_TM1640_Show_Decimal
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           	psect	text8
  1515  001598                     __ptext8:
  1516                           	opt stack 0
  1517  001598                     _TM1640_Writer_Dates:
  1518                           	opt stack 24
  1519                           
  1520                           ;incstack = 0
  1521                           ;TM1640_Writer_Dates@Addr stored from wreg
  1522  001598  6E1F               	movwf	TM1640_Writer_Dates@Addr,c
  1523                           
  1524                           ;TM1640.c: 101: if((Addr >= 0) && (Addr <= 15))
  1525  00159A  0E10               	movlw	16
  1526  00159C  601F               	cpfslt	TM1640_Writer_Dates@Addr,c
  1527  00159E  0012               	return	
  1528                           
  1529                           ;TM1640.c: 102: {
  1530                           ;TM1640.c: 103: TM1640_Start();
  1531  0015A0  ECBA  F00A         	call	_TM1640_Start	;wreg free
  1532                           
  1533                           ;TM1640.c: 104: TM1640_Writer_Byte(0xC0 + Addr);
  1534  0015A4  501F               	movf	TM1640_Writer_Dates@Addr,w,c
  1535  0015A6  0FC0               	addlw	192
  1536  0015A8  EC9A  F009         	call	_TM1640_Writer_Byte
  1537                           
  1538                           ;TM1640.c: 105: TM1640_Writer_Byte(Date);
  1539  0015AC  501E               	movf	TM1640_Writer_Dates@Date,w,c
  1540  0015AE  EC9A  F009         	call	_TM1640_Writer_Byte
  1541                           
  1542                           ;TM1640.c: 106: TM1640_Stop();
  1543  0015B2  ECA8  F00A         	call	_TM1640_Stop	;wreg free
  1544  0015B6  0012               	return	
  1545  0015B8  0012               	return		;funcret
  1546  0015BA                     __end_of_TM1640_Writer_Dates:
  1547                           	opt stack 0
  1548                           tblptru	equ	0xFF8
  1549                           tblptrh	equ	0xFF7
  1550                           tblptrl	equ	0xFF6
  1551                           tablat	equ	0xFF5
  1552                           prodh	equ	0xFF4
  1553                           prodl	equ	0xFF3
  1554                           intcon	equ	0xFF2
  1555                           postinc0	equ	0xFEE
  1556                           wreg	equ	0xFE8
  1557                           postdec1	equ	0xFE5
  1558                           fsr1l	equ	0xFE1
  1559                           indf2	equ	0xFDF
  1560                           fsr2h	equ	0xFDA
  1561                           fsr2l	equ	0xFD9
  1562                           status	equ	0xFD8
  1563                           
  1564 ;; *************** function _LED_Control *****************
  1565 ;; Defined at:
  1566 ;;		line 58 in file "_01_USER/GPIO.c"
  1567 ;; Parameters:    Size  Location     Type
  1568 ;;  _LED_num        1    wreg     unsigned char 
  1569 ;;  _switch         1   24[COMRAM] unsigned char 
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;  _LED_num        1   25[COMRAM] unsigned char 
  1572 ;; Return value:  Size  Location     Type
  1573 ;;		None               void
  1574 ;; Registers used:
  1575 ;;		wreg, status,2, status,0
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1581 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1582 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1584 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1585 ;;Total ram usage:        2 bytes
  1586 ;; Hardware stack levels used:    1
  1587 ;; Hardware stack levels required when called:    3
  1588 ;; This function calls:
  1589 ;;		Nothing
  1590 ;; This function is called by:
  1591 ;;		_ShowResult
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595                           	psect	text9
  1596  00122A                     __ptext9:
  1597                           	opt stack 0
  1598  00122A                     _LED_Control:
  1599                           	opt stack 26
  1600                           
  1601                           ;incstack = 0
  1602                           ;LED_Control@_LED_num stored from wreg
  1603  00122A  6E1A               	movwf	LED_Control@_LED_num,c
  1604                           
  1605                           ;GPIO.c: 62: if(_LED_num == 1)
  1606  00122C  041A               	decf	LED_Control@_LED_num,w,c
  1607  00122E  A4D8               	btfss	status,2,c
  1608  001230  D007               	goto	l2708
  1609                           
  1610                           ;GPIO.c: 63: if(_switch) LED_BUS |= 0x01;
  1611  001232  5019               	movf	LED_Control@_switch,w,c
  1612  001234  B4D8               	btfsc	status,2,c
  1613  001236  D002               	goto	l2706
  1614  001238  803B               	bsf	_LED_BUS,0,c
  1615  00123A  D002               	goto	l2708
  1616  00123C                     l2706:
  1617                           
  1618                           ;GPIO.c: 64: else LED_BUS &= 0xFE;
  1619  00123C  903B               	bcf	_LED_BUS,0,c
  1620  00123E  D000               	goto	l2708
  1621  001240                     l2708:
  1622                           
  1623                           ;GPIO.c: 66: if(_LED_num == 2)
  1624  001240  0E02               	movlw	2
  1625  001242  181A               	xorwf	LED_Control@_LED_num,w,c
  1626  001244  A4D8               	btfss	status,2,c
  1627  001246  D007               	goto	l2716
  1628                           
  1629                           ;GPIO.c: 67: if(_switch) LED_BUS |= 0x02;
  1630  001248  5019               	movf	LED_Control@_switch,w,c
  1631  00124A  B4D8               	btfsc	status,2,c
  1632  00124C  D002               	goto	l2714
  1633  00124E  823B               	bsf	_LED_BUS,1,c
  1634  001250  D002               	goto	l2716
  1635  001252                     l2714:
  1636                           
  1637                           ;GPIO.c: 68: else LED_BUS &= 0xFD;
  1638  001252  923B               	bcf	_LED_BUS,1,c
  1639  001254  D000               	goto	l2716
  1640  001256                     l2716:
  1641                           
  1642                           ;GPIO.c: 70: if(_LED_num == 3)
  1643  001256  0E03               	movlw	3
  1644  001258  181A               	xorwf	LED_Control@_LED_num,w,c
  1645  00125A  A4D8               	btfss	status,2,c
  1646  00125C  0012               	return	
  1647                           
  1648                           ;GPIO.c: 71: if(_switch) LED_BUS |= 0x04;
  1649  00125E  5019               	movf	LED_Control@_switch,w,c
  1650  001260  B4D8               	btfsc	status,2,c
  1651  001262  D002               	goto	l2722
  1652  001264  843B               	bsf	_LED_BUS,2,c
  1653  001266  0012               	return	
  1654  001268                     l2722:
  1655                           
  1656                           ;GPIO.c: 72: else LED_BUS &= 0xFB;
  1657  001268  943B               	bcf	_LED_BUS,2,c
  1658  00126A  0012               	return	
  1659  00126C  0012               	return		;funcret
  1660  00126E                     __end_of_LED_Control:
  1661                           	opt stack 0
  1662                           tblptru	equ	0xFF8
  1663                           tblptrh	equ	0xFF7
  1664                           tblptrl	equ	0xFF6
  1665                           tablat	equ	0xFF5
  1666                           prodh	equ	0xFF4
  1667                           prodl	equ	0xFF3
  1668                           intcon	equ	0xFF2
  1669                           postinc0	equ	0xFEE
  1670                           wreg	equ	0xFE8
  1671                           postdec1	equ	0xFE5
  1672                           fsr1l	equ	0xFE1
  1673                           indf2	equ	0xFDF
  1674                           fsr2h	equ	0xFDA
  1675                           fsr2l	equ	0xFD9
  1676                           status	equ	0xFD8
  1677                           
  1678 ;; *************** function _Run *****************
  1679 ;; Defined at:
  1680 ;;		line 67 in file "_01_USER/Run.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;		None
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;		None
  1685 ;; Return value:  Size  Location     Type
  1686 ;;		None               void
  1687 ;; Registers used:
  1688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1689 ;; Tracked objects:
  1690 ;;		On entry : 0/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1698 ;;Total ram usage:        0 bytes
  1699 ;; Hardware stack levels used:    1
  1700 ;; Hardware stack levels required when called:    6
  1701 ;; This function calls:
  1702 ;;		_GetADC6
  1703 ;;		_RS485_SendDate
  1704 ;; This function is called by:
  1705 ;;		_main
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709                           	psect	text10
  1710  001468                     __ptext10:
  1711                           	opt stack 0
  1712  001468                     _Run:
  1713                           	opt stack 24
  1714                           
  1715                           ;Run.c: 70: if( gs_Handle_Switch.ADC6 ) GetADC6();
  1716                           
  1717                           ;incstack = 0
  1718  001468  5031               	movf	_gs_Handle_Switch+1,w,c
  1719  00146A  B4D8               	btfsc	status,2,c
  1720  00146C  D003               	goto	l3374
  1721  00146E  ECE0  F007         	call	_GetADC6	;wreg free
  1722  001472  D000               	goto	l3374
  1723  001474                     l3374:
  1724                           
  1725                           ;Run.c: 73: if ( gs_Handle_Switch.Usart_OneDate )
  1726  001474  5032               	movf	_gs_Handle_Switch+2,w,c
  1727  001476  B4D8               	btfsc	status,2,c
  1728  001478  0012               	return	
  1729                           
  1730                           ;Run.c: 74: {
  1731                           ;Run.c: 75: gs_Handle_Switch.Usart_OneDate = 0;
  1732  00147A  0E00               	movlw	0
  1733  00147C  6E32               	movwf	_gs_Handle_Switch+2,c
  1734                           
  1735                           ;Run.c: 76: RS485_SendDate(ga_RS485_SendBuff,10);
  1736  00147E  0E3E               	movlw	low _ga_RS485_SendBuff
  1737  001480  6E29               	movwf	RS485_SendDate@date_dress,c
  1738  001482  0E00               	movlw	high _ga_RS485_SendBuff
  1739  001484  6E2A               	movwf	RS485_SendDate@date_dress+1,c
  1740  001486  0E0A               	movlw	10
  1741  001488  6E2B               	movwf	RS485_SendDate@date_lenth,c
  1742  00148A  EC90  F006         	call	_RS485_SendDate	;wreg free
  1743  00148E  0012               	return	
  1744  001490  0012               	return		;funcret
  1745  001492                     __end_of_Run:
  1746                           	opt stack 0
  1747                           tblptru	equ	0xFF8
  1748                           tblptrh	equ	0xFF7
  1749                           tblptrl	equ	0xFF6
  1750                           tablat	equ	0xFF5
  1751                           prodh	equ	0xFF4
  1752                           prodl	equ	0xFF3
  1753                           intcon	equ	0xFF2
  1754                           postinc0	equ	0xFEE
  1755                           wreg	equ	0xFE8
  1756                           postdec1	equ	0xFE5
  1757                           fsr1l	equ	0xFE1
  1758                           indf2	equ	0xFDF
  1759                           fsr2h	equ	0xFDA
  1760                           fsr2l	equ	0xFD9
  1761                           status	equ	0xFD8
  1762                           
  1763 ;; *************** function _RS485_SendDate *****************
  1764 ;; Defined at:
  1765 ;;		line 77 in file "_01_USER/My_USART.c"
  1766 ;; Parameters:    Size  Location     Type
  1767 ;;  date_dress      2   40[COMRAM] PTR unsigned char 
  1768 ;;		 -> ga_RS485_SendBuff(10), 
  1769 ;;  date_lenth      1   42[COMRAM] unsigned char 
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;		None
  1772 ;; Return value:  Size  Location     Type
  1773 ;;		None               void
  1774 ;; Registers used:
  1775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1781 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1783 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1784 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1785 ;;Total ram usage:        4 bytes
  1786 ;; Hardware stack levels used:    1
  1787 ;; Hardware stack levels required when called:    5
  1788 ;; This function calls:
  1789 ;;		_VerifyCRC
  1790 ;; This function is called by:
  1791 ;;		_Run
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text11
  1796  000D20                     __ptext11:
  1797                           	opt stack 0
  1798  000D20                     _RS485_SendDate:
  1799                           	opt stack 24
  1800                           
  1801                           ;My_USART.c: 80: date_dress[--date_lenth] = 0xff;
  1802                           
  1803                           ;incstack = 0
  1804  000D20  062B               	decf	RS485_SendDate@date_lenth,f,c
  1805  000D22  502B               	movf	RS485_SendDate@date_lenth,w,c
  1806  000D24  0D01               	mullw	1
  1807  000D26  50F3               	movf	prodl,w,c
  1808  000D28  2429               	addwf	RS485_SendDate@date_dress,w,c
  1809  000D2A  6ED9               	movwf	fsr2l,c
  1810  000D2C  50F4               	movf	prodh,w,c
  1811  000D2E  202A               	addwfc	RS485_SendDate@date_dress+1,w,c
  1812  000D30  6EDA               	movwf	fsr2h,c
  1813  000D32  0EFF               	movlw	255
  1814  000D34  6EDF               	movwf	indf2,c
  1815                           
  1816                           ;My_USART.c: 83: VerifyCRC(date_dress,10);
  1817  000D36  C029  F026         	movff	RS485_SendDate@date_dress,VerifyCRC@DataBuff
  1818  000D3A  C02A  F027         	movff	RS485_SendDate@date_dress+1,VerifyCRC@DataBuff+1
  1819  000D3E  0E0A               	movlw	10
  1820  000D40  6E28               	movwf	VerifyCRC@date_lenth,c
  1821  000D42  ECF9  F003         	call	_VerifyCRC	;wreg free
  1822                           
  1823                           ;My_USART.c: 86: while( (!TXSTA1bits.TRMT) );
  1824  000D46  D000               	goto	l215
  1825  000D48                     l215:
  1826  000D48  A2AC               	btfss	4012,1,c	;volatile
  1827  000D4A  D7FE               	goto	l215
  1828                           
  1829                           ;My_USART.c: 87: RC0 = 0;
  1830  000D4C  9082               	bcf	3970,0,c	;volatile
  1831                           
  1832                           ;My_USART.c: 90: TXREG1 = date_dress[date_lenth];
  1833  000D4E  502B               	movf	RS485_SendDate@date_lenth,w,c
  1834  000D50  0D01               	mullw	1
  1835  000D52  50F3               	movf	prodl,w,c
  1836  000D54  2429               	addwf	RS485_SendDate@date_dress,w,c
  1837  000D56  6ED9               	movwf	fsr2l,c
  1838  000D58  50F4               	movf	prodh,w,c
  1839  000D5A  202A               	addwfc	RS485_SendDate@date_dress+1,w,c
  1840  000D5C  6EDA               	movwf	fsr2h,c
  1841  000D5E  50DF               	movf	indf2,w,c
  1842  000D60  6EAD               	movwf	4013,c	;volatile
  1843                           
  1844                           ;My_USART.c: 91: while( (!TXSTA1bits.TRMT) );
  1845  000D62  D000               	goto	l218
  1846  000D64                     l218:
  1847  000D64  B2AC               	btfsc	4012,1,c	;volatile
  1848  000D66  D025               	goto	l3298
  1849  000D68  D7FD               	goto	l218
  1850                           
  1851                           ;My_USART.c: 94: while( date_lenth --)
  1852  000D6A  D023               	goto	l3298
  1853  000D6C                     l3294:
  1854                           
  1855                           ;My_USART.c: 95: {
  1856                           ;My_USART.c: 96: if(date_dress[date_lenth] == 0xff ) date_dress[date_lenth]--;
  1857  000D6C  502B               	movf	RS485_SendDate@date_lenth,w,c
  1858  000D6E  0D01               	mullw	1
  1859  000D70  50F3               	movf	prodl,w,c
  1860  000D72  2429               	addwf	RS485_SendDate@date_dress,w,c
  1861  000D74  6ED9               	movwf	fsr2l,c
  1862  000D76  50F4               	movf	prodh,w,c
  1863  000D78  202A               	addwfc	RS485_SendDate@date_dress+1,w,c
  1864  000D7A  6EDA               	movwf	fsr2h,c
  1865  000D7C  28DE               	incf	postinc2,w,c
  1866  000D7E  A4D8               	btfss	status,2,c
  1867  000D80  D009               	goto	l223
  1868  000D82  502B               	movf	RS485_SendDate@date_lenth,w,c
  1869  000D84  0D01               	mullw	1
  1870  000D86  50F3               	movf	prodl,w,c
  1871  000D88  2429               	addwf	RS485_SendDate@date_dress,w,c
  1872  000D8A  6ED9               	movwf	fsr2l,c
  1873  000D8C  50F4               	movf	prodh,w,c
  1874  000D8E  202A               	addwfc	RS485_SendDate@date_dress+1,w,c
  1875  000D90  6EDA               	movwf	fsr2h,c
  1876  000D92  06DF               	decf	indf2,f,c
  1877  000D94                     l223:
  1878                           
  1879                           ;My_USART.c: 97: TXREG1 = date_dress[date_lenth];
  1880  000D94  502B               	movf	RS485_SendDate@date_lenth,w,c
  1881  000D96  0D01               	mullw	1
  1882  000D98  50F3               	movf	prodl,w,c
  1883  000D9A  2429               	addwf	RS485_SendDate@date_dress,w,c
  1884  000D9C  6ED9               	movwf	fsr2l,c
  1885  000D9E  50F4               	movf	prodh,w,c
  1886  000DA0  202A               	addwfc	RS485_SendDate@date_dress+1,w,c
  1887  000DA2  6EDA               	movwf	fsr2h,c
  1888  000DA4  50DF               	movf	indf2,w,c
  1889  000DA6  6EAD               	movwf	4013,c	;volatile
  1890                           
  1891                           ;My_USART.c: 98: while( (!TXSTA1bits.TRMT));
  1892  000DA8  D000               	goto	l224
  1893  000DAA                     l224:
  1894  000DAA  B2AC               	btfsc	4012,1,c	;volatile
  1895  000DAC  D002               	goto	l3298
  1896  000DAE  D7FD               	goto	l224
  1897  000DB0  D000               	goto	l3298
  1898  000DB2                     l3298:
  1899  000DB2  062B               	decf	RS485_SendDate@date_lenth,f,c
  1900  000DB4  282B               	incf	RS485_SendDate@date_lenth,w,c
  1901  000DB6  A4D8               	btfss	status,2,c
  1902  000DB8  D7D9               	goto	l3294
  1903                           
  1904                           ;My_USART.c: 99: }
  1905                           ;My_USART.c: 101: RC0 = 1;
  1906  000DBA  8082               	bsf	3970,0,c	;volatile
  1907  000DBC  0012               	return		;funcret
  1908  000DBE                     __end_of_RS485_SendDate:
  1909                           	opt stack 0
  1910                           tblptru	equ	0xFF8
  1911                           tblptrh	equ	0xFF7
  1912                           tblptrl	equ	0xFF6
  1913                           tablat	equ	0xFF5
  1914                           prodh	equ	0xFF4
  1915                           prodl	equ	0xFF3
  1916                           intcon	equ	0xFF2
  1917                           postinc0	equ	0xFEE
  1918                           wreg	equ	0xFE8
  1919                           postdec1	equ	0xFE5
  1920                           fsr1l	equ	0xFE1
  1921                           indf2	equ	0xFDF
  1922                           postinc2	equ	0xFDE
  1923                           fsr2h	equ	0xFDA
  1924                           fsr2l	equ	0xFD9
  1925                           status	equ	0xFD8
  1926                           
  1927 ;; *************** function _GetADC6 *****************
  1928 ;; Defined at:
  1929 ;;		line 67 in file "_01_USER/My_ADC.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;		None
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;		None
  1934 ;; Return value:  Size  Location     Type
  1935 ;;		None               void
  1936 ;; Registers used:
  1937 ;;		wreg, status,2, status,0, cstack
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1947 ;;Total ram usage:        0 bytes
  1948 ;; Hardware stack levels used:    1
  1949 ;; Hardware stack levels required when called:    5
  1950 ;; This function calls:
  1951 ;;		_BusyADC
  1952 ;;		_ConvertADC
  1953 ;;		_ReadADC
  1954 ;;		___ftdiv
  1955 ;;		___ftmul
  1956 ;;		___lwtoft
  1957 ;; This function is called by:
  1958 ;;		_Run
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           	psect	text12
  1963  000FC0                     __ptext12:
  1964                           	opt stack 0
  1965  000FC0                     _GetADC6:
  1966                           	opt stack 24
  1967                           
  1968                           ;My_ADC.c: 69: ConvertADC();
  1969                           
  1970                           ;incstack = 0
  1971  000FC0  EC30  F00B         	call	_ConvertADC	;wreg free
  1972                           
  1973                           ;My_ADC.c: 70: while(BusyADC());
  1974  000FC4  D000               	goto	l3364
  1975  000FC6                     l3364:
  1976  000FC6  EC29  F00B         	call	_BusyADC	;wreg free
  1977  000FCA  0900               	iorlw	0
  1978  000FCC  A4D8               	btfss	status,2,c
  1979  000FCE  D7FB               	goto	l3364
  1980                           
  1981                           ;My_ADC.c: 71: gf_ADC6_Buff =(unsigned int)ReadADC()*4.096f/4095.0f;
  1982  000FD0  0E12               	movlw	18
  1983  000FD2  6E27               	movwf	___ftmul@f2,c
  1984  000FD4  0E83               	movlw	131
  1985  000FD6  6E28               	movwf	___ftmul@f2+1,c
  1986  000FD8  0E40               	movlw	64
  1987  000FDA  6E29               	movwf	___ftmul@f2+2,c
  1988  000FDC  EC21  F00B         	call	_ReadADC	;wreg free
  1989  000FE0  C019  F021         	movff	?_ReadADC,___lwtoft@c
  1990  000FE4  C01A  F022         	movff	?_ReadADC+1,___lwtoft@c+1
  1991  000FE8  EC5D  F00A         	call	___lwtoft	;wreg free
  1992  000FEC  C021  F024         	movff	?___lwtoft,___ftmul@f1
  1993  000FF0  C022  F025         	movff	?___lwtoft+1,___ftmul@f1+1
  1994  000FF4  C023  F026         	movff	?___lwtoft+2,___ftmul@f1+2
  1995  000FF8  EC9E  F004         	call	___ftmul	;wreg free
  1996  000FFC  C024  F100         	movff	?___ftmul,___ftdiv@f1
  1997  001000  C025  F101         	movff	?___ftmul+1,___ftdiv@f1+1
  1998  001004  C026  F102         	movff	?___ftmul+2,___ftdiv@f1+2
  1999  001008  0EF0               	movlw	240
  2000  00100A  0101               	movlb	1	; () banked
  2001  00100C  6F03               	movwf	___ftdiv@f2& (0+255),b
  2002  00100E  0E7F               	movlw	127
  2003  001010  0101               	movlb	1	; () banked
  2004  001012  6F04               	movwf	(___ftdiv@f2+1)& (0+255),b
  2005  001014  0E45               	movlw	69
  2006  001016  0101               	movlb	1	; () banked
  2007  001018  6F05               	movwf	(___ftdiv@f2+2)& (0+255),b
  2008  00101A  EC50  F003         	call	___ftdiv	;wreg free
  2009  00101E  C100  F034         	movff	?___ftdiv,_gf_ADC6_Buff	;volatile
  2010  001022  C101  F035         	movff	?___ftdiv+1,_gf_ADC6_Buff+1	;volatile
  2011  001026  C102  F036         	movff	?___ftdiv+2,_gf_ADC6_Buff+2	;volatile
  2012  00102A  0012               	return		;funcret
  2013  00102C                     __end_of_GetADC6:
  2014                           	opt stack 0
  2015                           tblptru	equ	0xFF8
  2016                           tblptrh	equ	0xFF7
  2017                           tblptrl	equ	0xFF6
  2018                           tablat	equ	0xFF5
  2019                           prodh	equ	0xFF4
  2020                           prodl	equ	0xFF3
  2021                           intcon	equ	0xFF2
  2022                           postinc0	equ	0xFEE
  2023                           wreg	equ	0xFE8
  2024                           postdec1	equ	0xFE5
  2025                           fsr1l	equ	0xFE1
  2026                           indf2	equ	0xFDF
  2027                           postinc2	equ	0xFDE
  2028                           fsr2h	equ	0xFDA
  2029                           fsr2l	equ	0xFD9
  2030                           status	equ	0xFD8
  2031                           
  2032 ;; *************** function ___lwtoft *****************
  2033 ;; Defined at:
  2034 ;;		line 28 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;  c               2   32[COMRAM] unsigned int 
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;		None
  2039 ;; Return value:  Size  Location     Type
  2040 ;;                  3   32[COMRAM] float 
  2041 ;; Registers used:
  2042 ;;		wreg, status,2, status,0, cstack
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2048 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2051 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2052 ;;Total ram usage:        3 bytes
  2053 ;; Hardware stack levels used:    1
  2054 ;; Hardware stack levels required when called:    4
  2055 ;; This function calls:
  2056 ;;		___ftpack
  2057 ;; This function is called by:
  2058 ;;		_GetADC6
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062                           	psect	text13
  2063  0014BA                     __ptext13:
  2064                           	opt stack 0
  2065  0014BA                     ___lwtoft:
  2066                           	opt stack 24
  2067                           
  2068                           ;incstack = 0
  2069  0014BA  C021  F019         	movff	___lwtoft@c,___ftpack@arg
  2070  0014BE  C022  F01A         	movff	___lwtoft@c+1,___ftpack@arg+1
  2071  0014C2  6A1B               	clrf	___ftpack@arg+2,c
  2072  0014C4  0E8E               	movlw	142
  2073  0014C6  6E1C               	movwf	___ftpack@exp,c
  2074  0014C8  0E00               	movlw	0
  2075  0014CA  6E1D               	movwf	___ftpack@sign,c
  2076  0014CC  EC2D  F006         	call	___ftpack	;wreg free
  2077  0014D0  C019  F021         	movff	?___ftpack,?___lwtoft
  2078  0014D4  C01A  F022         	movff	?___ftpack+1,?___lwtoft+1
  2079  0014D8  C01B  F023         	movff	?___ftpack+2,?___lwtoft+2
  2080  0014DC  0012               	return	
  2081  0014DE  0012               	return		;funcret
  2082  0014E0                     __end_of___lwtoft:
  2083                           	opt stack 0
  2084                           tblptru	equ	0xFF8
  2085                           tblptrh	equ	0xFF7
  2086                           tblptrl	equ	0xFF6
  2087                           tablat	equ	0xFF5
  2088                           prodh	equ	0xFF4
  2089                           prodl	equ	0xFF3
  2090                           intcon	equ	0xFF2
  2091                           postinc0	equ	0xFEE
  2092                           wreg	equ	0xFE8
  2093                           postdec1	equ	0xFE5
  2094                           fsr1l	equ	0xFE1
  2095                           indf2	equ	0xFDF
  2096                           postinc2	equ	0xFDE
  2097                           fsr2h	equ	0xFDA
  2098                           fsr2l	equ	0xFD9
  2099                           status	equ	0xFD8
  2100                           
  2101 ;; *************** function ___ftmul *****************
  2102 ;; Defined at:
  2103 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;  f1              3   35[COMRAM] float 
  2106 ;;  f2              3   38[COMRAM] float 
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;  f3_as_produc    3    4[BANK0 ] unsigned um
  2109 ;;  sign            1    8[BANK0 ] unsigned char 
  2110 ;;  cntr            1    7[BANK0 ] unsigned char 
  2111 ;;  exp             1    3[BANK0 ] unsigned char 
  2112 ;; Return value:  Size  Location     Type
  2113 ;;                  3   35[COMRAM] float 
  2114 ;; Registers used:
  2115 ;;		wreg, status,2, status,0, cstack
  2116 ;; Tracked objects:
  2117 ;;		On entry : 0/0
  2118 ;;		On exit  : 0/0
  2119 ;;		Unchanged: 0/0
  2120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2121 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2122 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2123 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2124 ;;      Totals:         6       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2125 ;;Total ram usage:       15 bytes
  2126 ;; Hardware stack levels used:    1
  2127 ;; Hardware stack levels required when called:    4
  2128 ;; This function calls:
  2129 ;;		___ftpack
  2130 ;; This function is called by:
  2131 ;;		_GetADC6
  2132 ;;		_TM1640_Show_Decimal
  2133 ;; This function uses a non-reentrant model
  2134 ;;
  2135                           
  2136                           	psect	text14
  2137  00093C                     __ptext14:
  2138                           	opt stack 0
  2139  00093C                     ___ftmul:
  2140                           	opt stack 24
  2141                           
  2142                           ;incstack = 0
  2143  00093C  C026  F0F4         	movff	___ftmul@f1+2,??___ftmul
  2144  000940  0100               	movlb	0	; () banked
  2145  000942  6BF5               	clrf	(??___ftmul+1)& (0+255),b
  2146  000944  6BF6               	clrf	(??___ftmul+2)& (0+255),b
  2147  000946  3425               	rlcf	___ftmul@f1+1,w,c
  2148  000948  0100               	movlb	0	; () banked
  2149  00094A  37F4               	rlcf	??___ftmul& (0+255),f,b
  2150  00094C  E301               	bnc	u3381
  2151  00094E  81F5               	bsf	(??___ftmul+1)& (0+255),0,b
  2152  000950                     u3381:
  2153  000950  0100               	movlb	0	; () banked
  2154  000952  51F4               	movf	??___ftmul& (0+255),w,b
  2155  000954  0100               	movlb	0	; () banked
  2156  000956  6FF7               	movwf	___ftmul@exp& (0+255),b
  2157  000958  0100               	movlb	0	; () banked
  2158  00095A  51F7               	movf	___ftmul@exp& (0+255),w,b
  2159  00095C  A4D8               	btfss	status,2,c
  2160  00095E  D007               	goto	l3242
  2161                           
  2162                           ; BSR set to: 0
  2163  000960  0E00               	movlw	0
  2164  000962  6E24               	movwf	?___ftmul,c
  2165  000964  0E00               	movlw	0
  2166  000966  6E25               	movwf	?___ftmul+1,c
  2167  000968  0E00               	movlw	0
  2168  00096A  6E26               	movwf	?___ftmul+2,c
  2169                           
  2170                           ; BSR set to: 0
  2171  00096C  0012               	return	
  2172  00096E                     l3242:
  2173                           
  2174                           ; BSR set to: 0
  2175  00096E  C029  F0F4         	movff	___ftmul@f2+2,??___ftmul
  2176  000972  0100               	movlb	0	; () banked
  2177  000974  6BF5               	clrf	(??___ftmul+1)& (0+255),b
  2178  000976  6BF6               	clrf	(??___ftmul+2)& (0+255),b
  2179  000978  3428               	rlcf	___ftmul@f2+1,w,c
  2180  00097A  0100               	movlb	0	; () banked
  2181  00097C  37F4               	rlcf	??___ftmul& (0+255),f,b
  2182  00097E  E301               	bnc	u3401
  2183  000980  81F5               	bsf	(??___ftmul+1)& (0+255),0,b
  2184  000982                     u3401:
  2185  000982  0100               	movlb	0	; () banked
  2186  000984  51F4               	movf	??___ftmul& (0+255),w,b
  2187  000986  0100               	movlb	0	; () banked
  2188  000988  6FFC               	movwf	___ftmul@sign& (0+255),b
  2189  00098A  0100               	movlb	0	; () banked
  2190  00098C  51FC               	movf	___ftmul@sign& (0+255),w,b
  2191  00098E  A4D8               	btfss	status,2,c
  2192  000990  D007               	goto	l3248
  2193                           
  2194                           ; BSR set to: 0
  2195  000992  0E00               	movlw	0
  2196  000994  6E24               	movwf	?___ftmul,c
  2197  000996  0E00               	movlw	0
  2198  000998  6E25               	movwf	?___ftmul+1,c
  2199  00099A  0E00               	movlw	0
  2200  00099C  6E26               	movwf	?___ftmul+2,c
  2201                           
  2202                           ; BSR set to: 0
  2203  00099E  0012               	return	
  2204  0009A0                     l3248:
  2205                           
  2206                           ; BSR set to: 0
  2207  0009A0  0100               	movlb	0	; () banked
  2208  0009A2  51FC               	movf	___ftmul@sign& (0+255),w,b
  2209  0009A4  0F7B               	addlw	123
  2210  0009A6  0100               	movlb	0	; () banked
  2211  0009A8  27F7               	addwf	___ftmul@exp& (0+255),f,b
  2212                           
  2213                           ; BSR set to: 0
  2214  0009AA  C026  F0FC         	movff	___ftmul@f1+2,___ftmul@sign
  2215  0009AE  5029               	movf	___ftmul@f2+2,w,c
  2216  0009B0  0100               	movlb	0	; () banked
  2217  0009B2  1BFC               	xorwf	___ftmul@sign& (0+255),f,b
  2218  0009B4  0E80               	movlw	128
  2219  0009B6  0100               	movlb	0	; () banked
  2220  0009B8  17FC               	andwf	___ftmul@sign& (0+255),f,b
  2221                           
  2222                           ; BSR set to: 0
  2223  0009BA  8E25               	bsf	___ftmul@f1+1,7,c
  2224                           
  2225                           ; BSR set to: 0
  2226  0009BC  8E28               	bsf	___ftmul@f2+1,7,c
  2227                           
  2228                           ; BSR set to: 0
  2229  0009BE  0EFF               	movlw	255
  2230  0009C0  1627               	andwf	___ftmul@f2,f,c
  2231  0009C2  0EFF               	movlw	255
  2232  0009C4  1628               	andwf	___ftmul@f2+1,f,c
  2233  0009C6  0E00               	movlw	0
  2234  0009C8  1629               	andwf	___ftmul@f2+2,f,c
  2235                           
  2236                           ; BSR set to: 0
  2237  0009CA  0E00               	movlw	0
  2238  0009CC  0100               	movlb	0	; () banked
  2239  0009CE  6FF8               	movwf	___ftmul@f3_as_product& (0+255),b
  2240  0009D0  0E00               	movlw	0
  2241  0009D2  0100               	movlb	0	; () banked
  2242  0009D4  6FF9               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  2243  0009D6  0E00               	movlw	0
  2244  0009D8  0100               	movlb	0	; () banked
  2245  0009DA  6FFA               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  2246                           
  2247                           ; BSR set to: 0
  2248  0009DC  0E07               	movlw	7
  2249  0009DE  0100               	movlb	0	; () banked
  2250  0009E0  6FFB               	movwf	___ftmul@cntr& (0+255),b
  2251  0009E2  D000               	goto	l3262
  2252  0009E4                     l3262:
  2253                           
  2254                           ; BSR set to: 0
  2255  0009E4  A024               	btfss	___ftmul@f1,0,c
  2256  0009E6  D00A               	goto	l3266
  2257                           
  2258                           ; BSR set to: 0
  2259  0009E8  5027               	movf	___ftmul@f2,w,c
  2260  0009EA  0100               	movlb	0	; () banked
  2261  0009EC  27F8               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2262  0009EE  5028               	movf	___ftmul@f2+1,w,c
  2263  0009F0  0100               	movlb	0	; () banked
  2264  0009F2  23F9               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2265  0009F4  5029               	movf	___ftmul@f2+2,w,c
  2266  0009F6  0100               	movlb	0	; () banked
  2267  0009F8  23FA               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2268  0009FA  D000               	goto	l3266
  2269  0009FC                     l3266:
  2270                           
  2271                           ; BSR set to: 0
  2272  0009FC  90D8               	bcf	status,0,c
  2273  0009FE  3226               	rrcf	___ftmul@f1+2,f,c
  2274  000A00  3225               	rrcf	___ftmul@f1+1,f,c
  2275  000A02  3224               	rrcf	___ftmul@f1,f,c
  2276  000A04  90D8               	bcf	status,0,c
  2277  000A06  3627               	rlcf	___ftmul@f2,f,c
  2278  000A08  3628               	rlcf	___ftmul@f2+1,f,c
  2279  000A0A  3629               	rlcf	___ftmul@f2+2,f,c
  2280                           
  2281                           ; BSR set to: 0
  2282  000A0C  0100               	movlb	0	; () banked
  2283  000A0E  2FFB               	decfsz	___ftmul@cntr& (0+255),f,b
  2284  000A10  D7E9               	goto	l3262
  2285  000A12  D000               	goto	l3270
  2286  000A14                     l3270:
  2287                           
  2288                           ; BSR set to: 0
  2289  000A14  0E09               	movlw	9
  2290  000A16  0100               	movlb	0	; () banked
  2291  000A18  6FFB               	movwf	___ftmul@cntr& (0+255),b
  2292  000A1A  D000               	goto	l3272
  2293  000A1C                     l3272:
  2294                           
  2295                           ; BSR set to: 0
  2296  000A1C  A024               	btfss	___ftmul@f1,0,c
  2297  000A1E  D00A               	goto	l3276
  2298                           
  2299                           ; BSR set to: 0
  2300  000A20  5027               	movf	___ftmul@f2,w,c
  2301  000A22  0100               	movlb	0	; () banked
  2302  000A24  27F8               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2303  000A26  5028               	movf	___ftmul@f2+1,w,c
  2304  000A28  0100               	movlb	0	; () banked
  2305  000A2A  23F9               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2306  000A2C  5029               	movf	___ftmul@f2+2,w,c
  2307  000A2E  0100               	movlb	0	; () banked
  2308  000A30  23FA               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2309  000A32  D000               	goto	l3276
  2310  000A34                     l3276:
  2311                           
  2312                           ; BSR set to: 0
  2313  000A34  90D8               	bcf	status,0,c
  2314  000A36  3226               	rrcf	___ftmul@f1+2,f,c
  2315  000A38  3225               	rrcf	___ftmul@f1+1,f,c
  2316  000A3A  3224               	rrcf	___ftmul@f1,f,c
  2317  000A3C  0100               	movlb	0	; () banked
  2318  000A3E  90D8               	bcf	status,0,c
  2319  000A40  33FA               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  2320  000A42  33F9               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  2321  000A44  33F8               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  2322                           
  2323                           ; BSR set to: 0
  2324  000A46  0100               	movlb	0	; () banked
  2325  000A48  2FFB               	decfsz	___ftmul@cntr& (0+255),f,b
  2326  000A4A  D7E8               	goto	l3272
  2327  000A4C  D000               	goto	l3280
  2328  000A4E                     l3280:
  2329                           
  2330                           ; BSR set to: 0
  2331  000A4E  C0F8  F019         	movff	___ftmul@f3_as_product,___ftpack@arg
  2332  000A52  C0F9  F01A         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2333  000A56  C0FA  F01B         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2334  000A5A  C0F7  F01C         	movff	___ftmul@exp,___ftpack@exp
  2335  000A5E  C0FC  F01D         	movff	___ftmul@sign,___ftpack@sign
  2336  000A62  EC2D  F006         	call	___ftpack	;wreg free
  2337  000A66  C019  F024         	movff	?___ftpack,?___ftmul
  2338  000A6A  C01A  F025         	movff	?___ftpack+1,?___ftmul+1
  2339  000A6E  C01B  F026         	movff	?___ftpack+2,?___ftmul+2
  2340  000A72  0012               	return	
  2341  000A74  0012               	return		;funcret
  2342  000A76                     __end_of___ftmul:
  2343                           	opt stack 0
  2344                           tblptru	equ	0xFF8
  2345                           tblptrh	equ	0xFF7
  2346                           tblptrl	equ	0xFF6
  2347                           tablat	equ	0xFF5
  2348                           prodh	equ	0xFF4
  2349                           prodl	equ	0xFF3
  2350                           intcon	equ	0xFF2
  2351                           postinc0	equ	0xFEE
  2352                           wreg	equ	0xFE8
  2353                           postdec1	equ	0xFE5
  2354                           fsr1l	equ	0xFE1
  2355                           indf2	equ	0xFDF
  2356                           postinc2	equ	0xFDE
  2357                           fsr2h	equ	0xFDA
  2358                           fsr2l	equ	0xFD9
  2359                           status	equ	0xFD8
  2360                           
  2361 ;; *************** function ___ftdiv *****************
  2362 ;; Defined at:
  2363 ;;		line 54 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  2364 ;; Parameters:    Size  Location     Type
  2365 ;;  f1              3    0[BANK1 ] float 
  2366 ;;  f2              3    3[BANK1 ] float 
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;  f3              3    7[BANK1 ] float 
  2369 ;;  sign            1   11[BANK1 ] unsigned char 
  2370 ;;  exp             1   10[BANK1 ] unsigned char 
  2371 ;;  cntr            1    6[BANK1 ] unsigned char 
  2372 ;; Return value:  Size  Location     Type
  2373 ;;                  3    0[BANK1 ] float 
  2374 ;; Registers used:
  2375 ;;		wreg, status,2, status,0, cstack
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2381 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2382 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2383 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2384 ;;      Totals:         0       3      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2385 ;;Total ram usage:       15 bytes
  2386 ;; Hardware stack levels used:    1
  2387 ;; Hardware stack levels required when called:    4
  2388 ;; This function calls:
  2389 ;;		___ftpack
  2390 ;; This function is called by:
  2391 ;;		_GetADC6
  2392 ;;		_TM1640_Show_Decimal
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           
  2396                           	psect	text15
  2397  0006A0                     __ptext15:
  2398                           	opt stack 0
  2399  0006A0                     ___ftdiv:
  2400                           	opt stack 24
  2401                           
  2402                           ;incstack = 0
  2403  0006A0  C102  F0FD         	movff	___ftdiv@f1+2,??___ftdiv
  2404  0006A4  0100               	movlb	0	; () banked
  2405  0006A6  6BFE               	clrf	(??___ftdiv+1)& (0+255),b
  2406  0006A8  6BFF               	clrf	(??___ftdiv+2)& (0+255),b
  2407  0006AA  0101               	movlb	1	; () banked
  2408  0006AC  3501               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  2409  0006AE  0100               	movlb	0	; () banked
  2410  0006B0  37FD               	rlcf	??___ftdiv& (0+255),f,b
  2411  0006B2  E301               	bnc	u3331
  2412  0006B4  81FE               	bsf	(??___ftdiv+1)& (0+255),0,b
  2413  0006B6                     u3331:
  2414  0006B6  0100               	movlb	0	; () banked
  2415  0006B8  51FD               	movf	??___ftdiv& (0+255),w,b
  2416  0006BA  0101               	movlb	1	; () banked
  2417  0006BC  6F0A               	movwf	___ftdiv@exp& (0+255),b
  2418  0006BE  0101               	movlb	1	; () banked
  2419  0006C0  510A               	movf	___ftdiv@exp& (0+255),w,b
  2420  0006C2  A4D8               	btfss	status,2,c
  2421  0006C4  D00A               	goto	l3196
  2422                           
  2423                           ; BSR set to: 1
  2424  0006C6  0E00               	movlw	0
  2425  0006C8  0101               	movlb	1	; () banked
  2426  0006CA  6F00               	movwf	?___ftdiv& (0+255),b
  2427  0006CC  0E00               	movlw	0
  2428  0006CE  0101               	movlb	1	; () banked
  2429  0006D0  6F01               	movwf	(?___ftdiv+1)& (0+255),b
  2430  0006D2  0E00               	movlw	0
  2431  0006D4  0101               	movlb	1	; () banked
  2432  0006D6  6F02               	movwf	(?___ftdiv+2)& (0+255),b
  2433                           
  2434                           ; BSR set to: 1
  2435  0006D8  0012               	return	
  2436  0006DA                     l3196:
  2437                           
  2438                           ; BSR set to: 1
  2439  0006DA  C105  F0FD         	movff	___ftdiv@f2+2,??___ftdiv
  2440  0006DE  0100               	movlb	0	; () banked
  2441  0006E0  6BFE               	clrf	(??___ftdiv+1)& (0+255),b
  2442  0006E2  6BFF               	clrf	(??___ftdiv+2)& (0+255),b
  2443  0006E4  0101               	movlb	1	; () banked
  2444  0006E6  3504               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  2445  0006E8  0100               	movlb	0	; () banked
  2446  0006EA  37FD               	rlcf	??___ftdiv& (0+255),f,b
  2447  0006EC  E301               	bnc	u3351
  2448  0006EE  81FE               	bsf	(??___ftdiv+1)& (0+255),0,b
  2449  0006F0                     u3351:
  2450  0006F0  0100               	movlb	0	; () banked
  2451  0006F2  51FD               	movf	??___ftdiv& (0+255),w,b
  2452  0006F4  0101               	movlb	1	; () banked
  2453  0006F6  6F0B               	movwf	___ftdiv@sign& (0+255),b
  2454  0006F8  0101               	movlb	1	; () banked
  2455  0006FA  510B               	movf	___ftdiv@sign& (0+255),w,b
  2456  0006FC  A4D8               	btfss	status,2,c
  2457  0006FE  D00A               	goto	l3202
  2458                           
  2459                           ; BSR set to: 1
  2460  000700  0E00               	movlw	0
  2461  000702  0101               	movlb	1	; () banked
  2462  000704  6F00               	movwf	?___ftdiv& (0+255),b
  2463  000706  0E00               	movlw	0
  2464  000708  0101               	movlb	1	; () banked
  2465  00070A  6F01               	movwf	(?___ftdiv+1)& (0+255),b
  2466  00070C  0E00               	movlw	0
  2467  00070E  0101               	movlb	1	; () banked
  2468  000710  6F02               	movwf	(?___ftdiv+2)& (0+255),b
  2469                           
  2470                           ; BSR set to: 1
  2471  000712  0012               	return	
  2472  000714                     l3202:
  2473                           
  2474                           ; BSR set to: 1
  2475  000714  0E00               	movlw	0
  2476  000716  0101               	movlb	1	; () banked
  2477  000718  6F07               	movwf	___ftdiv@f3& (0+255),b
  2478  00071A  0E00               	movlw	0
  2479  00071C  0101               	movlb	1	; () banked
  2480  00071E  6F08               	movwf	(___ftdiv@f3+1)& (0+255),b
  2481  000720  0E00               	movlw	0
  2482  000722  0101               	movlb	1	; () banked
  2483  000724  6F09               	movwf	(___ftdiv@f3+2)& (0+255),b
  2484                           
  2485                           ; BSR set to: 1
  2486  000726  0101               	movlb	1	; () banked
  2487  000728  510B               	movf	___ftdiv@sign& (0+255),w,b
  2488  00072A  0F89               	addlw	137
  2489  00072C  0101               	movlb	1	; () banked
  2490  00072E  5F0A               	subwf	___ftdiv@exp& (0+255),f,b
  2491                           
  2492                           ; BSR set to: 1
  2493  000730  C102  F10B         	movff	___ftdiv@f1+2,___ftdiv@sign
  2494                           
  2495                           ; BSR set to: 1
  2496  000734  0101               	movlb	1	; () banked
  2497  000736  5105               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2498  000738  0101               	movlb	1	; () banked
  2499  00073A  1B0B               	xorwf	___ftdiv@sign& (0+255),f,b
  2500                           
  2501                           ; BSR set to: 1
  2502  00073C  0E80               	movlw	128
  2503  00073E  0101               	movlb	1	; () banked
  2504  000740  170B               	andwf	___ftdiv@sign& (0+255),f,b
  2505                           
  2506                           ; BSR set to: 1
  2507  000742  0101               	movlb	1	; () banked
  2508  000744  8F01               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  2509                           
  2510                           ; BSR set to: 1
  2511  000746  0EFF               	movlw	255
  2512  000748  0101               	movlb	1	; () banked
  2513  00074A  1700               	andwf	___ftdiv@f1& (0+255),f,b
  2514  00074C  0EFF               	movlw	255
  2515  00074E  0101               	movlb	1	; () banked
  2516  000750  1701               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  2517  000752  0E00               	movlw	0
  2518  000754  0101               	movlb	1	; () banked
  2519  000756  1702               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  2520                           
  2521                           ; BSR set to: 1
  2522  000758  0101               	movlb	1	; () banked
  2523  00075A  8F04               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  2524                           
  2525                           ; BSR set to: 1
  2526  00075C  0EFF               	movlw	255
  2527  00075E  0101               	movlb	1	; () banked
  2528  000760  1703               	andwf	___ftdiv@f2& (0+255),f,b
  2529  000762  0EFF               	movlw	255
  2530  000764  0101               	movlb	1	; () banked
  2531  000766  1704               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  2532  000768  0E00               	movlw	0
  2533  00076A  0101               	movlb	1	; () banked
  2534  00076C  1705               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  2535                           
  2536                           ; BSR set to: 1
  2537  00076E  0E18               	movlw	24
  2538  000770  0101               	movlb	1	; () banked
  2539  000772  6F06               	movwf	___ftdiv@cntr& (0+255),b
  2540  000774  D000               	goto	l3222
  2541  000776                     l3222:
  2542                           
  2543                           ; BSR set to: 1
  2544  000776  0101               	movlb	1	; () banked
  2545  000778  90D8               	bcf	status,0,c
  2546  00077A  3707               	rlcf	___ftdiv@f3& (0+255),f,b
  2547  00077C  3708               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  2548  00077E  3709               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  2549                           
  2550                           ; BSR set to: 1
  2551  000780  0101               	movlb	1	; () banked
  2552  000782  5103               	movf	___ftdiv@f2& (0+255),w,b
  2553  000784  0101               	movlb	1	; () banked
  2554  000786  5D00               	subwf	___ftdiv@f1& (0+255),w,b
  2555  000788  0101               	movlb	1	; () banked
  2556  00078A  5104               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2557  00078C  0101               	movlb	1	; () banked
  2558  00078E  5901               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  2559  000790  0101               	movlb	1	; () banked
  2560  000792  5105               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2561  000794  0101               	movlb	1	; () banked
  2562  000796  5902               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  2563  000798  A0D8               	btfss	status,0,c
  2564  00079A  D00E               	goto	l966
  2565                           
  2566                           ; BSR set to: 1
  2567  00079C  0101               	movlb	1	; () banked
  2568  00079E  5103               	movf	___ftdiv@f2& (0+255),w,b
  2569  0007A0  0101               	movlb	1	; () banked
  2570  0007A2  5F00               	subwf	___ftdiv@f1& (0+255),f,b
  2571  0007A4  0101               	movlb	1	; () banked
  2572  0007A6  5104               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2573  0007A8  0101               	movlb	1	; () banked
  2574  0007AA  5B01               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  2575  0007AC  0101               	movlb	1	; () banked
  2576  0007AE  5105               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2577  0007B0  0101               	movlb	1	; () banked
  2578  0007B2  5B02               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  2579                           
  2580                           ; BSR set to: 1
  2581  0007B4  0101               	movlb	1	; () banked
  2582  0007B6  8107               	bsf	___ftdiv@f3& (0+255),0,b
  2583  0007B8                     l966:
  2584                           
  2585                           ; BSR set to: 1
  2586  0007B8  0101               	movlb	1	; () banked
  2587  0007BA  90D8               	bcf	status,0,c
  2588  0007BC  3700               	rlcf	___ftdiv@f1& (0+255),f,b
  2589  0007BE  3701               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  2590  0007C0  3702               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  2591                           
  2592                           ; BSR set to: 1
  2593  0007C2  0101               	movlb	1	; () banked
  2594  0007C4  2F06               	decfsz	___ftdiv@cntr& (0+255),f,b
  2595  0007C6  D7D7               	goto	l3222
  2596  0007C8  D000               	goto	l3232
  2597  0007CA                     l3232:
  2598                           
  2599                           ; BSR set to: 1
  2600  0007CA  C107  F019         	movff	___ftdiv@f3,___ftpack@arg
  2601  0007CE  C108  F01A         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2602  0007D2  C109  F01B         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2603  0007D6  C10A  F01C         	movff	___ftdiv@exp,___ftpack@exp
  2604  0007DA  C10B  F01D         	movff	___ftdiv@sign,___ftpack@sign
  2605  0007DE  EC2D  F006         	call	___ftpack	;wreg free
  2606  0007E2  C019  F100         	movff	?___ftpack,?___ftdiv
  2607  0007E6  C01A  F101         	movff	?___ftpack+1,?___ftdiv+1
  2608  0007EA  C01B  F102         	movff	?___ftpack+2,?___ftdiv+2
  2609  0007EE  0012               	return	
  2610  0007F0  0012               	return		;funcret
  2611  0007F2                     __end_of___ftdiv:
  2612                           	opt stack 0
  2613                           tblptru	equ	0xFF8
  2614                           tblptrh	equ	0xFF7
  2615                           tblptrl	equ	0xFF6
  2616                           tablat	equ	0xFF5
  2617                           prodh	equ	0xFF4
  2618                           prodl	equ	0xFF3
  2619                           intcon	equ	0xFF2
  2620                           postinc0	equ	0xFEE
  2621                           wreg	equ	0xFE8
  2622                           postdec1	equ	0xFE5
  2623                           fsr1l	equ	0xFE1
  2624                           indf2	equ	0xFDF
  2625                           postinc2	equ	0xFDE
  2626                           fsr2h	equ	0xFDA
  2627                           fsr2l	equ	0xFD9
  2628                           status	equ	0xFD8
  2629                           
  2630 ;; *************** function ___ftpack *****************
  2631 ;; Defined at:
  2632 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  2633 ;; Parameters:    Size  Location     Type
  2634 ;;  arg             3   24[COMRAM] unsigned um
  2635 ;;  exp             1   27[COMRAM] unsigned char 
  2636 ;;  sign            1   28[COMRAM] unsigned char 
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;		None
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  3   24[COMRAM] float 
  2641 ;; Registers used:
  2642 ;;		wreg, status,2, status,0
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2648 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2650 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2651 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2652 ;;Total ram usage:        8 bytes
  2653 ;; Hardware stack levels used:    1
  2654 ;; Hardware stack levels required when called:    3
  2655 ;; This function calls:
  2656 ;;		Nothing
  2657 ;; This function is called by:
  2658 ;;		___ftdiv
  2659 ;;		___ftmul
  2660 ;;		___lwtoft
  2661 ;; This function uses a non-reentrant model
  2662 ;;
  2663                           
  2664                           	psect	text16
  2665  000C5A                     __ptext16:
  2666                           	opt stack 0
  2667  000C5A                     ___ftpack:
  2668                           	opt stack 24
  2669                           
  2670                           ;incstack = 0
  2671  000C5A  501C               	movf	___ftpack@exp,w,c
  2672  000C5C  B4D8               	btfsc	status,2,c
  2673  000C5E  D005               	goto	l3104
  2674  000C60  5019               	movf	___ftpack@arg,w,c
  2675  000C62  101A               	iorwf	___ftpack@arg+1,w,c
  2676  000C64  101B               	iorwf	___ftpack@arg+2,w,c
  2677  000C66  A4D8               	btfss	status,2,c
  2678  000C68  D00E               	goto	l3110
  2679  000C6A                     l3104:
  2680  000C6A  0E00               	movlw	0
  2681  000C6C  6E19               	movwf	?___ftpack,c
  2682  000C6E  0E00               	movlw	0
  2683  000C70  6E1A               	movwf	?___ftpack+1,c
  2684  000C72  0E00               	movlw	0
  2685  000C74  6E1B               	movwf	?___ftpack+2,c
  2686  000C76  0012               	return	
  2687  000C78  D006               	goto	l3110
  2688  000C7A                     l3108:
  2689  000C7A  2A1C               	incf	___ftpack@exp,f,c
  2690  000C7C  90D8               	bcf	status,0,c
  2691  000C7E  321B               	rrcf	___ftpack@arg+2,f,c
  2692  000C80  321A               	rrcf	___ftpack@arg+1,f,c
  2693  000C82  3219               	rrcf	___ftpack@arg,f,c
  2694  000C84  D000               	goto	l3110
  2695  000C86                     l3110:
  2696  000C86  0E00               	movlw	0
  2697  000C88  1419               	andwf	___ftpack@arg,w,c
  2698  000C8A  6E1E               	movwf	??___ftpack& (0+255),c
  2699  000C8C  0E00               	movlw	0
  2700  000C8E  141A               	andwf	___ftpack@arg+1,w,c
  2701  000C90  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  2702  000C92  0EFE               	movlw	254
  2703  000C94  141B               	andwf	___ftpack@arg+2,w,c
  2704  000C96  6E20               	movwf	(??___ftpack+2)& (0+255),c
  2705  000C98  501E               	movf	??___ftpack,w,c
  2706  000C9A  101F               	iorwf	??___ftpack+1,w,c
  2707  000C9C  1020               	iorwf	??___ftpack+2,w,c
  2708  000C9E  B4D8               	btfsc	status,2,c
  2709  000CA0  D00E               	goto	l3116
  2710  000CA2  D7EB               	goto	l3108
  2711  000CA4  D00C               	goto	l3116
  2712  000CA6                     l3112:
  2713  000CA6  2A1C               	incf	___ftpack@exp,f,c
  2714  000CA8  0E01               	movlw	1
  2715  000CAA  2619               	addwf	___ftpack@arg,f,c
  2716  000CAC  0E00               	movlw	0
  2717  000CAE  221A               	addwfc	___ftpack@arg+1,f,c
  2718  000CB0  0E00               	movlw	0
  2719  000CB2  221B               	addwfc	___ftpack@arg+2,f,c
  2720  000CB4  90D8               	bcf	status,0,c
  2721  000CB6  321B               	rrcf	___ftpack@arg+2,f,c
  2722  000CB8  321A               	rrcf	___ftpack@arg+1,f,c
  2723  000CBA  3219               	rrcf	___ftpack@arg,f,c
  2724  000CBC  D000               	goto	l3116
  2725  000CBE                     l3116:
  2726  000CBE  0E00               	movlw	0
  2727  000CC0  1419               	andwf	___ftpack@arg,w,c
  2728  000CC2  6E1E               	movwf	??___ftpack& (0+255),c
  2729  000CC4  0E00               	movlw	0
  2730  000CC6  141A               	andwf	___ftpack@arg+1,w,c
  2731  000CC8  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  2732  000CCA  0EFF               	movlw	255
  2733  000CCC  141B               	andwf	___ftpack@arg+2,w,c
  2734  000CCE  6E20               	movwf	(??___ftpack+2)& (0+255),c
  2735  000CD0  501E               	movf	??___ftpack,w,c
  2736  000CD2  101F               	iorwf	??___ftpack+1,w,c
  2737  000CD4  1020               	iorwf	??___ftpack+2,w,c
  2738  000CD6  B4D8               	btfsc	status,2,c
  2739  000CD8  D008               	goto	l3120
  2740  000CDA  D7E5               	goto	l3112
  2741  000CDC  D006               	goto	l3120
  2742  000CDE                     l3118:
  2743  000CDE  061C               	decf	___ftpack@exp,f,c
  2744  000CE0  90D8               	bcf	status,0,c
  2745  000CE2  3619               	rlcf	___ftpack@arg,f,c
  2746  000CE4  361A               	rlcf	___ftpack@arg+1,f,c
  2747  000CE6  361B               	rlcf	___ftpack@arg+2,f,c
  2748  000CE8  D000               	goto	l3120
  2749  000CEA                     l3120:
  2750  000CEA  BE1A               	btfsc	___ftpack@arg+1,7,c
  2751  000CEC  D004               	goto	l902
  2752  000CEE  0E02               	movlw	2
  2753  000CF0  601C               	cpfslt	___ftpack@exp,c
  2754  000CF2  D7F5               	goto	l3118
  2755  000CF4  D000               	goto	l902
  2756  000CF6                     l902:
  2757  000CF6  B01C               	btfsc	___ftpack@exp,0,c
  2758  000CF8  D002               	goto	l3126
  2759  000CFA  9E1A               	bcf	___ftpack@arg+1,7,c
  2760  000CFC  D000               	goto	l3126
  2761  000CFE                     l3126:
  2762  000CFE  90D8               	bcf	status,0,c
  2763  000D00  321C               	rrcf	___ftpack@exp,f,c
  2764  000D02  501C               	movf	___ftpack@exp,w,c
  2765  000D04  121B               	iorwf	___ftpack@arg+2,f,c
  2766  000D06  501D               	movf	___ftpack@sign,w,c
  2767  000D08  B4D8               	btfsc	status,2,c
  2768  000D0A  D002               	goto	l3132
  2769  000D0C  8E1B               	bsf	___ftpack@arg+2,7,c
  2770  000D0E  D000               	goto	l3132
  2771  000D10                     l3132:
  2772  000D10  C019  F019         	movff	___ftpack@arg,?___ftpack
  2773  000D14  C01A  F01A         	movff	___ftpack@arg+1,?___ftpack+1
  2774  000D18  C01B  F01B         	movff	___ftpack@arg+2,?___ftpack+2
  2775  000D1C  0012               	return	
  2776  000D1E  0012               	return		;funcret
  2777  000D20                     __end_of___ftpack:
  2778                           	opt stack 0
  2779                           tblptru	equ	0xFF8
  2780                           tblptrh	equ	0xFF7
  2781                           tblptrl	equ	0xFF6
  2782                           tablat	equ	0xFF5
  2783                           prodh	equ	0xFF4
  2784                           prodl	equ	0xFF3
  2785                           intcon	equ	0xFF2
  2786                           postinc0	equ	0xFEE
  2787                           wreg	equ	0xFE8
  2788                           postdec1	equ	0xFE5
  2789                           fsr1l	equ	0xFE1
  2790                           indf2	equ	0xFDF
  2791                           postinc2	equ	0xFDE
  2792                           fsr2h	equ	0xFDA
  2793                           fsr2l	equ	0xFD9
  2794                           status	equ	0xFD8
  2795                           
  2796 ;; *************** function _ReadADC *****************
  2797 ;; Defined at:
  2798 ;;		line 24 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  2799 ;; Parameters:    Size  Location     Type
  2800 ;;		None
  2801 ;; Auto vars:     Size  Location     Type
  2802 ;;		None
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  2   24[COMRAM] int 
  2805 ;; Registers used:
  2806 ;;		wreg, status,2
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2812 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2814 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2815 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2816 ;;Total ram usage:        4 bytes
  2817 ;; Hardware stack levels used:    1
  2818 ;; Hardware stack levels required when called:    3
  2819 ;; This function calls:
  2820 ;;		Nothing
  2821 ;; This function is called by:
  2822 ;;		_GetADC6
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           
  2826                           	psect	text17
  2827  001642                     __ptext17:
  2828                           	opt stack 0
  2829  001642                     _ReadADC:
  2830                           	opt stack 25
  2831                           
  2832                           ;incstack = 0
  2833  001642  50C4               	movf	4036,w,c	;volatile
  2834  001644  6E1B               	movwf	??_ReadADC& (0+255),c
  2835  001646  50C3               	movf	4035,w,c	;volatile
  2836  001648  6E19               	movwf	?_ReadADC,c
  2837  00164A  C01B  F01A         	movff	??_ReadADC,?_ReadADC+1
  2838  00164E  0012               	return	
  2839  001650  0012               	return		;funcret
  2840  001652                     __end_of_ReadADC:
  2841                           	opt stack 0
  2842                           tblptru	equ	0xFF8
  2843                           tblptrh	equ	0xFF7
  2844                           tblptrl	equ	0xFF6
  2845                           tablat	equ	0xFF5
  2846                           prodh	equ	0xFF4
  2847                           prodl	equ	0xFF3
  2848                           intcon	equ	0xFF2
  2849                           postinc0	equ	0xFEE
  2850                           wreg	equ	0xFE8
  2851                           postdec1	equ	0xFE5
  2852                           fsr1l	equ	0xFE1
  2853                           indf2	equ	0xFDF
  2854                           postinc2	equ	0xFDE
  2855                           fsr2h	equ	0xFDA
  2856                           fsr2l	equ	0xFD9
  2857                           status	equ	0xFD8
  2858                           
  2859 ;; *************** function _ConvertADC *****************
  2860 ;; Defined at:
  2861 ;;		line 22 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;		None
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;		None
  2866 ;; Return value:  Size  Location     Type
  2867 ;;		None               void
  2868 ;; Registers used:
  2869 ;;		None
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2879 ;;Total ram usage:        0 bytes
  2880 ;; Hardware stack levels used:    1
  2881 ;; Hardware stack levels required when called:    3
  2882 ;; This function calls:
  2883 ;;		Nothing
  2884 ;; This function is called by:
  2885 ;;		_GetADC6
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           	psect	text18
  2890  001660                     __ptext18:
  2891                           	opt stack 0
  2892  001660                     _ConvertADC:
  2893                           	opt stack 25
  2894                           
  2895                           ;incstack = 0
  2896  001660  82C2               	bsf	4034,1,c	;volatile
  2897  001662  0012               	return		;funcret
  2898  001664                     __end_of_ConvertADC:
  2899                           	opt stack 0
  2900                           tblptru	equ	0xFF8
  2901                           tblptrh	equ	0xFF7
  2902                           tblptrl	equ	0xFF6
  2903                           tablat	equ	0xFF5
  2904                           prodh	equ	0xFF4
  2905                           prodl	equ	0xFF3
  2906                           intcon	equ	0xFF2
  2907                           postinc0	equ	0xFEE
  2908                           wreg	equ	0xFE8
  2909                           postdec1	equ	0xFE5
  2910                           fsr1l	equ	0xFE1
  2911                           indf2	equ	0xFDF
  2912                           postinc2	equ	0xFDE
  2913                           fsr2h	equ	0xFDA
  2914                           fsr2l	equ	0xFD9
  2915                           status	equ	0xFD8
  2916                           
  2917 ;; *************** function _BusyADC *****************
  2918 ;; Defined at:
  2919 ;;		line 26 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;		None
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;		None
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  1    wreg      unsigned char 
  2926 ;; Registers used:
  2927 ;;		wreg
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2937 ;;Total ram usage:        0 bytes
  2938 ;; Hardware stack levels used:    1
  2939 ;; Hardware stack levels required when called:    3
  2940 ;; This function calls:
  2941 ;;		Nothing
  2942 ;; This function is called by:
  2943 ;;		_GetADC6
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947                           	psect	text19
  2948  001652                     __ptext19:
  2949                           	opt stack 0
  2950  001652                     _BusyADC:
  2951                           	opt stack 25
  2952                           
  2953                           ;incstack = 0
  2954  001652  A2C2               	btfss	4034,1,c	;volatile
  2955  001654  D002               	goto	u370
  2956  001656  0E01               	movlw	1
  2957  001658  0012               	return	
  2958  00165A                     u370:
  2959  00165A  0E00               	movlw	0
  2960  00165C  0012               	return	
  2961  00165E  0012               	return		;funcret
  2962  001660                     __end_of_BusyADC:
  2963                           	opt stack 0
  2964                           tblptru	equ	0xFF8
  2965                           tblptrh	equ	0xFF7
  2966                           tblptrl	equ	0xFF6
  2967                           tablat	equ	0xFF5
  2968                           prodh	equ	0xFF4
  2969                           prodl	equ	0xFF3
  2970                           intcon	equ	0xFF2
  2971                           postinc0	equ	0xFEE
  2972                           wreg	equ	0xFE8
  2973                           postdec1	equ	0xFE5
  2974                           fsr1l	equ	0xFE1
  2975                           indf2	equ	0xFDF
  2976                           postinc2	equ	0xFDE
  2977                           fsr2h	equ	0xFDA
  2978                           fsr2l	equ	0xFD9
  2979                           status	equ	0xFD8
  2980                           
  2981 ;; *************** function _RS485_Init *****************
  2982 ;; Defined at:
  2983 ;;		line 47 in file "_01_USER/My_USART.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;		None
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;		None
  2988 ;; Return value:  Size  Location     Type
  2989 ;;		None               void
  2990 ;; Registers used:
  2991 ;;		wreg, status,2, cstack
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3001 ;;Total ram usage:        0 bytes
  3002 ;; Hardware stack levels used:    1
  3003 ;; Hardware stack levels required when called:    4
  3004 ;; This function calls:
  3005 ;;		_Open1USART
  3006 ;; This function is called by:
  3007 ;;		_main
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           
  3011                           	psect	text20
  3012  0015F2                     __ptext20:
  3013                           	opt stack 0
  3014  0015F2                     _RS485_Init:
  3015                           	opt stack 26
  3016                           
  3017                           ;My_USART.c: 49: Open1USART( 0b01111111 &
  3018                           ;My_USART.c: 50: 0b11111111 &
  3019                           ;My_USART.c: 51: 0b11111110 &
  3020                           ;My_USART.c: 52: 0b11111101 &
  3021                           ;My_USART.c: 53: 0b11111111 &
  3022                           ;My_USART.c: 54: 0b11101111
  3023                           ;My_USART.c: 55: ,
  3024                           ;My_USART.c: 56: 12
  3025                           ;My_USART.c: 57: );
  3026                           
  3027                           ;incstack = 0
  3028  0015F2  0E00               	movlw	0
  3029  0015F4  6E1A               	movwf	Open1USART@spbrg+1,c
  3030  0015F6  0E0C               	movlw	12
  3031  0015F8  6E19               	movwf	Open1USART@spbrg,c
  3032  0015FA  0E6C               	movlw	108
  3033  0015FC  EC16  F008         	call	_Open1USART
  3034                           
  3035                           ;My_USART.c: 59: TRISC7 = 1;
  3036  001600  8E94               	bsf	3988,7,c	;volatile
  3037                           
  3038                           ;My_USART.c: 60: TRISC6 = 0;
  3039  001602  9C94               	bcf	3988,6,c	;volatile
  3040                           
  3041                           ;My_USART.c: 61: TRISC0 = 0;
  3042  001604  9094               	bcf	3988,0,c	;volatile
  3043                           
  3044                           ;My_USART.c: 62: RC0 = 1;
  3045  001606  8082               	bsf	3970,0,c	;volatile
  3046  001608  0012               	return		;funcret
  3047  00160A                     __end_of_RS485_Init:
  3048                           	opt stack 0
  3049                           tblptru	equ	0xFF8
  3050                           tblptrh	equ	0xFF7
  3051                           tblptrl	equ	0xFF6
  3052                           tablat	equ	0xFF5
  3053                           prodh	equ	0xFF4
  3054                           prodl	equ	0xFF3
  3055                           intcon	equ	0xFF2
  3056                           postinc0	equ	0xFEE
  3057                           wreg	equ	0xFE8
  3058                           postdec1	equ	0xFE5
  3059                           fsr1l	equ	0xFE1
  3060                           indf2	equ	0xFDF
  3061                           postinc2	equ	0xFDE
  3062                           fsr2h	equ	0xFDA
  3063                           fsr2l	equ	0xFD9
  3064                           status	equ	0xFD8
  3065                           
  3066 ;; *************** function _Open1USART *****************
  3067 ;; Defined at:
  3068 ;;		line 124 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1open.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;  config          1    wreg     unsigned char 
  3071 ;;  spbrg           2   24[COMRAM] unsigned int 
  3072 ;; Auto vars:     Size  Location     Type
  3073 ;;  config          1   26[COMRAM] unsigned char 
  3074 ;; Return value:  Size  Location     Type
  3075 ;;		None               void
  3076 ;; Registers used:
  3077 ;;		wreg, status,2
  3078 ;; Tracked objects:
  3079 ;;		On entry : 0/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3083 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3084 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3086 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3087 ;;Total ram usage:        3 bytes
  3088 ;; Hardware stack levels used:    1
  3089 ;; Hardware stack levels required when called:    3
  3090 ;; This function calls:
  3091 ;;		Nothing
  3092 ;; This function is called by:
  3093 ;;		_RS485_Init
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           	psect	text21
  3098  00102C                     __ptext21:
  3099                           	opt stack 0
  3100  00102C                     _Open1USART:
  3101                           	opt stack 26
  3102                           
  3103                           ;incstack = 0
  3104                           ;Open1USART@config stored from wreg
  3105  00102C  6E1B               	movwf	Open1USART@config,c
  3106  00102E  0E00               	movlw	0
  3107  001030  6EAC               	movwf	4012,c	;volatile
  3108  001032  0E00               	movlw	0
  3109  001034  6EAB               	movwf	4011,c	;volatile
  3110  001036  A01B               	btfss	Open1USART@config,0,c
  3111  001038  D002               	goto	l2580
  3112  00103A  88AC               	bsf	4012,4,c	;volatile
  3113  00103C  D000               	goto	l2580
  3114  00103E                     l2580:
  3115  00103E  A21B               	btfss	Open1USART@config,1,c
  3116  001040  D003               	goto	l2584
  3117  001042  8CAC               	bsf	4012,6,c	;volatile
  3118  001044  8CAB               	bsf	4011,6,c	;volatile
  3119  001046  D000               	goto	l2584
  3120  001048                     l2584:
  3121  001048  A41B               	btfss	Open1USART@config,2,c
  3122  00104A  D002               	goto	l2588
  3123  00104C  8EAC               	bsf	4012,7,c	;volatile
  3124  00104E  D000               	goto	l2588
  3125  001050                     l2588:
  3126  001050  A61B               	btfss	Open1USART@config,3,c
  3127  001052  D002               	goto	l572
  3128  001054  88AB               	bsf	4011,4,c	;volatile
  3129  001056  D002               	goto	l2592
  3130  001058                     l572:
  3131  001058  8AAB               	bsf	4011,5,c	;volatile
  3132  00105A  D000               	goto	l2592
  3133  00105C                     l2592:
  3134  00105C  A81B               	btfss	Open1USART@config,4,c
  3135  00105E  D002               	goto	l2596
  3136  001060  84AC               	bsf	4012,2,c	;volatile
  3137  001062  D000               	goto	l2596
  3138  001064                     l2596:
  3139  001064  AA1B               	btfss	Open1USART@config,5,c
  3140  001066  D002               	goto	l2600
  3141  001068  86AB               	bsf	4011,3,c	;volatile
  3142  00106A  D000               	goto	l2600
  3143  00106C                     l2600:
  3144  00106C  AC1B               	btfss	Open1USART@config,6,c
  3145  00106E  D002               	goto	l576
  3146  001070  8A9D               	bsf	3997,5,c	;volatile
  3147  001072  D002               	goto	l2604
  3148  001074                     l576:
  3149  001074  9A9D               	bcf	3997,5,c	;volatile
  3150  001076  D000               	goto	l2604
  3151  001078                     l2604:
  3152  001078  AE1B               	btfss	Open1USART@config,7,c
  3153  00107A  D002               	goto	l578
  3154  00107C  889D               	bsf	3997,4,c	;volatile
  3155  00107E  D001               	goto	l579
  3156  001080                     l578:
  3157  001080  989D               	bcf	3997,4,c	;volatile
  3158  001082                     l579:
  3159  001082  C019  FFAF         	movff	Open1USART@spbrg,4015	;volatile
  3160  001086  501A               	movf	Open1USART@spbrg+1,w,c
  3161  001088  6ED4               	movwf	4052,c	;volatile
  3162  00108A  8AAC               	bsf	4012,5,c	;volatile
  3163  00108C  8EAB               	bsf	4011,7,c	;volatile
  3164  00108E  0012               	return		;funcret
  3165  001090                     __end_of_Open1USART:
  3166                           	opt stack 0
  3167                           tblptru	equ	0xFF8
  3168                           tblptrh	equ	0xFF7
  3169                           tblptrl	equ	0xFF6
  3170                           tablat	equ	0xFF5
  3171                           prodh	equ	0xFF4
  3172                           prodl	equ	0xFF3
  3173                           intcon	equ	0xFF2
  3174                           postinc0	equ	0xFEE
  3175                           wreg	equ	0xFE8
  3176                           postdec1	equ	0xFE5
  3177                           fsr1l	equ	0xFE1
  3178                           indf2	equ	0xFDF
  3179                           postinc2	equ	0xFDE
  3180                           fsr2h	equ	0xFDA
  3181                           fsr2l	equ	0xFD9
  3182                           status	equ	0xFD8
  3183                           
  3184 ;; *************** function _ManageMessage *****************
  3185 ;; Defined at:
  3186 ;;		line 50 in file "_01_USER/Run.c"
  3187 ;; Parameters:    Size  Location     Type
  3188 ;;		None
  3189 ;; Auto vars:     Size  Location     Type
  3190 ;;		None
  3191 ;; Return value:  Size  Location     Type
  3192 ;;		None               void
  3193 ;; Registers used:
  3194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3195 ;; Tracked objects:
  3196 ;;		On entry : 0/0
  3197 ;;		On exit  : 0/0
  3198 ;;		Unchanged: 0/0
  3199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3204 ;;Total ram usage:        0 bytes
  3205 ;; Hardware stack levels used:    1
  3206 ;; Hardware stack levels required when called:    6
  3207 ;; This function calls:
  3208 ;;		_Key_ManageMessage
  3209 ;;		_RS485_ManageMessage
  3210 ;; This function is called by:
  3211 ;;		_main
  3212 ;; This function uses a non-reentrant model
  3213 ;;
  3214                           
  3215                           	psect	text22
  3216  00160A                     __ptext22:
  3217                           	opt stack 0
  3218  00160A                     _ManageMessage:
  3219                           	opt stack 24
  3220                           
  3221                           ;Run.c: 52: Key_ManageMessage();
  3222                           
  3223                           ;incstack = 0
  3224  00160A  ECBA  F005         	call	_Key_ManageMessage	;wreg free
  3225                           
  3226                           ;Run.c: 53: RS485_ManageMessage(ga_RS485_ReceiveBuff,10);
  3227  00160E  0EDA               	movlw	low _ga_RS485_ReceiveBuff
  3228  001610  6E29               	movwf	RS485_ManageMessage@DataBuff,c
  3229  001612  0E00               	movlw	high _ga_RS485_ReceiveBuff
  3230  001614  6E2A               	movwf	RS485_ManageMessage@DataBuff+1,c
  3231  001616  0E0A               	movlw	10
  3232  001618  6E2B               	movwf	RS485_ManageMessage@date_lenth,c
  3233  00161A  ECB9  F000         	call	_RS485_ManageMessage	;wreg free
  3234  00161E  0012               	return		;funcret
  3235  001620                     __end_of_ManageMessage:
  3236                           	opt stack 0
  3237                           tblptru	equ	0xFF8
  3238                           tblptrh	equ	0xFF7
  3239                           tblptrl	equ	0xFF6
  3240                           tablat	equ	0xFF5
  3241                           prodh	equ	0xFF4
  3242                           prodl	equ	0xFF3
  3243                           intcon	equ	0xFF2
  3244                           postinc0	equ	0xFEE
  3245                           wreg	equ	0xFE8
  3246                           postdec1	equ	0xFE5
  3247                           fsr1l	equ	0xFE1
  3248                           indf2	equ	0xFDF
  3249                           postinc2	equ	0xFDE
  3250                           fsr2h	equ	0xFDA
  3251                           fsr2l	equ	0xFD9
  3252                           status	equ	0xFD8
  3253                           
  3254 ;; *************** function _RS485_ManageMessage *****************
  3255 ;; Defined at:
  3256 ;;		line 114 in file "_01_USER/My_USART.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;  DataBuff        2   40[COMRAM] PTR unsigned char 
  3259 ;;		 -> ga_RS485_ReceiveBuff(10), 
  3260 ;;  date_lenth      1   42[COMRAM] unsigned char 
  3261 ;; Auto vars:     Size  Location     Type
  3262 ;;  from_dress      1    7[BANK1 ] unsigned char 
  3263 ;;  CRC_L           1    6[BANK1 ] unsigned char 
  3264 ;;  CRC_H           1    5[BANK1 ] unsigned char 
  3265 ;; Return value:  Size  Location     Type
  3266 ;;                  1    wreg      unsigned char 
  3267 ;; Registers used:
  3268 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3269 ;; Tracked objects:
  3270 ;;		On entry : 0/0
  3271 ;;		On exit  : 0/0
  3272 ;;		Unchanged: 0/0
  3273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3274 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3275 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3276 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3277 ;;      Totals:         3       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3278 ;;Total ram usage:       11 bytes
  3279 ;; Hardware stack levels used:    1
  3280 ;; Hardware stack levels required when called:    5
  3281 ;; This function calls:
  3282 ;;		_VerifyCRC
  3283 ;; This function is called by:
  3284 ;;		_ManageMessage
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288                           	psect	text23
  3289  000172                     __ptext23:
  3290                           	opt stack 0
  3291  000172                     _RS485_ManageMessage:
  3292                           	opt stack 24
  3293                           
  3294                           ;My_USART.c: 116: unsigned char CRC_H,CRC_L,from_dress;
  3295                           ;My_USART.c: 117: if( g_RS485_Receive_Flag == 1 )
  3296                           
  3297                           ;incstack = 0
  3298  000172  043D               	decf	_g_RS485_Receive_Flag,w,c
  3299  000174  A4D8               	btfss	status,2,c
  3300  000176  0012               	return	
  3301                           
  3302                           ;My_USART.c: 118: {
  3303                           ;My_USART.c: 121: if( DataBuff [date_lenth-1] != 0xaa) { g_RS485_Receive_Flag = 0; retur
      +                          n 1;}
  3304  000178  0EFF               	movlw	255
  3305  00017A  0101               	movlb	1	; () banked
  3306  00017C  6F00               	movwf	??_RS485_ManageMessage& (0+255),b
  3307  00017E  0EFF               	movlw	255
  3308  000180  0101               	movlb	1	; () banked
  3309  000182  6F01               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  3310  000184  502B               	movf	RS485_ManageMessage@date_lenth,w,c
  3311  000186  0101               	movlb	1	; () banked
  3312  000188  6F02               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  3313  00018A  6B03               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  3314  00018C  0101               	movlb	1	; () banked
  3315  00018E  5100               	movf	??_RS485_ManageMessage& (0+255),w,b
  3316  000190  0101               	movlb	1	; () banked
  3317  000192  2702               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  3318  000194  0101               	movlb	1	; () banked
  3319  000196  5101               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  3320  000198  0101               	movlb	1	; () banked
  3321  00019A  2303               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  3322  00019C  0101               	movlb	1	; () banked
  3323  00019E  5102               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  3324  0001A0  2429               	addwf	RS485_ManageMessage@DataBuff,w,c
  3325  0001A2  6ED9               	movwf	fsr2l,c
  3326  0001A4  0101               	movlb	1	; () banked
  3327  0001A6  5103               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  3328  0001A8  202A               	addwfc	RS485_ManageMessage@DataBuff+1,w,c
  3329  0001AA  6EDA               	movwf	fsr2h,c
  3330  0001AC  0EAA               	movlw	170
  3331  0001AE  18DE               	xorwf	postinc2,w,c
  3332  0001B0  B4D8               	btfsc	status,2,c
  3333  0001B2  D003               	goto	l3308
  3334                           
  3335                           ; BSR set to: 1
  3336  0001B4  0E00               	movlw	0
  3337  0001B6  6E3D               	movwf	_g_RS485_Receive_Flag,c
  3338                           
  3339                           ; BSR set to: 1
  3340                           ;	Return value of _RS485_ManageMessage is never used
  3341  0001B8  0012               	return	
  3342  0001BA                     l3308:
  3343                           
  3344                           ; BSR set to: 1
  3345                           ;My_USART.c: 124: CRC_H = DataBuff[1];
  3346  0001BA  EE20 F001          	lfsr	2,1
  3347  0001BE  5029               	movf	RS485_ManageMessage@DataBuff,w,c
  3348  0001C0  26D9               	addwf	fsr2l,f,c
  3349  0001C2  502A               	movf	RS485_ManageMessage@DataBuff+1,w,c
  3350  0001C4  22DA               	addwfc	fsr2h,f,c
  3351  0001C6  50DF               	movf	indf2,w,c
  3352  0001C8  0101               	movlb	1	; () banked
  3353  0001CA  6F05               	movwf	RS485_ManageMessage@CRC_H& (0+255),b
  3354                           
  3355                           ; BSR set to: 1
  3356                           ;My_USART.c: 125: CRC_L = DataBuff[0];
  3357  0001CC  C029  FFD9         	movff	RS485_ManageMessage@DataBuff,fsr2l
  3358  0001D0  C02A  FFDA         	movff	RS485_ManageMessage@DataBuff+1,fsr2h
  3359  0001D4  50DF               	movf	indf2,w,c
  3360  0001D6  0101               	movlb	1	; () banked
  3361  0001D8  6F06               	movwf	RS485_ManageMessage@CRC_L& (0+255),b
  3362                           
  3363                           ; BSR set to: 1
  3364                           ;My_USART.c: 126: VerifyCRC(DataBuff,10);
  3365  0001DA  C029  F026         	movff	RS485_ManageMessage@DataBuff,VerifyCRC@DataBuff
  3366  0001DE  C02A  F027         	movff	RS485_ManageMessage@DataBuff+1,VerifyCRC@DataBuff+1
  3367  0001E2  0E0A               	movlw	10
  3368  0001E4  6E28               	movwf	VerifyCRC@date_lenth,c
  3369  0001E6  ECF9  F003         	call	_VerifyCRC	;wreg free
  3370                           
  3371                           ;My_USART.c: 127: if( DataBuff[1] != CRC_H ) { g_RS485_Receive_Flag = 0; return 2 ;}
  3372  0001EA  EE20 F001          	lfsr	2,1
  3373  0001EE  5029               	movf	RS485_ManageMessage@DataBuff,w,c
  3374  0001F0  26D9               	addwf	fsr2l,f,c
  3375  0001F2  502A               	movf	RS485_ManageMessage@DataBuff+1,w,c
  3376  0001F4  22DA               	addwfc	fsr2h,f,c
  3377  0001F6  0101               	movlb	1	; () banked
  3378  0001F8  5105               	movf	RS485_ManageMessage@CRC_H& (0+255),w,b
  3379  0001FA  18DE               	xorwf	postinc2,w,c
  3380  0001FC  B4D8               	btfsc	status,2,c
  3381  0001FE  D003               	goto	l3320
  3382                           
  3383                           ; BSR set to: 1
  3384  000200  0E00               	movlw	0
  3385  000202  6E3D               	movwf	_g_RS485_Receive_Flag,c
  3386                           
  3387                           ; BSR set to: 1
  3388                           ;	Return value of _RS485_ManageMessage is never used
  3389  000204  0012               	return	
  3390  000206                     l3320:
  3391                           
  3392                           ; BSR set to: 1
  3393                           ;My_USART.c: 128: if( DataBuff[0] != CRC_L ) { g_RS485_Receive_Flag = 0; return 2 ;}
  3394  000206  C029  FFD9         	movff	RS485_ManageMessage@DataBuff,fsr2l
  3395  00020A  C02A  FFDA         	movff	RS485_ManageMessage@DataBuff+1,fsr2h
  3396  00020E  0101               	movlb	1	; () banked
  3397  000210  5106               	movf	RS485_ManageMessage@CRC_L& (0+255),w,b
  3398  000212  18DE               	xorwf	postinc2,w,c
  3399  000214  B4D8               	btfsc	status,2,c
  3400  000216  D003               	goto	l3326
  3401                           
  3402                           ; BSR set to: 1
  3403  000218  0E00               	movlw	0
  3404  00021A  6E3D               	movwf	_g_RS485_Receive_Flag,c
  3405                           
  3406                           ; BSR set to: 1
  3407                           ;	Return value of _RS485_ManageMessage is never used
  3408  00021C  0012               	return	
  3409  00021E                     l3326:
  3410                           
  3411                           ; BSR set to: 1
  3412                           ;My_USART.c: 131: if( ( DataBuff[date_lenth - 2] != 0x01 ) && ( DataBuff[date_lenth - 2]
      +                           != 0xff) ) { g_RS485_Receive_Flag = 0; return 3;}
  3413  00021E  0EFE               	movlw	254
  3414  000220  0101               	movlb	1	; () banked
  3415  000222  6F00               	movwf	??_RS485_ManageMessage& (0+255),b
  3416  000224  0EFF               	movlw	255
  3417  000226  0101               	movlb	1	; () banked
  3418  000228  6F01               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  3419  00022A  502B               	movf	RS485_ManageMessage@date_lenth,w,c
  3420  00022C  0101               	movlb	1	; () banked
  3421  00022E  6F02               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  3422  000230  6B03               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  3423  000232  0101               	movlb	1	; () banked
  3424  000234  5100               	movf	??_RS485_ManageMessage& (0+255),w,b
  3425  000236  0101               	movlb	1	; () banked
  3426  000238  2702               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  3427  00023A  0101               	movlb	1	; () banked
  3428  00023C  5101               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  3429  00023E  0101               	movlb	1	; () banked
  3430  000240  2303               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  3431  000242  0101               	movlb	1	; () banked
  3432  000244  5102               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  3433  000246  2429               	addwf	RS485_ManageMessage@DataBuff,w,c
  3434  000248  6ED9               	movwf	fsr2l,c
  3435  00024A  0101               	movlb	1	; () banked
  3436  00024C  5103               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  3437  00024E  202A               	addwfc	RS485_ManageMessage@DataBuff+1,w,c
  3438  000250  6EDA               	movwf	fsr2h,c
  3439  000252  04DE               	decf	postinc2,w,c
  3440  000254  B4D8               	btfsc	status,2,c
  3441  000256  D020               	goto	l3334
  3442                           
  3443                           ; BSR set to: 1
  3444  000258  0EFE               	movlw	254
  3445  00025A  0101               	movlb	1	; () banked
  3446  00025C  6F00               	movwf	??_RS485_ManageMessage& (0+255),b
  3447  00025E  0EFF               	movlw	255
  3448  000260  0101               	movlb	1	; () banked
  3449  000262  6F01               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  3450  000264  502B               	movf	RS485_ManageMessage@date_lenth,w,c
  3451  000266  0101               	movlb	1	; () banked
  3452  000268  6F02               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  3453  00026A  6B03               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  3454  00026C  0101               	movlb	1	; () banked
  3455  00026E  5100               	movf	??_RS485_ManageMessage& (0+255),w,b
  3456  000270  0101               	movlb	1	; () banked
  3457  000272  2702               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  3458  000274  0101               	movlb	1	; () banked
  3459  000276  5101               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  3460  000278  0101               	movlb	1	; () banked
  3461  00027A  2303               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  3462  00027C  0101               	movlb	1	; () banked
  3463  00027E  5102               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  3464  000280  2429               	addwf	RS485_ManageMessage@DataBuff,w,c
  3465  000282  6ED9               	movwf	fsr2l,c
  3466  000284  0101               	movlb	1	; () banked
  3467  000286  5103               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  3468  000288  202A               	addwfc	RS485_ManageMessage@DataBuff+1,w,c
  3469  00028A  6EDA               	movwf	fsr2h,c
  3470  00028C  28DE               	incf	postinc2,w,c
  3471  00028E  B4D8               	btfsc	status,2,c
  3472  000290  D003               	goto	l3334
  3473                           
  3474                           ; BSR set to: 1
  3475  000292  0E00               	movlw	0
  3476  000294  6E3D               	movwf	_g_RS485_Receive_Flag,c
  3477                           
  3478                           ; BSR set to: 1
  3479                           ;	Return value of _RS485_ManageMessage is never used
  3480  000296  0012               	return	
  3481  000298                     l3334:
  3482                           
  3483                           ; BSR set to: 1
  3484                           ;My_USART.c: 134: from_dress = DataBuff[date_lenth - 3];
  3485  000298  0EFD               	movlw	253
  3486  00029A  0101               	movlb	1	; () banked
  3487  00029C  6F00               	movwf	??_RS485_ManageMessage& (0+255),b
  3488  00029E  0EFF               	movlw	255
  3489  0002A0  0101               	movlb	1	; () banked
  3490  0002A2  6F01               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  3491  0002A4  502B               	movf	RS485_ManageMessage@date_lenth,w,c
  3492  0002A6  0101               	movlb	1	; () banked
  3493  0002A8  6F02               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  3494  0002AA  6B03               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  3495  0002AC  0101               	movlb	1	; () banked
  3496  0002AE  5100               	movf	??_RS485_ManageMessage& (0+255),w,b
  3497  0002B0  0101               	movlb	1	; () banked
  3498  0002B2  2702               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  3499  0002B4  0101               	movlb	1	; () banked
  3500  0002B6  5101               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  3501  0002B8  0101               	movlb	1	; () banked
  3502  0002BA  2303               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  3503  0002BC  0101               	movlb	1	; () banked
  3504  0002BE  5102               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  3505  0002C0  2429               	addwf	RS485_ManageMessage@DataBuff,w,c
  3506  0002C2  6ED9               	movwf	fsr2l,c
  3507  0002C4  0101               	movlb	1	; () banked
  3508  0002C6  5103               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  3509  0002C8  202A               	addwfc	RS485_ManageMessage@DataBuff+1,w,c
  3510  0002CA  6EDA               	movwf	fsr2h,c
  3511  0002CC  50DF               	movf	indf2,w,c
  3512  0002CE  0101               	movlb	1	; () banked
  3513  0002D0  6F07               	movwf	RS485_ManageMessage@from_dress& (0+255),b
  3514                           
  3515                           ; BSR set to: 1
  3516                           ;My_USART.c: 135: if( from_dress < 0x10 ) gsa_Handle_Msg[from_dress].Hardware_Type = Typ
      +                          e_HANDLE;
  3517  0002D2  0E10               	movlw	16
  3518  0002D4  0101               	movlb	1	; () banked
  3519  0002D6  6107               	cpfslt	RS485_ManageMessage@from_dress& (0+255),b
  3520  0002D8  D00F               	goto	l3340
  3521                           
  3522                           ; BSR set to: 1
  3523  0002DA  0101               	movlb	1	; () banked
  3524  0002DC  5107               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  3525  0002DE  0D07               	mullw	7
  3526  0002E0  0E05               	movlw	5
  3527  0002E2  26F3               	addwf	prodl,f,c
  3528  0002E4  0E00               	movlw	0
  3529  0002E6  22F4               	addwfc	prodh,f,c
  3530  0002E8  0E6A               	movlw	low _gsa_Handle_Msg
  3531  0002EA  24F3               	addwf	prodl,w,c
  3532  0002EC  6ED9               	movwf	fsr2l,c
  3533  0002EE  0E00               	movlw	high _gsa_Handle_Msg
  3534  0002F0  20F4               	addwfc	prodh,w,c
  3535  0002F2  6EDA               	movwf	fsr2h,c
  3536  0002F4  0E00               	movlw	0
  3537  0002F6  D025               	goto	L2
  3538  0002F8                     l3340:
  3539                           
  3540                           ; BSR set to: 1
  3541                           ;My_USART.c: 136: else if( from_dress < 0x20 ) gsa_Handle_Msg[from_dress].Hardware_Type 
      +                          = Type_MASTER;
  3542  0002F8  0E20               	movlw	32
  3543  0002FA  0101               	movlb	1	; () banked
  3544  0002FC  6107               	cpfslt	RS485_ManageMessage@from_dress& (0+255),b
  3545  0002FE  D00F               	goto	l3344
  3546                           
  3547                           ; BSR set to: 1
  3548  000300  0101               	movlb	1	; () banked
  3549  000302  5107               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  3550  000304  0D07               	mullw	7
  3551  000306  0E05               	movlw	5
  3552  000308  26F3               	addwf	prodl,f,c
  3553  00030A  0E00               	movlw	0
  3554  00030C  22F4               	addwfc	prodh,f,c
  3555  00030E  0E6A               	movlw	low _gsa_Handle_Msg
  3556  000310  24F3               	addwf	prodl,w,c
  3557  000312  6ED9               	movwf	fsr2l,c
  3558  000314  0E00               	movlw	high _gsa_Handle_Msg
  3559  000316  20F4               	addwfc	prodh,w,c
  3560  000318  6EDA               	movwf	fsr2h,c
  3561  00031A  0E01               	movlw	1
  3562  00031C  D012               	goto	L2
  3563  00031E                     l3344:
  3564                           
  3565                           ; BSR set to: 1
  3566                           ;My_USART.c: 137: else if( from_dress < 0x30 ) gsa_Handle_Msg[from_dress].Hardware_Type 
      +                          = Type_SENSOR;
  3567  00031E  0E30               	movlw	48
  3568  000320  0101               	movlb	1	; () banked
  3569  000322  6107               	cpfslt	RS485_ManageMessage@from_dress& (0+255),b
  3570  000324  D010               	goto	l3348
  3571                           
  3572                           ; BSR set to: 1
  3573  000326  0101               	movlb	1	; () banked
  3574  000328  5107               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  3575  00032A  0D07               	mullw	7
  3576  00032C  0E05               	movlw	5
  3577  00032E  26F3               	addwf	prodl,f,c
  3578  000330  0E00               	movlw	0
  3579  000332  22F4               	addwfc	prodh,f,c
  3580  000334  0E6A               	movlw	low _gsa_Handle_Msg
  3581  000336  24F3               	addwf	prodl,w,c
  3582  000338  6ED9               	movwf	fsr2l,c
  3583  00033A  0E00               	movlw	high _gsa_Handle_Msg
  3584  00033C  20F4               	addwfc	prodh,w,c
  3585  00033E  6EDA               	movwf	fsr2h,c
  3586  000340  0E02               	movlw	2
  3587  000342                     L2:
  3588  000342  6EDF               	movwf	indf2,c
  3589                           
  3590                           ; BSR set to: 1
  3591                           
  3592                           ; BSR set to: 1
  3593  000344  D000               	goto	l3348
  3594  000346                     l3348:
  3595                           
  3596                           ; BSR set to: 1
  3597                           ;My_USART.c: 140: gsa_Handle_Msg[from_dress].Order = DataBuff[date_lenth - 4];
  3598  000346  0EFC               	movlw	252
  3599  000348  0101               	movlb	1	; () banked
  3600  00034A  6F00               	movwf	??_RS485_ManageMessage& (0+255),b
  3601  00034C  0EFF               	movlw	255
  3602  00034E  0101               	movlb	1	; () banked
  3603  000350  6F01               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  3604  000352  502B               	movf	RS485_ManageMessage@date_lenth,w,c
  3605  000354  0101               	movlb	1	; () banked
  3606  000356  6F02               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  3607  000358  6B03               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  3608  00035A  0101               	movlb	1	; () banked
  3609  00035C  5100               	movf	??_RS485_ManageMessage& (0+255),w,b
  3610  00035E  0101               	movlb	1	; () banked
  3611  000360  2702               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  3612  000362  0101               	movlb	1	; () banked
  3613  000364  5101               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  3614  000366  0101               	movlb	1	; () banked
  3615  000368  2303               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  3616  00036A  0101               	movlb	1	; () banked
  3617  00036C  5102               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  3618  00036E  2429               	addwf	RS485_ManageMessage@DataBuff,w,c
  3619  000370  6ED9               	movwf	fsr2l,c
  3620  000372  0101               	movlb	1	; () banked
  3621  000374  5103               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  3622  000376  202A               	addwfc	RS485_ManageMessage@DataBuff+1,w,c
  3623  000378  6EDA               	movwf	fsr2h,c
  3624  00037A  0101               	movlb	1	; () banked
  3625  00037C  5107               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  3626  00037E  0D07               	mullw	7
  3627  000380  0E6A               	movlw	low _gsa_Handle_Msg
  3628  000382  24F3               	addwf	prodl,w,c
  3629  000384  6EE1               	movwf	fsr1l,c
  3630  000386  0E00               	movlw	high _gsa_Handle_Msg
  3631  000388  20F4               	addwfc	prodh,w,c
  3632  00038A  6EE2               	movwf	fsr1h,c
  3633  00038C  CFDF FFE7          	movff	indf2,indf1
  3634                           
  3635                           ; BSR set to: 1
  3636                           ;My_USART.c: 141: gsa_Handle_Msg[from_dress].a_Parameter[3] = DataBuff[date_lenth -5];
  3637  000390  0EFB               	movlw	251
  3638  000392  0101               	movlb	1	; () banked
  3639  000394  6F00               	movwf	??_RS485_ManageMessage& (0+255),b
  3640  000396  0EFF               	movlw	255
  3641  000398  0101               	movlb	1	; () banked
  3642  00039A  6F01               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  3643  00039C  502B               	movf	RS485_ManageMessage@date_lenth,w,c
  3644  00039E  0101               	movlb	1	; () banked
  3645  0003A0  6F02               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  3646  0003A2  6B03               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  3647  0003A4  0101               	movlb	1	; () banked
  3648  0003A6  5100               	movf	??_RS485_ManageMessage& (0+255),w,b
  3649  0003A8  0101               	movlb	1	; () banked
  3650  0003AA  2702               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  3651  0003AC  0101               	movlb	1	; () banked
  3652  0003AE  5101               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  3653  0003B0  0101               	movlb	1	; () banked
  3654  0003B2  2303               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  3655  0003B4  0101               	movlb	1	; () banked
  3656  0003B6  5102               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  3657  0003B8  2429               	addwf	RS485_ManageMessage@DataBuff,w,c
  3658  0003BA  6ED9               	movwf	fsr2l,c
  3659  0003BC  0101               	movlb	1	; () banked
  3660  0003BE  5103               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  3661  0003C0  202A               	addwfc	RS485_ManageMessage@DataBuff+1,w,c
  3662  0003C2  6EDA               	movwf	fsr2h,c
  3663  0003C4  0101               	movlb	1	; () banked
  3664  0003C6  5107               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  3665  0003C8  0D07               	mullw	7
  3666  0003CA  0E04               	movlw	4
  3667  0003CC  26F3               	addwf	prodl,f,c
  3668  0003CE  0E00               	movlw	0
  3669  0003D0  22F4               	addwfc	prodh,f,c
  3670  0003D2  0E6A               	movlw	low _gsa_Handle_Msg
  3671  0003D4  24F3               	addwf	prodl,w,c
  3672  0003D6  6EE1               	movwf	fsr1l,c
  3673  0003D8  0E00               	movlw	high _gsa_Handle_Msg
  3674  0003DA  20F4               	addwfc	prodh,w,c
  3675  0003DC  6EE2               	movwf	fsr1h,c
  3676  0003DE  CFDF FFE7          	movff	indf2,indf1
  3677                           
  3678                           ; BSR set to: 1
  3679                           ;My_USART.c: 142: gsa_Handle_Msg[from_dress].a_Parameter[2] = DataBuff[date_lenth -6];
  3680  0003E2  0EFA               	movlw	250
  3681  0003E4  0101               	movlb	1	; () banked
  3682  0003E6  6F00               	movwf	??_RS485_ManageMessage& (0+255),b
  3683  0003E8  0EFF               	movlw	255
  3684  0003EA  0101               	movlb	1	; () banked
  3685  0003EC  6F01               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  3686  0003EE  502B               	movf	RS485_ManageMessage@date_lenth,w,c
  3687  0003F0  0101               	movlb	1	; () banked
  3688  0003F2  6F02               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  3689  0003F4  6B03               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  3690  0003F6  0101               	movlb	1	; () banked
  3691  0003F8  5100               	movf	??_RS485_ManageMessage& (0+255),w,b
  3692  0003FA  0101               	movlb	1	; () banked
  3693  0003FC  2702               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  3694  0003FE  0101               	movlb	1	; () banked
  3695  000400  5101               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  3696  000402  0101               	movlb	1	; () banked
  3697  000404  2303               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  3698  000406  0101               	movlb	1	; () banked
  3699  000408  5102               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  3700  00040A  2429               	addwf	RS485_ManageMessage@DataBuff,w,c
  3701  00040C  6ED9               	movwf	fsr2l,c
  3702  00040E  0101               	movlb	1	; () banked
  3703  000410  5103               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  3704  000412  202A               	addwfc	RS485_ManageMessage@DataBuff+1,w,c
  3705  000414  6EDA               	movwf	fsr2h,c
  3706  000416  0101               	movlb	1	; () banked
  3707  000418  5107               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  3708  00041A  0D07               	mullw	7
  3709  00041C  0E03               	movlw	3
  3710  00041E  26F3               	addwf	prodl,f,c
  3711  000420  0E00               	movlw	0
  3712  000422  22F4               	addwfc	prodh,f,c
  3713  000424  0E6A               	movlw	low _gsa_Handle_Msg
  3714  000426  24F3               	addwf	prodl,w,c
  3715  000428  6EE1               	movwf	fsr1l,c
  3716  00042A  0E00               	movlw	high _gsa_Handle_Msg
  3717  00042C  20F4               	addwfc	prodh,w,c
  3718  00042E  6EE2               	movwf	fsr1h,c
  3719  000430  CFDF FFE7          	movff	indf2,indf1
  3720                           
  3721                           ; BSR set to: 1
  3722                           ;My_USART.c: 143: gsa_Handle_Msg[from_dress].a_Parameter[1] = DataBuff[date_lenth -7];
  3723  000434  0EF9               	movlw	249
  3724  000436  0101               	movlb	1	; () banked
  3725  000438  6F00               	movwf	??_RS485_ManageMessage& (0+255),b
  3726  00043A  0EFF               	movlw	255
  3727  00043C  0101               	movlb	1	; () banked
  3728  00043E  6F01               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  3729  000440  502B               	movf	RS485_ManageMessage@date_lenth,w,c
  3730  000442  0101               	movlb	1	; () banked
  3731  000444  6F02               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  3732  000446  6B03               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  3733  000448  0101               	movlb	1	; () banked
  3734  00044A  5100               	movf	??_RS485_ManageMessage& (0+255),w,b
  3735  00044C  0101               	movlb	1	; () banked
  3736  00044E  2702               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  3737  000450  0101               	movlb	1	; () banked
  3738  000452  5101               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  3739  000454  0101               	movlb	1	; () banked
  3740  000456  2303               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  3741  000458  0101               	movlb	1	; () banked
  3742  00045A  5102               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  3743  00045C  2429               	addwf	RS485_ManageMessage@DataBuff,w,c
  3744  00045E  6ED9               	movwf	fsr2l,c
  3745  000460  0101               	movlb	1	; () banked
  3746  000462  5103               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  3747  000464  202A               	addwfc	RS485_ManageMessage@DataBuff+1,w,c
  3748  000466  6EDA               	movwf	fsr2h,c
  3749  000468  0101               	movlb	1	; () banked
  3750  00046A  5107               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  3751  00046C  0D07               	mullw	7
  3752  00046E  0E02               	movlw	2
  3753  000470  26F3               	addwf	prodl,f,c
  3754  000472  0E00               	movlw	0
  3755  000474  22F4               	addwfc	prodh,f,c
  3756  000476  0E6A               	movlw	low _gsa_Handle_Msg
  3757  000478  24F3               	addwf	prodl,w,c
  3758  00047A  6EE1               	movwf	fsr1l,c
  3759  00047C  0E00               	movlw	high _gsa_Handle_Msg
  3760  00047E  20F4               	addwfc	prodh,w,c
  3761  000480  6EE2               	movwf	fsr1h,c
  3762  000482  CFDF FFE7          	movff	indf2,indf1
  3763                           
  3764                           ; BSR set to: 1
  3765                           ;My_USART.c: 144: gsa_Handle_Msg[from_dress].a_Parameter[0] = DataBuff[date_lenth -8];
  3766  000486  0EF8               	movlw	248
  3767  000488  0101               	movlb	1	; () banked
  3768  00048A  6F00               	movwf	??_RS485_ManageMessage& (0+255),b
  3769  00048C  0EFF               	movlw	255
  3770  00048E  0101               	movlb	1	; () banked
  3771  000490  6F01               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  3772  000492  502B               	movf	RS485_ManageMessage@date_lenth,w,c
  3773  000494  0101               	movlb	1	; () banked
  3774  000496  6F02               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  3775  000498  6B03               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  3776  00049A  0101               	movlb	1	; () banked
  3777  00049C  5100               	movf	??_RS485_ManageMessage& (0+255),w,b
  3778  00049E  0101               	movlb	1	; () banked
  3779  0004A0  2702               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  3780  0004A2  0101               	movlb	1	; () banked
  3781  0004A4  5101               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  3782  0004A6  0101               	movlb	1	; () banked
  3783  0004A8  2303               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  3784  0004AA  0101               	movlb	1	; () banked
  3785  0004AC  5102               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  3786  0004AE  2429               	addwf	RS485_ManageMessage@DataBuff,w,c
  3787  0004B0  6ED9               	movwf	fsr2l,c
  3788  0004B2  0101               	movlb	1	; () banked
  3789  0004B4  5103               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  3790  0004B6  202A               	addwfc	RS485_ManageMessage@DataBuff+1,w,c
  3791  0004B8  6EDA               	movwf	fsr2h,c
  3792  0004BA  0101               	movlb	1	; () banked
  3793  0004BC  5107               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  3794  0004BE  0D07               	mullw	7
  3795  0004C0  0E01               	movlw	1
  3796  0004C2  26F3               	addwf	prodl,f,c
  3797  0004C4  0E00               	movlw	0
  3798  0004C6  22F4               	addwfc	prodh,f,c
  3799  0004C8  0E6A               	movlw	low _gsa_Handle_Msg
  3800  0004CA  24F3               	addwf	prodl,w,c
  3801  0004CC  6EE1               	movwf	fsr1l,c
  3802  0004CE  0E00               	movlw	high _gsa_Handle_Msg
  3803  0004D0  20F4               	addwfc	prodh,w,c
  3804  0004D2  6EE2               	movwf	fsr1h,c
  3805  0004D4  CFDF FFE7          	movff	indf2,indf1
  3806                           
  3807                           ; BSR set to: 1
  3808                           ;My_USART.c: 147: gsa_Handle_Msg[from_dress].hand_info = 1;
  3809  0004D8  0101               	movlb	1	; () banked
  3810  0004DA  5107               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  3811  0004DC  0D07               	mullw	7
  3812  0004DE  0E06               	movlw	6
  3813  0004E0  26F3               	addwf	prodl,f,c
  3814  0004E2  0E00               	movlw	0
  3815  0004E4  22F4               	addwfc	prodh,f,c
  3816  0004E6  0E6A               	movlw	low _gsa_Handle_Msg
  3817  0004E8  24F3               	addwf	prodl,w,c
  3818  0004EA  6ED9               	movwf	fsr2l,c
  3819  0004EC  0E00               	movlw	high _gsa_Handle_Msg
  3820  0004EE  20F4               	addwfc	prodh,w,c
  3821  0004F0  6EDA               	movwf	fsr2h,c
  3822  0004F2  0E01               	movlw	1
  3823  0004F4  6EDF               	movwf	indf2,c
  3824                           
  3825                           ; BSR set to: 1
  3826                           ;My_USART.c: 148: g_RS485_Receive_Flag = 0;
  3827  0004F6  0E00               	movlw	0
  3828  0004F8  6E3D               	movwf	_g_RS485_Receive_Flag,c
  3829  0004FA  0012               	return	
  3830                           
  3831                           ; BSR set to: 1
  3832  0004FC  0012               	return		;funcret
  3833  0004FE                     __end_of_RS485_ManageMessage:
  3834                           	opt stack 0
  3835                           tblptru	equ	0xFF8
  3836                           tblptrh	equ	0xFF7
  3837                           tblptrl	equ	0xFF6
  3838                           tablat	equ	0xFF5
  3839                           prodh	equ	0xFF4
  3840                           prodl	equ	0xFF3
  3841                           intcon	equ	0xFF2
  3842                           postinc0	equ	0xFEE
  3843                           wreg	equ	0xFE8
  3844                           indf1	equ	0xFE7
  3845                           postdec1	equ	0xFE5
  3846                           fsr1h	equ	0xFE2
  3847                           fsr1l	equ	0xFE1
  3848                           indf2	equ	0xFDF
  3849                           postinc2	equ	0xFDE
  3850                           fsr2h	equ	0xFDA
  3851                           fsr2l	equ	0xFD9
  3852                           status	equ	0xFD8
  3853                           
  3854 ;; *************** function _VerifyCRC *****************
  3855 ;; Defined at:
  3856 ;;		line 163 in file "_01_USER/My_USART.c"
  3857 ;; Parameters:    Size  Location     Type
  3858 ;;  DataBuff        2   37[COMRAM] PTR unsigned char 
  3859 ;;		 -> ga_RS485_ReceiveBuff(10), ga_RS485_SendBuff(10), 
  3860 ;;  date_lenth      1   39[COMRAM] unsigned char 
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;  CRC_Value       4    5[BANK0 ] unsigned long 
  3863 ;;  CRC_Byte        1    9[BANK0 ] unsigned char 
  3864 ;; Return value:  Size  Location     Type
  3865 ;;		None               void
  3866 ;; Registers used:
  3867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3868 ;; Tracked objects:
  3869 ;;		On entry : 0/0
  3870 ;;		On exit  : 0/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3873 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3874 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3875 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3876 ;;      Totals:         3      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3877 ;;Total ram usage:       13 bytes
  3878 ;; Hardware stack levels used:    1
  3879 ;; Hardware stack levels required when called:    4
  3880 ;; This function calls:
  3881 ;;		___lldiv
  3882 ;;		___llmod
  3883 ;; This function is called by:
  3884 ;;		_RS485_SendDate
  3885 ;;		_RS485_ManageMessage
  3886 ;; This function uses a non-reentrant model
  3887 ;;
  3888                           
  3889                           	psect	text24
  3890  0007F2                     __ptext24:
  3891                           	opt stack 0
  3892  0007F2                     _VerifyCRC:
  3893                           	opt stack 24
  3894                           
  3895                           ;My_USART.c: 165: unsigned long int CRC_Value = 0;
  3896                           
  3897                           ;incstack = 0
  3898  0007F2  0E00               	movlw	0
  3899  0007F4  0100               	movlb	0	; () banked
  3900  0007F6  6FF9               	movwf	VerifyCRC@CRC_Value& (0+255),b
  3901  0007F8  0E00               	movlw	0
  3902  0007FA  6FFA               	movwf	(VerifyCRC@CRC_Value+1)& (0+255),b
  3903  0007FC  0E00               	movlw	0
  3904  0007FE  6FFB               	movwf	(VerifyCRC@CRC_Value+2)& (0+255),b
  3905  000800  0E00               	movlw	0
  3906  000802  6FFC               	movwf	(VerifyCRC@CRC_Value+3)& (0+255),b
  3907                           
  3908                           ;My_USART.c: 166: unsigned char CRC_Byte;
  3909                           ;My_USART.c: 168: for(CRC_Byte = 2; CRC_Byte < date_lenth ;CRC_Byte++)
  3910  000804  0E02               	movlw	2
  3911  000806  0100               	movlb	0	; () banked
  3912  000808  6FFD               	movwf	VerifyCRC@CRC_Byte& (0+255),b
  3913  00080A  D043               	goto	l3180
  3914  00080C                     l3176:
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;My_USART.c: 169: CRC_Value = ( CRC_Value + DataBuff[CRC_Byte]*CRC_Byte ) % 0xffff;
  3918  00080C  0100               	movlb	0	; () banked
  3919  00080E  51FD               	movf	VerifyCRC@CRC_Byte& (0+255),w,b
  3920  000810  0D01               	mullw	1
  3921  000812  50F3               	movf	prodl,w,c
  3922  000814  2426               	addwf	VerifyCRC@DataBuff,w,c
  3923  000816  6ED9               	movwf	fsr2l,c
  3924  000818  50F4               	movf	prodh,w,c
  3925  00081A  2027               	addwfc	VerifyCRC@DataBuff+1,w,c
  3926  00081C  6EDA               	movwf	fsr2h,c
  3927  00081E  50DF               	movf	indf2,w,c
  3928  000820  0100               	movlb	0	; () banked
  3929  000822  6FF4               	movwf	??_VerifyCRC& (0+255),b
  3930  000824  0100               	movlb	0	; () banked
  3931  000826  51F4               	movf	??_VerifyCRC& (0+255),w,b
  3932  000828  0100               	movlb	0	; () banked
  3933  00082A  03FD               	mulwf	VerifyCRC@CRC_Byte& (0+255),b
  3934  00082C  CFF3 F0F5          	movff	prodl,??_VerifyCRC+1
  3935  000830  CFF4 F0F6          	movff	prodh,??_VerifyCRC+2
  3936  000834  0E00               	movlw	0
  3937  000836  0100               	movlb	0	; () banked
  3938  000838  BFF6               	btfsc	(??_VerifyCRC+2)& (0+255),7,b
  3939  00083A  0EFF               	movlw	255
  3940  00083C  6FF7               	movwf	(??_VerifyCRC+3)& (0+255),b
  3941  00083E  6FF8               	movwf	(??_VerifyCRC+4)& (0+255),b
  3942  000840  0100               	movlb	0	; () banked
  3943  000842  51F9               	movf	VerifyCRC@CRC_Value& (0+255),w,b
  3944  000844  0100               	movlb	0	; () banked
  3945  000846  25F5               	addwf	(??_VerifyCRC+1)& (0+255),w,b
  3946  000848  6E19               	movwf	___llmod@dividend,c
  3947  00084A  0100               	movlb	0	; () banked
  3948  00084C  51FA               	movf	(VerifyCRC@CRC_Value+1)& (0+255),w,b
  3949  00084E  0100               	movlb	0	; () banked
  3950  000850  21F6               	addwfc	(??_VerifyCRC+2)& (0+255),w,b
  3951  000852  6E1A               	movwf	___llmod@dividend+1,c
  3952  000854  0100               	movlb	0	; () banked
  3953  000856  51FB               	movf	(VerifyCRC@CRC_Value+2)& (0+255),w,b
  3954  000858  0100               	movlb	0	; () banked
  3955  00085A  21F7               	addwfc	(??_VerifyCRC+3)& (0+255),w,b
  3956  00085C  6E1B               	movwf	___llmod@dividend+2,c
  3957  00085E  0100               	movlb	0	; () banked
  3958  000860  51FC               	movf	(VerifyCRC@CRC_Value+3)& (0+255),w,b
  3959  000862  0100               	movlb	0	; () banked
  3960  000864  21F8               	addwfc	(??_VerifyCRC+4)& (0+255),w,b
  3961  000866  6E1C               	movwf	___llmod@dividend+3,c
  3962  000868  0EFF               	movlw	255
  3963  00086A  6E1D               	movwf	___llmod@divisor,c
  3964  00086C  0EFF               	movlw	255
  3965  00086E  6E1E               	movwf	___llmod@divisor+1,c
  3966  000870  0E00               	movlw	0
  3967  000872  6E1F               	movwf	___llmod@divisor+2,c
  3968  000874  0E00               	movlw	0
  3969  000876  6E20               	movwf	___llmod@divisor+3,c
  3970  000878  EC70  F007         	call	___llmod	;wreg free
  3971  00087C  C019  F0F9         	movff	?___llmod,VerifyCRC@CRC_Value
  3972  000880  C01A  F0FA         	movff	?___llmod+1,VerifyCRC@CRC_Value+1
  3973  000884  C01B  F0FB         	movff	?___llmod+2,VerifyCRC@CRC_Value+2
  3974  000888  C01C  F0FC         	movff	?___llmod+3,VerifyCRC@CRC_Value+3
  3975  00088C  0100               	movlb	0	; () banked
  3976  00088E  2BFD               	incf	VerifyCRC@CRC_Byte& (0+255),f,b
  3977  000890  D000               	goto	l3180
  3978  000892                     l3180:
  3979                           
  3980                           ; BSR set to: 0
  3981  000892  5028               	movf	VerifyCRC@date_lenth,w,c
  3982  000894  0100               	movlb	0	; () banked
  3983  000896  5DFD               	subwf	VerifyCRC@CRC_Byte& (0+255),w,b
  3984  000898  A0D8               	btfss	status,0,c
  3985  00089A  D7B8               	goto	l3176
  3986                           
  3987                           ; BSR set to: 0
  3988                           ;My_USART.c: 171: DataBuff[1] = CRC_Value/0xff;
  3989                           
  3990                           ; BSR set to: 0
  3991  00089C  EE20 F001          	lfsr	2,1
  3992  0008A0  5026               	movf	VerifyCRC@DataBuff,w,c
  3993  0008A2  26D9               	addwf	fsr2l,f,c
  3994  0008A4  5027               	movf	VerifyCRC@DataBuff+1,w,c
  3995  0008A6  22DA               	addwfc	fsr2h,f,c
  3996  0008A8  C0F9  F019         	movff	VerifyCRC@CRC_Value,___lldiv@dividend
  3997  0008AC  C0FA  F01A         	movff	VerifyCRC@CRC_Value+1,___lldiv@dividend+1
  3998  0008B0  C0FB  F01B         	movff	VerifyCRC@CRC_Value+2,___lldiv@dividend+2
  3999  0008B4  C0FC  F01C         	movff	VerifyCRC@CRC_Value+3,___lldiv@dividend+3
  4000  0008B8  0EFF               	movlw	255
  4001  0008BA  6E1D               	movwf	___lldiv@divisor,c
  4002  0008BC  0E00               	movlw	0
  4003  0008BE  6E1E               	movwf	___lldiv@divisor+1,c
  4004  0008C0  0E00               	movlw	0
  4005  0008C2  6E1F               	movwf	___lldiv@divisor+2,c
  4006  0008C4  0E00               	movlw	0
  4007  0008C6  6E20               	movwf	___lldiv@divisor+3,c
  4008  0008C8  EC2A  F007         	call	___lldiv	;wreg free
  4009  0008CC  5019               	movf	?___lldiv,w,c
  4010  0008CE  6EDF               	movwf	indf2,c
  4011                           
  4012                           ;My_USART.c: 172: DataBuff[0] = CRC_Value%0xff;
  4013  0008D0  C0F9  F019         	movff	VerifyCRC@CRC_Value,___llmod@dividend
  4014  0008D4  C0FA  F01A         	movff	VerifyCRC@CRC_Value+1,___llmod@dividend+1
  4015  0008D8  C0FB  F01B         	movff	VerifyCRC@CRC_Value+2,___llmod@dividend+2
  4016  0008DC  C0FC  F01C         	movff	VerifyCRC@CRC_Value+3,___llmod@dividend+3
  4017  0008E0  0EFF               	movlw	255
  4018  0008E2  6E1D               	movwf	___llmod@divisor,c
  4019  0008E4  0E00               	movlw	0
  4020  0008E6  6E1E               	movwf	___llmod@divisor+1,c
  4021  0008E8  0E00               	movlw	0
  4022  0008EA  6E1F               	movwf	___llmod@divisor+2,c
  4023  0008EC  0E00               	movlw	0
  4024  0008EE  6E20               	movwf	___llmod@divisor+3,c
  4025  0008F0  EC70  F007         	call	___llmod	;wreg free
  4026  0008F4  5019               	movf	?___llmod,w,c
  4027  0008F6  C026  FFD9         	movff	VerifyCRC@DataBuff,fsr2l
  4028  0008FA  C027  FFDA         	movff	VerifyCRC@DataBuff+1,fsr2h
  4029  0008FE  6EDF               	movwf	indf2,c
  4030                           
  4031                           ;My_USART.c: 174: if( DataBuff[1] == 0xff ) DataBuff[1] --;
  4032  000900  EE20 F001          	lfsr	2,1
  4033  000904  5026               	movf	VerifyCRC@DataBuff,w,c
  4034  000906  26D9               	addwf	fsr2l,f,c
  4035  000908  5027               	movf	VerifyCRC@DataBuff+1,w,c
  4036  00090A  22DA               	addwfc	fsr2h,f,c
  4037  00090C  28DE               	incf	postinc2,w,c
  4038  00090E  A4D8               	btfss	status,2,c
  4039  000910  D007               	goto	l247
  4040  000912  EE20 F001          	lfsr	2,1
  4041  000916  5026               	movf	VerifyCRC@DataBuff,w,c
  4042  000918  26D9               	addwf	fsr2l,f,c
  4043  00091A  5027               	movf	VerifyCRC@DataBuff+1,w,c
  4044  00091C  22DA               	addwfc	fsr2h,f,c
  4045  00091E  06DF               	decf	indf2,f,c
  4046  000920                     l247:
  4047                           
  4048                           ;My_USART.c: 175: if( DataBuff[0] == 0xff ) DataBuff[0] --;
  4049  000920  C026  FFD9         	movff	VerifyCRC@DataBuff,fsr2l
  4050  000924  C027  FFDA         	movff	VerifyCRC@DataBuff+1,fsr2h
  4051  000928  28DE               	incf	postinc2,w,c
  4052  00092A  A4D8               	btfss	status,2,c
  4053  00092C  0012               	return	
  4054  00092E  C026  FFD9         	movff	VerifyCRC@DataBuff,fsr2l
  4055  000932  C027  FFDA         	movff	VerifyCRC@DataBuff+1,fsr2h
  4056  000936  06DF               	decf	indf2,f,c
  4057  000938  0012               	return	
  4058  00093A  0012               	return		;funcret
  4059  00093C                     __end_of_VerifyCRC:
  4060                           	opt stack 0
  4061                           tblptru	equ	0xFF8
  4062                           tblptrh	equ	0xFF7
  4063                           tblptrl	equ	0xFF6
  4064                           tablat	equ	0xFF5
  4065                           prodh	equ	0xFF4
  4066                           prodl	equ	0xFF3
  4067                           intcon	equ	0xFF2
  4068                           postinc0	equ	0xFEE
  4069                           wreg	equ	0xFE8
  4070                           indf1	equ	0xFE7
  4071                           postdec1	equ	0xFE5
  4072                           fsr1h	equ	0xFE2
  4073                           fsr1l	equ	0xFE1
  4074                           indf2	equ	0xFDF
  4075                           postinc2	equ	0xFDE
  4076                           fsr2h	equ	0xFDA
  4077                           fsr2l	equ	0xFD9
  4078                           status	equ	0xFD8
  4079                           
  4080 ;; *************** function ___llmod *****************
  4081 ;; Defined at:
  4082 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;  dividend        4   24[COMRAM] unsigned long 
  4085 ;;  divisor         4   28[COMRAM] unsigned long 
  4086 ;; Auto vars:     Size  Location     Type
  4087 ;;  counter         1   32[COMRAM] unsigned char 
  4088 ;; Return value:  Size  Location     Type
  4089 ;;                  4   24[COMRAM] unsigned long 
  4090 ;; Registers used:
  4091 ;;		wreg, status,2, status,0
  4092 ;; Tracked objects:
  4093 ;;		On entry : 0/0
  4094 ;;		On exit  : 0/0
  4095 ;;		Unchanged: 0/0
  4096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4097 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4098 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4100 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4101 ;;Total ram usage:        9 bytes
  4102 ;; Hardware stack levels used:    1
  4103 ;; Hardware stack levels required when called:    3
  4104 ;; This function calls:
  4105 ;;		Nothing
  4106 ;; This function is called by:
  4107 ;;		_VerifyCRC
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111                           	psect	text25
  4112  000EE0                     __ptext25:
  4113                           	opt stack 0
  4114  000EE0                     ___llmod:
  4115                           	opt stack 24
  4116                           
  4117                           ;incstack = 0
  4118  000EE0  501D               	movf	___llmod@divisor,w,c
  4119  000EE2  101E               	iorwf	___llmod@divisor+1,w,c
  4120  000EE4  101F               	iorwf	___llmod@divisor+2,w,c
  4121  000EE6  1020               	iorwf	___llmod@divisor+3,w,c
  4122  000EE8  B4D8               	btfsc	status,2,c
  4123  000EEA  D029               	goto	l1048
  4124  000EEC  0E01               	movlw	1
  4125  000EEE  6E21               	movwf	___llmod@counter,c
  4126  000EF0  D007               	goto	l3164
  4127  000EF2                     l3162:
  4128  000EF2  90D8               	bcf	status,0,c
  4129  000EF4  361D               	rlcf	___llmod@divisor,f,c
  4130  000EF6  361E               	rlcf	___llmod@divisor+1,f,c
  4131  000EF8  361F               	rlcf	___llmod@divisor+2,f,c
  4132  000EFA  3620               	rlcf	___llmod@divisor+3,f,c
  4133  000EFC  2A21               	incf	___llmod@counter,f,c
  4134  000EFE  D000               	goto	l3164
  4135  000F00                     l3164:
  4136  000F00  BE20               	btfsc	___llmod@divisor+3,7,c
  4137  000F02  D002               	goto	l3166
  4138  000F04  D7F6               	goto	l3162
  4139  000F06  D000               	goto	l3166
  4140  000F08                     l3166:
  4141  000F08  501D               	movf	___llmod@divisor,w,c
  4142  000F0A  5C19               	subwf	___llmod@dividend,w,c
  4143  000F0C  501E               	movf	___llmod@divisor+1,w,c
  4144  000F0E  581A               	subwfb	___llmod@dividend+1,w,c
  4145  000F10  501F               	movf	___llmod@divisor+2,w,c
  4146  000F12  581B               	subwfb	___llmod@dividend+2,w,c
  4147  000F14  5020               	movf	___llmod@divisor+3,w,c
  4148  000F16  581C               	subwfb	___llmod@dividend+3,w,c
  4149  000F18  A0D8               	btfss	status,0,c
  4150  000F1A  D009               	goto	l3170
  4151  000F1C  501D               	movf	___llmod@divisor,w,c
  4152  000F1E  5E19               	subwf	___llmod@dividend,f,c
  4153  000F20  501E               	movf	___llmod@divisor+1,w,c
  4154  000F22  5A1A               	subwfb	___llmod@dividend+1,f,c
  4155  000F24  501F               	movf	___llmod@divisor+2,w,c
  4156  000F26  5A1B               	subwfb	___llmod@dividend+2,f,c
  4157  000F28  5020               	movf	___llmod@divisor+3,w,c
  4158  000F2A  5A1C               	subwfb	___llmod@dividend+3,f,c
  4159  000F2C  D000               	goto	l3170
  4160  000F2E                     l3170:
  4161  000F2E  90D8               	bcf	status,0,c
  4162  000F30  3220               	rrcf	___llmod@divisor+3,f,c
  4163  000F32  321F               	rrcf	___llmod@divisor+2,f,c
  4164  000F34  321E               	rrcf	___llmod@divisor+1,f,c
  4165  000F36  321D               	rrcf	___llmod@divisor,f,c
  4166  000F38  2E21               	decfsz	___llmod@counter,f,c
  4167  000F3A  D7E6               	goto	l3166
  4168  000F3C  D000               	goto	l1048
  4169  000F3E                     l1048:
  4170  000F3E  C019  F019         	movff	___llmod@dividend,?___llmod
  4171  000F42  C01A  F01A         	movff	___llmod@dividend+1,?___llmod+1
  4172  000F46  C01B  F01B         	movff	___llmod@dividend+2,?___llmod+2
  4173  000F4A  C01C  F01C         	movff	___llmod@dividend+3,?___llmod+3
  4174  000F4E  0012               	return		;funcret
  4175  000F50                     __end_of___llmod:
  4176                           	opt stack 0
  4177                           tblptru	equ	0xFF8
  4178                           tblptrh	equ	0xFF7
  4179                           tblptrl	equ	0xFF6
  4180                           tablat	equ	0xFF5
  4181                           prodh	equ	0xFF4
  4182                           prodl	equ	0xFF3
  4183                           intcon	equ	0xFF2
  4184                           postinc0	equ	0xFEE
  4185                           wreg	equ	0xFE8
  4186                           indf1	equ	0xFE7
  4187                           postdec1	equ	0xFE5
  4188                           fsr1h	equ	0xFE2
  4189                           fsr1l	equ	0xFE1
  4190                           indf2	equ	0xFDF
  4191                           postinc2	equ	0xFDE
  4192                           fsr2h	equ	0xFDA
  4193                           fsr2l	equ	0xFD9
  4194                           status	equ	0xFD8
  4195                           
  4196 ;; *************** function ___lldiv *****************
  4197 ;; Defined at:
  4198 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  4199 ;; Parameters:    Size  Location     Type
  4200 ;;  dividend        4   24[COMRAM] unsigned long 
  4201 ;;  divisor         4   28[COMRAM] unsigned long 
  4202 ;; Auto vars:     Size  Location     Type
  4203 ;;  quotient        4   32[COMRAM] unsigned long 
  4204 ;;  counter         1   36[COMRAM] unsigned char 
  4205 ;; Return value:  Size  Location     Type
  4206 ;;                  4   24[COMRAM] unsigned long 
  4207 ;; Registers used:
  4208 ;;		wreg, status,2, status,0
  4209 ;; Tracked objects:
  4210 ;;		On entry : 0/0
  4211 ;;		On exit  : 0/0
  4212 ;;		Unchanged: 0/0
  4213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4214 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4215 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4217 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4218 ;;Total ram usage:       13 bytes
  4219 ;; Hardware stack levels used:    1
  4220 ;; Hardware stack levels required when called:    3
  4221 ;; This function calls:
  4222 ;;		Nothing
  4223 ;; This function is called by:
  4224 ;;		_VerifyCRC
  4225 ;; This function uses a non-reentrant model
  4226 ;;
  4227                           
  4228                           	psect	text26
  4229  000E54                     __ptext26:
  4230                           	opt stack 0
  4231  000E54                     ___lldiv:
  4232                           	opt stack 24
  4233                           
  4234                           ;incstack = 0
  4235  000E54  0E00               	movlw	0
  4236  000E56  6E21               	movwf	___lldiv@quotient,c
  4237  000E58  0E00               	movlw	0
  4238  000E5A  6E22               	movwf	___lldiv@quotient+1,c
  4239  000E5C  0E00               	movlw	0
  4240  000E5E  6E23               	movwf	___lldiv@quotient+2,c
  4241  000E60  0E00               	movlw	0
  4242  000E62  6E24               	movwf	___lldiv@quotient+3,c
  4243  000E64  501D               	movf	___lldiv@divisor,w,c
  4244  000E66  101E               	iorwf	___lldiv@divisor+1,w,c
  4245  000E68  101F               	iorwf	___lldiv@divisor+2,w,c
  4246  000E6A  1020               	iorwf	___lldiv@divisor+3,w,c
  4247  000E6C  B4D8               	btfsc	status,2,c
  4248  000E6E  D02F               	goto	l1038
  4249  000E70  0E01               	movlw	1
  4250  000E72  6E25               	movwf	___lldiv@counter,c
  4251  000E74  D007               	goto	l3144
  4252  000E76                     l3142:
  4253  000E76  90D8               	bcf	status,0,c
  4254  000E78  361D               	rlcf	___lldiv@divisor,f,c
  4255  000E7A  361E               	rlcf	___lldiv@divisor+1,f,c
  4256  000E7C  361F               	rlcf	___lldiv@divisor+2,f,c
  4257  000E7E  3620               	rlcf	___lldiv@divisor+3,f,c
  4258  000E80  2A25               	incf	___lldiv@counter,f,c
  4259  000E82  D000               	goto	l3144
  4260  000E84                     l3144:
  4261  000E84  BE20               	btfsc	___lldiv@divisor+3,7,c
  4262  000E86  D002               	goto	l3146
  4263  000E88  D7F6               	goto	l3142
  4264  000E8A  D000               	goto	l3146
  4265  000E8C                     l3146:
  4266  000E8C  90D8               	bcf	status,0,c
  4267  000E8E  3621               	rlcf	___lldiv@quotient,f,c
  4268  000E90  3622               	rlcf	___lldiv@quotient+1,f,c
  4269  000E92  3623               	rlcf	___lldiv@quotient+2,f,c
  4270  000E94  3624               	rlcf	___lldiv@quotient+3,f,c
  4271  000E96  501D               	movf	___lldiv@divisor,w,c
  4272  000E98  5C19               	subwf	___lldiv@dividend,w,c
  4273  000E9A  501E               	movf	___lldiv@divisor+1,w,c
  4274  000E9C  581A               	subwfb	___lldiv@dividend+1,w,c
  4275  000E9E  501F               	movf	___lldiv@divisor+2,w,c
  4276  000EA0  581B               	subwfb	___lldiv@dividend+2,w,c
  4277  000EA2  5020               	movf	___lldiv@divisor+3,w,c
  4278  000EA4  581C               	subwfb	___lldiv@dividend+3,w,c
  4279  000EA6  A0D8               	btfss	status,0,c
  4280  000EA8  D00A               	goto	l3154
  4281  000EAA  501D               	movf	___lldiv@divisor,w,c
  4282  000EAC  5E19               	subwf	___lldiv@dividend,f,c
  4283  000EAE  501E               	movf	___lldiv@divisor+1,w,c
  4284  000EB0  5A1A               	subwfb	___lldiv@dividend+1,f,c
  4285  000EB2  501F               	movf	___lldiv@divisor+2,w,c
  4286  000EB4  5A1B               	subwfb	___lldiv@dividend+2,f,c
  4287  000EB6  5020               	movf	___lldiv@divisor+3,w,c
  4288  000EB8  5A1C               	subwfb	___lldiv@dividend+3,f,c
  4289  000EBA  8021               	bsf	___lldiv@quotient,0,c
  4290  000EBC  D000               	goto	l3154
  4291  000EBE                     l3154:
  4292  000EBE  90D8               	bcf	status,0,c
  4293  000EC0  3220               	rrcf	___lldiv@divisor+3,f,c
  4294  000EC2  321F               	rrcf	___lldiv@divisor+2,f,c
  4295  000EC4  321E               	rrcf	___lldiv@divisor+1,f,c
  4296  000EC6  321D               	rrcf	___lldiv@divisor,f,c
  4297  000EC8  2E25               	decfsz	___lldiv@counter,f,c
  4298  000ECA  D7E0               	goto	l3146
  4299  000ECC  D000               	goto	l1038
  4300  000ECE                     l1038:
  4301  000ECE  C021  F019         	movff	___lldiv@quotient,?___lldiv
  4302  000ED2  C022  F01A         	movff	___lldiv@quotient+1,?___lldiv+1
  4303  000ED6  C023  F01B         	movff	___lldiv@quotient+2,?___lldiv+2
  4304  000EDA  C024  F01C         	movff	___lldiv@quotient+3,?___lldiv+3
  4305  000EDE  0012               	return		;funcret
  4306  000EE0                     __end_of___lldiv:
  4307                           	opt stack 0
  4308                           tblptru	equ	0xFF8
  4309                           tblptrh	equ	0xFF7
  4310                           tblptrl	equ	0xFF6
  4311                           tablat	equ	0xFF5
  4312                           prodh	equ	0xFF4
  4313                           prodl	equ	0xFF3
  4314                           intcon	equ	0xFF2
  4315                           postinc0	equ	0xFEE
  4316                           wreg	equ	0xFE8
  4317                           indf1	equ	0xFE7
  4318                           postdec1	equ	0xFE5
  4319                           fsr1h	equ	0xFE2
  4320                           fsr1l	equ	0xFE1
  4321                           indf2	equ	0xFDF
  4322                           postinc2	equ	0xFDE
  4323                           fsr2h	equ	0xFDA
  4324                           fsr2l	equ	0xFD9
  4325                           status	equ	0xFD8
  4326                           
  4327 ;; *************** function _Key_ManageMessage *****************
  4328 ;; Defined at:
  4329 ;;		line 182 in file "_01_USER/Key.c"
  4330 ;; Parameters:    Size  Location     Type
  4331 ;;		None
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;		None
  4334 ;; Return value:  Size  Location     Type
  4335 ;;		None               void
  4336 ;; Registers used:
  4337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4338 ;; Tracked objects:
  4339 ;;		On entry : 0/0
  4340 ;;		On exit  : 0/0
  4341 ;;		Unchanged: 0/0
  4342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4347 ;;Total ram usage:        0 bytes
  4348 ;; Hardware stack levels used:    1
  4349 ;; Hardware stack levels required when called:    4
  4350 ;; This function calls:
  4351 ;;		_Key_ReadFSM
  4352 ;;		_Key_ResetFSM
  4353 ;;		___lbmod
  4354 ;; This function is called by:
  4355 ;;		_ManageMessage
  4356 ;; This function uses a non-reentrant model
  4357 ;;
  4358                           
  4359                           	psect	text27
  4360  000B74                     __ptext27:
  4361                           	opt stack 0
  4362  000B74                     _Key_ManageMessage:
  4363                           	opt stack 25
  4364                           
  4365                           ;Key.c: 184: Key_ReadFSM();
  4366                           
  4367                           ;incstack = 0
  4368  000B74  EC7F  F002         	call	_Key_ReadFSM	;wreg free
  4369                           
  4370                           ;Key.c: 193: if (gs_Local_Key_User.a_key_state[1-1] == KEY_short) g_RS485_Byte ++ ;
  4371  000B78  0100               	movlb	0	; () banked
  4372  000B7A  05BF               	decf	(_gs_Local_Key_User+15)& (0+255),w,b	;volatile
  4373  000B7C  A4D8               	btfss	status,2,c
  4374  000B7E  D002               	goto	l2532
  4375                           
  4376                           ; BSR set to: 0
  4377  000B80  2A3C               	incf	_g_RS485_Byte,f,c
  4378  000B82  D000               	goto	l2532
  4379  000B84                     l2532:
  4380                           
  4381                           ; BSR set to: 0
  4382                           ;Key.c: 194: if (gs_Local_Key_User.a_key_state[1-1] == KEY_hold) g_RS485_Byte ++ ;
  4383  000B84  0E03               	movlw	3
  4384  000B86  0100               	movlb	0	; () banked
  4385  000B88  19BF               	xorwf	(_gs_Local_Key_User+15)& (0+255),w,b	;volatile
  4386  000B8A  A4D8               	btfss	status,2,c
  4387  000B8C  D002               	goto	l2536
  4388                           
  4389                           ; BSR set to: 0
  4390  000B8E  2A3C               	incf	_g_RS485_Byte,f,c
  4391  000B90  D000               	goto	l2536
  4392  000B92                     l2536:
  4393                           
  4394                           ; BSR set to: 0
  4395                           ;Key.c: 197: if (gs_Local_Key_User.a_key_state[2-1] == KEY_short) gs_Handle_Switch.Show_
      +                          Send_Receive = ~gs_Handle_Switch.Show_Send_Receive;
  4396  000B92  0100               	movlb	0	; () banked
  4397  000B94  05C0               	decf	(_gs_Local_Key_User+16)& (0+255),w,b	;volatile
  4398  000B96  A4D8               	btfss	status,2,c
  4399  000B98  D003               	goto	l173
  4400                           
  4401                           ; BSR set to: 0
  4402  000B9A  5033               	movf	_gs_Handle_Switch+3,w,c
  4403  000B9C  0AFF               	xorlw	255
  4404  000B9E  6E33               	movwf	_gs_Handle_Switch+3,c
  4405  000BA0                     l173:
  4406                           
  4407                           ; BSR set to: 0
  4408                           ;Key.c: 200: if (gs_Local_Key_User.a_key_state[3-1] == KEY_short) g_RS485_Byte -- ;
  4409  000BA0  0100               	movlb	0	; () banked
  4410  000BA2  05C1               	decf	(_gs_Local_Key_User+17)& (0+255),w,b	;volatile
  4411  000BA4  A4D8               	btfss	status,2,c
  4412  000BA6  D002               	goto	l2542
  4413                           
  4414                           ; BSR set to: 0
  4415  000BA8  063C               	decf	_g_RS485_Byte,f,c
  4416  000BAA  D000               	goto	l2542
  4417  000BAC                     l2542:
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;Key.c: 201: if (gs_Local_Key_User.a_key_state[3-1] == KEY_hold) g_RS485_Byte -- ;
  4421  000BAC  0E03               	movlw	3
  4422  000BAE  0100               	movlb	0	; () banked
  4423  000BB0  19C1               	xorwf	(_gs_Local_Key_User+17)& (0+255),w,b	;volatile
  4424  000BB2  A4D8               	btfss	status,2,c
  4425  000BB4  D002               	goto	l2546
  4426                           
  4427                           ; BSR set to: 0
  4428  000BB6  063C               	decf	_g_RS485_Byte,f,c
  4429  000BB8  D000               	goto	l2546
  4430  000BBA                     l2546:
  4431                           
  4432                           ; BSR set to: 0
  4433                           ;Key.c: 204: if (gs_Local_Key_User.a_key_state[4-1] == KEY_short) ga_RS485_SendBuff[g_RS
      +                          485_Byte] ++ ;
  4434  000BBA  0100               	movlb	0	; () banked
  4435  000BBC  05C2               	decf	(_gs_Local_Key_User+18)& (0+255),w,b	;volatile
  4436  000BBE  A4D8               	btfss	status,2,c
  4437  000BC0  D00A               	goto	l2550
  4438                           
  4439                           ; BSR set to: 0
  4440  000BC2  503C               	movf	_g_RS485_Byte,w,c
  4441  000BC4  0D01               	mullw	1
  4442  000BC6  0E3E               	movlw	low _ga_RS485_SendBuff
  4443  000BC8  24F3               	addwf	prodl,w,c
  4444  000BCA  6ED9               	movwf	fsr2l,c
  4445  000BCC  0E00               	movlw	high _ga_RS485_SendBuff
  4446  000BCE  20F4               	addwfc	prodh,w,c
  4447  000BD0  6EDA               	movwf	fsr2h,c
  4448  000BD2  2ADF               	incf	indf2,f,c
  4449  000BD4  D000               	goto	l2550
  4450  000BD6                     l2550:
  4451                           
  4452                           ; BSR set to: 0
  4453                           ;Key.c: 205: if (gs_Local_Key_User.a_key_state[4-1] == KEY_hold) ga_RS485_SendBuff[g_RS4
      +                          85_Byte] ++ ;
  4454  000BD6  0E03               	movlw	3
  4455  000BD8  0100               	movlb	0	; () banked
  4456  000BDA  19C2               	xorwf	(_gs_Local_Key_User+18)& (0+255),w,b	;volatile
  4457  000BDC  A4D8               	btfss	status,2,c
  4458  000BDE  D00A               	goto	l2554
  4459                           
  4460                           ; BSR set to: 0
  4461  000BE0  503C               	movf	_g_RS485_Byte,w,c
  4462  000BE2  0D01               	mullw	1
  4463  000BE4  0E3E               	movlw	low _ga_RS485_SendBuff
  4464  000BE6  24F3               	addwf	prodl,w,c
  4465  000BE8  6ED9               	movwf	fsr2l,c
  4466  000BEA  0E00               	movlw	high _ga_RS485_SendBuff
  4467  000BEC  20F4               	addwfc	prodh,w,c
  4468  000BEE  6EDA               	movwf	fsr2h,c
  4469  000BF0  2ADF               	incf	indf2,f,c
  4470  000BF2  D000               	goto	l2554
  4471  000BF4                     l2554:
  4472                           
  4473                           ; BSR set to: 0
  4474                           ;Key.c: 208: if (gs_Local_Key_User.a_key_state[5-1] == KEY_short)
  4475  000BF4  0100               	movlb	0	; () banked
  4476  000BF6  05C3               	decf	(_gs_Local_Key_User+19)& (0+255),w,b	;volatile
  4477  000BF8  A4D8               	btfss	status,2,c
  4478  000BFA  D003               	goto	l2558
  4479                           
  4480                           ; BSR set to: 0
  4481                           ;Key.c: 209: gs_Handle_Switch.Usart_OneDate = 1;
  4482  000BFC  0E01               	movlw	1
  4483  000BFE  6E32               	movwf	_gs_Handle_Switch+2,c
  4484  000C00  D000               	goto	l2558
  4485  000C02                     l2558:
  4486                           
  4487                           ; BSR set to: 0
  4488                           ;Key.c: 212: if (gs_Local_Key_User.a_key_state[6-1] == KEY_short) ga_RS485_SendBuff[g_RS
      +                          485_Byte] -- ;
  4489  000C02  0100               	movlb	0	; () banked
  4490  000C04  05C4               	decf	(_gs_Local_Key_User+20)& (0+255),w,b	;volatile
  4491  000C06  A4D8               	btfss	status,2,c
  4492  000C08  D00A               	goto	l2562
  4493                           
  4494                           ; BSR set to: 0
  4495  000C0A  503C               	movf	_g_RS485_Byte,w,c
  4496  000C0C  0D01               	mullw	1
  4497  000C0E  0E3E               	movlw	low _ga_RS485_SendBuff
  4498  000C10  24F3               	addwf	prodl,w,c
  4499  000C12  6ED9               	movwf	fsr2l,c
  4500  000C14  0E00               	movlw	high _ga_RS485_SendBuff
  4501  000C16  20F4               	addwfc	prodh,w,c
  4502  000C18  6EDA               	movwf	fsr2h,c
  4503  000C1A  06DF               	decf	indf2,f,c
  4504  000C1C  D000               	goto	l2562
  4505  000C1E                     l2562:
  4506                           
  4507                           ; BSR set to: 0
  4508                           ;Key.c: 213: if (gs_Local_Key_User.a_key_state[6-1] == KEY_hold) ga_RS485_SendBuff[g_RS4
      +                          85_Byte] -- ;
  4509  000C1E  0E03               	movlw	3
  4510  000C20  0100               	movlb	0	; () banked
  4511  000C22  19C4               	xorwf	(_gs_Local_Key_User+20)& (0+255),w,b	;volatile
  4512  000C24  A4D8               	btfss	status,2,c
  4513  000C26  D00A               	goto	l2566
  4514                           
  4515                           ; BSR set to: 0
  4516  000C28  503C               	movf	_g_RS485_Byte,w,c
  4517  000C2A  0D01               	mullw	1
  4518  000C2C  0E3E               	movlw	low _ga_RS485_SendBuff
  4519  000C2E  24F3               	addwf	prodl,w,c
  4520  000C30  6ED9               	movwf	fsr2l,c
  4521  000C32  0E00               	movlw	high _ga_RS485_SendBuff
  4522  000C34  20F4               	addwfc	prodh,w,c
  4523  000C36  6EDA               	movwf	fsr2h,c
  4524  000C38  06DF               	decf	indf2,f,c
  4525  000C3A  D000               	goto	l2566
  4526  000C3C                     l2566:
  4527                           
  4528                           ; BSR set to: 0
  4529                           ;Key.c: 217: if( g_RS485_Byte > 250 ) g_RS485_Byte = 10 - 1;
  4530  000C3C  0EFA               	movlw	250
  4531  000C3E  643C               	cpfsgt	_g_RS485_Byte,c
  4532  000C40  D002               	goto	l2570
  4533                           
  4534                           ; BSR set to: 0
  4535  000C42  0E09               	movlw	9
  4536  000C44  D005               	goto	L3
  4537  000C46                     l2570:
  4538                           
  4539                           ; BSR set to: 0
  4540                           ;Key.c: 218: else g_RS485_Byte %= 10;
  4541  000C46  0E0A               	movlw	10
  4542  000C48  6E19               	movwf	___lbmod@divisor,c
  4543  000C4A  503C               	movf	_g_RS485_Byte,w,c
  4544  000C4C  ECD5  F009         	call	___lbmod
  4545  000C50                     L3:
  4546  000C50  6E3C               	movwf	_g_RS485_Byte,c
  4547  000C52  D000               	goto	l2572
  4548  000C54                     l2572:
  4549                           
  4550                           ;Key.c: 221: Key_ResetFSM();
  4551  000C54  ECF0  F008         	call	_Key_ResetFSM	;wreg free
  4552  000C58  0012               	return		;funcret
  4553  000C5A                     __end_of_Key_ManageMessage:
  4554                           	opt stack 0
  4555                           tblptru	equ	0xFF8
  4556                           tblptrh	equ	0xFF7
  4557                           tblptrl	equ	0xFF6
  4558                           tablat	equ	0xFF5
  4559                           prodh	equ	0xFF4
  4560                           prodl	equ	0xFF3
  4561                           intcon	equ	0xFF2
  4562                           postinc0	equ	0xFEE
  4563                           wreg	equ	0xFE8
  4564                           indf1	equ	0xFE7
  4565                           postdec1	equ	0xFE5
  4566                           fsr1h	equ	0xFE2
  4567                           fsr1l	equ	0xFE1
  4568                           indf2	equ	0xFDF
  4569                           postinc2	equ	0xFDE
  4570                           fsr2h	equ	0xFDA
  4571                           fsr2l	equ	0xFD9
  4572                           status	equ	0xFD8
  4573                           
  4574 ;; *************** function ___lbmod *****************
  4575 ;; Defined at:
  4576 ;;		line 4 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbmod.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;  dividend        1    wreg     unsigned char 
  4579 ;;  divisor         1   24[COMRAM] unsigned char 
  4580 ;; Auto vars:     Size  Location     Type
  4581 ;;  dividend        1   25[COMRAM] unsigned char 
  4582 ;;  rem             1   27[COMRAM] unsigned char 
  4583 ;;  counter         1   26[COMRAM] unsigned char 
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  1    wreg      unsigned char 
  4586 ;; Registers used:
  4587 ;;		wreg, status,2, status,0
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4593 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4594 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4596 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4597 ;;Total ram usage:        4 bytes
  4598 ;; Hardware stack levels used:    1
  4599 ;; Hardware stack levels required when called:    3
  4600 ;; This function calls:
  4601 ;;		Nothing
  4602 ;; This function is called by:
  4603 ;;		_Key_ManageMessage
  4604 ;; This function uses a non-reentrant model
  4605 ;;
  4606                           
  4607                           	psect	text28
  4608  0013AA                     __ptext28:
  4609                           	opt stack 0
  4610  0013AA                     ___lbmod:
  4611                           	opt stack 25
  4612                           
  4613                           ;incstack = 0
  4614                           ;___lbmod@dividend stored from wreg
  4615  0013AA  6E1A               	movwf	___lbmod@dividend,c
  4616  0013AC  0E08               	movlw	8
  4617  0013AE  6E1B               	movwf	___lbmod@counter,c
  4618  0013B0  0E00               	movlw	0
  4619  0013B2  6E1C               	movwf	___lbmod@rem,c
  4620  0013B4  D000               	goto	l2420
  4621  0013B6                     l2420:
  4622  0013B6  90D8               	bcf	status,0,c
  4623  0013B8  341A               	rlcf	___lbmod@dividend,w,c
  4624  0013BA  341C               	rlcf	___lbmod@rem,w,c
  4625  0013BC  6E1C               	movwf	___lbmod@rem,c
  4626  0013BE  90D8               	bcf	status,0,c
  4627  0013C0  361A               	rlcf	___lbmod@dividend,f,c
  4628  0013C2  5019               	movf	___lbmod@divisor,w,c
  4629  0013C4  5C1C               	subwf	___lbmod@rem,w,c
  4630  0013C6  A0D8               	btfss	status,0,c
  4631  0013C8  D003               	goto	l2428
  4632  0013CA  5019               	movf	___lbmod@divisor,w,c
  4633  0013CC  5E1C               	subwf	___lbmod@rem,f,c
  4634  0013CE  D000               	goto	l2428
  4635  0013D0                     l2428:
  4636  0013D0  2E1B               	decfsz	___lbmod@counter,f,c
  4637  0013D2  D7F1               	goto	l2420
  4638  0013D4  D000               	goto	l2430
  4639  0013D6                     l2430:
  4640  0013D6  501C               	movf	___lbmod@rem,w,c
  4641  0013D8  0012               	return	
  4642  0013DA  0012               	return		;funcret
  4643  0013DC                     __end_of___lbmod:
  4644                           	opt stack 0
  4645                           tblptru	equ	0xFF8
  4646                           tblptrh	equ	0xFF7
  4647                           tblptrl	equ	0xFF6
  4648                           tablat	equ	0xFF5
  4649                           prodh	equ	0xFF4
  4650                           prodl	equ	0xFF3
  4651                           intcon	equ	0xFF2
  4652                           postinc0	equ	0xFEE
  4653                           wreg	equ	0xFE8
  4654                           indf1	equ	0xFE7
  4655                           postdec1	equ	0xFE5
  4656                           fsr1h	equ	0xFE2
  4657                           fsr1l	equ	0xFE1
  4658                           indf2	equ	0xFDF
  4659                           postinc2	equ	0xFDE
  4660                           fsr2h	equ	0xFDA
  4661                           fsr2l	equ	0xFD9
  4662                           status	equ	0xFD8
  4663                           
  4664 ;; *************** function _Key_ResetFSM *****************
  4665 ;; Defined at:
  4666 ;;		line 162 in file "_01_USER/Key.c"
  4667 ;; Parameters:    Size  Location     Type
  4668 ;;		None
  4669 ;; Auto vars:     Size  Location     Type
  4670 ;;  t               1   24[COMRAM] unsigned char 
  4671 ;; Return value:  Size  Location     Type
  4672 ;;		None               void
  4673 ;; Registers used:
  4674 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4675 ;; Tracked objects:
  4676 ;;		On entry : 0/0
  4677 ;;		On exit  : 0/0
  4678 ;;		Unchanged: 0/0
  4679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4681 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4683 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4684 ;;Total ram usage:        1 bytes
  4685 ;; Hardware stack levels used:    1
  4686 ;; Hardware stack levels required when called:    3
  4687 ;; This function calls:
  4688 ;;		Nothing
  4689 ;; This function is called by:
  4690 ;;		_Key_ManageMessage
  4691 ;; This function uses a non-reentrant model
  4692 ;;
  4693                           
  4694                           	psect	text29
  4695  0011E0                     __ptext29:
  4696                           	opt stack 0
  4697  0011E0                     _Key_ResetFSM:
  4698                           	opt stack 25
  4699                           
  4700                           ;Key.c: 164: unsigned char t;
  4701                           ;Key.c: 165: gs_Local_Key_User.key_BUS = 0x00;
  4702                           
  4703                           ;incstack = 0
  4704  0011E0  0E00               	movlw	0
  4705  0011E2  0100               	movlb	0	; () banked
  4706  0011E4  6FB0               	movwf	_gs_Local_Key_User& (0+255),b	;volatile
  4707                           
  4708                           ;Key.c: 166: gs_Local_Key_User.key_group = KEY_default;
  4709  0011E6  0E00               	movlw	0
  4710  0011E8  0100               	movlb	0	; () banked
  4711  0011EA  6FB1               	movwf	(_gs_Local_Key_User+1)& (0+255),b	;volatile
  4712                           
  4713                           ;Key.c: 167: t=4;
  4714  0011EC  0E04               	movlw	4
  4715  0011EE  6E19               	movwf	Key_ResetFSM@t,c
  4716                           
  4717                           ;Key.c: 168: while(t--) gs_Local_Key_User.a_key_count[t] = 0,
  4718  0011F0  D017               	goto	l2298
  4719  0011F2                     l2296:
  4720                           
  4721                           ;Key.c: 169: gs_Local_Key_User.a_key_state[t] = KEY_default;
  4722  0011F2  5019               	movf	Key_ResetFSM@t,w,c
  4723  0011F4  0D02               	mullw	2
  4724  0011F6  0EB3               	movlw	low (_gs_Local_Key_User+3)
  4725  0011F8  24F3               	addwf	prodl,w,c
  4726  0011FA  6ED9               	movwf	fsr2l,c
  4727  0011FC  0E00               	movlw	high (_gs_Local_Key_User+3)
  4728  0011FE  20F4               	addwfc	prodh,w,c
  4729  001200  6EDA               	movwf	fsr2h,c
  4730  001202  0E00               	movlw	0
  4731  001204  6EDE               	movwf	postinc2,c
  4732  001206  0E00               	movlw	0
  4733  001208  6EDD               	movwf	postdec2,c
  4734  00120A  5019               	movf	Key_ResetFSM@t,w,c
  4735  00120C  0D01               	mullw	1
  4736  00120E  0EBF               	movlw	low (_gs_Local_Key_User+15)
  4737  001210  24F3               	addwf	prodl,w,c
  4738  001212  6ED9               	movwf	fsr2l,c
  4739  001214  0E00               	movlw	high (_gs_Local_Key_User+15)
  4740  001216  20F4               	addwfc	prodh,w,c
  4741  001218  6EDA               	movwf	fsr2h,c
  4742  00121A  0E00               	movlw	0
  4743  00121C  6EDF               	movwf	indf2,c
  4744  00121E  D000               	goto	l2298
  4745  001220                     l2298:
  4746  001220  0619               	decf	Key_ResetFSM@t,f,c
  4747  001222  2819               	incf	Key_ResetFSM@t,w,c
  4748  001224  A4D8               	btfss	status,2,c
  4749  001226  D7E5               	goto	l2296
  4750  001228  0012               	return		;funcret
  4751  00122A                     __end_of_Key_ResetFSM:
  4752                           	opt stack 0
  4753                           tblptru	equ	0xFF8
  4754                           tblptrh	equ	0xFF7
  4755                           tblptrl	equ	0xFF6
  4756                           tablat	equ	0xFF5
  4757                           prodh	equ	0xFF4
  4758                           prodl	equ	0xFF3
  4759                           intcon	equ	0xFF2
  4760                           postinc0	equ	0xFEE
  4761                           wreg	equ	0xFE8
  4762                           indf1	equ	0xFE7
  4763                           postdec1	equ	0xFE5
  4764                           fsr1h	equ	0xFE2
  4765                           fsr1l	equ	0xFE1
  4766                           indf2	equ	0xFDF
  4767                           postinc2	equ	0xFDE
  4768                           postdec2	equ	0xFDD
  4769                           fsr2h	equ	0xFDA
  4770                           fsr2l	equ	0xFD9
  4771                           status	equ	0xFD8
  4772                           
  4773 ;; *************** function _Key_ReadFSM *****************
  4774 ;; Defined at:
  4775 ;;		line 113 in file "_01_USER/Key.c"
  4776 ;; Parameters:    Size  Location     Type
  4777 ;;		None
  4778 ;; Auto vars:     Size  Location     Type
  4779 ;;  key_num         1   29[COMRAM] unsigned char 
  4780 ;;  key_num_mate    1   28[COMRAM] unsigned char 
  4781 ;; Return value:  Size  Location     Type
  4782 ;;		None               void
  4783 ;; Registers used:
  4784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4785 ;; Tracked objects:
  4786 ;;		On entry : 0/0
  4787 ;;		On exit  : 0/0
  4788 ;;		Unchanged: 0/0
  4789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4791 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4792 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4793 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4794 ;;Total ram usage:        6 bytes
  4795 ;; Hardware stack levels used:    1
  4796 ;; Hardware stack levels required when called:    3
  4797 ;; This function calls:
  4798 ;;		Nothing
  4799 ;; This function is called by:
  4800 ;;		_Key_ManageMessage
  4801 ;; This function uses a non-reentrant model
  4802 ;;
  4803                           
  4804                           	psect	text30
  4805  0004FE                     __ptext30:
  4806                           	opt stack 0
  4807  0004FE                     _Key_ReadFSM:
  4808                           	opt stack 25
  4809                           
  4810                           ;Key.c: 115: unsigned char key_num = 6,key_num_mate;
  4811                           
  4812                           ;incstack = 0
  4813  0004FE  0E06               	movlw	6
  4814  000500  6E1E               	movwf	Key_ReadFSM@key_num,c
  4815                           
  4816                           ;Key.c: 118: while(key_num--)
  4817  000502  D072               	goto	l2266
  4818  000504                     l2248:
  4819                           
  4820                           ;Key.c: 119: {
  4821                           ;Key.c: 121: if( s_Local_Key_FSM.key_BUS == 0x00 )
  4822  000504  0100               	movlb	0	; () banked
  4823  000506  51C5               	movf	_s_Local_Key_FSM& (0+255),w,b	;volatile
  4824  000508  A4D8               	btfss	status,2,c
  4825  00050A  D04A               	goto	l2260
  4826                           
  4827                           ; BSR set to: 0
  4828                           ;Key.c: 122: {
  4829                           ;Key.c: 123: if( s_Local_Key_FSM.a_key_count[key_num] > 5 )
  4830  00050C  501E               	movf	Key_ReadFSM@key_num,w,c
  4831  00050E  0D02               	mullw	2
  4832  000510  0EC8               	movlw	low (_s_Local_Key_FSM+3)
  4833  000512  24F3               	addwf	prodl,w,c
  4834  000514  6ED9               	movwf	fsr2l,c
  4835  000516  0E00               	movlw	high (_s_Local_Key_FSM+3)
  4836  000518  20F4               	addwfc	prodh,w,c
  4837  00051A  6EDA               	movwf	fsr2h,c
  4838  00051C  0E01               	movlw	1
  4839  00051E  50DB               	movf	plusw2,w,c
  4840  000520  E104               	bnz	u1770
  4841  000522  0E06               	movlw	6
  4842  000524  5CDE               	subwf	postinc2,w,c
  4843  000526  A0D8               	btfss	status,0,c
  4844  000528  D024               	goto	l2258
  4845  00052A                     u1770:
  4846                           
  4847                           ; BSR set to: 0
  4848                           ;Key.c: 124: {
  4849                           ;Key.c: 125: if( s_Local_Key_FSM.a_key_count[key_num] > 60 )
  4850  00052A  501E               	movf	Key_ReadFSM@key_num,w,c
  4851  00052C  0D02               	mullw	2
  4852  00052E  0EC8               	movlw	low (_s_Local_Key_FSM+3)
  4853  000530  24F3               	addwf	prodl,w,c
  4854  000532  6ED9               	movwf	fsr2l,c
  4855  000534  0E00               	movlw	high (_s_Local_Key_FSM+3)
  4856  000536  20F4               	addwfc	prodh,w,c
  4857  000538  6EDA               	movwf	fsr2h,c
  4858  00053A  0E01               	movlw	1
  4859  00053C  50DB               	movf	plusw2,w,c
  4860  00053E  E104               	bnz	u1780
  4861  000540  0E3D               	movlw	61
  4862  000542  5CDE               	subwf	postinc2,w,c
  4863  000544  A0D8               	btfss	status,0,c
  4864  000546  D00A               	goto	l2256
  4865  000548                     u1780:
  4866                           
  4867                           ; BSR set to: 0
  4868                           ;Key.c: 126: gs_Local_Key_User.a_key_state[key_num] = KEY_long;
  4869  000548  501E               	movf	Key_ReadFSM@key_num,w,c
  4870  00054A  0D01               	mullw	1
  4871  00054C  0EBF               	movlw	low (_gs_Local_Key_User+15)
  4872  00054E  24F3               	addwf	prodl,w,c
  4873  000550  6ED9               	movwf	fsr2l,c
  4874  000552  0E00               	movlw	high (_gs_Local_Key_User+15)
  4875  000554  20F4               	addwfc	prodh,w,c
  4876  000556  6EDA               	movwf	fsr2h,c
  4877  000558  0E05               	movlw	5
  4878  00055A  D014               	goto	L4
  4879  00055C                     l2256:
  4880                           
  4881                           ; BSR set to: 0
  4882                           ;Key.c: 127: else gs_Local_Key_User.a_key_state[key_num] = KEY_short;
  4883  00055C  501E               	movf	Key_ReadFSM@key_num,w,c
  4884  00055E  0D01               	mullw	1
  4885  000560  0EBF               	movlw	low (_gs_Local_Key_User+15)
  4886  000562  24F3               	addwf	prodl,w,c
  4887  000564  6ED9               	movwf	fsr2l,c
  4888  000566  0E00               	movlw	high (_gs_Local_Key_User+15)
  4889  000568  20F4               	addwfc	prodh,w,c
  4890  00056A  6EDA               	movwf	fsr2h,c
  4891  00056C  0E01               	movlw	1
  4892  00056E  6EDF               	movwf	indf2,c
  4893                           
  4894                           ; BSR set to: 0
  4895                           ;Key.c: 128: }
  4896  000570  D00A               	goto	l151
  4897  000572                     l2258:
  4898                           
  4899                           ; BSR set to: 0
  4900                           ;Key.c: 129: else gs_Local_Key_User.a_key_state[key_num] = KEY_default;
  4901  000572  501E               	movf	Key_ReadFSM@key_num,w,c
  4902  000574  0D01               	mullw	1
  4903  000576  0EBF               	movlw	low (_gs_Local_Key_User+15)
  4904  000578  24F3               	addwf	prodl,w,c
  4905  00057A  6ED9               	movwf	fsr2l,c
  4906  00057C  0E00               	movlw	high (_gs_Local_Key_User+15)
  4907  00057E  20F4               	addwfc	prodh,w,c
  4908  000580  6EDA               	movwf	fsr2h,c
  4909  000582  0E00               	movlw	0
  4910  000584                     L4:
  4911  000584  6EDF               	movwf	indf2,c
  4912  000586                     l151:
  4913                           
  4914                           ; BSR set to: 0
  4915                           ;Key.c: 130: s_Local_Key_FSM.a_key_count[key_num] = 0;
  4916  000586  501E               	movf	Key_ReadFSM@key_num,w,c
  4917  000588  0D02               	mullw	2
  4918  00058A  0EC8               	movlw	low (_s_Local_Key_FSM+3)
  4919  00058C  24F3               	addwf	prodl,w,c
  4920  00058E  6ED9               	movwf	fsr2l,c
  4921  000590  0E00               	movlw	high (_s_Local_Key_FSM+3)
  4922  000592  20F4               	addwfc	prodh,w,c
  4923  000594  6EDA               	movwf	fsr2h,c
  4924  000596  0E00               	movlw	0
  4925  000598  6EDE               	movwf	postinc2,c
  4926  00059A  0E00               	movlw	0
  4927  00059C  6EDD               	movwf	postdec2,c
  4928                           
  4929                           ;Key.c: 131: }
  4930  00059E  D024               	goto	l2266
  4931  0005A0                     l2260:
  4932                           
  4933                           ; BSR set to: 0
  4934                           ;Key.c: 133: else if( s_Local_Key_FSM.a_key_count[key_num] > 60 )
  4935  0005A0  501E               	movf	Key_ReadFSM@key_num,w,c
  4936  0005A2  0D02               	mullw	2
  4937  0005A4  0EC8               	movlw	low (_s_Local_Key_FSM+3)
  4938  0005A6  24F3               	addwf	prodl,w,c
  4939  0005A8  6ED9               	movwf	fsr2l,c
  4940  0005AA  0E00               	movlw	high (_s_Local_Key_FSM+3)
  4941  0005AC  20F4               	addwfc	prodh,w,c
  4942  0005AE  6EDA               	movwf	fsr2h,c
  4943  0005B0  0E01               	movlw	1
  4944  0005B2  50DB               	movf	plusw2,w,c
  4945  0005B4  E104               	bnz	u1790
  4946  0005B6  0E3D               	movlw	61
  4947  0005B8  5CDE               	subwf	postinc2,w,c
  4948  0005BA  A0D8               	btfss	status,0,c
  4949  0005BC  D00A               	goto	l2264
  4950  0005BE                     u1790:
  4951                           
  4952                           ; BSR set to: 0
  4953                           ;Key.c: 134: gs_Local_Key_User.a_key_state[key_num] = KEY_hold;
  4954  0005BE  501E               	movf	Key_ReadFSM@key_num,w,c
  4955  0005C0  0D01               	mullw	1
  4956  0005C2  0EBF               	movlw	low (_gs_Local_Key_User+15)
  4957  0005C4  24F3               	addwf	prodl,w,c
  4958  0005C6  6ED9               	movwf	fsr2l,c
  4959  0005C8  0E00               	movlw	high (_gs_Local_Key_User+15)
  4960  0005CA  20F4               	addwfc	prodh,w,c
  4961  0005CC  6EDA               	movwf	fsr2h,c
  4962  0005CE  0E03               	movlw	3
  4963  0005D0  D009               	goto	L5
  4964  0005D2                     l2264:
  4965                           
  4966                           ; BSR set to: 0
  4967                           ;Key.c: 137: else gs_Local_Key_User.a_key_state[key_num] = KEY_busy;
  4968  0005D2  501E               	movf	Key_ReadFSM@key_num,w,c
  4969  0005D4  0D01               	mullw	1
  4970  0005D6  0EBF               	movlw	low (_gs_Local_Key_User+15)
  4971  0005D8  24F3               	addwf	prodl,w,c
  4972  0005DA  6ED9               	movwf	fsr2l,c
  4973  0005DC  0E00               	movlw	high (_gs_Local_Key_User+15)
  4974  0005DE  20F4               	addwfc	prodh,w,c
  4975  0005E0  6EDA               	movwf	fsr2h,c
  4976  0005E2  0E04               	movlw	4
  4977  0005E4                     L5:
  4978  0005E4  6EDF               	movwf	indf2,c
  4979                           
  4980                           ; BSR set to: 0
  4981                           
  4982                           ; BSR set to: 0
  4983  0005E6  D000               	goto	l2266
  4984  0005E8                     l2266:
  4985  0005E8  061E               	decf	Key_ReadFSM@key_num,f,c
  4986  0005EA  281E               	incf	Key_ReadFSM@key_num,w,c
  4987  0005EC  A4D8               	btfss	status,2,c
  4988  0005EE  D78A               	goto	l2248
  4989                           
  4990                           ;Key.c: 138: }
  4991                           ;Key.c: 141: for( key_num = 0;key_num < 6 - 1; key_num ++)
  4992  0005F0  0E00               	movlw	0
  4993  0005F2  6E1E               	movwf	Key_ReadFSM@key_num,c
  4994  0005F4  0E04               	movlw	4
  4995  0005F6  641E               	cpfsgt	Key_ReadFSM@key_num,c
  4996  0005F8  D002               	goto	l2274
  4997  0005FA  0012               	return	
  4998  0005FC  0012               	return	
  4999  0005FE                     l2274:
  5000                           
  5001                           ;Key.c: 142: for( key_num_mate = key_num+1;key_num_mate < 6 ; key_num_mate ++)
  5002  0005FE  281E               	incf	Key_ReadFSM@key_num,w,c
  5003  000600  6E1D               	movwf	Key_ReadFSM@key_num_mate,c
  5004  000602  0E05               	movlw	5
  5005  000604  641D               	cpfsgt	Key_ReadFSM@key_num_mate,c
  5006  000606  D001               	goto	l2278
  5007  000608  D045               	goto	l2290
  5008  00060A                     l2278:
  5009                           
  5010                           ;Key.c: 143: if( gs_Local_Key_User.a_key_state[key_num] == gs_Local_Key_User.a_key_state
      +                          [key_num_mate] )
  5011  00060A  501D               	movf	Key_ReadFSM@key_num_mate,w,c
  5012  00060C  0D01               	mullw	1
  5013  00060E  0EBF               	movlw	low (_gs_Local_Key_User+15)
  5014  000610  24F3               	addwf	prodl,w,c
  5015  000612  6ED9               	movwf	fsr2l,c
  5016  000614  0E00               	movlw	high (_gs_Local_Key_User+15)
  5017  000616  20F4               	addwfc	prodh,w,c
  5018  000618  6EDA               	movwf	fsr2h,c
  5019  00061A  501E               	movf	Key_ReadFSM@key_num,w,c
  5020  00061C  0D01               	mullw	1
  5021  00061E  0EBF               	movlw	low (_gs_Local_Key_User+15)
  5022  000620  24F3               	addwf	prodl,w,c
  5023  000622  6EE1               	movwf	fsr1l,c
  5024  000624  0E00               	movlw	high (_gs_Local_Key_User+15)
  5025  000626  20F4               	addwfc	prodh,w,c
  5026  000628  6EE2               	movwf	fsr1h,c
  5027  00062A  50DE               	movf	postinc2,w,c
  5028  00062C  18E6               	xorwf	postinc1,w,c
  5029  00062E  A4D8               	btfss	status,2,c
  5030  000630  D02F               	goto	l2286
  5031                           
  5032                           ;Key.c: 144: if(gs_Local_Key_User.a_key_state[key_num] != KEY_default)
  5033  000632  501E               	movf	Key_ReadFSM@key_num,w,c
  5034  000634  0D01               	mullw	1
  5035  000636  0EBF               	movlw	low (_gs_Local_Key_User+15)
  5036  000638  24F3               	addwf	prodl,w,c
  5037  00063A  6ED9               	movwf	fsr2l,c
  5038  00063C  0E00               	movlw	high (_gs_Local_Key_User+15)
  5039  00063E  20F4               	addwfc	prodh,w,c
  5040  000640  6EDA               	movwf	fsr2h,c
  5041  000642  50DF               	movf	indf2,w,c
  5042  000644  B4D8               	btfsc	status,2,c
  5043  000646  D024               	goto	l2286
  5044                           
  5045                           ;Key.c: 145: {
  5046                           ;Key.c: 146: gs_Local_Key_User.key_group = (0x01 << key_num)|(0x01 << key_num_mate);
  5047  000648  C01D  F019         	movff	Key_ReadFSM@key_num_mate,??_Key_ReadFSM
  5048  00064C  0E01               	movlw	1
  5049  00064E  6E1A               	movwf	(??_Key_ReadFSM+1)& (0+255),c
  5050  000650  2A19               	incf	??_Key_ReadFSM,f,c
  5051  000652  D002               	goto	u1854
  5052  000654                     u1855:
  5053  000654  90D8               	bcf	status,0,c
  5054  000656  361A               	rlcf	??_Key_ReadFSM+1,f,c
  5055  000658                     u1854:
  5056  000658  2E19               	decfsz	??_Key_ReadFSM,f,c
  5057  00065A  D7FC               	goto	u1855
  5058  00065C  C01E  F01B         	movff	Key_ReadFSM@key_num,??_Key_ReadFSM+2
  5059  000660  0E01               	movlw	1
  5060  000662  6E1C               	movwf	(??_Key_ReadFSM+3)& (0+255),c
  5061  000664  2A1B               	incf	??_Key_ReadFSM+2,f,c
  5062  000666  D002               	goto	u1864
  5063  000668                     u1865:
  5064  000668  90D8               	bcf	status,0,c
  5065  00066A  361C               	rlcf	??_Key_ReadFSM+3,f,c
  5066  00066C                     u1864:
  5067  00066C  2E1B               	decfsz	??_Key_ReadFSM+2,f,c
  5068  00066E  D7FC               	goto	u1865
  5069  000670  501C               	movf	??_Key_ReadFSM+3,w,c
  5070  000672  101A               	iorwf	??_Key_ReadFSM+1,w,c
  5071  000674  0100               	movlb	0	; () banked
  5072  000676  6FB1               	movwf	(_gs_Local_Key_User+1)& (0+255),b	;volatile
  5073                           
  5074                           ; BSR set to: 0
  5075                           ;Key.c: 147: gs_Local_Key_User.key_group_state = gs_Local_Key_User.a_key_state[key_num];
  5076  000678  501E               	movf	Key_ReadFSM@key_num,w,c
  5077  00067A  0D01               	mullw	1
  5078  00067C  0EBF               	movlw	low (_gs_Local_Key_User+15)
  5079  00067E  24F3               	addwf	prodl,w,c
  5080  000680  6ED9               	movwf	fsr2l,c
  5081  000682  0E00               	movlw	high (_gs_Local_Key_User+15)
  5082  000684  20F4               	addwfc	prodh,w,c
  5083  000686  6EDA               	movwf	fsr2h,c
  5084  000688  50DF               	movf	indf2,w,c
  5085  00068A  0100               	movlb	0	; () banked
  5086  00068C  6FB2               	movwf	(_gs_Local_Key_User+2)& (0+255),b	;volatile
  5087                           
  5088                           ; BSR set to: 0
  5089  00068E  D000               	goto	l2286
  5090  000690                     l2286:
  5091  000690  2A1D               	incf	Key_ReadFSM@key_num_mate,f,c
  5092  000692  D7B7               	goto	L6
  5093  000694                     l2290:
  5094  000694  2A1E               	incf	Key_ReadFSM@key_num,f,c
  5095  000696  0E04               	movlw	4
  5096  000698  641E               	cpfsgt	Key_ReadFSM@key_num,c
  5097  00069A  D7B1               	goto	l2274
  5098  00069C  0012               	return	
  5099  00069E  0012               	return		;funcret
  5100  0006A0                     __end_of_Key_ReadFSM:
  5101                           	opt stack 0
  5102                           tblptru	equ	0xFF8
  5103                           tblptrh	equ	0xFF7
  5104                           tblptrl	equ	0xFF6
  5105                           tablat	equ	0xFF5
  5106                           prodh	equ	0xFF4
  5107                           prodl	equ	0xFF3
  5108                           intcon	equ	0xFF2
  5109                           postinc0	equ	0xFEE
  5110                           wreg	equ	0xFE8
  5111                           indf1	equ	0xFE7
  5112                           postinc1	equ	0xFE6
  5113                           postdec1	equ	0xFE5
  5114                           fsr1h	equ	0xFE2
  5115                           fsr1l	equ	0xFE1
  5116                           indf2	equ	0xFDF
  5117                           postinc2	equ	0xFDE
  5118                           postdec2	equ	0xFDD
  5119                           plusw2	equ	0xFDB
  5120                           fsr2h	equ	0xFDA
  5121                           fsr2l	equ	0xFD9
  5122                           status	equ	0xFD8
  5123                           
  5124 ;; *************** function _Key_Init *****************
  5125 ;; Defined at:
  5126 ;;		line 42 in file "_01_USER/Key.c"
  5127 ;; Parameters:    Size  Location     Type
  5128 ;;		None
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;		None
  5131 ;; Return value:  Size  Location     Type
  5132 ;;		None               void
  5133 ;; Registers used:
  5134 ;;		None
  5135 ;; Tracked objects:
  5136 ;;		On entry : 0/0
  5137 ;;		On exit  : 0/0
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5144 ;;Total ram usage:        0 bytes
  5145 ;; Hardware stack levels used:    1
  5146 ;; Hardware stack levels required when called:    3
  5147 ;; This function calls:
  5148 ;;		Nothing
  5149 ;; This function is called by:
  5150 ;;		_main
  5151 ;; This function uses a non-reentrant model
  5152 ;;
  5153                           
  5154                           	psect	text31
  5155  0015BA                     __ptext31:
  5156                           	opt stack 0
  5157  0015BA                     _Key_Init:
  5158                           	opt stack 27
  5159                           
  5160                           ;Key.c: 45: TRISC1 = 1;
  5161                           
  5162                           ;incstack = 0
  5163  0015BA  8294               	bsf	3988,1,c	;volatile
  5164                           
  5165                           ;Key.c: 46: TRISF1 = 1;
  5166  0015BC  8297               	bsf	3991,1,c	;volatile
  5167                           
  5168                           ;Key.c: 47: TRISF2 = 1;
  5169  0015BE  8497               	bsf	3991,2,c	;volatile
  5170                           
  5171                           ;Key.c: 48: TRISA4 = 1;
  5172  0015C0  8892               	bsf	3986,4,c	;volatile
  5173                           
  5174                           ;Key.c: 49: TRISA5 = 1;
  5175  0015C2  8A92               	bsf	3986,5,c	;volatile
  5176                           
  5177                           ;Key.c: 50: TRISF3 = 1;
  5178  0015C4  8697               	bsf	3991,3,c	;volatile
  5179                           
  5180                           ;Key.c: 53: ANSEL4 = 0;
  5181  0015C6  010F               	movlb	15	; () banked
  5182  0015C8  9925               	bcf	37,4,b	;volatile
  5183                           
  5184                           ;Key.c: 54: ANSEL6 = 0;
  5185  0015CA  010F               	movlb	15	; () banked
  5186  0015CC  9D25               	bcf	37,6,b	;volatile
  5187                           
  5188                           ;Key.c: 55: ANSEL7 = 0;
  5189  0015CE  010F               	movlb	15	; () banked
  5190  0015D0  9F25               	bcf	37,7,b	;volatile
  5191                           
  5192                           ;Key.c: 56: ANSEL8 = 0;
  5193  0015D2  010F               	movlb	15	; () banked
  5194  0015D4  9124               	bcf	36,0,b	;volatile
  5195                           
  5196                           ; BSR set to: 15
  5197  0015D6  0012               	return		;funcret
  5198  0015D8                     __end_of_Key_Init:
  5199                           	opt stack 0
  5200                           tblptru	equ	0xFF8
  5201                           tblptrh	equ	0xFF7
  5202                           tblptrl	equ	0xFF6
  5203                           tablat	equ	0xFF5
  5204                           prodh	equ	0xFF4
  5205                           prodl	equ	0xFF3
  5206                           intcon	equ	0xFF2
  5207                           postinc0	equ	0xFEE
  5208                           wreg	equ	0xFE8
  5209                           indf1	equ	0xFE7
  5210                           postinc1	equ	0xFE6
  5211                           postdec1	equ	0xFE5
  5212                           fsr1h	equ	0xFE2
  5213                           fsr1l	equ	0xFE1
  5214                           indf2	equ	0xFDF
  5215                           postinc2	equ	0xFDE
  5216                           postdec2	equ	0xFDD
  5217                           plusw2	equ	0xFDB
  5218                           fsr2h	equ	0xFDA
  5219                           fsr2l	equ	0xFD9
  5220                           status	equ	0xFD8
  5221                           
  5222 ;; *************** function _Init_TM1640 *****************
  5223 ;; Defined at:
  5224 ;;		line 21 in file "_01_USER/TM1640.c"
  5225 ;; Parameters:    Size  Location     Type
  5226 ;;		None
  5227 ;; Auto vars:     Size  Location     Type
  5228 ;;		None
  5229 ;; Return value:  Size  Location     Type
  5230 ;;		None               void
  5231 ;; Registers used:
  5232 ;;		wreg, status,2, status,0, cstack
  5233 ;; Tracked objects:
  5234 ;;		On entry : 0/0
  5235 ;;		On exit  : 0/0
  5236 ;;		Unchanged: 0/0
  5237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5242 ;;Total ram usage:        0 bytes
  5243 ;; Hardware stack levels used:    1
  5244 ;; Hardware stack levels required when called:    5
  5245 ;; This function calls:
  5246 ;;		_TM1640_Start
  5247 ;;		_TM1640_Stop
  5248 ;;		_TM1640_Writer_Byte
  5249 ;; This function is called by:
  5250 ;;		_main
  5251 ;; This function uses a non-reentrant model
  5252 ;;
  5253                           
  5254                           	psect	text32
  5255  0014E0                     __ptext32:
  5256                           	opt stack 0
  5257  0014E0                     _Init_TM1640:
  5258                           	opt stack 25
  5259                           
  5260                           ;TM1640.c: 24: TRISD5 = 0;
  5261                           
  5262                           ; BSR set to: 15
  5263                           ;incstack = 0
  5264  0014E0  9A95               	bcf	3989,5,c	;volatile
  5265                           
  5266                           ;TM1640.c: 25: TRISD6 = 0;
  5267  0014E2  9C95               	bcf	3989,6,c	;volatile
  5268                           
  5269                           ;TM1640.c: 27: TM1640_Stop();
  5270  0014E4  ECA8  F00A         	call	_TM1640_Stop	;wreg free
  5271                           
  5272                           ;TM1640.c: 29: TM1640_Start();
  5273  0014E8  ECBA  F00A         	call	_TM1640_Start	;wreg free
  5274                           
  5275                           ;TM1640.c: 30: TM1640_Writer_Byte(0x44);
  5276  0014EC  0E44               	movlw	68
  5277  0014EE  EC9A  F009         	call	_TM1640_Writer_Byte
  5278                           
  5279                           ;TM1640.c: 31: TM1640_Stop();
  5280  0014F2  ECA8  F00A         	call	_TM1640_Stop	;wreg free
  5281                           
  5282                           ;TM1640.c: 33: TM1640_Start();
  5283  0014F6  ECBA  F00A         	call	_TM1640_Start	;wreg free
  5284                           
  5285                           ;TM1640.c: 34: TM1640_Writer_Byte(0x8F);
  5286  0014FA  0E8F               	movlw	143
  5287  0014FC  EC9A  F009         	call	_TM1640_Writer_Byte
  5288                           
  5289                           ;TM1640.c: 35: TM1640_Stop();
  5290  001500  ECA8  F00A         	call	_TM1640_Stop	;wreg free
  5291  001504  0012               	return		;funcret
  5292  001506                     __end_of_Init_TM1640:
  5293                           	opt stack 0
  5294                           tblptru	equ	0xFF8
  5295                           tblptrh	equ	0xFF7
  5296                           tblptrl	equ	0xFF6
  5297                           tablat	equ	0xFF5
  5298                           prodh	equ	0xFF4
  5299                           prodl	equ	0xFF3
  5300                           intcon	equ	0xFF2
  5301                           postinc0	equ	0xFEE
  5302                           wreg	equ	0xFE8
  5303                           indf1	equ	0xFE7
  5304                           postinc1	equ	0xFE6
  5305                           postdec1	equ	0xFE5
  5306                           fsr1h	equ	0xFE2
  5307                           fsr1l	equ	0xFE1
  5308                           indf2	equ	0xFDF
  5309                           postinc2	equ	0xFDE
  5310                           postdec2	equ	0xFDD
  5311                           plusw2	equ	0xFDB
  5312                           fsr2h	equ	0xFDA
  5313                           fsr2l	equ	0xFD9
  5314                           status	equ	0xFD8
  5315                           
  5316 ;; *************** function _TM1640_Writer_Byte *****************
  5317 ;; Defined at:
  5318 ;;		line 116 in file "_01_USER/TM1640.c"
  5319 ;; Parameters:    Size  Location     Type
  5320 ;;  Date            1    wreg     unsigned char 
  5321 ;; Auto vars:     Size  Location     Type
  5322 ;;  Date            1   26[COMRAM] unsigned char 
  5323 ;;  mask            1   27[COMRAM] unsigned char 
  5324 ;; Return value:  Size  Location     Type
  5325 ;;		None               void
  5326 ;; Registers used:
  5327 ;;		wreg, status,2, status,0, cstack
  5328 ;; Tracked objects:
  5329 ;;		On entry : 0/0
  5330 ;;		On exit  : 0/0
  5331 ;;		Unchanged: 0/0
  5332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5334 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5336 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5337 ;;Total ram usage:        2 bytes
  5338 ;; Hardware stack levels used:    1
  5339 ;; Hardware stack levels required when called:    4
  5340 ;; This function calls:
  5341 ;;		_TM1640_Delay
  5342 ;; This function is called by:
  5343 ;;		_Init_TM1640
  5344 ;;		_TM1640_Writer_Dates
  5345 ;;		_Open_Display
  5346 ;;		_Disable_Display
  5347 ;; This function uses a non-reentrant model
  5348 ;;
  5349                           
  5350                           	psect	text33
  5351  001334                     __ptext33:
  5352                           	opt stack 0
  5353  001334                     _TM1640_Writer_Byte:
  5354                           	opt stack 24
  5355                           
  5356                           ;incstack = 0
  5357                           ;TM1640_Writer_Byte@Date stored from wreg
  5358  001334  6E1B               	movwf	TM1640_Writer_Byte@Date,c
  5359                           
  5360                           ;TM1640.c: 118: unsigned char mask;
  5361                           ;TM1640.c: 120: for(mask=0x01; mask; mask<<=1)
  5362  001336  0E01               	movlw	1
  5363  001338  6E1C               	movwf	TM1640_Writer_Byte@mask,c
  5364  00133A  D017               	goto	l2170
  5365  00133C                     l381:
  5366                           
  5367                           ;TM1640.c: 121: {
  5368                           ;TM1640.c: 122: RD6 = 0;
  5369  00133C  9C83               	bcf	3971,6,c	;volatile
  5370                           
  5371                           ;TM1640.c: 123: TM1640_Delay(1);
  5372  00133E  0E01               	movlw	1
  5373  001340  ECEC  F00A         	call	_TM1640_Delay
  5374                           
  5375                           ;TM1640.c: 124: if(mask & Date)
  5376  001344  501C               	movf	TM1640_Writer_Byte@mask,w,c
  5377  001346  141B               	andwf	TM1640_Writer_Byte@Date,w,c
  5378  001348  0900               	iorlw	0
  5379  00134A  B4D8               	btfsc	status,2,c
  5380  00134C  D002               	goto	l382
  5381                           
  5382                           ;TM1640.c: 125: RD5 = 1;
  5383  00134E  8A83               	bsf	3971,5,c	;volatile
  5384  001350  D002               	goto	l2164
  5385  001352                     l382:
  5386                           
  5387                           ;TM1640.c: 126: else
  5388                           ;TM1640.c: 127: RD5 = 0;
  5389  001352  9A83               	bcf	3971,5,c	;volatile
  5390  001354  D000               	goto	l2164
  5391  001356                     l2164:
  5392                           
  5393                           ;TM1640.c: 128: TM1640_Delay(1);
  5394  001356  0E01               	movlw	1
  5395  001358  ECEC  F00A         	call	_TM1640_Delay
  5396                           
  5397                           ;TM1640.c: 129: RD6 = 1;
  5398  00135C  8C83               	bsf	3971,6,c	;volatile
  5399                           
  5400                           ;TM1640.c: 130: TM1640_Delay(1);
  5401  00135E  0E01               	movlw	1
  5402  001360  ECEC  F00A         	call	_TM1640_Delay
  5403  001364  90D8               	bcf	status,0,c
  5404  001366  361C               	rlcf	TM1640_Writer_Byte@mask,f,c
  5405  001368  D000               	goto	l2170
  5406  00136A                     l2170:
  5407  00136A  501C               	movf	TM1640_Writer_Byte@mask,w,c
  5408  00136C  A4D8               	btfss	status,2,c
  5409  00136E  D7E6               	goto	l381
  5410  001370  0012               	return		;funcret
  5411  001372                     __end_of_TM1640_Writer_Byte:
  5412                           	opt stack 0
  5413                           tblptru	equ	0xFF8
  5414                           tblptrh	equ	0xFF7
  5415                           tblptrl	equ	0xFF6
  5416                           tablat	equ	0xFF5
  5417                           prodh	equ	0xFF4
  5418                           prodl	equ	0xFF3
  5419                           intcon	equ	0xFF2
  5420                           postinc0	equ	0xFEE
  5421                           wreg	equ	0xFE8
  5422                           indf1	equ	0xFE7
  5423                           postinc1	equ	0xFE6
  5424                           postdec1	equ	0xFE5
  5425                           fsr1h	equ	0xFE2
  5426                           fsr1l	equ	0xFE1
  5427                           indf2	equ	0xFDF
  5428                           postinc2	equ	0xFDE
  5429                           postdec2	equ	0xFDD
  5430                           plusw2	equ	0xFDB
  5431                           fsr2h	equ	0xFDA
  5432                           fsr2l	equ	0xFD9
  5433                           status	equ	0xFD8
  5434                           
  5435 ;; *************** function _TM1640_Stop *****************
  5436 ;; Defined at:
  5437 ;;		line 63 in file "_01_USER/TM1640.c"
  5438 ;; Parameters:    Size  Location     Type
  5439 ;;		None
  5440 ;; Auto vars:     Size  Location     Type
  5441 ;;		None
  5442 ;; Return value:  Size  Location     Type
  5443 ;;		None               void
  5444 ;; Registers used:
  5445 ;;		wreg, status,2, status,0, cstack
  5446 ;; Tracked objects:
  5447 ;;		On entry : 0/0
  5448 ;;		On exit  : 0/0
  5449 ;;		Unchanged: 0/0
  5450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5455 ;;Total ram usage:        0 bytes
  5456 ;; Hardware stack levels used:    1
  5457 ;; Hardware stack levels required when called:    4
  5458 ;; This function calls:
  5459 ;;		_TM1640_Delay
  5460 ;; This function is called by:
  5461 ;;		_Init_TM1640
  5462 ;;		_TM1640_Writer_Dates
  5463 ;;		_Open_Display
  5464 ;;		_Disable_Display
  5465 ;; This function uses a non-reentrant model
  5466 ;;
  5467                           
  5468                           	psect	text34
  5469  001550                     __ptext34:
  5470                           	opt stack 0
  5471  001550                     _TM1640_Stop:
  5472                           	opt stack 24
  5473                           
  5474                           ;TM1640.c: 65: RD6 = 0;
  5475                           
  5476                           ;incstack = 0
  5477  001550  9C83               	bcf	3971,6,c	;volatile
  5478                           
  5479                           ;TM1640.c: 66: TM1640_Delay(1);
  5480  001552  0E01               	movlw	1
  5481  001554  ECEC  F00A         	call	_TM1640_Delay
  5482                           
  5483                           ;TM1640.c: 67: RD5 = 0;
  5484  001558  9A83               	bcf	3971,5,c	;volatile
  5485                           
  5486                           ;TM1640.c: 68: TM1640_Delay(1);
  5487  00155A  0E01               	movlw	1
  5488  00155C  ECEC  F00A         	call	_TM1640_Delay
  5489                           
  5490                           ;TM1640.c: 69: RD6 = 1;
  5491  001560  8C83               	bsf	3971,6,c	;volatile
  5492                           
  5493                           ;TM1640.c: 70: TM1640_Delay(1);
  5494  001562  0E01               	movlw	1
  5495  001564  ECEC  F00A         	call	_TM1640_Delay
  5496                           
  5497                           ;TM1640.c: 71: RD5 = 1;
  5498  001568  8A83               	bsf	3971,5,c	;volatile
  5499                           
  5500                           ;TM1640.c: 72: TM1640_Delay(1);
  5501  00156A  0E01               	movlw	1
  5502  00156C  ECEC  F00A         	call	_TM1640_Delay
  5503                           
  5504                           ;TM1640.c: 73: RD6 = 0;
  5505  001570  9C83               	bcf	3971,6,c	;volatile
  5506  001572  0012               	return		;funcret
  5507  001574                     __end_of_TM1640_Stop:
  5508                           	opt stack 0
  5509                           tblptru	equ	0xFF8
  5510                           tblptrh	equ	0xFF7
  5511                           tblptrl	equ	0xFF6
  5512                           tablat	equ	0xFF5
  5513                           prodh	equ	0xFF4
  5514                           prodl	equ	0xFF3
  5515                           intcon	equ	0xFF2
  5516                           postinc0	equ	0xFEE
  5517                           wreg	equ	0xFE8
  5518                           indf1	equ	0xFE7
  5519                           postinc1	equ	0xFE6
  5520                           postdec1	equ	0xFE5
  5521                           fsr1h	equ	0xFE2
  5522                           fsr1l	equ	0xFE1
  5523                           indf2	equ	0xFDF
  5524                           postinc2	equ	0xFDE
  5525                           postdec2	equ	0xFDD
  5526                           plusw2	equ	0xFDB
  5527                           fsr2h	equ	0xFDA
  5528                           fsr2l	equ	0xFD9
  5529                           status	equ	0xFD8
  5530                           
  5531 ;; *************** function _TM1640_Start *****************
  5532 ;; Defined at:
  5533 ;;		line 44 in file "_01_USER/TM1640.c"
  5534 ;; Parameters:    Size  Location     Type
  5535 ;;		None
  5536 ;; Auto vars:     Size  Location     Type
  5537 ;;		None
  5538 ;; Return value:  Size  Location     Type
  5539 ;;		None               void
  5540 ;; Registers used:
  5541 ;;		wreg, status,2, status,0, cstack
  5542 ;; Tracked objects:
  5543 ;;		On entry : 0/0
  5544 ;;		On exit  : 0/0
  5545 ;;		Unchanged: 0/0
  5546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5551 ;;Total ram usage:        0 bytes
  5552 ;; Hardware stack levels used:    1
  5553 ;; Hardware stack levels required when called:    4
  5554 ;; This function calls:
  5555 ;;		_TM1640_Delay
  5556 ;; This function is called by:
  5557 ;;		_Init_TM1640
  5558 ;;		_TM1640_Writer_Dates
  5559 ;;		_Open_Display
  5560 ;;		_Disable_Display
  5561 ;; This function uses a non-reentrant model
  5562 ;;
  5563                           
  5564                           	psect	text35
  5565  001574                     __ptext35:
  5566                           	opt stack 0
  5567  001574                     _TM1640_Start:
  5568                           	opt stack 24
  5569                           
  5570                           ;TM1640.c: 46: RD6 = 0;
  5571                           
  5572                           ;incstack = 0
  5573  001574  9C83               	bcf	3971,6,c	;volatile
  5574                           
  5575                           ;TM1640.c: 47: TM1640_Delay(1);
  5576  001576  0E01               	movlw	1
  5577  001578  ECEC  F00A         	call	_TM1640_Delay
  5578                           
  5579                           ;TM1640.c: 48: RD5 = 1;
  5580  00157C  8A83               	bsf	3971,5,c	;volatile
  5581                           
  5582                           ;TM1640.c: 49: TM1640_Delay(1);
  5583  00157E  0E01               	movlw	1
  5584  001580  ECEC  F00A         	call	_TM1640_Delay
  5585                           
  5586                           ;TM1640.c: 50: RD6 = 1;
  5587  001584  8C83               	bsf	3971,6,c	;volatile
  5588                           
  5589                           ;TM1640.c: 51: TM1640_Delay(1);
  5590  001586  0E01               	movlw	1
  5591  001588  ECEC  F00A         	call	_TM1640_Delay
  5592                           
  5593                           ;TM1640.c: 52: RD5 = 0;
  5594  00158C  9A83               	bcf	3971,5,c	;volatile
  5595                           
  5596                           ;TM1640.c: 53: TM1640_Delay(1);
  5597  00158E  0E01               	movlw	1
  5598  001590  ECEC  F00A         	call	_TM1640_Delay
  5599                           
  5600                           ;TM1640.c: 54: RD6 = 0;
  5601  001594  9C83               	bcf	3971,6,c	;volatile
  5602  001596  0012               	return		;funcret
  5603  001598                     __end_of_TM1640_Start:
  5604                           	opt stack 0
  5605                           tblptru	equ	0xFF8
  5606                           tblptrh	equ	0xFF7
  5607                           tblptrl	equ	0xFF6
  5608                           tablat	equ	0xFF5
  5609                           prodh	equ	0xFF4
  5610                           prodl	equ	0xFF3
  5611                           intcon	equ	0xFF2
  5612                           postinc0	equ	0xFEE
  5613                           wreg	equ	0xFE8
  5614                           indf1	equ	0xFE7
  5615                           postinc1	equ	0xFE6
  5616                           postdec1	equ	0xFE5
  5617                           fsr1h	equ	0xFE2
  5618                           fsr1l	equ	0xFE1
  5619                           indf2	equ	0xFDF
  5620                           postinc2	equ	0xFDE
  5621                           postdec2	equ	0xFDD
  5622                           plusw2	equ	0xFDB
  5623                           fsr2h	equ	0xFDA
  5624                           fsr2l	equ	0xFD9
  5625                           status	equ	0xFD8
  5626                           
  5627 ;; *************** function _TM1640_Delay *****************
  5628 ;; Defined at:
  5629 ;;		line 166 in file "_01_USER/TM1640.c"
  5630 ;; Parameters:    Size  Location     Type
  5631 ;;  Time            1    wreg     unsigned char 
  5632 ;; Auto vars:     Size  Location     Type
  5633 ;;  Time            1   24[COMRAM] unsigned char 
  5634 ;;  i               1   25[COMRAM] unsigned char 
  5635 ;; Return value:  Size  Location     Type
  5636 ;;		None               void
  5637 ;; Registers used:
  5638 ;;		wreg, status,2, status,0
  5639 ;; Tracked objects:
  5640 ;;		On entry : 0/0
  5641 ;;		On exit  : 0/0
  5642 ;;		Unchanged: 0/0
  5643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5645 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5647 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5648 ;;Total ram usage:        2 bytes
  5649 ;; Hardware stack levels used:    1
  5650 ;; Hardware stack levels required when called:    3
  5651 ;; This function calls:
  5652 ;;		Nothing
  5653 ;; This function is called by:
  5654 ;;		_TM1640_Start
  5655 ;;		_TM1640_Stop
  5656 ;;		_TM1640_Writer_Byte
  5657 ;; This function uses a non-reentrant model
  5658 ;;
  5659                           
  5660                           	psect	text36
  5661  0015D8                     __ptext36:
  5662                           	opt stack 0
  5663  0015D8                     _TM1640_Delay:
  5664                           	opt stack 24
  5665                           
  5666                           ;incstack = 0
  5667                           ;TM1640_Delay@Time stored from wreg
  5668  0015D8  6E19               	movwf	TM1640_Delay@Time,c
  5669  0015DA                     
  5670                           ;TM1640.c: 171: {
  5671                           ;TM1640.c: 172: for(i=0; i<10; ++i);
  5672  0015DA  0E00               	movlw	0
  5673  0015DC  6E1A               	movwf	TM1640_Delay@i,c
  5674  0015DE  D002               	goto	l2130
  5675  0015E0  D004               	goto	l396
  5676  0015E2                     l2128:
  5677  0015E2  2A1A               	incf	TM1640_Delay@i,f,c
  5678  0015E4                     l2130:
  5679  0015E4  0E09               	movlw	9
  5680  0015E6  641A               	cpfsgt	TM1640_Delay@i,c
  5681  0015E8  D7FC               	goto	l2128
  5682  0015EA                     l396:
  5683                           
  5684                           ;TM1640.c: 173: }while(--Time);
  5685  0015EA  2E19               	decfsz	TM1640_Delay@Time,f,c
  5686  0015EC  D7F6               	goto	l2122
  5687  0015EE  0012               	return	
  5688  0015F0  0012               	return		;funcret
  5689  0015F2                     __end_of_TM1640_Delay:
  5690                           	opt stack 0
  5691                           tblptru	equ	0xFF8
  5692                           tblptrh	equ	0xFF7
  5693                           tblptrl	equ	0xFF6
  5694                           tablat	equ	0xFF5
  5695                           prodh	equ	0xFF4
  5696                           prodl	equ	0xFF3
  5697                           intcon	equ	0xFF2
  5698                           postinc0	equ	0xFEE
  5699                           wreg	equ	0xFE8
  5700                           indf1	equ	0xFE7
  5701                           postinc1	equ	0xFE6
  5702                           postdec1	equ	0xFE5
  5703                           fsr1h	equ	0xFE2
  5704                           fsr1l	equ	0xFE1
  5705                           indf2	equ	0xFDF
  5706                           postinc2	equ	0xFDE
  5707                           postdec2	equ	0xFDD
  5708                           plusw2	equ	0xFDB
  5709                           fsr2h	equ	0xFDA
  5710                           fsr2l	equ	0xFD9
  5711                           status	equ	0xFD8
  5712                           
  5713 ;; *************** function _GPIO_Config *****************
  5714 ;; Defined at:
  5715 ;;		line 39 in file "_01_USER/GPIO.c"
  5716 ;; Parameters:    Size  Location     Type
  5717 ;;		None
  5718 ;; Auto vars:     Size  Location     Type
  5719 ;;		None
  5720 ;; Return value:  Size  Location     Type
  5721 ;;		None               void
  5722 ;; Registers used:
  5723 ;;		None
  5724 ;; Tracked objects:
  5725 ;;		On entry : 0/0
  5726 ;;		On exit  : 0/0
  5727 ;;		Unchanged: 0/0
  5728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5733 ;;Total ram usage:        0 bytes
  5734 ;; Hardware stack levels used:    1
  5735 ;; Hardware stack levels required when called:    3
  5736 ;; This function calls:
  5737 ;;		Nothing
  5738 ;; This function is called by:
  5739 ;;		_main
  5740 ;; This function uses a non-reentrant model
  5741 ;;
  5742                           
  5743                           	psect	text37
  5744  001664                     __ptext37:
  5745                           	opt stack 0
  5746  001664                     _GPIO_Config:
  5747                           	opt stack 27
  5748                           
  5749                           ;incstack = 0
  5750  001664  0012               	return		;funcret
  5751  001666                     __end_of_GPIO_Config:
  5752                           	opt stack 0
  5753                           tblptru	equ	0xFF8
  5754                           tblptrh	equ	0xFF7
  5755                           tblptrl	equ	0xFF6
  5756                           tablat	equ	0xFF5
  5757                           prodh	equ	0xFF4
  5758                           prodl	equ	0xFF3
  5759                           intcon	equ	0xFF2
  5760                           postinc0	equ	0xFEE
  5761                           wreg	equ	0xFE8
  5762                           indf1	equ	0xFE7
  5763                           postinc1	equ	0xFE6
  5764                           postdec1	equ	0xFE5
  5765                           fsr1h	equ	0xFE2
  5766                           fsr1l	equ	0xFE1
  5767                           indf2	equ	0xFDF
  5768                           postinc2	equ	0xFDE
  5769                           postdec2	equ	0xFDD
  5770                           plusw2	equ	0xFDB
  5771                           fsr2h	equ	0xFDA
  5772                           fsr2l	equ	0xFD9
  5773                           status	equ	0xFD8
  5774                           
  5775 ;; *************** function _ADC6_Init *****************
  5776 ;; Defined at:
  5777 ;;		line 37 in file "_01_USER/My_ADC.c"
  5778 ;; Parameters:    Size  Location     Type
  5779 ;;		None
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;		None
  5782 ;; Return value:  Size  Location     Type
  5783 ;;		None               void
  5784 ;; Registers used:
  5785 ;;		wreg, status,2, status,0, cstack
  5786 ;; Tracked objects:
  5787 ;;		On entry : 0/0
  5788 ;;		On exit  : 0/0
  5789 ;;		Unchanged: 0/0
  5790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5795 ;;Total ram usage:        0 bytes
  5796 ;; Hardware stack levels used:    1
  5797 ;; Hardware stack levels required when called:    4
  5798 ;; This function calls:
  5799 ;;		_OpenADC
  5800 ;; This function is called by:
  5801 ;;		_main
  5802 ;; This function uses a non-reentrant model
  5803 ;;
  5804                           
  5805                           	psect	text38
  5806  001620                     __ptext38:
  5807                           	opt stack 0
  5808  001620                     _ADC6_Init:
  5809                           	opt stack 26
  5810                           
  5811                           ;My_ADC.c: 40: OpenADC(0b11111111 &
  5812                           ;My_ADC.c: 41: 0b11110011 &
  5813                           ;My_ADC.c: 42: 0b10001111
  5814                           ;My_ADC.c: 43: ,
  5815                           ;My_ADC.c: 44: 0b10011011
  5816                           ;My_ADC.c: 45: ,
  5817                           ;My_ADC.c: 46: 0b00111111 &
  5818                           ;My_ADC.c: 47: 0b11111111 &
  5819                           ;My_ADC.c: 48: 0b11110111 &
  5820                           ;My_ADC.c: 49: 0b11111000
  5821                           ;My_ADC.c: 50: );
  5822                           
  5823                           ;incstack = 0
  5824  001620  0E9B               	movlw	155
  5825  001622  6E19               	movwf	OpenADC@config2,c
  5826  001624  0E30               	movlw	48
  5827  001626  6E1A               	movwf	OpenADC@config3,c
  5828  001628  0E83               	movlw	131
  5829  00162A  ECA3  F008         	call	_OpenADC
  5830                           
  5831                           ;My_ADC.c: 52: (PIE1bits.ADIE=0);
  5832  00162E  9C9D               	bcf	3997,6,c	;volatile
  5833  001630  0012               	return		;funcret
  5834  001632                     __end_of_ADC6_Init:
  5835                           	opt stack 0
  5836                           tblptru	equ	0xFF8
  5837                           tblptrh	equ	0xFF7
  5838                           tblptrl	equ	0xFF6
  5839                           tablat	equ	0xFF5
  5840                           prodh	equ	0xFF4
  5841                           prodl	equ	0xFF3
  5842                           intcon	equ	0xFF2
  5843                           postinc0	equ	0xFEE
  5844                           wreg	equ	0xFE8
  5845                           indf1	equ	0xFE7
  5846                           postinc1	equ	0xFE6
  5847                           postdec1	equ	0xFE5
  5848                           fsr1h	equ	0xFE2
  5849                           fsr1l	equ	0xFE1
  5850                           indf2	equ	0xFDF
  5851                           postinc2	equ	0xFDE
  5852                           postdec2	equ	0xFDD
  5853                           plusw2	equ	0xFDB
  5854                           fsr2h	equ	0xFDA
  5855                           fsr2l	equ	0xFD9
  5856                           status	equ	0xFD8
  5857                           
  5858 ;; *************** function _OpenADC *****************
  5859 ;; Defined at:
  5860 ;;		line 305 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  5861 ;; Parameters:    Size  Location     Type
  5862 ;;  config          1    wreg     unsigned char 
  5863 ;;  config2         1   24[COMRAM] unsigned char 
  5864 ;;  config3         1   25[COMRAM] unsigned char 
  5865 ;; Auto vars:     Size  Location     Type
  5866 ;;  config          1   28[COMRAM] unsigned char 
  5867 ;; Return value:  Size  Location     Type
  5868 ;;		None               void
  5869 ;; Registers used:
  5870 ;;		wreg, status,2, status,0
  5871 ;; Tracked objects:
  5872 ;;		On entry : 0/0
  5873 ;;		On exit  : 0/0
  5874 ;;		Unchanged: 0/0
  5875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5876 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5877 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5878 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5879 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5880 ;;Total ram usage:        5 bytes
  5881 ;; Hardware stack levels used:    1
  5882 ;; Hardware stack levels required when called:    3
  5883 ;; This function calls:
  5884 ;;		Nothing
  5885 ;; This function is called by:
  5886 ;;		_ADC6_Init
  5887 ;; This function uses a non-reentrant model
  5888 ;;
  5889                           
  5890                           	psect	text39
  5891  001146                     __ptext39:
  5892                           	opt stack 0
  5893  001146                     _OpenADC:
  5894                           	opt stack 26
  5895                           
  5896                           ;incstack = 0
  5897                           ;OpenADC@config stored from wreg
  5898  001146  6E1D               	movwf	OpenADC@config,c
  5899  001148  0E00               	movlw	0
  5900  00114A  6EC2               	movwf	4034,c	;volatile
  5901  00114C  0E00               	movlw	0
  5902  00114E  6EC1               	movwf	4033,c	;volatile
  5903  001150  0E00               	movlw	0
  5904  001152  6EC0               	movwf	4032,c	;volatile
  5905  001154  5019               	movf	OpenADC@config2,w,c
  5906  001156  0B7C               	andlw	124
  5907  001158  6EC2               	movwf	4034,c	;volatile
  5908  00115A  C01A  FFC1         	movff	OpenADC@config3,4033	;volatile
  5909  00115E  C01D  F01B         	movff	OpenADC@config,??_OpenADC
  5910  001162  90D8               	bcf	status,0,c
  5911  001164  361B               	rlcf	??_OpenADC,f,c
  5912  001166  90D8               	bcf	status,0,c
  5913  001168  361B               	rlcf	??_OpenADC,f,c
  5914  00116A  0E38               	movlw	56
  5915  00116C  161B               	andwf	??_OpenADC,f,c
  5916  00116E  C01D  F01C         	movff	OpenADC@config,??_OpenADC+1
  5917  001172  3A1C               	swapf	??_OpenADC+1,f,c
  5918  001174  0E0F               	movlw	15
  5919  001176  161C               	andwf	??_OpenADC+1,f,c
  5920  001178  0E07               	movlw	7
  5921  00117A  161C               	andwf	??_OpenADC+1,f,c
  5922  00117C  501D               	movf	OpenADC@config,w,c
  5923  00117E  0B80               	andlw	128
  5924  001180  101C               	iorwf	??_OpenADC+1,w,c
  5925  001182  101B               	iorwf	??_OpenADC,w,c
  5926  001184  6EC0               	movwf	4032,c	;volatile
  5927  001186  AE19               	btfss	OpenADC@config2,7,c
  5928  001188  D003               	goto	l513
  5929  00118A  9C9E               	bcf	3998,6,c	;volatile
  5930  00118C  8C9D               	bsf	3997,6,c	;volatile
  5931  00118E  8CF2               	bsf	intcon,6,c	;volatile
  5932  001190                     l513:
  5933  001190  80C2               	bsf	4034,0,c	;volatile
  5934  001192  0012               	return		;funcret
  5935  001194                     __end_of_OpenADC:
  5936                           	opt stack 0
  5937                           tblptru	equ	0xFF8
  5938                           tblptrh	equ	0xFF7
  5939                           tblptrl	equ	0xFF6
  5940                           tablat	equ	0xFF5
  5941                           prodh	equ	0xFF4
  5942                           prodl	equ	0xFF3
  5943                           intcon	equ	0xFF2
  5944                           postinc0	equ	0xFEE
  5945                           wreg	equ	0xFE8
  5946                           indf1	equ	0xFE7
  5947                           postinc1	equ	0xFE6
  5948                           postdec1	equ	0xFE5
  5949                           fsr1h	equ	0xFE2
  5950                           fsr1l	equ	0xFE1
  5951                           indf2	equ	0xFDF
  5952                           postinc2	equ	0xFDE
  5953                           postdec2	equ	0xFDD
  5954                           plusw2	equ	0xFDB
  5955                           fsr2h	equ	0xFDA
  5956                           fsr2l	equ	0xFD9
  5957                           status	equ	0xFD8
  5958                           
  5959 ;; *************** function _Sys_Cyc *****************
  5960 ;; Defined at:
  5961 ;;		line 100 in file "_01_USER/My_Timer.c"
  5962 ;; Parameters:    Size  Location     Type
  5963 ;;		None
  5964 ;; Auto vars:     Size  Location     Type
  5965 ;;  _temp           1   23[COMRAM] unsigned char 
  5966 ;; Return value:  Size  Location     Type
  5967 ;;		None               void
  5968 ;; Registers used:
  5969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5970 ;; Tracked objects:
  5971 ;;		On entry : 0/0
  5972 ;;		On exit  : 0/0
  5973 ;;		Unchanged: 0/0
  5974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5976 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5977 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5978 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5979 ;;Total ram usage:       15 bytes
  5980 ;; Hardware stack levels used:    1
  5981 ;; Hardware stack levels required when called:    2
  5982 ;; This function calls:
  5983 ;;		_Key_ScanFSM
  5984 ;;		_Pulse_1Khz
  5985 ;;		i2_LED_Control
  5986 ;;		i2_SetTimer0
  5987 ;;		i2___llmod
  5988 ;; This function is called by:
  5989 ;;		Interrupt level 2
  5990 ;; This function uses a non-reentrant model
  5991 ;;
  5992                           
  5993                           	psect	intcode
  5994  000008                     __pintcode:
  5995                           	opt stack 0
  5996  000008                     _Sys_Cyc:
  5997                           	opt stack 23
  5998                           
  5999                           ;incstack = 0
  6000  000008  CFFA F00A          	movff	pclath,??_Sys_Cyc
  6001  00000C  CFFB F00B          	movff	pclatu,??_Sys_Cyc+1
  6002  000010  CFE9 F00C          	movff	fsr0l,??_Sys_Cyc+2
  6003  000014  CFEA F00D          	movff	fsr0h,??_Sys_Cyc+3
  6004  000018  CFE1 F00E          	movff	fsr1l,??_Sys_Cyc+4
  6005  00001C  CFE2 F00F          	movff	fsr1h,??_Sys_Cyc+5
  6006  000020  CFD9 F010          	movff	fsr2l,??_Sys_Cyc+6
  6007  000024  CFDA F011          	movff	fsr2h,??_Sys_Cyc+7
  6008  000028  CFF3 F012          	movff	prodl,??_Sys_Cyc+8
  6009  00002C  CFF4 F013          	movff	prodh,??_Sys_Cyc+9
  6010  000030  CFF6 F014          	movff	tblptrl,??_Sys_Cyc+10
  6011  000034  CFF7 F015          	movff	tblptrh,??_Sys_Cyc+11
  6012  000038  CFF8 F016          	movff	tblptru,??_Sys_Cyc+12
  6013  00003C  CFF5 F017          	movff	tablat,??_Sys_Cyc+13
  6014                           
  6015                           ;My_Timer.c: 102: static unsigned char _overturn_LED = 0;
  6016                           ;My_Timer.c: 103: static char _Byte;
  6017                           ;My_Timer.c: 104: static char _flag = 0;
  6018                           ;My_Timer.c: 105: unsigned char _temp;
  6019                           ;My_Timer.c: 108: if(TMR0IF)
  6020  000040  A4F2               	btfss	intcon,2,c	;volatile
  6021  000042  D053               	goto	i2l2934
  6022                           
  6023                           ;My_Timer.c: 109: {
  6024                           ;My_Timer.c: 110: g_Timer_Cyc = (g_Timer_Cyc+1) % 4294967296;
  6025  000044  0E01               	movlw	1
  6026  000046  242C               	addwf	_g_Timer_Cyc,w,c
  6027  000048  6E01               	movwf	i2___llmod@dividend,c
  6028  00004A  0E00               	movlw	0
  6029  00004C  202D               	addwfc	_g_Timer_Cyc+1,w,c
  6030  00004E  6E02               	movwf	i2___llmod@dividend+1,c
  6031  000050  0E00               	movlw	0
  6032  000052  202E               	addwfc	_g_Timer_Cyc+2,w,c
  6033  000054  6E03               	movwf	i2___llmod@dividend+2,c
  6034  000056  0E00               	movlw	0
  6035  000058  202F               	addwfc	_g_Timer_Cyc+3,w,c
  6036  00005A  6E04               	movwf	i2___llmod@dividend+3,c
  6037  00005C  0E00               	movlw	0
  6038  00005E  6E05               	movwf	i2___llmod@divisor,c
  6039  000060  0E00               	movlw	0
  6040  000062  6E06               	movwf	i2___llmod@divisor+1,c
  6041  000064  0E00               	movlw	0
  6042  000066  6E07               	movwf	i2___llmod@divisor+2,c
  6043  000068  0E00               	movlw	0
  6044  00006A  6E08               	movwf	i2___llmod@divisor+3,c
  6045  00006C  ECA8  F007         	call	i2___llmod	;wreg free
  6046  000070  C001  F02C         	movff	?i2___llmod,_g_Timer_Cyc
  6047  000074  C002  F02D         	movff	?i2___llmod+1,_g_Timer_Cyc+1
  6048  000078  C003  F02E         	movff	?i2___llmod+2,_g_Timer_Cyc+2
  6049  00007C  C004  F02F         	movff	?i2___llmod+3,_g_Timer_Cyc+3
  6050                           
  6051                           ;My_Timer.c: 111: SetTimer0(78);
  6052  000080  0E00               	movlw	0
  6053  000082  6E02               	movwf	i2SetTimer0@_tmr+1,c
  6054  000084  0E4E               	movlw	78
  6055  000086  6E01               	movwf	i2SetTimer0@_tmr,c
  6056  000088  EC06  F00A         	call	i2_SetTimer0	;wreg free
  6057                           
  6058                           ;My_Timer.c: 114: if( g_Timer_Cyc%30 == 0 )
  6059  00008C  C02C  F001         	movff	_g_Timer_Cyc,i2___llmod@dividend
  6060  000090  C02D  F002         	movff	_g_Timer_Cyc+1,i2___llmod@dividend+1
  6061  000094  C02E  F003         	movff	_g_Timer_Cyc+2,i2___llmod@dividend+2
  6062  000098  C02F  F004         	movff	_g_Timer_Cyc+3,i2___llmod@dividend+3
  6063  00009C  0E1E               	movlw	30
  6064  00009E  6E05               	movwf	i2___llmod@divisor,c
  6065  0000A0  0E00               	movlw	0
  6066  0000A2  6E06               	movwf	i2___llmod@divisor+1,c
  6067  0000A4  0E00               	movlw	0
  6068  0000A6  6E07               	movwf	i2___llmod@divisor+2,c
  6069  0000A8  0E00               	movlw	0
  6070  0000AA  6E08               	movwf	i2___llmod@divisor+3,c
  6071  0000AC  ECA8  F007         	call	i2___llmod	;wreg free
  6072  0000B0  5001               	movf	?i2___llmod,w,c
  6073  0000B2  1002               	iorwf	?i2___llmod+1,w,c
  6074  0000B4  1003               	iorwf	?i2___llmod+2,w,c
  6075  0000B6  1004               	iorwf	?i2___llmod+3,w,c
  6076  0000B8  A4D8               	btfss	status,2,c
  6077  0000BA  D010               	goto	i2l2930
  6078                           
  6079                           ;My_Timer.c: 115: {
  6080                           ;My_Timer.c: 116: _overturn_LED = ~_overturn_LED;
  6081  0000BC  1E3A               	comf	Sys_Cyc@_overturn_LED,f,c
  6082                           
  6083                           ;My_Timer.c: 117: if(_overturn_LED) LED_Control(3,1);
  6084  0000BE  503A               	movf	Sys_Cyc@_overturn_LED,w,c
  6085  0000C0  B4D8               	btfsc	status,2,c
  6086  0000C2  D006               	goto	i2l2928
  6087  0000C4  0E01               	movlw	1
  6088  0000C6  6E01               	movwf	i2LED_Control@_switch,c
  6089  0000C8  0E03               	movlw	3
  6090  0000CA  EC37  F009         	call	i2_LED_Control
  6091  0000CE  D006               	goto	i2l2930
  6092  0000D0                     i2l2928:
  6093                           
  6094                           ;My_Timer.c: 118: else LED_Control(3,0);
  6095  0000D0  0E00               	movlw	0
  6096  0000D2  6E01               	movwf	i2LED_Control@_switch,c
  6097  0000D4  0E03               	movlw	3
  6098  0000D6  EC37  F009         	call	i2_LED_Control
  6099  0000DA  D000               	goto	i2l2930
  6100  0000DC                     i2l2930:
  6101                           
  6102                           ;My_Timer.c: 119: }
  6103                           ;My_Timer.c: 122: if( gs_Handle_Switch._1Khz )
  6104  0000DC  5030               	movf	_gs_Handle_Switch,w,c
  6105  0000DE  A4D8               	btfss	status,2,c
  6106                           
  6107                           ;My_Timer.c: 123: Pulse_1Khz();
  6108  0000E0  EC83  F00A         	call	_Pulse_1Khz	;wreg free
  6109                           
  6110                           ;My_Timer.c: 126: Key_ScanFSM();
  6111  0000E4  EC76  F008         	call	_Key_ScanFSM	;wreg free
  6112  0000E8  D000               	goto	i2l2934
  6113  0000EA                     i2l2934:
  6114                           
  6115                           ;My_Timer.c: 127: }
  6116                           ;My_Timer.c: 130: if( RC1IF )
  6117  0000EA  AA9E               	btfss	3998,5,c	;volatile
  6118  0000EC  D023               	goto	i2l323
  6119                           
  6120                           ;My_Timer.c: 131: {
  6121                           ;My_Timer.c: 132: _temp = RCREG1;
  6122  0000EE  CFAE F018          	movff	4014,Sys_Cyc@_temp	;volatile
  6123                           
  6124                           ;My_Timer.c: 133: if( g_RS485_Receive_Flag == 0 )
  6125  0000F2  503D               	movf	_g_RS485_Receive_Flag,w,c
  6126  0000F4  A4D8               	btfss	status,2,c
  6127  0000F6  D01E               	goto	i2l323
  6128                           
  6129                           ;My_Timer.c: 134: {
  6130                           ;My_Timer.c: 135: if( _temp == 0xff )
  6131  0000F8  2818               	incf	Sys_Cyc@_temp,w,c
  6132  0000FA  A4D8               	btfss	status,2,c
  6133  0000FC  D004               	goto	i2l320
  6134                           
  6135                           ;My_Timer.c: 136: {
  6136                           ;My_Timer.c: 137: _Byte = 10 ;
  6137  0000FE  0E0A               	movlw	10
  6138  000100  6E38               	movwf	Sys_Cyc@_Byte,c
  6139                           
  6140                           ;My_Timer.c: 138: _flag = 0;
  6141  000102  0E00               	movlw	0
  6142  000104  6E39               	movwf	Sys_Cyc@_flag,c
  6143  000106                     i2l320:
  6144                           
  6145                           ;My_Timer.c: 139: }
  6146                           ;My_Timer.c: 141: if ( _flag == 0 )
  6147  000106  5039               	movf	Sys_Cyc@_flag,w,c
  6148  000108  A4D8               	btfss	status,2,c
  6149  00010A  D00C               	goto	i2l2948
  6150                           
  6151                           ;My_Timer.c: 142: {
  6152                           ;My_Timer.c: 143: _Byte -- ;
  6153  00010C  0638               	decf	Sys_Cyc@_Byte,f,c
  6154                           
  6155                           ;My_Timer.c: 144: ga_RS485_ReceiveBuff[ _Byte ] = _temp;
  6156  00010E  5038               	movf	Sys_Cyc@_Byte,w,c
  6157  000110  0D01               	mullw	1
  6158  000112  0EDA               	movlw	low _ga_RS485_ReceiveBuff
  6159  000114  24F3               	addwf	prodl,w,c
  6160  000116  6ED9               	movwf	fsr2l,c
  6161  000118  0E00               	movlw	high _ga_RS485_ReceiveBuff
  6162  00011A  20F4               	addwfc	prodh,w,c
  6163  00011C  6EDA               	movwf	fsr2h,c
  6164  00011E  C018  FFDF         	movff	Sys_Cyc@_temp,indf2
  6165  000122  D000               	goto	i2l2948
  6166  000124                     i2l2948:
  6167                           
  6168                           ;My_Timer.c: 145: }
  6169                           ;My_Timer.c: 147: if( _Byte == 0 )
  6170  000124  5038               	movf	Sys_Cyc@_Byte,w,c
  6171  000126  A4D8               	btfss	status,2,c
  6172  000128  D005               	goto	i2l323
  6173                           
  6174                           ;My_Timer.c: 148: {
  6175                           ;My_Timer.c: 149: g_RS485_Receive_Flag = 1 ;
  6176  00012A  0E01               	movlw	1
  6177  00012C  6E3D               	movwf	_g_RS485_Receive_Flag,c
  6178                           
  6179                           ;My_Timer.c: 150: _flag = 1;
  6180  00012E  0E01               	movlw	1
  6181  000130  6E39               	movwf	Sys_Cyc@_flag,c
  6182  000132  D000               	goto	i2l323
  6183  000134                     i2l323:
  6184  000134  C017  FFF5         	movff	??_Sys_Cyc+13,tablat
  6185  000138  C016  FFF8         	movff	??_Sys_Cyc+12,tblptru
  6186  00013C  C015  FFF7         	movff	??_Sys_Cyc+11,tblptrh
  6187  000140  C014  FFF6         	movff	??_Sys_Cyc+10,tblptrl
  6188  000144  C013  FFF4         	movff	??_Sys_Cyc+9,prodh
  6189  000148  C012  FFF3         	movff	??_Sys_Cyc+8,prodl
  6190  00014C  C011  FFDA         	movff	??_Sys_Cyc+7,fsr2h
  6191  000150  C010  FFD9         	movff	??_Sys_Cyc+6,fsr2l
  6192  000154  C00F  FFE2         	movff	??_Sys_Cyc+5,fsr1h
  6193  000158  C00E  FFE1         	movff	??_Sys_Cyc+4,fsr1l
  6194  00015C  C00D  FFEA         	movff	??_Sys_Cyc+3,fsr0h
  6195  000160  C00C  FFE9         	movff	??_Sys_Cyc+2,fsr0l
  6196  000164  C00B  FFFB         	movff	??_Sys_Cyc+1,pclatu
  6197  000168  C00A  FFFA         	movff	??_Sys_Cyc,pclath
  6198  00016C  0011               	retfie		f
  6199  00016E                     __end_of_Sys_Cyc:
  6200                           	opt stack 0
  6201                           pclatu	equ	0xFFB
  6202                           pclath	equ	0xFFA
  6203                           tblptru	equ	0xFF8
  6204                           tblptrh	equ	0xFF7
  6205                           tblptrl	equ	0xFF6
  6206                           tablat	equ	0xFF5
  6207                           prodh	equ	0xFF4
  6208                           prodl	equ	0xFF3
  6209                           intcon	equ	0xFF2
  6210                           postinc0	equ	0xFEE
  6211                           fsr0h	equ	0xFEA
  6212                           fsr0l	equ	0xFE9
  6213                           wreg	equ	0xFE8
  6214                           indf1	equ	0xFE7
  6215                           postinc1	equ	0xFE6
  6216                           postdec1	equ	0xFE5
  6217                           fsr1h	equ	0xFE2
  6218                           fsr1l	equ	0xFE1
  6219                           indf2	equ	0xFDF
  6220                           postinc2	equ	0xFDE
  6221                           postdec2	equ	0xFDD
  6222                           plusw2	equ	0xFDB
  6223                           fsr2h	equ	0xFDA
  6224                           fsr2l	equ	0xFD9
  6225                           status	equ	0xFD8
  6226                           
  6227 ;; *************** function i2___llmod *****************
  6228 ;; Defined at:
  6229 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  6230 ;; Parameters:    Size  Location     Type
  6231 ;;  dividend        4    0[COMRAM] unsigned long 
  6232 ;;  divisor         4    4[COMRAM] unsigned long 
  6233 ;; Auto vars:     Size  Location     Type
  6234 ;;  __llmod         1    8[COMRAM] unsigned char 
  6235 ;; Return value:  Size  Location     Type
  6236 ;;                  4    0[COMRAM] unsigned long 
  6237 ;; Registers used:
  6238 ;;		wreg, status,2, status,0
  6239 ;; Tracked objects:
  6240 ;;		On entry : 0/0
  6241 ;;		On exit  : 0/0
  6242 ;;		Unchanged: 0/0
  6243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6244 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6245 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6247 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6248 ;;Total ram usage:        9 bytes
  6249 ;; Hardware stack levels used:    1
  6250 ;; This function calls:
  6251 ;;		Nothing
  6252 ;; This function is called by:
  6253 ;;		_Sys_Cyc
  6254 ;; This function uses a non-reentrant model
  6255 ;;
  6256                           
  6257                           	psect	text41
  6258  000F50                     __ptext41:
  6259                           	opt stack 0
  6260  000F50                     i2___llmod:
  6261                           	opt stack 24
  6262                           
  6263                           ;incstack = 0
  6264  000F50  5005               	movf	i2___llmod@divisor,w,c
  6265  000F52  1006               	iorwf	i2___llmod@divisor+1,w,c
  6266  000F54  1007               	iorwf	i2___llmod@divisor+2,w,c
  6267  000F56  1008               	iorwf	i2___llmod@divisor+3,w,c
  6268  000F58  B4D8               	btfsc	status,2,c
  6269  000F5A  D029               	goto	i2l1048
  6270  000F5C  0E01               	movlw	1
  6271  000F5E  6E09               	movwf	i2___llmod@counter,c
  6272  000F60  D007               	goto	i2l2892
  6273  000F62                     i2l2890:
  6274  000F62  90D8               	bcf	status,0,c
  6275  000F64  3605               	rlcf	i2___llmod@divisor,f,c
  6276  000F66  3606               	rlcf	i2___llmod@divisor+1,f,c
  6277  000F68  3607               	rlcf	i2___llmod@divisor+2,f,c
  6278  000F6A  3608               	rlcf	i2___llmod@divisor+3,f,c
  6279  000F6C  2A09               	incf	i2___llmod@counter,f,c
  6280  000F6E  D000               	goto	i2l2892
  6281  000F70                     i2l2892:
  6282  000F70  BE08               	btfsc	i2___llmod@divisor+3,7,c
  6283  000F72  D002               	goto	i2l2894
  6284  000F74  D7F6               	goto	i2l2890
  6285  000F76  D000               	goto	i2l2894
  6286  000F78                     i2l2894:
  6287  000F78  5005               	movf	i2___llmod@divisor,w,c
  6288  000F7A  5C01               	subwf	i2___llmod@dividend,w,c
  6289  000F7C  5006               	movf	i2___llmod@divisor+1,w,c
  6290  000F7E  5802               	subwfb	i2___llmod@dividend+1,w,c
  6291  000F80  5007               	movf	i2___llmod@divisor+2,w,c
  6292  000F82  5803               	subwfb	i2___llmod@dividend+2,w,c
  6293  000F84  5008               	movf	i2___llmod@divisor+3,w,c
  6294  000F86  5804               	subwfb	i2___llmod@dividend+3,w,c
  6295  000F88  A0D8               	btfss	status,0,c
  6296  000F8A  D009               	goto	i2l2898
  6297  000F8C  5005               	movf	i2___llmod@divisor,w,c
  6298  000F8E  5E01               	subwf	i2___llmod@dividend,f,c
  6299  000F90  5006               	movf	i2___llmod@divisor+1,w,c
  6300  000F92  5A02               	subwfb	i2___llmod@dividend+1,f,c
  6301  000F94  5007               	movf	i2___llmod@divisor+2,w,c
  6302  000F96  5A03               	subwfb	i2___llmod@dividend+2,f,c
  6303  000F98  5008               	movf	i2___llmod@divisor+3,w,c
  6304  000F9A  5A04               	subwfb	i2___llmod@dividend+3,f,c
  6305  000F9C  D000               	goto	i2l2898
  6306  000F9E                     i2l2898:
  6307  000F9E  90D8               	bcf	status,0,c
  6308  000FA0  3208               	rrcf	i2___llmod@divisor+3,f,c
  6309  000FA2  3207               	rrcf	i2___llmod@divisor+2,f,c
  6310  000FA4  3206               	rrcf	i2___llmod@divisor+1,f,c
  6311  000FA6  3205               	rrcf	i2___llmod@divisor,f,c
  6312  000FA8  2E09               	decfsz	i2___llmod@counter,f,c
  6313  000FAA  D7E6               	goto	i2l2894
  6314  000FAC  D000               	goto	i2l1048
  6315  000FAE                     i2l1048:
  6316  000FAE  C001  F001         	movff	i2___llmod@dividend,?i2___llmod
  6317  000FB2  C002  F002         	movff	i2___llmod@dividend+1,?i2___llmod+1
  6318  000FB6  C003  F003         	movff	i2___llmod@dividend+2,?i2___llmod+2
  6319  000FBA  C004  F004         	movff	i2___llmod@dividend+3,?i2___llmod+3
  6320  000FBE  0012               	return		;funcret
  6321  000FC0                     __end_ofi2___llmod:
  6322                           	opt stack 0
  6323                           pclatu	equ	0xFFB
  6324                           pclath	equ	0xFFA
  6325                           tblptru	equ	0xFF8
  6326                           tblptrh	equ	0xFF7
  6327                           tblptrl	equ	0xFF6
  6328                           tablat	equ	0xFF5
  6329                           prodh	equ	0xFF4
  6330                           prodl	equ	0xFF3
  6331                           intcon	equ	0xFF2
  6332                           postinc0	equ	0xFEE
  6333                           fsr0h	equ	0xFEA
  6334                           fsr0l	equ	0xFE9
  6335                           wreg	equ	0xFE8
  6336                           indf1	equ	0xFE7
  6337                           postinc1	equ	0xFE6
  6338                           postdec1	equ	0xFE5
  6339                           fsr1h	equ	0xFE2
  6340                           fsr1l	equ	0xFE1
  6341                           indf2	equ	0xFDF
  6342                           postinc2	equ	0xFDE
  6343                           postdec2	equ	0xFDD
  6344                           plusw2	equ	0xFDB
  6345                           fsr2h	equ	0xFDA
  6346                           fsr2l	equ	0xFD9
  6347                           status	equ	0xFD8
  6348                           
  6349 ;; *************** function i2_SetTimer0 *****************
  6350 ;; Defined at:
  6351 ;;		line 81 in file "_01_USER/My_Timer.c"
  6352 ;; Parameters:    Size  Location     Type
  6353 ;;  _tmr            2    0[COMRAM] unsigned int 
  6354 ;; Auto vars:     Size  Location     Type
  6355 ;;		None
  6356 ;; Return value:  Size  Location     Type
  6357 ;;		None               void
  6358 ;; Registers used:
  6359 ;;		wreg, status,2, status,0
  6360 ;; Tracked objects:
  6361 ;;		On entry : 0/0
  6362 ;;		On exit  : 0/0
  6363 ;;		Unchanged: 0/0
  6364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6365 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6367 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6368 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6369 ;;Total ram usage:        4 bytes
  6370 ;; Hardware stack levels used:    1
  6371 ;; This function calls:
  6372 ;;		Nothing
  6373 ;; This function is called by:
  6374 ;;		_Sys_Cyc
  6375 ;; This function uses a non-reentrant model
  6376 ;;
  6377                           
  6378                           	psect	text42
  6379  00140C                     __ptext42:
  6380                           	opt stack 0
  6381  00140C                     i2_SetTimer0:
  6382                           	opt stack 24
  6383                           
  6384                           ;My_Timer.c: 83: if(_tmr > 0xffff) _tmr = 0xffff;
  6385                           
  6386                           ;incstack = 0
  6387  00140C  D003               	goto	i2l2854
  6388  00140E  6801               	setf	i2SetTimer0@_tmr,c
  6389  001410  6802               	setf	i2SetTimer0@_tmr+1,c
  6390  001412  D000               	goto	i2l2854
  6391  001414                     i2l2854:
  6392                           
  6393                           ;My_Timer.c: 84: _tmr=0xffff-_tmr;
  6394  001414  C001  F003         	movff	i2SetTimer0@_tmr,??i2_SetTimer0
  6395  001418  C002  F004         	movff	i2SetTimer0@_tmr+1,??i2_SetTimer0+1
  6396  00141C  1E03               	comf	??i2_SetTimer0,f,c
  6397  00141E  1E04               	comf	??i2_SetTimer0+1,f,c
  6398  001420  4A03               	infsnz	??i2_SetTimer0,f,c
  6399  001422  2A04               	incf	??i2_SetTimer0+1,f,c
  6400  001424  0EFF               	movlw	255
  6401  001426  2403               	addwf	??i2_SetTimer0,w,c
  6402  001428  6E01               	movwf	i2SetTimer0@_tmr,c
  6403  00142A  0EFF               	movlw	255
  6404  00142C  2004               	addwfc	??i2_SetTimer0+1,w,c
  6405  00142E  6E02               	movwf	i2SetTimer0@_tmr+1,c
  6406                           
  6407                           ;My_Timer.c: 85: TMR0H = _tmr/256;
  6408  001430  5002               	movf	i2SetTimer0@_tmr+1,w,c
  6409  001432  6ED7               	movwf	4055,c	;volatile
  6410                           
  6411                           ;My_Timer.c: 86: TMR0L = _tmr%256;
  6412  001434  C001  FFD6         	movff	i2SetTimer0@_tmr,4054	;volatile
  6413                           
  6414                           ;My_Timer.c: 87: TMR0IF = 0;
  6415  001438  94F2               	bcf	intcon,2,c	;volatile
  6416  00143A  0012               	return		;funcret
  6417  00143C                     __end_ofi2_SetTimer0:
  6418                           	opt stack 0
  6419                           pclatu	equ	0xFFB
  6420                           pclath	equ	0xFFA
  6421                           tblptru	equ	0xFF8
  6422                           tblptrh	equ	0xFF7
  6423                           tblptrl	equ	0xFF6
  6424                           tablat	equ	0xFF5
  6425                           prodh	equ	0xFF4
  6426                           prodl	equ	0xFF3
  6427                           intcon	equ	0xFF2
  6428                           postinc0	equ	0xFEE
  6429                           fsr0h	equ	0xFEA
  6430                           fsr0l	equ	0xFE9
  6431                           wreg	equ	0xFE8
  6432                           indf1	equ	0xFE7
  6433                           postinc1	equ	0xFE6
  6434                           postdec1	equ	0xFE5
  6435                           fsr1h	equ	0xFE2
  6436                           fsr1l	equ	0xFE1
  6437                           indf2	equ	0xFDF
  6438                           postinc2	equ	0xFDE
  6439                           postdec2	equ	0xFDD
  6440                           plusw2	equ	0xFDB
  6441                           fsr2h	equ	0xFDA
  6442                           fsr2l	equ	0xFD9
  6443                           status	equ	0xFD8
  6444                           
  6445 ;; *************** function i2_LED_Control *****************
  6446 ;; Defined at:
  6447 ;;		line 58 in file "_01_USER/GPIO.c"
  6448 ;; Parameters:    Size  Location     Type
  6449 ;;  _LED_num        1    wreg     unsigned char 
  6450 ;;  _switch         1    0[COMRAM] unsigned char 
  6451 ;; Auto vars:     Size  Location     Type
  6452 ;;  _LED_num        1    1[COMRAM] unsigned char 
  6453 ;; Return value:  Size  Location     Type
  6454 ;;		None               void
  6455 ;; Registers used:
  6456 ;;		wreg, status,2, status,0
  6457 ;; Tracked objects:
  6458 ;;		On entry : 0/0
  6459 ;;		On exit  : 0/0
  6460 ;;		Unchanged: 0/0
  6461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6462 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6463 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6465 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6466 ;;Total ram usage:        2 bytes
  6467 ;; Hardware stack levels used:    1
  6468 ;; This function calls:
  6469 ;;		Nothing
  6470 ;; This function is called by:
  6471 ;;		_Sys_Cyc
  6472 ;; This function uses a non-reentrant model
  6473 ;;
  6474                           
  6475                           	psect	text43
  6476  00126E                     __ptext43:
  6477                           	opt stack 0
  6478  00126E                     i2_LED_Control:
  6479                           	opt stack 24
  6480                           
  6481                           ;incstack = 0
  6482                           ;i2LED_Control@_LED_num stored from wreg
  6483  00126E  6E02               	movwf	i2LED_Control@_LED_num,c
  6484                           
  6485                           ;GPIO.c: 62: if(_LED_num == 1)
  6486  001270  0402               	decf	i2LED_Control@_LED_num,w,c
  6487  001272  A4D8               	btfss	status,2,c
  6488  001274  D007               	goto	i2l2870
  6489                           
  6490                           ;GPIO.c: 63: if(_switch) LED_BUS |= 0x01;
  6491  001276  5001               	movf	i2LED_Control@_switch,w,c
  6492  001278  B4D8               	btfsc	status,2,c
  6493  00127A  D002               	goto	i2l2868
  6494  00127C  803B               	bsf	_LED_BUS,0,c
  6495  00127E  D002               	goto	i2l2870
  6496  001280                     i2l2868:
  6497                           
  6498                           ;GPIO.c: 64: else LED_BUS &= 0xFE;
  6499  001280  903B               	bcf	_LED_BUS,0,c
  6500  001282  D000               	goto	i2l2870
  6501  001284                     i2l2870:
  6502                           
  6503                           ;GPIO.c: 66: if(_LED_num == 2)
  6504  001284  0E02               	movlw	2
  6505  001286  1802               	xorwf	i2LED_Control@_LED_num,w,c
  6506  001288  A4D8               	btfss	status,2,c
  6507  00128A  D007               	goto	i2l2878
  6508                           
  6509                           ;GPIO.c: 67: if(_switch) LED_BUS |= 0x02;
  6510  00128C  5001               	movf	i2LED_Control@_switch,w,c
  6511  00128E  B4D8               	btfsc	status,2,c
  6512  001290  D002               	goto	i2l2876
  6513  001292  823B               	bsf	_LED_BUS,1,c
  6514  001294  D002               	goto	i2l2878
  6515  001296                     i2l2876:
  6516                           
  6517                           ;GPIO.c: 68: else LED_BUS &= 0xFD;
  6518  001296  923B               	bcf	_LED_BUS,1,c
  6519  001298  D000               	goto	i2l2878
  6520  00129A                     i2l2878:
  6521                           
  6522                           ;GPIO.c: 70: if(_LED_num == 3)
  6523  00129A  0E03               	movlw	3
  6524  00129C  1802               	xorwf	i2LED_Control@_LED_num,w,c
  6525  00129E  A4D8               	btfss	status,2,c
  6526  0012A0  0012               	return	
  6527                           
  6528                           ;GPIO.c: 71: if(_switch) LED_BUS |= 0x04;
  6529  0012A2  5001               	movf	i2LED_Control@_switch,w,c
  6530  0012A4  B4D8               	btfsc	status,2,c
  6531  0012A6  D002               	goto	i2l2884
  6532  0012A8  843B               	bsf	_LED_BUS,2,c
  6533  0012AA  0012               	return	
  6534  0012AC                     i2l2884:
  6535                           
  6536                           ;GPIO.c: 72: else LED_BUS &= 0xFB;
  6537  0012AC  943B               	bcf	_LED_BUS,2,c
  6538  0012AE  0012               	return	
  6539  0012B0  0012               	return		;funcret
  6540  0012B2                     __end_ofi2_LED_Control:
  6541                           	opt stack 0
  6542                           pclatu	equ	0xFFB
  6543                           pclath	equ	0xFFA
  6544                           tblptru	equ	0xFF8
  6545                           tblptrh	equ	0xFF7
  6546                           tblptrl	equ	0xFF6
  6547                           tablat	equ	0xFF5
  6548                           prodh	equ	0xFF4
  6549                           prodl	equ	0xFF3
  6550                           intcon	equ	0xFF2
  6551                           postinc0	equ	0xFEE
  6552                           fsr0h	equ	0xFEA
  6553                           fsr0l	equ	0xFE9
  6554                           wreg	equ	0xFE8
  6555                           indf1	equ	0xFE7
  6556                           postinc1	equ	0xFE6
  6557                           postdec1	equ	0xFE5
  6558                           fsr1h	equ	0xFE2
  6559                           fsr1l	equ	0xFE1
  6560                           indf2	equ	0xFDF
  6561                           postinc2	equ	0xFDE
  6562                           postdec2	equ	0xFDD
  6563                           plusw2	equ	0xFDB
  6564                           fsr2h	equ	0xFDA
  6565                           fsr2l	equ	0xFD9
  6566                           status	equ	0xFD8
  6567                           
  6568 ;; *************** function _Pulse_1Khz *****************
  6569 ;; Defined at:
  6570 ;;		line 86 in file "_01_USER/My_Delay.c"
  6571 ;; Parameters:    Size  Location     Type
  6572 ;;		None
  6573 ;; Auto vars:     Size  Location     Type
  6574 ;;  _pulse          1    3[COMRAM] unsigned char 
  6575 ;; Return value:  Size  Location     Type
  6576 ;;		None               void
  6577 ;; Registers used:
  6578 ;;		wreg, status,2, status,0, cstack
  6579 ;; Tracked objects:
  6580 ;;		On entry : 0/0
  6581 ;;		On exit  : 0/0
  6582 ;;		Unchanged: 0/0
  6583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6585 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6587 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6588 ;;Total ram usage:        1 bytes
  6589 ;; Hardware stack levels used:    1
  6590 ;; Hardware stack levels required when called:    1
  6591 ;; This function calls:
  6592 ;;		_Delay_1Khz
  6593 ;; This function is called by:
  6594 ;;		_Sys_Cyc
  6595 ;; This function uses a non-reentrant model
  6596 ;;
  6597                           
  6598                           	psect	text44
  6599  001506                     __ptext44:
  6600                           	opt stack 0
  6601  001506                     _Pulse_1Khz:
  6602                           	opt stack 23
  6603                           
  6604                           ;My_Delay.c: 88: unsigned char _pulse = 10;
  6605                           
  6606                           ;incstack = 0
  6607  001506  0E0A               	movlw	10
  6608  001508  6E04               	movwf	Pulse_1Khz@_pulse,c
  6609                           
  6610                           ;My_Delay.c: 89: static unsigned char _overturn_1Khz = 0;
  6611                           ;My_Delay.c: 91: while( _pulse-- )
  6612  00150A  D00B               	goto	i2l2822
  6613  00150C                     i2l2814:
  6614                           
  6615                           ;My_Delay.c: 92: {
  6616                           ;My_Delay.c: 93: _overturn_1Khz =~ _overturn_1Khz;
  6617  00150C  1E37               	comf	Pulse_1Khz@_overturn_1Khz,f,c
  6618                           
  6619                           ;My_Delay.c: 94: if(_overturn_1Khz) PORTEbits.RE7 = 1;
  6620  00150E  5037               	movf	Pulse_1Khz@_overturn_1Khz,w,c
  6621  001510  B4D8               	btfsc	status,2,c
  6622  001512  D002               	goto	i2l58
  6623  001514  8E84               	bsf	3972,7,c	;volatile
  6624  001516  D002               	goto	i2l2820
  6625  001518                     i2l58:
  6626                           
  6627                           ;My_Delay.c: 95: else PORTEbits.RE7 = 0;
  6628  001518  9E84               	bcf	3972,7,c	;volatile
  6629  00151A  D000               	goto	i2l2820
  6630  00151C                     i2l2820:
  6631                           
  6632                           ;My_Delay.c: 96: Delay_1Khz();
  6633  00151C  ECB9  F009         	call	_Delay_1Khz	;wreg free
  6634  001520  D000               	goto	i2l2822
  6635  001522                     i2l2822:
  6636  001522  0604               	decf	Pulse_1Khz@_pulse,f,c
  6637  001524  2804               	incf	Pulse_1Khz@_pulse,w,c
  6638  001526  A4D8               	btfss	status,2,c
  6639  001528  D7F1               	goto	i2l2814
  6640  00152A  0012               	return		;funcret
  6641  00152C                     __end_of_Pulse_1Khz:
  6642                           	opt stack 0
  6643                           pclatu	equ	0xFFB
  6644                           pclath	equ	0xFFA
  6645                           tblptru	equ	0xFF8
  6646                           tblptrh	equ	0xFF7
  6647                           tblptrl	equ	0xFF6
  6648                           tablat	equ	0xFF5
  6649                           prodh	equ	0xFF4
  6650                           prodl	equ	0xFF3
  6651                           intcon	equ	0xFF2
  6652                           postinc0	equ	0xFEE
  6653                           fsr0h	equ	0xFEA
  6654                           fsr0l	equ	0xFE9
  6655                           wreg	equ	0xFE8
  6656                           indf1	equ	0xFE7
  6657                           postinc1	equ	0xFE6
  6658                           postdec1	equ	0xFE5
  6659                           fsr1h	equ	0xFE2
  6660                           fsr1l	equ	0xFE1
  6661                           indf2	equ	0xFDF
  6662                           postinc2	equ	0xFDE
  6663                           postdec2	equ	0xFDD
  6664                           plusw2	equ	0xFDB
  6665                           fsr2h	equ	0xFDA
  6666                           fsr2l	equ	0xFD9
  6667                           status	equ	0xFD8
  6668                           
  6669 ;; *************** function _Delay_1Khz *****************
  6670 ;; Defined at:
  6671 ;;		line 69 in file "_01_USER/My_Delay.c"
  6672 ;; Parameters:    Size  Location     Type
  6673 ;;		None
  6674 ;; Auto vars:     Size  Location     Type
  6675 ;;  c               1    2[COMRAM] unsigned char 
  6676 ;;  b               1    1[COMRAM] unsigned char 
  6677 ;;  a               1    0[COMRAM] unsigned char 
  6678 ;; Return value:  Size  Location     Type
  6679 ;;		None               void
  6680 ;; Registers used:
  6681 ;;		wreg, status,2, status,0
  6682 ;; Tracked objects:
  6683 ;;		On entry : 0/0
  6684 ;;		On exit  : 0/0
  6685 ;;		Unchanged: 0/0
  6686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6688 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6690 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6691 ;;Total ram usage:        3 bytes
  6692 ;; Hardware stack levels used:    1
  6693 ;; This function calls:
  6694 ;;		Nothing
  6695 ;; This function is called by:
  6696 ;;		_Pulse_1Khz
  6697 ;; This function uses a non-reentrant model
  6698 ;;
  6699                           
  6700                           	psect	text45
  6701  001372                     __ptext45:
  6702                           	opt stack 0
  6703  001372                     _Delay_1Khz:
  6704                           	opt stack 23
  6705                           
  6706                           ;My_Delay.c: 71: unsigned char a,b,c;
  6707                           ;My_Delay.c: 72: for(c=1;c>0;c--)
  6708                           
  6709                           ;incstack = 0
  6710  001372  0E01               	movlw	1
  6711  001374  6E03               	movwf	Delay_1Khz@c,c
  6712  001376  5003               	movf	Delay_1Khz@c,w,c
  6713  001378  B4D8               	btfsc	status,2,c
  6714  00137A  0012               	return	
  6715  00137C  D001               	goto	i2l2480
  6716  00137E  0012               	return	
  6717  001380                     i2l2480:
  6718                           
  6719                           ;My_Delay.c: 73: for(b=32;b>0;b--)
  6720  001380  0E20               	movlw	32
  6721  001382  6E02               	movwf	Delay_1Khz@b,c
  6722  001384  5002               	movf	Delay_1Khz@b,w,c
  6723  001386  B4D8               	btfsc	status,2,c
  6724  001388  D00D               	goto	i2l2496
  6725  00138A  D001               	goto	i2l2484
  6726  00138C  D00B               	goto	i2l2496
  6727  00138E                     i2l2484:
  6728                           
  6729                           ;My_Delay.c: 74: for(a=2;a>0;a--);
  6730  00138E  0E02               	movlw	2
  6731  001390  6E01               	movwf	Delay_1Khz@a,c
  6732  001392  5001               	movf	Delay_1Khz@a,w,c
  6733  001394  B4D8               	btfsc	status,2,c
  6734  001396  D004               	goto	i2l2492
  6735  001398  D001               	goto	i2l2488
  6736  00139A  D002               	goto	i2l2492
  6737  00139C                     i2l2488:
  6738  00139C  0601               	decf	Delay_1Khz@a,f,c
  6739  00139E  D7F9               	goto	L7
  6740  0013A0                     i2l2492:
  6741  0013A0  0602               	decf	Delay_1Khz@b,f,c
  6742  0013A2  D7F0               	goto	L8
  6743  0013A4                     i2l2496:
  6744  0013A4  0603               	decf	Delay_1Khz@c,f,c
  6745  0013A6  D7E7               	goto	L9
  6746  0013A8  0012               	return		;funcret
  6747  0013AA                     __end_of_Delay_1Khz:
  6748                           	opt stack 0
  6749                           pclatu	equ	0xFFB
  6750                           pclath	equ	0xFFA
  6751                           tblptru	equ	0xFF8
  6752                           tblptrh	equ	0xFF7
  6753                           tblptrl	equ	0xFF6
  6754                           tablat	equ	0xFF5
  6755                           prodh	equ	0xFF4
  6756                           prodl	equ	0xFF3
  6757                           intcon	equ	0xFF2
  6758                           postinc0	equ	0xFEE
  6759                           fsr0h	equ	0xFEA
  6760                           fsr0l	equ	0xFE9
  6761                           wreg	equ	0xFE8
  6762                           indf1	equ	0xFE7
  6763                           postinc1	equ	0xFE6
  6764                           postdec1	equ	0xFE5
  6765                           fsr1h	equ	0xFE2
  6766                           fsr1l	equ	0xFE1
  6767                           indf2	equ	0xFDF
  6768                           postinc2	equ	0xFDE
  6769                           postdec2	equ	0xFDD
  6770                           plusw2	equ	0xFDB
  6771                           fsr2h	equ	0xFDA
  6772                           fsr2l	equ	0xFD9
  6773                           status	equ	0xFD8
  6774                           
  6775 ;; *************** function _Key_ScanFSM *****************
  6776 ;; Defined at:
  6777 ;;		line 91 in file "_01_USER/Key.c"
  6778 ;; Parameters:    Size  Location     Type
  6779 ;;		None
  6780 ;; Auto vars:     Size  Location     Type
  6781 ;;		None
  6782 ;; Return value:  Size  Location     Type
  6783 ;;		None               void
  6784 ;; Registers used:
  6785 ;;		wreg, status,2, status,0, cstack
  6786 ;; Tracked objects:
  6787 ;;		On entry : 0/0
  6788 ;;		On exit  : 0/0
  6789 ;;		Unchanged: 0/0
  6790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6795 ;;Total ram usage:        0 bytes
  6796 ;; Hardware stack levels used:    1
  6797 ;; Hardware stack levels required when called:    1
  6798 ;; This function calls:
  6799 ;;		_Key_Scan
  6800 ;; This function is called by:
  6801 ;;		_Sys_Cyc
  6802 ;; This function uses a non-reentrant model
  6803 ;;
  6804                           
  6805                           	psect	text46
  6806  0010EC                     __ptext46:
  6807                           	opt stack 0
  6808  0010EC                     _Key_ScanFSM:
  6809                           	opt stack 23
  6810                           
  6811                           ;Key.c: 93: Key_Scan();
  6812                           
  6813                           ;incstack = 0
  6814  0010EC  EC59  F009         	call	_Key_Scan	;wreg free
  6815                           
  6816                           ;Key.c: 94: if( s_Local_Key_FSM.key_BUS & 0x01 ) s_Local_Key_FSM.a_key_count[0]++;
  6817  0010F0  0100               	movlb	0	; () banked
  6818  0010F2  A1C5               	btfss	_s_Local_Key_FSM& (0+255),0,b	;volatile
  6819  0010F4  D004               	goto	i2l2830
  6820                           
  6821                           ; BSR set to: 0
  6822  0010F6  0100               	movlb	0	; () banked
  6823  0010F8  4BC8               	infsnz	(_s_Local_Key_FSM+3)& (0+255),f,b	;volatile
  6824  0010FA  2BC9               	incf	(_s_Local_Key_FSM+4)& (0+255),f,b	;volatile
  6825  0010FC  D000               	goto	i2l2830
  6826  0010FE                     i2l2830:
  6827                           
  6828                           ; BSR set to: 0
  6829                           ;Key.c: 95: if( s_Local_Key_FSM.key_BUS & 0x02 ) s_Local_Key_FSM.a_key_count[1]++;
  6830  0010FE  0100               	movlb	0	; () banked
  6831  001100  A3C5               	btfss	_s_Local_Key_FSM& (0+255),1,b	;volatile
  6832  001102  D004               	goto	i2l2834
  6833                           
  6834                           ; BSR set to: 0
  6835  001104  0100               	movlb	0	; () banked
  6836  001106  4BCA               	infsnz	(_s_Local_Key_FSM+5)& (0+255),f,b	;volatile
  6837  001108  2BCB               	incf	(_s_Local_Key_FSM+6)& (0+255),f,b	;volatile
  6838  00110A  D000               	goto	i2l2834
  6839  00110C                     i2l2834:
  6840                           
  6841                           ; BSR set to: 0
  6842                           ;Key.c: 96: if( s_Local_Key_FSM.key_BUS & 0x04 ) s_Local_Key_FSM.a_key_count[2]++;
  6843  00110C  0100               	movlb	0	; () banked
  6844  00110E  A5C5               	btfss	_s_Local_Key_FSM& (0+255),2,b	;volatile
  6845  001110  D004               	goto	i2l2838
  6846                           
  6847                           ; BSR set to: 0
  6848  001112  0100               	movlb	0	; () banked
  6849  001114  4BCC               	infsnz	(_s_Local_Key_FSM+7)& (0+255),f,b	;volatile
  6850  001116  2BCD               	incf	(_s_Local_Key_FSM+8)& (0+255),f,b	;volatile
  6851  001118  D000               	goto	i2l2838
  6852  00111A                     i2l2838:
  6853                           
  6854                           ; BSR set to: 0
  6855                           ;Key.c: 97: if( s_Local_Key_FSM.key_BUS & 0x08 ) s_Local_Key_FSM.a_key_count[3]++;
  6856  00111A  0100               	movlb	0	; () banked
  6857  00111C  A7C5               	btfss	_s_Local_Key_FSM& (0+255),3,b	;volatile
  6858  00111E  D004               	goto	i2l2842
  6859                           
  6860                           ; BSR set to: 0
  6861  001120  0100               	movlb	0	; () banked
  6862  001122  4BCE               	infsnz	(_s_Local_Key_FSM+9)& (0+255),f,b	;volatile
  6863  001124  2BCF               	incf	(_s_Local_Key_FSM+10)& (0+255),f,b	;volatile
  6864  001126  D000               	goto	i2l2842
  6865  001128                     i2l2842:
  6866                           
  6867                           ; BSR set to: 0
  6868                           ;Key.c: 98: if( s_Local_Key_FSM.key_BUS & 0x10 ) s_Local_Key_FSM.a_key_count[4]++;
  6869  001128  0100               	movlb	0	; () banked
  6870  00112A  A9C5               	btfss	_s_Local_Key_FSM& (0+255),4,b	;volatile
  6871  00112C  D004               	goto	i2l2846
  6872                           
  6873                           ; BSR set to: 0
  6874  00112E  0100               	movlb	0	; () banked
  6875  001130  4BD0               	infsnz	(_s_Local_Key_FSM+11)& (0+255),f,b	;volatile
  6876  001132  2BD1               	incf	(_s_Local_Key_FSM+12)& (0+255),f,b	;volatile
  6877  001134  D000               	goto	i2l2846
  6878  001136                     i2l2846:
  6879                           
  6880                           ; BSR set to: 0
  6881                           ;Key.c: 99: if( s_Local_Key_FSM.key_BUS & 0x20 ) s_Local_Key_FSM.a_key_count[5]++;
  6882  001136  0100               	movlb	0	; () banked
  6883  001138  ABC5               	btfss	_s_Local_Key_FSM& (0+255),5,b	;volatile
  6884  00113A  0012               	return	
  6885                           
  6886                           ; BSR set to: 0
  6887  00113C  0100               	movlb	0	; () banked
  6888  00113E  4BD2               	infsnz	(_s_Local_Key_FSM+13)& (0+255),f,b	;volatile
  6889  001140  2BD3               	incf	(_s_Local_Key_FSM+14)& (0+255),f,b	;volatile
  6890  001142  0012               	return	
  6891                           
  6892                           ; BSR set to: 0
  6893                           
  6894                           ; BSR set to: 0
  6895  001144  0012               	return		;funcret
  6896  001146                     __end_of_Key_ScanFSM:
  6897                           	opt stack 0
  6898                           pclatu	equ	0xFFB
  6899                           pclath	equ	0xFFA
  6900                           tblptru	equ	0xFF8
  6901                           tblptrh	equ	0xFF7
  6902                           tblptrl	equ	0xFF6
  6903                           tablat	equ	0xFF5
  6904                           prodh	equ	0xFF4
  6905                           prodl	equ	0xFF3
  6906                           intcon	equ	0xFF2
  6907                           postinc0	equ	0xFEE
  6908                           fsr0h	equ	0xFEA
  6909                           fsr0l	equ	0xFE9
  6910                           wreg	equ	0xFE8
  6911                           indf1	equ	0xFE7
  6912                           postinc1	equ	0xFE6
  6913                           postdec1	equ	0xFE5
  6914                           fsr1h	equ	0xFE2
  6915                           fsr1l	equ	0xFE1
  6916                           indf2	equ	0xFDF
  6917                           postinc2	equ	0xFDE
  6918                           postdec2	equ	0xFDD
  6919                           plusw2	equ	0xFDB
  6920                           fsr2h	equ	0xFDA
  6921                           fsr2l	equ	0xFD9
  6922                           status	equ	0xFD8
  6923                           
  6924 ;; *************** function _Key_Scan *****************
  6925 ;; Defined at:
  6926 ;;		line 69 in file "_01_USER/Key.c"
  6927 ;; Parameters:    Size  Location     Type
  6928 ;;		None
  6929 ;; Auto vars:     Size  Location     Type
  6930 ;;		None
  6931 ;; Return value:  Size  Location     Type
  6932 ;;		None               void
  6933 ;; Registers used:
  6934 ;;		wreg, status,2, status,0
  6935 ;; Tracked objects:
  6936 ;;		On entry : 0/0
  6937 ;;		On exit  : 0/0
  6938 ;;		Unchanged: 0/0
  6939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6944 ;;Total ram usage:        0 bytes
  6945 ;; Hardware stack levels used:    1
  6946 ;; This function calls:
  6947 ;;		Nothing
  6948 ;; This function is called by:
  6949 ;;		_Key_ScanFSM
  6950 ;; This function uses a non-reentrant model
  6951 ;;
  6952                           
  6953                           	psect	text47
  6954  0012B2                     __ptext47:
  6955                           	opt stack 0
  6956  0012B2                     _Key_Scan:
  6957                           	opt stack 23
  6958                           
  6959                           ;Key.c: 71: s_Local_Key_FSM.key_BUS = 0x00;
  6960                           
  6961                           ; BSR set to: 0
  6962                           ;incstack = 0
  6963  0012B2  0E00               	movlw	0
  6964  0012B4  0100               	movlb	0	; () banked
  6965  0012B6  6FC5               	movwf	_s_Local_Key_FSM& (0+255),b	;volatile
  6966                           
  6967                           ; BSR set to: 0
  6968                           ;Key.c: 73: if( RC1 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 0) ;
  6969  0012B8  B282               	btfsc	3970,1,c	;volatile
  6970  0012BA  D003               	goto	i2l2506
  6971                           
  6972                           ; BSR set to: 0
  6973  0012BC  0100               	movlb	0	; () banked
  6974  0012BE  81C5               	bsf	_s_Local_Key_FSM& (0+255),0,b	;volatile
  6975  0012C0  D000               	goto	i2l2506
  6976  0012C2                     i2l2506:
  6977                           
  6978                           ; BSR set to: 0
  6979                           ;Key.c: 74: if( RF1 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 1) ;
  6980  0012C2  B285               	btfsc	3973,1,c	;volatile
  6981  0012C4  D003               	goto	i2l2510
  6982                           
  6983                           ; BSR set to: 0
  6984  0012C6  0100               	movlb	0	; () banked
  6985  0012C8  83C5               	bsf	_s_Local_Key_FSM& (0+255),1,b	;volatile
  6986  0012CA  D000               	goto	i2l2510
  6987  0012CC                     i2l2510:
  6988                           
  6989                           ; BSR set to: 0
  6990                           ;Key.c: 75: if( RF2 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 2) ;
  6991  0012CC  B485               	btfsc	3973,2,c	;volatile
  6992  0012CE  D003               	goto	i2l2514
  6993                           
  6994                           ; BSR set to: 0
  6995  0012D0  0100               	movlb	0	; () banked
  6996  0012D2  85C5               	bsf	_s_Local_Key_FSM& (0+255),2,b	;volatile
  6997  0012D4  D000               	goto	i2l2514
  6998  0012D6                     i2l2514:
  6999                           
  7000                           ; BSR set to: 0
  7001                           ;Key.c: 76: if( RA4 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 3) ;
  7002  0012D6  B880               	btfsc	3968,4,c	;volatile
  7003  0012D8  D003               	goto	i2l2518
  7004                           
  7005                           ; BSR set to: 0
  7006  0012DA  0100               	movlb	0	; () banked
  7007  0012DC  87C5               	bsf	_s_Local_Key_FSM& (0+255),3,b	;volatile
  7008  0012DE  D000               	goto	i2l2518
  7009  0012E0                     i2l2518:
  7010                           
  7011                           ; BSR set to: 0
  7012                           ;Key.c: 77: if( RA5 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 4) ;
  7013  0012E0  BA80               	btfsc	3968,5,c	;volatile
  7014  0012E2  D003               	goto	i2l2522
  7015                           
  7016                           ; BSR set to: 0
  7017  0012E4  0100               	movlb	0	; () banked
  7018  0012E6  89C5               	bsf	_s_Local_Key_FSM& (0+255),4,b	;volatile
  7019  0012E8  D000               	goto	i2l2522
  7020  0012EA                     i2l2522:
  7021                           
  7022                           ; BSR set to: 0
  7023                           ;Key.c: 78: if( RF3 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 5) ;
  7024  0012EA  B685               	btfsc	3973,3,c	;volatile
  7025  0012EC  0012               	return	
  7026                           
  7027                           ; BSR set to: 0
  7028  0012EE  0100               	movlb	0	; () banked
  7029  0012F0  8BC5               	bsf	_s_Local_Key_FSM& (0+255),5,b	;volatile
  7030  0012F2  0012               	return	
  7031                           
  7032                           ; BSR set to: 0
  7033                           
  7034                           ; BSR set to: 0
  7035  0012F4  0012               	return		;funcret
  7036  0012F6                     __end_of_Key_Scan:
  7037                           	opt stack 0
  7038  0000                     pclatu	equ	0xFFB
  7039                           pclath	equ	0xFFA
  7040                           tblptru	equ	0xFF8
  7041                           tblptrh	equ	0xFF7
  7042                           tblptrl	equ	0xFF6
  7043                           tablat	equ	0xFF5
  7044                           prodh	equ	0xFF4
  7045                           prodl	equ	0xFF3
  7046                           intcon	equ	0xFF2
  7047                           postinc0	equ	0xFEE
  7048                           fsr0h	equ	0xFEA
  7049                           fsr0l	equ	0xFE9
  7050                           wreg	equ	0xFE8
  7051                           indf1	equ	0xFE7
  7052                           postinc1	equ	0xFE6
  7053                           postdec1	equ	0xFE5
  7054                           fsr1h	equ	0xFE2
  7055                           fsr1l	equ	0xFE1
  7056                           indf2	equ	0xFDF
  7057                           postinc2	equ	0xFDE
  7058                           postdec2	equ	0xFDD
  7059                           plusw2	equ	0xFDB
  7060                           fsr2h	equ	0xFDA
  7061                           fsr2l	equ	0xFD9
  7062                           status	equ	0xFD8
  7063                           pclatu	equ	0xFFB
  7064                           pclath	equ	0xFFA
  7065                           tblptru	equ	0xFF8
  7066                           tblptrh	equ	0xFF7
  7067                           tblptrl	equ	0xFF6
  7068                           tablat	equ	0xFF5
  7069                           prodh	equ	0xFF4
  7070                           prodl	equ	0xFF3
  7071                           intcon	equ	0xFF2
  7072                           postinc0	equ	0xFEE
  7073                           fsr0h	equ	0xFEA
  7074                           fsr0l	equ	0xFE9
  7075                           wreg	equ	0xFE8
  7076                           indf1	equ	0xFE7
  7077                           postinc1	equ	0xFE6
  7078                           postdec1	equ	0xFE5
  7079                           fsr1h	equ	0xFE2
  7080                           fsr1l	equ	0xFE1
  7081                           indf2	equ	0xFDF
  7082                           postinc2	equ	0xFDE
  7083                           postdec2	equ	0xFDD
  7084                           plusw2	equ	0xFDB
  7085                           fsr2h	equ	0xFDA
  7086                           fsr2l	equ	0xFD9
  7087                           status	equ	0xFD8
  7088                           
  7089                           	psect	rparam
  7090  0000                     pclatu	equ	0xFFB
  7091                           pclath	equ	0xFFA
  7092                           tblptru	equ	0xFF8
  7093                           tblptrh	equ	0xFF7
  7094                           tblptrl	equ	0xFF6
  7095                           tablat	equ	0xFF5
  7096                           prodh	equ	0xFF4
  7097                           prodl	equ	0xFF3
  7098                           intcon	equ	0xFF2
  7099                           postinc0	equ	0xFEE
  7100                           fsr0h	equ	0xFEA
  7101                           fsr0l	equ	0xFE9
  7102                           wreg	equ	0xFE8
  7103                           indf1	equ	0xFE7
  7104                           postinc1	equ	0xFE6
  7105                           postdec1	equ	0xFE5
  7106                           fsr1h	equ	0xFE2
  7107                           fsr1l	equ	0xFE1
  7108                           indf2	equ	0xFDF
  7109                           postinc2	equ	0xFDE
  7110                           postdec2	equ	0xFDD
  7111                           plusw2	equ	0xFDB
  7112                           fsr2h	equ	0xFDA
  7113                           fsr2l	equ	0xFD9
  7114                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         160
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     43      71
    BANK0           160     12     160
    BANK1           256     12      12
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    VerifyCRC@DataBuff	PTR unsigned char  size(2) Largest target is 10
		 -> ga_RS485_ReceiveBuff(BANK0[10]), ga_RS485_SendBuff(COMRAM[10]), 

    RS485_ManageMessage@DataBuff	PTR unsigned char  size(2) Largest target is 10
		 -> ga_RS485_ReceiveBuff(BANK0[10]), 

    RS485_SendDate@date_dress	PTR unsigned char  size(2) Largest target is 10
		 -> ga_RS485_SendBuff(COMRAM[10]), 


Critical Paths under _main in COMRAM

    _Timer0_Init->_SetTimer0
    _ShowResult->_TM1640_Show_integer
    _TM1640_Show_integer->_TM1640_Writer_Dates
    _TM1640_Show_integer->___lwdiv
    _TM1640_Writer_Dates->___lwmod
    _Run->_RS485_SendDate
    _RS485_SendDate->_VerifyCRC
    _GetADC6->___ftmul
    ___lwtoft->___ftpack
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul
    _RS485_Init->_Open1USART
    _ManageMessage->_RS485_ManageMessage
    _RS485_ManageMessage->_VerifyCRC
    _VerifyCRC->___lldiv
    _Key_ManageMessage->_Key_ReadFSM
    _Init_TM1640->_TM1640_Writer_Byte
    _TM1640_Writer_Byte->_TM1640_Delay
    _TM1640_Stop->_TM1640_Delay
    _TM1640_Start->_TM1640_Delay
    _ADC6_Init->_OpenADC

Critical Paths under _Sys_Cyc in COMRAM

    _Sys_Cyc->i2___llmod
    _Pulse_1Khz->_Delay_1Khz

Critical Paths under _main in BANK0

    _RS485_SendDate->_VerifyCRC
    _GetADC6->___ftdiv
    ___ftdiv->___ftmul
    _RS485_ManageMessage->_VerifyCRC

Critical Paths under _Sys_Cyc in BANK0

    None.

Critical Paths under _main in BANK1

    _GetADC6->___ftdiv
    _ManageMessage->_RS485_ManageMessage

Critical Paths under _Sys_Cyc in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Sys_Cyc in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Sys_Cyc in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Sys_Cyc in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Sys_Cyc in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Sys_Cyc in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Sys_Cyc in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Sys_Cyc in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Sys_Cyc in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Sys_Cyc in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Sys_Cyc in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Sys_Cyc in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Sys_Cyc in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Sys_Cyc in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Sys_Cyc in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   21266
                          _ADC6_Init
                        _GPIO_Config
                        _Init_TM1640
                           _Key_Init
                      _ManageMessage
                         _RS485_Init
                                _Run
                         _ShowResult
                        _Timer0_Init
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0     170
                          _SetTimer0
 ---------------------------------------------------------------------------------
 (2) _SetTimer0                                            4     2      2     170
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ShowResult                                           1     1      0    4593
                                             33 COMRAM     1     1      0
                        _LED_Control
                _TM1640_Show_integer
                _TM1640_Writer_Dates
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     415
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _TM1640_Show_integer                                  2     0      2    2672
                                             31 COMRAM     2     0      2
                _TM1640_Writer_Dates
                            ___lwdiv
                            ___lwmod
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     671
                                             24 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     546
                                             24 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _TM1640_Writer_Dates                                  2     1      1    1170
                                             29 COMRAM     2     1      1
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _LED_Control                                          2     1      1     336
                                             24 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _Run                                                  0     0      0   11763
                            _GetADC6
                     _RS485_SendDate
 ---------------------------------------------------------------------------------
 (2) _RS485_SendDate                                       4     1      3    2383
                                             40 COMRAM     3     0      3
                                             10 BANK0      1     1      0
                          _VerifyCRC
 ---------------------------------------------------------------------------------
 (2) _GetADC6                                              0     0      0    9380
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2512
                                             32 COMRAM     3     0      3
                            _ReadADC (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3314
                                             35 COMRAM     6     0      6
                                              0 BANK0      9     9      0
                            _ReadADC (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3554
                                              9 BANK0      3     3      0
                                              0 BANK1     12     6      6
                            _ReadADC (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2404
                                             24 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) _ReadADC                                              4     2      2       0
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RS485_Init                                           0     0      0     284
                         _Open1USART
 ---------------------------------------------------------------------------------
 (2) _Open1USART                                           3     1      2     284
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _ManageMessage                                        0     0      0    3924
                  _Key_ManageMessage
                _RS485_ManageMessage
 ---------------------------------------------------------------------------------
 (2) _RS485_ManageMessage                                 11     8      3    3167
                                             40 COMRAM     3     0      3
                                              0 BANK1      8     8      0
                          _VerifyCRC
 ---------------------------------------------------------------------------------
 (3) _VerifyCRC                                           13    10      3    1857
                                             37 COMRAM     3     0      3
                                              0 BANK0     10    10      0
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     708
                                             24 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     395
                                             24 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _Key_ManageMessage                                    0     0      0     757
                        _Key_ReadFSM
                       _Key_ResetFSM
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     223
                                             24 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) _Key_ResetFSM                                         1     1      0      67
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Key_ReadFSM                                          6     6      0     467
                                             24 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _Key_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_TM1640                                          0     0      0     272
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
 ---------------------------------------------------------------------------------
 (3) _TM1640_Writer_Byte                                   2     2      0     136
                                             26 COMRAM     2     2      0
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (3) _TM1640_Stop                                          0     0      0      68
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (3) _TM1640_Start                                         0     0      0      68
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (4) _TM1640_Delay                                         2     2      0      68
                                             24 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC6_Init                                            0     0      0     260
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     260
                                             24 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Sys_Cyc                                             15    15      0     747
                                              9 COMRAM    15    15      0
                        _Key_ScanFSM
                         _Pulse_1Khz
                      i2_LED_Control
                        i2_SetTimer0
                          i2___llmod
 ---------------------------------------------------------------------------------
 (7) i2___llmod                                            9     1      8     263
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) i2_SetTimer0                                          4     2      2      94
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) i2_LED_Control                                        2     1      1     184
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (7) _Pulse_1Khz                                           1     1      0     161
                                              3 COMRAM     1     1      0
                         _Delay_1Khz
 ---------------------------------------------------------------------------------
 (8) _Delay_1Khz                                           3     3      0     138
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (7) _Key_ScanFSM                                          0     0      0       0
                           _Key_Scan
 ---------------------------------------------------------------------------------
 (8) _Key_Scan                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC6_Init
     _OpenADC
   _GPIO_Config
   _Init_TM1640
     _TM1640_Start
       _TM1640_Delay
     _TM1640_Stop
       _TM1640_Delay
     _TM1640_Writer_Byte
       _TM1640_Delay
   _Key_Init
   _ManageMessage
     _Key_ManageMessage
       _Key_ReadFSM
       _Key_ResetFSM
       ___lbmod
     _RS485_ManageMessage
       _VerifyCRC
         ___lldiv
         ___llmod
   _RS485_Init
     _Open1USART
   _Run
     _GetADC6
       _BusyADC
       _ConvertADC
       _ReadADC
       ___ftdiv
         _ReadADC (ARG)
         ___ftmul (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___ftmul
         _ReadADC (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___lwtoft
         _ReadADC (ARG)
         ___ftpack (ARG)
     _RS485_SendDate
       _VerifyCRC
         ___lldiv
         ___llmod
   _ShowResult
     _LED_Control
     _TM1640_Show_integer
       _TM1640_Writer_Dates
         _TM1640_Start
           _TM1640_Delay
         _TM1640_Stop
           _TM1640_Delay
         _TM1640_Writer_Byte
           _TM1640_Delay
         ___lwmod (ARG)
       ___lwdiv
       ___lwmod
       ___wmul (ARG)
     _TM1640_Writer_Dates
       _TM1640_Start
         _TM1640_Delay
       _TM1640_Stop
         _TM1640_Delay
       _TM1640_Writer_Byte
         _TM1640_Delay
       ___lwmod (ARG)
     ___wmul
   _Timer0_Init
     _SetTimer0

 _Sys_Cyc (ROOT)
   _Key_ScanFSM
     _Key_Scan
   _Pulse_1Khz
     _Delay_1Khz
   i2_LED_Control
   i2_SetTimer0
   i2___llmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      C       C       7        4.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      C      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2B      47       1       74.7%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F3      12        0.0%
DATA                 0      0      F3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Dec 18 14:37:50 2015

                 ?_TM1640_Stop 0001   __size_of_TM1640_Writer_Dates 0022                  ?_TM1640_Delay 0001  
          ___wmul@multiplicand 001B                    __CFG_BORV$3 000000                  ?_TM1640_Start 0001  
                 _gf_ADC6_Buff 0034                   __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000  
                 __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000                   __CFG_CP4$OFF 000000  
                 __CFG_CP5$OFF 000000                   __CFG_CP6$OFF 000000                   __CFG_CP7$OFF 000000  
                          l151 0586                            l223 0D94                            l215 0D48  
                          l224 0DAA                            l218 0D64                            l173 0BA0  
                          l247 0920                            l513 1190                            l381 133C  
                          l382 1352                            l396 15EA                            l572 1058  
                          l902 0CF6                            l576 1074                            l578 1080  
                          l579 1082                            l966 07B8                            _GIE 007F97  
                 __CFG_CPB$OFF 000000                            _RC0 007C10                            _RA4 007C04  
                          _RC1 007C11                            _RA5 007C05                            _RF1 007C29  
                          _RD5 007C1D                            _RF2 007C2A                            _RD6 007C1E  
                          _RF3 007C2B                            u370 165A                   __CFG_CPD$OFF 000000  
                          _PSA 007EAB                            _Run 1468       RS485_SendDate@date_dress 0029  
                          prod 000FF3       RS485_SendDate@date_lenth 002B                   ?_LED_Control 0019  
                          wreg 000FE8                   ?_GPIO_Config 0001                     _TXSTA1bits 000FAC  
         ?_TM1640_Show_integer 0020                  ?_Key_ResetFSM 0001                    ?_RS485_Init 0001  
                ??_Key_ReadFSM 0019                   ___ftdiv@cntr 0106                  ??_Key_ScanFSM 0001  
                         ?_Run 0001                   ___ftdiv@sign 010B                           l1101 10E2  
                         l1111 11D6                           l1038 0ECE                           l1048 0F3E  
                         l2130 15E4                           l2122 15DA                           l3110 0C86  
                         l2128 15E2                           l3120 0CEA                           l3112 0CA6  
                         l3104 0C6A                           l2170 136A                           l3202 0714  
                         l2164 1356                           l2260 05A0                           l2420 13B6  
                         l3132 0D10                           l3116 0CBE                           l3108 0C7A  
                         l2430 13D6                           l3142 0E76                           l3126 0CFE  
                         l3118 0CDE                           l3222 0776                           l2264 05D2  
                         l2256 055C                           l2248 0504                           l3144 0E84  
                         l3320 0206                           l2600 106C                           l3232 07CA  
                         l2440 10A6                           l2290 0694                           l2274 05FE  
                         l2258 0572                           l2266 05E8                           l3154 0EBE  
                         l3146 0E8C                           l3170 0F2E                           l3162 0EF2  
                         l3242 096E                           l2442 10B0                           l2428 13D0  
                         l2532 0B84                           l3164 0F00                           l3180 0892  
                         l3340 02F8                           l3308 01BA                           l2604 1078  
                         l2452 10D6                           l2444 10B8                           l2460 11A2  
                         l2286 0690                           l2278 060A                           l2550 0BD6  
                         l2542 0BAC                           l3166 0F08                           l3334 0298  
                         l3326 021E                           l3270 0A14                           l3262 09E4  
                         l2462 11AC                           l2296 11F2                           l2536 0B92  
                         l3176 080C                           l3344 031E                           l3280 0A4E  
                         l3272 0A1C                           l3248 09A0                           l2464 11B4  
                         l2298 1220                           l2570 0C46                           l2562 0C1E  
                         l2554 0BF4                           l2546 0BBA                           l3266 09FC  
                         l2722 1268                           l2714 1252                           l2706 123C  
                         l2810 0E48                           l2572 0C54                           l3348 0346  
                         l2580 103E                           l3196 06DA                           l3276 0A34  
                         l3364 0FC6                           l2716 1256                           l2708 1240  
                         l2468 11CA                           l2566 0C3C                           l2558 0C02  
                         l3294 0D6C                           l3374 1474                           l2806 0E06  
                         l3390 1456                           l2592 105C                           l2584 1048  
                         l3298 0DB2                           l2596 1064                           l2588 1050  
                         l2692 13E4                           _T0CS 007EAD                           _T0SE 007EAC  
                         u3401 0982                           u3331 06B6                           u3351 06F0  
                         _IPEN 007E87                           u1770 052A                           u1780 0548  
                         u3381 0950                           u1854 0658                           u1790 05BE  
                         u1855 0654                           u1864 066C                           u1865 0668  
                         i2l58 1518       RS485_ManageMessage@CRC_H 0105       RS485_ManageMessage@CRC_L 0106  
                ??_Init_TM1640 001D                     _Delay_1Khz 1372                           _main 143C  
                 ___ftpack@arg 0019                   ___ftpack@exp 001C                           fsr0h 000FEA  
                         fsr1h 000FE2                           fsr0l 000FE9                           fsr2h 000FDA  
                         indf1 000FE7                           fsr1l 000FE1                           indf2 000FDF  
                         fsr2l 000FD9                           pclat 000FFA                __end_of_GetADC6 102C  
                         prodh 000FF4                           prodl 000FF3                           start 016E  
                __CFG_IESO$OFF 000000                  __CFG_FOSC$HS1 000000                  __CFG_MCLRE$ON 000000  
                 ___ftmul@cntr 00FB                   ___param_bank 000010                   ___ftmul@sign 00FC  
              __end_of_BusyADC 1660                __end_of_ReadADC 1652                 ??_TM1640_Delay 0019  
              __end_of_OpenADC 1194                          ??_Run 002C                ??_ManageMessage 002C  
               ??_TM1640_Start 001B                  __CFG_RETEN$ON 000000                          ?_main 0001  
              __end_of___lbmod 13DC                __end_of_Sys_Cyc 016E                __end_of___ftdiv 07F2  
              __end_of___lldiv 0EE0                __end_of___ftmul 0A76                __end_of___llmod 0F50  
                        _RC1IF 007CF5                          _T0PS0 007EA8                          _T0PS1 007EA9  
                        _T0PS2 007EAA                __end_of___lwdiv 10EC                __end_of___lwmod 11E0  
                        i2l320 0106                          i2l323 0134              __end_of_ADC6_Init 1632  
                        _TMR0H 000FD7                          _TMR0L 000FD6                 ??_Key_ResetFSM 0019  
        ??_TM1640_Show_integer 0022                  __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000  
                __CFG_WRT2$OFF 000000                  __CFG_WRT3$OFF 000000                  __CFG_WRT4$OFF 000000  
               __CFG_EBRT0$OFF 000000                  __CFG_WRT5$OFF 000000                 __CFG_EBRT1$OFF 000000  
                __CFG_WRT6$OFF 000000                 __CFG_EBRT2$OFF 000000                  __CFG_WRT7$OFF 000000  
               __CFG_EBRT3$OFF 000000                 __CFG_EBRT4$OFF 000000                 __CFG_FCMEN$OFF 000000  
               __CFG_EBRT5$OFF 000000                 __CFG_EBRT6$OFF 000000                 __CFG_EBRT7$OFF 000000  
                __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000  
               __CFG_EBRTB$OFF 000000                  ___ftpack@sign 001D                     _ConvertADC 1660  
                        tablat 000FF5                          plusw2 000FDB                          status 000FD8  
           _TM1640_Writer_Byte 1334            __end_of_Key_ReadFSM 06A0            __end_of_Key_ScanFSM 1146  
           __size_ofi2___llmod 0070                __initialization 12F6            __end_of_Init_TM1640 1506  
          __size_of_RS485_Init 0018                   __end_of_main 1468            ?_TM1640_Writer_Byte 0001  
             __end_of_Key_Init 15D8               __end_of_Key_Scan 12F6          i2LED_Control@_LED_num 0002  
                   _Open1USART 102C                         ??_main 002C                  __activetblptr 000000  
RS485_ManageMessage@date_lenth 002B           ??_TM1640_Writer_Byte 001B                         _ADCON0 000FC2  
                       _ADCON1 000FC1                         _ADCON2 000FC0               ___llmod@dividend 0019  
                       _ADRESH 000FC4                         _ADRESL 000FC3                         _T08BIT 007EAE  
                       _ANSEL4 00792C                         _ANSEL6 00792E                         _ANSEL7 00792F  
                       _ANSEL8 007920               __end_of___ftpack 0D20                      ??_GetADC6 002A  
              __CFG_BBSIZ$BB2K 000000                         i2l1048 0FAE                         i2l2510 12CC  
                       i2l2522 12EA                         i2l2514 12D6                         i2l2506 12C2  
                       i2l2518 12E0                 __CFG_WDTEN$OFF 000000                         i2l2480 1380  
                       i2l2492 13A0                         i2l2484 138E                         i2l2820 151C  
                       i2l2830 10FE                         i2l2814 150C                         i2l2822 1522  
                       i2l2488 139C                         i2l2496 13A4                         i2l2842 1128  
                       i2l2834 110C                         i2l2930 00DC                         i2l2846 1136  
                       i2l2838 111A                         i2l2870 1284                         i2l2854 1414  
                       i2l2934 00EA                         i2l2928 00D0                         i2l2890 0F62  
                       i2l2884 12AC                         i2l2876 1296                         i2l2868 1280  
                       i2l2892 0F70                         i2l2948 0124                         i2l2878 129A  
                       i2l2894 0F78                         i2l2898 0F9E                  SetTimer0@_tmr 0019  
                       _RCREG1 000FAE               __end_of___lwtoft 14E0                         _RCSTA1 000FAB  
                  ?_Delay_1Khz 0001                         _TMR0IE 007F95                         _SPBRG1 000FAF  
                       _TMR0IF 007F92                         _TMR0ON 007EAF                         _TRISC0 007CA0  
                       _TRISA4 007C94                         _TRISC1 007CA1                         _TRISA5 007C95  
                       _TRISC6 007CA6                  TM1640_Delay@i 001A                         _TRISF1 007CB9  
                       _TRISD5 007CAD                         _TRISC7 007CA7                         _TRISF2 007CBA  
                       _TRISD6 007CAE                         _TRISF3 007CBB                      ??_BusyADC 0019  
                       _TXREG1 000FAD                      ??_ReadADC 001B                         _TXSTA1 000FAC  
                ??_Timer0_Init 001D                      ??_OpenADC 001B                   Sys_Cyc@_Byte 0038  
       TM1640_Writer_Byte@Date 001B                   Sys_Cyc@_flag 0039                 __CFG_XINST$OFF 000000  
                 Sys_Cyc@_temp 0018         TM1640_Writer_Byte@mask 001C        __size_of_RS485_SendDate 009E  
                       ___wmul 1492                 __CFG_STVREN$ON 000000                      ??___lbmod 001A  
                    ??_Sys_Cyc 000A                      ??___ftdiv 00FD                      ??___lldiv 0021  
                    ??___ftmul 00F4                      ??___llmod 0021           Sys_Cyc@_overturn_LED 003A  
                    ??___lwdiv 001D             __size_of_SetTimer0 0030                      ??___lwmod 001D  
                   _ShowResult 0DBE             LED_Control@_switch 0019                         clear_0 12FC  
                       clear_1 1308           __size_of_TM1640_Stop 0024   __size_of_RS485_ManageMessage 038C  
        ___ftmul@f3_as_product 00F8                     _Pulse_1Khz 1506             __size_of_VerifyCRC 014A  
            __end_ofi2___llmod 0FC0                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8           __size_of_LED_Control 0044           __size_of_GPIO_Config 0002  
                  _Key_ReadFSM 04FE            _TM1640_Writer_Dates 1598                    ?_ConvertADC 0001  
         __end_of_TM1640_Delay 15F2                    _Key_ScanFSM 10EC  RS485_ManageMessage@from_dress 0107  
              ___lbmod@divisor 0019           __end_of_TM1640_Start 1598                     __accesstop 0060  
      __end_of__initialization 132E                ___lbmod@counter 001B                    _Init_TM1640 14E0  
                 ?i2_SetTimer0 0001                  ___rparam_used 000001                     ___ftdiv@f1 0100  
                   ___ftdiv@f2 0103                     ___ftdiv@f3 0107              i2___llmod@divisor 0005  
             Pulse_1Khz@_pulse 0004              i2___llmod@counter 0009           __end_of_Key_ResetFSM 122A  
                   ___ftmul@f1 0024                     ___ftmul@f2 0027                 __pcstackCOMRAM 0001  
       __size_ofi2_LED_Control 0044                   __pidataBANK0 1632                  Key_ResetFSM@t 0019  
         ?_TM1640_Writer_Dates 001E            __end_of_Timer0_Init 1550                    ?_Open1USART 0019  
                   ___lwtoft@c 0021            __size_of_Delay_1Khz 0038                   ??_RS485_Init 001C  
            __end_of_SetTimer0 140C                     __pbssBANK0 0060                      ?_Key_Init 0001  
                    ?_Key_Scan 0001                    _ReceiveBuff 0060                __CFG_PLLCFG$OFF 000000  
      TM1640_Writer_Dates@Addr 001F        TM1640_Writer_Dates@Date 001E              __end_of_VerifyCRC 093C  
        ??_TM1640_Writer_Dates 001F                        ?___wmul 0019             __end_of_RS485_Init 160A  
                  ?_ShowResult 0001            LED_Control@_LED_num 001A            __size_of_ConvertADC 0004  
                    ?___ftpack 0019                      ?___lwtoft 0021               Open1USART@config 001B  
                      _LED_BUS 003B                    ?_Pulse_1Khz 0001                  i2_LED_Control 126E  
                      _SPBRGH1 000FD4                      _ADC6_Init 1620              _ga_RS485_SendBuff 003E  
                      _GetADC6 0FC0                     ??_Key_Init 0019                     ??_Key_Scan 0001  
          __size_of_Open1USART 0064                        _BusyADC 1652                        _ReadADC 1642  
              __CFG_PWRTEN$OFF 000000                        _OpenADC 1146                        __Hparam 0000  
                  _Timer0_Init 152C                        __Lparam 0000                 _RS485_SendDate 0D20  
                      ___lbmod 13AA                        _Sys_Cyc 0008                        ___ftdiv 06A0  
                      ___lldiv 0E54                __size_of___wmul 0028                        ___ftmul 093C  
                      ___llmod 0EE0                        ___lwdiv 1090                        ___lwmod 1194  
  __end_of_TM1640_Show_integer 0B74                        __pcinit 12F6                     ??___ftpack 001E  
                      __ramtop 1000          __end_of_ManageMessage 1620                        __ptext0 143C  
                      __ptext1 152C                        __ptext2 13DC                        __ptext3 0DBE  
                      __ptext4 1492                        __ptext5 0A76                        __ptext6 1194  
                      __ptext7 1090                        __ptext8 1598                        __ptext9 122A  
                   ??___lwtoft 0024                   __size_of_Run 002A          __size_of_TM1640_Delay 001A  
            __CFG_MSSPMSK$MSK7 000000                 ?i2_LED_Control 0001          __size_of_TM1640_Start 0024  
                   ?_ADC6_Init 0001                 OpenADC@config2 0019                 OpenADC@config3 001A  
         end_of_initialization 132E                   ??_Delay_1Khz 0001            __size_of_ShowResult 0096  
        __size_of_Key_ResetFSM 004A            _RS485_ManageMessage 0172                ___lldiv@divisor 001D  
       __end_of_RS485_SendDate 0DBE              _Key_ManageMessage 0B74                ___lldiv@counter 0025  
          __size_of_Pulse_1Khz 0026               _gs_Handle_Switch 0030           __size_ofi2_SetTimer0 0030  
           ?_Key_ManageMessage 0001                        postdec1 000FE5                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
                 _TM1640_Delay 15D8           ?_RS485_ManageMessage 0029                   _TM1640_Start 1574  
          ??_Key_ManageMessage 001F                      _PORTEbits 000F84               TM1640_Delay@Time 0019  
           __end_of_Delay_1Khz 13AA               ___lbmod@dividend 001A                   _Key_ResetFSM 11E0  
  __size_of_TM1640_Writer_Byte 003E                   ?_Key_ReadFSM 0001                      i2___llmod 0F50  
                 ??_ConvertADC 0019                   ?_Key_ScanFSM 0001            VerifyCRC@date_lenth 0028  
                  ___lbmod@rem 001C                   ?_Init_TM1640 0001                    ___ftdiv@exp 010A  
    __end_of_Key_ManageMessage 0C5A             i2___llmod@dividend 0001             VerifyCRC@CRC_Value 00F9  
              ?_RS485_SendDate 0029                    ___ftmul@exp 00F7                  ??_TM1640_Stop 001B  
               __end_of___wmul 14BA          ??_RS485_ManageMessage 0100                   ??_Open1USART 001B  
           __end_of_ConvertADC 1664                ??i2_LED_Control 0002                  ??_LED_Control 001A  
                ??_GPIO_Config 0019            start_initialization 12F6                    _g_Timer_Cyc 002C  
                  __end_of_Run 1492                    ??_ADC6_Init 001E                     ?i2___llmod 0001  
   TM1640_Show_integer@Numbers 0020                ___llmod@divisor 001D              __size_of_Key_Init 001E  
            __size_of_Key_Scan 0044                ___llmod@counter 0021                      _SetTimer0 13DC  
           __end_of_Open1USART 1090                i2SetTimer0@_tmr 0001                       ??___wmul 001D  
                 ??_ShowResult 0022                      _VerifyCRC 07F2                    __pdataBANK0 00E4  
         i2LED_Control@_switch 0001            __end_of_TM1640_Stop 1574              __size_of___ftpack 00C6  
                 ??_Pulse_1Khz 0004                    __pbssCOMRAM 002C              __size_of___lwtoft 0026  
                __pcstackBANK0 00F4                  __pcstackBANK1 0100                       ?_GetADC6 0001  
          __end_of_LED_Control 126E            __end_of_GPIO_Config 1666             __end_of_ShowResult 0E54  
   __size_of_Key_ManageMessage 00E6                       ?_BusyADC 0001                       ?_ReadADC 0019  
  __end_of_TM1640_Writer_Dates 15BA                     ?_SetTimer0 0019                       ?_OpenADC 0019  
                 ?_Timer0_Init 0001               ___lwdiv@dividend 0019              __CFG_CCP2MX$PORTC 000000  
           __end_of_Pulse_1Khz 152C                      __pintcode 0008                       ?___lbmod 0019  
                     ?_Sys_Cyc 0001                       ?___ftdiv 0100                       ?___lldiv 0019  
                     ?___ftmul 0024                       ?___llmod 0019                       ?___lwdiv 0019  
                     ?___lwmod 0019                     ?_VerifyCRC 0026                Open1USART@spbrg 0019  
             ___lwdiv@quotient 001D                    ??i2___llmod 0009                _s_Local_Key_FSM 00C5  
         __size_of_Key_ReadFSM 01A2           __size_of_Key_ScanFSM 005A                 ___wmul@product 001D  
                OpenADC@config 001D                       _PIE1bits 000F9D           __size_of_Init_TM1640 0026  
                     _PIR1bits 000F9E                    _TM1640_Stop 1550                     _ADCON0bits 000FC2  
            ___wmul@multiplier 0019               __CFG_SOSCSEL$DIG 000000              VerifyCRC@CRC_Byte 00FD  
                  _LED_Control 122A                    _GPIO_Config 1664                    Delay_1Khz@a 0001  
                  Delay_1Khz@b 0002                    Delay_1Khz@c 0003   __size_of_TM1640_Show_integer 00FE  
  RS485_ManageMessage@DataBuff 0029                      copy_data0 1322                       _Key_Init 15BA  
                     _Key_Scan 12B2               ??_RS485_SendDate 00FE               __size_of_GetADC6 006C  
                ??i2_SetTimer0 0003         __size_of_ManageMessage 0016                    ??_SetTimer0 001B  
             __size_of_BusyADC 000E               __size_of_ReadADC 0010                       __Hrparam 0000  
             __size_of_OpenADC 004E                       __Lrparam 0000             __CFG_BOREN$SBORDIS 000000  
            VerifyCRC@DataBuff 0026                    ??_VerifyCRC 00F4             Key_ReadFSM@key_num 001E  
     Pulse_1Khz@_overturn_1Khz 0037               __size_of___lbmod 0032               __size_of_Sys_Cyc 0166  
             __size_of___ftdiv 0152               __size_of___lldiv 008C               __size_of___ftmul 013A  
             __size_of___llmod 0070               __size_of___lwdiv 005C               __size_of___lwmod 004C  
                     ___ftpack 0C5A                   _g_RS485_Byte 003C           _g_RS485_Receive_Flag 003D  
                     ___lwtoft 14BA                 _gsa_Handle_Msg 006A     __end_of_TM1640_Writer_Byte 1372  
              ___lwdiv@divisor 001B                ___lwdiv@counter 001F                       __ptext10 1468  
                     __ptext11 0D20                       __ptext20 15F2                       __ptext12 0FC0  
                     __ptext21 102C                       __ptext13 14BA                       __ptext30 04FE  
                     __ptext22 160A                       __ptext14 093C                       __ptext31 15BA  
                     __ptext23 0172                       __ptext15 06A0                       __ptext32 14E0  
                     __ptext24 07F2                       __ptext16 0C5A                       __ptext41 0F50  
                     __ptext33 1334                       __ptext25 0EE0                       __ptext17 1642  
                     __ptext42 140C                       __ptext34 1550                       __ptext26 0E54  
                     __ptext18 1660                       __ptext43 126E                       __ptext35 1574  
                     __ptext27 0B74                       __ptext19 1652                       __ptext44 1506  
                     __ptext36 15D8                       __ptext28 13AA                       __ptext45 1372  
                     __ptext37 1664                       __ptext29 11E0                       __ptext46 10EC  
                     __ptext38 1620                       __ptext47 12B2                       __ptext39 1146  
                __size_of_main 002C            __CFG_RTCOSC$SOSCREF 000000    __end_of_RS485_ManageMessage 04FE  
         __size_of_Timer0_Init 0024            __end_ofi2_SetTimer0 143C            __CFG_INTOSCSEL$HIGH 000000  
                   _LED_Number 00E4                  _ManageMessage 160A                     _INTCONbits 000FF2  
        __end_ofi2_LED_Control 12B2                     _RS485_Init 15F2                       intlevel2 0000  
             ___lwmod@dividend 0019               ___lldiv@dividend 0019                     _RCSTA1bits 000FAB  
      Key_ReadFSM@key_num_mate 001D             __CFG_WDTPS$1048576 000000              _gs_Local_Key_User 00B0  
               ?_ManageMessage 0001           _ga_RS485_ReceiveBuff 00DA               ___lldiv@quotient 0021  
              ___lwmod@divisor 001B                ___lwmod@counter 001D            __CFG_BORPWR$ZPBORMV 000000  
           __size_of_ADC6_Init 0012                    i2_SetTimer0 140C            _TM1640_Show_integer 0A76  
