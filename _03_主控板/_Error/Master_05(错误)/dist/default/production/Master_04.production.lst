

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sun Dec 20 17:37:35 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F67K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    68  0000                     
    69                           	psect	idataBANK0
    70  0017B6                     __pidataBANK0:
    71                           	opt stack 0
    72                           
    73                           ;initializer for _LED_Number
    74  0017B6  3F                 	db	63
    75  0017B7  06                 	db	6
    76  0017B8  5B                 	db	91
    77  0017B9  4F                 	db	79
    78  0017BA  66                 	db	102
    79  0017BB  6D                 	db	109
    80  0017BC  7D                 	db	125
    81  0017BD  07                 	db	7
    82  0017BE  7F                 	db	127
    83  0017BF  6F                 	db	111
    84  0017C0  77                 	db	119
    85  0017C1  7C                 	db	124
    86  0017C2  39                 	db	57
    87  0017C3  5E                 	db	94
    88  0017C4  79                 	db	121
    89  0017C5  71                 	db	113
    90  0000                     _ANSEL4	set	31020
    91  0000                     _ANSEL6	set	31022
    92  0000                     _ANSEL7	set	31023
    93  0000                     _ANSEL8	set	31008
    94  0000                     _ADCON0	set	4034
    95  0000                     _ADCON0bits	set	4034
    96  0000                     _ADCON1	set	4033
    97  0000                     _ADCON2	set	4032
    98  0000                     _ADRESH	set	4036
    99  0000                     _ADRESL	set	4035
   100  0000                     _INTCONbits	set	4082
   101  0000                     _PIE1bits	set	3997
   102  0000                     _PIR1bits	set	3998
   103  0000                     _RCREG1	set	4014
   104  0000                     _RCSTA1	set	4011
   105  0000                     _RCSTA1bits	set	4011
   106  0000                     _SPBRG1	set	4015
   107  0000                     _SPBRGH1	set	4052
   108  0000                     _TMR0H	set	4055
   109  0000                     _TMR0L	set	4054
   110  0000                     _TXREG1	set	4013
   111  0000                     _TXSTA1	set	4012
   112  0000                     _TXSTA1bits	set	4012
   113  0000                     _GIE	set	32663
   114  0000                     _IPEN	set	32391
   115  0000                     _PSA	set	32427
   116  0000                     _RA4	set	31748
   117  0000                     _RA5	set	31749
   118  0000                     _RB0	set	31752
   119  0000                     _RB1	set	31753
   120  0000                     _RC0	set	31760
   121  0000                     _RC1	set	31761
   122  0000                     _RC1IF	set	31989
   123  0000                     _RD0	set	31768
   124  0000                     _RD1	set	31769
   125  0000                     _RD2	set	31770
   126  0000                     _RD3	set	31771
   127  0000                     _RD4	set	31772
   128  0000                     _RD5	set	31773
   129  0000                     _RD6	set	31774
   130  0000                     _RD7	set	31775
   131  0000                     _RF1	set	31785
   132  0000                     _RF2	set	31786
   133  0000                     _RF3	set	31787
   134  0000                     _T08BIT	set	32430
   135  0000                     _T0CS	set	32429
   136  0000                     _T0PS0	set	32424
   137  0000                     _T0PS1	set	32425
   138  0000                     _T0PS2	set	32426
   139  0000                     _T0SE	set	32428
   140  0000                     _TMR0IE	set	32661
   141  0000                     _TMR0IF	set	32658
   142  0000                     _TMR0ON	set	32431
   143  0000                     _TRISA4	set	31892
   144  0000                     _TRISA5	set	31893
   145  0000                     _TRISB0	set	31896
   146  0000                     _TRISB1	set	31897
   147  0000                     _TRISB2	set	31898
   148  0000                     _TRISC0	set	31904
   149  0000                     _TRISC1	set	31905
   150  0000                     _TRISC6	set	31910
   151  0000                     _TRISC7	set	31911
   152  0000                     _TRISD0	set	31912
   153  0000                     _TRISD1	set	31913
   154  0000                     _TRISD2	set	31914
   155  0000                     _TRISD3	set	31915
   156  0000                     _TRISD4	set	31916
   157  0000                     _TRISD5	set	31917
   158  0000                     _TRISD6	set	31918
   159  0000                     _TRISD7	set	31919
   160  0000                     _TRISF1	set	31929
   161  0000                     _TRISF2	set	31930
   162  0000                     _TRISF3	set	31931
   163                           
   164                           ; #config settings
   165  0000                     
   166                           	psect	cinit
   167  001348                     __pcinit:
   168                           	opt stack 0
   169  001348                     start_initialization:
   170                           	opt stack 0
   171  001348                     __initialization:
   172                           	opt stack 0
   173                           
   174                           ; Clear objects allocated to BANK1 (70 bytes)
   175  001348  EE01  F000         	lfsr	0,__pbssBANK1
   176  00134C  0E46               	movlw	70
   177  00134E                     clear_0:
   178  00134E  6AEE               	clrf	postinc0,c
   179  001350  06E8               	decf	wreg,f,c
   180  001352  E1FD               	bnz	clear_0
   181                           
   182                           ; Clear objects allocated to BANK0 (75 bytes)
   183  001354  EE00  F060         	lfsr	0,__pbssBANK0
   184  001358  0E4B               	movlw	75
   185  00135A                     clear_1:
   186  00135A  6AEE               	clrf	postinc0,c
   187  00135C  06E8               	decf	wreg,f,c
   188  00135E  E1FD               	bnz	clear_1
   189                           
   190                           ; Clear objects allocated to COMRAM (26 bytes)
   191  001360  EE00  F02E         	lfsr	0,__pbssCOMRAM
   192  001364  0E1A               	movlw	26
   193  001366                     clear_2:
   194  001366  6AEE               	clrf	postinc0,c
   195  001368  06E8               	decf	wreg,f,c
   196  00136A  E1FD               	bnz	clear_2
   197                           
   198                           ; Initialize objects allocated to BANK0 (16 bytes)
   199                           ; load TBLPTR registers with __pidataBANK0
   200  00136C  0EB6               	movlw	low __pidataBANK0
   201  00136E  6EF6               	movwf	tblptrl,c
   202  001370  0E17               	movlw	high __pidataBANK0
   203  001372  6EF7               	movwf	tblptrh,c
   204  001374  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   205  001376  6EF8               	movwf	tblptru,c
   206  001378  EE00  F0C4         	lfsr	0,__pdataBANK0
   207  00137C  EE10 F010          	lfsr	1,16
   208  001380                     copy_data0:
   209  001380  0009               	tblrd		*+
   210  001382  CFF5 FFEE          	movff	tablat,postinc0
   211  001386  50E5               	movf	postdec1,w,c
   212  001388  50E1               	movf	fsr1l,w,c
   213  00138A  E1FA               	bnz	copy_data0
   214  00138C                     end_of_initialization:
   215                           	opt stack 0
   216  00138C                     __end_of__initialization:
   217                           	opt stack 0
   218  00138C  0100               	movlb	0
   219  00138E  EFAB  F00A         	goto	_main	;jump to C main() function
   220                           tblptru	equ	0xFF8
   221                           tblptrh	equ	0xFF7
   222                           tblptrl	equ	0xFF6
   223                           tablat	equ	0xFF5
   224                           postinc0	equ	0xFEE
   225                           wreg	equ	0xFE8
   226                           postdec1	equ	0xFE5
   227                           fsr1l	equ	0xFE1
   228                           
   229                           	psect	bssCOMRAM
   230  00002E                     __pbssCOMRAM:
   231                           	opt stack 0
   232  00002E                     _gs_ComData:
   233                           	opt stack 0
   234  00002E                     	ds	7
   235  000035                     _g_Timer_Cyc:
   236                           	opt stack 0
   237  000035                     	ds	4
   238  000039                     Pulse_1Khz@_overturn_1Khz:
   239                           	opt stack 0
   240  000039                     	ds	1
   241  00003A                     Sys_Cyc@_Byte:
   242                           	opt stack 0
   243  00003A                     	ds	1
   244  00003B                     Sys_Cyc@_flag:
   245                           	opt stack 0
   246  00003B                     	ds	1
   247  00003C                     Sys_Cyc@_overturn_LED:
   248                           	opt stack 0
   249  00003C                     	ds	1
   250  00003D                     _LED_BUS:
   251                           	opt stack 0
   252  00003D                     	ds	1
   253  00003E                     _g_RS485_Byte:
   254                           	opt stack 0
   255  00003E                     	ds	1
   256  00003F                     _g_RS485_Receive_Flag:
   257                           	opt stack 0
   258  00003F                     	ds	1
   259  000040                     _g_RS485_Send_Flag:
   260                           	opt stack 0
   261  000040                     	ds	1
   262  000041                     _gs_Switch:
   263                           	opt stack 0
   264  000041                     	ds	7
   265                           tblptru	equ	0xFF8
   266                           tblptrh	equ	0xFF7
   267                           tblptrl	equ	0xFF6
   268                           tablat	equ	0xFF5
   269                           postinc0	equ	0xFEE
   270                           wreg	equ	0xFE8
   271                           postdec1	equ	0xFE5
   272                           fsr1l	equ	0xFE1
   273                           
   274                           	psect	bssBANK0
   275  000060                     __pbssBANK0:
   276                           	opt stack 0
   277  000060                     _ReceiveBuff:
   278                           	opt stack 0
   279  000060                     	ds	10
   280  00006A                     _gf_ADC6_Buff:
   281                           	opt stack 0
   282  00006A                     	ds	3
   283  00006D                     _gs_Local_Key_User:
   284                           	opt stack 0
   285  00006D                     	ds	21
   286  000082                     _s_Local_Key_FSM:
   287                           	opt stack 0
   288  000082                     	ds	21
   289  000097                     _ga_RS485_ReceiveBuff:
   290                           	opt stack 0
   291  000097                     	ds	10
   292  0000A1                     _ga_RS485_SendBuff:
   293                           	opt stack 0
   294  0000A1                     	ds	10
   295                           tblptru	equ	0xFF8
   296                           tblptrh	equ	0xFF7
   297                           tblptrl	equ	0xFF6
   298                           tablat	equ	0xFF5
   299                           postinc0	equ	0xFEE
   300                           wreg	equ	0xFE8
   301                           postdec1	equ	0xFE5
   302                           fsr1l	equ	0xFE1
   303                           
   304                           	psect	dataBANK0
   305  0000C4                     __pdataBANK0:
   306                           	opt stack 0
   307  0000C4                     _LED_Number:
   308                           	opt stack 0
   309  0000C4                     	ds	16
   310                           tblptru	equ	0xFF8
   311                           tblptrh	equ	0xFF7
   312                           tblptrl	equ	0xFF6
   313                           tablat	equ	0xFF5
   314                           postinc0	equ	0xFEE
   315                           wreg	equ	0xFE8
   316                           postdec1	equ	0xFE5
   317                           fsr1l	equ	0xFE1
   318                           
   319                           	psect	bssBANK1
   320  000100                     __pbssBANK1:
   321                           	opt stack 0
   322  000100                     _gsa_Msg:
   323                           	opt stack 0
   324  000100                     	ds	70
   325                           tblptru	equ	0xFF8
   326                           tblptrh	equ	0xFF7
   327                           tblptrl	equ	0xFF6
   328                           tablat	equ	0xFF5
   329                           postinc0	equ	0xFEE
   330                           wreg	equ	0xFE8
   331                           postdec1	equ	0xFE5
   332                           fsr1l	equ	0xFE1
   333                           
   334                           	psect	cstackBANK0
   335  0000AB                     __pcstackBANK0:
   336                           	opt stack 0
   337  0000AB                     ___ftmul@exp:
   338                           	opt stack 0
   339  0000AB                     VerifyCRC@CRC_Value:
   340                           	opt stack 0
   341                           
   342                           ; 4 bytes @ 0x0
   343  0000AB                     	ds	1
   344  0000AC                     ___ftmul@f3_as_product:
   345                           	opt stack 0
   346                           
   347                           ; 3 bytes @ 0x1
   348  0000AC                     	ds	3
   349  0000AF                     VerifyCRC@CRC_Byte:
   350                           	opt stack 0
   351  0000AF                     ___ftmul@cntr:
   352                           	opt stack 0
   353                           
   354                           ; 1 bytes @ 0x4
   355  0000AF                     	ds	1
   356  0000B0                     ___ftmul@sign:
   357                           	opt stack 0
   358  0000B0                     RS485_SendDate@date_dress:
   359                           	opt stack 0
   360  0000B0                     RS485_ManageMessage@DataBuff:
   361                           	opt stack 0
   362                           
   363                           ; 2 bytes @ 0x5
   364  0000B0                     	ds	1
   365  0000B1                     ?___ftdiv:
   366                           	opt stack 0
   367  0000B1                     ___ftdiv@f1:
   368                           	opt stack 0
   369                           
   370                           ; 3 bytes @ 0x6
   371  0000B1                     	ds	1
   372  0000B2                     RS485_SendDate@date_lenth:
   373                           	opt stack 0
   374  0000B2                     RS485_ManageMessage@date_lenth:
   375                           	opt stack 0
   376                           
   377                           ; 1 bytes @ 0x7
   378  0000B2                     	ds	1
   379  0000B3                     ??_RS485_ManageMessage:
   380                           
   381                           ; 0 bytes @ 0x8
   382  0000B3                     	ds	1
   383  0000B4                     ___ftdiv@f2:
   384                           	opt stack 0
   385                           
   386                           ; 3 bytes @ 0x9
   387  0000B4                     	ds	3
   388  0000B7                     ??___ftdiv:
   389                           
   390                           ; 0 bytes @ 0xC
   391  0000B7                     	ds	1
   392  0000B8                     RS485_ManageMessage@CRC_H:
   393                           	opt stack 0
   394                           
   395                           ; 1 bytes @ 0xD
   396  0000B8                     	ds	1
   397  0000B9                     RS485_ManageMessage@CRC_L:
   398                           	opt stack 0
   399                           
   400                           ; 1 bytes @ 0xE
   401  0000B9                     	ds	1
   402  0000BA                     RS485_ManageMessage@from_dress:
   403                           	opt stack 0
   404  0000BA                     ___ftdiv@cntr:
   405                           	opt stack 0
   406                           
   407                           ; 1 bytes @ 0xF
   408  0000BA                     	ds	1
   409  0000BB                     ___ftdiv@f3:
   410                           	opt stack 0
   411                           
   412                           ; 3 bytes @ 0x10
   413  0000BB                     	ds	3
   414  0000BE                     ___ftdiv@exp:
   415                           	opt stack 0
   416                           
   417                           ; 1 bytes @ 0x13
   418  0000BE                     	ds	1
   419  0000BF                     ___ftdiv@sign:
   420                           	opt stack 0
   421                           
   422                           ; 1 bytes @ 0x14
   423  0000BF                     	ds	1
   424  0000C0                     ??_Run:
   425                           
   426                           ; 0 bytes @ 0x15
   427  0000C0                     	ds	4
   428                           tblptru	equ	0xFF8
   429                           tblptrh	equ	0xFF7
   430                           tblptrl	equ	0xFF6
   431                           tablat	equ	0xFF5
   432                           postinc0	equ	0xFEE
   433                           wreg	equ	0xFE8
   434                           postdec1	equ	0xFE5
   435                           fsr1l	equ	0xFE1
   436                           
   437                           	psect	cstackCOMRAM
   438  000001                     __pcstackCOMRAM:
   439                           	opt stack 0
   440  000001                     ?i2___llmod:
   441                           	opt stack 0
   442  000001                     Delay_1Khz@a:
   443                           	opt stack 0
   444  000001                     i2LED_Control@_switch:
   445                           	opt stack 0
   446  000001                     i2SetTimer0@_tmr:
   447                           	opt stack 0
   448  000001                     i2___llmod@dividend:
   449                           	opt stack 0
   450                           
   451                           ; 4 bytes @ 0x0
   452  000001                     	ds	1
   453  000002                     Delay_1Khz@b:
   454                           	opt stack 0
   455  000002                     i2LED_Control@_LED_num:
   456                           	opt stack 0
   457                           
   458                           ; 1 bytes @ 0x1
   459  000002                     	ds	1
   460  000003                     ??i2_SetTimer0:
   461  000003                     Delay_1Khz@c:
   462                           	opt stack 0
   463                           
   464                           ; 1 bytes @ 0x2
   465  000003                     	ds	1
   466  000004                     Pulse_1Khz@_QD:
   467                           	opt stack 0
   468                           
   469                           ; 1 bytes @ 0x3
   470  000004                     	ds	1
   471  000005                     Pulse_1Khz@_pulse:
   472                           	opt stack 0
   473  000005                     i2___llmod@divisor:
   474                           	opt stack 0
   475                           
   476                           ; 4 bytes @ 0x4
   477  000005                     	ds	4
   478  000009                     i2___llmod@counter:
   479                           	opt stack 0
   480                           
   481                           ; 1 bytes @ 0x8
   482  000009                     	ds	1
   483  00000A                     ??_Sys_Cyc:
   484                           
   485                           ; 0 bytes @ 0x9
   486  00000A                     	ds	14
   487  000018                     Sys_Cyc@_temp:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0x17
   491  000018                     	ds	1
   492  000019                     ??_Key_ReadFSM:
   493  000019                     ?_ReadADC:
   494                           	opt stack 0
   495  000019                     ?___wmul:
   496                           	opt stack 0
   497  000019                     ?___lwdiv:
   498                           	opt stack 0
   499  000019                     ?___lwmod:
   500                           	opt stack 0
   501  000019                     ?___ftpack:
   502                           	opt stack 0
   503  000019                     ?___lldiv:
   504                           	opt stack 0
   505  000019                     ?___llmod:
   506                           	opt stack 0
   507  000019                     delay1ms@a:
   508                           	opt stack 0
   509  000019                     Key_ResetFSM@t:
   510                           	opt stack 0
   511  000019                     LED_Control@_switch:
   512                           	opt stack 0
   513  000019                     TM1640_Delay@Time:
   514                           	opt stack 0
   515  000019                     OpenADC@config2:
   516                           	opt stack 0
   517  000019                     ___lbmod@divisor:
   518                           	opt stack 0
   519  000019                     SetTimer0@_tmr:
   520                           	opt stack 0
   521  000019                     Open1USART@spbrg:
   522                           	opt stack 0
   523  000019                     ___wmul@multiplier:
   524                           	opt stack 0
   525  000019                     ___lwdiv@dividend:
   526                           	opt stack 0
   527  000019                     ___lwmod@dividend:
   528                           	opt stack 0
   529  000019                     ___ftpack@arg:
   530                           	opt stack 0
   531  000019                     ___lldiv@dividend:
   532                           	opt stack 0
   533  000019                     ___llmod@dividend:
   534                           	opt stack 0
   535                           
   536                           ; 4 bytes @ 0x18
   537  000019                     	ds	1
   538  00001A                     delay1ms@b:
   539                           	opt stack 0
   540  00001A                     LED_Control@_LED_num:
   541                           	opt stack 0
   542  00001A                     TM1640_Delay@i:
   543                           	opt stack 0
   544  00001A                     OpenADC@config3:
   545                           	opt stack 0
   546  00001A                     ___lbmod@dividend:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0x19
   550  00001A                     	ds	1
   551  00001B                     ??_SetTimer0:
   552  00001B                     ??_OpenADC:
   553  00001B                     ??_ReadADC:
   554  00001B                     delay1ms@c:
   555                           	opt stack 0
   556  00001B                     TM1640_Writer_Byte@Date:
   557                           	opt stack 0
   558  00001B                     Open1USART@config:
   559                           	opt stack 0
   560  00001B                     ___lbmod@counter:
   561                           	opt stack 0
   562  00001B                     ___wmul@multiplicand:
   563                           	opt stack 0
   564  00001B                     ___lwdiv@divisor:
   565                           	opt stack 0
   566  00001B                     ___lwmod@divisor:
   567                           	opt stack 0
   568                           
   569                           ; 2 bytes @ 0x1A
   570  00001B                     	ds	1
   571  00001C                     TM1640_Writer_Byte@mask:
   572                           	opt stack 0
   573  00001C                     ___ftpack@exp:
   574                           	opt stack 0
   575  00001C                     ___lbmod@rem:
   576                           	opt stack 0
   577  00001C                     delay_ms@_ms:
   578                           	opt stack 0
   579                           
   580                           ; 2 bytes @ 0x1B
   581  00001C                     	ds	1
   582  00001D                     Key_ReadFSM@key_num_mate:
   583                           	opt stack 0
   584  00001D                     OpenADC@config:
   585                           	opt stack 0
   586  00001D                     ___ftpack@sign:
   587                           	opt stack 0
   588  00001D                     ___lwmod@counter:
   589                           	opt stack 0
   590  00001D                     ___wmul@product:
   591                           	opt stack 0
   592  00001D                     ___lwdiv@quotient:
   593                           	opt stack 0
   594  00001D                     ___lldiv@divisor:
   595                           	opt stack 0
   596  00001D                     ___llmod@divisor:
   597                           	opt stack 0
   598                           
   599                           ; 4 bytes @ 0x1C
   600  00001D                     	ds	1
   601  00001E                     ??___ftpack:
   602  00001E                     Key_ReadFSM@key_num:
   603                           	opt stack 0
   604  00001E                     TM1640_Writer_Dates@Date:
   605                           	opt stack 0
   606  00001E                     Relay_Control@_switch:
   607                           	opt stack 0
   608                           
   609                           ; 1 bytes @ 0x1D
   610  00001E                     	ds	1
   611  00001F                     ??_Key_ManageMessage:
   612  00001F                     TM1640_Writer_Dates@Addr:
   613                           	opt stack 0
   614  00001F                     Relay_Control@relay_num:
   615                           	opt stack 0
   616  00001F                     ___lwdiv@counter:
   617                           	opt stack 0
   618                           
   619                           ; 1 bytes @ 0x1E
   620  00001F                     	ds	1
   621  000020                     TM1640_Show_integer@Numbers:
   622                           	opt stack 0
   623                           
   624                           ; 2 bytes @ 0x1F
   625  000020                     	ds	1
   626  000021                     ?___lwtoft:
   627                           	opt stack 0
   628  000021                     ___llmod@counter:
   629                           	opt stack 0
   630  000021                     ___lwtoft@c:
   631                           	opt stack 0
   632  000021                     ___lldiv@quotient:
   633                           	opt stack 0
   634                           
   635                           ; 4 bytes @ 0x20
   636  000021                     	ds	1
   637  000022                     ??_ShowResult:
   638  000022                     
   639                           ; 0 bytes @ 0x21
   640  000022                     	ds	2
   641  000024                     ?___ftmul:
   642                           	opt stack 0
   643  000024                     ___ftmul@f1:
   644                           	opt stack 0
   645                           
   646                           ; 3 bytes @ 0x23
   647  000024                     	ds	1
   648  000025                     ___lldiv@counter:
   649                           	opt stack 0
   650                           
   651                           ; 1 bytes @ 0x24
   652  000025                     	ds	1
   653  000026                     VerifyCRC@DataBuff:
   654                           	opt stack 0
   655                           
   656                           ; 2 bytes @ 0x25
   657  000026                     	ds	1
   658  000027                     ___ftmul@f2:
   659                           	opt stack 0
   660                           
   661                           ; 3 bytes @ 0x26
   662  000027                     	ds	1
   663  000028                     VerifyCRC@date_lenth:
   664                           	opt stack 0
   665                           
   666                           ; 1 bytes @ 0x27
   667  000028                     	ds	1
   668  000029                     ??_VerifyCRC:
   669                           
   670                           ; 0 bytes @ 0x28
   671  000029                     	ds	1
   672  00002A                     ??___ftmul:
   673                           
   674                           ; 0 bytes @ 0x29
   675  00002A                     	ds	3
   676  00002D                     
   677                           ; 0 bytes @ 0x2C
   678  00002D                     	ds	1
   679  00002E                     tblptru	equ	0xFF8
   680                           tblptrh	equ	0xFF7
   681                           tblptrl	equ	0xFF6
   682                           tablat	equ	0xFF5
   683                           postinc0	equ	0xFEE
   684                           wreg	equ	0xFE8
   685                           postdec1	equ	0xFE5
   686                           fsr1l	equ	0xFE1
   687                           
   688                           ; 0 bytes @ 0x2D
   689 ;;
   690 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   691 ;;
   692 ;; *************** function _main *****************
   693 ;; Defined at:
   694 ;;		line 40 in file "_01_USER/main.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;		None
   697 ;; Auto vars:     Size  Location     Type
   698 ;;		None
   699 ;; Return value:  Size  Location     Type
   700 ;;                  2   24[None  ] int 
   701 ;; Registers used:
   702 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   703 ;; Tracked objects:
   704 ;;		On entry : 0/0
   705 ;;		On exit  : 0/0
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   712 ;;Total ram usage:        0 bytes
   713 ;; Hardware stack levels required when called:    8
   714 ;; This function calls:
   715 ;;		_ADC6_Init
   716 ;;		_GPIO_Config
   717 ;;		_Init_TM1640
   718 ;;		_Key_Init
   719 ;;		_ManageMessage
   720 ;;		_RS485_Init
   721 ;;		_Relay_Init
   722 ;;		_Run
   723 ;;		_SCR_Init
   724 ;;		_ShowResult
   725 ;;		_Timer0_Init
   726 ;; This function is called by:
   727 ;;		Startup code after reset
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           
   731                           	psect	text0
   732  001556                     __ptext0:
   733                           	opt stack 0
   734  001556                     _main:
   735                           	opt stack 23
   736                           
   737                           ;main.c: 45: GPIO_Config();
   738                           
   739                           ; BSR set to: 0
   740                           ;incstack = 0
   741  001556  EC01  F00C         	call	_GPIO_Config	;wreg free
   742                           
   743                           ;main.c: 46: Key_Init();
   744  00155A  EC8F  F00B         	call	_Key_Init	;wreg free
   745                           
   746                           ;main.c: 47: Timer0_Init();
   747  00155E  EC48  F00B         	call	_Timer0_Init	;wreg free
   748                           
   749                           ;main.c: 48: Init_TM1640();
   750  001562  EC35  F00B         	call	_Init_TM1640	;wreg free
   751                           
   752                           ;main.c: 49: ADC6_Init();
   753  001566  ECD2  F00B         	call	_ADC6_Init	;wreg free
   754                           
   755                           ;main.c: 50: RS485_Init();
   756  00156A  ECC6  F00B         	call	_RS485_Init	;wreg free
   757                           
   758                           ;main.c: 51: Relay_Init();
   759  00156E  ECF2  F00B         	call	_Relay_Init	;wreg free
   760                           
   761                           ;main.c: 52: SCR_Init();
   762  001572  ECF9  F00B         	call	_SCR_Init	;wreg free
   763  001576  D000               	goto	l4002
   764  001578                     l4002:
   765                           
   766                           ;main.c: 56: {
   767                           ;main.c: 57: ManageMessage();
   768  001578  EC9E  F00B         	call	_ManageMessage	;wreg free
   769                           
   770                           ;main.c: 58: Run();
   771  00157C  EC35  F008         	call	_Run	;wreg free
   772                           
   773                           ;main.c: 59: ShowResult();
   774  001580  ECF9  F006         	call	_ShowResult	;wreg free
   775  001584  D7F9               	goto	l4002
   776                           
   777                           ;main.c: 60: }
   778                           ;main.c: 62: return 0;
   779                           ;	Return value of _main is never used
   780  001586  EFD1  F000         	goto	start
   781  00158A                     __end_of_main:
   782                           	opt stack 0
   783                           tblptru	equ	0xFF8
   784                           tblptrh	equ	0xFF7
   785                           tblptrl	equ	0xFF6
   786                           tablat	equ	0xFF5
   787                           postinc0	equ	0xFEE
   788                           wreg	equ	0xFE8
   789                           postdec1	equ	0xFE5
   790                           fsr1l	equ	0xFE1
   791                           
   792 ;; *************** function _Timer0_Init *****************
   793 ;; Defined at:
   794 ;;		line 43 in file "_01_USER/My_Timer.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;		None
   797 ;; Auto vars:     Size  Location     Type
   798 ;;		None
   799 ;; Return value:  Size  Location     Type
   800 ;;		None               void
   801 ;; Registers used:
   802 ;;		wreg, status,2, status,0, cstack
   803 ;; Tracked objects:
   804 ;;		On entry : 0/0
   805 ;;		On exit  : 0/0
   806 ;;		Unchanged: 0/0
   807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   812 ;;Total ram usage:        0 bytes
   813 ;; Hardware stack levels used:    1
   814 ;; Hardware stack levels required when called:    4
   815 ;; This function calls:
   816 ;;		_SetTimer0
   817 ;; This function is called by:
   818 ;;		_main
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           
   822                           	psect	text1
   823  001690                     __ptext1:
   824                           	opt stack 0
   825  001690                     _Timer0_Init:
   826                           	opt stack 26
   827                           
   828                           ;My_Timer.c: 45: T08BIT = 0;
   829                           
   830                           ;incstack = 0
   831  001690  9CD5               	bcf	4053,6,c	;volatile
   832                           
   833                           ;My_Timer.c: 46: T0CS = 0;
   834  001692  9AD5               	bcf	4053,5,c	;volatile
   835                           
   836                           ;My_Timer.c: 47: T0SE = 0;
   837  001694  98D5               	bcf	4053,4,c	;volatile
   838                           
   839                           ;My_Timer.c: 48: PSA = 0;
   840  001696  96D5               	bcf	4053,3,c	;volatile
   841                           
   842                           ;My_Timer.c: 49: T0PS2 = 1;
   843  001698  84D5               	bsf	4053,2,c	;volatile
   844                           
   845                           ;My_Timer.c: 50: T0PS1 = 1;
   846  00169A  82D5               	bsf	4053,1,c	;volatile
   847                           
   848                           ;My_Timer.c: 51: T0PS0 = 1;
   849  00169C  80D5               	bsf	4053,0,c	;volatile
   850                           
   851                           ;My_Timer.c: 65: SetTimer0(1);
   852  00169E  0E00               	movlw	0
   853  0016A0  6E1A               	movwf	SetTimer0@_tmr+1,c
   854  0016A2  0E01               	movlw	1
   855  0016A4  6E19               	movwf	SetTimer0@_tmr,c
   856  0016A6  ECDE  F00A         	call	_SetTimer0	;wreg free
   857                           
   858                           ;My_Timer.c: 66: TMR0ON = 1;
   859  0016AA  8ED5               	bsf	4053,7,c	;volatile
   860                           
   861                           ;My_Timer.c: 67: TMR0IE = 1;
   862  0016AC  8AF2               	bsf	intcon,5,c	;volatile
   863                           
   864                           ;My_Timer.c: 68: IPEN = 0;GIE = 1;
   865  0016AE  9ED0               	bcf	4048,7,c	;volatile
   866  0016B0  8EF2               	bsf	intcon,7,c	;volatile
   867  0016B2  0012               	return		;funcret
   868  0016B4                     __end_of_Timer0_Init:
   869                           	opt stack 0
   870                           tblptru	equ	0xFF8
   871                           tblptrh	equ	0xFF7
   872                           tblptrl	equ	0xFF6
   873                           tablat	equ	0xFF5
   874                           intcon	equ	0xFF2
   875                           postinc0	equ	0xFEE
   876                           wreg	equ	0xFE8
   877                           postdec1	equ	0xFE5
   878                           fsr1l	equ	0xFE1
   879                           
   880 ;; *************** function _SetTimer0 *****************
   881 ;; Defined at:
   882 ;;		line 81 in file "_01_USER/My_Timer.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;  _tmr            2   24[COMRAM] unsigned int 
   885 ;; Auto vars:     Size  Location     Type
   886 ;;		None
   887 ;; Return value:  Size  Location     Type
   888 ;;		None               void
   889 ;; Registers used:
   890 ;;		wreg, status,2, status,0
   891 ;; Tracked objects:
   892 ;;		On entry : 0/0
   893 ;;		On exit  : 0/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   896 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   898 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   899 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   900 ;;Total ram usage:        4 bytes
   901 ;; Hardware stack levels used:    1
   902 ;; Hardware stack levels required when called:    3
   903 ;; This function calls:
   904 ;;		Nothing
   905 ;; This function is called by:
   906 ;;		_Timer0_Init
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910                           	psect	text2
   911  0015BC                     __ptext2:
   912                           	opt stack 0
   913  0015BC                     _SetTimer0:
   914                           	opt stack 26
   915                           
   916                           ;My_Timer.c: 83: if(_tmr > 0xffff) _tmr = 0xffff;
   917                           
   918                           ;incstack = 0
   919  0015BC  D003               	goto	l3024
   920  0015BE  6819               	setf	SetTimer0@_tmr,c
   921  0015C0  681A               	setf	SetTimer0@_tmr+1,c
   922  0015C2  D000               	goto	l3024
   923  0015C4                     l3024:
   924                           
   925                           ;My_Timer.c: 84: _tmr=0xffff-_tmr;
   926  0015C4  C019  F01B         	movff	SetTimer0@_tmr,??_SetTimer0
   927  0015C8  C01A  F01C         	movff	SetTimer0@_tmr+1,??_SetTimer0+1
   928  0015CC  1E1B               	comf	??_SetTimer0,f,c
   929  0015CE  1E1C               	comf	??_SetTimer0+1,f,c
   930  0015D0  4A1B               	infsnz	??_SetTimer0,f,c
   931  0015D2  2A1C               	incf	??_SetTimer0+1,f,c
   932  0015D4  0EFF               	movlw	255
   933  0015D6  241B               	addwf	??_SetTimer0,w,c
   934  0015D8  6E19               	movwf	SetTimer0@_tmr,c
   935  0015DA  0EFF               	movlw	255
   936  0015DC  201C               	addwfc	??_SetTimer0+1,w,c
   937  0015DE  6E1A               	movwf	SetTimer0@_tmr+1,c
   938                           
   939                           ;My_Timer.c: 85: TMR0H = _tmr/256;
   940  0015E0  501A               	movf	SetTimer0@_tmr+1,w,c
   941  0015E2  6ED7               	movwf	4055,c	;volatile
   942                           
   943                           ;My_Timer.c: 86: TMR0L = _tmr%256;
   944  0015E4  C019  FFD6         	movff	SetTimer0@_tmr,4054	;volatile
   945                           
   946                           ;My_Timer.c: 87: TMR0IF = 0;
   947  0015E8  94F2               	bcf	intcon,2,c	;volatile
   948  0015EA  0012               	return		;funcret
   949  0015EC                     __end_of_SetTimer0:
   950                           	opt stack 0
   951                           tblptru	equ	0xFF8
   952                           tblptrh	equ	0xFF7
   953                           tblptrl	equ	0xFF6
   954                           tablat	equ	0xFF5
   955                           intcon	equ	0xFF2
   956                           postinc0	equ	0xFEE
   957                           wreg	equ	0xFE8
   958                           postdec1	equ	0xFE5
   959                           fsr1l	equ	0xFE1
   960                           
   961 ;; *************** function _ShowResult *****************
   962 ;; Defined at:
   963 ;;		line 94 in file "_01_USER/Run.c"
   964 ;; Parameters:    Size  Location     Type
   965 ;;		None
   966 ;; Auto vars:     Size  Location     Type
   967 ;;		None
   968 ;; Return value:  Size  Location     Type
   969 ;;		None               void
   970 ;; Registers used:
   971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   972 ;; Tracked objects:
   973 ;;		On entry : 0/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   979 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   980 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   981 ;;Total ram usage:        1 bytes
   982 ;; Hardware stack levels used:    1
   983 ;; Hardware stack levels required when called:    7
   984 ;; This function calls:
   985 ;;		_LED_Control
   986 ;;		_TM1640_Show_integer
   987 ;;		_TM1640_Writer_Dates
   988 ;;		___wmul
   989 ;; This function is called by:
   990 ;;		_main
   991 ;; This function uses a non-reentrant model
   992 ;;
   993                           
   994                           	psect	text3
   995  000DF2                     __ptext3:
   996                           	opt stack 0
   997  000DF2                     _ShowResult:
   998                           	opt stack 23
   999                           
  1000                           ;Run.c: 96: if( gs_Switch.Show_Send_Receive )
  1001                           
  1002                           ;incstack = 0
  1003  000DF2  5044               	movf	_gs_Switch+3,w,c
  1004  000DF4  B4D8               	btfsc	status,2,c
  1005  000DF6  D021               	goto	l3200
  1006                           
  1007                           ;Run.c: 97: {
  1008                           ;Run.c: 98: TM1640_Show_integer( ga_RS485_SendBuff[g_RS485_Byte] + (g_RS485_Byte * 1000)
      +                           );
  1009  000DF8  C03E  F019         	movff	_g_RS485_Byte,___wmul@multiplier
  1010  000DFC  6A1A               	clrf	___wmul@multiplier+1,c
  1011  000DFE  0E03               	movlw	3
  1012  000E00  6E1C               	movwf	___wmul@multiplicand+1,c
  1013  000E02  0EE8               	movlw	232
  1014  000E04  6E1B               	movwf	___wmul@multiplicand,c
  1015  000E06  EC0E  F00B         	call	___wmul	;wreg free
  1016  000E0A  503E               	movf	_g_RS485_Byte,w,c
  1017  000E0C  0D01               	mullw	1
  1018  000E0E  0EA1               	movlw	low _ga_RS485_SendBuff
  1019  000E10  24F3               	addwf	prodl,w,c
  1020  000E12  6ED9               	movwf	fsr2l,c
  1021  000E14  0E00               	movlw	high _ga_RS485_SendBuff
  1022  000E16  20F4               	addwfc	prodh,w,c
  1023  000E18  6EDA               	movwf	fsr2h,c
  1024  000E1A  50DF               	movf	indf2,w,c
  1025  000E1C  6E22               	movwf	??_ShowResult& (0+255),c
  1026  000E1E  5022               	movf	??_ShowResult,w,c
  1027  000E20  2419               	addwf	?___wmul,w,c
  1028  000E22  6E20               	movwf	TM1640_Show_integer@Numbers,c
  1029  000E24  0E00               	movlw	0
  1030  000E26  201A               	addwfc	?___wmul+1,w,c
  1031  000E28  6E21               	movwf	TM1640_Show_integer@Numbers+1,c
  1032  000E2A  ECB6  F005         	call	_TM1640_Show_integer	;wreg free
  1033                           
  1034                           ;Run.c: 99: LED_Control(1,1);
  1035  000E2E  0E01               	movlw	1
  1036  000E30  6E19               	movwf	LED_Control@_switch,c
  1037  000E32  0E01               	movlw	1
  1038  000E34  ECEE  F009         	call	_LED_Control
  1039                           
  1040                           ;Run.c: 100: }
  1041  000E38  D021               	goto	l3204
  1042  000E3A                     l3200:
  1043                           
  1044                           ;Run.c: 102: else
  1045                           ;Run.c: 103: {
  1046                           ;Run.c: 104: TM1640_Show_integer( ga_RS485_ReceiveBuff[g_RS485_Byte] + (g_RS485_Byte * 1
      +                          000) );
  1047  000E3A  C03E  F019         	movff	_g_RS485_Byte,___wmul@multiplier
  1048  000E3E  6A1A               	clrf	___wmul@multiplier+1,c
  1049  000E40  0E03               	movlw	3
  1050  000E42  6E1C               	movwf	___wmul@multiplicand+1,c
  1051  000E44  0EE8               	movlw	232
  1052  000E46  6E1B               	movwf	___wmul@multiplicand,c
  1053  000E48  EC0E  F00B         	call	___wmul	;wreg free
  1054  000E4C  503E               	movf	_g_RS485_Byte,w,c
  1055  000E4E  0D01               	mullw	1
  1056  000E50  0E97               	movlw	low _ga_RS485_ReceiveBuff
  1057  000E52  24F3               	addwf	prodl,w,c
  1058  000E54  6ED9               	movwf	fsr2l,c
  1059  000E56  0E00               	movlw	high _ga_RS485_ReceiveBuff
  1060  000E58  20F4               	addwfc	prodh,w,c
  1061  000E5A  6EDA               	movwf	fsr2h,c
  1062  000E5C  50DF               	movf	indf2,w,c
  1063  000E5E  6E22               	movwf	??_ShowResult& (0+255),c
  1064  000E60  5022               	movf	??_ShowResult,w,c
  1065  000E62  2419               	addwf	?___wmul,w,c
  1066  000E64  6E20               	movwf	TM1640_Show_integer@Numbers,c
  1067  000E66  0E00               	movlw	0
  1068  000E68  201A               	addwfc	?___wmul+1,w,c
  1069  000E6A  6E21               	movwf	TM1640_Show_integer@Numbers+1,c
  1070  000E6C  ECB6  F005         	call	_TM1640_Show_integer	;wreg free
  1071                           
  1072                           ;Run.c: 105: LED_Control(1,0);
  1073  000E70  0E00               	movlw	0
  1074  000E72  6E19               	movwf	LED_Control@_switch,c
  1075  000E74  0E01               	movlw	1
  1076  000E76  ECEE  F009         	call	_LED_Control
  1077  000E7A  D000               	goto	l3204
  1078  000E7C                     l3204:
  1079                           
  1080                           ;Run.c: 106: }
  1081                           ;Run.c: 108: TM1640_Writer_Dates(4, LED_BUS);
  1082  000E7C  C03D  F01E         	movff	_LED_BUS,TM1640_Writer_Dates@Date
  1083  000E80  0E04               	movlw	4
  1084  000E82  EC7E  F00B         	call	_TM1640_Writer_Dates
  1085  000E86  0012               	return		;funcret
  1086  000E88                     __end_of_ShowResult:
  1087                           	opt stack 0
  1088                           tblptru	equ	0xFF8
  1089                           tblptrh	equ	0xFF7
  1090                           tblptrl	equ	0xFF6
  1091                           tablat	equ	0xFF5
  1092                           prodh	equ	0xFF4
  1093                           prodl	equ	0xFF3
  1094                           intcon	equ	0xFF2
  1095                           postinc0	equ	0xFEE
  1096                           wreg	equ	0xFE8
  1097                           postdec1	equ	0xFE5
  1098                           fsr1l	equ	0xFE1
  1099                           indf2	equ	0xFDF
  1100                           fsr2h	equ	0xFDA
  1101                           fsr2l	equ	0xFD9
  1102                           status	equ	0xFD8
  1103                           
  1104 ;; *************** function ___wmul *****************
  1105 ;; Defined at:
  1106 ;;		line 15 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  1107 ;; Parameters:    Size  Location     Type
  1108 ;;  multiplier      2   24[COMRAM] unsigned int 
  1109 ;;  multiplicand    2   26[COMRAM] unsigned int 
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;  product         2   28[COMRAM] unsigned int 
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  2   24[COMRAM] unsigned int 
  1114 ;; Registers used:
  1115 ;;		wreg, status,2, status,0, prodl, prodh
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1121 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1122 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1124 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1125 ;;Total ram usage:        6 bytes
  1126 ;; Hardware stack levels used:    1
  1127 ;; Hardware stack levels required when called:    3
  1128 ;; This function calls:
  1129 ;;		Nothing
  1130 ;; This function is called by:
  1131 ;;		_ShowResult
  1132 ;; This function uses a non-reentrant model
  1133 ;;
  1134                           
  1135                           	psect	text4
  1136  00161C                     __ptext4:
  1137                           	opt stack 0
  1138  00161C                     ___wmul:
  1139                           	opt stack 26
  1140                           
  1141                           ;incstack = 0
  1142  00161C  5019               	movf	___wmul@multiplier,w,c
  1143  00161E  021B               	mulwf	___wmul@multiplicand,c
  1144  001620  CFF3 F01D          	movff	prodl,___wmul@product
  1145  001624  CFF4 F01E          	movff	prodh,___wmul@product+1
  1146  001628  5019               	movf	___wmul@multiplier,w,c
  1147  00162A  021C               	mulwf	___wmul@multiplicand+1,c
  1148  00162C  50F3               	movf	prodl,w,c
  1149  00162E  261E               	addwf	___wmul@product+1,f,c
  1150  001630  501A               	movf	___wmul@multiplier+1,w,c
  1151  001632  021B               	mulwf	___wmul@multiplicand,c
  1152  001634  50F3               	movf	prodl,w,c
  1153  001636  261E               	addwf	___wmul@product+1,f,c
  1154  001638  C01D  F019         	movff	___wmul@product,?___wmul
  1155  00163C  C01E  F01A         	movff	___wmul@product+1,?___wmul+1
  1156  001640  0012               	return	
  1157  001642  0012               	return		;funcret
  1158  001644                     __end_of___wmul:
  1159                           	opt stack 0
  1160                           tblptru	equ	0xFF8
  1161                           tblptrh	equ	0xFF7
  1162                           tblptrl	equ	0xFF6
  1163                           tablat	equ	0xFF5
  1164                           prodh	equ	0xFF4
  1165                           prodl	equ	0xFF3
  1166                           intcon	equ	0xFF2
  1167                           postinc0	equ	0xFEE
  1168                           wreg	equ	0xFE8
  1169                           postdec1	equ	0xFE5
  1170                           fsr1l	equ	0xFE1
  1171                           indf2	equ	0xFDF
  1172                           fsr2h	equ	0xFDA
  1173                           fsr2l	equ	0xFD9
  1174                           status	equ	0xFD8
  1175                           
  1176 ;; *************** function _TM1640_Show_integer *****************
  1177 ;; Defined at:
  1178 ;;		line 206 in file "_01_USER/TM1640.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;  Numbers         2   31[COMRAM] unsigned int 
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;		None
  1183 ;; Return value:  Size  Location     Type
  1184 ;;		None               void
  1185 ;; Registers used:
  1186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1192 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1195 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1196 ;;Total ram usage:        2 bytes
  1197 ;; Hardware stack levels used:    1
  1198 ;; Hardware stack levels required when called:    6
  1199 ;; This function calls:
  1200 ;;		_TM1640_Writer_Dates
  1201 ;;		___lwdiv
  1202 ;;		___lwmod
  1203 ;; This function is called by:
  1204 ;;		_ShowResult
  1205 ;; This function uses a non-reentrant model
  1206 ;;
  1207                           
  1208                           	psect	text5
  1209  000B6C                     __ptext5:
  1210                           	opt stack 0
  1211  000B6C                     _TM1640_Show_integer:
  1212                           	opt stack 23
  1213                           
  1214                           ;TM1640.c: 209: TM1640_Writer_Dates(3,LED_Number[Numbers%10]); Numbers/=10;
  1215                           
  1216                           ;incstack = 0
  1217  000B6C  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1218  000B70  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1219  000B74  0E00               	movlw	0
  1220  000B76  6E1C               	movwf	___lwmod@divisor+1,c
  1221  000B78  0E0A               	movlw	10
  1222  000B7A  6E1B               	movwf	___lwmod@divisor,c
  1223  000B7C  EC7E  F009         	call	___lwmod	;wreg free
  1224  000B80  0EC4               	movlw	low _LED_Number
  1225  000B82  2419               	addwf	?___lwmod,w,c
  1226  000B84  6ED9               	movwf	fsr2l,c
  1227  000B86  0E00               	movlw	high _LED_Number
  1228  000B88  201A               	addwfc	?___lwmod+1,w,c
  1229  000B8A  6EDA               	movwf	fsr2h,c
  1230  000B8C  50DF               	movf	indf2,w,c
  1231  000B8E  6E1E               	movwf	TM1640_Writer_Dates@Date,c
  1232  000B90  0E03               	movlw	3
  1233  000B92  EC7E  F00B         	call	_TM1640_Writer_Dates
  1234  000B96  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1235  000B9A  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1236  000B9E  0E00               	movlw	0
  1237  000BA0  6E1C               	movwf	___lwdiv@divisor+1,c
  1238  000BA2  0E0A               	movlw	10
  1239  000BA4  6E1B               	movwf	___lwdiv@divisor,c
  1240  000BA6  ECD4  F008         	call	___lwdiv	;wreg free
  1241  000BAA  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1242  000BAE  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1243                           
  1244                           ;TM1640.c: 210: TM1640_Writer_Dates(2,LED_Number[Numbers%10]); Numbers/=10;
  1245  000BB2  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1246  000BB6  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1247  000BBA  0E00               	movlw	0
  1248  000BBC  6E1C               	movwf	___lwmod@divisor+1,c
  1249  000BBE  0E0A               	movlw	10
  1250  000BC0  6E1B               	movwf	___lwmod@divisor,c
  1251  000BC2  EC7E  F009         	call	___lwmod	;wreg free
  1252  000BC6  0EC4               	movlw	low _LED_Number
  1253  000BC8  2419               	addwf	?___lwmod,w,c
  1254  000BCA  6ED9               	movwf	fsr2l,c
  1255  000BCC  0E00               	movlw	high _LED_Number
  1256  000BCE  201A               	addwfc	?___lwmod+1,w,c
  1257  000BD0  6EDA               	movwf	fsr2h,c
  1258  000BD2  50DF               	movf	indf2,w,c
  1259  000BD4  6E1E               	movwf	TM1640_Writer_Dates@Date,c
  1260  000BD6  0E02               	movlw	2
  1261  000BD8  EC7E  F00B         	call	_TM1640_Writer_Dates
  1262  000BDC  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1263  000BE0  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1264  000BE4  0E00               	movlw	0
  1265  000BE6  6E1C               	movwf	___lwdiv@divisor+1,c
  1266  000BE8  0E0A               	movlw	10
  1267  000BEA  6E1B               	movwf	___lwdiv@divisor,c
  1268  000BEC  ECD4  F008         	call	___lwdiv	;wreg free
  1269  000BF0  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1270  000BF4  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1271                           
  1272                           ;TM1640.c: 211: TM1640_Writer_Dates(1,LED_Number[Numbers%10]); Numbers/=10;
  1273  000BF8  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1274  000BFC  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1275  000C00  0E00               	movlw	0
  1276  000C02  6E1C               	movwf	___lwmod@divisor+1,c
  1277  000C04  0E0A               	movlw	10
  1278  000C06  6E1B               	movwf	___lwmod@divisor,c
  1279  000C08  EC7E  F009         	call	___lwmod	;wreg free
  1280  000C0C  0EC4               	movlw	low _LED_Number
  1281  000C0E  2419               	addwf	?___lwmod,w,c
  1282  000C10  6ED9               	movwf	fsr2l,c
  1283  000C12  0E00               	movlw	high _LED_Number
  1284  000C14  201A               	addwfc	?___lwmod+1,w,c
  1285  000C16  6EDA               	movwf	fsr2h,c
  1286  000C18  50DF               	movf	indf2,w,c
  1287  000C1A  6E1E               	movwf	TM1640_Writer_Dates@Date,c
  1288  000C1C  0E01               	movlw	1
  1289  000C1E  EC7E  F00B         	call	_TM1640_Writer_Dates
  1290  000C22  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1291  000C26  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1292  000C2A  0E00               	movlw	0
  1293  000C2C  6E1C               	movwf	___lwdiv@divisor+1,c
  1294  000C2E  0E0A               	movlw	10
  1295  000C30  6E1B               	movwf	___lwdiv@divisor,c
  1296  000C32  ECD4  F008         	call	___lwdiv	;wreg free
  1297  000C36  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1298  000C3A  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1299                           
  1300                           ;TM1640.c: 212: TM1640_Writer_Dates(0,LED_Number[Numbers%10]);
  1301  000C3E  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1302  000C42  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1303  000C46  0E00               	movlw	0
  1304  000C48  6E1C               	movwf	___lwmod@divisor+1,c
  1305  000C4A  0E0A               	movlw	10
  1306  000C4C  6E1B               	movwf	___lwmod@divisor,c
  1307  000C4E  EC7E  F009         	call	___lwmod	;wreg free
  1308  000C52  0EC4               	movlw	low _LED_Number
  1309  000C54  2419               	addwf	?___lwmod,w,c
  1310  000C56  6ED9               	movwf	fsr2l,c
  1311  000C58  0E00               	movlw	high _LED_Number
  1312  000C5A  201A               	addwfc	?___lwmod+1,w,c
  1313  000C5C  6EDA               	movwf	fsr2h,c
  1314  000C5E  50DF               	movf	indf2,w,c
  1315  000C60  6E1E               	movwf	TM1640_Writer_Dates@Date,c
  1316  000C62  0E00               	movlw	0
  1317  000C64  EC7E  F00B         	call	_TM1640_Writer_Dates
  1318  000C68  0012               	return		;funcret
  1319  000C6A                     __end_of_TM1640_Show_integer:
  1320                           	opt stack 0
  1321                           tblptru	equ	0xFF8
  1322                           tblptrh	equ	0xFF7
  1323                           tblptrl	equ	0xFF6
  1324                           tablat	equ	0xFF5
  1325                           prodh	equ	0xFF4
  1326                           prodl	equ	0xFF3
  1327                           intcon	equ	0xFF2
  1328                           postinc0	equ	0xFEE
  1329                           wreg	equ	0xFE8
  1330                           postdec1	equ	0xFE5
  1331                           fsr1l	equ	0xFE1
  1332                           indf2	equ	0xFDF
  1333                           fsr2h	equ	0xFDA
  1334                           fsr2l	equ	0xFD9
  1335                           status	equ	0xFD8
  1336                           
  1337 ;; *************** function ___lwmod *****************
  1338 ;; Defined at:
  1339 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;  dividend        2   24[COMRAM] unsigned int 
  1342 ;;  divisor         2   26[COMRAM] unsigned int 
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;  counter         1   28[COMRAM] unsigned char 
  1345 ;; Return value:  Size  Location     Type
  1346 ;;                  2   24[COMRAM] unsigned int 
  1347 ;; Registers used:
  1348 ;;		wreg, status,2, status,0
  1349 ;; Tracked objects:
  1350 ;;		On entry : 0/0
  1351 ;;		On exit  : 0/0
  1352 ;;		Unchanged: 0/0
  1353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1354 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1355 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1357 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1358 ;;Total ram usage:        5 bytes
  1359 ;; Hardware stack levels used:    1
  1360 ;; Hardware stack levels required when called:    3
  1361 ;; This function calls:
  1362 ;;		Nothing
  1363 ;; This function is called by:
  1364 ;;		_TM1640_Show_integer
  1365 ;; This function uses a non-reentrant model
  1366 ;;
  1367                           
  1368                           	psect	text6
  1369  0012FC                     __ptext6:
  1370                           	opt stack 0
  1371  0012FC                     ___lwmod:
  1372                           	opt stack 25
  1373                           
  1374                           ;incstack = 0
  1375  0012FC  501B               	movf	___lwmod@divisor,w,c
  1376  0012FE  101C               	iorwf	___lwmod@divisor+1,w,c
  1377  001300  B4D8               	btfsc	status,2,c
  1378  001302  D01D               	goto	l1221
  1379  001304  0E01               	movlw	1
  1380  001306  6E1D               	movwf	___lwmod@counter,c
  1381  001308  D005               	goto	l2794
  1382  00130A                     l2792:
  1383  00130A  90D8               	bcf	status,0,c
  1384  00130C  361B               	rlcf	___lwmod@divisor,f,c
  1385  00130E  361C               	rlcf	___lwmod@divisor+1,f,c
  1386  001310  2A1D               	incf	___lwmod@counter,f,c
  1387  001312  D000               	goto	l2794
  1388  001314                     l2794:
  1389  001314  BE1C               	btfsc	___lwmod@divisor+1,7,c
  1390  001316  D002               	goto	l2796
  1391  001318  D7F8               	goto	l2792
  1392  00131A  D000               	goto	l2796
  1393  00131C                     l2796:
  1394  00131C  501B               	movf	___lwmod@divisor,w,c
  1395  00131E  5C19               	subwf	___lwmod@dividend,w,c
  1396  001320  501C               	movf	___lwmod@divisor+1,w,c
  1397  001322  581A               	subwfb	___lwmod@dividend+1,w,c
  1398  001324  A0D8               	btfss	status,0,c
  1399  001326  D005               	goto	l2800
  1400  001328  501B               	movf	___lwmod@divisor,w,c
  1401  00132A  5E19               	subwf	___lwmod@dividend,f,c
  1402  00132C  501C               	movf	___lwmod@divisor+1,w,c
  1403  00132E  5A1A               	subwfb	___lwmod@dividend+1,f,c
  1404  001330  D000               	goto	l2800
  1405  001332                     l2800:
  1406  001332  90D8               	bcf	status,0,c
  1407  001334  321C               	rrcf	___lwmod@divisor+1,f,c
  1408  001336  321B               	rrcf	___lwmod@divisor,f,c
  1409  001338  2E1D               	decfsz	___lwmod@counter,f,c
  1410  00133A  D7F0               	goto	l2796
  1411  00133C  D000               	goto	l1221
  1412  00133E                     l1221:
  1413  00133E  C019  F019         	movff	___lwmod@dividend,?___lwmod
  1414  001342  C01A  F01A         	movff	___lwmod@dividend+1,?___lwmod+1
  1415  001346  0012               	return		;funcret
  1416  001348                     __end_of___lwmod:
  1417                           	opt stack 0
  1418                           tblptru	equ	0xFF8
  1419                           tblptrh	equ	0xFF7
  1420                           tblptrl	equ	0xFF6
  1421                           tablat	equ	0xFF5
  1422                           prodh	equ	0xFF4
  1423                           prodl	equ	0xFF3
  1424                           intcon	equ	0xFF2
  1425                           postinc0	equ	0xFEE
  1426                           wreg	equ	0xFE8
  1427                           postdec1	equ	0xFE5
  1428                           fsr1l	equ	0xFE1
  1429                           indf2	equ	0xFDF
  1430                           fsr2h	equ	0xFDA
  1431                           fsr2l	equ	0xFD9
  1432                           status	equ	0xFD8
  1433                           
  1434 ;; *************** function ___lwdiv *****************
  1435 ;; Defined at:
  1436 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;  dividend        2   24[COMRAM] unsigned int 
  1439 ;;  divisor         2   26[COMRAM] unsigned int 
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;  quotient        2   28[COMRAM] unsigned int 
  1442 ;;  counter         1   30[COMRAM] unsigned char 
  1443 ;; Return value:  Size  Location     Type
  1444 ;;                  2   24[COMRAM] unsigned int 
  1445 ;; Registers used:
  1446 ;;		wreg, status,2, status,0
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1452 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1453 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1455 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1456 ;;Total ram usage:        7 bytes
  1457 ;; Hardware stack levels used:    1
  1458 ;; Hardware stack levels required when called:    3
  1459 ;; This function calls:
  1460 ;;		Nothing
  1461 ;; This function is called by:
  1462 ;;		_TM1640_Show_integer
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           	psect	text7
  1467  0011A8                     __ptext7:
  1468                           	opt stack 0
  1469  0011A8                     ___lwdiv:
  1470                           	opt stack 25
  1471                           
  1472                           ;incstack = 0
  1473  0011A8  0E00               	movlw	0
  1474  0011AA  6E1E               	movwf	___lwdiv@quotient+1,c
  1475  0011AC  0E00               	movlw	0
  1476  0011AE  6E1D               	movwf	___lwdiv@quotient,c
  1477  0011B0  501B               	movf	___lwdiv@divisor,w,c
  1478  0011B2  101C               	iorwf	___lwdiv@divisor+1,w,c
  1479  0011B4  B4D8               	btfsc	status,2,c
  1480  0011B6  D021               	goto	l1211
  1481  0011B8  0E01               	movlw	1
  1482  0011BA  6E1F               	movwf	___lwdiv@counter,c
  1483  0011BC  D005               	goto	l2774
  1484  0011BE                     l2772:
  1485  0011BE  90D8               	bcf	status,0,c
  1486  0011C0  361B               	rlcf	___lwdiv@divisor,f,c
  1487  0011C2  361C               	rlcf	___lwdiv@divisor+1,f,c
  1488  0011C4  2A1F               	incf	___lwdiv@counter,f,c
  1489  0011C6  D000               	goto	l2774
  1490  0011C8                     l2774:
  1491  0011C8  BE1C               	btfsc	___lwdiv@divisor+1,7,c
  1492  0011CA  D002               	goto	l2776
  1493  0011CC  D7F8               	goto	l2772
  1494  0011CE  D000               	goto	l2776
  1495  0011D0                     l2776:
  1496  0011D0  90D8               	bcf	status,0,c
  1497  0011D2  361D               	rlcf	___lwdiv@quotient,f,c
  1498  0011D4  361E               	rlcf	___lwdiv@quotient+1,f,c
  1499  0011D6  501B               	movf	___lwdiv@divisor,w,c
  1500  0011D8  5C19               	subwf	___lwdiv@dividend,w,c
  1501  0011DA  501C               	movf	___lwdiv@divisor+1,w,c
  1502  0011DC  581A               	subwfb	___lwdiv@dividend+1,w,c
  1503  0011DE  A0D8               	btfss	status,0,c
  1504  0011E0  D006               	goto	l2784
  1505  0011E2  501B               	movf	___lwdiv@divisor,w,c
  1506  0011E4  5E19               	subwf	___lwdiv@dividend,f,c
  1507  0011E6  501C               	movf	___lwdiv@divisor+1,w,c
  1508  0011E8  5A1A               	subwfb	___lwdiv@dividend+1,f,c
  1509  0011EA  801D               	bsf	___lwdiv@quotient,0,c
  1510  0011EC  D000               	goto	l2784
  1511  0011EE                     l2784:
  1512  0011EE  90D8               	bcf	status,0,c
  1513  0011F0  321C               	rrcf	___lwdiv@divisor+1,f,c
  1514  0011F2  321B               	rrcf	___lwdiv@divisor,f,c
  1515  0011F4  2E1F               	decfsz	___lwdiv@counter,f,c
  1516  0011F6  D7EC               	goto	l2776
  1517  0011F8  D000               	goto	l1211
  1518  0011FA                     l1211:
  1519  0011FA  C01D  F019         	movff	___lwdiv@quotient,?___lwdiv
  1520  0011FE  C01E  F01A         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1521  001202  0012               	return		;funcret
  1522  001204                     __end_of___lwdiv:
  1523                           	opt stack 0
  1524                           tblptru	equ	0xFF8
  1525                           tblptrh	equ	0xFF7
  1526                           tblptrl	equ	0xFF6
  1527                           tablat	equ	0xFF5
  1528                           prodh	equ	0xFF4
  1529                           prodl	equ	0xFF3
  1530                           intcon	equ	0xFF2
  1531                           postinc0	equ	0xFEE
  1532                           wreg	equ	0xFE8
  1533                           postdec1	equ	0xFE5
  1534                           fsr1l	equ	0xFE1
  1535                           indf2	equ	0xFDF
  1536                           fsr2h	equ	0xFDA
  1537                           fsr2l	equ	0xFD9
  1538                           status	equ	0xFD8
  1539                           
  1540 ;; *************** function _TM1640_Writer_Dates *****************
  1541 ;; Defined at:
  1542 ;;		line 99 in file "_01_USER/TM1640.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;  Addr            1    wreg     unsigned char 
  1545 ;;  Date            1   29[COMRAM] unsigned char 
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;  Addr            1   30[COMRAM] unsigned char 
  1548 ;; Return value:  Size  Location     Type
  1549 ;;		None               void
  1550 ;; Registers used:
  1551 ;;		wreg, status,2, status,0, cstack
  1552 ;; Tracked objects:
  1553 ;;		On entry : 0/0
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1557 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1558 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1560 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1561 ;;Total ram usage:        2 bytes
  1562 ;; Hardware stack levels used:    1
  1563 ;; Hardware stack levels required when called:    5
  1564 ;; This function calls:
  1565 ;;		_TM1640_Start
  1566 ;;		_TM1640_Stop
  1567 ;;		_TM1640_Writer_Byte
  1568 ;; This function is called by:
  1569 ;;		_TM1640_Show_integer
  1570 ;;		_ShowResult
  1571 ;;		_TM1640_Show_Numbers
  1572 ;;		_TM1640_Show_Decimal
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           	psect	text8
  1577  0016FC                     __ptext8:
  1578                           	opt stack 0
  1579  0016FC                     _TM1640_Writer_Dates:
  1580                           	opt stack 24
  1581                           
  1582                           ;incstack = 0
  1583                           ;TM1640_Writer_Dates@Addr stored from wreg
  1584  0016FC  6E1F               	movwf	TM1640_Writer_Dates@Addr,c
  1585                           
  1586                           ;TM1640.c: 101: if((Addr >= 0) && (Addr <= 15))
  1587  0016FE  0E10               	movlw	16
  1588  001700  601F               	cpfslt	TM1640_Writer_Dates@Addr,c
  1589  001702  0012               	return	
  1590                           
  1591                           ;TM1640.c: 102: {
  1592                           ;TM1640.c: 103: TM1640_Start();
  1593  001704  EC6C  F00B         	call	_TM1640_Start	;wreg free
  1594                           
  1595                           ;TM1640.c: 104: TM1640_Writer_Byte(0xC0 + Addr);
  1596  001708  501F               	movf	TM1640_Writer_Dates@Addr,w,c
  1597  00170A  0FC0               	addlw	192
  1598  00170C  EC54  F00A         	call	_TM1640_Writer_Byte
  1599                           
  1600                           ;TM1640.c: 105: TM1640_Writer_Byte(Date);
  1601  001710  501E               	movf	TM1640_Writer_Dates@Date,w,c
  1602  001712  EC54  F00A         	call	_TM1640_Writer_Byte
  1603                           
  1604                           ;TM1640.c: 106: TM1640_Stop();
  1605  001716  EC5A  F00B         	call	_TM1640_Stop	;wreg free
  1606  00171A  0012               	return	
  1607  00171C  0012               	return		;funcret
  1608  00171E                     __end_of_TM1640_Writer_Dates:
  1609                           	opt stack 0
  1610                           tblptru	equ	0xFF8
  1611                           tblptrh	equ	0xFF7
  1612                           tblptrl	equ	0xFF6
  1613                           tablat	equ	0xFF5
  1614                           prodh	equ	0xFF4
  1615                           prodl	equ	0xFF3
  1616                           intcon	equ	0xFF2
  1617                           postinc0	equ	0xFEE
  1618                           wreg	equ	0xFE8
  1619                           postdec1	equ	0xFE5
  1620                           fsr1l	equ	0xFE1
  1621                           indf2	equ	0xFDF
  1622                           fsr2h	equ	0xFDA
  1623                           fsr2l	equ	0xFD9
  1624                           status	equ	0xFD8
  1625                           
  1626 ;; *************** function _LED_Control *****************
  1627 ;; Defined at:
  1628 ;;		line 58 in file "_01_USER/GPIO.c"
  1629 ;; Parameters:    Size  Location     Type
  1630 ;;  _LED_num        1    wreg     unsigned char 
  1631 ;;  _switch         1   24[COMRAM] unsigned char 
  1632 ;; Auto vars:     Size  Location     Type
  1633 ;;  _LED_num        1   25[COMRAM] unsigned char 
  1634 ;; Return value:  Size  Location     Type
  1635 ;;		None               void
  1636 ;; Registers used:
  1637 ;;		wreg, status,2, status,0
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1643 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1644 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1646 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1647 ;;Total ram usage:        2 bytes
  1648 ;; Hardware stack levels used:    1
  1649 ;; Hardware stack levels required when called:    3
  1650 ;; This function calls:
  1651 ;;		Nothing
  1652 ;; This function is called by:
  1653 ;;		_ShowResult
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           	psect	text9
  1658  0013DC                     __ptext9:
  1659                           	opt stack 0
  1660  0013DC                     _LED_Control:
  1661                           	opt stack 26
  1662                           
  1663                           ;incstack = 0
  1664                           ;LED_Control@_LED_num stored from wreg
  1665  0013DC  6E1A               	movwf	LED_Control@_LED_num,c
  1666                           
  1667                           ;GPIO.c: 62: if(_LED_num == 1)
  1668  0013DE  041A               	decf	LED_Control@_LED_num,w,c
  1669  0013E0  A4D8               	btfss	status,2,c
  1670  0013E2  D007               	goto	l3040
  1671                           
  1672                           ;GPIO.c: 63: if(_switch) LED_BUS |= 0x01;
  1673  0013E4  5019               	movf	LED_Control@_switch,w,c
  1674  0013E6  B4D8               	btfsc	status,2,c
  1675  0013E8  D002               	goto	l3038
  1676  0013EA  803D               	bsf	_LED_BUS,0,c
  1677  0013EC  D002               	goto	l3040
  1678  0013EE                     l3038:
  1679                           
  1680                           ;GPIO.c: 64: else LED_BUS &= 0xFE;
  1681  0013EE  903D               	bcf	_LED_BUS,0,c
  1682  0013F0  D000               	goto	l3040
  1683  0013F2                     l3040:
  1684                           
  1685                           ;GPIO.c: 66: if(_LED_num == 2)
  1686  0013F2  0E02               	movlw	2
  1687  0013F4  181A               	xorwf	LED_Control@_LED_num,w,c
  1688  0013F6  A4D8               	btfss	status,2,c
  1689  0013F8  D007               	goto	l3048
  1690                           
  1691                           ;GPIO.c: 67: if(_switch) LED_BUS |= 0x02;
  1692  0013FA  5019               	movf	LED_Control@_switch,w,c
  1693  0013FC  B4D8               	btfsc	status,2,c
  1694  0013FE  D002               	goto	l3046
  1695  001400  823D               	bsf	_LED_BUS,1,c
  1696  001402  D002               	goto	l3048
  1697  001404                     l3046:
  1698                           
  1699                           ;GPIO.c: 68: else LED_BUS &= 0xFD;
  1700  001404  923D               	bcf	_LED_BUS,1,c
  1701  001406  D000               	goto	l3048
  1702  001408                     l3048:
  1703                           
  1704                           ;GPIO.c: 70: if(_LED_num == 3)
  1705  001408  0E03               	movlw	3
  1706  00140A  181A               	xorwf	LED_Control@_LED_num,w,c
  1707  00140C  A4D8               	btfss	status,2,c
  1708  00140E  0012               	return	
  1709                           
  1710                           ;GPIO.c: 71: if(_switch) LED_BUS |= 0x04;
  1711  001410  5019               	movf	LED_Control@_switch,w,c
  1712  001412  B4D8               	btfsc	status,2,c
  1713  001414  D002               	goto	l3054
  1714  001416  843D               	bsf	_LED_BUS,2,c
  1715  001418  0012               	return	
  1716  00141A                     l3054:
  1717                           
  1718                           ;GPIO.c: 72: else LED_BUS &= 0xFB;
  1719  00141A  943D               	bcf	_LED_BUS,2,c
  1720  00141C  0012               	return	
  1721  00141E  0012               	return		;funcret
  1722  001420                     __end_of_LED_Control:
  1723                           	opt stack 0
  1724                           tblptru	equ	0xFF8
  1725                           tblptrh	equ	0xFF7
  1726                           tblptrl	equ	0xFF6
  1727                           tablat	equ	0xFF5
  1728                           prodh	equ	0xFF4
  1729                           prodl	equ	0xFF3
  1730                           intcon	equ	0xFF2
  1731                           postinc0	equ	0xFEE
  1732                           wreg	equ	0xFE8
  1733                           postdec1	equ	0xFE5
  1734                           fsr1l	equ	0xFE1
  1735                           indf2	equ	0xFDF
  1736                           fsr2h	equ	0xFDA
  1737                           fsr2l	equ	0xFD9
  1738                           status	equ	0xFD8
  1739                           
  1740 ;; *************** function _SCR_Init *****************
  1741 ;; Defined at:
  1742 ;;		line 38 in file "_01_USER/SCR.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;		None
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;		None
  1747 ;; Return value:  Size  Location     Type
  1748 ;;		None               void
  1749 ;; Registers used:
  1750 ;;		None
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1760 ;;Total ram usage:        0 bytes
  1761 ;; Hardware stack levels used:    1
  1762 ;; Hardware stack levels required when called:    3
  1763 ;; This function calls:
  1764 ;;		Nothing
  1765 ;; This function is called by:
  1766 ;;		_main
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770                           	psect	text10
  1771  0017F2                     __ptext10:
  1772                           	opt stack 0
  1773  0017F2                     _SCR_Init:
  1774                           	opt stack 27
  1775                           
  1776                           ;SCR.c: 41: TRISB1 = 0;
  1777                           
  1778                           ;incstack = 0
  1779  0017F2  9293               	bcf	3987,1,c	;volatile
  1780                           
  1781                           ;SCR.c: 42: TRISB0 = 0;
  1782  0017F4  9093               	bcf	3987,0,c	;volatile
  1783                           
  1784                           ;SCR.c: 45: TRISB2 = 1;
  1785  0017F6  8493               	bsf	3987,2,c	;volatile
  1786                           
  1787                           ;SCR.c: 48: RB1 = 0;
  1788  0017F8  9281               	bcf	3969,1,c	;volatile
  1789                           
  1790                           ;SCR.c: 49: RB0 = 0;
  1791  0017FA  9081               	bcf	3969,0,c	;volatile
  1792  0017FC  0012               	return		;funcret
  1793  0017FE                     __end_of_SCR_Init:
  1794                           	opt stack 0
  1795                           tblptru	equ	0xFF8
  1796                           tblptrh	equ	0xFF7
  1797                           tblptrl	equ	0xFF6
  1798                           tablat	equ	0xFF5
  1799                           prodh	equ	0xFF4
  1800                           prodl	equ	0xFF3
  1801                           intcon	equ	0xFF2
  1802                           postinc0	equ	0xFEE
  1803                           wreg	equ	0xFE8
  1804                           postdec1	equ	0xFE5
  1805                           fsr1l	equ	0xFE1
  1806                           indf2	equ	0xFDF
  1807                           fsr2h	equ	0xFDA
  1808                           fsr2l	equ	0xFD9
  1809                           status	equ	0xFD8
  1810                           
  1811 ;; *************** function _Run *****************
  1812 ;; Defined at:
  1813 ;;		line 68 in file "_01_USER/Run.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;		None
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;		None
  1818 ;; Return value:  Size  Location     Type
  1819 ;;		None               void
  1820 ;; Registers used:
  1821 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1829 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1830 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1831 ;;Total ram usage:        4 bytes
  1832 ;; Hardware stack levels used:    1
  1833 ;; Hardware stack levels required when called:    6
  1834 ;; This function calls:
  1835 ;;		_GetADC6
  1836 ;;		_RS485_SendDate
  1837 ;;		_Relay_Control
  1838 ;; This function is called by:
  1839 ;;		_main
  1840 ;; This function uses a non-reentrant model
  1841 ;;
  1842                           
  1843                           	psect	text11
  1844  00106A                     __ptext11:
  1845                           	opt stack 0
  1846  00106A                     _Run:
  1847                           	opt stack 24
  1848                           
  1849                           ;Run.c: 71: if( gs_Switch.ADC6 ) GetADC6();
  1850                           
  1851                           ;incstack = 0
  1852  00106A  5042               	movf	_gs_Switch+1,w,c
  1853  00106C  B4D8               	btfsc	status,2,c
  1854  00106E  D003               	goto	l3888
  1855  001070  EC6C  F008         	call	_GetADC6	;wreg free
  1856  001074  D000               	goto	l3888
  1857  001076                     l3888:
  1858                           
  1859                           ;Run.c: 74: if ( gs_Switch.Usart_OneDate )
  1860  001076  5043               	movf	_gs_Switch+2,w,c
  1861  001078  B4D8               	btfsc	status,2,c
  1862  00107A  D00E               	goto	l3894
  1863                           
  1864                           ;Run.c: 75: {
  1865                           ;Run.c: 76: gs_Switch.Usart_OneDate = 0;
  1866  00107C  0E00               	movlw	0
  1867  00107E  6E43               	movwf	_gs_Switch+2,c
  1868                           
  1869                           ;Run.c: 77: RS485_SendDate(ga_RS485_SendBuff,10);
  1870  001080  0EA1               	movlw	low _ga_RS485_SendBuff
  1871  001082  0100               	movlb	0	; () banked
  1872  001084  6FB0               	movwf	RS485_SendDate@date_dress& (0+255),b
  1873  001086  0E00               	movlw	high _ga_RS485_SendBuff
  1874  001088  0100               	movlb	0	; () banked
  1875  00108A  6FB1               	movwf	(RS485_SendDate@date_dress+1)& (0+255),b
  1876  00108C  0E0A               	movlw	10
  1877  00108E  0100               	movlb	0	; () banked
  1878  001090  6FB2               	movwf	RS485_SendDate@date_lenth& (0+255),b
  1879  001092  EC98  F006         	call	_RS485_SendDate	;wreg free
  1880  001096  D000               	goto	l3894
  1881  001098                     l3894:
  1882                           
  1883                           ;Run.c: 78: }
  1884                           ;Run.c: 80: Relay_Control(g_RS485_Byte,gs_Switch.Relay[g_RS485_Byte - 1]);
  1885  001098  0EFF               	movlw	255
  1886  00109A  0100               	movlb	0	; () banked
  1887  00109C  6FC0               	movwf	??_Run& (0+255),b
  1888  00109E  0EFF               	movlw	255
  1889  0010A0  0100               	movlb	0	; () banked
  1890  0010A2  6FC1               	movwf	(??_Run+1)& (0+255),b
  1891  0010A4  503E               	movf	_g_RS485_Byte,w,c
  1892  0010A6  0100               	movlb	0	; () banked
  1893  0010A8  6FC2               	movwf	(??_Run+2)& (0+255),b
  1894  0010AA  6BC3               	clrf	(??_Run+3)& (0+255),b
  1895  0010AC  0100               	movlb	0	; () banked
  1896  0010AE  51C0               	movf	??_Run& (0+255),w,b
  1897  0010B0  0100               	movlb	0	; () banked
  1898  0010B2  27C2               	addwf	(??_Run+2)& (0+255),f,b
  1899  0010B4  0100               	movlb	0	; () banked
  1900  0010B6  51C1               	movf	(??_Run+1)& (0+255),w,b
  1901  0010B8  0100               	movlb	0	; () banked
  1902  0010BA  23C3               	addwfc	(??_Run+3)& (0+255),f,b
  1903  0010BC  0E45               	movlw	low (_gs_Switch+4)
  1904  0010BE  0100               	movlb	0	; () banked
  1905  0010C0  25C2               	addwf	(??_Run+2)& (0+255),w,b
  1906  0010C2  6ED9               	movwf	fsr2l,c
  1907  0010C4  0E00               	movlw	high (_gs_Switch+4)
  1908  0010C6  0100               	movlb	0	; () banked
  1909  0010C8  21C3               	addwfc	(??_Run+3)& (0+255),w,b
  1910  0010CA  6EDA               	movwf	fsr2h,c
  1911  0010CC  50DF               	movf	indf2,w,c
  1912  0010CE  6E1E               	movwf	Relay_Control@_switch,c
  1913  0010D0  503E               	movf	_g_RS485_Byte,w,c
  1914  0010D2  EC8A  F007         	call	_Relay_Control
  1915  0010D6  0012               	return		;funcret
  1916  0010D8                     __end_of_Run:
  1917                           	opt stack 0
  1918                           tblptru	equ	0xFF8
  1919                           tblptrh	equ	0xFF7
  1920                           tblptrl	equ	0xFF6
  1921                           tablat	equ	0xFF5
  1922                           prodh	equ	0xFF4
  1923                           prodl	equ	0xFF3
  1924                           intcon	equ	0xFF2
  1925                           postinc0	equ	0xFEE
  1926                           wreg	equ	0xFE8
  1927                           postdec1	equ	0xFE5
  1928                           fsr1l	equ	0xFE1
  1929                           indf2	equ	0xFDF
  1930                           fsr2h	equ	0xFDA
  1931                           fsr2l	equ	0xFD9
  1932                           status	equ	0xFD8
  1933                           
  1934 ;; *************** function _Relay_Control *****************
  1935 ;; Defined at:
  1936 ;;		line 60 in file "_01_USER/Relay.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;  relay_num       1    wreg     unsigned char 
  1939 ;;  _switch         1   29[COMRAM] unsigned char 
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;  relay_num       1   30[COMRAM] unsigned char 
  1942 ;; Return value:  Size  Location     Type
  1943 ;;		None               void
  1944 ;; Registers used:
  1945 ;;		wreg, status,2, status,0, cstack
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1951 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1952 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1954 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1955 ;;Total ram usage:        2 bytes
  1956 ;; Hardware stack levels used:    1
  1957 ;; Hardware stack levels required when called:    5
  1958 ;; This function calls:
  1959 ;;		_delay_ms
  1960 ;; This function is called by:
  1961 ;;		_Run
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965                           	psect	text12
  1966  000F14                     __ptext12:
  1967                           	opt stack 0
  1968  000F14                     _Relay_Control:
  1969                           	opt stack 24
  1970                           
  1971                           ;incstack = 0
  1972                           ;Relay_Control@relay_num stored from wreg
  1973  000F14  6E1F               	movwf	Relay_Control@relay_num,c
  1974                           
  1975                           ;Relay.c: 63: if( relay_num == 1)
  1976  000F16  041F               	decf	Relay_Control@relay_num,w,c
  1977  000F18  A4D8               	btfss	status,2,c
  1978  000F1A  D009               	goto	l3090
  1979                           
  1980                           ;Relay.c: 64: {
  1981                           ;Relay.c: 65: if(_switch)
  1982  000F1C  501E               	movf	Relay_Control@_switch,w,c
  1983  000F1E  B4D8               	btfsc	status,2,c
  1984  000F20  D003               	goto	l548
  1985                           
  1986                           ;Relay.c: 66: {
  1987                           ;Relay.c: 67: RD0 = 1,RD1 = 0;
  1988  000F22  8083               	bsf	3971,0,c	;volatile
  1989  000F24  9283               	bcf	3971,1,c	;volatile
  1990                           
  1991                           ;Relay.c: 68: }
  1992  000F26  D003               	goto	l3090
  1993  000F28                     l548:
  1994                           
  1995                           ;Relay.c: 69: else
  1996                           ;Relay.c: 70: {
  1997                           ;Relay.c: 71: RD0 = 0,RD1 = 1;
  1998  000F28  9083               	bcf	3971,0,c	;volatile
  1999  000F2A  8283               	bsf	3971,1,c	;volatile
  2000  000F2C  D000               	goto	l3090
  2001  000F2E                     l3090:
  2002                           
  2003                           ;Relay.c: 72: }
  2004                           ;Relay.c: 73: }
  2005                           ;Relay.c: 76: if( relay_num == 2)
  2006  000F2E  0E02               	movlw	2
  2007  000F30  181F               	xorwf	Relay_Control@relay_num,w,c
  2008  000F32  A4D8               	btfss	status,2,c
  2009  000F34  D009               	goto	l3096
  2010                           
  2011                           ;Relay.c: 77: {
  2012                           ;Relay.c: 78: if(_switch)
  2013  000F36  501E               	movf	Relay_Control@_switch,w,c
  2014  000F38  B4D8               	btfsc	status,2,c
  2015  000F3A  D003               	goto	l551
  2016                           
  2017                           ;Relay.c: 79: {
  2018                           ;Relay.c: 80: RD2 = 1,RD3 = 0;
  2019  000F3C  8483               	bsf	3971,2,c	;volatile
  2020  000F3E  9683               	bcf	3971,3,c	;volatile
  2021                           
  2022                           ;Relay.c: 81: }
  2023  000F40  D003               	goto	l3096
  2024  000F42                     l551:
  2025                           
  2026                           ;Relay.c: 82: else
  2027                           ;Relay.c: 83: {
  2028                           ;Relay.c: 84: RD2 = 0,RD3 = 1;
  2029  000F42  9483               	bcf	3971,2,c	;volatile
  2030  000F44  8683               	bsf	3971,3,c	;volatile
  2031  000F46  D000               	goto	l3096
  2032  000F48                     l3096:
  2033                           
  2034                           ;Relay.c: 85: }
  2035                           ;Relay.c: 86: }
  2036                           ;Relay.c: 89: if( relay_num == 3)
  2037  000F48  0E03               	movlw	3
  2038  000F4A  181F               	xorwf	Relay_Control@relay_num,w,c
  2039  000F4C  A4D8               	btfss	status,2,c
  2040  000F4E  D009               	goto	l3102
  2041                           
  2042                           ;Relay.c: 90: {
  2043                           ;Relay.c: 91: if(_switch)
  2044  000F50  501E               	movf	Relay_Control@_switch,w,c
  2045  000F52  B4D8               	btfsc	status,2,c
  2046  000F54  D003               	goto	l554
  2047                           
  2048                           ;Relay.c: 92: {
  2049                           ;Relay.c: 93: RD4 = 1,RD7 = 0;
  2050  000F56  8883               	bsf	3971,4,c	;volatile
  2051  000F58  9E83               	bcf	3971,7,c	;volatile
  2052                           
  2053                           ;Relay.c: 94: }
  2054  000F5A  D003               	goto	l3102
  2055  000F5C                     l554:
  2056                           
  2057                           ;Relay.c: 95: else
  2058                           ;Relay.c: 96: {
  2059                           ;Relay.c: 97: RD4 = 0,RD7 = 1;
  2060  000F5C  9883               	bcf	3971,4,c	;volatile
  2061  000F5E  8E83               	bsf	3971,7,c	;volatile
  2062  000F60  D000               	goto	l3102
  2063  000F62                     l3102:
  2064                           
  2065                           ;Relay.c: 98: }
  2066                           ;Relay.c: 99: }
  2067                           ;Relay.c: 102: if( relay_num >= 1 && relay_num <=3 )
  2068  000F62  501F               	movf	Relay_Control@relay_num,w,c
  2069  000F64  B4D8               	btfsc	status,2,c
  2070  000F66  D00A               	goto	l3108
  2071  000F68  0E04               	movlw	4
  2072  000F6A  601F               	cpfslt	Relay_Control@relay_num,c
  2073  000F6C  D007               	goto	l3108
  2074                           
  2075                           ;Relay.c: 103: {
  2076                           ;Relay.c: 104: delay_ms(2);
  2077  000F6E  0E00               	movlw	0
  2078  000F70  6E1D               	movwf	delay_ms@_ms+1,c
  2079  000F72  0E02               	movlw	2
  2080  000F74  6E1C               	movwf	delay_ms@_ms,c
  2081  000F76  ECAC  F00B         	call	_delay_ms	;wreg free
  2082  000F7A  D000               	goto	l3108
  2083  000F7C                     l3108:
  2084                           
  2085                           ;Relay.c: 105: }
  2086                           ;Relay.c: 108: RD0 = 0;
  2087  000F7C  9083               	bcf	3971,0,c	;volatile
  2088                           
  2089                           ;Relay.c: 109: RD1 = 0;
  2090  000F7E  9283               	bcf	3971,1,c	;volatile
  2091                           
  2092                           ;Relay.c: 110: RD2 = 0;
  2093  000F80  9483               	bcf	3971,2,c	;volatile
  2094                           
  2095                           ;Relay.c: 111: RD3 = 0;
  2096  000F82  9683               	bcf	3971,3,c	;volatile
  2097                           
  2098                           ;Relay.c: 112: RD4 = 0;
  2099  000F84  9883               	bcf	3971,4,c	;volatile
  2100                           
  2101                           ;Relay.c: 113: RD7 = 0;
  2102  000F86  9E83               	bcf	3971,7,c	;volatile
  2103  000F88  0012               	return		;funcret
  2104  000F8A                     __end_of_Relay_Control:
  2105                           	opt stack 0
  2106                           tblptru	equ	0xFF8
  2107                           tblptrh	equ	0xFF7
  2108                           tblptrl	equ	0xFF6
  2109                           tablat	equ	0xFF5
  2110                           prodh	equ	0xFF4
  2111                           prodl	equ	0xFF3
  2112                           intcon	equ	0xFF2
  2113                           postinc0	equ	0xFEE
  2114                           wreg	equ	0xFE8
  2115                           postdec1	equ	0xFE5
  2116                           fsr1l	equ	0xFE1
  2117                           indf2	equ	0xFDF
  2118                           fsr2h	equ	0xFDA
  2119                           fsr2l	equ	0xFD9
  2120                           status	equ	0xFD8
  2121                           
  2122 ;; *************** function _delay_ms *****************
  2123 ;; Defined at:
  2124 ;;		line 37 in file "_01_USER/My_Delay.c"
  2125 ;; Parameters:    Size  Location     Type
  2126 ;;  _ms             2   27[COMRAM] unsigned int 
  2127 ;; Auto vars:     Size  Location     Type
  2128 ;;		None
  2129 ;; Return value:  Size  Location     Type
  2130 ;;		None               void
  2131 ;; Registers used:
  2132 ;;		wreg, status,2, status,0, cstack
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2138 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2142 ;;Total ram usage:        2 bytes
  2143 ;; Hardware stack levels used:    1
  2144 ;; Hardware stack levels required when called:    4
  2145 ;; This function calls:
  2146 ;;		_delay1ms
  2147 ;; This function is called by:
  2148 ;;		_Relay_Control
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           	psect	text13
  2153  001758                     __ptext13:
  2154                           	opt stack 0
  2155  001758                     _delay_ms:
  2156                           	opt stack 24
  2157                           
  2158                           ;My_Delay.c: 39: while(_ms--) delay1ms();
  2159                           
  2160                           ;incstack = 0
  2161  001758  D003               	goto	l2570
  2162  00175A                     l2568:
  2163  00175A  EC73  F00A         	call	_delay1ms	;wreg free
  2164  00175E  D000               	goto	l2570
  2165  001760                     l2570:
  2166  001760  061C               	decf	delay_ms@_ms,f,c
  2167  001762  A0D8               	btfss	status,0,c
  2168  001764  061D               	decf	delay_ms@_ms+1,f,c
  2169  001766  281C               	incf	delay_ms@_ms,w,c
  2170  001768  E1F8               	bnz	l2568
  2171  00176A  281D               	incf	delay_ms@_ms+1,w,c
  2172  00176C  A4D8               	btfss	status,2,c
  2173  00176E  D7F5               	goto	l2568
  2174  001770  0012               	return		;funcret
  2175  001772                     __end_of_delay_ms:
  2176                           	opt stack 0
  2177                           tblptru	equ	0xFF8
  2178                           tblptrh	equ	0xFF7
  2179                           tblptrl	equ	0xFF6
  2180                           tablat	equ	0xFF5
  2181                           prodh	equ	0xFF4
  2182                           prodl	equ	0xFF3
  2183                           intcon	equ	0xFF2
  2184                           postinc0	equ	0xFEE
  2185                           wreg	equ	0xFE8
  2186                           postdec1	equ	0xFE5
  2187                           fsr1l	equ	0xFE1
  2188                           indf2	equ	0xFDF
  2189                           fsr2h	equ	0xFDA
  2190                           fsr2l	equ	0xFD9
  2191                           status	equ	0xFD8
  2192                           
  2193 ;; *************** function _delay1ms *****************
  2194 ;; Defined at:
  2195 ;;		line 59 in file "_01_USER/My_Delay.c"
  2196 ;; Parameters:    Size  Location     Type
  2197 ;;		None
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;  c               1   26[COMRAM] unsigned char 
  2200 ;;  b               1   25[COMRAM] unsigned char 
  2201 ;;  a               1   24[COMRAM] unsigned char 
  2202 ;; Return value:  Size  Location     Type
  2203 ;;		None               void
  2204 ;; Registers used:
  2205 ;;		wreg, status,2, status,0
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2212 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2214 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2215 ;;Total ram usage:        3 bytes
  2216 ;; Hardware stack levels used:    1
  2217 ;; Hardware stack levels required when called:    3
  2218 ;; This function calls:
  2219 ;;		Nothing
  2220 ;; This function is called by:
  2221 ;;		_delay_ms
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           	psect	text14
  2226  0014E6                     __ptext14:
  2227                           	opt stack 0
  2228  0014E6                     _delay1ms:
  2229                           	opt stack 24
  2230                           
  2231                           ;My_Delay.c: 61: unsigned char a,b,c;
  2232                           ;My_Delay.c: 62: for(c=1;c>0;c--)
  2233                           
  2234                           ;incstack = 0
  2235  0014E6  0E01               	movlw	1
  2236  0014E8  6E1B               	movwf	delay1ms@c,c
  2237  0014EA  501B               	movf	delay1ms@c,w,c
  2238  0014EC  B4D8               	btfsc	status,2,c
  2239  0014EE  0012               	return	
  2240  0014F0  D001               	goto	l2432
  2241  0014F2  0012               	return	
  2242  0014F4                     l2432:
  2243                           
  2244                           ;My_Delay.c: 63: for(b=94;b>0;b--)
  2245  0014F4  0E5E               	movlw	94
  2246  0014F6  6E1A               	movwf	delay1ms@b,c
  2247  0014F8  501A               	movf	delay1ms@b,w,c
  2248  0014FA  B4D8               	btfsc	status,2,c
  2249  0014FC  D00D               	goto	l2448
  2250  0014FE  D001               	goto	l2436
  2251  001500  D00B               	goto	l2448
  2252  001502                     l2436:
  2253                           
  2254                           ;My_Delay.c: 64: for(a=2;a>0;a--);
  2255  001502  0E02               	movlw	2
  2256  001504  6E19               	movwf	delay1ms@a,c
  2257  001506  5019               	movf	delay1ms@a,w,c
  2258  001508  B4D8               	btfsc	status,2,c
  2259  00150A  D004               	goto	l2444
  2260  00150C  D001               	goto	l2440
  2261  00150E  D002               	goto	l2444
  2262  001510                     l2440:
  2263  001510  0619               	decf	delay1ms@a,f,c
  2264  001512  D7F9               	goto	L1
  2265  001514                     l2444:
  2266  001514  061A               	decf	delay1ms@b,f,c
  2267  001516  D7F0               	goto	L2
  2268  001518                     l2448:
  2269  001518  061B               	decf	delay1ms@c,f,c
  2270  00151A  D7E7               	goto	L3
  2271  00151C  0012               	return		;funcret
  2272  00151E                     __end_of_delay1ms:
  2273                           	opt stack 0
  2274                           tblptru	equ	0xFF8
  2275                           tblptrh	equ	0xFF7
  2276                           tblptrl	equ	0xFF6
  2277                           tablat	equ	0xFF5
  2278                           prodh	equ	0xFF4
  2279                           prodl	equ	0xFF3
  2280                           intcon	equ	0xFF2
  2281                           postinc0	equ	0xFEE
  2282                           wreg	equ	0xFE8
  2283                           postdec1	equ	0xFE5
  2284                           fsr1l	equ	0xFE1
  2285                           indf2	equ	0xFDF
  2286                           fsr2h	equ	0xFDA
  2287                           fsr2l	equ	0xFD9
  2288                           status	equ	0xFD8
  2289                           
  2290 ;; *************** function _RS485_SendDate *****************
  2291 ;; Defined at:
  2292 ;;		line 77 in file "_01_USER/My_USART.c"
  2293 ;; Parameters:    Size  Location     Type
  2294 ;;  date_dress      2    5[BANK0 ] PTR unsigned char 
  2295 ;;		 -> RS485_AnalysisData@_PreData(10), ga_RS485_SendBuff(10), 
  2296 ;;  date_lenth      1    7[BANK0 ] unsigned char 
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;		None
  2299 ;; Return value:  Size  Location     Type
  2300 ;;		None               void
  2301 ;; Registers used:
  2302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2303 ;; Tracked objects:
  2304 ;;		On entry : 0/0
  2305 ;;		On exit  : 0/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2308 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2310 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2311 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2312 ;;Total ram usage:        4 bytes
  2313 ;; Hardware stack levels used:    1
  2314 ;; Hardware stack levels required when called:    5
  2315 ;; This function calls:
  2316 ;;		_VerifyCRC
  2317 ;; This function is called by:
  2318 ;;		_Run
  2319 ;;		_RS485_AnalysisData
  2320 ;; This function uses a non-reentrant model
  2321 ;;
  2322                           
  2323                           	psect	text15
  2324  000D30                     __ptext15:
  2325                           	opt stack 0
  2326  000D30                     _RS485_SendDate:
  2327                           	opt stack 24
  2328                           
  2329                           ;My_USART.c: 80: date_dress[--date_lenth] = 0xff;
  2330                           
  2331                           ;incstack = 0
  2332  000D30  0100               	movlb	0	; () banked
  2333  000D32  07B2               	decf	RS485_SendDate@date_lenth& (0+255),f,b
  2334  000D34  0100               	movlb	0	; () banked
  2335  000D36  51B2               	movf	RS485_SendDate@date_lenth& (0+255),w,b
  2336  000D38  0D01               	mullw	1
  2337  000D3A  50F3               	movf	prodl,w,c
  2338  000D3C  0100               	movlb	0	; () banked
  2339  000D3E  25B0               	addwf	RS485_SendDate@date_dress& (0+255),w,b
  2340  000D40  6ED9               	movwf	fsr2l,c
  2341  000D42  50F4               	movf	prodh,w,c
  2342  000D44  0100               	movlb	0	; () banked
  2343  000D46  21B1               	addwfc	(RS485_SendDate@date_dress+1)& (0+255),w,b
  2344  000D48  6EDA               	movwf	fsr2h,c
  2345  000D4A  0EFF               	movlw	255
  2346  000D4C  6EDF               	movwf	indf2,c
  2347                           
  2348                           ; BSR set to: 0
  2349                           ;My_USART.c: 83: VerifyCRC(date_dress,date_lenth);
  2350  000D4E  C0B0  F026         	movff	RS485_SendDate@date_dress,VerifyCRC@DataBuff
  2351  000D52  C0B1  F027         	movff	RS485_SendDate@date_dress+1,VerifyCRC@DataBuff+1
  2352  000D56  C0B2  F028         	movff	RS485_SendDate@date_lenth,VerifyCRC@date_lenth
  2353  000D5A  EC81  F004         	call	_VerifyCRC	;wreg free
  2354                           
  2355                           ;My_USART.c: 86: while( (!TXSTA1bits.TRMT) );
  2356  000D5E  D000               	goto	l206
  2357  000D60                     l206:
  2358  000D60  A2AC               	btfss	4012,1,c	;volatile
  2359  000D62  D7FE               	goto	l206
  2360                           
  2361                           ;My_USART.c: 87: RC0 = 0;
  2362  000D64  9082               	bcf	3970,0,c	;volatile
  2363                           
  2364                           ;My_USART.c: 90: TXREG1 = date_dress[date_lenth];
  2365  000D66  0100               	movlb	0	; () banked
  2366  000D68  51B2               	movf	RS485_SendDate@date_lenth& (0+255),w,b
  2367  000D6A  0D01               	mullw	1
  2368  000D6C  50F3               	movf	prodl,w,c
  2369  000D6E  0100               	movlb	0	; () banked
  2370  000D70  25B0               	addwf	RS485_SendDate@date_dress& (0+255),w,b
  2371  000D72  6ED9               	movwf	fsr2l,c
  2372  000D74  50F4               	movf	prodh,w,c
  2373  000D76  0100               	movlb	0	; () banked
  2374  000D78  21B1               	addwfc	(RS485_SendDate@date_dress+1)& (0+255),w,b
  2375  000D7A  6EDA               	movwf	fsr2h,c
  2376  000D7C  50DF               	movf	indf2,w,c
  2377  000D7E  6EAD               	movwf	4013,c	;volatile
  2378                           
  2379                           ;My_USART.c: 91: while( (!TXSTA1bits.TRMT) );
  2380  000D80  D000               	goto	l209
  2381  000D82                     l209:
  2382  000D82  B2AC               	btfsc	4012,1,c	;volatile
  2383  000D84  D02E               	goto	l3812
  2384  000D86  D7FD               	goto	l209
  2385                           
  2386                           ;My_USART.c: 94: while( date_lenth --)
  2387  000D88  D02C               	goto	l3812
  2388  000D8A                     l3808:
  2389                           
  2390                           ;My_USART.c: 95: {
  2391                           ;My_USART.c: 96: if(date_dress[date_lenth] == 0xff ) date_dress[date_lenth]--;
  2392  000D8A  0100               	movlb	0	; () banked
  2393  000D8C  51B2               	movf	RS485_SendDate@date_lenth& (0+255),w,b
  2394  000D8E  0D01               	mullw	1
  2395  000D90  50F3               	movf	prodl,w,c
  2396  000D92  0100               	movlb	0	; () banked
  2397  000D94  25B0               	addwf	RS485_SendDate@date_dress& (0+255),w,b
  2398  000D96  6ED9               	movwf	fsr2l,c
  2399  000D98  50F4               	movf	prodh,w,c
  2400  000D9A  0100               	movlb	0	; () banked
  2401  000D9C  21B1               	addwfc	(RS485_SendDate@date_dress+1)& (0+255),w,b
  2402  000D9E  6EDA               	movwf	fsr2h,c
  2403  000DA0  28DE               	incf	postinc2,w,c
  2404  000DA2  A4D8               	btfss	status,2,c
  2405  000DA4  D00C               	goto	l214
  2406                           
  2407                           ; BSR set to: 0
  2408  000DA6  0100               	movlb	0	; () banked
  2409  000DA8  51B2               	movf	RS485_SendDate@date_lenth& (0+255),w,b
  2410  000DAA  0D01               	mullw	1
  2411  000DAC  50F3               	movf	prodl,w,c
  2412  000DAE  0100               	movlb	0	; () banked
  2413  000DB0  25B0               	addwf	RS485_SendDate@date_dress& (0+255),w,b
  2414  000DB2  6ED9               	movwf	fsr2l,c
  2415  000DB4  50F4               	movf	prodh,w,c
  2416  000DB6  0100               	movlb	0	; () banked
  2417  000DB8  21B1               	addwfc	(RS485_SendDate@date_dress+1)& (0+255),w,b
  2418  000DBA  6EDA               	movwf	fsr2h,c
  2419  000DBC  06DF               	decf	indf2,f,c
  2420  000DBE                     l214:
  2421                           
  2422                           ; BSR set to: 0
  2423                           ;My_USART.c: 97: TXREG1 = date_dress[date_lenth];
  2424  000DBE  0100               	movlb	0	; () banked
  2425  000DC0  51B2               	movf	RS485_SendDate@date_lenth& (0+255),w,b
  2426  000DC2  0D01               	mullw	1
  2427  000DC4  50F3               	movf	prodl,w,c
  2428  000DC6  0100               	movlb	0	; () banked
  2429  000DC8  25B0               	addwf	RS485_SendDate@date_dress& (0+255),w,b
  2430  000DCA  6ED9               	movwf	fsr2l,c
  2431  000DCC  50F4               	movf	prodh,w,c
  2432  000DCE  0100               	movlb	0	; () banked
  2433  000DD0  21B1               	addwfc	(RS485_SendDate@date_dress+1)& (0+255),w,b
  2434  000DD2  6EDA               	movwf	fsr2h,c
  2435  000DD4  50DF               	movf	indf2,w,c
  2436  000DD6  6EAD               	movwf	4013,c	;volatile
  2437                           
  2438                           ;My_USART.c: 98: while( (!TXSTA1bits.TRMT));
  2439  000DD8  D000               	goto	l215
  2440  000DDA                     l215:
  2441  000DDA  B2AC               	btfsc	4012,1,c	;volatile
  2442  000DDC  D002               	goto	l3812
  2443  000DDE  D7FD               	goto	l215
  2444  000DE0  D000               	goto	l3812
  2445  000DE2                     l3812:
  2446  000DE2  0100               	movlb	0	; () banked
  2447  000DE4  07B2               	decf	RS485_SendDate@date_lenth& (0+255),f,b
  2448  000DE6  0100               	movlb	0	; () banked
  2449  000DE8  29B2               	incf	RS485_SendDate@date_lenth& (0+255),w,b
  2450  000DEA  A4D8               	btfss	status,2,c
  2451  000DEC  D7CE               	goto	l3808
  2452                           
  2453                           ; BSR set to: 0
  2454                           ;My_USART.c: 99: }
  2455                           ;My_USART.c: 101: RC0 = 1;
  2456  000DEE  8082               	bsf	3970,0,c	;volatile
  2457                           
  2458                           ; BSR set to: 0
  2459  000DF0  0012               	return		;funcret
  2460  000DF2                     __end_of_RS485_SendDate:
  2461                           	opt stack 0
  2462                           tblptru	equ	0xFF8
  2463                           tblptrh	equ	0xFF7
  2464                           tblptrl	equ	0xFF6
  2465                           tablat	equ	0xFF5
  2466                           prodh	equ	0xFF4
  2467                           prodl	equ	0xFF3
  2468                           intcon	equ	0xFF2
  2469                           postinc0	equ	0xFEE
  2470                           wreg	equ	0xFE8
  2471                           postdec1	equ	0xFE5
  2472                           fsr1l	equ	0xFE1
  2473                           indf2	equ	0xFDF
  2474                           postinc2	equ	0xFDE
  2475                           fsr2h	equ	0xFDA
  2476                           fsr2l	equ	0xFD9
  2477                           status	equ	0xFD8
  2478                           
  2479 ;; *************** function _GetADC6 *****************
  2480 ;; Defined at:
  2481 ;;		line 67 in file "_01_USER/My_ADC.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;		None
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;		None
  2486 ;; Return value:  Size  Location     Type
  2487 ;;		None               void
  2488 ;; Registers used:
  2489 ;;		wreg, status,2, status,0, cstack
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2499 ;;Total ram usage:        0 bytes
  2500 ;; Hardware stack levels used:    1
  2501 ;; Hardware stack levels required when called:    5
  2502 ;; This function calls:
  2503 ;;		_BusyADC
  2504 ;;		_ConvertADC
  2505 ;;		_ReadADC
  2506 ;;		___ftdiv
  2507 ;;		___ftmul
  2508 ;;		___lwtoft
  2509 ;; This function is called by:
  2510 ;;		_Run
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514                           	psect	text16
  2515  0010D8                     __ptext16:
  2516                           	opt stack 0
  2517  0010D8                     _GetADC6:
  2518                           	opt stack 24
  2519                           
  2520                           ;My_ADC.c: 69: ConvertADC();
  2521                           
  2522                           ; BSR set to: 0
  2523                           ;incstack = 0
  2524  0010D8  ECFF  F00B         	call	_ConvertADC	;wreg free
  2525                           
  2526                           ;My_ADC.c: 70: while(BusyADC());
  2527  0010DC  D000               	goto	l3878
  2528  0010DE                     l3878:
  2529  0010DE  ECEB  F00B         	call	_BusyADC	;wreg free
  2530  0010E2  0900               	iorlw	0
  2531  0010E4  A4D8               	btfss	status,2,c
  2532  0010E6  D7FB               	goto	l3878
  2533                           
  2534                           ;My_ADC.c: 71: gf_ADC6_Buff =(unsigned int)ReadADC()*4.096f/4095.0f;
  2535  0010E8  0E12               	movlw	18
  2536  0010EA  6E27               	movwf	___ftmul@f2,c
  2537  0010EC  0E83               	movlw	131
  2538  0010EE  6E28               	movwf	___ftmul@f2+1,c
  2539  0010F0  0E40               	movlw	64
  2540  0010F2  6E29               	movwf	___ftmul@f2+2,c
  2541  0010F4  ECE3  F00B         	call	_ReadADC	;wreg free
  2542  0010F8  C019  F021         	movff	?_ReadADC,___lwtoft@c
  2543  0010FC  C01A  F022         	movff	?_ReadADC+1,___lwtoft@c+1
  2544  001100  EC22  F00B         	call	___lwtoft	;wreg free
  2545  001104  C021  F024         	movff	?___lwtoft,___ftmul@f1
  2546  001108  C022  F025         	movff	?___lwtoft+1,___ftmul@f1+1
  2547  00110C  C023  F026         	movff	?___lwtoft+2,___ftmul@f1+2
  2548  001110  EC1F  F005         	call	___ftmul	;wreg free
  2549  001114  C024  F0B1         	movff	?___ftmul,___ftdiv@f1
  2550  001118  C025  F0B2         	movff	?___ftmul+1,___ftdiv@f1+1
  2551  00111C  C026  F0B3         	movff	?___ftmul+2,___ftdiv@f1+2
  2552  001120  0EF0               	movlw	240
  2553  001122  0100               	movlb	0	; () banked
  2554  001124  6FB4               	movwf	___ftdiv@f2& (0+255),b
  2555  001126  0E7F               	movlw	127
  2556  001128  0100               	movlb	0	; () banked
  2557  00112A  6FB5               	movwf	(___ftdiv@f2+1)& (0+255),b
  2558  00112C  0E45               	movlw	69
  2559  00112E  0100               	movlb	0	; () banked
  2560  001130  6FB6               	movwf	(___ftdiv@f2+2)& (0+255),b
  2561  001132  ECD8  F003         	call	___ftdiv	;wreg free
  2562  001136  C0B1  F06A         	movff	?___ftdiv,_gf_ADC6_Buff	;volatile
  2563  00113A  C0B2  F06B         	movff	?___ftdiv+1,_gf_ADC6_Buff+1	;volatile
  2564  00113E  C0B3  F06C         	movff	?___ftdiv+2,_gf_ADC6_Buff+2	;volatile
  2565  001142  0012               	return		;funcret
  2566  001144                     __end_of_GetADC6:
  2567                           	opt stack 0
  2568                           tblptru	equ	0xFF8
  2569                           tblptrh	equ	0xFF7
  2570                           tblptrl	equ	0xFF6
  2571                           tablat	equ	0xFF5
  2572                           prodh	equ	0xFF4
  2573                           prodl	equ	0xFF3
  2574                           intcon	equ	0xFF2
  2575                           postinc0	equ	0xFEE
  2576                           wreg	equ	0xFE8
  2577                           postdec1	equ	0xFE5
  2578                           fsr1l	equ	0xFE1
  2579                           indf2	equ	0xFDF
  2580                           postinc2	equ	0xFDE
  2581                           fsr2h	equ	0xFDA
  2582                           fsr2l	equ	0xFD9
  2583                           status	equ	0xFD8
  2584                           
  2585 ;; *************** function ___lwtoft *****************
  2586 ;; Defined at:
  2587 ;;		line 28 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;  c               2   32[COMRAM] unsigned int 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;		None
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  3   32[COMRAM] float 
  2594 ;; Registers used:
  2595 ;;		wreg, status,2, status,0, cstack
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2601 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2604 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2605 ;;Total ram usage:        3 bytes
  2606 ;; Hardware stack levels used:    1
  2607 ;; Hardware stack levels required when called:    4
  2608 ;; This function calls:
  2609 ;;		___ftpack
  2610 ;; This function is called by:
  2611 ;;		_GetADC6
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           	psect	text17
  2616  001644                     __ptext17:
  2617                           	opt stack 0
  2618  001644                     ___lwtoft:
  2619                           	opt stack 24
  2620                           
  2621                           ;incstack = 0
  2622  001644  C021  F019         	movff	___lwtoft@c,___ftpack@arg
  2623  001648  C022  F01A         	movff	___lwtoft@c+1,___ftpack@arg+1
  2624  00164C  6A1B               	clrf	___ftpack@arg+2,c
  2625  00164E  0E8E               	movlw	142
  2626  001650  6E1C               	movwf	___ftpack@exp,c
  2627  001652  0E00               	movlw	0
  2628  001654  6E1D               	movwf	___ftpack@sign,c
  2629  001656  EC35  F006         	call	___ftpack	;wreg free
  2630  00165A  C019  F021         	movff	?___ftpack,?___lwtoft
  2631  00165E  C01A  F022         	movff	?___ftpack+1,?___lwtoft+1
  2632  001662  C01B  F023         	movff	?___ftpack+2,?___lwtoft+2
  2633  001666  0012               	return	
  2634  001668  0012               	return		;funcret
  2635  00166A                     __end_of___lwtoft:
  2636                           	opt stack 0
  2637                           tblptru	equ	0xFF8
  2638                           tblptrh	equ	0xFF7
  2639                           tblptrl	equ	0xFF6
  2640                           tablat	equ	0xFF5
  2641                           prodh	equ	0xFF4
  2642                           prodl	equ	0xFF3
  2643                           intcon	equ	0xFF2
  2644                           postinc0	equ	0xFEE
  2645                           wreg	equ	0xFE8
  2646                           postdec1	equ	0xFE5
  2647                           fsr1l	equ	0xFE1
  2648                           indf2	equ	0xFDF
  2649                           postinc2	equ	0xFDE
  2650                           fsr2h	equ	0xFDA
  2651                           fsr2l	equ	0xFD9
  2652                           status	equ	0xFD8
  2653                           
  2654 ;; *************** function ___ftmul *****************
  2655 ;; Defined at:
  2656 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;  f1              3   35[COMRAM] float 
  2659 ;;  f2              3   38[COMRAM] float 
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;  f3_as_produc    3    1[BANK0 ] unsigned um
  2662 ;;  sign            1    5[BANK0 ] unsigned char 
  2663 ;;  cntr            1    4[BANK0 ] unsigned char 
  2664 ;;  exp             1    0[BANK0 ] unsigned char 
  2665 ;; Return value:  Size  Location     Type
  2666 ;;                  3   35[COMRAM] float 
  2667 ;; Registers used:
  2668 ;;		wreg, status,2, status,0, cstack
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/0
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2674 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2675 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2676 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2677 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2678 ;;Total ram usage:       15 bytes
  2679 ;; Hardware stack levels used:    1
  2680 ;; Hardware stack levels required when called:    4
  2681 ;; This function calls:
  2682 ;;		___ftpack
  2683 ;; This function is called by:
  2684 ;;		_GetADC6
  2685 ;;		_TM1640_Show_Decimal
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688                           
  2689                           	psect	text18
  2690  000A3E                     __ptext18:
  2691                           	opt stack 0
  2692  000A3E                     ___ftmul:
  2693                           	opt stack 24
  2694                           
  2695                           ;incstack = 0
  2696  000A3E  C026  F02A         	movff	___ftmul@f1+2,??___ftmul
  2697  000A42  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  2698  000A44  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  2699  000A46  3425               	rlcf	___ftmul@f1+1,w,c
  2700  000A48  362A               	rlcf	??___ftmul& (0+255),f,c
  2701  000A4A  E301               	bnc	u4161
  2702  000A4C  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  2703  000A4E                     u4161:
  2704  000A4E  502A               	movf	??___ftmul,w,c
  2705  000A50  0100               	movlb	0	; () banked
  2706  000A52  6FAB               	movwf	___ftmul@exp& (0+255),b
  2707  000A54  0100               	movlb	0	; () banked
  2708  000A56  51AB               	movf	___ftmul@exp& (0+255),w,b
  2709  000A58  A4D8               	btfss	status,2,c
  2710  000A5A  D007               	goto	l3756
  2711                           
  2712                           ; BSR set to: 0
  2713  000A5C  0E00               	movlw	0
  2714  000A5E  6E24               	movwf	?___ftmul,c
  2715  000A60  0E00               	movlw	0
  2716  000A62  6E25               	movwf	?___ftmul+1,c
  2717  000A64  0E00               	movlw	0
  2718  000A66  6E26               	movwf	?___ftmul+2,c
  2719                           
  2720                           ; BSR set to: 0
  2721  000A68  0012               	return	
  2722  000A6A                     l3756:
  2723                           
  2724                           ; BSR set to: 0
  2725  000A6A  C029  F02A         	movff	___ftmul@f2+2,??___ftmul
  2726  000A6E  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  2727  000A70  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  2728  000A72  3428               	rlcf	___ftmul@f2+1,w,c
  2729  000A74  362A               	rlcf	??___ftmul& (0+255),f,c
  2730  000A76  E301               	bnc	u4181
  2731  000A78  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  2732  000A7A                     u4181:
  2733  000A7A  502A               	movf	??___ftmul,w,c
  2734  000A7C  0100               	movlb	0	; () banked
  2735  000A7E  6FB0               	movwf	___ftmul@sign& (0+255),b
  2736  000A80  0100               	movlb	0	; () banked
  2737  000A82  51B0               	movf	___ftmul@sign& (0+255),w,b
  2738  000A84  A4D8               	btfss	status,2,c
  2739  000A86  D007               	goto	l3762
  2740                           
  2741                           ; BSR set to: 0
  2742  000A88  0E00               	movlw	0
  2743  000A8A  6E24               	movwf	?___ftmul,c
  2744  000A8C  0E00               	movlw	0
  2745  000A8E  6E25               	movwf	?___ftmul+1,c
  2746  000A90  0E00               	movlw	0
  2747  000A92  6E26               	movwf	?___ftmul+2,c
  2748                           
  2749                           ; BSR set to: 0
  2750  000A94  0012               	return	
  2751  000A96                     l3762:
  2752                           
  2753                           ; BSR set to: 0
  2754  000A96  0100               	movlb	0	; () banked
  2755  000A98  51B0               	movf	___ftmul@sign& (0+255),w,b
  2756  000A9A  0F7B               	addlw	123
  2757  000A9C  0100               	movlb	0	; () banked
  2758  000A9E  27AB               	addwf	___ftmul@exp& (0+255),f,b
  2759                           
  2760                           ; BSR set to: 0
  2761  000AA0  C026  F0B0         	movff	___ftmul@f1+2,___ftmul@sign
  2762  000AA4  5029               	movf	___ftmul@f2+2,w,c
  2763  000AA6  0100               	movlb	0	; () banked
  2764  000AA8  1BB0               	xorwf	___ftmul@sign& (0+255),f,b
  2765  000AAA  0E80               	movlw	128
  2766  000AAC  0100               	movlb	0	; () banked
  2767  000AAE  17B0               	andwf	___ftmul@sign& (0+255),f,b
  2768                           
  2769                           ; BSR set to: 0
  2770  000AB0  8E25               	bsf	___ftmul@f1+1,7,c
  2771                           
  2772                           ; BSR set to: 0
  2773  000AB2  8E28               	bsf	___ftmul@f2+1,7,c
  2774                           
  2775                           ; BSR set to: 0
  2776  000AB4  0EFF               	movlw	255
  2777  000AB6  1627               	andwf	___ftmul@f2,f,c
  2778  000AB8  0EFF               	movlw	255
  2779  000ABA  1628               	andwf	___ftmul@f2+1,f,c
  2780  000ABC  0E00               	movlw	0
  2781  000ABE  1629               	andwf	___ftmul@f2+2,f,c
  2782                           
  2783                           ; BSR set to: 0
  2784  000AC0  0E00               	movlw	0
  2785  000AC2  0100               	movlb	0	; () banked
  2786  000AC4  6FAC               	movwf	___ftmul@f3_as_product& (0+255),b
  2787  000AC6  0E00               	movlw	0
  2788  000AC8  0100               	movlb	0	; () banked
  2789  000ACA  6FAD               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  2790  000ACC  0E00               	movlw	0
  2791  000ACE  0100               	movlb	0	; () banked
  2792  000AD0  6FAE               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  2793                           
  2794                           ; BSR set to: 0
  2795  000AD2  0E07               	movlw	7
  2796  000AD4  0100               	movlb	0	; () banked
  2797  000AD6  6FAF               	movwf	___ftmul@cntr& (0+255),b
  2798  000AD8  D000               	goto	l3776
  2799  000ADA                     l3776:
  2800                           
  2801                           ; BSR set to: 0
  2802  000ADA  A024               	btfss	___ftmul@f1,0,c
  2803  000ADC  D00A               	goto	l3780
  2804                           
  2805                           ; BSR set to: 0
  2806  000ADE  5027               	movf	___ftmul@f2,w,c
  2807  000AE0  0100               	movlb	0	; () banked
  2808  000AE2  27AC               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2809  000AE4  5028               	movf	___ftmul@f2+1,w,c
  2810  000AE6  0100               	movlb	0	; () banked
  2811  000AE8  23AD               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2812  000AEA  5029               	movf	___ftmul@f2+2,w,c
  2813  000AEC  0100               	movlb	0	; () banked
  2814  000AEE  23AE               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2815  000AF0  D000               	goto	l3780
  2816  000AF2                     l3780:
  2817                           
  2818                           ; BSR set to: 0
  2819  000AF2  90D8               	bcf	status,0,c
  2820  000AF4  3226               	rrcf	___ftmul@f1+2,f,c
  2821  000AF6  3225               	rrcf	___ftmul@f1+1,f,c
  2822  000AF8  3224               	rrcf	___ftmul@f1,f,c
  2823  000AFA  90D8               	bcf	status,0,c
  2824  000AFC  3627               	rlcf	___ftmul@f2,f,c
  2825  000AFE  3628               	rlcf	___ftmul@f2+1,f,c
  2826  000B00  3629               	rlcf	___ftmul@f2+2,f,c
  2827                           
  2828                           ; BSR set to: 0
  2829  000B02  0100               	movlb	0	; () banked
  2830  000B04  2FAF               	decfsz	___ftmul@cntr& (0+255),f,b
  2831  000B06  D7E9               	goto	l3776
  2832  000B08  D000               	goto	l3784
  2833  000B0A                     l3784:
  2834                           
  2835                           ; BSR set to: 0
  2836  000B0A  0E09               	movlw	9
  2837  000B0C  0100               	movlb	0	; () banked
  2838  000B0E  6FAF               	movwf	___ftmul@cntr& (0+255),b
  2839  000B10  D000               	goto	l3786
  2840  000B12                     l3786:
  2841                           
  2842                           ; BSR set to: 0
  2843  000B12  A024               	btfss	___ftmul@f1,0,c
  2844  000B14  D00A               	goto	l3790
  2845                           
  2846                           ; BSR set to: 0
  2847  000B16  5027               	movf	___ftmul@f2,w,c
  2848  000B18  0100               	movlb	0	; () banked
  2849  000B1A  27AC               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2850  000B1C  5028               	movf	___ftmul@f2+1,w,c
  2851  000B1E  0100               	movlb	0	; () banked
  2852  000B20  23AD               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2853  000B22  5029               	movf	___ftmul@f2+2,w,c
  2854  000B24  0100               	movlb	0	; () banked
  2855  000B26  23AE               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2856  000B28  D000               	goto	l3790
  2857  000B2A                     l3790:
  2858                           
  2859                           ; BSR set to: 0
  2860  000B2A  90D8               	bcf	status,0,c
  2861  000B2C  3226               	rrcf	___ftmul@f1+2,f,c
  2862  000B2E  3225               	rrcf	___ftmul@f1+1,f,c
  2863  000B30  3224               	rrcf	___ftmul@f1,f,c
  2864  000B32  0100               	movlb	0	; () banked
  2865  000B34  90D8               	bcf	status,0,c
  2866  000B36  33AE               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  2867  000B38  33AD               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  2868  000B3A  33AC               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  2869                           
  2870                           ; BSR set to: 0
  2871  000B3C  0100               	movlb	0	; () banked
  2872  000B3E  2FAF               	decfsz	___ftmul@cntr& (0+255),f,b
  2873  000B40  D7E8               	goto	l3786
  2874  000B42  D000               	goto	l3794
  2875  000B44                     l3794:
  2876                           
  2877                           ; BSR set to: 0
  2878  000B44  C0AC  F019         	movff	___ftmul@f3_as_product,___ftpack@arg
  2879  000B48  C0AD  F01A         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2880  000B4C  C0AE  F01B         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2881  000B50  C0AB  F01C         	movff	___ftmul@exp,___ftpack@exp
  2882  000B54  C0B0  F01D         	movff	___ftmul@sign,___ftpack@sign
  2883  000B58  EC35  F006         	call	___ftpack	;wreg free
  2884  000B5C  C019  F024         	movff	?___ftpack,?___ftmul
  2885  000B60  C01A  F025         	movff	?___ftpack+1,?___ftmul+1
  2886  000B64  C01B  F026         	movff	?___ftpack+2,?___ftmul+2
  2887  000B68  0012               	return	
  2888  000B6A  0012               	return		;funcret
  2889  000B6C                     __end_of___ftmul:
  2890                           	opt stack 0
  2891                           tblptru	equ	0xFF8
  2892                           tblptrh	equ	0xFF7
  2893                           tblptrl	equ	0xFF6
  2894                           tablat	equ	0xFF5
  2895                           prodh	equ	0xFF4
  2896                           prodl	equ	0xFF3
  2897                           intcon	equ	0xFF2
  2898                           postinc0	equ	0xFEE
  2899                           wreg	equ	0xFE8
  2900                           postdec1	equ	0xFE5
  2901                           fsr1l	equ	0xFE1
  2902                           indf2	equ	0xFDF
  2903                           postinc2	equ	0xFDE
  2904                           fsr2h	equ	0xFDA
  2905                           fsr2l	equ	0xFD9
  2906                           status	equ	0xFD8
  2907                           
  2908 ;; *************** function ___ftdiv *****************
  2909 ;; Defined at:
  2910 ;;		line 54 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;  f1              3    6[BANK0 ] float 
  2913 ;;  f2              3    9[BANK0 ] float 
  2914 ;; Auto vars:     Size  Location     Type
  2915 ;;  f3              3   16[BANK0 ] float 
  2916 ;;  sign            1   20[BANK0 ] unsigned char 
  2917 ;;  exp             1   19[BANK0 ] unsigned char 
  2918 ;;  cntr            1   15[BANK0 ] unsigned char 
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  3    6[BANK0 ] float 
  2921 ;; Registers used:
  2922 ;;		wreg, status,2, status,0, cstack
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2928 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2929 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2930 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2931 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2932 ;;Total ram usage:       15 bytes
  2933 ;; Hardware stack levels used:    1
  2934 ;; Hardware stack levels required when called:    4
  2935 ;; This function calls:
  2936 ;;		___ftpack
  2937 ;; This function is called by:
  2938 ;;		_GetADC6
  2939 ;;		_TM1640_Show_Decimal
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943                           	psect	text19
  2944  0007B0                     __ptext19:
  2945                           	opt stack 0
  2946  0007B0                     ___ftdiv:
  2947                           	opt stack 24
  2948                           
  2949                           ;incstack = 0
  2950  0007B0  C0B3  F0B7         	movff	___ftdiv@f1+2,??___ftdiv
  2951  0007B4  0100               	movlb	0	; () banked
  2952  0007B6  6BB8               	clrf	(??___ftdiv+1)& (0+255),b
  2953  0007B8  6BB9               	clrf	(??___ftdiv+2)& (0+255),b
  2954  0007BA  0100               	movlb	0	; () banked
  2955  0007BC  35B2               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  2956  0007BE  0100               	movlb	0	; () banked
  2957  0007C0  37B7               	rlcf	??___ftdiv& (0+255),f,b
  2958  0007C2  E301               	bnc	u4111
  2959  0007C4  81B8               	bsf	(??___ftdiv+1)& (0+255),0,b
  2960  0007C6                     u4111:
  2961  0007C6  0100               	movlb	0	; () banked
  2962  0007C8  51B7               	movf	??___ftdiv& (0+255),w,b
  2963  0007CA  0100               	movlb	0	; () banked
  2964  0007CC  6FBE               	movwf	___ftdiv@exp& (0+255),b
  2965  0007CE  0100               	movlb	0	; () banked
  2966  0007D0  51BE               	movf	___ftdiv@exp& (0+255),w,b
  2967  0007D2  A4D8               	btfss	status,2,c
  2968  0007D4  D00A               	goto	l3710
  2969                           
  2970                           ; BSR set to: 0
  2971  0007D6  0E00               	movlw	0
  2972  0007D8  0100               	movlb	0	; () banked
  2973  0007DA  6FB1               	movwf	?___ftdiv& (0+255),b
  2974  0007DC  0E00               	movlw	0
  2975  0007DE  0100               	movlb	0	; () banked
  2976  0007E0  6FB2               	movwf	(?___ftdiv+1)& (0+255),b
  2977  0007E2  0E00               	movlw	0
  2978  0007E4  0100               	movlb	0	; () banked
  2979  0007E6  6FB3               	movwf	(?___ftdiv+2)& (0+255),b
  2980                           
  2981                           ; BSR set to: 0
  2982  0007E8  0012               	return	
  2983  0007EA                     l3710:
  2984                           
  2985                           ; BSR set to: 0
  2986  0007EA  C0B6  F0B7         	movff	___ftdiv@f2+2,??___ftdiv
  2987  0007EE  0100               	movlb	0	; () banked
  2988  0007F0  6BB8               	clrf	(??___ftdiv+1)& (0+255),b
  2989  0007F2  6BB9               	clrf	(??___ftdiv+2)& (0+255),b
  2990  0007F4  0100               	movlb	0	; () banked
  2991  0007F6  35B5               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  2992  0007F8  0100               	movlb	0	; () banked
  2993  0007FA  37B7               	rlcf	??___ftdiv& (0+255),f,b
  2994  0007FC  E301               	bnc	u4131
  2995  0007FE  81B8               	bsf	(??___ftdiv+1)& (0+255),0,b
  2996  000800                     u4131:
  2997  000800  0100               	movlb	0	; () banked
  2998  000802  51B7               	movf	??___ftdiv& (0+255),w,b
  2999  000804  0100               	movlb	0	; () banked
  3000  000806  6FBF               	movwf	___ftdiv@sign& (0+255),b
  3001  000808  0100               	movlb	0	; () banked
  3002  00080A  51BF               	movf	___ftdiv@sign& (0+255),w,b
  3003  00080C  A4D8               	btfss	status,2,c
  3004  00080E  D00A               	goto	l3716
  3005                           
  3006                           ; BSR set to: 0
  3007  000810  0E00               	movlw	0
  3008  000812  0100               	movlb	0	; () banked
  3009  000814  6FB1               	movwf	?___ftdiv& (0+255),b
  3010  000816  0E00               	movlw	0
  3011  000818  0100               	movlb	0	; () banked
  3012  00081A  6FB2               	movwf	(?___ftdiv+1)& (0+255),b
  3013  00081C  0E00               	movlw	0
  3014  00081E  0100               	movlb	0	; () banked
  3015  000820  6FB3               	movwf	(?___ftdiv+2)& (0+255),b
  3016                           
  3017                           ; BSR set to: 0
  3018  000822  0012               	return	
  3019  000824                     l3716:
  3020                           
  3021                           ; BSR set to: 0
  3022  000824  0E00               	movlw	0
  3023  000826  0100               	movlb	0	; () banked
  3024  000828  6FBB               	movwf	___ftdiv@f3& (0+255),b
  3025  00082A  0E00               	movlw	0
  3026  00082C  0100               	movlb	0	; () banked
  3027  00082E  6FBC               	movwf	(___ftdiv@f3+1)& (0+255),b
  3028  000830  0E00               	movlw	0
  3029  000832  0100               	movlb	0	; () banked
  3030  000834  6FBD               	movwf	(___ftdiv@f3+2)& (0+255),b
  3031                           
  3032                           ; BSR set to: 0
  3033  000836  0100               	movlb	0	; () banked
  3034  000838  51BF               	movf	___ftdiv@sign& (0+255),w,b
  3035  00083A  0F89               	addlw	137
  3036  00083C  0100               	movlb	0	; () banked
  3037  00083E  5FBE               	subwf	___ftdiv@exp& (0+255),f,b
  3038                           
  3039                           ; BSR set to: 0
  3040  000840  C0B3  F0BF         	movff	___ftdiv@f1+2,___ftdiv@sign
  3041                           
  3042                           ; BSR set to: 0
  3043  000844  0100               	movlb	0	; () banked
  3044  000846  51B6               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3045  000848  0100               	movlb	0	; () banked
  3046  00084A  1BBF               	xorwf	___ftdiv@sign& (0+255),f,b
  3047                           
  3048                           ; BSR set to: 0
  3049  00084C  0E80               	movlw	128
  3050  00084E  0100               	movlb	0	; () banked
  3051  000850  17BF               	andwf	___ftdiv@sign& (0+255),f,b
  3052                           
  3053                           ; BSR set to: 0
  3054  000852  0100               	movlb	0	; () banked
  3055  000854  8FB2               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  3056                           
  3057                           ; BSR set to: 0
  3058  000856  0EFF               	movlw	255
  3059  000858  0100               	movlb	0	; () banked
  3060  00085A  17B1               	andwf	___ftdiv@f1& (0+255),f,b
  3061  00085C  0EFF               	movlw	255
  3062  00085E  0100               	movlb	0	; () banked
  3063  000860  17B2               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  3064  000862  0E00               	movlw	0
  3065  000864  0100               	movlb	0	; () banked
  3066  000866  17B3               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  3067                           
  3068                           ; BSR set to: 0
  3069  000868  0100               	movlb	0	; () banked
  3070  00086A  8FB5               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  3071                           
  3072                           ; BSR set to: 0
  3073  00086C  0EFF               	movlw	255
  3074  00086E  0100               	movlb	0	; () banked
  3075  000870  17B4               	andwf	___ftdiv@f2& (0+255),f,b
  3076  000872  0EFF               	movlw	255
  3077  000874  0100               	movlb	0	; () banked
  3078  000876  17B5               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  3079  000878  0E00               	movlw	0
  3080  00087A  0100               	movlb	0	; () banked
  3081  00087C  17B6               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  3082                           
  3083                           ; BSR set to: 0
  3084  00087E  0E18               	movlw	24
  3085  000880  0100               	movlb	0	; () banked
  3086  000882  6FBA               	movwf	___ftdiv@cntr& (0+255),b
  3087  000884  D000               	goto	l3736
  3088  000886                     l3736:
  3089                           
  3090                           ; BSR set to: 0
  3091  000886  0100               	movlb	0	; () banked
  3092  000888  90D8               	bcf	status,0,c
  3093  00088A  37BB               	rlcf	___ftdiv@f3& (0+255),f,b
  3094  00088C  37BC               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  3095  00088E  37BD               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  3096                           
  3097                           ; BSR set to: 0
  3098  000890  0100               	movlb	0	; () banked
  3099  000892  51B4               	movf	___ftdiv@f2& (0+255),w,b
  3100  000894  0100               	movlb	0	; () banked
  3101  000896  5DB1               	subwf	___ftdiv@f1& (0+255),w,b
  3102  000898  0100               	movlb	0	; () banked
  3103  00089A  51B5               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3104  00089C  0100               	movlb	0	; () banked
  3105  00089E  59B2               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  3106  0008A0  0100               	movlb	0	; () banked
  3107  0008A2  51B6               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3108  0008A4  0100               	movlb	0	; () banked
  3109  0008A6  59B3               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  3110  0008A8  A0D8               	btfss	status,0,c
  3111  0008AA  D00E               	goto	l1076
  3112                           
  3113                           ; BSR set to: 0
  3114  0008AC  0100               	movlb	0	; () banked
  3115  0008AE  51B4               	movf	___ftdiv@f2& (0+255),w,b
  3116  0008B0  0100               	movlb	0	; () banked
  3117  0008B2  5FB1               	subwf	___ftdiv@f1& (0+255),f,b
  3118  0008B4  0100               	movlb	0	; () banked
  3119  0008B6  51B5               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3120  0008B8  0100               	movlb	0	; () banked
  3121  0008BA  5BB2               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  3122  0008BC  0100               	movlb	0	; () banked
  3123  0008BE  51B6               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3124  0008C0  0100               	movlb	0	; () banked
  3125  0008C2  5BB3               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  3126                           
  3127                           ; BSR set to: 0
  3128  0008C4  0100               	movlb	0	; () banked
  3129  0008C6  81BB               	bsf	___ftdiv@f3& (0+255),0,b
  3130  0008C8                     l1076:
  3131                           
  3132                           ; BSR set to: 0
  3133  0008C8  0100               	movlb	0	; () banked
  3134  0008CA  90D8               	bcf	status,0,c
  3135  0008CC  37B1               	rlcf	___ftdiv@f1& (0+255),f,b
  3136  0008CE  37B2               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  3137  0008D0  37B3               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  3138                           
  3139                           ; BSR set to: 0
  3140  0008D2  0100               	movlb	0	; () banked
  3141  0008D4  2FBA               	decfsz	___ftdiv@cntr& (0+255),f,b
  3142  0008D6  D7D7               	goto	l3736
  3143  0008D8  D000               	goto	l3746
  3144  0008DA                     l3746:
  3145                           
  3146                           ; BSR set to: 0
  3147  0008DA  C0BB  F019         	movff	___ftdiv@f3,___ftpack@arg
  3148  0008DE  C0BC  F01A         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3149  0008E2  C0BD  F01B         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3150  0008E6  C0BE  F01C         	movff	___ftdiv@exp,___ftpack@exp
  3151  0008EA  C0BF  F01D         	movff	___ftdiv@sign,___ftpack@sign
  3152  0008EE  EC35  F006         	call	___ftpack	;wreg free
  3153  0008F2  C019  F0B1         	movff	?___ftpack,?___ftdiv
  3154  0008F6  C01A  F0B2         	movff	?___ftpack+1,?___ftdiv+1
  3155  0008FA  C01B  F0B3         	movff	?___ftpack+2,?___ftdiv+2
  3156  0008FE  0012               	return	
  3157  000900  0012               	return		;funcret
  3158  000902                     __end_of___ftdiv:
  3159                           	opt stack 0
  3160                           tblptru	equ	0xFF8
  3161                           tblptrh	equ	0xFF7
  3162                           tblptrl	equ	0xFF6
  3163                           tablat	equ	0xFF5
  3164                           prodh	equ	0xFF4
  3165                           prodl	equ	0xFF3
  3166                           intcon	equ	0xFF2
  3167                           postinc0	equ	0xFEE
  3168                           wreg	equ	0xFE8
  3169                           postdec1	equ	0xFE5
  3170                           fsr1l	equ	0xFE1
  3171                           indf2	equ	0xFDF
  3172                           postinc2	equ	0xFDE
  3173                           fsr2h	equ	0xFDA
  3174                           fsr2l	equ	0xFD9
  3175                           status	equ	0xFD8
  3176                           
  3177 ;; *************** function ___ftpack *****************
  3178 ;; Defined at:
  3179 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;  arg             3   24[COMRAM] unsigned um
  3182 ;;  exp             1   27[COMRAM] unsigned char 
  3183 ;;  sign            1   28[COMRAM] unsigned char 
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;		None
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  3   24[COMRAM] float 
  3188 ;; Registers used:
  3189 ;;		wreg, status,2, status,0
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3195 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3197 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3198 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3199 ;;Total ram usage:        8 bytes
  3200 ;; Hardware stack levels used:    1
  3201 ;; Hardware stack levels required when called:    3
  3202 ;; This function calls:
  3203 ;;		Nothing
  3204 ;; This function is called by:
  3205 ;;		___ftdiv
  3206 ;;		___ftmul
  3207 ;;		___lwtoft
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           	psect	text20
  3212  000C6A                     __ptext20:
  3213                           	opt stack 0
  3214  000C6A                     ___ftpack:
  3215                           	opt stack 24
  3216                           
  3217                           ;incstack = 0
  3218  000C6A  501C               	movf	___ftpack@exp,w,c
  3219  000C6C  B4D8               	btfsc	status,2,c
  3220  000C6E  D005               	goto	l3618
  3221  000C70  5019               	movf	___ftpack@arg,w,c
  3222  000C72  101A               	iorwf	___ftpack@arg+1,w,c
  3223  000C74  101B               	iorwf	___ftpack@arg+2,w,c
  3224  000C76  A4D8               	btfss	status,2,c
  3225  000C78  D00E               	goto	l3624
  3226  000C7A                     l3618:
  3227  000C7A  0E00               	movlw	0
  3228  000C7C  6E19               	movwf	?___ftpack,c
  3229  000C7E  0E00               	movlw	0
  3230  000C80  6E1A               	movwf	?___ftpack+1,c
  3231  000C82  0E00               	movlw	0
  3232  000C84  6E1B               	movwf	?___ftpack+2,c
  3233  000C86  0012               	return	
  3234  000C88  D006               	goto	l3624
  3235  000C8A                     l3622:
  3236  000C8A  2A1C               	incf	___ftpack@exp,f,c
  3237  000C8C  90D8               	bcf	status,0,c
  3238  000C8E  321B               	rrcf	___ftpack@arg+2,f,c
  3239  000C90  321A               	rrcf	___ftpack@arg+1,f,c
  3240  000C92  3219               	rrcf	___ftpack@arg,f,c
  3241  000C94  D000               	goto	l3624
  3242  000C96                     l3624:
  3243  000C96  0E00               	movlw	0
  3244  000C98  1419               	andwf	___ftpack@arg,w,c
  3245  000C9A  6E1E               	movwf	??___ftpack& (0+255),c
  3246  000C9C  0E00               	movlw	0
  3247  000C9E  141A               	andwf	___ftpack@arg+1,w,c
  3248  000CA0  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  3249  000CA2  0EFE               	movlw	254
  3250  000CA4  141B               	andwf	___ftpack@arg+2,w,c
  3251  000CA6  6E20               	movwf	(??___ftpack+2)& (0+255),c
  3252  000CA8  501E               	movf	??___ftpack,w,c
  3253  000CAA  101F               	iorwf	??___ftpack+1,w,c
  3254  000CAC  1020               	iorwf	??___ftpack+2,w,c
  3255  000CAE  B4D8               	btfsc	status,2,c
  3256  000CB0  D00E               	goto	l3630
  3257  000CB2  D7EB               	goto	l3622
  3258  000CB4  D00C               	goto	l3630
  3259  000CB6                     l3626:
  3260  000CB6  2A1C               	incf	___ftpack@exp,f,c
  3261  000CB8  0E01               	movlw	1
  3262  000CBA  2619               	addwf	___ftpack@arg,f,c
  3263  000CBC  0E00               	movlw	0
  3264  000CBE  221A               	addwfc	___ftpack@arg+1,f,c
  3265  000CC0  0E00               	movlw	0
  3266  000CC2  221B               	addwfc	___ftpack@arg+2,f,c
  3267  000CC4  90D8               	bcf	status,0,c
  3268  000CC6  321B               	rrcf	___ftpack@arg+2,f,c
  3269  000CC8  321A               	rrcf	___ftpack@arg+1,f,c
  3270  000CCA  3219               	rrcf	___ftpack@arg,f,c
  3271  000CCC  D000               	goto	l3630
  3272  000CCE                     l3630:
  3273  000CCE  0E00               	movlw	0
  3274  000CD0  1419               	andwf	___ftpack@arg,w,c
  3275  000CD2  6E1E               	movwf	??___ftpack& (0+255),c
  3276  000CD4  0E00               	movlw	0
  3277  000CD6  141A               	andwf	___ftpack@arg+1,w,c
  3278  000CD8  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  3279  000CDA  0EFF               	movlw	255
  3280  000CDC  141B               	andwf	___ftpack@arg+2,w,c
  3281  000CDE  6E20               	movwf	(??___ftpack+2)& (0+255),c
  3282  000CE0  501E               	movf	??___ftpack,w,c
  3283  000CE2  101F               	iorwf	??___ftpack+1,w,c
  3284  000CE4  1020               	iorwf	??___ftpack+2,w,c
  3285  000CE6  B4D8               	btfsc	status,2,c
  3286  000CE8  D008               	goto	l3634
  3287  000CEA  D7E5               	goto	l3626
  3288  000CEC  D006               	goto	l3634
  3289  000CEE                     l3632:
  3290  000CEE  061C               	decf	___ftpack@exp,f,c
  3291  000CF0  90D8               	bcf	status,0,c
  3292  000CF2  3619               	rlcf	___ftpack@arg,f,c
  3293  000CF4  361A               	rlcf	___ftpack@arg+1,f,c
  3294  000CF6  361B               	rlcf	___ftpack@arg+2,f,c
  3295  000CF8  D000               	goto	l3634
  3296  000CFA                     l3634:
  3297  000CFA  BE1A               	btfsc	___ftpack@arg+1,7,c
  3298  000CFC  D004               	goto	l1012
  3299  000CFE  0E02               	movlw	2
  3300  000D00  601C               	cpfslt	___ftpack@exp,c
  3301  000D02  D7F5               	goto	l3632
  3302  000D04  D000               	goto	l1012
  3303  000D06                     l1012:
  3304  000D06  B01C               	btfsc	___ftpack@exp,0,c
  3305  000D08  D002               	goto	l3640
  3306  000D0A  9E1A               	bcf	___ftpack@arg+1,7,c
  3307  000D0C  D000               	goto	l3640
  3308  000D0E                     l3640:
  3309  000D0E  90D8               	bcf	status,0,c
  3310  000D10  321C               	rrcf	___ftpack@exp,f,c
  3311  000D12  501C               	movf	___ftpack@exp,w,c
  3312  000D14  121B               	iorwf	___ftpack@arg+2,f,c
  3313  000D16  501D               	movf	___ftpack@sign,w,c
  3314  000D18  B4D8               	btfsc	status,2,c
  3315  000D1A  D002               	goto	l3646
  3316  000D1C  8E1B               	bsf	___ftpack@arg+2,7,c
  3317  000D1E  D000               	goto	l3646
  3318  000D20                     l3646:
  3319  000D20  C019  F019         	movff	___ftpack@arg,?___ftpack
  3320  000D24  C01A  F01A         	movff	___ftpack@arg+1,?___ftpack+1
  3321  000D28  C01B  F01B         	movff	___ftpack@arg+2,?___ftpack+2
  3322  000D2C  0012               	return	
  3323  000D2E  0012               	return		;funcret
  3324  000D30                     __end_of___ftpack:
  3325                           	opt stack 0
  3326                           tblptru	equ	0xFF8
  3327                           tblptrh	equ	0xFF7
  3328                           tblptrl	equ	0xFF6
  3329                           tablat	equ	0xFF5
  3330                           prodh	equ	0xFF4
  3331                           prodl	equ	0xFF3
  3332                           intcon	equ	0xFF2
  3333                           postinc0	equ	0xFEE
  3334                           wreg	equ	0xFE8
  3335                           postdec1	equ	0xFE5
  3336                           fsr1l	equ	0xFE1
  3337                           indf2	equ	0xFDF
  3338                           postinc2	equ	0xFDE
  3339                           fsr2h	equ	0xFDA
  3340                           fsr2l	equ	0xFD9
  3341                           status	equ	0xFD8
  3342                           
  3343 ;; *************** function _ReadADC *****************
  3344 ;; Defined at:
  3345 ;;		line 24 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;		None
  3348 ;; Auto vars:     Size  Location     Type
  3349 ;;		None
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  2   24[COMRAM] int 
  3352 ;; Registers used:
  3353 ;;		wreg, status,2
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3359 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3361 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3362 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3363 ;;Total ram usage:        4 bytes
  3364 ;; Hardware stack levels used:    1
  3365 ;; Hardware stack levels required when called:    3
  3366 ;; This function calls:
  3367 ;;		Nothing
  3368 ;; This function is called by:
  3369 ;;		_GetADC6
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           
  3373                           	psect	text21
  3374  0017C6                     __ptext21:
  3375                           	opt stack 0
  3376  0017C6                     _ReadADC:
  3377                           	opt stack 25
  3378                           
  3379                           ;incstack = 0
  3380  0017C6  50C4               	movf	4036,w,c	;volatile
  3381  0017C8  6E1B               	movwf	??_ReadADC& (0+255),c
  3382  0017CA  50C3               	movf	4035,w,c	;volatile
  3383  0017CC  6E19               	movwf	?_ReadADC,c
  3384  0017CE  C01B  F01A         	movff	??_ReadADC,?_ReadADC+1
  3385  0017D2  0012               	return	
  3386  0017D4  0012               	return		;funcret
  3387  0017D6                     __end_of_ReadADC:
  3388                           	opt stack 0
  3389                           tblptru	equ	0xFF8
  3390                           tblptrh	equ	0xFF7
  3391                           tblptrl	equ	0xFF6
  3392                           tablat	equ	0xFF5
  3393                           prodh	equ	0xFF4
  3394                           prodl	equ	0xFF3
  3395                           intcon	equ	0xFF2
  3396                           postinc0	equ	0xFEE
  3397                           wreg	equ	0xFE8
  3398                           postdec1	equ	0xFE5
  3399                           fsr1l	equ	0xFE1
  3400                           indf2	equ	0xFDF
  3401                           postinc2	equ	0xFDE
  3402                           fsr2h	equ	0xFDA
  3403                           fsr2l	equ	0xFD9
  3404                           status	equ	0xFD8
  3405                           
  3406 ;; *************** function _ConvertADC *****************
  3407 ;; Defined at:
  3408 ;;		line 22 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;		None
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;		None
  3413 ;; Return value:  Size  Location     Type
  3414 ;;		None               void
  3415 ;; Registers used:
  3416 ;;		None
  3417 ;; Tracked objects:
  3418 ;;		On entry : 0/0
  3419 ;;		On exit  : 0/0
  3420 ;;		Unchanged: 0/0
  3421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3426 ;;Total ram usage:        0 bytes
  3427 ;; Hardware stack levels used:    1
  3428 ;; Hardware stack levels required when called:    3
  3429 ;; This function calls:
  3430 ;;		Nothing
  3431 ;; This function is called by:
  3432 ;;		_GetADC6
  3433 ;; This function uses a non-reentrant model
  3434 ;;
  3435                           
  3436                           	psect	text22
  3437  0017FE                     __ptext22:
  3438                           	opt stack 0
  3439  0017FE                     _ConvertADC:
  3440                           	opt stack 25
  3441                           
  3442                           ;incstack = 0
  3443  0017FE  82C2               	bsf	4034,1,c	;volatile
  3444  001800  0012               	return		;funcret
  3445  001802                     __end_of_ConvertADC:
  3446                           	opt stack 0
  3447                           tblptru	equ	0xFF8
  3448                           tblptrh	equ	0xFF7
  3449                           tblptrl	equ	0xFF6
  3450                           tablat	equ	0xFF5
  3451                           prodh	equ	0xFF4
  3452                           prodl	equ	0xFF3
  3453                           intcon	equ	0xFF2
  3454                           postinc0	equ	0xFEE
  3455                           wreg	equ	0xFE8
  3456                           postdec1	equ	0xFE5
  3457                           fsr1l	equ	0xFE1
  3458                           indf2	equ	0xFDF
  3459                           postinc2	equ	0xFDE
  3460                           fsr2h	equ	0xFDA
  3461                           fsr2l	equ	0xFD9
  3462                           status	equ	0xFD8
  3463                           
  3464 ;; *************** function _BusyADC *****************
  3465 ;; Defined at:
  3466 ;;		line 26 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  3467 ;; Parameters:    Size  Location     Type
  3468 ;;		None
  3469 ;; Auto vars:     Size  Location     Type
  3470 ;;		None
  3471 ;; Return value:  Size  Location     Type
  3472 ;;                  1    wreg      unsigned char 
  3473 ;; Registers used:
  3474 ;;		wreg
  3475 ;; Tracked objects:
  3476 ;;		On entry : 0/0
  3477 ;;		On exit  : 0/0
  3478 ;;		Unchanged: 0/0
  3479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3484 ;;Total ram usage:        0 bytes
  3485 ;; Hardware stack levels used:    1
  3486 ;; Hardware stack levels required when called:    3
  3487 ;; This function calls:
  3488 ;;		Nothing
  3489 ;; This function is called by:
  3490 ;;		_GetADC6
  3491 ;; This function uses a non-reentrant model
  3492 ;;
  3493                           
  3494                           	psect	text23
  3495  0017D6                     __ptext23:
  3496                           	opt stack 0
  3497  0017D6                     _BusyADC:
  3498                           	opt stack 25
  3499                           
  3500                           ;incstack = 0
  3501  0017D6  A2C2               	btfss	4034,1,c	;volatile
  3502  0017D8  D002               	goto	u2360
  3503  0017DA  0E01               	movlw	1
  3504  0017DC  0012               	return	
  3505  0017DE                     u2360:
  3506  0017DE  0E00               	movlw	0
  3507  0017E0  0012               	return	
  3508  0017E2  0012               	return		;funcret
  3509  0017E4                     __end_of_BusyADC:
  3510                           	opt stack 0
  3511                           tblptru	equ	0xFF8
  3512                           tblptrh	equ	0xFF7
  3513                           tblptrl	equ	0xFF6
  3514                           tablat	equ	0xFF5
  3515                           prodh	equ	0xFF4
  3516                           prodl	equ	0xFF3
  3517                           intcon	equ	0xFF2
  3518                           postinc0	equ	0xFEE
  3519                           wreg	equ	0xFE8
  3520                           postdec1	equ	0xFE5
  3521                           fsr1l	equ	0xFE1
  3522                           indf2	equ	0xFDF
  3523                           postinc2	equ	0xFDE
  3524                           fsr2h	equ	0xFDA
  3525                           fsr2l	equ	0xFD9
  3526                           status	equ	0xFD8
  3527                           
  3528 ;; *************** function _Relay_Init *****************
  3529 ;; Defined at:
  3530 ;;		line 39 in file "_01_USER/Relay.c"
  3531 ;; Parameters:    Size  Location     Type
  3532 ;;		None
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;		None
  3535 ;; Return value:  Size  Location     Type
  3536 ;;		None               void
  3537 ;; Registers used:
  3538 ;;		None
  3539 ;; Tracked objects:
  3540 ;;		On entry : 0/0
  3541 ;;		On exit  : 0/0
  3542 ;;		Unchanged: 0/0
  3543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3548 ;;Total ram usage:        0 bytes
  3549 ;; Hardware stack levels used:    1
  3550 ;; Hardware stack levels required when called:    3
  3551 ;; This function calls:
  3552 ;;		Nothing
  3553 ;; This function is called by:
  3554 ;;		_main
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           	psect	text24
  3559  0017E4                     __ptext24:
  3560                           	opt stack 0
  3561  0017E4                     _Relay_Init:
  3562                           	opt stack 27
  3563                           
  3564                           ;Relay.c: 42: TRISD0 = 0;
  3565                           
  3566                           ;incstack = 0
  3567  0017E4  9095               	bcf	3989,0,c	;volatile
  3568                           
  3569                           ;Relay.c: 43: TRISD1 = 0;
  3570  0017E6  9295               	bcf	3989,1,c	;volatile
  3571                           
  3572                           ;Relay.c: 44: TRISD2 = 0;
  3573  0017E8  9495               	bcf	3989,2,c	;volatile
  3574                           
  3575                           ;Relay.c: 45: TRISD3 = 0;
  3576  0017EA  9695               	bcf	3989,3,c	;volatile
  3577                           
  3578                           ;Relay.c: 46: TRISD4 = 0;
  3579  0017EC  9895               	bcf	3989,4,c	;volatile
  3580                           
  3581                           ;Relay.c: 47: TRISD7 = 0;
  3582  0017EE  9E95               	bcf	3989,7,c	;volatile
  3583  0017F0  0012               	return		;funcret
  3584  0017F2                     __end_of_Relay_Init:
  3585                           	opt stack 0
  3586                           tblptru	equ	0xFF8
  3587                           tblptrh	equ	0xFF7
  3588                           tblptrl	equ	0xFF6
  3589                           tablat	equ	0xFF5
  3590                           prodh	equ	0xFF4
  3591                           prodl	equ	0xFF3
  3592                           intcon	equ	0xFF2
  3593                           postinc0	equ	0xFEE
  3594                           wreg	equ	0xFE8
  3595                           postdec1	equ	0xFE5
  3596                           fsr1l	equ	0xFE1
  3597                           indf2	equ	0xFDF
  3598                           postinc2	equ	0xFDE
  3599                           fsr2h	equ	0xFDA
  3600                           fsr2l	equ	0xFD9
  3601                           status	equ	0xFD8
  3602                           
  3603 ;; *************** function _RS485_Init *****************
  3604 ;; Defined at:
  3605 ;;		line 47 in file "_01_USER/My_USART.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;		None
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;		None
  3610 ;; Return value:  Size  Location     Type
  3611 ;;		None               void
  3612 ;; Registers used:
  3613 ;;		wreg, status,2, cstack
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3623 ;;Total ram usage:        0 bytes
  3624 ;; Hardware stack levels used:    1
  3625 ;; Hardware stack levels required when called:    4
  3626 ;; This function calls:
  3627 ;;		_Open1USART
  3628 ;; This function is called by:
  3629 ;;		_main
  3630 ;; This function uses a non-reentrant model
  3631 ;;
  3632                           
  3633                           	psect	text25
  3634  00178C                     __ptext25:
  3635                           	opt stack 0
  3636  00178C                     _RS485_Init:
  3637                           	opt stack 26
  3638                           
  3639                           ;My_USART.c: 49: Open1USART( 0b01111111 &
  3640                           ;My_USART.c: 50: 0b11111111 &
  3641                           ;My_USART.c: 51: 0b11111110 &
  3642                           ;My_USART.c: 52: 0b11111101 &
  3643                           ;My_USART.c: 53: 0b11111111 &
  3644                           ;My_USART.c: 54: 0b11101111
  3645                           ;My_USART.c: 55: ,
  3646                           ;My_USART.c: 56: 12
  3647                           ;My_USART.c: 57: );
  3648                           
  3649                           ;incstack = 0
  3650  00178C  0E00               	movlw	0
  3651  00178E  6E1A               	movwf	Open1USART@spbrg+1,c
  3652  001790  0E0C               	movlw	12
  3653  001792  6E19               	movwf	Open1USART@spbrg,c
  3654  001794  0E6C               	movlw	108
  3655  001796  ECA2  F008         	call	_Open1USART
  3656                           
  3657                           ;My_USART.c: 59: TRISC7 = 1;
  3658  00179A  8E94               	bsf	3988,7,c	;volatile
  3659                           
  3660                           ;My_USART.c: 60: TRISC6 = 0;
  3661  00179C  9C94               	bcf	3988,6,c	;volatile
  3662                           
  3663                           ;My_USART.c: 61: TRISC0 = 0;
  3664  00179E  9094               	bcf	3988,0,c	;volatile
  3665                           
  3666                           ;My_USART.c: 62: RC0 = 1;
  3667  0017A0  8082               	bsf	3970,0,c	;volatile
  3668  0017A2  0012               	return		;funcret
  3669  0017A4                     __end_of_RS485_Init:
  3670                           	opt stack 0
  3671                           tblptru	equ	0xFF8
  3672                           tblptrh	equ	0xFF7
  3673                           tblptrl	equ	0xFF6
  3674                           tablat	equ	0xFF5
  3675                           prodh	equ	0xFF4
  3676                           prodl	equ	0xFF3
  3677                           intcon	equ	0xFF2
  3678                           postinc0	equ	0xFEE
  3679                           wreg	equ	0xFE8
  3680                           postdec1	equ	0xFE5
  3681                           fsr1l	equ	0xFE1
  3682                           indf2	equ	0xFDF
  3683                           postinc2	equ	0xFDE
  3684                           fsr2h	equ	0xFDA
  3685                           fsr2l	equ	0xFD9
  3686                           status	equ	0xFD8
  3687                           
  3688 ;; *************** function _Open1USART *****************
  3689 ;; Defined at:
  3690 ;;		line 124 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1open.c"
  3691 ;; Parameters:    Size  Location     Type
  3692 ;;  config          1    wreg     unsigned char 
  3693 ;;  spbrg           2   24[COMRAM] unsigned int 
  3694 ;; Auto vars:     Size  Location     Type
  3695 ;;  config          1   26[COMRAM] unsigned char 
  3696 ;; Return value:  Size  Location     Type
  3697 ;;		None               void
  3698 ;; Registers used:
  3699 ;;		wreg, status,2
  3700 ;; Tracked objects:
  3701 ;;		On entry : 0/0
  3702 ;;		On exit  : 0/0
  3703 ;;		Unchanged: 0/0
  3704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3705 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3706 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3708 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3709 ;;Total ram usage:        3 bytes
  3710 ;; Hardware stack levels used:    1
  3711 ;; Hardware stack levels required when called:    3
  3712 ;; This function calls:
  3713 ;;		Nothing
  3714 ;; This function is called by:
  3715 ;;		_RS485_Init
  3716 ;; This function uses a non-reentrant model
  3717 ;;
  3718                           
  3719                           	psect	text26
  3720  001144                     __ptext26:
  3721                           	opt stack 0
  3722  001144                     _Open1USART:
  3723                           	opt stack 26
  3724                           
  3725                           ;incstack = 0
  3726                           ;Open1USART@config stored from wreg
  3727  001144  6E1B               	movwf	Open1USART@config,c
  3728  001146  0E00               	movlw	0
  3729  001148  6EAC               	movwf	4012,c	;volatile
  3730  00114A  0E00               	movlw	0
  3731  00114C  6EAB               	movwf	4011,c	;volatile
  3732  00114E  A01B               	btfss	Open1USART@config,0,c
  3733  001150  D002               	goto	l2912
  3734  001152  88AC               	bsf	4012,4,c	;volatile
  3735  001154  D000               	goto	l2912
  3736  001156                     l2912:
  3737  001156  A21B               	btfss	Open1USART@config,1,c
  3738  001158  D003               	goto	l2916
  3739  00115A  8CAC               	bsf	4012,6,c	;volatile
  3740  00115C  8CAB               	bsf	4011,6,c	;volatile
  3741  00115E  D000               	goto	l2916
  3742  001160                     l2916:
  3743  001160  A41B               	btfss	Open1USART@config,2,c
  3744  001162  D002               	goto	l2920
  3745  001164  8EAC               	bsf	4012,7,c	;volatile
  3746  001166  D000               	goto	l2920
  3747  001168                     l2920:
  3748  001168  A61B               	btfss	Open1USART@config,3,c
  3749  00116A  D002               	goto	l682
  3750  00116C  88AB               	bsf	4011,4,c	;volatile
  3751  00116E  D002               	goto	l2924
  3752  001170                     l682:
  3753  001170  8AAB               	bsf	4011,5,c	;volatile
  3754  001172  D000               	goto	l2924
  3755  001174                     l2924:
  3756  001174  A81B               	btfss	Open1USART@config,4,c
  3757  001176  D002               	goto	l2928
  3758  001178  84AC               	bsf	4012,2,c	;volatile
  3759  00117A  D000               	goto	l2928
  3760  00117C                     l2928:
  3761  00117C  AA1B               	btfss	Open1USART@config,5,c
  3762  00117E  D002               	goto	l2932
  3763  001180  86AB               	bsf	4011,3,c	;volatile
  3764  001182  D000               	goto	l2932
  3765  001184                     l2932:
  3766  001184  AC1B               	btfss	Open1USART@config,6,c
  3767  001186  D002               	goto	l686
  3768  001188  8A9D               	bsf	3997,5,c	;volatile
  3769  00118A  D002               	goto	l2936
  3770  00118C                     l686:
  3771  00118C  9A9D               	bcf	3997,5,c	;volatile
  3772  00118E  D000               	goto	l2936
  3773  001190                     l2936:
  3774  001190  AE1B               	btfss	Open1USART@config,7,c
  3775  001192  D002               	goto	l688
  3776  001194  889D               	bsf	3997,4,c	;volatile
  3777  001196  D001               	goto	l689
  3778  001198                     l688:
  3779  001198  989D               	bcf	3997,4,c	;volatile
  3780  00119A                     l689:
  3781  00119A  C019  FFAF         	movff	Open1USART@spbrg,4015	;volatile
  3782  00119E  501A               	movf	Open1USART@spbrg+1,w,c
  3783  0011A0  6ED4               	movwf	4052,c	;volatile
  3784  0011A2  8AAC               	bsf	4012,5,c	;volatile
  3785  0011A4  8EAB               	bsf	4011,7,c	;volatile
  3786  0011A6  0012               	return		;funcret
  3787  0011A8                     __end_of_Open1USART:
  3788                           	opt stack 0
  3789                           tblptru	equ	0xFF8
  3790                           tblptrh	equ	0xFF7
  3791                           tblptrl	equ	0xFF6
  3792                           tablat	equ	0xFF5
  3793                           prodh	equ	0xFF4
  3794                           prodl	equ	0xFF3
  3795                           intcon	equ	0xFF2
  3796                           postinc0	equ	0xFEE
  3797                           wreg	equ	0xFE8
  3798                           postdec1	equ	0xFE5
  3799                           fsr1l	equ	0xFE1
  3800                           indf2	equ	0xFDF
  3801                           postinc2	equ	0xFDE
  3802                           fsr2h	equ	0xFDA
  3803                           fsr2l	equ	0xFD9
  3804                           status	equ	0xFD8
  3805                           
  3806 ;; *************** function _ManageMessage *****************
  3807 ;; Defined at:
  3808 ;;		line 51 in file "_01_USER/Run.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;		None
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;		None
  3813 ;; Return value:  Size  Location     Type
  3814 ;;		None               void
  3815 ;; Registers used:
  3816 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3817 ;; Tracked objects:
  3818 ;;		On entry : 0/0
  3819 ;;		On exit  : 0/0
  3820 ;;		Unchanged: 0/0
  3821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3826 ;;Total ram usage:        0 bytes
  3827 ;; Hardware stack levels used:    1
  3828 ;; Hardware stack levels required when called:    6
  3829 ;; This function calls:
  3830 ;;		_Key_ManageMessage
  3831 ;;		_RS485_ManageMessage
  3832 ;; This function is called by:
  3833 ;;		_main
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837                           	psect	text27
  3838  00173C                     __ptext27:
  3839                           	opt stack 0
  3840  00173C                     _ManageMessage:
  3841                           	opt stack 24
  3842                           
  3843                           ;Run.c: 53: Key_ManageMessage();
  3844                           
  3845                           ;incstack = 0
  3846  00173C  EC19  F003         	call	_Key_ManageMessage	;wreg free
  3847                           
  3848                           ;Run.c: 54: RS485_ManageMessage(ga_RS485_ReceiveBuff,10);
  3849  001740  0E97               	movlw	low _ga_RS485_ReceiveBuff
  3850  001742  0100               	movlb	0	; () banked
  3851  001744  6FB0               	movwf	RS485_ManageMessage@DataBuff& (0+255),b
  3852  001746  0E00               	movlw	high _ga_RS485_ReceiveBuff
  3853  001748  0100               	movlb	0	; () banked
  3854  00174A  6FB1               	movwf	(RS485_ManageMessage@DataBuff+1)& (0+255),b
  3855  00174C  0E0A               	movlw	10
  3856  00174E  0100               	movlb	0	; () banked
  3857  001750  6FB2               	movwf	RS485_ManageMessage@date_lenth& (0+255),b
  3858  001752  ECD3  F000         	call	_RS485_ManageMessage	;wreg free
  3859  001756  0012               	return		;funcret
  3860  001758                     __end_of_ManageMessage:
  3861                           	opt stack 0
  3862                           tblptru	equ	0xFF8
  3863                           tblptrh	equ	0xFF7
  3864                           tblptrl	equ	0xFF6
  3865                           tablat	equ	0xFF5
  3866                           prodh	equ	0xFF4
  3867                           prodl	equ	0xFF3
  3868                           intcon	equ	0xFF2
  3869                           postinc0	equ	0xFEE
  3870                           wreg	equ	0xFE8
  3871                           postdec1	equ	0xFE5
  3872                           fsr1l	equ	0xFE1
  3873                           indf2	equ	0xFDF
  3874                           postinc2	equ	0xFDE
  3875                           fsr2h	equ	0xFDA
  3876                           fsr2l	equ	0xFD9
  3877                           status	equ	0xFD8
  3878                           
  3879 ;; *************** function _RS485_ManageMessage *****************
  3880 ;; Defined at:
  3881 ;;		line 114 in file "_01_USER/My_USART.c"
  3882 ;; Parameters:    Size  Location     Type
  3883 ;;  DataBuff        2    5[BANK0 ] PTR unsigned char 
  3884 ;;		 -> ga_RS485_ReceiveBuff(10), 
  3885 ;;  date_lenth      1    7[BANK0 ] unsigned char 
  3886 ;; Auto vars:     Size  Location     Type
  3887 ;;  from_dress      1   15[BANK0 ] unsigned char 
  3888 ;;  CRC_L           1   14[BANK0 ] unsigned char 
  3889 ;;  CRC_H           1   13[BANK0 ] unsigned char 
  3890 ;; Return value:  Size  Location     Type
  3891 ;;                  1    wreg      unsigned char 
  3892 ;; Registers used:
  3893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3894 ;; Tracked objects:
  3895 ;;		On entry : 0/0
  3896 ;;		On exit  : 0/0
  3897 ;;		Unchanged: 0/0
  3898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3899 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3900 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3901 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3902 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3903 ;;Total ram usage:       11 bytes
  3904 ;; Hardware stack levels used:    1
  3905 ;; Hardware stack levels required when called:    5
  3906 ;; This function calls:
  3907 ;;		_VerifyCRC
  3908 ;; This function is called by:
  3909 ;;		_ManageMessage
  3910 ;;		_RS485_ReceiveMessage
  3911 ;; This function uses a non-reentrant model
  3912 ;;
  3913                           
  3914                           	psect	text28
  3915  0001A6                     __ptext28:
  3916                           	opt stack 0
  3917  0001A6                     _RS485_ManageMessage:
  3918                           	opt stack 24
  3919                           
  3920                           ;My_USART.c: 116: unsigned char CRC_H,CRC_L,from_dress;
  3921                           ;My_USART.c: 117: if( g_RS485_Receive_Flag == 1 )
  3922                           
  3923                           ;incstack = 0
  3924  0001A6  043F               	decf	_g_RS485_Receive_Flag,w,c
  3925  0001A8  A4D8               	btfss	status,2,c
  3926  0001AA  0012               	return	
  3927                           
  3928                           ;My_USART.c: 118: {
  3929                           ;My_USART.c: 121: if( DataBuff [date_lenth-1] != 0xaa) { g_RS485_Receive_Flag = 0; retur
      +                          n 1;}
  3930  0001AC  0EFF               	movlw	255
  3931  0001AE  0100               	movlb	0	; () banked
  3932  0001B0  6FB3               	movwf	??_RS485_ManageMessage& (0+255),b
  3933  0001B2  0EFF               	movlw	255
  3934  0001B4  0100               	movlb	0	; () banked
  3935  0001B6  6FB4               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  3936  0001B8  0100               	movlb	0	; () banked
  3937  0001BA  51B2               	movf	RS485_ManageMessage@date_lenth& (0+255),w,b
  3938  0001BC  0100               	movlb	0	; () banked
  3939  0001BE  6FB5               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  3940  0001C0  6BB6               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  3941  0001C2  0100               	movlb	0	; () banked
  3942  0001C4  51B3               	movf	??_RS485_ManageMessage& (0+255),w,b
  3943  0001C6  0100               	movlb	0	; () banked
  3944  0001C8  27B5               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  3945  0001CA  0100               	movlb	0	; () banked
  3946  0001CC  51B4               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  3947  0001CE  0100               	movlb	0	; () banked
  3948  0001D0  23B6               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  3949  0001D2  0100               	movlb	0	; () banked
  3950  0001D4  51B5               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  3951  0001D6  0100               	movlb	0	; () banked
  3952  0001D8  25B0               	addwf	RS485_ManageMessage@DataBuff& (0+255),w,b
  3953  0001DA  6ED9               	movwf	fsr2l,c
  3954  0001DC  0100               	movlb	0	; () banked
  3955  0001DE  51B6               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  3956  0001E0  0100               	movlb	0	; () banked
  3957  0001E2  21B1               	addwfc	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  3958  0001E4  6EDA               	movwf	fsr2h,c
  3959  0001E6  0EAA               	movlw	170
  3960  0001E8  18DE               	xorwf	postinc2,w,c
  3961  0001EA  B4D8               	btfsc	status,2,c
  3962  0001EC  D003               	goto	l3822
  3963                           
  3964                           ; BSR set to: 0
  3965  0001EE  0E00               	movlw	0
  3966  0001F0  6E3F               	movwf	_g_RS485_Receive_Flag,c
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;	Return value of _RS485_ManageMessage is never used
  3970  0001F2  0012               	return	
  3971  0001F4                     l3822:
  3972                           
  3973                           ; BSR set to: 0
  3974                           ;My_USART.c: 124: CRC_H = DataBuff[1];
  3975  0001F4  0100               	movlb	0	; () banked
  3976  0001F6  EE20 F001          	lfsr	2,1
  3977  0001FA  51B0               	movf	RS485_ManageMessage@DataBuff& (0+255),w,b
  3978  0001FC  26D9               	addwf	fsr2l,f,c
  3979  0001FE  51B1               	movf	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  3980  000200  22DA               	addwfc	fsr2h,f,c
  3981  000202  50DF               	movf	indf2,w,c
  3982  000204  0100               	movlb	0	; () banked
  3983  000206  6FB8               	movwf	RS485_ManageMessage@CRC_H& (0+255),b
  3984                           
  3985                           ; BSR set to: 0
  3986                           ;My_USART.c: 125: CRC_L = DataBuff[0];
  3987  000208  C0B0  FFD9         	movff	RS485_ManageMessage@DataBuff,fsr2l
  3988  00020C  C0B1  FFDA         	movff	RS485_ManageMessage@DataBuff+1,fsr2h
  3989  000210  50DF               	movf	indf2,w,c
  3990  000212  0100               	movlb	0	; () banked
  3991  000214  6FB9               	movwf	RS485_ManageMessage@CRC_L& (0+255),b
  3992                           
  3993                           ; BSR set to: 0
  3994                           ;My_USART.c: 126: VerifyCRC(DataBuff,10);
  3995  000216  C0B0  F026         	movff	RS485_ManageMessage@DataBuff,VerifyCRC@DataBuff
  3996  00021A  C0B1  F027         	movff	RS485_ManageMessage@DataBuff+1,VerifyCRC@DataBuff+1
  3997  00021E  0E0A               	movlw	10
  3998  000220  6E28               	movwf	VerifyCRC@date_lenth,c
  3999  000222  EC81  F004         	call	_VerifyCRC	;wreg free
  4000                           
  4001                           ;My_USART.c: 127: if( DataBuff[1] != CRC_H ) { g_RS485_Receive_Flag = 0; return 2 ;}
  4002  000226  0100               	movlb	0	; () banked
  4003  000228  EE20 F001          	lfsr	2,1
  4004  00022C  51B0               	movf	RS485_ManageMessage@DataBuff& (0+255),w,b
  4005  00022E  26D9               	addwf	fsr2l,f,c
  4006  000230  51B1               	movf	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  4007  000232  22DA               	addwfc	fsr2h,f,c
  4008  000234  0100               	movlb	0	; () banked
  4009  000236  51B8               	movf	RS485_ManageMessage@CRC_H& (0+255),w,b
  4010  000238  18DE               	xorwf	postinc2,w,c
  4011  00023A  B4D8               	btfsc	status,2,c
  4012  00023C  D003               	goto	l3834
  4013                           
  4014                           ; BSR set to: 0
  4015  00023E  0E00               	movlw	0
  4016  000240  6E3F               	movwf	_g_RS485_Receive_Flag,c
  4017                           
  4018                           ; BSR set to: 0
  4019                           ;	Return value of _RS485_ManageMessage is never used
  4020  000242  0012               	return	
  4021  000244                     l3834:
  4022                           
  4023                           ; BSR set to: 0
  4024                           ;My_USART.c: 128: if( DataBuff[0] != CRC_L ) { g_RS485_Receive_Flag = 0; return 2 ;}
  4025  000244  C0B0  FFD9         	movff	RS485_ManageMessage@DataBuff,fsr2l
  4026  000248  C0B1  FFDA         	movff	RS485_ManageMessage@DataBuff+1,fsr2h
  4027  00024C  0100               	movlb	0	; () banked
  4028  00024E  51B9               	movf	RS485_ManageMessage@CRC_L& (0+255),w,b
  4029  000250  18DE               	xorwf	postinc2,w,c
  4030  000252  B4D8               	btfsc	status,2,c
  4031  000254  D003               	goto	l3840
  4032                           
  4033                           ; BSR set to: 0
  4034  000256  0E00               	movlw	0
  4035  000258  6E3F               	movwf	_g_RS485_Receive_Flag,c
  4036                           
  4037                           ; BSR set to: 0
  4038                           ;	Return value of _RS485_ManageMessage is never used
  4039  00025A  0012               	return	
  4040  00025C                     l3840:
  4041                           
  4042                           ; BSR set to: 0
  4043                           ;My_USART.c: 131: if( ( DataBuff[date_lenth - 2] != Address_Master ) && ( DataBuff[date_
      +                          lenth - 2] != Address_All) ) { g_RS485_Receive_Flag = 0; return 3;}
  4044  00025C  0EFE               	movlw	254
  4045  00025E  0100               	movlb	0	; () banked
  4046  000260  6FB3               	movwf	??_RS485_ManageMessage& (0+255),b
  4047  000262  0EFF               	movlw	255
  4048  000264  0100               	movlb	0	; () banked
  4049  000266  6FB4               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  4050  000268  0100               	movlb	0	; () banked
  4051  00026A  51B2               	movf	RS485_ManageMessage@date_lenth& (0+255),w,b
  4052  00026C  0100               	movlb	0	; () banked
  4053  00026E  6FB5               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  4054  000270  6BB6               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  4055  000272  0100               	movlb	0	; () banked
  4056  000274  51B3               	movf	??_RS485_ManageMessage& (0+255),w,b
  4057  000276  0100               	movlb	0	; () banked
  4058  000278  27B5               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  4059  00027A  0100               	movlb	0	; () banked
  4060  00027C  51B4               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  4061  00027E  0100               	movlb	0	; () banked
  4062  000280  23B6               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  4063  000282  0100               	movlb	0	; () banked
  4064  000284  51B5               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  4065  000286  0100               	movlb	0	; () banked
  4066  000288  25B0               	addwf	RS485_ManageMessage@DataBuff& (0+255),w,b
  4067  00028A  6ED9               	movwf	fsr2l,c
  4068  00028C  0100               	movlb	0	; () banked
  4069  00028E  51B6               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  4070  000290  0100               	movlb	0	; () banked
  4071  000292  21B1               	addwfc	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  4072  000294  6EDA               	movwf	fsr2h,c
  4073  000296  04DE               	decf	postinc2,w,c
  4074  000298  B4D8               	btfsc	status,2,c
  4075  00029A  D023               	goto	l3848
  4076                           
  4077                           ; BSR set to: 0
  4078  00029C  0EFE               	movlw	254
  4079  00029E  0100               	movlb	0	; () banked
  4080  0002A0  6FB3               	movwf	??_RS485_ManageMessage& (0+255),b
  4081  0002A2  0EFF               	movlw	255
  4082  0002A4  0100               	movlb	0	; () banked
  4083  0002A6  6FB4               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  4084  0002A8  0100               	movlb	0	; () banked
  4085  0002AA  51B2               	movf	RS485_ManageMessage@date_lenth& (0+255),w,b
  4086  0002AC  0100               	movlb	0	; () banked
  4087  0002AE  6FB5               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  4088  0002B0  6BB6               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  4089  0002B2  0100               	movlb	0	; () banked
  4090  0002B4  51B3               	movf	??_RS485_ManageMessage& (0+255),w,b
  4091  0002B6  0100               	movlb	0	; () banked
  4092  0002B8  27B5               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  4093  0002BA  0100               	movlb	0	; () banked
  4094  0002BC  51B4               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  4095  0002BE  0100               	movlb	0	; () banked
  4096  0002C0  23B6               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  4097  0002C2  0100               	movlb	0	; () banked
  4098  0002C4  51B5               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  4099  0002C6  0100               	movlb	0	; () banked
  4100  0002C8  25B0               	addwf	RS485_ManageMessage@DataBuff& (0+255),w,b
  4101  0002CA  6ED9               	movwf	fsr2l,c
  4102  0002CC  0100               	movlb	0	; () banked
  4103  0002CE  51B6               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  4104  0002D0  0100               	movlb	0	; () banked
  4105  0002D2  21B1               	addwfc	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  4106  0002D4  6EDA               	movwf	fsr2h,c
  4107  0002D6  50DF               	movf	indf2,w,c
  4108  0002D8  B4D8               	btfsc	status,2,c
  4109  0002DA  D003               	goto	l3848
  4110                           
  4111                           ; BSR set to: 0
  4112  0002DC  0E00               	movlw	0
  4113  0002DE  6E3F               	movwf	_g_RS485_Receive_Flag,c
  4114                           
  4115                           ; BSR set to: 0
  4116                           ;	Return value of _RS485_ManageMessage is never used
  4117  0002E0  0012               	return	
  4118  0002E2                     l3848:
  4119                           
  4120                           ; BSR set to: 0
  4121                           ;My_USART.c: 134: from_dress = DataBuff[date_lenth - 3];
  4122  0002E2  0EFD               	movlw	253
  4123  0002E4  0100               	movlb	0	; () banked
  4124  0002E6  6FB3               	movwf	??_RS485_ManageMessage& (0+255),b
  4125  0002E8  0EFF               	movlw	255
  4126  0002EA  0100               	movlb	0	; () banked
  4127  0002EC  6FB4               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  4128  0002EE  0100               	movlb	0	; () banked
  4129  0002F0  51B2               	movf	RS485_ManageMessage@date_lenth& (0+255),w,b
  4130  0002F2  0100               	movlb	0	; () banked
  4131  0002F4  6FB5               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  4132  0002F6  6BB6               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  4133  0002F8  0100               	movlb	0	; () banked
  4134  0002FA  51B3               	movf	??_RS485_ManageMessage& (0+255),w,b
  4135  0002FC  0100               	movlb	0	; () banked
  4136  0002FE  27B5               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  4137  000300  0100               	movlb	0	; () banked
  4138  000302  51B4               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  4139  000304  0100               	movlb	0	; () banked
  4140  000306  23B6               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  4141  000308  0100               	movlb	0	; () banked
  4142  00030A  51B5               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  4143  00030C  0100               	movlb	0	; () banked
  4144  00030E  25B0               	addwf	RS485_ManageMessage@DataBuff& (0+255),w,b
  4145  000310  6ED9               	movwf	fsr2l,c
  4146  000312  0100               	movlb	0	; () banked
  4147  000314  51B6               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  4148  000316  0100               	movlb	0	; () banked
  4149  000318  21B1               	addwfc	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  4150  00031A  6EDA               	movwf	fsr2h,c
  4151  00031C  50DF               	movf	indf2,w,c
  4152  00031E  0100               	movlb	0	; () banked
  4153  000320  6FBA               	movwf	RS485_ManageMessage@from_dress& (0+255),b
  4154                           
  4155                           ; BSR set to: 0
  4156                           ;My_USART.c: 135: if( from_dress < 0x10 ) gsa_Msg[from_dress].Hardware_Type = Type_HANDL
      +                          E;
  4157  000322  0E10               	movlw	16
  4158  000324  0100               	movlb	0	; () banked
  4159  000326  61BA               	cpfslt	RS485_ManageMessage@from_dress& (0+255),b
  4160  000328  D00F               	goto	l3854
  4161                           
  4162                           ; BSR set to: 0
  4163  00032A  0100               	movlb	0	; () banked
  4164  00032C  51BA               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  4165  00032E  0D07               	mullw	7
  4166  000330  0E05               	movlw	5
  4167  000332  26F3               	addwf	prodl,f,c
  4168  000334  0E00               	movlw	0
  4169  000336  22F4               	addwfc	prodh,f,c
  4170  000338  0E00               	movlw	low _gsa_Msg
  4171  00033A  24F3               	addwf	prodl,w,c
  4172  00033C  6ED9               	movwf	fsr2l,c
  4173  00033E  0E01               	movlw	high _gsa_Msg
  4174  000340  20F4               	addwfc	prodh,w,c
  4175  000342  6EDA               	movwf	fsr2h,c
  4176  000344  0E00               	movlw	0
  4177  000346  D025               	goto	L5
  4178  000348                     l3854:
  4179                           
  4180                           ; BSR set to: 0
  4181                           ;My_USART.c: 136: else if( from_dress < 0x20 ) gsa_Msg[from_dress].Hardware_Type = Type_
      +                          MASTER;
  4182  000348  0E20               	movlw	32
  4183  00034A  0100               	movlb	0	; () banked
  4184  00034C  61BA               	cpfslt	RS485_ManageMessage@from_dress& (0+255),b
  4185  00034E  D00F               	goto	l3858
  4186                           
  4187                           ; BSR set to: 0
  4188  000350  0100               	movlb	0	; () banked
  4189  000352  51BA               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  4190  000354  0D07               	mullw	7
  4191  000356  0E05               	movlw	5
  4192  000358  26F3               	addwf	prodl,f,c
  4193  00035A  0E00               	movlw	0
  4194  00035C  22F4               	addwfc	prodh,f,c
  4195  00035E  0E00               	movlw	low _gsa_Msg
  4196  000360  24F3               	addwf	prodl,w,c
  4197  000362  6ED9               	movwf	fsr2l,c
  4198  000364  0E01               	movlw	high _gsa_Msg
  4199  000366  20F4               	addwfc	prodh,w,c
  4200  000368  6EDA               	movwf	fsr2h,c
  4201  00036A  0E01               	movlw	1
  4202  00036C  D012               	goto	L5
  4203  00036E                     l3858:
  4204                           
  4205                           ; BSR set to: 0
  4206                           ;My_USART.c: 137: else if( from_dress < 0x30 ) gsa_Msg[from_dress].Hardware_Type = Type_
      +                          SENSOR;
  4207  00036E  0E30               	movlw	48
  4208  000370  0100               	movlb	0	; () banked
  4209  000372  61BA               	cpfslt	RS485_ManageMessage@from_dress& (0+255),b
  4210  000374  D010               	goto	l3862
  4211                           
  4212                           ; BSR set to: 0
  4213  000376  0100               	movlb	0	; () banked
  4214  000378  51BA               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  4215  00037A  0D07               	mullw	7
  4216  00037C  0E05               	movlw	5
  4217  00037E  26F3               	addwf	prodl,f,c
  4218  000380  0E00               	movlw	0
  4219  000382  22F4               	addwfc	prodh,f,c
  4220  000384  0E00               	movlw	low _gsa_Msg
  4221  000386  24F3               	addwf	prodl,w,c
  4222  000388  6ED9               	movwf	fsr2l,c
  4223  00038A  0E01               	movlw	high _gsa_Msg
  4224  00038C  20F4               	addwfc	prodh,w,c
  4225  00038E  6EDA               	movwf	fsr2h,c
  4226  000390  0E02               	movlw	2
  4227  000392                     L5:
  4228  000392  6EDF               	movwf	indf2,c
  4229                           
  4230                           ; BSR set to: 0
  4231                           
  4232                           ; BSR set to: 0
  4233  000394  D000               	goto	l3862
  4234  000396                     l3862:
  4235                           
  4236                           ; BSR set to: 0
  4237                           ;My_USART.c: 140: gsa_Msg[from_dress].Order = DataBuff[6];
  4238  000396  0100               	movlb	0	; () banked
  4239  000398  EE20 F006          	lfsr	2,6
  4240  00039C  51B0               	movf	RS485_ManageMessage@DataBuff& (0+255),w,b
  4241  00039E  26D9               	addwf	fsr2l,f,c
  4242  0003A0  51B1               	movf	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  4243  0003A2  22DA               	addwfc	fsr2h,f,c
  4244  0003A4  0100               	movlb	0	; () banked
  4245  0003A6  51BA               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  4246  0003A8  0D07               	mullw	7
  4247  0003AA  0E00               	movlw	low _gsa_Msg
  4248  0003AC  24F3               	addwf	prodl,w,c
  4249  0003AE  6EE1               	movwf	fsr1l,c
  4250  0003B0  0E01               	movlw	high _gsa_Msg
  4251  0003B2  20F4               	addwfc	prodh,w,c
  4252  0003B4  6EE2               	movwf	fsr1h,c
  4253  0003B6  CFDF FFE7          	movff	indf2,indf1
  4254                           
  4255                           ; BSR set to: 0
  4256                           ;My_USART.c: 141: gsa_Msg[from_dress].a_Parameter[0] = DataBuff[2];
  4257  0003BA  0100               	movlb	0	; () banked
  4258  0003BC  EE20 F002          	lfsr	2,2
  4259  0003C0  51B0               	movf	RS485_ManageMessage@DataBuff& (0+255),w,b
  4260  0003C2  26D9               	addwf	fsr2l,f,c
  4261  0003C4  51B1               	movf	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  4262  0003C6  22DA               	addwfc	fsr2h,f,c
  4263  0003C8  0100               	movlb	0	; () banked
  4264  0003CA  51BA               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  4265  0003CC  0D07               	mullw	7
  4266  0003CE  0E01               	movlw	1
  4267  0003D0  26F3               	addwf	prodl,f,c
  4268  0003D2  0E00               	movlw	0
  4269  0003D4  22F4               	addwfc	prodh,f,c
  4270  0003D6  0E00               	movlw	low _gsa_Msg
  4271  0003D8  24F3               	addwf	prodl,w,c
  4272  0003DA  6EE1               	movwf	fsr1l,c
  4273  0003DC  0E01               	movlw	high _gsa_Msg
  4274  0003DE  20F4               	addwfc	prodh,w,c
  4275  0003E0  6EE2               	movwf	fsr1h,c
  4276  0003E2  CFDF FFE7          	movff	indf2,indf1
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;My_USART.c: 142: gsa_Msg[from_dress].a_Parameter[1] = DataBuff[3];
  4280  0003E6  0100               	movlb	0	; () banked
  4281  0003E8  EE20 F003          	lfsr	2,3
  4282  0003EC  51B0               	movf	RS485_ManageMessage@DataBuff& (0+255),w,b
  4283  0003EE  26D9               	addwf	fsr2l,f,c
  4284  0003F0  51B1               	movf	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  4285  0003F2  22DA               	addwfc	fsr2h,f,c
  4286  0003F4  0100               	movlb	0	; () banked
  4287  0003F6  51BA               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  4288  0003F8  0D07               	mullw	7
  4289  0003FA  0E02               	movlw	2
  4290  0003FC  26F3               	addwf	prodl,f,c
  4291  0003FE  0E00               	movlw	0
  4292  000400  22F4               	addwfc	prodh,f,c
  4293  000402  0E00               	movlw	low _gsa_Msg
  4294  000404  24F3               	addwf	prodl,w,c
  4295  000406  6EE1               	movwf	fsr1l,c
  4296  000408  0E01               	movlw	high _gsa_Msg
  4297  00040A  20F4               	addwfc	prodh,w,c
  4298  00040C  6EE2               	movwf	fsr1h,c
  4299  00040E  CFDF FFE7          	movff	indf2,indf1
  4300                           
  4301                           ; BSR set to: 0
  4302                           ;My_USART.c: 143: gsa_Msg[from_dress].a_Parameter[2] = DataBuff[4];
  4303  000412  0100               	movlb	0	; () banked
  4304  000414  EE20 F004          	lfsr	2,4
  4305  000418  51B0               	movf	RS485_ManageMessage@DataBuff& (0+255),w,b
  4306  00041A  26D9               	addwf	fsr2l,f,c
  4307  00041C  51B1               	movf	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  4308  00041E  22DA               	addwfc	fsr2h,f,c
  4309  000420  0100               	movlb	0	; () banked
  4310  000422  51BA               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  4311  000424  0D07               	mullw	7
  4312  000426  0E03               	movlw	3
  4313  000428  26F3               	addwf	prodl,f,c
  4314  00042A  0E00               	movlw	0
  4315  00042C  22F4               	addwfc	prodh,f,c
  4316  00042E  0E00               	movlw	low _gsa_Msg
  4317  000430  24F3               	addwf	prodl,w,c
  4318  000432  6EE1               	movwf	fsr1l,c
  4319  000434  0E01               	movlw	high _gsa_Msg
  4320  000436  20F4               	addwfc	prodh,w,c
  4321  000438  6EE2               	movwf	fsr1h,c
  4322  00043A  CFDF FFE7          	movff	indf2,indf1
  4323                           
  4324                           ; BSR set to: 0
  4325                           ;My_USART.c: 144: gsa_Msg[from_dress].a_Parameter[3] = DataBuff[5];
  4326  00043E  0100               	movlb	0	; () banked
  4327  000440  EE20 F005          	lfsr	2,5
  4328  000444  51B0               	movf	RS485_ManageMessage@DataBuff& (0+255),w,b
  4329  000446  26D9               	addwf	fsr2l,f,c
  4330  000448  51B1               	movf	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  4331  00044A  22DA               	addwfc	fsr2h,f,c
  4332  00044C  0100               	movlb	0	; () banked
  4333  00044E  51BA               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  4334  000450  0D07               	mullw	7
  4335  000452  0E04               	movlw	4
  4336  000454  26F3               	addwf	prodl,f,c
  4337  000456  0E00               	movlw	0
  4338  000458  22F4               	addwfc	prodh,f,c
  4339  00045A  0E00               	movlw	low _gsa_Msg
  4340  00045C  24F3               	addwf	prodl,w,c
  4341  00045E  6EE1               	movwf	fsr1l,c
  4342  000460  0E01               	movlw	high _gsa_Msg
  4343  000462  20F4               	addwfc	prodh,w,c
  4344  000464  6EE2               	movwf	fsr1h,c
  4345  000466  CFDF FFE7          	movff	indf2,indf1
  4346                           
  4347                           ; BSR set to: 0
  4348                           ;My_USART.c: 147: gsa_Msg[from_dress].new_info = 1;
  4349  00046A  0100               	movlb	0	; () banked
  4350  00046C  51BA               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  4351  00046E  0D07               	mullw	7
  4352  000470  0E06               	movlw	6
  4353  000472  26F3               	addwf	prodl,f,c
  4354  000474  0E00               	movlw	0
  4355  000476  22F4               	addwfc	prodh,f,c
  4356  000478  0E00               	movlw	low _gsa_Msg
  4357  00047A  24F3               	addwf	prodl,w,c
  4358  00047C  6ED9               	movwf	fsr2l,c
  4359  00047E  0E01               	movlw	high _gsa_Msg
  4360  000480  20F4               	addwfc	prodh,w,c
  4361  000482  6EDA               	movwf	fsr2h,c
  4362  000484  0E01               	movlw	1
  4363  000486  6EDF               	movwf	indf2,c
  4364                           
  4365                           ; BSR set to: 0
  4366                           ;My_USART.c: 148: g_RS485_Receive_Flag = 0;
  4367  000488  0E00               	movlw	0
  4368  00048A  6E3F               	movwf	_g_RS485_Receive_Flag,c
  4369  00048C  0012               	return	
  4370                           
  4371                           ; BSR set to: 0
  4372  00048E  0012               	return		;funcret
  4373  000490                     __end_of_RS485_ManageMessage:
  4374                           	opt stack 0
  4375                           tblptru	equ	0xFF8
  4376                           tblptrh	equ	0xFF7
  4377                           tblptrl	equ	0xFF6
  4378                           tablat	equ	0xFF5
  4379                           prodh	equ	0xFF4
  4380                           prodl	equ	0xFF3
  4381                           intcon	equ	0xFF2
  4382                           postinc0	equ	0xFEE
  4383                           wreg	equ	0xFE8
  4384                           indf1	equ	0xFE7
  4385                           postdec1	equ	0xFE5
  4386                           fsr1h	equ	0xFE2
  4387                           fsr1l	equ	0xFE1
  4388                           indf2	equ	0xFDF
  4389                           postinc2	equ	0xFDE
  4390                           fsr2h	equ	0xFDA
  4391                           fsr2l	equ	0xFD9
  4392                           status	equ	0xFD8
  4393                           
  4394 ;; *************** function _VerifyCRC *****************
  4395 ;; Defined at:
  4396 ;;		line 163 in file "_01_USER/My_USART.c"
  4397 ;; Parameters:    Size  Location     Type
  4398 ;;  DataBuff        2   37[COMRAM] PTR unsigned char 
  4399 ;;		 -> ga_RS485_ReceiveBuff(10), RS485_AnalysisData@_PreData(10), ga_RS485_SendBuff(10), 
  4400 ;;  date_lenth      1   39[COMRAM] unsigned char 
  4401 ;; Auto vars:     Size  Location     Type
  4402 ;;  CRC_Value       4    0[BANK0 ] unsigned long 
  4403 ;;  CRC_Byte        1    4[BANK0 ] unsigned char 
  4404 ;; Return value:  Size  Location     Type
  4405 ;;		None               void
  4406 ;; Registers used:
  4407 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4408 ;; Tracked objects:
  4409 ;;		On entry : 0/0
  4410 ;;		On exit  : 0/0
  4411 ;;		Unchanged: 0/0
  4412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4413 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4414 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4415 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4416 ;;      Totals:         8       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4417 ;;Total ram usage:       13 bytes
  4418 ;; Hardware stack levels used:    1
  4419 ;; Hardware stack levels required when called:    4
  4420 ;; This function calls:
  4421 ;;		___lldiv
  4422 ;;		___llmod
  4423 ;; This function is called by:
  4424 ;;		_RS485_SendDate
  4425 ;;		_RS485_ManageMessage
  4426 ;; This function uses a non-reentrant model
  4427 ;;
  4428                           
  4429                           	psect	text29
  4430  000902                     __ptext29:
  4431                           	opt stack 0
  4432  000902                     _VerifyCRC:
  4433                           	opt stack 24
  4434                           
  4435                           ;My_USART.c: 165: unsigned long int CRC_Value = 0;
  4436                           
  4437                           ;incstack = 0
  4438  000902  0E00               	movlw	0
  4439  000904  0100               	movlb	0	; () banked
  4440  000906  6FAB               	movwf	VerifyCRC@CRC_Value& (0+255),b
  4441  000908  0E00               	movlw	0
  4442  00090A  6FAC               	movwf	(VerifyCRC@CRC_Value+1)& (0+255),b
  4443  00090C  0E00               	movlw	0
  4444  00090E  6FAD               	movwf	(VerifyCRC@CRC_Value+2)& (0+255),b
  4445  000910  0E00               	movlw	0
  4446  000912  6FAE               	movwf	(VerifyCRC@CRC_Value+3)& (0+255),b
  4447                           
  4448                           ;My_USART.c: 166: unsigned char CRC_Byte;
  4449                           ;My_USART.c: 168: for(CRC_Byte = 2; CRC_Byte < date_lenth ;CRC_Byte++)
  4450  000914  0E02               	movlw	2
  4451  000916  0100               	movlb	0	; () banked
  4452  000918  6FAF               	movwf	VerifyCRC@CRC_Byte& (0+255),b
  4453  00091A  D03C               	goto	l3694
  4454  00091C                     l3690:
  4455                           
  4456                           ; BSR set to: 0
  4457                           ;My_USART.c: 169: CRC_Value = ( CRC_Value + DataBuff[CRC_Byte]*CRC_Byte ) % 0xffff;
  4458  00091C  0100               	movlb	0	; () banked
  4459  00091E  51AF               	movf	VerifyCRC@CRC_Byte& (0+255),w,b
  4460  000920  0D01               	mullw	1
  4461  000922  50F3               	movf	prodl,w,c
  4462  000924  2426               	addwf	VerifyCRC@DataBuff,w,c
  4463  000926  6ED9               	movwf	fsr2l,c
  4464  000928  50F4               	movf	prodh,w,c
  4465  00092A  2027               	addwfc	VerifyCRC@DataBuff+1,w,c
  4466  00092C  6EDA               	movwf	fsr2h,c
  4467  00092E  50DF               	movf	indf2,w,c
  4468  000930  6E29               	movwf	??_VerifyCRC& (0+255),c
  4469  000932  5029               	movf	??_VerifyCRC,w,c
  4470  000934  0100               	movlb	0	; () banked
  4471  000936  03AF               	mulwf	VerifyCRC@CRC_Byte& (0+255),b
  4472  000938  CFF3 F02A          	movff	prodl,??_VerifyCRC+1
  4473  00093C  CFF4 F02B          	movff	prodh,??_VerifyCRC+2
  4474  000940  0E00               	movlw	0
  4475  000942  BE2B               	btfsc	(??_VerifyCRC+2)& (0+255),7,c
  4476  000944  0EFF               	movlw	255
  4477  000946  6E2C               	movwf	(??_VerifyCRC+3)& (0+255),c
  4478  000948  6E2D               	movwf	(??_VerifyCRC+4)& (0+255),c
  4479  00094A  0100               	movlb	0	; () banked
  4480  00094C  51AB               	movf	VerifyCRC@CRC_Value& (0+255),w,b
  4481  00094E  242A               	addwf	??_VerifyCRC+1,w,c
  4482  000950  6E19               	movwf	___llmod@dividend,c
  4483  000952  0100               	movlb	0	; () banked
  4484  000954  51AC               	movf	(VerifyCRC@CRC_Value+1)& (0+255),w,b
  4485  000956  202B               	addwfc	??_VerifyCRC+2,w,c
  4486  000958  6E1A               	movwf	___llmod@dividend+1,c
  4487  00095A  0100               	movlb	0	; () banked
  4488  00095C  51AD               	movf	(VerifyCRC@CRC_Value+2)& (0+255),w,b
  4489  00095E  202C               	addwfc	??_VerifyCRC+3,w,c
  4490  000960  6E1B               	movwf	___llmod@dividend+2,c
  4491  000962  0100               	movlb	0	; () banked
  4492  000964  51AE               	movf	(VerifyCRC@CRC_Value+3)& (0+255),w,b
  4493  000966  202D               	addwfc	??_VerifyCRC+4,w,c
  4494  000968  6E1C               	movwf	___llmod@dividend+3,c
  4495  00096A  0EFF               	movlw	255
  4496  00096C  6E1D               	movwf	___llmod@divisor,c
  4497  00096E  0EFF               	movlw	255
  4498  000970  6E1E               	movwf	___llmod@divisor+1,c
  4499  000972  0E00               	movlw	0
  4500  000974  6E1F               	movwf	___llmod@divisor+2,c
  4501  000976  0E00               	movlw	0
  4502  000978  6E20               	movwf	___llmod@divisor+3,c
  4503  00097A  ECC5  F007         	call	___llmod	;wreg free
  4504  00097E  C019  F0AB         	movff	?___llmod,VerifyCRC@CRC_Value
  4505  000982  C01A  F0AC         	movff	?___llmod+1,VerifyCRC@CRC_Value+1
  4506  000986  C01B  F0AD         	movff	?___llmod+2,VerifyCRC@CRC_Value+2
  4507  00098A  C01C  F0AE         	movff	?___llmod+3,VerifyCRC@CRC_Value+3
  4508  00098E  0100               	movlb	0	; () banked
  4509  000990  2BAF               	incf	VerifyCRC@CRC_Byte& (0+255),f,b
  4510  000992  D000               	goto	l3694
  4511  000994                     l3694:
  4512                           
  4513                           ; BSR set to: 0
  4514  000994  5028               	movf	VerifyCRC@date_lenth,w,c
  4515  000996  0100               	movlb	0	; () banked
  4516  000998  5DAF               	subwf	VerifyCRC@CRC_Byte& (0+255),w,b
  4517  00099A  A0D8               	btfss	status,0,c
  4518  00099C  D7BF               	goto	l3690
  4519                           
  4520                           ; BSR set to: 0
  4521                           ;My_USART.c: 171: DataBuff[1] = CRC_Value/0xff;
  4522                           
  4523                           ; BSR set to: 0
  4524  00099E  EE20 F001          	lfsr	2,1
  4525  0009A2  5026               	movf	VerifyCRC@DataBuff,w,c
  4526  0009A4  26D9               	addwf	fsr2l,f,c
  4527  0009A6  5027               	movf	VerifyCRC@DataBuff+1,w,c
  4528  0009A8  22DA               	addwfc	fsr2h,f,c
  4529  0009AA  C0AB  F019         	movff	VerifyCRC@CRC_Value,___lldiv@dividend
  4530  0009AE  C0AC  F01A         	movff	VerifyCRC@CRC_Value+1,___lldiv@dividend+1
  4531  0009B2  C0AD  F01B         	movff	VerifyCRC@CRC_Value+2,___lldiv@dividend+2
  4532  0009B6  C0AE  F01C         	movff	VerifyCRC@CRC_Value+3,___lldiv@dividend+3
  4533  0009BA  0EFF               	movlw	255
  4534  0009BC  6E1D               	movwf	___lldiv@divisor,c
  4535  0009BE  0E00               	movlw	0
  4536  0009C0  6E1E               	movwf	___lldiv@divisor+1,c
  4537  0009C2  0E00               	movlw	0
  4538  0009C4  6E1F               	movwf	___lldiv@divisor+2,c
  4539  0009C6  0E00               	movlw	0
  4540  0009C8  6E20               	movwf	___lldiv@divisor+3,c
  4541  0009CA  EC44  F007         	call	___lldiv	;wreg free
  4542  0009CE  5019               	movf	?___lldiv,w,c
  4543  0009D0  6EDF               	movwf	indf2,c
  4544                           
  4545                           ;My_USART.c: 172: DataBuff[0] = CRC_Value%0xff;
  4546  0009D2  C0AB  F019         	movff	VerifyCRC@CRC_Value,___llmod@dividend
  4547  0009D6  C0AC  F01A         	movff	VerifyCRC@CRC_Value+1,___llmod@dividend+1
  4548  0009DA  C0AD  F01B         	movff	VerifyCRC@CRC_Value+2,___llmod@dividend+2
  4549  0009DE  C0AE  F01C         	movff	VerifyCRC@CRC_Value+3,___llmod@dividend+3
  4550  0009E2  0EFF               	movlw	255
  4551  0009E4  6E1D               	movwf	___llmod@divisor,c
  4552  0009E6  0E00               	movlw	0
  4553  0009E8  6E1E               	movwf	___llmod@divisor+1,c
  4554  0009EA  0E00               	movlw	0
  4555  0009EC  6E1F               	movwf	___llmod@divisor+2,c
  4556  0009EE  0E00               	movlw	0
  4557  0009F0  6E20               	movwf	___llmod@divisor+3,c
  4558  0009F2  ECC5  F007         	call	___llmod	;wreg free
  4559  0009F6  5019               	movf	?___llmod,w,c
  4560  0009F8  C026  FFD9         	movff	VerifyCRC@DataBuff,fsr2l
  4561  0009FC  C027  FFDA         	movff	VerifyCRC@DataBuff+1,fsr2h
  4562  000A00  6EDF               	movwf	indf2,c
  4563                           
  4564                           ;My_USART.c: 174: if( DataBuff[1] == 0xff ) DataBuff[1] --;
  4565  000A02  EE20 F001          	lfsr	2,1
  4566  000A06  5026               	movf	VerifyCRC@DataBuff,w,c
  4567  000A08  26D9               	addwf	fsr2l,f,c
  4568  000A0A  5027               	movf	VerifyCRC@DataBuff+1,w,c
  4569  000A0C  22DA               	addwfc	fsr2h,f,c
  4570  000A0E  28DE               	incf	postinc2,w,c
  4571  000A10  A4D8               	btfss	status,2,c
  4572  000A12  D007               	goto	l238
  4573  000A14  EE20 F001          	lfsr	2,1
  4574  000A18  5026               	movf	VerifyCRC@DataBuff,w,c
  4575  000A1A  26D9               	addwf	fsr2l,f,c
  4576  000A1C  5027               	movf	VerifyCRC@DataBuff+1,w,c
  4577  000A1E  22DA               	addwfc	fsr2h,f,c
  4578  000A20  06DF               	decf	indf2,f,c
  4579  000A22                     l238:
  4580                           
  4581                           ;My_USART.c: 175: if( DataBuff[0] == 0xff ) DataBuff[0] --;
  4582  000A22  C026  FFD9         	movff	VerifyCRC@DataBuff,fsr2l
  4583  000A26  C027  FFDA         	movff	VerifyCRC@DataBuff+1,fsr2h
  4584  000A2A  28DE               	incf	postinc2,w,c
  4585  000A2C  A4D8               	btfss	status,2,c
  4586  000A2E  0012               	return	
  4587  000A30  C026  FFD9         	movff	VerifyCRC@DataBuff,fsr2l
  4588  000A34  C027  FFDA         	movff	VerifyCRC@DataBuff+1,fsr2h
  4589  000A38  06DF               	decf	indf2,f,c
  4590  000A3A  0012               	return	
  4591  000A3C  0012               	return		;funcret
  4592  000A3E                     __end_of_VerifyCRC:
  4593                           	opt stack 0
  4594                           tblptru	equ	0xFF8
  4595                           tblptrh	equ	0xFF7
  4596                           tblptrl	equ	0xFF6
  4597                           tablat	equ	0xFF5
  4598                           prodh	equ	0xFF4
  4599                           prodl	equ	0xFF3
  4600                           intcon	equ	0xFF2
  4601                           postinc0	equ	0xFEE
  4602                           wreg	equ	0xFE8
  4603                           indf1	equ	0xFE7
  4604                           postdec1	equ	0xFE5
  4605                           fsr1h	equ	0xFE2
  4606                           fsr1l	equ	0xFE1
  4607                           indf2	equ	0xFDF
  4608                           postinc2	equ	0xFDE
  4609                           fsr2h	equ	0xFDA
  4610                           fsr2l	equ	0xFD9
  4611                           status	equ	0xFD8
  4612                           
  4613 ;; *************** function ___llmod *****************
  4614 ;; Defined at:
  4615 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  4616 ;; Parameters:    Size  Location     Type
  4617 ;;  dividend        4   24[COMRAM] unsigned long 
  4618 ;;  divisor         4   28[COMRAM] unsigned long 
  4619 ;; Auto vars:     Size  Location     Type
  4620 ;;  counter         1   32[COMRAM] unsigned char 
  4621 ;; Return value:  Size  Location     Type
  4622 ;;                  4   24[COMRAM] unsigned long 
  4623 ;; Registers used:
  4624 ;;		wreg, status,2, status,0
  4625 ;; Tracked objects:
  4626 ;;		On entry : 0/0
  4627 ;;		On exit  : 0/0
  4628 ;;		Unchanged: 0/0
  4629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4630 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4631 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4633 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4634 ;;Total ram usage:        9 bytes
  4635 ;; Hardware stack levels used:    1
  4636 ;; Hardware stack levels required when called:    3
  4637 ;; This function calls:
  4638 ;;		Nothing
  4639 ;; This function is called by:
  4640 ;;		_VerifyCRC
  4641 ;; This function uses a non-reentrant model
  4642 ;;
  4643                           
  4644                           	psect	text30
  4645  000F8A                     __ptext30:
  4646                           	opt stack 0
  4647  000F8A                     ___llmod:
  4648                           	opt stack 24
  4649                           
  4650                           ;incstack = 0
  4651  000F8A  501D               	movf	___llmod@divisor,w,c
  4652  000F8C  101E               	iorwf	___llmod@divisor+1,w,c
  4653  000F8E  101F               	iorwf	___llmod@divisor+2,w,c
  4654  000F90  1020               	iorwf	___llmod@divisor+3,w,c
  4655  000F92  B4D8               	btfsc	status,2,c
  4656  000F94  D029               	goto	l1158
  4657  000F96  0E01               	movlw	1
  4658  000F98  6E21               	movwf	___llmod@counter,c
  4659  000F9A  D007               	goto	l3678
  4660  000F9C                     l3676:
  4661  000F9C  90D8               	bcf	status,0,c
  4662  000F9E  361D               	rlcf	___llmod@divisor,f,c
  4663  000FA0  361E               	rlcf	___llmod@divisor+1,f,c
  4664  000FA2  361F               	rlcf	___llmod@divisor+2,f,c
  4665  000FA4  3620               	rlcf	___llmod@divisor+3,f,c
  4666  000FA6  2A21               	incf	___llmod@counter,f,c
  4667  000FA8  D000               	goto	l3678
  4668  000FAA                     l3678:
  4669  000FAA  BE20               	btfsc	___llmod@divisor+3,7,c
  4670  000FAC  D002               	goto	l3680
  4671  000FAE  D7F6               	goto	l3676
  4672  000FB0  D000               	goto	l3680
  4673  000FB2                     l3680:
  4674  000FB2  501D               	movf	___llmod@divisor,w,c
  4675  000FB4  5C19               	subwf	___llmod@dividend,w,c
  4676  000FB6  501E               	movf	___llmod@divisor+1,w,c
  4677  000FB8  581A               	subwfb	___llmod@dividend+1,w,c
  4678  000FBA  501F               	movf	___llmod@divisor+2,w,c
  4679  000FBC  581B               	subwfb	___llmod@dividend+2,w,c
  4680  000FBE  5020               	movf	___llmod@divisor+3,w,c
  4681  000FC0  581C               	subwfb	___llmod@dividend+3,w,c
  4682  000FC2  A0D8               	btfss	status,0,c
  4683  000FC4  D009               	goto	l3684
  4684  000FC6  501D               	movf	___llmod@divisor,w,c
  4685  000FC8  5E19               	subwf	___llmod@dividend,f,c
  4686  000FCA  501E               	movf	___llmod@divisor+1,w,c
  4687  000FCC  5A1A               	subwfb	___llmod@dividend+1,f,c
  4688  000FCE  501F               	movf	___llmod@divisor+2,w,c
  4689  000FD0  5A1B               	subwfb	___llmod@dividend+2,f,c
  4690  000FD2  5020               	movf	___llmod@divisor+3,w,c
  4691  000FD4  5A1C               	subwfb	___llmod@dividend+3,f,c
  4692  000FD6  D000               	goto	l3684
  4693  000FD8                     l3684:
  4694  000FD8  90D8               	bcf	status,0,c
  4695  000FDA  3220               	rrcf	___llmod@divisor+3,f,c
  4696  000FDC  321F               	rrcf	___llmod@divisor+2,f,c
  4697  000FDE  321E               	rrcf	___llmod@divisor+1,f,c
  4698  000FE0  321D               	rrcf	___llmod@divisor,f,c
  4699  000FE2  2E21               	decfsz	___llmod@counter,f,c
  4700  000FE4  D7E6               	goto	l3680
  4701  000FE6  D000               	goto	l1158
  4702  000FE8                     l1158:
  4703  000FE8  C019  F019         	movff	___llmod@dividend,?___llmod
  4704  000FEC  C01A  F01A         	movff	___llmod@dividend+1,?___llmod+1
  4705  000FF0  C01B  F01B         	movff	___llmod@dividend+2,?___llmod+2
  4706  000FF4  C01C  F01C         	movff	___llmod@dividend+3,?___llmod+3
  4707  000FF8  0012               	return		;funcret
  4708  000FFA                     __end_of___llmod:
  4709                           	opt stack 0
  4710                           tblptru	equ	0xFF8
  4711                           tblptrh	equ	0xFF7
  4712                           tblptrl	equ	0xFF6
  4713                           tablat	equ	0xFF5
  4714                           prodh	equ	0xFF4
  4715                           prodl	equ	0xFF3
  4716                           intcon	equ	0xFF2
  4717                           postinc0	equ	0xFEE
  4718                           wreg	equ	0xFE8
  4719                           indf1	equ	0xFE7
  4720                           postdec1	equ	0xFE5
  4721                           fsr1h	equ	0xFE2
  4722                           fsr1l	equ	0xFE1
  4723                           indf2	equ	0xFDF
  4724                           postinc2	equ	0xFDE
  4725                           fsr2h	equ	0xFDA
  4726                           fsr2l	equ	0xFD9
  4727                           status	equ	0xFD8
  4728                           
  4729 ;; *************** function ___lldiv *****************
  4730 ;; Defined at:
  4731 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  4732 ;; Parameters:    Size  Location     Type
  4733 ;;  dividend        4   24[COMRAM] unsigned long 
  4734 ;;  divisor         4   28[COMRAM] unsigned long 
  4735 ;; Auto vars:     Size  Location     Type
  4736 ;;  quotient        4   32[COMRAM] unsigned long 
  4737 ;;  counter         1   36[COMRAM] unsigned char 
  4738 ;; Return value:  Size  Location     Type
  4739 ;;                  4   24[COMRAM] unsigned long 
  4740 ;; Registers used:
  4741 ;;		wreg, status,2, status,0
  4742 ;; Tracked objects:
  4743 ;;		On entry : 0/0
  4744 ;;		On exit  : 0/0
  4745 ;;		Unchanged: 0/0
  4746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4747 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4748 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4750 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4751 ;;Total ram usage:       13 bytes
  4752 ;; Hardware stack levels used:    1
  4753 ;; Hardware stack levels required when called:    3
  4754 ;; This function calls:
  4755 ;;		Nothing
  4756 ;; This function is called by:
  4757 ;;		_VerifyCRC
  4758 ;; This function uses a non-reentrant model
  4759 ;;
  4760                           
  4761                           	psect	text31
  4762  000E88                     __ptext31:
  4763                           	opt stack 0
  4764  000E88                     ___lldiv:
  4765                           	opt stack 24
  4766                           
  4767                           ;incstack = 0
  4768  000E88  0E00               	movlw	0
  4769  000E8A  6E21               	movwf	___lldiv@quotient,c
  4770  000E8C  0E00               	movlw	0
  4771  000E8E  6E22               	movwf	___lldiv@quotient+1,c
  4772  000E90  0E00               	movlw	0
  4773  000E92  6E23               	movwf	___lldiv@quotient+2,c
  4774  000E94  0E00               	movlw	0
  4775  000E96  6E24               	movwf	___lldiv@quotient+3,c
  4776  000E98  501D               	movf	___lldiv@divisor,w,c
  4777  000E9A  101E               	iorwf	___lldiv@divisor+1,w,c
  4778  000E9C  101F               	iorwf	___lldiv@divisor+2,w,c
  4779  000E9E  1020               	iorwf	___lldiv@divisor+3,w,c
  4780  000EA0  B4D8               	btfsc	status,2,c
  4781  000EA2  D02F               	goto	l1148
  4782  000EA4  0E01               	movlw	1
  4783  000EA6  6E25               	movwf	___lldiv@counter,c
  4784  000EA8  D007               	goto	l3658
  4785  000EAA                     l3656:
  4786  000EAA  90D8               	bcf	status,0,c
  4787  000EAC  361D               	rlcf	___lldiv@divisor,f,c
  4788  000EAE  361E               	rlcf	___lldiv@divisor+1,f,c
  4789  000EB0  361F               	rlcf	___lldiv@divisor+2,f,c
  4790  000EB2  3620               	rlcf	___lldiv@divisor+3,f,c
  4791  000EB4  2A25               	incf	___lldiv@counter,f,c
  4792  000EB6  D000               	goto	l3658
  4793  000EB8                     l3658:
  4794  000EB8  BE20               	btfsc	___lldiv@divisor+3,7,c
  4795  000EBA  D002               	goto	l3660
  4796  000EBC  D7F6               	goto	l3656
  4797  000EBE  D000               	goto	l3660
  4798  000EC0                     l3660:
  4799  000EC0  90D8               	bcf	status,0,c
  4800  000EC2  3621               	rlcf	___lldiv@quotient,f,c
  4801  000EC4  3622               	rlcf	___lldiv@quotient+1,f,c
  4802  000EC6  3623               	rlcf	___lldiv@quotient+2,f,c
  4803  000EC8  3624               	rlcf	___lldiv@quotient+3,f,c
  4804  000ECA  501D               	movf	___lldiv@divisor,w,c
  4805  000ECC  5C19               	subwf	___lldiv@dividend,w,c
  4806  000ECE  501E               	movf	___lldiv@divisor+1,w,c
  4807  000ED0  581A               	subwfb	___lldiv@dividend+1,w,c
  4808  000ED2  501F               	movf	___lldiv@divisor+2,w,c
  4809  000ED4  581B               	subwfb	___lldiv@dividend+2,w,c
  4810  000ED6  5020               	movf	___lldiv@divisor+3,w,c
  4811  000ED8  581C               	subwfb	___lldiv@dividend+3,w,c
  4812  000EDA  A0D8               	btfss	status,0,c
  4813  000EDC  D00A               	goto	l3668
  4814  000EDE  501D               	movf	___lldiv@divisor,w,c
  4815  000EE0  5E19               	subwf	___lldiv@dividend,f,c
  4816  000EE2  501E               	movf	___lldiv@divisor+1,w,c
  4817  000EE4  5A1A               	subwfb	___lldiv@dividend+1,f,c
  4818  000EE6  501F               	movf	___lldiv@divisor+2,w,c
  4819  000EE8  5A1B               	subwfb	___lldiv@dividend+2,f,c
  4820  000EEA  5020               	movf	___lldiv@divisor+3,w,c
  4821  000EEC  5A1C               	subwfb	___lldiv@dividend+3,f,c
  4822  000EEE  8021               	bsf	___lldiv@quotient,0,c
  4823  000EF0  D000               	goto	l3668
  4824  000EF2                     l3668:
  4825  000EF2  90D8               	bcf	status,0,c
  4826  000EF4  3220               	rrcf	___lldiv@divisor+3,f,c
  4827  000EF6  321F               	rrcf	___lldiv@divisor+2,f,c
  4828  000EF8  321E               	rrcf	___lldiv@divisor+1,f,c
  4829  000EFA  321D               	rrcf	___lldiv@divisor,f,c
  4830  000EFC  2E25               	decfsz	___lldiv@counter,f,c
  4831  000EFE  D7E0               	goto	l3660
  4832  000F00  D000               	goto	l1148
  4833  000F02                     l1148:
  4834  000F02  C021  F019         	movff	___lldiv@quotient,?___lldiv
  4835  000F06  C022  F01A         	movff	___lldiv@quotient+1,?___lldiv+1
  4836  000F0A  C023  F01B         	movff	___lldiv@quotient+2,?___lldiv+2
  4837  000F0E  C024  F01C         	movff	___lldiv@quotient+3,?___lldiv+3
  4838  000F12  0012               	return		;funcret
  4839  000F14                     __end_of___lldiv:
  4840                           	opt stack 0
  4841                           tblptru	equ	0xFF8
  4842                           tblptrh	equ	0xFF7
  4843                           tblptrl	equ	0xFF6
  4844                           tablat	equ	0xFF5
  4845                           prodh	equ	0xFF4
  4846                           prodl	equ	0xFF3
  4847                           intcon	equ	0xFF2
  4848                           postinc0	equ	0xFEE
  4849                           wreg	equ	0xFE8
  4850                           indf1	equ	0xFE7
  4851                           postdec1	equ	0xFE5
  4852                           fsr1h	equ	0xFE2
  4853                           fsr1l	equ	0xFE1
  4854                           indf2	equ	0xFDF
  4855                           postinc2	equ	0xFDE
  4856                           fsr2h	equ	0xFDA
  4857                           fsr2l	equ	0xFD9
  4858                           status	equ	0xFD8
  4859                           
  4860 ;; *************** function _Key_ManageMessage *****************
  4861 ;; Defined at:
  4862 ;;		line 182 in file "_01_USER/Key.c"
  4863 ;; Parameters:    Size  Location     Type
  4864 ;;		None
  4865 ;; Auto vars:     Size  Location     Type
  4866 ;;		None
  4867 ;; Return value:  Size  Location     Type
  4868 ;;		None               void
  4869 ;; Registers used:
  4870 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4871 ;; Tracked objects:
  4872 ;;		On entry : 0/0
  4873 ;;		On exit  : 0/0
  4874 ;;		Unchanged: 0/0
  4875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4878 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4879 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4880 ;;Total ram usage:        4 bytes
  4881 ;; Hardware stack levels used:    1
  4882 ;; Hardware stack levels required when called:    4
  4883 ;; This function calls:
  4884 ;;		_Key_ReadFSM
  4885 ;;		_Key_ResetFSM
  4886 ;;		___lbmod
  4887 ;; This function is called by:
  4888 ;;		_ManageMessage
  4889 ;; This function uses a non-reentrant model
  4890 ;;
  4891                           
  4892                           	psect	text32
  4893  000632                     __ptext32:
  4894                           	opt stack 0
  4895  000632                     _Key_ManageMessage:
  4896                           	opt stack 25
  4897                           
  4898                           ;Key.c: 184: Key_ReadFSM();
  4899                           
  4900                           ;incstack = 0
  4901  000632  EC48  F002         	call	_Key_ReadFSM	;wreg free
  4902                           
  4903                           ;Key.c: 186: if ( gs_Local_Key_User.key_group == ((0x01<<3)|(0x01<<4)) && gs_Local_Key_U
      +                          ser.key_group_state == KEY_short )
  4904  000636  0E18               	movlw	24
  4905  000638  0100               	movlb	0	; () banked
  4906  00063A  196E               	xorwf	(_gs_Local_Key_User+1)& (0+255),w,b	;volatile
  4907  00063C  A4D8               	btfss	status,2,c
  4908  00063E  D021               	goto	l2848
  4909                           
  4910                           ; BSR set to: 0
  4911  000640  0100               	movlb	0	; () banked
  4912  000642  056F               	decf	(_gs_Local_Key_User+2)& (0+255),w,b	;volatile
  4913  000644  A4D8               	btfss	status,2,c
  4914  000646  D01D               	goto	l2848
  4915                           
  4916                           ; BSR set to: 0
  4917                           ;Key.c: 187: {
  4918                           ;Key.c: 188: if(g_RS485_Byte >=1 && g_RS485_Byte <=3)
  4919  000648  503E               	movf	_g_RS485_Byte,w,c
  4920  00064A  B4D8               	btfsc	status,2,c
  4921  00064C  D017               	goto	l2846
  4922                           
  4923                           ; BSR set to: 0
  4924  00064E  0E04               	movlw	4
  4925  000650  603E               	cpfslt	_g_RS485_Byte,c
  4926  000652  D014               	goto	l2846
  4927                           
  4928                           ; BSR set to: 0
  4929                           ;Key.c: 189: gs_Switch.Relay[g_RS485_Byte - 1] = 1;
  4930  000654  0EFF               	movlw	255
  4931  000656  6E1F               	movwf	??_Key_ManageMessage& (0+255),c
  4932  000658  0EFF               	movlw	255
  4933  00065A  6E20               	movwf	(??_Key_ManageMessage+1)& (0+255),c
  4934  00065C  503E               	movf	_g_RS485_Byte,w,c
  4935  00065E  6E21               	movwf	(??_Key_ManageMessage+2)& (0+255),c
  4936  000660  6A22               	clrf	(??_Key_ManageMessage+3)& (0+255),c
  4937  000662  501F               	movf	??_Key_ManageMessage,w,c
  4938  000664  2621               	addwf	??_Key_ManageMessage+2,f,c
  4939  000666  5020               	movf	??_Key_ManageMessage+1,w,c
  4940  000668  2222               	addwfc	??_Key_ManageMessage+3,f,c
  4941  00066A  0E45               	movlw	low (_gs_Switch+4)
  4942  00066C  2421               	addwf	??_Key_ManageMessage+2,w,c
  4943  00066E  6ED9               	movwf	fsr2l,c
  4944  000670  0E00               	movlw	high (_gs_Switch+4)
  4945  000672  2022               	addwfc	??_Key_ManageMessage+3,w,c
  4946  000674  6EDA               	movwf	fsr2h,c
  4947  000676  0E01               	movlw	1
  4948  000678  6EDF               	movwf	indf2,c
  4949  00067A  D000               	goto	l2846
  4950  00067C                     l2846:
  4951                           
  4952                           ; BSR set to: 0
  4953                           ;Key.c: 190: Key_ResetFSM();
  4954  00067C  ECC9  F009         	call	_Key_ResetFSM	;wreg free
  4955  000680  D000               	goto	l2848
  4956  000682                     l2848:
  4957                           
  4958                           ;Key.c: 191: }
  4959                           ;Key.c: 193: if ( gs_Local_Key_User.key_group == ((0x01<<4)|(0x01<<5)) && gs_Local_Key_U
      +                          ser.key_group_state == KEY_short )
  4960  000682  0E30               	movlw	48
  4961  000684  0100               	movlb	0	; () banked
  4962  000686  196E               	xorwf	(_gs_Local_Key_User+1)& (0+255),w,b	;volatile
  4963  000688  A4D8               	btfss	status,2,c
  4964  00068A  D021               	goto	l2860
  4965                           
  4966                           ; BSR set to: 0
  4967  00068C  0100               	movlb	0	; () banked
  4968  00068E  056F               	decf	(_gs_Local_Key_User+2)& (0+255),w,b	;volatile
  4969  000690  A4D8               	btfss	status,2,c
  4970  000692  D01D               	goto	l2860
  4971                           
  4972                           ; BSR set to: 0
  4973                           ;Key.c: 194: {
  4974                           ;Key.c: 195: if(g_RS485_Byte >=1 && g_RS485_Byte <=3)
  4975  000694  503E               	movf	_g_RS485_Byte,w,c
  4976  000696  B4D8               	btfsc	status,2,c
  4977  000698  D017               	goto	l2858
  4978                           
  4979                           ; BSR set to: 0
  4980  00069A  0E04               	movlw	4
  4981  00069C  603E               	cpfslt	_g_RS485_Byte,c
  4982  00069E  D014               	goto	l2858
  4983                           
  4984                           ; BSR set to: 0
  4985                           ;Key.c: 196: gs_Switch.Relay[g_RS485_Byte - 1] = 0;
  4986  0006A0  0EFF               	movlw	255
  4987  0006A2  6E1F               	movwf	??_Key_ManageMessage& (0+255),c
  4988  0006A4  0EFF               	movlw	255
  4989  0006A6  6E20               	movwf	(??_Key_ManageMessage+1)& (0+255),c
  4990  0006A8  503E               	movf	_g_RS485_Byte,w,c
  4991  0006AA  6E21               	movwf	(??_Key_ManageMessage+2)& (0+255),c
  4992  0006AC  6A22               	clrf	(??_Key_ManageMessage+3)& (0+255),c
  4993  0006AE  501F               	movf	??_Key_ManageMessage,w,c
  4994  0006B0  2621               	addwf	??_Key_ManageMessage+2,f,c
  4995  0006B2  5020               	movf	??_Key_ManageMessage+1,w,c
  4996  0006B4  2222               	addwfc	??_Key_ManageMessage+3,f,c
  4997  0006B6  0E45               	movlw	low (_gs_Switch+4)
  4998  0006B8  2421               	addwf	??_Key_ManageMessage+2,w,c
  4999  0006BA  6ED9               	movwf	fsr2l,c
  5000  0006BC  0E00               	movlw	high (_gs_Switch+4)
  5001  0006BE  2022               	addwfc	??_Key_ManageMessage+3,w,c
  5002  0006C0  6EDA               	movwf	fsr2h,c
  5003  0006C2  0E00               	movlw	0
  5004  0006C4  6EDF               	movwf	indf2,c
  5005  0006C6  D000               	goto	l2858
  5006  0006C8                     l2858:
  5007                           
  5008                           ; BSR set to: 0
  5009                           ;Key.c: 197: Key_ResetFSM();
  5010  0006C8  ECC9  F009         	call	_Key_ResetFSM	;wreg free
  5011  0006CC  D000               	goto	l2860
  5012  0006CE                     l2860:
  5013                           
  5014                           ;Key.c: 198: }
  5015                           ;Key.c: 201: if (gs_Local_Key_User.a_key_state[1-1] == KEY_short) g_RS485_Byte ++ ;
  5016  0006CE  0100               	movlb	0	; () banked
  5017  0006D0  057C               	decf	(_gs_Local_Key_User+15)& (0+255),w,b	;volatile
  5018  0006D2  A4D8               	btfss	status,2,c
  5019  0006D4  D002               	goto	l2864
  5020                           
  5021                           ; BSR set to: 0
  5022  0006D6  2A3E               	incf	_g_RS485_Byte,f,c
  5023  0006D8  D000               	goto	l2864
  5024  0006DA                     l2864:
  5025                           
  5026                           ; BSR set to: 0
  5027                           ;Key.c: 202: if (gs_Local_Key_User.a_key_state[1-1] == KEY_hold) g_RS485_Byte ++ ;
  5028  0006DA  0E03               	movlw	3
  5029  0006DC  0100               	movlb	0	; () banked
  5030  0006DE  197C               	xorwf	(_gs_Local_Key_User+15)& (0+255),w,b	;volatile
  5031  0006E0  A4D8               	btfss	status,2,c
  5032  0006E2  D002               	goto	l2868
  5033                           
  5034                           ; BSR set to: 0
  5035  0006E4  2A3E               	incf	_g_RS485_Byte,f,c
  5036  0006E6  D000               	goto	l2868
  5037  0006E8                     l2868:
  5038                           
  5039                           ; BSR set to: 0
  5040                           ;Key.c: 205: if (gs_Local_Key_User.a_key_state[2-1] == KEY_short) gs_Switch.Show_Send_Re
      +                          ceive = ~gs_Switch.Show_Send_Receive;
  5041  0006E8  0100               	movlb	0	; () banked
  5042  0006EA  057D               	decf	(_gs_Local_Key_User+16)& (0+255),w,b	;volatile
  5043  0006EC  A4D8               	btfss	status,2,c
  5044  0006EE  D003               	goto	l160
  5045                           
  5046                           ; BSR set to: 0
  5047  0006F0  5044               	movf	_gs_Switch+3,w,c
  5048  0006F2  0AFF               	xorlw	255
  5049  0006F4  6E44               	movwf	_gs_Switch+3,c
  5050  0006F6                     l160:
  5051                           
  5052                           ; BSR set to: 0
  5053                           ;Key.c: 208: if (gs_Local_Key_User.a_key_state[3-1] == KEY_short) g_RS485_Byte -- ;
  5054  0006F6  0100               	movlb	0	; () banked
  5055  0006F8  057E               	decf	(_gs_Local_Key_User+17)& (0+255),w,b	;volatile
  5056  0006FA  A4D8               	btfss	status,2,c
  5057  0006FC  D002               	goto	l2874
  5058                           
  5059                           ; BSR set to: 0
  5060  0006FE  063E               	decf	_g_RS485_Byte,f,c
  5061  000700  D000               	goto	l2874
  5062  000702                     l2874:
  5063                           
  5064                           ; BSR set to: 0
  5065                           ;Key.c: 209: if (gs_Local_Key_User.a_key_state[3-1] == KEY_hold) g_RS485_Byte -- ;
  5066  000702  0E03               	movlw	3
  5067  000704  0100               	movlb	0	; () banked
  5068  000706  197E               	xorwf	(_gs_Local_Key_User+17)& (0+255),w,b	;volatile
  5069  000708  A4D8               	btfss	status,2,c
  5070  00070A  D002               	goto	l2878
  5071                           
  5072                           ; BSR set to: 0
  5073  00070C  063E               	decf	_g_RS485_Byte,f,c
  5074  00070E  D000               	goto	l2878
  5075  000710                     l2878:
  5076                           
  5077                           ; BSR set to: 0
  5078                           ;Key.c: 212: if (gs_Local_Key_User.a_key_state[4-1] == KEY_short) ga_RS485_SendBuff[g_RS
      +                          485_Byte] ++ ;
  5079  000710  0100               	movlb	0	; () banked
  5080  000712  057F               	decf	(_gs_Local_Key_User+18)& (0+255),w,b	;volatile
  5081  000714  A4D8               	btfss	status,2,c
  5082  000716  D00A               	goto	l2882
  5083                           
  5084                           ; BSR set to: 0
  5085  000718  503E               	movf	_g_RS485_Byte,w,c
  5086  00071A  0D01               	mullw	1
  5087  00071C  0EA1               	movlw	low _ga_RS485_SendBuff
  5088  00071E  24F3               	addwf	prodl,w,c
  5089  000720  6ED9               	movwf	fsr2l,c
  5090  000722  0E00               	movlw	high _ga_RS485_SendBuff
  5091  000724  20F4               	addwfc	prodh,w,c
  5092  000726  6EDA               	movwf	fsr2h,c
  5093  000728  2ADF               	incf	indf2,f,c
  5094  00072A  D000               	goto	l2882
  5095  00072C                     l2882:
  5096                           
  5097                           ; BSR set to: 0
  5098                           ;Key.c: 213: if (gs_Local_Key_User.a_key_state[4-1] == KEY_hold) ga_RS485_SendBuff[g_RS4
      +                          85_Byte] ++ ;
  5099  00072C  0E03               	movlw	3
  5100  00072E  0100               	movlb	0	; () banked
  5101  000730  197F               	xorwf	(_gs_Local_Key_User+18)& (0+255),w,b	;volatile
  5102  000732  A4D8               	btfss	status,2,c
  5103  000734  D00A               	goto	l2886
  5104                           
  5105                           ; BSR set to: 0
  5106  000736  503E               	movf	_g_RS485_Byte,w,c
  5107  000738  0D01               	mullw	1
  5108  00073A  0EA1               	movlw	low _ga_RS485_SendBuff
  5109  00073C  24F3               	addwf	prodl,w,c
  5110  00073E  6ED9               	movwf	fsr2l,c
  5111  000740  0E00               	movlw	high _ga_RS485_SendBuff
  5112  000742  20F4               	addwfc	prodh,w,c
  5113  000744  6EDA               	movwf	fsr2h,c
  5114  000746  2ADF               	incf	indf2,f,c
  5115  000748  D000               	goto	l2886
  5116  00074A                     l2886:
  5117                           
  5118                           ; BSR set to: 0
  5119                           ;Key.c: 216: if (gs_Local_Key_User.a_key_state[5-1] == KEY_short)
  5120  00074A  0100               	movlb	0	; () banked
  5121  00074C  0580               	decf	(_gs_Local_Key_User+19)& (0+255),w,b	;volatile
  5122  00074E  A4D8               	btfss	status,2,c
  5123  000750  D003               	goto	l2890
  5124                           
  5125                           ; BSR set to: 0
  5126                           ;Key.c: 217: gs_Switch.Usart_OneDate = 1;
  5127  000752  0E01               	movlw	1
  5128  000754  6E43               	movwf	_gs_Switch+2,c
  5129  000756  D000               	goto	l2890
  5130  000758                     l2890:
  5131                           
  5132                           ; BSR set to: 0
  5133                           ;Key.c: 220: if (gs_Local_Key_User.a_key_state[6-1] == KEY_short) ga_RS485_SendBuff[g_RS
      +                          485_Byte] -- ;
  5134  000758  0100               	movlb	0	; () banked
  5135  00075A  0581               	decf	(_gs_Local_Key_User+20)& (0+255),w,b	;volatile
  5136  00075C  A4D8               	btfss	status,2,c
  5137  00075E  D00A               	goto	l2894
  5138                           
  5139                           ; BSR set to: 0
  5140  000760  503E               	movf	_g_RS485_Byte,w,c
  5141  000762  0D01               	mullw	1
  5142  000764  0EA1               	movlw	low _ga_RS485_SendBuff
  5143  000766  24F3               	addwf	prodl,w,c
  5144  000768  6ED9               	movwf	fsr2l,c
  5145  00076A  0E00               	movlw	high _ga_RS485_SendBuff
  5146  00076C  20F4               	addwfc	prodh,w,c
  5147  00076E  6EDA               	movwf	fsr2h,c
  5148  000770  06DF               	decf	indf2,f,c
  5149  000772  D000               	goto	l2894
  5150  000774                     l2894:
  5151                           
  5152                           ; BSR set to: 0
  5153                           ;Key.c: 221: if (gs_Local_Key_User.a_key_state[6-1] == KEY_hold) ga_RS485_SendBuff[g_RS4
      +                          85_Byte] -- ;
  5154  000774  0E03               	movlw	3
  5155  000776  0100               	movlb	0	; () banked
  5156  000778  1981               	xorwf	(_gs_Local_Key_User+20)& (0+255),w,b	;volatile
  5157  00077A  A4D8               	btfss	status,2,c
  5158  00077C  D00A               	goto	l2898
  5159                           
  5160                           ; BSR set to: 0
  5161  00077E  503E               	movf	_g_RS485_Byte,w,c
  5162  000780  0D01               	mullw	1
  5163  000782  0EA1               	movlw	low _ga_RS485_SendBuff
  5164  000784  24F3               	addwf	prodl,w,c
  5165  000786  6ED9               	movwf	fsr2l,c
  5166  000788  0E00               	movlw	high _ga_RS485_SendBuff
  5167  00078A  20F4               	addwfc	prodh,w,c
  5168  00078C  6EDA               	movwf	fsr2h,c
  5169  00078E  06DF               	decf	indf2,f,c
  5170  000790  D000               	goto	l2898
  5171  000792                     l2898:
  5172                           
  5173                           ; BSR set to: 0
  5174                           ;Key.c: 225: if( g_RS485_Byte > 250 ) g_RS485_Byte = 10 - 1;
  5175  000792  0EFA               	movlw	250
  5176  000794  643E               	cpfsgt	_g_RS485_Byte,c
  5177  000796  D002               	goto	l2902
  5178                           
  5179                           ; BSR set to: 0
  5180  000798  0E09               	movlw	9
  5181  00079A  D005               	goto	L6
  5182  00079C                     l2902:
  5183                           
  5184                           ; BSR set to: 0
  5185                           ;Key.c: 226: else g_RS485_Byte %= 10;
  5186  00079C  0E0A               	movlw	10
  5187  00079E  6E19               	movwf	___lbmod@divisor,c
  5188  0007A0  503E               	movf	_g_RS485_Byte,w,c
  5189  0007A2  ECC5  F00A         	call	___lbmod
  5190  0007A6                     L6:
  5191  0007A6  6E3E               	movwf	_g_RS485_Byte,c
  5192  0007A8  D000               	goto	l2904
  5193  0007AA                     l2904:
  5194                           
  5195                           ;Key.c: 229: Key_ResetFSM();
  5196  0007AA  ECC9  F009         	call	_Key_ResetFSM	;wreg free
  5197  0007AE  0012               	return		;funcret
  5198  0007B0                     __end_of_Key_ManageMessage:
  5199                           	opt stack 0
  5200                           tblptru	equ	0xFF8
  5201                           tblptrh	equ	0xFF7
  5202                           tblptrl	equ	0xFF6
  5203                           tablat	equ	0xFF5
  5204                           prodh	equ	0xFF4
  5205                           prodl	equ	0xFF3
  5206                           intcon	equ	0xFF2
  5207                           postinc0	equ	0xFEE
  5208                           wreg	equ	0xFE8
  5209                           indf1	equ	0xFE7
  5210                           postdec1	equ	0xFE5
  5211                           fsr1h	equ	0xFE2
  5212                           fsr1l	equ	0xFE1
  5213                           indf2	equ	0xFDF
  5214                           postinc2	equ	0xFDE
  5215                           fsr2h	equ	0xFDA
  5216                           fsr2l	equ	0xFD9
  5217                           status	equ	0xFD8
  5218                           
  5219 ;; *************** function ___lbmod *****************
  5220 ;; Defined at:
  5221 ;;		line 4 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbmod.c"
  5222 ;; Parameters:    Size  Location     Type
  5223 ;;  dividend        1    wreg     unsigned char 
  5224 ;;  divisor         1   24[COMRAM] unsigned char 
  5225 ;; Auto vars:     Size  Location     Type
  5226 ;;  dividend        1   25[COMRAM] unsigned char 
  5227 ;;  rem             1   27[COMRAM] unsigned char 
  5228 ;;  counter         1   26[COMRAM] unsigned char 
  5229 ;; Return value:  Size  Location     Type
  5230 ;;                  1    wreg      unsigned char 
  5231 ;; Registers used:
  5232 ;;		wreg, status,2, status,0
  5233 ;; Tracked objects:
  5234 ;;		On entry : 0/0
  5235 ;;		On exit  : 0/0
  5236 ;;		Unchanged: 0/0
  5237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5238 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5239 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5241 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5242 ;;Total ram usage:        4 bytes
  5243 ;; Hardware stack levels used:    1
  5244 ;; Hardware stack levels required when called:    3
  5245 ;; This function calls:
  5246 ;;		Nothing
  5247 ;; This function is called by:
  5248 ;;		_Key_ManageMessage
  5249 ;; This function uses a non-reentrant model
  5250 ;;
  5251                           
  5252                           	psect	text33
  5253  00158A                     __ptext33:
  5254                           	opt stack 0
  5255  00158A                     ___lbmod:
  5256                           	opt stack 25
  5257                           
  5258                           ;incstack = 0
  5259                           ;___lbmod@dividend stored from wreg
  5260  00158A  6E1A               	movwf	___lbmod@dividend,c
  5261  00158C  0E08               	movlw	8
  5262  00158E  6E1B               	movwf	___lbmod@counter,c
  5263  001590  0E00               	movlw	0
  5264  001592  6E1C               	movwf	___lbmod@rem,c
  5265  001594  D000               	goto	l2752
  5266  001596                     l2752:
  5267  001596  90D8               	bcf	status,0,c
  5268  001598  341A               	rlcf	___lbmod@dividend,w,c
  5269  00159A  341C               	rlcf	___lbmod@rem,w,c
  5270  00159C  6E1C               	movwf	___lbmod@rem,c
  5271  00159E  90D8               	bcf	status,0,c
  5272  0015A0  361A               	rlcf	___lbmod@dividend,f,c
  5273  0015A2  5019               	movf	___lbmod@divisor,w,c
  5274  0015A4  5C1C               	subwf	___lbmod@rem,w,c
  5275  0015A6  A0D8               	btfss	status,0,c
  5276  0015A8  D003               	goto	l2760
  5277  0015AA  5019               	movf	___lbmod@divisor,w,c
  5278  0015AC  5E1C               	subwf	___lbmod@rem,f,c
  5279  0015AE  D000               	goto	l2760
  5280  0015B0                     l2760:
  5281  0015B0  2E1B               	decfsz	___lbmod@counter,f,c
  5282  0015B2  D7F1               	goto	l2752
  5283  0015B4  D000               	goto	l2762
  5284  0015B6                     l2762:
  5285  0015B6  501C               	movf	___lbmod@rem,w,c
  5286  0015B8  0012               	return	
  5287  0015BA  0012               	return		;funcret
  5288  0015BC                     __end_of___lbmod:
  5289                           	opt stack 0
  5290                           tblptru	equ	0xFF8
  5291                           tblptrh	equ	0xFF7
  5292                           tblptrl	equ	0xFF6
  5293                           tablat	equ	0xFF5
  5294                           prodh	equ	0xFF4
  5295                           prodl	equ	0xFF3
  5296                           intcon	equ	0xFF2
  5297                           postinc0	equ	0xFEE
  5298                           wreg	equ	0xFE8
  5299                           indf1	equ	0xFE7
  5300                           postdec1	equ	0xFE5
  5301                           fsr1h	equ	0xFE2
  5302                           fsr1l	equ	0xFE1
  5303                           indf2	equ	0xFDF
  5304                           postinc2	equ	0xFDE
  5305                           fsr2h	equ	0xFDA
  5306                           fsr2l	equ	0xFD9
  5307                           status	equ	0xFD8
  5308                           
  5309 ;; *************** function _Key_ResetFSM *****************
  5310 ;; Defined at:
  5311 ;;		line 162 in file "_01_USER/Key.c"
  5312 ;; Parameters:    Size  Location     Type
  5313 ;;		None
  5314 ;; Auto vars:     Size  Location     Type
  5315 ;;  t               1   24[COMRAM] unsigned char 
  5316 ;; Return value:  Size  Location     Type
  5317 ;;		None               void
  5318 ;; Registers used:
  5319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5320 ;; Tracked objects:
  5321 ;;		On entry : 0/0
  5322 ;;		On exit  : 0/0
  5323 ;;		Unchanged: 0/0
  5324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5326 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5328 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5329 ;;Total ram usage:        1 bytes
  5330 ;; Hardware stack levels used:    1
  5331 ;; Hardware stack levels required when called:    3
  5332 ;; This function calls:
  5333 ;;		Nothing
  5334 ;; This function is called by:
  5335 ;;		_Key_ManageMessage
  5336 ;; This function uses a non-reentrant model
  5337 ;;
  5338                           
  5339                           	psect	text34
  5340  001392                     __ptext34:
  5341                           	opt stack 0
  5342  001392                     _Key_ResetFSM:
  5343                           	opt stack 25
  5344                           
  5345                           ;Key.c: 164: unsigned char t;
  5346                           ;Key.c: 165: gs_Local_Key_User.key_BUS = 0x00;
  5347                           
  5348                           ;incstack = 0
  5349  001392  0E00               	movlw	0
  5350  001394  0100               	movlb	0	; () banked
  5351  001396  6F6D               	movwf	_gs_Local_Key_User& (0+255),b	;volatile
  5352                           
  5353                           ;Key.c: 166: gs_Local_Key_User.key_group = KEY_default;
  5354  001398  0E00               	movlw	0
  5355  00139A  0100               	movlb	0	; () banked
  5356  00139C  6F6E               	movwf	(_gs_Local_Key_User+1)& (0+255),b	;volatile
  5357                           
  5358                           ;Key.c: 167: t=4;
  5359  00139E  0E04               	movlw	4
  5360  0013A0  6E19               	movwf	Key_ResetFSM@t,c
  5361                           
  5362                           ;Key.c: 168: while(t--) gs_Local_Key_User.a_key_count[t] = 0,
  5363  0013A2  D017               	goto	l2624
  5364  0013A4                     l2622:
  5365                           
  5366                           ;Key.c: 169: gs_Local_Key_User.a_key_state[t] = KEY_default;
  5367  0013A4  5019               	movf	Key_ResetFSM@t,w,c
  5368  0013A6  0D02               	mullw	2
  5369  0013A8  0E70               	movlw	low (_gs_Local_Key_User+3)
  5370  0013AA  24F3               	addwf	prodl,w,c
  5371  0013AC  6ED9               	movwf	fsr2l,c
  5372  0013AE  0E00               	movlw	high (_gs_Local_Key_User+3)
  5373  0013B0  20F4               	addwfc	prodh,w,c
  5374  0013B2  6EDA               	movwf	fsr2h,c
  5375  0013B4  0E00               	movlw	0
  5376  0013B6  6EDE               	movwf	postinc2,c
  5377  0013B8  0E00               	movlw	0
  5378  0013BA  6EDD               	movwf	postdec2,c
  5379  0013BC  5019               	movf	Key_ResetFSM@t,w,c
  5380  0013BE  0D01               	mullw	1
  5381  0013C0  0E7C               	movlw	low (_gs_Local_Key_User+15)
  5382  0013C2  24F3               	addwf	prodl,w,c
  5383  0013C4  6ED9               	movwf	fsr2l,c
  5384  0013C6  0E00               	movlw	high (_gs_Local_Key_User+15)
  5385  0013C8  20F4               	addwfc	prodh,w,c
  5386  0013CA  6EDA               	movwf	fsr2h,c
  5387  0013CC  0E00               	movlw	0
  5388  0013CE  6EDF               	movwf	indf2,c
  5389  0013D0  D000               	goto	l2624
  5390  0013D2                     l2624:
  5391  0013D2  0619               	decf	Key_ResetFSM@t,f,c
  5392  0013D4  2819               	incf	Key_ResetFSM@t,w,c
  5393  0013D6  A4D8               	btfss	status,2,c
  5394  0013D8  D7E5               	goto	l2622
  5395  0013DA  0012               	return		;funcret
  5396  0013DC                     __end_of_Key_ResetFSM:
  5397                           	opt stack 0
  5398                           tblptru	equ	0xFF8
  5399                           tblptrh	equ	0xFF7
  5400                           tblptrl	equ	0xFF6
  5401                           tablat	equ	0xFF5
  5402                           prodh	equ	0xFF4
  5403                           prodl	equ	0xFF3
  5404                           intcon	equ	0xFF2
  5405                           postinc0	equ	0xFEE
  5406                           wreg	equ	0xFE8
  5407                           indf1	equ	0xFE7
  5408                           postdec1	equ	0xFE5
  5409                           fsr1h	equ	0xFE2
  5410                           fsr1l	equ	0xFE1
  5411                           indf2	equ	0xFDF
  5412                           postinc2	equ	0xFDE
  5413                           postdec2	equ	0xFDD
  5414                           fsr2h	equ	0xFDA
  5415                           fsr2l	equ	0xFD9
  5416                           status	equ	0xFD8
  5417                           
  5418 ;; *************** function _Key_ReadFSM *****************
  5419 ;; Defined at:
  5420 ;;		line 113 in file "_01_USER/Key.c"
  5421 ;; Parameters:    Size  Location     Type
  5422 ;;		None
  5423 ;; Auto vars:     Size  Location     Type
  5424 ;;  key_num         1   29[COMRAM] unsigned char 
  5425 ;;  key_num_mate    1   28[COMRAM] unsigned char 
  5426 ;; Return value:  Size  Location     Type
  5427 ;;		None               void
  5428 ;; Registers used:
  5429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5430 ;; Tracked objects:
  5431 ;;		On entry : 0/0
  5432 ;;		On exit  : 0/0
  5433 ;;		Unchanged: 0/0
  5434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5436 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5437 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5438 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5439 ;;Total ram usage:        6 bytes
  5440 ;; Hardware stack levels used:    1
  5441 ;; Hardware stack levels required when called:    3
  5442 ;; This function calls:
  5443 ;;		Nothing
  5444 ;; This function is called by:
  5445 ;;		_Key_ManageMessage
  5446 ;; This function uses a non-reentrant model
  5447 ;;
  5448                           
  5449                           	psect	text35
  5450  000490                     __ptext35:
  5451                           	opt stack 0
  5452  000490                     _Key_ReadFSM:
  5453                           	opt stack 25
  5454                           
  5455                           ;Key.c: 115: unsigned char key_num = 6,key_num_mate;
  5456                           
  5457                           ;incstack = 0
  5458  000490  0E06               	movlw	6
  5459  000492  6E1E               	movwf	Key_ReadFSM@key_num,c
  5460                           
  5461                           ;Key.c: 118: while(key_num--)
  5462  000494  D072               	goto	l2592
  5463  000496                     l2574:
  5464                           
  5465                           ;Key.c: 119: {
  5466                           ;Key.c: 121: if( s_Local_Key_FSM.key_BUS == 0x00 )
  5467  000496  0100               	movlb	0	; () banked
  5468  000498  5182               	movf	_s_Local_Key_FSM& (0+255),w,b	;volatile
  5469  00049A  A4D8               	btfss	status,2,c
  5470  00049C  D04A               	goto	l2586
  5471                           
  5472                           ; BSR set to: 0
  5473                           ;Key.c: 122: {
  5474                           ;Key.c: 123: if( s_Local_Key_FSM.a_key_count[key_num] > 5 )
  5475  00049E  501E               	movf	Key_ReadFSM@key_num,w,c
  5476  0004A0  0D02               	mullw	2
  5477  0004A2  0E85               	movlw	low (_s_Local_Key_FSM+3)
  5478  0004A4  24F3               	addwf	prodl,w,c
  5479  0004A6  6ED9               	movwf	fsr2l,c
  5480  0004A8  0E00               	movlw	high (_s_Local_Key_FSM+3)
  5481  0004AA  20F4               	addwfc	prodh,w,c
  5482  0004AC  6EDA               	movwf	fsr2h,c
  5483  0004AE  0E01               	movlw	1
  5484  0004B0  50DB               	movf	plusw2,w,c
  5485  0004B2  E104               	bnz	u2190
  5486  0004B4  0E06               	movlw	6
  5487  0004B6  5CDE               	subwf	postinc2,w,c
  5488  0004B8  A0D8               	btfss	status,0,c
  5489  0004BA  D024               	goto	l2584
  5490  0004BC                     u2190:
  5491                           
  5492                           ; BSR set to: 0
  5493                           ;Key.c: 124: {
  5494                           ;Key.c: 125: if( s_Local_Key_FSM.a_key_count[key_num] > 60 )
  5495  0004BC  501E               	movf	Key_ReadFSM@key_num,w,c
  5496  0004BE  0D02               	mullw	2
  5497  0004C0  0E85               	movlw	low (_s_Local_Key_FSM+3)
  5498  0004C2  24F3               	addwf	prodl,w,c
  5499  0004C4  6ED9               	movwf	fsr2l,c
  5500  0004C6  0E00               	movlw	high (_s_Local_Key_FSM+3)
  5501  0004C8  20F4               	addwfc	prodh,w,c
  5502  0004CA  6EDA               	movwf	fsr2h,c
  5503  0004CC  0E01               	movlw	1
  5504  0004CE  50DB               	movf	plusw2,w,c
  5505  0004D0  E104               	bnz	u2200
  5506  0004D2  0E3D               	movlw	61
  5507  0004D4  5CDE               	subwf	postinc2,w,c
  5508  0004D6  A0D8               	btfss	status,0,c
  5509  0004D8  D00A               	goto	l2582
  5510  0004DA                     u2200:
  5511                           
  5512                           ; BSR set to: 0
  5513                           ;Key.c: 126: gs_Local_Key_User.a_key_state[key_num] = KEY_long;
  5514  0004DA  501E               	movf	Key_ReadFSM@key_num,w,c
  5515  0004DC  0D01               	mullw	1
  5516  0004DE  0E7C               	movlw	low (_gs_Local_Key_User+15)
  5517  0004E0  24F3               	addwf	prodl,w,c
  5518  0004E2  6ED9               	movwf	fsr2l,c
  5519  0004E4  0E00               	movlw	high (_gs_Local_Key_User+15)
  5520  0004E6  20F4               	addwfc	prodh,w,c
  5521  0004E8  6EDA               	movwf	fsr2h,c
  5522  0004EA  0E05               	movlw	5
  5523  0004EC  D014               	goto	L7
  5524  0004EE                     l2582:
  5525                           
  5526                           ; BSR set to: 0
  5527                           ;Key.c: 127: else gs_Local_Key_User.a_key_state[key_num] = KEY_short;
  5528  0004EE  501E               	movf	Key_ReadFSM@key_num,w,c
  5529  0004F0  0D01               	mullw	1
  5530  0004F2  0E7C               	movlw	low (_gs_Local_Key_User+15)
  5531  0004F4  24F3               	addwf	prodl,w,c
  5532  0004F6  6ED9               	movwf	fsr2l,c
  5533  0004F8  0E00               	movlw	high (_gs_Local_Key_User+15)
  5534  0004FA  20F4               	addwfc	prodh,w,c
  5535  0004FC  6EDA               	movwf	fsr2h,c
  5536  0004FE  0E01               	movlw	1
  5537  000500  6EDF               	movwf	indf2,c
  5538                           
  5539                           ; BSR set to: 0
  5540                           ;Key.c: 128: }
  5541  000502  D00A               	goto	l134
  5542  000504                     l2584:
  5543                           
  5544                           ; BSR set to: 0
  5545                           ;Key.c: 129: else gs_Local_Key_User.a_key_state[key_num] = KEY_default;
  5546  000504  501E               	movf	Key_ReadFSM@key_num,w,c
  5547  000506  0D01               	mullw	1
  5548  000508  0E7C               	movlw	low (_gs_Local_Key_User+15)
  5549  00050A  24F3               	addwf	prodl,w,c
  5550  00050C  6ED9               	movwf	fsr2l,c
  5551  00050E  0E00               	movlw	high (_gs_Local_Key_User+15)
  5552  000510  20F4               	addwfc	prodh,w,c
  5553  000512  6EDA               	movwf	fsr2h,c
  5554  000514  0E00               	movlw	0
  5555  000516                     L7:
  5556  000516  6EDF               	movwf	indf2,c
  5557  000518                     l134:
  5558                           
  5559                           ; BSR set to: 0
  5560                           ;Key.c: 130: s_Local_Key_FSM.a_key_count[key_num] = 0;
  5561  000518  501E               	movf	Key_ReadFSM@key_num,w,c
  5562  00051A  0D02               	mullw	2
  5563  00051C  0E85               	movlw	low (_s_Local_Key_FSM+3)
  5564  00051E  24F3               	addwf	prodl,w,c
  5565  000520  6ED9               	movwf	fsr2l,c
  5566  000522  0E00               	movlw	high (_s_Local_Key_FSM+3)
  5567  000524  20F4               	addwfc	prodh,w,c
  5568  000526  6EDA               	movwf	fsr2h,c
  5569  000528  0E00               	movlw	0
  5570  00052A  6EDE               	movwf	postinc2,c
  5571  00052C  0E00               	movlw	0
  5572  00052E  6EDD               	movwf	postdec2,c
  5573                           
  5574                           ;Key.c: 131: }
  5575  000530  D024               	goto	l2592
  5576  000532                     l2586:
  5577                           
  5578                           ; BSR set to: 0
  5579                           ;Key.c: 133: else if( s_Local_Key_FSM.a_key_count[key_num] > 60 )
  5580  000532  501E               	movf	Key_ReadFSM@key_num,w,c
  5581  000534  0D02               	mullw	2
  5582  000536  0E85               	movlw	low (_s_Local_Key_FSM+3)
  5583  000538  24F3               	addwf	prodl,w,c
  5584  00053A  6ED9               	movwf	fsr2l,c
  5585  00053C  0E00               	movlw	high (_s_Local_Key_FSM+3)
  5586  00053E  20F4               	addwfc	prodh,w,c
  5587  000540  6EDA               	movwf	fsr2h,c
  5588  000542  0E01               	movlw	1
  5589  000544  50DB               	movf	plusw2,w,c
  5590  000546  E104               	bnz	u2210
  5591  000548  0E3D               	movlw	61
  5592  00054A  5CDE               	subwf	postinc2,w,c
  5593  00054C  A0D8               	btfss	status,0,c
  5594  00054E  D00A               	goto	l2590
  5595  000550                     u2210:
  5596                           
  5597                           ; BSR set to: 0
  5598                           ;Key.c: 134: gs_Local_Key_User.a_key_state[key_num] = KEY_hold;
  5599  000550  501E               	movf	Key_ReadFSM@key_num,w,c
  5600  000552  0D01               	mullw	1
  5601  000554  0E7C               	movlw	low (_gs_Local_Key_User+15)
  5602  000556  24F3               	addwf	prodl,w,c
  5603  000558  6ED9               	movwf	fsr2l,c
  5604  00055A  0E00               	movlw	high (_gs_Local_Key_User+15)
  5605  00055C  20F4               	addwfc	prodh,w,c
  5606  00055E  6EDA               	movwf	fsr2h,c
  5607  000560  0E03               	movlw	3
  5608  000562  D009               	goto	L8
  5609  000564                     l2590:
  5610                           
  5611                           ; BSR set to: 0
  5612                           ;Key.c: 137: else gs_Local_Key_User.a_key_state[key_num] = KEY_busy;
  5613  000564  501E               	movf	Key_ReadFSM@key_num,w,c
  5614  000566  0D01               	mullw	1
  5615  000568  0E7C               	movlw	low (_gs_Local_Key_User+15)
  5616  00056A  24F3               	addwf	prodl,w,c
  5617  00056C  6ED9               	movwf	fsr2l,c
  5618  00056E  0E00               	movlw	high (_gs_Local_Key_User+15)
  5619  000570  20F4               	addwfc	prodh,w,c
  5620  000572  6EDA               	movwf	fsr2h,c
  5621  000574  0E04               	movlw	4
  5622  000576                     L8:
  5623  000576  6EDF               	movwf	indf2,c
  5624                           
  5625                           ; BSR set to: 0
  5626                           
  5627                           ; BSR set to: 0
  5628  000578  D000               	goto	l2592
  5629  00057A                     l2592:
  5630  00057A  061E               	decf	Key_ReadFSM@key_num,f,c
  5631  00057C  281E               	incf	Key_ReadFSM@key_num,w,c
  5632  00057E  A4D8               	btfss	status,2,c
  5633  000580  D78A               	goto	l2574
  5634                           
  5635                           ;Key.c: 138: }
  5636                           ;Key.c: 141: for( key_num = 0;key_num < 6 - 1; key_num ++)
  5637  000582  0E00               	movlw	0
  5638  000584  6E1E               	movwf	Key_ReadFSM@key_num,c
  5639  000586  0E04               	movlw	4
  5640  000588  641E               	cpfsgt	Key_ReadFSM@key_num,c
  5641  00058A  D002               	goto	l2600
  5642  00058C  0012               	return	
  5643  00058E  0012               	return	
  5644  000590                     l2600:
  5645                           
  5646                           ;Key.c: 142: for( key_num_mate = key_num+1;key_num_mate < 6 ; key_num_mate ++)
  5647  000590  281E               	incf	Key_ReadFSM@key_num,w,c
  5648  000592  6E1D               	movwf	Key_ReadFSM@key_num_mate,c
  5649  000594  0E05               	movlw	5
  5650  000596  641D               	cpfsgt	Key_ReadFSM@key_num_mate,c
  5651  000598  D001               	goto	l2604
  5652  00059A  D045               	goto	l2616
  5653  00059C                     l2604:
  5654                           
  5655                           ;Key.c: 143: if( gs_Local_Key_User.a_key_state[key_num] == gs_Local_Key_User.a_key_state
      +                          [key_num_mate] )
  5656  00059C  501D               	movf	Key_ReadFSM@key_num_mate,w,c
  5657  00059E  0D01               	mullw	1
  5658  0005A0  0E7C               	movlw	low (_gs_Local_Key_User+15)
  5659  0005A2  24F3               	addwf	prodl,w,c
  5660  0005A4  6ED9               	movwf	fsr2l,c
  5661  0005A6  0E00               	movlw	high (_gs_Local_Key_User+15)
  5662  0005A8  20F4               	addwfc	prodh,w,c
  5663  0005AA  6EDA               	movwf	fsr2h,c
  5664  0005AC  501E               	movf	Key_ReadFSM@key_num,w,c
  5665  0005AE  0D01               	mullw	1
  5666  0005B0  0E7C               	movlw	low (_gs_Local_Key_User+15)
  5667  0005B2  24F3               	addwf	prodl,w,c
  5668  0005B4  6EE1               	movwf	fsr1l,c
  5669  0005B6  0E00               	movlw	high (_gs_Local_Key_User+15)
  5670  0005B8  20F4               	addwfc	prodh,w,c
  5671  0005BA  6EE2               	movwf	fsr1h,c
  5672  0005BC  50DE               	movf	postinc2,w,c
  5673  0005BE  18E6               	xorwf	postinc1,w,c
  5674  0005C0  A4D8               	btfss	status,2,c
  5675  0005C2  D02F               	goto	l2612
  5676                           
  5677                           ;Key.c: 144: if(gs_Local_Key_User.a_key_state[key_num] != KEY_default)
  5678  0005C4  501E               	movf	Key_ReadFSM@key_num,w,c
  5679  0005C6  0D01               	mullw	1
  5680  0005C8  0E7C               	movlw	low (_gs_Local_Key_User+15)
  5681  0005CA  24F3               	addwf	prodl,w,c
  5682  0005CC  6ED9               	movwf	fsr2l,c
  5683  0005CE  0E00               	movlw	high (_gs_Local_Key_User+15)
  5684  0005D0  20F4               	addwfc	prodh,w,c
  5685  0005D2  6EDA               	movwf	fsr2h,c
  5686  0005D4  50DF               	movf	indf2,w,c
  5687  0005D6  B4D8               	btfsc	status,2,c
  5688  0005D8  D024               	goto	l2612
  5689                           
  5690                           ;Key.c: 145: {
  5691                           ;Key.c: 146: gs_Local_Key_User.key_group = (0x01 << key_num)|(0x01 << key_num_mate);
  5692  0005DA  C01D  F019         	movff	Key_ReadFSM@key_num_mate,??_Key_ReadFSM
  5693  0005DE  0E01               	movlw	1
  5694  0005E0  6E1A               	movwf	(??_Key_ReadFSM+1)& (0+255),c
  5695  0005E2  2A19               	incf	??_Key_ReadFSM,f,c
  5696  0005E4  D002               	goto	u2274
  5697  0005E6                     u2275:
  5698  0005E6  90D8               	bcf	status,0,c
  5699  0005E8  361A               	rlcf	??_Key_ReadFSM+1,f,c
  5700  0005EA                     u2274:
  5701  0005EA  2E19               	decfsz	??_Key_ReadFSM,f,c
  5702  0005EC  D7FC               	goto	u2275
  5703  0005EE  C01E  F01B         	movff	Key_ReadFSM@key_num,??_Key_ReadFSM+2
  5704  0005F2  0E01               	movlw	1
  5705  0005F4  6E1C               	movwf	(??_Key_ReadFSM+3)& (0+255),c
  5706  0005F6  2A1B               	incf	??_Key_ReadFSM+2,f,c
  5707  0005F8  D002               	goto	u2284
  5708  0005FA                     u2285:
  5709  0005FA  90D8               	bcf	status,0,c
  5710  0005FC  361C               	rlcf	??_Key_ReadFSM+3,f,c
  5711  0005FE                     u2284:
  5712  0005FE  2E1B               	decfsz	??_Key_ReadFSM+2,f,c
  5713  000600  D7FC               	goto	u2285
  5714  000602  501C               	movf	??_Key_ReadFSM+3,w,c
  5715  000604  101A               	iorwf	??_Key_ReadFSM+1,w,c
  5716  000606  0100               	movlb	0	; () banked
  5717  000608  6F6E               	movwf	(_gs_Local_Key_User+1)& (0+255),b	;volatile
  5718                           
  5719                           ; BSR set to: 0
  5720                           ;Key.c: 147: gs_Local_Key_User.key_group_state = gs_Local_Key_User.a_key_state[key_num];
  5721  00060A  501E               	movf	Key_ReadFSM@key_num,w,c
  5722  00060C  0D01               	mullw	1
  5723  00060E  0E7C               	movlw	low (_gs_Local_Key_User+15)
  5724  000610  24F3               	addwf	prodl,w,c
  5725  000612  6ED9               	movwf	fsr2l,c
  5726  000614  0E00               	movlw	high (_gs_Local_Key_User+15)
  5727  000616  20F4               	addwfc	prodh,w,c
  5728  000618  6EDA               	movwf	fsr2h,c
  5729  00061A  50DF               	movf	indf2,w,c
  5730  00061C  0100               	movlb	0	; () banked
  5731  00061E  6F6F               	movwf	(_gs_Local_Key_User+2)& (0+255),b	;volatile
  5732                           
  5733                           ; BSR set to: 0
  5734  000620  D000               	goto	l2612
  5735  000622                     l2612:
  5736  000622  2A1D               	incf	Key_ReadFSM@key_num_mate,f,c
  5737  000624  D7B7               	goto	L9
  5738  000626                     l2616:
  5739  000626  2A1E               	incf	Key_ReadFSM@key_num,f,c
  5740  000628  0E04               	movlw	4
  5741  00062A  641E               	cpfsgt	Key_ReadFSM@key_num,c
  5742  00062C  D7B1               	goto	l2600
  5743  00062E  0012               	return	
  5744  000630  0012               	return		;funcret
  5745  000632                     __end_of_Key_ReadFSM:
  5746                           	opt stack 0
  5747                           tblptru	equ	0xFF8
  5748                           tblptrh	equ	0xFF7
  5749                           tblptrl	equ	0xFF6
  5750                           tablat	equ	0xFF5
  5751                           prodh	equ	0xFF4
  5752                           prodl	equ	0xFF3
  5753                           intcon	equ	0xFF2
  5754                           postinc0	equ	0xFEE
  5755                           wreg	equ	0xFE8
  5756                           indf1	equ	0xFE7
  5757                           postinc1	equ	0xFE6
  5758                           postdec1	equ	0xFE5
  5759                           fsr1h	equ	0xFE2
  5760                           fsr1l	equ	0xFE1
  5761                           indf2	equ	0xFDF
  5762                           postinc2	equ	0xFDE
  5763                           postdec2	equ	0xFDD
  5764                           plusw2	equ	0xFDB
  5765                           fsr2h	equ	0xFDA
  5766                           fsr2l	equ	0xFD9
  5767                           status	equ	0xFD8
  5768                           
  5769 ;; *************** function _Key_Init *****************
  5770 ;; Defined at:
  5771 ;;		line 42 in file "_01_USER/Key.c"
  5772 ;; Parameters:    Size  Location     Type
  5773 ;;		None
  5774 ;; Auto vars:     Size  Location     Type
  5775 ;;		None
  5776 ;; Return value:  Size  Location     Type
  5777 ;;		None               void
  5778 ;; Registers used:
  5779 ;;		None
  5780 ;; Tracked objects:
  5781 ;;		On entry : 0/0
  5782 ;;		On exit  : 0/0
  5783 ;;		Unchanged: 0/0
  5784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5789 ;;Total ram usage:        0 bytes
  5790 ;; Hardware stack levels used:    1
  5791 ;; Hardware stack levels required when called:    3
  5792 ;; This function calls:
  5793 ;;		Nothing
  5794 ;; This function is called by:
  5795 ;;		_main
  5796 ;; This function uses a non-reentrant model
  5797 ;;
  5798                           
  5799                           	psect	text36
  5800  00171E                     __ptext36:
  5801                           	opt stack 0
  5802  00171E                     _Key_Init:
  5803                           	opt stack 27
  5804                           
  5805                           ;Key.c: 45: TRISC1 = 1;
  5806                           
  5807                           ;incstack = 0
  5808  00171E  8294               	bsf	3988,1,c	;volatile
  5809                           
  5810                           ;Key.c: 46: TRISF1 = 1;
  5811  001720  8297               	bsf	3991,1,c	;volatile
  5812                           
  5813                           ;Key.c: 47: TRISF2 = 1;
  5814  001722  8497               	bsf	3991,2,c	;volatile
  5815                           
  5816                           ;Key.c: 48: TRISA4 = 1;
  5817  001724  8892               	bsf	3986,4,c	;volatile
  5818                           
  5819                           ;Key.c: 49: TRISA5 = 1;
  5820  001726  8A92               	bsf	3986,5,c	;volatile
  5821                           
  5822                           ;Key.c: 50: TRISF3 = 1;
  5823  001728  8697               	bsf	3991,3,c	;volatile
  5824                           
  5825                           ;Key.c: 53: ANSEL4 = 0;
  5826  00172A  010F               	movlb	15	; () banked
  5827  00172C  9925               	bcf	37,4,b	;volatile
  5828                           
  5829                           ;Key.c: 54: ANSEL6 = 0;
  5830  00172E  010F               	movlb	15	; () banked
  5831  001730  9D25               	bcf	37,6,b	;volatile
  5832                           
  5833                           ;Key.c: 55: ANSEL7 = 0;
  5834  001732  010F               	movlb	15	; () banked
  5835  001734  9F25               	bcf	37,7,b	;volatile
  5836                           
  5837                           ;Key.c: 56: ANSEL8 = 0;
  5838  001736  010F               	movlb	15	; () banked
  5839  001738  9124               	bcf	36,0,b	;volatile
  5840                           
  5841                           ; BSR set to: 15
  5842  00173A  0012               	return		;funcret
  5843  00173C                     __end_of_Key_Init:
  5844                           	opt stack 0
  5845                           tblptru	equ	0xFF8
  5846                           tblptrh	equ	0xFF7
  5847                           tblptrl	equ	0xFF6
  5848                           tablat	equ	0xFF5
  5849                           prodh	equ	0xFF4
  5850                           prodl	equ	0xFF3
  5851                           intcon	equ	0xFF2
  5852                           postinc0	equ	0xFEE
  5853                           wreg	equ	0xFE8
  5854                           indf1	equ	0xFE7
  5855                           postinc1	equ	0xFE6
  5856                           postdec1	equ	0xFE5
  5857                           fsr1h	equ	0xFE2
  5858                           fsr1l	equ	0xFE1
  5859                           indf2	equ	0xFDF
  5860                           postinc2	equ	0xFDE
  5861                           postdec2	equ	0xFDD
  5862                           plusw2	equ	0xFDB
  5863                           fsr2h	equ	0xFDA
  5864                           fsr2l	equ	0xFD9
  5865                           status	equ	0xFD8
  5866                           
  5867 ;; *************** function _Init_TM1640 *****************
  5868 ;; Defined at:
  5869 ;;		line 21 in file "_01_USER/TM1640.c"
  5870 ;; Parameters:    Size  Location     Type
  5871 ;;		None
  5872 ;; Auto vars:     Size  Location     Type
  5873 ;;		None
  5874 ;; Return value:  Size  Location     Type
  5875 ;;		None               void
  5876 ;; Registers used:
  5877 ;;		wreg, status,2, status,0, cstack
  5878 ;; Tracked objects:
  5879 ;;		On entry : 0/0
  5880 ;;		On exit  : 0/0
  5881 ;;		Unchanged: 0/0
  5882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5887 ;;Total ram usage:        0 bytes
  5888 ;; Hardware stack levels used:    1
  5889 ;; Hardware stack levels required when called:    5
  5890 ;; This function calls:
  5891 ;;		_TM1640_Start
  5892 ;;		_TM1640_Stop
  5893 ;;		_TM1640_Writer_Byte
  5894 ;; This function is called by:
  5895 ;;		_main
  5896 ;; This function uses a non-reentrant model
  5897 ;;
  5898                           
  5899                           	psect	text37
  5900  00166A                     __ptext37:
  5901                           	opt stack 0
  5902  00166A                     _Init_TM1640:
  5903                           	opt stack 25
  5904                           
  5905                           ;TM1640.c: 24: TRISD5 = 0;
  5906                           
  5907                           ; BSR set to: 15
  5908                           ;incstack = 0
  5909  00166A  9A95               	bcf	3989,5,c	;volatile
  5910                           
  5911                           ;TM1640.c: 25: TRISD6 = 0;
  5912  00166C  9C95               	bcf	3989,6,c	;volatile
  5913                           
  5914                           ;TM1640.c: 27: TM1640_Stop();
  5915  00166E  EC5A  F00B         	call	_TM1640_Stop	;wreg free
  5916                           
  5917                           ;TM1640.c: 29: TM1640_Start();
  5918  001672  EC6C  F00B         	call	_TM1640_Start	;wreg free
  5919                           
  5920                           ;TM1640.c: 30: TM1640_Writer_Byte(0x44);
  5921  001676  0E44               	movlw	68
  5922  001678  EC54  F00A         	call	_TM1640_Writer_Byte
  5923                           
  5924                           ;TM1640.c: 31: TM1640_Stop();
  5925  00167C  EC5A  F00B         	call	_TM1640_Stop	;wreg free
  5926                           
  5927                           ;TM1640.c: 33: TM1640_Start();
  5928  001680  EC6C  F00B         	call	_TM1640_Start	;wreg free
  5929                           
  5930                           ;TM1640.c: 34: TM1640_Writer_Byte(0x8F);
  5931  001684  0E8F               	movlw	143
  5932  001686  EC54  F00A         	call	_TM1640_Writer_Byte
  5933                           
  5934                           ;TM1640.c: 35: TM1640_Stop();
  5935  00168A  EC5A  F00B         	call	_TM1640_Stop	;wreg free
  5936  00168E  0012               	return		;funcret
  5937  001690                     __end_of_Init_TM1640:
  5938                           	opt stack 0
  5939                           tblptru	equ	0xFF8
  5940                           tblptrh	equ	0xFF7
  5941                           tblptrl	equ	0xFF6
  5942                           tablat	equ	0xFF5
  5943                           prodh	equ	0xFF4
  5944                           prodl	equ	0xFF3
  5945                           intcon	equ	0xFF2
  5946                           postinc0	equ	0xFEE
  5947                           wreg	equ	0xFE8
  5948                           indf1	equ	0xFE7
  5949                           postinc1	equ	0xFE6
  5950                           postdec1	equ	0xFE5
  5951                           fsr1h	equ	0xFE2
  5952                           fsr1l	equ	0xFE1
  5953                           indf2	equ	0xFDF
  5954                           postinc2	equ	0xFDE
  5955                           postdec2	equ	0xFDD
  5956                           plusw2	equ	0xFDB
  5957                           fsr2h	equ	0xFDA
  5958                           fsr2l	equ	0xFD9
  5959                           status	equ	0xFD8
  5960                           
  5961 ;; *************** function _TM1640_Writer_Byte *****************
  5962 ;; Defined at:
  5963 ;;		line 116 in file "_01_USER/TM1640.c"
  5964 ;; Parameters:    Size  Location     Type
  5965 ;;  Date            1    wreg     unsigned char 
  5966 ;; Auto vars:     Size  Location     Type
  5967 ;;  Date            1   26[COMRAM] unsigned char 
  5968 ;;  mask            1   27[COMRAM] unsigned char 
  5969 ;; Return value:  Size  Location     Type
  5970 ;;		None               void
  5971 ;; Registers used:
  5972 ;;		wreg, status,2, status,0, cstack
  5973 ;; Tracked objects:
  5974 ;;		On entry : 0/0
  5975 ;;		On exit  : 0/0
  5976 ;;		Unchanged: 0/0
  5977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5979 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5981 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5982 ;;Total ram usage:        2 bytes
  5983 ;; Hardware stack levels used:    1
  5984 ;; Hardware stack levels required when called:    4
  5985 ;; This function calls:
  5986 ;;		_TM1640_Delay
  5987 ;; This function is called by:
  5988 ;;		_Init_TM1640
  5989 ;;		_TM1640_Writer_Dates
  5990 ;;		_Open_Display
  5991 ;;		_Disable_Display
  5992 ;; This function uses a non-reentrant model
  5993 ;;
  5994                           
  5995                           	psect	text38
  5996  0014A8                     __ptext38:
  5997                           	opt stack 0
  5998  0014A8                     _TM1640_Writer_Byte:
  5999                           	opt stack 24
  6000                           
  6001                           ;incstack = 0
  6002                           ;TM1640_Writer_Byte@Date stored from wreg
  6003  0014A8  6E1B               	movwf	TM1640_Writer_Byte@Date,c
  6004                           
  6005                           ;TM1640.c: 118: unsigned char mask;
  6006                           ;TM1640.c: 120: for(mask=0x01; mask; mask<<=1)
  6007  0014AA  0E01               	movlw	1
  6008  0014AC  6E1C               	movwf	TM1640_Writer_Byte@mask,c
  6009  0014AE  D017               	goto	l2490
  6010  0014B0                     l406:
  6011                           
  6012                           ;TM1640.c: 121: {
  6013                           ;TM1640.c: 122: RD6 = 0;
  6014  0014B0  9C83               	bcf	3971,6,c	;volatile
  6015                           
  6016                           ;TM1640.c: 123: TM1640_Delay(1);
  6017  0014B2  0E01               	movlw	1
  6018  0014B4  ECB9  F00B         	call	_TM1640_Delay
  6019                           
  6020                           ;TM1640.c: 124: if(mask & Date)
  6021  0014B8  501C               	movf	TM1640_Writer_Byte@mask,w,c
  6022  0014BA  141B               	andwf	TM1640_Writer_Byte@Date,w,c
  6023  0014BC  0900               	iorlw	0
  6024  0014BE  B4D8               	btfsc	status,2,c
  6025  0014C0  D002               	goto	l407
  6026                           
  6027                           ;TM1640.c: 125: RD5 = 1;
  6028  0014C2  8A83               	bsf	3971,5,c	;volatile
  6029  0014C4  D002               	goto	l2484
  6030  0014C6                     l407:
  6031                           
  6032                           ;TM1640.c: 126: else
  6033                           ;TM1640.c: 127: RD5 = 0;
  6034  0014C6  9A83               	bcf	3971,5,c	;volatile
  6035  0014C8  D000               	goto	l2484
  6036  0014CA                     l2484:
  6037                           
  6038                           ;TM1640.c: 128: TM1640_Delay(1);
  6039  0014CA  0E01               	movlw	1
  6040  0014CC  ECB9  F00B         	call	_TM1640_Delay
  6041                           
  6042                           ;TM1640.c: 129: RD6 = 1;
  6043  0014D0  8C83               	bsf	3971,6,c	;volatile
  6044                           
  6045                           ;TM1640.c: 130: TM1640_Delay(1);
  6046  0014D2  0E01               	movlw	1
  6047  0014D4  ECB9  F00B         	call	_TM1640_Delay
  6048  0014D8  90D8               	bcf	status,0,c
  6049  0014DA  361C               	rlcf	TM1640_Writer_Byte@mask,f,c
  6050  0014DC  D000               	goto	l2490
  6051  0014DE                     l2490:
  6052  0014DE  501C               	movf	TM1640_Writer_Byte@mask,w,c
  6053  0014E0  A4D8               	btfss	status,2,c
  6054  0014E2  D7E6               	goto	l406
  6055  0014E4  0012               	return		;funcret
  6056  0014E6                     __end_of_TM1640_Writer_Byte:
  6057                           	opt stack 0
  6058                           tblptru	equ	0xFF8
  6059                           tblptrh	equ	0xFF7
  6060                           tblptrl	equ	0xFF6
  6061                           tablat	equ	0xFF5
  6062                           prodh	equ	0xFF4
  6063                           prodl	equ	0xFF3
  6064                           intcon	equ	0xFF2
  6065                           postinc0	equ	0xFEE
  6066                           wreg	equ	0xFE8
  6067                           indf1	equ	0xFE7
  6068                           postinc1	equ	0xFE6
  6069                           postdec1	equ	0xFE5
  6070                           fsr1h	equ	0xFE2
  6071                           fsr1l	equ	0xFE1
  6072                           indf2	equ	0xFDF
  6073                           postinc2	equ	0xFDE
  6074                           postdec2	equ	0xFDD
  6075                           plusw2	equ	0xFDB
  6076                           fsr2h	equ	0xFDA
  6077                           fsr2l	equ	0xFD9
  6078                           status	equ	0xFD8
  6079                           
  6080 ;; *************** function _TM1640_Stop *****************
  6081 ;; Defined at:
  6082 ;;		line 63 in file "_01_USER/TM1640.c"
  6083 ;; Parameters:    Size  Location     Type
  6084 ;;		None
  6085 ;; Auto vars:     Size  Location     Type
  6086 ;;		None
  6087 ;; Return value:  Size  Location     Type
  6088 ;;		None               void
  6089 ;; Registers used:
  6090 ;;		wreg, status,2, status,0, cstack
  6091 ;; Tracked objects:
  6092 ;;		On entry : 0/0
  6093 ;;		On exit  : 0/0
  6094 ;;		Unchanged: 0/0
  6095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6100 ;;Total ram usage:        0 bytes
  6101 ;; Hardware stack levels used:    1
  6102 ;; Hardware stack levels required when called:    4
  6103 ;; This function calls:
  6104 ;;		_TM1640_Delay
  6105 ;; This function is called by:
  6106 ;;		_Init_TM1640
  6107 ;;		_TM1640_Writer_Dates
  6108 ;;		_Open_Display
  6109 ;;		_Disable_Display
  6110 ;; This function uses a non-reentrant model
  6111 ;;
  6112                           
  6113                           	psect	text39
  6114  0016B4                     __ptext39:
  6115                           	opt stack 0
  6116  0016B4                     _TM1640_Stop:
  6117                           	opt stack 24
  6118                           
  6119                           ;TM1640.c: 65: RD6 = 0;
  6120                           
  6121                           ;incstack = 0
  6122  0016B4  9C83               	bcf	3971,6,c	;volatile
  6123                           
  6124                           ;TM1640.c: 66: TM1640_Delay(1);
  6125  0016B6  0E01               	movlw	1
  6126  0016B8  ECB9  F00B         	call	_TM1640_Delay
  6127                           
  6128                           ;TM1640.c: 67: RD5 = 0;
  6129  0016BC  9A83               	bcf	3971,5,c	;volatile
  6130                           
  6131                           ;TM1640.c: 68: TM1640_Delay(1);
  6132  0016BE  0E01               	movlw	1
  6133  0016C0  ECB9  F00B         	call	_TM1640_Delay
  6134                           
  6135                           ;TM1640.c: 69: RD6 = 1;
  6136  0016C4  8C83               	bsf	3971,6,c	;volatile
  6137                           
  6138                           ;TM1640.c: 70: TM1640_Delay(1);
  6139  0016C6  0E01               	movlw	1
  6140  0016C8  ECB9  F00B         	call	_TM1640_Delay
  6141                           
  6142                           ;TM1640.c: 71: RD5 = 1;
  6143  0016CC  8A83               	bsf	3971,5,c	;volatile
  6144                           
  6145                           ;TM1640.c: 72: TM1640_Delay(1);
  6146  0016CE  0E01               	movlw	1
  6147  0016D0  ECB9  F00B         	call	_TM1640_Delay
  6148                           
  6149                           ;TM1640.c: 73: RD6 = 0;
  6150  0016D4  9C83               	bcf	3971,6,c	;volatile
  6151  0016D6  0012               	return		;funcret
  6152  0016D8                     __end_of_TM1640_Stop:
  6153                           	opt stack 0
  6154                           tblptru	equ	0xFF8
  6155                           tblptrh	equ	0xFF7
  6156                           tblptrl	equ	0xFF6
  6157                           tablat	equ	0xFF5
  6158                           prodh	equ	0xFF4
  6159                           prodl	equ	0xFF3
  6160                           intcon	equ	0xFF2
  6161                           postinc0	equ	0xFEE
  6162                           wreg	equ	0xFE8
  6163                           indf1	equ	0xFE7
  6164                           postinc1	equ	0xFE6
  6165                           postdec1	equ	0xFE5
  6166                           fsr1h	equ	0xFE2
  6167                           fsr1l	equ	0xFE1
  6168                           indf2	equ	0xFDF
  6169                           postinc2	equ	0xFDE
  6170                           postdec2	equ	0xFDD
  6171                           plusw2	equ	0xFDB
  6172                           fsr2h	equ	0xFDA
  6173                           fsr2l	equ	0xFD9
  6174                           status	equ	0xFD8
  6175                           
  6176 ;; *************** function _TM1640_Start *****************
  6177 ;; Defined at:
  6178 ;;		line 44 in file "_01_USER/TM1640.c"
  6179 ;; Parameters:    Size  Location     Type
  6180 ;;		None
  6181 ;; Auto vars:     Size  Location     Type
  6182 ;;		None
  6183 ;; Return value:  Size  Location     Type
  6184 ;;		None               void
  6185 ;; Registers used:
  6186 ;;		wreg, status,2, status,0, cstack
  6187 ;; Tracked objects:
  6188 ;;		On entry : 0/0
  6189 ;;		On exit  : 0/0
  6190 ;;		Unchanged: 0/0
  6191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6196 ;;Total ram usage:        0 bytes
  6197 ;; Hardware stack levels used:    1
  6198 ;; Hardware stack levels required when called:    4
  6199 ;; This function calls:
  6200 ;;		_TM1640_Delay
  6201 ;; This function is called by:
  6202 ;;		_Init_TM1640
  6203 ;;		_TM1640_Writer_Dates
  6204 ;;		_Open_Display
  6205 ;;		_Disable_Display
  6206 ;; This function uses a non-reentrant model
  6207 ;;
  6208                           
  6209                           	psect	text40
  6210  0016D8                     __ptext40:
  6211                           	opt stack 0
  6212  0016D8                     _TM1640_Start:
  6213                           	opt stack 24
  6214                           
  6215                           ;TM1640.c: 46: RD6 = 0;
  6216                           
  6217                           ;incstack = 0
  6218  0016D8  9C83               	bcf	3971,6,c	;volatile
  6219                           
  6220                           ;TM1640.c: 47: TM1640_Delay(1);
  6221  0016DA  0E01               	movlw	1
  6222  0016DC  ECB9  F00B         	call	_TM1640_Delay
  6223                           
  6224                           ;TM1640.c: 48: RD5 = 1;
  6225  0016E0  8A83               	bsf	3971,5,c	;volatile
  6226                           
  6227                           ;TM1640.c: 49: TM1640_Delay(1);
  6228  0016E2  0E01               	movlw	1
  6229  0016E4  ECB9  F00B         	call	_TM1640_Delay
  6230                           
  6231                           ;TM1640.c: 50: RD6 = 1;
  6232  0016E8  8C83               	bsf	3971,6,c	;volatile
  6233                           
  6234                           ;TM1640.c: 51: TM1640_Delay(1);
  6235  0016EA  0E01               	movlw	1
  6236  0016EC  ECB9  F00B         	call	_TM1640_Delay
  6237                           
  6238                           ;TM1640.c: 52: RD5 = 0;
  6239  0016F0  9A83               	bcf	3971,5,c	;volatile
  6240                           
  6241                           ;TM1640.c: 53: TM1640_Delay(1);
  6242  0016F2  0E01               	movlw	1
  6243  0016F4  ECB9  F00B         	call	_TM1640_Delay
  6244                           
  6245                           ;TM1640.c: 54: RD6 = 0;
  6246  0016F8  9C83               	bcf	3971,6,c	;volatile
  6247  0016FA  0012               	return		;funcret
  6248  0016FC                     __end_of_TM1640_Start:
  6249                           	opt stack 0
  6250                           tblptru	equ	0xFF8
  6251                           tblptrh	equ	0xFF7
  6252                           tblptrl	equ	0xFF6
  6253                           tablat	equ	0xFF5
  6254                           prodh	equ	0xFF4
  6255                           prodl	equ	0xFF3
  6256                           intcon	equ	0xFF2
  6257                           postinc0	equ	0xFEE
  6258                           wreg	equ	0xFE8
  6259                           indf1	equ	0xFE7
  6260                           postinc1	equ	0xFE6
  6261                           postdec1	equ	0xFE5
  6262                           fsr1h	equ	0xFE2
  6263                           fsr1l	equ	0xFE1
  6264                           indf2	equ	0xFDF
  6265                           postinc2	equ	0xFDE
  6266                           postdec2	equ	0xFDD
  6267                           plusw2	equ	0xFDB
  6268                           fsr2h	equ	0xFDA
  6269                           fsr2l	equ	0xFD9
  6270                           status	equ	0xFD8
  6271                           
  6272 ;; *************** function _TM1640_Delay *****************
  6273 ;; Defined at:
  6274 ;;		line 166 in file "_01_USER/TM1640.c"
  6275 ;; Parameters:    Size  Location     Type
  6276 ;;  Time            1    wreg     unsigned char 
  6277 ;; Auto vars:     Size  Location     Type
  6278 ;;  Time            1   24[COMRAM] unsigned char 
  6279 ;;  i               1   25[COMRAM] unsigned char 
  6280 ;; Return value:  Size  Location     Type
  6281 ;;		None               void
  6282 ;; Registers used:
  6283 ;;		wreg, status,2, status,0
  6284 ;; Tracked objects:
  6285 ;;		On entry : 0/0
  6286 ;;		On exit  : 0/0
  6287 ;;		Unchanged: 0/0
  6288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6290 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6292 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6293 ;;Total ram usage:        2 bytes
  6294 ;; Hardware stack levels used:    1
  6295 ;; Hardware stack levels required when called:    3
  6296 ;; This function calls:
  6297 ;;		Nothing
  6298 ;; This function is called by:
  6299 ;;		_TM1640_Start
  6300 ;;		_TM1640_Stop
  6301 ;;		_TM1640_Writer_Byte
  6302 ;; This function uses a non-reentrant model
  6303 ;;
  6304                           
  6305                           	psect	text41
  6306  001772                     __ptext41:
  6307                           	opt stack 0
  6308  001772                     _TM1640_Delay:
  6309                           	opt stack 24
  6310                           
  6311                           ;incstack = 0
  6312                           ;TM1640_Delay@Time stored from wreg
  6313  001772  6E19               	movwf	TM1640_Delay@Time,c
  6314  001774                     
  6315                           ;TM1640.c: 171: {
  6316                           ;TM1640.c: 172: for(i=0; i<10; ++i);
  6317  001774  0E00               	movlw	0
  6318  001776  6E1A               	movwf	TM1640_Delay@i,c
  6319  001778  D002               	goto	l2426
  6320  00177A  D004               	goto	l421
  6321  00177C                     l2424:
  6322  00177C  2A1A               	incf	TM1640_Delay@i,f,c
  6323  00177E                     l2426:
  6324  00177E  0E09               	movlw	9
  6325  001780  641A               	cpfsgt	TM1640_Delay@i,c
  6326  001782  D7FC               	goto	l2424
  6327  001784                     l421:
  6328                           
  6329                           ;TM1640.c: 173: }while(--Time);
  6330  001784  2E19               	decfsz	TM1640_Delay@Time,f,c
  6331  001786  D7F6               	goto	l2418
  6332  001788  0012               	return	
  6333  00178A  0012               	return		;funcret
  6334  00178C                     __end_of_TM1640_Delay:
  6335                           	opt stack 0
  6336                           tblptru	equ	0xFF8
  6337                           tblptrh	equ	0xFF7
  6338                           tblptrl	equ	0xFF6
  6339                           tablat	equ	0xFF5
  6340                           prodh	equ	0xFF4
  6341                           prodl	equ	0xFF3
  6342                           intcon	equ	0xFF2
  6343                           postinc0	equ	0xFEE
  6344                           wreg	equ	0xFE8
  6345                           indf1	equ	0xFE7
  6346                           postinc1	equ	0xFE6
  6347                           postdec1	equ	0xFE5
  6348                           fsr1h	equ	0xFE2
  6349                           fsr1l	equ	0xFE1
  6350                           indf2	equ	0xFDF
  6351                           postinc2	equ	0xFDE
  6352                           postdec2	equ	0xFDD
  6353                           plusw2	equ	0xFDB
  6354                           fsr2h	equ	0xFDA
  6355                           fsr2l	equ	0xFD9
  6356                           status	equ	0xFD8
  6357                           
  6358 ;; *************** function _GPIO_Config *****************
  6359 ;; Defined at:
  6360 ;;		line 39 in file "_01_USER/GPIO.c"
  6361 ;; Parameters:    Size  Location     Type
  6362 ;;		None
  6363 ;; Auto vars:     Size  Location     Type
  6364 ;;		None
  6365 ;; Return value:  Size  Location     Type
  6366 ;;		None               void
  6367 ;; Registers used:
  6368 ;;		None
  6369 ;; Tracked objects:
  6370 ;;		On entry : 0/0
  6371 ;;		On exit  : 0/0
  6372 ;;		Unchanged: 0/0
  6373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6378 ;;Total ram usage:        0 bytes
  6379 ;; Hardware stack levels used:    1
  6380 ;; Hardware stack levels required when called:    3
  6381 ;; This function calls:
  6382 ;;		Nothing
  6383 ;; This function is called by:
  6384 ;;		_main
  6385 ;; This function uses a non-reentrant model
  6386 ;;
  6387                           
  6388                           	psect	text42
  6389  001802                     __ptext42:
  6390                           	opt stack 0
  6391  001802                     _GPIO_Config:
  6392                           	opt stack 27
  6393                           
  6394                           ;incstack = 0
  6395  001802  0012               	return		;funcret
  6396  001804                     __end_of_GPIO_Config:
  6397                           	opt stack 0
  6398                           tblptru	equ	0xFF8
  6399                           tblptrh	equ	0xFF7
  6400                           tblptrl	equ	0xFF6
  6401                           tablat	equ	0xFF5
  6402                           prodh	equ	0xFF4
  6403                           prodl	equ	0xFF3
  6404                           intcon	equ	0xFF2
  6405                           postinc0	equ	0xFEE
  6406                           wreg	equ	0xFE8
  6407                           indf1	equ	0xFE7
  6408                           postinc1	equ	0xFE6
  6409                           postdec1	equ	0xFE5
  6410                           fsr1h	equ	0xFE2
  6411                           fsr1l	equ	0xFE1
  6412                           indf2	equ	0xFDF
  6413                           postinc2	equ	0xFDE
  6414                           postdec2	equ	0xFDD
  6415                           plusw2	equ	0xFDB
  6416                           fsr2h	equ	0xFDA
  6417                           fsr2l	equ	0xFD9
  6418                           status	equ	0xFD8
  6419                           
  6420 ;; *************** function _ADC6_Init *****************
  6421 ;; Defined at:
  6422 ;;		line 37 in file "_01_USER/My_ADC.c"
  6423 ;; Parameters:    Size  Location     Type
  6424 ;;		None
  6425 ;; Auto vars:     Size  Location     Type
  6426 ;;		None
  6427 ;; Return value:  Size  Location     Type
  6428 ;;		None               void
  6429 ;; Registers used:
  6430 ;;		wreg, status,2, status,0, cstack
  6431 ;; Tracked objects:
  6432 ;;		On entry : 0/0
  6433 ;;		On exit  : 0/0
  6434 ;;		Unchanged: 0/0
  6435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6440 ;;Total ram usage:        0 bytes
  6441 ;; Hardware stack levels used:    1
  6442 ;; Hardware stack levels required when called:    4
  6443 ;; This function calls:
  6444 ;;		_OpenADC
  6445 ;; This function is called by:
  6446 ;;		_main
  6447 ;; This function uses a non-reentrant model
  6448 ;;
  6449                           
  6450                           	psect	text43
  6451  0017A4                     __ptext43:
  6452                           	opt stack 0
  6453  0017A4                     _ADC6_Init:
  6454                           	opt stack 26
  6455                           
  6456                           ;My_ADC.c: 40: OpenADC(0b11111111 &
  6457                           ;My_ADC.c: 41: 0b11110011 &
  6458                           ;My_ADC.c: 42: 0b10001111
  6459                           ;My_ADC.c: 43: ,
  6460                           ;My_ADC.c: 44: 0b10011011
  6461                           ;My_ADC.c: 45: ,
  6462                           ;My_ADC.c: 46: 0b00111111 &
  6463                           ;My_ADC.c: 47: 0b11111111 &
  6464                           ;My_ADC.c: 48: 0b11110111 &
  6465                           ;My_ADC.c: 49: 0b11111000
  6466                           ;My_ADC.c: 50: );
  6467                           
  6468                           ;incstack = 0
  6469  0017A4  0E9B               	movlw	155
  6470  0017A6  6E19               	movwf	OpenADC@config2,c
  6471  0017A8  0E30               	movlw	48
  6472  0017AA  6E1A               	movwf	OpenADC@config3,c
  6473  0017AC  0E83               	movlw	131
  6474  0017AE  EC57  F009         	call	_OpenADC
  6475                           
  6476                           ;My_ADC.c: 52: (PIE1bits.ADIE=0);
  6477  0017B2  9C9D               	bcf	3997,6,c	;volatile
  6478  0017B4  0012               	return		;funcret
  6479  0017B6                     __end_of_ADC6_Init:
  6480                           	opt stack 0
  6481                           tblptru	equ	0xFF8
  6482                           tblptrh	equ	0xFF7
  6483                           tblptrl	equ	0xFF6
  6484                           tablat	equ	0xFF5
  6485                           prodh	equ	0xFF4
  6486                           prodl	equ	0xFF3
  6487                           intcon	equ	0xFF2
  6488                           postinc0	equ	0xFEE
  6489                           wreg	equ	0xFE8
  6490                           indf1	equ	0xFE7
  6491                           postinc1	equ	0xFE6
  6492                           postdec1	equ	0xFE5
  6493                           fsr1h	equ	0xFE2
  6494                           fsr1l	equ	0xFE1
  6495                           indf2	equ	0xFDF
  6496                           postinc2	equ	0xFDE
  6497                           postdec2	equ	0xFDD
  6498                           plusw2	equ	0xFDB
  6499                           fsr2h	equ	0xFDA
  6500                           fsr2l	equ	0xFD9
  6501                           status	equ	0xFD8
  6502                           
  6503 ;; *************** function _OpenADC *****************
  6504 ;; Defined at:
  6505 ;;		line 305 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  6506 ;; Parameters:    Size  Location     Type
  6507 ;;  config          1    wreg     unsigned char 
  6508 ;;  config2         1   24[COMRAM] unsigned char 
  6509 ;;  config3         1   25[COMRAM] unsigned char 
  6510 ;; Auto vars:     Size  Location     Type
  6511 ;;  config          1   28[COMRAM] unsigned char 
  6512 ;; Return value:  Size  Location     Type
  6513 ;;		None               void
  6514 ;; Registers used:
  6515 ;;		wreg, status,2, status,0
  6516 ;; Tracked objects:
  6517 ;;		On entry : 0/0
  6518 ;;		On exit  : 0/0
  6519 ;;		Unchanged: 0/0
  6520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6521 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6522 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6523 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6524 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6525 ;;Total ram usage:        5 bytes
  6526 ;; Hardware stack levels used:    1
  6527 ;; Hardware stack levels required when called:    3
  6528 ;; This function calls:
  6529 ;;		Nothing
  6530 ;; This function is called by:
  6531 ;;		_ADC6_Init
  6532 ;; This function uses a non-reentrant model
  6533 ;;
  6534                           
  6535                           	psect	text44
  6536  0012AE                     __ptext44:
  6537                           	opt stack 0
  6538  0012AE                     _OpenADC:
  6539                           	opt stack 26
  6540                           
  6541                           ;incstack = 0
  6542                           ;OpenADC@config stored from wreg
  6543  0012AE  6E1D               	movwf	OpenADC@config,c
  6544  0012B0  0E00               	movlw	0
  6545  0012B2  6EC2               	movwf	4034,c	;volatile
  6546  0012B4  0E00               	movlw	0
  6547  0012B6  6EC1               	movwf	4033,c	;volatile
  6548  0012B8  0E00               	movlw	0
  6549  0012BA  6EC0               	movwf	4032,c	;volatile
  6550  0012BC  5019               	movf	OpenADC@config2,w,c
  6551  0012BE  0B7C               	andlw	124
  6552  0012C0  6EC2               	movwf	4034,c	;volatile
  6553  0012C2  C01A  FFC1         	movff	OpenADC@config3,4033	;volatile
  6554  0012C6  C01D  F01B         	movff	OpenADC@config,??_OpenADC
  6555  0012CA  90D8               	bcf	status,0,c
  6556  0012CC  361B               	rlcf	??_OpenADC,f,c
  6557  0012CE  90D8               	bcf	status,0,c
  6558  0012D0  361B               	rlcf	??_OpenADC,f,c
  6559  0012D2  0E38               	movlw	56
  6560  0012D4  161B               	andwf	??_OpenADC,f,c
  6561  0012D6  C01D  F01C         	movff	OpenADC@config,??_OpenADC+1
  6562  0012DA  3A1C               	swapf	??_OpenADC+1,f,c
  6563  0012DC  0E0F               	movlw	15
  6564  0012DE  161C               	andwf	??_OpenADC+1,f,c
  6565  0012E0  0E07               	movlw	7
  6566  0012E2  161C               	andwf	??_OpenADC+1,f,c
  6567  0012E4  501D               	movf	OpenADC@config,w,c
  6568  0012E6  0B80               	andlw	128
  6569  0012E8  101C               	iorwf	??_OpenADC+1,w,c
  6570  0012EA  101B               	iorwf	??_OpenADC,w,c
  6571  0012EC  6EC0               	movwf	4032,c	;volatile
  6572  0012EE  AE19               	btfss	OpenADC@config2,7,c
  6573  0012F0  D003               	goto	l623
  6574  0012F2  9C9E               	bcf	3998,6,c	;volatile
  6575  0012F4  8C9D               	bsf	3997,6,c	;volatile
  6576  0012F6  8CF2               	bsf	intcon,6,c	;volatile
  6577  0012F8                     l623:
  6578  0012F8  80C2               	bsf	4034,0,c	;volatile
  6579  0012FA  0012               	return		;funcret
  6580  0012FC                     __end_of_OpenADC:
  6581                           	opt stack 0
  6582                           tblptru	equ	0xFF8
  6583                           tblptrh	equ	0xFF7
  6584                           tblptrl	equ	0xFF6
  6585                           tablat	equ	0xFF5
  6586                           prodh	equ	0xFF4
  6587                           prodl	equ	0xFF3
  6588                           intcon	equ	0xFF2
  6589                           postinc0	equ	0xFEE
  6590                           wreg	equ	0xFE8
  6591                           indf1	equ	0xFE7
  6592                           postinc1	equ	0xFE6
  6593                           postdec1	equ	0xFE5
  6594                           fsr1h	equ	0xFE2
  6595                           fsr1l	equ	0xFE1
  6596                           indf2	equ	0xFDF
  6597                           postinc2	equ	0xFDE
  6598                           postdec2	equ	0xFDD
  6599                           plusw2	equ	0xFDB
  6600                           fsr2h	equ	0xFDA
  6601                           fsr2l	equ	0xFD9
  6602                           status	equ	0xFD8
  6603                           
  6604 ;; *************** function _Sys_Cyc *****************
  6605 ;; Defined at:
  6606 ;;		line 100 in file "_01_USER/My_Timer.c"
  6607 ;; Parameters:    Size  Location     Type
  6608 ;;		None
  6609 ;; Auto vars:     Size  Location     Type
  6610 ;;  _temp           1   23[COMRAM] unsigned char 
  6611 ;; Return value:  Size  Location     Type
  6612 ;;		None               void
  6613 ;; Registers used:
  6614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6615 ;; Tracked objects:
  6616 ;;		On entry : 0/0
  6617 ;;		On exit  : 0/0
  6618 ;;		Unchanged: 0/0
  6619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6621 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6622 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6623 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6624 ;;Total ram usage:       15 bytes
  6625 ;; Hardware stack levels used:    1
  6626 ;; Hardware stack levels required when called:    2
  6627 ;; This function calls:
  6628 ;;		_Key_ScanFSM
  6629 ;;		_Pulse_1Khz
  6630 ;;		i2_LED_Control
  6631 ;;		i2_SetTimer0
  6632 ;;		i2___llmod
  6633 ;; This function is called by:
  6634 ;;		Interrupt level 2
  6635 ;; This function uses a non-reentrant model
  6636 ;;
  6637                           
  6638                           	psect	intcode
  6639  000008                     __pintcode:
  6640                           	opt stack 0
  6641  000008                     _Sys_Cyc:
  6642                           	opt stack 23
  6643                           
  6644                           ;incstack = 0
  6645  000008  CFFA F00A          	movff	pclath,??_Sys_Cyc
  6646  00000C  CFFB F00B          	movff	pclatu,??_Sys_Cyc+1
  6647  000010  CFE9 F00C          	movff	fsr0l,??_Sys_Cyc+2
  6648  000014  CFEA F00D          	movff	fsr0h,??_Sys_Cyc+3
  6649  000018  CFE1 F00E          	movff	fsr1l,??_Sys_Cyc+4
  6650  00001C  CFE2 F00F          	movff	fsr1h,??_Sys_Cyc+5
  6651  000020  CFD9 F010          	movff	fsr2l,??_Sys_Cyc+6
  6652  000024  CFDA F011          	movff	fsr2h,??_Sys_Cyc+7
  6653  000028  CFF3 F012          	movff	prodl,??_Sys_Cyc+8
  6654  00002C  CFF4 F013          	movff	prodh,??_Sys_Cyc+9
  6655  000030  CFF6 F014          	movff	tblptrl,??_Sys_Cyc+10
  6656  000034  CFF7 F015          	movff	tblptrh,??_Sys_Cyc+11
  6657  000038  CFF8 F016          	movff	tblptru,??_Sys_Cyc+12
  6658  00003C  CFF5 F017          	movff	tablat,??_Sys_Cyc+13
  6659                           
  6660                           ;My_Timer.c: 102: static unsigned char _overturn_LED = 0;
  6661                           ;My_Timer.c: 103: static char _Byte;
  6662                           ;My_Timer.c: 104: static char _flag = 0;
  6663                           ;My_Timer.c: 105: unsigned char _temp;
  6664                           ;My_Timer.c: 108: if(TMR0IF)
  6665  000040  A4F2               	btfss	intcon,2,c	;volatile
  6666  000042  D06D               	goto	i2l3448
  6667                           
  6668                           ;My_Timer.c: 109: {
  6669                           ;My_Timer.c: 110: g_Timer_Cyc = (g_Timer_Cyc+1) % 4294967296;
  6670  000044  0E01               	movlw	1
  6671  000046  2435               	addwf	_g_Timer_Cyc,w,c
  6672  000048  6E01               	movwf	i2___llmod@dividend,c
  6673  00004A  0E00               	movlw	0
  6674  00004C  2036               	addwfc	_g_Timer_Cyc+1,w,c
  6675  00004E  6E02               	movwf	i2___llmod@dividend+1,c
  6676  000050  0E00               	movlw	0
  6677  000052  2037               	addwfc	_g_Timer_Cyc+2,w,c
  6678  000054  6E03               	movwf	i2___llmod@dividend+2,c
  6679  000056  0E00               	movlw	0
  6680  000058  2038               	addwfc	_g_Timer_Cyc+3,w,c
  6681  00005A  6E04               	movwf	i2___llmod@dividend+3,c
  6682  00005C  0E00               	movlw	0
  6683  00005E  6E05               	movwf	i2___llmod@divisor,c
  6684  000060  0E00               	movlw	0
  6685  000062  6E06               	movwf	i2___llmod@divisor+1,c
  6686  000064  0E00               	movlw	0
  6687  000066  6E07               	movwf	i2___llmod@divisor+2,c
  6688  000068  0E00               	movlw	0
  6689  00006A  6E08               	movwf	i2___llmod@divisor+3,c
  6690  00006C  ECFD  F007         	call	i2___llmod	;wreg free
  6691  000070  C001  F035         	movff	?i2___llmod,_g_Timer_Cyc
  6692  000074  C002  F036         	movff	?i2___llmod+1,_g_Timer_Cyc+1
  6693  000078  C003  F037         	movff	?i2___llmod+2,_g_Timer_Cyc+2
  6694  00007C  C004  F038         	movff	?i2___llmod+3,_g_Timer_Cyc+3
  6695                           
  6696                           ;My_Timer.c: 111: SetTimer0(8);
  6697  000080  0E00               	movlw	0
  6698  000082  6E02               	movwf	i2SetTimer0@_tmr+1,c
  6699  000084  0E08               	movlw	8
  6700  000086  6E01               	movwf	i2SetTimer0@_tmr,c
  6701  000088  ECF6  F00A         	call	i2_SetTimer0	;wreg free
  6702                           
  6703                           ;My_Timer.c: 114: if( g_Timer_Cyc%300 == 0 )
  6704  00008C  C035  F001         	movff	_g_Timer_Cyc,i2___llmod@dividend
  6705  000090  C036  F002         	movff	_g_Timer_Cyc+1,i2___llmod@dividend+1
  6706  000094  C037  F003         	movff	_g_Timer_Cyc+2,i2___llmod@dividend+2
  6707  000098  C038  F004         	movff	_g_Timer_Cyc+3,i2___llmod@dividend+3
  6708  00009C  0E2C               	movlw	44
  6709  00009E  6E05               	movwf	i2___llmod@divisor,c
  6710  0000A0  0E01               	movlw	1
  6711  0000A2  6E06               	movwf	i2___llmod@divisor+1,c
  6712  0000A4  0E00               	movlw	0
  6713  0000A6  6E07               	movwf	i2___llmod@divisor+2,c
  6714  0000A8  0E00               	movlw	0
  6715  0000AA  6E08               	movwf	i2___llmod@divisor+3,c
  6716  0000AC  ECFD  F007         	call	i2___llmod	;wreg free
  6717  0000B0  5001               	movf	?i2___llmod,w,c
  6718  0000B2  1002               	iorwf	?i2___llmod+1,w,c
  6719  0000B4  1003               	iorwf	?i2___llmod+2,w,c
  6720  0000B6  1004               	iorwf	?i2___llmod+3,w,c
  6721  0000B8  A4D8               	btfss	status,2,c
  6722  0000BA  D010               	goto	i2l3442
  6723                           
  6724                           ;My_Timer.c: 115: {
  6725                           ;My_Timer.c: 116: _overturn_LED = ~_overturn_LED;
  6726  0000BC  1E3C               	comf	Sys_Cyc@_overturn_LED,f,c
  6727                           
  6728                           ;My_Timer.c: 117: if(_overturn_LED) LED_Control(3,1);
  6729  0000BE  503C               	movf	Sys_Cyc@_overturn_LED,w,c
  6730  0000C0  B4D8               	btfsc	status,2,c
  6731  0000C2  D006               	goto	i2l3440
  6732  0000C4  0E01               	movlw	1
  6733  0000C6  6E01               	movwf	i2LED_Control@_switch,c
  6734  0000C8  0E03               	movlw	3
  6735  0000CA  EC10  F00A         	call	i2_LED_Control
  6736  0000CE  D006               	goto	i2l3442
  6737  0000D0                     i2l3440:
  6738                           
  6739                           ;My_Timer.c: 118: else LED_Control(3,0);
  6740  0000D0  0E00               	movlw	0
  6741  0000D2  6E01               	movwf	i2LED_Control@_switch,c
  6742  0000D4  0E03               	movlw	3
  6743  0000D6  EC10  F00A         	call	i2_LED_Control
  6744  0000DA  D000               	goto	i2l3442
  6745  0000DC                     i2l3442:
  6746                           
  6747                           ;My_Timer.c: 119: }
  6748                           ;My_Timer.c: 122: if( gs_Switch._1Khz )
  6749  0000DC  5041               	movf	_gs_Switch,w,c
  6750  0000DE  B4D8               	btfsc	status,2,c
  6751  0000E0  D003               	goto	i2l341
  6752                           
  6753                           ;My_Timer.c: 123: Pulse_1Khz(1);
  6754  0000E2  0E01               	movlw	1
  6755  0000E4  EC2F  F009         	call	_Pulse_1Khz
  6756  0000E8                     i2l341:
  6757                           
  6758                           ;My_Timer.c: 126: if( g_Timer_Cyc%10 == 0 )
  6759  0000E8  C035  F001         	movff	_g_Timer_Cyc,i2___llmod@dividend
  6760  0000EC  C036  F002         	movff	_g_Timer_Cyc+1,i2___llmod@dividend+1
  6761  0000F0  C037  F003         	movff	_g_Timer_Cyc+2,i2___llmod@dividend+2
  6762  0000F4  C038  F004         	movff	_g_Timer_Cyc+3,i2___llmod@dividend+3
  6763  0000F8  0E0A               	movlw	10
  6764  0000FA  6E05               	movwf	i2___llmod@divisor,c
  6765  0000FC  0E00               	movlw	0
  6766  0000FE  6E06               	movwf	i2___llmod@divisor+1,c
  6767  000100  0E00               	movlw	0
  6768  000102  6E07               	movwf	i2___llmod@divisor+2,c
  6769  000104  0E00               	movlw	0
  6770  000106  6E08               	movwf	i2___llmod@divisor+3,c
  6771  000108  ECFD  F007         	call	i2___llmod	;wreg free
  6772  00010C  5001               	movf	?i2___llmod,w,c
  6773  00010E  1002               	iorwf	?i2___llmod+1,w,c
  6774  000110  1003               	iorwf	?i2___llmod+2,w,c
  6775  000112  1004               	iorwf	?i2___llmod+3,w,c
  6776  000114  A4D8               	btfss	status,2,c
  6777  000116  D003               	goto	i2l3448
  6778                           
  6779                           ;My_Timer.c: 127: Key_ScanFSM();
  6780  000118  EC02  F009         	call	_Key_ScanFSM	;wreg free
  6781  00011C  D000               	goto	i2l3448
  6782  00011E                     i2l3448:
  6783                           
  6784                           ;My_Timer.c: 128: }
  6785                           ;My_Timer.c: 131: if( RC1IF )
  6786  00011E  AA9E               	btfss	3998,5,c	;volatile
  6787  000120  D023               	goto	i2l348
  6788                           
  6789                           ;My_Timer.c: 132: {
  6790                           ;My_Timer.c: 133: _temp = RCREG1;
  6791  000122  CFAE F018          	movff	4014,Sys_Cyc@_temp	;volatile
  6792                           
  6793                           ;My_Timer.c: 134: if( g_RS485_Receive_Flag == 0 )
  6794  000126  503F               	movf	_g_RS485_Receive_Flag,w,c
  6795  000128  A4D8               	btfss	status,2,c
  6796  00012A  D01E               	goto	i2l348
  6797                           
  6798                           ;My_Timer.c: 135: {
  6799                           ;My_Timer.c: 137: if( _temp == 0xff )
  6800  00012C  2818               	incf	Sys_Cyc@_temp,w,c
  6801  00012E  A4D8               	btfss	status,2,c
  6802  000130  D004               	goto	i2l345
  6803                           
  6804                           ;My_Timer.c: 138: {
  6805                           ;My_Timer.c: 139: _Byte = 10 ;
  6806  000132  0E0A               	movlw	10
  6807  000134  6E3A               	movwf	Sys_Cyc@_Byte,c
  6808                           
  6809                           ;My_Timer.c: 140: _flag = 0;
  6810  000136  0E00               	movlw	0
  6811  000138  6E3B               	movwf	Sys_Cyc@_flag,c
  6812  00013A                     i2l345:
  6813                           
  6814                           ;My_Timer.c: 141: }
  6815                           ;My_Timer.c: 144: if ( _flag == 0 )
  6816  00013A  503B               	movf	Sys_Cyc@_flag,w,c
  6817  00013C  A4D8               	btfss	status,2,c
  6818  00013E  D00C               	goto	i2l3462
  6819                           
  6820                           ;My_Timer.c: 145: {
  6821                           ;My_Timer.c: 146: _Byte -- ;
  6822  000140  063A               	decf	Sys_Cyc@_Byte,f,c
  6823                           
  6824                           ;My_Timer.c: 147: ga_RS485_ReceiveBuff[ _Byte ] = _temp;
  6825  000142  503A               	movf	Sys_Cyc@_Byte,w,c
  6826  000144  0D01               	mullw	1
  6827  000146  0E97               	movlw	low _ga_RS485_ReceiveBuff
  6828  000148  24F3               	addwf	prodl,w,c
  6829  00014A  6ED9               	movwf	fsr2l,c
  6830  00014C  0E00               	movlw	high _ga_RS485_ReceiveBuff
  6831  00014E  20F4               	addwfc	prodh,w,c
  6832  000150  6EDA               	movwf	fsr2h,c
  6833  000152  C018  FFDF         	movff	Sys_Cyc@_temp,indf2
  6834  000156  D000               	goto	i2l3462
  6835  000158                     i2l3462:
  6836                           
  6837                           ;My_Timer.c: 148: }
  6838                           ;My_Timer.c: 151: if( _Byte == 0 )
  6839  000158  503A               	movf	Sys_Cyc@_Byte,w,c
  6840  00015A  A4D8               	btfss	status,2,c
  6841  00015C  D005               	goto	i2l348
  6842                           
  6843                           ;My_Timer.c: 152: {
  6844                           ;My_Timer.c: 153: g_RS485_Receive_Flag = 1 ;
  6845  00015E  0E01               	movlw	1
  6846  000160  6E3F               	movwf	_g_RS485_Receive_Flag,c
  6847                           
  6848                           ;My_Timer.c: 154: _flag = 1;
  6849  000162  0E01               	movlw	1
  6850  000164  6E3B               	movwf	Sys_Cyc@_flag,c
  6851  000166  D000               	goto	i2l348
  6852  000168                     i2l348:
  6853  000168  C017  FFF5         	movff	??_Sys_Cyc+13,tablat
  6854  00016C  C016  FFF8         	movff	??_Sys_Cyc+12,tblptru
  6855  000170  C015  FFF7         	movff	??_Sys_Cyc+11,tblptrh
  6856  000174  C014  FFF6         	movff	??_Sys_Cyc+10,tblptrl
  6857  000178  C013  FFF4         	movff	??_Sys_Cyc+9,prodh
  6858  00017C  C012  FFF3         	movff	??_Sys_Cyc+8,prodl
  6859  000180  C011  FFDA         	movff	??_Sys_Cyc+7,fsr2h
  6860  000184  C010  FFD9         	movff	??_Sys_Cyc+6,fsr2l
  6861  000188  C00F  FFE2         	movff	??_Sys_Cyc+5,fsr1h
  6862  00018C  C00E  FFE1         	movff	??_Sys_Cyc+4,fsr1l
  6863  000190  C00D  FFEA         	movff	??_Sys_Cyc+3,fsr0h
  6864  000194  C00C  FFE9         	movff	??_Sys_Cyc+2,fsr0l
  6865  000198  C00B  FFFB         	movff	??_Sys_Cyc+1,pclatu
  6866  00019C  C00A  FFFA         	movff	??_Sys_Cyc,pclath
  6867  0001A0  0011               	retfie		f
  6868  0001A2                     __end_of_Sys_Cyc:
  6869                           	opt stack 0
  6870                           pclatu	equ	0xFFB
  6871                           pclath	equ	0xFFA
  6872                           tblptru	equ	0xFF8
  6873                           tblptrh	equ	0xFF7
  6874                           tblptrl	equ	0xFF6
  6875                           tablat	equ	0xFF5
  6876                           prodh	equ	0xFF4
  6877                           prodl	equ	0xFF3
  6878                           intcon	equ	0xFF2
  6879                           postinc0	equ	0xFEE
  6880                           fsr0h	equ	0xFEA
  6881                           fsr0l	equ	0xFE9
  6882                           wreg	equ	0xFE8
  6883                           indf1	equ	0xFE7
  6884                           postinc1	equ	0xFE6
  6885                           postdec1	equ	0xFE5
  6886                           fsr1h	equ	0xFE2
  6887                           fsr1l	equ	0xFE1
  6888                           indf2	equ	0xFDF
  6889                           postinc2	equ	0xFDE
  6890                           postdec2	equ	0xFDD
  6891                           plusw2	equ	0xFDB
  6892                           fsr2h	equ	0xFDA
  6893                           fsr2l	equ	0xFD9
  6894                           status	equ	0xFD8
  6895                           
  6896 ;; *************** function i2___llmod *****************
  6897 ;; Defined at:
  6898 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  6899 ;; Parameters:    Size  Location     Type
  6900 ;;  dividend        4    0[COMRAM] unsigned long 
  6901 ;;  divisor         4    4[COMRAM] unsigned long 
  6902 ;; Auto vars:     Size  Location     Type
  6903 ;;  __llmod         1    8[COMRAM] unsigned char 
  6904 ;; Return value:  Size  Location     Type
  6905 ;;                  4    0[COMRAM] unsigned long 
  6906 ;; Registers used:
  6907 ;;		wreg, status,2, status,0
  6908 ;; Tracked objects:
  6909 ;;		On entry : 0/0
  6910 ;;		On exit  : 0/0
  6911 ;;		Unchanged: 0/0
  6912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6913 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6914 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6916 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6917 ;;Total ram usage:        9 bytes
  6918 ;; Hardware stack levels used:    1
  6919 ;; This function calls:
  6920 ;;		Nothing
  6921 ;; This function is called by:
  6922 ;;		_Sys_Cyc
  6923 ;; This function uses a non-reentrant model
  6924 ;;
  6925                           
  6926                           	psect	text46
  6927  000FFA                     __ptext46:
  6928                           	opt stack 0
  6929  000FFA                     i2___llmod:
  6930                           	opt stack 24
  6931                           
  6932                           ;incstack = 0
  6933  000FFA  5005               	movf	i2___llmod@divisor,w,c
  6934  000FFC  1006               	iorwf	i2___llmod@divisor+1,w,c
  6935  000FFE  1007               	iorwf	i2___llmod@divisor+2,w,c
  6936  001000  1008               	iorwf	i2___llmod@divisor+3,w,c
  6937  001002  B4D8               	btfsc	status,2,c
  6938  001004  D029               	goto	i2l1158
  6939  001006  0E01               	movlw	1
  6940  001008  6E09               	movwf	i2___llmod@counter,c
  6941  00100A  D007               	goto	i2l3396
  6942  00100C                     i2l3394:
  6943  00100C  90D8               	bcf	status,0,c
  6944  00100E  3605               	rlcf	i2___llmod@divisor,f,c
  6945  001010  3606               	rlcf	i2___llmod@divisor+1,f,c
  6946  001012  3607               	rlcf	i2___llmod@divisor+2,f,c
  6947  001014  3608               	rlcf	i2___llmod@divisor+3,f,c
  6948  001016  2A09               	incf	i2___llmod@counter,f,c
  6949  001018  D000               	goto	i2l3396
  6950  00101A                     i2l3396:
  6951  00101A  BE08               	btfsc	i2___llmod@divisor+3,7,c
  6952  00101C  D002               	goto	i2l3398
  6953  00101E  D7F6               	goto	i2l3394
  6954  001020  D000               	goto	i2l3398
  6955  001022                     i2l3398:
  6956  001022  5005               	movf	i2___llmod@divisor,w,c
  6957  001024  5C01               	subwf	i2___llmod@dividend,w,c
  6958  001026  5006               	movf	i2___llmod@divisor+1,w,c
  6959  001028  5802               	subwfb	i2___llmod@dividend+1,w,c
  6960  00102A  5007               	movf	i2___llmod@divisor+2,w,c
  6961  00102C  5803               	subwfb	i2___llmod@dividend+2,w,c
  6962  00102E  5008               	movf	i2___llmod@divisor+3,w,c
  6963  001030  5804               	subwfb	i2___llmod@dividend+3,w,c
  6964  001032  A0D8               	btfss	status,0,c
  6965  001034  D009               	goto	i2l3402
  6966  001036  5005               	movf	i2___llmod@divisor,w,c
  6967  001038  5E01               	subwf	i2___llmod@dividend,f,c
  6968  00103A  5006               	movf	i2___llmod@divisor+1,w,c
  6969  00103C  5A02               	subwfb	i2___llmod@dividend+1,f,c
  6970  00103E  5007               	movf	i2___llmod@divisor+2,w,c
  6971  001040  5A03               	subwfb	i2___llmod@dividend+2,f,c
  6972  001042  5008               	movf	i2___llmod@divisor+3,w,c
  6973  001044  5A04               	subwfb	i2___llmod@dividend+3,f,c
  6974  001046  D000               	goto	i2l3402
  6975  001048                     i2l3402:
  6976  001048  90D8               	bcf	status,0,c
  6977  00104A  3208               	rrcf	i2___llmod@divisor+3,f,c
  6978  00104C  3207               	rrcf	i2___llmod@divisor+2,f,c
  6979  00104E  3206               	rrcf	i2___llmod@divisor+1,f,c
  6980  001050  3205               	rrcf	i2___llmod@divisor,f,c
  6981  001052  2E09               	decfsz	i2___llmod@counter,f,c
  6982  001054  D7E6               	goto	i2l3398
  6983  001056  D000               	goto	i2l1158
  6984  001058                     i2l1158:
  6985  001058  C001  F001         	movff	i2___llmod@dividend,?i2___llmod
  6986  00105C  C002  F002         	movff	i2___llmod@dividend+1,?i2___llmod+1
  6987  001060  C003  F003         	movff	i2___llmod@dividend+2,?i2___llmod+2
  6988  001064  C004  F004         	movff	i2___llmod@dividend+3,?i2___llmod+3
  6989  001068  0012               	return		;funcret
  6990  00106A                     __end_ofi2___llmod:
  6991                           	opt stack 0
  6992                           pclatu	equ	0xFFB
  6993                           pclath	equ	0xFFA
  6994                           tblptru	equ	0xFF8
  6995                           tblptrh	equ	0xFF7
  6996                           tblptrl	equ	0xFF6
  6997                           tablat	equ	0xFF5
  6998                           prodh	equ	0xFF4
  6999                           prodl	equ	0xFF3
  7000                           intcon	equ	0xFF2
  7001                           postinc0	equ	0xFEE
  7002                           fsr0h	equ	0xFEA
  7003                           fsr0l	equ	0xFE9
  7004                           wreg	equ	0xFE8
  7005                           indf1	equ	0xFE7
  7006                           postinc1	equ	0xFE6
  7007                           postdec1	equ	0xFE5
  7008                           fsr1h	equ	0xFE2
  7009                           fsr1l	equ	0xFE1
  7010                           indf2	equ	0xFDF
  7011                           postinc2	equ	0xFDE
  7012                           postdec2	equ	0xFDD
  7013                           plusw2	equ	0xFDB
  7014                           fsr2h	equ	0xFDA
  7015                           fsr2l	equ	0xFD9
  7016                           status	equ	0xFD8
  7017                           
  7018 ;; *************** function i2_SetTimer0 *****************
  7019 ;; Defined at:
  7020 ;;		line 81 in file "_01_USER/My_Timer.c"
  7021 ;; Parameters:    Size  Location     Type
  7022 ;;  _tmr            2    0[COMRAM] unsigned int 
  7023 ;; Auto vars:     Size  Location     Type
  7024 ;;		None
  7025 ;; Return value:  Size  Location     Type
  7026 ;;		None               void
  7027 ;; Registers used:
  7028 ;;		wreg, status,2, status,0
  7029 ;; Tracked objects:
  7030 ;;		On entry : 0/0
  7031 ;;		On exit  : 0/0
  7032 ;;		Unchanged: 0/0
  7033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7034 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7036 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7037 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7038 ;;Total ram usage:        4 bytes
  7039 ;; Hardware stack levels used:    1
  7040 ;; This function calls:
  7041 ;;		Nothing
  7042 ;; This function is called by:
  7043 ;;		_Sys_Cyc
  7044 ;; This function uses a non-reentrant model
  7045 ;;
  7046                           
  7047                           	psect	text47
  7048  0015EC                     __ptext47:
  7049                           	opt stack 0
  7050  0015EC                     i2_SetTimer0:
  7051                           	opt stack 24
  7052                           
  7053                           ;My_Timer.c: 83: if(_tmr > 0xffff) _tmr = 0xffff;
  7054                           
  7055                           ;incstack = 0
  7056  0015EC  D003               	goto	i2l3358
  7057  0015EE  6801               	setf	i2SetTimer0@_tmr,c
  7058  0015F0  6802               	setf	i2SetTimer0@_tmr+1,c
  7059  0015F2  D000               	goto	i2l3358
  7060  0015F4                     i2l3358:
  7061                           
  7062                           ;My_Timer.c: 84: _tmr=0xffff-_tmr;
  7063  0015F4  C001  F003         	movff	i2SetTimer0@_tmr,??i2_SetTimer0
  7064  0015F8  C002  F004         	movff	i2SetTimer0@_tmr+1,??i2_SetTimer0+1
  7065  0015FC  1E03               	comf	??i2_SetTimer0,f,c
  7066  0015FE  1E04               	comf	??i2_SetTimer0+1,f,c
  7067  001600  4A03               	infsnz	??i2_SetTimer0,f,c
  7068  001602  2A04               	incf	??i2_SetTimer0+1,f,c
  7069  001604  0EFF               	movlw	255
  7070  001606  2403               	addwf	??i2_SetTimer0,w,c
  7071  001608  6E01               	movwf	i2SetTimer0@_tmr,c
  7072  00160A  0EFF               	movlw	255
  7073  00160C  2004               	addwfc	??i2_SetTimer0+1,w,c
  7074  00160E  6E02               	movwf	i2SetTimer0@_tmr+1,c
  7075                           
  7076                           ;My_Timer.c: 85: TMR0H = _tmr/256;
  7077  001610  5002               	movf	i2SetTimer0@_tmr+1,w,c
  7078  001612  6ED7               	movwf	4055,c	;volatile
  7079                           
  7080                           ;My_Timer.c: 86: TMR0L = _tmr%256;
  7081  001614  C001  FFD6         	movff	i2SetTimer0@_tmr,4054	;volatile
  7082                           
  7083                           ;My_Timer.c: 87: TMR0IF = 0;
  7084  001618  94F2               	bcf	intcon,2,c	;volatile
  7085  00161A  0012               	return		;funcret
  7086  00161C                     __end_ofi2_SetTimer0:
  7087                           	opt stack 0
  7088                           pclatu	equ	0xFFB
  7089                           pclath	equ	0xFFA
  7090                           tblptru	equ	0xFF8
  7091                           tblptrh	equ	0xFF7
  7092                           tblptrl	equ	0xFF6
  7093                           tablat	equ	0xFF5
  7094                           prodh	equ	0xFF4
  7095                           prodl	equ	0xFF3
  7096                           intcon	equ	0xFF2
  7097                           postinc0	equ	0xFEE
  7098                           fsr0h	equ	0xFEA
  7099                           fsr0l	equ	0xFE9
  7100                           wreg	equ	0xFE8
  7101                           indf1	equ	0xFE7
  7102                           postinc1	equ	0xFE6
  7103                           postdec1	equ	0xFE5
  7104                           fsr1h	equ	0xFE2
  7105                           fsr1l	equ	0xFE1
  7106                           indf2	equ	0xFDF
  7107                           postinc2	equ	0xFDE
  7108                           postdec2	equ	0xFDD
  7109                           plusw2	equ	0xFDB
  7110                           fsr2h	equ	0xFDA
  7111                           fsr2l	equ	0xFD9
  7112                           status	equ	0xFD8
  7113                           
  7114 ;; *************** function i2_LED_Control *****************
  7115 ;; Defined at:
  7116 ;;		line 58 in file "_01_USER/GPIO.c"
  7117 ;; Parameters:    Size  Location     Type
  7118 ;;  _LED_num        1    wreg     unsigned char 
  7119 ;;  _switch         1    0[COMRAM] unsigned char 
  7120 ;; Auto vars:     Size  Location     Type
  7121 ;;  _LED_num        1    1[COMRAM] unsigned char 
  7122 ;; Return value:  Size  Location     Type
  7123 ;;		None               void
  7124 ;; Registers used:
  7125 ;;		wreg, status,2, status,0
  7126 ;; Tracked objects:
  7127 ;;		On entry : 0/0
  7128 ;;		On exit  : 0/0
  7129 ;;		Unchanged: 0/0
  7130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7131 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7132 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7134 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7135 ;;Total ram usage:        2 bytes
  7136 ;; Hardware stack levels used:    1
  7137 ;; This function calls:
  7138 ;;		Nothing
  7139 ;; This function is called by:
  7140 ;;		_Sys_Cyc
  7141 ;; This function uses a non-reentrant model
  7142 ;;
  7143                           
  7144                           	psect	text48
  7145  001420                     __ptext48:
  7146                           	opt stack 0
  7147  001420                     i2_LED_Control:
  7148                           	opt stack 24
  7149                           
  7150                           ;incstack = 0
  7151                           ;i2LED_Control@_LED_num stored from wreg
  7152  001420  6E02               	movwf	i2LED_Control@_LED_num,c
  7153                           
  7154                           ;GPIO.c: 62: if(_LED_num == 1)
  7155  001422  0402               	decf	i2LED_Control@_LED_num,w,c
  7156  001424  A4D8               	btfss	status,2,c
  7157  001426  D007               	goto	i2l3374
  7158                           
  7159                           ;GPIO.c: 63: if(_switch) LED_BUS |= 0x01;
  7160  001428  5001               	movf	i2LED_Control@_switch,w,c
  7161  00142A  B4D8               	btfsc	status,2,c
  7162  00142C  D002               	goto	i2l3372
  7163  00142E  803D               	bsf	_LED_BUS,0,c
  7164  001430  D002               	goto	i2l3374
  7165  001432                     i2l3372:
  7166                           
  7167                           ;GPIO.c: 64: else LED_BUS &= 0xFE;
  7168  001432  903D               	bcf	_LED_BUS,0,c
  7169  001434  D000               	goto	i2l3374
  7170  001436                     i2l3374:
  7171                           
  7172                           ;GPIO.c: 66: if(_LED_num == 2)
  7173  001436  0E02               	movlw	2
  7174  001438  1802               	xorwf	i2LED_Control@_LED_num,w,c
  7175  00143A  A4D8               	btfss	status,2,c
  7176  00143C  D007               	goto	i2l3382
  7177                           
  7178                           ;GPIO.c: 67: if(_switch) LED_BUS |= 0x02;
  7179  00143E  5001               	movf	i2LED_Control@_switch,w,c
  7180  001440  B4D8               	btfsc	status,2,c
  7181  001442  D002               	goto	i2l3380
  7182  001444  823D               	bsf	_LED_BUS,1,c
  7183  001446  D002               	goto	i2l3382
  7184  001448                     i2l3380:
  7185                           
  7186                           ;GPIO.c: 68: else LED_BUS &= 0xFD;
  7187  001448  923D               	bcf	_LED_BUS,1,c
  7188  00144A  D000               	goto	i2l3382
  7189  00144C                     i2l3382:
  7190                           
  7191                           ;GPIO.c: 70: if(_LED_num == 3)
  7192  00144C  0E03               	movlw	3
  7193  00144E  1802               	xorwf	i2LED_Control@_LED_num,w,c
  7194  001450  A4D8               	btfss	status,2,c
  7195  001452  0012               	return	
  7196                           
  7197                           ;GPIO.c: 71: if(_switch) LED_BUS |= 0x04;
  7198  001454  5001               	movf	i2LED_Control@_switch,w,c
  7199  001456  B4D8               	btfsc	status,2,c
  7200  001458  D002               	goto	i2l3388
  7201  00145A  843D               	bsf	_LED_BUS,2,c
  7202  00145C  0012               	return	
  7203  00145E                     i2l3388:
  7204                           
  7205                           ;GPIO.c: 72: else LED_BUS &= 0xFB;
  7206  00145E  943D               	bcf	_LED_BUS,2,c
  7207  001460  0012               	return	
  7208  001462  0012               	return		;funcret
  7209  001464                     __end_ofi2_LED_Control:
  7210                           	opt stack 0
  7211                           pclatu	equ	0xFFB
  7212                           pclath	equ	0xFFA
  7213                           tblptru	equ	0xFF8
  7214                           tblptrh	equ	0xFF7
  7215                           tblptrl	equ	0xFF6
  7216                           tablat	equ	0xFF5
  7217                           prodh	equ	0xFF4
  7218                           prodl	equ	0xFF3
  7219                           intcon	equ	0xFF2
  7220                           postinc0	equ	0xFEE
  7221                           fsr0h	equ	0xFEA
  7222                           fsr0l	equ	0xFE9
  7223                           wreg	equ	0xFE8
  7224                           indf1	equ	0xFE7
  7225                           postinc1	equ	0xFE6
  7226                           postdec1	equ	0xFE5
  7227                           fsr1h	equ	0xFE2
  7228                           fsr1l	equ	0xFE1
  7229                           indf2	equ	0xFDF
  7230                           postinc2	equ	0xFDE
  7231                           postdec2	equ	0xFDD
  7232                           plusw2	equ	0xFDB
  7233                           fsr2h	equ	0xFDA
  7234                           fsr2l	equ	0xFD9
  7235                           status	equ	0xFD8
  7236                           
  7237 ;; *************** function _Pulse_1Khz *****************
  7238 ;; Defined at:
  7239 ;;		line 79 in file "_01_USER/SCR.c"
  7240 ;; Parameters:    Size  Location     Type
  7241 ;;  _QD             1    wreg     unsigned char 
  7242 ;; Auto vars:     Size  Location     Type
  7243 ;;  _QD             1    3[COMRAM] unsigned char 
  7244 ;;  _pulse          1    4[COMRAM] unsigned char 
  7245 ;; Return value:  Size  Location     Type
  7246 ;;		None               void
  7247 ;; Registers used:
  7248 ;;		wreg, status,2, status,0, cstack
  7249 ;; Tracked objects:
  7250 ;;		On entry : 0/0
  7251 ;;		On exit  : 0/0
  7252 ;;		Unchanged: 0/0
  7253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7255 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7257 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7258 ;;Total ram usage:        2 bytes
  7259 ;; Hardware stack levels used:    1
  7260 ;; Hardware stack levels required when called:    1
  7261 ;; This function calls:
  7262 ;;		_Delay_1Khz
  7263 ;; This function is called by:
  7264 ;;		_Sys_Cyc
  7265 ;; This function uses a non-reentrant model
  7266 ;;
  7267                           
  7268                           	psect	text49
  7269  00125E                     __ptext49:
  7270                           	opt stack 0
  7271  00125E                     _Pulse_1Khz:
  7272                           	opt stack 23
  7273                           
  7274                           ;incstack = 0
  7275                           ;Pulse_1Khz@_QD stored from wreg
  7276  00125E  6E04               	movwf	Pulse_1Khz@_QD,c
  7277                           
  7278                           ;SCR.c: 81: unsigned char _pulse = 8;
  7279  001260  0E08               	movlw	8
  7280  001262  6E05               	movwf	Pulse_1Khz@_pulse,c
  7281                           
  7282                           ;SCR.c: 82: static unsigned char _overturn_1Khz = 0;
  7283                           ;SCR.c: 85: if(_QD == 1)
  7284  001264  0404               	decf	Pulse_1Khz@_QD,w,c
  7285  001266  B4D8               	btfsc	status,2,c
  7286  001268  D009               	goto	i2l3338
  7287  00126A  D00E               	goto	i2l3340
  7288                           
  7289                           ;SCR.c: 86: while( _pulse-- )
  7290  00126C  D007               	goto	i2l3338
  7291  00126E                     i2l3330:
  7292                           
  7293                           ;SCR.c: 87: {
  7294                           ;SCR.c: 88: _overturn_1Khz =~ _overturn_1Khz;
  7295  00126E  1E39               	comf	Pulse_1Khz@_overturn_1Khz,f,c
  7296                           
  7297                           ;SCR.c: 89: if(_overturn_1Khz) RB1 = 1;
  7298  001270  5039               	movf	Pulse_1Khz@_overturn_1Khz,w,c
  7299                           
  7300                           ;SCR.c: 90: else RB1 = 1;
  7301  001272  8281               	bsf	3969,1,c	;volatile
  7302  001274  D000               	goto	i2l3336
  7303  001276                     i2l3336:
  7304                           
  7305                           ;SCR.c: 91: Delay_1Khz();
  7306  001276  EC8F  F00A         	call	_Delay_1Khz	;wreg free
  7307  00127A  D000               	goto	i2l3338
  7308  00127C                     i2l3338:
  7309  00127C  0605               	decf	Pulse_1Khz@_pulse,f,c
  7310  00127E  2805               	incf	Pulse_1Khz@_pulse,w,c
  7311  001280  B4D8               	btfsc	status,2,c
  7312  001282  D002               	goto	i2l3340
  7313  001284  D7F4               	goto	i2l3330
  7314  001286  D000               	goto	i2l3340
  7315  001288                     i2l3340:
  7316                           
  7317                           ;SCR.c: 92: }
  7318                           ;SCR.c: 95: if(_QD == 2)
  7319  001288  0E02               	movlw	2
  7320  00128A  1804               	xorwf	Pulse_1Khz@_QD,w,c
  7321  00128C  A4D8               	btfss	status,2,c
  7322  00128E  0012               	return	
  7323                           
  7324                           ;SCR.c: 96: while( _pulse-- )
  7325  001290  D007               	goto	i2l3352
  7326  001292                     i2l3344:
  7327                           
  7328                           ;SCR.c: 97: {
  7329                           ;SCR.c: 98: _overturn_1Khz =~ _overturn_1Khz;
  7330  001292  1E39               	comf	Pulse_1Khz@_overturn_1Khz,f,c
  7331                           
  7332                           ;SCR.c: 99: if(_overturn_1Khz) RB0 = 1;
  7333  001294  5039               	movf	Pulse_1Khz@_overturn_1Khz,w,c
  7334                           
  7335                           ;SCR.c: 100: else RB0 = 1;
  7336  001296  8081               	bsf	3969,0,c	;volatile
  7337  001298  D000               	goto	i2l3350
  7338  00129A                     i2l3350:
  7339                           
  7340                           ;SCR.c: 101: Delay_1Khz();
  7341  00129A  EC8F  F00A         	call	_Delay_1Khz	;wreg free
  7342  00129E  D000               	goto	i2l3352
  7343  0012A0                     i2l3352:
  7344  0012A0  0605               	decf	Pulse_1Khz@_pulse,f,c
  7345  0012A2  2805               	incf	Pulse_1Khz@_pulse,w,c
  7346  0012A4  B4D8               	btfsc	status,2,c
  7347  0012A6  0012               	return	
  7348  0012A8  D7F4               	goto	i2l3344
  7349  0012AA  0012               	return	
  7350  0012AC  0012               	return		;funcret
  7351  0012AE                     __end_of_Pulse_1Khz:
  7352                           	opt stack 0
  7353                           pclatu	equ	0xFFB
  7354                           pclath	equ	0xFFA
  7355                           tblptru	equ	0xFF8
  7356                           tblptrh	equ	0xFF7
  7357                           tblptrl	equ	0xFF6
  7358                           tablat	equ	0xFF5
  7359                           prodh	equ	0xFF4
  7360                           prodl	equ	0xFF3
  7361                           intcon	equ	0xFF2
  7362                           postinc0	equ	0xFEE
  7363                           fsr0h	equ	0xFEA
  7364                           fsr0l	equ	0xFE9
  7365                           wreg	equ	0xFE8
  7366                           indf1	equ	0xFE7
  7367                           postinc1	equ	0xFE6
  7368                           postdec1	equ	0xFE5
  7369                           fsr1h	equ	0xFE2
  7370                           fsr1l	equ	0xFE1
  7371                           indf2	equ	0xFDF
  7372                           postinc2	equ	0xFDE
  7373                           postdec2	equ	0xFDD
  7374                           plusw2	equ	0xFDB
  7375                           fsr2h	equ	0xFDA
  7376                           fsr2l	equ	0xFD9
  7377                           status	equ	0xFD8
  7378                           
  7379 ;; *************** function _Delay_1Khz *****************
  7380 ;; Defined at:
  7381 ;;		line 62 in file "_01_USER/SCR.c"
  7382 ;; Parameters:    Size  Location     Type
  7383 ;;		None
  7384 ;; Auto vars:     Size  Location     Type
  7385 ;;  c               1    2[COMRAM] unsigned char 
  7386 ;;  b               1    1[COMRAM] unsigned char 
  7387 ;;  a               1    0[COMRAM] unsigned char 
  7388 ;; Return value:  Size  Location     Type
  7389 ;;		None               void
  7390 ;; Registers used:
  7391 ;;		wreg, status,2, status,0
  7392 ;; Tracked objects:
  7393 ;;		On entry : 0/0
  7394 ;;		On exit  : 0/0
  7395 ;;		Unchanged: 0/0
  7396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7398 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7400 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7401 ;;Total ram usage:        3 bytes
  7402 ;; Hardware stack levels used:    1
  7403 ;; This function calls:
  7404 ;;		Nothing
  7405 ;; This function is called by:
  7406 ;;		_Pulse_1Khz
  7407 ;; This function uses a non-reentrant model
  7408 ;;
  7409                           
  7410                           	psect	text50
  7411  00151E                     __ptext50:
  7412                           	opt stack 0
  7413  00151E                     _Delay_1Khz:
  7414                           	opt stack 23
  7415                           
  7416                           ;SCR.c: 64: unsigned char a,b,c;
  7417                           ;SCR.c: 65: for(c=1;c>0;c--)
  7418                           
  7419                           ;incstack = 0
  7420  00151E  0E01               	movlw	1
  7421  001520  6E03               	movwf	Delay_1Khz@c,c
  7422  001522  5003               	movf	Delay_1Khz@c,w,c
  7423  001524  B4D8               	btfsc	status,2,c
  7424  001526  0012               	return	
  7425  001528  D001               	goto	i2l3124
  7426  00152A  0012               	return	
  7427  00152C                     i2l3124:
  7428                           
  7429                           ;SCR.c: 66: for(b=32;b>0;b--)
  7430  00152C  0E20               	movlw	32
  7431  00152E  6E02               	movwf	Delay_1Khz@b,c
  7432  001530  5002               	movf	Delay_1Khz@b,w,c
  7433  001532  B4D8               	btfsc	status,2,c
  7434  001534  D00D               	goto	i2l3140
  7435  001536  D001               	goto	i2l3128
  7436  001538  D00B               	goto	i2l3140
  7437  00153A                     i2l3128:
  7438                           
  7439                           ;SCR.c: 67: for(a=2;a>0;a--);
  7440  00153A  0E02               	movlw	2
  7441  00153C  6E01               	movwf	Delay_1Khz@a,c
  7442  00153E  5001               	movf	Delay_1Khz@a,w,c
  7443  001540  B4D8               	btfsc	status,2,c
  7444  001542  D004               	goto	i2l3136
  7445  001544  D001               	goto	i2l3132
  7446  001546  D002               	goto	i2l3136
  7447  001548                     i2l3132:
  7448  001548  0601               	decf	Delay_1Khz@a,f,c
  7449  00154A  D7F9               	goto	L10
  7450  00154C                     i2l3136:
  7451  00154C  0602               	decf	Delay_1Khz@b,f,c
  7452  00154E  D7F0               	goto	L11
  7453  001550                     i2l3140:
  7454  001550  0603               	decf	Delay_1Khz@c,f,c
  7455  001552  D7E7               	goto	L12
  7456  001554  0012               	return		;funcret
  7457  001556                     __end_of_Delay_1Khz:
  7458                           	opt stack 0
  7459                           pclatu	equ	0xFFB
  7460                           pclath	equ	0xFFA
  7461                           tblptru	equ	0xFF8
  7462                           tblptrh	equ	0xFF7
  7463                           tblptrl	equ	0xFF6
  7464                           tablat	equ	0xFF5
  7465                           prodh	equ	0xFF4
  7466                           prodl	equ	0xFF3
  7467                           intcon	equ	0xFF2
  7468                           postinc0	equ	0xFEE
  7469                           fsr0h	equ	0xFEA
  7470                           fsr0l	equ	0xFE9
  7471                           wreg	equ	0xFE8
  7472                           indf1	equ	0xFE7
  7473                           postinc1	equ	0xFE6
  7474                           postdec1	equ	0xFE5
  7475                           fsr1h	equ	0xFE2
  7476                           fsr1l	equ	0xFE1
  7477                           indf2	equ	0xFDF
  7478                           postinc2	equ	0xFDE
  7479                           postdec2	equ	0xFDD
  7480                           plusw2	equ	0xFDB
  7481                           fsr2h	equ	0xFDA
  7482                           fsr2l	equ	0xFD9
  7483                           status	equ	0xFD8
  7484                           
  7485 ;; *************** function _Key_ScanFSM *****************
  7486 ;; Defined at:
  7487 ;;		line 91 in file "_01_USER/Key.c"
  7488 ;; Parameters:    Size  Location     Type
  7489 ;;		None
  7490 ;; Auto vars:     Size  Location     Type
  7491 ;;		None
  7492 ;; Return value:  Size  Location     Type
  7493 ;;		None               void
  7494 ;; Registers used:
  7495 ;;		wreg, status,2, status,0, cstack
  7496 ;; Tracked objects:
  7497 ;;		On entry : 0/0
  7498 ;;		On exit  : 0/0
  7499 ;;		Unchanged: 0/0
  7500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7505 ;;Total ram usage:        0 bytes
  7506 ;; Hardware stack levels used:    1
  7507 ;; Hardware stack levels required when called:    1
  7508 ;; This function calls:
  7509 ;;		_Key_Scan
  7510 ;; This function is called by:
  7511 ;;		_Sys_Cyc
  7512 ;; This function uses a non-reentrant model
  7513 ;;
  7514                           
  7515                           	psect	text51
  7516  001204                     __ptext51:
  7517                           	opt stack 0
  7518  001204                     _Key_ScanFSM:
  7519                           	opt stack 23
  7520                           
  7521                           ;Key.c: 93: Key_Scan();
  7522                           
  7523                           ;incstack = 0
  7524  001204  EC32  F00A         	call	_Key_Scan	;wreg free
  7525                           
  7526                           ;Key.c: 94: if( s_Local_Key_FSM.key_BUS & 0x01 ) s_Local_Key_FSM.a_key_count[0]++;
  7527  001208  0100               	movlb	0	; () banked
  7528  00120A  A182               	btfss	_s_Local_Key_FSM& (0+255),0,b	;volatile
  7529  00120C  D004               	goto	i2l3212
  7530                           
  7531                           ; BSR set to: 0
  7532  00120E  0100               	movlb	0	; () banked
  7533  001210  4B85               	infsnz	(_s_Local_Key_FSM+3)& (0+255),f,b	;volatile
  7534  001212  2B86               	incf	(_s_Local_Key_FSM+4)& (0+255),f,b	;volatile
  7535  001214  D000               	goto	i2l3212
  7536  001216                     i2l3212:
  7537                           
  7538                           ; BSR set to: 0
  7539                           ;Key.c: 95: if( s_Local_Key_FSM.key_BUS & 0x02 ) s_Local_Key_FSM.a_key_count[1]++;
  7540  001216  0100               	movlb	0	; () banked
  7541  001218  A382               	btfss	_s_Local_Key_FSM& (0+255),1,b	;volatile
  7542  00121A  D004               	goto	i2l3216
  7543                           
  7544                           ; BSR set to: 0
  7545  00121C  0100               	movlb	0	; () banked
  7546  00121E  4B87               	infsnz	(_s_Local_Key_FSM+5)& (0+255),f,b	;volatile
  7547  001220  2B88               	incf	(_s_Local_Key_FSM+6)& (0+255),f,b	;volatile
  7548  001222  D000               	goto	i2l3216
  7549  001224                     i2l3216:
  7550                           
  7551                           ; BSR set to: 0
  7552                           ;Key.c: 96: if( s_Local_Key_FSM.key_BUS & 0x04 ) s_Local_Key_FSM.a_key_count[2]++;
  7553  001224  0100               	movlb	0	; () banked
  7554  001226  A582               	btfss	_s_Local_Key_FSM& (0+255),2,b	;volatile
  7555  001228  D004               	goto	i2l3220
  7556                           
  7557                           ; BSR set to: 0
  7558  00122A  0100               	movlb	0	; () banked
  7559  00122C  4B89               	infsnz	(_s_Local_Key_FSM+7)& (0+255),f,b	;volatile
  7560  00122E  2B8A               	incf	(_s_Local_Key_FSM+8)& (0+255),f,b	;volatile
  7561  001230  D000               	goto	i2l3220
  7562  001232                     i2l3220:
  7563                           
  7564                           ; BSR set to: 0
  7565                           ;Key.c: 97: if( s_Local_Key_FSM.key_BUS & 0x08 ) s_Local_Key_FSM.a_key_count[3]++;
  7566  001232  0100               	movlb	0	; () banked
  7567  001234  A782               	btfss	_s_Local_Key_FSM& (0+255),3,b	;volatile
  7568  001236  D004               	goto	i2l3224
  7569                           
  7570                           ; BSR set to: 0
  7571  001238  0100               	movlb	0	; () banked
  7572  00123A  4B8B               	infsnz	(_s_Local_Key_FSM+9)& (0+255),f,b	;volatile
  7573  00123C  2B8C               	incf	(_s_Local_Key_FSM+10)& (0+255),f,b	;volatile
  7574  00123E  D000               	goto	i2l3224
  7575  001240                     i2l3224:
  7576                           
  7577                           ; BSR set to: 0
  7578                           ;Key.c: 98: if( s_Local_Key_FSM.key_BUS & 0x10 ) s_Local_Key_FSM.a_key_count[4]++;
  7579  001240  0100               	movlb	0	; () banked
  7580  001242  A982               	btfss	_s_Local_Key_FSM& (0+255),4,b	;volatile
  7581  001244  D004               	goto	i2l3228
  7582                           
  7583                           ; BSR set to: 0
  7584  001246  0100               	movlb	0	; () banked
  7585  001248  4B8D               	infsnz	(_s_Local_Key_FSM+11)& (0+255),f,b	;volatile
  7586  00124A  2B8E               	incf	(_s_Local_Key_FSM+12)& (0+255),f,b	;volatile
  7587  00124C  D000               	goto	i2l3228
  7588  00124E                     i2l3228:
  7589                           
  7590                           ; BSR set to: 0
  7591                           ;Key.c: 99: if( s_Local_Key_FSM.key_BUS & 0x20 ) s_Local_Key_FSM.a_key_count[5]++;
  7592  00124E  0100               	movlb	0	; () banked
  7593  001250  AB82               	btfss	_s_Local_Key_FSM& (0+255),5,b	;volatile
  7594  001252  0012               	return	
  7595                           
  7596                           ; BSR set to: 0
  7597  001254  0100               	movlb	0	; () banked
  7598  001256  4B8F               	infsnz	(_s_Local_Key_FSM+13)& (0+255),f,b	;volatile
  7599  001258  2B90               	incf	(_s_Local_Key_FSM+14)& (0+255),f,b	;volatile
  7600  00125A  0012               	return	
  7601                           
  7602                           ; BSR set to: 0
  7603                           
  7604                           ; BSR set to: 0
  7605  00125C  0012               	return		;funcret
  7606  00125E                     __end_of_Key_ScanFSM:
  7607                           	opt stack 0
  7608                           pclatu	equ	0xFFB
  7609                           pclath	equ	0xFFA
  7610                           tblptru	equ	0xFF8
  7611                           tblptrh	equ	0xFF7
  7612                           tblptrl	equ	0xFF6
  7613                           tablat	equ	0xFF5
  7614                           prodh	equ	0xFF4
  7615                           prodl	equ	0xFF3
  7616                           intcon	equ	0xFF2
  7617                           postinc0	equ	0xFEE
  7618                           fsr0h	equ	0xFEA
  7619                           fsr0l	equ	0xFE9
  7620                           wreg	equ	0xFE8
  7621                           indf1	equ	0xFE7
  7622                           postinc1	equ	0xFE6
  7623                           postdec1	equ	0xFE5
  7624                           fsr1h	equ	0xFE2
  7625                           fsr1l	equ	0xFE1
  7626                           indf2	equ	0xFDF
  7627                           postinc2	equ	0xFDE
  7628                           postdec2	equ	0xFDD
  7629                           plusw2	equ	0xFDB
  7630                           fsr2h	equ	0xFDA
  7631                           fsr2l	equ	0xFD9
  7632                           status	equ	0xFD8
  7633                           
  7634 ;; *************** function _Key_Scan *****************
  7635 ;; Defined at:
  7636 ;;		line 69 in file "_01_USER/Key.c"
  7637 ;; Parameters:    Size  Location     Type
  7638 ;;		None
  7639 ;; Auto vars:     Size  Location     Type
  7640 ;;		None
  7641 ;; Return value:  Size  Location     Type
  7642 ;;		None               void
  7643 ;; Registers used:
  7644 ;;		wreg, status,2, status,0
  7645 ;; Tracked objects:
  7646 ;;		On entry : 0/0
  7647 ;;		On exit  : 0/0
  7648 ;;		Unchanged: 0/0
  7649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7654 ;;Total ram usage:        0 bytes
  7655 ;; Hardware stack levels used:    1
  7656 ;; This function calls:
  7657 ;;		Nothing
  7658 ;; This function is called by:
  7659 ;;		_Key_ScanFSM
  7660 ;; This function uses a non-reentrant model
  7661 ;;
  7662                           
  7663                           	psect	text52
  7664  001464                     __ptext52:
  7665                           	opt stack 0
  7666  001464                     _Key_Scan:
  7667                           	opt stack 23
  7668                           
  7669                           ;Key.c: 71: s_Local_Key_FSM.key_BUS = 0x00;
  7670                           
  7671                           ; BSR set to: 0
  7672                           ;incstack = 0
  7673  001464  0E00               	movlw	0
  7674  001466  0100               	movlb	0	; () banked
  7675  001468  6F82               	movwf	_s_Local_Key_FSM& (0+255),b	;volatile
  7676                           
  7677                           ; BSR set to: 0
  7678                           ;Key.c: 73: if( RC1 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 0) ;
  7679  00146A  B282               	btfsc	3970,1,c	;volatile
  7680  00146C  D003               	goto	i2l2814
  7681                           
  7682                           ; BSR set to: 0
  7683  00146E  0100               	movlb	0	; () banked
  7684  001470  8182               	bsf	_s_Local_Key_FSM& (0+255),0,b	;volatile
  7685  001472  D000               	goto	i2l2814
  7686  001474                     i2l2814:
  7687                           
  7688                           ; BSR set to: 0
  7689                           ;Key.c: 74: if( RF1 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 1) ;
  7690  001474  B285               	btfsc	3973,1,c	;volatile
  7691  001476  D003               	goto	i2l2818
  7692                           
  7693                           ; BSR set to: 0
  7694  001478  0100               	movlb	0	; () banked
  7695  00147A  8382               	bsf	_s_Local_Key_FSM& (0+255),1,b	;volatile
  7696  00147C  D000               	goto	i2l2818
  7697  00147E                     i2l2818:
  7698                           
  7699                           ; BSR set to: 0
  7700                           ;Key.c: 75: if( RF2 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 2) ;
  7701  00147E  B485               	btfsc	3973,2,c	;volatile
  7702  001480  D003               	goto	i2l2822
  7703                           
  7704                           ; BSR set to: 0
  7705  001482  0100               	movlb	0	; () banked
  7706  001484  8582               	bsf	_s_Local_Key_FSM& (0+255),2,b	;volatile
  7707  001486  D000               	goto	i2l2822
  7708  001488                     i2l2822:
  7709                           
  7710                           ; BSR set to: 0
  7711                           ;Key.c: 76: if( RA4 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 3) ;
  7712  001488  B880               	btfsc	3968,4,c	;volatile
  7713  00148A  D003               	goto	i2l2826
  7714                           
  7715                           ; BSR set to: 0
  7716  00148C  0100               	movlb	0	; () banked
  7717  00148E  8782               	bsf	_s_Local_Key_FSM& (0+255),3,b	;volatile
  7718  001490  D000               	goto	i2l2826
  7719  001492                     i2l2826:
  7720                           
  7721                           ; BSR set to: 0
  7722                           ;Key.c: 77: if( RA5 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 4) ;
  7723  001492  BA80               	btfsc	3968,5,c	;volatile
  7724  001494  D003               	goto	i2l2830
  7725                           
  7726                           ; BSR set to: 0
  7727  001496  0100               	movlb	0	; () banked
  7728  001498  8982               	bsf	_s_Local_Key_FSM& (0+255),4,b	;volatile
  7729  00149A  D000               	goto	i2l2830
  7730  00149C                     i2l2830:
  7731                           
  7732                           ; BSR set to: 0
  7733                           ;Key.c: 78: if( RF3 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 5) ;
  7734  00149C  B685               	btfsc	3973,3,c	;volatile
  7735  00149E  0012               	return	
  7736                           
  7737                           ; BSR set to: 0
  7738  0014A0  0100               	movlb	0	; () banked
  7739  0014A2  8B82               	bsf	_s_Local_Key_FSM& (0+255),5,b	;volatile
  7740  0014A4  0012               	return	
  7741                           
  7742                           ; BSR set to: 0
  7743                           
  7744                           ; BSR set to: 0
  7745  0014A6  0012               	return		;funcret
  7746  0014A8                     __end_of_Key_Scan:
  7747                           	opt stack 0
  7748  0000                     pclatu	equ	0xFFB
  7749                           pclath	equ	0xFFA
  7750                           tblptru	equ	0xFF8
  7751                           tblptrh	equ	0xFF7
  7752                           tblptrl	equ	0xFF6
  7753                           tablat	equ	0xFF5
  7754                           prodh	equ	0xFF4
  7755                           prodl	equ	0xFF3
  7756                           intcon	equ	0xFF2
  7757                           postinc0	equ	0xFEE
  7758                           fsr0h	equ	0xFEA
  7759                           fsr0l	equ	0xFE9
  7760                           wreg	equ	0xFE8
  7761                           indf1	equ	0xFE7
  7762                           postinc1	equ	0xFE6
  7763                           postdec1	equ	0xFE5
  7764                           fsr1h	equ	0xFE2
  7765                           fsr1l	equ	0xFE1
  7766                           indf2	equ	0xFDF
  7767                           postinc2	equ	0xFDE
  7768                           postdec2	equ	0xFDD
  7769                           plusw2	equ	0xFDB
  7770                           fsr2h	equ	0xFDA
  7771                           fsr2l	equ	0xFD9
  7772                           status	equ	0xFD8
  7773                           pclatu	equ	0xFFB
  7774                           pclath	equ	0xFFA
  7775                           tblptru	equ	0xFF8
  7776                           tblptrh	equ	0xFF7
  7777                           tblptrl	equ	0xFF6
  7778                           tablat	equ	0xFF5
  7779                           prodh	equ	0xFF4
  7780                           prodl	equ	0xFF3
  7781                           intcon	equ	0xFF2
  7782                           postinc0	equ	0xFEE
  7783                           fsr0h	equ	0xFEA
  7784                           fsr0l	equ	0xFE9
  7785                           wreg	equ	0xFE8
  7786                           indf1	equ	0xFE7
  7787                           postinc1	equ	0xFE6
  7788                           postdec1	equ	0xFE5
  7789                           fsr1h	equ	0xFE2
  7790                           fsr1l	equ	0xFE1
  7791                           indf2	equ	0xFDF
  7792                           postinc2	equ	0xFDE
  7793                           postdec2	equ	0xFDD
  7794                           plusw2	equ	0xFDB
  7795                           fsr2h	equ	0xFDA
  7796                           fsr2l	equ	0xFD9
  7797                           status	equ	0xFD8
  7798                           
  7799                           	psect	rparam
  7800  0000                     pclatu	equ	0xFFB
  7801                           pclath	equ	0xFFA
  7802                           tblptru	equ	0xFF8
  7803                           tblptrh	equ	0xFF7
  7804                           tblptrl	equ	0xFF6
  7805                           tablat	equ	0xFF5
  7806                           prodh	equ	0xFF4
  7807                           prodl	equ	0xFF3
  7808                           intcon	equ	0xFF2
  7809                           postinc0	equ	0xFEE
  7810                           fsr0h	equ	0xFEA
  7811                           fsr0l	equ	0xFE9
  7812                           wreg	equ	0xFE8
  7813                           indf1	equ	0xFE7
  7814                           postinc1	equ	0xFE6
  7815                           postdec1	equ	0xFE5
  7816                           fsr1h	equ	0xFE2
  7817                           fsr1l	equ	0xFE1
  7818                           indf2	equ	0xFDF
  7819                           postinc2	equ	0xFDE
  7820                           postdec2	equ	0xFDD
  7821                           plusw2	equ	0xFDB
  7822                           fsr2h	equ	0xFDA
  7823                           fsr2l	equ	0xFD9
  7824                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         171
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     45      71
    BANK0           160     25     116
    BANK1           256      0      70
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    VerifyCRC@DataBuff	PTR unsigned char  size(2) Largest target is 10
		 -> ga_RS485_ReceiveBuff(BANK0[10]), RS485_AnalysisData@_PreData(COMRAM[10]), ga_RS485_SendBuff(BANK0[10]), 

    RS485_ManageMessage@DataBuff	PTR unsigned char  size(2) Largest target is 10
		 -> ga_RS485_ReceiveBuff(BANK0[10]), 

    RS485_SendDate@date_dress	PTR unsigned char  size(2) Largest target is 10
		 -> RS485_AnalysisData@_PreData(COMRAM[10]), ga_RS485_SendBuff(BANK0[10]), 


Critical Paths under _main in COMRAM

    _Timer0_Init->_SetTimer0
    _ShowResult->_TM1640_Show_integer
    _TM1640_Show_integer->_TM1640_Writer_Dates
    _TM1640_Show_integer->___lwdiv
    _TM1640_Writer_Dates->___lwmod
    _Relay_Control->_delay_ms
    _delay_ms->_delay1ms
    _RS485_SendDate->_VerifyCRC
    _GetADC6->___ftmul
    ___lwtoft->___ftpack
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul
    _RS485_Init->_Open1USART
    _RS485_ManageMessage->_VerifyCRC
    _VerifyCRC->___lldiv
    _Key_ManageMessage->_Key_ReadFSM
    _Init_TM1640->_TM1640_Writer_Byte
    _TM1640_Writer_Byte->_TM1640_Delay
    _TM1640_Stop->_TM1640_Delay
    _TM1640_Start->_TM1640_Delay
    _ADC6_Init->_OpenADC

Critical Paths under _Sys_Cyc in COMRAM

    _Sys_Cyc->i2___llmod
    _Pulse_1Khz->_Delay_1Khz

Critical Paths under _main in BANK0

    _main->_Run
    _RS485_SendDate->_VerifyCRC
    _GetADC6->___ftdiv
    ___ftdiv->___ftmul
    _ManageMessage->_RS485_ManageMessage
    _RS485_ManageMessage->_VerifyCRC

Critical Paths under _Sys_Cyc in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Sys_Cyc in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Sys_Cyc in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Sys_Cyc in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Sys_Cyc in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Sys_Cyc in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Sys_Cyc in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Sys_Cyc in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Sys_Cyc in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Sys_Cyc in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Sys_Cyc in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Sys_Cyc in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Sys_Cyc in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Sys_Cyc in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Sys_Cyc in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Sys_Cyc in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   23160
                          _ADC6_Init
                        _GPIO_Config
                        _Init_TM1640
                           _Key_Init
                      _ManageMessage
                         _RS485_Init
                         _Relay_Init
                                _Run
                           _SCR_Init
                         _ShowResult
                        _Timer0_Init
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0     170
                          _SetTimer0
 ---------------------------------------------------------------------------------
 (2) _SetTimer0                                            4     2      2     170
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ShowResult                                           1     1      0    4593
                                             33 COMRAM     1     1      0
                        _LED_Control
                _TM1640_Show_integer
                _TM1640_Writer_Dates
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     415
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _TM1640_Show_integer                                  2     0      2    2672
                                             31 COMRAM     2     0      2
                _TM1640_Writer_Dates
                            ___lwdiv
                            ___lwmod
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     671
                                             24 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     546
                                             24 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _TM1640_Writer_Dates                                  2     1      1    1170
                                             29 COMRAM     2     1      1
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _LED_Control                                          2     1      1     336
                                             24 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _SCR_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Run                                                  4     4      0   13574
                                             21 BANK0      4     4      0
                            _GetADC6
                     _RS485_SendDate
                      _Relay_Control
 ---------------------------------------------------------------------------------
 (2) _Relay_Control                                        2     1      1     464
                                             29 COMRAM     2     1      1
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             2     0      2     224
                                             27 COMRAM     2     0      2
                           _delay1ms
 ---------------------------------------------------------------------------------
 (4) _delay1ms                                             3     3      0     138
                                             24 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _RS485_SendDate                                       4     1      3    3730
                                              5 BANK0      4     1      3
                          _VerifyCRC
 ---------------------------------------------------------------------------------
 (2) _GetADC6                                              0     0      0    9380
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2512
                                             32 COMRAM     3     0      3
                            _ReadADC (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3314
                                             35 COMRAM     9     3      6
                                              0 BANK0      6     6      0
                            _ReadADC (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3554
                                              6 BANK0     15     9      6
                            _ReadADC (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2404
                                             24 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) _ReadADC                                              4     2      2       0
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Relay_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RS485_Init                                           0     0      0     284
                         _Open1USART
 ---------------------------------------------------------------------------------
 (2) _Open1USART                                           3     1      2     284
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _ManageMessage                                        0     0      0    4007
                  _Key_ManageMessage
                _RS485_ManageMessage
 ---------------------------------------------------------------------------------
 (2) _RS485_ManageMessage                                 11     8      3    3250
                                              5 BANK0     11     8      3
                          _VerifyCRC
 ---------------------------------------------------------------------------------
 (3) _VerifyCRC                                           13    10      3    1941
                                             37 COMRAM     8     5      3
                                              0 BANK0      5     5      0
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     792
                                             24 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     395
                                             24 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _Key_ManageMessage                                    4     4      0     757
                                             30 COMRAM     4     4      0
                        _Key_ReadFSM
                       _Key_ResetFSM
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     223
                                             24 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) _Key_ResetFSM                                         1     1      0      67
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Key_ReadFSM                                          6     6      0     467
                                             24 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _Key_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_TM1640                                          0     0      0     272
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
 ---------------------------------------------------------------------------------
 (3) _TM1640_Writer_Byte                                   2     2      0     136
                                             26 COMRAM     2     2      0
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (3) _TM1640_Stop                                          0     0      0      68
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (3) _TM1640_Start                                         0     0      0      68
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (4) _TM1640_Delay                                         2     2      0      68
                                             24 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC6_Init                                            0     0      0     260
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     260
                                             24 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Sys_Cyc                                             15    15      0     865
                                              9 COMRAM    15    15      0
                        _Key_ScanFSM
                         _Pulse_1Khz
                      i2_LED_Control
                        i2_SetTimer0
                          i2___llmod
 ---------------------------------------------------------------------------------
 (7) i2___llmod                                            9     1      8     315
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) i2_SetTimer0                                          4     2      2      94
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) i2_LED_Control                                        2     1      1     184
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (7) _Pulse_1Khz                                           2     2      0     227
                                              3 COMRAM     2     2      0
                         _Delay_1Khz
 ---------------------------------------------------------------------------------
 (8) _Delay_1Khz                                           3     3      0     138
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (7) _Key_ScanFSM                                          0     0      0       0
                           _Key_Scan
 ---------------------------------------------------------------------------------
 (8) _Key_Scan                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC6_Init
     _OpenADC
   _GPIO_Config
   _Init_TM1640
     _TM1640_Start
       _TM1640_Delay
     _TM1640_Stop
       _TM1640_Delay
     _TM1640_Writer_Byte
       _TM1640_Delay
   _Key_Init
   _ManageMessage
     _Key_ManageMessage
       _Key_ReadFSM
       _Key_ResetFSM
       ___lbmod
     _RS485_ManageMessage
       _VerifyCRC
         ___lldiv
         ___llmod
   _RS485_Init
     _Open1USART
   _Relay_Init
   _Run
     _GetADC6
       _BusyADC
       _ConvertADC
       _ReadADC
       ___ftdiv
         _ReadADC (ARG)
         ___ftmul (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___ftmul
         _ReadADC (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___lwtoft
         _ReadADC (ARG)
         ___ftpack (ARG)
     _RS485_SendDate
       _VerifyCRC
         ___lldiv
         ___llmod
     _Relay_Control
       _delay_ms
         _delay1ms
   _SCR_Init
   _ShowResult
     _LED_Control
     _TM1640_Show_integer
       _TM1640_Writer_Dates
         _TM1640_Start
           _TM1640_Delay
         _TM1640_Stop
           _TM1640_Delay
         _TM1640_Writer_Byte
           _TM1640_Delay
         ___lwmod (ARG)
       ___lwdiv
       ___lwmod
       ___wmul (ARG)
     _TM1640_Writer_Dates
       _TM1640_Start
         _TM1640_Delay
       _TM1640_Stop
         _TM1640_Delay
       _TM1640_Writer_Byte
         _TM1640_Delay
       ___lwmod (ARG)
     ___wmul
   _Timer0_Init
     _SetTimer0

 _Sys_Cyc (ROOT)
   _Key_ScanFSM
     _Key_Scan
   _Pulse_1Khz
     _Delay_1Khz
   i2_LED_Control
   i2_SetTimer0
   i2___llmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      46       7       27.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     19      74       5       72.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2D      47       1       74.7%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     101      12        0.0%
DATA                 0      0     101       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sun Dec 20 17:37:35 2015

                 ?_TM1640_Stop 0001   __size_of_TM1640_Writer_Dates 0022                  ?_TM1640_Delay 0001  
          ___wmul@multiplicand 001B                    __CFG_BORV$3 000000                  ?_TM1640_Start 0001  
                 _gf_ADC6_Buff 006A                   __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000  
                 __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000                   __CFG_CP4$OFF 000000  
                 __CFG_CP5$OFF 000000                   __CFG_CP6$OFF 000000                   __CFG_CP7$OFF 000000  
                          l134 0518                            l214 0DBE                            l206 0D60  
                          l215 0DDA                            l160 06F6                            l209 0D82  
                          l421 1784                            l406 14B0                            l238 0A22  
                          l407 14C6                            l623 12F8                            l551 0F42  
                          l554 0F5C                            l548 0F28                            l682 1170  
                          l686 118C                            l688 1198                            l689 119A  
                          _GIE 007F97                   __CFG_CPB$OFF 000000                            _RB0 007C08  
                          _RB1 007C09                            _RC0 007C10                            _RA4 007C04  
                          _RC1 007C11                            _RA5 007C05                            _RD0 007C18  
                          _RD1 007C19                            _RD2 007C1A                            _RD3 007C1B  
                          _RD4 007C1C                            _RF1 007C29                            _RD5 007C1D  
                          _RF2 007C2A                            _RD6 007C1E                            _RF3 007C2B  
                          _RD7 007C1F                   __CFG_CPD$OFF 000000                            _PSA 007EAB  
                          _Run 106A       RS485_SendDate@date_dress 00B0                            prod 000FF3  
     RS485_SendDate@date_lenth 00B2                   ?_LED_Control 0019                            wreg 000FE8  
                 ?_GPIO_Config 0001                     _TXSTA1bits 000FAC           ?_TM1640_Show_integer 0020  
                ?_Key_ResetFSM 0001                    ?_RS485_Init 0001                  ??_Key_ReadFSM 0019  
                 ___ftdiv@cntr 00BA                  ??_Key_ScanFSM 0001                           ?_Run 0001  
                 ___ftdiv@sign 00BF                           l1012 0D06                           l1211 11FA  
                         l1221 133E                           l1148 0F02                           l1076 08C8  
                         l1158 0FE8                           l3102 0F62                           l3040 13F2  
                         l3200 0E3A                           l3024 15C4                           l4002 1578  
                         l3108 0F7C                           l3204 0E7C                           l3054 141A  
                         l3046 1404                           l3038 13EE                           l2424 177C  
                         l2600 0590                           l2440 1510                           l2432 14F4  
                         l3048 1408                           l2426 177E                           l2418 1774  
                         l3090 0F2E                           l2612 0622                           l2604 059C  
                         l2444 1514                           l2436 1502                           l2622 13A4  
                         l2616 0626                           l2624 13D2                           l2448 1518  
                         l3096 0F48                           l2800 1332                           l2490 14DE  
                         l2570 1760                           l2484 14CA                           l2590 0564  
                         l2582 04EE                           l2574 0496                           l2902 079C  
                         l3630 0CCE                           l3622 0C8A                           l3710 07EA  
                         l2584 0504                           l2592 057A                           l2760 15B0  
                         l2752 1596                           l2904 07AA                           l2920 1168  
                         l2912 1156                           l3640 0D0E                           l3632 0CEE  
                         l3624 0C96                           l2568 175A                           l2586 0532  
                         l2762 15B6                           l3634 0CFA                           l3626 0CB6  
                         l3618 0C7A                           l2860 06CE                           l3660 0EC0  
                         l2932 1184                           l2924 1174                           l2916 1160  
                         l3716 0824                           l3812 0DE2                           l2772 11BE  
                         l2846 067C                           l3822 01F4                           l3646 0D20  
                         l2774 11C8                           l2864 06DA                           l2848 0682  
                         l3656 0EAA                           l3680 0FB2                           l3840 025C  
                         l2936 1190                           l2928 117C                           l3736 0886  
                         l3808 0D8A                           l2784 11EE                           l2776 11D0  
                         l2792 130A                           l2890 0758                           l2882 072C  
                         l2874 0702                           l2858 06C8                           l3658 0EB8  
                         l3690 091C                           l3834 0244                           l3746 08DA  
                         l3762 0A96                           l2794 1314                           l2868 06E8  
                         l3668 0EF2                           l3684 0FD8                           l3676 0F9C  
                         l3780 0AF2                           l3756 0A6A                           l2796 131C  
                         l2894 0774                           l2886 074A                           l2878 0710  
                         l3678 0FAA                           l3694 0994                           l3862 0396  
                         l3854 0348                           l3790 0B2A                           l3848 02E2  
                         l3784 0B0A                           l3776 0ADA                           l2898 0792  
                         l3858 036E                           l3794 0B44                           l3786 0B12  
                         l3878 10DE                           l3894 1098                           l3888 1076  
                         _T0CS 007EAD                           u2200 04DA                           u2210 0550  
                         _T0SE 007EAC                           u2190 04BC                           u4111 07C6  
                         u2360 17DE                           u2274 05EA                           u2275 05E6  
                         u4131 0800                           u2284 05FE                           u2285 05FA  
                         _IPEN 007E87                           u4161 0A4E                           u4181 0A7A  
     RS485_ManageMessage@CRC_H 00B8       RS485_ManageMessage@CRC_L 00B9                  ??_Init_TM1640 001D  
                   _Delay_1Khz 151E                           _main 1556                   ___ftpack@arg 0019  
                 ___ftpack@exp 001C                           fsr0h 000FEA                           fsr1h 000FE2  
                         fsr0l 000FE9                           fsr2h 000FDA                           indf1 000FE7  
                         fsr1l 000FE1                           indf2 000FDF                           fsr2l 000FD9  
                         pclat 000FFA                __end_of_GetADC6 1144                           prodh 000FF4  
                         prodl 000FF3                           start 01A2                  __CFG_IESO$OFF 000000  
                __CFG_FOSC$HS1 000000                  __CFG_MCLRE$ON 000000                   ___ftmul@cntr 00AF  
                 ___param_bank 000010                   ___ftmul@sign 00B0                __end_of_BusyADC 17E4  
              __end_of_ReadADC 17D6                 ??_TM1640_Delay 0019                __end_of_OpenADC 12FC  
                        ??_Run 00C0                ??_ManageMessage 002E                 ??_TM1640_Start 001B  
                __CFG_RETEN$ON 000000                          ?_main 0001                __end_of___lbmod 15BC  
              __end_of_Sys_Cyc 01A2                __end_of___ftdiv 0902                __end_of___lldiv 0F14  
              __end_of___ftmul 0B6C                __end_of___llmod 0FFA                          _RC1IF 007CF5  
                        _T0PS0 007EA8                          _T0PS1 007EA9                          _T0PS2 007EAA  
              __end_of___lwdiv 1204                __end_of___lwmod 1348                          i2l341 00E8  
                        i2l345 013A                          i2l348 0168              __end_of_ADC6_Init 17B6  
                        _TMR0H 000FD7                          _TMR0L 000FD6                 ??_Key_ResetFSM 0019  
        ??_TM1640_Show_integer 0022                  __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000  
                __CFG_WRT2$OFF 000000                  __CFG_WRT3$OFF 000000                  __CFG_WRT4$OFF 000000  
               __CFG_EBRT0$OFF 000000                  __CFG_WRT5$OFF 000000                 __CFG_EBRT1$OFF 000000  
                __CFG_WRT6$OFF 000000                 __CFG_EBRT2$OFF 000000                  __CFG_WRT7$OFF 000000  
               __CFG_EBRT3$OFF 000000                 __CFG_EBRT4$OFF 000000                 __CFG_FCMEN$OFF 000000  
               __CFG_EBRT5$OFF 000000                 __CFG_EBRT6$OFF 000000                 __CFG_EBRT7$OFF 000000  
             __end_of_SCR_Init 17FE                  __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000  
                __CFG_WRTD$OFF 000000                 __CFG_EBRTB$OFF 000000                  ___ftpack@sign 001D  
                   _ConvertADC 17FE                          tablat 000FF5                          plusw2 000FDB  
                        status 000FD8             _TM1640_Writer_Byte 14A8            __end_of_Key_ReadFSM 0632  
          __end_of_Key_ScanFSM 125E             __size_ofi2___llmod 0070                __initialization 1348  
          __end_of_Init_TM1640 1690            __size_of_RS485_Init 0018                   __end_of_main 158A  
          ?_TM1640_Writer_Byte 0001               __end_of_Key_Init 173C               __end_of_Key_Scan 14A8  
        i2LED_Control@_LED_num 0002                     _Open1USART 1144                         ??_main 002E  
                __activetblptr 000000  RS485_ManageMessage@date_lenth 00B2           ??_TM1640_Writer_Byte 001B  
                       _ADCON0 000FC2                         _ADCON1 000FC1                         _ADCON2 000FC0  
             ___llmod@dividend 0019                     _Relay_Init 17E4                         _ADRESH 000FC4  
                       _ADRESL 000FC3                         _T08BIT 007EAE                         _ANSEL4 00792C  
                       _ANSEL6 00792E                         _ANSEL7 00792F                         _ANSEL8 007920  
             __end_of___ftpack 0D30                      ??_GetADC6 002D                __CFG_BBSIZ$BB2K 000000  
                       i2l1158 1058                         i2l3220 1232                         i2l3212 1216  
                       i2l3132 1548                         i2l3140 1550                         i2l3124 152C  
                       i2l3224 1240                         i2l3216 1224                         i2l3136 154C  
                       i2l3128 153A                         i2l3330 126E                         i2l3402 1048  
                       i2l3228 124E                         i2l3340 1288                         i2l3350 129A  
               __CFG_WDTEN$OFF 000000                         i2l3344 1292                         i2l3352 12A0  
                       i2l3336 1276                         i2l3440 00D0                         i2l3338 127C  
                       i2l3442 00DC                         i2l3380 1448                         i2l3372 1432  
                       i2l2830 149C                         i2l2822 1488                         i2l2814 1474  
                       i2l3382 144C                         i2l3374 1436                         i2l3358 15F4  
                       i2l3462 0158                         i2l3448 011E                         i2l2826 1492  
                       i2l2818 147E                         i2l3394 100C                         i2l3388 145E  
                       i2l3396 101A                         i2l3398 1022                  SetTimer0@_tmr 0019  
                       _RCREG1 000FAE               __end_of___lwtoft 166A                         _RCSTA1 000FAB  
                  ?_Delay_1Khz 0001                         _TMR0IE 007F95                         _SPBRG1 000FAF  
                       _TMR0IF 007F92                         _TMR0ON 007EAF                         _TRISB0 007C98  
                       _TRISB1 007C99                         _TRISC0 007CA0                         _TRISB2 007C9A  
                       _TRISA4 007C94                         _TRISC1 007CA1                         _TRISA5 007C95  
                       _TRISD0 007CA8                         _TRISD1 007CA9                         _TRISD2 007CAA  
                       _TRISD3 007CAB                         _TRISD4 007CAC                         _TRISC6 007CA6  
                TM1640_Delay@i 001A                         _TRISF1 007CB9                         _TRISD5 007CAD  
                       _TRISC7 007CA7                         _TRISF2 007CBA                         _TRISD6 007CAE  
                       _TRISF3 007CBB                         _TRISD7 007CAF                      ??_BusyADC 0019  
                       _TXREG1 000FAD                      ??_ReadADC 001B                         _TXSTA1 000FAC  
             __end_of_delay1ms 151E               __end_of_delay_ms 1772                  ??_Timer0_Init 001D  
                    ??_OpenADC 001B                   Sys_Cyc@_Byte 003A         TM1640_Writer_Byte@Date 001B  
                 Sys_Cyc@_flag 003B                 __CFG_XINST$OFF 000000                   Sys_Cyc@_temp 0018  
       TM1640_Writer_Byte@mask 001C        __size_of_RS485_SendDate 00C2                         ___wmul 161C  
               __CFG_STVREN$ON 000000                      ??___lbmod 001A                      ??_Sys_Cyc 000A  
                    ??___ftdiv 00B7                      ??___lldiv 0021                      ??___ftmul 002A  
                    ??___llmod 0021           Sys_Cyc@_overturn_LED 003C                      ??___lwdiv 001D  
           __size_of_SetTimer0 0030                      ??___lwmod 001D                     _ShowResult 0DF2  
           LED_Control@_switch 0019                         clear_0 134E                         clear_1 135A  
                       clear_2 1366           __size_of_TM1640_Stop 0024   __size_of_RS485_ManageMessage 02EA  
        ___ftmul@f3_as_product 00AC                     _Pulse_1Khz 125E             __size_of_VerifyCRC 013C  
            __end_ofi2___llmod 106A                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8              _g_RS485_Send_Flag 0040           __size_of_LED_Control 0044  
         __size_of_GPIO_Config 0002                    _Key_ReadFSM 0490            _TM1640_Writer_Dates 16FC  
                  ?_ConvertADC 0001           __end_of_TM1640_Delay 178C                    _Key_ScanFSM 1204  
RS485_ManageMessage@from_dress 00BA                ___lbmod@divisor 0019           __end_of_TM1640_Start 16FC  
                   __accesstop 0060        __end_of__initialization 138C                ___lbmod@counter 001B  
                  _Init_TM1640 166A                   ?i2_SetTimer0 0001                  ___rparam_used 000001  
                   ___ftdiv@f1 00B1                     ___ftdiv@f2 00B4                     ___ftdiv@f3 00BB  
            i2___llmod@divisor 0005               Pulse_1Khz@_pulse 0005              i2___llmod@counter 0009  
         __end_of_Key_ResetFSM 13DC                     ___ftmul@f1 0024                     ___ftmul@f2 0027  
               __pcstackCOMRAM 0001         __size_ofi2_LED_Control 0044                   __pidataBANK0 17B6  
                Key_ResetFSM@t 0019                      ?_SCR_Init 0001           ?_TM1640_Writer_Dates 001E  
          __end_of_Timer0_Init 16B4                    ?_Open1USART 0019                     ___lwtoft@c 0021  
          __size_of_Delay_1Khz 0038         __size_of_Relay_Control 0076                   ??_RS485_Init 001C  
                  ?_Relay_Init 0001              __end_of_SetTimer0 15EC                     __pbssBANK0 0060  
                   __pbssBANK1 0100                      ?_Key_Init 0001                      ?_Key_Scan 0001  
                  _ReceiveBuff 0060                __CFG_PLLCFG$OFF 000000        TM1640_Writer_Dates@Addr 001F  
      TM1640_Writer_Dates@Date 001E              __end_of_VerifyCRC 0A3E          ??_TM1640_Writer_Dates 001F  
                      ?___wmul 0019                     ??_SCR_Init 0019             __end_of_RS485_Init 17A4  
                  ?_ShowResult 0001            LED_Control@_LED_num 001A            __size_of_ConvertADC 0004  
                   _gs_ComData 002E                      ?___ftpack 0019                      ?___lwtoft 0021  
             Open1USART@config 001B                        _LED_BUS 003D                    ?_Pulse_1Khz 0001  
                    ?_delay1ms 0001                      ?_delay_ms 001C                  i2_LED_Control 1420  
                      _SPBRGH1 000FD4                      _ADC6_Init 17A4              _ga_RS485_SendBuff 00A1  
                      _GetADC6 10D8                     ??_Key_Init 0019                     ??_Key_Scan 0001  
                _Relay_Control 0F14            __size_of_Open1USART 0064                        _BusyADC 17D6  
                      _ReadADC 17C6                __CFG_PWRTEN$OFF 000000                        _OpenADC 12AE  
                      __Hparam 0000                    _Timer0_Init 1690                        __Lparam 0000  
               _RS485_SendDate 0D30                        ___lbmod 158A                        _Sys_Cyc 0008  
                      ___ftdiv 07B0                        ___lldiv 0E88                __size_of___wmul 0028  
                      ___ftmul 0A3E                        ___llmod 0F8A                        ___lwdiv 11A8  
                      ___lwmod 12FC            __size_of_Relay_Init 000E    __end_of_TM1640_Show_integer 0C6A  
                      __pcinit 1348                     ??___ftpack 001E                        __ramtop 1000  
        __end_of_ManageMessage 1758                        __ptext0 1556                        __ptext1 1690  
                      __ptext2 15BC                        __ptext3 0DF2                        __ptext4 161C  
                      __ptext5 0B6C                        __ptext6 12FC                        __ptext7 11A8  
                      __ptext8 16FC                        __ptext9 13DC                        _gsa_Msg 0100  
                   ??___lwtoft 0024                   __size_of_Run 006E                     ??_delay1ms 0019  
        __size_of_TM1640_Delay 001A              __CFG_MSSPMSK$MSK7 000000                 ?i2_LED_Control 0001  
                   ??_delay_ms 001E          __size_of_TM1640_Start 0024                     ?_ADC6_Init 0001  
               OpenADC@config2 0019                 OpenADC@config3 001A           end_of_initialization 138C  
                 ??_Delay_1Khz 0001            __size_of_ShowResult 0096                 ?_Relay_Control 001E  
        __size_of_Key_ResetFSM 004A            _RS485_ManageMessage 01A6                ___lldiv@divisor 001D  
       __end_of_RS485_SendDate 0DF2              _Key_ManageMessage 0632                ___lldiv@counter 0025  
          __size_of_Pulse_1Khz 0050           __size_ofi2_SetTimer0 0030             ?_Key_ManageMessage 0001  
                      postdec1 000FE5                        postdec2 000FDD                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE                   _TM1640_Delay 1772  
         ?_RS485_ManageMessage 00B0                   _TM1640_Start 16D8            ??_Key_ManageMessage 001F  
             TM1640_Delay@Time 0019             __end_of_Delay_1Khz 1556               ___lbmod@dividend 001A  
                 _Key_ResetFSM 1392    __size_of_TM1640_Writer_Byte 003E                   ?_Key_ReadFSM 0001  
                    i2___llmod 0FFA                   ??_ConvertADC 0019                   ?_Key_ScanFSM 0001  
          VerifyCRC@date_lenth 0028                    ___lbmod@rem 001C                   ?_Init_TM1640 0001  
                  ___ftdiv@exp 00BE      __end_of_Key_ManageMessage 07B0             i2___llmod@dividend 0001  
           VerifyCRC@CRC_Value 00AB                ?_RS485_SendDate 00B0                    ___ftmul@exp 00AB  
                ??_TM1640_Stop 001B                 __end_of___wmul 1644          ??_RS485_ManageMessage 00B3  
                 ??_Open1USART 001B              __size_of_SCR_Init 000C             __end_of_ConvertADC 1802  
              ??i2_LED_Control 0002                  ??_LED_Control 001A                  ??_GPIO_Config 0019  
          start_initialization 1348                    _g_Timer_Cyc 0035                    __end_of_Run 10D8  
                  ??_ADC6_Init 001E                   ??_Relay_Init 0019                     ?i2___llmod 0001  
              ??_Relay_Control 001F     TM1640_Show_integer@Numbers 0020                ___llmod@divisor 001D  
            __size_of_Key_Init 001E              __size_of_Key_Scan 0044                ___llmod@counter 0021  
                    _SetTimer0 15BC             __end_of_Open1USART 11A8                i2SetTimer0@_tmr 0001  
                     ??___wmul 001D                   ??_ShowResult 0022                      _VerifyCRC 0902  
                  __pdataBANK0 00C4           i2LED_Control@_switch 0001             __end_of_Relay_Init 17F2  
          __end_of_TM1640_Stop 16D8              __size_of___ftpack 00C6                   ??_Pulse_1Khz 0004  
                  __pbssCOMRAM 002E              __size_of___lwtoft 0026                  __pcstackBANK0 00AB  
            __size_of_delay1ms 0038              __size_of_delay_ms 001A                       ?_GetADC6 0001  
          __end_of_LED_Control 1420            __end_of_GPIO_Config 1804             __end_of_ShowResult 0E88  
   __size_of_Key_ManageMessage 017E                       ?_BusyADC 0001                       ?_ReadADC 0019  
  __end_of_TM1640_Writer_Dates 171E                     ?_SetTimer0 0019                       ?_OpenADC 0019  
                 ?_Timer0_Init 0001               ___lwdiv@dividend 0019              __CFG_CCP2MX$PORTC 000000  
           __end_of_Pulse_1Khz 12AE                      __pintcode 0008                       ?___lbmod 0019  
                     ?_Sys_Cyc 0001                       ?___ftdiv 00B1                       ?___lldiv 0019  
                     ?___ftmul 0024                       ?___llmod 0019                       ?___lwdiv 0019  
                     ?___lwmod 0019                     ?_VerifyCRC 0026                Open1USART@spbrg 0019  
                    _gs_Switch 0041           Relay_Control@_switch 001E               ___lwdiv@quotient 001D  
                  ??i2___llmod 0009                      delay1ms@a 0019                      delay1ms@b 001A  
                    delay1ms@c 001B                _s_Local_Key_FSM 0082           __size_of_Key_ReadFSM 01A2  
         __size_of_Key_ScanFSM 005A                 ___wmul@product 001D                  OpenADC@config 001D  
                     _PIE1bits 000F9D           __size_of_Init_TM1640 0026                       _PIR1bits 000F9E  
                     _SCR_Init 17F2                    _TM1640_Stop 16B4                     _ADCON0bits 000FC2  
            ___wmul@multiplier 0019               __CFG_SOSCSEL$DIG 000000              VerifyCRC@CRC_Byte 00AF  
                  _LED_Control 13DC                    _GPIO_Config 1802                    Delay_1Khz@a 0001  
                  Delay_1Khz@b 0002                    Delay_1Khz@c 0003   __size_of_TM1640_Show_integer 00FE  
  RS485_ManageMessage@DataBuff 00B0                      copy_data0 1380                       _Key_Init 171E  
                     _Key_Scan 1464               ??_RS485_SendDate 00B3               __size_of_GetADC6 006C  
                ??i2_SetTimer0 0003         __size_of_ManageMessage 001C                    ??_SetTimer0 001B  
             __size_of_BusyADC 000E               __size_of_ReadADC 0010                       __Hrparam 0000  
             __size_of_OpenADC 004E                       __Lrparam 0000             __CFG_BOREN$SBORDIS 000000  
            VerifyCRC@DataBuff 0026                    ??_VerifyCRC 0029             Key_ReadFSM@key_num 001E  
     Pulse_1Khz@_overturn_1Khz 0039               __size_of___lbmod 0032               __size_of_Sys_Cyc 019A  
             __size_of___ftdiv 0152               __size_of___lldiv 008C               __size_of___ftmul 012E  
             __size_of___llmod 0070               __size_of___lwdiv 005C               __size_of___lwmod 004C  
                     ___ftpack 0C6A                   _g_RS485_Byte 003E           _g_RS485_Receive_Flag 003F  
                     ___lwtoft 1644                       _delay1ms 14E6     __end_of_TM1640_Writer_Byte 14E6  
                     _delay_ms 1758                ___lwdiv@divisor 001B                ___lwdiv@counter 001F  
                     __ptext10 17F2                       __ptext11 106A                       __ptext20 0C6A  
                     __ptext12 0F14                       __ptext21 17C6                       __ptext13 1758  
                     __ptext30 0F8A                       __ptext22 17FE                       __ptext14 14E6  
                     __ptext31 0E88                       __ptext23 17D6                       __ptext15 0D30  
                     __ptext40 16D8                       __ptext32 0632                       __ptext24 17E4  
                     __ptext16 10D8                       __ptext41 1772                       __ptext33 158A  
                     __ptext25 178C                       __ptext17 1644                       __ptext50 151E  
                     __ptext42 1802                       __ptext34 1392                       __ptext26 1144  
                     __ptext18 0A3E                       __ptext51 1204                       __ptext43 17A4  
                     __ptext35 0490                       __ptext27 173C                       __ptext19 07B0  
                     __ptext52 1464                       __ptext44 12AE                       __ptext36 171E  
                     __ptext28 01A6                       __ptext37 166A                       __ptext29 0902  
                     __ptext46 0FFA                       __ptext38 14A8                       __ptext47 15EC  
                     __ptext39 16B4                       __ptext48 1420                       __ptext49 125E  
       Relay_Control@relay_num 001F                  __size_of_main 0034            __CFG_RTCOSC$SOSCREF 000000  
  __end_of_RS485_ManageMessage 0490           __size_of_Timer0_Init 0024            __end_ofi2_SetTimer0 161C  
          __CFG_INTOSCSEL$HIGH 000000                    delay_ms@_ms 001C                     _LED_Number 00C4  
                _ManageMessage 173C                     _INTCONbits 000FF2          __end_ofi2_LED_Control 1464  
                   _RS485_Init 178C                  Pulse_1Khz@_QD 0004                       intlevel2 0000  
        __end_of_Relay_Control 0F8A               ___lwmod@dividend 0019               ___lldiv@dividend 0019  
                   _RCSTA1bits 000FAB        Key_ReadFSM@key_num_mate 001D             __CFG_WDTPS$1048576 000000  
            _gs_Local_Key_User 006D                 ?_ManageMessage 0001           _ga_RS485_ReceiveBuff 0097  
             ___lldiv@quotient 0021                ___lwmod@divisor 001B                ___lwmod@counter 001D  
          __CFG_BORPWR$ZPBORMV 000000             __size_of_ADC6_Init 0012                    i2_SetTimer0 15EC  
          _TM1640_Show_integer 0B6C  
