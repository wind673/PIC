

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Dec 22 19:29:39 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F67K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    55  0000                     
    56                           	psect	idataBANK0
    57  01F088                     __pidataBANK0:
    58                           	opt stack 0
    59                           
    60                           ;initializer for _LED_Number
    61  01F088  3F                 	db	63
    62  01F089  06                 	db	6
    63  01F08A  5B                 	db	91
    64  01F08B  4F                 	db	79
    65  01F08C  66                 	db	102
    66  01F08D  6D                 	db	109
    67  01F08E  7D                 	db	125
    68  01F08F  07                 	db	7
    69  01F090  7F                 	db	127
    70  01F091  6F                 	db	111
    71  01F092  77                 	db	119
    72  01F093  7C                 	db	124
    73  01F094  39                 	db	57
    74  01F095  5E                 	db	94
    75  01F096  79                 	db	121
    76  01F097  71                 	db	113
    77  0000                     _ANSEL4	set	31020
    78  0000                     _ANSEL6	set	31022
    79  0000                     _ANSEL7	set	31023
    80  0000                     _ANSEL8	set	31008
    81  0000                     _ADCON0	set	4034
    82  0000                     _ADCON0bits	set	4034
    83  0000                     _ADCON1	set	4033
    84  0000                     _ADCON2	set	4032
    85  0000                     _INTCONbits	set	4082
    86  0000                     _PIE1bits	set	3997
    87  0000                     _PIR1bits	set	3998
    88  0000                     _RCREG1	set	4014
    89  0000                     _RCSTA1	set	4011
    90  0000                     _RCSTA1bits	set	4011
    91  0000                     _SPBRG1	set	4015
    92  0000                     _SPBRGH1	set	4052
    93  0000                     _TMR0H	set	4055
    94  0000                     _TMR0L	set	4054
    95  0000                     _TXREG1	set	4013
    96  0000                     _TXSTA1	set	4012
    97  0000                     _TXSTA1bits	set	4012
    98  0000                     _GIE	set	32663
    99  0000                     _IPEN	set	32391
   100  0000                     _PSA	set	32427
   101  0000                     _RA4	set	31748
   102  0000                     _RA5	set	31749
   103  0000                     _RB0	set	31752
   104  0000                     _RB1	set	31753
   105  0000                     _RC0	set	31760
   106  0000                     _RC1	set	31761
   107  0000                     _RC1IF	set	31989
   108  0000                     _RD0	set	31768
   109  0000                     _RD1	set	31769
   110  0000                     _RD2	set	31770
   111  0000                     _RD3	set	31771
   112  0000                     _RD4	set	31772
   113  0000                     _RD5	set	31773
   114  0000                     _RD6	set	31774
   115  0000                     _RD7	set	31775
   116  0000                     _RF1	set	31785
   117  0000                     _RF2	set	31786
   118  0000                     _RF3	set	31787
   119  0000                     _T08BIT	set	32430
   120  0000                     _T0CS	set	32429
   121  0000                     _T0PS0	set	32424
   122  0000                     _T0PS1	set	32425
   123  0000                     _T0PS2	set	32426
   124  0000                     _T0SE	set	32428
   125  0000                     _TMR0IE	set	32661
   126  0000                     _TMR0IF	set	32658
   127  0000                     _TMR0ON	set	32431
   128  0000                     _TRISA4	set	31892
   129  0000                     _TRISA5	set	31893
   130  0000                     _TRISB0	set	31896
   131  0000                     _TRISB1	set	31897
   132  0000                     _TRISB2	set	31898
   133  0000                     _TRISC0	set	31904
   134  0000                     _TRISC1	set	31905
   135  0000                     _TRISC6	set	31910
   136  0000                     _TRISC7	set	31911
   137  0000                     _TRISD0	set	31912
   138  0000                     _TRISD1	set	31913
   139  0000                     _TRISD2	set	31914
   140  0000                     _TRISD3	set	31915
   141  0000                     _TRISD4	set	31916
   142  0000                     _TRISD5	set	31917
   143  0000                     _TRISD6	set	31918
   144  0000                     _TRISD7	set	31919
   145  0000                     _TRISF1	set	31929
   146  0000                     _TRISF2	set	31930
   147  0000                     _TRISF3	set	31931
   148                           
   149                           ; #config settings
   150  0000                     
   151                           	psect	cinit
   152  01F2E8                     __pcinit:
   153                           	opt stack 0
   154  01F2E8                     start_initialization:
   155                           	opt stack 0
   156  01F2E8                     __initialization:
   157                           	opt stack 0
   158                           
   159                           ; Clear objects allocated to BANK0 (119 bytes)
   160  01F2E8  EE00  F060         	lfsr	0,__pbssBANK0
   161  01F2EC  0E77               	movlw	119
   162  01F2EE                     clear_0:
   163  01F2EE  6AEE               	clrf	postinc0,c
   164  01F2F0  06E8               	decf	wreg,f,c
   165  01F2F2  E1FD               	bnz	clear_0
   166                           
   167                           ; Clear objects allocated to COMRAM (54 bytes)
   168  01F2F4  EE00  F001         	lfsr	0,__pbssCOMRAM
   169  01F2F8  0E36               	movlw	54
   170  01F2FA                     clear_1:
   171  01F2FA  6AEE               	clrf	postinc0,c
   172  01F2FC  06E8               	decf	wreg,f,c
   173  01F2FE  E1FD               	bnz	clear_1
   174                           
   175                           ; Initialize objects allocated to BANK0 (16 bytes)
   176                           ; load TBLPTR registers with __pidataBANK0
   177  01F300  0E88               	movlw	low __pidataBANK0
   178  01F302  6EF6               	movwf	tblptrl,c
   179  01F304  0EF0               	movlw	high __pidataBANK0
   180  01F306  6EF7               	movwf	tblptrh,c
   181  01F308  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   182  01F30A  6EF8               	movwf	tblptru,c
   183  01F30C  EE00  F0D7         	lfsr	0,__pdataBANK0
   184  01F310  EE10 F010          	lfsr	1,16
   185  01F314                     copy_data0:
   186  01F314  0009               	tblrd		*+
   187  01F316  CFF5 FFEE          	movff	tablat,postinc0
   188  01F31A  50E5               	movf	postdec1,w,c
   189  01F31C  50E1               	movf	fsr1l,w,c
   190  01F31E  E1FA               	bnz	copy_data0
   191  01F320                     end_of_initialization:
   192                           	opt stack 0
   193  01F320                     __end_of__initialization:
   194                           	opt stack 0
   195  01F320  0100               	movlb	0
   196  01F322  EF06  F0F9         	goto	_main	;jump to C main() function
   197                           tblptru	equ	0xFF8
   198                           tblptrh	equ	0xFF7
   199                           tblptrl	equ	0xFF6
   200                           tablat	equ	0xFF5
   201                           postinc0	equ	0xFEE
   202                           wreg	equ	0xFE8
   203                           postdec1	equ	0xFE5
   204                           fsr1l	equ	0xFE1
   205                           
   206                           	psect	bssCOMRAM
   207  000001                     __pbssCOMRAM:
   208                           	opt stack 0
   209  000001                     _g_Timer_Cyc:
   210                           	opt stack 0
   211  000001                     	ds	4
   212  000005                     _gf_ADC6_Buff:
   213                           	opt stack 0
   214  000005                     	ds	3
   215  000008                     Pulse_3Khz@_overturn_3Khz:
   216                           	opt stack 0
   217  000008                     	ds	1
   218  000009                     Sys_Cyc@_Byte:
   219                           	opt stack 0
   220  000009                     	ds	1
   221  00000A                     Sys_Cyc@_flag:
   222                           	opt stack 0
   223  00000A                     	ds	1
   224  00000B                     Sys_Cyc@_overturn_LED:
   225                           	opt stack 0
   226  00000B                     	ds	1
   227  00000C                     _LED_BUS:
   228                           	opt stack 0
   229  00000C                     	ds	1
   230  00000D                     _gs_Local_Key_User:
   231                           	opt stack 0
   232  00000D                     	ds	21
   233  000022                     _s_Local_Key_FSM:
   234                           	opt stack 0
   235  000022                     	ds	21
   236                           tblptru	equ	0xFF8
   237                           tblptrh	equ	0xFF7
   238                           tblptrl	equ	0xFF6
   239                           tablat	equ	0xFF5
   240                           postinc0	equ	0xFEE
   241                           wreg	equ	0xFE8
   242                           postdec1	equ	0xFE5
   243                           fsr1l	equ	0xFE1
   244                           
   245                           	psect	bssBANK0
   246  000060                     __pbssBANK0:
   247                           	opt stack 0
   248  000060                     _gsa_Msg:
   249                           	opt stack 0
   250  000060                     	ds	90
   251  0000BA                     _gs_ComData:
   252                           	opt stack 0
   253  0000BA                     	ds	9
   254  0000C3                     _ReceiveBuff:
   255                           	opt stack 0
   256  0000C3                     	ds	7
   257  0000CA                     _gs_Switch:
   258                           	opt stack 0
   259  0000CA                     	ds	13
   260                           tblptru	equ	0xFF8
   261                           tblptrh	equ	0xFF7
   262                           tblptrl	equ	0xFF6
   263                           tablat	equ	0xFF5
   264                           postinc0	equ	0xFEE
   265                           wreg	equ	0xFE8
   266                           postdec1	equ	0xFE5
   267                           fsr1l	equ	0xFE1
   268                           
   269                           	psect	dataBANK0
   270  0000D7                     __pdataBANK0:
   271                           	opt stack 0
   272  0000D7                     _LED_Number:
   273                           	opt stack 0
   274  0000D7                     	ds	16
   275                           tblptru	equ	0xFF8
   276                           tblptrh	equ	0xFF7
   277                           tblptrl	equ	0xFF6
   278                           tablat	equ	0xFF5
   279                           postinc0	equ	0xFEE
   280                           wreg	equ	0xFE8
   281                           postdec1	equ	0xFE5
   282                           fsr1l	equ	0xFE1
   283                           
   284                           	psect	cstackBANK0
   285  0000E7                     __pcstackBANK0:
   286                           	opt stack 0
   287  0000E7                     ??_Key_ReadFSM:
   288  0000E7                     ?___wmul:
   289                           	opt stack 0
   290  0000E7                     ?___lwdiv:
   291                           	opt stack 0
   292  0000E7                     ?___lwmod:
   293                           	opt stack 0
   294  0000E7                     delay1ms@a:
   295                           	opt stack 0
   296  0000E7                     Key_ResetFSM@t:
   297                           	opt stack 0
   298  0000E7                     LED_Control@_switch:
   299                           	opt stack 0
   300  0000E7                     TM1640_Delay@Time:
   301                           	opt stack 0
   302  0000E7                     OpenADC@config2:
   303                           	opt stack 0
   304  0000E7                     ___lbmod@divisor:
   305                           	opt stack 0
   306  0000E7                     _VerifyCRC$0:
   307                           	opt stack 0
   308  0000E7                     SetTimer0@_tmr:
   309                           	opt stack 0
   310  0000E7                     _RS485_RecogniseMessage$0:
   311                           	opt stack 0
   312  0000E7                     Open1USART@spbrg:
   313                           	opt stack 0
   314  0000E7                     ___wmul@multiplier:
   315                           	opt stack 0
   316  0000E7                     ___lwdiv@dividend:
   317                           	opt stack 0
   318  0000E7                     ___lwmod@dividend:
   319                           	opt stack 0
   320                           
   321                           ; 2 bytes @ 0x0
   322  0000E7                     	ds	1
   323  0000E8                     delay1ms@b:
   324                           	opt stack 0
   325  0000E8                     LED_Control@_LED_num:
   326                           	opt stack 0
   327  0000E8                     TM1640_Delay@i:
   328                           	opt stack 0
   329  0000E8                     OpenADC@config3:
   330                           	opt stack 0
   331  0000E8                     ___lbmod@dividend:
   332                           	opt stack 0
   333                           
   334                           ; 1 bytes @ 0x1
   335  0000E8                     	ds	1
   336  0000E9                     ??_SetTimer0:
   337  0000E9                     ??_OpenADC:
   338  0000E9                     delay1ms@c:
   339                           	opt stack 0
   340  0000E9                     _VerifyCRC$1:
   341                           	opt stack 0
   342  0000E9                     TM1640_Writer_Byte@Date:
   343                           	opt stack 0
   344  0000E9                     _RS485_RecogniseMessage$1:
   345                           	opt stack 0
   346  0000E9                     Open1USART@config:
   347                           	opt stack 0
   348  0000E9                     ___lbmod@counter:
   349                           	opt stack 0
   350  0000E9                     ___wmul@multiplicand:
   351                           	opt stack 0
   352  0000E9                     ___lwdiv@divisor:
   353                           	opt stack 0
   354  0000E9                     ___lwmod@divisor:
   355                           	opt stack 0
   356                           
   357                           ; 2 bytes @ 0x2
   358  0000E9                     	ds	1
   359  0000EA                     TM1640_Writer_Byte@mask:
   360                           	opt stack 0
   361  0000EA                     ___lbmod@rem:
   362                           	opt stack 0
   363  0000EA                     delay_ms@_ms:
   364                           	opt stack 0
   365  0000EA                     RS485_SendDate@date_dress:
   366                           	opt stack 0
   367                           
   368                           ; 2 bytes @ 0x3
   369  0000EA                     	ds	1
   370  0000EB                     Key_ReadFSM@key_num_mate:
   371                           	opt stack 0
   372  0000EB                     OpenADC@config:
   373                           	opt stack 0
   374  0000EB                     ___lwdiv@counter:
   375                           	opt stack 0
   376  0000EB                     ___lwmod@counter:
   377                           	opt stack 0
   378  0000EB                     ___wmul@product:
   379                           	opt stack 0
   380                           
   381                           ; 2 bytes @ 0x4
   382  0000EB                     	ds	1
   383  0000EC                     Key_ReadFSM@key_num:
   384                           	opt stack 0
   385  0000EC                     RS485_SendDate@date_lenth:
   386                           	opt stack 0
   387  0000EC                     TM1640_Writer_Dates@Date:
   388                           	opt stack 0
   389  0000EC                     Relay_Control@_switch:
   390                           	opt stack 0
   391  0000EC                     ___lwdiv@quotient:
   392                           	opt stack 0
   393                           
   394                           ; 2 bytes @ 0x5
   395  0000EC                     	ds	1
   396  0000ED                     ??_Key_Inquiry:
   397  0000ED                     TM1640_Writer_Dates@Addr:
   398                           	opt stack 0
   399  0000ED                     Relay_Control@relay_num:
   400                           	opt stack 0
   401                           
   402                           ; 1 bytes @ 0x6
   403  0000ED                     	ds	1
   404  0000EE                     SCR_Magnet@_ch:
   405                           	opt stack 0
   406  0000EE                     SCR_Demagnet@_ch:
   407                           	opt stack 0
   408  0000EE                     TM1640_Show_integer@Numbers:
   409                           	opt stack 0
   410                           
   411                           ; 2 bytes @ 0x7
   412  0000EE                     	ds	1
   413  0000EF                     
   414                           ; 0 bytes @ 0x8
   415  0000EF                     	ds	1
   416  0000F0                     ??_ShowResult:
   417  0000F0                     Manage_Incident@i:
   418                           	opt stack 0
   419                           
   420                           ; 2 bytes @ 0x9
   421  0000F0                     	ds	1
   422  0000F1                     
   423                           ; 0 bytes @ 0xA
   424  0000F1                     	ds	2
   425  0000F3                     tblptru	equ	0xFF8
   426                           tblptrh	equ	0xFF7
   427                           tblptrl	equ	0xFF6
   428                           tablat	equ	0xFF5
   429                           postinc0	equ	0xFEE
   430                           wreg	equ	0xFE8
   431                           postdec1	equ	0xFE5
   432                           fsr1l	equ	0xFE1
   433                           
   434                           ; 0 bytes @ 0xC
   435                           
   436                           	psect	cstackCOMRAM
   437  000037                     __pcstackCOMRAM:
   438                           	opt stack 0
   439  000037                     ?___llmod:
   440                           	opt stack 0
   441  000037                     i2LED_Control@_switch:
   442                           	opt stack 0
   443  000037                     i2SetTimer0@_tmr:
   444                           	opt stack 0
   445  000037                     ___llmod@dividend:
   446                           	opt stack 0
   447                           
   448                           ; 4 bytes @ 0x0
   449  000037                     	ds	1
   450  000038                     i2LED_Control@_LED_num:
   451                           	opt stack 0
   452                           
   453                           ; 1 bytes @ 0x1
   454  000038                     	ds	1
   455  000039                     ??i2_SetTimer0:
   456                           
   457                           ; 0 bytes @ 0x2
   458  000039                     	ds	2
   459  00003B                     ___llmod@divisor:
   460                           	opt stack 0
   461                           
   462                           ; 4 bytes @ 0x4
   463  00003B                     	ds	4
   464  00003F                     ___llmod@counter:
   465                           	opt stack 0
   466                           
   467                           ; 1 bytes @ 0x8
   468  00003F                     	ds	1
   469  000040                     ??_Sys_Cyc:
   470                           
   471                           ; 0 bytes @ 0x9
   472  000040                     	ds	14
   473  00004E                     Sys_Cyc@_temp:
   474                           	opt stack 0
   475                           
   476                           ; 1 bytes @ 0x17
   477  00004E                     	ds	1
   478                           tblptru	equ	0xFF8
   479                           tblptrh	equ	0xFF7
   480                           tblptrl	equ	0xFF6
   481                           tablat	equ	0xFF5
   482                           postinc0	equ	0xFEE
   483                           wreg	equ	0xFE8
   484                           postdec1	equ	0xFE5
   485                           fsr1l	equ	0xFE1
   486                           
   487 ;;
   488 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   489 ;;
   490 ;; *************** function _main *****************
   491 ;; Defined at:
   492 ;;		line 40 in file "_01_USER/main.c"
   493 ;; Parameters:    Size  Location     Type
   494 ;;		None
   495 ;; Auto vars:     Size  Location     Type
   496 ;;		None
   497 ;; Return value:  Size  Location     Type
   498 ;;                  2   24[None  ] int 
   499 ;; Registers used:
   500 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   501 ;; Tracked objects:
   502 ;;		On entry : 0/0
   503 ;;		On exit  : 0/0
   504 ;;		Unchanged: 0/0
   505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   510 ;;Total ram usage:        0 bytes
   511 ;; Hardware stack levels required when called:    8
   512 ;; This function calls:
   513 ;;		_ADC6_Init
   514 ;;		_GPIO_Config
   515 ;;		_Init_TM1640
   516 ;;		_Key_Init
   517 ;;		_ManageMessage
   518 ;;		_Manage_Incident
   519 ;;		_RS485_Init
   520 ;;		_Relay_Init
   521 ;;		_SCR_Init
   522 ;;		_ShowResult
   523 ;;		_Timer0_Init
   524 ;; This function is called by:
   525 ;;		Startup code after reset
   526 ;; This function uses a non-reentrant model
   527 ;;
   528                           
   529                           	psect	text0
   530  01F20C                     __ptext0:
   531                           	opt stack 0
   532  01F20C                     _main:
   533                           	opt stack 23
   534                           
   535                           ;main.c: 45: GPIO_Config();
   536                           
   537                           ;incstack = 0
   538  01F20C  EC36  F0F8         	call	_GPIO_Config	;wreg free
   539                           
   540                           ;main.c: 46: Key_Init();
   541  01F210  EC64  F0F8         	call	_Key_Init	;wreg free
   542                           
   543                           ;main.c: 47: Timer0_Init();
   544  01F214  ECDE  F0F8         	call	_Timer0_Init	;wreg free
   545                           
   546                           ;main.c: 48: Init_TM1640();
   547  01F218  ECCB  F0F8         	call	_Init_TM1640	;wreg free
   548                           
   549                           ;main.c: 49: ADC6_Init();
   550  01F21C  EC4C  F0F8         	call	_ADC6_Init	;wreg free
   551                           
   552                           ;main.c: 50: RS485_Init();
   553  01F220  EC57  F0F8         	call	_RS485_Init	;wreg free
   554                           
   555                           ;main.c: 51: Relay_Init();
   556  01F224  EC3D  F0F8         	call	_Relay_Init	;wreg free
   557                           
   558                           ;main.c: 52: SCR_Init();
   559  01F228  EC37  F0F8         	call	_SCR_Init	;wreg free
   560  01F22C  D000               	goto	l3489
   561  01F22E                     l3489:
   562                           
   563                           ;main.c: 56: {
   564                           ;main.c: 57: ManageMessage();
   565  01F22E  ECB9  F0F8         	call	_ManageMessage	;wreg free
   566                           
   567                           ;main.c: 58: Manage_Incident();
   568  01F232  EC70  F0FC         	call	_Manage_Incident	;wreg free
   569                           
   570                           ;main.c: 59: ShowResult();
   571  01F236  EC32  F0FD         	call	_ShowResult	;wreg free
   572  01F23A  D7F9               	goto	l3489
   573                           
   574                           ;main.c: 60: }
   575                           ;main.c: 62: return 0;
   576                           ;	Return value of _main is never used
   577  01F23C  EFE6  F000         	goto	start
   578  01F240                     __end_of_main:
   579                           	opt stack 0
   580                           tblptru	equ	0xFF8
   581                           tblptrh	equ	0xFF7
   582                           tblptrl	equ	0xFF6
   583                           tablat	equ	0xFF5
   584                           postinc0	equ	0xFEE
   585                           wreg	equ	0xFE8
   586                           postdec1	equ	0xFE5
   587                           fsr1l	equ	0xFE1
   588                           
   589 ;; *************** function _Timer0_Init *****************
   590 ;; Defined at:
   591 ;;		line 43 in file "_01_USER/My_Timer.c"
   592 ;; Parameters:    Size  Location     Type
   593 ;;		None
   594 ;; Auto vars:     Size  Location     Type
   595 ;;		None
   596 ;; Return value:  Size  Location     Type
   597 ;;		None               void
   598 ;; Registers used:
   599 ;;		wreg, status,2, status,0, cstack
   600 ;; Tracked objects:
   601 ;;		On entry : 0/0
   602 ;;		On exit  : 0/0
   603 ;;		Unchanged: 0/0
   604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   609 ;;Total ram usage:        0 bytes
   610 ;; Hardware stack levels used:    1
   611 ;; Hardware stack levels required when called:    4
   612 ;; This function calls:
   613 ;;		_SetTimer0
   614 ;; This function is called by:
   615 ;;		_main
   616 ;; This function uses a non-reentrant model
   617 ;;
   618                           
   619                           	psect	text1
   620  01F1BC                     __ptext1:
   621                           	opt stack 0
   622  01F1BC                     _Timer0_Init:
   623                           	opt stack 26
   624                           
   625                           ;My_Timer.c: 45: T08BIT = 0;
   626                           
   627                           ;incstack = 0
   628  01F1BC  9CD5               	bcf	4053,6,c	;volatile
   629                           
   630                           ;My_Timer.c: 46: T0CS = 0;
   631  01F1BE  9AD5               	bcf	4053,5,c	;volatile
   632                           
   633                           ;My_Timer.c: 47: T0SE = 0;
   634  01F1C0  98D5               	bcf	4053,4,c	;volatile
   635                           
   636                           ;My_Timer.c: 48: PSA = 0;
   637  01F1C2  96D5               	bcf	4053,3,c	;volatile
   638                           
   639                           ;My_Timer.c: 49: T0PS2 = 1;
   640  01F1C4  84D5               	bsf	4053,2,c	;volatile
   641                           
   642                           ;My_Timer.c: 50: T0PS1 = 1;
   643  01F1C6  82D5               	bsf	4053,1,c	;volatile
   644                           
   645                           ;My_Timer.c: 51: T0PS0 = 1;
   646  01F1C8  80D5               	bsf	4053,0,c	;volatile
   647                           
   648                           ;My_Timer.c: 65: SetTimer0(1);
   649  01F1CA  0E00               	movlw	0
   650  01F1CC  0100               	movlb	0	; () banked
   651  01F1CE  6FE8               	movwf	(SetTimer0@_tmr+1)& (0+255),b
   652  01F1D0  0E01               	movlw	1
   653  01F1D2  6FE7               	movwf	SetTimer0@_tmr& (0+255),b
   654  01F1D4  EC68  F0FA         	call	_SetTimer0	;wreg free
   655                           
   656                           ;My_Timer.c: 66: TMR0ON = 1;
   657  01F1D8  8ED5               	bsf	4053,7,c	;volatile
   658                           
   659                           ;My_Timer.c: 67: TMR0IE = 1;
   660  01F1DA  8AF2               	bsf	intcon,5,c	;volatile
   661                           
   662                           ;My_Timer.c: 68: IPEN = 0;GIE = 1;
   663  01F1DC  9ED0               	bcf	4048,7,c	;volatile
   664  01F1DE  8EF2               	bsf	intcon,7,c	;volatile
   665  01F1E0  0012               	return		;funcret
   666  01F1E2                     __end_of_Timer0_Init:
   667                           	opt stack 0
   668                           tblptru	equ	0xFF8
   669                           tblptrh	equ	0xFF7
   670                           tblptrl	equ	0xFF6
   671                           tablat	equ	0xFF5
   672                           intcon	equ	0xFF2
   673                           postinc0	equ	0xFEE
   674                           wreg	equ	0xFE8
   675                           postdec1	equ	0xFE5
   676                           fsr1l	equ	0xFE1
   677                           
   678 ;; *************** function _SetTimer0 *****************
   679 ;; Defined at:
   680 ;;		line 81 in file "_01_USER/My_Timer.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;  _tmr            2    0[BANK0 ] unsigned int 
   683 ;; Auto vars:     Size  Location     Type
   684 ;;		None
   685 ;; Return value:  Size  Location     Type
   686 ;;		None               void
   687 ;; Registers used:
   688 ;;		wreg, status,2, status,0
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   694 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   696 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   697 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   698 ;;Total ram usage:        4 bytes
   699 ;; Hardware stack levels used:    1
   700 ;; Hardware stack levels required when called:    3
   701 ;; This function calls:
   702 ;;		Nothing
   703 ;; This function is called by:
   704 ;;		_Timer0_Init
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           	psect	text2
   709  01F4D0                     __ptext2:
   710                           	opt stack 0
   711  01F4D0                     _SetTimer0:
   712                           	opt stack 26
   713                           
   714                           ;My_Timer.c: 83: if(_tmr >= 0xfffe) _tmr = 0xffff;
   715                           
   716                           ;incstack = 0
   717  01F4D0  0EFE               	movlw	254
   718  01F4D2  0100               	movlb	0	; () banked
   719  01F4D4  5DE7               	subwf	SetTimer0@_tmr& (0+255),w,b
   720  01F4D6  0EFF               	movlw	255
   721  01F4D8  0100               	movlb	0	; () banked
   722  01F4DA  59E8               	subwfb	(SetTimer0@_tmr+1)& (0+255),w,b
   723  01F4DC  A0D8               	btfss	status,0,c
   724  01F4DE  D004               	goto	l3317
   725                           
   726                           ; BSR set to: 0
   727  01F4E0  0100               	movlb	0	; () banked
   728  01F4E2  69E7               	setf	SetTimer0@_tmr& (0+255),b
   729  01F4E4  69E8               	setf	(SetTimer0@_tmr+1)& (0+255),b
   730  01F4E6  D000               	goto	l3317
   731  01F4E8                     l3317:
   732                           
   733                           ; BSR set to: 0
   734                           ;My_Timer.c: 84: _tmr=0xffff-_tmr;
   735  01F4E8  C0E7  F0E9         	movff	SetTimer0@_tmr,??_SetTimer0
   736  01F4EC  C0E8  F0EA         	movff	SetTimer0@_tmr+1,??_SetTimer0+1
   737  01F4F0  0100               	movlb	0	; () banked
   738  01F4F2  1FE9               	comf	??_SetTimer0& (0+255),f,b
   739  01F4F4  1FEA               	comf	(??_SetTimer0+1)& (0+255),f,b
   740  01F4F6  4BE9               	infsnz	??_SetTimer0& (0+255),f,b
   741  01F4F8  2BEA               	incf	(??_SetTimer0+1)& (0+255),f,b
   742  01F4FA  0EFF               	movlw	255
   743  01F4FC  0100               	movlb	0	; () banked
   744  01F4FE  25E9               	addwf	??_SetTimer0& (0+255),w,b
   745  01F500  0100               	movlb	0	; () banked
   746  01F502  6FE7               	movwf	SetTimer0@_tmr& (0+255),b
   747  01F504  0EFF               	movlw	255
   748  01F506  0100               	movlb	0	; () banked
   749  01F508  21EA               	addwfc	(??_SetTimer0+1)& (0+255),w,b
   750  01F50A  0100               	movlb	0	; () banked
   751  01F50C  6FE8               	movwf	(SetTimer0@_tmr+1)& (0+255),b
   752                           
   753                           ; BSR set to: 0
   754                           ;My_Timer.c: 85: TMR0H = _tmr/256;
   755  01F50E  0100               	movlb	0	; () banked
   756  01F510  51E8               	movf	(SetTimer0@_tmr+1)& (0+255),w,b
   757  01F512  6ED7               	movwf	4055,c	;volatile
   758                           
   759                           ; BSR set to: 0
   760                           ;My_Timer.c: 86: TMR0L = _tmr%256;
   761  01F514  C0E7  FFD6         	movff	SetTimer0@_tmr,4054	;volatile
   762                           
   763                           ; BSR set to: 0
   764                           ;My_Timer.c: 87: TMR0IF = 0;
   765  01F518  94F2               	bcf	intcon,2,c	;volatile
   766                           
   767                           ; BSR set to: 0
   768  01F51A  0012               	return		;funcret
   769  01F51C                     __end_of_SetTimer0:
   770                           	opt stack 0
   771                           tblptru	equ	0xFF8
   772                           tblptrh	equ	0xFF7
   773                           tblptrl	equ	0xFF6
   774                           tablat	equ	0xFF5
   775                           intcon	equ	0xFF2
   776                           postinc0	equ	0xFEE
   777                           wreg	equ	0xFE8
   778                           postdec1	equ	0xFE5
   779                           fsr1l	equ	0xFE1
   780                           status	equ	0xFD8
   781                           
   782 ;; *************** function _ShowResult *****************
   783 ;; Defined at:
   784 ;;		line 102 in file "_01_USER/Run.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;		None
   787 ;; Auto vars:     Size  Location     Type
   788 ;;		None
   789 ;; Return value:  Size  Location     Type
   790 ;;		None               void
   791 ;; Registers used:
   792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   800 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   801 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   802 ;;Total ram usage:        3 bytes
   803 ;; Hardware stack levels used:    1
   804 ;; Hardware stack levels required when called:    7
   805 ;; This function calls:
   806 ;;		_LED_Control
   807 ;;		_TM1640_Show_integer
   808 ;;		_TM1640_Writer_Dates
   809 ;;		___wmul
   810 ;; This function is called by:
   811 ;;		_main
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           
   815                           	psect	text3
   816  01FA64                     __ptext3:
   817                           	opt stack 0
   818  01FA64                     _ShowResult:
   819                           	opt stack 23
   820                           
   821                           ;Run.c: 104: if( gs_Switch.Show_Send_Receive )
   822                           
   823                           ; BSR set to: 0
   824                           ;incstack = 0
   825  01FA64  0100               	movlb	0	; () banked
   826  01FA66  51CB               	movf	(_gs_Switch+1)& (0+255),w,b
   827  01FA68  B4D8               	btfsc	status,2,c
   828  01FA6A  D030               	goto	l3469
   829                           
   830                           ; BSR set to: 0
   831                           ;Run.c: 105: {
   832                           ;Run.c: 106: TM1640_Show_integer( ga_RS485_SendBuff[g_RS485_Byte] + (g_RS485_Byte * 1000
      +                          ) );
   833  01FA6C  C000  F0F0         	movff	_g_RS485_Byte,??_ShowResult
   834  01FA70  0100               	movlb	0	; () banked
   835  01FA72  51F0               	movf	??_ShowResult& (0+255),w,b
   836  01FA74  0100               	movlb	0	; () banked
   837  01FA76  6FE7               	movwf	___wmul@multiplier& (0+255),b
   838  01FA78  6BE8               	clrf	(___wmul@multiplier+1)& (0+255),b
   839  01FA7A  0E03               	movlw	3
   840  01FA7C  0100               	movlb	0	; () banked
   841  01FA7E  6FEA               	movwf	(___wmul@multiplicand+1)& (0+255),b
   842  01FA80  0EE8               	movlw	232
   843  01FA82  6FE9               	movwf	___wmul@multiplicand& (0+255),b
   844  01FA84  EC3B  F0F9         	call	___wmul	;wreg free
   845  01FA88  C000  F0F1         	movff	_g_RS485_Byte,??_ShowResult+1
   846  01FA8C  0100               	movlb	0	; () banked
   847  01FA8E  51F1               	movf	(??_ShowResult+1)& (0+255),w,b
   848  01FA90  0D01               	mullw	1
   849  01FA92  0E00               	movlw	low _ga_RS485_SendBuff
   850  01FA94  24F3               	addwf	prodl,w,c
   851  01FA96  6ED9               	movwf	fsr2l,c
   852  01FA98  0E00               	movlw	high _ga_RS485_SendBuff
   853  01FA9A  20F4               	addwfc	prodh,w,c
   854  01FA9C  6EDA               	movwf	fsr2h,c
   855  01FA9E  50DF               	movf	indf2,w,c
   856  01FAA0  0100               	movlb	0	; () banked
   857  01FAA2  6FF2               	movwf	(??_ShowResult+2)& (0+255),b
   858  01FAA4  0100               	movlb	0	; () banked
   859  01FAA6  51F2               	movf	(??_ShowResult+2)& (0+255),w,b
   860  01FAA8  0100               	movlb	0	; () banked
   861  01FAAA  25E7               	addwf	?___wmul& (0+255),w,b
   862  01FAAC  0100               	movlb	0	; () banked
   863  01FAAE  6FEE               	movwf	TM1640_Show_integer@Numbers& (0+255),b
   864  01FAB0  0E00               	movlw	0
   865  01FAB2  0100               	movlb	0	; () banked
   866  01FAB4  21E8               	addwfc	(?___wmul+1)& (0+255),w,b
   867  01FAB6  0100               	movlb	0	; () banked
   868  01FAB8  6FEF               	movwf	(TM1640_Show_integer@Numbers+1)& (0+255),b
   869  01FABA  EC9C  F0FD         	call	_TM1640_Show_integer	;wreg free
   870                           
   871                           ;Run.c: 107: LED_Control(1,1);
   872  01FABE  0E01               	movlw	1
   873  01FAC0  0100               	movlb	0	; () banked
   874  01FAC2  6FE7               	movwf	LED_Control@_switch& (0+255),b
   875  01FAC4  0E01               	movlw	1
   876  01FAC6  ECDE  F0FA         	call	_LED_Control
   877                           
   878                           ;Run.c: 108: }
   879  01FACA  D030               	goto	l3473
   880  01FACC                     l3469:
   881                           
   882                           ;Run.c: 110: else
   883                           ;Run.c: 111: {
   884                           ;Run.c: 112: TM1640_Show_integer( ga_RS485_ReceiveBuff[g_RS485_Byte] + (g_RS485_Byte * 1
      +                          000) );
   885  01FACC  C000  F0F0         	movff	_g_RS485_Byte,??_ShowResult
   886  01FAD0  0100               	movlb	0	; () banked
   887  01FAD2  51F0               	movf	??_ShowResult& (0+255),w,b
   888  01FAD4  0100               	movlb	0	; () banked
   889  01FAD6  6FE7               	movwf	___wmul@multiplier& (0+255),b
   890  01FAD8  6BE8               	clrf	(___wmul@multiplier+1)& (0+255),b
   891  01FADA  0E03               	movlw	3
   892  01FADC  0100               	movlb	0	; () banked
   893  01FADE  6FEA               	movwf	(___wmul@multiplicand+1)& (0+255),b
   894  01FAE0  0EE8               	movlw	232
   895  01FAE2  6FE9               	movwf	___wmul@multiplicand& (0+255),b
   896  01FAE4  EC3B  F0F9         	call	___wmul	;wreg free
   897  01FAE8  C000  F0F1         	movff	_g_RS485_Byte,??_ShowResult+1
   898  01FAEC  0100               	movlb	0	; () banked
   899  01FAEE  51F1               	movf	(??_ShowResult+1)& (0+255),w,b
   900  01FAF0  0D01               	mullw	1
   901  01FAF2  0E00               	movlw	low _ga_RS485_ReceiveBuff
   902  01FAF4  24F3               	addwf	prodl,w,c
   903  01FAF6  6ED9               	movwf	fsr2l,c
   904  01FAF8  0E00               	movlw	high _ga_RS485_ReceiveBuff
   905  01FAFA  20F4               	addwfc	prodh,w,c
   906  01FAFC  6EDA               	movwf	fsr2h,c
   907  01FAFE  50DF               	movf	indf2,w,c
   908  01FB00  0100               	movlb	0	; () banked
   909  01FB02  6FF2               	movwf	(??_ShowResult+2)& (0+255),b
   910  01FB04  0100               	movlb	0	; () banked
   911  01FB06  51F2               	movf	(??_ShowResult+2)& (0+255),w,b
   912  01FB08  0100               	movlb	0	; () banked
   913  01FB0A  25E7               	addwf	?___wmul& (0+255),w,b
   914  01FB0C  0100               	movlb	0	; () banked
   915  01FB0E  6FEE               	movwf	TM1640_Show_integer@Numbers& (0+255),b
   916  01FB10  0E00               	movlw	0
   917  01FB12  0100               	movlb	0	; () banked
   918  01FB14  21E8               	addwfc	(?___wmul+1)& (0+255),w,b
   919  01FB16  0100               	movlb	0	; () banked
   920  01FB18  6FEF               	movwf	(TM1640_Show_integer@Numbers+1)& (0+255),b
   921  01FB1A  EC9C  F0FD         	call	_TM1640_Show_integer	;wreg free
   922                           
   923                           ;Run.c: 113: LED_Control(1,0);
   924  01FB1E  0E00               	movlw	0
   925  01FB20  0100               	movlb	0	; () banked
   926  01FB22  6FE7               	movwf	LED_Control@_switch& (0+255),b
   927  01FB24  0E01               	movlw	1
   928  01FB26  ECDE  F0FA         	call	_LED_Control
   929  01FB2A  D000               	goto	l3473
   930  01FB2C                     l3473:
   931                           
   932                           ;Run.c: 114: }
   933                           ;Run.c: 116: TM1640_Writer_Dates(4, LED_BUS);
   934  01FB2C  C00C  F0EC         	movff	_LED_BUS,TM1640_Writer_Dates@Date
   935  01FB30  0E04               	movlw	4
   936  01FB32  ECF1  F0F8         	call	_TM1640_Writer_Dates
   937  01FB36  0012               	return		;funcret
   938  01FB38                     __end_of_ShowResult:
   939                           	opt stack 0
   940                           tblptru	equ	0xFF8
   941                           tblptrh	equ	0xFF7
   942                           tblptrl	equ	0xFF6
   943                           tablat	equ	0xFF5
   944                           prodh	equ	0xFF4
   945                           prodl	equ	0xFF3
   946                           intcon	equ	0xFF2
   947                           postinc0	equ	0xFEE
   948                           wreg	equ	0xFE8
   949                           postdec1	equ	0xFE5
   950                           fsr1l	equ	0xFE1
   951                           indf2	equ	0xFDF
   952                           fsr2h	equ	0xFDA
   953                           fsr2l	equ	0xFD9
   954                           status	equ	0xFD8
   955                           
   956 ;; *************** function ___wmul *****************
   957 ;; Defined at:
   958 ;;		line 15 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;  multiplier      2    0[BANK0 ] unsigned int 
   961 ;;  multiplicand    2    2[BANK0 ] unsigned int 
   962 ;; Auto vars:     Size  Location     Type
   963 ;;  product         2    4[BANK0 ] unsigned int 
   964 ;; Return value:  Size  Location     Type
   965 ;;                  2    0[BANK0 ] unsigned int 
   966 ;; Registers used:
   967 ;;		wreg, status,2, status,0, prodl, prodh
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   973 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   974 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   976 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   977 ;;Total ram usage:        6 bytes
   978 ;; Hardware stack levels used:    1
   979 ;; Hardware stack levels required when called:    3
   980 ;; This function calls:
   981 ;;		Nothing
   982 ;; This function is called by:
   983 ;;		_ShowResult
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           	psect	text4
   988  01F276                     __ptext4:
   989                           	opt stack 0
   990  01F276                     ___wmul:
   991                           	opt stack 26
   992                           
   993                           ;incstack = 0
   994  01F276  0100               	movlb	0	; () banked
   995  01F278  51E7               	movf	___wmul@multiplier& (0+255),w,b
   996  01F27A  0100               	movlb	0	; () banked
   997  01F27C  03E9               	mulwf	___wmul@multiplicand& (0+255),b
   998  01F27E  CFF3 F0EB          	movff	prodl,___wmul@product
   999  01F282  CFF4 F0EC          	movff	prodh,___wmul@product+1
  1000  01F286  0100               	movlb	0	; () banked
  1001  01F288  51E7               	movf	___wmul@multiplier& (0+255),w,b
  1002  01F28A  0100               	movlb	0	; () banked
  1003  01F28C  03EA               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  1004  01F28E  50F3               	movf	prodl,w,c
  1005  01F290  0100               	movlb	0	; () banked
  1006  01F292  27EC               	addwf	(___wmul@product+1)& (0+255),f,b
  1007  01F294  0100               	movlb	0	; () banked
  1008  01F296  51E8               	movf	(___wmul@multiplier+1)& (0+255),w,b
  1009  01F298  0100               	movlb	0	; () banked
  1010  01F29A  03E9               	mulwf	___wmul@multiplicand& (0+255),b
  1011  01F29C  50F3               	movf	prodl,w,c
  1012  01F29E  0100               	movlb	0	; () banked
  1013  01F2A0  27EC               	addwf	(___wmul@product+1)& (0+255),f,b
  1014                           
  1015                           ; BSR set to: 0
  1016  01F2A2  C0EB  F0E7         	movff	___wmul@product,?___wmul
  1017  01F2A6  C0EC  F0E8         	movff	___wmul@product+1,?___wmul+1
  1018  01F2AA  0012               	return	
  1019                           
  1020                           ; BSR set to: 0
  1021                           
  1022                           ; BSR set to: 0
  1023  01F2AC  0012               	return		;funcret
  1024  01F2AE                     __end_of___wmul:
  1025                           	opt stack 0
  1026                           tblptru	equ	0xFF8
  1027                           tblptrh	equ	0xFF7
  1028                           tblptrl	equ	0xFF6
  1029                           tablat	equ	0xFF5
  1030                           prodh	equ	0xFF4
  1031                           prodl	equ	0xFF3
  1032                           intcon	equ	0xFF2
  1033                           postinc0	equ	0xFEE
  1034                           wreg	equ	0xFE8
  1035                           postdec1	equ	0xFE5
  1036                           fsr1l	equ	0xFE1
  1037                           indf2	equ	0xFDF
  1038                           fsr2h	equ	0xFDA
  1039                           fsr2l	equ	0xFD9
  1040                           status	equ	0xFD8
  1041                           
  1042 ;; *************** function _TM1640_Show_integer *****************
  1043 ;; Defined at:
  1044 ;;		line 206 in file "_01_USER/TM1640.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;  Numbers         2    7[BANK0 ] unsigned int 
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;		None
  1049 ;; Return value:  Size  Location     Type
  1050 ;;		None               void
  1051 ;; Registers used:
  1052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1058 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1061 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1062 ;;Total ram usage:        2 bytes
  1063 ;; Hardware stack levels used:    1
  1064 ;; Hardware stack levels required when called:    6
  1065 ;; This function calls:
  1066 ;;		_TM1640_Writer_Dates
  1067 ;;		___lwdiv
  1068 ;;		___lwmod
  1069 ;; This function is called by:
  1070 ;;		_ShowResult
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           	psect	text5
  1075  01FB38                     __ptext5:
  1076                           	opt stack 0
  1077  01FB38                     _TM1640_Show_integer:
  1078                           	opt stack 23
  1079                           
  1080                           ;TM1640.c: 209: TM1640_Writer_Dates(3,LED_Number[Numbers%10]); Numbers/=10;
  1081                           
  1082                           ; BSR set to: 0
  1083                           ;incstack = 0
  1084  01FB38  C0EE  F0E7         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1085  01FB3C  C0EF  F0E8         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1086  01FB40  0E00               	movlw	0
  1087  01FB42  0100               	movlb	0	; () banked
  1088  01FB44  6FEA               	movwf	(___lwmod@divisor+1)& (0+255),b
  1089  01FB46  0E0A               	movlw	10
  1090  01FB48  6FE9               	movwf	___lwmod@divisor& (0+255),b
  1091  01FB4A  EC3C  F0FB         	call	___lwmod	;wreg free
  1092  01FB4E  0ED7               	movlw	low _LED_Number
  1093  01FB50  0100               	movlb	0	; () banked
  1094  01FB52  25E7               	addwf	?___lwmod& (0+255),w,b
  1095  01FB54  6ED9               	movwf	fsr2l,c
  1096  01FB56  0E00               	movlw	high _LED_Number
  1097  01FB58  0100               	movlb	0	; () banked
  1098  01FB5A  21E8               	addwfc	(?___lwmod+1)& (0+255),w,b
  1099  01FB5C  6EDA               	movwf	fsr2h,c
  1100  01FB5E  50DF               	movf	indf2,w,c
  1101  01FB60  0100               	movlb	0	; () banked
  1102  01FB62  6FEC               	movwf	TM1640_Writer_Dates@Date& (0+255),b
  1103  01FB64  0E03               	movlw	3
  1104  01FB66  ECF1  F0F8         	call	_TM1640_Writer_Dates
  1105  01FB6A  C0EE  F0E7         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1106  01FB6E  C0EF  F0E8         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1107  01FB72  0E00               	movlw	0
  1108  01FB74  0100               	movlb	0	; () banked
  1109  01FB76  6FEA               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1110  01FB78  0E0A               	movlw	10
  1111  01FB7A  6FE9               	movwf	___lwdiv@divisor& (0+255),b
  1112  01FB7C  ECE6  F0FB         	call	___lwdiv	;wreg free
  1113  01FB80  C0E7  F0EE         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1114  01FB84  C0E8  F0EF         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1115                           
  1116                           ;TM1640.c: 210: TM1640_Writer_Dates(2,LED_Number[Numbers%10]); Numbers/=10;
  1117  01FB88  C0EE  F0E7         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1118  01FB8C  C0EF  F0E8         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1119  01FB90  0E00               	movlw	0
  1120  01FB92  0100               	movlb	0	; () banked
  1121  01FB94  6FEA               	movwf	(___lwmod@divisor+1)& (0+255),b
  1122  01FB96  0E0A               	movlw	10
  1123  01FB98  6FE9               	movwf	___lwmod@divisor& (0+255),b
  1124  01FB9A  EC3C  F0FB         	call	___lwmod	;wreg free
  1125  01FB9E  0ED7               	movlw	low _LED_Number
  1126  01FBA0  0100               	movlb	0	; () banked
  1127  01FBA2  25E7               	addwf	?___lwmod& (0+255),w,b
  1128  01FBA4  6ED9               	movwf	fsr2l,c
  1129  01FBA6  0E00               	movlw	high _LED_Number
  1130  01FBA8  0100               	movlb	0	; () banked
  1131  01FBAA  21E8               	addwfc	(?___lwmod+1)& (0+255),w,b
  1132  01FBAC  6EDA               	movwf	fsr2h,c
  1133  01FBAE  50DF               	movf	indf2,w,c
  1134  01FBB0  0100               	movlb	0	; () banked
  1135  01FBB2  6FEC               	movwf	TM1640_Writer_Dates@Date& (0+255),b
  1136  01FBB4  0E02               	movlw	2
  1137  01FBB6  ECF1  F0F8         	call	_TM1640_Writer_Dates
  1138  01FBBA  C0EE  F0E7         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1139  01FBBE  C0EF  F0E8         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1140  01FBC2  0E00               	movlw	0
  1141  01FBC4  0100               	movlb	0	; () banked
  1142  01FBC6  6FEA               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1143  01FBC8  0E0A               	movlw	10
  1144  01FBCA  6FE9               	movwf	___lwdiv@divisor& (0+255),b
  1145  01FBCC  ECE6  F0FB         	call	___lwdiv	;wreg free
  1146  01FBD0  C0E7  F0EE         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1147  01FBD4  C0E8  F0EF         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1148                           
  1149                           ;TM1640.c: 211: TM1640_Writer_Dates(1,LED_Number[Numbers%10]); Numbers/=10;
  1150  01FBD8  C0EE  F0E7         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1151  01FBDC  C0EF  F0E8         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1152  01FBE0  0E00               	movlw	0
  1153  01FBE2  0100               	movlb	0	; () banked
  1154  01FBE4  6FEA               	movwf	(___lwmod@divisor+1)& (0+255),b
  1155  01FBE6  0E0A               	movlw	10
  1156  01FBE8  6FE9               	movwf	___lwmod@divisor& (0+255),b
  1157  01FBEA  EC3C  F0FB         	call	___lwmod	;wreg free
  1158  01FBEE  0ED7               	movlw	low _LED_Number
  1159  01FBF0  0100               	movlb	0	; () banked
  1160  01FBF2  25E7               	addwf	?___lwmod& (0+255),w,b
  1161  01FBF4  6ED9               	movwf	fsr2l,c
  1162  01FBF6  0E00               	movlw	high _LED_Number
  1163  01FBF8  0100               	movlb	0	; () banked
  1164  01FBFA  21E8               	addwfc	(?___lwmod+1)& (0+255),w,b
  1165  01FBFC  6EDA               	movwf	fsr2h,c
  1166  01FBFE  50DF               	movf	indf2,w,c
  1167  01FC00  0100               	movlb	0	; () banked
  1168  01FC02  6FEC               	movwf	TM1640_Writer_Dates@Date& (0+255),b
  1169  01FC04  0E01               	movlw	1
  1170  01FC06  ECF1  F0F8         	call	_TM1640_Writer_Dates
  1171  01FC0A  C0EE  F0E7         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1172  01FC0E  C0EF  F0E8         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1173  01FC12  0E00               	movlw	0
  1174  01FC14  0100               	movlb	0	; () banked
  1175  01FC16  6FEA               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1176  01FC18  0E0A               	movlw	10
  1177  01FC1A  6FE9               	movwf	___lwdiv@divisor& (0+255),b
  1178  01FC1C  ECE6  F0FB         	call	___lwdiv	;wreg free
  1179  01FC20  C0E7  F0EE         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1180  01FC24  C0E8  F0EF         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1181                           
  1182                           ;TM1640.c: 212: TM1640_Writer_Dates(0,LED_Number[Numbers%10]);
  1183  01FC28  C0EE  F0E7         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1184  01FC2C  C0EF  F0E8         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1185  01FC30  0E00               	movlw	0
  1186  01FC32  0100               	movlb	0	; () banked
  1187  01FC34  6FEA               	movwf	(___lwmod@divisor+1)& (0+255),b
  1188  01FC36  0E0A               	movlw	10
  1189  01FC38  6FE9               	movwf	___lwmod@divisor& (0+255),b
  1190  01FC3A  EC3C  F0FB         	call	___lwmod	;wreg free
  1191  01FC3E  0ED7               	movlw	low _LED_Number
  1192  01FC40  0100               	movlb	0	; () banked
  1193  01FC42  25E7               	addwf	?___lwmod& (0+255),w,b
  1194  01FC44  6ED9               	movwf	fsr2l,c
  1195  01FC46  0E00               	movlw	high _LED_Number
  1196  01FC48  0100               	movlb	0	; () banked
  1197  01FC4A  21E8               	addwfc	(?___lwmod+1)& (0+255),w,b
  1198  01FC4C  6EDA               	movwf	fsr2h,c
  1199  01FC4E  50DF               	movf	indf2,w,c
  1200  01FC50  0100               	movlb	0	; () banked
  1201  01FC52  6FEC               	movwf	TM1640_Writer_Dates@Date& (0+255),b
  1202  01FC54  0E00               	movlw	0
  1203  01FC56  ECF1  F0F8         	call	_TM1640_Writer_Dates
  1204  01FC5A  0012               	return		;funcret
  1205  01FC5C                     __end_of_TM1640_Show_integer:
  1206                           	opt stack 0
  1207                           tblptru	equ	0xFF8
  1208                           tblptrh	equ	0xFF7
  1209                           tblptrl	equ	0xFF6
  1210                           tablat	equ	0xFF5
  1211                           prodh	equ	0xFF4
  1212                           prodl	equ	0xFF3
  1213                           intcon	equ	0xFF2
  1214                           postinc0	equ	0xFEE
  1215                           wreg	equ	0xFE8
  1216                           postdec1	equ	0xFE5
  1217                           fsr1l	equ	0xFE1
  1218                           indf2	equ	0xFDF
  1219                           fsr2h	equ	0xFDA
  1220                           fsr2l	equ	0xFD9
  1221                           status	equ	0xFD8
  1222                           
  1223 ;; *************** function ___lwmod *****************
  1224 ;; Defined at:
  1225 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;  dividend        2    0[BANK0 ] unsigned int 
  1228 ;;  divisor         2    2[BANK0 ] unsigned int 
  1229 ;; Auto vars:     Size  Location     Type
  1230 ;;  counter         1    4[BANK0 ] unsigned char 
  1231 ;; Return value:  Size  Location     Type
  1232 ;;                  2    0[BANK0 ] unsigned int 
  1233 ;; Registers used:
  1234 ;;		wreg, status,2, status,0
  1235 ;; Tracked objects:
  1236 ;;		On entry : 0/0
  1237 ;;		On exit  : 0/0
  1238 ;;		Unchanged: 0/0
  1239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1240 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1241 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1243 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1244 ;;Total ram usage:        5 bytes
  1245 ;; Hardware stack levels used:    1
  1246 ;; Hardware stack levels required when called:    3
  1247 ;; This function calls:
  1248 ;;		Nothing
  1249 ;; This function is called by:
  1250 ;;		_TM1640_Show_integer
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253                           
  1254                           	psect	text6
  1255  01F678                     __ptext6:
  1256                           	opt stack 0
  1257  01F678                     ___lwmod:
  1258                           	opt stack 25
  1259                           
  1260                           ;incstack = 0
  1261  01F678  0100               	movlb	0	; () banked
  1262  01F67A  51E9               	movf	___lwmod@divisor& (0+255),w,b
  1263  01F67C  0100               	movlb	0	; () banked
  1264  01F67E  11EA               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  1265  01F680  B4D8               	btfsc	status,2,c
  1266  01F682  D02B               	goto	l1170
  1267                           
  1268                           ; BSR set to: 0
  1269  01F684  0E01               	movlw	1
  1270  01F686  0100               	movlb	0	; () banked
  1271  01F688  6FEB               	movwf	___lwmod@counter& (0+255),b
  1272  01F68A  D007               	goto	l3185
  1273  01F68C                     l3183:
  1274                           
  1275                           ; BSR set to: 0
  1276  01F68C  0100               	movlb	0	; () banked
  1277  01F68E  90D8               	bcf	status,0,c
  1278  01F690  37E9               	rlcf	___lwmod@divisor& (0+255),f,b
  1279  01F692  37EA               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1280  01F694  0100               	movlb	0	; () banked
  1281  01F696  2BEB               	incf	___lwmod@counter& (0+255),f,b
  1282  01F698  D000               	goto	l3185
  1283  01F69A                     l3185:
  1284                           
  1285                           ; BSR set to: 0
  1286  01F69A  0100               	movlb	0	; () banked
  1287  01F69C  BFEA               	btfsc	(___lwmod@divisor+1)& (0+255),7,b
  1288  01F69E  D002               	goto	l3187
  1289  01F6A0  D7F5               	goto	l3183
  1290                           
  1291                           ; BSR set to: 0
  1292  01F6A2  D000               	goto	l3187
  1293  01F6A4                     l3187:
  1294                           
  1295                           ; BSR set to: 0
  1296  01F6A4  0100               	movlb	0	; () banked
  1297  01F6A6  51E9               	movf	___lwmod@divisor& (0+255),w,b
  1298  01F6A8  0100               	movlb	0	; () banked
  1299  01F6AA  5DE7               	subwf	___lwmod@dividend& (0+255),w,b
  1300  01F6AC  0100               	movlb	0	; () banked
  1301  01F6AE  51EA               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1302  01F6B0  0100               	movlb	0	; () banked
  1303  01F6B2  59E8               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1304  01F6B4  A0D8               	btfss	status,0,c
  1305  01F6B6  D009               	goto	l3191
  1306                           
  1307                           ; BSR set to: 0
  1308  01F6B8  0100               	movlb	0	; () banked
  1309  01F6BA  51E9               	movf	___lwmod@divisor& (0+255),w,b
  1310  01F6BC  0100               	movlb	0	; () banked
  1311  01F6BE  5FE7               	subwf	___lwmod@dividend& (0+255),f,b
  1312  01F6C0  0100               	movlb	0	; () banked
  1313  01F6C2  51EA               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1314  01F6C4  0100               	movlb	0	; () banked
  1315  01F6C6  5BE8               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1316  01F6C8  D000               	goto	l3191
  1317  01F6CA                     l3191:
  1318                           
  1319                           ; BSR set to: 0
  1320  01F6CA  0100               	movlb	0	; () banked
  1321  01F6CC  90D8               	bcf	status,0,c
  1322  01F6CE  33EA               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1323  01F6D0  33E9               	rrcf	___lwmod@divisor& (0+255),f,b
  1324                           
  1325                           ; BSR set to: 0
  1326  01F6D2  0100               	movlb	0	; () banked
  1327  01F6D4  2FEB               	decfsz	___lwmod@counter& (0+255),f,b
  1328  01F6D6  D7E6               	goto	l3187
  1329  01F6D8  D000               	goto	l1170
  1330  01F6DA                     l1170:
  1331                           
  1332                           ; BSR set to: 0
  1333  01F6DA  C0E7  F0E7         	movff	___lwmod@dividend,?___lwmod
  1334  01F6DE  C0E8  F0E8         	movff	___lwmod@dividend+1,?___lwmod+1
  1335                           
  1336                           ; BSR set to: 0
  1337  01F6E2  0012               	return		;funcret
  1338  01F6E4                     __end_of___lwmod:
  1339                           	opt stack 0
  1340                           tblptru	equ	0xFF8
  1341                           tblptrh	equ	0xFF7
  1342                           tblptrl	equ	0xFF6
  1343                           tablat	equ	0xFF5
  1344                           prodh	equ	0xFF4
  1345                           prodl	equ	0xFF3
  1346                           intcon	equ	0xFF2
  1347                           postinc0	equ	0xFEE
  1348                           wreg	equ	0xFE8
  1349                           postdec1	equ	0xFE5
  1350                           fsr1l	equ	0xFE1
  1351                           indf2	equ	0xFDF
  1352                           fsr2h	equ	0xFDA
  1353                           fsr2l	equ	0xFD9
  1354                           status	equ	0xFD8
  1355                           
  1356 ;; *************** function ___lwdiv *****************
  1357 ;; Defined at:
  1358 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;  dividend        2    0[BANK0 ] unsigned int 
  1361 ;;  divisor         2    2[BANK0 ] unsigned int 
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;  quotient        2    5[BANK0 ] unsigned int 
  1364 ;;  counter         1    4[BANK0 ] unsigned char 
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  2    0[BANK0 ] unsigned int 
  1367 ;; Registers used:
  1368 ;;		wreg, status,2, status,0
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1374 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1375 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1377 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1378 ;;Total ram usage:        7 bytes
  1379 ;; Hardware stack levels used:    1
  1380 ;; Hardware stack levels required when called:    3
  1381 ;; This function calls:
  1382 ;;		Nothing
  1383 ;; This function is called by:
  1384 ;;		_TM1640_Show_integer
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388                           	psect	text7
  1389  01F7CC                     __ptext7:
  1390                           	opt stack 0
  1391  01F7CC                     ___lwdiv:
  1392                           	opt stack 25
  1393                           
  1394                           ; BSR set to: 0
  1395                           ;incstack = 0
  1396  01F7CC  0E00               	movlw	0
  1397  01F7CE  0100               	movlb	0	; () banked
  1398  01F7D0  6FED               	movwf	(___lwdiv@quotient+1)& (0+255),b
  1399  01F7D2  0E00               	movlw	0
  1400  01F7D4  6FEC               	movwf	___lwdiv@quotient& (0+255),b
  1401                           
  1402                           ; BSR set to: 0
  1403  01F7D6  0100               	movlb	0	; () banked
  1404  01F7D8  51E9               	movf	___lwdiv@divisor& (0+255),w,b
  1405  01F7DA  0100               	movlb	0	; () banked
  1406  01F7DC  11EA               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  1407  01F7DE  B4D8               	btfsc	status,2,c
  1408  01F7E0  D031               	goto	l1160
  1409                           
  1410                           ; BSR set to: 0
  1411  01F7E2  0E01               	movlw	1
  1412  01F7E4  0100               	movlb	0	; () banked
  1413  01F7E6  6FEB               	movwf	___lwdiv@counter& (0+255),b
  1414  01F7E8  D007               	goto	l3165
  1415  01F7EA                     l3163:
  1416                           
  1417                           ; BSR set to: 0
  1418  01F7EA  0100               	movlb	0	; () banked
  1419  01F7EC  90D8               	bcf	status,0,c
  1420  01F7EE  37E9               	rlcf	___lwdiv@divisor& (0+255),f,b
  1421  01F7F0  37EA               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  1422  01F7F2  0100               	movlb	0	; () banked
  1423  01F7F4  2BEB               	incf	___lwdiv@counter& (0+255),f,b
  1424  01F7F6  D000               	goto	l3165
  1425  01F7F8                     l3165:
  1426                           
  1427                           ; BSR set to: 0
  1428  01F7F8  0100               	movlb	0	; () banked
  1429  01F7FA  BFEA               	btfsc	(___lwdiv@divisor+1)& (0+255),7,b
  1430  01F7FC  D002               	goto	l3167
  1431  01F7FE  D7F5               	goto	l3163
  1432                           
  1433                           ; BSR set to: 0
  1434  01F800  D000               	goto	l3167
  1435  01F802                     l3167:
  1436                           
  1437                           ; BSR set to: 0
  1438  01F802  0100               	movlb	0	; () banked
  1439  01F804  90D8               	bcf	status,0,c
  1440  01F806  37EC               	rlcf	___lwdiv@quotient& (0+255),f,b
  1441  01F808  37ED               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  1442                           
  1443                           ; BSR set to: 0
  1444  01F80A  0100               	movlb	0	; () banked
  1445  01F80C  51E9               	movf	___lwdiv@divisor& (0+255),w,b
  1446  01F80E  0100               	movlb	0	; () banked
  1447  01F810  5DE7               	subwf	___lwdiv@dividend& (0+255),w,b
  1448  01F812  0100               	movlb	0	; () banked
  1449  01F814  51EA               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  1450  01F816  0100               	movlb	0	; () banked
  1451  01F818  59E8               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  1452  01F81A  A0D8               	btfss	status,0,c
  1453  01F81C  D00B               	goto	l3175
  1454                           
  1455                           ; BSR set to: 0
  1456  01F81E  0100               	movlb	0	; () banked
  1457  01F820  51E9               	movf	___lwdiv@divisor& (0+255),w,b
  1458  01F822  0100               	movlb	0	; () banked
  1459  01F824  5FE7               	subwf	___lwdiv@dividend& (0+255),f,b
  1460  01F826  0100               	movlb	0	; () banked
  1461  01F828  51EA               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  1462  01F82A  0100               	movlb	0	; () banked
  1463  01F82C  5BE8               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  1464                           
  1465                           ; BSR set to: 0
  1466  01F82E  0100               	movlb	0	; () banked
  1467  01F830  81EC               	bsf	___lwdiv@quotient& (0+255),0,b
  1468  01F832  D000               	goto	l3175
  1469  01F834                     l3175:
  1470                           
  1471                           ; BSR set to: 0
  1472  01F834  0100               	movlb	0	; () banked
  1473  01F836  90D8               	bcf	status,0,c
  1474  01F838  33EA               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  1475  01F83A  33E9               	rrcf	___lwdiv@divisor& (0+255),f,b
  1476                           
  1477                           ; BSR set to: 0
  1478  01F83C  0100               	movlb	0	; () banked
  1479  01F83E  2FEB               	decfsz	___lwdiv@counter& (0+255),f,b
  1480  01F840  D7E0               	goto	l3167
  1481  01F842  D000               	goto	l1160
  1482  01F844                     l1160:
  1483                           
  1484                           ; BSR set to: 0
  1485  01F844  C0EC  F0E7         	movff	___lwdiv@quotient,?___lwdiv
  1486  01F848  C0ED  F0E8         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1487                           
  1488                           ; BSR set to: 0
  1489  01F84C  0012               	return		;funcret
  1490  01F84E                     __end_of___lwdiv:
  1491                           	opt stack 0
  1492                           tblptru	equ	0xFF8
  1493                           tblptrh	equ	0xFF7
  1494                           tblptrl	equ	0xFF6
  1495                           tablat	equ	0xFF5
  1496                           prodh	equ	0xFF4
  1497                           prodl	equ	0xFF3
  1498                           intcon	equ	0xFF2
  1499                           postinc0	equ	0xFEE
  1500                           wreg	equ	0xFE8
  1501                           postdec1	equ	0xFE5
  1502                           fsr1l	equ	0xFE1
  1503                           indf2	equ	0xFDF
  1504                           fsr2h	equ	0xFDA
  1505                           fsr2l	equ	0xFD9
  1506                           status	equ	0xFD8
  1507                           
  1508 ;; *************** function _TM1640_Writer_Dates *****************
  1509 ;; Defined at:
  1510 ;;		line 99 in file "_01_USER/TM1640.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;  Addr            1    wreg     unsigned char 
  1513 ;;  Date            1    5[BANK0 ] unsigned char 
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;  Addr            1    6[BANK0 ] unsigned char 
  1516 ;; Return value:  Size  Location     Type
  1517 ;;		None               void
  1518 ;; Registers used:
  1519 ;;		wreg, status,2, status,0, cstack
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1525 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1526 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1528 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1529 ;;Total ram usage:        2 bytes
  1530 ;; Hardware stack levels used:    1
  1531 ;; Hardware stack levels required when called:    5
  1532 ;; This function calls:
  1533 ;;		_TM1640_Start
  1534 ;;		_TM1640_Stop
  1535 ;;		_TM1640_Writer_Byte
  1536 ;; This function is called by:
  1537 ;;		_TM1640_Show_integer
  1538 ;;		_ShowResult
  1539 ;;		_TM1640_Show_Numbers
  1540 ;;		_TM1640_Show_Decimal
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           	psect	text8
  1545  01F1E2                     __ptext8:
  1546                           	opt stack 0
  1547  01F1E2                     _TM1640_Writer_Dates:
  1548                           	opt stack 24
  1549                           
  1550                           ; BSR set to: 0
  1551                           ;incstack = 0
  1552                           ;TM1640_Writer_Dates@Addr stored from wreg
  1553  01F1E2  0100               	movlb	0	; () banked
  1554  01F1E4  6FED               	movwf	TM1640_Writer_Dates@Addr& (0+255),b
  1555                           
  1556                           ; BSR set to: 0
  1557                           ;TM1640.c: 101: if((Addr >= 0) && (Addr <= 15))
  1558  01F1E6  0E10               	movlw	16
  1559  01F1E8  0100               	movlb	0	; () banked
  1560  01F1EA  61ED               	cpfslt	TM1640_Writer_Dates@Addr& (0+255),b
  1561  01F1EC  0012               	return	
  1562                           
  1563                           ; BSR set to: 0
  1564                           ;TM1640.c: 102: {
  1565                           ;TM1640.c: 103: TM1640_Start();
  1566  01F1EE  EC95  F0F8         	call	_TM1640_Start	;wreg free
  1567                           
  1568                           ;TM1640.c: 104: TM1640_Writer_Byte(0xC0 + Addr);
  1569  01F1F2  0100               	movlb	0	; () banked
  1570  01F1F4  51ED               	movf	TM1640_Writer_Dates@Addr& (0+255),w,b
  1571  01F1F6  0FC0               	addlw	192
  1572  01F1F8  EC1C  F0FA         	call	_TM1640_Writer_Byte
  1573                           
  1574                           ;TM1640.c: 105: TM1640_Writer_Byte(Date);
  1575  01F1FC  0100               	movlb	0	; () banked
  1576  01F1FE  51EC               	movf	TM1640_Writer_Dates@Date& (0+255),w,b
  1577  01F200  EC1C  F0FA         	call	_TM1640_Writer_Byte
  1578                           
  1579                           ;TM1640.c: 106: TM1640_Stop();
  1580  01F204  ECA7  F0F8         	call	_TM1640_Stop	;wreg free
  1581  01F208  0012               	return	
  1582  01F20A  0012               	return		;funcret
  1583  01F20C                     __end_of_TM1640_Writer_Dates:
  1584                           	opt stack 0
  1585                           tblptru	equ	0xFF8
  1586                           tblptrh	equ	0xFF7
  1587                           tblptrl	equ	0xFF6
  1588                           tablat	equ	0xFF5
  1589                           prodh	equ	0xFF4
  1590                           prodl	equ	0xFF3
  1591                           intcon	equ	0xFF2
  1592                           postinc0	equ	0xFEE
  1593                           wreg	equ	0xFE8
  1594                           postdec1	equ	0xFE5
  1595                           fsr1l	equ	0xFE1
  1596                           indf2	equ	0xFDF
  1597                           fsr2h	equ	0xFDA
  1598                           fsr2l	equ	0xFD9
  1599                           status	equ	0xFD8
  1600                           
  1601 ;; *************** function _LED_Control *****************
  1602 ;; Defined at:
  1603 ;;		line 58 in file "_01_USER/GPIO.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;  _LED_num        1    wreg     unsigned char 
  1606 ;;  _switch         1    0[BANK0 ] unsigned char 
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;  _LED_num        1    1[BANK0 ] unsigned char 
  1609 ;; Return value:  Size  Location     Type
  1610 ;;		None               void
  1611 ;; Registers used:
  1612 ;;		wreg, status,2, status,0
  1613 ;; Tracked objects:
  1614 ;;		On entry : 0/0
  1615 ;;		On exit  : 0/0
  1616 ;;		Unchanged: 0/0
  1617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1618 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1619 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1621 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1622 ;;Total ram usage:        2 bytes
  1623 ;; Hardware stack levels used:    1
  1624 ;; Hardware stack levels required when called:    3
  1625 ;; This function calls:
  1626 ;;		Nothing
  1627 ;; This function is called by:
  1628 ;;		_ShowResult
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           	psect	text9
  1633  01F5BC                     __ptext9:
  1634                           	opt stack 0
  1635  01F5BC                     _LED_Control:
  1636                           	opt stack 26
  1637                           
  1638                           ;incstack = 0
  1639                           ;LED_Control@_LED_num stored from wreg
  1640  01F5BC  0100               	movlb	0	; () banked
  1641  01F5BE  6FE8               	movwf	LED_Control@_LED_num& (0+255),b
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;GPIO.c: 62: if(_LED_num == 1)
  1645  01F5C0  0100               	movlb	0	; () banked
  1646  01F5C2  05E8               	decf	LED_Control@_LED_num& (0+255),w,b
  1647  01F5C4  A4D8               	btfss	status,2,c
  1648  01F5C6  D009               	goto	l3333
  1649                           
  1650                           ; BSR set to: 0
  1651                           ;GPIO.c: 63: if(_switch) LED_BUS |= 0x01;
  1652  01F5C8  0100               	movlb	0	; () banked
  1653  01F5CA  51E7               	movf	LED_Control@_switch& (0+255),w,b
  1654  01F5CC  0100               	movlb	0	; () banked
  1655  01F5CE  B4D8               	btfsc	status,2,c
  1656  01F5D0  D002               	goto	l3331
  1657                           
  1658                           ; BSR set to: 0
  1659  01F5D2  800C               	bsf	_LED_BUS,0,c
  1660  01F5D4  D002               	goto	l3333
  1661  01F5D6                     l3331:
  1662                           
  1663                           ; BSR set to: 0
  1664                           ;GPIO.c: 64: else LED_BUS &= 0xFE;
  1665  01F5D6  900C               	bcf	_LED_BUS,0,c
  1666                           
  1667                           ; BSR set to: 0
  1668  01F5D8  D000               	goto	l3333
  1669  01F5DA                     l3333:
  1670                           
  1671                           ; BSR set to: 0
  1672                           ;GPIO.c: 66: if(_LED_num == 2)
  1673  01F5DA  0E02               	movlw	2
  1674  01F5DC  0100               	movlb	0	; () banked
  1675  01F5DE  19E8               	xorwf	LED_Control@_LED_num& (0+255),w,b
  1676  01F5E0  A4D8               	btfss	status,2,c
  1677  01F5E2  D009               	goto	l3341
  1678                           
  1679                           ; BSR set to: 0
  1680                           ;GPIO.c: 67: if(_switch) LED_BUS |= 0x02;
  1681  01F5E4  0100               	movlb	0	; () banked
  1682  01F5E6  51E7               	movf	LED_Control@_switch& (0+255),w,b
  1683  01F5E8  0100               	movlb	0	; () banked
  1684  01F5EA  B4D8               	btfsc	status,2,c
  1685  01F5EC  D002               	goto	l3339
  1686                           
  1687                           ; BSR set to: 0
  1688  01F5EE  820C               	bsf	_LED_BUS,1,c
  1689  01F5F0  D002               	goto	l3341
  1690  01F5F2                     l3339:
  1691                           
  1692                           ; BSR set to: 0
  1693                           ;GPIO.c: 68: else LED_BUS &= 0xFD;
  1694  01F5F2  920C               	bcf	_LED_BUS,1,c
  1695                           
  1696                           ; BSR set to: 0
  1697  01F5F4  D000               	goto	l3341
  1698  01F5F6                     l3341:
  1699                           
  1700                           ; BSR set to: 0
  1701                           ;GPIO.c: 70: if(_LED_num == 3)
  1702  01F5F6  0E03               	movlw	3
  1703  01F5F8  0100               	movlb	0	; () banked
  1704  01F5FA  19E8               	xorwf	LED_Control@_LED_num& (0+255),w,b
  1705  01F5FC  A4D8               	btfss	status,2,c
  1706  01F5FE  0012               	return	
  1707                           
  1708                           ; BSR set to: 0
  1709                           ;GPIO.c: 71: if(_switch) LED_BUS |= 0x04;
  1710  01F600  0100               	movlb	0	; () banked
  1711  01F602  51E7               	movf	LED_Control@_switch& (0+255),w,b
  1712  01F604  0100               	movlb	0	; () banked
  1713  01F606  B4D8               	btfsc	status,2,c
  1714  01F608  D002               	goto	l3347
  1715                           
  1716                           ; BSR set to: 0
  1717  01F60A  840C               	bsf	_LED_BUS,2,c
  1718  01F60C  0012               	return	
  1719  01F60E                     l3347:
  1720                           
  1721                           ; BSR set to: 0
  1722                           ;GPIO.c: 72: else LED_BUS &= 0xFB;
  1723  01F60E  940C               	bcf	_LED_BUS,2,c
  1724                           
  1725                           ; BSR set to: 0
  1726  01F610  0012               	return	
  1727                           
  1728                           ; BSR set to: 0
  1729                           
  1730                           ; BSR set to: 0
  1731  01F612  0012               	return		;funcret
  1732  01F614                     __end_of_LED_Control:
  1733                           	opt stack 0
  1734                           tblptru	equ	0xFF8
  1735                           tblptrh	equ	0xFF7
  1736                           tblptrl	equ	0xFF6
  1737                           tablat	equ	0xFF5
  1738                           prodh	equ	0xFF4
  1739                           prodl	equ	0xFF3
  1740                           intcon	equ	0xFF2
  1741                           postinc0	equ	0xFEE
  1742                           wreg	equ	0xFE8
  1743                           postdec1	equ	0xFE5
  1744                           fsr1l	equ	0xFE1
  1745                           indf2	equ	0xFDF
  1746                           fsr2h	equ	0xFDA
  1747                           fsr2l	equ	0xFD9
  1748                           status	equ	0xFD8
  1749                           
  1750 ;; *************** function _SCR_Init *****************
  1751 ;; Defined at:
  1752 ;;		line 78 in file "_01_USER/SCR.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;		None
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;		None
  1757 ;; Return value:  Size  Location     Type
  1758 ;;		None               void
  1759 ;; Registers used:
  1760 ;;		None
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1770 ;;Total ram usage:        0 bytes
  1771 ;; Hardware stack levels used:    1
  1772 ;; Hardware stack levels required when called:    3
  1773 ;; This function calls:
  1774 ;;		Nothing
  1775 ;; This function is called by:
  1776 ;;		_main
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           	psect	text10
  1781  01F06E                     __ptext10:
  1782                           	opt stack 0
  1783  01F06E                     _SCR_Init:
  1784                           	opt stack 27
  1785                           
  1786                           ;SCR.c: 81: RB1 = 0;
  1787                           
  1788                           ; BSR set to: 0
  1789                           ;incstack = 0
  1790  01F06E  9281               	bcf	3969,1,c	;volatile
  1791                           
  1792                           ;SCR.c: 82: RB0 = 0;
  1793  01F070  9081               	bcf	3969,0,c	;volatile
  1794                           
  1795                           ;SCR.c: 85: TRISB1 = 0;
  1796  01F072  9293               	bcf	3987,1,c	;volatile
  1797                           
  1798                           ;SCR.c: 86: TRISB0 = 0;
  1799  01F074  9093               	bcf	3987,0,c	;volatile
  1800                           
  1801                           ;SCR.c: 89: TRISB2 = 1;
  1802  01F076  8493               	bsf	3987,2,c	;volatile
  1803  01F078  0012               	return		;funcret
  1804  01F07A                     __end_of_SCR_Init:
  1805                           	opt stack 0
  1806                           tblptru	equ	0xFF8
  1807                           tblptrh	equ	0xFF7
  1808                           tblptrl	equ	0xFF6
  1809                           tablat	equ	0xFF5
  1810                           prodh	equ	0xFF4
  1811                           prodl	equ	0xFF3
  1812                           intcon	equ	0xFF2
  1813                           postinc0	equ	0xFEE
  1814                           wreg	equ	0xFE8
  1815                           postdec1	equ	0xFE5
  1816                           fsr1l	equ	0xFE1
  1817                           indf2	equ	0xFDF
  1818                           fsr2h	equ	0xFDA
  1819                           fsr2l	equ	0xFD9
  1820                           status	equ	0xFD8
  1821                           
  1822 ;; *************** function _Relay_Init *****************
  1823 ;; Defined at:
  1824 ;;		line 39 in file "_01_USER/Relay.c"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;		None
  1827 ;; Auto vars:     Size  Location     Type
  1828 ;;		None
  1829 ;; Return value:  Size  Location     Type
  1830 ;;		None               void
  1831 ;; Registers used:
  1832 ;;		None
  1833 ;; Tracked objects:
  1834 ;;		On entry : 0/0
  1835 ;;		On exit  : 0/0
  1836 ;;		Unchanged: 0/0
  1837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1842 ;;Total ram usage:        0 bytes
  1843 ;; Hardware stack levels used:    1
  1844 ;; Hardware stack levels required when called:    3
  1845 ;; This function calls:
  1846 ;;		Nothing
  1847 ;; This function is called by:
  1848 ;;		_main
  1849 ;; This function uses a non-reentrant model
  1850 ;;
  1851                           
  1852                           	psect	text11
  1853  01F07A                     __ptext11:
  1854                           	opt stack 0
  1855  01F07A                     _Relay_Init:
  1856                           	opt stack 27
  1857                           
  1858                           ;Relay.c: 42: TRISD0 = 0;
  1859                           
  1860                           ;incstack = 0
  1861  01F07A  9095               	bcf	3989,0,c	;volatile
  1862                           
  1863                           ;Relay.c: 43: TRISD1 = 0;
  1864  01F07C  9295               	bcf	3989,1,c	;volatile
  1865                           
  1866                           ;Relay.c: 44: TRISD2 = 0;
  1867  01F07E  9495               	bcf	3989,2,c	;volatile
  1868                           
  1869                           ;Relay.c: 45: TRISD3 = 0;
  1870  01F080  9695               	bcf	3989,3,c	;volatile
  1871                           
  1872                           ;Relay.c: 46: TRISD4 = 0;
  1873  01F082  9895               	bcf	3989,4,c	;volatile
  1874                           
  1875                           ;Relay.c: 47: TRISD7 = 0;
  1876  01F084  9E95               	bcf	3989,7,c	;volatile
  1877  01F086  0012               	return		;funcret
  1878  01F088                     __end_of_Relay_Init:
  1879                           	opt stack 0
  1880                           tblptru	equ	0xFF8
  1881                           tblptrh	equ	0xFF7
  1882                           tblptrl	equ	0xFF6
  1883                           tablat	equ	0xFF5
  1884                           prodh	equ	0xFF4
  1885                           prodl	equ	0xFF3
  1886                           intcon	equ	0xFF2
  1887                           postinc0	equ	0xFEE
  1888                           wreg	equ	0xFE8
  1889                           postdec1	equ	0xFE5
  1890                           fsr1l	equ	0xFE1
  1891                           indf2	equ	0xFDF
  1892                           fsr2h	equ	0xFDA
  1893                           fsr2l	equ	0xFD9
  1894                           status	equ	0xFD8
  1895                           
  1896 ;; *************** function _RS485_Init *****************
  1897 ;; Defined at:
  1898 ;;		line 41 in file "_01_USER/My_USART.c"
  1899 ;; Parameters:    Size  Location     Type
  1900 ;;		None
  1901 ;; Auto vars:     Size  Location     Type
  1902 ;;		None
  1903 ;; Return value:  Size  Location     Type
  1904 ;;		None               void
  1905 ;; Registers used:
  1906 ;;		wreg, status,2, cstack
  1907 ;; Tracked objects:
  1908 ;;		On entry : 0/0
  1909 ;;		On exit  : 0/0
  1910 ;;		Unchanged: 0/0
  1911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1916 ;;Total ram usage:        0 bytes
  1917 ;; Hardware stack levels used:    1
  1918 ;; Hardware stack levels required when called:    4
  1919 ;; This function calls:
  1920 ;;		_Open1USART
  1921 ;; This function is called by:
  1922 ;;		_main
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           
  1926                           	psect	text12
  1927  01F0AE                     __ptext12:
  1928                           	opt stack 0
  1929  01F0AE                     _RS485_Init:
  1930                           	opt stack 26
  1931                           
  1932                           ;My_USART.c: 43: Open1USART( 0b01111111 &
  1933                           ;My_USART.c: 44: 0b11111111 &
  1934                           ;My_USART.c: 45: 0b11111110 &
  1935                           ;My_USART.c: 46: 0b11111101 &
  1936                           ;My_USART.c: 47: 0b11111111 &
  1937                           ;My_USART.c: 48: 0b11101111
  1938                           ;My_USART.c: 49: ,
  1939                           ;My_USART.c: 50: 12
  1940                           ;My_USART.c: 51: );
  1941                           
  1942                           ;incstack = 0
  1943  01F0AE  0E00               	movlw	0
  1944  01F0B0  0100               	movlb	0	; () banked
  1945  01F0B2  6FE8               	movwf	(Open1USART@spbrg+1)& (0+255),b
  1946  01F0B4  0E0C               	movlw	12
  1947  01F0B6  6FE7               	movwf	Open1USART@spbrg& (0+255),b
  1948  01F0B8  0E6C               	movlw	108
  1949  01F0BA  ECAA  F0FB         	call	_Open1USART
  1950                           
  1951                           ;My_USART.c: 53: TRISC7 = 1;
  1952  01F0BE  8E94               	bsf	3988,7,c	;volatile
  1953                           
  1954                           ;My_USART.c: 54: TRISC6 = 0;
  1955  01F0C0  9C94               	bcf	3988,6,c	;volatile
  1956                           
  1957                           ;My_USART.c: 55: TRISC0 = 0;
  1958  01F0C2  9094               	bcf	3988,0,c	;volatile
  1959                           
  1960                           ;My_USART.c: 56: RC0 = 1;
  1961  01F0C4  8082               	bsf	3970,0,c	;volatile
  1962  01F0C6  0012               	return		;funcret
  1963  01F0C8                     __end_of_RS485_Init:
  1964                           	opt stack 0
  1965                           tblptru	equ	0xFF8
  1966                           tblptrh	equ	0xFF7
  1967                           tblptrl	equ	0xFF6
  1968                           tablat	equ	0xFF5
  1969                           prodh	equ	0xFF4
  1970                           prodl	equ	0xFF3
  1971                           intcon	equ	0xFF2
  1972                           postinc0	equ	0xFEE
  1973                           wreg	equ	0xFE8
  1974                           postdec1	equ	0xFE5
  1975                           fsr1l	equ	0xFE1
  1976                           indf2	equ	0xFDF
  1977                           fsr2h	equ	0xFDA
  1978                           fsr2l	equ	0xFD9
  1979                           status	equ	0xFD8
  1980                           
  1981 ;; *************** function _Open1USART *****************
  1982 ;; Defined at:
  1983 ;;		line 124 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1open.c"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;  config          1    wreg     unsigned char 
  1986 ;;  spbrg           2    0[BANK0 ] unsigned int 
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;  config          1    2[BANK0 ] unsigned char 
  1989 ;; Return value:  Size  Location     Type
  1990 ;;		None               void
  1991 ;; Registers used:
  1992 ;;		wreg, status,2
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1998 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1999 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2001 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2002 ;;Total ram usage:        3 bytes
  2003 ;; Hardware stack levels used:    1
  2004 ;; Hardware stack levels required when called:    3
  2005 ;; This function calls:
  2006 ;;		Nothing
  2007 ;; This function is called by:
  2008 ;;		_RS485_Init
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012                           	psect	text13
  2013  01F754                     __ptext13:
  2014                           	opt stack 0
  2015  01F754                     _Open1USART:
  2016                           	opt stack 26
  2017                           
  2018                           ;incstack = 0
  2019                           ;Open1USART@config stored from wreg
  2020  01F754  0100               	movlb	0	; () banked
  2021  01F756  6FE9               	movwf	Open1USART@config& (0+255),b
  2022                           
  2023                           ; BSR set to: 0
  2024  01F758  0E00               	movlw	0
  2025  01F75A  6EAC               	movwf	4012,c	;volatile
  2026  01F75C  0E00               	movlw	0
  2027  01F75E  6EAB               	movwf	4011,c	;volatile
  2028                           
  2029                           ; BSR set to: 0
  2030  01F760  0100               	movlb	0	; () banked
  2031  01F762  A1E9               	btfss	Open1USART@config& (0+255),0,b
  2032  01F764  D002               	goto	l3265
  2033                           
  2034                           ; BSR set to: 0
  2035  01F766  88AC               	bsf	4012,4,c	;volatile
  2036  01F768  D000               	goto	l3265
  2037  01F76A                     l3265:
  2038                           
  2039                           ; BSR set to: 0
  2040  01F76A  0100               	movlb	0	; () banked
  2041  01F76C  A3E9               	btfss	Open1USART@config& (0+255),1,b
  2042  01F76E  D003               	goto	l3269
  2043                           
  2044                           ; BSR set to: 0
  2045  01F770  8CAC               	bsf	4012,6,c	;volatile
  2046  01F772  8CAB               	bsf	4011,6,c	;volatile
  2047  01F774  D000               	goto	l3269
  2048  01F776                     l3269:
  2049                           
  2050                           ; BSR set to: 0
  2051  01F776  0100               	movlb	0	; () banked
  2052  01F778  A5E9               	btfss	Open1USART@config& (0+255),2,b
  2053  01F77A  D002               	goto	l3273
  2054                           
  2055                           ; BSR set to: 0
  2056  01F77C  8EAC               	bsf	4012,7,c	;volatile
  2057  01F77E  D000               	goto	l3273
  2058  01F780                     l3273:
  2059                           
  2060                           ; BSR set to: 0
  2061  01F780  0100               	movlb	0	; () banked
  2062  01F782  A7E9               	btfss	Open1USART@config& (0+255),3,b
  2063  01F784  D002               	goto	l631
  2064                           
  2065                           ; BSR set to: 0
  2066  01F786  88AB               	bsf	4011,4,c	;volatile
  2067  01F788  D002               	goto	l3277
  2068  01F78A                     l631:
  2069                           
  2070                           ; BSR set to: 0
  2071  01F78A  8AAB               	bsf	4011,5,c	;volatile
  2072  01F78C  D000               	goto	l3277
  2073  01F78E                     l3277:
  2074                           
  2075                           ; BSR set to: 0
  2076  01F78E  0100               	movlb	0	; () banked
  2077  01F790  A9E9               	btfss	Open1USART@config& (0+255),4,b
  2078  01F792  D002               	goto	l3281
  2079                           
  2080                           ; BSR set to: 0
  2081  01F794  84AC               	bsf	4012,2,c	;volatile
  2082  01F796  D000               	goto	l3281
  2083  01F798                     l3281:
  2084                           
  2085                           ; BSR set to: 0
  2086  01F798  0100               	movlb	0	; () banked
  2087  01F79A  ABE9               	btfss	Open1USART@config& (0+255),5,b
  2088  01F79C  D002               	goto	l3285
  2089                           
  2090                           ; BSR set to: 0
  2091  01F79E  86AB               	bsf	4011,3,c	;volatile
  2092  01F7A0  D000               	goto	l3285
  2093  01F7A2                     l3285:
  2094                           
  2095                           ; BSR set to: 0
  2096  01F7A2  0100               	movlb	0	; () banked
  2097  01F7A4  ADE9               	btfss	Open1USART@config& (0+255),6,b
  2098  01F7A6  D002               	goto	l635
  2099                           
  2100                           ; BSR set to: 0
  2101  01F7A8  8A9D               	bsf	3997,5,c	;volatile
  2102  01F7AA  D002               	goto	l3289
  2103  01F7AC                     l635:
  2104                           
  2105                           ; BSR set to: 0
  2106  01F7AC  9A9D               	bcf	3997,5,c	;volatile
  2107  01F7AE  D000               	goto	l3289
  2108  01F7B0                     l3289:
  2109                           
  2110                           ; BSR set to: 0
  2111  01F7B0  0100               	movlb	0	; () banked
  2112  01F7B2  AFE9               	btfss	Open1USART@config& (0+255),7,b
  2113  01F7B4  D002               	goto	l637
  2114                           
  2115                           ; BSR set to: 0
  2116  01F7B6  889D               	bsf	3997,4,c	;volatile
  2117  01F7B8  D001               	goto	l638
  2118  01F7BA                     l637:
  2119                           
  2120                           ; BSR set to: 0
  2121  01F7BA  989D               	bcf	3997,4,c	;volatile
  2122  01F7BC                     l638:
  2123                           
  2124                           ; BSR set to: 0
  2125  01F7BC  C0E7  FFAF         	movff	Open1USART@spbrg,4015	;volatile
  2126                           
  2127                           ; BSR set to: 0
  2128  01F7C0  0100               	movlb	0	; () banked
  2129  01F7C2  51E8               	movf	(Open1USART@spbrg+1)& (0+255),w,b
  2130  01F7C4  6ED4               	movwf	4052,c	;volatile
  2131                           
  2132                           ; BSR set to: 0
  2133  01F7C6  8AAC               	bsf	4012,5,c	;volatile
  2134                           
  2135                           ; BSR set to: 0
  2136  01F7C8  8EAB               	bsf	4011,7,c	;volatile
  2137                           
  2138                           ; BSR set to: 0
  2139  01F7CA  0012               	return		;funcret
  2140  01F7CC                     __end_of_Open1USART:
  2141                           	opt stack 0
  2142                           tblptru	equ	0xFF8
  2143                           tblptrh	equ	0xFF7
  2144                           tblptrl	equ	0xFF6
  2145                           tablat	equ	0xFF5
  2146                           prodh	equ	0xFF4
  2147                           prodl	equ	0xFF3
  2148                           intcon	equ	0xFF2
  2149                           postinc0	equ	0xFEE
  2150                           wreg	equ	0xFE8
  2151                           postdec1	equ	0xFE5
  2152                           fsr1l	equ	0xFE1
  2153                           indf2	equ	0xFDF
  2154                           fsr2h	equ	0xFDA
  2155                           fsr2l	equ	0xFD9
  2156                           status	equ	0xFD8
  2157                           
  2158 ;; *************** function _Manage_Incident *****************
  2159 ;; Defined at:
  2160 ;;		line 71 in file "_01_USER/Run.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;		None
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;  i               2    9[BANK0 ] unsigned int 
  2165 ;; Return value:  Size  Location     Type
  2166 ;;		None               void
  2167 ;; Registers used:
  2168 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/0
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2175 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2176 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2177 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2178 ;;Total ram usage:        3 bytes
  2179 ;; Hardware stack levels used:    1
  2180 ;; Hardware stack levels required when called:    7
  2181 ;; This function calls:
  2182 ;;		_RS485_SendDate
  2183 ;;		_SCR_Demagnet
  2184 ;;		_SCR_Magnet
  2185 ;; This function is called by:
  2186 ;;		_main
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           	psect	text14
  2191  01F8E0                     __ptext14:
  2192                           	opt stack 0
  2193  01F8E0                     _Manage_Incident:
  2194                           	opt stack 23
  2195                           
  2196                           ;Run.c: 73: unsigned int i;
  2197                           ;Run.c: 76: if ( gs_Switch.RS485_Reply )
  2198                           
  2199                           ; BSR set to: 0
  2200                           ;incstack = 0
  2201  01F8E0  0100               	movlb	0	; () banked
  2202  01F8E2  51CA               	movf	_gs_Switch& (0+255),w,b
  2203  01F8E4  B4D8               	btfsc	status,2,c
  2204  01F8E6  D00C               	goto	l3433
  2205                           
  2206                           ; BSR set to: 0
  2207                           ;Run.c: 77: RS485_SendDate(ga_RS485_SendBuff,RS485_DATA_LENTH);
  2208  01F8E8  0E00               	movlw	low _ga_RS485_SendBuff
  2209  01F8EA  0100               	movlb	0	; () banked
  2210  01F8EC  6FEA               	movwf	RS485_SendDate@date_dress& (0+255),b
  2211  01F8EE  0E00               	movlw	high _ga_RS485_SendBuff
  2212  01F8F0  0100               	movlb	0	; () banked
  2213  01F8F2  6FEB               	movwf	(RS485_SendDate@date_dress+1)& (0+255),b
  2214  01F8F4  0E07               	movlw	7
  2215  01F8F6  0100               	movlb	0	; () banked
  2216  01F8F8  6FEC               	movwf	RS485_SendDate@date_lenth& (0+255),b
  2217  01F8FA  ECCE  F0FC         	call	_RS485_SendDate	;wreg free
  2218  01F8FE  D000               	goto	l3433
  2219  01F900                     l3433:
  2220                           
  2221                           ;Run.c: 80: for(i = 0; i< 8 ;i++ )
  2222  01F900  0E00               	movlw	0
  2223  01F902  0100               	movlb	0	; () banked
  2224  01F904  6FF1               	movwf	(Manage_Incident@i+1)& (0+255),b
  2225  01F906  0E00               	movlw	0
  2226  01F908  6FF0               	movwf	Manage_Incident@i& (0+255),b
  2227  01F90A                     l3435:
  2228                           
  2229                           ; BSR set to: 0
  2230  01F90A  0100               	movlb	0	; () banked
  2231  01F90C  51F1               	movf	(Manage_Incident@i+1)& (0+255),w,b
  2232  01F90E  E11C               	bnz	l3447
  2233  01F910  0E08               	movlw	8
  2234  01F912  0100               	movlb	0	; () banked
  2235  01F914  5DF0               	subwf	Manage_Incident@i& (0+255),w,b
  2236  01F916  B0D8               	btfsc	status,0,c
  2237  01F918  D017               	goto	l3447
  2238  01F91A  D001               	goto	l3439
  2239                           
  2240                           ; BSR set to: 0
  2241  01F91C  D015               	goto	l3447
  2242  01F91E                     l3439:
  2243                           
  2244                           ; BSR set to: 0
  2245                           ;Run.c: 81: if( gs_Switch.a_Magnet[i] == 1)
  2246  01F91E  0ECF               	movlw	low (_gs_Switch+5)
  2247  01F920  0100               	movlb	0	; () banked
  2248  01F922  25F0               	addwf	Manage_Incident@i& (0+255),w,b
  2249  01F924  6ED9               	movwf	fsr2l,c
  2250  01F926  0E00               	movlw	high (_gs_Switch+5)
  2251  01F928  0100               	movlb	0	; () banked
  2252  01F92A  21F1               	addwfc	(Manage_Incident@i+1)& (0+255),w,b
  2253  01F92C  6EDA               	movwf	fsr2h,c
  2254  01F92E  04DE               	decf	postinc2,w,c
  2255  01F930  A4D8               	btfss	status,2,c
  2256  01F932  D005               	goto	l3443
  2257                           
  2258                           ; BSR set to: 0
  2259                           ;Run.c: 82: SCR_Magnet(i);
  2260  01F934  0100               	movlb	0	; () banked
  2261  01F936  51F0               	movf	Manage_Incident@i& (0+255),w,b
  2262  01F938  ECF9  F0F9         	call	_SCR_Magnet
  2263  01F93C  D000               	goto	l3443
  2264  01F93E                     l3443:
  2265  01F93E  0100               	movlb	0	; () banked
  2266  01F940  4BF0               	infsnz	Manage_Incident@i& (0+255),f,b
  2267  01F942  2BF1               	incf	(Manage_Incident@i+1)& (0+255),f,b
  2268  01F944  D7E2               	goto	l3435
  2269                           
  2270                           ; BSR set to: 0
  2271  01F946  D000               	goto	l3447
  2272  01F948                     l3447:
  2273                           
  2274                           ; BSR set to: 0
  2275                           ;Run.c: 85: for(i = 0; i< 8 ;i++ )
  2276  01F948  0E00               	movlw	0
  2277  01F94A  0100               	movlb	0	; () banked
  2278  01F94C  6FF1               	movwf	(Manage_Incident@i+1)& (0+255),b
  2279  01F94E  0E00               	movlw	0
  2280  01F950  6FF0               	movwf	Manage_Incident@i& (0+255),b
  2281  01F952                     l3449:
  2282                           
  2283                           ; BSR set to: 0
  2284  01F952  0100               	movlb	0	; () banked
  2285  01F954  51F1               	movf	(Manage_Incident@i+1)& (0+255),w,b
  2286  01F956  E11C               	bnz	l3461
  2287  01F958  0E08               	movlw	8
  2288  01F95A  0100               	movlb	0	; () banked
  2289  01F95C  5DF0               	subwf	Manage_Incident@i& (0+255),w,b
  2290  01F95E  B0D8               	btfsc	status,0,c
  2291  01F960  D017               	goto	l3461
  2292  01F962  D001               	goto	l3453
  2293                           
  2294                           ; BSR set to: 0
  2295  01F964  D015               	goto	l3461
  2296  01F966                     l3453:
  2297                           
  2298                           ; BSR set to: 0
  2299                           ;Run.c: 86: if( gs_Switch.a_Magnet[i] == 1)
  2300  01F966  0ECF               	movlw	low (_gs_Switch+5)
  2301  01F968  0100               	movlb	0	; () banked
  2302  01F96A  25F0               	addwf	Manage_Incident@i& (0+255),w,b
  2303  01F96C  6ED9               	movwf	fsr2l,c
  2304  01F96E  0E00               	movlw	high (_gs_Switch+5)
  2305  01F970  0100               	movlb	0	; () banked
  2306  01F972  21F1               	addwfc	(Manage_Incident@i+1)& (0+255),w,b
  2307  01F974  6EDA               	movwf	fsr2h,c
  2308  01F976  04DE               	decf	postinc2,w,c
  2309  01F978  A4D8               	btfss	status,2,c
  2310  01F97A  D005               	goto	l3457
  2311                           
  2312                           ; BSR set to: 0
  2313                           ;Run.c: 87: SCR_Demagnet(i);
  2314  01F97C  0100               	movlb	0	; () banked
  2315  01F97E  51F0               	movf	Manage_Incident@i& (0+255),w,b
  2316  01F980  ECD6  F0F9         	call	_SCR_Demagnet
  2317  01F984  D000               	goto	l3457
  2318  01F986                     l3457:
  2319  01F986  0100               	movlb	0	; () banked
  2320  01F988  4BF0               	infsnz	Manage_Incident@i& (0+255),f,b
  2321  01F98A  2BF1               	incf	(Manage_Incident@i+1)& (0+255),f,b
  2322  01F98C  D7E2               	goto	l3449
  2323                           
  2324                           ; BSR set to: 0
  2325  01F98E  D000               	goto	l3461
  2326  01F990                     l3461:
  2327                           
  2328                           ; BSR set to: 0
  2329                           ;Run.c: 89: SCR_Demagnet(g_RS485_Byte);
  2330  01F990  EE20  F000         	lfsr	2,_g_RS485_Byte
  2331  01F994  50DF               	movf	indf2,w,c
  2332  01F996  ECD6  F0F9         	call	_SCR_Demagnet
  2333  01F99A  0012               	return		;funcret
  2334  01F99C                     __end_of_Manage_Incident:
  2335                           	opt stack 0
  2336                           tblptru	equ	0xFF8
  2337                           tblptrh	equ	0xFF7
  2338                           tblptrl	equ	0xFF6
  2339                           tablat	equ	0xFF5
  2340                           prodh	equ	0xFF4
  2341                           prodl	equ	0xFF3
  2342                           intcon	equ	0xFF2
  2343                           postinc0	equ	0xFEE
  2344                           wreg	equ	0xFE8
  2345                           postdec1	equ	0xFE5
  2346                           fsr1l	equ	0xFE1
  2347                           indf2	equ	0xFDF
  2348                           postinc2	equ	0xFDE
  2349                           fsr2h	equ	0xFDA
  2350                           fsr2l	equ	0xFD9
  2351                           status	equ	0xFD8
  2352                           
  2353 ;; *************** function _SCR_Magnet *****************
  2354 ;; Defined at:
  2355 ;;		line 42 in file "_01_USER/SCR.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;  _ch             1    wreg     unsigned char 
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;  _ch             1    7[BANK0 ] unsigned char 
  2360 ;; Return value:  Size  Location     Type
  2361 ;;		None               void
  2362 ;; Registers used:
  2363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2370 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2372 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2373 ;;Total ram usage:        1 bytes
  2374 ;; Hardware stack levels used:    1
  2375 ;; Hardware stack levels required when called:    6
  2376 ;; This function calls:
  2377 ;;		_Relay_Control
  2378 ;;		_delay_ms
  2379 ;; This function is called by:
  2380 ;;		_Manage_Incident
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           
  2384                           	psect	text15
  2385  01F3F2                     __ptext15:
  2386                           	opt stack 0
  2387  01F3F2                     _SCR_Magnet:
  2388                           	opt stack 23
  2389                           
  2390                           ;incstack = 0
  2391                           ;SCR_Magnet@_ch stored from wreg
  2392  01F3F2  0100               	movlb	0	; () banked
  2393  01F3F4  6FEE               	movwf	SCR_Magnet@_ch& (0+255),b
  2394                           
  2395                           ; BSR set to: 0
  2396                           ;SCR.c: 45: Relay_Control(_ch,1);
  2397  01F3F6  0E01               	movlw	1
  2398  01F3F8  0100               	movlb	0	; () banked
  2399  01F3FA  6FEC               	movwf	Relay_Control@_switch& (0+255),b
  2400  01F3FC  0100               	movlb	0	; () banked
  2401  01F3FE  51EE               	movf	SCR_Magnet@_ch& (0+255),w,b
  2402  01F400  EC27  F0FC         	call	_Relay_Control
  2403                           
  2404                           ;SCR.c: 46: delay_ms(100);
  2405  01F404  0E00               	movlw	0
  2406  01F406  0100               	movlb	0	; () banked
  2407  01F408  6FEB               	movwf	(delay_ms@_ms+1)& (0+255),b
  2408  01F40A  0E64               	movlw	100
  2409  01F40C  6FEA               	movwf	delay_ms@_ms& (0+255),b
  2410  01F40E  EC73  F0F8         	call	_delay_ms	;wreg free
  2411                           
  2412                           ;SCR.c: 47: Relay_Control(_ch,0);
  2413  01F412  0E00               	movlw	0
  2414  01F414  0100               	movlb	0	; () banked
  2415  01F416  6FEC               	movwf	Relay_Control@_switch& (0+255),b
  2416  01F418  0100               	movlb	0	; () banked
  2417  01F41A  51EE               	movf	SCR_Magnet@_ch& (0+255),w,b
  2418  01F41C  EC27  F0FC         	call	_Relay_Control
  2419                           
  2420                           ;SCR.c: 48: gs_Switch.a_Magnet[_ch] = 0;
  2421  01F420  0100               	movlb	0	; () banked
  2422  01F422  51EE               	movf	SCR_Magnet@_ch& (0+255),w,b
  2423  01F424  0D01               	mullw	1
  2424  01F426  0ECF               	movlw	low (_gs_Switch+5)
  2425  01F428  24F3               	addwf	prodl,w,c
  2426  01F42A  6ED9               	movwf	fsr2l,c
  2427  01F42C  0E00               	movlw	high (_gs_Switch+5)
  2428  01F42E  20F4               	addwfc	prodh,w,c
  2429  01F430  6EDA               	movwf	fsr2h,c
  2430  01F432  0E00               	movlw	0
  2431  01F434  6EDF               	movwf	indf2,c
  2432                           
  2433                           ; BSR set to: 0
  2434  01F436  0012               	return		;funcret
  2435  01F438                     __end_of_SCR_Magnet:
  2436                           	opt stack 0
  2437                           tblptru	equ	0xFF8
  2438                           tblptrh	equ	0xFF7
  2439                           tblptrl	equ	0xFF6
  2440                           tablat	equ	0xFF5
  2441                           prodh	equ	0xFF4
  2442                           prodl	equ	0xFF3
  2443                           intcon	equ	0xFF2
  2444                           postinc0	equ	0xFEE
  2445                           wreg	equ	0xFE8
  2446                           postdec1	equ	0xFE5
  2447                           fsr1l	equ	0xFE1
  2448                           indf2	equ	0xFDF
  2449                           postinc2	equ	0xFDE
  2450                           fsr2h	equ	0xFDA
  2451                           fsr2l	equ	0xFD9
  2452                           status	equ	0xFD8
  2453                           
  2454 ;; *************** function _SCR_Demagnet *****************
  2455 ;; Defined at:
  2456 ;;		line 60 in file "_01_USER/SCR.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;  _ch             1    wreg     unsigned char 
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;  _ch             1    7[BANK0 ] unsigned char 
  2461 ;; Return value:  Size  Location     Type
  2462 ;;		None               void
  2463 ;; Registers used:
  2464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2471 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2473 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2474 ;;Total ram usage:        1 bytes
  2475 ;; Hardware stack levels used:    1
  2476 ;; Hardware stack levels required when called:    6
  2477 ;; This function calls:
  2478 ;;		_Relay_Control
  2479 ;;		_delay_ms
  2480 ;; This function is called by:
  2481 ;;		_Manage_Incident
  2482 ;; This function uses a non-reentrant model
  2483 ;;
  2484                           
  2485                           	psect	text16
  2486  01F3AC                     __ptext16:
  2487                           	opt stack 0
  2488  01F3AC                     _SCR_Demagnet:
  2489                           	opt stack 23
  2490                           
  2491                           ; BSR set to: 0
  2492                           ;incstack = 0
  2493                           ;SCR_Demagnet@_ch stored from wreg
  2494  01F3AC  0100               	movlb	0	; () banked
  2495  01F3AE  6FEE               	movwf	SCR_Demagnet@_ch& (0+255),b
  2496                           
  2497                           ; BSR set to: 0
  2498                           ;SCR.c: 63: Relay_Control(_ch,1);
  2499  01F3B0  0E01               	movlw	1
  2500  01F3B2  0100               	movlb	0	; () banked
  2501  01F3B4  6FEC               	movwf	Relay_Control@_switch& (0+255),b
  2502  01F3B6  0100               	movlb	0	; () banked
  2503  01F3B8  51EE               	movf	SCR_Demagnet@_ch& (0+255),w,b
  2504  01F3BA  EC27  F0FC         	call	_Relay_Control
  2505                           
  2506                           ;SCR.c: 64: delay_ms(100);
  2507  01F3BE  0E00               	movlw	0
  2508  01F3C0  0100               	movlb	0	; () banked
  2509  01F3C2  6FEB               	movwf	(delay_ms@_ms+1)& (0+255),b
  2510  01F3C4  0E64               	movlw	100
  2511  01F3C6  6FEA               	movwf	delay_ms@_ms& (0+255),b
  2512  01F3C8  EC73  F0F8         	call	_delay_ms	;wreg free
  2513                           
  2514                           ;SCR.c: 65: Relay_Control(_ch,0);
  2515  01F3CC  0E00               	movlw	0
  2516  01F3CE  0100               	movlb	0	; () banked
  2517  01F3D0  6FEC               	movwf	Relay_Control@_switch& (0+255),b
  2518  01F3D2  0100               	movlb	0	; () banked
  2519  01F3D4  51EE               	movf	SCR_Demagnet@_ch& (0+255),w,b
  2520  01F3D6  EC27  F0FC         	call	_Relay_Control
  2521                           
  2522                           ;SCR.c: 66: gs_Switch.a_Demagnet[_ch] = 0;
  2523  01F3DA  0100               	movlb	0	; () banked
  2524  01F3DC  51EE               	movf	SCR_Demagnet@_ch& (0+255),w,b
  2525  01F3DE  0D01               	mullw	1
  2526  01F3E0  0ED2               	movlw	low (_gs_Switch+8)
  2527  01F3E2  24F3               	addwf	prodl,w,c
  2528  01F3E4  6ED9               	movwf	fsr2l,c
  2529  01F3E6  0E00               	movlw	high (_gs_Switch+8)
  2530  01F3E8  20F4               	addwfc	prodh,w,c
  2531  01F3EA  6EDA               	movwf	fsr2h,c
  2532  01F3EC  0E00               	movlw	0
  2533  01F3EE  6EDF               	movwf	indf2,c
  2534                           
  2535                           ; BSR set to: 0
  2536  01F3F0  0012               	return		;funcret
  2537  01F3F2                     __end_of_SCR_Demagnet:
  2538                           	opt stack 0
  2539                           tblptru	equ	0xFF8
  2540                           tblptrh	equ	0xFF7
  2541                           tblptrl	equ	0xFF6
  2542                           tablat	equ	0xFF5
  2543                           prodh	equ	0xFF4
  2544                           prodl	equ	0xFF3
  2545                           intcon	equ	0xFF2
  2546                           postinc0	equ	0xFEE
  2547                           wreg	equ	0xFE8
  2548                           postdec1	equ	0xFE5
  2549                           fsr1l	equ	0xFE1
  2550                           indf2	equ	0xFDF
  2551                           postinc2	equ	0xFDE
  2552                           fsr2h	equ	0xFDA
  2553                           fsr2l	equ	0xFD9
  2554                           status	equ	0xFD8
  2555                           
  2556 ;; *************** function _Relay_Control *****************
  2557 ;; Defined at:
  2558 ;;		line 60 in file "_01_USER/Relay.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;  relay_num       1    wreg     unsigned char 
  2561 ;;  _switch         1    5[BANK0 ] unsigned char 
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;  relay_num       1    6[BANK0 ] unsigned char 
  2564 ;; Return value:  Size  Location     Type
  2565 ;;		None               void
  2566 ;; Registers used:
  2567 ;;		wreg, status,2, status,0, cstack
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2573 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2574 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2576 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2577 ;;Total ram usage:        2 bytes
  2578 ;; Hardware stack levels used:    1
  2579 ;; Hardware stack levels required when called:    5
  2580 ;; This function calls:
  2581 ;;		_delay_ms
  2582 ;; This function is called by:
  2583 ;;		_SCR_Magnet
  2584 ;;		_SCR_Demagnet
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588                           	psect	text17
  2589  01F84E                     __ptext17:
  2590                           	opt stack 0
  2591  01F84E                     _Relay_Control:
  2592                           	opt stack 23
  2593                           
  2594                           ; BSR set to: 0
  2595                           ;incstack = 0
  2596                           ;Relay_Control@relay_num stored from wreg
  2597  01F84E  0100               	movlb	0	; () banked
  2598  01F850  6FED               	movwf	Relay_Control@relay_num& (0+255),b
  2599                           
  2600                           ; BSR set to: 0
  2601                           ;Relay.c: 63: if( relay_num == 0)
  2602  01F852  0100               	movlb	0	; () banked
  2603  01F854  51ED               	movf	Relay_Control@relay_num& (0+255),w,b
  2604  01F856  0100               	movlb	0	; () banked
  2605  01F858  A4D8               	btfss	status,2,c
  2606  01F85A  D00B               	goto	l3111
  2607                           
  2608                           ; BSR set to: 0
  2609                           ;Relay.c: 64: {
  2610                           ;Relay.c: 65: if(_switch)
  2611  01F85C  0100               	movlb	0	; () banked
  2612  01F85E  51EC               	movf	Relay_Control@_switch& (0+255),w,b
  2613  01F860  0100               	movlb	0	; () banked
  2614  01F862  B4D8               	btfsc	status,2,c
  2615  01F864  D003               	goto	l485
  2616                           
  2617                           ; BSR set to: 0
  2618                           ;Relay.c: 66: {
  2619                           ;Relay.c: 67: RD0 = 1,RD1 = 0;
  2620  01F866  8083               	bsf	3971,0,c	;volatile
  2621  01F868  9283               	bcf	3971,1,c	;volatile
  2622                           
  2623                           ;Relay.c: 68: }
  2624  01F86A  D003               	goto	l3111
  2625  01F86C                     l485:
  2626                           
  2627                           ; BSR set to: 0
  2628                           ;Relay.c: 69: else
  2629                           ;Relay.c: 70: {
  2630                           ;Relay.c: 71: RD0 = 0,RD1 = 1;
  2631  01F86C  9083               	bcf	3971,0,c	;volatile
  2632  01F86E  8283               	bsf	3971,1,c	;volatile
  2633                           
  2634                           ; BSR set to: 0
  2635  01F870  D000               	goto	l3111
  2636  01F872                     l3111:
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;Relay.c: 72: }
  2640                           ;Relay.c: 73: }
  2641                           ;Relay.c: 76: if( relay_num == 1)
  2642  01F872  0100               	movlb	0	; () banked
  2643  01F874  05ED               	decf	Relay_Control@relay_num& (0+255),w,b
  2644  01F876  A4D8               	btfss	status,2,c
  2645  01F878  D00B               	goto	l3117
  2646                           
  2647                           ; BSR set to: 0
  2648                           ;Relay.c: 77: {
  2649                           ;Relay.c: 78: if(_switch)
  2650  01F87A  0100               	movlb	0	; () banked
  2651  01F87C  51EC               	movf	Relay_Control@_switch& (0+255),w,b
  2652  01F87E  0100               	movlb	0	; () banked
  2653  01F880  B4D8               	btfsc	status,2,c
  2654  01F882  D003               	goto	l488
  2655                           
  2656                           ; BSR set to: 0
  2657                           ;Relay.c: 79: {
  2658                           ;Relay.c: 80: RD2 = 1,RD3 = 0;
  2659  01F884  8483               	bsf	3971,2,c	;volatile
  2660  01F886  9683               	bcf	3971,3,c	;volatile
  2661                           
  2662                           ;Relay.c: 81: }
  2663  01F888  D003               	goto	l3117
  2664  01F88A                     l488:
  2665                           
  2666                           ; BSR set to: 0
  2667                           ;Relay.c: 82: else
  2668                           ;Relay.c: 83: {
  2669                           ;Relay.c: 84: RD2 = 0,RD3 = 1;
  2670  01F88A  9483               	bcf	3971,2,c	;volatile
  2671  01F88C  8683               	bsf	3971,3,c	;volatile
  2672                           
  2673                           ; BSR set to: 0
  2674  01F88E  D000               	goto	l3117
  2675  01F890                     l3117:
  2676                           
  2677                           ; BSR set to: 0
  2678                           ;Relay.c: 85: }
  2679                           ;Relay.c: 86: }
  2680                           ;Relay.c: 89: if( relay_num == 2)
  2681  01F890  0E02               	movlw	2
  2682  01F892  0100               	movlb	0	; () banked
  2683  01F894  19ED               	xorwf	Relay_Control@relay_num& (0+255),w,b
  2684  01F896  A4D8               	btfss	status,2,c
  2685  01F898  D00B               	goto	l3123
  2686                           
  2687                           ; BSR set to: 0
  2688                           ;Relay.c: 90: {
  2689                           ;Relay.c: 91: if(_switch)
  2690  01F89A  0100               	movlb	0	; () banked
  2691  01F89C  51EC               	movf	Relay_Control@_switch& (0+255),w,b
  2692  01F89E  0100               	movlb	0	; () banked
  2693  01F8A0  B4D8               	btfsc	status,2,c
  2694  01F8A2  D003               	goto	l491
  2695                           
  2696                           ; BSR set to: 0
  2697                           ;Relay.c: 92: {
  2698                           ;Relay.c: 93: RD4 = 1,RD7 = 0;
  2699  01F8A4  8883               	bsf	3971,4,c	;volatile
  2700  01F8A6  9E83               	bcf	3971,7,c	;volatile
  2701                           
  2702                           ;Relay.c: 94: }
  2703  01F8A8  D003               	goto	l3123
  2704  01F8AA                     l491:
  2705                           
  2706                           ; BSR set to: 0
  2707                           ;Relay.c: 95: else
  2708                           ;Relay.c: 96: {
  2709                           ;Relay.c: 97: RD4 = 0,RD7 = 1;
  2710  01F8AA  9883               	bcf	3971,4,c	;volatile
  2711  01F8AC  8E83               	bsf	3971,7,c	;volatile
  2712                           
  2713                           ; BSR set to: 0
  2714  01F8AE  D000               	goto	l3123
  2715  01F8B0                     l3123:
  2716                           
  2717                           ; BSR set to: 0
  2718                           ;Relay.c: 98: }
  2719                           ;Relay.c: 99: }
  2720                           ;Relay.c: 102: if( relay_num >= 1 && relay_num <=3 )
  2721  01F8B0  0100               	movlb	0	; () banked
  2722  01F8B2  51ED               	movf	Relay_Control@relay_num& (0+255),w,b
  2723  01F8B4  0100               	movlb	0	; () banked
  2724  01F8B6  B4D8               	btfsc	status,2,c
  2725  01F8B8  D00C               	goto	l3129
  2726                           
  2727                           ; BSR set to: 0
  2728  01F8BA  0E04               	movlw	4
  2729  01F8BC  0100               	movlb	0	; () banked
  2730  01F8BE  61ED               	cpfslt	Relay_Control@relay_num& (0+255),b
  2731  01F8C0  D008               	goto	l3129
  2732                           
  2733                           ; BSR set to: 0
  2734                           ;Relay.c: 103: {
  2735                           ;Relay.c: 104: delay_ms(2);
  2736  01F8C2  0E00               	movlw	0
  2737  01F8C4  0100               	movlb	0	; () banked
  2738  01F8C6  6FEB               	movwf	(delay_ms@_ms+1)& (0+255),b
  2739  01F8C8  0E02               	movlw	2
  2740  01F8CA  6FEA               	movwf	delay_ms@_ms& (0+255),b
  2741  01F8CC  EC73  F0F8         	call	_delay_ms	;wreg free
  2742  01F8D0  D000               	goto	l3129
  2743  01F8D2                     l3129:
  2744                           
  2745                           ;Relay.c: 105: }
  2746                           ;Relay.c: 108: RD0 = 0;
  2747  01F8D2  9083               	bcf	3971,0,c	;volatile
  2748                           
  2749                           ;Relay.c: 109: RD1 = 0;
  2750  01F8D4  9283               	bcf	3971,1,c	;volatile
  2751                           
  2752                           ;Relay.c: 110: RD2 = 0;
  2753  01F8D6  9483               	bcf	3971,2,c	;volatile
  2754                           
  2755                           ;Relay.c: 111: RD3 = 0;
  2756  01F8D8  9683               	bcf	3971,3,c	;volatile
  2757                           
  2758                           ;Relay.c: 112: RD4 = 0;
  2759  01F8DA  9883               	bcf	3971,4,c	;volatile
  2760                           
  2761                           ;Relay.c: 113: RD7 = 0;
  2762  01F8DC  9E83               	bcf	3971,7,c	;volatile
  2763  01F8DE  0012               	return		;funcret
  2764  01F8E0                     __end_of_Relay_Control:
  2765                           	opt stack 0
  2766                           tblptru	equ	0xFF8
  2767                           tblptrh	equ	0xFF7
  2768                           tblptrl	equ	0xFF6
  2769                           tablat	equ	0xFF5
  2770                           prodh	equ	0xFF4
  2771                           prodl	equ	0xFF3
  2772                           intcon	equ	0xFF2
  2773                           postinc0	equ	0xFEE
  2774                           wreg	equ	0xFE8
  2775                           postdec1	equ	0xFE5
  2776                           fsr1l	equ	0xFE1
  2777                           indf2	equ	0xFDF
  2778                           postinc2	equ	0xFDE
  2779                           fsr2h	equ	0xFDA
  2780                           fsr2l	equ	0xFD9
  2781                           status	equ	0xFD8
  2782                           
  2783 ;; *************** function _delay_ms *****************
  2784 ;; Defined at:
  2785 ;;		line 37 in file "_01_USER/My_Delay.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;  _ms             2    3[BANK0 ] unsigned int 
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;		None
  2790 ;; Return value:  Size  Location     Type
  2791 ;;		None               void
  2792 ;; Registers used:
  2793 ;;		wreg, status,2, status,0, cstack
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2799 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2802 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2803 ;;Total ram usage:        2 bytes
  2804 ;; Hardware stack levels used:    1
  2805 ;; Hardware stack levels required when called:    4
  2806 ;; This function calls:
  2807 ;;		_delay1ms
  2808 ;; This function is called by:
  2809 ;;		_Relay_Control
  2810 ;;		_SCR_Magnet
  2811 ;;		_SCR_Demagnet
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815                           	psect	text18
  2816  01F0E6                     __ptext18:
  2817                           	opt stack 0
  2818  01F0E6                     _delay_ms:
  2819                           	opt stack 24
  2820                           
  2821                           ;My_Delay.c: 39: while(_ms--) delay1ms();
  2822                           
  2823                           ;incstack = 0
  2824  01F0E6  D003               	goto	l3005
  2825  01F0E8                     l3003:
  2826  01F0E8  ECB6  F0FA         	call	_delay1ms	;wreg free
  2827  01F0EC  D000               	goto	l3005
  2828  01F0EE                     l3005:
  2829  01F0EE  0100               	movlb	0	; () banked
  2830  01F0F0  07EA               	decf	delay_ms@_ms& (0+255),f,b
  2831  01F0F2  A0D8               	btfss	status,0,c
  2832  01F0F4  07EB               	decf	(delay_ms@_ms+1)& (0+255),f,b
  2833  01F0F6  0100               	movlb	0	; () banked
  2834  01F0F8  29EA               	incf	delay_ms@_ms& (0+255),w,b
  2835  01F0FA  E1F6               	bnz	l3003
  2836  01F0FC  0100               	movlb	0	; () banked
  2837  01F0FE  29EB               	incf	(delay_ms@_ms+1)& (0+255),w,b
  2838  01F100  A4D8               	btfss	status,2,c
  2839  01F102  D7F2               	goto	l3003
  2840                           
  2841                           ; BSR set to: 0
  2842                           
  2843                           ; BSR set to: 0
  2844  01F104  0012               	return		;funcret
  2845  01F106                     __end_of_delay_ms:
  2846                           	opt stack 0
  2847                           tblptru	equ	0xFF8
  2848                           tblptrh	equ	0xFF7
  2849                           tblptrl	equ	0xFF6
  2850                           tablat	equ	0xFF5
  2851                           prodh	equ	0xFF4
  2852                           prodl	equ	0xFF3
  2853                           intcon	equ	0xFF2
  2854                           postinc0	equ	0xFEE
  2855                           wreg	equ	0xFE8
  2856                           postdec1	equ	0xFE5
  2857                           fsr1l	equ	0xFE1
  2858                           indf2	equ	0xFDF
  2859                           postinc2	equ	0xFDE
  2860                           fsr2h	equ	0xFDA
  2861                           fsr2l	equ	0xFD9
  2862                           status	equ	0xFD8
  2863                           
  2864 ;; *************** function _delay1ms *****************
  2865 ;; Defined at:
  2866 ;;		line 59 in file "_01_USER/My_Delay.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;		None
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;  c               1    2[BANK0 ] unsigned char 
  2871 ;;  b               1    1[BANK0 ] unsigned char 
  2872 ;;  a               1    0[BANK0 ] unsigned char 
  2873 ;; Return value:  Size  Location     Type
  2874 ;;		None               void
  2875 ;; Registers used:
  2876 ;;		wreg, status,2, status,0
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2883 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2885 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2886 ;;Total ram usage:        3 bytes
  2887 ;; Hardware stack levels used:    1
  2888 ;; Hardware stack levels required when called:    3
  2889 ;; This function calls:
  2890 ;;		Nothing
  2891 ;; This function is called by:
  2892 ;;		_delay_ms
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           	psect	text19
  2897  01F56C                     __ptext19:
  2898                           	opt stack 0
  2899  01F56C                     _delay1ms:
  2900                           	opt stack 24
  2901                           
  2902                           ;My_Delay.c: 61: unsigned char a,b,c;
  2903                           ;My_Delay.c: 62: for(c=1;c>0;c--)
  2904                           
  2905                           ; BSR set to: 0
  2906                           ;incstack = 0
  2907  01F56C  0E01               	movlw	1
  2908  01F56E  0100               	movlb	0	; () banked
  2909  01F570  6FE9               	movwf	delay1ms@c& (0+255),b
  2910  01F572  0100               	movlb	0	; () banked
  2911  01F574  51E9               	movf	delay1ms@c& (0+255),w,b
  2912  01F576  0100               	movlb	0	; () banked
  2913  01F578  B4D8               	btfsc	status,2,c
  2914  01F57A  0012               	return	
  2915  01F57C  D001               	goto	l2971
  2916                           
  2917                           ; BSR set to: 0
  2918  01F57E  0012               	return	
  2919  01F580                     l2971:
  2920                           
  2921                           ; BSR set to: 0
  2922                           ;My_Delay.c: 63: for(b=94;b>0;b--)
  2923  01F580  0E5E               	movlw	94
  2924  01F582  0100               	movlb	0	; () banked
  2925  01F584  6FE8               	movwf	delay1ms@b& (0+255),b
  2926  01F586  0100               	movlb	0	; () banked
  2927  01F588  51E8               	movf	delay1ms@b& (0+255),w,b
  2928  01F58A  0100               	movlb	0	; () banked
  2929  01F58C  B4D8               	btfsc	status,2,c
  2930  01F58E  D012               	goto	l2987
  2931  01F590  D001               	goto	l2975
  2932                           
  2933                           ; BSR set to: 0
  2934  01F592  D010               	goto	l2987
  2935  01F594                     l2975:
  2936                           
  2937                           ; BSR set to: 0
  2938                           ;My_Delay.c: 64: for(a=2;a>0;a--);
  2939  01F594  0E02               	movlw	2
  2940  01F596  0100               	movlb	0	; () banked
  2941  01F598  6FE7               	movwf	delay1ms@a& (0+255),b
  2942  01F59A  0100               	movlb	0	; () banked
  2943  01F59C  51E7               	movf	delay1ms@a& (0+255),w,b
  2944  01F59E  0100               	movlb	0	; () banked
  2945  01F5A0  B4D8               	btfsc	status,2,c
  2946  01F5A2  D005               	goto	l2983
  2947  01F5A4  D001               	goto	l2979
  2948                           
  2949                           ; BSR set to: 0
  2950  01F5A6  D003               	goto	l2983
  2951  01F5A8                     l2979:
  2952                           
  2953                           ; BSR set to: 0
  2954  01F5A8  0100               	movlb	0	; () banked
  2955  01F5AA  07E7               	decf	delay1ms@a& (0+255),f,b
  2956  01F5AC  D7F6               	goto	L1
  2957  01F5AE                     l2983:
  2958                           
  2959                           ; BSR set to: 0
  2960  01F5AE  0100               	movlb	0	; () banked
  2961  01F5B0  07E8               	decf	delay1ms@b& (0+255),f,b
  2962  01F5B2  D7E9               	goto	L2
  2963  01F5B4                     l2987:
  2964                           
  2965                           ; BSR set to: 0
  2966  01F5B4  0100               	movlb	0	; () banked
  2967  01F5B6  07E9               	decf	delay1ms@c& (0+255),f,b
  2968  01F5B8  D7DC               	goto	L3
  2969                           
  2970                           ; BSR set to: 0
  2971                           
  2972                           ; BSR set to: 0
  2973                           
  2974                           ; BSR set to: 0
  2975  01F5BA  0012               	return		;funcret
  2976  01F5BC                     __end_of_delay1ms:
  2977                           	opt stack 0
  2978                           tblptru	equ	0xFF8
  2979                           tblptrh	equ	0xFF7
  2980                           tblptrl	equ	0xFF6
  2981                           tablat	equ	0xFF5
  2982                           prodh	equ	0xFF4
  2983                           prodl	equ	0xFF3
  2984                           intcon	equ	0xFF2
  2985                           postinc0	equ	0xFEE
  2986                           wreg	equ	0xFE8
  2987                           postdec1	equ	0xFE5
  2988                           fsr1l	equ	0xFE1
  2989                           indf2	equ	0xFDF
  2990                           postinc2	equ	0xFDE
  2991                           fsr2h	equ	0xFDA
  2992                           fsr2l	equ	0xFD9
  2993                           status	equ	0xFD8
  2994                           
  2995 ;; *************** function _RS485_SendDate *****************
  2996 ;; Defined at:
  2997 ;;		line 71 in file "_01_USER/My_USART.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;  date_dress      2    3[BANK0 ] PTR unsigned char 
  3000 ;;		 -> ga_RS485_SendBuff(0), 
  3001 ;;  date_lenth      1    5[BANK0 ] unsigned char 
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;		None
  3004 ;; Return value:  Size  Location     Type
  3005 ;;		None               void
  3006 ;; Registers used:
  3007 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3013 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3015 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3016 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3017 ;;Total ram usage:        4 bytes
  3018 ;; Hardware stack levels used:    1
  3019 ;; Hardware stack levels required when called:    4
  3020 ;; This function calls:
  3021 ;;		_VerifyCRC
  3022 ;; This function is called by:
  3023 ;;		_Manage_Incident
  3024 ;; This function uses a non-reentrant model
  3025 ;;
  3026                           
  3027                           	psect	text20
  3028  01F99C                     __ptext20:
  3029                           	opt stack 0
  3030  01F99C                     _RS485_SendDate:
  3031                           	opt stack 25
  3032                           
  3033                           ;My_USART.c: 74: date_dress[--date_lenth] = 0xff;
  3034                           
  3035                           ; BSR set to: 0
  3036                           ;incstack = 0
  3037  01F99C  0100               	movlb	0	; () banked
  3038  01F99E  07EC               	decf	RS485_SendDate@date_lenth& (0+255),f,b
  3039  01F9A0  0100               	movlb	0	; () banked
  3040  01F9A2  51EC               	movf	RS485_SendDate@date_lenth& (0+255),w,b
  3041  01F9A4  0D01               	mullw	1
  3042  01F9A6  50F3               	movf	prodl,w,c
  3043  01F9A8  0100               	movlb	0	; () banked
  3044  01F9AA  25EA               	addwf	RS485_SendDate@date_dress& (0+255),w,b
  3045  01F9AC  6ED9               	movwf	fsr2l,c
  3046  01F9AE  50F4               	movf	prodh,w,c
  3047  01F9B0  0100               	movlb	0	; () banked
  3048  01F9B2  21EB               	addwfc	(RS485_SendDate@date_dress+1)& (0+255),w,b
  3049  01F9B4  6EDA               	movwf	fsr2h,c
  3050  01F9B6  0EFF               	movlw	255
  3051  01F9B8  6EDF               	movwf	indf2,c
  3052                           
  3053                           ; BSR set to: 0
  3054                           ;My_USART.c: 77: VerifyCRC(date_dress,date_lenth);
  3055  01F9BA  C0EA  F0E7         	movff	RS485_SendDate@date_dress,_VerifyCRC$0
  3056  01F9BE  C0EB  F0E8         	movff	RS485_SendDate@date_dress+1,_VerifyCRC$0+1
  3057  01F9C2  C0EC  F0E9         	movff	RS485_SendDate@date_lenth,_VerifyCRC$1
  3058  01F9C6  EC00  F000         	call	_VerifyCRC	;wreg free
  3059                           
  3060                           ;My_USART.c: 80: while( (!TXSTA1bits.TRMT) );
  3061  01F9CA  D000               	goto	l192
  3062  01F9CC                     l192:
  3063  01F9CC  A2AC               	btfss	4012,1,c	;volatile
  3064  01F9CE  D7FE               	goto	l192
  3065                           
  3066                           ;My_USART.c: 81: RC0 = 0;
  3067  01F9D0  9082               	bcf	3970,0,c	;volatile
  3068                           
  3069                           ;My_USART.c: 84: TXREG1 = date_dress[date_lenth];
  3070  01F9D2  0100               	movlb	0	; () banked
  3071  01F9D4  51EC               	movf	RS485_SendDate@date_lenth& (0+255),w,b
  3072  01F9D6  0D01               	mullw	1
  3073  01F9D8  50F3               	movf	prodl,w,c
  3074  01F9DA  0100               	movlb	0	; () banked
  3075  01F9DC  25EA               	addwf	RS485_SendDate@date_dress& (0+255),w,b
  3076  01F9DE  6ED9               	movwf	fsr2l,c
  3077  01F9E0  50F4               	movf	prodh,w,c
  3078  01F9E2  0100               	movlb	0	; () banked
  3079  01F9E4  21EB               	addwfc	(RS485_SendDate@date_dress+1)& (0+255),w,b
  3080  01F9E6  6EDA               	movwf	fsr2h,c
  3081  01F9E8  50DF               	movf	indf2,w,c
  3082  01F9EA  6EAD               	movwf	4013,c	;volatile
  3083                           
  3084                           ;My_USART.c: 85: while( (!TXSTA1bits.TRMT) );
  3085  01F9EC  D000               	goto	l195
  3086  01F9EE                     l195:
  3087  01F9EE  B2AC               	btfsc	4012,1,c	;volatile
  3088  01F9F0  D02E               	goto	l3309
  3089  01F9F2  D7FD               	goto	l195
  3090                           
  3091                           ;My_USART.c: 88: while( date_lenth --)
  3092  01F9F4  D02C               	goto	l3309
  3093  01F9F6                     l3305:
  3094                           
  3095                           ;My_USART.c: 89: {
  3096                           ;My_USART.c: 90: if(date_dress[date_lenth] == 0xff ) date_dress[date_lenth]--;
  3097  01F9F6  0100               	movlb	0	; () banked
  3098  01F9F8  51EC               	movf	RS485_SendDate@date_lenth& (0+255),w,b
  3099  01F9FA  0D01               	mullw	1
  3100  01F9FC  50F3               	movf	prodl,w,c
  3101  01F9FE  0100               	movlb	0	; () banked
  3102  01FA00  25EA               	addwf	RS485_SendDate@date_dress& (0+255),w,b
  3103  01FA02  6ED9               	movwf	fsr2l,c
  3104  01FA04  50F4               	movf	prodh,w,c
  3105  01FA06  0100               	movlb	0	; () banked
  3106  01FA08  21EB               	addwfc	(RS485_SendDate@date_dress+1)& (0+255),w,b
  3107  01FA0A  6EDA               	movwf	fsr2h,c
  3108  01FA0C  28DE               	incf	postinc2,w,c
  3109  01FA0E  A4D8               	btfss	status,2,c
  3110  01FA10  D00C               	goto	l200
  3111                           
  3112                           ; BSR set to: 0
  3113  01FA12  0100               	movlb	0	; () banked
  3114  01FA14  51EC               	movf	RS485_SendDate@date_lenth& (0+255),w,b
  3115  01FA16  0D01               	mullw	1
  3116  01FA18  50F3               	movf	prodl,w,c
  3117  01FA1A  0100               	movlb	0	; () banked
  3118  01FA1C  25EA               	addwf	RS485_SendDate@date_dress& (0+255),w,b
  3119  01FA1E  6ED9               	movwf	fsr2l,c
  3120  01FA20  50F4               	movf	prodh,w,c
  3121  01FA22  0100               	movlb	0	; () banked
  3122  01FA24  21EB               	addwfc	(RS485_SendDate@date_dress+1)& (0+255),w,b
  3123  01FA26  6EDA               	movwf	fsr2h,c
  3124  01FA28  06DF               	decf	indf2,f,c
  3125  01FA2A                     l200:
  3126                           
  3127                           ; BSR set to: 0
  3128                           ;My_USART.c: 91: TXREG1 = date_dress[date_lenth];
  3129  01FA2A  0100               	movlb	0	; () banked
  3130  01FA2C  51EC               	movf	RS485_SendDate@date_lenth& (0+255),w,b
  3131  01FA2E  0D01               	mullw	1
  3132  01FA30  50F3               	movf	prodl,w,c
  3133  01FA32  0100               	movlb	0	; () banked
  3134  01FA34  25EA               	addwf	RS485_SendDate@date_dress& (0+255),w,b
  3135  01FA36  6ED9               	movwf	fsr2l,c
  3136  01FA38  50F4               	movf	prodh,w,c
  3137  01FA3A  0100               	movlb	0	; () banked
  3138  01FA3C  21EB               	addwfc	(RS485_SendDate@date_dress+1)& (0+255),w,b
  3139  01FA3E  6EDA               	movwf	fsr2h,c
  3140  01FA40  50DF               	movf	indf2,w,c
  3141  01FA42  6EAD               	movwf	4013,c	;volatile
  3142                           
  3143                           ;My_USART.c: 92: while( (!TXSTA1bits.TRMT));
  3144  01FA44  D000               	goto	l201
  3145  01FA46                     l201:
  3146  01FA46  B2AC               	btfsc	4012,1,c	;volatile
  3147  01FA48  D002               	goto	l3309
  3148  01FA4A  D7FD               	goto	l201
  3149  01FA4C  D000               	goto	l3309
  3150  01FA4E                     l3309:
  3151  01FA4E  0100               	movlb	0	; () banked
  3152  01FA50  07EC               	decf	RS485_SendDate@date_lenth& (0+255),f,b
  3153  01FA52  0100               	movlb	0	; () banked
  3154  01FA54  29EC               	incf	RS485_SendDate@date_lenth& (0+255),w,b
  3155  01FA56  A4D8               	btfss	status,2,c
  3156  01FA58  D7CE               	goto	l3305
  3157                           
  3158                           ; BSR set to: 0
  3159                           ;My_USART.c: 93: }
  3160                           ;My_USART.c: 95: RC0 = 1;
  3161  01FA5A  8082               	bsf	3970,0,c	;volatile
  3162                           
  3163                           ; BSR set to: 0
  3164                           ;My_USART.c: 96: gs_Switch.RS485_Reply = 0;
  3165  01FA5C  0E00               	movlw	0
  3166  01FA5E  0100               	movlb	0	; () banked
  3167  01FA60  6FCA               	movwf	_gs_Switch& (0+255),b
  3168                           
  3169                           ; BSR set to: 0
  3170  01FA62  0012               	return		;funcret
  3171  01FA64                     __end_of_RS485_SendDate:
  3172                           	opt stack 0
  3173                           tblptru	equ	0xFF8
  3174                           tblptrh	equ	0xFF7
  3175                           tblptrl	equ	0xFF6
  3176                           tablat	equ	0xFF5
  3177                           prodh	equ	0xFF4
  3178                           prodl	equ	0xFF3
  3179                           intcon	equ	0xFF2
  3180                           postinc0	equ	0xFEE
  3181                           wreg	equ	0xFE8
  3182                           postdec1	equ	0xFE5
  3183                           fsr1l	equ	0xFE1
  3184                           indf2	equ	0xFDF
  3185                           postinc2	equ	0xFDE
  3186                           fsr2h	equ	0xFDA
  3187                           fsr2l	equ	0xFD9
  3188                           status	equ	0xFD8
  3189                           
  3190 ;; *************** function _ManageMessage *****************
  3191 ;; Defined at:
  3192 ;;		line 53 in file "_01_USER/Run.c"
  3193 ;; Parameters:    Size  Location     Type
  3194 ;;		None
  3195 ;; Auto vars:     Size  Location     Type
  3196 ;;		None
  3197 ;; Return value:  Size  Location     Type
  3198 ;;		None               void
  3199 ;; Registers used:
  3200 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  3201 ;; Tracked objects:
  3202 ;;		On entry : 0/0
  3203 ;;		On exit  : 0/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3210 ;;Total ram usage:        0 bytes
  3211 ;; Hardware stack levels used:    1
  3212 ;; Hardware stack levels required when called:    5
  3213 ;; This function calls:
  3214 ;;		_Key_Inquiry
  3215 ;;		_RS485_AnalysisData
  3216 ;;		_RS485_Inquiry
  3217 ;;		_RS485_RecogniseMessage
  3218 ;; This function is called by:
  3219 ;;		_main
  3220 ;; This function uses a non-reentrant model
  3221 ;;
  3222                           
  3223                           	psect	text21
  3224  01F172                     __ptext21:
  3225                           	opt stack 0
  3226  01F172                     _ManageMessage:
  3227                           	opt stack 25
  3228                           
  3229                           ;Run.c: 55: RS485_Inquiry();
  3230                           
  3231                           ; BSR set to: 0
  3232                           ;incstack = 0
  3233  01F172  EC00  F000         	call	_RS485_Inquiry	;wreg free
  3234                           
  3235                           ;Run.c: 56: Key_Inquiry();
  3236  01F176  EC2E  F0FE         	call	_Key_Inquiry	;wreg free
  3237                           
  3238                           ;Run.c: 57: RS485_RecogniseMessage(ga_RS485_ReceiveBuff,RS485_DATA_LENTH);
  3239  01F17A  0E00               	movlw	low _ga_RS485_ReceiveBuff
  3240  01F17C  0100               	movlb	0	; () banked
  3241  01F17E  6FE7               	movwf	_RS485_RecogniseMessage$0& (0+255),b
  3242  01F180  0E00               	movlw	high _ga_RS485_ReceiveBuff
  3243  01F182  0100               	movlb	0	; () banked
  3244  01F184  6FE8               	movwf	(_RS485_RecogniseMessage$0+1)& (0+255),b
  3245  01F186  0E07               	movlw	7
  3246  01F188  0100               	movlb	0	; () banked
  3247  01F18A  6FE9               	movwf	_RS485_RecogniseMessage$1& (0+255),b
  3248  01F18C  EC00  F000         	call	_RS485_RecogniseMessage	;wreg free
  3249                           
  3250                           ;Run.c: 58: RS485_AnalysisData();
  3251  01F190  EC00  F000         	call	_RS485_AnalysisData	;wreg free
  3252  01F194  0012               	return		;funcret
  3253  01F196                     __end_of_ManageMessage:
  3254                           	opt stack 0
  3255                           tblptru	equ	0xFF8
  3256                           tblptrh	equ	0xFF7
  3257                           tblptrl	equ	0xFF6
  3258                           tablat	equ	0xFF5
  3259                           prodh	equ	0xFF4
  3260                           prodl	equ	0xFF3
  3261                           intcon	equ	0xFF2
  3262                           postinc0	equ	0xFEE
  3263                           wreg	equ	0xFE8
  3264                           postdec1	equ	0xFE5
  3265                           fsr1l	equ	0xFE1
  3266                           indf2	equ	0xFDF
  3267                           postinc2	equ	0xFDE
  3268                           fsr2h	equ	0xFDA
  3269                           fsr2l	equ	0xFD9
  3270                           status	equ	0xFD8
  3271                           
  3272 ;; *************** function _Key_Inquiry *****************
  3273 ;; Defined at:
  3274 ;;		line 182 in file "_01_USER/Key.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;		None
  3277 ;; Auto vars:     Size  Location     Type
  3278 ;;		None
  3279 ;; Return value:  Size  Location     Type
  3280 ;;		None               void
  3281 ;; Registers used:
  3282 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3290 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3291 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3292 ;;Total ram usage:        4 bytes
  3293 ;; Hardware stack levels used:    1
  3294 ;; Hardware stack levels required when called:    4
  3295 ;; This function calls:
  3296 ;;		_Key_ReadFSM
  3297 ;;		_Key_ResetFSM
  3298 ;;		___lbmod
  3299 ;; This function is called by:
  3300 ;;		_ManageMessage
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304                           	psect	text22
  3305  01FC5C                     __ptext22:
  3306                           	opt stack 0
  3307  01FC5C                     _Key_Inquiry:
  3308                           	opt stack 25
  3309                           
  3310                           ;Key.c: 184: Key_ReadFSM();
  3311                           
  3312                           ;incstack = 0
  3313  01FC5C  EC10  F0FF         	call	_Key_ReadFSM	;wreg free
  3314                           
  3315                           ;Key.c: 186: if ( gs_Local_Key_User.key_group == ((0x01<<3)|(0x01<<4)) && gs_Local_Key_U
      +                          ser.key_group_state == KEY_short )
  3316  01FC60  0E18               	movlw	24
  3317  01FC62  180E               	xorwf	_gs_Local_Key_User+1,w,c	;volatile
  3318  01FC64  A4D8               	btfss	status,2,c
  3319  01FC66  D024               	goto	l3205
  3320  01FC68  040F               	decf	_gs_Local_Key_User+2,w,c	;volatile
  3321  01FC6A  A4D8               	btfss	status,2,c
  3322  01FC6C  D021               	goto	l3205
  3323                           
  3324                           ;Key.c: 187: {
  3325                           ;Key.c: 188: gs_Switch.a_Relay[g_RS485_Byte - 1] = 1;
  3326  01FC6E  0EFF               	movlw	255
  3327  01FC70  0100               	movlb	0	; () banked
  3328  01FC72  6FED               	movwf	??_Key_Inquiry& (0+255),b
  3329  01FC74  0EFF               	movlw	255
  3330  01FC76  0100               	movlb	0	; () banked
  3331  01FC78  6FEE               	movwf	(??_Key_Inquiry+1)& (0+255),b
  3332  01FC7A  EE20  F000         	lfsr	2,_g_RS485_Byte
  3333  01FC7E  50DF               	movf	indf2,w,c
  3334  01FC80  0100               	movlb	0	; () banked
  3335  01FC82  6FEF               	movwf	(??_Key_Inquiry+2)& (0+255),b
  3336  01FC84  6BF0               	clrf	(??_Key_Inquiry+3)& (0+255),b
  3337  01FC86  0100               	movlb	0	; () banked
  3338  01FC88  51ED               	movf	??_Key_Inquiry& (0+255),w,b
  3339  01FC8A  0100               	movlb	0	; () banked
  3340  01FC8C  27EF               	addwf	(??_Key_Inquiry+2)& (0+255),f,b
  3341  01FC8E  0100               	movlb	0	; () banked
  3342  01FC90  51EE               	movf	(??_Key_Inquiry+1)& (0+255),w,b
  3343  01FC92  0100               	movlb	0	; () banked
  3344  01FC94  23F0               	addwfc	(??_Key_Inquiry+3)& (0+255),f,b
  3345  01FC96  0ECC               	movlw	low (_gs_Switch+2)
  3346  01FC98  0100               	movlb	0	; () banked
  3347  01FC9A  25EF               	addwf	(??_Key_Inquiry+2)& (0+255),w,b
  3348  01FC9C  6ED9               	movwf	fsr2l,c
  3349  01FC9E  0E00               	movlw	high (_gs_Switch+2)
  3350  01FCA0  0100               	movlb	0	; () banked
  3351  01FCA2  21F0               	addwfc	(??_Key_Inquiry+3)& (0+255),w,b
  3352  01FCA4  6EDA               	movwf	fsr2h,c
  3353  01FCA6  0E01               	movlw	1
  3354  01FCA8  6EDF               	movwf	indf2,c
  3355                           
  3356                           ; BSR set to: 0
  3357                           ;Key.c: 189: Key_ResetFSM();
  3358  01FCAA  EC8E  F0FA         	call	_Key_ResetFSM	;wreg free
  3359  01FCAE  D000               	goto	l3205
  3360  01FCB0                     l3205:
  3361                           
  3362                           ;Key.c: 190: }
  3363                           ;Key.c: 192: if ( gs_Local_Key_User.key_group == ((0x01<<4)|(0x01<<5)) && gs_Local_Key_U
      +                          ser.key_group_state == KEY_short )
  3364  01FCB0  0E30               	movlw	48
  3365  01FCB2  180E               	xorwf	_gs_Local_Key_User+1,w,c	;volatile
  3366  01FCB4  A4D8               	btfss	status,2,c
  3367  01FCB6  D024               	goto	l3213
  3368  01FCB8  040F               	decf	_gs_Local_Key_User+2,w,c	;volatile
  3369  01FCBA  A4D8               	btfss	status,2,c
  3370  01FCBC  D021               	goto	l3213
  3371                           
  3372                           ;Key.c: 193: {
  3373                           ;Key.c: 195: gs_Switch.a_Relay[g_RS485_Byte - 1] = 0;
  3374  01FCBE  0EFF               	movlw	255
  3375  01FCC0  0100               	movlb	0	; () banked
  3376  01FCC2  6FED               	movwf	??_Key_Inquiry& (0+255),b
  3377  01FCC4  0EFF               	movlw	255
  3378  01FCC6  0100               	movlb	0	; () banked
  3379  01FCC8  6FEE               	movwf	(??_Key_Inquiry+1)& (0+255),b
  3380  01FCCA  EE20  F000         	lfsr	2,_g_RS485_Byte
  3381  01FCCE  50DF               	movf	indf2,w,c
  3382  01FCD0  0100               	movlb	0	; () banked
  3383  01FCD2  6FEF               	movwf	(??_Key_Inquiry+2)& (0+255),b
  3384  01FCD4  6BF0               	clrf	(??_Key_Inquiry+3)& (0+255),b
  3385  01FCD6  0100               	movlb	0	; () banked
  3386  01FCD8  51ED               	movf	??_Key_Inquiry& (0+255),w,b
  3387  01FCDA  0100               	movlb	0	; () banked
  3388  01FCDC  27EF               	addwf	(??_Key_Inquiry+2)& (0+255),f,b
  3389  01FCDE  0100               	movlb	0	; () banked
  3390  01FCE0  51EE               	movf	(??_Key_Inquiry+1)& (0+255),w,b
  3391  01FCE2  0100               	movlb	0	; () banked
  3392  01FCE4  23F0               	addwfc	(??_Key_Inquiry+3)& (0+255),f,b
  3393  01FCE6  0ECC               	movlw	low (_gs_Switch+2)
  3394  01FCE8  0100               	movlb	0	; () banked
  3395  01FCEA  25EF               	addwf	(??_Key_Inquiry+2)& (0+255),w,b
  3396  01FCEC  6ED9               	movwf	fsr2l,c
  3397  01FCEE  0E00               	movlw	high (_gs_Switch+2)
  3398  01FCF0  0100               	movlb	0	; () banked
  3399  01FCF2  21F0               	addwfc	(??_Key_Inquiry+3)& (0+255),w,b
  3400  01FCF4  6EDA               	movwf	fsr2h,c
  3401  01FCF6  0E00               	movlw	0
  3402  01FCF8  6EDF               	movwf	indf2,c
  3403                           
  3404                           ; BSR set to: 0
  3405                           ;Key.c: 196: Key_ResetFSM();
  3406  01FCFA  EC8E  F0FA         	call	_Key_ResetFSM	;wreg free
  3407  01FCFE  D000               	goto	l3213
  3408  01FD00                     l3213:
  3409                           
  3410                           ;Key.c: 197: }
  3411                           ;Key.c: 200: if (gs_Local_Key_User.a_key_state[1-1] == KEY_short) g_RS485_Byte ++ ;
  3412  01FD00  041C               	decf	_gs_Local_Key_User+15,w,c	;volatile
  3413  01FD02  A4D8               	btfss	status,2,c
  3414  01FD04  D006               	goto	l3217
  3415  01FD06  C000  FFE8         	movff	_g_RS485_Byte,wreg
  3416  01FD0A  0F01               	addlw	1
  3417  01FD0C  CFE8 F000          	movff	wreg,_g_RS485_Byte
  3418  01FD10  D000               	goto	l3217
  3419  01FD12                     l3217:
  3420                           
  3421                           ;Key.c: 201: if (gs_Local_Key_User.a_key_state[1-1] == KEY_hold) g_RS485_Byte ++ ;
  3422  01FD12  0E03               	movlw	3
  3423  01FD14  181C               	xorwf	_gs_Local_Key_User+15,w,c	;volatile
  3424  01FD16  A4D8               	btfss	status,2,c
  3425  01FD18  D006               	goto	l3221
  3426  01FD1A  C000  FFE8         	movff	_g_RS485_Byte,wreg
  3427  01FD1E  0F01               	addlw	1
  3428  01FD20  CFE8 F000          	movff	wreg,_g_RS485_Byte
  3429  01FD24  D000               	goto	l3221
  3430  01FD26                     l3221:
  3431                           
  3432                           ;Key.c: 204: if (gs_Local_Key_User.a_key_state[2-1] == KEY_short) gs_Switch.Show_Send_Re
      +                          ceive = ~gs_Switch.Show_Send_Receive;
  3433  01FD26  041D               	decf	_gs_Local_Key_User+16,w,c	;volatile
  3434  01FD28  A4D8               	btfss	status,2,c
  3435  01FD2A  D005               	goto	l158
  3436  01FD2C  0100               	movlb	0	; () banked
  3437  01FD2E  51CB               	movf	(_gs_Switch+1)& (0+255),w,b
  3438  01FD30  0AFF               	xorlw	255
  3439  01FD32  0100               	movlb	0	; () banked
  3440  01FD34  6FCB               	movwf	(_gs_Switch+1)& (0+255),b
  3441  01FD36                     l158:
  3442                           
  3443                           ;Key.c: 207: if (gs_Local_Key_User.a_key_state[3-1] == KEY_short) g_RS485_Byte -- ;
  3444  01FD36  041E               	decf	_gs_Local_Key_User+17,w,c	;volatile
  3445  01FD38  A4D8               	btfss	status,2,c
  3446  01FD3A  D006               	goto	l3227
  3447  01FD3C  C000  FFE8         	movff	_g_RS485_Byte,wreg
  3448  01FD40  0FFF               	addlw	-1
  3449  01FD42  CFE8 F000          	movff	wreg,_g_RS485_Byte
  3450  01FD46  D000               	goto	l3227
  3451  01FD48                     l3227:
  3452                           
  3453                           ;Key.c: 208: if (gs_Local_Key_User.a_key_state[3-1] == KEY_hold) g_RS485_Byte -- ;
  3454  01FD48  0E03               	movlw	3
  3455  01FD4A  181E               	xorwf	_gs_Local_Key_User+17,w,c	;volatile
  3456  01FD4C  A4D8               	btfss	status,2,c
  3457  01FD4E  D006               	goto	l3231
  3458  01FD50  C000  FFE8         	movff	_g_RS485_Byte,wreg
  3459  01FD54  0FFF               	addlw	-1
  3460  01FD56  CFE8 F000          	movff	wreg,_g_RS485_Byte
  3461  01FD5A  D000               	goto	l3231
  3462  01FD5C                     l3231:
  3463                           
  3464                           ;Key.c: 211: if (gs_Local_Key_User.a_key_state[4-1] == KEY_short) ga_RS485_SendBuff[g_RS
      +                          485_Byte] ++ ;
  3465  01FD5C  041F               	decf	_gs_Local_Key_User+18,w,c	;volatile
  3466  01FD5E  A4D8               	btfss	status,2,c
  3467  01FD60  D00D               	goto	l3235
  3468  01FD62  C000  F0ED         	movff	_g_RS485_Byte,??_Key_Inquiry
  3469  01FD66  0100               	movlb	0	; () banked
  3470  01FD68  51ED               	movf	??_Key_Inquiry& (0+255),w,b
  3471  01FD6A  0D01               	mullw	1
  3472  01FD6C  0E00               	movlw	low _ga_RS485_SendBuff
  3473  01FD6E  24F3               	addwf	prodl,w,c
  3474  01FD70  6ED9               	movwf	fsr2l,c
  3475  01FD72  0E00               	movlw	high _ga_RS485_SendBuff
  3476  01FD74  20F4               	addwfc	prodh,w,c
  3477  01FD76  6EDA               	movwf	fsr2h,c
  3478  01FD78  2ADF               	incf	indf2,f,c
  3479  01FD7A  D000               	goto	l3235
  3480  01FD7C                     l3235:
  3481                           
  3482                           ;Key.c: 212: if (gs_Local_Key_User.a_key_state[4-1] == KEY_hold) ga_RS485_SendBuff[g_RS4
      +                          85_Byte] ++ ;
  3483  01FD7C  0E03               	movlw	3
  3484  01FD7E  181F               	xorwf	_gs_Local_Key_User+18,w,c	;volatile
  3485  01FD80  A4D8               	btfss	status,2,c
  3486  01FD82  D00D               	goto	l3239
  3487  01FD84  C000  F0ED         	movff	_g_RS485_Byte,??_Key_Inquiry
  3488  01FD88  0100               	movlb	0	; () banked
  3489  01FD8A  51ED               	movf	??_Key_Inquiry& (0+255),w,b
  3490  01FD8C  0D01               	mullw	1
  3491  01FD8E  0E00               	movlw	low _ga_RS485_SendBuff
  3492  01FD90  24F3               	addwf	prodl,w,c
  3493  01FD92  6ED9               	movwf	fsr2l,c
  3494  01FD94  0E00               	movlw	high _ga_RS485_SendBuff
  3495  01FD96  20F4               	addwfc	prodh,w,c
  3496  01FD98  6EDA               	movwf	fsr2h,c
  3497  01FD9A  2ADF               	incf	indf2,f,c
  3498  01FD9C  D000               	goto	l3239
  3499  01FD9E                     l3239:
  3500                           
  3501                           ;Key.c: 215: if (gs_Local_Key_User.a_key_state[5-1] == KEY_short)
  3502  01FD9E  0420               	decf	_gs_Local_Key_User+19,w,c	;volatile
  3503  01FDA0  A4D8               	btfss	status,2,c
  3504  01FDA2  D004               	goto	l3243
  3505                           
  3506                           ;Key.c: 216: gs_Switch.RS485_Reply = 1;
  3507  01FDA4  0E01               	movlw	1
  3508  01FDA6  0100               	movlb	0	; () banked
  3509  01FDA8  6FCA               	movwf	_gs_Switch& (0+255),b
  3510  01FDAA  D000               	goto	l3243
  3511  01FDAC                     l3243:
  3512                           
  3513                           ;Key.c: 219: if (gs_Local_Key_User.a_key_state[6-1] == KEY_short) ga_RS485_SendBuff[g_RS
      +                          485_Byte] -- ;
  3514  01FDAC  0421               	decf	_gs_Local_Key_User+20,w,c	;volatile
  3515  01FDAE  A4D8               	btfss	status,2,c
  3516  01FDB0  D00D               	goto	l3247
  3517  01FDB2  C000  F0ED         	movff	_g_RS485_Byte,??_Key_Inquiry
  3518  01FDB6  0100               	movlb	0	; () banked
  3519  01FDB8  51ED               	movf	??_Key_Inquiry& (0+255),w,b
  3520  01FDBA  0D01               	mullw	1
  3521  01FDBC  0E00               	movlw	low _ga_RS485_SendBuff
  3522  01FDBE  24F3               	addwf	prodl,w,c
  3523  01FDC0  6ED9               	movwf	fsr2l,c
  3524  01FDC2  0E00               	movlw	high _ga_RS485_SendBuff
  3525  01FDC4  20F4               	addwfc	prodh,w,c
  3526  01FDC6  6EDA               	movwf	fsr2h,c
  3527  01FDC8  06DF               	decf	indf2,f,c
  3528  01FDCA  D000               	goto	l3247
  3529  01FDCC                     l3247:
  3530                           
  3531                           ;Key.c: 220: if (gs_Local_Key_User.a_key_state[6-1] == KEY_hold) ga_RS485_SendBuff[g_RS4
      +                          85_Byte] -- ;
  3532  01FDCC  0E03               	movlw	3
  3533  01FDCE  1821               	xorwf	_gs_Local_Key_User+20,w,c	;volatile
  3534  01FDD0  A4D8               	btfss	status,2,c
  3535  01FDD2  D00D               	goto	l3251
  3536  01FDD4  C000  F0ED         	movff	_g_RS485_Byte,??_Key_Inquiry
  3537  01FDD8  0100               	movlb	0	; () banked
  3538  01FDDA  51ED               	movf	??_Key_Inquiry& (0+255),w,b
  3539  01FDDC  0D01               	mullw	1
  3540  01FDDE  0E00               	movlw	low _ga_RS485_SendBuff
  3541  01FDE0  24F3               	addwf	prodl,w,c
  3542  01FDE2  6ED9               	movwf	fsr2l,c
  3543  01FDE4  0E00               	movlw	high _ga_RS485_SendBuff
  3544  01FDE6  20F4               	addwfc	prodh,w,c
  3545  01FDE8  6EDA               	movwf	fsr2h,c
  3546  01FDEA  06DF               	decf	indf2,f,c
  3547  01FDEC  D000               	goto	l3251
  3548  01FDEE                     l3251:
  3549                           
  3550                           ;Key.c: 224: if( g_RS485_Byte > 250 ) g_RS485_Byte = RS485_DATA_LENTH - 1;
  3551  01FDEE  EE20  F000         	lfsr	2,_g_RS485_Byte
  3552  01FDF2  0EFA               	movlw	250
  3553  01FDF4  64DF               	cpfsgt	indf2,c
  3554  01FDF6  D004               	goto	l3255
  3555  01FDF8  0E06               	movlw	6
  3556  01FDFA  CFE8 F000          	movff	wreg,_g_RS485_Byte
  3557  01FDFE  D00D               	goto	l3257
  3558  01FE00                     l3255:
  3559                           
  3560                           ;Key.c: 225: else g_RS485_Byte %= RS485_DATA_LENTH;
  3561  01FE00  0E07               	movlw	7
  3562  01FE02  0100               	movlb	0	; () banked
  3563  01FE04  6FE7               	movwf	___lbmod@divisor& (0+255),b
  3564  01FE06  EE20  F000         	lfsr	2,_g_RS485_Byte
  3565  01FE0A  50DF               	movf	indf2,w,c
  3566  01FE0C  EC42  F0FA         	call	___lbmod
  3567  01FE10  0100               	movlb	0	; () banked
  3568  01FE12  6FED               	movwf	??_Key_Inquiry& (0+255),b
  3569  01FE14  C0ED  F000         	movff	??_Key_Inquiry,_g_RS485_Byte
  3570  01FE18  D000               	goto	l3257
  3571  01FE1A                     l3257:
  3572                           
  3573                           ;Key.c: 228: Key_ResetFSM();
  3574  01FE1A  EC8E  F0FA         	call	_Key_ResetFSM	;wreg free
  3575  01FE1E  0012               	return		;funcret
  3576  01FE20                     __end_of_Key_Inquiry:
  3577                           	opt stack 0
  3578                           tblptru	equ	0xFF8
  3579                           tblptrh	equ	0xFF7
  3580                           tblptrl	equ	0xFF6
  3581                           tablat	equ	0xFF5
  3582                           prodh	equ	0xFF4
  3583                           prodl	equ	0xFF3
  3584                           intcon	equ	0xFF2
  3585                           postinc0	equ	0xFEE
  3586                           wreg	equ	0xFE8
  3587                           postdec1	equ	0xFE5
  3588                           fsr1l	equ	0xFE1
  3589                           indf2	equ	0xFDF
  3590                           postinc2	equ	0xFDE
  3591                           fsr2h	equ	0xFDA
  3592                           fsr2l	equ	0xFD9
  3593                           status	equ	0xFD8
  3594                           
  3595 ;; *************** function ___lbmod *****************
  3596 ;; Defined at:
  3597 ;;		line 4 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbmod.c"
  3598 ;; Parameters:    Size  Location     Type
  3599 ;;  dividend        1    wreg     unsigned char 
  3600 ;;  divisor         1    0[BANK0 ] unsigned char 
  3601 ;; Auto vars:     Size  Location     Type
  3602 ;;  dividend        1    1[BANK0 ] unsigned char 
  3603 ;;  rem             1    3[BANK0 ] unsigned char 
  3604 ;;  counter         1    2[BANK0 ] unsigned char 
  3605 ;; Return value:  Size  Location     Type
  3606 ;;                  1    wreg      unsigned char 
  3607 ;; Registers used:
  3608 ;;		wreg, status,2, status,0
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3614 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3615 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3617 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3618 ;;Total ram usage:        4 bytes
  3619 ;; Hardware stack levels used:    1
  3620 ;; Hardware stack levels required when called:    3
  3621 ;; This function calls:
  3622 ;;		Nothing
  3623 ;; This function is called by:
  3624 ;;		_Key_Inquiry
  3625 ;; This function uses a non-reentrant model
  3626 ;;
  3627                           
  3628                           	psect	text23
  3629  01F484                     __ptext23:
  3630                           	opt stack 0
  3631  01F484                     ___lbmod:
  3632                           	opt stack 25
  3633                           
  3634                           ;incstack = 0
  3635                           ;___lbmod@dividend stored from wreg
  3636  01F484  0100               	movlb	0	; () banked
  3637  01F486  6FE8               	movwf	___lbmod@dividend& (0+255),b
  3638                           
  3639                           ; BSR set to: 0
  3640  01F488  0E08               	movlw	8
  3641  01F48A  0100               	movlb	0	; () banked
  3642  01F48C  6FE9               	movwf	___lbmod@counter& (0+255),b
  3643  01F48E  0E00               	movlw	0
  3644  01F490  0100               	movlb	0	; () banked
  3645  01F492  6FEA               	movwf	___lbmod@rem& (0+255),b
  3646  01F494  D000               	goto	l3143
  3647  01F496                     l3143:
  3648                           
  3649                           ; BSR set to: 0
  3650  01F496  90D8               	bcf	status,0,c
  3651  01F498  0100               	movlb	0	; () banked
  3652  01F49A  35E8               	rlcf	___lbmod@dividend& (0+255),w,b
  3653  01F49C  0100               	movlb	0	; () banked
  3654  01F49E  35EA               	rlcf	___lbmod@rem& (0+255),w,b
  3655  01F4A0  0100               	movlb	0	; () banked
  3656  01F4A2  6FEA               	movwf	___lbmod@rem& (0+255),b
  3657                           
  3658                           ; BSR set to: 0
  3659  01F4A4  0100               	movlb	0	; () banked
  3660  01F4A6  90D8               	bcf	status,0,c
  3661  01F4A8  37E8               	rlcf	___lbmod@dividend& (0+255),f,b
  3662                           
  3663                           ; BSR set to: 0
  3664  01F4AA  0100               	movlb	0	; () banked
  3665  01F4AC  51E7               	movf	___lbmod@divisor& (0+255),w,b
  3666  01F4AE  0100               	movlb	0	; () banked
  3667  01F4B0  5DEA               	subwf	___lbmod@rem& (0+255),w,b
  3668  01F4B2  A0D8               	btfss	status,0,c
  3669  01F4B4  D005               	goto	l3151
  3670                           
  3671                           ; BSR set to: 0
  3672  01F4B6  0100               	movlb	0	; () banked
  3673  01F4B8  51E7               	movf	___lbmod@divisor& (0+255),w,b
  3674  01F4BA  0100               	movlb	0	; () banked
  3675  01F4BC  5FEA               	subwf	___lbmod@rem& (0+255),f,b
  3676  01F4BE  D000               	goto	l3151
  3677  01F4C0                     l3151:
  3678                           
  3679                           ; BSR set to: 0
  3680  01F4C0  0100               	movlb	0	; () banked
  3681  01F4C2  2FE9               	decfsz	___lbmod@counter& (0+255),f,b
  3682  01F4C4  D7E8               	goto	l3143
  3683  01F4C6  D000               	goto	l3153
  3684  01F4C8                     l3153:
  3685                           
  3686                           ; BSR set to: 0
  3687  01F4C8  0100               	movlb	0	; () banked
  3688  01F4CA  51EA               	movf	___lbmod@rem& (0+255),w,b
  3689  01F4CC  0012               	return	
  3690                           
  3691                           ; BSR set to: 0
  3692                           
  3693                           ; BSR set to: 0
  3694  01F4CE  0012               	return		;funcret
  3695  01F4D0                     __end_of___lbmod:
  3696                           	opt stack 0
  3697                           tblptru	equ	0xFF8
  3698                           tblptrh	equ	0xFF7
  3699                           tblptrl	equ	0xFF6
  3700                           tablat	equ	0xFF5
  3701                           prodh	equ	0xFF4
  3702                           prodl	equ	0xFF3
  3703                           intcon	equ	0xFF2
  3704                           postinc0	equ	0xFEE
  3705                           wreg	equ	0xFE8
  3706                           postdec1	equ	0xFE5
  3707                           fsr1l	equ	0xFE1
  3708                           indf2	equ	0xFDF
  3709                           postinc2	equ	0xFDE
  3710                           fsr2h	equ	0xFDA
  3711                           fsr2l	equ	0xFD9
  3712                           status	equ	0xFD8
  3713                           
  3714 ;; *************** function _Key_ResetFSM *****************
  3715 ;; Defined at:
  3716 ;;		line 162 in file "_01_USER/Key.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;		None
  3719 ;; Auto vars:     Size  Location     Type
  3720 ;;  t               1    0[BANK0 ] unsigned char 
  3721 ;; Return value:  Size  Location     Type
  3722 ;;		None               void
  3723 ;; Registers used:
  3724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3725 ;; Tracked objects:
  3726 ;;		On entry : 0/0
  3727 ;;		On exit  : 0/0
  3728 ;;		Unchanged: 0/0
  3729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3731 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3733 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3734 ;;Total ram usage:        1 bytes
  3735 ;; Hardware stack levels used:    1
  3736 ;; Hardware stack levels required when called:    3
  3737 ;; This function calls:
  3738 ;;		Nothing
  3739 ;; This function is called by:
  3740 ;;		_Key_Inquiry
  3741 ;; This function uses a non-reentrant model
  3742 ;;
  3743                           
  3744                           	psect	text24
  3745  01F51C                     __ptext24:
  3746                           	opt stack 0
  3747  01F51C                     _Key_ResetFSM:
  3748                           	opt stack 25
  3749                           
  3750                           ;Key.c: 164: unsigned char t;
  3751                           ;Key.c: 165: gs_Local_Key_User.key_BUS = 0x00;
  3752                           
  3753                           ; BSR set to: 0
  3754                           ;incstack = 0
  3755  01F51C  0E00               	movlw	0
  3756  01F51E  6E0D               	movwf	_gs_Local_Key_User,c	;volatile
  3757                           
  3758                           ;Key.c: 166: gs_Local_Key_User.key_group = KEY_default;
  3759  01F520  0E00               	movlw	0
  3760  01F522  6E0E               	movwf	_gs_Local_Key_User+1,c	;volatile
  3761                           
  3762                           ;Key.c: 167: t=4;
  3763  01F524  0E04               	movlw	4
  3764  01F526  0100               	movlb	0	; () banked
  3765  01F528  6FE7               	movwf	Key_ResetFSM@t& (0+255),b
  3766                           
  3767                           ;Key.c: 168: while(t--) gs_Local_Key_User.a_key_count[t] = 0,
  3768  01F52A  D019               	goto	l3099
  3769  01F52C                     l3097:
  3770                           
  3771                           ; BSR set to: 0
  3772                           ;Key.c: 169: gs_Local_Key_User.a_key_state[t] = KEY_default;
  3773  01F52C  0100               	movlb	0	; () banked
  3774  01F52E  51E7               	movf	Key_ResetFSM@t& (0+255),w,b
  3775  01F530  0D02               	mullw	2
  3776  01F532  0E10               	movlw	low (_gs_Local_Key_User+3)
  3777  01F534  24F3               	addwf	prodl,w,c
  3778  01F536  6ED9               	movwf	fsr2l,c
  3779  01F538  0E00               	movlw	high (_gs_Local_Key_User+3)
  3780  01F53A  20F4               	addwfc	prodh,w,c
  3781  01F53C  6EDA               	movwf	fsr2h,c
  3782  01F53E  0E00               	movlw	0
  3783  01F540  6EDE               	movwf	postinc2,c
  3784  01F542  0E00               	movlw	0
  3785  01F544  6EDD               	movwf	postdec2,c
  3786  01F546  0100               	movlb	0	; () banked
  3787  01F548  51E7               	movf	Key_ResetFSM@t& (0+255),w,b
  3788  01F54A  0D01               	mullw	1
  3789  01F54C  0E1C               	movlw	low (_gs_Local_Key_User+15)
  3790  01F54E  24F3               	addwf	prodl,w,c
  3791  01F550  6ED9               	movwf	fsr2l,c
  3792  01F552  0E00               	movlw	high (_gs_Local_Key_User+15)
  3793  01F554  20F4               	addwfc	prodh,w,c
  3794  01F556  6EDA               	movwf	fsr2h,c
  3795  01F558  0E00               	movlw	0
  3796  01F55A  6EDF               	movwf	indf2,c
  3797  01F55C  D000               	goto	l3099
  3798  01F55E                     l3099:
  3799                           
  3800                           ; BSR set to: 0
  3801  01F55E  0100               	movlb	0	; () banked
  3802  01F560  07E7               	decf	Key_ResetFSM@t& (0+255),f,b
  3803  01F562  0100               	movlb	0	; () banked
  3804  01F564  29E7               	incf	Key_ResetFSM@t& (0+255),w,b
  3805  01F566  A4D8               	btfss	status,2,c
  3806  01F568  D7E1               	goto	l3097
  3807                           
  3808                           ; BSR set to: 0
  3809                           
  3810                           ; BSR set to: 0
  3811  01F56A  0012               	return		;funcret
  3812  01F56C                     __end_of_Key_ResetFSM:
  3813                           	opt stack 0
  3814                           tblptru	equ	0xFF8
  3815                           tblptrh	equ	0xFF7
  3816                           tblptrl	equ	0xFF6
  3817                           tablat	equ	0xFF5
  3818                           prodh	equ	0xFF4
  3819                           prodl	equ	0xFF3
  3820                           intcon	equ	0xFF2
  3821                           postinc0	equ	0xFEE
  3822                           wreg	equ	0xFE8
  3823                           postdec1	equ	0xFE5
  3824                           fsr1l	equ	0xFE1
  3825                           indf2	equ	0xFDF
  3826                           postinc2	equ	0xFDE
  3827                           postdec2	equ	0xFDD
  3828                           fsr2h	equ	0xFDA
  3829                           fsr2l	equ	0xFD9
  3830                           status	equ	0xFD8
  3831                           
  3832 ;; *************** function _Key_ReadFSM *****************
  3833 ;; Defined at:
  3834 ;;		line 113 in file "_01_USER/Key.c"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;		None
  3837 ;; Auto vars:     Size  Location     Type
  3838 ;;  key_num         1    5[BANK0 ] unsigned char 
  3839 ;;  key_num_mate    1    4[BANK0 ] unsigned char 
  3840 ;; Return value:  Size  Location     Type
  3841 ;;		None               void
  3842 ;; Registers used:
  3843 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3844 ;; Tracked objects:
  3845 ;;		On entry : 0/0
  3846 ;;		On exit  : 0/0
  3847 ;;		Unchanged: 0/0
  3848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3850 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3851 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3852 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3853 ;;Total ram usage:        6 bytes
  3854 ;; Hardware stack levels used:    1
  3855 ;; Hardware stack levels required when called:    3
  3856 ;; This function calls:
  3857 ;;		Nothing
  3858 ;; This function is called by:
  3859 ;;		_Key_Inquiry
  3860 ;; This function uses a non-reentrant model
  3861 ;;
  3862                           
  3863                           	psect	text25
  3864  01FE20                     __ptext25:
  3865                           	opt stack 0
  3866  01FE20                     _Key_ReadFSM:
  3867                           	opt stack 25
  3868                           
  3869                           ;Key.c: 115: unsigned char key_num = 6,key_num_mate;
  3870                           
  3871                           ; BSR set to: 0
  3872                           ;incstack = 0
  3873  01FE20  0E06               	movlw	6
  3874  01FE22  0100               	movlb	0	; () banked
  3875  01FE24  6FEC               	movwf	Key_ReadFSM@key_num& (0+255),b
  3876                           
  3877                           ;Key.c: 118: while(key_num--)
  3878  01FE26  D07A               	goto	l3067
  3879  01FE28                     l3049:
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;Key.c: 119: {
  3883                           ;Key.c: 121: if( s_Local_Key_FSM.key_BUS == 0x00 )
  3884  01FE28  5022               	movf	_s_Local_Key_FSM,w,c	;volatile
  3885  01FE2A  A4D8               	btfss	status,2,c
  3886  01FE2C  D050               	goto	l3061
  3887                           
  3888                           ; BSR set to: 0
  3889                           ;Key.c: 122: {
  3890                           ;Key.c: 123: if( s_Local_Key_FSM.a_key_count[key_num] > 5 )
  3891  01FE2E  0100               	movlb	0	; () banked
  3892  01FE30  51EC               	movf	Key_ReadFSM@key_num& (0+255),w,b
  3893  01FE32  0D02               	mullw	2
  3894  01FE34  0E25               	movlw	low (_s_Local_Key_FSM+3)
  3895  01FE36  24F3               	addwf	prodl,w,c
  3896  01FE38  6ED9               	movwf	fsr2l,c
  3897  01FE3A  0E00               	movlw	high (_s_Local_Key_FSM+3)
  3898  01FE3C  20F4               	addwfc	prodh,w,c
  3899  01FE3E  6EDA               	movwf	fsr2h,c
  3900  01FE40  0E01               	movlw	1
  3901  01FE42  50DB               	movf	plusw2,w,c
  3902  01FE44  E104               	bnz	u3150
  3903  01FE46  0E06               	movlw	6
  3904  01FE48  5CDE               	subwf	postinc2,w,c
  3905  01FE4A  A0D8               	btfss	status,0,c
  3906  01FE4C  D027               	goto	l3059
  3907  01FE4E                     u3150:
  3908                           
  3909                           ; BSR set to: 0
  3910                           ;Key.c: 124: {
  3911                           ;Key.c: 125: if( s_Local_Key_FSM.a_key_count[key_num] > 60 )
  3912  01FE4E  0100               	movlb	0	; () banked
  3913  01FE50  51EC               	movf	Key_ReadFSM@key_num& (0+255),w,b
  3914  01FE52  0D02               	mullw	2
  3915  01FE54  0E25               	movlw	low (_s_Local_Key_FSM+3)
  3916  01FE56  24F3               	addwf	prodl,w,c
  3917  01FE58  6ED9               	movwf	fsr2l,c
  3918  01FE5A  0E00               	movlw	high (_s_Local_Key_FSM+3)
  3919  01FE5C  20F4               	addwfc	prodh,w,c
  3920  01FE5E  6EDA               	movwf	fsr2h,c
  3921  01FE60  0E01               	movlw	1
  3922  01FE62  50DB               	movf	plusw2,w,c
  3923  01FE64  E104               	bnz	u3160
  3924  01FE66  0E3D               	movlw	61
  3925  01FE68  5CDE               	subwf	postinc2,w,c
  3926  01FE6A  A0D8               	btfss	status,0,c
  3927  01FE6C  D00B               	goto	l3057
  3928  01FE6E                     u3160:
  3929                           
  3930                           ; BSR set to: 0
  3931                           ;Key.c: 126: gs_Local_Key_User.a_key_state[key_num] = KEY_long;
  3932  01FE6E  0100               	movlb	0	; () banked
  3933  01FE70  51EC               	movf	Key_ReadFSM@key_num& (0+255),w,b
  3934  01FE72  0D01               	mullw	1
  3935  01FE74  0E1C               	movlw	low (_gs_Local_Key_User+15)
  3936  01FE76  24F3               	addwf	prodl,w,c
  3937  01FE78  6ED9               	movwf	fsr2l,c
  3938  01FE7A  0E00               	movlw	high (_gs_Local_Key_User+15)
  3939  01FE7C  20F4               	addwfc	prodh,w,c
  3940  01FE7E  6EDA               	movwf	fsr2h,c
  3941  01FE80  0E05               	movlw	5
  3942  01FE82  D016               	goto	L4
  3943  01FE84                     l3057:
  3944                           
  3945                           ; BSR set to: 0
  3946                           ;Key.c: 127: else gs_Local_Key_User.a_key_state[key_num] = KEY_short;
  3947  01FE84  0100               	movlb	0	; () banked
  3948  01FE86  51EC               	movf	Key_ReadFSM@key_num& (0+255),w,b
  3949  01FE88  0D01               	mullw	1
  3950  01FE8A  0E1C               	movlw	low (_gs_Local_Key_User+15)
  3951  01FE8C  24F3               	addwf	prodl,w,c
  3952  01FE8E  6ED9               	movwf	fsr2l,c
  3953  01FE90  0E00               	movlw	high (_gs_Local_Key_User+15)
  3954  01FE92  20F4               	addwfc	prodh,w,c
  3955  01FE94  6EDA               	movwf	fsr2h,c
  3956  01FE96  0E01               	movlw	1
  3957  01FE98  6EDF               	movwf	indf2,c
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;Key.c: 128: }
  3961  01FE9A  D00B               	goto	l134
  3962  01FE9C                     l3059:
  3963                           
  3964                           ; BSR set to: 0
  3965                           ;Key.c: 129: else gs_Local_Key_User.a_key_state[key_num] = KEY_default;
  3966  01FE9C  0100               	movlb	0	; () banked
  3967  01FE9E  51EC               	movf	Key_ReadFSM@key_num& (0+255),w,b
  3968  01FEA0  0D01               	mullw	1
  3969  01FEA2  0E1C               	movlw	low (_gs_Local_Key_User+15)
  3970  01FEA4  24F3               	addwf	prodl,w,c
  3971  01FEA6  6ED9               	movwf	fsr2l,c
  3972  01FEA8  0E00               	movlw	high (_gs_Local_Key_User+15)
  3973  01FEAA  20F4               	addwfc	prodh,w,c
  3974  01FEAC  6EDA               	movwf	fsr2h,c
  3975  01FEAE  0E00               	movlw	0
  3976  01FEB0                     L4:
  3977  01FEB0  6EDF               	movwf	indf2,c
  3978  01FEB2                     l134:
  3979                           
  3980                           ; BSR set to: 0
  3981                           ;Key.c: 130: s_Local_Key_FSM.a_key_count[key_num] = 0;
  3982  01FEB2  0100               	movlb	0	; () banked
  3983  01FEB4  51EC               	movf	Key_ReadFSM@key_num& (0+255),w,b
  3984  01FEB6  0D02               	mullw	2
  3985  01FEB8  0E25               	movlw	low (_s_Local_Key_FSM+3)
  3986  01FEBA  24F3               	addwf	prodl,w,c
  3987  01FEBC  6ED9               	movwf	fsr2l,c
  3988  01FEBE  0E00               	movlw	high (_s_Local_Key_FSM+3)
  3989  01FEC0  20F4               	addwfc	prodh,w,c
  3990  01FEC2  6EDA               	movwf	fsr2h,c
  3991  01FEC4  0E00               	movlw	0
  3992  01FEC6  6EDE               	movwf	postinc2,c
  3993  01FEC8  0E00               	movlw	0
  3994  01FECA  6EDD               	movwf	postdec2,c
  3995                           
  3996                           ;Key.c: 131: }
  3997  01FECC  D027               	goto	l3067
  3998  01FECE                     l3061:
  3999                           
  4000                           ; BSR set to: 0
  4001                           ;Key.c: 133: else if( s_Local_Key_FSM.a_key_count[key_num] > 60 )
  4002  01FECE  0100               	movlb	0	; () banked
  4003  01FED0  51EC               	movf	Key_ReadFSM@key_num& (0+255),w,b
  4004  01FED2  0D02               	mullw	2
  4005  01FED4  0E25               	movlw	low (_s_Local_Key_FSM+3)
  4006  01FED6  24F3               	addwf	prodl,w,c
  4007  01FED8  6ED9               	movwf	fsr2l,c
  4008  01FEDA  0E00               	movlw	high (_s_Local_Key_FSM+3)
  4009  01FEDC  20F4               	addwfc	prodh,w,c
  4010  01FEDE  6EDA               	movwf	fsr2h,c
  4011  01FEE0  0E01               	movlw	1
  4012  01FEE2  50DB               	movf	plusw2,w,c
  4013  01FEE4  E104               	bnz	u3170
  4014  01FEE6  0E3D               	movlw	61
  4015  01FEE8  5CDE               	subwf	postinc2,w,c
  4016  01FEEA  A0D8               	btfss	status,0,c
  4017  01FEEC  D00B               	goto	l3065
  4018  01FEEE                     u3170:
  4019                           
  4020                           ; BSR set to: 0
  4021                           ;Key.c: 134: gs_Local_Key_User.a_key_state[key_num] = KEY_hold;
  4022  01FEEE  0100               	movlb	0	; () banked
  4023  01FEF0  51EC               	movf	Key_ReadFSM@key_num& (0+255),w,b
  4024  01FEF2  0D01               	mullw	1
  4025  01FEF4  0E1C               	movlw	low (_gs_Local_Key_User+15)
  4026  01FEF6  24F3               	addwf	prodl,w,c
  4027  01FEF8  6ED9               	movwf	fsr2l,c
  4028  01FEFA  0E00               	movlw	high (_gs_Local_Key_User+15)
  4029  01FEFC  20F4               	addwfc	prodh,w,c
  4030  01FEFE  6EDA               	movwf	fsr2h,c
  4031  01FF00  0E03               	movlw	3
  4032  01FF02  D00A               	goto	L5
  4033  01FF04                     l3065:
  4034                           
  4035                           ; BSR set to: 0
  4036                           ;Key.c: 137: else gs_Local_Key_User.a_key_state[key_num] = KEY_busy;
  4037  01FF04  0100               	movlb	0	; () banked
  4038  01FF06  51EC               	movf	Key_ReadFSM@key_num& (0+255),w,b
  4039  01FF08  0D01               	mullw	1
  4040  01FF0A  0E1C               	movlw	low (_gs_Local_Key_User+15)
  4041  01FF0C  24F3               	addwf	prodl,w,c
  4042  01FF0E  6ED9               	movwf	fsr2l,c
  4043  01FF10  0E00               	movlw	high (_gs_Local_Key_User+15)
  4044  01FF12  20F4               	addwfc	prodh,w,c
  4045  01FF14  6EDA               	movwf	fsr2h,c
  4046  01FF16  0E04               	movlw	4
  4047  01FF18                     L5:
  4048  01FF18  6EDF               	movwf	indf2,c
  4049                           
  4050                           ; BSR set to: 0
  4051                           
  4052                           ; BSR set to: 0
  4053  01FF1A  D000               	goto	l3067
  4054  01FF1C                     l3067:
  4055                           
  4056                           ; BSR set to: 0
  4057  01FF1C  0100               	movlb	0	; () banked
  4058  01FF1E  07EC               	decf	Key_ReadFSM@key_num& (0+255),f,b
  4059  01FF20  0100               	movlb	0	; () banked
  4060  01FF22  29EC               	incf	Key_ReadFSM@key_num& (0+255),w,b
  4061  01FF24  A4D8               	btfss	status,2,c
  4062  01FF26  D780               	goto	l3049
  4063                           
  4064                           ; BSR set to: 0
  4065                           ;Key.c: 138: }
  4066                           ;Key.c: 141: for( key_num = 0;key_num < 6 - 1; key_num ++)
  4067                           
  4068                           ; BSR set to: 0
  4069  01FF28  0E00               	movlw	0
  4070  01FF2A  0100               	movlb	0	; () banked
  4071  01FF2C  6FEC               	movwf	Key_ReadFSM@key_num& (0+255),b
  4072                           
  4073                           ; BSR set to: 0
  4074  01FF2E  0E04               	movlw	4
  4075  01FF30  0100               	movlb	0	; () banked
  4076  01FF32  65EC               	cpfsgt	Key_ReadFSM@key_num& (0+255),b
  4077  01FF34  D002               	goto	l3075
  4078  01FF36  0012               	return	
  4079                           
  4080                           ; BSR set to: 0
  4081  01FF38  0012               	return	
  4082  01FF3A                     l3075:
  4083                           
  4084                           ; BSR set to: 0
  4085                           ;Key.c: 142: for( key_num_mate = key_num+1;key_num_mate < 6 ; key_num_mate ++)
  4086  01FF3A  0100               	movlb	0	; () banked
  4087  01FF3C  29EC               	incf	Key_ReadFSM@key_num& (0+255),w,b
  4088  01FF3E  0100               	movlb	0	; () banked
  4089  01FF40  6FEB               	movwf	Key_ReadFSM@key_num_mate& (0+255),b
  4090  01FF42  0E05               	movlw	5
  4091  01FF44  0100               	movlb	0	; () banked
  4092  01FF46  65EB               	cpfsgt	Key_ReadFSM@key_num_mate& (0+255),b
  4093  01FF48  D001               	goto	l3079
  4094                           
  4095                           ; BSR set to: 0
  4096  01FF4A  D052               	goto	l3091
  4097  01FF4C                     l3079:
  4098                           
  4099                           ; BSR set to: 0
  4100                           ;Key.c: 143: if( gs_Local_Key_User.a_key_state[key_num] == gs_Local_Key_User.a_key_state
      +                          [key_num_mate] )
  4101  01FF4C  0100               	movlb	0	; () banked
  4102  01FF4E  51EB               	movf	Key_ReadFSM@key_num_mate& (0+255),w,b
  4103  01FF50  0D01               	mullw	1
  4104  01FF52  0E1C               	movlw	low (_gs_Local_Key_User+15)
  4105  01FF54  24F3               	addwf	prodl,w,c
  4106  01FF56  6ED9               	movwf	fsr2l,c
  4107  01FF58  0E00               	movlw	high (_gs_Local_Key_User+15)
  4108  01FF5A  20F4               	addwfc	prodh,w,c
  4109  01FF5C  6EDA               	movwf	fsr2h,c
  4110  01FF5E  0100               	movlb	0	; () banked
  4111  01FF60  51EC               	movf	Key_ReadFSM@key_num& (0+255),w,b
  4112  01FF62  0D01               	mullw	1
  4113  01FF64  0E1C               	movlw	low (_gs_Local_Key_User+15)
  4114  01FF66  24F3               	addwf	prodl,w,c
  4115  01FF68  6EE1               	movwf	fsr1l,c
  4116  01FF6A  0E00               	movlw	high (_gs_Local_Key_User+15)
  4117  01FF6C  20F4               	addwfc	prodh,w,c
  4118  01FF6E  6EE2               	movwf	fsr1h,c
  4119  01FF70  50DE               	movf	postinc2,w,c
  4120  01FF72  18E6               	xorwf	postinc1,w,c
  4121  01FF74  A4D8               	btfss	status,2,c
  4122  01FF76  D039               	goto	l3087
  4123                           
  4124                           ; BSR set to: 0
  4125                           ;Key.c: 144: if(gs_Local_Key_User.a_key_state[key_num] != KEY_default)
  4126  01FF78  0100               	movlb	0	; () banked
  4127  01FF7A  51EC               	movf	Key_ReadFSM@key_num& (0+255),w,b
  4128  01FF7C  0D01               	mullw	1
  4129  01FF7E  0E1C               	movlw	low (_gs_Local_Key_User+15)
  4130  01FF80  24F3               	addwf	prodl,w,c
  4131  01FF82  6ED9               	movwf	fsr2l,c
  4132  01FF84  0E00               	movlw	high (_gs_Local_Key_User+15)
  4133  01FF86  20F4               	addwfc	prodh,w,c
  4134  01FF88  6EDA               	movwf	fsr2h,c
  4135  01FF8A  50DF               	movf	indf2,w,c
  4136  01FF8C  B4D8               	btfsc	status,2,c
  4137  01FF8E  D02D               	goto	l3087
  4138                           
  4139                           ; BSR set to: 0
  4140                           ;Key.c: 145: {
  4141                           ;Key.c: 146: gs_Local_Key_User.key_group = (0x01 << key_num)|(0x01 << key_num_mate);
  4142  01FF90  C0EB  F0E7         	movff	Key_ReadFSM@key_num_mate,??_Key_ReadFSM
  4143  01FF94  0E01               	movlw	1
  4144  01FF96  0100               	movlb	0	; () banked
  4145  01FF98  6FE8               	movwf	(??_Key_ReadFSM+1)& (0+255),b
  4146  01FF9A  0100               	movlb	0	; () banked
  4147  01FF9C  2BE7               	incf	??_Key_ReadFSM& (0+255),f,b
  4148  01FF9E  D003               	goto	u3234
  4149  01FFA0                     u3235:
  4150  01FFA0  0100               	movlb	0	; () banked
  4151  01FFA2  90D8               	bcf	status,0,c
  4152  01FFA4  37E8               	rlcf	(??_Key_ReadFSM+1)& (0+255),f,b
  4153  01FFA6                     u3234:
  4154  01FFA6  0100               	movlb	0	; () banked
  4155  01FFA8  2FE7               	decfsz	??_Key_ReadFSM& (0+255),f,b
  4156  01FFAA  D7FA               	goto	u3235
  4157  01FFAC  C0EC  F0E9         	movff	Key_ReadFSM@key_num,??_Key_ReadFSM+2
  4158  01FFB0  0E01               	movlw	1
  4159  01FFB2  0100               	movlb	0	; () banked
  4160  01FFB4  6FEA               	movwf	(??_Key_ReadFSM+3)& (0+255),b
  4161  01FFB6  0100               	movlb	0	; () banked
  4162  01FFB8  2BE9               	incf	(??_Key_ReadFSM+2)& (0+255),f,b
  4163  01FFBA  D003               	goto	u3244
  4164  01FFBC                     u3245:
  4165  01FFBC  0100               	movlb	0	; () banked
  4166  01FFBE  90D8               	bcf	status,0,c
  4167  01FFC0  37EA               	rlcf	(??_Key_ReadFSM+3)& (0+255),f,b
  4168  01FFC2                     u3244:
  4169  01FFC2  0100               	movlb	0	; () banked
  4170  01FFC4  2FE9               	decfsz	(??_Key_ReadFSM+2)& (0+255),f,b
  4171  01FFC6  D7FA               	goto	u3245
  4172  01FFC8  0100               	movlb	0	; () banked
  4173  01FFCA  51EA               	movf	(??_Key_ReadFSM+3)& (0+255),w,b
  4174  01FFCC  0100               	movlb	0	; () banked
  4175  01FFCE  11E8               	iorwf	(??_Key_ReadFSM+1)& (0+255),w,b
  4176  01FFD0  6E0E               	movwf	_gs_Local_Key_User+1,c	;volatile
  4177                           
  4178                           ; BSR set to: 0
  4179                           ;Key.c: 147: gs_Local_Key_User.key_group_state = gs_Local_Key_User.a_key_state[key_num];
  4180  01FFD2  0100               	movlb	0	; () banked
  4181  01FFD4  51EC               	movf	Key_ReadFSM@key_num& (0+255),w,b
  4182  01FFD6  0D01               	mullw	1
  4183  01FFD8  0E1C               	movlw	low (_gs_Local_Key_User+15)
  4184  01FFDA  24F3               	addwf	prodl,w,c
  4185  01FFDC  6ED9               	movwf	fsr2l,c
  4186  01FFDE  0E00               	movlw	high (_gs_Local_Key_User+15)
  4187  01FFE0  20F4               	addwfc	prodh,w,c
  4188  01FFE2  6EDA               	movwf	fsr2h,c
  4189  01FFE4  50DF               	movf	indf2,w,c
  4190  01FFE6  6E0F               	movwf	_gs_Local_Key_User+2,c	;volatile
  4191                           
  4192                           ; BSR set to: 0
  4193  01FFE8  D000               	goto	l3087
  4194  01FFEA                     l3087:
  4195                           
  4196                           ; BSR set to: 0
  4197  01FFEA  0100               	movlb	0	; () banked
  4198  01FFEC  2BEB               	incf	Key_ReadFSM@key_num_mate& (0+255),f,b
  4199  01FFEE  D7A9               	goto	L6
  4200  01FFF0                     l3091:
  4201                           
  4202                           ; BSR set to: 0
  4203  01FFF0  0100               	movlb	0	; () banked
  4204  01FFF2  2BEC               	incf	Key_ReadFSM@key_num& (0+255),f,b
  4205                           
  4206                           ; BSR set to: 0
  4207  01FFF4  0E04               	movlw	4
  4208  01FFF6  0100               	movlb	0	; () banked
  4209  01FFF8  65EC               	cpfsgt	Key_ReadFSM@key_num& (0+255),b
  4210  01FFFA  D79F               	goto	l3075
  4211  01FFFC  0012               	return	
  4212                           
  4213                           ; BSR set to: 0
  4214                           
  4215                           ; BSR set to: 0
  4216  01FFFE  0012               	return		;funcret
  4217  020000                     __end_of_Key_ReadFSM:
  4218                           	opt stack 0
  4219                           tblptru	equ	0xFF8
  4220                           tblptrh	equ	0xFF7
  4221                           tblptrl	equ	0xFF6
  4222                           tablat	equ	0xFF5
  4223                           prodh	equ	0xFF4
  4224                           prodl	equ	0xFF3
  4225                           intcon	equ	0xFF2
  4226                           postinc0	equ	0xFEE
  4227                           wreg	equ	0xFE8
  4228                           postinc1	equ	0xFE6
  4229                           postdec1	equ	0xFE5
  4230                           fsr1h	equ	0xFE2
  4231                           fsr1l	equ	0xFE1
  4232                           indf2	equ	0xFDF
  4233                           postinc2	equ	0xFDE
  4234                           postdec2	equ	0xFDD
  4235                           plusw2	equ	0xFDB
  4236                           fsr2h	equ	0xFDA
  4237                           fsr2l	equ	0xFD9
  4238                           status	equ	0xFD8
  4239                           
  4240 ;; *************** function _Key_Init *****************
  4241 ;; Defined at:
  4242 ;;		line 42 in file "_01_USER/Key.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;		None
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;		None
  4247 ;; Return value:  Size  Location     Type
  4248 ;;		None               void
  4249 ;; Registers used:
  4250 ;;		None
  4251 ;; Tracked objects:
  4252 ;;		On entry : 0/0
  4253 ;;		On exit  : 0/0
  4254 ;;		Unchanged: 0/0
  4255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4260 ;;Total ram usage:        0 bytes
  4261 ;; Hardware stack levels used:    1
  4262 ;; Hardware stack levels required when called:    3
  4263 ;; This function calls:
  4264 ;;		Nothing
  4265 ;; This function is called by:
  4266 ;;		_main
  4267 ;; This function uses a non-reentrant model
  4268 ;;
  4269                           
  4270                           	psect	text26
  4271  01F0C8                     __ptext26:
  4272                           	opt stack 0
  4273  01F0C8                     _Key_Init:
  4274                           	opt stack 27
  4275                           
  4276                           ;Key.c: 45: TRISC1 = 1;
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;incstack = 0
  4280  01F0C8  8294               	bsf	3988,1,c	;volatile
  4281                           
  4282                           ;Key.c: 46: TRISF1 = 1;
  4283  01F0CA  8297               	bsf	3991,1,c	;volatile
  4284                           
  4285                           ;Key.c: 47: TRISF2 = 1;
  4286  01F0CC  8497               	bsf	3991,2,c	;volatile
  4287                           
  4288                           ;Key.c: 48: TRISA4 = 1;
  4289  01F0CE  8892               	bsf	3986,4,c	;volatile
  4290                           
  4291                           ;Key.c: 49: TRISA5 = 1;
  4292  01F0D0  8A92               	bsf	3986,5,c	;volatile
  4293                           
  4294                           ;Key.c: 50: TRISF3 = 1;
  4295  01F0D2  8697               	bsf	3991,3,c	;volatile
  4296                           
  4297                           ;Key.c: 53: ANSEL4 = 0;
  4298  01F0D4  010F               	movlb	15	; () banked
  4299  01F0D6  9925               	bcf	37,4,b	;volatile
  4300                           
  4301                           ;Key.c: 54: ANSEL6 = 0;
  4302  01F0D8  010F               	movlb	15	; () banked
  4303  01F0DA  9D25               	bcf	37,6,b	;volatile
  4304                           
  4305                           ;Key.c: 55: ANSEL7 = 0;
  4306  01F0DC  010F               	movlb	15	; () banked
  4307  01F0DE  9F25               	bcf	37,7,b	;volatile
  4308                           
  4309                           ;Key.c: 56: ANSEL8 = 0;
  4310  01F0E0  010F               	movlb	15	; () banked
  4311  01F0E2  9124               	bcf	36,0,b	;volatile
  4312                           
  4313                           ; BSR set to: 15
  4314  01F0E4  0012               	return		;funcret
  4315  01F0E6                     __end_of_Key_Init:
  4316                           	opt stack 0
  4317                           tblptru	equ	0xFF8
  4318                           tblptrh	equ	0xFF7
  4319                           tblptrl	equ	0xFF6
  4320                           tablat	equ	0xFF5
  4321                           prodh	equ	0xFF4
  4322                           prodl	equ	0xFF3
  4323                           intcon	equ	0xFF2
  4324                           postinc0	equ	0xFEE
  4325                           wreg	equ	0xFE8
  4326                           postinc1	equ	0xFE6
  4327                           postdec1	equ	0xFE5
  4328                           fsr1h	equ	0xFE2
  4329                           fsr1l	equ	0xFE1
  4330                           indf2	equ	0xFDF
  4331                           postinc2	equ	0xFDE
  4332                           postdec2	equ	0xFDD
  4333                           plusw2	equ	0xFDB
  4334                           fsr2h	equ	0xFDA
  4335                           fsr2l	equ	0xFD9
  4336                           status	equ	0xFD8
  4337                           
  4338 ;; *************** function _Init_TM1640 *****************
  4339 ;; Defined at:
  4340 ;;		line 21 in file "_01_USER/TM1640.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;		None
  4343 ;; Auto vars:     Size  Location     Type
  4344 ;;		None
  4345 ;; Return value:  Size  Location     Type
  4346 ;;		None               void
  4347 ;; Registers used:
  4348 ;;		wreg, status,2, status,0, cstack
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4358 ;;Total ram usage:        0 bytes
  4359 ;; Hardware stack levels used:    1
  4360 ;; Hardware stack levels required when called:    5
  4361 ;; This function calls:
  4362 ;;		_TM1640_Start
  4363 ;;		_TM1640_Stop
  4364 ;;		_TM1640_Writer_Byte
  4365 ;; This function is called by:
  4366 ;;		_main
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           
  4370                           	psect	text27
  4371  01F196                     __ptext27:
  4372                           	opt stack 0
  4373  01F196                     _Init_TM1640:
  4374                           	opt stack 25
  4375                           
  4376                           ;TM1640.c: 24: TRISD5 = 0;
  4377                           
  4378                           ; BSR set to: 15
  4379                           ;incstack = 0
  4380  01F196  9A95               	bcf	3989,5,c	;volatile
  4381                           
  4382                           ;TM1640.c: 25: TRISD6 = 0;
  4383  01F198  9C95               	bcf	3989,6,c	;volatile
  4384                           
  4385                           ;TM1640.c: 27: TM1640_Stop();
  4386  01F19A  ECA7  F0F8         	call	_TM1640_Stop	;wreg free
  4387                           
  4388                           ;TM1640.c: 29: TM1640_Start();
  4389  01F19E  EC95  F0F8         	call	_TM1640_Start	;wreg free
  4390                           
  4391                           ;TM1640.c: 30: TM1640_Writer_Byte(0x44);
  4392  01F1A2  0E44               	movlw	68
  4393  01F1A4  EC1C  F0FA         	call	_TM1640_Writer_Byte
  4394                           
  4395                           ;TM1640.c: 31: TM1640_Stop();
  4396  01F1A8  ECA7  F0F8         	call	_TM1640_Stop	;wreg free
  4397                           
  4398                           ;TM1640.c: 33: TM1640_Start();
  4399  01F1AC  EC95  F0F8         	call	_TM1640_Start	;wreg free
  4400                           
  4401                           ;TM1640.c: 34: TM1640_Writer_Byte(0x8F);
  4402  01F1B0  0E8F               	movlw	143
  4403  01F1B2  EC1C  F0FA         	call	_TM1640_Writer_Byte
  4404                           
  4405                           ;TM1640.c: 35: TM1640_Stop();
  4406  01F1B6  ECA7  F0F8         	call	_TM1640_Stop	;wreg free
  4407  01F1BA  0012               	return		;funcret
  4408  01F1BC                     __end_of_Init_TM1640:
  4409                           	opt stack 0
  4410                           tblptru	equ	0xFF8
  4411                           tblptrh	equ	0xFF7
  4412                           tblptrl	equ	0xFF6
  4413                           tablat	equ	0xFF5
  4414                           prodh	equ	0xFF4
  4415                           prodl	equ	0xFF3
  4416                           intcon	equ	0xFF2
  4417                           postinc0	equ	0xFEE
  4418                           wreg	equ	0xFE8
  4419                           postinc1	equ	0xFE6
  4420                           postdec1	equ	0xFE5
  4421                           fsr1h	equ	0xFE2
  4422                           fsr1l	equ	0xFE1
  4423                           indf2	equ	0xFDF
  4424                           postinc2	equ	0xFDE
  4425                           postdec2	equ	0xFDD
  4426                           plusw2	equ	0xFDB
  4427                           fsr2h	equ	0xFDA
  4428                           fsr2l	equ	0xFD9
  4429                           status	equ	0xFD8
  4430                           
  4431 ;; *************** function _TM1640_Writer_Byte *****************
  4432 ;; Defined at:
  4433 ;;		line 116 in file "_01_USER/TM1640.c"
  4434 ;; Parameters:    Size  Location     Type
  4435 ;;  Date            1    wreg     unsigned char 
  4436 ;; Auto vars:     Size  Location     Type
  4437 ;;  Date            1    2[BANK0 ] unsigned char 
  4438 ;;  mask            1    3[BANK0 ] unsigned char 
  4439 ;; Return value:  Size  Location     Type
  4440 ;;		None               void
  4441 ;; Registers used:
  4442 ;;		wreg, status,2, status,0, cstack
  4443 ;; Tracked objects:
  4444 ;;		On entry : 0/0
  4445 ;;		On exit  : 0/0
  4446 ;;		Unchanged: 0/0
  4447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4449 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4451 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4452 ;;Total ram usage:        2 bytes
  4453 ;; Hardware stack levels used:    1
  4454 ;; Hardware stack levels required when called:    4
  4455 ;; This function calls:
  4456 ;;		_TM1640_Delay
  4457 ;; This function is called by:
  4458 ;;		_Init_TM1640
  4459 ;;		_TM1640_Writer_Dates
  4460 ;;		_Open_Display
  4461 ;;		_Disable_Display
  4462 ;; This function uses a non-reentrant model
  4463 ;;
  4464                           
  4465                           	psect	text28
  4466  01F438                     __ptext28:
  4467                           	opt stack 0
  4468  01F438                     _TM1640_Writer_Byte:
  4469                           	opt stack 24
  4470                           
  4471                           ;incstack = 0
  4472                           ;TM1640_Writer_Byte@Date stored from wreg
  4473  01F438  0100               	movlb	0	; () banked
  4474  01F43A  6FE9               	movwf	TM1640_Writer_Byte@Date& (0+255),b
  4475                           
  4476                           ; BSR set to: 0
  4477                           ;TM1640.c: 118: unsigned char mask;
  4478                           ;TM1640.c: 120: for(mask=0x01; mask; mask<<=1)
  4479  01F43C  0E01               	movlw	1
  4480  01F43E  0100               	movlb	0	; () banked
  4481  01F440  6FEA               	movwf	TM1640_Writer_Byte@mask& (0+255),b
  4482  01F442  D01A               	goto	l3045
  4483  01F444                     l334:
  4484                           
  4485                           ; BSR set to: 0
  4486                           ;TM1640.c: 121: {
  4487                           ;TM1640.c: 122: RD6 = 0;
  4488  01F444  9C83               	bcf	3971,6,c	;volatile
  4489                           
  4490                           ; BSR set to: 0
  4491                           ;TM1640.c: 123: TM1640_Delay(1);
  4492  01F446  0E01               	movlw	1
  4493  01F448  EC83  F0F8         	call	_TM1640_Delay
  4494                           
  4495                           ;TM1640.c: 124: if(mask & Date)
  4496  01F44C  0100               	movlb	0	; () banked
  4497  01F44E  51EA               	movf	TM1640_Writer_Byte@mask& (0+255),w,b
  4498  01F450  0100               	movlb	0	; () banked
  4499  01F452  15E9               	andwf	TM1640_Writer_Byte@Date& (0+255),w,b
  4500  01F454  0900               	iorlw	0
  4501  01F456  B4D8               	btfsc	status,2,c
  4502  01F458  D002               	goto	l335
  4503                           
  4504                           ; BSR set to: 0
  4505                           ;TM1640.c: 125: RD5 = 1;
  4506  01F45A  8A83               	bsf	3971,5,c	;volatile
  4507  01F45C  D002               	goto	l3039
  4508  01F45E                     l335:
  4509                           
  4510                           ; BSR set to: 0
  4511                           ;TM1640.c: 126: else
  4512                           ;TM1640.c: 127: RD5 = 0;
  4513  01F45E  9A83               	bcf	3971,5,c	;volatile
  4514  01F460  D000               	goto	l3039
  4515  01F462                     l3039:
  4516                           
  4517                           ; BSR set to: 0
  4518                           ;TM1640.c: 128: TM1640_Delay(1);
  4519  01F462  0E01               	movlw	1
  4520  01F464  EC83  F0F8         	call	_TM1640_Delay
  4521                           
  4522                           ;TM1640.c: 129: RD6 = 1;
  4523  01F468  8C83               	bsf	3971,6,c	;volatile
  4524                           
  4525                           ;TM1640.c: 130: TM1640_Delay(1);
  4526  01F46A  0E01               	movlw	1
  4527  01F46C  EC83  F0F8         	call	_TM1640_Delay
  4528  01F470  0100               	movlb	0	; () banked
  4529  01F472  90D8               	bcf	status,0,c
  4530  01F474  37EA               	rlcf	TM1640_Writer_Byte@mask& (0+255),f,b
  4531  01F476  D000               	goto	l3045
  4532  01F478                     l3045:
  4533                           
  4534                           ; BSR set to: 0
  4535  01F478  0100               	movlb	0	; () banked
  4536  01F47A  51EA               	movf	TM1640_Writer_Byte@mask& (0+255),w,b
  4537  01F47C  0100               	movlb	0	; () banked
  4538  01F47E  A4D8               	btfss	status,2,c
  4539  01F480  D7E1               	goto	l334
  4540                           
  4541                           ; BSR set to: 0
  4542                           
  4543                           ; BSR set to: 0
  4544  01F482  0012               	return		;funcret
  4545  01F484                     __end_of_TM1640_Writer_Byte:
  4546                           	opt stack 0
  4547                           tblptru	equ	0xFF8
  4548                           tblptrh	equ	0xFF7
  4549                           tblptrl	equ	0xFF6
  4550                           tablat	equ	0xFF5
  4551                           prodh	equ	0xFF4
  4552                           prodl	equ	0xFF3
  4553                           intcon	equ	0xFF2
  4554                           postinc0	equ	0xFEE
  4555                           wreg	equ	0xFE8
  4556                           postinc1	equ	0xFE6
  4557                           postdec1	equ	0xFE5
  4558                           fsr1h	equ	0xFE2
  4559                           fsr1l	equ	0xFE1
  4560                           indf2	equ	0xFDF
  4561                           postinc2	equ	0xFDE
  4562                           postdec2	equ	0xFDD
  4563                           plusw2	equ	0xFDB
  4564                           fsr2h	equ	0xFDA
  4565                           fsr2l	equ	0xFD9
  4566                           status	equ	0xFD8
  4567                           
  4568 ;; *************** function _TM1640_Stop *****************
  4569 ;; Defined at:
  4570 ;;		line 63 in file "_01_USER/TM1640.c"
  4571 ;; Parameters:    Size  Location     Type
  4572 ;;		None
  4573 ;; Auto vars:     Size  Location     Type
  4574 ;;		None
  4575 ;; Return value:  Size  Location     Type
  4576 ;;		None               void
  4577 ;; Registers used:
  4578 ;;		wreg, status,2, status,0, cstack
  4579 ;; Tracked objects:
  4580 ;;		On entry : 0/0
  4581 ;;		On exit  : 0/0
  4582 ;;		Unchanged: 0/0
  4583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4588 ;;Total ram usage:        0 bytes
  4589 ;; Hardware stack levels used:    1
  4590 ;; Hardware stack levels required when called:    4
  4591 ;; This function calls:
  4592 ;;		_TM1640_Delay
  4593 ;; This function is called by:
  4594 ;;		_Init_TM1640
  4595 ;;		_TM1640_Writer_Dates
  4596 ;;		_Open_Display
  4597 ;;		_Disable_Display
  4598 ;; This function uses a non-reentrant model
  4599 ;;
  4600                           
  4601                           	psect	text29
  4602  01F14E                     __ptext29:
  4603                           	opt stack 0
  4604  01F14E                     _TM1640_Stop:
  4605                           	opt stack 24
  4606                           
  4607                           ;TM1640.c: 65: RD6 = 0;
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;incstack = 0
  4611  01F14E  9C83               	bcf	3971,6,c	;volatile
  4612                           
  4613                           ;TM1640.c: 66: TM1640_Delay(1);
  4614  01F150  0E01               	movlw	1
  4615  01F152  EC83  F0F8         	call	_TM1640_Delay
  4616                           
  4617                           ;TM1640.c: 67: RD5 = 0;
  4618  01F156  9A83               	bcf	3971,5,c	;volatile
  4619                           
  4620                           ;TM1640.c: 68: TM1640_Delay(1);
  4621  01F158  0E01               	movlw	1
  4622  01F15A  EC83  F0F8         	call	_TM1640_Delay
  4623                           
  4624                           ;TM1640.c: 69: RD6 = 1;
  4625  01F15E  8C83               	bsf	3971,6,c	;volatile
  4626                           
  4627                           ;TM1640.c: 70: TM1640_Delay(1);
  4628  01F160  0E01               	movlw	1
  4629  01F162  EC83  F0F8         	call	_TM1640_Delay
  4630                           
  4631                           ;TM1640.c: 71: RD5 = 1;
  4632  01F166  8A83               	bsf	3971,5,c	;volatile
  4633                           
  4634                           ;TM1640.c: 72: TM1640_Delay(1);
  4635  01F168  0E01               	movlw	1
  4636  01F16A  EC83  F0F8         	call	_TM1640_Delay
  4637                           
  4638                           ;TM1640.c: 73: RD6 = 0;
  4639  01F16E  9C83               	bcf	3971,6,c	;volatile
  4640  01F170  0012               	return		;funcret
  4641  01F172                     __end_of_TM1640_Stop:
  4642                           	opt stack 0
  4643                           tblptru	equ	0xFF8
  4644                           tblptrh	equ	0xFF7
  4645                           tblptrl	equ	0xFF6
  4646                           tablat	equ	0xFF5
  4647                           prodh	equ	0xFF4
  4648                           prodl	equ	0xFF3
  4649                           intcon	equ	0xFF2
  4650                           postinc0	equ	0xFEE
  4651                           wreg	equ	0xFE8
  4652                           postinc1	equ	0xFE6
  4653                           postdec1	equ	0xFE5
  4654                           fsr1h	equ	0xFE2
  4655                           fsr1l	equ	0xFE1
  4656                           indf2	equ	0xFDF
  4657                           postinc2	equ	0xFDE
  4658                           postdec2	equ	0xFDD
  4659                           plusw2	equ	0xFDB
  4660                           fsr2h	equ	0xFDA
  4661                           fsr2l	equ	0xFD9
  4662                           status	equ	0xFD8
  4663                           
  4664 ;; *************** function _TM1640_Start *****************
  4665 ;; Defined at:
  4666 ;;		line 44 in file "_01_USER/TM1640.c"
  4667 ;; Parameters:    Size  Location     Type
  4668 ;;		None
  4669 ;; Auto vars:     Size  Location     Type
  4670 ;;		None
  4671 ;; Return value:  Size  Location     Type
  4672 ;;		None               void
  4673 ;; Registers used:
  4674 ;;		wreg, status,2, status,0, cstack
  4675 ;; Tracked objects:
  4676 ;;		On entry : 0/0
  4677 ;;		On exit  : 0/0
  4678 ;;		Unchanged: 0/0
  4679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4684 ;;Total ram usage:        0 bytes
  4685 ;; Hardware stack levels used:    1
  4686 ;; Hardware stack levels required when called:    4
  4687 ;; This function calls:
  4688 ;;		_TM1640_Delay
  4689 ;; This function is called by:
  4690 ;;		_Init_TM1640
  4691 ;;		_TM1640_Writer_Dates
  4692 ;;		_Open_Display
  4693 ;;		_Disable_Display
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697                           	psect	text30
  4698  01F12A                     __ptext30:
  4699                           	opt stack 0
  4700  01F12A                     _TM1640_Start:
  4701                           	opt stack 24
  4702                           
  4703                           ;TM1640.c: 46: RD6 = 0;
  4704                           
  4705                           ;incstack = 0
  4706  01F12A  9C83               	bcf	3971,6,c	;volatile
  4707                           
  4708                           ;TM1640.c: 47: TM1640_Delay(1);
  4709  01F12C  0E01               	movlw	1
  4710  01F12E  EC83  F0F8         	call	_TM1640_Delay
  4711                           
  4712                           ;TM1640.c: 48: RD5 = 1;
  4713  01F132  8A83               	bsf	3971,5,c	;volatile
  4714                           
  4715                           ;TM1640.c: 49: TM1640_Delay(1);
  4716  01F134  0E01               	movlw	1
  4717  01F136  EC83  F0F8         	call	_TM1640_Delay
  4718                           
  4719                           ;TM1640.c: 50: RD6 = 1;
  4720  01F13A  8C83               	bsf	3971,6,c	;volatile
  4721                           
  4722                           ;TM1640.c: 51: TM1640_Delay(1);
  4723  01F13C  0E01               	movlw	1
  4724  01F13E  EC83  F0F8         	call	_TM1640_Delay
  4725                           
  4726                           ;TM1640.c: 52: RD5 = 0;
  4727  01F142  9A83               	bcf	3971,5,c	;volatile
  4728                           
  4729                           ;TM1640.c: 53: TM1640_Delay(1);
  4730  01F144  0E01               	movlw	1
  4731  01F146  EC83  F0F8         	call	_TM1640_Delay
  4732                           
  4733                           ;TM1640.c: 54: RD6 = 0;
  4734  01F14A  9C83               	bcf	3971,6,c	;volatile
  4735  01F14C  0012               	return		;funcret
  4736  01F14E                     __end_of_TM1640_Start:
  4737                           	opt stack 0
  4738                           tblptru	equ	0xFF8
  4739                           tblptrh	equ	0xFF7
  4740                           tblptrl	equ	0xFF6
  4741                           tablat	equ	0xFF5
  4742                           prodh	equ	0xFF4
  4743                           prodl	equ	0xFF3
  4744                           intcon	equ	0xFF2
  4745                           postinc0	equ	0xFEE
  4746                           wreg	equ	0xFE8
  4747                           postinc1	equ	0xFE6
  4748                           postdec1	equ	0xFE5
  4749                           fsr1h	equ	0xFE2
  4750                           fsr1l	equ	0xFE1
  4751                           indf2	equ	0xFDF
  4752                           postinc2	equ	0xFDE
  4753                           postdec2	equ	0xFDD
  4754                           plusw2	equ	0xFDB
  4755                           fsr2h	equ	0xFDA
  4756                           fsr2l	equ	0xFD9
  4757                           status	equ	0xFD8
  4758                           
  4759 ;; *************** function _TM1640_Delay *****************
  4760 ;; Defined at:
  4761 ;;		line 166 in file "_01_USER/TM1640.c"
  4762 ;; Parameters:    Size  Location     Type
  4763 ;;  Time            1    wreg     unsigned char 
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;  Time            1    0[BANK0 ] unsigned char 
  4766 ;;  i               1    1[BANK0 ] unsigned char 
  4767 ;; Return value:  Size  Location     Type
  4768 ;;		None               void
  4769 ;; Registers used:
  4770 ;;		wreg, status,2, status,0
  4771 ;; Tracked objects:
  4772 ;;		On entry : 0/0
  4773 ;;		On exit  : 0/0
  4774 ;;		Unchanged: 0/0
  4775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4777 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4779 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4780 ;;Total ram usage:        2 bytes
  4781 ;; Hardware stack levels used:    1
  4782 ;; Hardware stack levels required when called:    3
  4783 ;; This function calls:
  4784 ;;		Nothing
  4785 ;; This function is called by:
  4786 ;;		_TM1640_Start
  4787 ;;		_TM1640_Stop
  4788 ;;		_TM1640_Writer_Byte
  4789 ;; This function uses a non-reentrant model
  4790 ;;
  4791                           
  4792                           	psect	text31
  4793  01F106                     __ptext31:
  4794                           	opt stack 0
  4795  01F106                     _TM1640_Delay:
  4796                           	opt stack 24
  4797                           
  4798                           ;incstack = 0
  4799                           ;TM1640_Delay@Time stored from wreg
  4800  01F106  0100               	movlb	0	; () banked
  4801  01F108  6FE7               	movwf	TM1640_Delay@Time& (0+255),b
  4802  01F10A                     
  4803                           ; BSR set to: 0
  4804                           ;TM1640.c: 171: {
  4805                           ;TM1640.c: 172: for(i=0; i<10; ++i);
  4806  01F10A  0E00               	movlw	0
  4807  01F10C  0100               	movlb	0	; () banked
  4808  01F10E  6FE8               	movwf	TM1640_Delay@i& (0+255),b
  4809  01F110  D003               	goto	l2999
  4810                           
  4811                           ; BSR set to: 0
  4812                           
  4813                           ; BSR set to: 0
  4814  01F112  D006               	goto	l349
  4815  01F114                     l2997:
  4816                           
  4817                           ; BSR set to: 0
  4818  01F114  0100               	movlb	0	; () banked
  4819  01F116  2BE8               	incf	TM1640_Delay@i& (0+255),f,b
  4820  01F118                     l2999:
  4821                           
  4822                           ; BSR set to: 0
  4823  01F118  0E09               	movlw	9
  4824  01F11A  0100               	movlb	0	; () banked
  4825  01F11C  65E8               	cpfsgt	TM1640_Delay@i& (0+255),b
  4826  01F11E  D7FA               	goto	l2997
  4827  01F120                     l349:
  4828                           
  4829                           ; BSR set to: 0
  4830                           ;TM1640.c: 173: }while(--Time);
  4831  01F120  0100               	movlb	0	; () banked
  4832  01F122  2FE7               	decfsz	TM1640_Delay@Time& (0+255),f,b
  4833  01F124  D7F2               	goto	l2991
  4834  01F126  0012               	return	
  4835                           
  4836                           ; BSR set to: 0
  4837                           
  4838                           ; BSR set to: 0
  4839  01F128  0012               	return		;funcret
  4840  01F12A                     __end_of_TM1640_Delay:
  4841                           	opt stack 0
  4842                           tblptru	equ	0xFF8
  4843                           tblptrh	equ	0xFF7
  4844                           tblptrl	equ	0xFF6
  4845                           tablat	equ	0xFF5
  4846                           prodh	equ	0xFF4
  4847                           prodl	equ	0xFF3
  4848                           intcon	equ	0xFF2
  4849                           postinc0	equ	0xFEE
  4850                           wreg	equ	0xFE8
  4851                           postinc1	equ	0xFE6
  4852                           postdec1	equ	0xFE5
  4853                           fsr1h	equ	0xFE2
  4854                           fsr1l	equ	0xFE1
  4855                           indf2	equ	0xFDF
  4856                           postinc2	equ	0xFDE
  4857                           postdec2	equ	0xFDD
  4858                           plusw2	equ	0xFDB
  4859                           fsr2h	equ	0xFDA
  4860                           fsr2l	equ	0xFD9
  4861                           status	equ	0xFD8
  4862                           
  4863 ;; *************** function _GPIO_Config *****************
  4864 ;; Defined at:
  4865 ;;		line 39 in file "_01_USER/GPIO.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;		None
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;		None
  4870 ;; Return value:  Size  Location     Type
  4871 ;;		None               void
  4872 ;; Registers used:
  4873 ;;		None
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/0
  4876 ;;		On exit  : 0/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4883 ;;Total ram usage:        0 bytes
  4884 ;; Hardware stack levels used:    1
  4885 ;; Hardware stack levels required when called:    3
  4886 ;; This function calls:
  4887 ;;		Nothing
  4888 ;; This function is called by:
  4889 ;;		_main
  4890 ;; This function uses a non-reentrant model
  4891 ;;
  4892                           
  4893                           	psect	text32
  4894  01F06C                     __ptext32:
  4895                           	opt stack 0
  4896  01F06C                     _GPIO_Config:
  4897                           	opt stack 27
  4898                           
  4899                           ; BSR set to: 0
  4900                           ;incstack = 0
  4901  01F06C  0012               	return		;funcret
  4902  01F06E                     __end_of_GPIO_Config:
  4903                           	opt stack 0
  4904                           tblptru	equ	0xFF8
  4905                           tblptrh	equ	0xFF7
  4906                           tblptrl	equ	0xFF6
  4907                           tablat	equ	0xFF5
  4908                           prodh	equ	0xFF4
  4909                           prodl	equ	0xFF3
  4910                           intcon	equ	0xFF2
  4911                           postinc0	equ	0xFEE
  4912                           wreg	equ	0xFE8
  4913                           postinc1	equ	0xFE6
  4914                           postdec1	equ	0xFE5
  4915                           fsr1h	equ	0xFE2
  4916                           fsr1l	equ	0xFE1
  4917                           indf2	equ	0xFDF
  4918                           postinc2	equ	0xFDE
  4919                           postdec2	equ	0xFDD
  4920                           plusw2	equ	0xFDB
  4921                           fsr2h	equ	0xFDA
  4922                           fsr2l	equ	0xFD9
  4923                           status	equ	0xFD8
  4924                           
  4925 ;; *************** function _ADC6_Init *****************
  4926 ;; Defined at:
  4927 ;;		line 38 in file "_01_USER/My_ADC.c"
  4928 ;; Parameters:    Size  Location     Type
  4929 ;;		None
  4930 ;; Auto vars:     Size  Location     Type
  4931 ;;		None
  4932 ;; Return value:  Size  Location     Type
  4933 ;;		None               void
  4934 ;; Registers used:
  4935 ;;		wreg, status,2, status,0, cstack
  4936 ;; Tracked objects:
  4937 ;;		On entry : 0/0
  4938 ;;		On exit  : 0/0
  4939 ;;		Unchanged: 0/0
  4940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4945 ;;Total ram usage:        0 bytes
  4946 ;; Hardware stack levels used:    1
  4947 ;; Hardware stack levels required when called:    4
  4948 ;; This function calls:
  4949 ;;		_OpenADC
  4950 ;; This function is called by:
  4951 ;;		_main
  4952 ;; This function uses a non-reentrant model
  4953 ;;
  4954                           
  4955                           	psect	text33
  4956  01F098                     __ptext33:
  4957                           	opt stack 0
  4958  01F098                     _ADC6_Init:
  4959                           	opt stack 26
  4960                           
  4961                           ;My_ADC.c: 41: OpenADC(0b11111111 &
  4962                           ;My_ADC.c: 42: 0b11110011 &
  4963                           ;My_ADC.c: 43: 0b10001111
  4964                           ;My_ADC.c: 44: ,
  4965                           ;My_ADC.c: 45: 0b10011011
  4966                           ;My_ADC.c: 46: ,
  4967                           ;My_ADC.c: 47: 0b00111111 &
  4968                           ;My_ADC.c: 48: 0b11111111 &
  4969                           ;My_ADC.c: 49: 0b11110111 &
  4970                           ;My_ADC.c: 50: 0b11111000
  4971                           ;My_ADC.c: 51: );
  4972                           
  4973                           ;incstack = 0
  4974  01F098  0E9B               	movlw	155
  4975  01F09A  0100               	movlb	0	; () banked
  4976  01F09C  6FE7               	movwf	OpenADC@config2& (0+255),b
  4977  01F09E  0E30               	movlw	48
  4978  01F0A0  0100               	movlb	0	; () banked
  4979  01F0A2  6FE8               	movwf	OpenADC@config3& (0+255),b
  4980  01F0A4  0E83               	movlw	131
  4981  01F0A6  EC0A  F0FB         	call	_OpenADC
  4982                           
  4983                           ;My_ADC.c: 53: (PIE1bits.ADIE=0);
  4984  01F0AA  9C9D               	bcf	3997,6,c	;volatile
  4985  01F0AC  0012               	return		;funcret
  4986  01F0AE                     __end_of_ADC6_Init:
  4987                           	opt stack 0
  4988                           tblptru	equ	0xFF8
  4989                           tblptrh	equ	0xFF7
  4990                           tblptrl	equ	0xFF6
  4991                           tablat	equ	0xFF5
  4992                           prodh	equ	0xFF4
  4993                           prodl	equ	0xFF3
  4994                           intcon	equ	0xFF2
  4995                           postinc0	equ	0xFEE
  4996                           wreg	equ	0xFE8
  4997                           postinc1	equ	0xFE6
  4998                           postdec1	equ	0xFE5
  4999                           fsr1h	equ	0xFE2
  5000                           fsr1l	equ	0xFE1
  5001                           indf2	equ	0xFDF
  5002                           postinc2	equ	0xFDE
  5003                           postdec2	equ	0xFDD
  5004                           plusw2	equ	0xFDB
  5005                           fsr2h	equ	0xFDA
  5006                           fsr2l	equ	0xFD9
  5007                           status	equ	0xFD8
  5008                           
  5009 ;; *************** function _OpenADC *****************
  5010 ;; Defined at:
  5011 ;;		line 305 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  5012 ;; Parameters:    Size  Location     Type
  5013 ;;  config          1    wreg     unsigned char 
  5014 ;;  config2         1    0[BANK0 ] unsigned char 
  5015 ;;  config3         1    1[BANK0 ] unsigned char 
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;  config          1    4[BANK0 ] unsigned char 
  5018 ;; Return value:  Size  Location     Type
  5019 ;;		None               void
  5020 ;; Registers used:
  5021 ;;		wreg, status,2, status,0
  5022 ;; Tracked objects:
  5023 ;;		On entry : 0/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5027 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5028 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5029 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5030 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5031 ;;Total ram usage:        5 bytes
  5032 ;; Hardware stack levels used:    1
  5033 ;; Hardware stack levels required when called:    3
  5034 ;; This function calls:
  5035 ;;		Nothing
  5036 ;; This function is called by:
  5037 ;;		_ADC6_Init
  5038 ;; This function uses a non-reentrant model
  5039 ;;
  5040                           
  5041                           	psect	text34
  5042  01F614                     __ptext34:
  5043                           	opt stack 0
  5044  01F614                     _OpenADC:
  5045                           	opt stack 26
  5046                           
  5047                           ;incstack = 0
  5048                           ;OpenADC@config stored from wreg
  5049  01F614  0100               	movlb	0	; () banked
  5050  01F616  6FEB               	movwf	OpenADC@config& (0+255),b
  5051                           
  5052                           ; BSR set to: 0
  5053  01F618  0E00               	movlw	0
  5054  01F61A  6EC2               	movwf	4034,c	;volatile
  5055  01F61C  0E00               	movlw	0
  5056  01F61E  6EC1               	movwf	4033,c	;volatile
  5057  01F620  0E00               	movlw	0
  5058  01F622  6EC0               	movwf	4032,c	;volatile
  5059                           
  5060                           ; BSR set to: 0
  5061  01F624  0100               	movlb	0	; () banked
  5062  01F626  51E7               	movf	OpenADC@config2& (0+255),w,b
  5063  01F628  0B7C               	andlw	124
  5064  01F62A  6EC2               	movwf	4034,c	;volatile
  5065                           
  5066                           ; BSR set to: 0
  5067  01F62C  C0E8  FFC1         	movff	OpenADC@config3,4033	;volatile
  5068                           
  5069                           ; BSR set to: 0
  5070  01F630  C0EB  F0E9         	movff	OpenADC@config,??_OpenADC
  5071  01F634  0100               	movlb	0	; () banked
  5072  01F636  90D8               	bcf	status,0,c
  5073  01F638  37E9               	rlcf	??_OpenADC& (0+255),f,b
  5074  01F63A  0100               	movlb	0	; () banked
  5075  01F63C  90D8               	bcf	status,0,c
  5076  01F63E  37E9               	rlcf	??_OpenADC& (0+255),f,b
  5077  01F640  0E38               	movlw	56
  5078  01F642  0100               	movlb	0	; () banked
  5079  01F644  17E9               	andwf	??_OpenADC& (0+255),f,b
  5080  01F646  C0EB  F0EA         	movff	OpenADC@config,??_OpenADC+1
  5081  01F64A  0100               	movlb	0	; () banked
  5082  01F64C  3BEA               	swapf	(??_OpenADC+1)& (0+255),f,b
  5083  01F64E  0E0F               	movlw	15
  5084  01F650  17EA               	andwf	(??_OpenADC+1)& (0+255),f,b
  5085  01F652  0E07               	movlw	7
  5086  01F654  0100               	movlb	0	; () banked
  5087  01F656  17EA               	andwf	(??_OpenADC+1)& (0+255),f,b
  5088  01F658  0100               	movlb	0	; () banked
  5089  01F65A  51EB               	movf	OpenADC@config& (0+255),w,b
  5090  01F65C  0B80               	andlw	128
  5091  01F65E  0100               	movlb	0	; () banked
  5092  01F660  11EA               	iorwf	(??_OpenADC+1)& (0+255),w,b
  5093  01F662  0100               	movlb	0	; () banked
  5094  01F664  11E9               	iorwf	??_OpenADC& (0+255),w,b
  5095  01F666  6EC0               	movwf	4032,c	;volatile
  5096                           
  5097                           ; BSR set to: 0
  5098  01F668  0100               	movlb	0	; () banked
  5099  01F66A  AFE7               	btfss	OpenADC@config2& (0+255),7,b
  5100  01F66C  D003               	goto	l572
  5101                           
  5102                           ; BSR set to: 0
  5103  01F66E  9C9E               	bcf	3998,6,c	;volatile
  5104  01F670  8C9D               	bsf	3997,6,c	;volatile
  5105  01F672  8CF2               	bsf	intcon,6,c	;volatile
  5106  01F674                     l572:
  5107                           
  5108                           ; BSR set to: 0
  5109  01F674  80C2               	bsf	4034,0,c	;volatile
  5110                           
  5111                           ; BSR set to: 0
  5112  01F676  0012               	return		;funcret
  5113  01F678                     __end_of_OpenADC:
  5114                           	opt stack 0
  5115                           tblptru	equ	0xFF8
  5116                           tblptrh	equ	0xFF7
  5117                           tblptrl	equ	0xFF6
  5118                           tablat	equ	0xFF5
  5119                           prodh	equ	0xFF4
  5120                           prodl	equ	0xFF3
  5121                           intcon	equ	0xFF2
  5122                           postinc0	equ	0xFEE
  5123                           wreg	equ	0xFE8
  5124                           postinc1	equ	0xFE6
  5125                           postdec1	equ	0xFE5
  5126                           fsr1h	equ	0xFE2
  5127                           fsr1l	equ	0xFE1
  5128                           indf2	equ	0xFDF
  5129                           postinc2	equ	0xFDE
  5130                           postdec2	equ	0xFDD
  5131                           plusw2	equ	0xFDB
  5132                           fsr2h	equ	0xFDA
  5133                           fsr2l	equ	0xFD9
  5134                           status	equ	0xFD8
  5135                           
  5136 ;; *************** function _Sys_Cyc *****************
  5137 ;; Defined at:
  5138 ;;		line 100 in file "_01_USER/My_Timer.c"
  5139 ;; Parameters:    Size  Location     Type
  5140 ;;		None
  5141 ;; Auto vars:     Size  Location     Type
  5142 ;;  _temp           1   23[COMRAM] unsigned char 
  5143 ;; Return value:  Size  Location     Type
  5144 ;;		None               void
  5145 ;; Registers used:
  5146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5147 ;; Tracked objects:
  5148 ;;		On entry : 0/0
  5149 ;;		On exit  : 0/0
  5150 ;;		Unchanged: 0/0
  5151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5153 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5154 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5155 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5156 ;;Total ram usage:       15 bytes
  5157 ;; Hardware stack levels used:    1
  5158 ;; Hardware stack levels required when called:    2
  5159 ;; This function calls:
  5160 ;;		_Key_ScanFSM
  5161 ;;		___llmod
  5162 ;;		i2_LED_Control
  5163 ;;		i2_SetTimer0
  5164 ;; This function is called by:
  5165 ;;		Interrupt level 2
  5166 ;; This function uses a non-reentrant model
  5167 ;;
  5168                           
  5169                           	psect	intcode
  5170  000002                     __pintcode:
  5171                           	opt stack 0
  5172  000002                     _Sys_Cyc:
  5173                           	opt stack 23
  5174                           
  5175                           ; BSR set to: 0
  5176                           ;incstack = 0
  5177  000002  CFFA F040          	movff	pclath,??_Sys_Cyc
  5178  000006  CFFB F041          	movff	pclatu,??_Sys_Cyc+1
  5179  00000A  CFE9 F042          	movff	fsr0l,??_Sys_Cyc+2
  5180  00000E  CFEA F043          	movff	fsr0h,??_Sys_Cyc+3
  5181  000012  CFE1 F044          	movff	fsr1l,??_Sys_Cyc+4
  5182  000016  CFE2 F045          	movff	fsr1h,??_Sys_Cyc+5
  5183  00001A  CFD9 F046          	movff	fsr2l,??_Sys_Cyc+6
  5184  00001E  CFDA F047          	movff	fsr2h,??_Sys_Cyc+7
  5185  000022  CFF3 F048          	movff	prodl,??_Sys_Cyc+8
  5186  000026  CFF4 F049          	movff	prodh,??_Sys_Cyc+9
  5187  00002A  CFF6 F04A          	movff	tblptrl,??_Sys_Cyc+10
  5188  00002E  CFF7 F04B          	movff	tblptrh,??_Sys_Cyc+11
  5189  000032  CFF8 F04C          	movff	tblptru,??_Sys_Cyc+12
  5190  000036  CFF5 F04D          	movff	tablat,??_Sys_Cyc+13
  5191                           
  5192                           ;My_Timer.c: 102: static unsigned char _overturn_LED = 0;
  5193                           ;My_Timer.c: 103: static char _Byte;
  5194                           ;My_Timer.c: 104: static char _flag = 0;
  5195                           ;My_Timer.c: 105: unsigned char _temp;
  5196                           ;My_Timer.c: 108: if(TMR0IF)
  5197  00003A  A4F2               	btfss	intcon,2,c	;volatile
  5198  00003C  D083               	goto	i2l2711
  5199                           
  5200                           ;My_Timer.c: 109: {
  5201                           ;My_Timer.c: 110: g_Timer_Cyc = (g_Timer_Cyc+1) % 4294967296;
  5202  00003E  0E01               	movlw	1
  5203  000040  2401               	addwf	_g_Timer_Cyc,w,c
  5204  000042  6E37               	movwf	___llmod@dividend,c
  5205  000044  0E00               	movlw	0
  5206  000046  2002               	addwfc	_g_Timer_Cyc+1,w,c
  5207  000048  6E38               	movwf	___llmod@dividend+1,c
  5208  00004A  0E00               	movlw	0
  5209  00004C  2003               	addwfc	_g_Timer_Cyc+2,w,c
  5210  00004E  6E39               	movwf	___llmod@dividend+2,c
  5211  000050  0E00               	movlw	0
  5212  000052  2004               	addwfc	_g_Timer_Cyc+3,w,c
  5213  000054  6E3A               	movwf	___llmod@dividend+3,c
  5214  000056  0E00               	movlw	0
  5215  000058  6E3B               	movwf	___llmod@divisor,c
  5216  00005A  0E00               	movlw	0
  5217  00005C  6E3C               	movwf	___llmod@divisor+1,c
  5218  00005E  0E00               	movlw	0
  5219  000060  6E3D               	movwf	___llmod@divisor+2,c
  5220  000062  0E00               	movlw	0
  5221  000064  6E3E               	movwf	___llmod@divisor+3,c
  5222  000066  EC72  F0FB         	call	___llmod	;wreg free
  5223  00006A  C037  F001         	movff	?___llmod,_g_Timer_Cyc
  5224  00006E  C038  F002         	movff	?___llmod+1,_g_Timer_Cyc+1
  5225  000072  C039  F003         	movff	?___llmod+2,_g_Timer_Cyc+2
  5226  000076  C03A  F004         	movff	?___llmod+3,_g_Timer_Cyc+3
  5227                           
  5228                           ;My_Timer.c: 111: SetTimer0(8);
  5229  00007A  0E00               	movlw	0
  5230  00007C  6E38               	movwf	i2SetTimer0@_tmr+1,c
  5231  00007E  0E08               	movlw	8
  5232  000080  6E37               	movwf	i2SetTimer0@_tmr,c
  5233  000082  EC57  F0F9         	call	i2_SetTimer0	;wreg free
  5234                           
  5235                           ;My_Timer.c: 114: if( g_Timer_Cyc%300 == 0 )
  5236  000086  C001  F037         	movff	_g_Timer_Cyc,___llmod@dividend
  5237  00008A  C002  F038         	movff	_g_Timer_Cyc+1,___llmod@dividend+1
  5238  00008E  C003  F039         	movff	_g_Timer_Cyc+2,___llmod@dividend+2
  5239  000092  C004  F03A         	movff	_g_Timer_Cyc+3,___llmod@dividend+3
  5240  000096  0E2C               	movlw	44
  5241  000098  6E3B               	movwf	___llmod@divisor,c
  5242  00009A  0E01               	movlw	1
  5243  00009C  6E3C               	movwf	___llmod@divisor+1,c
  5244  00009E  0E00               	movlw	0
  5245  0000A0  6E3D               	movwf	___llmod@divisor+2,c
  5246  0000A2  0E00               	movlw	0
  5247  0000A4  6E3E               	movwf	___llmod@divisor+3,c
  5248  0000A6  EC72  F0FB         	call	___llmod	;wreg free
  5249  0000AA  5037               	movf	?___llmod,w,c
  5250  0000AC  1038               	iorwf	?___llmod+1,w,c
  5251  0000AE  1039               	iorwf	?___llmod+2,w,c
  5252  0000B0  103A               	iorwf	?___llmod+3,w,c
  5253  0000B2  A4D8               	btfss	status,2,c
  5254  0000B4  D010               	goto	i2l266
  5255                           
  5256                           ;My_Timer.c: 115: {
  5257                           ;My_Timer.c: 116: _overturn_LED = ~_overturn_LED;
  5258  0000B6  1E0B               	comf	Sys_Cyc@_overturn_LED,f,c
  5259                           
  5260                           ;My_Timer.c: 117: if(_overturn_LED) LED_Control(3,1);
  5261  0000B8  500B               	movf	Sys_Cyc@_overturn_LED,w,c
  5262  0000BA  B4D8               	btfsc	status,2,c
  5263  0000BC  D006               	goto	i2l2703
  5264  0000BE  0E01               	movlw	1
  5265  0000C0  6E37               	movwf	i2LED_Control@_switch,c
  5266  0000C2  0E03               	movlw	3
  5267  0000C4  ECB4  F0F9         	call	i2_LED_Control
  5268  0000C8  D006               	goto	i2l266
  5269  0000CA                     i2l2703:
  5270                           
  5271                           ;My_Timer.c: 118: else LED_Control(3,0);
  5272  0000CA  0E00               	movlw	0
  5273  0000CC  6E37               	movwf	i2LED_Control@_switch,c
  5274  0000CE  0E03               	movlw	3
  5275  0000D0  ECB4  F0F9         	call	i2_LED_Control
  5276  0000D4  D000               	goto	i2l266
  5277  0000D6                     i2l266:
  5278                           
  5279                           ;My_Timer.c: 119: }
  5280                           ;My_Timer.c: 122: if( g_Timer_Cyc % 50 == 0 )
  5281  0000D6  C001  F037         	movff	_g_Timer_Cyc,___llmod@dividend
  5282  0000DA  C002  F038         	movff	_g_Timer_Cyc+1,___llmod@dividend+1
  5283  0000DE  C003  F039         	movff	_g_Timer_Cyc+2,___llmod@dividend+2
  5284  0000E2  C004  F03A         	movff	_g_Timer_Cyc+3,___llmod@dividend+3
  5285  0000E6  0E32               	movlw	50
  5286  0000E8  6E3B               	movwf	___llmod@divisor,c
  5287  0000EA  0E00               	movlw	0
  5288  0000EC  6E3C               	movwf	___llmod@divisor+1,c
  5289  0000EE  0E00               	movlw	0
  5290  0000F0  6E3D               	movwf	___llmod@divisor+2,c
  5291  0000F2  0E00               	movlw	0
  5292  0000F4  6E3E               	movwf	___llmod@divisor+3,c
  5293  0000F6  EC72  F0FB         	call	___llmod	;wreg free
  5294  0000FA  5037               	movf	?___llmod,w,c
  5295  0000FC  1038               	iorwf	?___llmod+1,w,c
  5296  0000FE  1039               	iorwf	?___llmod+2,w,c
  5297  000100  103A               	iorwf	?___llmod+3,w,c
  5298  000102  A4D8               	btfss	status,2,c
  5299  000104  D004               	goto	i2l2707
  5300                           
  5301                           ;My_Timer.c: 123: gs_Switch.Inquiry = 1;
  5302  000106  0E01               	movlw	1
  5303  000108  0100               	movlb	0	; () banked
  5304  00010A  6FD5               	movwf	(_gs_Switch+11)& (0+255),b
  5305  00010C  D000               	goto	i2l2707
  5306  00010E                     i2l2707:
  5307                           
  5308                           ;My_Timer.c: 126: if( g_Timer_Cyc % 10 == 0 )
  5309  00010E  C001  F037         	movff	_g_Timer_Cyc,___llmod@dividend
  5310  000112  C002  F038         	movff	_g_Timer_Cyc+1,___llmod@dividend+1
  5311  000116  C003  F039         	movff	_g_Timer_Cyc+2,___llmod@dividend+2
  5312  00011A  C004  F03A         	movff	_g_Timer_Cyc+3,___llmod@dividend+3
  5313  00011E  0E0A               	movlw	10
  5314  000120  6E3B               	movwf	___llmod@divisor,c
  5315  000122  0E00               	movlw	0
  5316  000124  6E3C               	movwf	___llmod@divisor+1,c
  5317  000126  0E00               	movlw	0
  5318  000128  6E3D               	movwf	___llmod@divisor+2,c
  5319  00012A  0E00               	movlw	0
  5320  00012C  6E3E               	movwf	___llmod@divisor+3,c
  5321  00012E  EC72  F0FB         	call	___llmod	;wreg free
  5322  000132  5037               	movf	?___llmod,w,c
  5323  000134  1038               	iorwf	?___llmod+1,w,c
  5324  000136  1039               	iorwf	?___llmod+2,w,c
  5325  000138  103A               	iorwf	?___llmod+3,w,c
  5326  00013A  A4D8               	btfss	status,2,c
  5327  00013C  D003               	goto	i2l2711
  5328                           
  5329                           ;My_Timer.c: 127: Key_ScanFSM();
  5330  00013E  EC93  F0F9         	call	_Key_ScanFSM	;wreg free
  5331  000142  D000               	goto	i2l2711
  5332  000144                     i2l2711:
  5333                           
  5334                           ;My_Timer.c: 129: }
  5335                           ;My_Timer.c: 132: if( RC1IF )
  5336  000144  AA9E               	btfss	3998,5,c	;volatile
  5337  000146  D025               	goto	i2l276
  5338                           
  5339                           ;My_Timer.c: 133: {
  5340                           ;My_Timer.c: 134: _temp = RCREG1;
  5341  000148  CFAE F04E          	movff	4014,Sys_Cyc@_temp	;volatile
  5342                           
  5343                           ;My_Timer.c: 135: if( gs_Switch.Receive == 0 )
  5344  00014C  0100               	movlb	0	; () banked
  5345  00014E  51D6               	movf	(_gs_Switch+12)& (0+255),w,b
  5346  000150  A4D8               	btfss	status,2,c
  5347  000152  D01F               	goto	i2l276
  5348                           
  5349                           ; BSR set to: 0
  5350                           ;My_Timer.c: 136: {
  5351                           ;My_Timer.c: 138: if( _temp == 0xff )
  5352  000154  284E               	incf	Sys_Cyc@_temp,w,c
  5353  000156  A4D8               	btfss	status,2,c
  5354  000158  D004               	goto	i2l273
  5355                           
  5356                           ; BSR set to: 0
  5357                           ;My_Timer.c: 139: {
  5358                           ;My_Timer.c: 140: _Byte = RS485_DATA_LENTH ;
  5359  00015A  0E07               	movlw	7
  5360  00015C  6E09               	movwf	Sys_Cyc@_Byte,c
  5361                           
  5362                           ;My_Timer.c: 141: _flag = 0;
  5363  00015E  0E00               	movlw	0
  5364  000160  6E0A               	movwf	Sys_Cyc@_flag,c
  5365  000162                     i2l273:
  5366                           
  5367                           ; BSR set to: 0
  5368                           ;My_Timer.c: 142: }
  5369                           ;My_Timer.c: 145: if ( _flag == 0 )
  5370  000162  500A               	movf	Sys_Cyc@_flag,w,c
  5371  000164  A4D8               	btfss	status,2,c
  5372  000166  D00C               	goto	i2l2725
  5373                           
  5374                           ; BSR set to: 0
  5375                           ;My_Timer.c: 146: {
  5376                           ;My_Timer.c: 147: _Byte -- ;
  5377  000168  0609               	decf	Sys_Cyc@_Byte,f,c
  5378                           
  5379                           ; BSR set to: 0
  5380                           ;My_Timer.c: 148: ga_RS485_ReceiveBuff[ _Byte ] = _temp;
  5381  00016A  5009               	movf	Sys_Cyc@_Byte,w,c
  5382  00016C  0D01               	mullw	1
  5383  00016E  0E00               	movlw	low _ga_RS485_ReceiveBuff
  5384  000170  24F3               	addwf	prodl,w,c
  5385  000172  6ED9               	movwf	fsr2l,c
  5386  000174  0E00               	movlw	high _ga_RS485_ReceiveBuff
  5387  000176  20F4               	addwfc	prodh,w,c
  5388  000178  6EDA               	movwf	fsr2h,c
  5389  00017A  C04E  FFDF         	movff	Sys_Cyc@_temp,indf2
  5390  00017E  D000               	goto	i2l2725
  5391  000180                     i2l2725:
  5392                           
  5393                           ; BSR set to: 0
  5394                           ;My_Timer.c: 149: }
  5395                           ;My_Timer.c: 152: if( _Byte == 0 )
  5396  000180  5009               	movf	Sys_Cyc@_Byte,w,c
  5397  000182  A4D8               	btfss	status,2,c
  5398  000184  D006               	goto	i2l276
  5399                           
  5400                           ; BSR set to: 0
  5401                           ;My_Timer.c: 153: {
  5402                           ;My_Timer.c: 154: gs_Switch.Receive = 1 ;
  5403  000186  0E01               	movlw	1
  5404  000188  0100               	movlb	0	; () banked
  5405  00018A  6FD6               	movwf	(_gs_Switch+12)& (0+255),b
  5406                           
  5407                           ;My_Timer.c: 155: _flag = 1;
  5408  00018C  0E01               	movlw	1
  5409  00018E  6E0A               	movwf	Sys_Cyc@_flag,c
  5410                           
  5411                           ; BSR set to: 0
  5412                           
  5413                           ; BSR set to: 0
  5414  000190  D000               	goto	i2l276
  5415  000192                     i2l276:
  5416  000192  C04D  FFF5         	movff	??_Sys_Cyc+13,tablat
  5417  000196  C04C  FFF8         	movff	??_Sys_Cyc+12,tblptru
  5418  00019A  C04B  FFF7         	movff	??_Sys_Cyc+11,tblptrh
  5419  00019E  C04A  FFF6         	movff	??_Sys_Cyc+10,tblptrl
  5420  0001A2  C049  FFF4         	movff	??_Sys_Cyc+9,prodh
  5421  0001A6  C048  FFF3         	movff	??_Sys_Cyc+8,prodl
  5422  0001AA  C047  FFDA         	movff	??_Sys_Cyc+7,fsr2h
  5423  0001AE  C046  FFD9         	movff	??_Sys_Cyc+6,fsr2l
  5424  0001B2  C045  FFE2         	movff	??_Sys_Cyc+5,fsr1h
  5425  0001B6  C044  FFE1         	movff	??_Sys_Cyc+4,fsr1l
  5426  0001BA  C043  FFEA         	movff	??_Sys_Cyc+3,fsr0h
  5427  0001BE  C042  FFE9         	movff	??_Sys_Cyc+2,fsr0l
  5428  0001C2  C041  FFFB         	movff	??_Sys_Cyc+1,pclatu
  5429  0001C6  C040  FFFA         	movff	??_Sys_Cyc,pclath
  5430  0001CA  0011               	retfie		f
  5431  0001CC                     __end_of_Sys_Cyc:
  5432                           	opt stack 0
  5433                           pclatu	equ	0xFFB
  5434                           pclath	equ	0xFFA
  5435                           tblptru	equ	0xFF8
  5436                           tblptrh	equ	0xFF7
  5437                           tblptrl	equ	0xFF6
  5438                           tablat	equ	0xFF5
  5439                           prodh	equ	0xFF4
  5440                           prodl	equ	0xFF3
  5441                           intcon	equ	0xFF2
  5442                           postinc0	equ	0xFEE
  5443                           fsr0h	equ	0xFEA
  5444                           fsr0l	equ	0xFE9
  5445                           wreg	equ	0xFE8
  5446                           postinc1	equ	0xFE6
  5447                           postdec1	equ	0xFE5
  5448                           fsr1h	equ	0xFE2
  5449                           fsr1l	equ	0xFE1
  5450                           indf2	equ	0xFDF
  5451                           postinc2	equ	0xFDE
  5452                           postdec2	equ	0xFDD
  5453                           plusw2	equ	0xFDB
  5454                           fsr2h	equ	0xFDA
  5455                           fsr2l	equ	0xFD9
  5456                           status	equ	0xFD8
  5457                           
  5458 ;; *************** function i2_SetTimer0 *****************
  5459 ;; Defined at:
  5460 ;;		line 81 in file "_01_USER/My_Timer.c"
  5461 ;; Parameters:    Size  Location     Type
  5462 ;;  _tmr            2    0[COMRAM] unsigned int 
  5463 ;; Auto vars:     Size  Location     Type
  5464 ;;		None
  5465 ;; Return value:  Size  Location     Type
  5466 ;;		None               void
  5467 ;; Registers used:
  5468 ;;		wreg, status,2, status,0
  5469 ;; Tracked objects:
  5470 ;;		On entry : 0/0
  5471 ;;		On exit  : 0/0
  5472 ;;		Unchanged: 0/0
  5473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5474 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5476 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5477 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5478 ;;Total ram usage:        4 bytes
  5479 ;; Hardware stack levels used:    1
  5480 ;; This function calls:
  5481 ;;		Nothing
  5482 ;; This function is called by:
  5483 ;;		_Sys_Cyc
  5484 ;; This function uses a non-reentrant model
  5485 ;;
  5486                           
  5487                           	psect	text36
  5488  01F2AE                     __ptext36:
  5489                           	opt stack 0
  5490  01F2AE                     i2_SetTimer0:
  5491                           	opt stack 24
  5492                           
  5493                           ;My_Timer.c: 83: if(_tmr >= 0xfffe) _tmr = 0xffff;
  5494                           
  5495                           ;incstack = 0
  5496  01F2AE  0EFE               	movlw	254
  5497  01F2B0  5C37               	subwf	i2SetTimer0@_tmr,w,c
  5498  01F2B2  0EFF               	movlw	255
  5499  01F2B4  5838               	subwfb	i2SetTimer0@_tmr+1,w,c
  5500  01F2B6  A0D8               	btfss	status,0,c
  5501  01F2B8  D003               	goto	i2l2641
  5502  01F2BA  6837               	setf	i2SetTimer0@_tmr,c
  5503  01F2BC  6838               	setf	i2SetTimer0@_tmr+1,c
  5504  01F2BE  D000               	goto	i2l2641
  5505  01F2C0                     i2l2641:
  5506                           
  5507                           ;My_Timer.c: 84: _tmr=0xffff-_tmr;
  5508  01F2C0  C037  F039         	movff	i2SetTimer0@_tmr,??i2_SetTimer0
  5509  01F2C4  C038  F03A         	movff	i2SetTimer0@_tmr+1,??i2_SetTimer0+1
  5510  01F2C8  1E39               	comf	??i2_SetTimer0,f,c
  5511  01F2CA  1E3A               	comf	??i2_SetTimer0+1,f,c
  5512  01F2CC  4A39               	infsnz	??i2_SetTimer0,f,c
  5513  01F2CE  2A3A               	incf	??i2_SetTimer0+1,f,c
  5514  01F2D0  0EFF               	movlw	255
  5515  01F2D2  2439               	addwf	??i2_SetTimer0,w,c
  5516  01F2D4  6E37               	movwf	i2SetTimer0@_tmr,c
  5517  01F2D6  0EFF               	movlw	255
  5518  01F2D8  203A               	addwfc	??i2_SetTimer0+1,w,c
  5519  01F2DA  6E38               	movwf	i2SetTimer0@_tmr+1,c
  5520                           
  5521                           ;My_Timer.c: 85: TMR0H = _tmr/256;
  5522  01F2DC  5038               	movf	i2SetTimer0@_tmr+1,w,c
  5523  01F2DE  6ED7               	movwf	4055,c	;volatile
  5524                           
  5525                           ;My_Timer.c: 86: TMR0L = _tmr%256;
  5526  01F2E0  C037  FFD6         	movff	i2SetTimer0@_tmr,4054	;volatile
  5527                           
  5528                           ;My_Timer.c: 87: TMR0IF = 0;
  5529  01F2E4  94F2               	bcf	intcon,2,c	;volatile
  5530  01F2E6  0012               	return		;funcret
  5531  01F2E8                     __end_ofi2_SetTimer0:
  5532                           	opt stack 0
  5533                           pclatu	equ	0xFFB
  5534                           pclath	equ	0xFFA
  5535                           tblptru	equ	0xFF8
  5536                           tblptrh	equ	0xFF7
  5537                           tblptrl	equ	0xFF6
  5538                           tablat	equ	0xFF5
  5539                           prodh	equ	0xFF4
  5540                           prodl	equ	0xFF3
  5541                           intcon	equ	0xFF2
  5542                           postinc0	equ	0xFEE
  5543                           fsr0h	equ	0xFEA
  5544                           fsr0l	equ	0xFE9
  5545                           wreg	equ	0xFE8
  5546                           postinc1	equ	0xFE6
  5547                           postdec1	equ	0xFE5
  5548                           fsr1h	equ	0xFE2
  5549                           fsr1l	equ	0xFE1
  5550                           indf2	equ	0xFDF
  5551                           postinc2	equ	0xFDE
  5552                           postdec2	equ	0xFDD
  5553                           plusw2	equ	0xFDB
  5554                           fsr2h	equ	0xFDA
  5555                           fsr2l	equ	0xFD9
  5556                           status	equ	0xFD8
  5557                           
  5558 ;; *************** function i2_LED_Control *****************
  5559 ;; Defined at:
  5560 ;;		line 58 in file "_01_USER/GPIO.c"
  5561 ;; Parameters:    Size  Location     Type
  5562 ;;  _LED_num        1    wreg     unsigned char 
  5563 ;;  _switch         1    0[COMRAM] unsigned char 
  5564 ;; Auto vars:     Size  Location     Type
  5565 ;;  _LED_num        1    1[COMRAM] unsigned char 
  5566 ;; Return value:  Size  Location     Type
  5567 ;;		None               void
  5568 ;; Registers used:
  5569 ;;		wreg, status,2, status,0
  5570 ;; Tracked objects:
  5571 ;;		On entry : 0/0
  5572 ;;		On exit  : 0/0
  5573 ;;		Unchanged: 0/0
  5574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5575 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5576 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5578 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5579 ;;Total ram usage:        2 bytes
  5580 ;; Hardware stack levels used:    1
  5581 ;; This function calls:
  5582 ;;		Nothing
  5583 ;; This function is called by:
  5584 ;;		_Sys_Cyc
  5585 ;; This function uses a non-reentrant model
  5586 ;;
  5587                           
  5588                           	psect	text37
  5589  01F368                     __ptext37:
  5590                           	opt stack 0
  5591  01F368                     i2_LED_Control:
  5592                           	opt stack 24
  5593                           
  5594                           ;incstack = 0
  5595                           ;i2LED_Control@_LED_num stored from wreg
  5596  01F368  6E38               	movwf	i2LED_Control@_LED_num,c
  5597                           
  5598                           ;GPIO.c: 62: if(_LED_num == 1)
  5599  01F36A  0438               	decf	i2LED_Control@_LED_num,w,c
  5600  01F36C  A4D8               	btfss	status,2,c
  5601  01F36E  D007               	goto	i2l2657
  5602                           
  5603                           ;GPIO.c: 63: if(_switch) LED_BUS |= 0x01;
  5604  01F370  5037               	movf	i2LED_Control@_switch,w,c
  5605  01F372  B4D8               	btfsc	status,2,c
  5606  01F374  D002               	goto	i2l2655
  5607  01F376  800C               	bsf	_LED_BUS,0,c
  5608  01F378  D002               	goto	i2l2657
  5609  01F37A                     i2l2655:
  5610                           
  5611                           ;GPIO.c: 64: else LED_BUS &= 0xFE;
  5612  01F37A  900C               	bcf	_LED_BUS,0,c
  5613  01F37C  D000               	goto	i2l2657
  5614  01F37E                     i2l2657:
  5615                           
  5616                           ;GPIO.c: 66: if(_LED_num == 2)
  5617  01F37E  0E02               	movlw	2
  5618  01F380  1838               	xorwf	i2LED_Control@_LED_num,w,c
  5619  01F382  A4D8               	btfss	status,2,c
  5620  01F384  D007               	goto	i2l2665
  5621                           
  5622                           ;GPIO.c: 67: if(_switch) LED_BUS |= 0x02;
  5623  01F386  5037               	movf	i2LED_Control@_switch,w,c
  5624  01F388  B4D8               	btfsc	status,2,c
  5625  01F38A  D002               	goto	i2l2663
  5626  01F38C  820C               	bsf	_LED_BUS,1,c
  5627  01F38E  D002               	goto	i2l2665
  5628  01F390                     i2l2663:
  5629                           
  5630                           ;GPIO.c: 68: else LED_BUS &= 0xFD;
  5631  01F390  920C               	bcf	_LED_BUS,1,c
  5632  01F392  D000               	goto	i2l2665
  5633  01F394                     i2l2665:
  5634                           
  5635                           ;GPIO.c: 70: if(_LED_num == 3)
  5636  01F394  0E03               	movlw	3
  5637  01F396  1838               	xorwf	i2LED_Control@_LED_num,w,c
  5638  01F398  A4D8               	btfss	status,2,c
  5639  01F39A  0012               	return	
  5640                           
  5641                           ;GPIO.c: 71: if(_switch) LED_BUS |= 0x04;
  5642  01F39C  5037               	movf	i2LED_Control@_switch,w,c
  5643  01F39E  B4D8               	btfsc	status,2,c
  5644  01F3A0  D002               	goto	i2l2671
  5645  01F3A2  840C               	bsf	_LED_BUS,2,c
  5646  01F3A4  0012               	return	
  5647  01F3A6                     i2l2671:
  5648                           
  5649                           ;GPIO.c: 72: else LED_BUS &= 0xFB;
  5650  01F3A6  940C               	bcf	_LED_BUS,2,c
  5651  01F3A8  0012               	return	
  5652  01F3AA  0012               	return		;funcret
  5653  01F3AC                     __end_ofi2_LED_Control:
  5654                           	opt stack 0
  5655                           pclatu	equ	0xFFB
  5656                           pclath	equ	0xFFA
  5657                           tblptru	equ	0xFF8
  5658                           tblptrh	equ	0xFF7
  5659                           tblptrl	equ	0xFF6
  5660                           tablat	equ	0xFF5
  5661                           prodh	equ	0xFF4
  5662                           prodl	equ	0xFF3
  5663                           intcon	equ	0xFF2
  5664                           postinc0	equ	0xFEE
  5665                           fsr0h	equ	0xFEA
  5666                           fsr0l	equ	0xFE9
  5667                           wreg	equ	0xFE8
  5668                           postinc1	equ	0xFE6
  5669                           postdec1	equ	0xFE5
  5670                           fsr1h	equ	0xFE2
  5671                           fsr1l	equ	0xFE1
  5672                           indf2	equ	0xFDF
  5673                           postinc2	equ	0xFDE
  5674                           postdec2	equ	0xFDD
  5675                           plusw2	equ	0xFDB
  5676                           fsr2h	equ	0xFDA
  5677                           fsr2l	equ	0xFD9
  5678                           status	equ	0xFD8
  5679                           
  5680 ;; *************** function ___llmod *****************
  5681 ;; Defined at:
  5682 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  5683 ;; Parameters:    Size  Location     Type
  5684 ;;  dividend        4    0[COMRAM] unsigned long 
  5685 ;;  divisor         4    4[COMRAM] unsigned long 
  5686 ;; Auto vars:     Size  Location     Type
  5687 ;;  counter         1    8[COMRAM] unsigned char 
  5688 ;; Return value:  Size  Location     Type
  5689 ;;                  4    0[COMRAM] unsigned long 
  5690 ;; Registers used:
  5691 ;;		wreg, status,2, status,0
  5692 ;; Tracked objects:
  5693 ;;		On entry : 0/0
  5694 ;;		On exit  : 0/0
  5695 ;;		Unchanged: 0/0
  5696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5697 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5698 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5700 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5701 ;;Total ram usage:        9 bytes
  5702 ;; Hardware stack levels used:    1
  5703 ;; This function calls:
  5704 ;;		Nothing
  5705 ;; This function is called by:
  5706 ;;		_Sys_Cyc
  5707 ;; This function uses a non-reentrant model
  5708 ;;
  5709                           
  5710                           	psect	text38
  5711  01F6E4                     __ptext38:
  5712                           	opt stack 0
  5713  01F6E4                     ___llmod:
  5714                           	opt stack 24
  5715                           
  5716                           ;incstack = 0
  5717  01F6E4  503B               	movf	___llmod@divisor,w,c
  5718  01F6E6  103C               	iorwf	___llmod@divisor+1,w,c
  5719  01F6E8  103D               	iorwf	___llmod@divisor+2,w,c
  5720  01F6EA  103E               	iorwf	___llmod@divisor+3,w,c
  5721  01F6EC  B4D8               	btfsc	status,2,c
  5722  01F6EE  D029               	goto	i2l1107
  5723  01F6F0  0E01               	movlw	1
  5724  01F6F2  6E3F               	movwf	___llmod@counter,c
  5725  01F6F4  D007               	goto	i2l2627
  5726  01F6F6                     i2l2625:
  5727  01F6F6  90D8               	bcf	status,0,c
  5728  01F6F8  363B               	rlcf	___llmod@divisor,f,c
  5729  01F6FA  363C               	rlcf	___llmod@divisor+1,f,c
  5730  01F6FC  363D               	rlcf	___llmod@divisor+2,f,c
  5731  01F6FE  363E               	rlcf	___llmod@divisor+3,f,c
  5732  01F700  2A3F               	incf	___llmod@counter,f,c
  5733  01F702  D000               	goto	i2l2627
  5734  01F704                     i2l2627:
  5735  01F704  BE3E               	btfsc	___llmod@divisor+3,7,c
  5736  01F706  D002               	goto	i2l2629
  5737  01F708  D7F6               	goto	i2l2625
  5738  01F70A  D000               	goto	i2l2629
  5739  01F70C                     i2l2629:
  5740  01F70C  503B               	movf	___llmod@divisor,w,c
  5741  01F70E  5C37               	subwf	___llmod@dividend,w,c
  5742  01F710  503C               	movf	___llmod@divisor+1,w,c
  5743  01F712  5838               	subwfb	___llmod@dividend+1,w,c
  5744  01F714  503D               	movf	___llmod@divisor+2,w,c
  5745  01F716  5839               	subwfb	___llmod@dividend+2,w,c
  5746  01F718  503E               	movf	___llmod@divisor+3,w,c
  5747  01F71A  583A               	subwfb	___llmod@dividend+3,w,c
  5748  01F71C  A0D8               	btfss	status,0,c
  5749  01F71E  D009               	goto	i2l2633
  5750  01F720  503B               	movf	___llmod@divisor,w,c
  5751  01F722  5E37               	subwf	___llmod@dividend,f,c
  5752  01F724  503C               	movf	___llmod@divisor+1,w,c
  5753  01F726  5A38               	subwfb	___llmod@dividend+1,f,c
  5754  01F728  503D               	movf	___llmod@divisor+2,w,c
  5755  01F72A  5A39               	subwfb	___llmod@dividend+2,f,c
  5756  01F72C  503E               	movf	___llmod@divisor+3,w,c
  5757  01F72E  5A3A               	subwfb	___llmod@dividend+3,f,c
  5758  01F730  D000               	goto	i2l2633
  5759  01F732                     i2l2633:
  5760  01F732  90D8               	bcf	status,0,c
  5761  01F734  323E               	rrcf	___llmod@divisor+3,f,c
  5762  01F736  323D               	rrcf	___llmod@divisor+2,f,c
  5763  01F738  323C               	rrcf	___llmod@divisor+1,f,c
  5764  01F73A  323B               	rrcf	___llmod@divisor,f,c
  5765  01F73C  2E3F               	decfsz	___llmod@counter,f,c
  5766  01F73E  D7E6               	goto	i2l2629
  5767  01F740  D000               	goto	i2l1107
  5768  01F742                     i2l1107:
  5769  01F742  C037  F037         	movff	___llmod@dividend,?___llmod
  5770  01F746  C038  F038         	movff	___llmod@dividend+1,?___llmod+1
  5771  01F74A  C039  F039         	movff	___llmod@dividend+2,?___llmod+2
  5772  01F74E  C03A  F03A         	movff	___llmod@dividend+3,?___llmod+3
  5773  01F752  0012               	return		;funcret
  5774  01F754                     __end_of___llmod:
  5775                           	opt stack 0
  5776                           pclatu	equ	0xFFB
  5777                           pclath	equ	0xFFA
  5778                           tblptru	equ	0xFF8
  5779                           tblptrh	equ	0xFF7
  5780                           tblptrl	equ	0xFF6
  5781                           tablat	equ	0xFF5
  5782                           prodh	equ	0xFF4
  5783                           prodl	equ	0xFF3
  5784                           intcon	equ	0xFF2
  5785                           postinc0	equ	0xFEE
  5786                           fsr0h	equ	0xFEA
  5787                           fsr0l	equ	0xFE9
  5788                           wreg	equ	0xFE8
  5789                           postinc1	equ	0xFE6
  5790                           postdec1	equ	0xFE5
  5791                           fsr1h	equ	0xFE2
  5792                           fsr1l	equ	0xFE1
  5793                           indf2	equ	0xFDF
  5794                           postinc2	equ	0xFDE
  5795                           postdec2	equ	0xFDD
  5796                           plusw2	equ	0xFDB
  5797                           fsr2h	equ	0xFDA
  5798                           fsr2l	equ	0xFD9
  5799                           status	equ	0xFD8
  5800                           
  5801 ;; *************** function _Key_ScanFSM *****************
  5802 ;; Defined at:
  5803 ;;		line 91 in file "_01_USER/Key.c"
  5804 ;; Parameters:    Size  Location     Type
  5805 ;;		None
  5806 ;; Auto vars:     Size  Location     Type
  5807 ;;		None
  5808 ;; Return value:  Size  Location     Type
  5809 ;;		None               void
  5810 ;; Registers used:
  5811 ;;		wreg, status,2, status,0, cstack
  5812 ;; Tracked objects:
  5813 ;;		On entry : 0/0
  5814 ;;		On exit  : 0/0
  5815 ;;		Unchanged: 0/0
  5816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5821 ;;Total ram usage:        0 bytes
  5822 ;; Hardware stack levels used:    1
  5823 ;; Hardware stack levels required when called:    1
  5824 ;; This function calls:
  5825 ;;		_Key_Scan
  5826 ;; This function is called by:
  5827 ;;		_Sys_Cyc
  5828 ;; This function uses a non-reentrant model
  5829 ;;
  5830                           
  5831                           	psect	text39
  5832  01F326                     __ptext39:
  5833                           	opt stack 0
  5834  01F326                     _Key_ScanFSM:
  5835                           	opt stack 23
  5836                           
  5837                           ;Key.c: 93: Key_Scan();
  5838                           
  5839                           ;incstack = 0
  5840  01F326  EC20  F0F9         	call	_Key_Scan	;wreg free
  5841                           
  5842                           ;Key.c: 94: if( s_Local_Key_FSM.key_BUS & 0x01 ) s_Local_Key_FSM.a_key_count[0]++;
  5843  01F32A  A022               	btfss	_s_Local_Key_FSM,0,c	;volatile
  5844  01F32C  D003               	goto	i2l2565
  5845  01F32E  4A25               	infsnz	_s_Local_Key_FSM+3,f,c	;volatile
  5846  01F330  2A26               	incf	_s_Local_Key_FSM+4,f,c	;volatile
  5847  01F332  D000               	goto	i2l2565
  5848  01F334                     i2l2565:
  5849                           
  5850                           ;Key.c: 95: if( s_Local_Key_FSM.key_BUS & 0x02 ) s_Local_Key_FSM.a_key_count[1]++;
  5851  01F334  A222               	btfss	_s_Local_Key_FSM,1,c	;volatile
  5852  01F336  D003               	goto	i2l2569
  5853  01F338  4A27               	infsnz	_s_Local_Key_FSM+5,f,c	;volatile
  5854  01F33A  2A28               	incf	_s_Local_Key_FSM+6,f,c	;volatile
  5855  01F33C  D000               	goto	i2l2569
  5856  01F33E                     i2l2569:
  5857                           
  5858                           ;Key.c: 96: if( s_Local_Key_FSM.key_BUS & 0x04 ) s_Local_Key_FSM.a_key_count[2]++;
  5859  01F33E  A422               	btfss	_s_Local_Key_FSM,2,c	;volatile
  5860  01F340  D003               	goto	i2l2573
  5861  01F342  4A29               	infsnz	_s_Local_Key_FSM+7,f,c	;volatile
  5862  01F344  2A2A               	incf	_s_Local_Key_FSM+8,f,c	;volatile
  5863  01F346  D000               	goto	i2l2573
  5864  01F348                     i2l2573:
  5865                           
  5866                           ;Key.c: 97: if( s_Local_Key_FSM.key_BUS & 0x08 ) s_Local_Key_FSM.a_key_count[3]++;
  5867  01F348  A622               	btfss	_s_Local_Key_FSM,3,c	;volatile
  5868  01F34A  D003               	goto	i2l2577
  5869  01F34C  4A2B               	infsnz	_s_Local_Key_FSM+9,f,c	;volatile
  5870  01F34E  2A2C               	incf	_s_Local_Key_FSM+10,f,c	;volatile
  5871  01F350  D000               	goto	i2l2577
  5872  01F352                     i2l2577:
  5873                           
  5874                           ;Key.c: 98: if( s_Local_Key_FSM.key_BUS & 0x10 ) s_Local_Key_FSM.a_key_count[4]++;
  5875  01F352  A822               	btfss	_s_Local_Key_FSM,4,c	;volatile
  5876  01F354  D003               	goto	i2l2581
  5877  01F356  4A2D               	infsnz	_s_Local_Key_FSM+11,f,c	;volatile
  5878  01F358  2A2E               	incf	_s_Local_Key_FSM+12,f,c	;volatile
  5879  01F35A  D000               	goto	i2l2581
  5880  01F35C                     i2l2581:
  5881                           
  5882                           ;Key.c: 99: if( s_Local_Key_FSM.key_BUS & 0x20 ) s_Local_Key_FSM.a_key_count[5]++;
  5883  01F35C  AA22               	btfss	_s_Local_Key_FSM,5,c	;volatile
  5884  01F35E  0012               	return	
  5885  01F360  4A2F               	infsnz	_s_Local_Key_FSM+13,f,c	;volatile
  5886  01F362  2A30               	incf	_s_Local_Key_FSM+14,f,c	;volatile
  5887  01F364  0012               	return	
  5888  01F366  0012               	return		;funcret
  5889  01F368                     __end_of_Key_ScanFSM:
  5890                           	opt stack 0
  5891                           pclatu	equ	0xFFB
  5892                           pclath	equ	0xFFA
  5893                           tblptru	equ	0xFF8
  5894                           tblptrh	equ	0xFF7
  5895                           tblptrl	equ	0xFF6
  5896                           tablat	equ	0xFF5
  5897                           prodh	equ	0xFF4
  5898                           prodl	equ	0xFF3
  5899                           intcon	equ	0xFF2
  5900                           postinc0	equ	0xFEE
  5901                           fsr0h	equ	0xFEA
  5902                           fsr0l	equ	0xFE9
  5903                           wreg	equ	0xFE8
  5904                           postinc1	equ	0xFE6
  5905                           postdec1	equ	0xFE5
  5906                           fsr1h	equ	0xFE2
  5907                           fsr1l	equ	0xFE1
  5908                           indf2	equ	0xFDF
  5909                           postinc2	equ	0xFDE
  5910                           postdec2	equ	0xFDD
  5911                           plusw2	equ	0xFDB
  5912                           fsr2h	equ	0xFDA
  5913                           fsr2l	equ	0xFD9
  5914                           status	equ	0xFD8
  5915                           
  5916 ;; *************** function _Key_Scan *****************
  5917 ;; Defined at:
  5918 ;;		line 69 in file "_01_USER/Key.c"
  5919 ;; Parameters:    Size  Location     Type
  5920 ;;		None
  5921 ;; Auto vars:     Size  Location     Type
  5922 ;;		None
  5923 ;; Return value:  Size  Location     Type
  5924 ;;		None               void
  5925 ;; Registers used:
  5926 ;;		wreg, status,2, status,0
  5927 ;; Tracked objects:
  5928 ;;		On entry : 0/0
  5929 ;;		On exit  : 0/0
  5930 ;;		Unchanged: 0/0
  5931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5936 ;;Total ram usage:        0 bytes
  5937 ;; Hardware stack levels used:    1
  5938 ;; This function calls:
  5939 ;;		Nothing
  5940 ;; This function is called by:
  5941 ;;		_Key_ScanFSM
  5942 ;; This function uses a non-reentrant model
  5943 ;;
  5944                           
  5945                           	psect	text40
  5946  01F240                     __ptext40:
  5947                           	opt stack 0
  5948  01F240                     _Key_Scan:
  5949                           	opt stack 23
  5950                           
  5951                           ;Key.c: 71: s_Local_Key_FSM.key_BUS = 0x00;
  5952                           
  5953                           ;incstack = 0
  5954  01F240  0E00               	movlw	0
  5955  01F242  6E22               	movwf	_s_Local_Key_FSM,c	;volatile
  5956                           
  5957                           ;Key.c: 73: if( RC1 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 0) ;
  5958  01F244  B282               	btfsc	3970,1,c	;volatile
  5959  01F246  D002               	goto	i2l2265
  5960  01F248  8022               	bsf	_s_Local_Key_FSM,0,c	;volatile
  5961  01F24A  D000               	goto	i2l2265
  5962  01F24C                     i2l2265:
  5963                           
  5964                           ;Key.c: 74: if( RF1 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 1) ;
  5965  01F24C  B285               	btfsc	3973,1,c	;volatile
  5966  01F24E  D002               	goto	i2l2269
  5967  01F250  8222               	bsf	_s_Local_Key_FSM,1,c	;volatile
  5968  01F252  D000               	goto	i2l2269
  5969  01F254                     i2l2269:
  5970                           
  5971                           ;Key.c: 75: if( RF2 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 2) ;
  5972  01F254  B485               	btfsc	3973,2,c	;volatile
  5973  01F256  D002               	goto	i2l2273
  5974  01F258  8422               	bsf	_s_Local_Key_FSM,2,c	;volatile
  5975  01F25A  D000               	goto	i2l2273
  5976  01F25C                     i2l2273:
  5977                           
  5978                           ;Key.c: 76: if( RA4 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 3) ;
  5979  01F25C  B880               	btfsc	3968,4,c	;volatile
  5980  01F25E  D002               	goto	i2l2277
  5981  01F260  8622               	bsf	_s_Local_Key_FSM,3,c	;volatile
  5982  01F262  D000               	goto	i2l2277
  5983  01F264                     i2l2277:
  5984                           
  5985                           ;Key.c: 77: if( RA5 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 4) ;
  5986  01F264  BA80               	btfsc	3968,5,c	;volatile
  5987  01F266  D002               	goto	i2l2281
  5988  01F268  8822               	bsf	_s_Local_Key_FSM,4,c	;volatile
  5989  01F26A  D000               	goto	i2l2281
  5990  01F26C                     i2l2281:
  5991                           
  5992                           ;Key.c: 78: if( RF3 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 5) ;
  5993  01F26C  B685               	btfsc	3973,3,c	;volatile
  5994  01F26E  0012               	return	
  5995  01F270  8A22               	bsf	_s_Local_Key_FSM,5,c	;volatile
  5996  01F272  0012               	return	
  5997  01F274  0012               	return		;funcret
  5998  01F276                     __end_of_Key_Scan:
  5999                           	opt stack 0
  6000  0000                     pclatu	equ	0xFFB
  6001                           pclath	equ	0xFFA
  6002                           tblptru	equ	0xFF8
  6003                           tblptrh	equ	0xFF7
  6004                           tblptrl	equ	0xFF6
  6005                           tablat	equ	0xFF5
  6006                           prodh	equ	0xFF4
  6007                           prodl	equ	0xFF3
  6008                           intcon	equ	0xFF2
  6009                           postinc0	equ	0xFEE
  6010                           fsr0h	equ	0xFEA
  6011                           fsr0l	equ	0xFE9
  6012                           wreg	equ	0xFE8
  6013                           postinc1	equ	0xFE6
  6014                           postdec1	equ	0xFE5
  6015                           fsr1h	equ	0xFE2
  6016                           fsr1l	equ	0xFE1
  6017                           indf2	equ	0xFDF
  6018                           postinc2	equ	0xFDE
  6019                           postdec2	equ	0xFDD
  6020                           plusw2	equ	0xFDB
  6021                           fsr2h	equ	0xFDA
  6022                           fsr2l	equ	0xFD9
  6023                           status	equ	0xFD8
  6024                           pclatu	equ	0xFFB
  6025                           pclath	equ	0xFFA
  6026                           tblptru	equ	0xFF8
  6027                           tblptrh	equ	0xFF7
  6028                           tblptrl	equ	0xFF6
  6029                           tablat	equ	0xFF5
  6030                           prodh	equ	0xFF4
  6031                           prodl	equ	0xFF3
  6032                           intcon	equ	0xFF2
  6033                           postinc0	equ	0xFEE
  6034                           fsr0h	equ	0xFEA
  6035                           fsr0l	equ	0xFE9
  6036                           wreg	equ	0xFE8
  6037                           postinc1	equ	0xFE6
  6038                           postdec1	equ	0xFE5
  6039                           fsr1h	equ	0xFE2
  6040                           fsr1l	equ	0xFE1
  6041                           indf2	equ	0xFDF
  6042                           postinc2	equ	0xFDE
  6043                           postdec2	equ	0xFDD
  6044                           plusw2	equ	0xFDB
  6045                           fsr2h	equ	0xFDA
  6046                           fsr2l	equ	0xFD9
  6047                           status	equ	0xFD8
  6048                           
  6049                           	psect	rparam
  6050  0000                     pclatu	equ	0xFFB
  6051                           pclath	equ	0xFFA
  6052                           tblptru	equ	0xFF8
  6053                           tblptrh	equ	0xFF7
  6054                           tblptrl	equ	0xFF6
  6055                           tablat	equ	0xFF5
  6056                           prodh	equ	0xFF4
  6057                           prodl	equ	0xFF3
  6058                           intcon	equ	0xFF2
  6059                           postinc0	equ	0xFEE
  6060                           fsr0h	equ	0xFEA
  6061                           fsr0l	equ	0xFE9
  6062                           wreg	equ	0xFE8
  6063                           postinc1	equ	0xFE6
  6064                           postdec1	equ	0xFE5
  6065                           fsr1h	equ	0xFE2
  6066                           fsr1l	equ	0xFE1
  6067                           indf2	equ	0xFDF
  6068                           postinc2	equ	0xFDE
  6069                           postdec2	equ	0xFDD
  6070                           plusw2	equ	0xFDB
  6071                           fsr2h	equ	0xFDA
  6072                           fsr2l	equ	0xFD9
  6073                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         174
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     24      78
    BANK0           160     12     147
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    RS485_RecogniseMessage$0	PTR unsigned char  size(2) Largest target is 0
		 -> ga_RS485_ReceiveBuff(COMRAM[0]), 

    VerifyCRC$0	PTR unsigned char  size(2) Largest target is 0
		 -> ga_RS485_SendBuff(COMRAM[0]), 

    RS485_SendDate@date_dress	PTR unsigned char  size(2) Largest target is 0
		 -> ga_RS485_SendBuff(COMRAM[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Sys_Cyc in COMRAM

    _Sys_Cyc->___llmod

Critical Paths under _main in BANK0

    _main->_ShowResult
    _Timer0_Init->_SetTimer0
    _ShowResult->_TM1640_Show_integer
    _TM1640_Show_integer->_TM1640_Writer_Dates
    _TM1640_Show_integer->___lwdiv
    _TM1640_Writer_Dates->___lwmod
    _RS485_Init->_Open1USART
    _Manage_Incident->_SCR_Demagnet
    _Manage_Incident->_SCR_Magnet
    _SCR_Magnet->_Relay_Control
    _SCR_Demagnet->_Relay_Control
    _Relay_Control->_delay_ms
    _delay_ms->_delay1ms
    _RS485_SendDate->_VerifyCRC
    _ManageMessage->_Key_Inquiry
    _Key_Inquiry->_Key_ReadFSM
    _Init_TM1640->_TM1640_Writer_Byte
    _TM1640_Writer_Byte->_TM1640_Delay
    _TM1640_Stop->_TM1640_Delay
    _TM1640_Start->_TM1640_Delay
    _ADC6_Init->_OpenADC

Critical Paths under _Sys_Cyc in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Sys_Cyc in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Sys_Cyc in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Sys_Cyc in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Sys_Cyc in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Sys_Cyc in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Sys_Cyc in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Sys_Cyc in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Sys_Cyc in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Sys_Cyc in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Sys_Cyc in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Sys_Cyc in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Sys_Cyc in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Sys_Cyc in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Sys_Cyc in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Sys_Cyc in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   12393
                          _ADC6_Init
                        _GPIO_Config
                        _Init_TM1640
                           _Key_Init
                      _ManageMessage
                    _Manage_Incident
                         _RS485_Init
                         _Relay_Init
                           _SCR_Init
                         _ShowResult
                        _Timer0_Init
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0     249
                          _SetTimer0
 ---------------------------------------------------------------------------------
 (2) _SetTimer0                                            4     2      2     249
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _ShowResult                                           3     3      0    5875
                                              9 BANK0      3     3      0
                        _LED_Control
                _TM1640_Show_integer
                _TM1640_Writer_Dates
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     540
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _TM1640_Show_integer                                  2     0      2    3421
                                              7 BANK0      2     0      2
                _TM1640_Writer_Dates
                            ___lwdiv
                            ___lwmod
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     848
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     703
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _TM1640_Writer_Dates                                  2     1      1    1490
                                              5 BANK0      2     1      1
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _LED_Control                                          2     1      1     424
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _SCR_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Relay_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RS485_Init                                           0     0      0     387
                         _Open1USART
 ---------------------------------------------------------------------------------
 (2) _Open1USART                                           3     1      2     387
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _Manage_Incident                                      3     3      0    4027
                                              8 BANK0      3     3      0
                     _RS485_SendDate
                       _SCR_Demagnet
                         _SCR_Magnet
 ---------------------------------------------------------------------------------
 (2) _SCR_Magnet                                           1     1      0    1581
                                              7 BANK0      1     1      0
                      _Relay_Control
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _SCR_Demagnet                                         1     1      0    1581
                                              7 BANK0      1     1      0
                      _Relay_Control
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _Relay_Control                                        2     1      1    1022
                                              5 BANK0      2     1      1
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             2     0      2     466
                                              3 BANK0      2     0      2
                           _delay1ms
 ---------------------------------------------------------------------------------
 (4) _delay1ms                                             3     3      0     204
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _RS485_SendDate                                       4     1      3     605
                                              3 BANK0      4     1      3
                          _VerifyCRC
 ---------------------------------------------------------------------------------
 (3) _VerifyCRC                                            3     0      3      48
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _ManageMessage                                        0     0      0    1119
                        _Key_Inquiry
                 _RS485_AnalysisData
                      _RS485_Inquiry
             _RS485_RecogniseMessage
 ---------------------------------------------------------------------------------
 (2) _RS485_RecogniseMessage                               3     0      3      48
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _RS485_Inquiry                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RS485_AnalysisData                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Key_Inquiry                                          4     4      0    1071
                                              6 BANK0      4     4      0
                        _Key_ReadFSM
                       _Key_ResetFSM
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     309
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (3) _Key_ResetFSM                                         1     1      0      96
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _Key_ReadFSM                                          6     6      0     666
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _Key_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_TM1640                                          0     0      0     396
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
 ---------------------------------------------------------------------------------
 (3) _TM1640_Writer_Byte                                   2     2      0     198
                                              2 BANK0      2     2      0
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (3) _TM1640_Stop                                          0     0      0      99
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (3) _TM1640_Start                                         0     0      0      99
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (4) _TM1640_Delay                                         2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC6_Init                                            0     0      0     340
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     340
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Sys_Cyc                                             15    15      0    1016
                                              9 COMRAM    15    15      0
                        _Key_ScanFSM
                            ___llmod
                      i2_LED_Control
                        i2_SetTimer0
 ---------------------------------------------------------------------------------
 (7) i2_SetTimer0                                          4     2      2     116
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) i2_LED_Control                                        2     1      1     184
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8     671
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) _Key_ScanFSM                                          0     0      0       0
                           _Key_Scan
 ---------------------------------------------------------------------------------
 (8) _Key_Scan                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC6_Init
     _OpenADC
   _GPIO_Config
   _Init_TM1640
     _TM1640_Start
       _TM1640_Delay
     _TM1640_Stop
       _TM1640_Delay
     _TM1640_Writer_Byte
       _TM1640_Delay
   _Key_Init
   _ManageMessage
     _Key_Inquiry
       _Key_ReadFSM
       _Key_ResetFSM
       ___lbmod
     _RS485_AnalysisData
     _RS485_Inquiry
     _RS485_RecogniseMessage
   _Manage_Incident
     _RS485_SendDate
       _VerifyCRC
     _SCR_Demagnet
       _Relay_Control
         _delay_ms
           _delay1ms
       _delay_ms
         _delay1ms
     _SCR_Magnet
       _Relay_Control
         _delay_ms
           _delay1ms
       _delay_ms
         _delay1ms
   _RS485_Init
     _Open1USART
   _Relay_Init
   _SCR_Init
   _ShowResult
     _LED_Control
     _TM1640_Show_integer
       _TM1640_Writer_Dates
         _TM1640_Start
           _TM1640_Delay
         _TM1640_Stop
           _TM1640_Delay
         _TM1640_Writer_Byte
           _TM1640_Delay
         ___lwmod (ARG)
       ___lwdiv
       ___lwmod
       ___wmul (ARG)
     _TM1640_Writer_Dates
       _TM1640_Start
         _TM1640_Delay
       _TM1640_Stop
         _TM1640_Delay
       _TM1640_Writer_Byte
         _TM1640_Delay
       ___lwmod (ARG)
     ___wmul
   _Timer0_Init
     _SetTimer0

 _Sys_Cyc (ROOT)
   _Key_ScanFSM
     _Key_Scan
   ___llmod
   i2_LED_Control
   i2_SetTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      C      93       5       91.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     18      4E       1       82.1%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E1      12        0.0%
DATA                 0      0      E1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Dec 22 19:29:39 2015

                ?_TM1640_Stop 0037  __size_of_TM1640_Writer_Dates 002A                 ?_TM1640_Delay 0037  
         ___wmul@multiplicand 00E9                   __CFG_BORV$3 000000                 ?_TM1640_Start 0037  
                _gf_ADC6_Buff 0005      _RS485_RecogniseMessage$0 00E7      _RS485_RecogniseMessage$1 00E9  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                  __CFG_CP4$OFF 000000                  __CFG_CP5$OFF 000000  
                __CFG_CP6$OFF 000000                  __CFG_CP7$OFF 000000      ??_RS485_RecogniseMessage 00EA  
                         l200 FA2A                           l201 FA46                           l134 FEB2  
                         l334 F444                           l158 FD36                           l335 F45E  
                         l192 F9CC                           l195 F9EE                           l349 F120  
                         l631 F78A                           l491 F8AA                           l635 F7AC  
                         l572 F674                           l485 F86C                           l637 F7BA  
                         l638 F7BC                           l488 F88A                           _GIE 007F97  
                __CFG_CPB$OFF 000000                           _RB0 007C08                           _RB1 007C09  
                         _RC0 007C10                           _RA4 007C04                           _RC1 007C11  
                         _RA5 007C05                           _RD0 007C18                           _RD1 007C19  
                         _RD2 007C1A                           _RD3 007C1B                           _RD4 007C1C  
                         _RF1 007C29                           _RD5 007C1D                           _RF2 007C2A  
                         _RD6 007C1E                           _RF3 007C2B                           _RD7 007C1F  
                __CFG_CPD$OFF 000000                           _PSA 007EAB      RS485_SendDate@date_dress 00EA  
                         prod 000FF3      RS485_SendDate@date_lenth 00EC                  ?_LED_Control 00E7  
                         wreg 000FE8                  ?_GPIO_Config 0037                    _TXSTA1bits 000FAC  
        ?_TM1640_Show_integer 00EE                 ?_Key_ResetFSM 0037                   ?_RS485_Init 0037  
               ??_Key_ReadFSM 00E7            _RS485_AnalysisData 0000                 ??_Key_ScanFSM 0037  
                        l1160 F844                          l1170 F6DA                          l3003 F0E8  
                        l3005 F0EE                          l3111 F872                          l3123 F8B0  
                        l3045 F478                          l3061 FECE                          l3221 FD26  
                        l3213 FD00                          l3205 FCB0                          l3117 F890  
                        l3039 F462                          l3151 F4C0                          l3143 F496  
                        l3231 FD5C                          l3065 FF04                          l3057 FE84  
                        l3049 FE28                          l3153 F4C8                          l3217 FD12  
                        l3305 F9F6                          l3129 F8D2                          l3091 FFF0  
                        l3075 FF3A                          l3059 FE9C                          l3067 FF1C  
                        l3251 FDEE                          l3243 FDAC                          l3235 FD7C  
                        l3227 FD48                          l3331 F5D6                          l3163 F7EA  
                        l3309 FA4E                          l3341 F5F6                          l3333 F5DA  
                        l3165 F7F8                          l3317 F4E8                          l3087 FFEA  
                        l3079 FF4C                          l3255 FE00                          l3247 FDCC  
                        l3239 FD9E                          l3175 F834                          l3167 F802  
                        l3191 F6CA                          l3183 F68C                          l3097 F52C  
                        l3257 FE1A                          l3433 F900                          l3281 F798  
                        l3273 F780                          l3265 F76A                          l3185 F69A  
                        l3099 F55E                          l3443 F93E                          l3435 F90A  
                        l3347 F60E                          l3339 F5F2                          l3187 F6A4  
                        l3461 F990                          l3453 F966                          l3285 F7A2  
                        l3277 F78E                          l3269 F776                          l3447 F948  
                        l3439 F91E                          l3457 F986                          l3449 F952  
                        l3289 F7B0                          l3473 FB2C                          l3469 FACC  
                        l3489 F22E                          l2971 F580                          l2991 F10A  
                        l2983 F5AE                          l2975 F594                          l2979 F5A8  
                        l2987 F5B4                          l2997 F114                          l2999 F118  
                        _T0CS 007EAD                          _T0SE 007EAC                          u3150 FE4E  
                        u3160 FE6E                          u3234 FFA6                          u3170 FEEE  
                        u3235 FFA0                          u3244 FFC2                          u3245 FFBC  
                        _IPEN 007E87                 ??_Key_Inquiry 00ED                 ??_Init_TM1640 00EB  
                        _main F20C                          fsr0h 000FEA                          fsr1h 000FE2  
                        fsr0l 000FE9                          fsr2h 000FDA                          fsr1l 000FE1  
                        indf2 000FDF                          fsr2l 000FD9                          pclat 000FFA  
         ?_RS485_AnalysisData 0037                          prodh 000FF4                          prodl 000FF3  
                        start 01CC                 __CFG_IESO$OFF 000000                 __CFG_FOSC$HS1 000000  
               __CFG_MCLRE$ON 000000                  ___param_bank 000010                ??_TM1640_Delay 00E7  
             __end_of_OpenADC F678               ??_ManageMessage 00F1                ??_TM1640_Start 00E9  
               __CFG_RETEN$ON 000000                         ?_main 0037               __end_of___lbmod F4D0  
             __end_of_Sys_Cyc 01CC               __end_of___llmod F754          ??_RS485_AnalysisData 00E7  
                       _RC1IF 007CF5                         _T0PS0 007EA8                         _T0PS1 007EA9  
                       _T0PS2 007EAA               __end_of___lwdiv F84E               __end_of___lwmod F6E4  
                       i2l273 0162                         i2l266 00D6                         i2l276 0192  
           __end_of_ADC6_Init F0AE                         _TMR0H 000FD7                         _TMR0L 000FD6  
                 ?_SCR_Magnet 0037                ??_Key_ResetFSM 00E7         ??_TM1640_Show_integer 00F0  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                 __CFG_WRT4$OFF 000000                __CFG_EBRT0$OFF 000000  
               __CFG_WRT5$OFF 000000                __CFG_EBRT1$OFF 000000                 __CFG_WRT6$OFF 000000  
              __CFG_EBRT2$OFF 000000                 __CFG_WRT7$OFF 000000                __CFG_EBRT3$OFF 000000  
              __CFG_EBRT4$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBRT5$OFF 000000  
              __CFG_EBRT6$OFF 000000                __CFG_EBRT7$OFF 000000              __end_of_SCR_Init F07A  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBRTB$OFF 000000                         tablat 000FF5                         plusw2 000FDB  
                       status 000FD8            _TM1640_Writer_Byte F438           __end_of_Key_ReadFSM 0000  
         __end_of_Key_ScanFSM F368           __end_of_Key_Inquiry FE20               __initialization F2E8  
         __end_of_Init_TM1640 F1BC           __size_of_RS485_Init 001A                  __end_of_main F240  
         ?_TM1640_Writer_Byte 0037              __end_of_Key_Init F0E6              __end_of_Key_Scan F276  
       i2LED_Control@_LED_num 0038                    _Open1USART F754                        ??_main 00F3  
               __activetblptr 000000      __size_of_Manage_Incident 00BC          ??_TM1640_Writer_Byte 00E9  
                      _ADCON0 000FC2                        _ADCON1 000FC1                        _ADCON2 000FC0  
            ___llmod@dividend 0037                    _Relay_Init F07A                        _T08BIT 007EAE  
                      _ANSEL4 00792C                        _ANSEL6 00792E                        _ANSEL7 00792F  
                      _ANSEL8 007920                        i2l1107 F742               __CFG_BBSIZ$BB2K 000000  
                      i2l2281 F26C                        i2l2273 F25C                        i2l2265 F24C  
                      i2l2277 F264                        i2l2269 F254                __CFG_WDTEN$OFF 000000  
                      i2l2703 00CA                        i2l2711 0144                        i2l2633 F732  
                      i2l2625 F6F6                        i2l2641 F2C0                        i2l2627 F704  
                      i2l2707 010E                        i2l2581 F35C                        i2l2573 F348  
                      i2l2565 F334                        i2l2629 F70C                        i2l2725 0180  
                      i2l2671 F3A6                        i2l2663 F390                        i2l2655 F37A  
                      i2l2577 F352                        i2l2569 F33E                        i2l2665 F394  
                      i2l2657 F37E                 SetTimer0@_tmr 00E7                        _RCREG1 000FAE  
                      _RCSTA1 000FAB                        _TMR0IE 007F95                        _SPBRG1 000FAF  
                      _TMR0IF 007F92                        _TMR0ON 007EAF                        _TRISB0 007C98  
                      _TRISB1 007C99                        _TRISC0 007CA0                        _TRISB2 007C9A  
                      _TRISA4 007C94                        _TRISC1 007CA1                        _TRISA5 007C95  
                      _TRISD0 007CA8                        _TRISD1 007CA9                        _TRISD2 007CAA  
                      _TRISD3 007CAB                        _TRISD4 007CAC                        _TRISC6 007CA6  
               TM1640_Delay@i 00E8                        _TRISF1 007CB9                        _TRISD5 007CAD  
                      _TRISC7 007CA7                        _TRISF2 007CBA                        _TRISD6 007CAE  
                      _TRISF3 007CBB                        _TRISD7 007CAF                        _TXREG1 000FAD  
                      _TXSTA1 000FAC              __end_of_delay1ms F5BC              __end_of_delay_ms F106  
               ??_Timer0_Init 00EB                     ??_OpenADC 00E9                  Sys_Cyc@_Byte 0009  
      TM1640_Writer_Byte@Date 00E9                  Sys_Cyc@_flag 000A                __CFG_XINST$OFF 000000  
                Sys_Cyc@_temp 004E           __size_of_SCR_Magnet 0046        TM1640_Writer_Byte@mask 00EA  
               _RS485_Inquiry 0000       __size_of_RS485_SendDate 00C8                        ___wmul F276  
              __CFG_STVREN$ON 000000                     ??___lbmod 00E8                     ??_Sys_Cyc 0040  
                   ??___llmod 003F          Sys_Cyc@_overturn_LED 000B                     ??___lwdiv 00EB  
          __size_of_SetTimer0 004C                     ??___lwmod 00EB                    _ShowResult FA64  
          LED_Control@_switch 00E7                        clear_0 F2EE                        clear_1 F2FA  
        __size_of_TM1640_Stop 0024                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8          __size_of_LED_Control 0058          __size_of_GPIO_Config 0002  
                 _Key_ReadFSM FE20           _TM1640_Writer_Dates F1E2          __end_of_TM1640_Delay F12A  
                 _Key_ScanFSM F326                   _Key_Inquiry FC5C               ___lbmod@divisor 00E7  
        __end_of_TM1640_Start F14E                    __accesstop 0060       __end_of__initialization F320  
             ___lbmod@counter 00E9                   _Init_TM1640 F196        _RS485_RecogniseMessage 0000  
                ?i2_SetTimer0 0037                 ___rparam_used 000001                ?_RS485_Inquiry 0037  
        __end_of_Key_ResetFSM F56C                __pcstackCOMRAM 0037        __size_ofi2_LED_Control 0044  
                __pidataBANK0 F088                 Key_ResetFSM@t 00E7                     ?_SCR_Init 0037  
        ?_TM1640_Writer_Dates 00EC           __end_of_Timer0_Init F1E2                   ?_Open1USART 00E7  
      __size_of_Relay_Control 0092                  ??_RS485_Init 00EA                   ?_Relay_Init 0037  
           __end_of_SetTimer0 F51C                    __pbssBANK0 0060                     ?_Key_Init 0037  
                   ?_Key_Scan 0037                   _ReceiveBuff 00C3               __CFG_PLLCFG$OFF 000000  
           ??_Manage_Incident 00EF       TM1640_Writer_Dates@Addr 00ED       TM1640_Writer_Dates@Date 00EC  
       ??_TM1640_Writer_Dates 00ED                       ?___wmul 00E7                    ??_SCR_Init 00E7  
          __end_of_RS485_Init F0C8                   ?_ShowResult 0037           LED_Control@_LED_num 00E8  
                  _gs_ComData 00BA              Open1USART@config 00E9                       _LED_BUS 000C  
                ??_SCR_Magnet 00EE                     ?_delay1ms 0037                     ?_delay_ms 00EA  
               ?_SCR_Demagnet 0037                 i2_LED_Control F368                       _SPBRGH1 000FD4  
                   _ADC6_Init F098             _ga_RS485_SendBuff 0000                    ??_Key_Init 00E7  
                  ??_Key_Scan 0037                 _Relay_Control F84E           __size_of_Open1USART 0078  
             ??_RS485_Inquiry 00E7               __CFG_PWRTEN$OFF 000000                       _OpenADC F614  
                     __Hparam 0000                   _Timer0_Init F1BC                       __Lparam 0000  
              _RS485_SendDate F99C            __end_of_SCR_Magnet F438              Manage_Incident@i 00F0  
                     ___lbmod F484                       _Sys_Cyc 0002               __size_of___wmul 0038  
                     ___llmod F6E4                       ___lwdiv F7CC                       ___lwmod F678  
         __size_of_Relay_Init 000E   __end_of_TM1640_Show_integer FC5C                       __pcinit F2E8  
                     __ramtop 1000         __end_of_ManageMessage F196                       __ptext0 F20C  
                     __ptext1 F1BC                       __ptext2 F4D0                       __ptext3 FA64  
                     __ptext4 F276                       __ptext5 FB38                       __ptext6 F678  
                     __ptext7 F7CC                       __ptext8 F1E2                       __ptext9 F5BC  
                     _gsa_Msg 0060               SCR_Demagnet@_ch 00EE                ??_SCR_Demagnet 00EE  
                  ??_delay1ms 00E7         __size_of_TM1640_Delay 0024             __CFG_MSSPMSK$MSK7 000000  
              ?i2_LED_Control 0037                    ??_delay_ms 00EC         __size_of_TM1640_Start 0024  
                  ?_ADC6_Init 0037                   _VerifyCRC$0 00E7                   _VerifyCRC$1 00E9  
              OpenADC@config2 00E7                OpenADC@config3 00E8          end_of_initialization F320  
         __size_of_ShowResult 00D4                ?_Relay_Control 00EC         __size_of_Key_ResetFSM 0050  
      __end_of_RS485_SendDate FA64          __size_ofi2_SetTimer0 003A                       postdec1 000FE5  
                     postdec2 000FDD                       postinc0 000FEE                       postinc1 000FE6  
                     postinc2 000FDE      Pulse_3Khz@_overturn_3Khz 0008                  _TM1640_Delay F106  
                _TM1640_Start F12A              TM1640_Delay@Time 00E7              ___lbmod@dividend 00E8  
                _Key_ResetFSM F51C   __size_of_TM1640_Writer_Byte 004C                  ?_Key_ReadFSM 0037  
                ?_Key_ScanFSM 0037       ?_RS485_RecogniseMessage 00E7                  ?_Key_Inquiry 0037  
                 ___lbmod@rem 00EA                  ?_Init_TM1640 0037               ?_RS485_SendDate 00EA  
               ??_TM1640_Stop 00E9                __end_of___wmul F2AE                  ??_Open1USART 00E9  
           __size_of_SCR_Init 000C               ??i2_LED_Control 0038               _Manage_Incident F8E0  
               ??_LED_Control 00E8                 ??_GPIO_Config 00E7           start_initialization F2E8  
                 _g_Timer_Cyc 0001                   ??_ADC6_Init 00EC                  ??_Relay_Init 00E7  
             ??_Relay_Control 00ED    TM1640_Show_integer@Numbers 00EE               ___llmod@divisor 003B  
           __size_of_Key_Init 001E             __size_of_Key_Scan 0036               ___llmod@counter 003F  
                   _SetTimer0 F4D0            __end_of_Open1USART F7CC          __end_of_SCR_Demagnet F3F2  
             i2SetTimer0@_tmr 0037                      ??___wmul 00EB                  ??_ShowResult 00F0  
                   _VerifyCRC 0000                   __pdataBANK0 00D7          i2LED_Control@_switch 0037  
          __end_of_Relay_Init F088           __end_of_TM1640_Stop F172                   __pbssCOMRAM 0001  
               __pcstackBANK0 00E7             __size_of_delay1ms 0050             __size_of_delay_ms 0020  
         __end_of_LED_Control F614           __end_of_GPIO_Config F06E            __end_of_ShowResult FB38  
 __end_of_TM1640_Writer_Dates F20C                    ?_SetTimer0 00E7                      ?_OpenADC 00E7  
                ?_Timer0_Init 0037                 SCR_Magnet@_ch 00EE              ___lwdiv@dividend 00E7  
           __CFG_CCP2MX$PORTC 000000                     __pintcode 0002                      ?___lbmod 00E7  
                    ?_Sys_Cyc 0037                      ?___llmod 0037                      ?___lwdiv 00E7  
                    ?___lwmod 00E7                    ?_VerifyCRC 00E7       __end_of_Manage_Incident F99C  
             Open1USART@spbrg 00E7                     _gs_Switch 00CA          Relay_Control@_switch 00EC  
            ___lwdiv@quotient 00EC                     delay1ms@a 00E7                     delay1ms@b 00E8  
                   delay1ms@c 00E9               _s_Local_Key_FSM 0022          __size_of_Key_ReadFSM 01E0  
        __size_of_Key_ScanFSM 0042                ___wmul@product 00EB                 OpenADC@config 00EB  
        __size_of_Key_Inquiry 01C4                      _PIE1bits 000F9D          __size_of_Init_TM1640 0026  
                    _PIR1bits 000F9E                      _SCR_Init F06E                   _TM1640_Stop F14E  
                  _ADCON0bits 000FC2             ___wmul@multiplier 00E7              __CFG_SOSCSEL$DIG 000000  
                 _LED_Control F5BC                   _GPIO_Config F06C  __size_of_TM1640_Show_integer 0124  
                   copy_data0 F314                      _Key_Init F0C8                      _Key_Scan F240  
            ??_RS485_SendDate 00ED         __size_of_SCR_Demagnet 0046                 ??i2_SetTimer0 0039  
      __size_of_ManageMessage 0024                   ??_SetTimer0 00E9                      __Hrparam 0000  
            __size_of_OpenADC 0064                      __Lrparam 0000            __CFG_BOREN$SBORDIS 000000  
                 ??_VerifyCRC 00EA            Key_ReadFSM@key_num 00EC              __size_of___lbmod 004C  
            __size_of_Sys_Cyc 01CA              ?_Manage_Incident 0037              __size_of___llmod 0070  
            __size_of___lwdiv 0082              __size_of___lwmod 006C                  _g_RS485_Byte 0000  
                    _delay1ms F56C    __end_of_TM1640_Writer_Byte F484                      _delay_ms F0E6  
             ___lwdiv@divisor 00E9                  _SCR_Demagnet F3AC               ___lwdiv@counter 00EB  
                    __ptext10 F06E                      __ptext11 F07A                      __ptext20 F99C  
                    __ptext12 F0AE                      __ptext21 F172                      __ptext13 F754  
                    __ptext30 F12A                      __ptext22 FC5C                      __ptext14 F8E0  
                    __ptext31 F106                      __ptext23 F484                      __ptext15 F3F2  
                    __ptext40 F240                      __ptext32 F06C                      __ptext24 F51C  
                    __ptext16 F3AC                      __ptext33 F098                      __ptext25 FE20  
                    __ptext17 F84E                      __ptext34 F614                      __ptext26 F0C8  
                    __ptext18 F0E6                      __ptext27 F196                      __ptext19 F56C  
                    __ptext36 F2AE                      __ptext28 F438                      __ptext37 F368  
                    __ptext29 F14E                      __ptext38 F6E4                      __ptext39 F326  
      Relay_Control@relay_num 00ED                 __size_of_main 0034           __CFG_RTCOSC$SOSCREF 000000  
        __size_of_Timer0_Init 0026           __end_ofi2_SetTimer0 F2E8           __CFG_INTOSCSEL$HIGH 000000  
                 delay_ms@_ms 00EA                    _LED_Number 00D7                 _ManageMessage F172  
                  _INTCONbits 000FF2         __end_ofi2_LED_Control F3AC                    _RS485_Init F0AE  
                    intlevel2 0000         __end_of_Relay_Control F8E0              ___lwmod@dividend 00E7  
                  _RCSTA1bits 000FAB       Key_ReadFSM@key_num_mate 00EB            __CFG_WDTPS$1048576 000000  
           _gs_Local_Key_User 000D                ?_ManageMessage 0037          _ga_RS485_ReceiveBuff 0000  
             ___lwmod@divisor 00E9                    _SCR_Magnet F3F2               ___lwmod@counter 00EB  
         __CFG_BORPWR$ZPBORMV 000000            __size_of_ADC6_Init 0016                   i2_SetTimer0 F2AE  
         _TM1640_Show_integer FB38  
