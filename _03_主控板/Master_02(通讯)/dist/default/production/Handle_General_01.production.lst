

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Dec 15 16:26:30 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F67K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    56  0000                     
    57                           	psect	smallconst
    58  001000                     __psmallconst:
    59                           	opt stack 0
    60  001000  00                 	db	0
    61  001001                     _LED_Number:
    62                           	opt stack 0
    63  001001  3F                 	db	63
    64  001002  06                 	db	6
    65  001003  5B                 	db	91
    66  001004  4F                 	db	79
    67  001005  66                 	db	102
    68  001006  6D                 	db	109
    69  001007  7D                 	db	125
    70  001008  07                 	db	7
    71  001009  7F                 	db	127
    72  00100A  6F                 	db	111
    73  00100B  77                 	db	119
    74  00100C  7C                 	db	124
    75  00100D  39                 	db	57
    76  00100E  5E                 	db	94
    77  00100F  79                 	db	121
    78  001010  71                 	db	113
    79  001011                     __end_of_LED_Number:
    80                           	opt stack 0
    81  0000                     _ANCON2	set	3875
    82  0000                     _RCREG2	set	3869
    83  0000                     _RCSTA2	set	3874
    84  0000                     _RCSTA2bits	set	3874
    85  0000                     _SPBRG2	set	3870
    86  0000                     _SPBRGH2	set	3871
    87  0000                     _TXREG2	set	3868
    88  0000                     _TXSTA2	set	3873
    89  0000                     _TXSTA2bits	set	3873
    90  0000                     _ADCON0	set	4034
    91  0000                     _ADCON0bits	set	4034
    92  0000                     _ADCON1	set	4033
    93  0000                     _ADCON2	set	4032
    94  0000                     _ADRESH	set	4036
    95  0000                     _ADRESL	set	4035
    96  0000                     _INTCONbits	set	4082
    97  0000                     _PIE1bits	set	3997
    98  0000                     _PIE3bits	set	4003
    99  0000                     _PIR1bits	set	3998
   100  0000                     _PORTEbits	set	3972
   101  0000                     _TMR0H	set	4055
   102  0000                     _TMR0L	set	4054
   103  0000                     _TRISCbits	set	3988
   104  0000                     _TRISD	set	3989
   105  0000                     _TRISE	set	3990
   106  0000                     _TRISGbits	set	3992
   107  0000                     _GIE	set	32663
   108  0000                     _IPEN	set	32391
   109  0000                     _PSA	set	32427
   110  0000                     _RC2IF	set	32037
   111  0000                     _RC3	set	31763
   112  0000                     _RC4	set	31764
   113  0000                     _RD6	set	31774
   114  0000                     _RD7	set	31775
   115  0000                     _RE2	set	31778
   116  0000                     _RE3	set	31779
   117  0000                     _RE4	set	31780
   118  0000                     _RE5	set	31781
   119  0000                     _RE6	set	31782
   120  0000                     _RE7	set	31783
   121  0000                     _RG3	set	31795
   122  0000                     _T08BIT	set	32430
   123  0000                     _T0CS	set	32429
   124  0000                     _T0PS0	set	32424
   125  0000                     _T0PS1	set	32425
   126  0000                     _T0PS2	set	32426
   127  0000                     _T0SE	set	32428
   128  0000                     _TMR0IE	set	32661
   129  0000                     _TMR0IF	set	32658
   130  0000                     _TMR0ON	set	32431
   131                           
   132                           ; #config settings
   133  001011  00                 	db	0	; dummy byte at the end
   134  0000                     
   135                           	psect	cinit
   136  001EB6                     __pcinit:
   137                           	opt stack 0
   138  001EB6                     start_initialization:
   139                           	opt stack 0
   140  001EB6                     __initialization:
   141                           	opt stack 0
   142                           
   143                           ; Clear objects allocated to BANK0 (66 bytes)
   144  001EB6  EE00  F060         	lfsr	0,__pbssBANK0
   145  001EBA  0E42               	movlw	66
   146  001EBC                     clear_0:
   147  001EBC  6AEE               	clrf	postinc0,c
   148  001EBE  06E8               	decf	wreg,f,c
   149  001EC0  E1FD               	bnz	clear_0
   150                           
   151                           ; Clear objects allocated to COMRAM (18 bytes)
   152  001EC2  EE00  F034         	lfsr	0,__pbssCOMRAM
   153  001EC6  0E12               	movlw	18
   154  001EC8                     clear_1:
   155  001EC8  6AEE               	clrf	postinc0,c
   156  001ECA  06E8               	decf	wreg,f,c
   157  001ECC  E1FD               	bnz	clear_1
   158  001ECE                     end_of_initialization:
   159                           	opt stack 0
   160  001ECE                     __end_of__initialization:
   161                           	opt stack 0
   162  001ECE  0E00               	movlw	low (__Lsmallconst shr (0+16))
   163  001ED0  6EF8               	movwf	tblptru,c
   164  001ED2  0E10               	movlw	high __Lsmallconst
   165  001ED4  6EF7               	movwf	tblptrh,c
   166  001ED6  0100               	movlb	0
   167  001ED8  EF90  F00E         	goto	_main	;jump to C main() function
   168                           tblptru	equ	0xFF8
   169                           tblptrh	equ	0xFF7
   170                           postinc0	equ	0xFEE
   171                           wreg	equ	0xFE8
   172                           
   173                           	psect	bssCOMRAM
   174  000034                     __pbssCOMRAM:
   175                           	opt stack 0
   176  000034                     _Handle_Switch:
   177                           	opt stack 0
   178  000034                     	ds	4
   179  000038                     _Timer_Cyc:
   180                           	opt stack 0
   181  000038                     	ds	4
   182  00003C                     _ADC6_Buff:
   183                           	opt stack 0
   184  00003C                     	ds	3
   185  00003F                     Sys_Cyc@_RS485_Receive_Byte:
   186                           	opt stack 0
   187  00003F                     	ds	1
   188  000040                     Sys_Cyc@_flag:
   189                           	opt stack 0
   190  000040                     	ds	1
   191  000041                     Sys_Cyc@_overturn_1Khz:
   192                           	opt stack 0
   193  000041                     	ds	1
   194  000042                     Sys_Cyc@_overturn_LED:
   195                           	opt stack 0
   196  000042                     	ds	1
   197  000043                     _LED2_switch:
   198                           	opt stack 0
   199  000043                     	ds	1
   200  000044                     _RS485_Num:
   201                           	opt stack 0
   202  000044                     	ds	1
   203  000045                     _RS485_Receive_Flag:
   204                           	opt stack 0
   205  000045                     	ds	1
   206                           tblptru	equ	0xFF8
   207                           tblptrh	equ	0xFF7
   208                           postinc0	equ	0xFEE
   209                           wreg	equ	0xFE8
   210                           
   211                           	psect	bssBANK0
   212  000060                     __pbssBANK0:
   213                           	opt stack 0
   214  000060                     _ReceiveBuff:
   215                           	opt stack 0
   216  000060                     	ds	10
   217  00006A                     _Local_Key_FSM:
   218                           	opt stack 0
   219  00006A                     	ds	18
   220  00007C                     _Local_Key_User:
   221                           	opt stack 0
   222  00007C                     	ds	18
   223  00008E                     _RS485_ReceiveBuff:
   224                           	opt stack 0
   225  00008E                     	ds	10
   226  000098                     _RS485_SendBuff:
   227                           	opt stack 0
   228  000098                     	ds	10
   229                           tblptru	equ	0xFF8
   230                           tblptrh	equ	0xFF7
   231                           postinc0	equ	0xFEE
   232                           wreg	equ	0xFE8
   233                           
   234                           	psect	cstackBANK0
   235  0000A2                     __pcstackBANK0:
   236                           	opt stack 0
   237  0000A2                     ?___ftdiv:
   238                           	opt stack 0
   239  0000A2                     RS485_Send_Date@date_dress:
   240                           	opt stack 0
   241  0000A2                     ___ftdiv@f1:
   242                           	opt stack 0
   243                           
   244                           ; 3 bytes @ 0x0
   245  0000A2                     	ds	2
   246  0000A4                     RS485_Send_Date@date_lenth:
   247                           	opt stack 0
   248                           
   249                           ; 1 bytes @ 0x2
   250  0000A4                     	ds	1
   251  0000A5                     ??_RS485_Send_Date:
   252  0000A5                     ___ftdiv@f2:
   253                           	opt stack 0
   254                           
   255                           ; 3 bytes @ 0x3
   256  0000A5                     	ds	3
   257  0000A8                     ??___ftdiv:
   258                           
   259                           ; 0 bytes @ 0x6
   260  0000A8                     	ds	3
   261  0000AB                     ___ftdiv@cntr:
   262                           	opt stack 0
   263                           
   264                           ; 1 bytes @ 0x9
   265  0000AB                     	ds	1
   266  0000AC                     ___ftdiv@f3:
   267                           	opt stack 0
   268                           
   269                           ; 3 bytes @ 0xA
   270  0000AC                     	ds	3
   271  0000AF                     ___ftdiv@exp:
   272                           	opt stack 0
   273                           
   274                           ; 1 bytes @ 0xD
   275  0000AF                     	ds	1
   276  0000B0                     ___ftdiv@sign:
   277                           	opt stack 0
   278                           
   279                           ; 1 bytes @ 0xE
   280  0000B0                     	ds	1
   281  0000B1                     main@num:
   282                           	opt stack 0
   283                           
   284                           ; 3 bytes @ 0xF
   285  0000B1                     	ds	3
   286                           tblptru	equ	0xFF8
   287                           tblptrh	equ	0xFF7
   288                           postinc0	equ	0xFEE
   289                           wreg	equ	0xFE8
   290                           
   291                           	psect	cstackCOMRAM
   292  000001                     __pcstackCOMRAM:
   293                           	opt stack 0
   294  000001                     ??_Key_FSM_Read:
   295  000001                     ?i2___llmod:
   296                           	opt stack 0
   297  000001                     Delay_1Khz@a:
   298                           	opt stack 0
   299  000001                     Key_FSM_Reset@t:
   300                           	opt stack 0
   301  000001                     ___lbmod@divisor:
   302                           	opt stack 0
   303  000001                     i2SetTimer0@_tmr:
   304                           	opt stack 0
   305  000001                     i2___llmod@dividend:
   306                           	opt stack 0
   307                           
   308                           ; 4 bytes @ 0x0
   309  000001                     	ds	1
   310  000002                     Delay_1Khz@b:
   311                           	opt stack 0
   312  000002                     ___lbmod@dividend:
   313                           	opt stack 0
   314                           
   315                           ; 1 bytes @ 0x1
   316  000002                     	ds	1
   317  000003                     ??i2_SetTimer0:
   318  000003                     Delay_1Khz@c:
   319                           	opt stack 0
   320  000003                     ___lbmod@counter:
   321                           	opt stack 0
   322                           
   323                           ; 1 bytes @ 0x2
   324  000003                     	ds	1
   325  000004                     ___lbmod@rem:
   326                           	opt stack 0
   327                           
   328                           ; 1 bytes @ 0x3
   329  000004                     	ds	1
   330  000005                     Key_FSM_Read@key_num_mate:
   331                           	opt stack 0
   332  000005                     i2___llmod@divisor:
   333                           	opt stack 0
   334                           
   335                           ; 4 bytes @ 0x4
   336  000005                     	ds	1
   337  000006                     Key_FSM_Read@key_num:
   338                           	opt stack 0
   339                           
   340                           ; 1 bytes @ 0x5
   341  000006                     	ds	1
   342  000007                     
   343                           ; 0 bytes @ 0x6
   344  000007                     	ds	2
   345  000009                     i2___llmod@counter:
   346                           	opt stack 0
   347                           
   348                           ; 1 bytes @ 0x8
   349  000009                     	ds	1
   350  00000A                     ??_Sys_Cyc:
   351                           
   352                           ; 0 bytes @ 0x9
   353  00000A                     	ds	14
   354  000018                     Sys_Cyc@_pulse:
   355                           	opt stack 0
   356                           
   357                           ; 1 bytes @ 0x17
   358  000018                     	ds	1
   359  000019                     Sys_Cyc@_temp:
   360                           	opt stack 0
   361                           
   362                           ; 1 bytes @ 0x18
   363  000019                     	ds	1
   364  00001A                     ?_ReadADC:
   365                           	opt stack 0
   366  00001A                     ?___wmul:
   367                           	opt stack 0
   368  00001A                     ?___lwdiv:
   369                           	opt stack 0
   370  00001A                     ?___lwmod:
   371                           	opt stack 0
   372  00001A                     ?___ftpack:
   373                           	opt stack 0
   374  00001A                     ?___lldiv:
   375                           	opt stack 0
   376  00001A                     ?___llmod:
   377                           	opt stack 0
   378  00001A                     TM1640_Delay@Time:
   379                           	opt stack 0
   380  00001A                     OpenADC@config2:
   381                           	opt stack 0
   382  00001A                     SetTimer0@_tmr:
   383                           	opt stack 0
   384  00001A                     Open2USART@spbrg:
   385                           	opt stack 0
   386  00001A                     ___wmul@multiplier:
   387                           	opt stack 0
   388  00001A                     ___lwdiv@dividend:
   389                           	opt stack 0
   390  00001A                     ___lwmod@dividend:
   391                           	opt stack 0
   392  00001A                     ___ftpack@arg:
   393                           	opt stack 0
   394  00001A                     ___lldiv@dividend:
   395                           	opt stack 0
   396  00001A                     ___llmod@dividend:
   397                           	opt stack 0
   398                           
   399                           ; 4 bytes @ 0x19
   400  00001A                     	ds	1
   401  00001B                     TM1640_Delay@i:
   402                           	opt stack 0
   403  00001B                     OpenADC@config3:
   404                           	opt stack 0
   405                           
   406                           ; 1 bytes @ 0x1A
   407  00001B                     	ds	1
   408  00001C                     ??_SetTimer0:
   409  00001C                     ??_OpenADC:
   410  00001C                     ??_ReadADC:
   411  00001C                     TM1640_Writer_Byte@Date:
   412                           	opt stack 0
   413  00001C                     Open2USART@config:
   414                           	opt stack 0
   415  00001C                     ___wmul@multiplicand:
   416                           	opt stack 0
   417  00001C                     ___lwdiv@divisor:
   418                           	opt stack 0
   419  00001C                     ___lwmod@divisor:
   420                           	opt stack 0
   421                           
   422                           ; 2 bytes @ 0x1B
   423  00001C                     	ds	1
   424  00001D                     TM1640_Writer_Byte@mask:
   425                           	opt stack 0
   426  00001D                     ___ftpack@exp:
   427                           	opt stack 0
   428                           
   429                           ; 1 bytes @ 0x1C
   430  00001D                     	ds	1
   431  00001E                     OpenADC@config:
   432                           	opt stack 0
   433  00001E                     ___ftpack@sign:
   434                           	opt stack 0
   435  00001E                     ___lwdiv@counter:
   436                           	opt stack 0
   437  00001E                     ___lwmod@counter:
   438                           	opt stack 0
   439  00001E                     ___wmul@product:
   440                           	opt stack 0
   441  00001E                     ___lldiv@divisor:
   442                           	opt stack 0
   443  00001E                     ___llmod@divisor:
   444                           	opt stack 0
   445                           
   446                           ; 4 bytes @ 0x1D
   447  00001E                     	ds	1
   448  00001F                     ??___ftpack:
   449  00001F                     TM1640_Writer_Dates@Date:
   450                           	opt stack 0
   451  00001F                     ___lwdiv@quotient:
   452                           	opt stack 0
   453                           
   454                           ; 2 bytes @ 0x1E
   455  00001F                     	ds	1
   456  000020                     TM1640_Writer_Dates@Addr:
   457                           	opt stack 0
   458                           
   459                           ; 1 bytes @ 0x1F
   460  000020                     	ds	1
   461  000021                     TM1640_Show_integer@Numbers:
   462                           	opt stack 0
   463                           
   464                           ; 2 bytes @ 0x20
   465  000021                     	ds	1
   466  000022                     ?___lwtoft:
   467                           	opt stack 0
   468  000022                     ___llmod@counter:
   469                           	opt stack 0
   470  000022                     ___lwtoft@c:
   471                           	opt stack 0
   472  000022                     ___lldiv@quotient:
   473                           	opt stack 0
   474                           
   475                           ; 4 bytes @ 0x21
   476  000022                     	ds	1
   477  000023                     ??_Show_Result:
   478  000023                     
   479                           ; 0 bytes @ 0x22
   480  000023                     	ds	2
   481  000025                     ?___ftmul:
   482                           	opt stack 0
   483  000025                     ___ftmul@f1:
   484                           	opt stack 0
   485                           
   486                           ; 3 bytes @ 0x24
   487  000025                     	ds	1
   488  000026                     ___lldiv@counter:
   489                           	opt stack 0
   490                           
   491                           ; 1 bytes @ 0x25
   492  000026                     	ds	1
   493  000027                     CRC_Verify@DataBuff:
   494                           	opt stack 0
   495                           
   496                           ; 2 bytes @ 0x26
   497  000027                     	ds	1
   498  000028                     ___ftmul@f2:
   499                           	opt stack 0
   500                           
   501                           ; 3 bytes @ 0x27
   502  000028                     	ds	1
   503  000029                     ??_CRC_Verify:
   504                           
   505                           ; 0 bytes @ 0x28
   506  000029                     	ds	2
   507  00002B                     ??___ftmul:
   508                           
   509                           ; 0 bytes @ 0x2A
   510  00002B                     	ds	3
   511  00002E                     ___ftmul@exp:
   512                           	opt stack 0
   513  00002E                     CRC_Verify@CRC_Value:
   514                           	opt stack 0
   515                           
   516                           ; 4 bytes @ 0x2D
   517  00002E                     	ds	1
   518  00002F                     ___ftmul@f3_as_product:
   519                           	opt stack 0
   520                           
   521                           ; 3 bytes @ 0x2E
   522  00002F                     	ds	3
   523  000032                     CRC_Verify@CRC_Byte:
   524                           	opt stack 0
   525  000032                     ___ftmul@cntr:
   526                           	opt stack 0
   527                           
   528                           ; 1 bytes @ 0x31
   529  000032                     	ds	1
   530  000033                     ___ftmul@sign:
   531                           	opt stack 0
   532                           
   533                           ; 1 bytes @ 0x32
   534  000033                     	ds	1
   535  000034                     tblptru	equ	0xFF8
   536                           tblptrh	equ	0xFF7
   537                           postinc0	equ	0xFEE
   538                           wreg	equ	0xFE8
   539                           
   540                           ; 0 bytes @ 0x33
   541 ;;
   542 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   543 ;;
   544 ;; *************** function _main *****************
   545 ;; Defined at:
   546 ;;		line 37 in file "_01_USER/main.c"
   547 ;; Parameters:    Size  Location     Type
   548 ;;		None
   549 ;; Auto vars:     Size  Location     Type
   550 ;;  num             3   15[BANK0 ] float 
   551 ;; Return value:  Size  Location     Type
   552 ;;                  2   18[None  ] int 
   553 ;; Registers used:
   554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   555 ;; Tracked objects:
   556 ;;		On entry : 0/0
   557 ;;		On exit  : 0/0
   558 ;;		Unchanged: 0/0
   559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   561 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   563 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   564 ;;Total ram usage:        3 bytes
   565 ;; Hardware stack levels required when called:    8
   566 ;; This function calls:
   567 ;;		_ADC6_Init
   568 ;;		_GPIO_Config
   569 ;;		_Init_TM1640
   570 ;;		_Key_Init
   571 ;;		_RS485_Init
   572 ;;		_Run
   573 ;;		_Show_Result
   574 ;;		_Timer0_Init
   575 ;; This function is called by:
   576 ;;		Startup code after reset
   577 ;; This function uses a non-reentrant model
   578 ;;
   579                           
   580                           	psect	text0
   581  001D20                     __ptext0:
   582                           	opt stack 0
   583  001D20                     _main:
   584                           	opt stack 23
   585                           
   586                           ;main.c: 40: float num = 0;
   587                           
   588                           ;incstack = 0
   589  001D20  0E00               	movlw	0
   590  001D22  0100               	movlb	0	; () banked
   591  001D24  6FB1               	movwf	main@num& (0+255),b
   592  001D26  0E00               	movlw	0
   593  001D28  0100               	movlb	0	; () banked
   594  001D2A  6FB2               	movwf	(main@num+1)& (0+255),b
   595  001D2C  0E00               	movlw	0
   596  001D2E  0100               	movlb	0	; () banked
   597  001D30  6FB3               	movwf	(main@num+2)& (0+255),b
   598                           
   599                           ; BSR set to: 0
   600                           ;main.c: 43: GPIO_Config();
   601  001D32  EC0F  F010         	call	_GPIO_Config	;wreg free
   602                           
   603                           ;main.c: 44: Key_Init();
   604  001D36  EC15  F010         	call	_Key_Init	;wreg free
   605                           
   606                           ;main.c: 45: Timer0_Init();
   607  001D3A  EC94  F00F         	call	_Timer0_Init	;wreg free
   608                           
   609                           ;main.c: 46: Init_TM1640();
   610  001D3E  EC81  F00F         	call	_Init_TM1640	;wreg free
   611                           
   612                           ;main.c: 47: ADC6_Init();
   613  001D42  ECF7  F00F         	call	_ADC6_Init	;wreg free
   614                           
   615                           ;main.c: 48: RS485_Init();
   616  001D46  ECDB  F00F         	call	_RS485_Init	;wreg free
   617  001D4A  D000               	goto	l3067
   618  001D4C                     l3067:
   619                           
   620                           ;main.c: 52: {
   621                           ;main.c: 53: Run();
   622  001D4C  EC17  F00F         	call	_Run	;wreg free
   623                           
   624                           ;main.c: 54: Show_Result();
   625  001D50  ECC7  F00C         	call	_Show_Result	;wreg free
   626  001D54  D7FB               	goto	l3067
   627                           
   628                           ;main.c: 55: }
   629                           ;main.c: 57: return 0;
   630                           ;	Return value of _main is never used
   631  001D56  EFC4  F000         	goto	start
   632  001D5A                     __end_of_main:
   633                           	opt stack 0
   634                           tblptru	equ	0xFF8
   635                           tblptrh	equ	0xFF7
   636                           postinc0	equ	0xFEE
   637                           wreg	equ	0xFE8
   638                           
   639 ;; *************** function _Timer0_Init *****************
   640 ;; Defined at:
   641 ;;		line 41 in file "_01_USER/My_Timer.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;		None
   644 ;; Auto vars:     Size  Location     Type
   645 ;;		None
   646 ;; Return value:  Size  Location     Type
   647 ;;		None               void
   648 ;; Registers used:
   649 ;;		wreg, status,2, status,0, cstack
   650 ;; Tracked objects:
   651 ;;		On entry : 0/0
   652 ;;		On exit  : 0/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   659 ;;Total ram usage:        0 bytes
   660 ;; Hardware stack levels used:    1
   661 ;; Hardware stack levels required when called:    4
   662 ;; This function calls:
   663 ;;		_SetTimer0
   664 ;; This function is called by:
   665 ;;		_main
   666 ;; This function uses a non-reentrant model
   667 ;;
   668                           
   669                           	psect	text1
   670  001F28                     __ptext1:
   671                           	opt stack 0
   672  001F28                     _Timer0_Init:
   673                           	opt stack 26
   674                           
   675                           ;My_Timer.c: 43: T08BIT = 0;
   676                           
   677                           ;incstack = 0
   678  001F28  9CD5               	bcf	4053,6,c	;volatile
   679                           
   680                           ;My_Timer.c: 44: T0CS = 0;
   681  001F2A  9AD5               	bcf	4053,5,c	;volatile
   682                           
   683                           ;My_Timer.c: 45: T0SE = 0;
   684  001F2C  98D5               	bcf	4053,4,c	;volatile
   685                           
   686                           ;My_Timer.c: 46: PSA = 0;
   687  001F2E  96D5               	bcf	4053,3,c	;volatile
   688                           
   689                           ;My_Timer.c: 47: T0PS2 = 1;
   690  001F30  84D5               	bsf	4053,2,c	;volatile
   691                           
   692                           ;My_Timer.c: 48: T0PS1 = 1;
   693  001F32  82D5               	bsf	4053,1,c	;volatile
   694                           
   695                           ;My_Timer.c: 49: T0PS0 = 1;
   696  001F34  80D5               	bsf	4053,0,c	;volatile
   697                           
   698                           ;My_Timer.c: 63: SetTimer0(1);
   699  001F36  0E00               	movlw	0
   700  001F38  6E1B               	movwf	SetTimer0@_tmr+1,c
   701  001F3A  0E01               	movlw	1
   702  001F3C  6E1A               	movwf	SetTimer0@_tmr,c
   703  001F3E  ECFF  F00E         	call	_SetTimer0	;wreg free
   704                           
   705                           ;My_Timer.c: 64: TMR0ON = 1;
   706  001F42  8ED5               	bsf	4053,7,c	;volatile
   707                           
   708                           ;My_Timer.c: 65: TMR0IE = 1;
   709  001F44  8AF2               	bsf	intcon,5,c	;volatile
   710                           
   711                           ;My_Timer.c: 66: IPEN = 0;GIE = 1;
   712  001F46  9ED0               	bcf	4048,7,c	;volatile
   713  001F48  8EF2               	bsf	intcon,7,c	;volatile
   714  001F4A  0012               	return		;funcret
   715  001F4C                     __end_of_Timer0_Init:
   716                           	opt stack 0
   717                           tblptru	equ	0xFF8
   718                           tblptrh	equ	0xFF7
   719                           intcon	equ	0xFF2
   720                           postinc0	equ	0xFEE
   721                           wreg	equ	0xFE8
   722                           
   723 ;; *************** function _SetTimer0 *****************
   724 ;; Defined at:
   725 ;;		line 79 in file "_01_USER/My_Timer.c"
   726 ;; Parameters:    Size  Location     Type
   727 ;;  _tmr            2   25[COMRAM] unsigned int 
   728 ;; Auto vars:     Size  Location     Type
   729 ;;		None
   730 ;; Return value:  Size  Location     Type
   731 ;;		None               void
   732 ;; Registers used:
   733 ;;		wreg, status,2, status,0
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   739 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   741 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   742 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   743 ;;Total ram usage:        4 bytes
   744 ;; Hardware stack levels used:    1
   745 ;; Hardware stack levels required when called:    3
   746 ;; This function calls:
   747 ;;		Nothing
   748 ;; This function is called by:
   749 ;;		_Timer0_Init
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753                           	psect	text2
   754  001DFE                     __ptext2:
   755                           	opt stack 0
   756  001DFE                     _SetTimer0:
   757                           	opt stack 26
   758                           
   759                           ;My_Timer.c: 81: if(_tmr > 0xffff) _tmr = 0xffff;
   760                           
   761                           ;incstack = 0
   762  001DFE  D003               	goto	l2949
   763  001E00  681A               	setf	SetTimer0@_tmr,c
   764  001E02  681B               	setf	SetTimer0@_tmr+1,c
   765  001E04  D000               	goto	l2949
   766  001E06                     l2949:
   767                           
   768                           ;My_Timer.c: 82: _tmr=0xffff-_tmr;
   769  001E06  C01A  F01C         	movff	SetTimer0@_tmr,??_SetTimer0
   770  001E0A  C01B  F01D         	movff	SetTimer0@_tmr+1,??_SetTimer0+1
   771  001E0E  1E1C               	comf	??_SetTimer0,f,c
   772  001E10  1E1D               	comf	??_SetTimer0+1,f,c
   773  001E12  4A1C               	infsnz	??_SetTimer0,f,c
   774  001E14  2A1D               	incf	??_SetTimer0+1,f,c
   775  001E16  0EFF               	movlw	255
   776  001E18  241C               	addwf	??_SetTimer0,w,c
   777  001E1A  6E1A               	movwf	SetTimer0@_tmr,c
   778  001E1C  0EFF               	movlw	255
   779  001E1E  201D               	addwfc	??_SetTimer0+1,w,c
   780  001E20  6E1B               	movwf	SetTimer0@_tmr+1,c
   781                           
   782                           ;My_Timer.c: 83: TMR0H = _tmr/256;
   783  001E22  501B               	movf	SetTimer0@_tmr+1,w,c
   784  001E24  6ED7               	movwf	4055,c	;volatile
   785                           
   786                           ;My_Timer.c: 84: TMR0L = _tmr%256;
   787  001E26  C01A  FFD6         	movff	SetTimer0@_tmr,4054	;volatile
   788                           
   789                           ;My_Timer.c: 85: TMR0IF = 0;
   790  001E2A  94F2               	bcf	intcon,2,c	;volatile
   791  001E2C  0012               	return		;funcret
   792  001E2E                     __end_of_SetTimer0:
   793                           	opt stack 0
   794                           tblptru	equ	0xFF8
   795                           tblptrh	equ	0xFF7
   796                           intcon	equ	0xFF2
   797                           postinc0	equ	0xFEE
   798                           wreg	equ	0xFE8
   799                           
   800 ;; *************** function _Show_Result *****************
   801 ;; Defined at:
   802 ;;		line 117 in file "_01_USER/Run.c"
   803 ;; Parameters:    Size  Location     Type
   804 ;;		None
   805 ;; Auto vars:     Size  Location     Type
   806 ;;		None
   807 ;; Return value:  Size  Location     Type
   808 ;;		None               void
   809 ;; Registers used:
   810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   811 ;; Tracked objects:
   812 ;;		On entry : 0/0
   813 ;;		On exit  : 0/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   818 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   819 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   820 ;;Total ram usage:        1 bytes
   821 ;; Hardware stack levels used:    1
   822 ;; Hardware stack levels required when called:    7
   823 ;; This function calls:
   824 ;;		_TM1640_Show_integer
   825 ;;		___wmul
   826 ;; This function is called by:
   827 ;;		_main
   828 ;; This function uses a non-reentrant model
   829 ;;
   830                           
   831                           	psect	text3
   832  00198E                     __ptext3:
   833                           	opt stack 0
   834  00198E                     _Show_Result:
   835                           	opt stack 23
   836                           
   837                           ;Run.c: 119: if( Handle_Switch.Show_Send_Receive )
   838                           
   839                           ;incstack = 0
   840  00198E  5037               	movf	_Handle_Switch+3,w,c
   841  001990  B4D8               	btfsc	status,2,c
   842  001992  D01D               	goto	l3049
   843                           
   844                           ;Run.c: 120: {
   845                           ;Run.c: 121: TM1640_Show_integer( RS485_SendBuff[RS485_Num] + (RS485_Num * 1000) );
   846  001994  C044  F01A         	movff	_RS485_Num,___wmul@multiplier
   847  001998  6A1B               	clrf	___wmul@multiplier+1,c
   848  00199A  0E03               	movlw	3
   849  00199C  6E1D               	movwf	___wmul@multiplicand+1,c
   850  00199E  0EE8               	movlw	232
   851  0019A0  6E1C               	movwf	___wmul@multiplicand,c
   852  0019A2  EC47  F00F         	call	___wmul	;wreg free
   853  0019A6  5044               	movf	_RS485_Num,w,c
   854  0019A8  0D01               	mullw	1
   855  0019AA  0E98               	movlw	low _RS485_SendBuff
   856  0019AC  24F3               	addwf	prodl,w,c
   857  0019AE  6ED9               	movwf	fsr2l,c
   858  0019B0  0E00               	movlw	high _RS485_SendBuff
   859  0019B2  20F4               	addwfc	prodh,w,c
   860  0019B4  6EDA               	movwf	fsr2h,c
   861  0019B6  50DF               	movf	indf2,w,c
   862  0019B8  6E23               	movwf	??_Show_Result& (0+255),c
   863  0019BA  5023               	movf	??_Show_Result,w,c
   864  0019BC  241A               	addwf	?___wmul,w,c
   865  0019BE  6E21               	movwf	TM1640_Show_integer@Numbers,c
   866  0019C0  0E00               	movlw	0
   867  0019C2  201B               	addwfc	?___wmul+1,w,c
   868  0019C4  6E22               	movwf	TM1640_Show_integer@Numbers+1,c
   869  0019C6  EC18  F00A         	call	_TM1640_Show_integer	;wreg free
   870                           
   871                           ;Run.c: 122: PORTEbits.RE7=0;
   872  0019CA  9E84               	bcf	3972,7,c	;volatile
   873                           
   874                           ;Run.c: 123: }
   875  0019CC  0012               	return	
   876  0019CE                     l3049:
   877                           
   878                           ;Run.c: 125: else
   879                           ;Run.c: 126: {
   880                           ;Run.c: 127: TM1640_Show_integer( RS485_ReceiveBuff[RS485_Num] + (RS485_Num * 1000) );
   881  0019CE  C044  F01A         	movff	_RS485_Num,___wmul@multiplier
   882  0019D2  6A1B               	clrf	___wmul@multiplier+1,c
   883  0019D4  0E03               	movlw	3
   884  0019D6  6E1D               	movwf	___wmul@multiplicand+1,c
   885  0019D8  0EE8               	movlw	232
   886  0019DA  6E1C               	movwf	___wmul@multiplicand,c
   887  0019DC  EC47  F00F         	call	___wmul	;wreg free
   888  0019E0  5044               	movf	_RS485_Num,w,c
   889  0019E2  0D01               	mullw	1
   890  0019E4  0E8E               	movlw	low _RS485_ReceiveBuff
   891  0019E6  24F3               	addwf	prodl,w,c
   892  0019E8  6ED9               	movwf	fsr2l,c
   893  0019EA  0E00               	movlw	high _RS485_ReceiveBuff
   894  0019EC  20F4               	addwfc	prodh,w,c
   895  0019EE  6EDA               	movwf	fsr2h,c
   896  0019F0  50DF               	movf	indf2,w,c
   897  0019F2  6E23               	movwf	??_Show_Result& (0+255),c
   898  0019F4  5023               	movf	??_Show_Result,w,c
   899  0019F6  241A               	addwf	?___wmul,w,c
   900  0019F8  6E21               	movwf	TM1640_Show_integer@Numbers,c
   901  0019FA  0E00               	movlw	0
   902  0019FC  201B               	addwfc	?___wmul+1,w,c
   903  0019FE  6E22               	movwf	TM1640_Show_integer@Numbers+1,c
   904  001A00  EC18  F00A         	call	_TM1640_Show_integer	;wreg free
   905                           
   906                           ;Run.c: 128: PORTEbits.RE7=1;
   907  001A04  8E84               	bsf	3972,7,c	;volatile
   908  001A06  0012               	return	
   909  001A08  0012               	return		;funcret
   910  001A0A                     __end_of_Show_Result:
   911                           	opt stack 0
   912                           tblptru	equ	0xFF8
   913                           tblptrh	equ	0xFF7
   914                           prodh	equ	0xFF4
   915                           prodl	equ	0xFF3
   916                           intcon	equ	0xFF2
   917                           postinc0	equ	0xFEE
   918                           wreg	equ	0xFE8
   919                           indf2	equ	0xFDF
   920                           fsr2h	equ	0xFDA
   921                           fsr2l	equ	0xFD9
   922                           status	equ	0xFD8
   923                           
   924 ;; *************** function ___wmul *****************
   925 ;; Defined at:
   926 ;;		line 15 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;  multiplier      2   25[COMRAM] unsigned int 
   929 ;;  multiplicand    2   27[COMRAM] unsigned int 
   930 ;; Auto vars:     Size  Location     Type
   931 ;;  product         2   29[COMRAM] unsigned int 
   932 ;; Return value:  Size  Location     Type
   933 ;;                  2   25[COMRAM] unsigned int 
   934 ;; Registers used:
   935 ;;		wreg, status,2, status,0, prodl, prodh
   936 ;; Tracked objects:
   937 ;;		On entry : 0/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   941 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   942 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   944 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   945 ;;Total ram usage:        6 bytes
   946 ;; Hardware stack levels used:    1
   947 ;; Hardware stack levels required when called:    3
   948 ;; This function calls:
   949 ;;		Nothing
   950 ;; This function is called by:
   951 ;;		_Show_Result
   952 ;; This function uses a non-reentrant model
   953 ;;
   954                           
   955                           	psect	text4
   956  001E8E                     __ptext4:
   957                           	opt stack 0
   958  001E8E                     ___wmul:
   959                           	opt stack 26
   960                           
   961                           ;incstack = 0
   962  001E8E  501A               	movf	___wmul@multiplier,w,c
   963  001E90  021C               	mulwf	___wmul@multiplicand,c
   964  001E92  CFF3 F01E          	movff	prodl,___wmul@product
   965  001E96  CFF4 F01F          	movff	prodh,___wmul@product+1
   966  001E9A  501A               	movf	___wmul@multiplier,w,c
   967  001E9C  021D               	mulwf	___wmul@multiplicand+1,c
   968  001E9E  50F3               	movf	prodl,w,c
   969  001EA0  261F               	addwf	___wmul@product+1,f,c
   970  001EA2  501B               	movf	___wmul@multiplier+1,w,c
   971  001EA4  021C               	mulwf	___wmul@multiplicand,c
   972  001EA6  50F3               	movf	prodl,w,c
   973  001EA8  261F               	addwf	___wmul@product+1,f,c
   974  001EAA  C01E  F01A         	movff	___wmul@product,?___wmul
   975  001EAE  C01F  F01B         	movff	___wmul@product+1,?___wmul+1
   976  001EB2  0012               	return	
   977  001EB4  0012               	return		;funcret
   978  001EB6                     __end_of___wmul:
   979                           	opt stack 0
   980                           tblptru	equ	0xFF8
   981                           tblptrh	equ	0xFF7
   982                           prodh	equ	0xFF4
   983                           prodl	equ	0xFF3
   984                           intcon	equ	0xFF2
   985                           postinc0	equ	0xFEE
   986                           wreg	equ	0xFE8
   987                           indf2	equ	0xFDF
   988                           fsr2h	equ	0xFDA
   989                           fsr2l	equ	0xFD9
   990                           status	equ	0xFD8
   991                           
   992 ;; *************** function _TM1640_Show_integer *****************
   993 ;; Defined at:
   994 ;;		line 55 in file "_01_USER/TM1640.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;  Numbers         2   32[COMRAM] unsigned int 
   997 ;; Auto vars:     Size  Location     Type
   998 ;;		None
   999 ;; Return value:  Size  Location     Type
  1000 ;;		None               void
  1001 ;; Registers used:
  1002 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1008 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1011 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1012 ;;Total ram usage:        2 bytes
  1013 ;; Hardware stack levels used:    1
  1014 ;; Hardware stack levels required when called:    6
  1015 ;; This function calls:
  1016 ;;		_TM1640_Writer_Dates
  1017 ;;		___lwdiv
  1018 ;;		___lwmod
  1019 ;; This function is called by:
  1020 ;;		_Show_Result
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024                           	psect	text5
  1025  001430                     __ptext5:
  1026                           	opt stack 0
  1027  001430                     _TM1640_Show_integer:
  1028                           	opt stack 23
  1029                           
  1030                           ;TM1640.c: 58: TM1640_Writer_Dates(3,LED_Number[Numbers%10]); Numbers/=10;
  1031                           
  1032                           ;incstack = 0
  1033  001430  C021  F01A         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1034  001434  C022  F01B         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1035  001438  0E00               	movlw	0
  1036  00143A  6E1D               	movwf	___lwmod@divisor+1,c
  1037  00143C  0E0A               	movlw	10
  1038  00143E  6E1C               	movwf	___lwmod@divisor,c
  1039  001440  EC00  F00E         	call	___lwmod	;wreg free
  1040  001444  0E01               	movlw	low _LED_Number
  1041  001446  241A               	addwf	?___lwmod,w,c
  1042  001448  6EF6               	movwf	tblptrl,c
  1043  00144A  0E10               	movlw	high _LED_Number
  1044  00144C  201B               	addwfc	?___lwmod+1,w,c
  1045  00144E  6EF7               	movwf	tblptrh,c
  1046  001450                     	if	0	;There are less than 3 active tblptr bytes
  1047  001450                     	endif
  1048  001450  0008               	tblrd		*
  1049  001452  CFF5 F01F          	movff	tablat,TM1640_Writer_Dates@Date
  1050  001456  0E03               	movlw	3
  1051  001458  ECCA  F00F         	call	_TM1640_Writer_Dates
  1052  00145C  C021  F01A         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1053  001460  C022  F01B         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1054  001464  0E00               	movlw	0
  1055  001466  6E1D               	movwf	___lwdiv@divisor+1,c
  1056  001468  0E0A               	movlw	10
  1057  00146A  6E1C               	movwf	___lwdiv@divisor,c
  1058  00146C  ECAB  F00D         	call	___lwdiv	;wreg free
  1059  001470  C01A  F021         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1060  001474  C01B  F022         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1061                           
  1062                           ;TM1640.c: 59: TM1640_Writer_Dates(2,LED_Number[Numbers%10]); Numbers/=10;
  1063  001478  C021  F01A         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1064  00147C  C022  F01B         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1065  001480  0E00               	movlw	0
  1066  001482  6E1D               	movwf	___lwmod@divisor+1,c
  1067  001484  0E0A               	movlw	10
  1068  001486  6E1C               	movwf	___lwmod@divisor,c
  1069  001488  EC00  F00E         	call	___lwmod	;wreg free
  1070  00148C  0E01               	movlw	low _LED_Number
  1071  00148E  241A               	addwf	?___lwmod,w,c
  1072  001490  6EF6               	movwf	tblptrl,c
  1073  001492  0E10               	movlw	high _LED_Number
  1074  001494  201B               	addwfc	?___lwmod+1,w,c
  1075  001496  6EF7               	movwf	tblptrh,c
  1076  001498                     	if	0	;There are less than 3 active tblptr bytes
  1077  001498                     	endif
  1078  001498  0008               	tblrd		*
  1079  00149A  CFF5 F01F          	movff	tablat,TM1640_Writer_Dates@Date
  1080  00149E  0E02               	movlw	2
  1081  0014A0  ECCA  F00F         	call	_TM1640_Writer_Dates
  1082  0014A4  C021  F01A         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1083  0014A8  C022  F01B         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1084  0014AC  0E00               	movlw	0
  1085  0014AE  6E1D               	movwf	___lwdiv@divisor+1,c
  1086  0014B0  0E0A               	movlw	10
  1087  0014B2  6E1C               	movwf	___lwdiv@divisor,c
  1088  0014B4  ECAB  F00D         	call	___lwdiv	;wreg free
  1089  0014B8  C01A  F021         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1090  0014BC  C01B  F022         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1091                           
  1092                           ;TM1640.c: 60: TM1640_Writer_Dates(1,LED_Number[Numbers%10]); Numbers/=10;
  1093  0014C0  C021  F01A         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1094  0014C4  C022  F01B         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1095  0014C8  0E00               	movlw	0
  1096  0014CA  6E1D               	movwf	___lwmod@divisor+1,c
  1097  0014CC  0E0A               	movlw	10
  1098  0014CE  6E1C               	movwf	___lwmod@divisor,c
  1099  0014D0  EC00  F00E         	call	___lwmod	;wreg free
  1100  0014D4  0E01               	movlw	low _LED_Number
  1101  0014D6  241A               	addwf	?___lwmod,w,c
  1102  0014D8  6EF6               	movwf	tblptrl,c
  1103  0014DA  0E10               	movlw	high _LED_Number
  1104  0014DC  201B               	addwfc	?___lwmod+1,w,c
  1105  0014DE  6EF7               	movwf	tblptrh,c
  1106  0014E0                     	if	0	;There are less than 3 active tblptr bytes
  1107  0014E0                     	endif
  1108  0014E0  0008               	tblrd		*
  1109  0014E2  CFF5 F01F          	movff	tablat,TM1640_Writer_Dates@Date
  1110  0014E6  0E01               	movlw	1
  1111  0014E8  ECCA  F00F         	call	_TM1640_Writer_Dates
  1112  0014EC  C021  F01A         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1113  0014F0  C022  F01B         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1114  0014F4  0E00               	movlw	0
  1115  0014F6  6E1D               	movwf	___lwdiv@divisor+1,c
  1116  0014F8  0E0A               	movlw	10
  1117  0014FA  6E1C               	movwf	___lwdiv@divisor,c
  1118  0014FC  ECAB  F00D         	call	___lwdiv	;wreg free
  1119  001500  C01A  F021         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1120  001504  C01B  F022         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1121                           
  1122                           ;TM1640.c: 61: TM1640_Writer_Dates(0,LED_Number[Numbers%10]);
  1123  001508  C021  F01A         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1124  00150C  C022  F01B         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1125  001510  0E00               	movlw	0
  1126  001512  6E1D               	movwf	___lwmod@divisor+1,c
  1127  001514  0E0A               	movlw	10
  1128  001516  6E1C               	movwf	___lwmod@divisor,c
  1129  001518  EC00  F00E         	call	___lwmod	;wreg free
  1130  00151C  0E01               	movlw	low _LED_Number
  1131  00151E  241A               	addwf	?___lwmod,w,c
  1132  001520  6EF6               	movwf	tblptrl,c
  1133  001522  0E10               	movlw	high _LED_Number
  1134  001524  201B               	addwfc	?___lwmod+1,w,c
  1135  001526  6EF7               	movwf	tblptrh,c
  1136  001528                     	if	0	;There are less than 3 active tblptr bytes
  1137  001528                     	endif
  1138  001528  0008               	tblrd		*
  1139  00152A  CFF5 F01F          	movff	tablat,TM1640_Writer_Dates@Date
  1140  00152E  0E00               	movlw	0
  1141  001530  ECCA  F00F         	call	_TM1640_Writer_Dates
  1142  001534  0012               	return		;funcret
  1143  001536                     __end_of_TM1640_Show_integer:
  1144                           	opt stack 0
  1145                           tblptru	equ	0xFF8
  1146                           tblptrh	equ	0xFF7
  1147                           tblptrl	equ	0xFF6
  1148                           tablat	equ	0xFF5
  1149                           prodh	equ	0xFF4
  1150                           prodl	equ	0xFF3
  1151                           intcon	equ	0xFF2
  1152                           postinc0	equ	0xFEE
  1153                           wreg	equ	0xFE8
  1154                           indf2	equ	0xFDF
  1155                           fsr2h	equ	0xFDA
  1156                           fsr2l	equ	0xFD9
  1157                           status	equ	0xFD8
  1158                           
  1159 ;; *************** function ___lwmod *****************
  1160 ;; Defined at:
  1161 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1162 ;; Parameters:    Size  Location     Type
  1163 ;;  dividend        2   25[COMRAM] unsigned int 
  1164 ;;  divisor         2   27[COMRAM] unsigned int 
  1165 ;; Auto vars:     Size  Location     Type
  1166 ;;  counter         1   29[COMRAM] unsigned char 
  1167 ;; Return value:  Size  Location     Type
  1168 ;;                  2   25[COMRAM] unsigned int 
  1169 ;; Registers used:
  1170 ;;		wreg, status,2, status,0
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1176 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1177 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1179 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1180 ;;Total ram usage:        5 bytes
  1181 ;; Hardware stack levels used:    1
  1182 ;; Hardware stack levels required when called:    3
  1183 ;; This function calls:
  1184 ;;		Nothing
  1185 ;; This function is called by:
  1186 ;;		_TM1640_Show_integer
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190                           	psect	text6
  1191  001C00                     __ptext6:
  1192                           	opt stack 0
  1193  001C00                     ___lwmod:
  1194                           	opt stack 25
  1195                           
  1196                           ;incstack = 0
  1197  001C00  501C               	movf	___lwmod@divisor,w,c
  1198  001C02  101D               	iorwf	___lwmod@divisor+1,w,c
  1199  001C04  B4D8               	btfsc	status,2,c
  1200  001C06  D01D               	goto	l986
  1201  001C08  0E01               	movlw	1
  1202  001C0A  6E1E               	movwf	___lwmod@counter,c
  1203  001C0C  D005               	goto	l2883
  1204  001C0E                     l2881:
  1205  001C0E  90D8               	bcf	status,0,c
  1206  001C10  361C               	rlcf	___lwmod@divisor,f,c
  1207  001C12  361D               	rlcf	___lwmod@divisor+1,f,c
  1208  001C14  2A1E               	incf	___lwmod@counter,f,c
  1209  001C16  D000               	goto	l2883
  1210  001C18                     l2883:
  1211  001C18  BE1D               	btfsc	___lwmod@divisor+1,7,c
  1212  001C1A  D002               	goto	l2885
  1213  001C1C  D7F8               	goto	l2881
  1214  001C1E  D000               	goto	l2885
  1215  001C20                     l2885:
  1216  001C20  501C               	movf	___lwmod@divisor,w,c
  1217  001C22  5C1A               	subwf	___lwmod@dividend,w,c
  1218  001C24  501D               	movf	___lwmod@divisor+1,w,c
  1219  001C26  581B               	subwfb	___lwmod@dividend+1,w,c
  1220  001C28  A0D8               	btfss	status,0,c
  1221  001C2A  D005               	goto	l2889
  1222  001C2C  501C               	movf	___lwmod@divisor,w,c
  1223  001C2E  5E1A               	subwf	___lwmod@dividend,f,c
  1224  001C30  501D               	movf	___lwmod@divisor+1,w,c
  1225  001C32  5A1B               	subwfb	___lwmod@dividend+1,f,c
  1226  001C34  D000               	goto	l2889
  1227  001C36                     l2889:
  1228  001C36  90D8               	bcf	status,0,c
  1229  001C38  321D               	rrcf	___lwmod@divisor+1,f,c
  1230  001C3A  321C               	rrcf	___lwmod@divisor,f,c
  1231  001C3C  2E1E               	decfsz	___lwmod@counter,f,c
  1232  001C3E  D7F0               	goto	l2885
  1233  001C40  D000               	goto	l986
  1234  001C42                     l986:
  1235  001C42  C01A  F01A         	movff	___lwmod@dividend,?___lwmod
  1236  001C46  C01B  F01B         	movff	___lwmod@dividend+1,?___lwmod+1
  1237  001C4A  0012               	return		;funcret
  1238  001C4C                     __end_of___lwmod:
  1239                           	opt stack 0
  1240                           tblptru	equ	0xFF8
  1241                           tblptrh	equ	0xFF7
  1242                           tblptrl	equ	0xFF6
  1243                           tablat	equ	0xFF5
  1244                           prodh	equ	0xFF4
  1245                           prodl	equ	0xFF3
  1246                           intcon	equ	0xFF2
  1247                           postinc0	equ	0xFEE
  1248                           wreg	equ	0xFE8
  1249                           indf2	equ	0xFDF
  1250                           fsr2h	equ	0xFDA
  1251                           fsr2l	equ	0xFD9
  1252                           status	equ	0xFD8
  1253                           
  1254 ;; *************** function ___lwdiv *****************
  1255 ;; Defined at:
  1256 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;  dividend        2   25[COMRAM] unsigned int 
  1259 ;;  divisor         2   27[COMRAM] unsigned int 
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;  quotient        2   30[COMRAM] unsigned int 
  1262 ;;  counter         1   29[COMRAM] unsigned char 
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  2   25[COMRAM] unsigned int 
  1265 ;; Registers used:
  1266 ;;		wreg, status,2, status,0
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1272 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1273 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1275 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1276 ;;Total ram usage:        7 bytes
  1277 ;; Hardware stack levels used:    1
  1278 ;; Hardware stack levels required when called:    3
  1279 ;; This function calls:
  1280 ;;		Nothing
  1281 ;; This function is called by:
  1282 ;;		_TM1640_Show_integer
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           
  1286                           	psect	text7
  1287  001B56                     __ptext7:
  1288                           	opt stack 0
  1289  001B56                     ___lwdiv:
  1290                           	opt stack 25
  1291                           
  1292                           ;incstack = 0
  1293  001B56  0E00               	movlw	0
  1294  001B58  6E20               	movwf	___lwdiv@quotient+1,c
  1295  001B5A  0E00               	movlw	0
  1296  001B5C  6E1F               	movwf	___lwdiv@quotient,c
  1297  001B5E  501C               	movf	___lwdiv@divisor,w,c
  1298  001B60  101D               	iorwf	___lwdiv@divisor+1,w,c
  1299  001B62  B4D8               	btfsc	status,2,c
  1300  001B64  D021               	goto	l976
  1301  001B66  0E01               	movlw	1
  1302  001B68  6E1E               	movwf	___lwdiv@counter,c
  1303  001B6A  D005               	goto	l2863
  1304  001B6C                     l2861:
  1305  001B6C  90D8               	bcf	status,0,c
  1306  001B6E  361C               	rlcf	___lwdiv@divisor,f,c
  1307  001B70  361D               	rlcf	___lwdiv@divisor+1,f,c
  1308  001B72  2A1E               	incf	___lwdiv@counter,f,c
  1309  001B74  D000               	goto	l2863
  1310  001B76                     l2863:
  1311  001B76  BE1D               	btfsc	___lwdiv@divisor+1,7,c
  1312  001B78  D002               	goto	l2865
  1313  001B7A  D7F8               	goto	l2861
  1314  001B7C  D000               	goto	l2865
  1315  001B7E                     l2865:
  1316  001B7E  90D8               	bcf	status,0,c
  1317  001B80  361F               	rlcf	___lwdiv@quotient,f,c
  1318  001B82  3620               	rlcf	___lwdiv@quotient+1,f,c
  1319  001B84  501C               	movf	___lwdiv@divisor,w,c
  1320  001B86  5C1A               	subwf	___lwdiv@dividend,w,c
  1321  001B88  501D               	movf	___lwdiv@divisor+1,w,c
  1322  001B8A  581B               	subwfb	___lwdiv@dividend+1,w,c
  1323  001B8C  A0D8               	btfss	status,0,c
  1324  001B8E  D006               	goto	l2873
  1325  001B90  501C               	movf	___lwdiv@divisor,w,c
  1326  001B92  5E1A               	subwf	___lwdiv@dividend,f,c
  1327  001B94  501D               	movf	___lwdiv@divisor+1,w,c
  1328  001B96  5A1B               	subwfb	___lwdiv@dividend+1,f,c
  1329  001B98  801F               	bsf	___lwdiv@quotient,0,c
  1330  001B9A  D000               	goto	l2873
  1331  001B9C                     l2873:
  1332  001B9C  90D8               	bcf	status,0,c
  1333  001B9E  321D               	rrcf	___lwdiv@divisor+1,f,c
  1334  001BA0  321C               	rrcf	___lwdiv@divisor,f,c
  1335  001BA2  2E1E               	decfsz	___lwdiv@counter,f,c
  1336  001BA4  D7EC               	goto	l2865
  1337  001BA6  D000               	goto	l976
  1338  001BA8                     l976:
  1339  001BA8  C01F  F01A         	movff	___lwdiv@quotient,?___lwdiv
  1340  001BAC  C020  F01B         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1341  001BB0  0012               	return		;funcret
  1342  001BB2                     __end_of___lwdiv:
  1343                           	opt stack 0
  1344                           tblptru	equ	0xFF8
  1345                           tblptrh	equ	0xFF7
  1346                           tblptrl	equ	0xFF6
  1347                           tablat	equ	0xFF5
  1348                           prodh	equ	0xFF4
  1349                           prodl	equ	0xFF3
  1350                           intcon	equ	0xFF2
  1351                           postinc0	equ	0xFEE
  1352                           wreg	equ	0xFE8
  1353                           indf2	equ	0xFDF
  1354                           fsr2h	equ	0xFDA
  1355                           fsr2l	equ	0xFD9
  1356                           status	equ	0xFD8
  1357                           
  1358 ;; *************** function _TM1640_Writer_Dates *****************
  1359 ;; Defined at:
  1360 ;;		line 66 in file "_01_USER/TM1640.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;  Addr            1    wreg     unsigned char 
  1363 ;;  Date            1   30[COMRAM] unsigned char 
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;  Addr            1   31[COMRAM] unsigned char 
  1366 ;; Return value:  Size  Location     Type
  1367 ;;		None               void
  1368 ;; Registers used:
  1369 ;;		wreg, status,2, status,0, cstack
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1375 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1376 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1378 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1379 ;;Total ram usage:        2 bytes
  1380 ;; Hardware stack levels used:    1
  1381 ;; Hardware stack levels required when called:    5
  1382 ;; This function calls:
  1383 ;;		_TM1640_Start
  1384 ;;		_TM1640_Stop
  1385 ;;		_TM1640_Writer_Byte
  1386 ;; This function is called by:
  1387 ;;		_TM1640_Show_integer
  1388 ;;		_TM1640_Show_Decimal
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           
  1392                           	psect	text8
  1393  001F94                     __ptext8:
  1394                           	opt stack 0
  1395  001F94                     _TM1640_Writer_Dates:
  1396                           	opt stack 23
  1397                           
  1398                           ;incstack = 0
  1399                           ;TM1640_Writer_Dates@Addr stored from wreg
  1400  001F94  6E20               	movwf	TM1640_Writer_Dates@Addr,c
  1401                           
  1402                           ;TM1640.c: 68: if((Addr >= 0) && (Addr <= 3))
  1403  001F96  0E04               	movlw	4
  1404  001F98  6020               	cpfslt	TM1640_Writer_Dates@Addr,c
  1405  001F9A  0012               	return	
  1406                           
  1407                           ;TM1640.c: 69: {
  1408                           ;TM1640.c: 70: TM1640_Start();
  1409  001F9C  ECB8  F00F         	call	_TM1640_Start	;wreg free
  1410                           
  1411                           ;TM1640.c: 71: TM1640_Writer_Byte(0xC0 + Addr);
  1412  001FA0  5020               	movf	TM1640_Writer_Dates@Addr,w,c
  1413  001FA2  0FC0               	addlw	192
  1414  001FA4  EC71  F00E         	call	_TM1640_Writer_Byte
  1415                           
  1416                           ;TM1640.c: 72: TM1640_Writer_Byte(Date);
  1417  001FA8  501F               	movf	TM1640_Writer_Dates@Date,w,c
  1418  001FAA  EC71  F00E         	call	_TM1640_Writer_Byte
  1419                           
  1420                           ;TM1640.c: 73: TM1640_Stop();
  1421  001FAE  ECA6  F00F         	call	_TM1640_Stop	;wreg free
  1422  001FB2  0012               	return	
  1423  001FB4  0012               	return		;funcret
  1424  001FB6                     __end_of_TM1640_Writer_Dates:
  1425                           	opt stack 0
  1426                           tblptru	equ	0xFF8
  1427                           tblptrh	equ	0xFF7
  1428                           tblptrl	equ	0xFF6
  1429                           tablat	equ	0xFF5
  1430                           prodh	equ	0xFF4
  1431                           prodl	equ	0xFF3
  1432                           intcon	equ	0xFF2
  1433                           postinc0	equ	0xFEE
  1434                           wreg	equ	0xFE8
  1435                           indf2	equ	0xFDF
  1436                           fsr2h	equ	0xFDA
  1437                           fsr2l	equ	0xFD9
  1438                           status	equ	0xFD8
  1439                           
  1440 ;; *************** function _Run *****************
  1441 ;; Defined at:
  1442 ;;		line 92 in file "_01_USER/Run.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;		None
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;		None
  1447 ;; Return value:  Size  Location     Type
  1448 ;;		None               void
  1449 ;; Registers used:
  1450 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1460 ;;Total ram usage:        0 bytes
  1461 ;; Hardware stack levels used:    1
  1462 ;; Hardware stack levels required when called:    6
  1463 ;; This function calls:
  1464 ;;		_Get_ADC6
  1465 ;;		_RS485_Send_Date
  1466 ;; This function is called by:
  1467 ;;		_main
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           	psect	text9
  1472  001E2E                     __ptext9:
  1473                           	opt stack 0
  1474  001E2E                     _Run:
  1475                           	opt stack 24
  1476                           
  1477                           ;Run.c: 95: if( Handle_Switch.ADC6 ) Get_ADC6();
  1478                           
  1479                           ;incstack = 0
  1480  001E2E  5035               	movf	_Handle_Switch+1,w,c
  1481  001E30  B4D8               	btfsc	status,2,c
  1482  001E32  D003               	goto	l3037
  1483  001E34  EC75  F00D         	call	_Get_ADC6	;wreg free
  1484  001E38  D000               	goto	l3037
  1485  001E3A                     l3037:
  1486                           
  1487                           ;Run.c: 98: if ( Handle_Switch.Usart_OneDate )
  1488  001E3A  5036               	movf	_Handle_Switch+2,w,c
  1489  001E3C  B4D8               	btfsc	status,2,c
  1490  001E3E  0012               	return	
  1491                           
  1492                           ;Run.c: 99: {
  1493                           ;Run.c: 100: Handle_Switch.Usart_OneDate = 0;
  1494  001E40  0E00               	movlw	0
  1495  001E42  6E36               	movwf	_Handle_Switch+2,c
  1496                           
  1497                           ;Run.c: 101: RS485_Send_Date(RS485_SendBuff,10);
  1498  001E44  0E98               	movlw	low _RS485_SendBuff
  1499  001E46  0100               	movlb	0	; () banked
  1500  001E48  6FA2               	movwf	RS485_Send_Date@date_dress& (0+255),b
  1501  001E4A  0E00               	movlw	high _RS485_SendBuff
  1502  001E4C  0100               	movlb	0	; () banked
  1503  001E4E  6FA3               	movwf	(RS485_Send_Date@date_dress+1)& (0+255),b
  1504  001E50  0E0A               	movlw	10
  1505  001E52  0100               	movlb	0	; () banked
  1506  001E54  6FA4               	movwf	RS485_Send_Date@date_lenth& (0+255),b
  1507  001E56  ECF8  F00B         	call	_RS485_Send_Date	;wreg free
  1508  001E5A  0012               	return	
  1509  001E5C  0012               	return		;funcret
  1510  001E5E                     __end_of_Run:
  1511                           	opt stack 0
  1512                           tblptru	equ	0xFF8
  1513                           tblptrh	equ	0xFF7
  1514                           tblptrl	equ	0xFF6
  1515                           tablat	equ	0xFF5
  1516                           prodh	equ	0xFF4
  1517                           prodl	equ	0xFF3
  1518                           intcon	equ	0xFF2
  1519                           postinc0	equ	0xFEE
  1520                           wreg	equ	0xFE8
  1521                           indf2	equ	0xFDF
  1522                           fsr2h	equ	0xFDA
  1523                           fsr2l	equ	0xFD9
  1524                           status	equ	0xFD8
  1525                           
  1526 ;; *************** function _RS485_Send_Date *****************
  1527 ;; Defined at:
  1528 ;;		line 74 in file "_01_USER/My_USART.c"
  1529 ;; Parameters:    Size  Location     Type
  1530 ;;  date_dress      2    0[BANK0 ] PTR unsigned char 
  1531 ;;		 -> RS485_SendBuff(10), 
  1532 ;;  date_lenth      1    2[BANK0 ] unsigned char 
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;		None
  1535 ;; Return value:  Size  Location     Type
  1536 ;;		None               void
  1537 ;; Registers used:
  1538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1544 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1546 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1547 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1548 ;;Total ram usage:        7 bytes
  1549 ;; Hardware stack levels used:    1
  1550 ;; Hardware stack levels required when called:    5
  1551 ;; This function calls:
  1552 ;;		_CRC_Verify
  1553 ;; This function is called by:
  1554 ;;		_Run
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           	psect	text10
  1559  0017F0                     __ptext10:
  1560                           	opt stack 0
  1561  0017F0                     _RS485_Send_Date:
  1562                           	opt stack 24
  1563                           
  1564                           ;My_USART.c: 78: date_dress[date_lenth-1] = 0xaa;
  1565                           
  1566                           ;incstack = 0
  1567  0017F0  0EFF               	movlw	255
  1568  0017F2  0100               	movlb	0	; () banked
  1569  0017F4  6FA5               	movwf	??_RS485_Send_Date& (0+255),b
  1570  0017F6  0EFF               	movlw	255
  1571  0017F8  0100               	movlb	0	; () banked
  1572  0017FA  6FA6               	movwf	(??_RS485_Send_Date+1)& (0+255),b
  1573  0017FC  0100               	movlb	0	; () banked
  1574  0017FE  51A4               	movf	RS485_Send_Date@date_lenth& (0+255),w,b
  1575  001800  0100               	movlb	0	; () banked
  1576  001802  6FA7               	movwf	(??_RS485_Send_Date+2)& (0+255),b
  1577  001804  6BA8               	clrf	(??_RS485_Send_Date+3)& (0+255),b
  1578  001806  0100               	movlb	0	; () banked
  1579  001808  51A5               	movf	??_RS485_Send_Date& (0+255),w,b
  1580  00180A  0100               	movlb	0	; () banked
  1581  00180C  27A7               	addwf	(??_RS485_Send_Date+2)& (0+255),f,b
  1582  00180E  0100               	movlb	0	; () banked
  1583  001810  51A6               	movf	(??_RS485_Send_Date+1)& (0+255),w,b
  1584  001812  0100               	movlb	0	; () banked
  1585  001814  23A8               	addwfc	(??_RS485_Send_Date+3)& (0+255),f,b
  1586  001816  0100               	movlb	0	; () banked
  1587  001818  51A7               	movf	(??_RS485_Send_Date+2)& (0+255),w,b
  1588  00181A  0100               	movlb	0	; () banked
  1589  00181C  25A2               	addwf	RS485_Send_Date@date_dress& (0+255),w,b
  1590  00181E  6ED9               	movwf	fsr2l,c
  1591  001820  0100               	movlb	0	; () banked
  1592  001822  51A8               	movf	(??_RS485_Send_Date+3)& (0+255),w,b
  1593  001824  0100               	movlb	0	; () banked
  1594  001826  21A3               	addwfc	(RS485_Send_Date@date_dress+1)& (0+255),w,b
  1595  001828  6EDA               	movwf	fsr2h,c
  1596  00182A  0EAA               	movlw	170
  1597  00182C  6EDF               	movwf	indf2,c
  1598                           
  1599                           ; BSR set to: 0
  1600                           ;My_USART.c: 81: CRC_Verify(date_dress);
  1601  00182E  C0A2  F027         	movff	RS485_Send_Date@date_dress,CRC_Verify@DataBuff
  1602  001832  C0A3  F028         	movff	RS485_Send_Date@date_dress+1,CRC_Verify@DataBuff+1
  1603  001836  EC83  F009         	call	_CRC_Verify	;wreg free
  1604                           
  1605                           ;My_USART.c: 84: while( (!TXSTA2bits.TRMT) );
  1606  00183A  D000               	goto	l156
  1607  00183C                     l156:
  1608  00183C  010F               	movlb	15	; () banked
  1609  00183E  A321               	btfss	33,1,b	;volatile
  1610  001840  D7FD               	goto	l156
  1611                           
  1612                           ; BSR set to: 15
  1613                           ;My_USART.c: 85: RG3 = 0;
  1614  001842  9686               	bcf	3974,3,c	;volatile
  1615                           
  1616                           ;My_USART.c: 88: while( date_lenth --)
  1617  001844  D014               	goto	l2943
  1618  001846                     l2941:
  1619                           
  1620                           ;My_USART.c: 89: {
  1621                           ;My_USART.c: 90: TXREG2 = date_dress[date_lenth];
  1622  001846  0100               	movlb	0	; () banked
  1623  001848  51A4               	movf	RS485_Send_Date@date_lenth& (0+255),w,b
  1624  00184A  0D01               	mullw	1
  1625  00184C  50F3               	movf	prodl,w,c
  1626  00184E  0100               	movlb	0	; () banked
  1627  001850  25A2               	addwf	RS485_Send_Date@date_dress& (0+255),w,b
  1628  001852  6ED9               	movwf	fsr2l,c
  1629  001854  50F4               	movf	prodh,w,c
  1630  001856  0100               	movlb	0	; () banked
  1631  001858  21A3               	addwfc	(RS485_Send_Date@date_dress+1)& (0+255),w,b
  1632  00185A  6EDA               	movwf	fsr2h,c
  1633  00185C  50DF               	movf	indf2,w,c
  1634  00185E  010F               	movlb	15	; () banked
  1635  001860  6F1C               	movwf	28,b	;volatile
  1636                           
  1637                           ;My_USART.c: 91: while( (!TXSTA2bits.TRMT));
  1638  001862  D000               	goto	l161
  1639  001864                     l161:
  1640                           
  1641                           ; BSR set to: 15
  1642  001864  010F               	movlb	15	; () banked
  1643  001866  B321               	btfsc	33,1,b	;volatile
  1644  001868  D002               	goto	l2943
  1645  00186A  D7FC               	goto	l161
  1646                           
  1647                           ; BSR set to: 15
  1648  00186C  D000               	goto	l2943
  1649  00186E                     l2943:
  1650                           
  1651                           ; BSR set to: 15
  1652  00186E  0100               	movlb	0	; () banked
  1653  001870  07A4               	decf	RS485_Send_Date@date_lenth& (0+255),f,b
  1654  001872  0100               	movlb	0	; () banked
  1655  001874  29A4               	incf	RS485_Send_Date@date_lenth& (0+255),w,b
  1656  001876  A4D8               	btfss	status,2,c
  1657  001878  D7E6               	goto	l2941
  1658                           
  1659                           ; BSR set to: 0
  1660                           ;My_USART.c: 92: }
  1661                           ;My_USART.c: 94: RG3 = 1;
  1662  00187A  8686               	bsf	3974,3,c	;volatile
  1663                           
  1664                           ; BSR set to: 0
  1665  00187C  0012               	return		;funcret
  1666  00187E                     __end_of_RS485_Send_Date:
  1667                           	opt stack 0
  1668                           tblptru	equ	0xFF8
  1669                           tblptrh	equ	0xFF7
  1670                           tblptrl	equ	0xFF6
  1671                           tablat	equ	0xFF5
  1672                           prodh	equ	0xFF4
  1673                           prodl	equ	0xFF3
  1674                           intcon	equ	0xFF2
  1675                           postinc0	equ	0xFEE
  1676                           wreg	equ	0xFE8
  1677                           indf2	equ	0xFDF
  1678                           fsr2h	equ	0xFDA
  1679                           fsr2l	equ	0xFD9
  1680                           status	equ	0xFD8
  1681                           
  1682 ;; *************** function _CRC_Verify *****************
  1683 ;; Defined at:
  1684 ;;		line 118 in file "_01_USER/My_USART.c"
  1685 ;; Parameters:    Size  Location     Type
  1686 ;;  DataBuff        2   38[COMRAM] PTR unsigned char 
  1687 ;;		 -> RS485_SendBuff(10), 
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;  CRC_Value       4   45[COMRAM] unsigned long 
  1690 ;;  CRC_Byte        1   49[COMRAM] unsigned char 
  1691 ;; Return value:  Size  Location     Type
  1692 ;;		None               void
  1693 ;; Registers used:
  1694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1700 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1701 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1702 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1703 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1704 ;;Total ram usage:       12 bytes
  1705 ;; Hardware stack levels used:    1
  1706 ;; Hardware stack levels required when called:    4
  1707 ;; This function calls:
  1708 ;;		___lldiv
  1709 ;;		___llmod
  1710 ;; This function is called by:
  1711 ;;		_RS485_Send_Date
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715                           	psect	text11
  1716  001306                     __ptext11:
  1717                           	opt stack 0
  1718  001306                     _CRC_Verify:
  1719                           	opt stack 24
  1720                           
  1721                           ;My_USART.c: 120: unsigned long int CRC_Value = 0;
  1722                           
  1723                           ; BSR set to: 0
  1724                           ;incstack = 0
  1725  001306  0E00               	movlw	0
  1726  001308  6E2E               	movwf	CRC_Verify@CRC_Value,c
  1727  00130A  0E00               	movlw	0
  1728  00130C  6E2F               	movwf	CRC_Verify@CRC_Value+1,c
  1729  00130E  0E00               	movlw	0
  1730  001310  6E30               	movwf	CRC_Verify@CRC_Value+2,c
  1731  001312  0E00               	movlw	0
  1732  001314  6E31               	movwf	CRC_Verify@CRC_Value+3,c
  1733                           
  1734                           ;My_USART.c: 121: unsigned char CRC_Byte;
  1735                           ;My_USART.c: 123: for(CRC_Byte = 2;CRC_Byte < 10 ;CRC_Byte++)
  1736  001316  0E02               	movlw	2
  1737  001318  6E32               	movwf	CRC_Verify@CRC_Byte,c
  1738  00131A                     l2729:
  1739  00131A  0E09               	movlw	9
  1740  00131C  6432               	cpfsgt	CRC_Verify@CRC_Byte,c
  1741  00131E  D001               	goto	l2733
  1742  001320  D035               	goto	l2739
  1743  001322                     l2733:
  1744                           
  1745                           ;My_USART.c: 124: CRC_Value = ( CRC_Value + DataBuff[CRC_Byte]*CRC_Byte ) % 0xffff;
  1746  001322  5032               	movf	CRC_Verify@CRC_Byte,w,c
  1747  001324  0D01               	mullw	1
  1748  001326  50F3               	movf	prodl,w,c
  1749  001328  2427               	addwf	CRC_Verify@DataBuff,w,c
  1750  00132A  6ED9               	movwf	fsr2l,c
  1751  00132C  50F4               	movf	prodh,w,c
  1752  00132E  2028               	addwfc	CRC_Verify@DataBuff+1,w,c
  1753  001330  6EDA               	movwf	fsr2h,c
  1754  001332  50DF               	movf	indf2,w,c
  1755  001334  6E29               	movwf	??_CRC_Verify& (0+255),c
  1756  001336  5029               	movf	??_CRC_Verify,w,c
  1757  001338  0232               	mulwf	CRC_Verify@CRC_Byte,c
  1758  00133A  CFF3 F02A          	movff	prodl,??_CRC_Verify+1
  1759  00133E  CFF4 F02B          	movff	prodh,??_CRC_Verify+2
  1760  001342  0E00               	movlw	0
  1761  001344  BE2B               	btfsc	(??_CRC_Verify+2)& (0+255),7,c
  1762  001346  0EFF               	movlw	255
  1763  001348  6E2C               	movwf	(??_CRC_Verify+3)& (0+255),c
  1764  00134A  6E2D               	movwf	(??_CRC_Verify+4)& (0+255),c
  1765  00134C  502E               	movf	CRC_Verify@CRC_Value,w,c
  1766  00134E  242A               	addwf	??_CRC_Verify+1,w,c
  1767  001350  6E1A               	movwf	___llmod@dividend,c
  1768  001352  502F               	movf	CRC_Verify@CRC_Value+1,w,c
  1769  001354  202B               	addwfc	??_CRC_Verify+2,w,c
  1770  001356  6E1B               	movwf	___llmod@dividend+1,c
  1771  001358  5030               	movf	CRC_Verify@CRC_Value+2,w,c
  1772  00135A  202C               	addwfc	??_CRC_Verify+3,w,c
  1773  00135C  6E1C               	movwf	___llmod@dividend+2,c
  1774  00135E  5031               	movf	CRC_Verify@CRC_Value+3,w,c
  1775  001360  202D               	addwfc	??_CRC_Verify+4,w,c
  1776  001362  6E1D               	movwf	___llmod@dividend+3,c
  1777  001364  0EFF               	movlw	255
  1778  001366  6E1E               	movwf	___llmod@divisor,c
  1779  001368  0EFF               	movlw	255
  1780  00136A  6E1F               	movwf	___llmod@divisor+1,c
  1781  00136C  0E00               	movlw	0
  1782  00136E  6E20               	movwf	___llmod@divisor+2,c
  1783  001370  0E00               	movlw	0
  1784  001372  6E21               	movwf	___llmod@divisor+3,c
  1785  001374  EC05  F00D         	call	___llmod	;wreg free
  1786  001378  C01A  F02E         	movff	?___llmod,CRC_Verify@CRC_Value
  1787  00137C  C01B  F02F         	movff	?___llmod+1,CRC_Verify@CRC_Value+1
  1788  001380  C01C  F030         	movff	?___llmod+2,CRC_Verify@CRC_Value+2
  1789  001384  C01D  F031         	movff	?___llmod+3,CRC_Verify@CRC_Value+3
  1790  001388  2A32               	incf	CRC_Verify@CRC_Byte,f,c
  1791  00138A  D7C7               	goto	l2729
  1792  00138C                     l2739:
  1793                           
  1794                           ;My_USART.c: 126: DataBuff[1] = CRC_Value/0xff;
  1795  00138C  EE20 F001          	lfsr	2,1
  1796  001390  5027               	movf	CRC_Verify@DataBuff,w,c
  1797  001392  26D9               	addwf	fsr2l,f,c
  1798  001394  5028               	movf	CRC_Verify@DataBuff+1,w,c
  1799  001396  22DA               	addwfc	fsr2h,f,c
  1800  001398  C02E  F01A         	movff	CRC_Verify@CRC_Value,___lldiv@dividend
  1801  00139C  C02F  F01B         	movff	CRC_Verify@CRC_Value+1,___lldiv@dividend+1
  1802  0013A0  C030  F01C         	movff	CRC_Verify@CRC_Value+2,___lldiv@dividend+2
  1803  0013A4  C031  F01D         	movff	CRC_Verify@CRC_Value+3,___lldiv@dividend+3
  1804  0013A8  0EFF               	movlw	255
  1805  0013AA  6E1E               	movwf	___lldiv@divisor,c
  1806  0013AC  0E00               	movlw	0
  1807  0013AE  6E1F               	movwf	___lldiv@divisor+1,c
  1808  0013B0  0E00               	movlw	0
  1809  0013B2  6E20               	movwf	___lldiv@divisor+2,c
  1810  0013B4  0E00               	movlw	0
  1811  0013B6  6E21               	movwf	___lldiv@divisor+3,c
  1812  0013B8  EC3F  F00C         	call	___lldiv	;wreg free
  1813  0013BC  501A               	movf	?___lldiv,w,c
  1814  0013BE  6EDF               	movwf	indf2,c
  1815                           
  1816                           ;My_USART.c: 127: DataBuff[0] = CRC_Value%0xff;
  1817  0013C0  C02E  F01A         	movff	CRC_Verify@CRC_Value,___llmod@dividend
  1818  0013C4  C02F  F01B         	movff	CRC_Verify@CRC_Value+1,___llmod@dividend+1
  1819  0013C8  C030  F01C         	movff	CRC_Verify@CRC_Value+2,___llmod@dividend+2
  1820  0013CC  C031  F01D         	movff	CRC_Verify@CRC_Value+3,___llmod@dividend+3
  1821  0013D0  0EFF               	movlw	255
  1822  0013D2  6E1E               	movwf	___llmod@divisor,c
  1823  0013D4  0E00               	movlw	0
  1824  0013D6  6E1F               	movwf	___llmod@divisor+1,c
  1825  0013D8  0E00               	movlw	0
  1826  0013DA  6E20               	movwf	___llmod@divisor+2,c
  1827  0013DC  0E00               	movlw	0
  1828  0013DE  6E21               	movwf	___llmod@divisor+3,c
  1829  0013E0  EC05  F00D         	call	___llmod	;wreg free
  1830  0013E4  501A               	movf	?___llmod,w,c
  1831  0013E6  C027  FFD9         	movff	CRC_Verify@DataBuff,fsr2l
  1832  0013EA  C028  FFDA         	movff	CRC_Verify@DataBuff+1,fsr2h
  1833  0013EE  6EDF               	movwf	indf2,c
  1834                           
  1835                           ;My_USART.c: 129: if( DataBuff[1] == 0xaa ) DataBuff[1] --;
  1836  0013F0  EE20 F001          	lfsr	2,1
  1837  0013F4  5027               	movf	CRC_Verify@DataBuff,w,c
  1838  0013F6  26D9               	addwf	fsr2l,f,c
  1839  0013F8  5028               	movf	CRC_Verify@DataBuff+1,w,c
  1840  0013FA  22DA               	addwfc	fsr2h,f,c
  1841  0013FC  0EAA               	movlw	170
  1842  0013FE  18DE               	xorwf	postinc2,w,c
  1843  001400  A4D8               	btfss	status,2,c
  1844  001402  D007               	goto	l170
  1845  001404  EE20 F001          	lfsr	2,1
  1846  001408  5027               	movf	CRC_Verify@DataBuff,w,c
  1847  00140A  26D9               	addwf	fsr2l,f,c
  1848  00140C  5028               	movf	CRC_Verify@DataBuff+1,w,c
  1849  00140E  22DA               	addwfc	fsr2h,f,c
  1850  001410  06DF               	decf	indf2,f,c
  1851  001412                     l170:
  1852                           
  1853                           ;My_USART.c: 130: if( DataBuff[0] == 0xaa ) DataBuff[0] --;
  1854  001412  C027  FFD9         	movff	CRC_Verify@DataBuff,fsr2l
  1855  001416  C028  FFDA         	movff	CRC_Verify@DataBuff+1,fsr2h
  1856  00141A  0EAA               	movlw	170
  1857  00141C  18DE               	xorwf	postinc2,w,c
  1858  00141E  A4D8               	btfss	status,2,c
  1859  001420  0012               	return	
  1860  001422  C027  FFD9         	movff	CRC_Verify@DataBuff,fsr2l
  1861  001426  C028  FFDA         	movff	CRC_Verify@DataBuff+1,fsr2h
  1862  00142A  06DF               	decf	indf2,f,c
  1863  00142C  0012               	return	
  1864  00142E  0012               	return		;funcret
  1865  001430                     __end_of_CRC_Verify:
  1866                           	opt stack 0
  1867                           tblptru	equ	0xFF8
  1868                           tblptrh	equ	0xFF7
  1869                           tblptrl	equ	0xFF6
  1870                           tablat	equ	0xFF5
  1871                           prodh	equ	0xFF4
  1872                           prodl	equ	0xFF3
  1873                           intcon	equ	0xFF2
  1874                           postinc0	equ	0xFEE
  1875                           wreg	equ	0xFE8
  1876                           indf2	equ	0xFDF
  1877                           postinc2	equ	0xFDE
  1878                           fsr2h	equ	0xFDA
  1879                           fsr2l	equ	0xFD9
  1880                           status	equ	0xFD8
  1881                           
  1882 ;; *************** function ___llmod *****************
  1883 ;; Defined at:
  1884 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  1885 ;; Parameters:    Size  Location     Type
  1886 ;;  dividend        4   25[COMRAM] unsigned long 
  1887 ;;  divisor         4   29[COMRAM] unsigned long 
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;  counter         1   33[COMRAM] unsigned char 
  1890 ;; Return value:  Size  Location     Type
  1891 ;;                  4   25[COMRAM] unsigned long 
  1892 ;; Registers used:
  1893 ;;		wreg, status,2, status,0
  1894 ;; Tracked objects:
  1895 ;;		On entry : 0/0
  1896 ;;		On exit  : 0/0
  1897 ;;		Unchanged: 0/0
  1898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1899 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1900 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1902 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1903 ;;Total ram usage:        9 bytes
  1904 ;; Hardware stack levels used:    1
  1905 ;; Hardware stack levels required when called:    3
  1906 ;; This function calls:
  1907 ;;		Nothing
  1908 ;; This function is called by:
  1909 ;;		_CRC_Verify
  1910 ;; This function uses a non-reentrant model
  1911 ;;
  1912                           
  1913                           	psect	text12
  1914  001A0A                     __ptext12:
  1915                           	opt stack 0
  1916  001A0A                     ___llmod:
  1917                           	opt stack 24
  1918                           
  1919                           ;incstack = 0
  1920  001A0A  501E               	movf	___llmod@divisor,w,c
  1921  001A0C  101F               	iorwf	___llmod@divisor+1,w,c
  1922  001A0E  1020               	iorwf	___llmod@divisor+2,w,c
  1923  001A10  1021               	iorwf	___llmod@divisor+3,w,c
  1924  001A12  B4D8               	btfsc	status,2,c
  1925  001A14  D029               	goto	l923
  1926  001A16  0E01               	movlw	1
  1927  001A18  6E22               	movwf	___llmod@counter,c
  1928  001A1A  D007               	goto	l2717
  1929  001A1C                     l2715:
  1930  001A1C  90D8               	bcf	status,0,c
  1931  001A1E  361E               	rlcf	___llmod@divisor,f,c
  1932  001A20  361F               	rlcf	___llmod@divisor+1,f,c
  1933  001A22  3620               	rlcf	___llmod@divisor+2,f,c
  1934  001A24  3621               	rlcf	___llmod@divisor+3,f,c
  1935  001A26  2A22               	incf	___llmod@counter,f,c
  1936  001A28  D000               	goto	l2717
  1937  001A2A                     l2717:
  1938  001A2A  BE21               	btfsc	___llmod@divisor+3,7,c
  1939  001A2C  D002               	goto	l2719
  1940  001A2E  D7F6               	goto	l2715
  1941  001A30  D000               	goto	l2719
  1942  001A32                     l2719:
  1943  001A32  501E               	movf	___llmod@divisor,w,c
  1944  001A34  5C1A               	subwf	___llmod@dividend,w,c
  1945  001A36  501F               	movf	___llmod@divisor+1,w,c
  1946  001A38  581B               	subwfb	___llmod@dividend+1,w,c
  1947  001A3A  5020               	movf	___llmod@divisor+2,w,c
  1948  001A3C  581C               	subwfb	___llmod@dividend+2,w,c
  1949  001A3E  5021               	movf	___llmod@divisor+3,w,c
  1950  001A40  581D               	subwfb	___llmod@dividend+3,w,c
  1951  001A42  A0D8               	btfss	status,0,c
  1952  001A44  D009               	goto	l2723
  1953  001A46  501E               	movf	___llmod@divisor,w,c
  1954  001A48  5E1A               	subwf	___llmod@dividend,f,c
  1955  001A4A  501F               	movf	___llmod@divisor+1,w,c
  1956  001A4C  5A1B               	subwfb	___llmod@dividend+1,f,c
  1957  001A4E  5020               	movf	___llmod@divisor+2,w,c
  1958  001A50  5A1C               	subwfb	___llmod@dividend+2,f,c
  1959  001A52  5021               	movf	___llmod@divisor+3,w,c
  1960  001A54  5A1D               	subwfb	___llmod@dividend+3,f,c
  1961  001A56  D000               	goto	l2723
  1962  001A58                     l2723:
  1963  001A58  90D8               	bcf	status,0,c
  1964  001A5A  3221               	rrcf	___llmod@divisor+3,f,c
  1965  001A5C  3220               	rrcf	___llmod@divisor+2,f,c
  1966  001A5E  321F               	rrcf	___llmod@divisor+1,f,c
  1967  001A60  321E               	rrcf	___llmod@divisor,f,c
  1968  001A62  2E22               	decfsz	___llmod@counter,f,c
  1969  001A64  D7E6               	goto	l2719
  1970  001A66  D000               	goto	l923
  1971  001A68                     l923:
  1972  001A68  C01A  F01A         	movff	___llmod@dividend,?___llmod
  1973  001A6C  C01B  F01B         	movff	___llmod@dividend+1,?___llmod+1
  1974  001A70  C01C  F01C         	movff	___llmod@dividend+2,?___llmod+2
  1975  001A74  C01D  F01D         	movff	___llmod@dividend+3,?___llmod+3
  1976  001A78  0012               	return		;funcret
  1977  001A7A                     __end_of___llmod:
  1978                           	opt stack 0
  1979                           tblptru	equ	0xFF8
  1980                           tblptrh	equ	0xFF7
  1981                           tblptrl	equ	0xFF6
  1982                           tablat	equ	0xFF5
  1983                           prodh	equ	0xFF4
  1984                           prodl	equ	0xFF3
  1985                           intcon	equ	0xFF2
  1986                           postinc0	equ	0xFEE
  1987                           wreg	equ	0xFE8
  1988                           indf2	equ	0xFDF
  1989                           postinc2	equ	0xFDE
  1990                           fsr2h	equ	0xFDA
  1991                           fsr2l	equ	0xFD9
  1992                           status	equ	0xFD8
  1993                           
  1994 ;; *************** function ___lldiv *****************
  1995 ;; Defined at:
  1996 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;  dividend        4   25[COMRAM] unsigned long 
  1999 ;;  divisor         4   29[COMRAM] unsigned long 
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;  quotient        4   33[COMRAM] unsigned long 
  2002 ;;  counter         1   37[COMRAM] unsigned char 
  2003 ;; Return value:  Size  Location     Type
  2004 ;;                  4   25[COMRAM] unsigned long 
  2005 ;; Registers used:
  2006 ;;		wreg, status,2, status,0
  2007 ;; Tracked objects:
  2008 ;;		On entry : 0/0
  2009 ;;		On exit  : 0/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2012 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2013 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2015 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2016 ;;Total ram usage:       13 bytes
  2017 ;; Hardware stack levels used:    1
  2018 ;; Hardware stack levels required when called:    3
  2019 ;; This function calls:
  2020 ;;		Nothing
  2021 ;; This function is called by:
  2022 ;;		_CRC_Verify
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           	psect	text13
  2027  00187E                     __ptext13:
  2028                           	opt stack 0
  2029  00187E                     ___lldiv:
  2030                           	opt stack 24
  2031                           
  2032                           ;incstack = 0
  2033  00187E  0E00               	movlw	0
  2034  001880  6E22               	movwf	___lldiv@quotient,c
  2035  001882  0E00               	movlw	0
  2036  001884  6E23               	movwf	___lldiv@quotient+1,c
  2037  001886  0E00               	movlw	0
  2038  001888  6E24               	movwf	___lldiv@quotient+2,c
  2039  00188A  0E00               	movlw	0
  2040  00188C  6E25               	movwf	___lldiv@quotient+3,c
  2041  00188E  501E               	movf	___lldiv@divisor,w,c
  2042  001890  101F               	iorwf	___lldiv@divisor+1,w,c
  2043  001892  1020               	iorwf	___lldiv@divisor+2,w,c
  2044  001894  1021               	iorwf	___lldiv@divisor+3,w,c
  2045  001896  B4D8               	btfsc	status,2,c
  2046  001898  D02F               	goto	l913
  2047  00189A  0E01               	movlw	1
  2048  00189C  6E26               	movwf	___lldiv@counter,c
  2049  00189E  D007               	goto	l2697
  2050  0018A0                     l2695:
  2051  0018A0  90D8               	bcf	status,0,c
  2052  0018A2  361E               	rlcf	___lldiv@divisor,f,c
  2053  0018A4  361F               	rlcf	___lldiv@divisor+1,f,c
  2054  0018A6  3620               	rlcf	___lldiv@divisor+2,f,c
  2055  0018A8  3621               	rlcf	___lldiv@divisor+3,f,c
  2056  0018AA  2A26               	incf	___lldiv@counter,f,c
  2057  0018AC  D000               	goto	l2697
  2058  0018AE                     l2697:
  2059  0018AE  BE21               	btfsc	___lldiv@divisor+3,7,c
  2060  0018B0  D002               	goto	l2699
  2061  0018B2  D7F6               	goto	l2695
  2062  0018B4  D000               	goto	l2699
  2063  0018B6                     l2699:
  2064  0018B6  90D8               	bcf	status,0,c
  2065  0018B8  3622               	rlcf	___lldiv@quotient,f,c
  2066  0018BA  3623               	rlcf	___lldiv@quotient+1,f,c
  2067  0018BC  3624               	rlcf	___lldiv@quotient+2,f,c
  2068  0018BE  3625               	rlcf	___lldiv@quotient+3,f,c
  2069  0018C0  501E               	movf	___lldiv@divisor,w,c
  2070  0018C2  5C1A               	subwf	___lldiv@dividend,w,c
  2071  0018C4  501F               	movf	___lldiv@divisor+1,w,c
  2072  0018C6  581B               	subwfb	___lldiv@dividend+1,w,c
  2073  0018C8  5020               	movf	___lldiv@divisor+2,w,c
  2074  0018CA  581C               	subwfb	___lldiv@dividend+2,w,c
  2075  0018CC  5021               	movf	___lldiv@divisor+3,w,c
  2076  0018CE  581D               	subwfb	___lldiv@dividend+3,w,c
  2077  0018D0  A0D8               	btfss	status,0,c
  2078  0018D2  D00A               	goto	l2707
  2079  0018D4  501E               	movf	___lldiv@divisor,w,c
  2080  0018D6  5E1A               	subwf	___lldiv@dividend,f,c
  2081  0018D8  501F               	movf	___lldiv@divisor+1,w,c
  2082  0018DA  5A1B               	subwfb	___lldiv@dividend+1,f,c
  2083  0018DC  5020               	movf	___lldiv@divisor+2,w,c
  2084  0018DE  5A1C               	subwfb	___lldiv@dividend+2,f,c
  2085  0018E0  5021               	movf	___lldiv@divisor+3,w,c
  2086  0018E2  5A1D               	subwfb	___lldiv@dividend+3,f,c
  2087  0018E4  8022               	bsf	___lldiv@quotient,0,c
  2088  0018E6  D000               	goto	l2707
  2089  0018E8                     l2707:
  2090  0018E8  90D8               	bcf	status,0,c
  2091  0018EA  3221               	rrcf	___lldiv@divisor+3,f,c
  2092  0018EC  3220               	rrcf	___lldiv@divisor+2,f,c
  2093  0018EE  321F               	rrcf	___lldiv@divisor+1,f,c
  2094  0018F0  321E               	rrcf	___lldiv@divisor,f,c
  2095  0018F2  2E26               	decfsz	___lldiv@counter,f,c
  2096  0018F4  D7E0               	goto	l2699
  2097  0018F6  D000               	goto	l913
  2098  0018F8                     l913:
  2099  0018F8  C022  F01A         	movff	___lldiv@quotient,?___lldiv
  2100  0018FC  C023  F01B         	movff	___lldiv@quotient+1,?___lldiv+1
  2101  001900  C024  F01C         	movff	___lldiv@quotient+2,?___lldiv+2
  2102  001904  C025  F01D         	movff	___lldiv@quotient+3,?___lldiv+3
  2103  001908  0012               	return		;funcret
  2104  00190A                     __end_of___lldiv:
  2105                           	opt stack 0
  2106                           tblptru	equ	0xFF8
  2107                           tblptrh	equ	0xFF7
  2108                           tblptrl	equ	0xFF6
  2109                           tablat	equ	0xFF5
  2110                           prodh	equ	0xFF4
  2111                           prodl	equ	0xFF3
  2112                           intcon	equ	0xFF2
  2113                           postinc0	equ	0xFEE
  2114                           wreg	equ	0xFE8
  2115                           indf2	equ	0xFDF
  2116                           postinc2	equ	0xFDE
  2117                           fsr2h	equ	0xFDA
  2118                           fsr2l	equ	0xFD9
  2119                           status	equ	0xFD8
  2120                           
  2121 ;; *************** function _Get_ADC6 *****************
  2122 ;; Defined at:
  2123 ;;		line 67 in file "_01_USER/My_ADC.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;		None
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;		None
  2128 ;; Return value:  Size  Location     Type
  2129 ;;		None               void
  2130 ;; Registers used:
  2131 ;;		wreg, status,2, status,0, cstack
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;Total ram usage:        0 bytes
  2142 ;; Hardware stack levels used:    1
  2143 ;; Hardware stack levels required when called:    5
  2144 ;; This function calls:
  2145 ;;		_BusyADC
  2146 ;;		_ConvertADC
  2147 ;;		_ReadADC
  2148 ;;		___ftdiv
  2149 ;;		___ftmul
  2150 ;;		___lwtoft
  2151 ;; This function is called by:
  2152 ;;		_Run
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           	psect	text14
  2157  001AEA                     __ptext14:
  2158                           	opt stack 0
  2159  001AEA                     _Get_ADC6:
  2160                           	opt stack 24
  2161                           
  2162                           ;My_ADC.c: 69: ConvertADC();
  2163                           
  2164                           ;incstack = 0
  2165  001AEA  EC1A  F010         	call	_ConvertADC	;wreg free
  2166                           
  2167                           ;My_ADC.c: 70: while(BusyADC());
  2168  001AEE  D000               	goto	l2981
  2169  001AF0                     l2981:
  2170  001AF0  EC08  F010         	call	_BusyADC	;wreg free
  2171  001AF4  0900               	iorlw	0
  2172  001AF6  A4D8               	btfss	status,2,c
  2173  001AF8  D7FB               	goto	l2981
  2174                           
  2175                           ;My_ADC.c: 71: ADC6_Buff =(unsigned int)ReadADC()*4.096f/4095.0f;
  2176  001AFA  0E12               	movlw	18
  2177  001AFC  6E28               	movwf	___ftmul@f2,c
  2178  001AFE  0E83               	movlw	131
  2179  001B00  6E29               	movwf	___ftmul@f2+1,c
  2180  001B02  0E40               	movlw	64
  2181  001B04  6E2A               	movwf	___ftmul@f2+2,c
  2182  001B06  EC00  F010         	call	_ReadADC	;wreg free
  2183  001B0A  C01A  F022         	movff	?_ReadADC,___lwtoft@c
  2184  001B0E  C01B  F023         	movff	?_ReadADC+1,___lwtoft@c+1
  2185  001B12  EC6E  F00F         	call	___lwtoft	;wreg free
  2186  001B16  C022  F025         	movff	?___lwtoft,___ftmul@f1
  2187  001B1A  C023  F026         	movff	?___lwtoft+1,___ftmul@f1+1
  2188  001B1E  C024  F027         	movff	?___lwtoft+2,___ftmul@f1+2
  2189  001B22  EC9B  F00A         	call	___ftmul	;wreg free
  2190  001B26  C025  F0A2         	movff	?___ftmul,___ftdiv@f1
  2191  001B2A  C026  F0A3         	movff	?___ftmul+1,___ftdiv@f1+1
  2192  001B2E  C027  F0A4         	movff	?___ftmul+2,___ftdiv@f1+2
  2193  001B32  0EF0               	movlw	240
  2194  001B34  0100               	movlb	0	; () banked
  2195  001B36  6FA5               	movwf	___ftdiv@f2& (0+255),b
  2196  001B38  0E7F               	movlw	127
  2197  001B3A  0100               	movlb	0	; () banked
  2198  001B3C  6FA6               	movwf	(___ftdiv@f2+1)& (0+255),b
  2199  001B3E  0E45               	movlw	69
  2200  001B40  0100               	movlb	0	; () banked
  2201  001B42  6FA7               	movwf	(___ftdiv@f2+2)& (0+255),b
  2202  001B44  ECDA  F008         	call	___ftdiv	;wreg free
  2203  001B48  C0A2  F03C         	movff	?___ftdiv,_ADC6_Buff	;volatile
  2204  001B4C  C0A3  F03D         	movff	?___ftdiv+1,_ADC6_Buff+1	;volatile
  2205  001B50  C0A4  F03E         	movff	?___ftdiv+2,_ADC6_Buff+2	;volatile
  2206  001B54  0012               	return		;funcret
  2207  001B56                     __end_of_Get_ADC6:
  2208                           	opt stack 0
  2209                           tblptru	equ	0xFF8
  2210                           tblptrh	equ	0xFF7
  2211                           tblptrl	equ	0xFF6
  2212                           tablat	equ	0xFF5
  2213                           prodh	equ	0xFF4
  2214                           prodl	equ	0xFF3
  2215                           intcon	equ	0xFF2
  2216                           postinc0	equ	0xFEE
  2217                           wreg	equ	0xFE8
  2218                           indf2	equ	0xFDF
  2219                           postinc2	equ	0xFDE
  2220                           fsr2h	equ	0xFDA
  2221                           fsr2l	equ	0xFD9
  2222                           status	equ	0xFD8
  2223                           
  2224 ;; *************** function ___lwtoft *****************
  2225 ;; Defined at:
  2226 ;;		line 28 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  2227 ;; Parameters:    Size  Location     Type
  2228 ;;  c               2   33[COMRAM] unsigned int 
  2229 ;; Auto vars:     Size  Location     Type
  2230 ;;		None
  2231 ;; Return value:  Size  Location     Type
  2232 ;;                  3   33[COMRAM] float 
  2233 ;; Registers used:
  2234 ;;		wreg, status,2, status,0, cstack
  2235 ;; Tracked objects:
  2236 ;;		On entry : 0/0
  2237 ;;		On exit  : 0/0
  2238 ;;		Unchanged: 0/0
  2239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2240 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2243 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2244 ;;Total ram usage:        3 bytes
  2245 ;; Hardware stack levels used:    1
  2246 ;; Hardware stack levels required when called:    4
  2247 ;; This function calls:
  2248 ;;		___ftpack
  2249 ;; This function is called by:
  2250 ;;		_Get_ADC6
  2251 ;; This function uses a non-reentrant model
  2252 ;;
  2253                           
  2254                           	psect	text15
  2255  001EDC                     __ptext15:
  2256                           	opt stack 0
  2257  001EDC                     ___lwtoft:
  2258                           	opt stack 24
  2259                           
  2260                           ;incstack = 0
  2261  001EDC  C022  F01A         	movff	___lwtoft@c,___ftpack@arg
  2262  001EE0  C023  F01B         	movff	___lwtoft@c+1,___ftpack@arg+1
  2263  001EE4  6A1C               	clrf	___ftpack@arg+2,c
  2264  001EE6  0E8E               	movlw	142
  2265  001EE8  6E1D               	movwf	___ftpack@exp,c
  2266  001EEA  0E00               	movlw	0
  2267  001EEC  6E1E               	movwf	___ftpack@sign,c
  2268  001EEE  EC95  F00B         	call	___ftpack	;wreg free
  2269  001EF2  C01A  F022         	movff	?___ftpack,?___lwtoft
  2270  001EF6  C01B  F023         	movff	?___ftpack+1,?___lwtoft+1
  2271  001EFA  C01C  F024         	movff	?___ftpack+2,?___lwtoft+2
  2272  001EFE  0012               	return	
  2273  001F00  0012               	return		;funcret
  2274  001F02                     __end_of___lwtoft:
  2275                           	opt stack 0
  2276                           tblptru	equ	0xFF8
  2277                           tblptrh	equ	0xFF7
  2278                           tblptrl	equ	0xFF6
  2279                           tablat	equ	0xFF5
  2280                           prodh	equ	0xFF4
  2281                           prodl	equ	0xFF3
  2282                           intcon	equ	0xFF2
  2283                           postinc0	equ	0xFEE
  2284                           wreg	equ	0xFE8
  2285                           indf2	equ	0xFDF
  2286                           postinc2	equ	0xFDE
  2287                           fsr2h	equ	0xFDA
  2288                           fsr2l	equ	0xFD9
  2289                           status	equ	0xFD8
  2290                           
  2291 ;; *************** function ___ftmul *****************
  2292 ;; Defined at:
  2293 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;  f1              3   36[COMRAM] float 
  2296 ;;  f2              3   39[COMRAM] float 
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;  f3_as_produc    3   46[COMRAM] unsigned um
  2299 ;;  sign            1   50[COMRAM] unsigned char 
  2300 ;;  cntr            1   49[COMRAM] unsigned char 
  2301 ;;  exp             1   45[COMRAM] unsigned char 
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  3   36[COMRAM] float 
  2304 ;; Registers used:
  2305 ;;		wreg, status,2, status,0, cstack
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2311 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2312 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2313 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2314 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2315 ;;Total ram usage:       15 bytes
  2316 ;; Hardware stack levels used:    1
  2317 ;; Hardware stack levels required when called:    4
  2318 ;; This function calls:
  2319 ;;		___ftpack
  2320 ;; This function is called by:
  2321 ;;		_Get_ADC6
  2322 ;;		_TM1640_Show_Decimal
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326                           	psect	text16
  2327  001536                     __ptext16:
  2328                           	opt stack 0
  2329  001536                     ___ftmul:
  2330                           	opt stack 24
  2331                           
  2332                           ;incstack = 0
  2333  001536  C027  F02B         	movff	___ftmul@f1+2,??___ftmul
  2334  00153A  6A2C               	clrf	(??___ftmul+1)& (0+255),c
  2335  00153C  6A2D               	clrf	(??___ftmul+2)& (0+255),c
  2336  00153E  3426               	rlcf	___ftmul@f1+1,w,c
  2337  001540  362B               	rlcf	??___ftmul& (0+255),f,c
  2338  001542  E301               	bnc	u2721
  2339  001544  802C               	bsf	(??___ftmul+1)& (0+255),0,c
  2340  001546                     u2721:
  2341  001546  502B               	movf	??___ftmul,w,c
  2342  001548  6E2E               	movwf	___ftmul@exp,c
  2343  00154A  502E               	movf	___ftmul@exp,w,c
  2344  00154C  A4D8               	btfss	status,2,c
  2345  00154E  D007               	goto	l2813
  2346  001550  0E00               	movlw	0
  2347  001552  6E25               	movwf	?___ftmul,c
  2348  001554  0E00               	movlw	0
  2349  001556  6E26               	movwf	?___ftmul+1,c
  2350  001558  0E00               	movlw	0
  2351  00155A  6E27               	movwf	?___ftmul+2,c
  2352  00155C  0012               	return	
  2353  00155E                     l2813:
  2354  00155E  C02A  F02B         	movff	___ftmul@f2+2,??___ftmul
  2355  001562  6A2C               	clrf	(??___ftmul+1)& (0+255),c
  2356  001564  6A2D               	clrf	(??___ftmul+2)& (0+255),c
  2357  001566  3429               	rlcf	___ftmul@f2+1,w,c
  2358  001568  362B               	rlcf	??___ftmul& (0+255),f,c
  2359  00156A  E301               	bnc	u2741
  2360  00156C  802C               	bsf	(??___ftmul+1)& (0+255),0,c
  2361  00156E                     u2741:
  2362  00156E  502B               	movf	??___ftmul,w,c
  2363  001570  6E33               	movwf	___ftmul@sign,c
  2364  001572  5033               	movf	___ftmul@sign,w,c
  2365  001574  A4D8               	btfss	status,2,c
  2366  001576  D007               	goto	l2819
  2367  001578  0E00               	movlw	0
  2368  00157A  6E25               	movwf	?___ftmul,c
  2369  00157C  0E00               	movlw	0
  2370  00157E  6E26               	movwf	?___ftmul+1,c
  2371  001580  0E00               	movlw	0
  2372  001582  6E27               	movwf	?___ftmul+2,c
  2373  001584  0012               	return	
  2374  001586                     l2819:
  2375  001586  5033               	movf	___ftmul@sign,w,c
  2376  001588  0F7B               	addlw	123
  2377  00158A  262E               	addwf	___ftmul@exp,f,c
  2378  00158C  C027  F033         	movff	___ftmul@f1+2,___ftmul@sign
  2379  001590  502A               	movf	___ftmul@f2+2,w,c
  2380  001592  1A33               	xorwf	___ftmul@sign,f,c
  2381  001594  0E80               	movlw	128
  2382  001596  1633               	andwf	___ftmul@sign,f,c
  2383  001598  8E26               	bsf	___ftmul@f1+1,7,c
  2384  00159A  8E29               	bsf	___ftmul@f2+1,7,c
  2385  00159C  0EFF               	movlw	255
  2386  00159E  1628               	andwf	___ftmul@f2,f,c
  2387  0015A0  0EFF               	movlw	255
  2388  0015A2  1629               	andwf	___ftmul@f2+1,f,c
  2389  0015A4  0E00               	movlw	0
  2390  0015A6  162A               	andwf	___ftmul@f2+2,f,c
  2391  0015A8  0E00               	movlw	0
  2392  0015AA  6E2F               	movwf	___ftmul@f3_as_product,c
  2393  0015AC  0E00               	movlw	0
  2394  0015AE  6E30               	movwf	___ftmul@f3_as_product+1,c
  2395  0015B0  0E00               	movlw	0
  2396  0015B2  6E31               	movwf	___ftmul@f3_as_product+2,c
  2397  0015B4  0E07               	movlw	7
  2398  0015B6  6E32               	movwf	___ftmul@cntr,c
  2399  0015B8  D000               	goto	l2833
  2400  0015BA                     l2833:
  2401  0015BA  A025               	btfss	___ftmul@f1,0,c
  2402  0015BC  D007               	goto	l2837
  2403  0015BE  5028               	movf	___ftmul@f2,w,c
  2404  0015C0  262F               	addwf	___ftmul@f3_as_product,f,c
  2405  0015C2  5029               	movf	___ftmul@f2+1,w,c
  2406  0015C4  2230               	addwfc	___ftmul@f3_as_product+1,f,c
  2407  0015C6  502A               	movf	___ftmul@f2+2,w,c
  2408  0015C8  2231               	addwfc	___ftmul@f3_as_product+2,f,c
  2409  0015CA  D000               	goto	l2837
  2410  0015CC                     l2837:
  2411  0015CC  90D8               	bcf	status,0,c
  2412  0015CE  3227               	rrcf	___ftmul@f1+2,f,c
  2413  0015D0  3226               	rrcf	___ftmul@f1+1,f,c
  2414  0015D2  3225               	rrcf	___ftmul@f1,f,c
  2415  0015D4  90D8               	bcf	status,0,c
  2416  0015D6  3628               	rlcf	___ftmul@f2,f,c
  2417  0015D8  3629               	rlcf	___ftmul@f2+1,f,c
  2418  0015DA  362A               	rlcf	___ftmul@f2+2,f,c
  2419  0015DC  2E32               	decfsz	___ftmul@cntr,f,c
  2420  0015DE  D7ED               	goto	l2833
  2421  0015E0  D000               	goto	l2841
  2422  0015E2                     l2841:
  2423  0015E2  0E09               	movlw	9
  2424  0015E4  6E32               	movwf	___ftmul@cntr,c
  2425  0015E6  D000               	goto	l2843
  2426  0015E8                     l2843:
  2427  0015E8  A025               	btfss	___ftmul@f1,0,c
  2428  0015EA  D007               	goto	l2847
  2429  0015EC  5028               	movf	___ftmul@f2,w,c
  2430  0015EE  262F               	addwf	___ftmul@f3_as_product,f,c
  2431  0015F0  5029               	movf	___ftmul@f2+1,w,c
  2432  0015F2  2230               	addwfc	___ftmul@f3_as_product+1,f,c
  2433  0015F4  502A               	movf	___ftmul@f2+2,w,c
  2434  0015F6  2231               	addwfc	___ftmul@f3_as_product+2,f,c
  2435  0015F8  D000               	goto	l2847
  2436  0015FA                     l2847:
  2437  0015FA  90D8               	bcf	status,0,c
  2438  0015FC  3227               	rrcf	___ftmul@f1+2,f,c
  2439  0015FE  3226               	rrcf	___ftmul@f1+1,f,c
  2440  001600  3225               	rrcf	___ftmul@f1,f,c
  2441  001602  90D8               	bcf	status,0,c
  2442  001604  3231               	rrcf	___ftmul@f3_as_product+2,f,c
  2443  001606  3230               	rrcf	___ftmul@f3_as_product+1,f,c
  2444  001608  322F               	rrcf	___ftmul@f3_as_product,f,c
  2445  00160A  2E32               	decfsz	___ftmul@cntr,f,c
  2446  00160C  D7ED               	goto	l2843
  2447  00160E  D000               	goto	l2851
  2448  001610                     l2851:
  2449  001610  C02F  F01A         	movff	___ftmul@f3_as_product,___ftpack@arg
  2450  001614  C030  F01B         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2451  001618  C031  F01C         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2452  00161C  C02E  F01D         	movff	___ftmul@exp,___ftpack@exp
  2453  001620  C033  F01E         	movff	___ftmul@sign,___ftpack@sign
  2454  001624  EC95  F00B         	call	___ftpack	;wreg free
  2455  001628  C01A  F025         	movff	?___ftpack,?___ftmul
  2456  00162C  C01B  F026         	movff	?___ftpack+1,?___ftmul+1
  2457  001630  C01C  F027         	movff	?___ftpack+2,?___ftmul+2
  2458  001634  0012               	return	
  2459  001636  0012               	return		;funcret
  2460  001638                     __end_of___ftmul:
  2461                           	opt stack 0
  2462                           tblptru	equ	0xFF8
  2463                           tblptrh	equ	0xFF7
  2464                           tblptrl	equ	0xFF6
  2465                           tablat	equ	0xFF5
  2466                           prodh	equ	0xFF4
  2467                           prodl	equ	0xFF3
  2468                           intcon	equ	0xFF2
  2469                           postinc0	equ	0xFEE
  2470                           wreg	equ	0xFE8
  2471                           indf2	equ	0xFDF
  2472                           postinc2	equ	0xFDE
  2473                           fsr2h	equ	0xFDA
  2474                           fsr2l	equ	0xFD9
  2475                           status	equ	0xFD8
  2476                           
  2477 ;; *************** function ___ftdiv *****************
  2478 ;; Defined at:
  2479 ;;		line 54 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;  f1              3    0[BANK0 ] float 
  2482 ;;  f2              3    3[BANK0 ] float 
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;  f3              3   10[BANK0 ] float 
  2485 ;;  sign            1   14[BANK0 ] unsigned char 
  2486 ;;  exp             1   13[BANK0 ] unsigned char 
  2487 ;;  cntr            1    9[BANK0 ] unsigned char 
  2488 ;; Return value:  Size  Location     Type
  2489 ;;                  3    0[BANK0 ] float 
  2490 ;; Registers used:
  2491 ;;		wreg, status,2, status,0, cstack
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2497 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2498 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2499 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2500 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2501 ;;Total ram usage:       15 bytes
  2502 ;; Hardware stack levels used:    1
  2503 ;; Hardware stack levels required when called:    4
  2504 ;; This function calls:
  2505 ;;		___ftpack
  2506 ;; This function is called by:
  2507 ;;		_Get_ADC6
  2508 ;;		_TM1640_Show_Decimal
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512                           	psect	text17
  2513  0011B4                     __ptext17:
  2514                           	opt stack 0
  2515  0011B4                     ___ftdiv:
  2516                           	opt stack 24
  2517                           
  2518                           ;incstack = 0
  2519  0011B4  C0A4  F0A8         	movff	___ftdiv@f1+2,??___ftdiv
  2520  0011B8  0100               	movlb	0	; () banked
  2521  0011BA  6BA9               	clrf	(??___ftdiv+1)& (0+255),b
  2522  0011BC  6BAA               	clrf	(??___ftdiv+2)& (0+255),b
  2523  0011BE  0100               	movlb	0	; () banked
  2524  0011C0  35A3               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  2525  0011C2  0100               	movlb	0	; () banked
  2526  0011C4  37A8               	rlcf	??___ftdiv& (0+255),f,b
  2527  0011C6  E301               	bnc	u2671
  2528  0011C8  81A9               	bsf	(??___ftdiv+1)& (0+255),0,b
  2529  0011CA                     u2671:
  2530  0011CA  0100               	movlb	0	; () banked
  2531  0011CC  51A8               	movf	??___ftdiv& (0+255),w,b
  2532  0011CE  0100               	movlb	0	; () banked
  2533  0011D0  6FAF               	movwf	___ftdiv@exp& (0+255),b
  2534  0011D2  0100               	movlb	0	; () banked
  2535  0011D4  51AF               	movf	___ftdiv@exp& (0+255),w,b
  2536  0011D6  A4D8               	btfss	status,2,c
  2537  0011D8  D00A               	goto	l2767
  2538                           
  2539                           ; BSR set to: 0
  2540  0011DA  0E00               	movlw	0
  2541  0011DC  0100               	movlb	0	; () banked
  2542  0011DE  6FA2               	movwf	?___ftdiv& (0+255),b
  2543  0011E0  0E00               	movlw	0
  2544  0011E2  0100               	movlb	0	; () banked
  2545  0011E4  6FA3               	movwf	(?___ftdiv+1)& (0+255),b
  2546  0011E6  0E00               	movlw	0
  2547  0011E8  0100               	movlb	0	; () banked
  2548  0011EA  6FA4               	movwf	(?___ftdiv+2)& (0+255),b
  2549                           
  2550                           ; BSR set to: 0
  2551  0011EC  0012               	return	
  2552  0011EE                     l2767:
  2553                           
  2554                           ; BSR set to: 0
  2555  0011EE  C0A7  F0A8         	movff	___ftdiv@f2+2,??___ftdiv
  2556  0011F2  0100               	movlb	0	; () banked
  2557  0011F4  6BA9               	clrf	(??___ftdiv+1)& (0+255),b
  2558  0011F6  6BAA               	clrf	(??___ftdiv+2)& (0+255),b
  2559  0011F8  0100               	movlb	0	; () banked
  2560  0011FA  35A6               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  2561  0011FC  0100               	movlb	0	; () banked
  2562  0011FE  37A8               	rlcf	??___ftdiv& (0+255),f,b
  2563  001200  E301               	bnc	u2691
  2564  001202  81A9               	bsf	(??___ftdiv+1)& (0+255),0,b
  2565  001204                     u2691:
  2566  001204  0100               	movlb	0	; () banked
  2567  001206  51A8               	movf	??___ftdiv& (0+255),w,b
  2568  001208  0100               	movlb	0	; () banked
  2569  00120A  6FB0               	movwf	___ftdiv@sign& (0+255),b
  2570  00120C  0100               	movlb	0	; () banked
  2571  00120E  51B0               	movf	___ftdiv@sign& (0+255),w,b
  2572  001210  A4D8               	btfss	status,2,c
  2573  001212  D00A               	goto	l2773
  2574                           
  2575                           ; BSR set to: 0
  2576  001214  0E00               	movlw	0
  2577  001216  0100               	movlb	0	; () banked
  2578  001218  6FA2               	movwf	?___ftdiv& (0+255),b
  2579  00121A  0E00               	movlw	0
  2580  00121C  0100               	movlb	0	; () banked
  2581  00121E  6FA3               	movwf	(?___ftdiv+1)& (0+255),b
  2582  001220  0E00               	movlw	0
  2583  001222  0100               	movlb	0	; () banked
  2584  001224  6FA4               	movwf	(?___ftdiv+2)& (0+255),b
  2585                           
  2586                           ; BSR set to: 0
  2587  001226  0012               	return	
  2588  001228                     l2773:
  2589                           
  2590                           ; BSR set to: 0
  2591  001228  0E00               	movlw	0
  2592  00122A  0100               	movlb	0	; () banked
  2593  00122C  6FAC               	movwf	___ftdiv@f3& (0+255),b
  2594  00122E  0E00               	movlw	0
  2595  001230  0100               	movlb	0	; () banked
  2596  001232  6FAD               	movwf	(___ftdiv@f3+1)& (0+255),b
  2597  001234  0E00               	movlw	0
  2598  001236  0100               	movlb	0	; () banked
  2599  001238  6FAE               	movwf	(___ftdiv@f3+2)& (0+255),b
  2600                           
  2601                           ; BSR set to: 0
  2602  00123A  0100               	movlb	0	; () banked
  2603  00123C  51B0               	movf	___ftdiv@sign& (0+255),w,b
  2604  00123E  0F89               	addlw	137
  2605  001240  0100               	movlb	0	; () banked
  2606  001242  5FAF               	subwf	___ftdiv@exp& (0+255),f,b
  2607                           
  2608                           ; BSR set to: 0
  2609  001244  C0A4  F0B0         	movff	___ftdiv@f1+2,___ftdiv@sign
  2610                           
  2611                           ; BSR set to: 0
  2612  001248  0100               	movlb	0	; () banked
  2613  00124A  51A7               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2614  00124C  0100               	movlb	0	; () banked
  2615  00124E  1BB0               	xorwf	___ftdiv@sign& (0+255),f,b
  2616                           
  2617                           ; BSR set to: 0
  2618  001250  0E80               	movlw	128
  2619  001252  0100               	movlb	0	; () banked
  2620  001254  17B0               	andwf	___ftdiv@sign& (0+255),f,b
  2621                           
  2622                           ; BSR set to: 0
  2623  001256  0100               	movlb	0	; () banked
  2624  001258  8FA3               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  2625                           
  2626                           ; BSR set to: 0
  2627  00125A  0EFF               	movlw	255
  2628  00125C  0100               	movlb	0	; () banked
  2629  00125E  17A2               	andwf	___ftdiv@f1& (0+255),f,b
  2630  001260  0EFF               	movlw	255
  2631  001262  0100               	movlb	0	; () banked
  2632  001264  17A3               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  2633  001266  0E00               	movlw	0
  2634  001268  0100               	movlb	0	; () banked
  2635  00126A  17A4               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  2636                           
  2637                           ; BSR set to: 0
  2638  00126C  0100               	movlb	0	; () banked
  2639  00126E  8FA6               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  2640                           
  2641                           ; BSR set to: 0
  2642  001270  0EFF               	movlw	255
  2643  001272  0100               	movlb	0	; () banked
  2644  001274  17A5               	andwf	___ftdiv@f2& (0+255),f,b
  2645  001276  0EFF               	movlw	255
  2646  001278  0100               	movlb	0	; () banked
  2647  00127A  17A6               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  2648  00127C  0E00               	movlw	0
  2649  00127E  0100               	movlb	0	; () banked
  2650  001280  17A7               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  2651                           
  2652                           ; BSR set to: 0
  2653  001282  0E18               	movlw	24
  2654  001284  0100               	movlb	0	; () banked
  2655  001286  6FAB               	movwf	___ftdiv@cntr& (0+255),b
  2656  001288  D000               	goto	l2793
  2657  00128A                     l2793:
  2658                           
  2659                           ; BSR set to: 0
  2660  00128A  0100               	movlb	0	; () banked
  2661  00128C  90D8               	bcf	status,0,c
  2662  00128E  37AC               	rlcf	___ftdiv@f3& (0+255),f,b
  2663  001290  37AD               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  2664  001292  37AE               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  2665                           
  2666                           ; BSR set to: 0
  2667  001294  0100               	movlb	0	; () banked
  2668  001296  51A5               	movf	___ftdiv@f2& (0+255),w,b
  2669  001298  0100               	movlb	0	; () banked
  2670  00129A  5DA2               	subwf	___ftdiv@f1& (0+255),w,b
  2671  00129C  0100               	movlb	0	; () banked
  2672  00129E  51A6               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2673  0012A0  0100               	movlb	0	; () banked
  2674  0012A2  59A3               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  2675  0012A4  0100               	movlb	0	; () banked
  2676  0012A6  51A7               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2677  0012A8  0100               	movlb	0	; () banked
  2678  0012AA  59A4               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  2679  0012AC  A0D8               	btfss	status,0,c
  2680  0012AE  D00E               	goto	l841
  2681                           
  2682                           ; BSR set to: 0
  2683  0012B0  0100               	movlb	0	; () banked
  2684  0012B2  51A5               	movf	___ftdiv@f2& (0+255),w,b
  2685  0012B4  0100               	movlb	0	; () banked
  2686  0012B6  5FA2               	subwf	___ftdiv@f1& (0+255),f,b
  2687  0012B8  0100               	movlb	0	; () banked
  2688  0012BA  51A6               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2689  0012BC  0100               	movlb	0	; () banked
  2690  0012BE  5BA3               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  2691  0012C0  0100               	movlb	0	; () banked
  2692  0012C2  51A7               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2693  0012C4  0100               	movlb	0	; () banked
  2694  0012C6  5BA4               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  2695                           
  2696                           ; BSR set to: 0
  2697  0012C8  0100               	movlb	0	; () banked
  2698  0012CA  81AC               	bsf	___ftdiv@f3& (0+255),0,b
  2699  0012CC                     l841:
  2700                           
  2701                           ; BSR set to: 0
  2702  0012CC  0100               	movlb	0	; () banked
  2703  0012CE  90D8               	bcf	status,0,c
  2704  0012D0  37A2               	rlcf	___ftdiv@f1& (0+255),f,b
  2705  0012D2  37A3               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  2706  0012D4  37A4               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  2707                           
  2708                           ; BSR set to: 0
  2709  0012D6  0100               	movlb	0	; () banked
  2710  0012D8  2FAB               	decfsz	___ftdiv@cntr& (0+255),f,b
  2711  0012DA  D7D7               	goto	l2793
  2712  0012DC  D000               	goto	l2803
  2713  0012DE                     l2803:
  2714                           
  2715                           ; BSR set to: 0
  2716  0012DE  C0AC  F01A         	movff	___ftdiv@f3,___ftpack@arg
  2717  0012E2  C0AD  F01B         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2718  0012E6  C0AE  F01C         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2719  0012EA  C0AF  F01D         	movff	___ftdiv@exp,___ftpack@exp
  2720  0012EE  C0B0  F01E         	movff	___ftdiv@sign,___ftpack@sign
  2721  0012F2  EC95  F00B         	call	___ftpack	;wreg free
  2722  0012F6  C01A  F0A2         	movff	?___ftpack,?___ftdiv
  2723  0012FA  C01B  F0A3         	movff	?___ftpack+1,?___ftdiv+1
  2724  0012FE  C01C  F0A4         	movff	?___ftpack+2,?___ftdiv+2
  2725  001302  0012               	return	
  2726  001304  0012               	return		;funcret
  2727  001306                     __end_of___ftdiv:
  2728                           	opt stack 0
  2729                           tblptru	equ	0xFF8
  2730                           tblptrh	equ	0xFF7
  2731                           tblptrl	equ	0xFF6
  2732                           tablat	equ	0xFF5
  2733                           prodh	equ	0xFF4
  2734                           prodl	equ	0xFF3
  2735                           intcon	equ	0xFF2
  2736                           postinc0	equ	0xFEE
  2737                           wreg	equ	0xFE8
  2738                           indf2	equ	0xFDF
  2739                           postinc2	equ	0xFDE
  2740                           fsr2h	equ	0xFDA
  2741                           fsr2l	equ	0xFD9
  2742                           status	equ	0xFD8
  2743                           
  2744 ;; *************** function ___ftpack *****************
  2745 ;; Defined at:
  2746 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;  arg             3   25[COMRAM] unsigned um
  2749 ;;  exp             1   28[COMRAM] unsigned char 
  2750 ;;  sign            1   29[COMRAM] unsigned char 
  2751 ;; Auto vars:     Size  Location     Type
  2752 ;;		None
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  3   25[COMRAM] float 
  2755 ;; Registers used:
  2756 ;;		wreg, status,2, status,0
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2762 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2764 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2765 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2766 ;;Total ram usage:        8 bytes
  2767 ;; Hardware stack levels used:    1
  2768 ;; Hardware stack levels required when called:    3
  2769 ;; This function calls:
  2770 ;;		Nothing
  2771 ;; This function is called by:
  2772 ;;		___ftdiv
  2773 ;;		___ftmul
  2774 ;;		___lwtoft
  2775 ;; This function uses a non-reentrant model
  2776 ;;
  2777                           
  2778                           	psect	text18
  2779  00172A                     __ptext18:
  2780                           	opt stack 0
  2781  00172A                     ___ftpack:
  2782                           	opt stack 24
  2783                           
  2784                           ;incstack = 0
  2785  00172A  501D               	movf	___ftpack@exp,w,c
  2786  00172C  B4D8               	btfsc	status,2,c
  2787  00172E  D005               	goto	l2657
  2788  001730  501A               	movf	___ftpack@arg,w,c
  2789  001732  101B               	iorwf	___ftpack@arg+1,w,c
  2790  001734  101C               	iorwf	___ftpack@arg+2,w,c
  2791  001736  A4D8               	btfss	status,2,c
  2792  001738  D00E               	goto	l2663
  2793  00173A                     l2657:
  2794  00173A  0E00               	movlw	0
  2795  00173C  6E1A               	movwf	?___ftpack,c
  2796  00173E  0E00               	movlw	0
  2797  001740  6E1B               	movwf	?___ftpack+1,c
  2798  001742  0E00               	movlw	0
  2799  001744  6E1C               	movwf	?___ftpack+2,c
  2800  001746  0012               	return	
  2801  001748  D006               	goto	l2663
  2802  00174A                     l2661:
  2803  00174A  2A1D               	incf	___ftpack@exp,f,c
  2804  00174C  90D8               	bcf	status,0,c
  2805  00174E  321C               	rrcf	___ftpack@arg+2,f,c
  2806  001750  321B               	rrcf	___ftpack@arg+1,f,c
  2807  001752  321A               	rrcf	___ftpack@arg,f,c
  2808  001754  D000               	goto	l2663
  2809  001756                     l2663:
  2810  001756  0E00               	movlw	0
  2811  001758  141A               	andwf	___ftpack@arg,w,c
  2812  00175A  6E1F               	movwf	??___ftpack& (0+255),c
  2813  00175C  0E00               	movlw	0
  2814  00175E  141B               	andwf	___ftpack@arg+1,w,c
  2815  001760  6E20               	movwf	(??___ftpack+1)& (0+255),c
  2816  001762  0EFE               	movlw	254
  2817  001764  141C               	andwf	___ftpack@arg+2,w,c
  2818  001766  6E21               	movwf	(??___ftpack+2)& (0+255),c
  2819  001768  501F               	movf	??___ftpack,w,c
  2820  00176A  1020               	iorwf	??___ftpack+1,w,c
  2821  00176C  1021               	iorwf	??___ftpack+2,w,c
  2822  00176E  B4D8               	btfsc	status,2,c
  2823  001770  D00E               	goto	l2669
  2824  001772  D7EB               	goto	l2661
  2825  001774  D00C               	goto	l2669
  2826  001776                     l2665:
  2827  001776  2A1D               	incf	___ftpack@exp,f,c
  2828  001778  0E01               	movlw	1
  2829  00177A  261A               	addwf	___ftpack@arg,f,c
  2830  00177C  0E00               	movlw	0
  2831  00177E  221B               	addwfc	___ftpack@arg+1,f,c
  2832  001780  0E00               	movlw	0
  2833  001782  221C               	addwfc	___ftpack@arg+2,f,c
  2834  001784  90D8               	bcf	status,0,c
  2835  001786  321C               	rrcf	___ftpack@arg+2,f,c
  2836  001788  321B               	rrcf	___ftpack@arg+1,f,c
  2837  00178A  321A               	rrcf	___ftpack@arg,f,c
  2838  00178C  D000               	goto	l2669
  2839  00178E                     l2669:
  2840  00178E  0E00               	movlw	0
  2841  001790  141A               	andwf	___ftpack@arg,w,c
  2842  001792  6E1F               	movwf	??___ftpack& (0+255),c
  2843  001794  0E00               	movlw	0
  2844  001796  141B               	andwf	___ftpack@arg+1,w,c
  2845  001798  6E20               	movwf	(??___ftpack+1)& (0+255),c
  2846  00179A  0EFF               	movlw	255
  2847  00179C  141C               	andwf	___ftpack@arg+2,w,c
  2848  00179E  6E21               	movwf	(??___ftpack+2)& (0+255),c
  2849  0017A0  501F               	movf	??___ftpack,w,c
  2850  0017A2  1020               	iorwf	??___ftpack+1,w,c
  2851  0017A4  1021               	iorwf	??___ftpack+2,w,c
  2852  0017A6  B4D8               	btfsc	status,2,c
  2853  0017A8  D008               	goto	l2673
  2854  0017AA  D7E5               	goto	l2665
  2855  0017AC  D006               	goto	l2673
  2856  0017AE                     l2671:
  2857  0017AE  061D               	decf	___ftpack@exp,f,c
  2858  0017B0  90D8               	bcf	status,0,c
  2859  0017B2  361A               	rlcf	___ftpack@arg,f,c
  2860  0017B4  361B               	rlcf	___ftpack@arg+1,f,c
  2861  0017B6  361C               	rlcf	___ftpack@arg+2,f,c
  2862  0017B8  D000               	goto	l2673
  2863  0017BA                     l2673:
  2864  0017BA  BE1B               	btfsc	___ftpack@arg+1,7,c
  2865  0017BC  D004               	goto	l777
  2866  0017BE  0E02               	movlw	2
  2867  0017C0  601D               	cpfslt	___ftpack@exp,c
  2868  0017C2  D7F5               	goto	l2671
  2869  0017C4  D000               	goto	l777
  2870  0017C6                     l777:
  2871  0017C6  B01D               	btfsc	___ftpack@exp,0,c
  2872  0017C8  D002               	goto	l2679
  2873  0017CA  9E1B               	bcf	___ftpack@arg+1,7,c
  2874  0017CC  D000               	goto	l2679
  2875  0017CE                     l2679:
  2876  0017CE  90D8               	bcf	status,0,c
  2877  0017D0  321D               	rrcf	___ftpack@exp,f,c
  2878  0017D2  501D               	movf	___ftpack@exp,w,c
  2879  0017D4  121C               	iorwf	___ftpack@arg+2,f,c
  2880  0017D6  501E               	movf	___ftpack@sign,w,c
  2881  0017D8  B4D8               	btfsc	status,2,c
  2882  0017DA  D002               	goto	l2685
  2883  0017DC  8E1C               	bsf	___ftpack@arg+2,7,c
  2884  0017DE  D000               	goto	l2685
  2885  0017E0                     l2685:
  2886  0017E0  C01A  F01A         	movff	___ftpack@arg,?___ftpack
  2887  0017E4  C01B  F01B         	movff	___ftpack@arg+1,?___ftpack+1
  2888  0017E8  C01C  F01C         	movff	___ftpack@arg+2,?___ftpack+2
  2889  0017EC  0012               	return	
  2890  0017EE  0012               	return		;funcret
  2891  0017F0                     __end_of___ftpack:
  2892                           	opt stack 0
  2893                           tblptru	equ	0xFF8
  2894                           tblptrh	equ	0xFF7
  2895                           tblptrl	equ	0xFF6
  2896                           tablat	equ	0xFF5
  2897                           prodh	equ	0xFF4
  2898                           prodl	equ	0xFF3
  2899                           intcon	equ	0xFF2
  2900                           postinc0	equ	0xFEE
  2901                           wreg	equ	0xFE8
  2902                           indf2	equ	0xFDF
  2903                           postinc2	equ	0xFDE
  2904                           fsr2h	equ	0xFDA
  2905                           fsr2l	equ	0xFD9
  2906                           status	equ	0xFD8
  2907                           
  2908 ;; *************** function _ReadADC *****************
  2909 ;; Defined at:
  2910 ;;		line 24 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;		None
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;		None
  2915 ;; Return value:  Size  Location     Type
  2916 ;;                  2   25[COMRAM] int 
  2917 ;; Registers used:
  2918 ;;		wreg, status,2
  2919 ;; Tracked objects:
  2920 ;;		On entry : 0/0
  2921 ;;		On exit  : 0/0
  2922 ;;		Unchanged: 0/0
  2923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2924 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2926 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2927 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2928 ;;Total ram usage:        4 bytes
  2929 ;; Hardware stack levels used:    1
  2930 ;; Hardware stack levels required when called:    3
  2931 ;; This function calls:
  2932 ;;		Nothing
  2933 ;; This function is called by:
  2934 ;;		_Get_ADC6
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           	psect	text19
  2939  002000                     __ptext19:
  2940                           	opt stack 0
  2941  002000                     _ReadADC:
  2942                           	opt stack 25
  2943                           
  2944                           ;incstack = 0
  2945  002000  50C4               	movf	4036,w,c	;volatile
  2946  002002  6E1C               	movwf	??_ReadADC& (0+255),c
  2947  002004  50C3               	movf	4035,w,c	;volatile
  2948  002006  6E1A               	movwf	?_ReadADC,c
  2949  002008  C01C  F01B         	movff	??_ReadADC,?_ReadADC+1
  2950  00200C  0012               	return	
  2951  00200E  0012               	return		;funcret
  2952  002010                     __end_of_ReadADC:
  2953                           	opt stack 0
  2954                           tblptru	equ	0xFF8
  2955                           tblptrh	equ	0xFF7
  2956                           tblptrl	equ	0xFF6
  2957                           tablat	equ	0xFF5
  2958                           prodh	equ	0xFF4
  2959                           prodl	equ	0xFF3
  2960                           intcon	equ	0xFF2
  2961                           postinc0	equ	0xFEE
  2962                           wreg	equ	0xFE8
  2963                           indf2	equ	0xFDF
  2964                           postinc2	equ	0xFDE
  2965                           fsr2h	equ	0xFDA
  2966                           fsr2l	equ	0xFD9
  2967                           status	equ	0xFD8
  2968                           
  2969 ;; *************** function _ConvertADC *****************
  2970 ;; Defined at:
  2971 ;;		line 22 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;		None
  2974 ;; Auto vars:     Size  Location     Type
  2975 ;;		None
  2976 ;; Return value:  Size  Location     Type
  2977 ;;		None               void
  2978 ;; Registers used:
  2979 ;;		None
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2989 ;;Total ram usage:        0 bytes
  2990 ;; Hardware stack levels used:    1
  2991 ;; Hardware stack levels required when called:    3
  2992 ;; This function calls:
  2993 ;;		Nothing
  2994 ;; This function is called by:
  2995 ;;		_Get_ADC6
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           	psect	text20
  3000  002034                     __ptext20:
  3001                           	opt stack 0
  3002  002034                     _ConvertADC:
  3003                           	opt stack 25
  3004                           
  3005                           ;incstack = 0
  3006  002034  82C2               	bsf	4034,1,c	;volatile
  3007  002036  0012               	return		;funcret
  3008  002038                     __end_of_ConvertADC:
  3009                           	opt stack 0
  3010                           tblptru	equ	0xFF8
  3011                           tblptrh	equ	0xFF7
  3012                           tblptrl	equ	0xFF6
  3013                           tablat	equ	0xFF5
  3014                           prodh	equ	0xFF4
  3015                           prodl	equ	0xFF3
  3016                           intcon	equ	0xFF2
  3017                           postinc0	equ	0xFEE
  3018                           wreg	equ	0xFE8
  3019                           indf2	equ	0xFDF
  3020                           postinc2	equ	0xFDE
  3021                           fsr2h	equ	0xFDA
  3022                           fsr2l	equ	0xFD9
  3023                           status	equ	0xFD8
  3024                           
  3025 ;; *************** function _BusyADC *****************
  3026 ;; Defined at:
  3027 ;;		line 26 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  3028 ;; Parameters:    Size  Location     Type
  3029 ;;		None
  3030 ;; Auto vars:     Size  Location     Type
  3031 ;;		None
  3032 ;; Return value:  Size  Location     Type
  3033 ;;                  1    wreg      unsigned char 
  3034 ;; Registers used:
  3035 ;;		wreg
  3036 ;; Tracked objects:
  3037 ;;		On entry : 0/0
  3038 ;;		On exit  : 0/0
  3039 ;;		Unchanged: 0/0
  3040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3045 ;;Total ram usage:        0 bytes
  3046 ;; Hardware stack levels used:    1
  3047 ;; Hardware stack levels required when called:    3
  3048 ;; This function calls:
  3049 ;;		Nothing
  3050 ;; This function is called by:
  3051 ;;		_Get_ADC6
  3052 ;; This function uses a non-reentrant model
  3053 ;;
  3054                           
  3055                           	psect	text21
  3056  002010                     __ptext21:
  3057                           	opt stack 0
  3058  002010                     _BusyADC:
  3059                           	opt stack 25
  3060                           
  3061                           ;incstack = 0
  3062  002010  A2C2               	btfss	4034,1,c	;volatile
  3063  002012  D002               	goto	u2660
  3064  002014  0E01               	movlw	1
  3065  002016  0012               	return	
  3066  002018                     u2660:
  3067  002018  0E00               	movlw	0
  3068  00201A  0012               	return	
  3069  00201C  0012               	return		;funcret
  3070  00201E                     __end_of_BusyADC:
  3071                           	opt stack 0
  3072                           tblptru	equ	0xFF8
  3073                           tblptrh	equ	0xFF7
  3074                           tblptrl	equ	0xFF6
  3075                           tablat	equ	0xFF5
  3076                           prodh	equ	0xFF4
  3077                           prodl	equ	0xFF3
  3078                           intcon	equ	0xFF2
  3079                           postinc0	equ	0xFEE
  3080                           wreg	equ	0xFE8
  3081                           indf2	equ	0xFDF
  3082                           postinc2	equ	0xFDE
  3083                           fsr2h	equ	0xFDA
  3084                           fsr2l	equ	0xFD9
  3085                           status	equ	0xFD8
  3086                           
  3087 ;; *************** function _RS485_Init *****************
  3088 ;; Defined at:
  3089 ;;		line 44 in file "_01_USER/My_USART.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;		None
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;		None
  3094 ;; Return value:  Size  Location     Type
  3095 ;;		None               void
  3096 ;; Registers used:
  3097 ;;		wreg, status,2, status,0, cstack
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3107 ;;Total ram usage:        0 bytes
  3108 ;; Hardware stack levels used:    1
  3109 ;; Hardware stack levels required when called:    4
  3110 ;; This function calls:
  3111 ;;		_Open2USART
  3112 ;; This function is called by:
  3113 ;;		_main
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text22
  3118  001FB6                     __ptext22:
  3119                           	opt stack 0
  3120  001FB6                     _RS485_Init:
  3121                           	opt stack 26
  3122                           
  3123                           ;My_USART.c: 46: Open2USART( 0b01111111 &
  3124                           ;My_USART.c: 47: 0b11111111 &
  3125                           ;My_USART.c: 48: 0b11111110 &
  3126                           ;My_USART.c: 49: 0b11111101 &
  3127                           ;My_USART.c: 50: 0b11111111 &
  3128                           ;My_USART.c: 51: 0b11101111
  3129                           ;My_USART.c: 52: ,
  3130                           ;My_USART.c: 53: 12
  3131                           ;My_USART.c: 54: );
  3132                           
  3133                           ;incstack = 0
  3134  001FB6  0E00               	movlw	0
  3135  001FB8  6E1B               	movwf	Open2USART@spbrg+1,c
  3136  001FBA  0E0C               	movlw	12
  3137  001FBC  6E1A               	movwf	Open2USART@spbrg,c
  3138  001FBE  0E6C               	movlw	108
  3139  001FC0  EC85  F00C         	call	_Open2USART
  3140                           
  3141                           ;My_USART.c: 56: TRISGbits.TRISG1 = 1;
  3142  001FC4  8298               	bsf	3992,1,c	;volatile
  3143                           
  3144                           ;My_USART.c: 57: TRISGbits.TRISG2 = 0;
  3145  001FC6  9498               	bcf	3992,2,c	;volatile
  3146                           
  3147                           ;My_USART.c: 58: TRISGbits.TRISG3 = 0;
  3148  001FC8  9698               	bcf	3992,3,c	;volatile
  3149                           
  3150                           ;My_USART.c: 59: RG3 = 1;
  3151  001FCA  8686               	bsf	3974,3,c	;volatile
  3152                           
  3153                           ;My_USART.c: 60: ANCON2 &= 0XF1;
  3154  001FCC  0EF1               	movlw	241
  3155  001FCE  010F               	movlb	15	; () banked
  3156  001FD0  1723               	andwf	35,f,b	;volatile
  3157                           
  3158                           ; BSR set to: 15
  3159  001FD2  0012               	return		;funcret
  3160  001FD4                     __end_of_RS485_Init:
  3161                           	opt stack 0
  3162                           tblptru	equ	0xFF8
  3163                           tblptrh	equ	0xFF7
  3164                           tblptrl	equ	0xFF6
  3165                           tablat	equ	0xFF5
  3166                           prodh	equ	0xFF4
  3167                           prodl	equ	0xFF3
  3168                           intcon	equ	0xFF2
  3169                           postinc0	equ	0xFEE
  3170                           wreg	equ	0xFE8
  3171                           indf2	equ	0xFDF
  3172                           postinc2	equ	0xFDE
  3173                           fsr2h	equ	0xFDA
  3174                           fsr2l	equ	0xFD9
  3175                           status	equ	0xFD8
  3176                           
  3177 ;; *************** function _Open2USART *****************
  3178 ;; Defined at:
  3179 ;;		line 118 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u2open.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;  config          1    wreg     unsigned char 
  3182 ;;  spbrg           2   25[COMRAM] unsigned int 
  3183 ;; Auto vars:     Size  Location     Type
  3184 ;;  config          1   27[COMRAM] unsigned char 
  3185 ;; Return value:  Size  Location     Type
  3186 ;;		None               void
  3187 ;; Registers used:
  3188 ;;		wreg, status,2
  3189 ;; Tracked objects:
  3190 ;;		On entry : 0/0
  3191 ;;		On exit  : 0/0
  3192 ;;		Unchanged: 0/0
  3193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3194 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3195 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3197 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3198 ;;Total ram usage:        3 bytes
  3199 ;; Hardware stack levels used:    1
  3200 ;; Hardware stack levels required when called:    3
  3201 ;; This function calls:
  3202 ;;		Nothing
  3203 ;; This function is called by:
  3204 ;;		_RS485_Init
  3205 ;; This function uses a non-reentrant model
  3206 ;;
  3207                           
  3208                           	psect	text23
  3209  00190A                     __ptext23:
  3210                           	opt stack 0
  3211  00190A                     _Open2USART:
  3212                           	opt stack 26
  3213                           
  3214                           ; BSR set to: 15
  3215                           ;incstack = 0
  3216                           ;Open2USART@config stored from wreg
  3217  00190A  6E1C               	movwf	Open2USART@config,c
  3218  00190C  0E00               	movlw	0
  3219  00190E  010F               	movlb	15	; () banked
  3220  001910  6F21               	movwf	33,b	;volatile
  3221  001912  0E00               	movlw	0
  3222  001914  010F               	movlb	15	; () banked
  3223  001916  6F22               	movwf	34,b	;volatile
  3224                           
  3225                           ; BSR set to: 15
  3226  001918  A01C               	btfss	Open2USART@config,0,c
  3227  00191A  D003               	goto	l2903
  3228                           
  3229                           ; BSR set to: 15
  3230  00191C  010F               	movlb	15	; () banked
  3231  00191E  8921               	bsf	33,4,b	;volatile
  3232  001920  D000               	goto	l2903
  3233  001922                     l2903:
  3234                           
  3235                           ; BSR set to: 15
  3236  001922  A21C               	btfss	Open2USART@config,1,c
  3237  001924  D005               	goto	l2907
  3238                           
  3239                           ; BSR set to: 15
  3240  001926  010F               	movlb	15	; () banked
  3241  001928  8D21               	bsf	33,6,b	;volatile
  3242  00192A  010F               	movlb	15	; () banked
  3243  00192C  8D22               	bsf	34,6,b	;volatile
  3244  00192E  D000               	goto	l2907
  3245  001930                     l2907:
  3246                           
  3247                           ; BSR set to: 15
  3248  001930  A41C               	btfss	Open2USART@config,2,c
  3249  001932  D003               	goto	l2911
  3250                           
  3251                           ; BSR set to: 15
  3252  001934  010F               	movlb	15	; () banked
  3253  001936  8F21               	bsf	33,7,b	;volatile
  3254  001938  D000               	goto	l2911
  3255  00193A                     l2911:
  3256                           
  3257                           ; BSR set to: 15
  3258  00193A  A61C               	btfss	Open2USART@config,3,c
  3259  00193C  D003               	goto	l446
  3260                           
  3261                           ; BSR set to: 15
  3262  00193E  010F               	movlb	15	; () banked
  3263  001940  8922               	bsf	34,4,b	;volatile
  3264  001942  D003               	goto	l2915
  3265  001944                     l446:
  3266                           
  3267                           ; BSR set to: 15
  3268  001944  010F               	movlb	15	; () banked
  3269  001946  8B22               	bsf	34,5,b	;volatile
  3270  001948  D000               	goto	l2915
  3271  00194A                     l2915:
  3272                           
  3273                           ; BSR set to: 15
  3274  00194A  A81C               	btfss	Open2USART@config,4,c
  3275  00194C  D003               	goto	l448
  3276                           
  3277                           ; BSR set to: 15
  3278  00194E  010F               	movlb	15	; () banked
  3279  001950  8521               	bsf	33,2,b	;volatile
  3280  001952  D003               	goto	l2919
  3281  001954                     l448:
  3282                           
  3283                           ; BSR set to: 15
  3284  001954  010F               	movlb	15	; () banked
  3285  001956  9521               	bcf	33,2,b	;volatile
  3286  001958  D000               	goto	l2919
  3287  00195A                     l2919:
  3288                           
  3289                           ; BSR set to: 15
  3290  00195A  AA1C               	btfss	Open2USART@config,5,c
  3291  00195C  D003               	goto	l2923
  3292                           
  3293                           ; BSR set to: 15
  3294  00195E  010F               	movlb	15	; () banked
  3295  001960  8722               	bsf	34,3,b	;volatile
  3296  001962  D000               	goto	l2923
  3297  001964                     l2923:
  3298                           
  3299                           ; BSR set to: 15
  3300  001964  AC1C               	btfss	Open2USART@config,6,c
  3301  001966  D002               	goto	l451
  3302                           
  3303                           ; BSR set to: 15
  3304  001968  8AA3               	bsf	4003,5,c	;volatile
  3305  00196A  D002               	goto	l2927
  3306  00196C                     l451:
  3307                           
  3308                           ; BSR set to: 15
  3309  00196C  9AA3               	bcf	4003,5,c	;volatile
  3310  00196E  D000               	goto	l2927
  3311  001970                     l2927:
  3312                           
  3313                           ; BSR set to: 15
  3314  001970  AE1C               	btfss	Open2USART@config,7,c
  3315  001972  D002               	goto	l453
  3316                           
  3317                           ; BSR set to: 15
  3318  001974  88A3               	bsf	4003,4,c	;volatile
  3319  001976  D001               	goto	l454
  3320  001978                     l453:
  3321                           
  3322                           ; BSR set to: 15
  3323  001978  98A3               	bcf	4003,4,c	;volatile
  3324  00197A                     l454:
  3325                           
  3326                           ; BSR set to: 15
  3327  00197A  C01A  FF1E         	movff	Open2USART@spbrg,3870	;volatile
  3328                           
  3329                           ; BSR set to: 15
  3330  00197E  501B               	movf	Open2USART@spbrg+1,w,c
  3331  001980  010F               	movlb	15	; () banked
  3332  001982  6F1F               	movwf	31,b	;volatile
  3333                           
  3334                           ; BSR set to: 15
  3335  001984  010F               	movlb	15	; () banked
  3336  001986  8B21               	bsf	33,5,b	;volatile
  3337                           
  3338                           ; BSR set to: 15
  3339  001988  010F               	movlb	15	; () banked
  3340  00198A  8F22               	bsf	34,7,b	;volatile
  3341                           
  3342                           ; BSR set to: 15
  3343  00198C  0012               	return		;funcret
  3344  00198E                     __end_of_Open2USART:
  3345                           	opt stack 0
  3346                           tblptru	equ	0xFF8
  3347                           tblptrh	equ	0xFF7
  3348                           tblptrl	equ	0xFF6
  3349                           tablat	equ	0xFF5
  3350                           prodh	equ	0xFF4
  3351                           prodl	equ	0xFF3
  3352                           intcon	equ	0xFF2
  3353                           postinc0	equ	0xFEE
  3354                           wreg	equ	0xFE8
  3355                           indf2	equ	0xFDF
  3356                           postinc2	equ	0xFDE
  3357                           fsr2h	equ	0xFDA
  3358                           fsr2l	equ	0xFD9
  3359                           status	equ	0xFD8
  3360                           
  3361 ;; *************** function _Key_Init *****************
  3362 ;; Defined at:
  3363 ;;		line 39 in file "_01_USER/Key.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;		None
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;		None
  3368 ;; Return value:  Size  Location     Type
  3369 ;;		None               void
  3370 ;; Registers used:
  3371 ;;		wreg, status,2, status,0
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3381 ;;Total ram usage:        0 bytes
  3382 ;; Hardware stack levels used:    1
  3383 ;; Hardware stack levels required when called:    3
  3384 ;; This function calls:
  3385 ;;		Nothing
  3386 ;; This function is called by:
  3387 ;;		_main
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           	psect	text24
  3392  00202A                     __ptext24:
  3393                           	opt stack 0
  3394  00202A                     _Key_Init:
  3395                           	opt stack 27
  3396                           
  3397                           ;Key.c: 41: TRISE |= 0x1e;
  3398                           
  3399                           ; BSR set to: 15
  3400                           ;incstack = 0
  3401  00202A  0E1E               	movlw	30
  3402  00202C  1296               	iorwf	3990,f,c	;volatile
  3403                           
  3404                           ;Key.c: 42: TRISD |= 0xc0;
  3405  00202E  0EC0               	movlw	192
  3406  002030  1295               	iorwf	3989,f,c	;volatile
  3407  002032  0012               	return		;funcret
  3408  002034                     __end_of_Key_Init:
  3409                           	opt stack 0
  3410                           tblptru	equ	0xFF8
  3411                           tblptrh	equ	0xFF7
  3412                           tblptrl	equ	0xFF6
  3413                           tablat	equ	0xFF5
  3414                           prodh	equ	0xFF4
  3415                           prodl	equ	0xFF3
  3416                           intcon	equ	0xFF2
  3417                           postinc0	equ	0xFEE
  3418                           wreg	equ	0xFE8
  3419                           indf2	equ	0xFDF
  3420                           postinc2	equ	0xFDE
  3421                           fsr2h	equ	0xFDA
  3422                           fsr2l	equ	0xFD9
  3423                           status	equ	0xFD8
  3424                           
  3425 ;; *************** function _Init_TM1640 *****************
  3426 ;; Defined at:
  3427 ;;		line 119 in file "_01_USER/TM1640.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;		None
  3430 ;; Auto vars:     Size  Location     Type
  3431 ;;		None
  3432 ;; Return value:  Size  Location     Type
  3433 ;;		None               void
  3434 ;; Registers used:
  3435 ;;		wreg, status,2, status,0, cstack
  3436 ;; Tracked objects:
  3437 ;;		On entry : 0/0
  3438 ;;		On exit  : 0/0
  3439 ;;		Unchanged: 0/0
  3440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3445 ;;Total ram usage:        0 bytes
  3446 ;; Hardware stack levels used:    1
  3447 ;; Hardware stack levels required when called:    5
  3448 ;; This function calls:
  3449 ;;		_TM1640_Start
  3450 ;;		_TM1640_Stop
  3451 ;;		_TM1640_Writer_Byte
  3452 ;; This function is called by:
  3453 ;;		_main
  3454 ;; This function uses a non-reentrant model
  3455 ;;
  3456                           
  3457                           	psect	text25
  3458  001F02                     __ptext25:
  3459                           	opt stack 0
  3460  001F02                     _Init_TM1640:
  3461                           	opt stack 25
  3462                           
  3463                           ;TM1640.c: 121: TRISCbits.TRISC3 = 0;
  3464                           
  3465                           ;incstack = 0
  3466  001F02  9694               	bcf	3988,3,c	;volatile
  3467                           
  3468                           ;TM1640.c: 122: TRISCbits.TRISC4 = 0;
  3469  001F04  9894               	bcf	3988,4,c	;volatile
  3470                           
  3471                           ;TM1640.c: 123: TM1640_Stop();
  3472  001F06  ECA6  F00F         	call	_TM1640_Stop	;wreg free
  3473                           
  3474                           ;TM1640.c: 125: TM1640_Start();
  3475  001F0A  ECB8  F00F         	call	_TM1640_Start	;wreg free
  3476                           
  3477                           ;TM1640.c: 126: TM1640_Writer_Byte(0x44);
  3478  001F0E  0E44               	movlw	68
  3479  001F10  EC71  F00E         	call	_TM1640_Writer_Byte
  3480                           
  3481                           ;TM1640.c: 127: TM1640_Stop();
  3482  001F14  ECA6  F00F         	call	_TM1640_Stop	;wreg free
  3483                           
  3484                           ;TM1640.c: 129: TM1640_Start();
  3485  001F18  ECB8  F00F         	call	_TM1640_Start	;wreg free
  3486                           
  3487                           ;TM1640.c: 130: TM1640_Writer_Byte(0x8F);
  3488  001F1C  0E8F               	movlw	143
  3489  001F1E  EC71  F00E         	call	_TM1640_Writer_Byte
  3490                           
  3491                           ;TM1640.c: 131: TM1640_Stop();
  3492  001F22  ECA6  F00F         	call	_TM1640_Stop	;wreg free
  3493  001F26  0012               	return		;funcret
  3494  001F28                     __end_of_Init_TM1640:
  3495                           	opt stack 0
  3496                           tblptru	equ	0xFF8
  3497                           tblptrh	equ	0xFF7
  3498                           tblptrl	equ	0xFF6
  3499                           tablat	equ	0xFF5
  3500                           prodh	equ	0xFF4
  3501                           prodl	equ	0xFF3
  3502                           intcon	equ	0xFF2
  3503                           postinc0	equ	0xFEE
  3504                           wreg	equ	0xFE8
  3505                           indf2	equ	0xFDF
  3506                           postinc2	equ	0xFDE
  3507                           fsr2h	equ	0xFDA
  3508                           fsr2l	equ	0xFD9
  3509                           status	equ	0xFD8
  3510                           
  3511 ;; *************** function _TM1640_Writer_Byte *****************
  3512 ;; Defined at:
  3513 ;;		line 77 in file "_01_USER/TM1640.c"
  3514 ;; Parameters:    Size  Location     Type
  3515 ;;  Date            1    wreg     const unsigned char 
  3516 ;; Auto vars:     Size  Location     Type
  3517 ;;  Date            1   27[COMRAM] const unsigned char 
  3518 ;;  mask            1   28[COMRAM] unsigned char 
  3519 ;; Return value:  Size  Location     Type
  3520 ;;		None               void
  3521 ;; Registers used:
  3522 ;;		wreg, status,2, status,0, cstack
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3529 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3531 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3532 ;;Total ram usage:        2 bytes
  3533 ;; Hardware stack levels used:    1
  3534 ;; Hardware stack levels required when called:    4
  3535 ;; This function calls:
  3536 ;;		_TM1640_Delay
  3537 ;; This function is called by:
  3538 ;;		_TM1640_Writer_Dates
  3539 ;;		_Init_TM1640
  3540 ;;		_Open_Display
  3541 ;;		_Disable_Display
  3542 ;; This function uses a non-reentrant model
  3543 ;;
  3544                           
  3545                           	psect	text26
  3546  001CE2                     __ptext26:
  3547                           	opt stack 0
  3548  001CE2                     _TM1640_Writer_Byte:
  3549                           	opt stack 23
  3550                           
  3551                           ;incstack = 0
  3552                           ;TM1640_Writer_Byte@Date stored from wreg
  3553  001CE2  6E1C               	movwf	TM1640_Writer_Byte@Date,c
  3554                           
  3555                           ;TM1640.c: 79: unsigned char mask;
  3556                           ;TM1640.c: 81: for(mask=0x01; mask; mask<<=1)
  3557  001CE4  0E01               	movlw	1
  3558  001CE6  6E1D               	movwf	TM1640_Writer_Byte@mask,c
  3559  001CE8  D017               	goto	l2651
  3560  001CEA                     l301:
  3561                           
  3562                           ;TM1640.c: 82: {
  3563                           ;TM1640.c: 83: RC3 = 0;
  3564  001CEA  9682               	bcf	3970,3,c	;volatile
  3565                           
  3566                           ;TM1640.c: 84: TM1640_Delay(1);
  3567  001CEC  0E01               	movlw	1
  3568  001CEE  ECEA  F00F         	call	_TM1640_Delay
  3569                           
  3570                           ;TM1640.c: 85: if(mask & Date)
  3571  001CF2  501D               	movf	TM1640_Writer_Byte@mask,w,c
  3572  001CF4  141C               	andwf	TM1640_Writer_Byte@Date,w,c
  3573  001CF6  0900               	iorlw	0
  3574  001CF8  B4D8               	btfsc	status,2,c
  3575  001CFA  D002               	goto	l302
  3576                           
  3577                           ;TM1640.c: 86: RC4 = 1;
  3578  001CFC  8882               	bsf	3970,4,c	;volatile
  3579  001CFE  D002               	goto	l2645
  3580  001D00                     l302:
  3581                           
  3582                           ;TM1640.c: 87: else
  3583                           ;TM1640.c: 88: RC4 = 0;
  3584  001D00  9882               	bcf	3970,4,c	;volatile
  3585  001D02  D000               	goto	l2645
  3586  001D04                     l2645:
  3587                           
  3588                           ;TM1640.c: 89: TM1640_Delay(1);
  3589  001D04  0E01               	movlw	1
  3590  001D06  ECEA  F00F         	call	_TM1640_Delay
  3591                           
  3592                           ;TM1640.c: 90: RC3 = 1;
  3593  001D0A  8682               	bsf	3970,3,c	;volatile
  3594                           
  3595                           ;TM1640.c: 91: TM1640_Delay(1);
  3596  001D0C  0E01               	movlw	1
  3597  001D0E  ECEA  F00F         	call	_TM1640_Delay
  3598  001D12  90D8               	bcf	status,0,c
  3599  001D14  361D               	rlcf	TM1640_Writer_Byte@mask,f,c
  3600  001D16  D000               	goto	l2651
  3601  001D18                     l2651:
  3602  001D18  501D               	movf	TM1640_Writer_Byte@mask,w,c
  3603  001D1A  A4D8               	btfss	status,2,c
  3604  001D1C  D7E6               	goto	l301
  3605  001D1E  0012               	return		;funcret
  3606  001D20                     __end_of_TM1640_Writer_Byte:
  3607                           	opt stack 0
  3608                           tblptru	equ	0xFF8
  3609                           tblptrh	equ	0xFF7
  3610                           tblptrl	equ	0xFF6
  3611                           tablat	equ	0xFF5
  3612                           prodh	equ	0xFF4
  3613                           prodl	equ	0xFF3
  3614                           intcon	equ	0xFF2
  3615                           postinc0	equ	0xFEE
  3616                           wreg	equ	0xFE8
  3617                           indf2	equ	0xFDF
  3618                           postinc2	equ	0xFDE
  3619                           fsr2h	equ	0xFDA
  3620                           fsr2l	equ	0xFD9
  3621                           status	equ	0xFD8
  3622                           
  3623 ;; *************** function _TM1640_Stop *****************
  3624 ;; Defined at:
  3625 ;;		line 32 in file "_01_USER/TM1640.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;		None
  3628 ;; Auto vars:     Size  Location     Type
  3629 ;;		None
  3630 ;; Return value:  Size  Location     Type
  3631 ;;		None               void
  3632 ;; Registers used:
  3633 ;;		wreg, status,2, status,0, cstack
  3634 ;; Tracked objects:
  3635 ;;		On entry : 0/0
  3636 ;;		On exit  : 0/0
  3637 ;;		Unchanged: 0/0
  3638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3643 ;;Total ram usage:        0 bytes
  3644 ;; Hardware stack levels used:    1
  3645 ;; Hardware stack levels required when called:    4
  3646 ;; This function calls:
  3647 ;;		_TM1640_Delay
  3648 ;; This function is called by:
  3649 ;;		_TM1640_Writer_Dates
  3650 ;;		_Init_TM1640
  3651 ;;		_Open_Display
  3652 ;;		_Disable_Display
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655                           
  3656                           	psect	text27
  3657  001F4C                     __ptext27:
  3658                           	opt stack 0
  3659  001F4C                     _TM1640_Stop:
  3660                           	opt stack 23
  3661                           
  3662                           ;TM1640.c: 34: RC3 = 0;
  3663                           
  3664                           ;incstack = 0
  3665  001F4C  9682               	bcf	3970,3,c	;volatile
  3666                           
  3667                           ;TM1640.c: 35: TM1640_Delay(1);
  3668  001F4E  0E01               	movlw	1
  3669  001F50  ECEA  F00F         	call	_TM1640_Delay
  3670                           
  3671                           ;TM1640.c: 36: RC4 = 0;
  3672  001F54  9882               	bcf	3970,4,c	;volatile
  3673                           
  3674                           ;TM1640.c: 37: TM1640_Delay(1);
  3675  001F56  0E01               	movlw	1
  3676  001F58  ECEA  F00F         	call	_TM1640_Delay
  3677                           
  3678                           ;TM1640.c: 38: RC3 = 1;
  3679  001F5C  8682               	bsf	3970,3,c	;volatile
  3680                           
  3681                           ;TM1640.c: 39: TM1640_Delay(1);
  3682  001F5E  0E01               	movlw	1
  3683  001F60  ECEA  F00F         	call	_TM1640_Delay
  3684                           
  3685                           ;TM1640.c: 40: RC4 = 1;
  3686  001F64  8882               	bsf	3970,4,c	;volatile
  3687                           
  3688                           ;TM1640.c: 41: TM1640_Delay(1);
  3689  001F66  0E01               	movlw	1
  3690  001F68  ECEA  F00F         	call	_TM1640_Delay
  3691                           
  3692                           ;TM1640.c: 42: RC3 = 0;
  3693  001F6C  9682               	bcf	3970,3,c	;volatile
  3694  001F6E  0012               	return		;funcret
  3695  001F70                     __end_of_TM1640_Stop:
  3696                           	opt stack 0
  3697                           tblptru	equ	0xFF8
  3698                           tblptrh	equ	0xFF7
  3699                           tblptrl	equ	0xFF6
  3700                           tablat	equ	0xFF5
  3701                           prodh	equ	0xFF4
  3702                           prodl	equ	0xFF3
  3703                           intcon	equ	0xFF2
  3704                           postinc0	equ	0xFEE
  3705                           wreg	equ	0xFE8
  3706                           indf2	equ	0xFDF
  3707                           postinc2	equ	0xFDE
  3708                           fsr2h	equ	0xFDA
  3709                           fsr2l	equ	0xFD9
  3710                           status	equ	0xFD8
  3711                           
  3712 ;; *************** function _TM1640_Start *****************
  3713 ;; Defined at:
  3714 ;;		line 19 in file "_01_USER/TM1640.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;		None
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;		None
  3719 ;; Return value:  Size  Location     Type
  3720 ;;		None               void
  3721 ;; Registers used:
  3722 ;;		wreg, status,2, status,0, cstack
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3732 ;;Total ram usage:        0 bytes
  3733 ;; Hardware stack levels used:    1
  3734 ;; Hardware stack levels required when called:    4
  3735 ;; This function calls:
  3736 ;;		_TM1640_Delay
  3737 ;; This function is called by:
  3738 ;;		_TM1640_Writer_Dates
  3739 ;;		_Init_TM1640
  3740 ;;		_Open_Display
  3741 ;;		_Disable_Display
  3742 ;; This function uses a non-reentrant model
  3743 ;;
  3744                           
  3745                           	psect	text28
  3746  001F70                     __ptext28:
  3747                           	opt stack 0
  3748  001F70                     _TM1640_Start:
  3749                           	opt stack 23
  3750                           
  3751                           ;TM1640.c: 21: RC3 = 0;
  3752                           
  3753                           ;incstack = 0
  3754  001F70  9682               	bcf	3970,3,c	;volatile
  3755                           
  3756                           ;TM1640.c: 22: TM1640_Delay(1);
  3757  001F72  0E01               	movlw	1
  3758  001F74  ECEA  F00F         	call	_TM1640_Delay
  3759                           
  3760                           ;TM1640.c: 23: RC4 = 1;
  3761  001F78  8882               	bsf	3970,4,c	;volatile
  3762                           
  3763                           ;TM1640.c: 24: TM1640_Delay(1);
  3764  001F7A  0E01               	movlw	1
  3765  001F7C  ECEA  F00F         	call	_TM1640_Delay
  3766                           
  3767                           ;TM1640.c: 25: RC3 = 1;
  3768  001F80  8682               	bsf	3970,3,c	;volatile
  3769                           
  3770                           ;TM1640.c: 26: TM1640_Delay(1);
  3771  001F82  0E01               	movlw	1
  3772  001F84  ECEA  F00F         	call	_TM1640_Delay
  3773                           
  3774                           ;TM1640.c: 27: RC4 = 0;
  3775  001F88  9882               	bcf	3970,4,c	;volatile
  3776                           
  3777                           ;TM1640.c: 28: TM1640_Delay(1);
  3778  001F8A  0E01               	movlw	1
  3779  001F8C  ECEA  F00F         	call	_TM1640_Delay
  3780                           
  3781                           ;TM1640.c: 29: RC3 = 0;
  3782  001F90  9682               	bcf	3970,3,c	;volatile
  3783  001F92  0012               	return		;funcret
  3784  001F94                     __end_of_TM1640_Start:
  3785                           	opt stack 0
  3786                           tblptru	equ	0xFF8
  3787                           tblptrh	equ	0xFF7
  3788                           tblptrl	equ	0xFF6
  3789                           tablat	equ	0xFF5
  3790                           prodh	equ	0xFF4
  3791                           prodl	equ	0xFF3
  3792                           intcon	equ	0xFF2
  3793                           postinc0	equ	0xFEE
  3794                           wreg	equ	0xFE8
  3795                           indf2	equ	0xFDF
  3796                           postinc2	equ	0xFDE
  3797                           fsr2h	equ	0xFDA
  3798                           fsr2l	equ	0xFD9
  3799                           status	equ	0xFD8
  3800                           
  3801 ;; *************** function _TM1640_Delay *****************
  3802 ;; Defined at:
  3803 ;;		line 109 in file "_01_USER/TM1640.c"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;  Time            1    wreg     unsigned char 
  3806 ;; Auto vars:     Size  Location     Type
  3807 ;;  Time            1   25[COMRAM] unsigned char 
  3808 ;;  i               1   26[COMRAM] unsigned char 
  3809 ;; Return value:  Size  Location     Type
  3810 ;;		None               void
  3811 ;; Registers used:
  3812 ;;		wreg, status,2, status,0
  3813 ;; Tracked objects:
  3814 ;;		On entry : 0/0
  3815 ;;		On exit  : 0/0
  3816 ;;		Unchanged: 0/0
  3817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3819 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3821 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3822 ;;Total ram usage:        2 bytes
  3823 ;; Hardware stack levels used:    1
  3824 ;; Hardware stack levels required when called:    3
  3825 ;; This function calls:
  3826 ;;		Nothing
  3827 ;; This function is called by:
  3828 ;;		_TM1640_Start
  3829 ;;		_TM1640_Stop
  3830 ;;		_TM1640_Writer_Byte
  3831 ;; This function uses a non-reentrant model
  3832 ;;
  3833                           
  3834                           	psect	text29
  3835  001FD4                     __ptext29:
  3836                           	opt stack 0
  3837  001FD4                     _TM1640_Delay:
  3838                           	opt stack 23
  3839                           
  3840                           ;incstack = 0
  3841                           ;TM1640_Delay@Time stored from wreg
  3842  001FD4  6E1A               	movwf	TM1640_Delay@Time,c
  3843  001FD6                     
  3844                           ;TM1640.c: 114: {
  3845                           ;TM1640.c: 115: for(i=0; i<10; ++i);
  3846  001FD6  0E00               	movlw	0
  3847  001FD8  6E1B               	movwf	TM1640_Delay@i,c
  3848  001FDA  D002               	goto	l2611
  3849  001FDC  D004               	goto	l316
  3850  001FDE                     l2609:
  3851  001FDE  2A1B               	incf	TM1640_Delay@i,f,c
  3852  001FE0                     l2611:
  3853  001FE0  0E09               	movlw	9
  3854  001FE2  641B               	cpfsgt	TM1640_Delay@i,c
  3855  001FE4  D7FC               	goto	l2609
  3856  001FE6                     l316:
  3857                           
  3858                           ;TM1640.c: 116: }while(--Time);
  3859  001FE6  2E1A               	decfsz	TM1640_Delay@Time,f,c
  3860  001FE8  D7F6               	goto	l2603
  3861  001FEA  0012               	return	
  3862  001FEC  0012               	return		;funcret
  3863  001FEE                     __end_of_TM1640_Delay:
  3864                           	opt stack 0
  3865                           tblptru	equ	0xFF8
  3866                           tblptrh	equ	0xFF7
  3867                           tblptrl	equ	0xFF6
  3868                           tablat	equ	0xFF5
  3869                           prodh	equ	0xFF4
  3870                           prodl	equ	0xFF3
  3871                           intcon	equ	0xFF2
  3872                           postinc0	equ	0xFEE
  3873                           wreg	equ	0xFE8
  3874                           indf2	equ	0xFDF
  3875                           postinc2	equ	0xFDE
  3876                           fsr2h	equ	0xFDA
  3877                           fsr2l	equ	0xFD9
  3878                           status	equ	0xFD8
  3879                           
  3880 ;; *************** function _GPIO_Config *****************
  3881 ;; Defined at:
  3882 ;;		line 38 in file "_01_USER/GPIO.c"
  3883 ;; Parameters:    Size  Location     Type
  3884 ;;		None
  3885 ;; Auto vars:     Size  Location     Type
  3886 ;;		None
  3887 ;; Return value:  Size  Location     Type
  3888 ;;		None               void
  3889 ;; Registers used:
  3890 ;;		wreg, status,2, status,0
  3891 ;; Tracked objects:
  3892 ;;		On entry : 0/0
  3893 ;;		On exit  : 0/0
  3894 ;;		Unchanged: 0/0
  3895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3900 ;;Total ram usage:        0 bytes
  3901 ;; Hardware stack levels used:    1
  3902 ;; Hardware stack levels required when called:    3
  3903 ;; This function calls:
  3904 ;;		Nothing
  3905 ;; This function is called by:
  3906 ;;		_main
  3907 ;; This function uses a non-reentrant model
  3908 ;;
  3909                           
  3910                           	psect	text30
  3911  00201E                     __ptext30:
  3912                           	opt stack 0
  3913  00201E                     _GPIO_Config:
  3914                           	opt stack 27
  3915                           
  3916                           ;GPIO.c: 41: TRISE &= 0x1f;
  3917                           
  3918                           ;incstack = 0
  3919  00201E  0E1F               	movlw	31
  3920  002020  1696               	andwf	3990,f,c	;volatile
  3921                           
  3922                           ;GPIO.c: 43: RE5 = 1;
  3923  002022  8A84               	bsf	3972,5,c	;volatile
  3924                           
  3925                           ;GPIO.c: 44: RE6 = 1;
  3926  002024  8C84               	bsf	3972,6,c	;volatile
  3927                           
  3928                           ;GPIO.c: 45: RE7 = 1;
  3929  002026  8E84               	bsf	3972,7,c	;volatile
  3930  002028  0012               	return		;funcret
  3931  00202A                     __end_of_GPIO_Config:
  3932                           	opt stack 0
  3933                           tblptru	equ	0xFF8
  3934                           tblptrh	equ	0xFF7
  3935                           tblptrl	equ	0xFF6
  3936                           tablat	equ	0xFF5
  3937                           prodh	equ	0xFF4
  3938                           prodl	equ	0xFF3
  3939                           intcon	equ	0xFF2
  3940                           postinc0	equ	0xFEE
  3941                           wreg	equ	0xFE8
  3942                           indf2	equ	0xFDF
  3943                           postinc2	equ	0xFDE
  3944                           fsr2h	equ	0xFDA
  3945                           fsr2l	equ	0xFD9
  3946                           status	equ	0xFD8
  3947                           
  3948 ;; *************** function _ADC6_Init *****************
  3949 ;; Defined at:
  3950 ;;		line 37 in file "_01_USER/My_ADC.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;		None
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;		None
  3955 ;; Return value:  Size  Location     Type
  3956 ;;		None               void
  3957 ;; Registers used:
  3958 ;;		wreg, status,2, status,0, cstack
  3959 ;; Tracked objects:
  3960 ;;		On entry : 0/0
  3961 ;;		On exit  : 0/0
  3962 ;;		Unchanged: 0/0
  3963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3968 ;;Total ram usage:        0 bytes
  3969 ;; Hardware stack levels used:    1
  3970 ;; Hardware stack levels required when called:    4
  3971 ;; This function calls:
  3972 ;;		_OpenADC
  3973 ;; This function is called by:
  3974 ;;		_main
  3975 ;; This function uses a non-reentrant model
  3976 ;;
  3977                           
  3978                           	psect	text31
  3979  001FEE                     __ptext31:
  3980                           	opt stack 0
  3981  001FEE                     _ADC6_Init:
  3982                           	opt stack 26
  3983                           
  3984                           ;My_ADC.c: 40: OpenADC(0b11111111 &
  3985                           ;My_ADC.c: 41: 0b11110011 &
  3986                           ;My_ADC.c: 42: 0b10001111
  3987                           ;My_ADC.c: 43: ,
  3988                           ;My_ADC.c: 44: 0b10011011
  3989                           ;My_ADC.c: 45: ,
  3990                           ;My_ADC.c: 46: 0b00111111 &
  3991                           ;My_ADC.c: 47: 0b11111111 &
  3992                           ;My_ADC.c: 48: 0b11110111 &
  3993                           ;My_ADC.c: 49: 0b11111000
  3994                           ;My_ADC.c: 50: );
  3995                           
  3996                           ;incstack = 0
  3997  001FEE  0E9B               	movlw	155
  3998  001FF0  6E1A               	movwf	OpenADC@config2,c
  3999  001FF2  0E30               	movlw	48
  4000  001FF4  6E1B               	movwf	OpenADC@config3,c
  4001  001FF6  0E83               	movlw	131
  4002  001FF8  ECD9  F00D         	call	_OpenADC
  4003                           
  4004                           ;My_ADC.c: 52: (PIE1bits.ADIE=0);
  4005  001FFC  9C9D               	bcf	3997,6,c	;volatile
  4006  001FFE  0012               	return		;funcret
  4007  002000                     __end_of_ADC6_Init:
  4008                           	opt stack 0
  4009                           tblptru	equ	0xFF8
  4010                           tblptrh	equ	0xFF7
  4011                           tblptrl	equ	0xFF6
  4012                           tablat	equ	0xFF5
  4013                           prodh	equ	0xFF4
  4014                           prodl	equ	0xFF3
  4015                           intcon	equ	0xFF2
  4016                           postinc0	equ	0xFEE
  4017                           wreg	equ	0xFE8
  4018                           indf2	equ	0xFDF
  4019                           postinc2	equ	0xFDE
  4020                           fsr2h	equ	0xFDA
  4021                           fsr2l	equ	0xFD9
  4022                           status	equ	0xFD8
  4023                           
  4024 ;; *************** function _OpenADC *****************
  4025 ;; Defined at:
  4026 ;;		line 305 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;  config          1    wreg     unsigned char 
  4029 ;;  config2         1   25[COMRAM] unsigned char 
  4030 ;;  config3         1   26[COMRAM] unsigned char 
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;  config          1   29[COMRAM] unsigned char 
  4033 ;; Return value:  Size  Location     Type
  4034 ;;		None               void
  4035 ;; Registers used:
  4036 ;;		wreg, status,2, status,0
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4042 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4043 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4044 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4045 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4046 ;;Total ram usage:        5 bytes
  4047 ;; Hardware stack levels used:    1
  4048 ;; Hardware stack levels required when called:    3
  4049 ;; This function calls:
  4050 ;;		Nothing
  4051 ;; This function is called by:
  4052 ;;		_ADC6_Init
  4053 ;; This function uses a non-reentrant model
  4054 ;;
  4055                           
  4056                           	psect	text32
  4057  001BB2                     __ptext32:
  4058                           	opt stack 0
  4059  001BB2                     _OpenADC:
  4060                           	opt stack 26
  4061                           
  4062                           ;incstack = 0
  4063                           ;OpenADC@config stored from wreg
  4064  001BB2  6E1E               	movwf	OpenADC@config,c
  4065  001BB4  0E00               	movlw	0
  4066  001BB6  6EC2               	movwf	4034,c	;volatile
  4067  001BB8  0E00               	movlw	0
  4068  001BBA  6EC1               	movwf	4033,c	;volatile
  4069  001BBC  0E00               	movlw	0
  4070  001BBE  6EC0               	movwf	4032,c	;volatile
  4071  001BC0  501A               	movf	OpenADC@config2,w,c
  4072  001BC2  0B7C               	andlw	124
  4073  001BC4  6EC2               	movwf	4034,c	;volatile
  4074  001BC6  C01B  FFC1         	movff	OpenADC@config3,4033	;volatile
  4075  001BCA  C01E  F01C         	movff	OpenADC@config,??_OpenADC
  4076  001BCE  90D8               	bcf	status,0,c
  4077  001BD0  361C               	rlcf	??_OpenADC,f,c
  4078  001BD2  90D8               	bcf	status,0,c
  4079  001BD4  361C               	rlcf	??_OpenADC,f,c
  4080  001BD6  0E38               	movlw	56
  4081  001BD8  161C               	andwf	??_OpenADC,f,c
  4082  001BDA  C01E  F01D         	movff	OpenADC@config,??_OpenADC+1
  4083  001BDE  3A1D               	swapf	??_OpenADC+1,f,c
  4084  001BE0  0E0F               	movlw	15
  4085  001BE2  161D               	andwf	??_OpenADC+1,f,c
  4086  001BE4  0E07               	movlw	7
  4087  001BE6  161D               	andwf	??_OpenADC+1,f,c
  4088  001BE8  501E               	movf	OpenADC@config,w,c
  4089  001BEA  0B80               	andlw	128
  4090  001BEC  101D               	iorwf	??_OpenADC+1,w,c
  4091  001BEE  101C               	iorwf	??_OpenADC,w,c
  4092  001BF0  6EC0               	movwf	4032,c	;volatile
  4093  001BF2  AE1A               	btfss	OpenADC@config2,7,c
  4094  001BF4  D003               	goto	l418
  4095  001BF6  9C9E               	bcf	3998,6,c	;volatile
  4096  001BF8  8C9D               	bsf	3997,6,c	;volatile
  4097  001BFA  8CF2               	bsf	intcon,6,c	;volatile
  4098  001BFC                     l418:
  4099  001BFC  80C2               	bsf	4034,0,c	;volatile
  4100  001BFE  0012               	return		;funcret
  4101  001C00                     __end_of_OpenADC:
  4102                           	opt stack 0
  4103                           tblptru	equ	0xFF8
  4104                           tblptrh	equ	0xFF7
  4105                           tblptrl	equ	0xFF6
  4106                           tablat	equ	0xFF5
  4107                           prodh	equ	0xFF4
  4108                           prodl	equ	0xFF3
  4109                           intcon	equ	0xFF2
  4110                           postinc0	equ	0xFEE
  4111                           wreg	equ	0xFE8
  4112                           indf2	equ	0xFDF
  4113                           postinc2	equ	0xFDE
  4114                           fsr2h	equ	0xFDA
  4115                           fsr2l	equ	0xFD9
  4116                           status	equ	0xFD8
  4117                           
  4118 ;; *************** function _Sys_Cyc *****************
  4119 ;; Defined at:
  4120 ;;		line 98 in file "_01_USER/My_Timer.c"
  4121 ;; Parameters:    Size  Location     Type
  4122 ;;		None
  4123 ;; Auto vars:     Size  Location     Type
  4124 ;;  _temp           1   24[COMRAM] unsigned char 
  4125 ;;  _pulse          1   23[COMRAM] unsigned char 
  4126 ;; Return value:  Size  Location     Type
  4127 ;;		None               void
  4128 ;; Registers used:
  4129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4130 ;; Tracked objects:
  4131 ;;		On entry : 0/0
  4132 ;;		On exit  : 0/0
  4133 ;;		Unchanged: 0/0
  4134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4136 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4137 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4138 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4139 ;;Total ram usage:       16 bytes
  4140 ;; Hardware stack levels used:    1
  4141 ;; Hardware stack levels required when called:    2
  4142 ;; This function calls:
  4143 ;;		_Delay_1Khz
  4144 ;;		_Key_FSM_Scan
  4145 ;;		_Manage_Message
  4146 ;;		i2_SetTimer0
  4147 ;;		i2___llmod
  4148 ;; This function is called by:
  4149 ;;		Interrupt level 2
  4150 ;; This function uses a non-reentrant model
  4151 ;;
  4152                           
  4153                           	psect	intcode
  4154  000008                     __pintcode:
  4155                           	opt stack 0
  4156  000008                     _Sys_Cyc:
  4157                           	opt stack 23
  4158                           
  4159                           ;incstack = 0
  4160  000008  CFFA F00A          	movff	pclath,??_Sys_Cyc
  4161  00000C  CFFB F00B          	movff	pclatu,??_Sys_Cyc+1
  4162  000010  CFE9 F00C          	movff	fsr0l,??_Sys_Cyc+2
  4163  000014  CFEA F00D          	movff	fsr0h,??_Sys_Cyc+3
  4164  000018  CFE1 F00E          	movff	fsr1l,??_Sys_Cyc+4
  4165  00001C  CFE2 F00F          	movff	fsr1h,??_Sys_Cyc+5
  4166  000020  CFD9 F010          	movff	fsr2l,??_Sys_Cyc+6
  4167  000024  CFDA F011          	movff	fsr2h,??_Sys_Cyc+7
  4168  000028  CFF3 F012          	movff	prodl,??_Sys_Cyc+8
  4169  00002C  CFF4 F013          	movff	prodh,??_Sys_Cyc+9
  4170  000030  CFF6 F014          	movff	tblptrl,??_Sys_Cyc+10
  4171  000034  CFF7 F015          	movff	tblptrh,??_Sys_Cyc+11
  4172  000038  CFF8 F016          	movff	tblptru,??_Sys_Cyc+12
  4173  00003C  CFF5 F017          	movff	tablat,??_Sys_Cyc+13
  4174                           
  4175                           ;My_Timer.c: 101: static unsigned char _overturn_1Khz = 0,_overturn_LED = 0;
  4176                           ;My_Timer.c: 102: unsigned char _pulse = 10;
  4177  000040  0E0A               	movlw	10
  4178  000042  6E18               	movwf	Sys_Cyc@_pulse,c
  4179                           
  4180                           ;My_Timer.c: 103: static char _RS485_Receive_Byte;
  4181                           ;My_Timer.c: 104: static char _flag = 0;
  4182                           ;My_Timer.c: 105: unsigned char _temp;
  4183                           ;My_Timer.c: 107: if(TMR0IF && TMR0IE)
  4184  000044  B4F2               	btfsc	intcon,2,c	;volatile
  4185  000046  AAF2               	btfss	intcon,5,c	;volatile
  4186  000048  D05F               	goto	i2l2571
  4187                           
  4188                           ;My_Timer.c: 108: {
  4189                           ;My_Timer.c: 109: Timer_Cyc = (Timer_Cyc+1) % 100000000;
  4190  00004A  0E01               	movlw	1
  4191  00004C  2438               	addwf	_Timer_Cyc,w,c
  4192  00004E  6E01               	movwf	i2___llmod@dividend,c
  4193  000050  0E00               	movlw	0
  4194  000052  2039               	addwfc	_Timer_Cyc+1,w,c
  4195  000054  6E02               	movwf	i2___llmod@dividend+1,c
  4196  000056  0E00               	movlw	0
  4197  000058  203A               	addwfc	_Timer_Cyc+2,w,c
  4198  00005A  6E03               	movwf	i2___llmod@dividend+2,c
  4199  00005C  0E00               	movlw	0
  4200  00005E  203B               	addwfc	_Timer_Cyc+3,w,c
  4201  000060  6E04               	movwf	i2___llmod@dividend+3,c
  4202  000062  0E00               	movlw	0
  4203  000064  6E05               	movwf	i2___llmod@divisor,c
  4204  000066  0EE1               	movlw	225
  4205  000068  6E06               	movwf	i2___llmod@divisor+1,c
  4206  00006A  0EF5               	movlw	245
  4207  00006C  6E07               	movwf	i2___llmod@divisor+2,c
  4208  00006E  0E05               	movlw	5
  4209  000070  6E08               	movwf	i2___llmod@divisor+3,c
  4210  000072  EC3D  F00D         	call	i2___llmod	;wreg free
  4211  000076  C001  F038         	movff	?i2___llmod,_Timer_Cyc
  4212  00007A  C002  F039         	movff	?i2___llmod+1,_Timer_Cyc+1
  4213  00007E  C003  F03A         	movff	?i2___llmod+2,_Timer_Cyc+2
  4214  000082  C004  F03B         	movff	?i2___llmod+3,_Timer_Cyc+3
  4215                           
  4216                           ;My_Timer.c: 112: if( Handle_Switch._1Khz )
  4217  000086  5034               	movf	_Handle_Switch,w,c
  4218  000088  A4D8               	btfss	status,2,c
  4219  00008A  D00D               	goto	i2l2555
  4220  00008C  D012               	goto	i2l2557
  4221                           
  4222                           ;My_Timer.c: 113: {
  4223                           ;My_Timer.c: 114: while( _pulse-- )
  4224  00008E  D00B               	goto	i2l2555
  4225  000090                     i2l2547:
  4226                           
  4227                           ;My_Timer.c: 115: {
  4228                           ;My_Timer.c: 116: _overturn_1Khz =~ _overturn_1Khz;
  4229  000090  1E41               	comf	Sys_Cyc@_overturn_1Khz,f,c
  4230                           
  4231                           ;My_Timer.c: 117: if(_overturn_1Khz) PORTEbits.RE7 = 1; else PORTEbits.RE7 = 0;
  4232  000092  5041               	movf	Sys_Cyc@_overturn_1Khz,w,c
  4233  000094  B4D8               	btfsc	status,2,c
  4234  000096  D002               	goto	i2l244
  4235  000098  8E84               	bsf	3972,7,c	;volatile
  4236  00009A  D002               	goto	i2l2553
  4237  00009C                     i2l244:
  4238  00009C  9E84               	bcf	3972,7,c	;volatile
  4239  00009E  D000               	goto	i2l2553
  4240  0000A0                     i2l2553:
  4241                           
  4242                           ;My_Timer.c: 118: Delay_1Khz();
  4243  0000A0  ECCA  F00E         	call	_Delay_1Khz	;wreg free
  4244  0000A4  D000               	goto	i2l2555
  4245  0000A6                     i2l2555:
  4246  0000A6  0618               	decf	Sys_Cyc@_pulse,f,c
  4247  0000A8  2818               	incf	Sys_Cyc@_pulse,w,c
  4248  0000AA  B4D8               	btfsc	status,2,c
  4249  0000AC  D002               	goto	i2l2557
  4250  0000AE  D7F0               	goto	i2l2547
  4251  0000B0  D000               	goto	i2l2557
  4252  0000B2                     i2l2557:
  4253                           
  4254                           ;My_Timer.c: 119: }
  4255                           ;My_Timer.c: 120: }
  4256                           ;My_Timer.c: 123: if( Timer_Cyc%30 == 0 )
  4257  0000B2  C038  F001         	movff	_Timer_Cyc,i2___llmod@dividend
  4258  0000B6  C039  F002         	movff	_Timer_Cyc+1,i2___llmod@dividend+1
  4259  0000BA  C03A  F003         	movff	_Timer_Cyc+2,i2___llmod@dividend+2
  4260  0000BE  C03B  F004         	movff	_Timer_Cyc+3,i2___llmod@dividend+3
  4261  0000C2  0E1E               	movlw	30
  4262  0000C4  6E05               	movwf	i2___llmod@divisor,c
  4263  0000C6  0E00               	movlw	0
  4264  0000C8  6E06               	movwf	i2___llmod@divisor+1,c
  4265  0000CA  0E00               	movlw	0
  4266  0000CC  6E07               	movwf	i2___llmod@divisor+2,c
  4267  0000CE  0E00               	movlw	0
  4268  0000D0  6E08               	movwf	i2___llmod@divisor+3,c
  4269  0000D2  EC3D  F00D         	call	i2___llmod	;wreg free
  4270  0000D6  5001               	movf	?i2___llmod,w,c
  4271  0000D8  1002               	iorwf	?i2___llmod+1,w,c
  4272  0000DA  1003               	iorwf	?i2___llmod+2,w,c
  4273  0000DC  1004               	iorwf	?i2___llmod+3,w,c
  4274  0000DE  A4D8               	btfss	status,2,c
  4275  0000E0  D008               	goto	i2l2565
  4276                           
  4277                           ;My_Timer.c: 124: {
  4278                           ;My_Timer.c: 125: _overturn_LED = ~_overturn_LED;
  4279  0000E2  1E42               	comf	Sys_Cyc@_overturn_LED,f,c
  4280                           
  4281                           ;My_Timer.c: 126: if(_overturn_LED) PORTEbits.RE5=0;
  4282  0000E4  5042               	movf	Sys_Cyc@_overturn_LED,w,c
  4283  0000E6  B4D8               	btfsc	status,2,c
  4284  0000E8  D002               	goto	i2l248
  4285  0000EA  9A84               	bcf	3972,5,c	;volatile
  4286  0000EC  D002               	goto	i2l2565
  4287  0000EE                     i2l248:
  4288                           
  4289                           ;My_Timer.c: 127: else PORTEbits.RE5=1;
  4290  0000EE  8A84               	bsf	3972,5,c	;volatile
  4291  0000F0  D000               	goto	i2l2565
  4292  0000F2                     i2l2565:
  4293                           
  4294                           ;My_Timer.c: 128: }
  4295                           ;My_Timer.c: 131: Key_FSM_Scan();
  4296  0000F2  EC26  F00E         	call	_Key_FSM_Scan	;wreg free
  4297                           
  4298                           ;My_Timer.c: 134: Manage_Message();
  4299  0000F6  EC1C  F00B         	call	_Manage_Message	;wreg free
  4300                           
  4301                           ;My_Timer.c: 136: SetTimer0(78);
  4302  0000FA  0E00               	movlw	0
  4303  0000FC  6E02               	movwf	i2SetTimer0@_tmr+1,c
  4304  0000FE  0E4E               	movlw	78
  4305  000100  6E01               	movwf	i2SetTimer0@_tmr,c
  4306  000102  EC2F  F00F         	call	i2_SetTimer0	;wreg free
  4307  000106  D000               	goto	i2l2571
  4308  000108                     i2l2571:
  4309                           
  4310                           ;My_Timer.c: 137: }
  4311                           ;My_Timer.c: 140: if( RC2IF )
  4312  000108  AAA4               	btfss	4004,5,c	;volatile
  4313  00010A  D021               	goto	i2l254
  4314                           
  4315                           ;My_Timer.c: 141: {
  4316                           ;My_Timer.c: 142: _temp = RCREG2;
  4317  00010C  CF1D F019          	movff	3869,Sys_Cyc@_temp	;volatile
  4318                           
  4319                           ;My_Timer.c: 145: if( _temp == 0xaa )
  4320  000110  0EAA               	movlw	170
  4321  000112  1819               	xorwf	Sys_Cyc@_temp,w,c
  4322  000114  A4D8               	btfss	status,2,c
  4323  000116  D004               	goto	i2l251
  4324                           
  4325                           ;My_Timer.c: 146: {
  4326                           ;My_Timer.c: 147: _RS485_Receive_Byte = 10 ;
  4327  000118  0E0A               	movlw	10
  4328  00011A  6E3F               	movwf	Sys_Cyc@_RS485_Receive_Byte,c
  4329                           
  4330                           ;My_Timer.c: 148: _flag = 0;
  4331  00011C  0E00               	movlw	0
  4332  00011E  6E40               	movwf	Sys_Cyc@_flag,c
  4333  000120                     i2l251:
  4334                           
  4335                           ;My_Timer.c: 149: }
  4336                           ;My_Timer.c: 151: if ( _flag == 0 )
  4337  000120  5040               	movf	Sys_Cyc@_flag,w,c
  4338  000122  A4D8               	btfss	status,2,c
  4339  000124  D00C               	goto	i2l2583
  4340                           
  4341                           ;My_Timer.c: 152: {
  4342                           ;My_Timer.c: 153: _RS485_Receive_Byte -- ;
  4343  000126  063F               	decf	Sys_Cyc@_RS485_Receive_Byte,f,c
  4344                           
  4345                           ;My_Timer.c: 154: RS485_ReceiveBuff[ _RS485_Receive_Byte ] = _temp;
  4346  000128  503F               	movf	Sys_Cyc@_RS485_Receive_Byte,w,c
  4347  00012A  0D01               	mullw	1
  4348  00012C  0E8E               	movlw	low _RS485_ReceiveBuff
  4349  00012E  24F3               	addwf	prodl,w,c
  4350  000130  6ED9               	movwf	fsr2l,c
  4351  000132  0E00               	movlw	high _RS485_ReceiveBuff
  4352  000134  20F4               	addwfc	prodh,w,c
  4353  000136  6EDA               	movwf	fsr2h,c
  4354  000138  C019  FFDF         	movff	Sys_Cyc@_temp,indf2
  4355  00013C  D000               	goto	i2l2583
  4356  00013E                     i2l2583:
  4357                           
  4358                           ;My_Timer.c: 155: }
  4359                           ;My_Timer.c: 157: if( _RS485_Receive_Byte == 0 )
  4360  00013E  503F               	movf	Sys_Cyc@_RS485_Receive_Byte,w,c
  4361  000140  A4D8               	btfss	status,2,c
  4362  000142  D005               	goto	i2l254
  4363                           
  4364                           ;My_Timer.c: 158: {
  4365                           ;My_Timer.c: 159: RS485_Receive_Flag = 1 ;
  4366  000144  0E01               	movlw	1
  4367  000146  6E45               	movwf	_RS485_Receive_Flag,c
  4368                           
  4369                           ;My_Timer.c: 160: _flag = 1;
  4370  000148  0E01               	movlw	1
  4371  00014A  6E40               	movwf	Sys_Cyc@_flag,c
  4372  00014C  D000               	goto	i2l254
  4373  00014E                     i2l254:
  4374  00014E  C017  FFF5         	movff	??_Sys_Cyc+13,tablat
  4375  000152  C016  FFF8         	movff	??_Sys_Cyc+12,tblptru
  4376  000156  C015  FFF7         	movff	??_Sys_Cyc+11,tblptrh
  4377  00015A  C014  FFF6         	movff	??_Sys_Cyc+10,tblptrl
  4378  00015E  C013  FFF4         	movff	??_Sys_Cyc+9,prodh
  4379  000162  C012  FFF3         	movff	??_Sys_Cyc+8,prodl
  4380  000166  C011  FFDA         	movff	??_Sys_Cyc+7,fsr2h
  4381  00016A  C010  FFD9         	movff	??_Sys_Cyc+6,fsr2l
  4382  00016E  C00F  FFE2         	movff	??_Sys_Cyc+5,fsr1h
  4383  000172  C00E  FFE1         	movff	??_Sys_Cyc+4,fsr1l
  4384  000176  C00D  FFEA         	movff	??_Sys_Cyc+3,fsr0h
  4385  00017A  C00C  FFE9         	movff	??_Sys_Cyc+2,fsr0l
  4386  00017E  C00B  FFFB         	movff	??_Sys_Cyc+1,pclatu
  4387  000182  C00A  FFFA         	movff	??_Sys_Cyc,pclath
  4388  000186  0011               	retfie		f
  4389  000188                     __end_of_Sys_Cyc:
  4390                           	opt stack 0
  4391                           pclatu	equ	0xFFB
  4392                           pclath	equ	0xFFA
  4393                           tblptru	equ	0xFF8
  4394                           tblptrh	equ	0xFF7
  4395                           tblptrl	equ	0xFF6
  4396                           tablat	equ	0xFF5
  4397                           prodh	equ	0xFF4
  4398                           prodl	equ	0xFF3
  4399                           intcon	equ	0xFF2
  4400                           postinc0	equ	0xFEE
  4401                           fsr0h	equ	0xFEA
  4402                           fsr0l	equ	0xFE9
  4403                           wreg	equ	0xFE8
  4404                           fsr1h	equ	0xFE2
  4405                           fsr1l	equ	0xFE1
  4406                           indf2	equ	0xFDF
  4407                           postinc2	equ	0xFDE
  4408                           fsr2h	equ	0xFDA
  4409                           fsr2l	equ	0xFD9
  4410                           status	equ	0xFD8
  4411                           
  4412 ;; *************** function i2___llmod *****************
  4413 ;; Defined at:
  4414 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;  dividend        4    0[COMRAM] unsigned long 
  4417 ;;  divisor         4    4[COMRAM] unsigned long 
  4418 ;; Auto vars:     Size  Location     Type
  4419 ;;  __llmod         1    8[COMRAM] unsigned char 
  4420 ;; Return value:  Size  Location     Type
  4421 ;;                  4    0[COMRAM] unsigned long 
  4422 ;; Registers used:
  4423 ;;		wreg, status,2, status,0
  4424 ;; Tracked objects:
  4425 ;;		On entry : 0/0
  4426 ;;		On exit  : 0/0
  4427 ;;		Unchanged: 0/0
  4428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4429 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4430 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4432 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4433 ;;Total ram usage:        9 bytes
  4434 ;; Hardware stack levels used:    1
  4435 ;; This function calls:
  4436 ;;		Nothing
  4437 ;; This function is called by:
  4438 ;;		_Sys_Cyc
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442                           	psect	text34
  4443  001A7A                     __ptext34:
  4444                           	opt stack 0
  4445  001A7A                     i2___llmod:
  4446                           	opt stack 24
  4447                           
  4448                           ;incstack = 0
  4449  001A7A  5005               	movf	i2___llmod@divisor,w,c
  4450  001A7C  1006               	iorwf	i2___llmod@divisor+1,w,c
  4451  001A7E  1007               	iorwf	i2___llmod@divisor+2,w,c
  4452  001A80  1008               	iorwf	i2___llmod@divisor+3,w,c
  4453  001A82  B4D8               	btfsc	status,2,c
  4454  001A84  D029               	goto	i2l923
  4455  001A86  0E01               	movlw	1
  4456  001A88  6E09               	movwf	i2___llmod@counter,c
  4457  001A8A  D007               	goto	i2l2507
  4458  001A8C                     i2l2505:
  4459  001A8C  90D8               	bcf	status,0,c
  4460  001A8E  3605               	rlcf	i2___llmod@divisor,f,c
  4461  001A90  3606               	rlcf	i2___llmod@divisor+1,f,c
  4462  001A92  3607               	rlcf	i2___llmod@divisor+2,f,c
  4463  001A94  3608               	rlcf	i2___llmod@divisor+3,f,c
  4464  001A96  2A09               	incf	i2___llmod@counter,f,c
  4465  001A98  D000               	goto	i2l2507
  4466  001A9A                     i2l2507:
  4467  001A9A  BE08               	btfsc	i2___llmod@divisor+3,7,c
  4468  001A9C  D002               	goto	i2l2509
  4469  001A9E  D7F6               	goto	i2l2505
  4470  001AA0  D000               	goto	i2l2509
  4471  001AA2                     i2l2509:
  4472  001AA2  5005               	movf	i2___llmod@divisor,w,c
  4473  001AA4  5C01               	subwf	i2___llmod@dividend,w,c
  4474  001AA6  5006               	movf	i2___llmod@divisor+1,w,c
  4475  001AA8  5802               	subwfb	i2___llmod@dividend+1,w,c
  4476  001AAA  5007               	movf	i2___llmod@divisor+2,w,c
  4477  001AAC  5803               	subwfb	i2___llmod@dividend+2,w,c
  4478  001AAE  5008               	movf	i2___llmod@divisor+3,w,c
  4479  001AB0  5804               	subwfb	i2___llmod@dividend+3,w,c
  4480  001AB2  A0D8               	btfss	status,0,c
  4481  001AB4  D009               	goto	i2l2513
  4482  001AB6  5005               	movf	i2___llmod@divisor,w,c
  4483  001AB8  5E01               	subwf	i2___llmod@dividend,f,c
  4484  001ABA  5006               	movf	i2___llmod@divisor+1,w,c
  4485  001ABC  5A02               	subwfb	i2___llmod@dividend+1,f,c
  4486  001ABE  5007               	movf	i2___llmod@divisor+2,w,c
  4487  001AC0  5A03               	subwfb	i2___llmod@dividend+2,f,c
  4488  001AC2  5008               	movf	i2___llmod@divisor+3,w,c
  4489  001AC4  5A04               	subwfb	i2___llmod@dividend+3,f,c
  4490  001AC6  D000               	goto	i2l2513
  4491  001AC8                     i2l2513:
  4492  001AC8  90D8               	bcf	status,0,c
  4493  001ACA  3208               	rrcf	i2___llmod@divisor+3,f,c
  4494  001ACC  3207               	rrcf	i2___llmod@divisor+2,f,c
  4495  001ACE  3206               	rrcf	i2___llmod@divisor+1,f,c
  4496  001AD0  3205               	rrcf	i2___llmod@divisor,f,c
  4497  001AD2  2E09               	decfsz	i2___llmod@counter,f,c
  4498  001AD4  D7E6               	goto	i2l2509
  4499  001AD6  D000               	goto	i2l923
  4500  001AD8                     i2l923:
  4501  001AD8  C001  F001         	movff	i2___llmod@dividend,?i2___llmod
  4502  001ADC  C002  F002         	movff	i2___llmod@dividend+1,?i2___llmod+1
  4503  001AE0  C003  F003         	movff	i2___llmod@dividend+2,?i2___llmod+2
  4504  001AE4  C004  F004         	movff	i2___llmod@dividend+3,?i2___llmod+3
  4505  001AE8  0012               	return		;funcret
  4506  001AEA                     __end_ofi2___llmod:
  4507                           	opt stack 0
  4508                           pclatu	equ	0xFFB
  4509                           pclath	equ	0xFFA
  4510                           tblptru	equ	0xFF8
  4511                           tblptrh	equ	0xFF7
  4512                           tblptrl	equ	0xFF6
  4513                           tablat	equ	0xFF5
  4514                           prodh	equ	0xFF4
  4515                           prodl	equ	0xFF3
  4516                           intcon	equ	0xFF2
  4517                           postinc0	equ	0xFEE
  4518                           fsr0h	equ	0xFEA
  4519                           fsr0l	equ	0xFE9
  4520                           wreg	equ	0xFE8
  4521                           fsr1h	equ	0xFE2
  4522                           fsr1l	equ	0xFE1
  4523                           indf2	equ	0xFDF
  4524                           postinc2	equ	0xFDE
  4525                           fsr2h	equ	0xFDA
  4526                           fsr2l	equ	0xFD9
  4527                           status	equ	0xFD8
  4528                           
  4529 ;; *************** function i2_SetTimer0 *****************
  4530 ;; Defined at:
  4531 ;;		line 79 in file "_01_USER/My_Timer.c"
  4532 ;; Parameters:    Size  Location     Type
  4533 ;;  _tmr            2    0[COMRAM] unsigned int 
  4534 ;; Auto vars:     Size  Location     Type
  4535 ;;		None
  4536 ;; Return value:  Size  Location     Type
  4537 ;;		None               void
  4538 ;; Registers used:
  4539 ;;		wreg, status,2, status,0
  4540 ;; Tracked objects:
  4541 ;;		On entry : 0/0
  4542 ;;		On exit  : 0/0
  4543 ;;		Unchanged: 0/0
  4544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4545 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4547 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4548 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4549 ;;Total ram usage:        4 bytes
  4550 ;; Hardware stack levels used:    1
  4551 ;; This function calls:
  4552 ;;		Nothing
  4553 ;; This function is called by:
  4554 ;;		_Sys_Cyc
  4555 ;; This function uses a non-reentrant model
  4556 ;;
  4557                           
  4558                           	psect	text35
  4559  001E5E                     __ptext35:
  4560                           	opt stack 0
  4561  001E5E                     i2_SetTimer0:
  4562                           	opt stack 24
  4563                           
  4564                           ;My_Timer.c: 81: if(_tmr > 0xffff) _tmr = 0xffff;
  4565                           
  4566                           ;incstack = 0
  4567  001E5E  D003               	goto	i2l2493
  4568  001E60  6801               	setf	i2SetTimer0@_tmr,c
  4569  001E62  6802               	setf	i2SetTimer0@_tmr+1,c
  4570  001E64  D000               	goto	i2l2493
  4571  001E66                     i2l2493:
  4572                           
  4573                           ;My_Timer.c: 82: _tmr=0xffff-_tmr;
  4574  001E66  C001  F003         	movff	i2SetTimer0@_tmr,??i2_SetTimer0
  4575  001E6A  C002  F004         	movff	i2SetTimer0@_tmr+1,??i2_SetTimer0+1
  4576  001E6E  1E03               	comf	??i2_SetTimer0,f,c
  4577  001E70  1E04               	comf	??i2_SetTimer0+1,f,c
  4578  001E72  4A03               	infsnz	??i2_SetTimer0,f,c
  4579  001E74  2A04               	incf	??i2_SetTimer0+1,f,c
  4580  001E76  0EFF               	movlw	255
  4581  001E78  2403               	addwf	??i2_SetTimer0,w,c
  4582  001E7A  6E01               	movwf	i2SetTimer0@_tmr,c
  4583  001E7C  0EFF               	movlw	255
  4584  001E7E  2004               	addwfc	??i2_SetTimer0+1,w,c
  4585  001E80  6E02               	movwf	i2SetTimer0@_tmr+1,c
  4586                           
  4587                           ;My_Timer.c: 83: TMR0H = _tmr/256;
  4588  001E82  5002               	movf	i2SetTimer0@_tmr+1,w,c
  4589  001E84  6ED7               	movwf	4055,c	;volatile
  4590                           
  4591                           ;My_Timer.c: 84: TMR0L = _tmr%256;
  4592  001E86  C001  FFD6         	movff	i2SetTimer0@_tmr,4054	;volatile
  4593                           
  4594                           ;My_Timer.c: 85: TMR0IF = 0;
  4595  001E8A  94F2               	bcf	intcon,2,c	;volatile
  4596  001E8C  0012               	return		;funcret
  4597  001E8E                     __end_ofi2_SetTimer0:
  4598                           	opt stack 0
  4599                           pclatu	equ	0xFFB
  4600                           pclath	equ	0xFFA
  4601                           tblptru	equ	0xFF8
  4602                           tblptrh	equ	0xFF7
  4603                           tblptrl	equ	0xFF6
  4604                           tablat	equ	0xFF5
  4605                           prodh	equ	0xFF4
  4606                           prodl	equ	0xFF3
  4607                           intcon	equ	0xFF2
  4608                           postinc0	equ	0xFEE
  4609                           fsr0h	equ	0xFEA
  4610                           fsr0l	equ	0xFE9
  4611                           wreg	equ	0xFE8
  4612                           fsr1h	equ	0xFE2
  4613                           fsr1l	equ	0xFE1
  4614                           indf2	equ	0xFDF
  4615                           postinc2	equ	0xFDE
  4616                           fsr2h	equ	0xFDA
  4617                           fsr2l	equ	0xFD9
  4618                           status	equ	0xFD8
  4619                           
  4620 ;; *************** function _Manage_Message *****************
  4621 ;; Defined at:
  4622 ;;		line 49 in file "_01_USER/Run.c"
  4623 ;; Parameters:    Size  Location     Type
  4624 ;;		None
  4625 ;; Auto vars:     Size  Location     Type
  4626 ;;		None
  4627 ;; Return value:  Size  Location     Type
  4628 ;;		None               void
  4629 ;; Registers used:
  4630 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4631 ;; Tracked objects:
  4632 ;;		On entry : 0/0
  4633 ;;		On exit  : 0/0
  4634 ;;		Unchanged: 0/0
  4635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4640 ;;Total ram usage:        0 bytes
  4641 ;; Hardware stack levels used:    1
  4642 ;; Hardware stack levels required when called:    1
  4643 ;; This function calls:
  4644 ;;		_Key_FSM_Read
  4645 ;;		_Key_FSM_Reset
  4646 ;;		___lbmod
  4647 ;; This function is called by:
  4648 ;;		_Sys_Cyc
  4649 ;; This function uses a non-reentrant model
  4650 ;;
  4651                           
  4652                           	psect	text36
  4653  001638                     __ptext36:
  4654                           	opt stack 0
  4655  001638                     _Manage_Message:
  4656                           	opt stack 23
  4657                           
  4658                           ;Run.c: 51: Key_FSM_Read();
  4659                           
  4660                           ;incstack = 0
  4661  001638  EC09  F008         	call	_Key_FSM_Read	;wreg free
  4662                           
  4663                           ;Run.c: 53: if (Local_Key_User.key_state[5-1] == KEY_short) RS485_Num -- ;
  4664  00163C  0100               	movlb	0	; () banked
  4665  00163E  058D               	decf	(_Local_Key_User+17)& (0+255),w,b	;volatile
  4666  001640  A4D8               	btfss	status,2,c
  4667  001642  D002               	goto	i2l2443
  4668                           
  4669                           ; BSR set to: 0
  4670  001644  0644               	decf	_RS485_Num,f,c
  4671  001646  D000               	goto	i2l2443
  4672  001648                     i2l2443:
  4673                           
  4674                           ; BSR set to: 0
  4675                           ;Run.c: 54: if (Local_Key_User.key_state[5-1] == KEY_hold) RS485_Num -- ;
  4676  001648  0E03               	movlw	3
  4677  00164A  0100               	movlb	0	; () banked
  4678  00164C  198D               	xorwf	(_Local_Key_User+17)& (0+255),w,b	;volatile
  4679  00164E  A4D8               	btfss	status,2,c
  4680  001650  D002               	goto	i2l2447
  4681                           
  4682                           ; BSR set to: 0
  4683  001652  0644               	decf	_RS485_Num,f,c
  4684  001654  D000               	goto	i2l2447
  4685  001656                     i2l2447:
  4686                           
  4687                           ; BSR set to: 0
  4688                           ;Run.c: 57: if (Local_Key_User.key_state[3-1] == KEY_short) RS485_Num ++ ;
  4689  001656  0100               	movlb	0	; () banked
  4690  001658  058B               	decf	(_Local_Key_User+15)& (0+255),w,b	;volatile
  4691  00165A  A4D8               	btfss	status,2,c
  4692  00165C  D002               	goto	i2l2451
  4693                           
  4694                           ; BSR set to: 0
  4695  00165E  2A44               	incf	_RS485_Num,f,c
  4696  001660  D000               	goto	i2l2451
  4697  001662                     i2l2451:
  4698                           
  4699                           ; BSR set to: 0
  4700                           ;Run.c: 58: if (Local_Key_User.key_state[3-1] == KEY_hold) RS485_Num ++ ;
  4701  001662  0E03               	movlw	3
  4702  001664  0100               	movlb	0	; () banked
  4703  001666  198B               	xorwf	(_Local_Key_User+15)& (0+255),w,b	;volatile
  4704  001668  A4D8               	btfss	status,2,c
  4705  00166A  D002               	goto	i2l2455
  4706                           
  4707                           ; BSR set to: 0
  4708  00166C  2A44               	incf	_RS485_Num,f,c
  4709  00166E  D000               	goto	i2l2455
  4710  001670                     i2l2455:
  4711                           
  4712                           ; BSR set to: 0
  4713                           ;Run.c: 60: if( RS485_Num > 250 ) RS485_Num = 10 - 1;
  4714  001670  0EFA               	movlw	250
  4715  001672  6444               	cpfsgt	_RS485_Num,c
  4716  001674  D002               	goto	i2l2459
  4717                           
  4718                           ; BSR set to: 0
  4719  001676  0E09               	movlw	9
  4720  001678  D005               	goto	L1
  4721  00167A                     i2l2459:
  4722                           
  4723                           ; BSR set to: 0
  4724                           ;Run.c: 61: else RS485_Num %= 10;
  4725  00167A  0E0A               	movlw	10
  4726  00167C  6E01               	movwf	___lbmod@divisor,c
  4727  00167E  5044               	movf	_RS485_Num,w,c
  4728  001680  ECE6  F00E         	call	___lbmod
  4729  001684                     L1:
  4730  001684  6E44               	movwf	_RS485_Num,c
  4731  001686  D000               	goto	i2l2461
  4732  001688                     i2l2461:
  4733                           
  4734                           ;Run.c: 64: if (Local_Key_User.key_state[4-1] == KEY_short) RS485_SendBuff[RS485_Num] ++
      +                           ;
  4735  001688  0100               	movlb	0	; () banked
  4736  00168A  058C               	decf	(_Local_Key_User+16)& (0+255),w,b	;volatile
  4737  00168C  A4D8               	btfss	status,2,c
  4738  00168E  D00A               	goto	i2l2465
  4739                           
  4740                           ; BSR set to: 0
  4741  001690  5044               	movf	_RS485_Num,w,c
  4742  001692  0D01               	mullw	1
  4743  001694  0E98               	movlw	low _RS485_SendBuff
  4744  001696  24F3               	addwf	prodl,w,c
  4745  001698  6ED9               	movwf	fsr2l,c
  4746  00169A  0E00               	movlw	high _RS485_SendBuff
  4747  00169C  20F4               	addwfc	prodh,w,c
  4748  00169E  6EDA               	movwf	fsr2h,c
  4749  0016A0  2ADF               	incf	indf2,f,c
  4750  0016A2  D000               	goto	i2l2465
  4751  0016A4                     i2l2465:
  4752                           
  4753                           ; BSR set to: 0
  4754                           ;Run.c: 65: if (Local_Key_User.key_state[4-1] == KEY_hold) RS485_SendBuff[RS485_Num] ++ 
      +                          ;
  4755  0016A4  0E03               	movlw	3
  4756  0016A6  0100               	movlb	0	; () banked
  4757  0016A8  198C               	xorwf	(_Local_Key_User+16)& (0+255),w,b	;volatile
  4758  0016AA  A4D8               	btfss	status,2,c
  4759  0016AC  D00A               	goto	i2l2469
  4760                           
  4761                           ; BSR set to: 0
  4762  0016AE  5044               	movf	_RS485_Num,w,c
  4763  0016B0  0D01               	mullw	1
  4764  0016B2  0E98               	movlw	low _RS485_SendBuff
  4765  0016B4  24F3               	addwf	prodl,w,c
  4766  0016B6  6ED9               	movwf	fsr2l,c
  4767  0016B8  0E00               	movlw	high _RS485_SendBuff
  4768  0016BA  20F4               	addwfc	prodh,w,c
  4769  0016BC  6EDA               	movwf	fsr2h,c
  4770  0016BE  2ADF               	incf	indf2,f,c
  4771  0016C0  D000               	goto	i2l2469
  4772  0016C2                     i2l2469:
  4773                           
  4774                           ; BSR set to: 0
  4775                           ;Run.c: 68: if (Local_Key_User.key_state[2-1] == KEY_short) RS485_SendBuff[RS485_Num] --
      +                           ;
  4776  0016C2  0100               	movlb	0	; () banked
  4777  0016C4  058A               	decf	(_Local_Key_User+14)& (0+255),w,b	;volatile
  4778  0016C6  A4D8               	btfss	status,2,c
  4779  0016C8  D00A               	goto	i2l2473
  4780                           
  4781                           ; BSR set to: 0
  4782  0016CA  5044               	movf	_RS485_Num,w,c
  4783  0016CC  0D01               	mullw	1
  4784  0016CE  0E98               	movlw	low _RS485_SendBuff
  4785  0016D0  24F3               	addwf	prodl,w,c
  4786  0016D2  6ED9               	movwf	fsr2l,c
  4787  0016D4  0E00               	movlw	high _RS485_SendBuff
  4788  0016D6  20F4               	addwfc	prodh,w,c
  4789  0016D8  6EDA               	movwf	fsr2h,c
  4790  0016DA  06DF               	decf	indf2,f,c
  4791  0016DC  D000               	goto	i2l2473
  4792  0016DE                     i2l2473:
  4793                           
  4794                           ; BSR set to: 0
  4795                           ;Run.c: 69: if (Local_Key_User.key_state[2-1] == KEY_hold) RS485_SendBuff[RS485_Num] -- 
      +                          ;
  4796  0016DE  0E03               	movlw	3
  4797  0016E0  0100               	movlb	0	; () banked
  4798  0016E2  198A               	xorwf	(_Local_Key_User+14)& (0+255),w,b	;volatile
  4799  0016E4  A4D8               	btfss	status,2,c
  4800  0016E6  D00A               	goto	i2l2477
  4801                           
  4802                           ; BSR set to: 0
  4803  0016E8  5044               	movf	_RS485_Num,w,c
  4804  0016EA  0D01               	mullw	1
  4805  0016EC  0E98               	movlw	low _RS485_SendBuff
  4806  0016EE  24F3               	addwf	prodl,w,c
  4807  0016F0  6ED9               	movwf	fsr2l,c
  4808  0016F2  0E00               	movlw	high _RS485_SendBuff
  4809  0016F4  20F4               	addwfc	prodh,w,c
  4810  0016F6  6EDA               	movwf	fsr2h,c
  4811  0016F8  06DF               	decf	indf2,f,c
  4812  0016FA  D000               	goto	i2l2477
  4813  0016FC                     i2l2477:
  4814                           
  4815                           ; BSR set to: 0
  4816                           ;Run.c: 74: if (Local_Key_User.key_state[1-1] == KEY_short) Handle_Switch.Usart_OneDate 
      +                          = 1 ;
  4817  0016FC  0100               	movlb	0	; () banked
  4818  0016FE  0589               	decf	(_Local_Key_User+13)& (0+255),w,b	;volatile
  4819  001700  A4D8               	btfss	status,2,c
  4820  001702  D003               	goto	i2l2481
  4821                           
  4822                           ; BSR set to: 0
  4823  001704  0E01               	movlw	1
  4824  001706  6E36               	movwf	_Handle_Switch+2,c
  4825  001708  D000               	goto	i2l2481
  4826  00170A                     i2l2481:
  4827                           
  4828                           ; BSR set to: 0
  4829                           ;Run.c: 77: if ( Local_Key_User.key_group == ((0x01<<1)|(0x01<<3)) && Local_Key_User.key
      +                          _group_state == KEY_short ) Handle_Switch.Show_Send_Receive = ~Handle_Switch.Show_Send_R
      +                          eceive ;
  4830  00170A  0E0A               	movlw	10
  4831  00170C  0100               	movlb	0	; () banked
  4832  00170E  197D               	xorwf	(_Local_Key_User+1)& (0+255),w,b	;volatile
  4833  001710  A4D8               	btfss	status,2,c
  4834  001712  D008               	goto	i2l2487
  4835                           
  4836                           ; BSR set to: 0
  4837  001714  0100               	movlb	0	; () banked
  4838  001716  057E               	decf	(_Local_Key_User+2)& (0+255),w,b	;volatile
  4839  001718  A4D8               	btfss	status,2,c
  4840  00171A  D004               	goto	i2l2487
  4841                           
  4842                           ; BSR set to: 0
  4843  00171C  5037               	movf	_Handle_Switch+3,w,c
  4844  00171E  0AFF               	xorlw	255
  4845  001720  6E37               	movwf	_Handle_Switch+3,c
  4846  001722  D000               	goto	i2l2487
  4847  001724                     i2l2487:
  4848                           
  4849                           ; BSR set to: 0
  4850                           ;Run.c: 79: Key_FSM_Reset();
  4851  001724  EC4C  F00E         	call	_Key_FSM_Reset	;wreg free
  4852  001728  0012               	return		;funcret
  4853  00172A                     __end_of_Manage_Message:
  4854                           	opt stack 0
  4855                           pclatu	equ	0xFFB
  4856                           pclath	equ	0xFFA
  4857                           tblptru	equ	0xFF8
  4858                           tblptrh	equ	0xFF7
  4859                           tblptrl	equ	0xFF6
  4860                           tablat	equ	0xFF5
  4861                           prodh	equ	0xFF4
  4862                           prodl	equ	0xFF3
  4863                           intcon	equ	0xFF2
  4864                           postinc0	equ	0xFEE
  4865                           fsr0h	equ	0xFEA
  4866                           fsr0l	equ	0xFE9
  4867                           wreg	equ	0xFE8
  4868                           fsr1h	equ	0xFE2
  4869                           fsr1l	equ	0xFE1
  4870                           indf2	equ	0xFDF
  4871                           postinc2	equ	0xFDE
  4872                           fsr2h	equ	0xFDA
  4873                           fsr2l	equ	0xFD9
  4874                           status	equ	0xFD8
  4875                           
  4876 ;; *************** function ___lbmod *****************
  4877 ;; Defined at:
  4878 ;;		line 4 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbmod.c"
  4879 ;; Parameters:    Size  Location     Type
  4880 ;;  dividend        1    wreg     unsigned char 
  4881 ;;  divisor         1    0[COMRAM] unsigned char 
  4882 ;; Auto vars:     Size  Location     Type
  4883 ;;  dividend        1    1[COMRAM] unsigned char 
  4884 ;;  rem             1    3[COMRAM] unsigned char 
  4885 ;;  counter         1    2[COMRAM] unsigned char 
  4886 ;; Return value:  Size  Location     Type
  4887 ;;                  1    wreg      unsigned char 
  4888 ;; Registers used:
  4889 ;;		wreg, status,2, status,0
  4890 ;; Tracked objects:
  4891 ;;		On entry : 0/0
  4892 ;;		On exit  : 0/0
  4893 ;;		Unchanged: 0/0
  4894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4895 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4896 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4898 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4899 ;;Total ram usage:        4 bytes
  4900 ;; Hardware stack levels used:    1
  4901 ;; This function calls:
  4902 ;;		Nothing
  4903 ;; This function is called by:
  4904 ;;		_Manage_Message
  4905 ;; This function uses a non-reentrant model
  4906 ;;
  4907                           
  4908                           	psect	text37
  4909  001DCC                     __ptext37:
  4910                           	opt stack 0
  4911  001DCC                     ___lbmod:
  4912                           	opt stack 23
  4913                           
  4914                           ;incstack = 0
  4915                           ;___lbmod@dividend stored from wreg
  4916  001DCC  6E02               	movwf	___lbmod@dividend,c
  4917  001DCE  0E08               	movlw	8
  4918  001DD0  6E03               	movwf	___lbmod@counter,c
  4919  001DD2  0E00               	movlw	0
  4920  001DD4  6E04               	movwf	___lbmod@rem,c
  4921  001DD6  D000               	goto	i2l2325
  4922  001DD8                     i2l2325:
  4923  001DD8  90D8               	bcf	status,0,c
  4924  001DDA  3402               	rlcf	___lbmod@dividend,w,c
  4925  001DDC  3404               	rlcf	___lbmod@rem,w,c
  4926  001DDE  6E04               	movwf	___lbmod@rem,c
  4927  001DE0  90D8               	bcf	status,0,c
  4928  001DE2  3602               	rlcf	___lbmod@dividend,f,c
  4929  001DE4  5001               	movf	___lbmod@divisor,w,c
  4930  001DE6  5C04               	subwf	___lbmod@rem,w,c
  4931  001DE8  A0D8               	btfss	status,0,c
  4932  001DEA  D003               	goto	i2l2333
  4933  001DEC  5001               	movf	___lbmod@divisor,w,c
  4934  001DEE  5E04               	subwf	___lbmod@rem,f,c
  4935  001DF0  D000               	goto	i2l2333
  4936  001DF2                     i2l2333:
  4937  001DF2  2E03               	decfsz	___lbmod@counter,f,c
  4938  001DF4  D7F1               	goto	i2l2325
  4939  001DF6  D000               	goto	i2l2335
  4940  001DF8                     i2l2335:
  4941  001DF8  5004               	movf	___lbmod@rem,w,c
  4942  001DFA  0012               	return	
  4943  001DFC  0012               	return		;funcret
  4944  001DFE                     __end_of___lbmod:
  4945                           	opt stack 0
  4946                           pclatu	equ	0xFFB
  4947                           pclath	equ	0xFFA
  4948                           tblptru	equ	0xFF8
  4949                           tblptrh	equ	0xFF7
  4950                           tblptrl	equ	0xFF6
  4951                           tablat	equ	0xFF5
  4952                           prodh	equ	0xFF4
  4953                           prodl	equ	0xFF3
  4954                           intcon	equ	0xFF2
  4955                           postinc0	equ	0xFEE
  4956                           fsr0h	equ	0xFEA
  4957                           fsr0l	equ	0xFE9
  4958                           wreg	equ	0xFE8
  4959                           fsr1h	equ	0xFE2
  4960                           fsr1l	equ	0xFE1
  4961                           indf2	equ	0xFDF
  4962                           postinc2	equ	0xFDE
  4963                           fsr2h	equ	0xFDA
  4964                           fsr2l	equ	0xFD9
  4965                           status	equ	0xFD8
  4966                           
  4967 ;; *************** function _Key_FSM_Reset *****************
  4968 ;; Defined at:
  4969 ;;		line 148 in file "_01_USER/Key.c"
  4970 ;; Parameters:    Size  Location     Type
  4971 ;;		None
  4972 ;; Auto vars:     Size  Location     Type
  4973 ;;  t               1    0[COMRAM] unsigned char 
  4974 ;; Return value:  Size  Location     Type
  4975 ;;		None               void
  4976 ;; Registers used:
  4977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4978 ;; Tracked objects:
  4979 ;;		On entry : 0/0
  4980 ;;		On exit  : 0/0
  4981 ;;		Unchanged: 0/0
  4982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4984 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4986 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4987 ;;Total ram usage:        1 bytes
  4988 ;; Hardware stack levels used:    1
  4989 ;; This function calls:
  4990 ;;		Nothing
  4991 ;; This function is called by:
  4992 ;;		_Manage_Message
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996                           	psect	text38
  4997  001C98                     __ptext38:
  4998                           	opt stack 0
  4999  001C98                     _Key_FSM_Reset:
  5000                           	opt stack 23
  5001                           
  5002                           ;Key.c: 150: unsigned char t;
  5003                           ;Key.c: 151: Local_Key_User.key_BUS = 0x00;
  5004                           
  5005                           ;incstack = 0
  5006  001C98  0E00               	movlw	0
  5007  001C9A  0100               	movlb	0	; () banked
  5008  001C9C  6F7C               	movwf	_Local_Key_User& (0+255),b	;volatile
  5009                           
  5010                           ;Key.c: 152: Local_Key_User.key_group = KEY_default;
  5011  001C9E  0E00               	movlw	0
  5012  001CA0  0100               	movlb	0	; () banked
  5013  001CA2  6F7D               	movwf	(_Local_Key_User+1)& (0+255),b	;volatile
  5014                           
  5015                           ;Key.c: 153: t=4;
  5016  001CA4  0E04               	movlw	4
  5017  001CA6  6E01               	movwf	Key_FSM_Reset@t,c
  5018                           
  5019                           ;Key.c: 154: while(t--) Local_Key_User.key_count[t] = 0,
  5020  001CA8  D017               	goto	i2l2227
  5021  001CAA                     i2l2225:
  5022                           
  5023                           ;Key.c: 155: Local_Key_User.key_state[t] = KEY_default;
  5024  001CAA  5001               	movf	Key_FSM_Reset@t,w,c
  5025  001CAC  0D02               	mullw	2
  5026  001CAE  0E7F               	movlw	low (_Local_Key_User+3)
  5027  001CB0  24F3               	addwf	prodl,w,c
  5028  001CB2  6ED9               	movwf	fsr2l,c
  5029  001CB4  0E00               	movlw	high (_Local_Key_User+3)
  5030  001CB6  20F4               	addwfc	prodh,w,c
  5031  001CB8  6EDA               	movwf	fsr2h,c
  5032  001CBA  0E00               	movlw	0
  5033  001CBC  6EDE               	movwf	postinc2,c
  5034  001CBE  0E00               	movlw	0
  5035  001CC0  6EDD               	movwf	postdec2,c
  5036  001CC2  5001               	movf	Key_FSM_Reset@t,w,c
  5037  001CC4  0D01               	mullw	1
  5038  001CC6  0E89               	movlw	low (_Local_Key_User+13)
  5039  001CC8  24F3               	addwf	prodl,w,c
  5040  001CCA  6ED9               	movwf	fsr2l,c
  5041  001CCC  0E00               	movlw	high (_Local_Key_User+13)
  5042  001CCE  20F4               	addwfc	prodh,w,c
  5043  001CD0  6EDA               	movwf	fsr2h,c
  5044  001CD2  0E00               	movlw	0
  5045  001CD4  6EDF               	movwf	indf2,c
  5046  001CD6  D000               	goto	i2l2227
  5047  001CD8                     i2l2227:
  5048  001CD8  0601               	decf	Key_FSM_Reset@t,f,c
  5049  001CDA  2801               	incf	Key_FSM_Reset@t,w,c
  5050  001CDC  A4D8               	btfss	status,2,c
  5051  001CDE  D7E5               	goto	i2l2225
  5052  001CE0  0012               	return		;funcret
  5053  001CE2                     __end_of_Key_FSM_Reset:
  5054                           	opt stack 0
  5055                           pclatu	equ	0xFFB
  5056                           pclath	equ	0xFFA
  5057                           tblptru	equ	0xFF8
  5058                           tblptrh	equ	0xFF7
  5059                           tblptrl	equ	0xFF6
  5060                           tablat	equ	0xFF5
  5061                           prodh	equ	0xFF4
  5062                           prodl	equ	0xFF3
  5063                           intcon	equ	0xFF2
  5064                           postinc0	equ	0xFEE
  5065                           fsr0h	equ	0xFEA
  5066                           fsr0l	equ	0xFE9
  5067                           wreg	equ	0xFE8
  5068                           fsr1h	equ	0xFE2
  5069                           fsr1l	equ	0xFE1
  5070                           indf2	equ	0xFDF
  5071                           postinc2	equ	0xFDE
  5072                           postdec2	equ	0xFDD
  5073                           fsr2h	equ	0xFDA
  5074                           fsr2l	equ	0xFD9
  5075                           status	equ	0xFD8
  5076                           
  5077 ;; *************** function _Key_FSM_Read *****************
  5078 ;; Defined at:
  5079 ;;		line 98 in file "_01_USER/Key.c"
  5080 ;; Parameters:    Size  Location     Type
  5081 ;;		None
  5082 ;; Auto vars:     Size  Location     Type
  5083 ;;  key_num         1    5[COMRAM] unsigned char 
  5084 ;;  key_num_mate    1    4[COMRAM] unsigned char 
  5085 ;; Return value:  Size  Location     Type
  5086 ;;		None               void
  5087 ;; Registers used:
  5088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5089 ;; Tracked objects:
  5090 ;;		On entry : 0/0
  5091 ;;		On exit  : 0/0
  5092 ;;		Unchanged: 0/0
  5093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5095 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5096 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5097 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5098 ;;Total ram usage:        6 bytes
  5099 ;; Hardware stack levels used:    1
  5100 ;; This function calls:
  5101 ;;		Nothing
  5102 ;; This function is called by:
  5103 ;;		_Manage_Message
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106                           
  5107                           	psect	text39
  5108  001012                     __ptext39:
  5109                           	opt stack 0
  5110  001012                     _Key_FSM_Read:
  5111                           	opt stack 23
  5112                           
  5113                           ;Key.c: 100: unsigned char key_num = 5,key_num_mate;
  5114                           
  5115                           ;incstack = 0
  5116  001012  0E05               	movlw	5
  5117  001014  6E06               	movwf	Key_FSM_Read@key_num,c
  5118                           
  5119                           ;Key.c: 103: while(key_num--)
  5120  001016  D072               	goto	i2l2195
  5121  001018                     i2l2177:
  5122                           
  5123                           ;Key.c: 104: {
  5124                           ;Key.c: 106: if( Local_Key_FSM.key_BUS == 0x00 )
  5125  001018  0100               	movlb	0	; () banked
  5126  00101A  516A               	movf	_Local_Key_FSM& (0+255),w,b	;volatile
  5127  00101C  A4D8               	btfss	status,2,c
  5128  00101E  D04A               	goto	i2l2189
  5129                           
  5130                           ; BSR set to: 0
  5131                           ;Key.c: 107: {
  5132                           ;Key.c: 108: if( Local_Key_FSM.key_count[key_num] > 5 )
  5133  001020  5006               	movf	Key_FSM_Read@key_num,w,c
  5134  001022  0D02               	mullw	2
  5135  001024  0E6D               	movlw	low (_Local_Key_FSM+3)
  5136  001026  24F3               	addwf	prodl,w,c
  5137  001028  6ED9               	movwf	fsr2l,c
  5138  00102A  0E00               	movlw	high (_Local_Key_FSM+3)
  5139  00102C  20F4               	addwfc	prodh,w,c
  5140  00102E  6EDA               	movwf	fsr2h,c
  5141  001030  0E01               	movlw	1
  5142  001032  50DB               	movf	plusw2,w,c
  5143  001034  E104               	bnz	i2u176_40
  5144  001036  0E06               	movlw	6
  5145  001038  5CDE               	subwf	postinc2,w,c
  5146  00103A  A0D8               	btfss	status,0,c
  5147  00103C  D024               	goto	i2l2187
  5148  00103E                     i2u176_40:
  5149                           
  5150                           ; BSR set to: 0
  5151                           ;Key.c: 109: {
  5152                           ;Key.c: 110: if( Local_Key_FSM.key_count[key_num] > 60 )
  5153  00103E  5006               	movf	Key_FSM_Read@key_num,w,c
  5154  001040  0D02               	mullw	2
  5155  001042  0E6D               	movlw	low (_Local_Key_FSM+3)
  5156  001044  24F3               	addwf	prodl,w,c
  5157  001046  6ED9               	movwf	fsr2l,c
  5158  001048  0E00               	movlw	high (_Local_Key_FSM+3)
  5159  00104A  20F4               	addwfc	prodh,w,c
  5160  00104C  6EDA               	movwf	fsr2h,c
  5161  00104E  0E01               	movlw	1
  5162  001050  50DB               	movf	plusw2,w,c
  5163  001052  E104               	bnz	i2u177_40
  5164  001054  0E3D               	movlw	61
  5165  001056  5CDE               	subwf	postinc2,w,c
  5166  001058  A0D8               	btfss	status,0,c
  5167  00105A  D00A               	goto	i2l2185
  5168  00105C                     i2u177_40:
  5169                           
  5170                           ; BSR set to: 0
  5171                           ;Key.c: 111: Local_Key_User.key_state[key_num] = KEY_long;
  5172  00105C  5006               	movf	Key_FSM_Read@key_num,w,c
  5173  00105E  0D01               	mullw	1
  5174  001060  0E89               	movlw	low (_Local_Key_User+13)
  5175  001062  24F3               	addwf	prodl,w,c
  5176  001064  6ED9               	movwf	fsr2l,c
  5177  001066  0E00               	movlw	high (_Local_Key_User+13)
  5178  001068  20F4               	addwfc	prodh,w,c
  5179  00106A  6EDA               	movwf	fsr2h,c
  5180  00106C  0E05               	movlw	5
  5181  00106E  D014               	goto	L2
  5182  001070                     i2l2185:
  5183                           
  5184                           ; BSR set to: 0
  5185                           ;Key.c: 112: else Local_Key_User.key_state[key_num] = KEY_short;
  5186  001070  5006               	movf	Key_FSM_Read@key_num,w,c
  5187  001072  0D01               	mullw	1
  5188  001074  0E89               	movlw	low (_Local_Key_User+13)
  5189  001076  24F3               	addwf	prodl,w,c
  5190  001078  6ED9               	movwf	fsr2l,c
  5191  00107A  0E00               	movlw	high (_Local_Key_User+13)
  5192  00107C  20F4               	addwfc	prodh,w,c
  5193  00107E  6EDA               	movwf	fsr2h,c
  5194  001080  0E01               	movlw	1
  5195  001082  6EDF               	movwf	indf2,c
  5196                           
  5197                           ; BSR set to: 0
  5198                           ;Key.c: 113: }
  5199  001084  D00A               	goto	i2l111
  5200  001086                     i2l2187:
  5201                           
  5202                           ; BSR set to: 0
  5203                           ;Key.c: 114: else Local_Key_User.key_state[key_num] = KEY_default;
  5204  001086  5006               	movf	Key_FSM_Read@key_num,w,c
  5205  001088  0D01               	mullw	1
  5206  00108A  0E89               	movlw	low (_Local_Key_User+13)
  5207  00108C  24F3               	addwf	prodl,w,c
  5208  00108E  6ED9               	movwf	fsr2l,c
  5209  001090  0E00               	movlw	high (_Local_Key_User+13)
  5210  001092  20F4               	addwfc	prodh,w,c
  5211  001094  6EDA               	movwf	fsr2h,c
  5212  001096  0E00               	movlw	0
  5213  001098                     L2:
  5214  001098  6EDF               	movwf	indf2,c
  5215  00109A                     i2l111:
  5216                           
  5217                           ; BSR set to: 0
  5218                           ;Key.c: 115: Local_Key_FSM.key_count[key_num] = 0;
  5219  00109A  5006               	movf	Key_FSM_Read@key_num,w,c
  5220  00109C  0D02               	mullw	2
  5221  00109E  0E6D               	movlw	low (_Local_Key_FSM+3)
  5222  0010A0  24F3               	addwf	prodl,w,c
  5223  0010A2  6ED9               	movwf	fsr2l,c
  5224  0010A4  0E00               	movlw	high (_Local_Key_FSM+3)
  5225  0010A6  20F4               	addwfc	prodh,w,c
  5226  0010A8  6EDA               	movwf	fsr2h,c
  5227  0010AA  0E00               	movlw	0
  5228  0010AC  6EDE               	movwf	postinc2,c
  5229  0010AE  0E00               	movlw	0
  5230  0010B0  6EDD               	movwf	postdec2,c
  5231                           
  5232                           ;Key.c: 116: }
  5233  0010B2  D024               	goto	i2l2195
  5234  0010B4                     i2l2189:
  5235                           
  5236                           ; BSR set to: 0
  5237                           ;Key.c: 118: else if( Local_Key_FSM.key_count[key_num] > 60 )
  5238  0010B4  5006               	movf	Key_FSM_Read@key_num,w,c
  5239  0010B6  0D02               	mullw	2
  5240  0010B8  0E6D               	movlw	low (_Local_Key_FSM+3)
  5241  0010BA  24F3               	addwf	prodl,w,c
  5242  0010BC  6ED9               	movwf	fsr2l,c
  5243  0010BE  0E00               	movlw	high (_Local_Key_FSM+3)
  5244  0010C0  20F4               	addwfc	prodh,w,c
  5245  0010C2  6EDA               	movwf	fsr2h,c
  5246  0010C4  0E01               	movlw	1
  5247  0010C6  50DB               	movf	plusw2,w,c
  5248  0010C8  E104               	bnz	i2u178_40
  5249  0010CA  0E3D               	movlw	61
  5250  0010CC  5CDE               	subwf	postinc2,w,c
  5251  0010CE  A0D8               	btfss	status,0,c
  5252  0010D0  D00A               	goto	i2l2193
  5253  0010D2                     i2u178_40:
  5254                           
  5255                           ; BSR set to: 0
  5256                           ;Key.c: 119: Local_Key_User.key_state[key_num] = KEY_hold;
  5257  0010D2  5006               	movf	Key_FSM_Read@key_num,w,c
  5258  0010D4  0D01               	mullw	1
  5259  0010D6  0E89               	movlw	low (_Local_Key_User+13)
  5260  0010D8  24F3               	addwf	prodl,w,c
  5261  0010DA  6ED9               	movwf	fsr2l,c
  5262  0010DC  0E00               	movlw	high (_Local_Key_User+13)
  5263  0010DE  20F4               	addwfc	prodh,w,c
  5264  0010E0  6EDA               	movwf	fsr2h,c
  5265  0010E2  0E03               	movlw	3
  5266  0010E4  D009               	goto	L3
  5267  0010E6                     i2l2193:
  5268                           
  5269                           ; BSR set to: 0
  5270                           ;Key.c: 122: else Local_Key_User.key_state[key_num] = KEY_busy;
  5271  0010E6  5006               	movf	Key_FSM_Read@key_num,w,c
  5272  0010E8  0D01               	mullw	1
  5273  0010EA  0E89               	movlw	low (_Local_Key_User+13)
  5274  0010EC  24F3               	addwf	prodl,w,c
  5275  0010EE  6ED9               	movwf	fsr2l,c
  5276  0010F0  0E00               	movlw	high (_Local_Key_User+13)
  5277  0010F2  20F4               	addwfc	prodh,w,c
  5278  0010F4  6EDA               	movwf	fsr2h,c
  5279  0010F6  0E04               	movlw	4
  5280  0010F8                     L3:
  5281  0010F8  6EDF               	movwf	indf2,c
  5282                           
  5283                           ; BSR set to: 0
  5284                           
  5285                           ; BSR set to: 0
  5286  0010FA  D000               	goto	i2l2195
  5287  0010FC                     i2l2195:
  5288  0010FC  0606               	decf	Key_FSM_Read@key_num,f,c
  5289  0010FE  2806               	incf	Key_FSM_Read@key_num,w,c
  5290  001100  A4D8               	btfss	status,2,c
  5291  001102  D78A               	goto	i2l2177
  5292                           
  5293                           ;Key.c: 123: }
  5294                           ;Key.c: 127: for( key_num = 0;key_num < 5 - 1; key_num ++)
  5295  001104  0E00               	movlw	0
  5296  001106  6E06               	movwf	Key_FSM_Read@key_num,c
  5297  001108  0E03               	movlw	3
  5298  00110A  6406               	cpfsgt	Key_FSM_Read@key_num,c
  5299  00110C  D002               	goto	i2l2203
  5300  00110E  0012               	return	
  5301  001110  0012               	return	
  5302  001112                     i2l2203:
  5303                           
  5304                           ;Key.c: 128: for( key_num_mate = key_num+1;key_num_mate < 5 ; key_num_mate ++)
  5305  001112  2806               	incf	Key_FSM_Read@key_num,w,c
  5306  001114  6E05               	movwf	Key_FSM_Read@key_num_mate,c
  5307  001116  0E04               	movlw	4
  5308  001118  6405               	cpfsgt	Key_FSM_Read@key_num_mate,c
  5309  00111A  D001               	goto	i2l2207
  5310  00111C  D045               	goto	i2l2219
  5311  00111E                     i2l2207:
  5312                           
  5313                           ;Key.c: 129: if( Local_Key_User.key_state[key_num] == Local_Key_User.key_state[key_num_m
      +                          ate] )
  5314  00111E  5005               	movf	Key_FSM_Read@key_num_mate,w,c
  5315  001120  0D01               	mullw	1
  5316  001122  0E89               	movlw	low (_Local_Key_User+13)
  5317  001124  24F3               	addwf	prodl,w,c
  5318  001126  6ED9               	movwf	fsr2l,c
  5319  001128  0E00               	movlw	high (_Local_Key_User+13)
  5320  00112A  20F4               	addwfc	prodh,w,c
  5321  00112C  6EDA               	movwf	fsr2h,c
  5322  00112E  5006               	movf	Key_FSM_Read@key_num,w,c
  5323  001130  0D01               	mullw	1
  5324  001132  0E89               	movlw	low (_Local_Key_User+13)
  5325  001134  24F3               	addwf	prodl,w,c
  5326  001136  6EE1               	movwf	fsr1l,c
  5327  001138  0E00               	movlw	high (_Local_Key_User+13)
  5328  00113A  20F4               	addwfc	prodh,w,c
  5329  00113C  6EE2               	movwf	fsr1h,c
  5330  00113E  50DE               	movf	postinc2,w,c
  5331  001140  18E6               	xorwf	postinc1,w,c
  5332  001142  A4D8               	btfss	status,2,c
  5333  001144  D02F               	goto	i2l2215
  5334                           
  5335                           ;Key.c: 130: if(Local_Key_User.key_state[key_num] != KEY_default)
  5336  001146  5006               	movf	Key_FSM_Read@key_num,w,c
  5337  001148  0D01               	mullw	1
  5338  00114A  0E89               	movlw	low (_Local_Key_User+13)
  5339  00114C  24F3               	addwf	prodl,w,c
  5340  00114E  6ED9               	movwf	fsr2l,c
  5341  001150  0E00               	movlw	high (_Local_Key_User+13)
  5342  001152  20F4               	addwfc	prodh,w,c
  5343  001154  6EDA               	movwf	fsr2h,c
  5344  001156  50DF               	movf	indf2,w,c
  5345  001158  B4D8               	btfsc	status,2,c
  5346  00115A  D024               	goto	i2l2215
  5347                           
  5348                           ;Key.c: 131: {
  5349                           ;Key.c: 132: Local_Key_User.key_group = (0x01 << key_num)|(0x01 << key_num_mate);
  5350  00115C  C005  F001         	movff	Key_FSM_Read@key_num_mate,??_Key_FSM_Read
  5351  001160  0E01               	movlw	1
  5352  001162  6E02               	movwf	(??_Key_FSM_Read+1)& (0+255),c
  5353  001164  2A01               	incf	??_Key_FSM_Read,f,c
  5354  001166  D002               	goto	i2u184_44
  5355  001168                     i2u184_45:
  5356  001168  90D8               	bcf	status,0,c
  5357  00116A  3602               	rlcf	??_Key_FSM_Read+1,f,c
  5358  00116C                     i2u184_44:
  5359  00116C  2E01               	decfsz	??_Key_FSM_Read,f,c
  5360  00116E  D7FC               	goto	i2u184_45
  5361  001170  C006  F003         	movff	Key_FSM_Read@key_num,??_Key_FSM_Read+2
  5362  001174  0E01               	movlw	1
  5363  001176  6E04               	movwf	(??_Key_FSM_Read+3)& (0+255),c
  5364  001178  2A03               	incf	??_Key_FSM_Read+2,f,c
  5365  00117A  D002               	goto	i2u185_44
  5366  00117C                     i2u185_45:
  5367  00117C  90D8               	bcf	status,0,c
  5368  00117E  3604               	rlcf	??_Key_FSM_Read+3,f,c
  5369  001180                     i2u185_44:
  5370  001180  2E03               	decfsz	??_Key_FSM_Read+2,f,c
  5371  001182  D7FC               	goto	i2u185_45
  5372  001184  5004               	movf	??_Key_FSM_Read+3,w,c
  5373  001186  1002               	iorwf	??_Key_FSM_Read+1,w,c
  5374  001188  0100               	movlb	0	; () banked
  5375  00118A  6F7D               	movwf	(_Local_Key_User+1)& (0+255),b	;volatile
  5376                           
  5377                           ; BSR set to: 0
  5378                           ;Key.c: 133: Local_Key_User.key_group_state = Local_Key_User.key_state[key_num];
  5379  00118C  5006               	movf	Key_FSM_Read@key_num,w,c
  5380  00118E  0D01               	mullw	1
  5381  001190  0E89               	movlw	low (_Local_Key_User+13)
  5382  001192  24F3               	addwf	prodl,w,c
  5383  001194  6ED9               	movwf	fsr2l,c
  5384  001196  0E00               	movlw	high (_Local_Key_User+13)
  5385  001198  20F4               	addwfc	prodh,w,c
  5386  00119A  6EDA               	movwf	fsr2h,c
  5387  00119C  50DF               	movf	indf2,w,c
  5388  00119E  0100               	movlb	0	; () banked
  5389  0011A0  6F7E               	movwf	(_Local_Key_User+2)& (0+255),b	;volatile
  5390                           
  5391                           ; BSR set to: 0
  5392  0011A2  D000               	goto	i2l2215
  5393  0011A4                     i2l2215:
  5394  0011A4  2A05               	incf	Key_FSM_Read@key_num_mate,f,c
  5395  0011A6  D7B7               	goto	L4
  5396  0011A8                     i2l2219:
  5397  0011A8  2A06               	incf	Key_FSM_Read@key_num,f,c
  5398  0011AA  0E03               	movlw	3
  5399  0011AC  6406               	cpfsgt	Key_FSM_Read@key_num,c
  5400  0011AE  D7B1               	goto	i2l2203
  5401  0011B0  0012               	return	
  5402  0011B2  0012               	return		;funcret
  5403  0011B4                     __end_of_Key_FSM_Read:
  5404                           	opt stack 0
  5405                           pclatu	equ	0xFFB
  5406                           pclath	equ	0xFFA
  5407                           tblptru	equ	0xFF8
  5408                           tblptrh	equ	0xFF7
  5409                           tblptrl	equ	0xFF6
  5410                           tablat	equ	0xFF5
  5411                           prodh	equ	0xFF4
  5412                           prodl	equ	0xFF3
  5413                           intcon	equ	0xFF2
  5414                           postinc0	equ	0xFEE
  5415                           fsr0h	equ	0xFEA
  5416                           fsr0l	equ	0xFE9
  5417                           wreg	equ	0xFE8
  5418                           postinc1	equ	0xFE6
  5419                           fsr1h	equ	0xFE2
  5420                           fsr1l	equ	0xFE1
  5421                           indf2	equ	0xFDF
  5422                           postinc2	equ	0xFDE
  5423                           postdec2	equ	0xFDD
  5424                           plusw2	equ	0xFDB
  5425                           fsr2h	equ	0xFDA
  5426                           fsr2l	equ	0xFD9
  5427                           status	equ	0xFD8
  5428                           
  5429 ;; *************** function _Key_FSM_Scan *****************
  5430 ;; Defined at:
  5431 ;;		line 77 in file "_01_USER/Key.c"
  5432 ;; Parameters:    Size  Location     Type
  5433 ;;		None
  5434 ;; Auto vars:     Size  Location     Type
  5435 ;;		None
  5436 ;; Return value:  Size  Location     Type
  5437 ;;		None               void
  5438 ;; Registers used:
  5439 ;;		wreg, status,2, status,0, cstack
  5440 ;; Tracked objects:
  5441 ;;		On entry : 0/0
  5442 ;;		On exit  : 0/0
  5443 ;;		Unchanged: 0/0
  5444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5449 ;;Total ram usage:        0 bytes
  5450 ;; Hardware stack levels used:    1
  5451 ;; Hardware stack levels required when called:    1
  5452 ;; This function calls:
  5453 ;;		_Key_Scan
  5454 ;; This function is called by:
  5455 ;;		_Sys_Cyc
  5456 ;; This function uses a non-reentrant model
  5457 ;;
  5458                           
  5459                           	psect	text40
  5460  001C4C                     __ptext40:
  5461                           	opt stack 0
  5462  001C4C                     _Key_FSM_Scan:
  5463                           	opt stack 23
  5464                           
  5465                           ;Key.c: 79: Key_Scan();
  5466                           
  5467                           ;incstack = 0
  5468  001C4C  ECAD  F00E         	call	_Key_Scan	;wreg free
  5469                           
  5470                           ;Key.c: 80: if( Local_Key_FSM.key_BUS & 0x01 ) Local_Key_FSM.key_count[0]++;
  5471  001C50  0100               	movlb	0	; () banked
  5472  001C52  A16A               	btfss	_Local_Key_FSM& (0+255),0,b	;volatile
  5473  001C54  D004               	goto	i2l2421
  5474                           
  5475                           ; BSR set to: 0
  5476  001C56  0100               	movlb	0	; () banked
  5477  001C58  4B6D               	infsnz	(_Local_Key_FSM+3)& (0+255),f,b	;volatile
  5478  001C5A  2B6E               	incf	(_Local_Key_FSM+4)& (0+255),f,b	;volatile
  5479  001C5C  D000               	goto	i2l2421
  5480  001C5E                     i2l2421:
  5481                           
  5482                           ; BSR set to: 0
  5483                           ;Key.c: 81: if( Local_Key_FSM.key_BUS & 0x02 ) Local_Key_FSM.key_count[1]++;
  5484  001C5E  0100               	movlb	0	; () banked
  5485  001C60  A36A               	btfss	_Local_Key_FSM& (0+255),1,b	;volatile
  5486  001C62  D004               	goto	i2l2425
  5487                           
  5488                           ; BSR set to: 0
  5489  001C64  0100               	movlb	0	; () banked
  5490  001C66  4B6F               	infsnz	(_Local_Key_FSM+5)& (0+255),f,b	;volatile
  5491  001C68  2B70               	incf	(_Local_Key_FSM+6)& (0+255),f,b	;volatile
  5492  001C6A  D000               	goto	i2l2425
  5493  001C6C                     i2l2425:
  5494                           
  5495                           ; BSR set to: 0
  5496                           ;Key.c: 82: if( Local_Key_FSM.key_BUS & 0x04 ) Local_Key_FSM.key_count[2]++;
  5497  001C6C  0100               	movlb	0	; () banked
  5498  001C6E  A56A               	btfss	_Local_Key_FSM& (0+255),2,b	;volatile
  5499  001C70  D004               	goto	i2l2429
  5500                           
  5501                           ; BSR set to: 0
  5502  001C72  0100               	movlb	0	; () banked
  5503  001C74  4B71               	infsnz	(_Local_Key_FSM+7)& (0+255),f,b	;volatile
  5504  001C76  2B72               	incf	(_Local_Key_FSM+8)& (0+255),f,b	;volatile
  5505  001C78  D000               	goto	i2l2429
  5506  001C7A                     i2l2429:
  5507                           
  5508                           ; BSR set to: 0
  5509                           ;Key.c: 83: if( Local_Key_FSM.key_BUS & 0x08 ) Local_Key_FSM.key_count[3]++;
  5510  001C7A  0100               	movlb	0	; () banked
  5511  001C7C  A76A               	btfss	_Local_Key_FSM& (0+255),3,b	;volatile
  5512  001C7E  D004               	goto	i2l2433
  5513                           
  5514                           ; BSR set to: 0
  5515  001C80  0100               	movlb	0	; () banked
  5516  001C82  4B73               	infsnz	(_Local_Key_FSM+9)& (0+255),f,b	;volatile
  5517  001C84  2B74               	incf	(_Local_Key_FSM+10)& (0+255),f,b	;volatile
  5518  001C86  D000               	goto	i2l2433
  5519  001C88                     i2l2433:
  5520                           
  5521                           ; BSR set to: 0
  5522                           ;Key.c: 84: if( Local_Key_FSM.key_BUS & 0x10 ) Local_Key_FSM.key_count[4]++;
  5523  001C88  0100               	movlb	0	; () banked
  5524  001C8A  A96A               	btfss	_Local_Key_FSM& (0+255),4,b	;volatile
  5525  001C8C  0012               	return	
  5526                           
  5527                           ; BSR set to: 0
  5528  001C8E  0100               	movlb	0	; () banked
  5529  001C90  4B75               	infsnz	(_Local_Key_FSM+11)& (0+255),f,b	;volatile
  5530  001C92  2B76               	incf	(_Local_Key_FSM+12)& (0+255),f,b	;volatile
  5531  001C94  0012               	return	
  5532                           
  5533                           ; BSR set to: 0
  5534                           
  5535                           ; BSR set to: 0
  5536  001C96  0012               	return		;funcret
  5537  001C98                     __end_of_Key_FSM_Scan:
  5538                           	opt stack 0
  5539                           pclatu	equ	0xFFB
  5540                           pclath	equ	0xFFA
  5541                           tblptru	equ	0xFF8
  5542                           tblptrh	equ	0xFF7
  5543                           tblptrl	equ	0xFF6
  5544                           tablat	equ	0xFF5
  5545                           prodh	equ	0xFF4
  5546                           prodl	equ	0xFF3
  5547                           intcon	equ	0xFF2
  5548                           postinc0	equ	0xFEE
  5549                           fsr0h	equ	0xFEA
  5550                           fsr0l	equ	0xFE9
  5551                           wreg	equ	0xFE8
  5552                           postinc1	equ	0xFE6
  5553                           fsr1h	equ	0xFE2
  5554                           fsr1l	equ	0xFE1
  5555                           indf2	equ	0xFDF
  5556                           postinc2	equ	0xFDE
  5557                           postdec2	equ	0xFDD
  5558                           plusw2	equ	0xFDB
  5559                           fsr2h	equ	0xFDA
  5560                           fsr2l	equ	0xFD9
  5561                           status	equ	0xFD8
  5562                           
  5563 ;; *************** function _Key_Scan *****************
  5564 ;; Defined at:
  5565 ;;		line 55 in file "_01_USER/Key.c"
  5566 ;; Parameters:    Size  Location     Type
  5567 ;;		None
  5568 ;; Auto vars:     Size  Location     Type
  5569 ;;		None
  5570 ;; Return value:  Size  Location     Type
  5571 ;;		None               void
  5572 ;; Registers used:
  5573 ;;		wreg, status,2, status,0
  5574 ;; Tracked objects:
  5575 ;;		On entry : 0/0
  5576 ;;		On exit  : 0/0
  5577 ;;		Unchanged: 0/0
  5578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5583 ;;Total ram usage:        0 bytes
  5584 ;; Hardware stack levels used:    1
  5585 ;; This function calls:
  5586 ;;		Nothing
  5587 ;; This function is called by:
  5588 ;;		_Key_FSM_Scan
  5589 ;; This function uses a non-reentrant model
  5590 ;;
  5591                           
  5592                           	psect	text41
  5593  001D5A                     __ptext41:
  5594                           	opt stack 0
  5595  001D5A                     _Key_Scan:
  5596                           	opt stack 23
  5597                           
  5598                           ;Key.c: 58: Local_Key_FSM.key_BUS = 0x00;
  5599                           
  5600                           ; BSR set to: 0
  5601                           ;incstack = 0
  5602  001D5A  0E00               	movlw	0
  5603  001D5C  0100               	movlb	0	; () banked
  5604  001D5E  6F6A               	movwf	_Local_Key_FSM& (0+255),b	;volatile
  5605                           
  5606                           ; BSR set to: 0
  5607                           ;Key.c: 60: if( RE3 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 0) ;
  5608  001D60  B684               	btfsc	3972,3,c	;volatile
  5609  001D62  D003               	goto	i2l2159
  5610                           
  5611                           ; BSR set to: 0
  5612  001D64  0100               	movlb	0	; () banked
  5613  001D66  816A               	bsf	_Local_Key_FSM& (0+255),0,b	;volatile
  5614  001D68  D000               	goto	i2l2159
  5615  001D6A                     i2l2159:
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;Key.c: 61: if( RE2 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 1) ;
  5619  001D6A  B484               	btfsc	3972,2,c	;volatile
  5620  001D6C  D003               	goto	i2l2163
  5621                           
  5622                           ; BSR set to: 0
  5623  001D6E  0100               	movlb	0	; () banked
  5624  001D70  836A               	bsf	_Local_Key_FSM& (0+255),1,b	;volatile
  5625  001D72  D000               	goto	i2l2163
  5626  001D74                     i2l2163:
  5627                           
  5628                           ; BSR set to: 0
  5629                           ;Key.c: 62: if( RD6 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 2) ;
  5630  001D74  BC83               	btfsc	3971,6,c	;volatile
  5631  001D76  D003               	goto	i2l2167
  5632                           
  5633                           ; BSR set to: 0
  5634  001D78  0100               	movlb	0	; () banked
  5635  001D7A  856A               	bsf	_Local_Key_FSM& (0+255),2,b	;volatile
  5636  001D7C  D000               	goto	i2l2167
  5637  001D7E                     i2l2167:
  5638                           
  5639                           ; BSR set to: 0
  5640                           ;Key.c: 63: if( RE4 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 3) ;
  5641  001D7E  B884               	btfsc	3972,4,c	;volatile
  5642  001D80  D003               	goto	i2l2171
  5643                           
  5644                           ; BSR set to: 0
  5645  001D82  0100               	movlb	0	; () banked
  5646  001D84  876A               	bsf	_Local_Key_FSM& (0+255),3,b	;volatile
  5647  001D86  D000               	goto	i2l2171
  5648  001D88                     i2l2171:
  5649                           
  5650                           ; BSR set to: 0
  5651                           ;Key.c: 64: if( RD7 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 4) ;
  5652  001D88  BE83               	btfsc	3971,7,c	;volatile
  5653  001D8A  0012               	return	
  5654                           
  5655                           ; BSR set to: 0
  5656  001D8C  0100               	movlb	0	; () banked
  5657  001D8E  896A               	bsf	_Local_Key_FSM& (0+255),4,b	;volatile
  5658  001D90  0012               	return	
  5659                           
  5660                           ; BSR set to: 0
  5661                           
  5662                           ; BSR set to: 0
  5663  001D92  0012               	return		;funcret
  5664  001D94                     __end_of_Key_Scan:
  5665                           	opt stack 0
  5666                           pclatu	equ	0xFFB
  5667                           pclath	equ	0xFFA
  5668                           tblptru	equ	0xFF8
  5669                           tblptrh	equ	0xFF7
  5670                           tblptrl	equ	0xFF6
  5671                           tablat	equ	0xFF5
  5672                           prodh	equ	0xFF4
  5673                           prodl	equ	0xFF3
  5674                           intcon	equ	0xFF2
  5675                           postinc0	equ	0xFEE
  5676                           fsr0h	equ	0xFEA
  5677                           fsr0l	equ	0xFE9
  5678                           wreg	equ	0xFE8
  5679                           postinc1	equ	0xFE6
  5680                           fsr1h	equ	0xFE2
  5681                           fsr1l	equ	0xFE1
  5682                           indf2	equ	0xFDF
  5683                           postinc2	equ	0xFDE
  5684                           postdec2	equ	0xFDD
  5685                           plusw2	equ	0xFDB
  5686                           fsr2h	equ	0xFDA
  5687                           fsr2l	equ	0xFD9
  5688                           status	equ	0xFD8
  5689                           
  5690 ;; *************** function _Delay_1Khz *****************
  5691 ;; Defined at:
  5692 ;;		line 75 in file "_01_USER/My_Delay.c"
  5693 ;; Parameters:    Size  Location     Type
  5694 ;;		None
  5695 ;; Auto vars:     Size  Location     Type
  5696 ;;  c               1    2[COMRAM] unsigned char 
  5697 ;;  b               1    1[COMRAM] unsigned char 
  5698 ;;  a               1    0[COMRAM] unsigned char 
  5699 ;; Return value:  Size  Location     Type
  5700 ;;		None               void
  5701 ;; Registers used:
  5702 ;;		wreg, status,2, status,0
  5703 ;; Tracked objects:
  5704 ;;		On entry : 0/0
  5705 ;;		On exit  : 0/0
  5706 ;;		Unchanged: 0/0
  5707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5709 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5711 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5712 ;;Total ram usage:        3 bytes
  5713 ;; Hardware stack levels used:    1
  5714 ;; This function calls:
  5715 ;;		Nothing
  5716 ;; This function is called by:
  5717 ;;		_Sys_Cyc
  5718 ;; This function uses a non-reentrant model
  5719 ;;
  5720                           
  5721                           	psect	text42
  5722  001D94                     __ptext42:
  5723                           	opt stack 0
  5724  001D94                     _Delay_1Khz:
  5725                           	opt stack 24
  5726                           
  5727                           ;My_Delay.c: 77: unsigned char a,b,c;
  5728                           ;My_Delay.c: 78: for(c=1;c>0;c--)
  5729                           
  5730                           ; BSR set to: 0
  5731                           ;incstack = 0
  5732  001D94  0E01               	movlw	1
  5733  001D96  6E03               	movwf	Delay_1Khz@c,c
  5734  001D98  5003               	movf	Delay_1Khz@c,w,c
  5735  001D9A  B4D8               	btfsc	status,2,c
  5736  001D9C  0012               	return	
  5737  001D9E  D001               	goto	i2l2395
  5738  001DA0  0012               	return	
  5739  001DA2                     i2l2395:
  5740                           
  5741                           ;My_Delay.c: 79: for(b=32;b>0;b--)
  5742  001DA2  0E20               	movlw	32
  5743  001DA4  6E02               	movwf	Delay_1Khz@b,c
  5744  001DA6  5002               	movf	Delay_1Khz@b,w,c
  5745  001DA8  B4D8               	btfsc	status,2,c
  5746  001DAA  D00D               	goto	i2l2411
  5747  001DAC  D001               	goto	i2l2399
  5748  001DAE  D00B               	goto	i2l2411
  5749  001DB0                     i2l2399:
  5750                           
  5751                           ;My_Delay.c: 80: for(a=2;a>0;a--);
  5752  001DB0  0E02               	movlw	2
  5753  001DB2  6E01               	movwf	Delay_1Khz@a,c
  5754  001DB4  5001               	movf	Delay_1Khz@a,w,c
  5755  001DB6  B4D8               	btfsc	status,2,c
  5756  001DB8  D004               	goto	i2l2407
  5757  001DBA  D001               	goto	i2l2403
  5758  001DBC  D002               	goto	i2l2407
  5759  001DBE                     i2l2403:
  5760  001DBE  0601               	decf	Delay_1Khz@a,f,c
  5761  001DC0  D7F9               	goto	L5
  5762  001DC2                     i2l2407:
  5763  001DC2  0602               	decf	Delay_1Khz@b,f,c
  5764  001DC4  D7F0               	goto	L6
  5765  001DC6                     i2l2411:
  5766  001DC6  0603               	decf	Delay_1Khz@c,f,c
  5767  001DC8  D7E7               	goto	L7
  5768  001DCA  0012               	return		;funcret
  5769  001DCC                     __end_of_Delay_1Khz:
  5770                           	opt stack 0
  5771                           pclatu	equ	0xFFB
  5772                           pclath	equ	0xFFA
  5773                           tblptru	equ	0xFF8
  5774                           tblptrh	equ	0xFF7
  5775                           tblptrl	equ	0xFF6
  5776                           tablat	equ	0xFF5
  5777                           prodh	equ	0xFF4
  5778                           prodl	equ	0xFF3
  5779                           intcon	equ	0xFF2
  5780                           postinc0	equ	0xFEE
  5781                           fsr0h	equ	0xFEA
  5782                           fsr0l	equ	0xFE9
  5783                           wreg	equ	0xFE8
  5784                           postinc1	equ	0xFE6
  5785                           fsr1h	equ	0xFE2
  5786                           fsr1l	equ	0xFE1
  5787                           indf2	equ	0xFDF
  5788                           postinc2	equ	0xFDE
  5789                           postdec2	equ	0xFDD
  5790                           plusw2	equ	0xFDB
  5791                           fsr2h	equ	0xFDA
  5792                           fsr2l	equ	0xFD9
  5793                           status	equ	0xFD8
  5794                           pclatu	equ	0xFFB
  5795                           pclath	equ	0xFFA
  5796                           tblptru	equ	0xFF8
  5797                           tblptrh	equ	0xFF7
  5798                           tblptrl	equ	0xFF6
  5799                           tablat	equ	0xFF5
  5800                           prodh	equ	0xFF4
  5801                           prodl	equ	0xFF3
  5802                           intcon	equ	0xFF2
  5803                           postinc0	equ	0xFEE
  5804                           fsr0h	equ	0xFEA
  5805                           fsr0l	equ	0xFE9
  5806                           wreg	equ	0xFE8
  5807                           postinc1	equ	0xFE6
  5808                           fsr1h	equ	0xFE2
  5809                           fsr1l	equ	0xFE1
  5810                           indf2	equ	0xFDF
  5811                           postinc2	equ	0xFDE
  5812                           postdec2	equ	0xFDD
  5813                           plusw2	equ	0xFDB
  5814                           fsr2h	equ	0xFDA
  5815                           fsr2l	equ	0xFD9
  5816                           status	equ	0xFD8
  5817                           
  5818                           	psect	rparam
  5819  0000                     pclatu	equ	0xFFB
  5820                           pclath	equ	0xFFA
  5821                           tblptru	equ	0xFF8
  5822                           tblptrh	equ	0xFF7
  5823                           tblptrl	equ	0xFF6
  5824                           tablat	equ	0xFF5
  5825                           prodh	equ	0xFF4
  5826                           prodl	equ	0xFF3
  5827                           intcon	equ	0xFF2
  5828                           postinc0	equ	0xFEE
  5829                           fsr0h	equ	0xFEA
  5830                           fsr0l	equ	0xFE9
  5831                           wreg	equ	0xFE8
  5832                           postinc1	equ	0xFE6
  5833                           fsr1h	equ	0xFE2
  5834                           fsr1l	equ	0xFE1
  5835                           indf2	equ	0xFDF
  5836                           postinc2	equ	0xFDE
  5837                           postdec2	equ	0xFDD
  5838                           plusw2	equ	0xFDB
  5839                           fsr2h	equ	0xFDA
  5840                           fsr2l	equ	0xFD9
  5841                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         84
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     51      69
    BANK0           160     18      84
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    CRC_Verify@DataBuff	PTR unsigned char  size(2) Largest target is 10
		 -> RS485_SendBuff(BANK0[10]), 

    RS485_Send_Date@date_dress	PTR unsigned char  size(2) Largest target is 10
		 -> RS485_SendBuff(BANK0[10]), 


Critical Paths under _main in COMRAM

    _Timer0_Init->_SetTimer0
    _Show_Result->_TM1640_Show_integer
    _TM1640_Show_integer->_TM1640_Writer_Dates
    _TM1640_Show_integer->___lwdiv
    _TM1640_Writer_Dates->___lwmod
    _RS485_Send_Date->_CRC_Verify
    _CRC_Verify->___lldiv
    _Get_ADC6->___ftmul
    ___lwtoft->___ftpack
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul
    _RS485_Init->_Open2USART
    _Init_TM1640->_TM1640_Writer_Byte
    _TM1640_Writer_Byte->_TM1640_Delay
    _TM1640_Stop->_TM1640_Delay
    _TM1640_Start->_TM1640_Delay
    _ADC6_Init->_OpenADC

Critical Paths under _Sys_Cyc in COMRAM

    _Sys_Cyc->i2___llmod
    _Manage_Message->_Key_FSM_Read

Critical Paths under _main in BANK0

    _Get_ADC6->___ftdiv

Critical Paths under _Sys_Cyc in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Sys_Cyc in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Sys_Cyc in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Sys_Cyc in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Sys_Cyc in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Sys_Cyc in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Sys_Cyc in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Sys_Cyc in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Sys_Cyc in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Sys_Cyc in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Sys_Cyc in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Sys_Cyc in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Sys_Cyc in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Sys_Cyc in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Sys_Cyc in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Sys_Cyc in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   14322
                                             15 BANK0      3     3      0
                          _ADC6_Init
                        _GPIO_Config
                        _Init_TM1640
                           _Key_Init
                         _RS485_Init
                                _Run
                        _Show_Result
                        _Timer0_Init
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0     194
                          _SetTimer0
 ---------------------------------------------------------------------------------
 (2) _SetTimer0                                            4     2      2     194
                                             25 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Show_Result                                          1     1      0    3240
                                             34 COMRAM     1     1      0
                _TM1640_Show_integer
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     492
                                             25 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _TM1640_Show_integer                                  2     0      2    2748
                                             32 COMRAM     2     0      2
                _TM1640_Writer_Dates
                            ___lwdiv
                            ___lwmod
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     752
                                             25 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     631
                                             25 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _TM1640_Writer_Dates                                  2     1      1    1009
                                             30 COMRAM     2     1      1
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Run                                                  0     0      0    9798
                           _Get_ADC6
                    _RS485_Send_Date
 ---------------------------------------------------------------------------------
 (2) _RS485_Send_Date                                      7     4      3    1810
                                              0 BANK0      7     4      3
                         _CRC_Verify
 ---------------------------------------------------------------------------------
 (3) _CRC_Verify                                          12    10      2    1494
                                             38 COMRAM    12    10      2
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     612
                                             25 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     371
                                             25 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _Get_ADC6                                             0     0      0    7988
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2104
                                             33 COMRAM     3     0      3
                            _ReadADC (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    2846
                                             36 COMRAM    15     9      6
                            _ReadADC (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3038
                                              0 BANK0     15     9      6
                            _ReadADC (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2008
                                             25 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) _ReadADC                                              4     2      2       0
                                             25 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RS485_Init                                           0     0      0     375
                         _Open2USART
 ---------------------------------------------------------------------------------
 (2) _Open2USART                                           3     1      2     375
                                             25 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Key_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_TM1640                                          0     0      0     396
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
 ---------------------------------------------------------------------------------
 (4) _TM1640_Writer_Byte                                   2     2      0     198
                                             27 COMRAM     2     2      0
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (4) _TM1640_Stop                                          0     0      0      99
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (4) _TM1640_Start                                         0     0      0      99
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (5) _TM1640_Delay                                         2     2      0      99
                                             25 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC6_Init                                            0     0      0     316
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     316
                                             25 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Sys_Cyc                                             16    16      0    1309
                                              9 COMRAM    16    16      0
                         _Delay_1Khz
                       _Key_FSM_Scan
                     _Manage_Message
                        i2_SetTimer0
                          i2___llmod
 ---------------------------------------------------------------------------------
 (7) i2___llmod                                            9     1      8     263
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) i2_SetTimer0                                          4     2      2      94
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _Manage_Message                                       0     0      0     746
                       _Key_FSM_Read
                      _Key_FSM_Reset
                            ___lbmod
 ---------------------------------------------------------------------------------
 (8) ___lbmod                                              4     3      1     212
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (8) _Key_FSM_Reset                                        1     1      0      67
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _Key_FSM_Read                                         6     6      0     467
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (7) _Key_FSM_Scan                                         0     0      0       0
                           _Key_Scan
 ---------------------------------------------------------------------------------
 (8) _Key_Scan                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _Delay_1Khz                                           3     3      0     138
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC6_Init
     _OpenADC
   _GPIO_Config
   _Init_TM1640
     _TM1640_Start
       _TM1640_Delay
     _TM1640_Stop
       _TM1640_Delay
     _TM1640_Writer_Byte
       _TM1640_Delay
   _Key_Init
   _RS485_Init
     _Open2USART
   _Run
     _Get_ADC6
       _BusyADC
       _ConvertADC
       _ReadADC
       ___ftdiv
         _ReadADC (ARG)
         ___ftmul (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___ftmul
         _ReadADC (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___lwtoft
         _ReadADC (ARG)
         ___ftpack (ARG)
     _RS485_Send_Date
       _CRC_Verify
         ___lldiv
         ___llmod
   _Show_Result
     _TM1640_Show_integer
       _TM1640_Writer_Dates
         _TM1640_Start
           _TM1640_Delay
         _TM1640_Stop
           _TM1640_Delay
         _TM1640_Writer_Byte
           _TM1640_Delay
         ___lwmod (ARG)
       ___lwdiv
       ___lwmod
       ___wmul (ARG)
     ___wmul
   _Timer0_Init
     _SetTimer0

 _Sys_Cyc (ROOT)
   _Delay_1Khz
   _Key_FSM_Scan
     _Key_Scan
   _Manage_Message
     _Key_FSM_Read
     _Key_FSM_Reset
     ___lbmod
   i2_SetTimer0
   i2___llmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     12      54       5       52.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     33      45       1       72.6%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      99      12        0.0%
DATA                 0      0      99       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Dec 15 16:26:30 2015

                ?_TM1640_Stop 0001  __size_of_TM1640_Writer_Dates 0022                 ?_TM1640_Delay 0001  
              Key_FSM_Reset@t 0001           ___wmul@multiplicand 001C                   __CFG_BORV$3 000000  
               ?_TM1640_Start 0001                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000                  __CFG_CP4$OFF 000000  
                __CFG_CP5$OFF 000000                  __CFG_CP6$OFF 000000                  __CFG_CP7$OFF 000000  
                         l301 1CEA                           l302 1D00                           l161 1864  
                         l170 1412                           l316 1FE6                           l156 183C  
                         l418 1BFC                           l451 196C                           l453 1978  
                         l454 197A                           l446 1944                           l448 1954  
                         l841 12CC                           l913 18F8                           l923 1A68  
                         l777 17C6                           l976 1BA8                           l986 1C42  
                         _GIE 007F97                  __CFG_CPB$OFF 000000                           _RC3 007C13  
                         _RC4 007C14                           _RE2 007C22                           _RE3 007C23  
                         _RE4 007C24                           _RD6 007C1E                           _RE5 007C25  
                         _RD7 007C1F                           _RE6 007C26                           _RG3 007C33  
                         _RE7 007C27                  __CFG_CPD$OFF 000000                           _PSA 007EAB  
                         _Run 1E2E                ??_Key_FSM_Read 0001                ??_Key_FSM_Scan 0001  
                         prod 000FF3                           wreg 000FE8                  ?_GPIO_Config 0001  
                  _TXSTA2bits 000F21          ?_TM1640_Show_integer 0021                   ?_RS485_Init 0001  
                ___ftdiv@cntr 00AB                          ?_Run 0001                  ___ftdiv@sign 00B0  
                        l3037 1E3A                          l3049 19CE                          l2611 1FE0  
                        l2603 1FD6                          l3067 1D4C                          l2609 1FDE  
                        l2651 1D18                          l2803 12DE                          l2707 18E8  
                        l2723 1A58                          l2715 1A1C                          l2645 1D04  
                        l2661 174A                          l2813 155E                          l2717 1A2A  
                        l2733 1322                          l2911 193A                          l2903 1922  
                        l2671 17AE                          l2663 1756                          l2719 1A32  
                        l2673 17BA                          l2665 1776                          l2657 173A  
                        l2841 15E2                          l2833 15BA                          l2729 131A  
                        l2923 1964                          l2915 194A                          l2907 1930  
                        l2851 1610                          l2843 15E8                          l2819 1586  
                        l2739 138C                          l2685 17E0                          l2669 178E  
                        l2773 1228                          l2837 15CC                          l2941 1846  
                        l2861 1B6C                          l2927 1970                          l2919 195A  
                        l2679 17CE                          l2767 11EE                          l2847 15FA  
                        l2695 18A0                          l2943 186E                          l2863 1B76  
                        l2793 128A                          l2697 18AE                          l2873 1B9C  
                        l2865 1B7E                          l2881 1C0E                          l2699 18B6  
                        l2883 1C18                          l2981 1AF0                          l2885 1C20  
                        l2949 1E06                          l2889 1C36                          _T0CS 007EAD  
                        _T0SE 007EAC                          _IPEN 007E87                          u2721 1546  
                        u2660 2018                          u2741 156E                          u2671 11CA  
                        u2691 1204                 ??_Init_TM1640 001E                    _Delay_1Khz 1D94  
                        _main 1D20                  ___ftpack@arg 001A                  ___ftpack@exp 001D  
                        fsr0h 000FEA                          fsr1h 000FE2                          fsr0l 000FE9  
                        fsr2h 000FDA                          fsr1l 000FE1                          indf2 000FDF  
                        fsr2l 000FD9                          pclat 000FFA               ??_Key_FSM_Reset 0001  
                        prodh 000FF4                          prodl 000FF3                          start 0188  
            ?_RS485_Send_Date 00A2                 __CFG_IESO$OFF 000000                 __CFG_FOSC$HS1 000000  
               __CFG_MCLRE$ON 000000                  ___ftmul@cntr 0032                  ___param_bank 000010  
                ___ftmul@sign 0033               __end_of_BusyADC 201E               __end_of_ReadADC 2010  
              ??_TM1640_Delay 001A               __end_of_OpenADC 1C00                         ??_Run 0034  
              ??_TM1640_Start 001C                 __CFG_RETEN$ON 000000                         ?_main 0001  
             __end_of___lbmod 1DFE               __end_of_Sys_Cyc 0188               __end_of___ftdiv 1306  
             __end_of___lldiv 190A               __end_of___ftmul 1638               __end_of___llmod 1A7A  
                       _T0PS0 007EA8                         _T0PS1 007EA9                         _T0PS2 007EAA  
                       _RC2IF 007D25               __end_of___lwdiv 1BB2                         i2l111 109A  
             __end_of___lwmod 1C4C                         i2l251 0120                         i2l244 009C  
                       i2l254 014E                         i2l248 00EE                         i2l923 1AD8  
           __end_of_ADC6_Init 2000                         _TMR0H 000FD7                         _TMR0L 000FD6  
                       _TRISD 000F95                         _TRISE 000F96         ??_TM1640_Show_integer 0023  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                 __CFG_WRT4$OFF 000000                __CFG_EBRT0$OFF 000000  
               __CFG_WRT5$OFF 000000                __CFG_EBRT1$OFF 000000                 __CFG_WRT6$OFF 000000  
              __CFG_EBRT2$OFF 000000                 __CFG_WRT7$OFF 000000                __CFG_EBRT3$OFF 000000  
              __CFG_EBRT4$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBRT5$OFF 000000  
              __CFG_EBRT6$OFF 000000                __CFG_EBRT7$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBRTB$OFF 000000  
         __size_of_CRC_Verify 012A                 ___ftpack@sign 001E                    _ConvertADC 2034  
               _Local_Key_FSM 006A                         tablat 000FF5                         plusw2 000FDB  
                       status 000FD8            _TM1640_Writer_Byte 1CE2              __end_of_Get_ADC6 1B56  
          __size_ofi2___llmod 0070               __initialization 1EB6           __end_of_Init_TM1640 1F28  
         __size_of_RS485_Init 001E                  __end_of_main 1D5A           ?_TM1640_Writer_Byte 0001  
            __end_of_Key_Init 2034           Key_FSM_Read@key_num 0006              __end_of_Key_Scan 1D94  
                  _Open2USART 190A    Sys_Cyc@_RS485_Receive_Byte 003F                        ??_main 0034  
               __activetblptr 000001              ??_Manage_Message 0007          ??_TM1640_Writer_Byte 001C  
                      _ADCON0 000FC2                        _ADCON1 000FC1                        _ADCON2 000FC0  
            ___llmod@dividend 001A                        _ADRESH 000FC4                        _ADRESL 000FC3  
                      _ANCON2 000F23                        _T08BIT 007EAE              __end_of___ftpack 17F0  
             __CFG_BBSIZ$BB2K 000000                        i2l2203 1112                        i2l2215 11A4  
                      i2l2207 111E                        i2l2225 1CAA                        i2l2403 1DBE  
                      i2l2411 1DC6                        i2l2171 1D88                        i2l2163 1D74  
                      i2l2219 11A8                        i2l2227 1CD8                        i2l2421 1C5E  
                      i2l2333 1DF2                        i2l2325 1DD8                        i2l2407 1DC2  
                      i2l2167 1D7E                        i2l2159 1D6A                        i2l2335 1DF8  
                      i2l2433 1C88                        i2l2425 1C6C                        i2l2193 10E6  
                      i2l2185 1070                        i2l2177 1018                        i2l2513 1AC8  
                      i2l2505 1A8C                        i2l2187 1086                        i2l2195 10FC  
                      i2l2451 1662                        i2l2443 1648                        i2l2507 1A9A  
                      i2l2429 1C7A                        i2l2189 10B4                        i2l2461 1688  
                      i2l2509 1AA2                        i2l2455 1670                        i2l2447 1656  
                      i2l2481 170A                        i2l2473 16DE                        i2l2465 16A4  
                      i2l2553 00A0                        i2l2395 1DA2                        i2l2459 167A  
                      i2l2547 0090                        i2l2555 00A6                        i2l2571 0108  
                      i2l2477 16FC                        i2l2469 16C2                        i2l2493 1E66  
                      i2l2565 00F2                        i2l2557 00B2                        i2l2399 1DB0  
                      i2l2487 1724                        i2l2583 013E                 SetTimer0@_tmr 001A  
                      _RCREG2 000F1D              __end_of___lwtoft 1F02                        _RCSTA2 000F22  
                 ?_Delay_1Khz 0001                        _TMR0IE 007F95                        _TMR0IF 007F92  
                      _SPBRG2 000F1E                        _TMR0ON 007EAF                 TM1640_Delay@i 001B  
                   ??_BusyADC 001A                        _TXREG2 000F1C                     ??_ReadADC 001C  
                      _TXSTA2 000F21                 ??_Timer0_Init 001E                     ??_OpenADC 001C  
      TM1640_Writer_Byte@Date 001C                  Sys_Cyc@_flag 0040                __CFG_XINST$OFF 000000  
        __end_of_Key_FSM_Read 11B4          __end_of_Key_FSM_Scan 1C98                  Sys_Cyc@_temp 0019  
      TM1640_Writer_Byte@mask 001D             _RS485_ReceiveBuff 008E                        ___wmul 1E8E  
              __CFG_STVREN$ON 000000                     ??___lbmod 0002                     ??_Sys_Cyc 000A  
                   ??___ftdiv 00A8                     ??___lldiv 0022                     ??___ftmul 002B  
                   ??___llmod 0022          Sys_Cyc@_overturn_LED 0042                     ??___lwdiv 001E  
          __size_of_SetTimer0 0030                     ??___lwmod 001E                        clear_0 1EBC  
                      clear_1 1EC8          __size_of_TM1640_Stop 0024                 ??_Show_Result 0023  
       ___ftmul@f3_as_product 002F                _Local_Key_User 007C             __end_ofi2___llmod 1AEA  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8          __size_of_GPIO_Config 000C           _TM1640_Writer_Dates 1F94  
                 ?_ConvertADC 0001          __end_of_TM1640_Delay 1FEE               ___lbmod@divisor 0001  
        __end_of_TM1640_Start 1F94                    __accesstop 0060       __end_of__initialization 1ECE  
             ___lbmod@counter 0003                   _Init_TM1640 1F02                  ?i2_SetTimer0 0001  
               ___rparam_used 000001                    ___ftdiv@f1 00A2                    ___ftdiv@f2 00A5  
                  ___ftdiv@f3 00AC             i2___llmod@divisor 0005                  ??_CRC_Verify 0029  
           i2___llmod@counter 0009                    ___ftmul@f1 0025                    ___ftmul@f2 0028  
              __pcstackCOMRAM 0001          ?_TM1640_Writer_Dates 001F           CRC_Verify@CRC_Value 002E  
         __end_of_Timer0_Init 1F4C                   ?_Open2USART 001A                    ___lwtoft@c 0022  
         __size_of_Delay_1Khz 0038                     ?_Get_ADC6 0001                  ??_RS485_Init 001D  
         __end_of_Show_Result 1A0A            __end_of_CRC_Verify 1430             __end_of_SetTimer0 1E2E  
                  __pbssBANK0 0060                     ?_Key_Init 0001                     ?_Key_Scan 0001  
                 _ReceiveBuff 0060               __CFG_PLLCFG$OFF 000000       TM1640_Writer_Dates@Addr 0020  
          __end_of_LED_Number 1011       TM1640_Writer_Dates@Date 001F         ??_TM1640_Writer_Dates 0020  
                     ?___wmul 001A            __end_of_RS485_Init 1FD4           __size_of_ConvertADC 0004  
                   ?___ftpack 001A                     ?___lwtoft 0022                    ??_Get_ADC6 0034  
                     _SPBRGH2 000F1F                     _ADC6_Buff 003C                     _ADC6_Init 1FEE  
                  ??_Key_Init 001A                    ??_Key_Scan 0001         __size_of_Key_FSM_Read 01A2  
       __size_of_Key_FSM_Scan 004C           __size_of_Open2USART 0084                       _BusyADC 2010  
                     _ReadADC 2000               __CFG_PWRTEN$OFF 000000                       _OpenADC 1BB2  
                     __Hparam 0000                   _Timer0_Init 1F28         __end_of_Key_FSM_Reset 1CE2  
                     __Lparam 0000                 Sys_Cyc@_pulse 0018                _RS485_SendBuff 0098  
                     ___lbmod 1DCC                       _Sys_Cyc 0008                       ___ftdiv 11B4  
                     ___lldiv 187E               __size_of___wmul 0028                       ___ftmul 1536  
                     ___llmod 1A0A                       ___lwdiv 1B56                       ___lwmod 1C00  
                __psmallconst 1000            _RS485_Receive_Flag 0045      __size_of_RS485_Send_Date 008E  
 __end_of_TM1640_Show_integer 1536                       __pcinit 1EB6                    ??___ftpack 001F  
       Sys_Cyc@_overturn_1Khz 0041                       __ramtop 1000                       __ptext0 1D20  
                     __ptext1 1F28                       __ptext2 1DFE                       __ptext3 198E  
                     __ptext4 1E8E                       __ptext5 1430                       __ptext6 1C00  
                     __ptext7 1B56                       __ptext8 1F94                       __ptext9 1E2E  
                  ??___lwtoft 0025                   _Show_Result 198E                  __size_of_Run 0030  
            Open2USART@config 001C         __size_of_TM1640_Delay 001A             __CFG_MSSPMSK$MSK7 000000  
                _Key_FSM_Read 1012                  _Key_FSM_Scan 1C4C         __size_of_TM1640_Start 0024  
                  ?_ADC6_Init 0001                OpenADC@config2 001A                OpenADC@config3 001B  
                     main@num 00B1          end_of_initialization 1ECE                  ??_Delay_1Khz 0001  
                   _RS485_Num 0044               ___lldiv@divisor 001E               ___lldiv@counter 0026  
        __size_ofi2_SetTimer0 0030                       postdec2 000FDD                       postinc0 000FEE  
                     postinc1 000FE6                       postinc2 000FDE                  _TM1640_Delay 1FD4  
   RS485_Send_Date@date_dress 00A2     RS485_Send_Date@date_lenth 00A4                  _TM1640_Start 1F70  
                   _PORTEbits 000F84              TM1640_Delay@Time 001A            __end_of_Delay_1Khz 1DCC  
            ___lbmod@dividend 0002                     _TRISCbits 000F94                     _TRISGbits 000F98  
 __size_of_TM1640_Writer_Byte 003E                     i2___llmod 1A7A             __CFG_SOSCSEL$HIGH 000000  
                ??_ConvertADC 001A                   ___lbmod@rem 0004      Key_FSM_Read@key_num_mate 0005  
                ?_Init_TM1640 0001                   ___ftdiv@exp 00AF            i2___llmod@dividend 0001  
                 ___ftmul@exp 002E                 ??_TM1640_Stop 001C                __end_of___wmul 1EB6  
                ??_Open2USART 001C            __end_of_ConvertADC 2038                 ??_GPIO_Config 001A  
         start_initialization 1EB6             ??_RS485_Send_Date 00A5                   __end_of_Run 1E5E  
                 ??_ADC6_Init 001F             __size_of_Get_ADC6 006C                    ?i2___llmod 0001  
  TM1640_Show_integer@Numbers 0021       __size_of_Manage_Message 00F2               ___llmod@divisor 001E  
           __size_of_Key_Init 000A             __size_of_Key_Scan 003A               ___llmod@counter 0022  
                   _SetTimer0 1DFE            __end_of_Open2USART 198E               i2SetTimer0@_tmr 0001  
                   _Timer_Cyc 0038                      ??___wmul 001E                 _Handle_Switch 0034  
         __end_of_TM1640_Stop 1F70             __size_of___ftpack 00C6                   __pbssCOMRAM 0034  
           __size_of___lwtoft 0026                 __pcstackBANK0 00A2            CRC_Verify@CRC_Byte 0032  
         __end_of_GPIO_Config 202A                      ?_BusyADC 0001                      ?_ReadADC 001A  
 __end_of_TM1640_Writer_Dates 1FB6                    ?_SetTimer0 001A                      ?_OpenADC 001A  
                ?_Timer0_Init 0001              ___lwdiv@dividend 001A             __CFG_CCP2MX$PORTC 000000  
                   __pintcode 0008                      ?___lbmod 0001                      ?_Sys_Cyc 0001  
                    ?___ftdiv 00A2                      ?___lldiv 001A                      ?___ftmul 0025  
                    ?___llmod 001A                      ?___lwdiv 001A                      ?___lwmod 001A  
          CRC_Verify@DataBuff 0027                  ?_Show_Result 0001                   __smallconst 1000  
                 _LED2_switch 0043              ___lwdiv@quotient 001F                   ??i2___llmod 0009  
             Open2USART@spbrg 001A                ___wmul@product 001E                 OpenADC@config 001E  
                    _PIE1bits 000F9D                      _PIE3bits 000FA3          __size_of_Init_TM1640 0026  
                    i2u176_40 103E                      i2u184_44 116C                      i2u184_45 1168  
                    i2u177_40 105C                      _PIR1bits 000F9E                      i2u185_44 1180  
                    i2u185_45 117C                      i2u178_40 10D2                   _TM1640_Stop 1F4C  
                  _ADCON0bits 000FC2             ___wmul@multiplier 001A                      _Get_ADC6 1AEA  
                 _GPIO_Config 201E                   Delay_1Khz@a 0001                   Delay_1Khz@b 0002  
                 Delay_1Khz@c 0003  __size_of_TM1640_Show_integer 0106        __size_of_Key_FSM_Reset 004A  
                    _Key_Init 202A                      _Key_Scan 1D5A                _Manage_Message 1638  
               ??i2_SetTimer0 0003                   ??_SetTimer0 001C              __size_of_BusyADC 000E  
            __size_of_ReadADC 0010                      __Hrparam 0000              __size_of_OpenADC 004E  
                    __Lrparam 0000                  __Lsmallconst 1000            __CFG_BOREN$SBORDIS 000000  
             _RS485_Send_Date 17F0              __size_of___lbmod 0032              __size_of_Sys_Cyc 0180  
            __size_of___ftdiv 0152              __size_of___lldiv 008C              __size_of___ftmul 0102  
            __size_of___llmod 0070              __size_of___lwdiv 005C              __size_of___lwmod 004C  
                    ___ftpack 172A                      ___lwtoft 1EDC    __end_of_TM1640_Writer_Byte 1D20  
             ___lwdiv@divisor 001C               ___lwdiv@counter 001E                      __ptext10 17F0  
                    __ptext11 1306                      __ptext20 2034                      __ptext12 1A0A  
                    __ptext21 2010                      __ptext13 187E                      __ptext30 201E  
                    __ptext22 1FB6                      __ptext14 1AEA                      __ptext31 1FEE  
                    __ptext23 190A                      __ptext15 1EDC                      __ptext40 1C4C  
                    __ptext32 1BB2                      __ptext24 202A                      __ptext16 1536  
                    __ptext41 1D5A                      __ptext25 1F02                      __ptext17 11B4  
                    __ptext42 1D94                      __ptext34 1A7A                      __ptext26 1CE2  
                    __ptext18 172A                      __ptext35 1E5E                      __ptext27 1F4C  
                    __ptext19 2000                      __ptext36 1638                      __ptext28 1F70  
                    __ptext37 1DCC                      __ptext29 1FD4                      __ptext38 1C98  
                    __ptext39 1012        __end_of_Manage_Message 172A                 __size_of_main 003A  
         __CFG_RTCOSC$SOSCREF 000000                    _CRC_Verify 1306                 _Key_FSM_Reset 1C98  
        __size_of_Timer0_Init 0024           __end_ofi2_SetTimer0 1E8E           __CFG_INTOSCSEL$HIGH 000000  
                  _LED_Number 1001            __CFG_WDTEN$SWDTDIS 000000                    _INTCONbits 000FF2  
        __size_of_Show_Result 007C                    _RS485_Init 1FB6               ?_Manage_Message 0001  
                    intlevel2 0000              ___lwmod@dividend 001A              ___lldiv@dividend 001A  
                  _RCSTA2bits 000F22       __end_of_RS485_Send_Date 187E                ?_Key_FSM_Reset 0001  
          __CFG_WDTPS$1048576 000000              ___lldiv@quotient 0022               ___lwmod@divisor 001C  
             ___lwmod@counter 001E                 ?_Key_FSM_Read 0001                 ?_Key_FSM_Scan 0001  
         __CFG_BORPWR$ZPBORMV 000000            __size_of_ADC6_Init 0012                   i2_SetTimer0 1E5E  
                 ?_CRC_Verify 0027           _TM1640_Show_integer 1430  
