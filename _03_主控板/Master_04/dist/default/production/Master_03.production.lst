

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Dec 19 16:52:15 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F67K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    68  0000                     
    69                           	psect	idataBANK0
    70  001848                     __pidataBANK0:
    71                           	opt stack 0
    72                           
    73                           ;initializer for _LED_Number
    74  001848  3F                 	db	63
    75  001849  06                 	db	6
    76  00184A  5B                 	db	91
    77  00184B  4F                 	db	79
    78  00184C  66                 	db	102
    79  00184D  6D                 	db	109
    80  00184E  7D                 	db	125
    81  00184F  07                 	db	7
    82  001850  7F                 	db	127
    83  001851  6F                 	db	111
    84  001852  77                 	db	119
    85  001853  7C                 	db	124
    86  001854  39                 	db	57
    87  001855  5E                 	db	94
    88  001856  79                 	db	121
    89  001857  71                 	db	113
    90  0000                     _ANSEL4	set	31020
    91  0000                     _ANSEL6	set	31022
    92  0000                     _ANSEL7	set	31023
    93  0000                     _ANSEL8	set	31008
    94  0000                     _ADCON0	set	4034
    95  0000                     _ADCON0bits	set	4034
    96  0000                     _ADCON1	set	4033
    97  0000                     _ADCON2	set	4032
    98  0000                     _ADRESH	set	4036
    99  0000                     _ADRESL	set	4035
   100  0000                     _INTCONbits	set	4082
   101  0000                     _PIE1bits	set	3997
   102  0000                     _PIR1bits	set	3998
   103  0000                     _RCREG1	set	4014
   104  0000                     _RCSTA1	set	4011
   105  0000                     _RCSTA1bits	set	4011
   106  0000                     _SPBRG1	set	4015
   107  0000                     _SPBRGH1	set	4052
   108  0000                     _TMR0H	set	4055
   109  0000                     _TMR0L	set	4054
   110  0000                     _TXREG1	set	4013
   111  0000                     _TXSTA1	set	4012
   112  0000                     _TXSTA1bits	set	4012
   113  0000                     _GIE	set	32663
   114  0000                     _IPEN	set	32391
   115  0000                     _PSA	set	32427
   116  0000                     _RA4	set	31748
   117  0000                     _RA5	set	31749
   118  0000                     _RB0	set	31752
   119  0000                     _RB1	set	31753
   120  0000                     _RC0	set	31760
   121  0000                     _RC1	set	31761
   122  0000                     _RC1IF	set	31989
   123  0000                     _RD0	set	31768
   124  0000                     _RD1	set	31769
   125  0000                     _RD2	set	31770
   126  0000                     _RD3	set	31771
   127  0000                     _RD4	set	31772
   128  0000                     _RD5	set	31773
   129  0000                     _RD6	set	31774
   130  0000                     _RD7	set	31775
   131  0000                     _RF1	set	31785
   132  0000                     _RF2	set	31786
   133  0000                     _RF3	set	31787
   134  0000                     _T08BIT	set	32430
   135  0000                     _T0CS	set	32429
   136  0000                     _T0PS0	set	32424
   137  0000                     _T0PS1	set	32425
   138  0000                     _T0PS2	set	32426
   139  0000                     _T0SE	set	32428
   140  0000                     _TMR0IE	set	32661
   141  0000                     _TMR0IF	set	32658
   142  0000                     _TMR0ON	set	32431
   143  0000                     _TRISA4	set	31892
   144  0000                     _TRISA5	set	31893
   145  0000                     _TRISB0	set	31896
   146  0000                     _TRISB1	set	31897
   147  0000                     _TRISB2	set	31898
   148  0000                     _TRISC0	set	31904
   149  0000                     _TRISC1	set	31905
   150  0000                     _TRISC6	set	31910
   151  0000                     _TRISC7	set	31911
   152  0000                     _TRISD0	set	31912
   153  0000                     _TRISD1	set	31913
   154  0000                     _TRISD2	set	31914
   155  0000                     _TRISD3	set	31915
   156  0000                     _TRISD4	set	31916
   157  0000                     _TRISD5	set	31917
   158  0000                     _TRISD6	set	31918
   159  0000                     _TRISD7	set	31919
   160  0000                     _TRISF1	set	31929
   161  0000                     _TRISF2	set	31930
   162  0000                     _TRISF3	set	31931
   163                           
   164                           ; #config settings
   165  0000                     
   166                           	psect	cinit
   167  0014FC                     __pcinit:
   168                           	opt stack 0
   169  0014FC                     start_initialization:
   170                           	opt stack 0
   171  0014FC                     __initialization:
   172                           	opt stack 0
   173                           
   174                           ; Clear objects allocated to BANK0 (142 bytes)
   175  0014FC  EE00  F060         	lfsr	0,__pbssBANK0
   176  001500  0E8E               	movlw	142
   177  001502                     clear_0:
   178  001502  6AEE               	clrf	postinc0,c
   179  001504  06E8               	decf	wreg,f,c
   180  001506  E1FD               	bnz	clear_0
   181                           
   182                           ; Clear objects allocated to COMRAM (21 bytes)
   183  001508  EE00  F033         	lfsr	0,__pbssCOMRAM
   184  00150C  0E15               	movlw	21
   185  00150E                     clear_1:
   186  00150E  6AEE               	clrf	postinc0,c
   187  001510  06E8               	decf	wreg,f,c
   188  001512  E1FD               	bnz	clear_1
   189                           
   190                           ; Initialize objects allocated to BANK0 (16 bytes)
   191                           ; load TBLPTR registers with __pidataBANK0
   192  001514  0E48               	movlw	low __pidataBANK0
   193  001516  6EF6               	movwf	tblptrl,c
   194  001518  0E18               	movlw	high __pidataBANK0
   195  00151A  6EF7               	movwf	tblptrh,c
   196  00151C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   197  00151E  6EF8               	movwf	tblptru,c
   198  001520  EE00  F0EE         	lfsr	0,__pdataBANK0
   199  001524  EE10 F010          	lfsr	1,16
   200  001528                     copy_data0:
   201  001528  0009               	tblrd		*+
   202  00152A  CFF5 FFEE          	movff	tablat,postinc0
   203  00152E  50E5               	movf	postdec1,w,c
   204  001530  50E1               	movf	fsr1l,w,c
   205  001532  E1FA               	bnz	copy_data0
   206  001534                     end_of_initialization:
   207                           	opt stack 0
   208  001534                     __end_of__initialization:
   209                           	opt stack 0
   210  001534  0100               	movlb	0
   211  001536  EFF4  F00A         	goto	_main	;jump to C main() function
   212                           tblptru	equ	0xFF8
   213                           tblptrh	equ	0xFF7
   214                           tblptrl	equ	0xFF6
   215                           tablat	equ	0xFF5
   216                           postinc0	equ	0xFEE
   217                           wreg	equ	0xFE8
   218                           postdec1	equ	0xFE5
   219                           fsr1l	equ	0xFE1
   220                           
   221                           	psect	bssCOMRAM
   222  000033                     __pbssCOMRAM:
   223                           	opt stack 0
   224  000033                     _g_Timer_Cyc:
   225                           	opt stack 0
   226  000033                     	ds	4
   227  000037                     _gf_ADC6_Buff:
   228                           	opt stack 0
   229  000037                     	ds	3
   230  00003A                     Pulse_1Khz@_overturn_1Khz:
   231                           	opt stack 0
   232  00003A                     	ds	1
   233  00003B                     Sys_Cyc@_Byte:
   234                           	opt stack 0
   235  00003B                     	ds	1
   236  00003C                     Sys_Cyc@_flag:
   237                           	opt stack 0
   238  00003C                     	ds	1
   239  00003D                     Sys_Cyc@_overturn_LED:
   240                           	opt stack 0
   241  00003D                     	ds	1
   242  00003E                     _LED_BUS:
   243                           	opt stack 0
   244  00003E                     	ds	1
   245  00003F                     _g_RS485_Byte:
   246                           	opt stack 0
   247  00003F                     	ds	1
   248  000040                     _g_RS485_Receive_Flag:
   249                           	opt stack 0
   250  000040                     	ds	1
   251  000041                     _gs_Handle_Switch:
   252                           	opt stack 0
   253  000041                     	ds	7
   254                           tblptru	equ	0xFF8
   255                           tblptrh	equ	0xFF7
   256                           tblptrl	equ	0xFF6
   257                           tablat	equ	0xFF5
   258                           postinc0	equ	0xFEE
   259                           wreg	equ	0xFE8
   260                           postdec1	equ	0xFE5
   261                           fsr1l	equ	0xFE1
   262                           
   263                           	psect	bssBANK0
   264  000060                     __pbssBANK0:
   265                           	opt stack 0
   266  000060                     _ReceiveBuff:
   267                           	opt stack 0
   268  000060                     	ds	10
   269  00006A                     _gsa_Handle_Msg:
   270                           	opt stack 0
   271  00006A                     	ds	70
   272  0000B0                     _gs_Local_Key_User:
   273                           	opt stack 0
   274  0000B0                     	ds	21
   275  0000C5                     _s_Local_Key_FSM:
   276                           	opt stack 0
   277  0000C5                     	ds	21
   278  0000DA                     _ga_RS485_ReceiveBuff:
   279                           	opt stack 0
   280  0000DA                     	ds	10
   281  0000E4                     _ga_RS485_SendBuff:
   282                           	opt stack 0
   283  0000E4                     	ds	10
   284                           tblptru	equ	0xFF8
   285                           tblptrh	equ	0xFF7
   286                           tblptrl	equ	0xFF6
   287                           tablat	equ	0xFF5
   288                           postinc0	equ	0xFEE
   289                           wreg	equ	0xFE8
   290                           postdec1	equ	0xFE5
   291                           fsr1l	equ	0xFE1
   292                           
   293                           	psect	dataBANK0
   294  0000EE                     __pdataBANK0:
   295                           	opt stack 0
   296  0000EE                     _LED_Number:
   297                           	opt stack 0
   298  0000EE                     	ds	16
   299                           tblptru	equ	0xFF8
   300                           tblptrh	equ	0xFF7
   301                           tblptrl	equ	0xFF6
   302                           tablat	equ	0xFF5
   303                           postinc0	equ	0xFEE
   304                           wreg	equ	0xFE8
   305                           postdec1	equ	0xFE5
   306                           fsr1l	equ	0xFE1
   307                           
   308                           	psect	cstackBANK1
   309  000100                     __pcstackBANK1:
   310                           	opt stack 0
   311  000100                     ?___ftdiv:
   312                           	opt stack 0
   313  000100                     RS485_SendDate@date_dress:
   314                           	opt stack 0
   315  000100                     RS485_ManageMessage@DataBuff:
   316                           	opt stack 0
   317  000100                     ___ftdiv@f1:
   318                           	opt stack 0
   319                           
   320                           ; 3 bytes @ 0x0
   321  000100                     	ds	2
   322  000102                     RS485_SendDate@date_lenth:
   323                           	opt stack 0
   324  000102                     RS485_ManageMessage@date_lenth:
   325                           	opt stack 0
   326                           
   327                           ; 1 bytes @ 0x2
   328  000102                     	ds	1
   329  000103                     ??_RS485_ManageMessage:
   330  000103                     ___ftdiv@f2:
   331                           	opt stack 0
   332                           
   333                           ; 3 bytes @ 0x3
   334  000103                     	ds	3
   335  000106                     ??___ftdiv:
   336                           
   337                           ; 0 bytes @ 0x6
   338  000106                     	ds	2
   339  000108                     RS485_ManageMessage@CRC_H:
   340                           	opt stack 0
   341                           
   342                           ; 1 bytes @ 0x8
   343  000108                     	ds	1
   344  000109                     RS485_ManageMessage@CRC_L:
   345                           	opt stack 0
   346  000109                     ___ftdiv@cntr:
   347                           	opt stack 0
   348                           
   349                           ; 1 bytes @ 0x9
   350  000109                     	ds	1
   351  00010A                     RS485_ManageMessage@from_dress:
   352                           	opt stack 0
   353  00010A                     ___ftdiv@f3:
   354                           	opt stack 0
   355                           
   356                           ; 3 bytes @ 0xA
   357  00010A                     	ds	3
   358  00010D                     ___ftdiv@exp:
   359                           	opt stack 0
   360                           
   361                           ; 1 bytes @ 0xD
   362  00010D                     	ds	1
   363  00010E                     ___ftdiv@sign:
   364                           	opt stack 0
   365                           
   366                           ; 1 bytes @ 0xE
   367  00010E                     	ds	1
   368  00010F                     ??_Run:
   369                           
   370                           ; 0 bytes @ 0xF
   371  00010F                     	ds	4
   372                           tblptru	equ	0xFF8
   373                           tblptrh	equ	0xFF7
   374                           tblptrl	equ	0xFF6
   375                           tablat	equ	0xFF5
   376                           postinc0	equ	0xFEE
   377                           wreg	equ	0xFE8
   378                           postdec1	equ	0xFE5
   379                           fsr1l	equ	0xFE1
   380                           
   381                           	psect	cstackBANK0
   382  0000FE                     __pcstackBANK0:
   383                           	opt stack 0
   384  0000FE                     
   385                           ; 0 bytes @ 0x0
   386  0000FE                     	ds	1
   387                           tblptru	equ	0xFF8
   388                           tblptrh	equ	0xFF7
   389                           tblptrl	equ	0xFF6
   390                           tablat	equ	0xFF5
   391                           postinc0	equ	0xFEE
   392                           wreg	equ	0xFE8
   393                           postdec1	equ	0xFE5
   394                           fsr1l	equ	0xFE1
   395                           
   396                           	psect	cstackCOMRAM
   397  000001                     __pcstackCOMRAM:
   398                           	opt stack 0
   399  000001                     ?i2___llmod:
   400                           	opt stack 0
   401  000001                     Delay_1Khz@a:
   402                           	opt stack 0
   403  000001                     i2LED_Control@_switch:
   404                           	opt stack 0
   405  000001                     i2SetTimer0@_tmr:
   406                           	opt stack 0
   407  000001                     i2___llmod@dividend:
   408                           	opt stack 0
   409                           
   410                           ; 4 bytes @ 0x0
   411  000001                     	ds	1
   412  000002                     Delay_1Khz@b:
   413                           	opt stack 0
   414  000002                     i2LED_Control@_LED_num:
   415                           	opt stack 0
   416                           
   417                           ; 1 bytes @ 0x1
   418  000002                     	ds	1
   419  000003                     ??i2_SetTimer0:
   420  000003                     Delay_1Khz@c:
   421                           	opt stack 0
   422                           
   423                           ; 1 bytes @ 0x2
   424  000003                     	ds	1
   425  000004                     Pulse_1Khz@_QD:
   426                           	opt stack 0
   427                           
   428                           ; 1 bytes @ 0x3
   429  000004                     	ds	1
   430  000005                     Pulse_1Khz@_pulse:
   431                           	opt stack 0
   432  000005                     i2___llmod@divisor:
   433                           	opt stack 0
   434                           
   435                           ; 4 bytes @ 0x4
   436  000005                     	ds	4
   437  000009                     i2___llmod@counter:
   438                           	opt stack 0
   439                           
   440                           ; 1 bytes @ 0x8
   441  000009                     	ds	1
   442  00000A                     ??_Sys_Cyc:
   443                           
   444                           ; 0 bytes @ 0x9
   445  00000A                     	ds	14
   446  000018                     Sys_Cyc@_temp:
   447                           	opt stack 0
   448                           
   449                           ; 1 bytes @ 0x17
   450  000018                     	ds	1
   451  000019                     ??_Key_ReadFSM:
   452  000019                     ?_ReadADC:
   453                           	opt stack 0
   454  000019                     ?___wmul:
   455                           	opt stack 0
   456  000019                     ?___lwdiv:
   457                           	opt stack 0
   458  000019                     ?___lwmod:
   459                           	opt stack 0
   460  000019                     ?___ftpack:
   461                           	opt stack 0
   462  000019                     ?___lldiv:
   463                           	opt stack 0
   464  000019                     ?___llmod:
   465                           	opt stack 0
   466  000019                     delay1ms@a:
   467                           	opt stack 0
   468  000019                     Key_ResetFSM@t:
   469                           	opt stack 0
   470  000019                     LED_Control@_switch:
   471                           	opt stack 0
   472  000019                     TM1640_Delay@Time:
   473                           	opt stack 0
   474  000019                     OpenADC@config2:
   475                           	opt stack 0
   476  000019                     ___lbmod@divisor:
   477                           	opt stack 0
   478  000019                     SetTimer0@_tmr:
   479                           	opt stack 0
   480  000019                     Open1USART@spbrg:
   481                           	opt stack 0
   482  000019                     ___wmul@multiplier:
   483                           	opt stack 0
   484  000019                     ___lwdiv@dividend:
   485                           	opt stack 0
   486  000019                     ___lwmod@dividend:
   487                           	opt stack 0
   488  000019                     ___ftpack@arg:
   489                           	opt stack 0
   490  000019                     ___lldiv@dividend:
   491                           	opt stack 0
   492  000019                     ___llmod@dividend:
   493                           	opt stack 0
   494                           
   495                           ; 4 bytes @ 0x18
   496  000019                     	ds	1
   497  00001A                     delay1ms@b:
   498                           	opt stack 0
   499  00001A                     LED_Control@_LED_num:
   500                           	opt stack 0
   501  00001A                     TM1640_Delay@i:
   502                           	opt stack 0
   503  00001A                     OpenADC@config3:
   504                           	opt stack 0
   505  00001A                     ___lbmod@dividend:
   506                           	opt stack 0
   507                           
   508                           ; 1 bytes @ 0x19
   509  00001A                     	ds	1
   510  00001B                     ??_SetTimer0:
   511  00001B                     ??_OpenADC:
   512  00001B                     ??_ReadADC:
   513  00001B                     delay1ms@c:
   514                           	opt stack 0
   515  00001B                     TM1640_Writer_Byte@Date:
   516                           	opt stack 0
   517  00001B                     Open1USART@config:
   518                           	opt stack 0
   519  00001B                     ___lbmod@counter:
   520                           	opt stack 0
   521  00001B                     ___wmul@multiplicand:
   522                           	opt stack 0
   523  00001B                     ___lwdiv@divisor:
   524                           	opt stack 0
   525  00001B                     ___lwmod@divisor:
   526                           	opt stack 0
   527                           
   528                           ; 2 bytes @ 0x1A
   529  00001B                     	ds	1
   530  00001C                     TM1640_Writer_Byte@mask:
   531                           	opt stack 0
   532  00001C                     ___ftpack@exp:
   533                           	opt stack 0
   534  00001C                     ___lbmod@rem:
   535                           	opt stack 0
   536  00001C                     delay_ms@_ms:
   537                           	opt stack 0
   538                           
   539                           ; 2 bytes @ 0x1B
   540  00001C                     	ds	1
   541  00001D                     Key_ReadFSM@key_num_mate:
   542                           	opt stack 0
   543  00001D                     OpenADC@config:
   544                           	opt stack 0
   545  00001D                     ___ftpack@sign:
   546                           	opt stack 0
   547  00001D                     ___lwmod@counter:
   548                           	opt stack 0
   549  00001D                     ___wmul@product:
   550                           	opt stack 0
   551  00001D                     ___lwdiv@quotient:
   552                           	opt stack 0
   553  00001D                     ___lldiv@divisor:
   554                           	opt stack 0
   555  00001D                     ___llmod@divisor:
   556                           	opt stack 0
   557                           
   558                           ; 4 bytes @ 0x1C
   559  00001D                     	ds	1
   560  00001E                     ??___ftpack:
   561  00001E                     Key_ReadFSM@key_num:
   562                           	opt stack 0
   563  00001E                     TM1640_Writer_Dates@Date:
   564                           	opt stack 0
   565  00001E                     Relay_Control@_switch:
   566                           	opt stack 0
   567                           
   568                           ; 1 bytes @ 0x1D
   569  00001E                     	ds	1
   570  00001F                     ??_Key_ManageMessage:
   571  00001F                     TM1640_Writer_Dates@Addr:
   572                           	opt stack 0
   573  00001F                     Relay_Control@relay_num:
   574                           	opt stack 0
   575  00001F                     ___lwdiv@counter:
   576                           	opt stack 0
   577                           
   578                           ; 1 bytes @ 0x1E
   579  00001F                     	ds	1
   580  000020                     TM1640_Show_integer@Numbers:
   581                           	opt stack 0
   582                           
   583                           ; 2 bytes @ 0x1F
   584  000020                     	ds	1
   585  000021                     ?___lwtoft:
   586                           	opt stack 0
   587  000021                     ___llmod@counter:
   588                           	opt stack 0
   589  000021                     ___lwtoft@c:
   590                           	opt stack 0
   591  000021                     ___lldiv@quotient:
   592                           	opt stack 0
   593                           
   594                           ; 4 bytes @ 0x20
   595  000021                     	ds	1
   596  000022                     ??_ShowResult:
   597  000022                     
   598                           ; 0 bytes @ 0x21
   599  000022                     	ds	2
   600  000024                     ?___ftmul:
   601                           	opt stack 0
   602  000024                     ___ftmul@f1:
   603                           	opt stack 0
   604                           
   605                           ; 3 bytes @ 0x23
   606  000024                     	ds	1
   607  000025                     ___lldiv@counter:
   608                           	opt stack 0
   609                           
   610                           ; 1 bytes @ 0x24
   611  000025                     	ds	1
   612  000026                     VerifyCRC@DataBuff:
   613                           	opt stack 0
   614                           
   615                           ; 2 bytes @ 0x25
   616  000026                     	ds	1
   617  000027                     ___ftmul@f2:
   618                           	opt stack 0
   619                           
   620                           ; 3 bytes @ 0x26
   621  000027                     	ds	1
   622  000028                     VerifyCRC@date_lenth:
   623                           	opt stack 0
   624                           
   625                           ; 1 bytes @ 0x27
   626  000028                     	ds	1
   627  000029                     ??_VerifyCRC:
   628                           
   629                           ; 0 bytes @ 0x28
   630  000029                     	ds	1
   631  00002A                     ??___ftmul:
   632                           
   633                           ; 0 bytes @ 0x29
   634  00002A                     	ds	3
   635  00002D                     ___ftmul@exp:
   636                           	opt stack 0
   637                           
   638                           ; 1 bytes @ 0x2C
   639  00002D                     	ds	1
   640  00002E                     ___ftmul@f3_as_product:
   641                           	opt stack 0
   642  00002E                     VerifyCRC@CRC_Value:
   643                           	opt stack 0
   644                           
   645                           ; 4 bytes @ 0x2D
   646  00002E                     	ds	3
   647  000031                     ___ftmul@cntr:
   648                           	opt stack 0
   649                           
   650                           ; 1 bytes @ 0x30
   651  000031                     	ds	1
   652  000032                     VerifyCRC@CRC_Byte:
   653                           	opt stack 0
   654  000032                     ___ftmul@sign:
   655                           	opt stack 0
   656                           
   657                           ; 1 bytes @ 0x31
   658  000032                     	ds	1
   659  000033                     tblptru	equ	0xFF8
   660                           tblptrh	equ	0xFF7
   661                           tblptrl	equ	0xFF6
   662                           tablat	equ	0xFF5
   663                           postinc0	equ	0xFEE
   664                           wreg	equ	0xFE8
   665                           postdec1	equ	0xFE5
   666                           fsr1l	equ	0xFE1
   667                           
   668                           ; 0 bytes @ 0x32
   669 ;;
   670 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   671 ;;
   672 ;; *************** function _main *****************
   673 ;; Defined at:
   674 ;;		line 40 in file "_01_USER/main.c"
   675 ;; Parameters:    Size  Location     Type
   676 ;;		None
   677 ;; Auto vars:     Size  Location     Type
   678 ;;		None
   679 ;; Return value:  Size  Location     Type
   680 ;;                  2   24[None  ] int 
   681 ;; Registers used:
   682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   683 ;; Tracked objects:
   684 ;;		On entry : 0/0
   685 ;;		On exit  : 0/0
   686 ;;		Unchanged: 0/0
   687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   692 ;;Total ram usage:        0 bytes
   693 ;; Hardware stack levels required when called:    8
   694 ;; This function calls:
   695 ;;		_ADC6_Init
   696 ;;		_GPIO_Config
   697 ;;		_Init_TM1640
   698 ;;		_Key_Init
   699 ;;		_ManageMessage
   700 ;;		_RS485_Init
   701 ;;		_Relay_Init
   702 ;;		_Run
   703 ;;		_SCR_Init
   704 ;;		_ShowResult
   705 ;;		_Timer0_Init
   706 ;; This function is called by:
   707 ;;		Startup code after reset
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711                           	psect	text0
   712  0015E8                     __ptext0:
   713                           	opt stack 0
   714  0015E8                     _main:
   715                           	opt stack 23
   716                           
   717                           ;main.c: 45: GPIO_Config();
   718                           
   719                           ; BSR set to: 0
   720                           ;incstack = 0
   721  0015E8  EC4A  F00C         	call	_GPIO_Config	;wreg free
   722                           
   723                           ;main.c: 46: Key_Init();
   724  0015EC  ECD8  F00B         	call	_Key_Init	;wreg free
   725                           
   726                           ;main.c: 47: Timer0_Init();
   727  0015F0  EC91  F00B         	call	_Timer0_Init	;wreg free
   728                           
   729                           ;main.c: 48: Init_TM1640();
   730  0015F4  EC7E  F00B         	call	_Init_TM1640	;wreg free
   731                           
   732                           ;main.c: 49: ADC6_Init();
   733  0015F8  EC1B  F00C         	call	_ADC6_Init	;wreg free
   734                           
   735                           ;main.c: 50: RS485_Init();
   736  0015FC  EC0F  F00C         	call	_RS485_Init	;wreg free
   737                           
   738                           ;main.c: 51: Relay_Init();
   739  001600  EC3B  F00C         	call	_Relay_Init	;wreg free
   740                           
   741                           ;main.c: 52: SCR_Init();
   742  001604  EC42  F00C         	call	_SCR_Init	;wreg free
   743  001608  D000               	goto	l3679
   744  00160A                     l3679:
   745                           
   746                           ;main.c: 56: {
   747                           ;main.c: 57: ManageMessage();
   748  00160A  ECE7  F00B         	call	_ManageMessage	;wreg free
   749                           
   750                           ;main.c: 58: Run();
   751  00160E  EC84  F008         	call	_Run	;wreg free
   752                           
   753                           ;main.c: 59: ShowResult();
   754  001612  EC48  F007         	call	_ShowResult	;wreg free
   755  001616  D7F9               	goto	l3679
   756                           
   757                           ;main.c: 60: }
   758                           ;main.c: 62: return 0;
   759                           ;	Return value of _main is never used
   760  001618  EFD1  F000         	goto	start
   761  00161C                     __end_of_main:
   762                           	opt stack 0
   763                           tblptru	equ	0xFF8
   764                           tblptrh	equ	0xFF7
   765                           tblptrl	equ	0xFF6
   766                           tablat	equ	0xFF5
   767                           postinc0	equ	0xFEE
   768                           wreg	equ	0xFE8
   769                           postdec1	equ	0xFE5
   770                           fsr1l	equ	0xFE1
   771                           
   772 ;; *************** function _Timer0_Init *****************
   773 ;; Defined at:
   774 ;;		line 43 in file "_01_USER/My_Timer.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;		None
   777 ;; Auto vars:     Size  Location     Type
   778 ;;		None
   779 ;; Return value:  Size  Location     Type
   780 ;;		None               void
   781 ;; Registers used:
   782 ;;		wreg, status,2, status,0, cstack
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   792 ;;Total ram usage:        0 bytes
   793 ;; Hardware stack levels used:    1
   794 ;; Hardware stack levels required when called:    4
   795 ;; This function calls:
   796 ;;		_SetTimer0
   797 ;; This function is called by:
   798 ;;		_main
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802                           	psect	text1
   803  001722                     __ptext1:
   804                           	opt stack 0
   805  001722                     _Timer0_Init:
   806                           	opt stack 26
   807                           
   808                           ;My_Timer.c: 45: T08BIT = 0;
   809                           
   810                           ;incstack = 0
   811  001722  9CD5               	bcf	4053,6,c	;volatile
   812                           
   813                           ;My_Timer.c: 46: T0CS = 0;
   814  001724  9AD5               	bcf	4053,5,c	;volatile
   815                           
   816                           ;My_Timer.c: 47: T0SE = 0;
   817  001726  98D5               	bcf	4053,4,c	;volatile
   818                           
   819                           ;My_Timer.c: 48: PSA = 0;
   820  001728  96D5               	bcf	4053,3,c	;volatile
   821                           
   822                           ;My_Timer.c: 49: T0PS2 = 1;
   823  00172A  84D5               	bsf	4053,2,c	;volatile
   824                           
   825                           ;My_Timer.c: 50: T0PS1 = 1;
   826  00172C  82D5               	bsf	4053,1,c	;volatile
   827                           
   828                           ;My_Timer.c: 51: T0PS0 = 1;
   829  00172E  80D5               	bsf	4053,0,c	;volatile
   830                           
   831                           ;My_Timer.c: 65: SetTimer0(1);
   832  001730  0E00               	movlw	0
   833  001732  6E1A               	movwf	SetTimer0@_tmr+1,c
   834  001734  0E01               	movlw	1
   835  001736  6E19               	movwf	SetTimer0@_tmr,c
   836  001738  EC27  F00B         	call	_SetTimer0	;wreg free
   837                           
   838                           ;My_Timer.c: 66: TMR0ON = 1;
   839  00173C  8ED5               	bsf	4053,7,c	;volatile
   840                           
   841                           ;My_Timer.c: 67: TMR0IE = 1;
   842  00173E  8AF2               	bsf	intcon,5,c	;volatile
   843                           
   844                           ;My_Timer.c: 68: IPEN = 0;GIE = 1;
   845  001740  9ED0               	bcf	4048,7,c	;volatile
   846  001742  8EF2               	bsf	intcon,7,c	;volatile
   847  001744  0012               	return		;funcret
   848  001746                     __end_of_Timer0_Init:
   849                           	opt stack 0
   850                           tblptru	equ	0xFF8
   851                           tblptrh	equ	0xFF7
   852                           tblptrl	equ	0xFF6
   853                           tablat	equ	0xFF5
   854                           intcon	equ	0xFF2
   855                           postinc0	equ	0xFEE
   856                           wreg	equ	0xFE8
   857                           postdec1	equ	0xFE5
   858                           fsr1l	equ	0xFE1
   859                           
   860 ;; *************** function _SetTimer0 *****************
   861 ;; Defined at:
   862 ;;		line 81 in file "_01_USER/My_Timer.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;  _tmr            2   24[COMRAM] unsigned int 
   865 ;; Auto vars:     Size  Location     Type
   866 ;;		None
   867 ;; Return value:  Size  Location     Type
   868 ;;		None               void
   869 ;; Registers used:
   870 ;;		wreg, status,2, status,0
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   876 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   878 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   879 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   880 ;;Total ram usage:        4 bytes
   881 ;; Hardware stack levels used:    1
   882 ;; Hardware stack levels required when called:    3
   883 ;; This function calls:
   884 ;;		Nothing
   885 ;; This function is called by:
   886 ;;		_Timer0_Init
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           	psect	text2
   891  00164E                     __ptext2:
   892                           	opt stack 0
   893  00164E                     _SetTimer0:
   894                           	opt stack 26
   895                           
   896                           ;My_Timer.c: 83: if(_tmr > 0xffff) _tmr = 0xffff;
   897                           
   898                           ;incstack = 0
   899  00164E  D003               	goto	l2889
   900  001650  6819               	setf	SetTimer0@_tmr,c
   901  001652  681A               	setf	SetTimer0@_tmr+1,c
   902  001654  D000               	goto	l2889
   903  001656                     l2889:
   904                           
   905                           ;My_Timer.c: 84: _tmr=0xffff-_tmr;
   906  001656  C019  F01B         	movff	SetTimer0@_tmr,??_SetTimer0
   907  00165A  C01A  F01C         	movff	SetTimer0@_tmr+1,??_SetTimer0+1
   908  00165E  1E1B               	comf	??_SetTimer0,f,c
   909  001660  1E1C               	comf	??_SetTimer0+1,f,c
   910  001662  4A1B               	infsnz	??_SetTimer0,f,c
   911  001664  2A1C               	incf	??_SetTimer0+1,f,c
   912  001666  0EFF               	movlw	255
   913  001668  241B               	addwf	??_SetTimer0,w,c
   914  00166A  6E19               	movwf	SetTimer0@_tmr,c
   915  00166C  0EFF               	movlw	255
   916  00166E  201C               	addwfc	??_SetTimer0+1,w,c
   917  001670  6E1A               	movwf	SetTimer0@_tmr+1,c
   918                           
   919                           ;My_Timer.c: 85: TMR0H = _tmr/256;
   920  001672  501A               	movf	SetTimer0@_tmr+1,w,c
   921  001674  6ED7               	movwf	4055,c	;volatile
   922                           
   923                           ;My_Timer.c: 86: TMR0L = _tmr%256;
   924  001676  C019  FFD6         	movff	SetTimer0@_tmr,4054	;volatile
   925                           
   926                           ;My_Timer.c: 87: TMR0IF = 0;
   927  00167A  94F2               	bcf	intcon,2,c	;volatile
   928  00167C  0012               	return		;funcret
   929  00167E                     __end_of_SetTimer0:
   930                           	opt stack 0
   931                           tblptru	equ	0xFF8
   932                           tblptrh	equ	0xFF7
   933                           tblptrl	equ	0xFF6
   934                           tablat	equ	0xFF5
   935                           intcon	equ	0xFF2
   936                           postinc0	equ	0xFEE
   937                           wreg	equ	0xFE8
   938                           postdec1	equ	0xFE5
   939                           fsr1l	equ	0xFE1
   940                           
   941 ;; *************** function _ShowResult *****************
   942 ;; Defined at:
   943 ;;		line 94 in file "_01_USER/Run.c"
   944 ;; Parameters:    Size  Location     Type
   945 ;;		None
   946 ;; Auto vars:     Size  Location     Type
   947 ;;		None
   948 ;; Return value:  Size  Location     Type
   949 ;;		None               void
   950 ;; Registers used:
   951 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   952 ;; Tracked objects:
   953 ;;		On entry : 0/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   959 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   960 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   961 ;;Total ram usage:        1 bytes
   962 ;; Hardware stack levels used:    1
   963 ;; Hardware stack levels required when called:    7
   964 ;; This function calls:
   965 ;;		_LED_Control
   966 ;;		_TM1640_Show_integer
   967 ;;		_TM1640_Writer_Dates
   968 ;;		___wmul
   969 ;; This function is called by:
   970 ;;		_main
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974                           	psect	text3
   975  000E90                     __ptext3:
   976                           	opt stack 0
   977  000E90                     _ShowResult:
   978                           	opt stack 23
   979                           
   980                           ;Run.c: 96: if( gs_Handle_Switch.Show_Send_Receive )
   981                           
   982                           ;incstack = 0
   983  000E90  5044               	movf	_gs_Handle_Switch+3,w,c
   984  000E92  B4D8               	btfsc	status,2,c
   985  000E94  D021               	goto	l3065
   986                           
   987                           ;Run.c: 97: {
   988                           ;Run.c: 98: TM1640_Show_integer( ga_RS485_SendBuff[g_RS485_Byte] + (g_RS485_Byte * 1000)
      +                           );
   989  000E96  C03F  F019         	movff	_g_RS485_Byte,___wmul@multiplier
   990  000E9A  6A1A               	clrf	___wmul@multiplier+1,c
   991  000E9C  0E03               	movlw	3
   992  000E9E  6E1C               	movwf	___wmul@multiplicand+1,c
   993  000EA0  0EE8               	movlw	232
   994  000EA2  6E1B               	movwf	___wmul@multiplicand,c
   995  000EA4  EC57  F00B         	call	___wmul	;wreg free
   996  000EA8  503F               	movf	_g_RS485_Byte,w,c
   997  000EAA  0D01               	mullw	1
   998  000EAC  0EE4               	movlw	low _ga_RS485_SendBuff
   999  000EAE  24F3               	addwf	prodl,w,c
  1000  000EB0  6ED9               	movwf	fsr2l,c
  1001  000EB2  0E00               	movlw	high _ga_RS485_SendBuff
  1002  000EB4  20F4               	addwfc	prodh,w,c
  1003  000EB6  6EDA               	movwf	fsr2h,c
  1004  000EB8  50DF               	movf	indf2,w,c
  1005  000EBA  6E22               	movwf	??_ShowResult& (0+255),c
  1006  000EBC  5022               	movf	??_ShowResult,w,c
  1007  000EBE  2419               	addwf	?___wmul,w,c
  1008  000EC0  6E20               	movwf	TM1640_Show_integer@Numbers,c
  1009  000EC2  0E00               	movlw	0
  1010  000EC4  201A               	addwfc	?___wmul+1,w,c
  1011  000EC6  6E21               	movwf	TM1640_Show_integer@Numbers+1,c
  1012  000EC8  EC05  F006         	call	_TM1640_Show_integer	;wreg free
  1013                           
  1014                           ;Run.c: 99: LED_Control(1,1);
  1015  000ECC  0E01               	movlw	1
  1016  000ECE  6E19               	movwf	LED_Control@_switch,c
  1017  000ED0  0E01               	movlw	1
  1018  000ED2  EC18  F00A         	call	_LED_Control
  1019                           
  1020                           ;Run.c: 100: }
  1021  000ED6  D021               	goto	l3069
  1022  000ED8                     l3065:
  1023                           
  1024                           ;Run.c: 102: else
  1025                           ;Run.c: 103: {
  1026                           ;Run.c: 104: TM1640_Show_integer( ga_RS485_ReceiveBuff[g_RS485_Byte] + (g_RS485_Byte * 1
      +                          000) );
  1027  000ED8  C03F  F019         	movff	_g_RS485_Byte,___wmul@multiplier
  1028  000EDC  6A1A               	clrf	___wmul@multiplier+1,c
  1029  000EDE  0E03               	movlw	3
  1030  000EE0  6E1C               	movwf	___wmul@multiplicand+1,c
  1031  000EE2  0EE8               	movlw	232
  1032  000EE4  6E1B               	movwf	___wmul@multiplicand,c
  1033  000EE6  EC57  F00B         	call	___wmul	;wreg free
  1034  000EEA  503F               	movf	_g_RS485_Byte,w,c
  1035  000EEC  0D01               	mullw	1
  1036  000EEE  0EDA               	movlw	low _ga_RS485_ReceiveBuff
  1037  000EF0  24F3               	addwf	prodl,w,c
  1038  000EF2  6ED9               	movwf	fsr2l,c
  1039  000EF4  0E00               	movlw	high _ga_RS485_ReceiveBuff
  1040  000EF6  20F4               	addwfc	prodh,w,c
  1041  000EF8  6EDA               	movwf	fsr2h,c
  1042  000EFA  50DF               	movf	indf2,w,c
  1043  000EFC  6E22               	movwf	??_ShowResult& (0+255),c
  1044  000EFE  5022               	movf	??_ShowResult,w,c
  1045  000F00  2419               	addwf	?___wmul,w,c
  1046  000F02  6E20               	movwf	TM1640_Show_integer@Numbers,c
  1047  000F04  0E00               	movlw	0
  1048  000F06  201A               	addwfc	?___wmul+1,w,c
  1049  000F08  6E21               	movwf	TM1640_Show_integer@Numbers+1,c
  1050  000F0A  EC05  F006         	call	_TM1640_Show_integer	;wreg free
  1051                           
  1052                           ;Run.c: 105: LED_Control(1,0);
  1053  000F0E  0E00               	movlw	0
  1054  000F10  6E19               	movwf	LED_Control@_switch,c
  1055  000F12  0E01               	movlw	1
  1056  000F14  EC18  F00A         	call	_LED_Control
  1057  000F18  D000               	goto	l3069
  1058  000F1A                     l3069:
  1059                           
  1060                           ;Run.c: 106: }
  1061                           ;Run.c: 108: TM1640_Writer_Dates(4, LED_BUS);
  1062  000F1A  C03E  F01E         	movff	_LED_BUS,TM1640_Writer_Dates@Date
  1063  000F1E  0E04               	movlw	4
  1064  000F20  ECC7  F00B         	call	_TM1640_Writer_Dates
  1065  000F24  0012               	return		;funcret
  1066  000F26                     __end_of_ShowResult:
  1067                           	opt stack 0
  1068                           tblptru	equ	0xFF8
  1069                           tblptrh	equ	0xFF7
  1070                           tblptrl	equ	0xFF6
  1071                           tablat	equ	0xFF5
  1072                           prodh	equ	0xFF4
  1073                           prodl	equ	0xFF3
  1074                           intcon	equ	0xFF2
  1075                           postinc0	equ	0xFEE
  1076                           wreg	equ	0xFE8
  1077                           postdec1	equ	0xFE5
  1078                           fsr1l	equ	0xFE1
  1079                           indf2	equ	0xFDF
  1080                           fsr2h	equ	0xFDA
  1081                           fsr2l	equ	0xFD9
  1082                           status	equ	0xFD8
  1083                           
  1084 ;; *************** function ___wmul *****************
  1085 ;; Defined at:
  1086 ;;		line 15 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;  multiplier      2   24[COMRAM] unsigned int 
  1089 ;;  multiplicand    2   26[COMRAM] unsigned int 
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;  product         2   28[COMRAM] unsigned int 
  1092 ;; Return value:  Size  Location     Type
  1093 ;;                  2   24[COMRAM] unsigned int 
  1094 ;; Registers used:
  1095 ;;		wreg, status,2, status,0, prodl, prodh
  1096 ;; Tracked objects:
  1097 ;;		On entry : 0/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1101 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1102 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1104 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1105 ;;Total ram usage:        6 bytes
  1106 ;; Hardware stack levels used:    1
  1107 ;; Hardware stack levels required when called:    3
  1108 ;; This function calls:
  1109 ;;		Nothing
  1110 ;; This function is called by:
  1111 ;;		_ShowResult
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115                           	psect	text4
  1116  0016AE                     __ptext4:
  1117                           	opt stack 0
  1118  0016AE                     ___wmul:
  1119                           	opt stack 26
  1120                           
  1121                           ;incstack = 0
  1122  0016AE  5019               	movf	___wmul@multiplier,w,c
  1123  0016B0  021B               	mulwf	___wmul@multiplicand,c
  1124  0016B2  CFF3 F01D          	movff	prodl,___wmul@product
  1125  0016B6  CFF4 F01E          	movff	prodh,___wmul@product+1
  1126  0016BA  5019               	movf	___wmul@multiplier,w,c
  1127  0016BC  021C               	mulwf	___wmul@multiplicand+1,c
  1128  0016BE  50F3               	movf	prodl,w,c
  1129  0016C0  261E               	addwf	___wmul@product+1,f,c
  1130  0016C2  501A               	movf	___wmul@multiplier+1,w,c
  1131  0016C4  021B               	mulwf	___wmul@multiplicand,c
  1132  0016C6  50F3               	movf	prodl,w,c
  1133  0016C8  261E               	addwf	___wmul@product+1,f,c
  1134  0016CA  C01D  F019         	movff	___wmul@product,?___wmul
  1135  0016CE  C01E  F01A         	movff	___wmul@product+1,?___wmul+1
  1136  0016D2  0012               	return	
  1137  0016D4  0012               	return		;funcret
  1138  0016D6                     __end_of___wmul:
  1139                           	opt stack 0
  1140                           tblptru	equ	0xFF8
  1141                           tblptrh	equ	0xFF7
  1142                           tblptrl	equ	0xFF6
  1143                           tablat	equ	0xFF5
  1144                           prodh	equ	0xFF4
  1145                           prodl	equ	0xFF3
  1146                           intcon	equ	0xFF2
  1147                           postinc0	equ	0xFEE
  1148                           wreg	equ	0xFE8
  1149                           postdec1	equ	0xFE5
  1150                           fsr1l	equ	0xFE1
  1151                           indf2	equ	0xFDF
  1152                           fsr2h	equ	0xFDA
  1153                           fsr2l	equ	0xFD9
  1154                           status	equ	0xFD8
  1155                           
  1156 ;; *************** function _TM1640_Show_integer *****************
  1157 ;; Defined at:
  1158 ;;		line 206 in file "_01_USER/TM1640.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;  Numbers         2   31[COMRAM] unsigned int 
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;		None
  1163 ;; Return value:  Size  Location     Type
  1164 ;;		None               void
  1165 ;; Registers used:
  1166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1172 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1175 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1176 ;;Total ram usage:        2 bytes
  1177 ;; Hardware stack levels used:    1
  1178 ;; Hardware stack levels required when called:    6
  1179 ;; This function calls:
  1180 ;;		_TM1640_Writer_Dates
  1181 ;;		___lwdiv
  1182 ;;		___lwmod
  1183 ;; This function is called by:
  1184 ;;		_ShowResult
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188                           	psect	text5
  1189  000C0A                     __ptext5:
  1190                           	opt stack 0
  1191  000C0A                     _TM1640_Show_integer:
  1192                           	opt stack 23
  1193                           
  1194                           ;TM1640.c: 209: TM1640_Writer_Dates(3,LED_Number[Numbers%10]); Numbers/=10;
  1195                           
  1196                           ;incstack = 0
  1197  000C0A  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1198  000C0E  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1199  000C12  0E00               	movlw	0
  1200  000C14  6E1C               	movwf	___lwmod@divisor+1,c
  1201  000C16  0E0A               	movlw	10
  1202  000C18  6E1B               	movwf	___lwmod@divisor,c
  1203  000C1A  ECCD  F009         	call	___lwmod	;wreg free
  1204  000C1E  0EEE               	movlw	low _LED_Number
  1205  000C20  2419               	addwf	?___lwmod,w,c
  1206  000C22  6ED9               	movwf	fsr2l,c
  1207  000C24  0E00               	movlw	high _LED_Number
  1208  000C26  201A               	addwfc	?___lwmod+1,w,c
  1209  000C28  6EDA               	movwf	fsr2h,c
  1210  000C2A  50DF               	movf	indf2,w,c
  1211  000C2C  6E1E               	movwf	TM1640_Writer_Dates@Date,c
  1212  000C2E  0E03               	movlw	3
  1213  000C30  ECC7  F00B         	call	_TM1640_Writer_Dates
  1214  000C34  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1215  000C38  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1216  000C3C  0E00               	movlw	0
  1217  000C3E  6E1C               	movwf	___lwdiv@divisor+1,c
  1218  000C40  0E0A               	movlw	10
  1219  000C42  6E1B               	movwf	___lwdiv@divisor,c
  1220  000C44  EC23  F009         	call	___lwdiv	;wreg free
  1221  000C48  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1222  000C4C  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1223                           
  1224                           ;TM1640.c: 210: TM1640_Writer_Dates(2,LED_Number[Numbers%10]); Numbers/=10;
  1225  000C50  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1226  000C54  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1227  000C58  0E00               	movlw	0
  1228  000C5A  6E1C               	movwf	___lwmod@divisor+1,c
  1229  000C5C  0E0A               	movlw	10
  1230  000C5E  6E1B               	movwf	___lwmod@divisor,c
  1231  000C60  ECCD  F009         	call	___lwmod	;wreg free
  1232  000C64  0EEE               	movlw	low _LED_Number
  1233  000C66  2419               	addwf	?___lwmod,w,c
  1234  000C68  6ED9               	movwf	fsr2l,c
  1235  000C6A  0E00               	movlw	high _LED_Number
  1236  000C6C  201A               	addwfc	?___lwmod+1,w,c
  1237  000C6E  6EDA               	movwf	fsr2h,c
  1238  000C70  50DF               	movf	indf2,w,c
  1239  000C72  6E1E               	movwf	TM1640_Writer_Dates@Date,c
  1240  000C74  0E02               	movlw	2
  1241  000C76  ECC7  F00B         	call	_TM1640_Writer_Dates
  1242  000C7A  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1243  000C7E  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1244  000C82  0E00               	movlw	0
  1245  000C84  6E1C               	movwf	___lwdiv@divisor+1,c
  1246  000C86  0E0A               	movlw	10
  1247  000C88  6E1B               	movwf	___lwdiv@divisor,c
  1248  000C8A  EC23  F009         	call	___lwdiv	;wreg free
  1249  000C8E  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1250  000C92  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1251                           
  1252                           ;TM1640.c: 211: TM1640_Writer_Dates(1,LED_Number[Numbers%10]); Numbers/=10;
  1253  000C96  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1254  000C9A  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1255  000C9E  0E00               	movlw	0
  1256  000CA0  6E1C               	movwf	___lwmod@divisor+1,c
  1257  000CA2  0E0A               	movlw	10
  1258  000CA4  6E1B               	movwf	___lwmod@divisor,c
  1259  000CA6  ECCD  F009         	call	___lwmod	;wreg free
  1260  000CAA  0EEE               	movlw	low _LED_Number
  1261  000CAC  2419               	addwf	?___lwmod,w,c
  1262  000CAE  6ED9               	movwf	fsr2l,c
  1263  000CB0  0E00               	movlw	high _LED_Number
  1264  000CB2  201A               	addwfc	?___lwmod+1,w,c
  1265  000CB4  6EDA               	movwf	fsr2h,c
  1266  000CB6  50DF               	movf	indf2,w,c
  1267  000CB8  6E1E               	movwf	TM1640_Writer_Dates@Date,c
  1268  000CBA  0E01               	movlw	1
  1269  000CBC  ECC7  F00B         	call	_TM1640_Writer_Dates
  1270  000CC0  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1271  000CC4  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1272  000CC8  0E00               	movlw	0
  1273  000CCA  6E1C               	movwf	___lwdiv@divisor+1,c
  1274  000CCC  0E0A               	movlw	10
  1275  000CCE  6E1B               	movwf	___lwdiv@divisor,c
  1276  000CD0  EC23  F009         	call	___lwdiv	;wreg free
  1277  000CD4  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1278  000CD8  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1279                           
  1280                           ;TM1640.c: 212: TM1640_Writer_Dates(0,LED_Number[Numbers%10]);
  1281  000CDC  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1282  000CE0  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1283  000CE4  0E00               	movlw	0
  1284  000CE6  6E1C               	movwf	___lwmod@divisor+1,c
  1285  000CE8  0E0A               	movlw	10
  1286  000CEA  6E1B               	movwf	___lwmod@divisor,c
  1287  000CEC  ECCD  F009         	call	___lwmod	;wreg free
  1288  000CF0  0EEE               	movlw	low _LED_Number
  1289  000CF2  2419               	addwf	?___lwmod,w,c
  1290  000CF4  6ED9               	movwf	fsr2l,c
  1291  000CF6  0E00               	movlw	high _LED_Number
  1292  000CF8  201A               	addwfc	?___lwmod+1,w,c
  1293  000CFA  6EDA               	movwf	fsr2h,c
  1294  000CFC  50DF               	movf	indf2,w,c
  1295  000CFE  6E1E               	movwf	TM1640_Writer_Dates@Date,c
  1296  000D00  0E00               	movlw	0
  1297  000D02  ECC7  F00B         	call	_TM1640_Writer_Dates
  1298  000D06  0012               	return		;funcret
  1299  000D08                     __end_of_TM1640_Show_integer:
  1300                           	opt stack 0
  1301                           tblptru	equ	0xFF8
  1302                           tblptrh	equ	0xFF7
  1303                           tblptrl	equ	0xFF6
  1304                           tablat	equ	0xFF5
  1305                           prodh	equ	0xFF4
  1306                           prodl	equ	0xFF3
  1307                           intcon	equ	0xFF2
  1308                           postinc0	equ	0xFEE
  1309                           wreg	equ	0xFE8
  1310                           postdec1	equ	0xFE5
  1311                           fsr1l	equ	0xFE1
  1312                           indf2	equ	0xFDF
  1313                           fsr2h	equ	0xFDA
  1314                           fsr2l	equ	0xFD9
  1315                           status	equ	0xFD8
  1316                           
  1317 ;; *************** function ___lwmod *****************
  1318 ;; Defined at:
  1319 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;  dividend        2   24[COMRAM] unsigned int 
  1322 ;;  divisor         2   26[COMRAM] unsigned int 
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;  counter         1   28[COMRAM] unsigned char 
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  2   24[COMRAM] unsigned int 
  1327 ;; Registers used:
  1328 ;;		wreg, status,2, status,0
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1334 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1335 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1337 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1338 ;;Total ram usage:        5 bytes
  1339 ;; Hardware stack levels used:    1
  1340 ;; Hardware stack levels required when called:    3
  1341 ;; This function calls:
  1342 ;;		Nothing
  1343 ;; This function is called by:
  1344 ;;		_TM1640_Show_integer
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           	psect	text6
  1349  00139A                     __ptext6:
  1350                           	opt stack 0
  1351  00139A                     ___lwmod:
  1352                           	opt stack 25
  1353                           
  1354                           ;incstack = 0
  1355  00139A  501B               	movf	___lwmod@divisor,w,c
  1356  00139C  101C               	iorwf	___lwmod@divisor+1,w,c
  1357  00139E  B4D8               	btfsc	status,2,c
  1358  0013A0  D01D               	goto	l1182
  1359  0013A2  0E01               	movlw	1
  1360  0013A4  6E1D               	movwf	___lwmod@counter,c
  1361  0013A6  D005               	goto	l2659
  1362  0013A8                     l2657:
  1363  0013A8  90D8               	bcf	status,0,c
  1364  0013AA  361B               	rlcf	___lwmod@divisor,f,c
  1365  0013AC  361C               	rlcf	___lwmod@divisor+1,f,c
  1366  0013AE  2A1D               	incf	___lwmod@counter,f,c
  1367  0013B0  D000               	goto	l2659
  1368  0013B2                     l2659:
  1369  0013B2  BE1C               	btfsc	___lwmod@divisor+1,7,c
  1370  0013B4  D002               	goto	l2661
  1371  0013B6  D7F8               	goto	l2657
  1372  0013B8  D000               	goto	l2661
  1373  0013BA                     l2661:
  1374  0013BA  501B               	movf	___lwmod@divisor,w,c
  1375  0013BC  5C19               	subwf	___lwmod@dividend,w,c
  1376  0013BE  501C               	movf	___lwmod@divisor+1,w,c
  1377  0013C0  581A               	subwfb	___lwmod@dividend+1,w,c
  1378  0013C2  A0D8               	btfss	status,0,c
  1379  0013C4  D005               	goto	l2665
  1380  0013C6  501B               	movf	___lwmod@divisor,w,c
  1381  0013C8  5E19               	subwf	___lwmod@dividend,f,c
  1382  0013CA  501C               	movf	___lwmod@divisor+1,w,c
  1383  0013CC  5A1A               	subwfb	___lwmod@dividend+1,f,c
  1384  0013CE  D000               	goto	l2665
  1385  0013D0                     l2665:
  1386  0013D0  90D8               	bcf	status,0,c
  1387  0013D2  321C               	rrcf	___lwmod@divisor+1,f,c
  1388  0013D4  321B               	rrcf	___lwmod@divisor,f,c
  1389  0013D6  2E1D               	decfsz	___lwmod@counter,f,c
  1390  0013D8  D7F0               	goto	l2661
  1391  0013DA  D000               	goto	l1182
  1392  0013DC                     l1182:
  1393  0013DC  C019  F019         	movff	___lwmod@dividend,?___lwmod
  1394  0013E0  C01A  F01A         	movff	___lwmod@dividend+1,?___lwmod+1
  1395  0013E4  0012               	return		;funcret
  1396  0013E6                     __end_of___lwmod:
  1397                           	opt stack 0
  1398                           tblptru	equ	0xFF8
  1399                           tblptrh	equ	0xFF7
  1400                           tblptrl	equ	0xFF6
  1401                           tablat	equ	0xFF5
  1402                           prodh	equ	0xFF4
  1403                           prodl	equ	0xFF3
  1404                           intcon	equ	0xFF2
  1405                           postinc0	equ	0xFEE
  1406                           wreg	equ	0xFE8
  1407                           postdec1	equ	0xFE5
  1408                           fsr1l	equ	0xFE1
  1409                           indf2	equ	0xFDF
  1410                           fsr2h	equ	0xFDA
  1411                           fsr2l	equ	0xFD9
  1412                           status	equ	0xFD8
  1413                           
  1414 ;; *************** function ___lwdiv *****************
  1415 ;; Defined at:
  1416 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;  dividend        2   24[COMRAM] unsigned int 
  1419 ;;  divisor         2   26[COMRAM] unsigned int 
  1420 ;; Auto vars:     Size  Location     Type
  1421 ;;  quotient        2   28[COMRAM] unsigned int 
  1422 ;;  counter         1   30[COMRAM] unsigned char 
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  2   24[COMRAM] unsigned int 
  1425 ;; Registers used:
  1426 ;;		wreg, status,2, status,0
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1432 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1433 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1435 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1436 ;;Total ram usage:        7 bytes
  1437 ;; Hardware stack levels used:    1
  1438 ;; Hardware stack levels required when called:    3
  1439 ;; This function calls:
  1440 ;;		Nothing
  1441 ;; This function is called by:
  1442 ;;		_TM1640_Show_integer
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           	psect	text7
  1447  001246                     __ptext7:
  1448                           	opt stack 0
  1449  001246                     ___lwdiv:
  1450                           	opt stack 25
  1451                           
  1452                           ;incstack = 0
  1453  001246  0E00               	movlw	0
  1454  001248  6E1E               	movwf	___lwdiv@quotient+1,c
  1455  00124A  0E00               	movlw	0
  1456  00124C  6E1D               	movwf	___lwdiv@quotient,c
  1457  00124E  501B               	movf	___lwdiv@divisor,w,c
  1458  001250  101C               	iorwf	___lwdiv@divisor+1,w,c
  1459  001252  B4D8               	btfsc	status,2,c
  1460  001254  D021               	goto	l1172
  1461  001256  0E01               	movlw	1
  1462  001258  6E1F               	movwf	___lwdiv@counter,c
  1463  00125A  D005               	goto	l2639
  1464  00125C                     l2637:
  1465  00125C  90D8               	bcf	status,0,c
  1466  00125E  361B               	rlcf	___lwdiv@divisor,f,c
  1467  001260  361C               	rlcf	___lwdiv@divisor+1,f,c
  1468  001262  2A1F               	incf	___lwdiv@counter,f,c
  1469  001264  D000               	goto	l2639
  1470  001266                     l2639:
  1471  001266  BE1C               	btfsc	___lwdiv@divisor+1,7,c
  1472  001268  D002               	goto	l2641
  1473  00126A  D7F8               	goto	l2637
  1474  00126C  D000               	goto	l2641
  1475  00126E                     l2641:
  1476  00126E  90D8               	bcf	status,0,c
  1477  001270  361D               	rlcf	___lwdiv@quotient,f,c
  1478  001272  361E               	rlcf	___lwdiv@quotient+1,f,c
  1479  001274  501B               	movf	___lwdiv@divisor,w,c
  1480  001276  5C19               	subwf	___lwdiv@dividend,w,c
  1481  001278  501C               	movf	___lwdiv@divisor+1,w,c
  1482  00127A  581A               	subwfb	___lwdiv@dividend+1,w,c
  1483  00127C  A0D8               	btfss	status,0,c
  1484  00127E  D006               	goto	l2649
  1485  001280  501B               	movf	___lwdiv@divisor,w,c
  1486  001282  5E19               	subwf	___lwdiv@dividend,f,c
  1487  001284  501C               	movf	___lwdiv@divisor+1,w,c
  1488  001286  5A1A               	subwfb	___lwdiv@dividend+1,f,c
  1489  001288  801D               	bsf	___lwdiv@quotient,0,c
  1490  00128A  D000               	goto	l2649
  1491  00128C                     l2649:
  1492  00128C  90D8               	bcf	status,0,c
  1493  00128E  321C               	rrcf	___lwdiv@divisor+1,f,c
  1494  001290  321B               	rrcf	___lwdiv@divisor,f,c
  1495  001292  2E1F               	decfsz	___lwdiv@counter,f,c
  1496  001294  D7EC               	goto	l2641
  1497  001296  D000               	goto	l1172
  1498  001298                     l1172:
  1499  001298  C01D  F019         	movff	___lwdiv@quotient,?___lwdiv
  1500  00129C  C01E  F01A         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1501  0012A0  0012               	return		;funcret
  1502  0012A2                     __end_of___lwdiv:
  1503                           	opt stack 0
  1504                           tblptru	equ	0xFF8
  1505                           tblptrh	equ	0xFF7
  1506                           tblptrl	equ	0xFF6
  1507                           tablat	equ	0xFF5
  1508                           prodh	equ	0xFF4
  1509                           prodl	equ	0xFF3
  1510                           intcon	equ	0xFF2
  1511                           postinc0	equ	0xFEE
  1512                           wreg	equ	0xFE8
  1513                           postdec1	equ	0xFE5
  1514                           fsr1l	equ	0xFE1
  1515                           indf2	equ	0xFDF
  1516                           fsr2h	equ	0xFDA
  1517                           fsr2l	equ	0xFD9
  1518                           status	equ	0xFD8
  1519                           
  1520 ;; *************** function _TM1640_Writer_Dates *****************
  1521 ;; Defined at:
  1522 ;;		line 99 in file "_01_USER/TM1640.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;  Addr            1    wreg     unsigned char 
  1525 ;;  Date            1   29[COMRAM] unsigned char 
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;  Addr            1   30[COMRAM] unsigned char 
  1528 ;; Return value:  Size  Location     Type
  1529 ;;		None               void
  1530 ;; Registers used:
  1531 ;;		wreg, status,2, status,0, cstack
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1537 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1538 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1540 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1541 ;;Total ram usage:        2 bytes
  1542 ;; Hardware stack levels used:    1
  1543 ;; Hardware stack levels required when called:    5
  1544 ;; This function calls:
  1545 ;;		_TM1640_Start
  1546 ;;		_TM1640_Stop
  1547 ;;		_TM1640_Writer_Byte
  1548 ;; This function is called by:
  1549 ;;		_TM1640_Show_integer
  1550 ;;		_ShowResult
  1551 ;;		_TM1640_Show_Numbers
  1552 ;;		_TM1640_Show_Decimal
  1553 ;; This function uses a non-reentrant model
  1554 ;;
  1555                           
  1556                           	psect	text8
  1557  00178E                     __ptext8:
  1558                           	opt stack 0
  1559  00178E                     _TM1640_Writer_Dates:
  1560                           	opt stack 24
  1561                           
  1562                           ;incstack = 0
  1563                           ;TM1640_Writer_Dates@Addr stored from wreg
  1564  00178E  6E1F               	movwf	TM1640_Writer_Dates@Addr,c
  1565                           
  1566                           ;TM1640.c: 101: if((Addr >= 0) && (Addr <= 15))
  1567  001790  0E10               	movlw	16
  1568  001792  601F               	cpfslt	TM1640_Writer_Dates@Addr,c
  1569  001794  0012               	return	
  1570                           
  1571                           ;TM1640.c: 102: {
  1572                           ;TM1640.c: 103: TM1640_Start();
  1573  001796  ECB5  F00B         	call	_TM1640_Start	;wreg free
  1574                           
  1575                           ;TM1640.c: 104: TM1640_Writer_Byte(0xC0 + Addr);
  1576  00179A  501F               	movf	TM1640_Writer_Dates@Addr,w,c
  1577  00179C  0FC0               	addlw	192
  1578  00179E  EC9D  F00A         	call	_TM1640_Writer_Byte
  1579                           
  1580                           ;TM1640.c: 105: TM1640_Writer_Byte(Date);
  1581  0017A2  501E               	movf	TM1640_Writer_Dates@Date,w,c
  1582  0017A4  EC9D  F00A         	call	_TM1640_Writer_Byte
  1583                           
  1584                           ;TM1640.c: 106: TM1640_Stop();
  1585  0017A8  ECA3  F00B         	call	_TM1640_Stop	;wreg free
  1586  0017AC  0012               	return	
  1587  0017AE  0012               	return		;funcret
  1588  0017B0                     __end_of_TM1640_Writer_Dates:
  1589                           	opt stack 0
  1590                           tblptru	equ	0xFF8
  1591                           tblptrh	equ	0xFF7
  1592                           tblptrl	equ	0xFF6
  1593                           tablat	equ	0xFF5
  1594                           prodh	equ	0xFF4
  1595                           prodl	equ	0xFF3
  1596                           intcon	equ	0xFF2
  1597                           postinc0	equ	0xFEE
  1598                           wreg	equ	0xFE8
  1599                           postdec1	equ	0xFE5
  1600                           fsr1l	equ	0xFE1
  1601                           indf2	equ	0xFDF
  1602                           fsr2h	equ	0xFDA
  1603                           fsr2l	equ	0xFD9
  1604                           status	equ	0xFD8
  1605                           
  1606 ;; *************** function _LED_Control *****************
  1607 ;; Defined at:
  1608 ;;		line 58 in file "_01_USER/GPIO.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;  _LED_num        1    wreg     unsigned char 
  1611 ;;  _switch         1   24[COMRAM] unsigned char 
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;  _LED_num        1   25[COMRAM] unsigned char 
  1614 ;; Return value:  Size  Location     Type
  1615 ;;		None               void
  1616 ;; Registers used:
  1617 ;;		wreg, status,2, status,0
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1623 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1624 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1626 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1627 ;;Total ram usage:        2 bytes
  1628 ;; Hardware stack levels used:    1
  1629 ;; Hardware stack levels required when called:    3
  1630 ;; This function calls:
  1631 ;;		Nothing
  1632 ;; This function is called by:
  1633 ;;		_ShowResult
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           	psect	text9
  1638  001430                     __ptext9:
  1639                           	opt stack 0
  1640  001430                     _LED_Control:
  1641                           	opt stack 26
  1642                           
  1643                           ;incstack = 0
  1644                           ;LED_Control@_LED_num stored from wreg
  1645  001430  6E1A               	movwf	LED_Control@_LED_num,c
  1646                           
  1647                           ;GPIO.c: 62: if(_LED_num == 1)
  1648  001432  041A               	decf	LED_Control@_LED_num,w,c
  1649  001434  A4D8               	btfss	status,2,c
  1650  001436  D007               	goto	l2905
  1651                           
  1652                           ;GPIO.c: 63: if(_switch) LED_BUS |= 0x01;
  1653  001438  5019               	movf	LED_Control@_switch,w,c
  1654  00143A  B4D8               	btfsc	status,2,c
  1655  00143C  D002               	goto	l2903
  1656  00143E  803E               	bsf	_LED_BUS,0,c
  1657  001440  D002               	goto	l2905
  1658  001442                     l2903:
  1659                           
  1660                           ;GPIO.c: 64: else LED_BUS &= 0xFE;
  1661  001442  903E               	bcf	_LED_BUS,0,c
  1662  001444  D000               	goto	l2905
  1663  001446                     l2905:
  1664                           
  1665                           ;GPIO.c: 66: if(_LED_num == 2)
  1666  001446  0E02               	movlw	2
  1667  001448  181A               	xorwf	LED_Control@_LED_num,w,c
  1668  00144A  A4D8               	btfss	status,2,c
  1669  00144C  D007               	goto	l2913
  1670                           
  1671                           ;GPIO.c: 67: if(_switch) LED_BUS |= 0x02;
  1672  00144E  5019               	movf	LED_Control@_switch,w,c
  1673  001450  B4D8               	btfsc	status,2,c
  1674  001452  D002               	goto	l2911
  1675  001454  823E               	bsf	_LED_BUS,1,c
  1676  001456  D002               	goto	l2913
  1677  001458                     l2911:
  1678                           
  1679                           ;GPIO.c: 68: else LED_BUS &= 0xFD;
  1680  001458  923E               	bcf	_LED_BUS,1,c
  1681  00145A  D000               	goto	l2913
  1682  00145C                     l2913:
  1683                           
  1684                           ;GPIO.c: 70: if(_LED_num == 3)
  1685  00145C  0E03               	movlw	3
  1686  00145E  181A               	xorwf	LED_Control@_LED_num,w,c
  1687  001460  A4D8               	btfss	status,2,c
  1688  001462  0012               	return	
  1689                           
  1690                           ;GPIO.c: 71: if(_switch) LED_BUS |= 0x04;
  1691  001464  5019               	movf	LED_Control@_switch,w,c
  1692  001466  B4D8               	btfsc	status,2,c
  1693  001468  D002               	goto	l2919
  1694  00146A  843E               	bsf	_LED_BUS,2,c
  1695  00146C  0012               	return	
  1696  00146E                     l2919:
  1697                           
  1698                           ;GPIO.c: 72: else LED_BUS &= 0xFB;
  1699  00146E  943E               	bcf	_LED_BUS,2,c
  1700  001470  0012               	return	
  1701  001472  0012               	return		;funcret
  1702  001474                     __end_of_LED_Control:
  1703                           	opt stack 0
  1704                           tblptru	equ	0xFF8
  1705                           tblptrh	equ	0xFF7
  1706                           tblptrl	equ	0xFF6
  1707                           tablat	equ	0xFF5
  1708                           prodh	equ	0xFF4
  1709                           prodl	equ	0xFF3
  1710                           intcon	equ	0xFF2
  1711                           postinc0	equ	0xFEE
  1712                           wreg	equ	0xFE8
  1713                           postdec1	equ	0xFE5
  1714                           fsr1l	equ	0xFE1
  1715                           indf2	equ	0xFDF
  1716                           fsr2h	equ	0xFDA
  1717                           fsr2l	equ	0xFD9
  1718                           status	equ	0xFD8
  1719                           
  1720 ;; *************** function _SCR_Init *****************
  1721 ;; Defined at:
  1722 ;;		line 38 in file "_01_USER/SCR.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;		None
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;		None
  1727 ;; Return value:  Size  Location     Type
  1728 ;;		None               void
  1729 ;; Registers used:
  1730 ;;		None
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1740 ;;Total ram usage:        0 bytes
  1741 ;; Hardware stack levels used:    1
  1742 ;; Hardware stack levels required when called:    3
  1743 ;; This function calls:
  1744 ;;		Nothing
  1745 ;; This function is called by:
  1746 ;;		_main
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           	psect	text10
  1751  001884                     __ptext10:
  1752                           	opt stack 0
  1753  001884                     _SCR_Init:
  1754                           	opt stack 27
  1755                           
  1756                           ;SCR.c: 41: TRISB1 = 0;
  1757                           
  1758                           ;incstack = 0
  1759  001884  9293               	bcf	3987,1,c	;volatile
  1760                           
  1761                           ;SCR.c: 42: TRISB0 = 0;
  1762  001886  9093               	bcf	3987,0,c	;volatile
  1763                           
  1764                           ;SCR.c: 45: TRISB2 = 1;
  1765  001888  8493               	bsf	3987,2,c	;volatile
  1766                           
  1767                           ;SCR.c: 48: RB1 = 0;
  1768  00188A  9281               	bcf	3969,1,c	;volatile
  1769                           
  1770                           ;SCR.c: 49: RB0 = 0;
  1771  00188C  9081               	bcf	3969,0,c	;volatile
  1772  00188E  0012               	return		;funcret
  1773  001890                     __end_of_SCR_Init:
  1774                           	opt stack 0
  1775                           tblptru	equ	0xFF8
  1776                           tblptrh	equ	0xFF7
  1777                           tblptrl	equ	0xFF6
  1778                           tablat	equ	0xFF5
  1779                           prodh	equ	0xFF4
  1780                           prodl	equ	0xFF3
  1781                           intcon	equ	0xFF2
  1782                           postinc0	equ	0xFEE
  1783                           wreg	equ	0xFE8
  1784                           postdec1	equ	0xFE5
  1785                           fsr1l	equ	0xFE1
  1786                           indf2	equ	0xFDF
  1787                           fsr2h	equ	0xFDA
  1788                           fsr2l	equ	0xFD9
  1789                           status	equ	0xFD8
  1790                           
  1791 ;; *************** function _Run *****************
  1792 ;; Defined at:
  1793 ;;		line 68 in file "_01_USER/Run.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;		None
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;		None
  1798 ;; Return value:  Size  Location     Type
  1799 ;;		None               void
  1800 ;; Registers used:
  1801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1809 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1810 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1811 ;;Total ram usage:        4 bytes
  1812 ;; Hardware stack levels used:    1
  1813 ;; Hardware stack levels required when called:    6
  1814 ;; This function calls:
  1815 ;;		_GetADC6
  1816 ;;		_RS485_SendDate
  1817 ;;		_Relay_Control
  1818 ;; This function is called by:
  1819 ;;		_main
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823                           	psect	text11
  1824  001108                     __ptext11:
  1825                           	opt stack 0
  1826  001108                     _Run:
  1827                           	opt stack 24
  1828                           
  1829                           ;Run.c: 71: if( gs_Handle_Switch.ADC6 ) GetADC6();
  1830                           
  1831                           ;incstack = 0
  1832  001108  5042               	movf	_gs_Handle_Switch+1,w,c
  1833  00110A  B4D8               	btfsc	status,2,c
  1834  00110C  D003               	goto	l3657
  1835  00110E  ECBB  F008         	call	_GetADC6	;wreg free
  1836  001112  D000               	goto	l3657
  1837  001114                     l3657:
  1838                           
  1839                           ;Run.c: 74: if ( gs_Handle_Switch.Usart_OneDate )
  1840  001114  5043               	movf	_gs_Handle_Switch+2,w,c
  1841  001116  B4D8               	btfsc	status,2,c
  1842  001118  D00E               	goto	l3663
  1843                           
  1844                           ;Run.c: 75: {
  1845                           ;Run.c: 76: gs_Handle_Switch.Usart_OneDate = 0;
  1846  00111A  0E00               	movlw	0
  1847  00111C  6E43               	movwf	_gs_Handle_Switch+2,c
  1848                           
  1849                           ;Run.c: 77: RS485_SendDate(ga_RS485_SendBuff,10);
  1850  00111E  0EE4               	movlw	low _ga_RS485_SendBuff
  1851  001120  0101               	movlb	1	; () banked
  1852  001122  6F00               	movwf	RS485_SendDate@date_dress& (0+255),b
  1853  001124  0E00               	movlw	high _ga_RS485_SendBuff
  1854  001126  0101               	movlb	1	; () banked
  1855  001128  6F01               	movwf	(RS485_SendDate@date_dress+1)& (0+255),b
  1856  00112A  0E0A               	movlw	10
  1857  00112C  0101               	movlb	1	; () banked
  1858  00112E  6F02               	movwf	RS485_SendDate@date_lenth& (0+255),b
  1859  001130  ECE7  F006         	call	_RS485_SendDate	;wreg free
  1860  001134  D000               	goto	l3663
  1861  001136                     l3663:
  1862                           
  1863                           ;Run.c: 78: }
  1864                           ;Run.c: 80: Relay_Control(g_RS485_Byte,gs_Handle_Switch.Relay[g_RS485_Byte - 1]);
  1865  001136  0EFF               	movlw	255
  1866  001138  0101               	movlb	1	; () banked
  1867  00113A  6F0F               	movwf	??_Run& (0+255),b
  1868  00113C  0EFF               	movlw	255
  1869  00113E  0101               	movlb	1	; () banked
  1870  001140  6F10               	movwf	(??_Run+1)& (0+255),b
  1871  001142  503F               	movf	_g_RS485_Byte,w,c
  1872  001144  0101               	movlb	1	; () banked
  1873  001146  6F11               	movwf	(??_Run+2)& (0+255),b
  1874  001148  6B12               	clrf	(??_Run+3)& (0+255),b
  1875  00114A  0101               	movlb	1	; () banked
  1876  00114C  510F               	movf	??_Run& (0+255),w,b
  1877  00114E  0101               	movlb	1	; () banked
  1878  001150  2711               	addwf	(??_Run+2)& (0+255),f,b
  1879  001152  0101               	movlb	1	; () banked
  1880  001154  5110               	movf	(??_Run+1)& (0+255),w,b
  1881  001156  0101               	movlb	1	; () banked
  1882  001158  2312               	addwfc	(??_Run+3)& (0+255),f,b
  1883  00115A  0E45               	movlw	low (_gs_Handle_Switch+4)
  1884  00115C  0101               	movlb	1	; () banked
  1885  00115E  2511               	addwf	(??_Run+2)& (0+255),w,b
  1886  001160  6ED9               	movwf	fsr2l,c
  1887  001162  0E00               	movlw	high (_gs_Handle_Switch+4)
  1888  001164  0101               	movlb	1	; () banked
  1889  001166  2112               	addwfc	(??_Run+3)& (0+255),w,b
  1890  001168  6EDA               	movwf	fsr2h,c
  1891  00116A  50DF               	movf	indf2,w,c
  1892  00116C  6E1E               	movwf	Relay_Control@_switch,c
  1893  00116E  503F               	movf	_g_RS485_Byte,w,c
  1894  001170  ECD9  F007         	call	_Relay_Control
  1895  001174  0012               	return		;funcret
  1896  001176                     __end_of_Run:
  1897                           	opt stack 0
  1898                           tblptru	equ	0xFF8
  1899                           tblptrh	equ	0xFF7
  1900                           tblptrl	equ	0xFF6
  1901                           tablat	equ	0xFF5
  1902                           prodh	equ	0xFF4
  1903                           prodl	equ	0xFF3
  1904                           intcon	equ	0xFF2
  1905                           postinc0	equ	0xFEE
  1906                           wreg	equ	0xFE8
  1907                           postdec1	equ	0xFE5
  1908                           fsr1l	equ	0xFE1
  1909                           indf2	equ	0xFDF
  1910                           fsr2h	equ	0xFDA
  1911                           fsr2l	equ	0xFD9
  1912                           status	equ	0xFD8
  1913                           
  1914 ;; *************** function _Relay_Control *****************
  1915 ;; Defined at:
  1916 ;;		line 60 in file "_01_USER/Relay.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;  relay_num       1    wreg     unsigned char 
  1919 ;;  _switch         1   29[COMRAM] unsigned char 
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;  relay_num       1   30[COMRAM] unsigned char 
  1922 ;; Return value:  Size  Location     Type
  1923 ;;		None               void
  1924 ;; Registers used:
  1925 ;;		wreg, status,2, status,0, cstack
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1931 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1932 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1934 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1935 ;;Total ram usage:        2 bytes
  1936 ;; Hardware stack levels used:    1
  1937 ;; Hardware stack levels required when called:    5
  1938 ;; This function calls:
  1939 ;;		_delay_ms
  1940 ;; This function is called by:
  1941 ;;		_Run
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           	psect	text12
  1946  000FB2                     __ptext12:
  1947                           	opt stack 0
  1948  000FB2                     _Relay_Control:
  1949                           	opt stack 24
  1950                           
  1951                           ;incstack = 0
  1952                           ;Relay_Control@relay_num stored from wreg
  1953  000FB2  6E1F               	movwf	Relay_Control@relay_num,c
  1954                           
  1955                           ;Relay.c: 63: if( relay_num == 1)
  1956  000FB4  041F               	decf	Relay_Control@relay_num,w,c
  1957  000FB6  A4D8               	btfss	status,2,c
  1958  000FB8  D009               	goto	l2955
  1959                           
  1960                           ;Relay.c: 64: {
  1961                           ;Relay.c: 65: if(_switch)
  1962  000FBA  501E               	movf	Relay_Control@_switch,w,c
  1963  000FBC  B4D8               	btfsc	status,2,c
  1964  000FBE  D003               	goto	l509
  1965                           
  1966                           ;Relay.c: 66: {
  1967                           ;Relay.c: 67: RD0 = 1,RD1 = 0;
  1968  000FC0  8083               	bsf	3971,0,c	;volatile
  1969  000FC2  9283               	bcf	3971,1,c	;volatile
  1970                           
  1971                           ;Relay.c: 68: }
  1972  000FC4  D003               	goto	l2955
  1973  000FC6                     l509:
  1974                           
  1975                           ;Relay.c: 69: else
  1976                           ;Relay.c: 70: {
  1977                           ;Relay.c: 71: RD0 = 0,RD1 = 1;
  1978  000FC6  9083               	bcf	3971,0,c	;volatile
  1979  000FC8  8283               	bsf	3971,1,c	;volatile
  1980  000FCA  D000               	goto	l2955
  1981  000FCC                     l2955:
  1982                           
  1983                           ;Relay.c: 72: }
  1984                           ;Relay.c: 73: }
  1985                           ;Relay.c: 76: if( relay_num == 2)
  1986  000FCC  0E02               	movlw	2
  1987  000FCE  181F               	xorwf	Relay_Control@relay_num,w,c
  1988  000FD0  A4D8               	btfss	status,2,c
  1989  000FD2  D009               	goto	l2961
  1990                           
  1991                           ;Relay.c: 77: {
  1992                           ;Relay.c: 78: if(_switch)
  1993  000FD4  501E               	movf	Relay_Control@_switch,w,c
  1994  000FD6  B4D8               	btfsc	status,2,c
  1995  000FD8  D003               	goto	l512
  1996                           
  1997                           ;Relay.c: 79: {
  1998                           ;Relay.c: 80: RD2 = 1,RD3 = 0;
  1999  000FDA  8483               	bsf	3971,2,c	;volatile
  2000  000FDC  9683               	bcf	3971,3,c	;volatile
  2001                           
  2002                           ;Relay.c: 81: }
  2003  000FDE  D003               	goto	l2961
  2004  000FE0                     l512:
  2005                           
  2006                           ;Relay.c: 82: else
  2007                           ;Relay.c: 83: {
  2008                           ;Relay.c: 84: RD2 = 0,RD3 = 1;
  2009  000FE0  9483               	bcf	3971,2,c	;volatile
  2010  000FE2  8683               	bsf	3971,3,c	;volatile
  2011  000FE4  D000               	goto	l2961
  2012  000FE6                     l2961:
  2013                           
  2014                           ;Relay.c: 85: }
  2015                           ;Relay.c: 86: }
  2016                           ;Relay.c: 89: if( relay_num == 3)
  2017  000FE6  0E03               	movlw	3
  2018  000FE8  181F               	xorwf	Relay_Control@relay_num,w,c
  2019  000FEA  A4D8               	btfss	status,2,c
  2020  000FEC  D009               	goto	l2967
  2021                           
  2022                           ;Relay.c: 90: {
  2023                           ;Relay.c: 91: if(_switch)
  2024  000FEE  501E               	movf	Relay_Control@_switch,w,c
  2025  000FF0  B4D8               	btfsc	status,2,c
  2026  000FF2  D003               	goto	l515
  2027                           
  2028                           ;Relay.c: 92: {
  2029                           ;Relay.c: 93: RD4 = 1,RD7 = 0;
  2030  000FF4  8883               	bsf	3971,4,c	;volatile
  2031  000FF6  9E83               	bcf	3971,7,c	;volatile
  2032                           
  2033                           ;Relay.c: 94: }
  2034  000FF8  D003               	goto	l2967
  2035  000FFA                     l515:
  2036                           
  2037                           ;Relay.c: 95: else
  2038                           ;Relay.c: 96: {
  2039                           ;Relay.c: 97: RD4 = 0,RD7 = 1;
  2040  000FFA  9883               	bcf	3971,4,c	;volatile
  2041  000FFC  8E83               	bsf	3971,7,c	;volatile
  2042  000FFE  D000               	goto	l2967
  2043  001000                     l2967:
  2044                           
  2045                           ;Relay.c: 98: }
  2046                           ;Relay.c: 99: }
  2047                           ;Relay.c: 102: if( relay_num >= 1 && relay_num <=3 )
  2048  001000  501F               	movf	Relay_Control@relay_num,w,c
  2049  001002  B4D8               	btfsc	status,2,c
  2050  001004  D00A               	goto	l2973
  2051  001006  0E04               	movlw	4
  2052  001008  601F               	cpfslt	Relay_Control@relay_num,c
  2053  00100A  D007               	goto	l2973
  2054                           
  2055                           ;Relay.c: 103: {
  2056                           ;Relay.c: 104: delay_ms(2);
  2057  00100C  0E00               	movlw	0
  2058  00100E  6E1D               	movwf	delay_ms@_ms+1,c
  2059  001010  0E02               	movlw	2
  2060  001012  6E1C               	movwf	delay_ms@_ms,c
  2061  001014  ECF5  F00B         	call	_delay_ms	;wreg free
  2062  001018  D000               	goto	l2973
  2063  00101A                     l2973:
  2064                           
  2065                           ;Relay.c: 105: }
  2066                           ;Relay.c: 108: RD0 = 0;
  2067  00101A  9083               	bcf	3971,0,c	;volatile
  2068                           
  2069                           ;Relay.c: 109: RD1 = 0;
  2070  00101C  9283               	bcf	3971,1,c	;volatile
  2071                           
  2072                           ;Relay.c: 110: RD2 = 0;
  2073  00101E  9483               	bcf	3971,2,c	;volatile
  2074                           
  2075                           ;Relay.c: 111: RD3 = 0;
  2076  001020  9683               	bcf	3971,3,c	;volatile
  2077                           
  2078                           ;Relay.c: 112: RD4 = 0;
  2079  001022  9883               	bcf	3971,4,c	;volatile
  2080                           
  2081                           ;Relay.c: 113: RD7 = 0;
  2082  001024  9E83               	bcf	3971,7,c	;volatile
  2083  001026  0012               	return		;funcret
  2084  001028                     __end_of_Relay_Control:
  2085                           	opt stack 0
  2086                           tblptru	equ	0xFF8
  2087                           tblptrh	equ	0xFF7
  2088                           tblptrl	equ	0xFF6
  2089                           tablat	equ	0xFF5
  2090                           prodh	equ	0xFF4
  2091                           prodl	equ	0xFF3
  2092                           intcon	equ	0xFF2
  2093                           postinc0	equ	0xFEE
  2094                           wreg	equ	0xFE8
  2095                           postdec1	equ	0xFE5
  2096                           fsr1l	equ	0xFE1
  2097                           indf2	equ	0xFDF
  2098                           fsr2h	equ	0xFDA
  2099                           fsr2l	equ	0xFD9
  2100                           status	equ	0xFD8
  2101                           
  2102 ;; *************** function _delay_ms *****************
  2103 ;; Defined at:
  2104 ;;		line 37 in file "_01_USER/My_Delay.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;  _ms             2   27[COMRAM] unsigned int 
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;		None
  2109 ;; Return value:  Size  Location     Type
  2110 ;;		None               void
  2111 ;; Registers used:
  2112 ;;		wreg, status,2, status,0, cstack
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2118 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2121 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2122 ;;Total ram usage:        2 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; Hardware stack levels required when called:    4
  2125 ;; This function calls:
  2126 ;;		_delay1ms
  2127 ;; This function is called by:
  2128 ;;		_Relay_Control
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           
  2132                           	psect	text13
  2133  0017EA                     __ptext13:
  2134                           	opt stack 0
  2135  0017EA                     _delay_ms:
  2136                           	opt stack 24
  2137                           
  2138                           ;My_Delay.c: 39: while(_ms--) delay1ms();
  2139                           
  2140                           ;incstack = 0
  2141  0017EA  D003               	goto	l2435
  2142  0017EC                     l2433:
  2143  0017EC  ECBC  F00A         	call	_delay1ms	;wreg free
  2144  0017F0  D000               	goto	l2435
  2145  0017F2                     l2435:
  2146  0017F2  061C               	decf	delay_ms@_ms,f,c
  2147  0017F4  A0D8               	btfss	status,0,c
  2148  0017F6  061D               	decf	delay_ms@_ms+1,f,c
  2149  0017F8  281C               	incf	delay_ms@_ms,w,c
  2150  0017FA  E1F8               	bnz	l2433
  2151  0017FC  281D               	incf	delay_ms@_ms+1,w,c
  2152  0017FE  A4D8               	btfss	status,2,c
  2153  001800  D7F5               	goto	l2433
  2154  001802  0012               	return		;funcret
  2155  001804                     __end_of_delay_ms:
  2156                           	opt stack 0
  2157                           tblptru	equ	0xFF8
  2158                           tblptrh	equ	0xFF7
  2159                           tblptrl	equ	0xFF6
  2160                           tablat	equ	0xFF5
  2161                           prodh	equ	0xFF4
  2162                           prodl	equ	0xFF3
  2163                           intcon	equ	0xFF2
  2164                           postinc0	equ	0xFEE
  2165                           wreg	equ	0xFE8
  2166                           postdec1	equ	0xFE5
  2167                           fsr1l	equ	0xFE1
  2168                           indf2	equ	0xFDF
  2169                           fsr2h	equ	0xFDA
  2170                           fsr2l	equ	0xFD9
  2171                           status	equ	0xFD8
  2172                           
  2173 ;; *************** function _delay1ms *****************
  2174 ;; Defined at:
  2175 ;;		line 59 in file "_01_USER/My_Delay.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;		None
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;  c               1   26[COMRAM] unsigned char 
  2180 ;;  b               1   25[COMRAM] unsigned char 
  2181 ;;  a               1   24[COMRAM] unsigned char 
  2182 ;; Return value:  Size  Location     Type
  2183 ;;		None               void
  2184 ;; Registers used:
  2185 ;;		wreg, status,2, status,0
  2186 ;; Tracked objects:
  2187 ;;		On entry : 0/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2192 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2194 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2195 ;;Total ram usage:        3 bytes
  2196 ;; Hardware stack levels used:    1
  2197 ;; Hardware stack levels required when called:    3
  2198 ;; This function calls:
  2199 ;;		Nothing
  2200 ;; This function is called by:
  2201 ;;		_delay_ms
  2202 ;; This function uses a non-reentrant model
  2203 ;;
  2204                           
  2205                           	psect	text14
  2206  001578                     __ptext14:
  2207                           	opt stack 0
  2208  001578                     _delay1ms:
  2209                           	opt stack 24
  2210                           
  2211                           ;My_Delay.c: 61: unsigned char a,b,c;
  2212                           ;My_Delay.c: 62: for(c=1;c>0;c--)
  2213                           
  2214                           ;incstack = 0
  2215  001578  0E01               	movlw	1
  2216  00157A  6E1B               	movwf	delay1ms@c,c
  2217  00157C  501B               	movf	delay1ms@c,w,c
  2218  00157E  B4D8               	btfsc	status,2,c
  2219  001580  0012               	return	
  2220  001582  D001               	goto	l2297
  2221  001584  0012               	return	
  2222  001586                     l2297:
  2223                           
  2224                           ;My_Delay.c: 63: for(b=94;b>0;b--)
  2225  001586  0E5E               	movlw	94
  2226  001588  6E1A               	movwf	delay1ms@b,c
  2227  00158A  501A               	movf	delay1ms@b,w,c
  2228  00158C  B4D8               	btfsc	status,2,c
  2229  00158E  D00D               	goto	l2313
  2230  001590  D001               	goto	l2301
  2231  001592  D00B               	goto	l2313
  2232  001594                     l2301:
  2233                           
  2234                           ;My_Delay.c: 64: for(a=2;a>0;a--);
  2235  001594  0E02               	movlw	2
  2236  001596  6E19               	movwf	delay1ms@a,c
  2237  001598  5019               	movf	delay1ms@a,w,c
  2238  00159A  B4D8               	btfsc	status,2,c
  2239  00159C  D004               	goto	l2309
  2240  00159E  D001               	goto	l2305
  2241  0015A0  D002               	goto	l2309
  2242  0015A2                     l2305:
  2243  0015A2  0619               	decf	delay1ms@a,f,c
  2244  0015A4  D7F9               	goto	L1
  2245  0015A6                     l2309:
  2246  0015A6  061A               	decf	delay1ms@b,f,c
  2247  0015A8  D7F0               	goto	L2
  2248  0015AA                     l2313:
  2249  0015AA  061B               	decf	delay1ms@c,f,c
  2250  0015AC  D7E7               	goto	L3
  2251  0015AE  0012               	return		;funcret
  2252  0015B0                     __end_of_delay1ms:
  2253                           	opt stack 0
  2254                           tblptru	equ	0xFF8
  2255                           tblptrh	equ	0xFF7
  2256                           tblptrl	equ	0xFF6
  2257                           tablat	equ	0xFF5
  2258                           prodh	equ	0xFF4
  2259                           prodl	equ	0xFF3
  2260                           intcon	equ	0xFF2
  2261                           postinc0	equ	0xFEE
  2262                           wreg	equ	0xFE8
  2263                           postdec1	equ	0xFE5
  2264                           fsr1l	equ	0xFE1
  2265                           indf2	equ	0xFDF
  2266                           fsr2h	equ	0xFDA
  2267                           fsr2l	equ	0xFD9
  2268                           status	equ	0xFD8
  2269                           
  2270 ;; *************** function _RS485_SendDate *****************
  2271 ;; Defined at:
  2272 ;;		line 77 in file "_01_USER/My_USART.c"
  2273 ;; Parameters:    Size  Location     Type
  2274 ;;  date_dress      2    0[BANK1 ] PTR unsigned char 
  2275 ;;		 -> ga_RS485_SendBuff(10), 
  2276 ;;  date_lenth      1    2[BANK1 ] unsigned char 
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;		None
  2279 ;; Return value:  Size  Location     Type
  2280 ;;		None               void
  2281 ;; Registers used:
  2282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2288 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2290 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2291 ;;      Totals:         0       1       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2292 ;;Total ram usage:        4 bytes
  2293 ;; Hardware stack levels used:    1
  2294 ;; Hardware stack levels required when called:    5
  2295 ;; This function calls:
  2296 ;;		_VerifyCRC
  2297 ;; This function is called by:
  2298 ;;		_Run
  2299 ;; This function uses a non-reentrant model
  2300 ;;
  2301                           
  2302                           	psect	text15
  2303  000DCE                     __ptext15:
  2304                           	opt stack 0
  2305  000DCE                     _RS485_SendDate:
  2306                           	opt stack 24
  2307                           
  2308                           ;My_USART.c: 80: date_dress[--date_lenth] = 0xff;
  2309                           
  2310                           ;incstack = 0
  2311  000DCE  0101               	movlb	1	; () banked
  2312  000DD0  0702               	decf	RS485_SendDate@date_lenth& (0+255),f,b
  2313  000DD2  0101               	movlb	1	; () banked
  2314  000DD4  5102               	movf	RS485_SendDate@date_lenth& (0+255),w,b
  2315  000DD6  0D01               	mullw	1
  2316  000DD8  50F3               	movf	prodl,w,c
  2317  000DDA  0101               	movlb	1	; () banked
  2318  000DDC  2500               	addwf	RS485_SendDate@date_dress& (0+255),w,b
  2319  000DDE  6ED9               	movwf	fsr2l,c
  2320  000DE0  50F4               	movf	prodh,w,c
  2321  000DE2  0101               	movlb	1	; () banked
  2322  000DE4  2101               	addwfc	(RS485_SendDate@date_dress+1)& (0+255),w,b
  2323  000DE6  6EDA               	movwf	fsr2h,c
  2324  000DE8  0EFF               	movlw	255
  2325  000DEA  6EDF               	movwf	indf2,c
  2326                           
  2327                           ; BSR set to: 1
  2328                           ;My_USART.c: 83: VerifyCRC(date_dress,10);
  2329  000DEC  C100  F026         	movff	RS485_SendDate@date_dress,VerifyCRC@DataBuff
  2330  000DF0  C101  F027         	movff	RS485_SendDate@date_dress+1,VerifyCRC@DataBuff+1
  2331  000DF4  0E0A               	movlw	10
  2332  000DF6  6E28               	movwf	VerifyCRC@date_lenth,c
  2333  000DF8  ECF0  F004         	call	_VerifyCRC	;wreg free
  2334                           
  2335                           ;My_USART.c: 86: while( (!TXSTA1bits.TRMT) );
  2336  000DFC  D000               	goto	l202
  2337  000DFE                     l202:
  2338  000DFE  A2AC               	btfss	4012,1,c	;volatile
  2339  000E00  D7FE               	goto	l202
  2340                           
  2341                           ;My_USART.c: 87: RC0 = 0;
  2342  000E02  9082               	bcf	3970,0,c	;volatile
  2343                           
  2344                           ;My_USART.c: 90: TXREG1 = date_dress[date_lenth];
  2345  000E04  0101               	movlb	1	; () banked
  2346  000E06  5102               	movf	RS485_SendDate@date_lenth& (0+255),w,b
  2347  000E08  0D01               	mullw	1
  2348  000E0A  50F3               	movf	prodl,w,c
  2349  000E0C  0101               	movlb	1	; () banked
  2350  000E0E  2500               	addwf	RS485_SendDate@date_dress& (0+255),w,b
  2351  000E10  6ED9               	movwf	fsr2l,c
  2352  000E12  50F4               	movf	prodh,w,c
  2353  000E14  0101               	movlb	1	; () banked
  2354  000E16  2101               	addwfc	(RS485_SendDate@date_dress+1)& (0+255),w,b
  2355  000E18  6EDA               	movwf	fsr2h,c
  2356  000E1A  50DF               	movf	indf2,w,c
  2357  000E1C  6EAD               	movwf	4013,c	;volatile
  2358                           
  2359                           ;My_USART.c: 91: while( (!TXSTA1bits.TRMT) );
  2360  000E1E  D000               	goto	l205
  2361  000E20                     l205:
  2362  000E20  B2AC               	btfsc	4012,1,c	;volatile
  2363  000E22  D02E               	goto	l3581
  2364  000E24  D7FD               	goto	l205
  2365                           
  2366                           ;My_USART.c: 94: while( date_lenth --)
  2367  000E26  D02C               	goto	l3581
  2368  000E28                     l3577:
  2369                           
  2370                           ;My_USART.c: 95: {
  2371                           ;My_USART.c: 96: if(date_dress[date_lenth] == 0xff ) date_dress[date_lenth]--;
  2372  000E28  0101               	movlb	1	; () banked
  2373  000E2A  5102               	movf	RS485_SendDate@date_lenth& (0+255),w,b
  2374  000E2C  0D01               	mullw	1
  2375  000E2E  50F3               	movf	prodl,w,c
  2376  000E30  0101               	movlb	1	; () banked
  2377  000E32  2500               	addwf	RS485_SendDate@date_dress& (0+255),w,b
  2378  000E34  6ED9               	movwf	fsr2l,c
  2379  000E36  50F4               	movf	prodh,w,c
  2380  000E38  0101               	movlb	1	; () banked
  2381  000E3A  2101               	addwfc	(RS485_SendDate@date_dress+1)& (0+255),w,b
  2382  000E3C  6EDA               	movwf	fsr2h,c
  2383  000E3E  28DE               	incf	postinc2,w,c
  2384  000E40  A4D8               	btfss	status,2,c
  2385  000E42  D00C               	goto	l210
  2386                           
  2387                           ; BSR set to: 1
  2388  000E44  0101               	movlb	1	; () banked
  2389  000E46  5102               	movf	RS485_SendDate@date_lenth& (0+255),w,b
  2390  000E48  0D01               	mullw	1
  2391  000E4A  50F3               	movf	prodl,w,c
  2392  000E4C  0101               	movlb	1	; () banked
  2393  000E4E  2500               	addwf	RS485_SendDate@date_dress& (0+255),w,b
  2394  000E50  6ED9               	movwf	fsr2l,c
  2395  000E52  50F4               	movf	prodh,w,c
  2396  000E54  0101               	movlb	1	; () banked
  2397  000E56  2101               	addwfc	(RS485_SendDate@date_dress+1)& (0+255),w,b
  2398  000E58  6EDA               	movwf	fsr2h,c
  2399  000E5A  06DF               	decf	indf2,f,c
  2400  000E5C                     l210:
  2401                           
  2402                           ; BSR set to: 1
  2403                           ;My_USART.c: 97: TXREG1 = date_dress[date_lenth];
  2404  000E5C  0101               	movlb	1	; () banked
  2405  000E5E  5102               	movf	RS485_SendDate@date_lenth& (0+255),w,b
  2406  000E60  0D01               	mullw	1
  2407  000E62  50F3               	movf	prodl,w,c
  2408  000E64  0101               	movlb	1	; () banked
  2409  000E66  2500               	addwf	RS485_SendDate@date_dress& (0+255),w,b
  2410  000E68  6ED9               	movwf	fsr2l,c
  2411  000E6A  50F4               	movf	prodh,w,c
  2412  000E6C  0101               	movlb	1	; () banked
  2413  000E6E  2101               	addwfc	(RS485_SendDate@date_dress+1)& (0+255),w,b
  2414  000E70  6EDA               	movwf	fsr2h,c
  2415  000E72  50DF               	movf	indf2,w,c
  2416  000E74  6EAD               	movwf	4013,c	;volatile
  2417                           
  2418                           ;My_USART.c: 98: while( (!TXSTA1bits.TRMT));
  2419  000E76  D000               	goto	l211
  2420  000E78                     l211:
  2421  000E78  B2AC               	btfsc	4012,1,c	;volatile
  2422  000E7A  D002               	goto	l3581
  2423  000E7C  D7FD               	goto	l211
  2424  000E7E  D000               	goto	l3581
  2425  000E80                     l3581:
  2426  000E80  0101               	movlb	1	; () banked
  2427  000E82  0702               	decf	RS485_SendDate@date_lenth& (0+255),f,b
  2428  000E84  0101               	movlb	1	; () banked
  2429  000E86  2902               	incf	RS485_SendDate@date_lenth& (0+255),w,b
  2430  000E88  A4D8               	btfss	status,2,c
  2431  000E8A  D7CE               	goto	l3577
  2432                           
  2433                           ; BSR set to: 1
  2434                           ;My_USART.c: 99: }
  2435                           ;My_USART.c: 101: RC0 = 1;
  2436  000E8C  8082               	bsf	3970,0,c	;volatile
  2437                           
  2438                           ; BSR set to: 1
  2439  000E8E  0012               	return		;funcret
  2440  000E90                     __end_of_RS485_SendDate:
  2441                           	opt stack 0
  2442                           tblptru	equ	0xFF8
  2443                           tblptrh	equ	0xFF7
  2444                           tblptrl	equ	0xFF6
  2445                           tablat	equ	0xFF5
  2446                           prodh	equ	0xFF4
  2447                           prodl	equ	0xFF3
  2448                           intcon	equ	0xFF2
  2449                           postinc0	equ	0xFEE
  2450                           wreg	equ	0xFE8
  2451                           postdec1	equ	0xFE5
  2452                           fsr1l	equ	0xFE1
  2453                           indf2	equ	0xFDF
  2454                           postinc2	equ	0xFDE
  2455                           fsr2h	equ	0xFDA
  2456                           fsr2l	equ	0xFD9
  2457                           status	equ	0xFD8
  2458                           
  2459 ;; *************** function _GetADC6 *****************
  2460 ;; Defined at:
  2461 ;;		line 67 in file "_01_USER/My_ADC.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;		None
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;		None
  2466 ;; Return value:  Size  Location     Type
  2467 ;;		None               void
  2468 ;; Registers used:
  2469 ;;		wreg, status,2, status,0, cstack
  2470 ;; Tracked objects:
  2471 ;;		On entry : 0/0
  2472 ;;		On exit  : 0/0
  2473 ;;		Unchanged: 0/0
  2474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2479 ;;Total ram usage:        0 bytes
  2480 ;; Hardware stack levels used:    1
  2481 ;; Hardware stack levels required when called:    5
  2482 ;; This function calls:
  2483 ;;		_BusyADC
  2484 ;;		_ConvertADC
  2485 ;;		_ReadADC
  2486 ;;		___ftdiv
  2487 ;;		___ftmul
  2488 ;;		___lwtoft
  2489 ;; This function is called by:
  2490 ;;		_Run
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494                           	psect	text16
  2495  001176                     __ptext16:
  2496                           	opt stack 0
  2497  001176                     _GetADC6:
  2498                           	opt stack 24
  2499                           
  2500                           ;My_ADC.c: 69: ConvertADC();
  2501                           
  2502                           ; BSR set to: 1
  2503                           ;incstack = 0
  2504  001176  EC48  F00C         	call	_ConvertADC	;wreg free
  2505                           
  2506                           ;My_ADC.c: 70: while(BusyADC());
  2507  00117A  D000               	goto	l3647
  2508  00117C                     l3647:
  2509  00117C  EC34  F00C         	call	_BusyADC	;wreg free
  2510  001180  0900               	iorlw	0
  2511  001182  A4D8               	btfss	status,2,c
  2512  001184  D7FB               	goto	l3647
  2513                           
  2514                           ;My_ADC.c: 71: gf_ADC6_Buff =(unsigned int)ReadADC()*4.096f/4095.0f;
  2515  001186  0E12               	movlw	18
  2516  001188  6E27               	movwf	___ftmul@f2,c
  2517  00118A  0E83               	movlw	131
  2518  00118C  6E28               	movwf	___ftmul@f2+1,c
  2519  00118E  0E40               	movlw	64
  2520  001190  6E29               	movwf	___ftmul@f2+2,c
  2521  001192  EC2C  F00C         	call	_ReadADC	;wreg free
  2522  001196  C019  F021         	movff	?_ReadADC,___lwtoft@c
  2523  00119A  C01A  F022         	movff	?_ReadADC+1,___lwtoft@c+1
  2524  00119E  EC6B  F00B         	call	___lwtoft	;wreg free
  2525  0011A2  C021  F024         	movff	?___lwtoft,___ftmul@f1
  2526  0011A6  C022  F025         	movff	?___lwtoft+1,___ftmul@f1+1
  2527  0011AA  C023  F026         	movff	?___lwtoft+2,___ftmul@f1+2
  2528  0011AE  EC84  F005         	call	___ftmul	;wreg free
  2529  0011B2  C024  F100         	movff	?___ftmul,___ftdiv@f1
  2530  0011B6  C025  F101         	movff	?___ftmul+1,___ftdiv@f1+1
  2531  0011BA  C026  F102         	movff	?___ftmul+2,___ftdiv@f1+2
  2532  0011BE  0EF0               	movlw	240
  2533  0011C0  0101               	movlb	1	; () banked
  2534  0011C2  6F03               	movwf	___ftdiv@f2& (0+255),b
  2535  0011C4  0E7F               	movlw	127
  2536  0011C6  0101               	movlb	1	; () banked
  2537  0011C8  6F04               	movwf	(___ftdiv@f2+1)& (0+255),b
  2538  0011CA  0E45               	movlw	69
  2539  0011CC  0101               	movlb	1	; () banked
  2540  0011CE  6F05               	movwf	(___ftdiv@f2+2)& (0+255),b
  2541  0011D0  EC47  F004         	call	___ftdiv	;wreg free
  2542  0011D4  C100  F037         	movff	?___ftdiv,_gf_ADC6_Buff	;volatile
  2543  0011D8  C101  F038         	movff	?___ftdiv+1,_gf_ADC6_Buff+1	;volatile
  2544  0011DC  C102  F039         	movff	?___ftdiv+2,_gf_ADC6_Buff+2	;volatile
  2545  0011E0  0012               	return		;funcret
  2546  0011E2                     __end_of_GetADC6:
  2547                           	opt stack 0
  2548                           tblptru	equ	0xFF8
  2549                           tblptrh	equ	0xFF7
  2550                           tblptrl	equ	0xFF6
  2551                           tablat	equ	0xFF5
  2552                           prodh	equ	0xFF4
  2553                           prodl	equ	0xFF3
  2554                           intcon	equ	0xFF2
  2555                           postinc0	equ	0xFEE
  2556                           wreg	equ	0xFE8
  2557                           postdec1	equ	0xFE5
  2558                           fsr1l	equ	0xFE1
  2559                           indf2	equ	0xFDF
  2560                           postinc2	equ	0xFDE
  2561                           fsr2h	equ	0xFDA
  2562                           fsr2l	equ	0xFD9
  2563                           status	equ	0xFD8
  2564                           
  2565 ;; *************** function ___lwtoft *****************
  2566 ;; Defined at:
  2567 ;;		line 28 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;  c               2   32[COMRAM] unsigned int 
  2570 ;; Auto vars:     Size  Location     Type
  2571 ;;		None
  2572 ;; Return value:  Size  Location     Type
  2573 ;;                  3   32[COMRAM] float 
  2574 ;; Registers used:
  2575 ;;		wreg, status,2, status,0, cstack
  2576 ;; Tracked objects:
  2577 ;;		On entry : 0/0
  2578 ;;		On exit  : 0/0
  2579 ;;		Unchanged: 0/0
  2580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2581 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2584 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2585 ;;Total ram usage:        3 bytes
  2586 ;; Hardware stack levels used:    1
  2587 ;; Hardware stack levels required when called:    4
  2588 ;; This function calls:
  2589 ;;		___ftpack
  2590 ;; This function is called by:
  2591 ;;		_GetADC6
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595                           	psect	text17
  2596  0016D6                     __ptext17:
  2597                           	opt stack 0
  2598  0016D6                     ___lwtoft:
  2599                           	opt stack 24
  2600                           
  2601                           ;incstack = 0
  2602  0016D6  C021  F019         	movff	___lwtoft@c,___ftpack@arg
  2603  0016DA  C022  F01A         	movff	___lwtoft@c+1,___ftpack@arg+1
  2604  0016DE  6A1B               	clrf	___ftpack@arg+2,c
  2605  0016E0  0E8E               	movlw	142
  2606  0016E2  6E1C               	movwf	___ftpack@exp,c
  2607  0016E4  0E00               	movlw	0
  2608  0016E6  6E1D               	movwf	___ftpack@sign,c
  2609  0016E8  EC84  F006         	call	___ftpack	;wreg free
  2610  0016EC  C019  F021         	movff	?___ftpack,?___lwtoft
  2611  0016F0  C01A  F022         	movff	?___ftpack+1,?___lwtoft+1
  2612  0016F4  C01B  F023         	movff	?___ftpack+2,?___lwtoft+2
  2613  0016F8  0012               	return	
  2614  0016FA  0012               	return		;funcret
  2615  0016FC                     __end_of___lwtoft:
  2616                           	opt stack 0
  2617                           tblptru	equ	0xFF8
  2618                           tblptrh	equ	0xFF7
  2619                           tblptrl	equ	0xFF6
  2620                           tablat	equ	0xFF5
  2621                           prodh	equ	0xFF4
  2622                           prodl	equ	0xFF3
  2623                           intcon	equ	0xFF2
  2624                           postinc0	equ	0xFEE
  2625                           wreg	equ	0xFE8
  2626                           postdec1	equ	0xFE5
  2627                           fsr1l	equ	0xFE1
  2628                           indf2	equ	0xFDF
  2629                           postinc2	equ	0xFDE
  2630                           fsr2h	equ	0xFDA
  2631                           fsr2l	equ	0xFD9
  2632                           status	equ	0xFD8
  2633                           
  2634 ;; *************** function ___ftmul *****************
  2635 ;; Defined at:
  2636 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;  f1              3   35[COMRAM] float 
  2639 ;;  f2              3   38[COMRAM] float 
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;  f3_as_produc    3   45[COMRAM] unsigned um
  2642 ;;  sign            1   49[COMRAM] unsigned char 
  2643 ;;  cntr            1   48[COMRAM] unsigned char 
  2644 ;;  exp             1   44[COMRAM] unsigned char 
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  3   35[COMRAM] float 
  2647 ;; Registers used:
  2648 ;;		wreg, status,2, status,0, cstack
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2654 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2655 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2656 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2657 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2658 ;;Total ram usage:       15 bytes
  2659 ;; Hardware stack levels used:    1
  2660 ;; Hardware stack levels required when called:    4
  2661 ;; This function calls:
  2662 ;;		___ftpack
  2663 ;; This function is called by:
  2664 ;;		_GetADC6
  2665 ;;		_TM1640_Show_Decimal
  2666 ;; This function uses a non-reentrant model
  2667 ;;
  2668                           
  2669                           	psect	text18
  2670  000B08                     __ptext18:
  2671                           	opt stack 0
  2672  000B08                     ___ftmul:
  2673                           	opt stack 24
  2674                           
  2675                           ;incstack = 0
  2676  000B08  C026  F02A         	movff	___ftmul@f1+2,??___ftmul
  2677  000B0C  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  2678  000B0E  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  2679  000B10  3425               	rlcf	___ftmul@f1+1,w,c
  2680  000B12  362A               	rlcf	??___ftmul& (0+255),f,c
  2681  000B14  E301               	bnc	u3881
  2682  000B16  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  2683  000B18                     u3881:
  2684  000B18  502A               	movf	??___ftmul,w,c
  2685  000B1A  6E2D               	movwf	___ftmul@exp,c
  2686  000B1C  502D               	movf	___ftmul@exp,w,c
  2687  000B1E  A4D8               	btfss	status,2,c
  2688  000B20  D007               	goto	l3525
  2689  000B22  0E00               	movlw	0
  2690  000B24  6E24               	movwf	?___ftmul,c
  2691  000B26  0E00               	movlw	0
  2692  000B28  6E25               	movwf	?___ftmul+1,c
  2693  000B2A  0E00               	movlw	0
  2694  000B2C  6E26               	movwf	?___ftmul+2,c
  2695  000B2E  0012               	return	
  2696  000B30                     l3525:
  2697  000B30  C029  F02A         	movff	___ftmul@f2+2,??___ftmul
  2698  000B34  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  2699  000B36  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  2700  000B38  3428               	rlcf	___ftmul@f2+1,w,c
  2701  000B3A  362A               	rlcf	??___ftmul& (0+255),f,c
  2702  000B3C  E301               	bnc	u3901
  2703  000B3E  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  2704  000B40                     u3901:
  2705  000B40  502A               	movf	??___ftmul,w,c
  2706  000B42  6E32               	movwf	___ftmul@sign,c
  2707  000B44  5032               	movf	___ftmul@sign,w,c
  2708  000B46  A4D8               	btfss	status,2,c
  2709  000B48  D007               	goto	l3531
  2710  000B4A  0E00               	movlw	0
  2711  000B4C  6E24               	movwf	?___ftmul,c
  2712  000B4E  0E00               	movlw	0
  2713  000B50  6E25               	movwf	?___ftmul+1,c
  2714  000B52  0E00               	movlw	0
  2715  000B54  6E26               	movwf	?___ftmul+2,c
  2716  000B56  0012               	return	
  2717  000B58                     l3531:
  2718  000B58  5032               	movf	___ftmul@sign,w,c
  2719  000B5A  0F7B               	addlw	123
  2720  000B5C  262D               	addwf	___ftmul@exp,f,c
  2721  000B5E  C026  F032         	movff	___ftmul@f1+2,___ftmul@sign
  2722  000B62  5029               	movf	___ftmul@f2+2,w,c
  2723  000B64  1A32               	xorwf	___ftmul@sign,f,c
  2724  000B66  0E80               	movlw	128
  2725  000B68  1632               	andwf	___ftmul@sign,f,c
  2726  000B6A  8E25               	bsf	___ftmul@f1+1,7,c
  2727  000B6C  8E28               	bsf	___ftmul@f2+1,7,c
  2728  000B6E  0EFF               	movlw	255
  2729  000B70  1627               	andwf	___ftmul@f2,f,c
  2730  000B72  0EFF               	movlw	255
  2731  000B74  1628               	andwf	___ftmul@f2+1,f,c
  2732  000B76  0E00               	movlw	0
  2733  000B78  1629               	andwf	___ftmul@f2+2,f,c
  2734  000B7A  0E00               	movlw	0
  2735  000B7C  6E2E               	movwf	___ftmul@f3_as_product,c
  2736  000B7E  0E00               	movlw	0
  2737  000B80  6E2F               	movwf	___ftmul@f3_as_product+1,c
  2738  000B82  0E00               	movlw	0
  2739  000B84  6E30               	movwf	___ftmul@f3_as_product+2,c
  2740  000B86  0E07               	movlw	7
  2741  000B88  6E31               	movwf	___ftmul@cntr,c
  2742  000B8A  D000               	goto	l3545
  2743  000B8C                     l3545:
  2744  000B8C  A024               	btfss	___ftmul@f1,0,c
  2745  000B8E  D007               	goto	l3549
  2746  000B90  5027               	movf	___ftmul@f2,w,c
  2747  000B92  262E               	addwf	___ftmul@f3_as_product,f,c
  2748  000B94  5028               	movf	___ftmul@f2+1,w,c
  2749  000B96  222F               	addwfc	___ftmul@f3_as_product+1,f,c
  2750  000B98  5029               	movf	___ftmul@f2+2,w,c
  2751  000B9A  2230               	addwfc	___ftmul@f3_as_product+2,f,c
  2752  000B9C  D000               	goto	l3549
  2753  000B9E                     l3549:
  2754  000B9E  90D8               	bcf	status,0,c
  2755  000BA0  3226               	rrcf	___ftmul@f1+2,f,c
  2756  000BA2  3225               	rrcf	___ftmul@f1+1,f,c
  2757  000BA4  3224               	rrcf	___ftmul@f1,f,c
  2758  000BA6  90D8               	bcf	status,0,c
  2759  000BA8  3627               	rlcf	___ftmul@f2,f,c
  2760  000BAA  3628               	rlcf	___ftmul@f2+1,f,c
  2761  000BAC  3629               	rlcf	___ftmul@f2+2,f,c
  2762  000BAE  2E31               	decfsz	___ftmul@cntr,f,c
  2763  000BB0  D7ED               	goto	l3545
  2764  000BB2  D000               	goto	l3553
  2765  000BB4                     l3553:
  2766  000BB4  0E09               	movlw	9
  2767  000BB6  6E31               	movwf	___ftmul@cntr,c
  2768  000BB8  D000               	goto	l3555
  2769  000BBA                     l3555:
  2770  000BBA  A024               	btfss	___ftmul@f1,0,c
  2771  000BBC  D007               	goto	l3559
  2772  000BBE  5027               	movf	___ftmul@f2,w,c
  2773  000BC0  262E               	addwf	___ftmul@f3_as_product,f,c
  2774  000BC2  5028               	movf	___ftmul@f2+1,w,c
  2775  000BC4  222F               	addwfc	___ftmul@f3_as_product+1,f,c
  2776  000BC6  5029               	movf	___ftmul@f2+2,w,c
  2777  000BC8  2230               	addwfc	___ftmul@f3_as_product+2,f,c
  2778  000BCA  D000               	goto	l3559
  2779  000BCC                     l3559:
  2780  000BCC  90D8               	bcf	status,0,c
  2781  000BCE  3226               	rrcf	___ftmul@f1+2,f,c
  2782  000BD0  3225               	rrcf	___ftmul@f1+1,f,c
  2783  000BD2  3224               	rrcf	___ftmul@f1,f,c
  2784  000BD4  90D8               	bcf	status,0,c
  2785  000BD6  3230               	rrcf	___ftmul@f3_as_product+2,f,c
  2786  000BD8  322F               	rrcf	___ftmul@f3_as_product+1,f,c
  2787  000BDA  322E               	rrcf	___ftmul@f3_as_product,f,c
  2788  000BDC  2E31               	decfsz	___ftmul@cntr,f,c
  2789  000BDE  D7ED               	goto	l3555
  2790  000BE0  D000               	goto	l3563
  2791  000BE2                     l3563:
  2792  000BE2  C02E  F019         	movff	___ftmul@f3_as_product,___ftpack@arg
  2793  000BE6  C02F  F01A         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2794  000BEA  C030  F01B         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2795  000BEE  C02D  F01C         	movff	___ftmul@exp,___ftpack@exp
  2796  000BF2  C032  F01D         	movff	___ftmul@sign,___ftpack@sign
  2797  000BF6  EC84  F006         	call	___ftpack	;wreg free
  2798  000BFA  C019  F024         	movff	?___ftpack,?___ftmul
  2799  000BFE  C01A  F025         	movff	?___ftpack+1,?___ftmul+1
  2800  000C02  C01B  F026         	movff	?___ftpack+2,?___ftmul+2
  2801  000C06  0012               	return	
  2802  000C08  0012               	return		;funcret
  2803  000C0A                     __end_of___ftmul:
  2804                           	opt stack 0
  2805                           tblptru	equ	0xFF8
  2806                           tblptrh	equ	0xFF7
  2807                           tblptrl	equ	0xFF6
  2808                           tablat	equ	0xFF5
  2809                           prodh	equ	0xFF4
  2810                           prodl	equ	0xFF3
  2811                           intcon	equ	0xFF2
  2812                           postinc0	equ	0xFEE
  2813                           wreg	equ	0xFE8
  2814                           postdec1	equ	0xFE5
  2815                           fsr1l	equ	0xFE1
  2816                           indf2	equ	0xFDF
  2817                           postinc2	equ	0xFDE
  2818                           fsr2h	equ	0xFDA
  2819                           fsr2l	equ	0xFD9
  2820                           status	equ	0xFD8
  2821                           
  2822 ;; *************** function ___ftdiv *****************
  2823 ;; Defined at:
  2824 ;;		line 54 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  2825 ;; Parameters:    Size  Location     Type
  2826 ;;  f1              3    0[BANK1 ] float 
  2827 ;;  f2              3    3[BANK1 ] float 
  2828 ;; Auto vars:     Size  Location     Type
  2829 ;;  f3              3   10[BANK1 ] float 
  2830 ;;  sign            1   14[BANK1 ] unsigned char 
  2831 ;;  exp             1   13[BANK1 ] unsigned char 
  2832 ;;  cntr            1    9[BANK1 ] unsigned char 
  2833 ;; Return value:  Size  Location     Type
  2834 ;;                  3    0[BANK1 ] float 
  2835 ;; Registers used:
  2836 ;;		wreg, status,2, status,0, cstack
  2837 ;; Tracked objects:
  2838 ;;		On entry : 0/0
  2839 ;;		On exit  : 0/0
  2840 ;;		Unchanged: 0/0
  2841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2842 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2843 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2844 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2845 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2846 ;;Total ram usage:       15 bytes
  2847 ;; Hardware stack levels used:    1
  2848 ;; Hardware stack levels required when called:    4
  2849 ;; This function calls:
  2850 ;;		___ftpack
  2851 ;; This function is called by:
  2852 ;;		_GetADC6
  2853 ;;		_TM1640_Show_Decimal
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857                           	psect	text19
  2858  00088E                     __ptext19:
  2859                           	opt stack 0
  2860  00088E                     ___ftdiv:
  2861                           	opt stack 24
  2862                           
  2863                           ;incstack = 0
  2864  00088E  C102  F106         	movff	___ftdiv@f1+2,??___ftdiv
  2865  000892  0101               	movlb	1	; () banked
  2866  000894  6B07               	clrf	(??___ftdiv+1)& (0+255),b
  2867  000896  6B08               	clrf	(??___ftdiv+2)& (0+255),b
  2868  000898  0101               	movlb	1	; () banked
  2869  00089A  3501               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  2870  00089C  0101               	movlb	1	; () banked
  2871  00089E  3706               	rlcf	??___ftdiv& (0+255),f,b
  2872  0008A0  E301               	bnc	u3831
  2873  0008A2  8107               	bsf	(??___ftdiv+1)& (0+255),0,b
  2874  0008A4                     u3831:
  2875  0008A4  0101               	movlb	1	; () banked
  2876  0008A6  5106               	movf	??___ftdiv& (0+255),w,b
  2877  0008A8  0101               	movlb	1	; () banked
  2878  0008AA  6F0D               	movwf	___ftdiv@exp& (0+255),b
  2879  0008AC  0101               	movlb	1	; () banked
  2880  0008AE  510D               	movf	___ftdiv@exp& (0+255),w,b
  2881  0008B0  A4D8               	btfss	status,2,c
  2882  0008B2  D00A               	goto	l3479
  2883                           
  2884                           ; BSR set to: 1
  2885  0008B4  0E00               	movlw	0
  2886  0008B6  0101               	movlb	1	; () banked
  2887  0008B8  6F00               	movwf	?___ftdiv& (0+255),b
  2888  0008BA  0E00               	movlw	0
  2889  0008BC  0101               	movlb	1	; () banked
  2890  0008BE  6F01               	movwf	(?___ftdiv+1)& (0+255),b
  2891  0008C0  0E00               	movlw	0
  2892  0008C2  0101               	movlb	1	; () banked
  2893  0008C4  6F02               	movwf	(?___ftdiv+2)& (0+255),b
  2894                           
  2895                           ; BSR set to: 1
  2896  0008C6  0012               	return	
  2897  0008C8                     l3479:
  2898                           
  2899                           ; BSR set to: 1
  2900  0008C8  C105  F106         	movff	___ftdiv@f2+2,??___ftdiv
  2901  0008CC  0101               	movlb	1	; () banked
  2902  0008CE  6B07               	clrf	(??___ftdiv+1)& (0+255),b
  2903  0008D0  6B08               	clrf	(??___ftdiv+2)& (0+255),b
  2904  0008D2  0101               	movlb	1	; () banked
  2905  0008D4  3504               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  2906  0008D6  0101               	movlb	1	; () banked
  2907  0008D8  3706               	rlcf	??___ftdiv& (0+255),f,b
  2908  0008DA  E301               	bnc	u3851
  2909  0008DC  8107               	bsf	(??___ftdiv+1)& (0+255),0,b
  2910  0008DE                     u3851:
  2911  0008DE  0101               	movlb	1	; () banked
  2912  0008E0  5106               	movf	??___ftdiv& (0+255),w,b
  2913  0008E2  0101               	movlb	1	; () banked
  2914  0008E4  6F0E               	movwf	___ftdiv@sign& (0+255),b
  2915  0008E6  0101               	movlb	1	; () banked
  2916  0008E8  510E               	movf	___ftdiv@sign& (0+255),w,b
  2917  0008EA  A4D8               	btfss	status,2,c
  2918  0008EC  D00A               	goto	l3485
  2919                           
  2920                           ; BSR set to: 1
  2921  0008EE  0E00               	movlw	0
  2922  0008F0  0101               	movlb	1	; () banked
  2923  0008F2  6F00               	movwf	?___ftdiv& (0+255),b
  2924  0008F4  0E00               	movlw	0
  2925  0008F6  0101               	movlb	1	; () banked
  2926  0008F8  6F01               	movwf	(?___ftdiv+1)& (0+255),b
  2927  0008FA  0E00               	movlw	0
  2928  0008FC  0101               	movlb	1	; () banked
  2929  0008FE  6F02               	movwf	(?___ftdiv+2)& (0+255),b
  2930                           
  2931                           ; BSR set to: 1
  2932  000900  0012               	return	
  2933  000902                     l3485:
  2934                           
  2935                           ; BSR set to: 1
  2936  000902  0E00               	movlw	0
  2937  000904  0101               	movlb	1	; () banked
  2938  000906  6F0A               	movwf	___ftdiv@f3& (0+255),b
  2939  000908  0E00               	movlw	0
  2940  00090A  0101               	movlb	1	; () banked
  2941  00090C  6F0B               	movwf	(___ftdiv@f3+1)& (0+255),b
  2942  00090E  0E00               	movlw	0
  2943  000910  0101               	movlb	1	; () banked
  2944  000912  6F0C               	movwf	(___ftdiv@f3+2)& (0+255),b
  2945                           
  2946                           ; BSR set to: 1
  2947  000914  0101               	movlb	1	; () banked
  2948  000916  510E               	movf	___ftdiv@sign& (0+255),w,b
  2949  000918  0F89               	addlw	137
  2950  00091A  0101               	movlb	1	; () banked
  2951  00091C  5F0D               	subwf	___ftdiv@exp& (0+255),f,b
  2952                           
  2953                           ; BSR set to: 1
  2954  00091E  C102  F10E         	movff	___ftdiv@f1+2,___ftdiv@sign
  2955                           
  2956                           ; BSR set to: 1
  2957  000922  0101               	movlb	1	; () banked
  2958  000924  5105               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2959  000926  0101               	movlb	1	; () banked
  2960  000928  1B0E               	xorwf	___ftdiv@sign& (0+255),f,b
  2961                           
  2962                           ; BSR set to: 1
  2963  00092A  0E80               	movlw	128
  2964  00092C  0101               	movlb	1	; () banked
  2965  00092E  170E               	andwf	___ftdiv@sign& (0+255),f,b
  2966                           
  2967                           ; BSR set to: 1
  2968  000930  0101               	movlb	1	; () banked
  2969  000932  8F01               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  2970                           
  2971                           ; BSR set to: 1
  2972  000934  0EFF               	movlw	255
  2973  000936  0101               	movlb	1	; () banked
  2974  000938  1700               	andwf	___ftdiv@f1& (0+255),f,b
  2975  00093A  0EFF               	movlw	255
  2976  00093C  0101               	movlb	1	; () banked
  2977  00093E  1701               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  2978  000940  0E00               	movlw	0
  2979  000942  0101               	movlb	1	; () banked
  2980  000944  1702               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  2981                           
  2982                           ; BSR set to: 1
  2983  000946  0101               	movlb	1	; () banked
  2984  000948  8F04               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  2985                           
  2986                           ; BSR set to: 1
  2987  00094A  0EFF               	movlw	255
  2988  00094C  0101               	movlb	1	; () banked
  2989  00094E  1703               	andwf	___ftdiv@f2& (0+255),f,b
  2990  000950  0EFF               	movlw	255
  2991  000952  0101               	movlb	1	; () banked
  2992  000954  1704               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  2993  000956  0E00               	movlw	0
  2994  000958  0101               	movlb	1	; () banked
  2995  00095A  1705               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  2996                           
  2997                           ; BSR set to: 1
  2998  00095C  0E18               	movlw	24
  2999  00095E  0101               	movlb	1	; () banked
  3000  000960  6F09               	movwf	___ftdiv@cntr& (0+255),b
  3001  000962  D000               	goto	l3505
  3002  000964                     l3505:
  3003                           
  3004                           ; BSR set to: 1
  3005  000964  0101               	movlb	1	; () banked
  3006  000966  90D8               	bcf	status,0,c
  3007  000968  370A               	rlcf	___ftdiv@f3& (0+255),f,b
  3008  00096A  370B               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  3009  00096C  370C               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  3010                           
  3011                           ; BSR set to: 1
  3012  00096E  0101               	movlb	1	; () banked
  3013  000970  5103               	movf	___ftdiv@f2& (0+255),w,b
  3014  000972  0101               	movlb	1	; () banked
  3015  000974  5D00               	subwf	___ftdiv@f1& (0+255),w,b
  3016  000976  0101               	movlb	1	; () banked
  3017  000978  5104               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3018  00097A  0101               	movlb	1	; () banked
  3019  00097C  5901               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  3020  00097E  0101               	movlb	1	; () banked
  3021  000980  5105               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3022  000982  0101               	movlb	1	; () banked
  3023  000984  5902               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  3024  000986  A0D8               	btfss	status,0,c
  3025  000988  D00E               	goto	l1037
  3026                           
  3027                           ; BSR set to: 1
  3028  00098A  0101               	movlb	1	; () banked
  3029  00098C  5103               	movf	___ftdiv@f2& (0+255),w,b
  3030  00098E  0101               	movlb	1	; () banked
  3031  000990  5F00               	subwf	___ftdiv@f1& (0+255),f,b
  3032  000992  0101               	movlb	1	; () banked
  3033  000994  5104               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3034  000996  0101               	movlb	1	; () banked
  3035  000998  5B01               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  3036  00099A  0101               	movlb	1	; () banked
  3037  00099C  5105               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3038  00099E  0101               	movlb	1	; () banked
  3039  0009A0  5B02               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  3040                           
  3041                           ; BSR set to: 1
  3042  0009A2  0101               	movlb	1	; () banked
  3043  0009A4  810A               	bsf	___ftdiv@f3& (0+255),0,b
  3044  0009A6                     l1037:
  3045                           
  3046                           ; BSR set to: 1
  3047  0009A6  0101               	movlb	1	; () banked
  3048  0009A8  90D8               	bcf	status,0,c
  3049  0009AA  3700               	rlcf	___ftdiv@f1& (0+255),f,b
  3050  0009AC  3701               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  3051  0009AE  3702               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  3052                           
  3053                           ; BSR set to: 1
  3054  0009B0  0101               	movlb	1	; () banked
  3055  0009B2  2F09               	decfsz	___ftdiv@cntr& (0+255),f,b
  3056  0009B4  D7D7               	goto	l3505
  3057  0009B6  D000               	goto	l3515
  3058  0009B8                     l3515:
  3059                           
  3060                           ; BSR set to: 1
  3061  0009B8  C10A  F019         	movff	___ftdiv@f3,___ftpack@arg
  3062  0009BC  C10B  F01A         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3063  0009C0  C10C  F01B         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3064  0009C4  C10D  F01C         	movff	___ftdiv@exp,___ftpack@exp
  3065  0009C8  C10E  F01D         	movff	___ftdiv@sign,___ftpack@sign
  3066  0009CC  EC84  F006         	call	___ftpack	;wreg free
  3067  0009D0  C019  F100         	movff	?___ftpack,?___ftdiv
  3068  0009D4  C01A  F101         	movff	?___ftpack+1,?___ftdiv+1
  3069  0009D8  C01B  F102         	movff	?___ftpack+2,?___ftdiv+2
  3070  0009DC  0012               	return	
  3071  0009DE  0012               	return		;funcret
  3072  0009E0                     __end_of___ftdiv:
  3073                           	opt stack 0
  3074                           tblptru	equ	0xFF8
  3075                           tblptrh	equ	0xFF7
  3076                           tblptrl	equ	0xFF6
  3077                           tablat	equ	0xFF5
  3078                           prodh	equ	0xFF4
  3079                           prodl	equ	0xFF3
  3080                           intcon	equ	0xFF2
  3081                           postinc0	equ	0xFEE
  3082                           wreg	equ	0xFE8
  3083                           postdec1	equ	0xFE5
  3084                           fsr1l	equ	0xFE1
  3085                           indf2	equ	0xFDF
  3086                           postinc2	equ	0xFDE
  3087                           fsr2h	equ	0xFDA
  3088                           fsr2l	equ	0xFD9
  3089                           status	equ	0xFD8
  3090                           
  3091 ;; *************** function ___ftpack *****************
  3092 ;; Defined at:
  3093 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;  arg             3   24[COMRAM] unsigned um
  3096 ;;  exp             1   27[COMRAM] unsigned char 
  3097 ;;  sign            1   28[COMRAM] unsigned char 
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;		None
  3100 ;; Return value:  Size  Location     Type
  3101 ;;                  3   24[COMRAM] float 
  3102 ;; Registers used:
  3103 ;;		wreg, status,2, status,0
  3104 ;; Tracked objects:
  3105 ;;		On entry : 0/0
  3106 ;;		On exit  : 0/0
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3109 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3111 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3112 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3113 ;;Total ram usage:        8 bytes
  3114 ;; Hardware stack levels used:    1
  3115 ;; Hardware stack levels required when called:    3
  3116 ;; This function calls:
  3117 ;;		Nothing
  3118 ;; This function is called by:
  3119 ;;		___ftdiv
  3120 ;;		___ftmul
  3121 ;;		___lwtoft
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125                           	psect	text20
  3126  000D08                     __ptext20:
  3127                           	opt stack 0
  3128  000D08                     ___ftpack:
  3129                           	opt stack 24
  3130                           
  3131                           ;incstack = 0
  3132  000D08  501C               	movf	___ftpack@exp,w,c
  3133  000D0A  B4D8               	btfsc	status,2,c
  3134  000D0C  D005               	goto	l3387
  3135  000D0E  5019               	movf	___ftpack@arg,w,c
  3136  000D10  101A               	iorwf	___ftpack@arg+1,w,c
  3137  000D12  101B               	iorwf	___ftpack@arg+2,w,c
  3138  000D14  A4D8               	btfss	status,2,c
  3139  000D16  D00E               	goto	l3393
  3140  000D18                     l3387:
  3141  000D18  0E00               	movlw	0
  3142  000D1A  6E19               	movwf	?___ftpack,c
  3143  000D1C  0E00               	movlw	0
  3144  000D1E  6E1A               	movwf	?___ftpack+1,c
  3145  000D20  0E00               	movlw	0
  3146  000D22  6E1B               	movwf	?___ftpack+2,c
  3147  000D24  0012               	return	
  3148  000D26  D006               	goto	l3393
  3149  000D28                     l3391:
  3150  000D28  2A1C               	incf	___ftpack@exp,f,c
  3151  000D2A  90D8               	bcf	status,0,c
  3152  000D2C  321B               	rrcf	___ftpack@arg+2,f,c
  3153  000D2E  321A               	rrcf	___ftpack@arg+1,f,c
  3154  000D30  3219               	rrcf	___ftpack@arg,f,c
  3155  000D32  D000               	goto	l3393
  3156  000D34                     l3393:
  3157  000D34  0E00               	movlw	0
  3158  000D36  1419               	andwf	___ftpack@arg,w,c
  3159  000D38  6E1E               	movwf	??___ftpack& (0+255),c
  3160  000D3A  0E00               	movlw	0
  3161  000D3C  141A               	andwf	___ftpack@arg+1,w,c
  3162  000D3E  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  3163  000D40  0EFE               	movlw	254
  3164  000D42  141B               	andwf	___ftpack@arg+2,w,c
  3165  000D44  6E20               	movwf	(??___ftpack+2)& (0+255),c
  3166  000D46  501E               	movf	??___ftpack,w,c
  3167  000D48  101F               	iorwf	??___ftpack+1,w,c
  3168  000D4A  1020               	iorwf	??___ftpack+2,w,c
  3169  000D4C  B4D8               	btfsc	status,2,c
  3170  000D4E  D00E               	goto	l3399
  3171  000D50  D7EB               	goto	l3391
  3172  000D52  D00C               	goto	l3399
  3173  000D54                     l3395:
  3174  000D54  2A1C               	incf	___ftpack@exp,f,c
  3175  000D56  0E01               	movlw	1
  3176  000D58  2619               	addwf	___ftpack@arg,f,c
  3177  000D5A  0E00               	movlw	0
  3178  000D5C  221A               	addwfc	___ftpack@arg+1,f,c
  3179  000D5E  0E00               	movlw	0
  3180  000D60  221B               	addwfc	___ftpack@arg+2,f,c
  3181  000D62  90D8               	bcf	status,0,c
  3182  000D64  321B               	rrcf	___ftpack@arg+2,f,c
  3183  000D66  321A               	rrcf	___ftpack@arg+1,f,c
  3184  000D68  3219               	rrcf	___ftpack@arg,f,c
  3185  000D6A  D000               	goto	l3399
  3186  000D6C                     l3399:
  3187  000D6C  0E00               	movlw	0
  3188  000D6E  1419               	andwf	___ftpack@arg,w,c
  3189  000D70  6E1E               	movwf	??___ftpack& (0+255),c
  3190  000D72  0E00               	movlw	0
  3191  000D74  141A               	andwf	___ftpack@arg+1,w,c
  3192  000D76  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  3193  000D78  0EFF               	movlw	255
  3194  000D7A  141B               	andwf	___ftpack@arg+2,w,c
  3195  000D7C  6E20               	movwf	(??___ftpack+2)& (0+255),c
  3196  000D7E  501E               	movf	??___ftpack,w,c
  3197  000D80  101F               	iorwf	??___ftpack+1,w,c
  3198  000D82  1020               	iorwf	??___ftpack+2,w,c
  3199  000D84  B4D8               	btfsc	status,2,c
  3200  000D86  D008               	goto	l3403
  3201  000D88  D7E5               	goto	l3395
  3202  000D8A  D006               	goto	l3403
  3203  000D8C                     l3401:
  3204  000D8C  061C               	decf	___ftpack@exp,f,c
  3205  000D8E  90D8               	bcf	status,0,c
  3206  000D90  3619               	rlcf	___ftpack@arg,f,c
  3207  000D92  361A               	rlcf	___ftpack@arg+1,f,c
  3208  000D94  361B               	rlcf	___ftpack@arg+2,f,c
  3209  000D96  D000               	goto	l3403
  3210  000D98                     l3403:
  3211  000D98  BE1A               	btfsc	___ftpack@arg+1,7,c
  3212  000D9A  D004               	goto	l973
  3213  000D9C  0E02               	movlw	2
  3214  000D9E  601C               	cpfslt	___ftpack@exp,c
  3215  000DA0  D7F5               	goto	l3401
  3216  000DA2  D000               	goto	l973
  3217  000DA4                     l973:
  3218  000DA4  B01C               	btfsc	___ftpack@exp,0,c
  3219  000DA6  D002               	goto	l3409
  3220  000DA8  9E1A               	bcf	___ftpack@arg+1,7,c
  3221  000DAA  D000               	goto	l3409
  3222  000DAC                     l3409:
  3223  000DAC  90D8               	bcf	status,0,c
  3224  000DAE  321C               	rrcf	___ftpack@exp,f,c
  3225  000DB0  501C               	movf	___ftpack@exp,w,c
  3226  000DB2  121B               	iorwf	___ftpack@arg+2,f,c
  3227  000DB4  501D               	movf	___ftpack@sign,w,c
  3228  000DB6  B4D8               	btfsc	status,2,c
  3229  000DB8  D002               	goto	l3415
  3230  000DBA  8E1B               	bsf	___ftpack@arg+2,7,c
  3231  000DBC  D000               	goto	l3415
  3232  000DBE                     l3415:
  3233  000DBE  C019  F019         	movff	___ftpack@arg,?___ftpack
  3234  000DC2  C01A  F01A         	movff	___ftpack@arg+1,?___ftpack+1
  3235  000DC6  C01B  F01B         	movff	___ftpack@arg+2,?___ftpack+2
  3236  000DCA  0012               	return	
  3237  000DCC  0012               	return		;funcret
  3238  000DCE                     __end_of___ftpack:
  3239                           	opt stack 0
  3240                           tblptru	equ	0xFF8
  3241                           tblptrh	equ	0xFF7
  3242                           tblptrl	equ	0xFF6
  3243                           tablat	equ	0xFF5
  3244                           prodh	equ	0xFF4
  3245                           prodl	equ	0xFF3
  3246                           intcon	equ	0xFF2
  3247                           postinc0	equ	0xFEE
  3248                           wreg	equ	0xFE8
  3249                           postdec1	equ	0xFE5
  3250                           fsr1l	equ	0xFE1
  3251                           indf2	equ	0xFDF
  3252                           postinc2	equ	0xFDE
  3253                           fsr2h	equ	0xFDA
  3254                           fsr2l	equ	0xFD9
  3255                           status	equ	0xFD8
  3256                           
  3257 ;; *************** function _ReadADC *****************
  3258 ;; Defined at:
  3259 ;;		line 24 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;		None
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;		None
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  2   24[COMRAM] int 
  3266 ;; Registers used:
  3267 ;;		wreg, status,2
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3273 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3275 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3276 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3277 ;;Total ram usage:        4 bytes
  3278 ;; Hardware stack levels used:    1
  3279 ;; Hardware stack levels required when called:    3
  3280 ;; This function calls:
  3281 ;;		Nothing
  3282 ;; This function is called by:
  3283 ;;		_GetADC6
  3284 ;; This function uses a non-reentrant model
  3285 ;;
  3286                           
  3287                           	psect	text21
  3288  001858                     __ptext21:
  3289                           	opt stack 0
  3290  001858                     _ReadADC:
  3291                           	opt stack 25
  3292                           
  3293                           ;incstack = 0
  3294  001858  50C4               	movf	4036,w,c	;volatile
  3295  00185A  6E1B               	movwf	??_ReadADC& (0+255),c
  3296  00185C  50C3               	movf	4035,w,c	;volatile
  3297  00185E  6E19               	movwf	?_ReadADC,c
  3298  001860  C01B  F01A         	movff	??_ReadADC,?_ReadADC+1
  3299  001864  0012               	return	
  3300  001866  0012               	return		;funcret
  3301  001868                     __end_of_ReadADC:
  3302                           	opt stack 0
  3303                           tblptru	equ	0xFF8
  3304                           tblptrh	equ	0xFF7
  3305                           tblptrl	equ	0xFF6
  3306                           tablat	equ	0xFF5
  3307                           prodh	equ	0xFF4
  3308                           prodl	equ	0xFF3
  3309                           intcon	equ	0xFF2
  3310                           postinc0	equ	0xFEE
  3311                           wreg	equ	0xFE8
  3312                           postdec1	equ	0xFE5
  3313                           fsr1l	equ	0xFE1
  3314                           indf2	equ	0xFDF
  3315                           postinc2	equ	0xFDE
  3316                           fsr2h	equ	0xFDA
  3317                           fsr2l	equ	0xFD9
  3318                           status	equ	0xFD8
  3319                           
  3320 ;; *************** function _ConvertADC *****************
  3321 ;; Defined at:
  3322 ;;		line 22 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  3323 ;; Parameters:    Size  Location     Type
  3324 ;;		None
  3325 ;; Auto vars:     Size  Location     Type
  3326 ;;		None
  3327 ;; Return value:  Size  Location     Type
  3328 ;;		None               void
  3329 ;; Registers used:
  3330 ;;		None
  3331 ;; Tracked objects:
  3332 ;;		On entry : 0/0
  3333 ;;		On exit  : 0/0
  3334 ;;		Unchanged: 0/0
  3335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3340 ;;Total ram usage:        0 bytes
  3341 ;; Hardware stack levels used:    1
  3342 ;; Hardware stack levels required when called:    3
  3343 ;; This function calls:
  3344 ;;		Nothing
  3345 ;; This function is called by:
  3346 ;;		_GetADC6
  3347 ;; This function uses a non-reentrant model
  3348 ;;
  3349                           
  3350                           	psect	text22
  3351  001890                     __ptext22:
  3352                           	opt stack 0
  3353  001890                     _ConvertADC:
  3354                           	opt stack 25
  3355                           
  3356                           ;incstack = 0
  3357  001890  82C2               	bsf	4034,1,c	;volatile
  3358  001892  0012               	return		;funcret
  3359  001894                     __end_of_ConvertADC:
  3360                           	opt stack 0
  3361                           tblptru	equ	0xFF8
  3362                           tblptrh	equ	0xFF7
  3363                           tblptrl	equ	0xFF6
  3364                           tablat	equ	0xFF5
  3365                           prodh	equ	0xFF4
  3366                           prodl	equ	0xFF3
  3367                           intcon	equ	0xFF2
  3368                           postinc0	equ	0xFEE
  3369                           wreg	equ	0xFE8
  3370                           postdec1	equ	0xFE5
  3371                           fsr1l	equ	0xFE1
  3372                           indf2	equ	0xFDF
  3373                           postinc2	equ	0xFDE
  3374                           fsr2h	equ	0xFDA
  3375                           fsr2l	equ	0xFD9
  3376                           status	equ	0xFD8
  3377                           
  3378 ;; *************** function _BusyADC *****************
  3379 ;; Defined at:
  3380 ;;		line 26 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  3381 ;; Parameters:    Size  Location     Type
  3382 ;;		None
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;		None
  3385 ;; Return value:  Size  Location     Type
  3386 ;;                  1    wreg      unsigned char 
  3387 ;; Registers used:
  3388 ;;		wreg
  3389 ;; Tracked objects:
  3390 ;;		On entry : 0/0
  3391 ;;		On exit  : 0/0
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3398 ;;Total ram usage:        0 bytes
  3399 ;; Hardware stack levels used:    1
  3400 ;; Hardware stack levels required when called:    3
  3401 ;; This function calls:
  3402 ;;		Nothing
  3403 ;; This function is called by:
  3404 ;;		_GetADC6
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           	psect	text23
  3409  001868                     __ptext23:
  3410                           	opt stack 0
  3411  001868                     _BusyADC:
  3412                           	opt stack 25
  3413                           
  3414                           ;incstack = 0
  3415  001868  A2C2               	btfss	4034,1,c	;volatile
  3416  00186A  D002               	goto	u2220
  3417  00186C  0E01               	movlw	1
  3418  00186E  0012               	return	
  3419  001870                     u2220:
  3420  001870  0E00               	movlw	0
  3421  001872  0012               	return	
  3422  001874  0012               	return		;funcret
  3423  001876                     __end_of_BusyADC:
  3424                           	opt stack 0
  3425                           tblptru	equ	0xFF8
  3426                           tblptrh	equ	0xFF7
  3427                           tblptrl	equ	0xFF6
  3428                           tablat	equ	0xFF5
  3429                           prodh	equ	0xFF4
  3430                           prodl	equ	0xFF3
  3431                           intcon	equ	0xFF2
  3432                           postinc0	equ	0xFEE
  3433                           wreg	equ	0xFE8
  3434                           postdec1	equ	0xFE5
  3435                           fsr1l	equ	0xFE1
  3436                           indf2	equ	0xFDF
  3437                           postinc2	equ	0xFDE
  3438                           fsr2h	equ	0xFDA
  3439                           fsr2l	equ	0xFD9
  3440                           status	equ	0xFD8
  3441                           
  3442 ;; *************** function _Relay_Init *****************
  3443 ;; Defined at:
  3444 ;;		line 39 in file "_01_USER/Relay.c"
  3445 ;; Parameters:    Size  Location     Type
  3446 ;;		None
  3447 ;; Auto vars:     Size  Location     Type
  3448 ;;		None
  3449 ;; Return value:  Size  Location     Type
  3450 ;;		None               void
  3451 ;; Registers used:
  3452 ;;		None
  3453 ;; Tracked objects:
  3454 ;;		On entry : 0/0
  3455 ;;		On exit  : 0/0
  3456 ;;		Unchanged: 0/0
  3457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3462 ;;Total ram usage:        0 bytes
  3463 ;; Hardware stack levels used:    1
  3464 ;; Hardware stack levels required when called:    3
  3465 ;; This function calls:
  3466 ;;		Nothing
  3467 ;; This function is called by:
  3468 ;;		_main
  3469 ;; This function uses a non-reentrant model
  3470 ;;
  3471                           
  3472                           	psect	text24
  3473  001876                     __ptext24:
  3474                           	opt stack 0
  3475  001876                     _Relay_Init:
  3476                           	opt stack 27
  3477                           
  3478                           ;Relay.c: 42: TRISD0 = 0;
  3479                           
  3480                           ;incstack = 0
  3481  001876  9095               	bcf	3989,0,c	;volatile
  3482                           
  3483                           ;Relay.c: 43: TRISD1 = 0;
  3484  001878  9295               	bcf	3989,1,c	;volatile
  3485                           
  3486                           ;Relay.c: 44: TRISD2 = 0;
  3487  00187A  9495               	bcf	3989,2,c	;volatile
  3488                           
  3489                           ;Relay.c: 45: TRISD3 = 0;
  3490  00187C  9695               	bcf	3989,3,c	;volatile
  3491                           
  3492                           ;Relay.c: 46: TRISD4 = 0;
  3493  00187E  9895               	bcf	3989,4,c	;volatile
  3494                           
  3495                           ;Relay.c: 47: TRISD7 = 0;
  3496  001880  9E95               	bcf	3989,7,c	;volatile
  3497  001882  0012               	return		;funcret
  3498  001884                     __end_of_Relay_Init:
  3499                           	opt stack 0
  3500                           tblptru	equ	0xFF8
  3501                           tblptrh	equ	0xFF7
  3502                           tblptrl	equ	0xFF6
  3503                           tablat	equ	0xFF5
  3504                           prodh	equ	0xFF4
  3505                           prodl	equ	0xFF3
  3506                           intcon	equ	0xFF2
  3507                           postinc0	equ	0xFEE
  3508                           wreg	equ	0xFE8
  3509                           postdec1	equ	0xFE5
  3510                           fsr1l	equ	0xFE1
  3511                           indf2	equ	0xFDF
  3512                           postinc2	equ	0xFDE
  3513                           fsr2h	equ	0xFDA
  3514                           fsr2l	equ	0xFD9
  3515                           status	equ	0xFD8
  3516                           
  3517 ;; *************** function _RS485_Init *****************
  3518 ;; Defined at:
  3519 ;;		line 47 in file "_01_USER/My_USART.c"
  3520 ;; Parameters:    Size  Location     Type
  3521 ;;		None
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;		None
  3524 ;; Return value:  Size  Location     Type
  3525 ;;		None               void
  3526 ;; Registers used:
  3527 ;;		wreg, status,2, cstack
  3528 ;; Tracked objects:
  3529 ;;		On entry : 0/0
  3530 ;;		On exit  : 0/0
  3531 ;;		Unchanged: 0/0
  3532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3537 ;;Total ram usage:        0 bytes
  3538 ;; Hardware stack levels used:    1
  3539 ;; Hardware stack levels required when called:    4
  3540 ;; This function calls:
  3541 ;;		_Open1USART
  3542 ;; This function is called by:
  3543 ;;		_main
  3544 ;; This function uses a non-reentrant model
  3545 ;;
  3546                           
  3547                           	psect	text25
  3548  00181E                     __ptext25:
  3549                           	opt stack 0
  3550  00181E                     _RS485_Init:
  3551                           	opt stack 26
  3552                           
  3553                           ;My_USART.c: 49: Open1USART( 0b01111111 &
  3554                           ;My_USART.c: 50: 0b11111111 &
  3555                           ;My_USART.c: 51: 0b11111110 &
  3556                           ;My_USART.c: 52: 0b11111101 &
  3557                           ;My_USART.c: 53: 0b11111111 &
  3558                           ;My_USART.c: 54: 0b11101111
  3559                           ;My_USART.c: 55: ,
  3560                           ;My_USART.c: 56: 12
  3561                           ;My_USART.c: 57: );
  3562                           
  3563                           ;incstack = 0
  3564  00181E  0E00               	movlw	0
  3565  001820  6E1A               	movwf	Open1USART@spbrg+1,c
  3566  001822  0E0C               	movlw	12
  3567  001824  6E19               	movwf	Open1USART@spbrg,c
  3568  001826  0E6C               	movlw	108
  3569  001828  ECF1  F008         	call	_Open1USART
  3570                           
  3571                           ;My_USART.c: 59: TRISC7 = 1;
  3572  00182C  8E94               	bsf	3988,7,c	;volatile
  3573                           
  3574                           ;My_USART.c: 60: TRISC6 = 0;
  3575  00182E  9C94               	bcf	3988,6,c	;volatile
  3576                           
  3577                           ;My_USART.c: 61: TRISC0 = 0;
  3578  001830  9094               	bcf	3988,0,c	;volatile
  3579                           
  3580                           ;My_USART.c: 62: RC0 = 1;
  3581  001832  8082               	bsf	3970,0,c	;volatile
  3582  001834  0012               	return		;funcret
  3583  001836                     __end_of_RS485_Init:
  3584                           	opt stack 0
  3585                           tblptru	equ	0xFF8
  3586                           tblptrh	equ	0xFF7
  3587                           tblptrl	equ	0xFF6
  3588                           tablat	equ	0xFF5
  3589                           prodh	equ	0xFF4
  3590                           prodl	equ	0xFF3
  3591                           intcon	equ	0xFF2
  3592                           postinc0	equ	0xFEE
  3593                           wreg	equ	0xFE8
  3594                           postdec1	equ	0xFE5
  3595                           fsr1l	equ	0xFE1
  3596                           indf2	equ	0xFDF
  3597                           postinc2	equ	0xFDE
  3598                           fsr2h	equ	0xFDA
  3599                           fsr2l	equ	0xFD9
  3600                           status	equ	0xFD8
  3601                           
  3602 ;; *************** function _Open1USART *****************
  3603 ;; Defined at:
  3604 ;;		line 124 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1open.c"
  3605 ;; Parameters:    Size  Location     Type
  3606 ;;  config          1    wreg     unsigned char 
  3607 ;;  spbrg           2   24[COMRAM] unsigned int 
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;  config          1   26[COMRAM] unsigned char 
  3610 ;; Return value:  Size  Location     Type
  3611 ;;		None               void
  3612 ;; Registers used:
  3613 ;;		wreg, status,2
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3619 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3620 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3622 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3623 ;;Total ram usage:        3 bytes
  3624 ;; Hardware stack levels used:    1
  3625 ;; Hardware stack levels required when called:    3
  3626 ;; This function calls:
  3627 ;;		Nothing
  3628 ;; This function is called by:
  3629 ;;		_RS485_Init
  3630 ;; This function uses a non-reentrant model
  3631 ;;
  3632                           
  3633                           	psect	text26
  3634  0011E2                     __ptext26:
  3635                           	opt stack 0
  3636  0011E2                     _Open1USART:
  3637                           	opt stack 26
  3638                           
  3639                           ;incstack = 0
  3640                           ;Open1USART@config stored from wreg
  3641  0011E2  6E1B               	movwf	Open1USART@config,c
  3642  0011E4  0E00               	movlw	0
  3643  0011E6  6EAC               	movwf	4012,c	;volatile
  3644  0011E8  0E00               	movlw	0
  3645  0011EA  6EAB               	movwf	4011,c	;volatile
  3646  0011EC  A01B               	btfss	Open1USART@config,0,c
  3647  0011EE  D002               	goto	l2777
  3648  0011F0  88AC               	bsf	4012,4,c	;volatile
  3649  0011F2  D000               	goto	l2777
  3650  0011F4                     l2777:
  3651  0011F4  A21B               	btfss	Open1USART@config,1,c
  3652  0011F6  D003               	goto	l2781
  3653  0011F8  8CAC               	bsf	4012,6,c	;volatile
  3654  0011FA  8CAB               	bsf	4011,6,c	;volatile
  3655  0011FC  D000               	goto	l2781
  3656  0011FE                     l2781:
  3657  0011FE  A41B               	btfss	Open1USART@config,2,c
  3658  001200  D002               	goto	l2785
  3659  001202  8EAC               	bsf	4012,7,c	;volatile
  3660  001204  D000               	goto	l2785
  3661  001206                     l2785:
  3662  001206  A61B               	btfss	Open1USART@config,3,c
  3663  001208  D002               	goto	l643
  3664  00120A  88AB               	bsf	4011,4,c	;volatile
  3665  00120C  D002               	goto	l2789
  3666  00120E                     l643:
  3667  00120E  8AAB               	bsf	4011,5,c	;volatile
  3668  001210  D000               	goto	l2789
  3669  001212                     l2789:
  3670  001212  A81B               	btfss	Open1USART@config,4,c
  3671  001214  D002               	goto	l2793
  3672  001216  84AC               	bsf	4012,2,c	;volatile
  3673  001218  D000               	goto	l2793
  3674  00121A                     l2793:
  3675  00121A  AA1B               	btfss	Open1USART@config,5,c
  3676  00121C  D002               	goto	l2797
  3677  00121E  86AB               	bsf	4011,3,c	;volatile
  3678  001220  D000               	goto	l2797
  3679  001222                     l2797:
  3680  001222  AC1B               	btfss	Open1USART@config,6,c
  3681  001224  D002               	goto	l647
  3682  001226  8A9D               	bsf	3997,5,c	;volatile
  3683  001228  D002               	goto	l2801
  3684  00122A                     l647:
  3685  00122A  9A9D               	bcf	3997,5,c	;volatile
  3686  00122C  D000               	goto	l2801
  3687  00122E                     l2801:
  3688  00122E  AE1B               	btfss	Open1USART@config,7,c
  3689  001230  D002               	goto	l649
  3690  001232  889D               	bsf	3997,4,c	;volatile
  3691  001234  D001               	goto	l650
  3692  001236                     l649:
  3693  001236  989D               	bcf	3997,4,c	;volatile
  3694  001238                     l650:
  3695  001238  C019  FFAF         	movff	Open1USART@spbrg,4015	;volatile
  3696  00123C  501A               	movf	Open1USART@spbrg+1,w,c
  3697  00123E  6ED4               	movwf	4052,c	;volatile
  3698  001240  8AAC               	bsf	4012,5,c	;volatile
  3699  001242  8EAB               	bsf	4011,7,c	;volatile
  3700  001244  0012               	return		;funcret
  3701  001246                     __end_of_Open1USART:
  3702                           	opt stack 0
  3703                           tblptru	equ	0xFF8
  3704                           tblptrh	equ	0xFF7
  3705                           tblptrl	equ	0xFF6
  3706                           tablat	equ	0xFF5
  3707                           prodh	equ	0xFF4
  3708                           prodl	equ	0xFF3
  3709                           intcon	equ	0xFF2
  3710                           postinc0	equ	0xFEE
  3711                           wreg	equ	0xFE8
  3712                           postdec1	equ	0xFE5
  3713                           fsr1l	equ	0xFE1
  3714                           indf2	equ	0xFDF
  3715                           postinc2	equ	0xFDE
  3716                           fsr2h	equ	0xFDA
  3717                           fsr2l	equ	0xFD9
  3718                           status	equ	0xFD8
  3719                           
  3720 ;; *************** function _ManageMessage *****************
  3721 ;; Defined at:
  3722 ;;		line 51 in file "_01_USER/Run.c"
  3723 ;; Parameters:    Size  Location     Type
  3724 ;;		None
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;		None
  3727 ;; Return value:  Size  Location     Type
  3728 ;;		None               void
  3729 ;; Registers used:
  3730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3731 ;; Tracked objects:
  3732 ;;		On entry : 0/0
  3733 ;;		On exit  : 0/0
  3734 ;;		Unchanged: 0/0
  3735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3740 ;;Total ram usage:        0 bytes
  3741 ;; Hardware stack levels used:    1
  3742 ;; Hardware stack levels required when called:    6
  3743 ;; This function calls:
  3744 ;;		_Key_ManageMessage
  3745 ;;		_RS485_ManageMessage
  3746 ;; This function is called by:
  3747 ;;		_main
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751                           	psect	text27
  3752  0017CE                     __ptext27:
  3753                           	opt stack 0
  3754  0017CE                     _ManageMessage:
  3755                           	opt stack 24
  3756                           
  3757                           ;Run.c: 53: Key_ManageMessage();
  3758                           
  3759                           ;incstack = 0
  3760  0017CE  EC88  F003         	call	_Key_ManageMessage	;wreg free
  3761                           
  3762                           ;Run.c: 54: RS485_ManageMessage(ga_RS485_ReceiveBuff,10);
  3763  0017D2  0EDA               	movlw	low _ga_RS485_ReceiveBuff
  3764  0017D4  0101               	movlb	1	; () banked
  3765  0017D6  6F00               	movwf	RS485_ManageMessage@DataBuff& (0+255),b
  3766  0017D8  0E00               	movlw	high _ga_RS485_ReceiveBuff
  3767  0017DA  0101               	movlb	1	; () banked
  3768  0017DC  6F01               	movwf	(RS485_ManageMessage@DataBuff+1)& (0+255),b
  3769  0017DE  0E0A               	movlw	10
  3770  0017E0  0101               	movlb	1	; () banked
  3771  0017E2  6F02               	movwf	RS485_ManageMessage@date_lenth& (0+255),b
  3772  0017E4  ECD3  F000         	call	_RS485_ManageMessage	;wreg free
  3773  0017E8  0012               	return		;funcret
  3774  0017EA                     __end_of_ManageMessage:
  3775                           	opt stack 0
  3776                           tblptru	equ	0xFF8
  3777                           tblptrh	equ	0xFF7
  3778                           tblptrl	equ	0xFF6
  3779                           tablat	equ	0xFF5
  3780                           prodh	equ	0xFF4
  3781                           prodl	equ	0xFF3
  3782                           intcon	equ	0xFF2
  3783                           postinc0	equ	0xFEE
  3784                           wreg	equ	0xFE8
  3785                           postdec1	equ	0xFE5
  3786                           fsr1l	equ	0xFE1
  3787                           indf2	equ	0xFDF
  3788                           postinc2	equ	0xFDE
  3789                           fsr2h	equ	0xFDA
  3790                           fsr2l	equ	0xFD9
  3791                           status	equ	0xFD8
  3792                           
  3793 ;; *************** function _RS485_ManageMessage *****************
  3794 ;; Defined at:
  3795 ;;		line 114 in file "_01_USER/My_USART.c"
  3796 ;; Parameters:    Size  Location     Type
  3797 ;;  DataBuff        2    0[BANK1 ] PTR unsigned char 
  3798 ;;		 -> ga_RS485_ReceiveBuff(10), 
  3799 ;;  date_lenth      1    2[BANK1 ] unsigned char 
  3800 ;; Auto vars:     Size  Location     Type
  3801 ;;  from_dress      1   10[BANK1 ] unsigned char 
  3802 ;;  CRC_L           1    9[BANK1 ] unsigned char 
  3803 ;;  CRC_H           1    8[BANK1 ] unsigned char 
  3804 ;; Return value:  Size  Location     Type
  3805 ;;                  1    wreg      unsigned char 
  3806 ;; Registers used:
  3807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3808 ;; Tracked objects:
  3809 ;;		On entry : 0/0
  3810 ;;		On exit  : 0/0
  3811 ;;		Unchanged: 0/0
  3812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3813 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3814 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3815 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3816 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3817 ;;Total ram usage:       11 bytes
  3818 ;; Hardware stack levels used:    1
  3819 ;; Hardware stack levels required when called:    5
  3820 ;; This function calls:
  3821 ;;		_VerifyCRC
  3822 ;; This function is called by:
  3823 ;;		_ManageMessage
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           	psect	text28
  3828  0001A6                     __ptext28:
  3829                           	opt stack 0
  3830  0001A6                     _RS485_ManageMessage:
  3831                           	opt stack 24
  3832                           
  3833                           ;My_USART.c: 116: unsigned char CRC_H,CRC_L,from_dress;
  3834                           ;My_USART.c: 117: if( g_RS485_Receive_Flag == 1 )
  3835                           
  3836                           ;incstack = 0
  3837  0001A6  0440               	decf	_g_RS485_Receive_Flag,w,c
  3838  0001A8  A4D8               	btfss	status,2,c
  3839  0001AA  0012               	return	
  3840                           
  3841                           ;My_USART.c: 118: {
  3842                           ;My_USART.c: 121: if( DataBuff [date_lenth-1] != 0xaa) { g_RS485_Receive_Flag = 0; retur
      +                          n 1;}
  3843  0001AC  0EFF               	movlw	255
  3844  0001AE  0101               	movlb	1	; () banked
  3845  0001B0  6F03               	movwf	??_RS485_ManageMessage& (0+255),b
  3846  0001B2  0EFF               	movlw	255
  3847  0001B4  0101               	movlb	1	; () banked
  3848  0001B6  6F04               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  3849  0001B8  0101               	movlb	1	; () banked
  3850  0001BA  5102               	movf	RS485_ManageMessage@date_lenth& (0+255),w,b
  3851  0001BC  0101               	movlb	1	; () banked
  3852  0001BE  6F05               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  3853  0001C0  6B06               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  3854  0001C2  0101               	movlb	1	; () banked
  3855  0001C4  5103               	movf	??_RS485_ManageMessage& (0+255),w,b
  3856  0001C6  0101               	movlb	1	; () banked
  3857  0001C8  2705               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  3858  0001CA  0101               	movlb	1	; () banked
  3859  0001CC  5104               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  3860  0001CE  0101               	movlb	1	; () banked
  3861  0001D0  2306               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  3862  0001D2  0101               	movlb	1	; () banked
  3863  0001D4  5105               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  3864  0001D6  0101               	movlb	1	; () banked
  3865  0001D8  2500               	addwf	RS485_ManageMessage@DataBuff& (0+255),w,b
  3866  0001DA  6ED9               	movwf	fsr2l,c
  3867  0001DC  0101               	movlb	1	; () banked
  3868  0001DE  5106               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  3869  0001E0  0101               	movlb	1	; () banked
  3870  0001E2  2101               	addwfc	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  3871  0001E4  6EDA               	movwf	fsr2h,c
  3872  0001E6  0EAA               	movlw	170
  3873  0001E8  18DE               	xorwf	postinc2,w,c
  3874  0001EA  B4D8               	btfsc	status,2,c
  3875  0001EC  D003               	goto	l3591
  3876                           
  3877                           ; BSR set to: 1
  3878  0001EE  0E00               	movlw	0
  3879  0001F0  6E40               	movwf	_g_RS485_Receive_Flag,c
  3880                           
  3881                           ; BSR set to: 1
  3882                           ;	Return value of _RS485_ManageMessage is never used
  3883  0001F2  0012               	return	
  3884  0001F4                     l3591:
  3885                           
  3886                           ; BSR set to: 1
  3887                           ;My_USART.c: 124: CRC_H = DataBuff[1];
  3888  0001F4  0101               	movlb	1	; () banked
  3889  0001F6  EE20 F001          	lfsr	2,1
  3890  0001FA  5100               	movf	RS485_ManageMessage@DataBuff& (0+255),w,b
  3891  0001FC  26D9               	addwf	fsr2l,f,c
  3892  0001FE  5101               	movf	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  3893  000200  22DA               	addwfc	fsr2h,f,c
  3894  000202  50DF               	movf	indf2,w,c
  3895  000204  0101               	movlb	1	; () banked
  3896  000206  6F08               	movwf	RS485_ManageMessage@CRC_H& (0+255),b
  3897                           
  3898                           ; BSR set to: 1
  3899                           ;My_USART.c: 125: CRC_L = DataBuff[0];
  3900  000208  C100  FFD9         	movff	RS485_ManageMessage@DataBuff,fsr2l
  3901  00020C  C101  FFDA         	movff	RS485_ManageMessage@DataBuff+1,fsr2h
  3902  000210  50DF               	movf	indf2,w,c
  3903  000212  0101               	movlb	1	; () banked
  3904  000214  6F09               	movwf	RS485_ManageMessage@CRC_L& (0+255),b
  3905                           
  3906                           ; BSR set to: 1
  3907                           ;My_USART.c: 126: VerifyCRC(DataBuff,10);
  3908  000216  C100  F026         	movff	RS485_ManageMessage@DataBuff,VerifyCRC@DataBuff
  3909  00021A  C101  F027         	movff	RS485_ManageMessage@DataBuff+1,VerifyCRC@DataBuff+1
  3910  00021E  0E0A               	movlw	10
  3911  000220  6E28               	movwf	VerifyCRC@date_lenth,c
  3912  000222  ECF0  F004         	call	_VerifyCRC	;wreg free
  3913                           
  3914                           ;My_USART.c: 127: if( DataBuff[1] != CRC_H ) { g_RS485_Receive_Flag = 0; return 2 ;}
  3915  000226  0101               	movlb	1	; () banked
  3916  000228  EE20 F001          	lfsr	2,1
  3917  00022C  5100               	movf	RS485_ManageMessage@DataBuff& (0+255),w,b
  3918  00022E  26D9               	addwf	fsr2l,f,c
  3919  000230  5101               	movf	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  3920  000232  22DA               	addwfc	fsr2h,f,c
  3921  000234  0101               	movlb	1	; () banked
  3922  000236  5108               	movf	RS485_ManageMessage@CRC_H& (0+255),w,b
  3923  000238  18DE               	xorwf	postinc2,w,c
  3924  00023A  B4D8               	btfsc	status,2,c
  3925  00023C  D003               	goto	l3603
  3926                           
  3927                           ; BSR set to: 1
  3928  00023E  0E00               	movlw	0
  3929  000240  6E40               	movwf	_g_RS485_Receive_Flag,c
  3930                           
  3931                           ; BSR set to: 1
  3932                           ;	Return value of _RS485_ManageMessage is never used
  3933  000242  0012               	return	
  3934  000244                     l3603:
  3935                           
  3936                           ; BSR set to: 1
  3937                           ;My_USART.c: 128: if( DataBuff[0] != CRC_L ) { g_RS485_Receive_Flag = 0; return 2 ;}
  3938  000244  C100  FFD9         	movff	RS485_ManageMessage@DataBuff,fsr2l
  3939  000248  C101  FFDA         	movff	RS485_ManageMessage@DataBuff+1,fsr2h
  3940  00024C  0101               	movlb	1	; () banked
  3941  00024E  5109               	movf	RS485_ManageMessage@CRC_L& (0+255),w,b
  3942  000250  18DE               	xorwf	postinc2,w,c
  3943  000252  B4D8               	btfsc	status,2,c
  3944  000254  D003               	goto	l3609
  3945                           
  3946                           ; BSR set to: 1
  3947  000256  0E00               	movlw	0
  3948  000258  6E40               	movwf	_g_RS485_Receive_Flag,c
  3949                           
  3950                           ; BSR set to: 1
  3951                           ;	Return value of _RS485_ManageMessage is never used
  3952  00025A  0012               	return	
  3953  00025C                     l3609:
  3954                           
  3955                           ; BSR set to: 1
  3956                           ;My_USART.c: 131: if( ( DataBuff[date_lenth - 2] != 0x10 ) && ( DataBuff[date_lenth - 2]
      +                           != 0xff) ) { g_RS485_Receive_Flag = 0; return 3;}
  3957  00025C  0EFE               	movlw	254
  3958  00025E  0101               	movlb	1	; () banked
  3959  000260  6F03               	movwf	??_RS485_ManageMessage& (0+255),b
  3960  000262  0EFF               	movlw	255
  3961  000264  0101               	movlb	1	; () banked
  3962  000266  6F04               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  3963  000268  0101               	movlb	1	; () banked
  3964  00026A  5102               	movf	RS485_ManageMessage@date_lenth& (0+255),w,b
  3965  00026C  0101               	movlb	1	; () banked
  3966  00026E  6F05               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  3967  000270  6B06               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  3968  000272  0101               	movlb	1	; () banked
  3969  000274  5103               	movf	??_RS485_ManageMessage& (0+255),w,b
  3970  000276  0101               	movlb	1	; () banked
  3971  000278  2705               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  3972  00027A  0101               	movlb	1	; () banked
  3973  00027C  5104               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  3974  00027E  0101               	movlb	1	; () banked
  3975  000280  2306               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  3976  000282  0101               	movlb	1	; () banked
  3977  000284  5105               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  3978  000286  0101               	movlb	1	; () banked
  3979  000288  2500               	addwf	RS485_ManageMessage@DataBuff& (0+255),w,b
  3980  00028A  6ED9               	movwf	fsr2l,c
  3981  00028C  0101               	movlb	1	; () banked
  3982  00028E  5106               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  3983  000290  0101               	movlb	1	; () banked
  3984  000292  2101               	addwfc	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  3985  000294  6EDA               	movwf	fsr2h,c
  3986  000296  0E10               	movlw	16
  3987  000298  18DE               	xorwf	postinc2,w,c
  3988  00029A  B4D8               	btfsc	status,2,c
  3989  00029C  D023               	goto	l3617
  3990                           
  3991                           ; BSR set to: 1
  3992  00029E  0EFE               	movlw	254
  3993  0002A0  0101               	movlb	1	; () banked
  3994  0002A2  6F03               	movwf	??_RS485_ManageMessage& (0+255),b
  3995  0002A4  0EFF               	movlw	255
  3996  0002A6  0101               	movlb	1	; () banked
  3997  0002A8  6F04               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  3998  0002AA  0101               	movlb	1	; () banked
  3999  0002AC  5102               	movf	RS485_ManageMessage@date_lenth& (0+255),w,b
  4000  0002AE  0101               	movlb	1	; () banked
  4001  0002B0  6F05               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  4002  0002B2  6B06               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  4003  0002B4  0101               	movlb	1	; () banked
  4004  0002B6  5103               	movf	??_RS485_ManageMessage& (0+255),w,b
  4005  0002B8  0101               	movlb	1	; () banked
  4006  0002BA  2705               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  4007  0002BC  0101               	movlb	1	; () banked
  4008  0002BE  5104               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  4009  0002C0  0101               	movlb	1	; () banked
  4010  0002C2  2306               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  4011  0002C4  0101               	movlb	1	; () banked
  4012  0002C6  5105               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  4013  0002C8  0101               	movlb	1	; () banked
  4014  0002CA  2500               	addwf	RS485_ManageMessage@DataBuff& (0+255),w,b
  4015  0002CC  6ED9               	movwf	fsr2l,c
  4016  0002CE  0101               	movlb	1	; () banked
  4017  0002D0  5106               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  4018  0002D2  0101               	movlb	1	; () banked
  4019  0002D4  2101               	addwfc	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  4020  0002D6  6EDA               	movwf	fsr2h,c
  4021  0002D8  28DE               	incf	postinc2,w,c
  4022  0002DA  B4D8               	btfsc	status,2,c
  4023  0002DC  D003               	goto	l3617
  4024                           
  4025                           ; BSR set to: 1
  4026  0002DE  0E00               	movlw	0
  4027  0002E0  6E40               	movwf	_g_RS485_Receive_Flag,c
  4028                           
  4029                           ; BSR set to: 1
  4030                           ;	Return value of _RS485_ManageMessage is never used
  4031  0002E2  0012               	return	
  4032  0002E4                     l3617:
  4033                           
  4034                           ; BSR set to: 1
  4035                           ;My_USART.c: 134: from_dress = DataBuff[date_lenth - 3];
  4036  0002E4  0EFD               	movlw	253
  4037  0002E6  0101               	movlb	1	; () banked
  4038  0002E8  6F03               	movwf	??_RS485_ManageMessage& (0+255),b
  4039  0002EA  0EFF               	movlw	255
  4040  0002EC  0101               	movlb	1	; () banked
  4041  0002EE  6F04               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  4042  0002F0  0101               	movlb	1	; () banked
  4043  0002F2  5102               	movf	RS485_ManageMessage@date_lenth& (0+255),w,b
  4044  0002F4  0101               	movlb	1	; () banked
  4045  0002F6  6F05               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  4046  0002F8  6B06               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  4047  0002FA  0101               	movlb	1	; () banked
  4048  0002FC  5103               	movf	??_RS485_ManageMessage& (0+255),w,b
  4049  0002FE  0101               	movlb	1	; () banked
  4050  000300  2705               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  4051  000302  0101               	movlb	1	; () banked
  4052  000304  5104               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  4053  000306  0101               	movlb	1	; () banked
  4054  000308  2306               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  4055  00030A  0101               	movlb	1	; () banked
  4056  00030C  5105               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  4057  00030E  0101               	movlb	1	; () banked
  4058  000310  2500               	addwf	RS485_ManageMessage@DataBuff& (0+255),w,b
  4059  000312  6ED9               	movwf	fsr2l,c
  4060  000314  0101               	movlb	1	; () banked
  4061  000316  5106               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  4062  000318  0101               	movlb	1	; () banked
  4063  00031A  2101               	addwfc	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  4064  00031C  6EDA               	movwf	fsr2h,c
  4065  00031E  50DF               	movf	indf2,w,c
  4066  000320  0101               	movlb	1	; () banked
  4067  000322  6F0A               	movwf	RS485_ManageMessage@from_dress& (0+255),b
  4068                           
  4069                           ; BSR set to: 1
  4070                           ;My_USART.c: 135: if( from_dress < 0x10 ) gsa_Handle_Msg[from_dress].Hardware_Type = Typ
      +                          e_HANDLE;
  4071  000324  0E10               	movlw	16
  4072  000326  0101               	movlb	1	; () banked
  4073  000328  610A               	cpfslt	RS485_ManageMessage@from_dress& (0+255),b
  4074  00032A  D00F               	goto	l3623
  4075                           
  4076                           ; BSR set to: 1
  4077  00032C  0101               	movlb	1	; () banked
  4078  00032E  510A               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  4079  000330  0D07               	mullw	7
  4080  000332  0E05               	movlw	5
  4081  000334  26F3               	addwf	prodl,f,c
  4082  000336  0E00               	movlw	0
  4083  000338  22F4               	addwfc	prodh,f,c
  4084  00033A  0E6A               	movlw	low _gsa_Handle_Msg
  4085  00033C  24F3               	addwf	prodl,w,c
  4086  00033E  6ED9               	movwf	fsr2l,c
  4087  000340  0E00               	movlw	high _gsa_Handle_Msg
  4088  000342  20F4               	addwfc	prodh,w,c
  4089  000344  6EDA               	movwf	fsr2h,c
  4090  000346  0E00               	movlw	0
  4091  000348  D025               	goto	L5
  4092  00034A                     l3623:
  4093                           
  4094                           ; BSR set to: 1
  4095                           ;My_USART.c: 136: else if( from_dress < 0x20 ) gsa_Handle_Msg[from_dress].Hardware_Type 
      +                          = Type_MASTER;
  4096  00034A  0E20               	movlw	32
  4097  00034C  0101               	movlb	1	; () banked
  4098  00034E  610A               	cpfslt	RS485_ManageMessage@from_dress& (0+255),b
  4099  000350  D00F               	goto	l3627
  4100                           
  4101                           ; BSR set to: 1
  4102  000352  0101               	movlb	1	; () banked
  4103  000354  510A               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  4104  000356  0D07               	mullw	7
  4105  000358  0E05               	movlw	5
  4106  00035A  26F3               	addwf	prodl,f,c
  4107  00035C  0E00               	movlw	0
  4108  00035E  22F4               	addwfc	prodh,f,c
  4109  000360  0E6A               	movlw	low _gsa_Handle_Msg
  4110  000362  24F3               	addwf	prodl,w,c
  4111  000364  6ED9               	movwf	fsr2l,c
  4112  000366  0E00               	movlw	high _gsa_Handle_Msg
  4113  000368  20F4               	addwfc	prodh,w,c
  4114  00036A  6EDA               	movwf	fsr2h,c
  4115  00036C  0E01               	movlw	1
  4116  00036E  D012               	goto	L5
  4117  000370                     l3627:
  4118                           
  4119                           ; BSR set to: 1
  4120                           ;My_USART.c: 137: else if( from_dress < 0x30 ) gsa_Handle_Msg[from_dress].Hardware_Type 
      +                          = Type_SENSOR;
  4121  000370  0E30               	movlw	48
  4122  000372  0101               	movlb	1	; () banked
  4123  000374  610A               	cpfslt	RS485_ManageMessage@from_dress& (0+255),b
  4124  000376  D010               	goto	l3631
  4125                           
  4126                           ; BSR set to: 1
  4127  000378  0101               	movlb	1	; () banked
  4128  00037A  510A               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  4129  00037C  0D07               	mullw	7
  4130  00037E  0E05               	movlw	5
  4131  000380  26F3               	addwf	prodl,f,c
  4132  000382  0E00               	movlw	0
  4133  000384  22F4               	addwfc	prodh,f,c
  4134  000386  0E6A               	movlw	low _gsa_Handle_Msg
  4135  000388  24F3               	addwf	prodl,w,c
  4136  00038A  6ED9               	movwf	fsr2l,c
  4137  00038C  0E00               	movlw	high _gsa_Handle_Msg
  4138  00038E  20F4               	addwfc	prodh,w,c
  4139  000390  6EDA               	movwf	fsr2h,c
  4140  000392  0E02               	movlw	2
  4141  000394                     L5:
  4142  000394  6EDF               	movwf	indf2,c
  4143                           
  4144                           ; BSR set to: 1
  4145                           
  4146                           ; BSR set to: 1
  4147  000396  D000               	goto	l3631
  4148  000398                     l3631:
  4149                           
  4150                           ; BSR set to: 1
  4151                           ;My_USART.c: 140: gsa_Handle_Msg[from_dress].Order = DataBuff[date_lenth - 4];
  4152  000398  0EFC               	movlw	252
  4153  00039A  0101               	movlb	1	; () banked
  4154  00039C  6F03               	movwf	??_RS485_ManageMessage& (0+255),b
  4155  00039E  0EFF               	movlw	255
  4156  0003A0  0101               	movlb	1	; () banked
  4157  0003A2  6F04               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  4158  0003A4  0101               	movlb	1	; () banked
  4159  0003A6  5102               	movf	RS485_ManageMessage@date_lenth& (0+255),w,b
  4160  0003A8  0101               	movlb	1	; () banked
  4161  0003AA  6F05               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  4162  0003AC  6B06               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  4163  0003AE  0101               	movlb	1	; () banked
  4164  0003B0  5103               	movf	??_RS485_ManageMessage& (0+255),w,b
  4165  0003B2  0101               	movlb	1	; () banked
  4166  0003B4  2705               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  4167  0003B6  0101               	movlb	1	; () banked
  4168  0003B8  5104               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  4169  0003BA  0101               	movlb	1	; () banked
  4170  0003BC  2306               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  4171  0003BE  0101               	movlb	1	; () banked
  4172  0003C0  5105               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  4173  0003C2  0101               	movlb	1	; () banked
  4174  0003C4  2500               	addwf	RS485_ManageMessage@DataBuff& (0+255),w,b
  4175  0003C6  6ED9               	movwf	fsr2l,c
  4176  0003C8  0101               	movlb	1	; () banked
  4177  0003CA  5106               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  4178  0003CC  0101               	movlb	1	; () banked
  4179  0003CE  2101               	addwfc	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  4180  0003D0  6EDA               	movwf	fsr2h,c
  4181  0003D2  0101               	movlb	1	; () banked
  4182  0003D4  510A               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  4183  0003D6  0D07               	mullw	7
  4184  0003D8  0E6A               	movlw	low _gsa_Handle_Msg
  4185  0003DA  24F3               	addwf	prodl,w,c
  4186  0003DC  6EE1               	movwf	fsr1l,c
  4187  0003DE  0E00               	movlw	high _gsa_Handle_Msg
  4188  0003E0  20F4               	addwfc	prodh,w,c
  4189  0003E2  6EE2               	movwf	fsr1h,c
  4190  0003E4  CFDF FFE7          	movff	indf2,indf1
  4191                           
  4192                           ; BSR set to: 1
  4193                           ;My_USART.c: 141: gsa_Handle_Msg[from_dress].a_Parameter[3] = DataBuff[date_lenth -5];
  4194  0003E8  0EFB               	movlw	251
  4195  0003EA  0101               	movlb	1	; () banked
  4196  0003EC  6F03               	movwf	??_RS485_ManageMessage& (0+255),b
  4197  0003EE  0EFF               	movlw	255
  4198  0003F0  0101               	movlb	1	; () banked
  4199  0003F2  6F04               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  4200  0003F4  0101               	movlb	1	; () banked
  4201  0003F6  5102               	movf	RS485_ManageMessage@date_lenth& (0+255),w,b
  4202  0003F8  0101               	movlb	1	; () banked
  4203  0003FA  6F05               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  4204  0003FC  6B06               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  4205  0003FE  0101               	movlb	1	; () banked
  4206  000400  5103               	movf	??_RS485_ManageMessage& (0+255),w,b
  4207  000402  0101               	movlb	1	; () banked
  4208  000404  2705               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  4209  000406  0101               	movlb	1	; () banked
  4210  000408  5104               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  4211  00040A  0101               	movlb	1	; () banked
  4212  00040C  2306               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  4213  00040E  0101               	movlb	1	; () banked
  4214  000410  5105               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  4215  000412  0101               	movlb	1	; () banked
  4216  000414  2500               	addwf	RS485_ManageMessage@DataBuff& (0+255),w,b
  4217  000416  6ED9               	movwf	fsr2l,c
  4218  000418  0101               	movlb	1	; () banked
  4219  00041A  5106               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  4220  00041C  0101               	movlb	1	; () banked
  4221  00041E  2101               	addwfc	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  4222  000420  6EDA               	movwf	fsr2h,c
  4223  000422  0101               	movlb	1	; () banked
  4224  000424  510A               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  4225  000426  0D07               	mullw	7
  4226  000428  0E04               	movlw	4
  4227  00042A  26F3               	addwf	prodl,f,c
  4228  00042C  0E00               	movlw	0
  4229  00042E  22F4               	addwfc	prodh,f,c
  4230  000430  0E6A               	movlw	low _gsa_Handle_Msg
  4231  000432  24F3               	addwf	prodl,w,c
  4232  000434  6EE1               	movwf	fsr1l,c
  4233  000436  0E00               	movlw	high _gsa_Handle_Msg
  4234  000438  20F4               	addwfc	prodh,w,c
  4235  00043A  6EE2               	movwf	fsr1h,c
  4236  00043C  CFDF FFE7          	movff	indf2,indf1
  4237                           
  4238                           ; BSR set to: 1
  4239                           ;My_USART.c: 142: gsa_Handle_Msg[from_dress].a_Parameter[2] = DataBuff[date_lenth -6];
  4240  000440  0EFA               	movlw	250
  4241  000442  0101               	movlb	1	; () banked
  4242  000444  6F03               	movwf	??_RS485_ManageMessage& (0+255),b
  4243  000446  0EFF               	movlw	255
  4244  000448  0101               	movlb	1	; () banked
  4245  00044A  6F04               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  4246  00044C  0101               	movlb	1	; () banked
  4247  00044E  5102               	movf	RS485_ManageMessage@date_lenth& (0+255),w,b
  4248  000450  0101               	movlb	1	; () banked
  4249  000452  6F05               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  4250  000454  6B06               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  4251  000456  0101               	movlb	1	; () banked
  4252  000458  5103               	movf	??_RS485_ManageMessage& (0+255),w,b
  4253  00045A  0101               	movlb	1	; () banked
  4254  00045C  2705               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  4255  00045E  0101               	movlb	1	; () banked
  4256  000460  5104               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  4257  000462  0101               	movlb	1	; () banked
  4258  000464  2306               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  4259  000466  0101               	movlb	1	; () banked
  4260  000468  5105               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  4261  00046A  0101               	movlb	1	; () banked
  4262  00046C  2500               	addwf	RS485_ManageMessage@DataBuff& (0+255),w,b
  4263  00046E  6ED9               	movwf	fsr2l,c
  4264  000470  0101               	movlb	1	; () banked
  4265  000472  5106               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  4266  000474  0101               	movlb	1	; () banked
  4267  000476  2101               	addwfc	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  4268  000478  6EDA               	movwf	fsr2h,c
  4269  00047A  0101               	movlb	1	; () banked
  4270  00047C  510A               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  4271  00047E  0D07               	mullw	7
  4272  000480  0E03               	movlw	3
  4273  000482  26F3               	addwf	prodl,f,c
  4274  000484  0E00               	movlw	0
  4275  000486  22F4               	addwfc	prodh,f,c
  4276  000488  0E6A               	movlw	low _gsa_Handle_Msg
  4277  00048A  24F3               	addwf	prodl,w,c
  4278  00048C  6EE1               	movwf	fsr1l,c
  4279  00048E  0E00               	movlw	high _gsa_Handle_Msg
  4280  000490  20F4               	addwfc	prodh,w,c
  4281  000492  6EE2               	movwf	fsr1h,c
  4282  000494  CFDF FFE7          	movff	indf2,indf1
  4283                           
  4284                           ; BSR set to: 1
  4285                           ;My_USART.c: 143: gsa_Handle_Msg[from_dress].a_Parameter[1] = DataBuff[date_lenth -7];
  4286  000498  0EF9               	movlw	249
  4287  00049A  0101               	movlb	1	; () banked
  4288  00049C  6F03               	movwf	??_RS485_ManageMessage& (0+255),b
  4289  00049E  0EFF               	movlw	255
  4290  0004A0  0101               	movlb	1	; () banked
  4291  0004A2  6F04               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  4292  0004A4  0101               	movlb	1	; () banked
  4293  0004A6  5102               	movf	RS485_ManageMessage@date_lenth& (0+255),w,b
  4294  0004A8  0101               	movlb	1	; () banked
  4295  0004AA  6F05               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  4296  0004AC  6B06               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  4297  0004AE  0101               	movlb	1	; () banked
  4298  0004B0  5103               	movf	??_RS485_ManageMessage& (0+255),w,b
  4299  0004B2  0101               	movlb	1	; () banked
  4300  0004B4  2705               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  4301  0004B6  0101               	movlb	1	; () banked
  4302  0004B8  5104               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  4303  0004BA  0101               	movlb	1	; () banked
  4304  0004BC  2306               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  4305  0004BE  0101               	movlb	1	; () banked
  4306  0004C0  5105               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  4307  0004C2  0101               	movlb	1	; () banked
  4308  0004C4  2500               	addwf	RS485_ManageMessage@DataBuff& (0+255),w,b
  4309  0004C6  6ED9               	movwf	fsr2l,c
  4310  0004C8  0101               	movlb	1	; () banked
  4311  0004CA  5106               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  4312  0004CC  0101               	movlb	1	; () banked
  4313  0004CE  2101               	addwfc	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  4314  0004D0  6EDA               	movwf	fsr2h,c
  4315  0004D2  0101               	movlb	1	; () banked
  4316  0004D4  510A               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  4317  0004D6  0D07               	mullw	7
  4318  0004D8  0E02               	movlw	2
  4319  0004DA  26F3               	addwf	prodl,f,c
  4320  0004DC  0E00               	movlw	0
  4321  0004DE  22F4               	addwfc	prodh,f,c
  4322  0004E0  0E6A               	movlw	low _gsa_Handle_Msg
  4323  0004E2  24F3               	addwf	prodl,w,c
  4324  0004E4  6EE1               	movwf	fsr1l,c
  4325  0004E6  0E00               	movlw	high _gsa_Handle_Msg
  4326  0004E8  20F4               	addwfc	prodh,w,c
  4327  0004EA  6EE2               	movwf	fsr1h,c
  4328  0004EC  CFDF FFE7          	movff	indf2,indf1
  4329                           
  4330                           ; BSR set to: 1
  4331                           ;My_USART.c: 144: gsa_Handle_Msg[from_dress].a_Parameter[0] = DataBuff[date_lenth -8];
  4332  0004F0  0EF8               	movlw	248
  4333  0004F2  0101               	movlb	1	; () banked
  4334  0004F4  6F03               	movwf	??_RS485_ManageMessage& (0+255),b
  4335  0004F6  0EFF               	movlw	255
  4336  0004F8  0101               	movlb	1	; () banked
  4337  0004FA  6F04               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  4338  0004FC  0101               	movlb	1	; () banked
  4339  0004FE  5102               	movf	RS485_ManageMessage@date_lenth& (0+255),w,b
  4340  000500  0101               	movlb	1	; () banked
  4341  000502  6F05               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  4342  000504  6B06               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  4343  000506  0101               	movlb	1	; () banked
  4344  000508  5103               	movf	??_RS485_ManageMessage& (0+255),w,b
  4345  00050A  0101               	movlb	1	; () banked
  4346  00050C  2705               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  4347  00050E  0101               	movlb	1	; () banked
  4348  000510  5104               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  4349  000512  0101               	movlb	1	; () banked
  4350  000514  2306               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  4351  000516  0101               	movlb	1	; () banked
  4352  000518  5105               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  4353  00051A  0101               	movlb	1	; () banked
  4354  00051C  2500               	addwf	RS485_ManageMessage@DataBuff& (0+255),w,b
  4355  00051E  6ED9               	movwf	fsr2l,c
  4356  000520  0101               	movlb	1	; () banked
  4357  000522  5106               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  4358  000524  0101               	movlb	1	; () banked
  4359  000526  2101               	addwfc	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  4360  000528  6EDA               	movwf	fsr2h,c
  4361  00052A  0101               	movlb	1	; () banked
  4362  00052C  510A               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  4363  00052E  0D07               	mullw	7
  4364  000530  0E01               	movlw	1
  4365  000532  26F3               	addwf	prodl,f,c
  4366  000534  0E00               	movlw	0
  4367  000536  22F4               	addwfc	prodh,f,c
  4368  000538  0E6A               	movlw	low _gsa_Handle_Msg
  4369  00053A  24F3               	addwf	prodl,w,c
  4370  00053C  6EE1               	movwf	fsr1l,c
  4371  00053E  0E00               	movlw	high _gsa_Handle_Msg
  4372  000540  20F4               	addwfc	prodh,w,c
  4373  000542  6EE2               	movwf	fsr1h,c
  4374  000544  CFDF FFE7          	movff	indf2,indf1
  4375                           
  4376                           ; BSR set to: 1
  4377                           ;My_USART.c: 147: gsa_Handle_Msg[from_dress].hand_info = 1;
  4378  000548  0101               	movlb	1	; () banked
  4379  00054A  510A               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  4380  00054C  0D07               	mullw	7
  4381  00054E  0E06               	movlw	6
  4382  000550  26F3               	addwf	prodl,f,c
  4383  000552  0E00               	movlw	0
  4384  000554  22F4               	addwfc	prodh,f,c
  4385  000556  0E6A               	movlw	low _gsa_Handle_Msg
  4386  000558  24F3               	addwf	prodl,w,c
  4387  00055A  6ED9               	movwf	fsr2l,c
  4388  00055C  0E00               	movlw	high _gsa_Handle_Msg
  4389  00055E  20F4               	addwfc	prodh,w,c
  4390  000560  6EDA               	movwf	fsr2h,c
  4391  000562  0E01               	movlw	1
  4392  000564  6EDF               	movwf	indf2,c
  4393                           
  4394                           ; BSR set to: 1
  4395                           ;My_USART.c: 148: g_RS485_Receive_Flag = 0;
  4396  000566  0E00               	movlw	0
  4397  000568  6E40               	movwf	_g_RS485_Receive_Flag,c
  4398  00056A  0012               	return	
  4399                           
  4400                           ; BSR set to: 1
  4401  00056C  0012               	return		;funcret
  4402  00056E                     __end_of_RS485_ManageMessage:
  4403                           	opt stack 0
  4404                           tblptru	equ	0xFF8
  4405                           tblptrh	equ	0xFF7
  4406                           tblptrl	equ	0xFF6
  4407                           tablat	equ	0xFF5
  4408                           prodh	equ	0xFF4
  4409                           prodl	equ	0xFF3
  4410                           intcon	equ	0xFF2
  4411                           postinc0	equ	0xFEE
  4412                           wreg	equ	0xFE8
  4413                           indf1	equ	0xFE7
  4414                           postdec1	equ	0xFE5
  4415                           fsr1h	equ	0xFE2
  4416                           fsr1l	equ	0xFE1
  4417                           indf2	equ	0xFDF
  4418                           postinc2	equ	0xFDE
  4419                           fsr2h	equ	0xFDA
  4420                           fsr2l	equ	0xFD9
  4421                           status	equ	0xFD8
  4422                           
  4423 ;; *************** function _VerifyCRC *****************
  4424 ;; Defined at:
  4425 ;;		line 163 in file "_01_USER/My_USART.c"
  4426 ;; Parameters:    Size  Location     Type
  4427 ;;  DataBuff        2   37[COMRAM] PTR unsigned char 
  4428 ;;		 -> ga_RS485_ReceiveBuff(10), ga_RS485_SendBuff(10), 
  4429 ;;  date_lenth      1   39[COMRAM] unsigned char 
  4430 ;; Auto vars:     Size  Location     Type
  4431 ;;  CRC_Value       4   45[COMRAM] unsigned long 
  4432 ;;  CRC_Byte        1   49[COMRAM] unsigned char 
  4433 ;; Return value:  Size  Location     Type
  4434 ;;		None               void
  4435 ;; Registers used:
  4436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4437 ;; Tracked objects:
  4438 ;;		On entry : 0/0
  4439 ;;		On exit  : 0/0
  4440 ;;		Unchanged: 0/0
  4441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4442 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4443 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4444 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4445 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4446 ;;Total ram usage:       13 bytes
  4447 ;; Hardware stack levels used:    1
  4448 ;; Hardware stack levels required when called:    4
  4449 ;; This function calls:
  4450 ;;		___lldiv
  4451 ;;		___llmod
  4452 ;; This function is called by:
  4453 ;;		_RS485_SendDate
  4454 ;;		_RS485_ManageMessage
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458                           	psect	text29
  4459  0009E0                     __ptext29:
  4460                           	opt stack 0
  4461  0009E0                     _VerifyCRC:
  4462                           	opt stack 24
  4463                           
  4464                           ;My_USART.c: 165: unsigned long int CRC_Value = 0;
  4465                           
  4466                           ;incstack = 0
  4467  0009E0  0E00               	movlw	0
  4468  0009E2  6E2E               	movwf	VerifyCRC@CRC_Value,c
  4469  0009E4  0E00               	movlw	0
  4470  0009E6  6E2F               	movwf	VerifyCRC@CRC_Value+1,c
  4471  0009E8  0E00               	movlw	0
  4472  0009EA  6E30               	movwf	VerifyCRC@CRC_Value+2,c
  4473  0009EC  0E00               	movlw	0
  4474  0009EE  6E31               	movwf	VerifyCRC@CRC_Value+3,c
  4475                           
  4476                           ;My_USART.c: 166: unsigned char CRC_Byte;
  4477                           ;My_USART.c: 168: for(CRC_Byte = 2; CRC_Byte < date_lenth ;CRC_Byte++)
  4478  0009F0  0E02               	movlw	2
  4479  0009F2  6E32               	movwf	VerifyCRC@CRC_Byte,c
  4480  0009F4  D035               	goto	l3463
  4481  0009F6                     l3459:
  4482                           
  4483                           ;My_USART.c: 169: CRC_Value = ( CRC_Value + DataBuff[CRC_Byte]*CRC_Byte ) % 0xffff;
  4484  0009F6  5032               	movf	VerifyCRC@CRC_Byte,w,c
  4485  0009F8  0D01               	mullw	1
  4486  0009FA  50F3               	movf	prodl,w,c
  4487  0009FC  2426               	addwf	VerifyCRC@DataBuff,w,c
  4488  0009FE  6ED9               	movwf	fsr2l,c
  4489  000A00  50F4               	movf	prodh,w,c
  4490  000A02  2027               	addwfc	VerifyCRC@DataBuff+1,w,c
  4491  000A04  6EDA               	movwf	fsr2h,c
  4492  000A06  50DF               	movf	indf2,w,c
  4493  000A08  6E29               	movwf	??_VerifyCRC& (0+255),c
  4494  000A0A  5029               	movf	??_VerifyCRC,w,c
  4495  000A0C  0232               	mulwf	VerifyCRC@CRC_Byte,c
  4496  000A0E  CFF3 F02A          	movff	prodl,??_VerifyCRC+1
  4497  000A12  CFF4 F02B          	movff	prodh,??_VerifyCRC+2
  4498  000A16  0E00               	movlw	0
  4499  000A18  BE2B               	btfsc	(??_VerifyCRC+2)& (0+255),7,c
  4500  000A1A  0EFF               	movlw	255
  4501  000A1C  6E2C               	movwf	(??_VerifyCRC+3)& (0+255),c
  4502  000A1E  6E2D               	movwf	(??_VerifyCRC+4)& (0+255),c
  4503  000A20  502E               	movf	VerifyCRC@CRC_Value,w,c
  4504  000A22  242A               	addwf	??_VerifyCRC+1,w,c
  4505  000A24  6E19               	movwf	___llmod@dividend,c
  4506  000A26  502F               	movf	VerifyCRC@CRC_Value+1,w,c
  4507  000A28  202B               	addwfc	??_VerifyCRC+2,w,c
  4508  000A2A  6E1A               	movwf	___llmod@dividend+1,c
  4509  000A2C  5030               	movf	VerifyCRC@CRC_Value+2,w,c
  4510  000A2E  202C               	addwfc	??_VerifyCRC+3,w,c
  4511  000A30  6E1B               	movwf	___llmod@dividend+2,c
  4512  000A32  5031               	movf	VerifyCRC@CRC_Value+3,w,c
  4513  000A34  202D               	addwfc	??_VerifyCRC+4,w,c
  4514  000A36  6E1C               	movwf	___llmod@dividend+3,c
  4515  000A38  0EFF               	movlw	255
  4516  000A3A  6E1D               	movwf	___llmod@divisor,c
  4517  000A3C  0EFF               	movlw	255
  4518  000A3E  6E1E               	movwf	___llmod@divisor+1,c
  4519  000A40  0E00               	movlw	0
  4520  000A42  6E1F               	movwf	___llmod@divisor+2,c
  4521  000A44  0E00               	movlw	0
  4522  000A46  6E20               	movwf	___llmod@divisor+3,c
  4523  000A48  EC14  F008         	call	___llmod	;wreg free
  4524  000A4C  C019  F02E         	movff	?___llmod,VerifyCRC@CRC_Value
  4525  000A50  C01A  F02F         	movff	?___llmod+1,VerifyCRC@CRC_Value+1
  4526  000A54  C01B  F030         	movff	?___llmod+2,VerifyCRC@CRC_Value+2
  4527  000A58  C01C  F031         	movff	?___llmod+3,VerifyCRC@CRC_Value+3
  4528  000A5C  2A32               	incf	VerifyCRC@CRC_Byte,f,c
  4529  000A5E  D000               	goto	l3463
  4530  000A60                     l3463:
  4531  000A60  5028               	movf	VerifyCRC@date_lenth,w,c
  4532  000A62  5C32               	subwf	VerifyCRC@CRC_Byte,w,c
  4533  000A64  A0D8               	btfss	status,0,c
  4534  000A66  D7C7               	goto	l3459
  4535                           
  4536                           ;My_USART.c: 171: DataBuff[1] = CRC_Value/0xff;
  4537  000A68  EE20 F001          	lfsr	2,1
  4538  000A6C  5026               	movf	VerifyCRC@DataBuff,w,c
  4539  000A6E  26D9               	addwf	fsr2l,f,c
  4540  000A70  5027               	movf	VerifyCRC@DataBuff+1,w,c
  4541  000A72  22DA               	addwfc	fsr2h,f,c
  4542  000A74  C02E  F019         	movff	VerifyCRC@CRC_Value,___lldiv@dividend
  4543  000A78  C02F  F01A         	movff	VerifyCRC@CRC_Value+1,___lldiv@dividend+1
  4544  000A7C  C030  F01B         	movff	VerifyCRC@CRC_Value+2,___lldiv@dividend+2
  4545  000A80  C031  F01C         	movff	VerifyCRC@CRC_Value+3,___lldiv@dividend+3
  4546  000A84  0EFF               	movlw	255
  4547  000A86  6E1D               	movwf	___lldiv@divisor,c
  4548  000A88  0E00               	movlw	0
  4549  000A8A  6E1E               	movwf	___lldiv@divisor+1,c
  4550  000A8C  0E00               	movlw	0
  4551  000A8E  6E1F               	movwf	___lldiv@divisor+2,c
  4552  000A90  0E00               	movlw	0
  4553  000A92  6E20               	movwf	___lldiv@divisor+3,c
  4554  000A94  EC93  F007         	call	___lldiv	;wreg free
  4555  000A98  5019               	movf	?___lldiv,w,c
  4556  000A9A  6EDF               	movwf	indf2,c
  4557                           
  4558                           ;My_USART.c: 172: DataBuff[0] = CRC_Value%0xff;
  4559  000A9C  C02E  F019         	movff	VerifyCRC@CRC_Value,___llmod@dividend
  4560  000AA0  C02F  F01A         	movff	VerifyCRC@CRC_Value+1,___llmod@dividend+1
  4561  000AA4  C030  F01B         	movff	VerifyCRC@CRC_Value+2,___llmod@dividend+2
  4562  000AA8  C031  F01C         	movff	VerifyCRC@CRC_Value+3,___llmod@dividend+3
  4563  000AAC  0EFF               	movlw	255
  4564  000AAE  6E1D               	movwf	___llmod@divisor,c
  4565  000AB0  0E00               	movlw	0
  4566  000AB2  6E1E               	movwf	___llmod@divisor+1,c
  4567  000AB4  0E00               	movlw	0
  4568  000AB6  6E1F               	movwf	___llmod@divisor+2,c
  4569  000AB8  0E00               	movlw	0
  4570  000ABA  6E20               	movwf	___llmod@divisor+3,c
  4571  000ABC  EC14  F008         	call	___llmod	;wreg free
  4572  000AC0  5019               	movf	?___llmod,w,c
  4573  000AC2  C026  FFD9         	movff	VerifyCRC@DataBuff,fsr2l
  4574  000AC6  C027  FFDA         	movff	VerifyCRC@DataBuff+1,fsr2h
  4575  000ACA  6EDF               	movwf	indf2,c
  4576                           
  4577                           ;My_USART.c: 174: if( DataBuff[1] == 0xff ) DataBuff[1] --;
  4578  000ACC  EE20 F001          	lfsr	2,1
  4579  000AD0  5026               	movf	VerifyCRC@DataBuff,w,c
  4580  000AD2  26D9               	addwf	fsr2l,f,c
  4581  000AD4  5027               	movf	VerifyCRC@DataBuff+1,w,c
  4582  000AD6  22DA               	addwfc	fsr2h,f,c
  4583  000AD8  28DE               	incf	postinc2,w,c
  4584  000ADA  A4D8               	btfss	status,2,c
  4585  000ADC  D007               	goto	l234
  4586  000ADE  EE20 F001          	lfsr	2,1
  4587  000AE2  5026               	movf	VerifyCRC@DataBuff,w,c
  4588  000AE4  26D9               	addwf	fsr2l,f,c
  4589  000AE6  5027               	movf	VerifyCRC@DataBuff+1,w,c
  4590  000AE8  22DA               	addwfc	fsr2h,f,c
  4591  000AEA  06DF               	decf	indf2,f,c
  4592  000AEC                     l234:
  4593                           
  4594                           ;My_USART.c: 175: if( DataBuff[0] == 0xff ) DataBuff[0] --;
  4595  000AEC  C026  FFD9         	movff	VerifyCRC@DataBuff,fsr2l
  4596  000AF0  C027  FFDA         	movff	VerifyCRC@DataBuff+1,fsr2h
  4597  000AF4  28DE               	incf	postinc2,w,c
  4598  000AF6  A4D8               	btfss	status,2,c
  4599  000AF8  0012               	return	
  4600  000AFA  C026  FFD9         	movff	VerifyCRC@DataBuff,fsr2l
  4601  000AFE  C027  FFDA         	movff	VerifyCRC@DataBuff+1,fsr2h
  4602  000B02  06DF               	decf	indf2,f,c
  4603  000B04  0012               	return	
  4604  000B06  0012               	return		;funcret
  4605  000B08                     __end_of_VerifyCRC:
  4606                           	opt stack 0
  4607                           tblptru	equ	0xFF8
  4608                           tblptrh	equ	0xFF7
  4609                           tblptrl	equ	0xFF6
  4610                           tablat	equ	0xFF5
  4611                           prodh	equ	0xFF4
  4612                           prodl	equ	0xFF3
  4613                           intcon	equ	0xFF2
  4614                           postinc0	equ	0xFEE
  4615                           wreg	equ	0xFE8
  4616                           indf1	equ	0xFE7
  4617                           postdec1	equ	0xFE5
  4618                           fsr1h	equ	0xFE2
  4619                           fsr1l	equ	0xFE1
  4620                           indf2	equ	0xFDF
  4621                           postinc2	equ	0xFDE
  4622                           fsr2h	equ	0xFDA
  4623                           fsr2l	equ	0xFD9
  4624                           status	equ	0xFD8
  4625                           
  4626 ;; *************** function ___llmod *****************
  4627 ;; Defined at:
  4628 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;  dividend        4   24[COMRAM] unsigned long 
  4631 ;;  divisor         4   28[COMRAM] unsigned long 
  4632 ;; Auto vars:     Size  Location     Type
  4633 ;;  counter         1   32[COMRAM] unsigned char 
  4634 ;; Return value:  Size  Location     Type
  4635 ;;                  4   24[COMRAM] unsigned long 
  4636 ;; Registers used:
  4637 ;;		wreg, status,2, status,0
  4638 ;; Tracked objects:
  4639 ;;		On entry : 0/0
  4640 ;;		On exit  : 0/0
  4641 ;;		Unchanged: 0/0
  4642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4643 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4644 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4646 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4647 ;;Total ram usage:        9 bytes
  4648 ;; Hardware stack levels used:    1
  4649 ;; Hardware stack levels required when called:    3
  4650 ;; This function calls:
  4651 ;;		Nothing
  4652 ;; This function is called by:
  4653 ;;		_VerifyCRC
  4654 ;; This function uses a non-reentrant model
  4655 ;;
  4656                           
  4657                           	psect	text30
  4658  001028                     __ptext30:
  4659                           	opt stack 0
  4660  001028                     ___llmod:
  4661                           	opt stack 24
  4662                           
  4663                           ;incstack = 0
  4664  001028  501D               	movf	___llmod@divisor,w,c
  4665  00102A  101E               	iorwf	___llmod@divisor+1,w,c
  4666  00102C  101F               	iorwf	___llmod@divisor+2,w,c
  4667  00102E  1020               	iorwf	___llmod@divisor+3,w,c
  4668  001030  B4D8               	btfsc	status,2,c
  4669  001032  D029               	goto	l1119
  4670  001034  0E01               	movlw	1
  4671  001036  6E21               	movwf	___llmod@counter,c
  4672  001038  D007               	goto	l3447
  4673  00103A                     l3445:
  4674  00103A  90D8               	bcf	status,0,c
  4675  00103C  361D               	rlcf	___llmod@divisor,f,c
  4676  00103E  361E               	rlcf	___llmod@divisor+1,f,c
  4677  001040  361F               	rlcf	___llmod@divisor+2,f,c
  4678  001042  3620               	rlcf	___llmod@divisor+3,f,c
  4679  001044  2A21               	incf	___llmod@counter,f,c
  4680  001046  D000               	goto	l3447
  4681  001048                     l3447:
  4682  001048  BE20               	btfsc	___llmod@divisor+3,7,c
  4683  00104A  D002               	goto	l3449
  4684  00104C  D7F6               	goto	l3445
  4685  00104E  D000               	goto	l3449
  4686  001050                     l3449:
  4687  001050  501D               	movf	___llmod@divisor,w,c
  4688  001052  5C19               	subwf	___llmod@dividend,w,c
  4689  001054  501E               	movf	___llmod@divisor+1,w,c
  4690  001056  581A               	subwfb	___llmod@dividend+1,w,c
  4691  001058  501F               	movf	___llmod@divisor+2,w,c
  4692  00105A  581B               	subwfb	___llmod@dividend+2,w,c
  4693  00105C  5020               	movf	___llmod@divisor+3,w,c
  4694  00105E  581C               	subwfb	___llmod@dividend+3,w,c
  4695  001060  A0D8               	btfss	status,0,c
  4696  001062  D009               	goto	l3453
  4697  001064  501D               	movf	___llmod@divisor,w,c
  4698  001066  5E19               	subwf	___llmod@dividend,f,c
  4699  001068  501E               	movf	___llmod@divisor+1,w,c
  4700  00106A  5A1A               	subwfb	___llmod@dividend+1,f,c
  4701  00106C  501F               	movf	___llmod@divisor+2,w,c
  4702  00106E  5A1B               	subwfb	___llmod@dividend+2,f,c
  4703  001070  5020               	movf	___llmod@divisor+3,w,c
  4704  001072  5A1C               	subwfb	___llmod@dividend+3,f,c
  4705  001074  D000               	goto	l3453
  4706  001076                     l3453:
  4707  001076  90D8               	bcf	status,0,c
  4708  001078  3220               	rrcf	___llmod@divisor+3,f,c
  4709  00107A  321F               	rrcf	___llmod@divisor+2,f,c
  4710  00107C  321E               	rrcf	___llmod@divisor+1,f,c
  4711  00107E  321D               	rrcf	___llmod@divisor,f,c
  4712  001080  2E21               	decfsz	___llmod@counter,f,c
  4713  001082  D7E6               	goto	l3449
  4714  001084  D000               	goto	l1119
  4715  001086                     l1119:
  4716  001086  C019  F019         	movff	___llmod@dividend,?___llmod
  4717  00108A  C01A  F01A         	movff	___llmod@dividend+1,?___llmod+1
  4718  00108E  C01B  F01B         	movff	___llmod@dividend+2,?___llmod+2
  4719  001092  C01C  F01C         	movff	___llmod@dividend+3,?___llmod+3
  4720  001096  0012               	return		;funcret
  4721  001098                     __end_of___llmod:
  4722                           	opt stack 0
  4723                           tblptru	equ	0xFF8
  4724                           tblptrh	equ	0xFF7
  4725                           tblptrl	equ	0xFF6
  4726                           tablat	equ	0xFF5
  4727                           prodh	equ	0xFF4
  4728                           prodl	equ	0xFF3
  4729                           intcon	equ	0xFF2
  4730                           postinc0	equ	0xFEE
  4731                           wreg	equ	0xFE8
  4732                           indf1	equ	0xFE7
  4733                           postdec1	equ	0xFE5
  4734                           fsr1h	equ	0xFE2
  4735                           fsr1l	equ	0xFE1
  4736                           indf2	equ	0xFDF
  4737                           postinc2	equ	0xFDE
  4738                           fsr2h	equ	0xFDA
  4739                           fsr2l	equ	0xFD9
  4740                           status	equ	0xFD8
  4741                           
  4742 ;; *************** function ___lldiv *****************
  4743 ;; Defined at:
  4744 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  4745 ;; Parameters:    Size  Location     Type
  4746 ;;  dividend        4   24[COMRAM] unsigned long 
  4747 ;;  divisor         4   28[COMRAM] unsigned long 
  4748 ;; Auto vars:     Size  Location     Type
  4749 ;;  quotient        4   32[COMRAM] unsigned long 
  4750 ;;  counter         1   36[COMRAM] unsigned char 
  4751 ;; Return value:  Size  Location     Type
  4752 ;;                  4   24[COMRAM] unsigned long 
  4753 ;; Registers used:
  4754 ;;		wreg, status,2, status,0
  4755 ;; Tracked objects:
  4756 ;;		On entry : 0/0
  4757 ;;		On exit  : 0/0
  4758 ;;		Unchanged: 0/0
  4759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4760 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4761 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4763 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4764 ;;Total ram usage:       13 bytes
  4765 ;; Hardware stack levels used:    1
  4766 ;; Hardware stack levels required when called:    3
  4767 ;; This function calls:
  4768 ;;		Nothing
  4769 ;; This function is called by:
  4770 ;;		_VerifyCRC
  4771 ;; This function uses a non-reentrant model
  4772 ;;
  4773                           
  4774                           	psect	text31
  4775  000F26                     __ptext31:
  4776                           	opt stack 0
  4777  000F26                     ___lldiv:
  4778                           	opt stack 24
  4779                           
  4780                           ;incstack = 0
  4781  000F26  0E00               	movlw	0
  4782  000F28  6E21               	movwf	___lldiv@quotient,c
  4783  000F2A  0E00               	movlw	0
  4784  000F2C  6E22               	movwf	___lldiv@quotient+1,c
  4785  000F2E  0E00               	movlw	0
  4786  000F30  6E23               	movwf	___lldiv@quotient+2,c
  4787  000F32  0E00               	movlw	0
  4788  000F34  6E24               	movwf	___lldiv@quotient+3,c
  4789  000F36  501D               	movf	___lldiv@divisor,w,c
  4790  000F38  101E               	iorwf	___lldiv@divisor+1,w,c
  4791  000F3A  101F               	iorwf	___lldiv@divisor+2,w,c
  4792  000F3C  1020               	iorwf	___lldiv@divisor+3,w,c
  4793  000F3E  B4D8               	btfsc	status,2,c
  4794  000F40  D02F               	goto	l1109
  4795  000F42  0E01               	movlw	1
  4796  000F44  6E25               	movwf	___lldiv@counter,c
  4797  000F46  D007               	goto	l3427
  4798  000F48                     l3425:
  4799  000F48  90D8               	bcf	status,0,c
  4800  000F4A  361D               	rlcf	___lldiv@divisor,f,c
  4801  000F4C  361E               	rlcf	___lldiv@divisor+1,f,c
  4802  000F4E  361F               	rlcf	___lldiv@divisor+2,f,c
  4803  000F50  3620               	rlcf	___lldiv@divisor+3,f,c
  4804  000F52  2A25               	incf	___lldiv@counter,f,c
  4805  000F54  D000               	goto	l3427
  4806  000F56                     l3427:
  4807  000F56  BE20               	btfsc	___lldiv@divisor+3,7,c
  4808  000F58  D002               	goto	l3429
  4809  000F5A  D7F6               	goto	l3425
  4810  000F5C  D000               	goto	l3429
  4811  000F5E                     l3429:
  4812  000F5E  90D8               	bcf	status,0,c
  4813  000F60  3621               	rlcf	___lldiv@quotient,f,c
  4814  000F62  3622               	rlcf	___lldiv@quotient+1,f,c
  4815  000F64  3623               	rlcf	___lldiv@quotient+2,f,c
  4816  000F66  3624               	rlcf	___lldiv@quotient+3,f,c
  4817  000F68  501D               	movf	___lldiv@divisor,w,c
  4818  000F6A  5C19               	subwf	___lldiv@dividend,w,c
  4819  000F6C  501E               	movf	___lldiv@divisor+1,w,c
  4820  000F6E  581A               	subwfb	___lldiv@dividend+1,w,c
  4821  000F70  501F               	movf	___lldiv@divisor+2,w,c
  4822  000F72  581B               	subwfb	___lldiv@dividend+2,w,c
  4823  000F74  5020               	movf	___lldiv@divisor+3,w,c
  4824  000F76  581C               	subwfb	___lldiv@dividend+3,w,c
  4825  000F78  A0D8               	btfss	status,0,c
  4826  000F7A  D00A               	goto	l3437
  4827  000F7C  501D               	movf	___lldiv@divisor,w,c
  4828  000F7E  5E19               	subwf	___lldiv@dividend,f,c
  4829  000F80  501E               	movf	___lldiv@divisor+1,w,c
  4830  000F82  5A1A               	subwfb	___lldiv@dividend+1,f,c
  4831  000F84  501F               	movf	___lldiv@divisor+2,w,c
  4832  000F86  5A1B               	subwfb	___lldiv@dividend+2,f,c
  4833  000F88  5020               	movf	___lldiv@divisor+3,w,c
  4834  000F8A  5A1C               	subwfb	___lldiv@dividend+3,f,c
  4835  000F8C  8021               	bsf	___lldiv@quotient,0,c
  4836  000F8E  D000               	goto	l3437
  4837  000F90                     l3437:
  4838  000F90  90D8               	bcf	status,0,c
  4839  000F92  3220               	rrcf	___lldiv@divisor+3,f,c
  4840  000F94  321F               	rrcf	___lldiv@divisor+2,f,c
  4841  000F96  321E               	rrcf	___lldiv@divisor+1,f,c
  4842  000F98  321D               	rrcf	___lldiv@divisor,f,c
  4843  000F9A  2E25               	decfsz	___lldiv@counter,f,c
  4844  000F9C  D7E0               	goto	l3429
  4845  000F9E  D000               	goto	l1109
  4846  000FA0                     l1109:
  4847  000FA0  C021  F019         	movff	___lldiv@quotient,?___lldiv
  4848  000FA4  C022  F01A         	movff	___lldiv@quotient+1,?___lldiv+1
  4849  000FA8  C023  F01B         	movff	___lldiv@quotient+2,?___lldiv+2
  4850  000FAC  C024  F01C         	movff	___lldiv@quotient+3,?___lldiv+3
  4851  000FB0  0012               	return		;funcret
  4852  000FB2                     __end_of___lldiv:
  4853                           	opt stack 0
  4854                           tblptru	equ	0xFF8
  4855                           tblptrh	equ	0xFF7
  4856                           tblptrl	equ	0xFF6
  4857                           tablat	equ	0xFF5
  4858                           prodh	equ	0xFF4
  4859                           prodl	equ	0xFF3
  4860                           intcon	equ	0xFF2
  4861                           postinc0	equ	0xFEE
  4862                           wreg	equ	0xFE8
  4863                           indf1	equ	0xFE7
  4864                           postdec1	equ	0xFE5
  4865                           fsr1h	equ	0xFE2
  4866                           fsr1l	equ	0xFE1
  4867                           indf2	equ	0xFDF
  4868                           postinc2	equ	0xFDE
  4869                           fsr2h	equ	0xFDA
  4870                           fsr2l	equ	0xFD9
  4871                           status	equ	0xFD8
  4872                           
  4873 ;; *************** function _Key_ManageMessage *****************
  4874 ;; Defined at:
  4875 ;;		line 182 in file "_01_USER/Key.c"
  4876 ;; Parameters:    Size  Location     Type
  4877 ;;		None
  4878 ;; Auto vars:     Size  Location     Type
  4879 ;;		None
  4880 ;; Return value:  Size  Location     Type
  4881 ;;		None               void
  4882 ;; Registers used:
  4883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4884 ;; Tracked objects:
  4885 ;;		On entry : 0/0
  4886 ;;		On exit  : 0/0
  4887 ;;		Unchanged: 0/0
  4888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4891 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4892 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4893 ;;Total ram usage:        4 bytes
  4894 ;; Hardware stack levels used:    1
  4895 ;; Hardware stack levels required when called:    4
  4896 ;; This function calls:
  4897 ;;		_Key_ReadFSM
  4898 ;;		_Key_ResetFSM
  4899 ;;		___lbmod
  4900 ;; This function is called by:
  4901 ;;		_ManageMessage
  4902 ;; This function uses a non-reentrant model
  4903 ;;
  4904                           
  4905                           	psect	text32
  4906  000710                     __ptext32:
  4907                           	opt stack 0
  4908  000710                     _Key_ManageMessage:
  4909                           	opt stack 25
  4910                           
  4911                           ;Key.c: 184: Key_ReadFSM();
  4912                           
  4913                           ;incstack = 0
  4914  000710  ECB7  F002         	call	_Key_ReadFSM	;wreg free
  4915                           
  4916                           ;Key.c: 186: if ( gs_Local_Key_User.key_group == ((0x01<<3)|(0x01<<4)) && gs_Local_Key_U
      +                          ser.key_group_state == KEY_short )
  4917  000714  0E18               	movlw	24
  4918  000716  0100               	movlb	0	; () banked
  4919  000718  19B1               	xorwf	(_gs_Local_Key_User+1)& (0+255),w,b	;volatile
  4920  00071A  A4D8               	btfss	status,2,c
  4921  00071C  D021               	goto	l2713
  4922                           
  4923                           ; BSR set to: 0
  4924  00071E  0100               	movlb	0	; () banked
  4925  000720  05B2               	decf	(_gs_Local_Key_User+2)& (0+255),w,b	;volatile
  4926  000722  A4D8               	btfss	status,2,c
  4927  000724  D01D               	goto	l2713
  4928                           
  4929                           ; BSR set to: 0
  4930                           ;Key.c: 187: {
  4931                           ;Key.c: 188: if(g_RS485_Byte >=1 && g_RS485_Byte <=3)
  4932  000726  503F               	movf	_g_RS485_Byte,w,c
  4933  000728  B4D8               	btfsc	status,2,c
  4934  00072A  D017               	goto	l2711
  4935                           
  4936                           ; BSR set to: 0
  4937  00072C  0E04               	movlw	4
  4938  00072E  603F               	cpfslt	_g_RS485_Byte,c
  4939  000730  D014               	goto	l2711
  4940                           
  4941                           ; BSR set to: 0
  4942                           ;Key.c: 189: gs_Handle_Switch.Relay[g_RS485_Byte - 1] = 1;
  4943  000732  0EFF               	movlw	255
  4944  000734  6E1F               	movwf	??_Key_ManageMessage& (0+255),c
  4945  000736  0EFF               	movlw	255
  4946  000738  6E20               	movwf	(??_Key_ManageMessage+1)& (0+255),c
  4947  00073A  503F               	movf	_g_RS485_Byte,w,c
  4948  00073C  6E21               	movwf	(??_Key_ManageMessage+2)& (0+255),c
  4949  00073E  6A22               	clrf	(??_Key_ManageMessage+3)& (0+255),c
  4950  000740  501F               	movf	??_Key_ManageMessage,w,c
  4951  000742  2621               	addwf	??_Key_ManageMessage+2,f,c
  4952  000744  5020               	movf	??_Key_ManageMessage+1,w,c
  4953  000746  2222               	addwfc	??_Key_ManageMessage+3,f,c
  4954  000748  0E45               	movlw	low (_gs_Handle_Switch+4)
  4955  00074A  2421               	addwf	??_Key_ManageMessage+2,w,c
  4956  00074C  6ED9               	movwf	fsr2l,c
  4957  00074E  0E00               	movlw	high (_gs_Handle_Switch+4)
  4958  000750  2022               	addwfc	??_Key_ManageMessage+3,w,c
  4959  000752  6EDA               	movwf	fsr2h,c
  4960  000754  0E01               	movlw	1
  4961  000756  6EDF               	movwf	indf2,c
  4962  000758  D000               	goto	l2711
  4963  00075A                     l2711:
  4964                           
  4965                           ; BSR set to: 0
  4966                           ;Key.c: 190: Key_ResetFSM();
  4967  00075A  ECF3  F009         	call	_Key_ResetFSM	;wreg free
  4968  00075E  D000               	goto	l2713
  4969  000760                     l2713:
  4970                           
  4971                           ;Key.c: 191: }
  4972                           ;Key.c: 193: if ( gs_Local_Key_User.key_group == ((0x01<<4)|(0x01<<5)) && gs_Local_Key_U
      +                          ser.key_group_state == KEY_short )
  4973  000760  0E30               	movlw	48
  4974  000762  0100               	movlb	0	; () banked
  4975  000764  19B1               	xorwf	(_gs_Local_Key_User+1)& (0+255),w,b	;volatile
  4976  000766  A4D8               	btfss	status,2,c
  4977  000768  D021               	goto	l2725
  4978                           
  4979                           ; BSR set to: 0
  4980  00076A  0100               	movlb	0	; () banked
  4981  00076C  05B2               	decf	(_gs_Local_Key_User+2)& (0+255),w,b	;volatile
  4982  00076E  A4D8               	btfss	status,2,c
  4983  000770  D01D               	goto	l2725
  4984                           
  4985                           ; BSR set to: 0
  4986                           ;Key.c: 194: {
  4987                           ;Key.c: 195: if(g_RS485_Byte >=1 && g_RS485_Byte <=3)
  4988  000772  503F               	movf	_g_RS485_Byte,w,c
  4989  000774  B4D8               	btfsc	status,2,c
  4990  000776  D017               	goto	l2723
  4991                           
  4992                           ; BSR set to: 0
  4993  000778  0E04               	movlw	4
  4994  00077A  603F               	cpfslt	_g_RS485_Byte,c
  4995  00077C  D014               	goto	l2723
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;Key.c: 196: gs_Handle_Switch.Relay[g_RS485_Byte - 1] = 0;
  4999  00077E  0EFF               	movlw	255
  5000  000780  6E1F               	movwf	??_Key_ManageMessage& (0+255),c
  5001  000782  0EFF               	movlw	255
  5002  000784  6E20               	movwf	(??_Key_ManageMessage+1)& (0+255),c
  5003  000786  503F               	movf	_g_RS485_Byte,w,c
  5004  000788  6E21               	movwf	(??_Key_ManageMessage+2)& (0+255),c
  5005  00078A  6A22               	clrf	(??_Key_ManageMessage+3)& (0+255),c
  5006  00078C  501F               	movf	??_Key_ManageMessage,w,c
  5007  00078E  2621               	addwf	??_Key_ManageMessage+2,f,c
  5008  000790  5020               	movf	??_Key_ManageMessage+1,w,c
  5009  000792  2222               	addwfc	??_Key_ManageMessage+3,f,c
  5010  000794  0E45               	movlw	low (_gs_Handle_Switch+4)
  5011  000796  2421               	addwf	??_Key_ManageMessage+2,w,c
  5012  000798  6ED9               	movwf	fsr2l,c
  5013  00079A  0E00               	movlw	high (_gs_Handle_Switch+4)
  5014  00079C  2022               	addwfc	??_Key_ManageMessage+3,w,c
  5015  00079E  6EDA               	movwf	fsr2h,c
  5016  0007A0  0E00               	movlw	0
  5017  0007A2  6EDF               	movwf	indf2,c
  5018  0007A4  D000               	goto	l2723
  5019  0007A6                     l2723:
  5020                           
  5021                           ; BSR set to: 0
  5022                           ;Key.c: 197: Key_ResetFSM();
  5023  0007A6  ECF3  F009         	call	_Key_ResetFSM	;wreg free
  5024  0007AA  D000               	goto	l2725
  5025  0007AC                     l2725:
  5026                           
  5027                           ;Key.c: 198: }
  5028                           ;Key.c: 201: if (gs_Local_Key_User.a_key_state[1-1] == KEY_short) g_RS485_Byte ++ ;
  5029  0007AC  0100               	movlb	0	; () banked
  5030  0007AE  05BF               	decf	(_gs_Local_Key_User+15)& (0+255),w,b	;volatile
  5031  0007B0  A4D8               	btfss	status,2,c
  5032  0007B2  D002               	goto	l2729
  5033                           
  5034                           ; BSR set to: 0
  5035  0007B4  2A3F               	incf	_g_RS485_Byte,f,c
  5036  0007B6  D000               	goto	l2729
  5037  0007B8                     l2729:
  5038                           
  5039                           ; BSR set to: 0
  5040                           ;Key.c: 202: if (gs_Local_Key_User.a_key_state[1-1] == KEY_hold) g_RS485_Byte ++ ;
  5041  0007B8  0E03               	movlw	3
  5042  0007BA  0100               	movlb	0	; () banked
  5043  0007BC  19BF               	xorwf	(_gs_Local_Key_User+15)& (0+255),w,b	;volatile
  5044  0007BE  A4D8               	btfss	status,2,c
  5045  0007C0  D002               	goto	l2733
  5046                           
  5047                           ; BSR set to: 0
  5048  0007C2  2A3F               	incf	_g_RS485_Byte,f,c
  5049  0007C4  D000               	goto	l2733
  5050  0007C6                     l2733:
  5051                           
  5052                           ; BSR set to: 0
  5053                           ;Key.c: 205: if (gs_Local_Key_User.a_key_state[2-1] == KEY_short) gs_Handle_Switch.Show_
      +                          Send_Receive = ~gs_Handle_Switch.Show_Send_Receive;
  5054  0007C6  0100               	movlb	0	; () banked
  5055  0007C8  05C0               	decf	(_gs_Local_Key_User+16)& (0+255),w,b	;volatile
  5056  0007CA  A4D8               	btfss	status,2,c
  5057  0007CC  D003               	goto	l160
  5058                           
  5059                           ; BSR set to: 0
  5060  0007CE  5044               	movf	_gs_Handle_Switch+3,w,c
  5061  0007D0  0AFF               	xorlw	255
  5062  0007D2  6E44               	movwf	_gs_Handle_Switch+3,c
  5063  0007D4                     l160:
  5064                           
  5065                           ; BSR set to: 0
  5066                           ;Key.c: 208: if (gs_Local_Key_User.a_key_state[3-1] == KEY_short) g_RS485_Byte -- ;
  5067  0007D4  0100               	movlb	0	; () banked
  5068  0007D6  05C1               	decf	(_gs_Local_Key_User+17)& (0+255),w,b	;volatile
  5069  0007D8  A4D8               	btfss	status,2,c
  5070  0007DA  D002               	goto	l2739
  5071                           
  5072                           ; BSR set to: 0
  5073  0007DC  063F               	decf	_g_RS485_Byte,f,c
  5074  0007DE  D000               	goto	l2739
  5075  0007E0                     l2739:
  5076                           
  5077                           ; BSR set to: 0
  5078                           ;Key.c: 209: if (gs_Local_Key_User.a_key_state[3-1] == KEY_hold) g_RS485_Byte -- ;
  5079  0007E0  0E03               	movlw	3
  5080  0007E2  0100               	movlb	0	; () banked
  5081  0007E4  19C1               	xorwf	(_gs_Local_Key_User+17)& (0+255),w,b	;volatile
  5082  0007E6  A4D8               	btfss	status,2,c
  5083  0007E8  D002               	goto	l2743
  5084                           
  5085                           ; BSR set to: 0
  5086  0007EA  063F               	decf	_g_RS485_Byte,f,c
  5087  0007EC  D000               	goto	l2743
  5088  0007EE                     l2743:
  5089                           
  5090                           ; BSR set to: 0
  5091                           ;Key.c: 212: if (gs_Local_Key_User.a_key_state[4-1] == KEY_short) ga_RS485_SendBuff[g_RS
      +                          485_Byte] ++ ;
  5092  0007EE  0100               	movlb	0	; () banked
  5093  0007F0  05C2               	decf	(_gs_Local_Key_User+18)& (0+255),w,b	;volatile
  5094  0007F2  A4D8               	btfss	status,2,c
  5095  0007F4  D00A               	goto	l2747
  5096                           
  5097                           ; BSR set to: 0
  5098  0007F6  503F               	movf	_g_RS485_Byte,w,c
  5099  0007F8  0D01               	mullw	1
  5100  0007FA  0EE4               	movlw	low _ga_RS485_SendBuff
  5101  0007FC  24F3               	addwf	prodl,w,c
  5102  0007FE  6ED9               	movwf	fsr2l,c
  5103  000800  0E00               	movlw	high _ga_RS485_SendBuff
  5104  000802  20F4               	addwfc	prodh,w,c
  5105  000804  6EDA               	movwf	fsr2h,c
  5106  000806  2ADF               	incf	indf2,f,c
  5107  000808  D000               	goto	l2747
  5108  00080A                     l2747:
  5109                           
  5110                           ; BSR set to: 0
  5111                           ;Key.c: 213: if (gs_Local_Key_User.a_key_state[4-1] == KEY_hold) ga_RS485_SendBuff[g_RS4
      +                          85_Byte] ++ ;
  5112  00080A  0E03               	movlw	3
  5113  00080C  0100               	movlb	0	; () banked
  5114  00080E  19C2               	xorwf	(_gs_Local_Key_User+18)& (0+255),w,b	;volatile
  5115  000810  A4D8               	btfss	status,2,c
  5116  000812  D00A               	goto	l2751
  5117                           
  5118                           ; BSR set to: 0
  5119  000814  503F               	movf	_g_RS485_Byte,w,c
  5120  000816  0D01               	mullw	1
  5121  000818  0EE4               	movlw	low _ga_RS485_SendBuff
  5122  00081A  24F3               	addwf	prodl,w,c
  5123  00081C  6ED9               	movwf	fsr2l,c
  5124  00081E  0E00               	movlw	high _ga_RS485_SendBuff
  5125  000820  20F4               	addwfc	prodh,w,c
  5126  000822  6EDA               	movwf	fsr2h,c
  5127  000824  2ADF               	incf	indf2,f,c
  5128  000826  D000               	goto	l2751
  5129  000828                     l2751:
  5130                           
  5131                           ; BSR set to: 0
  5132                           ;Key.c: 216: if (gs_Local_Key_User.a_key_state[5-1] == KEY_short)
  5133  000828  0100               	movlb	0	; () banked
  5134  00082A  05C3               	decf	(_gs_Local_Key_User+19)& (0+255),w,b	;volatile
  5135  00082C  A4D8               	btfss	status,2,c
  5136  00082E  D003               	goto	l2755
  5137                           
  5138                           ; BSR set to: 0
  5139                           ;Key.c: 217: gs_Handle_Switch.Usart_OneDate = 1;
  5140  000830  0E01               	movlw	1
  5141  000832  6E43               	movwf	_gs_Handle_Switch+2,c
  5142  000834  D000               	goto	l2755
  5143  000836                     l2755:
  5144                           
  5145                           ; BSR set to: 0
  5146                           ;Key.c: 220: if (gs_Local_Key_User.a_key_state[6-1] == KEY_short) ga_RS485_SendBuff[g_RS
      +                          485_Byte] -- ;
  5147  000836  0100               	movlb	0	; () banked
  5148  000838  05C4               	decf	(_gs_Local_Key_User+20)& (0+255),w,b	;volatile
  5149  00083A  A4D8               	btfss	status,2,c
  5150  00083C  D00A               	goto	l2759
  5151                           
  5152                           ; BSR set to: 0
  5153  00083E  503F               	movf	_g_RS485_Byte,w,c
  5154  000840  0D01               	mullw	1
  5155  000842  0EE4               	movlw	low _ga_RS485_SendBuff
  5156  000844  24F3               	addwf	prodl,w,c
  5157  000846  6ED9               	movwf	fsr2l,c
  5158  000848  0E00               	movlw	high _ga_RS485_SendBuff
  5159  00084A  20F4               	addwfc	prodh,w,c
  5160  00084C  6EDA               	movwf	fsr2h,c
  5161  00084E  06DF               	decf	indf2,f,c
  5162  000850  D000               	goto	l2759
  5163  000852                     l2759:
  5164                           
  5165                           ; BSR set to: 0
  5166                           ;Key.c: 221: if (gs_Local_Key_User.a_key_state[6-1] == KEY_hold) ga_RS485_SendBuff[g_RS4
      +                          85_Byte] -- ;
  5167  000852  0E03               	movlw	3
  5168  000854  0100               	movlb	0	; () banked
  5169  000856  19C4               	xorwf	(_gs_Local_Key_User+20)& (0+255),w,b	;volatile
  5170  000858  A4D8               	btfss	status,2,c
  5171  00085A  D00A               	goto	l2763
  5172                           
  5173                           ; BSR set to: 0
  5174  00085C  503F               	movf	_g_RS485_Byte,w,c
  5175  00085E  0D01               	mullw	1
  5176  000860  0EE4               	movlw	low _ga_RS485_SendBuff
  5177  000862  24F3               	addwf	prodl,w,c
  5178  000864  6ED9               	movwf	fsr2l,c
  5179  000866  0E00               	movlw	high _ga_RS485_SendBuff
  5180  000868  20F4               	addwfc	prodh,w,c
  5181  00086A  6EDA               	movwf	fsr2h,c
  5182  00086C  06DF               	decf	indf2,f,c
  5183  00086E  D000               	goto	l2763
  5184  000870                     l2763:
  5185                           
  5186                           ; BSR set to: 0
  5187                           ;Key.c: 225: if( g_RS485_Byte > 250 ) g_RS485_Byte = 10 - 1;
  5188  000870  0EFA               	movlw	250
  5189  000872  643F               	cpfsgt	_g_RS485_Byte,c
  5190  000874  D002               	goto	l2767
  5191                           
  5192                           ; BSR set to: 0
  5193  000876  0E09               	movlw	9
  5194  000878  D005               	goto	L6
  5195  00087A                     l2767:
  5196                           
  5197                           ; BSR set to: 0
  5198                           ;Key.c: 226: else g_RS485_Byte %= 10;
  5199  00087A  0E0A               	movlw	10
  5200  00087C  6E19               	movwf	___lbmod@divisor,c
  5201  00087E  503F               	movf	_g_RS485_Byte,w,c
  5202  000880  EC0E  F00B         	call	___lbmod
  5203  000884                     L6:
  5204  000884  6E3F               	movwf	_g_RS485_Byte,c
  5205  000886  D000               	goto	l2769
  5206  000888                     l2769:
  5207                           
  5208                           ;Key.c: 229: Key_ResetFSM();
  5209  000888  ECF3  F009         	call	_Key_ResetFSM	;wreg free
  5210  00088C  0012               	return		;funcret
  5211  00088E                     __end_of_Key_ManageMessage:
  5212                           	opt stack 0
  5213                           tblptru	equ	0xFF8
  5214                           tblptrh	equ	0xFF7
  5215                           tblptrl	equ	0xFF6
  5216                           tablat	equ	0xFF5
  5217                           prodh	equ	0xFF4
  5218                           prodl	equ	0xFF3
  5219                           intcon	equ	0xFF2
  5220                           postinc0	equ	0xFEE
  5221                           wreg	equ	0xFE8
  5222                           indf1	equ	0xFE7
  5223                           postdec1	equ	0xFE5
  5224                           fsr1h	equ	0xFE2
  5225                           fsr1l	equ	0xFE1
  5226                           indf2	equ	0xFDF
  5227                           postinc2	equ	0xFDE
  5228                           fsr2h	equ	0xFDA
  5229                           fsr2l	equ	0xFD9
  5230                           status	equ	0xFD8
  5231                           
  5232 ;; *************** function ___lbmod *****************
  5233 ;; Defined at:
  5234 ;;		line 4 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbmod.c"
  5235 ;; Parameters:    Size  Location     Type
  5236 ;;  dividend        1    wreg     unsigned char 
  5237 ;;  divisor         1   24[COMRAM] unsigned char 
  5238 ;; Auto vars:     Size  Location     Type
  5239 ;;  dividend        1   25[COMRAM] unsigned char 
  5240 ;;  rem             1   27[COMRAM] unsigned char 
  5241 ;;  counter         1   26[COMRAM] unsigned char 
  5242 ;; Return value:  Size  Location     Type
  5243 ;;                  1    wreg      unsigned char 
  5244 ;; Registers used:
  5245 ;;		wreg, status,2, status,0
  5246 ;; Tracked objects:
  5247 ;;		On entry : 0/0
  5248 ;;		On exit  : 0/0
  5249 ;;		Unchanged: 0/0
  5250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5251 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5252 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5254 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5255 ;;Total ram usage:        4 bytes
  5256 ;; Hardware stack levels used:    1
  5257 ;; Hardware stack levels required when called:    3
  5258 ;; This function calls:
  5259 ;;		Nothing
  5260 ;; This function is called by:
  5261 ;;		_Key_ManageMessage
  5262 ;; This function uses a non-reentrant model
  5263 ;;
  5264                           
  5265                           	psect	text33
  5266  00161C                     __ptext33:
  5267                           	opt stack 0
  5268  00161C                     ___lbmod:
  5269                           	opt stack 25
  5270                           
  5271                           ;incstack = 0
  5272                           ;___lbmod@dividend stored from wreg
  5273  00161C  6E1A               	movwf	___lbmod@dividend,c
  5274  00161E  0E08               	movlw	8
  5275  001620  6E1B               	movwf	___lbmod@counter,c
  5276  001622  0E00               	movlw	0
  5277  001624  6E1C               	movwf	___lbmod@rem,c
  5278  001626  D000               	goto	l2617
  5279  001628                     l2617:
  5280  001628  90D8               	bcf	status,0,c
  5281  00162A  341A               	rlcf	___lbmod@dividend,w,c
  5282  00162C  341C               	rlcf	___lbmod@rem,w,c
  5283  00162E  6E1C               	movwf	___lbmod@rem,c
  5284  001630  90D8               	bcf	status,0,c
  5285  001632  361A               	rlcf	___lbmod@dividend,f,c
  5286  001634  5019               	movf	___lbmod@divisor,w,c
  5287  001636  5C1C               	subwf	___lbmod@rem,w,c
  5288  001638  A0D8               	btfss	status,0,c
  5289  00163A  D003               	goto	l2625
  5290  00163C  5019               	movf	___lbmod@divisor,w,c
  5291  00163E  5E1C               	subwf	___lbmod@rem,f,c
  5292  001640  D000               	goto	l2625
  5293  001642                     l2625:
  5294  001642  2E1B               	decfsz	___lbmod@counter,f,c
  5295  001644  D7F1               	goto	l2617
  5296  001646  D000               	goto	l2627
  5297  001648                     l2627:
  5298  001648  501C               	movf	___lbmod@rem,w,c
  5299  00164A  0012               	return	
  5300  00164C  0012               	return		;funcret
  5301  00164E                     __end_of___lbmod:
  5302                           	opt stack 0
  5303                           tblptru	equ	0xFF8
  5304                           tblptrh	equ	0xFF7
  5305                           tblptrl	equ	0xFF6
  5306                           tablat	equ	0xFF5
  5307                           prodh	equ	0xFF4
  5308                           prodl	equ	0xFF3
  5309                           intcon	equ	0xFF2
  5310                           postinc0	equ	0xFEE
  5311                           wreg	equ	0xFE8
  5312                           indf1	equ	0xFE7
  5313                           postdec1	equ	0xFE5
  5314                           fsr1h	equ	0xFE2
  5315                           fsr1l	equ	0xFE1
  5316                           indf2	equ	0xFDF
  5317                           postinc2	equ	0xFDE
  5318                           fsr2h	equ	0xFDA
  5319                           fsr2l	equ	0xFD9
  5320                           status	equ	0xFD8
  5321                           
  5322 ;; *************** function _Key_ResetFSM *****************
  5323 ;; Defined at:
  5324 ;;		line 162 in file "_01_USER/Key.c"
  5325 ;; Parameters:    Size  Location     Type
  5326 ;;		None
  5327 ;; Auto vars:     Size  Location     Type
  5328 ;;  t               1   24[COMRAM] unsigned char 
  5329 ;; Return value:  Size  Location     Type
  5330 ;;		None               void
  5331 ;; Registers used:
  5332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5333 ;; Tracked objects:
  5334 ;;		On entry : 0/0
  5335 ;;		On exit  : 0/0
  5336 ;;		Unchanged: 0/0
  5337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5339 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5341 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5342 ;;Total ram usage:        1 bytes
  5343 ;; Hardware stack levels used:    1
  5344 ;; Hardware stack levels required when called:    3
  5345 ;; This function calls:
  5346 ;;		Nothing
  5347 ;; This function is called by:
  5348 ;;		_Key_ManageMessage
  5349 ;; This function uses a non-reentrant model
  5350 ;;
  5351                           
  5352                           	psect	text34
  5353  0013E6                     __ptext34:
  5354                           	opt stack 0
  5355  0013E6                     _Key_ResetFSM:
  5356                           	opt stack 25
  5357                           
  5358                           ;Key.c: 164: unsigned char t;
  5359                           ;Key.c: 165: gs_Local_Key_User.key_BUS = 0x00;
  5360                           
  5361                           ;incstack = 0
  5362  0013E6  0E00               	movlw	0
  5363  0013E8  0100               	movlb	0	; () banked
  5364  0013EA  6FB0               	movwf	_gs_Local_Key_User& (0+255),b	;volatile
  5365                           
  5366                           ;Key.c: 166: gs_Local_Key_User.key_group = KEY_default;
  5367  0013EC  0E00               	movlw	0
  5368  0013EE  0100               	movlb	0	; () banked
  5369  0013F0  6FB1               	movwf	(_gs_Local_Key_User+1)& (0+255),b	;volatile
  5370                           
  5371                           ;Key.c: 167: t=4;
  5372  0013F2  0E04               	movlw	4
  5373  0013F4  6E19               	movwf	Key_ResetFSM@t,c
  5374                           
  5375                           ;Key.c: 168: while(t--) gs_Local_Key_User.a_key_count[t] = 0,
  5376  0013F6  D017               	goto	l2489
  5377  0013F8                     l2487:
  5378                           
  5379                           ;Key.c: 169: gs_Local_Key_User.a_key_state[t] = KEY_default;
  5380  0013F8  5019               	movf	Key_ResetFSM@t,w,c
  5381  0013FA  0D02               	mullw	2
  5382  0013FC  0EB3               	movlw	low (_gs_Local_Key_User+3)
  5383  0013FE  24F3               	addwf	prodl,w,c
  5384  001400  6ED9               	movwf	fsr2l,c
  5385  001402  0E00               	movlw	high (_gs_Local_Key_User+3)
  5386  001404  20F4               	addwfc	prodh,w,c
  5387  001406  6EDA               	movwf	fsr2h,c
  5388  001408  0E00               	movlw	0
  5389  00140A  6EDE               	movwf	postinc2,c
  5390  00140C  0E00               	movlw	0
  5391  00140E  6EDD               	movwf	postdec2,c
  5392  001410  5019               	movf	Key_ResetFSM@t,w,c
  5393  001412  0D01               	mullw	1
  5394  001414  0EBF               	movlw	low (_gs_Local_Key_User+15)
  5395  001416  24F3               	addwf	prodl,w,c
  5396  001418  6ED9               	movwf	fsr2l,c
  5397  00141A  0E00               	movlw	high (_gs_Local_Key_User+15)
  5398  00141C  20F4               	addwfc	prodh,w,c
  5399  00141E  6EDA               	movwf	fsr2h,c
  5400  001420  0E00               	movlw	0
  5401  001422  6EDF               	movwf	indf2,c
  5402  001424  D000               	goto	l2489
  5403  001426                     l2489:
  5404  001426  0619               	decf	Key_ResetFSM@t,f,c
  5405  001428  2819               	incf	Key_ResetFSM@t,w,c
  5406  00142A  A4D8               	btfss	status,2,c
  5407  00142C  D7E5               	goto	l2487
  5408  00142E  0012               	return		;funcret
  5409  001430                     __end_of_Key_ResetFSM:
  5410                           	opt stack 0
  5411                           tblptru	equ	0xFF8
  5412                           tblptrh	equ	0xFF7
  5413                           tblptrl	equ	0xFF6
  5414                           tablat	equ	0xFF5
  5415                           prodh	equ	0xFF4
  5416                           prodl	equ	0xFF3
  5417                           intcon	equ	0xFF2
  5418                           postinc0	equ	0xFEE
  5419                           wreg	equ	0xFE8
  5420                           indf1	equ	0xFE7
  5421                           postdec1	equ	0xFE5
  5422                           fsr1h	equ	0xFE2
  5423                           fsr1l	equ	0xFE1
  5424                           indf2	equ	0xFDF
  5425                           postinc2	equ	0xFDE
  5426                           postdec2	equ	0xFDD
  5427                           fsr2h	equ	0xFDA
  5428                           fsr2l	equ	0xFD9
  5429                           status	equ	0xFD8
  5430                           
  5431 ;; *************** function _Key_ReadFSM *****************
  5432 ;; Defined at:
  5433 ;;		line 113 in file "_01_USER/Key.c"
  5434 ;; Parameters:    Size  Location     Type
  5435 ;;		None
  5436 ;; Auto vars:     Size  Location     Type
  5437 ;;  key_num         1   29[COMRAM] unsigned char 
  5438 ;;  key_num_mate    1   28[COMRAM] unsigned char 
  5439 ;; Return value:  Size  Location     Type
  5440 ;;		None               void
  5441 ;; Registers used:
  5442 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5443 ;; Tracked objects:
  5444 ;;		On entry : 0/0
  5445 ;;		On exit  : 0/0
  5446 ;;		Unchanged: 0/0
  5447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5449 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5450 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5451 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5452 ;;Total ram usage:        6 bytes
  5453 ;; Hardware stack levels used:    1
  5454 ;; Hardware stack levels required when called:    3
  5455 ;; This function calls:
  5456 ;;		Nothing
  5457 ;; This function is called by:
  5458 ;;		_Key_ManageMessage
  5459 ;; This function uses a non-reentrant model
  5460 ;;
  5461                           
  5462                           	psect	text35
  5463  00056E                     __ptext35:
  5464                           	opt stack 0
  5465  00056E                     _Key_ReadFSM:
  5466                           	opt stack 25
  5467                           
  5468                           ;Key.c: 115: unsigned char key_num = 6,key_num_mate;
  5469                           
  5470                           ;incstack = 0
  5471  00056E  0E06               	movlw	6
  5472  000570  6E1E               	movwf	Key_ReadFSM@key_num,c
  5473                           
  5474                           ;Key.c: 118: while(key_num--)
  5475  000572  D072               	goto	l2457
  5476  000574                     l2439:
  5477                           
  5478                           ;Key.c: 119: {
  5479                           ;Key.c: 121: if( s_Local_Key_FSM.key_BUS == 0x00 )
  5480  000574  0100               	movlb	0	; () banked
  5481  000576  51C5               	movf	_s_Local_Key_FSM& (0+255),w,b	;volatile
  5482  000578  A4D8               	btfss	status,2,c
  5483  00057A  D04A               	goto	l2451
  5484                           
  5485                           ; BSR set to: 0
  5486                           ;Key.c: 122: {
  5487                           ;Key.c: 123: if( s_Local_Key_FSM.a_key_count[key_num] > 5 )
  5488  00057C  501E               	movf	Key_ReadFSM@key_num,w,c
  5489  00057E  0D02               	mullw	2
  5490  000580  0EC8               	movlw	low (_s_Local_Key_FSM+3)
  5491  000582  24F3               	addwf	prodl,w,c
  5492  000584  6ED9               	movwf	fsr2l,c
  5493  000586  0E00               	movlw	high (_s_Local_Key_FSM+3)
  5494  000588  20F4               	addwfc	prodh,w,c
  5495  00058A  6EDA               	movwf	fsr2h,c
  5496  00058C  0E01               	movlw	1
  5497  00058E  50DB               	movf	plusw2,w,c
  5498  000590  E104               	bnz	u2050
  5499  000592  0E06               	movlw	6
  5500  000594  5CDE               	subwf	postinc2,w,c
  5501  000596  A0D8               	btfss	status,0,c
  5502  000598  D024               	goto	l2449
  5503  00059A                     u2050:
  5504                           
  5505                           ; BSR set to: 0
  5506                           ;Key.c: 124: {
  5507                           ;Key.c: 125: if( s_Local_Key_FSM.a_key_count[key_num] > 60 )
  5508  00059A  501E               	movf	Key_ReadFSM@key_num,w,c
  5509  00059C  0D02               	mullw	2
  5510  00059E  0EC8               	movlw	low (_s_Local_Key_FSM+3)
  5511  0005A0  24F3               	addwf	prodl,w,c
  5512  0005A2  6ED9               	movwf	fsr2l,c
  5513  0005A4  0E00               	movlw	high (_s_Local_Key_FSM+3)
  5514  0005A6  20F4               	addwfc	prodh,w,c
  5515  0005A8  6EDA               	movwf	fsr2h,c
  5516  0005AA  0E01               	movlw	1
  5517  0005AC  50DB               	movf	plusw2,w,c
  5518  0005AE  E104               	bnz	u2060
  5519  0005B0  0E3D               	movlw	61
  5520  0005B2  5CDE               	subwf	postinc2,w,c
  5521  0005B4  A0D8               	btfss	status,0,c
  5522  0005B6  D00A               	goto	l2447
  5523  0005B8                     u2060:
  5524                           
  5525                           ; BSR set to: 0
  5526                           ;Key.c: 126: gs_Local_Key_User.a_key_state[key_num] = KEY_long;
  5527  0005B8  501E               	movf	Key_ReadFSM@key_num,w,c
  5528  0005BA  0D01               	mullw	1
  5529  0005BC  0EBF               	movlw	low (_gs_Local_Key_User+15)
  5530  0005BE  24F3               	addwf	prodl,w,c
  5531  0005C0  6ED9               	movwf	fsr2l,c
  5532  0005C2  0E00               	movlw	high (_gs_Local_Key_User+15)
  5533  0005C4  20F4               	addwfc	prodh,w,c
  5534  0005C6  6EDA               	movwf	fsr2h,c
  5535  0005C8  0E05               	movlw	5
  5536  0005CA  D014               	goto	L7
  5537  0005CC                     l2447:
  5538                           
  5539                           ; BSR set to: 0
  5540                           ;Key.c: 127: else gs_Local_Key_User.a_key_state[key_num] = KEY_short;
  5541  0005CC  501E               	movf	Key_ReadFSM@key_num,w,c
  5542  0005CE  0D01               	mullw	1
  5543  0005D0  0EBF               	movlw	low (_gs_Local_Key_User+15)
  5544  0005D2  24F3               	addwf	prodl,w,c
  5545  0005D4  6ED9               	movwf	fsr2l,c
  5546  0005D6  0E00               	movlw	high (_gs_Local_Key_User+15)
  5547  0005D8  20F4               	addwfc	prodh,w,c
  5548  0005DA  6EDA               	movwf	fsr2h,c
  5549  0005DC  0E01               	movlw	1
  5550  0005DE  6EDF               	movwf	indf2,c
  5551                           
  5552                           ; BSR set to: 0
  5553                           ;Key.c: 128: }
  5554  0005E0  D00A               	goto	l134
  5555  0005E2                     l2449:
  5556                           
  5557                           ; BSR set to: 0
  5558                           ;Key.c: 129: else gs_Local_Key_User.a_key_state[key_num] = KEY_default;
  5559  0005E2  501E               	movf	Key_ReadFSM@key_num,w,c
  5560  0005E4  0D01               	mullw	1
  5561  0005E6  0EBF               	movlw	low (_gs_Local_Key_User+15)
  5562  0005E8  24F3               	addwf	prodl,w,c
  5563  0005EA  6ED9               	movwf	fsr2l,c
  5564  0005EC  0E00               	movlw	high (_gs_Local_Key_User+15)
  5565  0005EE  20F4               	addwfc	prodh,w,c
  5566  0005F0  6EDA               	movwf	fsr2h,c
  5567  0005F2  0E00               	movlw	0
  5568  0005F4                     L7:
  5569  0005F4  6EDF               	movwf	indf2,c
  5570  0005F6                     l134:
  5571                           
  5572                           ; BSR set to: 0
  5573                           ;Key.c: 130: s_Local_Key_FSM.a_key_count[key_num] = 0;
  5574  0005F6  501E               	movf	Key_ReadFSM@key_num,w,c
  5575  0005F8  0D02               	mullw	2
  5576  0005FA  0EC8               	movlw	low (_s_Local_Key_FSM+3)
  5577  0005FC  24F3               	addwf	prodl,w,c
  5578  0005FE  6ED9               	movwf	fsr2l,c
  5579  000600  0E00               	movlw	high (_s_Local_Key_FSM+3)
  5580  000602  20F4               	addwfc	prodh,w,c
  5581  000604  6EDA               	movwf	fsr2h,c
  5582  000606  0E00               	movlw	0
  5583  000608  6EDE               	movwf	postinc2,c
  5584  00060A  0E00               	movlw	0
  5585  00060C  6EDD               	movwf	postdec2,c
  5586                           
  5587                           ;Key.c: 131: }
  5588  00060E  D024               	goto	l2457
  5589  000610                     l2451:
  5590                           
  5591                           ; BSR set to: 0
  5592                           ;Key.c: 133: else if( s_Local_Key_FSM.a_key_count[key_num] > 60 )
  5593  000610  501E               	movf	Key_ReadFSM@key_num,w,c
  5594  000612  0D02               	mullw	2
  5595  000614  0EC8               	movlw	low (_s_Local_Key_FSM+3)
  5596  000616  24F3               	addwf	prodl,w,c
  5597  000618  6ED9               	movwf	fsr2l,c
  5598  00061A  0E00               	movlw	high (_s_Local_Key_FSM+3)
  5599  00061C  20F4               	addwfc	prodh,w,c
  5600  00061E  6EDA               	movwf	fsr2h,c
  5601  000620  0E01               	movlw	1
  5602  000622  50DB               	movf	plusw2,w,c
  5603  000624  E104               	bnz	u2070
  5604  000626  0E3D               	movlw	61
  5605  000628  5CDE               	subwf	postinc2,w,c
  5606  00062A  A0D8               	btfss	status,0,c
  5607  00062C  D00A               	goto	l2455
  5608  00062E                     u2070:
  5609                           
  5610                           ; BSR set to: 0
  5611                           ;Key.c: 134: gs_Local_Key_User.a_key_state[key_num] = KEY_hold;
  5612  00062E  501E               	movf	Key_ReadFSM@key_num,w,c
  5613  000630  0D01               	mullw	1
  5614  000632  0EBF               	movlw	low (_gs_Local_Key_User+15)
  5615  000634  24F3               	addwf	prodl,w,c
  5616  000636  6ED9               	movwf	fsr2l,c
  5617  000638  0E00               	movlw	high (_gs_Local_Key_User+15)
  5618  00063A  20F4               	addwfc	prodh,w,c
  5619  00063C  6EDA               	movwf	fsr2h,c
  5620  00063E  0E03               	movlw	3
  5621  000640  D009               	goto	L8
  5622  000642                     l2455:
  5623                           
  5624                           ; BSR set to: 0
  5625                           ;Key.c: 137: else gs_Local_Key_User.a_key_state[key_num] = KEY_busy;
  5626  000642  501E               	movf	Key_ReadFSM@key_num,w,c
  5627  000644  0D01               	mullw	1
  5628  000646  0EBF               	movlw	low (_gs_Local_Key_User+15)
  5629  000648  24F3               	addwf	prodl,w,c
  5630  00064A  6ED9               	movwf	fsr2l,c
  5631  00064C  0E00               	movlw	high (_gs_Local_Key_User+15)
  5632  00064E  20F4               	addwfc	prodh,w,c
  5633  000650  6EDA               	movwf	fsr2h,c
  5634  000652  0E04               	movlw	4
  5635  000654                     L8:
  5636  000654  6EDF               	movwf	indf2,c
  5637                           
  5638                           ; BSR set to: 0
  5639                           
  5640                           ; BSR set to: 0
  5641  000656  D000               	goto	l2457
  5642  000658                     l2457:
  5643  000658  061E               	decf	Key_ReadFSM@key_num,f,c
  5644  00065A  281E               	incf	Key_ReadFSM@key_num,w,c
  5645  00065C  A4D8               	btfss	status,2,c
  5646  00065E  D78A               	goto	l2439
  5647                           
  5648                           ;Key.c: 138: }
  5649                           ;Key.c: 141: for( key_num = 0;key_num < 6 - 1; key_num ++)
  5650  000660  0E00               	movlw	0
  5651  000662  6E1E               	movwf	Key_ReadFSM@key_num,c
  5652  000664  0E04               	movlw	4
  5653  000666  641E               	cpfsgt	Key_ReadFSM@key_num,c
  5654  000668  D002               	goto	l2465
  5655  00066A  0012               	return	
  5656  00066C  0012               	return	
  5657  00066E                     l2465:
  5658                           
  5659                           ;Key.c: 142: for( key_num_mate = key_num+1;key_num_mate < 6 ; key_num_mate ++)
  5660  00066E  281E               	incf	Key_ReadFSM@key_num,w,c
  5661  000670  6E1D               	movwf	Key_ReadFSM@key_num_mate,c
  5662  000672  0E05               	movlw	5
  5663  000674  641D               	cpfsgt	Key_ReadFSM@key_num_mate,c
  5664  000676  D001               	goto	l2469
  5665  000678  D045               	goto	l2481
  5666  00067A                     l2469:
  5667                           
  5668                           ;Key.c: 143: if( gs_Local_Key_User.a_key_state[key_num] == gs_Local_Key_User.a_key_state
      +                          [key_num_mate] )
  5669  00067A  501D               	movf	Key_ReadFSM@key_num_mate,w,c
  5670  00067C  0D01               	mullw	1
  5671  00067E  0EBF               	movlw	low (_gs_Local_Key_User+15)
  5672  000680  24F3               	addwf	prodl,w,c
  5673  000682  6ED9               	movwf	fsr2l,c
  5674  000684  0E00               	movlw	high (_gs_Local_Key_User+15)
  5675  000686  20F4               	addwfc	prodh,w,c
  5676  000688  6EDA               	movwf	fsr2h,c
  5677  00068A  501E               	movf	Key_ReadFSM@key_num,w,c
  5678  00068C  0D01               	mullw	1
  5679  00068E  0EBF               	movlw	low (_gs_Local_Key_User+15)
  5680  000690  24F3               	addwf	prodl,w,c
  5681  000692  6EE1               	movwf	fsr1l,c
  5682  000694  0E00               	movlw	high (_gs_Local_Key_User+15)
  5683  000696  20F4               	addwfc	prodh,w,c
  5684  000698  6EE2               	movwf	fsr1h,c
  5685  00069A  50DE               	movf	postinc2,w,c
  5686  00069C  18E6               	xorwf	postinc1,w,c
  5687  00069E  A4D8               	btfss	status,2,c
  5688  0006A0  D02F               	goto	l2477
  5689                           
  5690                           ;Key.c: 144: if(gs_Local_Key_User.a_key_state[key_num] != KEY_default)
  5691  0006A2  501E               	movf	Key_ReadFSM@key_num,w,c
  5692  0006A4  0D01               	mullw	1
  5693  0006A6  0EBF               	movlw	low (_gs_Local_Key_User+15)
  5694  0006A8  24F3               	addwf	prodl,w,c
  5695  0006AA  6ED9               	movwf	fsr2l,c
  5696  0006AC  0E00               	movlw	high (_gs_Local_Key_User+15)
  5697  0006AE  20F4               	addwfc	prodh,w,c
  5698  0006B0  6EDA               	movwf	fsr2h,c
  5699  0006B2  50DF               	movf	indf2,w,c
  5700  0006B4  B4D8               	btfsc	status,2,c
  5701  0006B6  D024               	goto	l2477
  5702                           
  5703                           ;Key.c: 145: {
  5704                           ;Key.c: 146: gs_Local_Key_User.key_group = (0x01 << key_num)|(0x01 << key_num_mate);
  5705  0006B8  C01D  F019         	movff	Key_ReadFSM@key_num_mate,??_Key_ReadFSM
  5706  0006BC  0E01               	movlw	1
  5707  0006BE  6E1A               	movwf	(??_Key_ReadFSM+1)& (0+255),c
  5708  0006C0  2A19               	incf	??_Key_ReadFSM,f,c
  5709  0006C2  D002               	goto	u2134
  5710  0006C4                     u2135:
  5711  0006C4  90D8               	bcf	status,0,c
  5712  0006C6  361A               	rlcf	??_Key_ReadFSM+1,f,c
  5713  0006C8                     u2134:
  5714  0006C8  2E19               	decfsz	??_Key_ReadFSM,f,c
  5715  0006CA  D7FC               	goto	u2135
  5716  0006CC  C01E  F01B         	movff	Key_ReadFSM@key_num,??_Key_ReadFSM+2
  5717  0006D0  0E01               	movlw	1
  5718  0006D2  6E1C               	movwf	(??_Key_ReadFSM+3)& (0+255),c
  5719  0006D4  2A1B               	incf	??_Key_ReadFSM+2,f,c
  5720  0006D6  D002               	goto	u2144
  5721  0006D8                     u2145:
  5722  0006D8  90D8               	bcf	status,0,c
  5723  0006DA  361C               	rlcf	??_Key_ReadFSM+3,f,c
  5724  0006DC                     u2144:
  5725  0006DC  2E1B               	decfsz	??_Key_ReadFSM+2,f,c
  5726  0006DE  D7FC               	goto	u2145
  5727  0006E0  501C               	movf	??_Key_ReadFSM+3,w,c
  5728  0006E2  101A               	iorwf	??_Key_ReadFSM+1,w,c
  5729  0006E4  0100               	movlb	0	; () banked
  5730  0006E6  6FB1               	movwf	(_gs_Local_Key_User+1)& (0+255),b	;volatile
  5731                           
  5732                           ; BSR set to: 0
  5733                           ;Key.c: 147: gs_Local_Key_User.key_group_state = gs_Local_Key_User.a_key_state[key_num];
  5734  0006E8  501E               	movf	Key_ReadFSM@key_num,w,c
  5735  0006EA  0D01               	mullw	1
  5736  0006EC  0EBF               	movlw	low (_gs_Local_Key_User+15)
  5737  0006EE  24F3               	addwf	prodl,w,c
  5738  0006F0  6ED9               	movwf	fsr2l,c
  5739  0006F2  0E00               	movlw	high (_gs_Local_Key_User+15)
  5740  0006F4  20F4               	addwfc	prodh,w,c
  5741  0006F6  6EDA               	movwf	fsr2h,c
  5742  0006F8  50DF               	movf	indf2,w,c
  5743  0006FA  0100               	movlb	0	; () banked
  5744  0006FC  6FB2               	movwf	(_gs_Local_Key_User+2)& (0+255),b	;volatile
  5745                           
  5746                           ; BSR set to: 0
  5747  0006FE  D000               	goto	l2477
  5748  000700                     l2477:
  5749  000700  2A1D               	incf	Key_ReadFSM@key_num_mate,f,c
  5750  000702  D7B7               	goto	L9
  5751  000704                     l2481:
  5752  000704  2A1E               	incf	Key_ReadFSM@key_num,f,c
  5753  000706  0E04               	movlw	4
  5754  000708  641E               	cpfsgt	Key_ReadFSM@key_num,c
  5755  00070A  D7B1               	goto	l2465
  5756  00070C  0012               	return	
  5757  00070E  0012               	return		;funcret
  5758  000710                     __end_of_Key_ReadFSM:
  5759                           	opt stack 0
  5760                           tblptru	equ	0xFF8
  5761                           tblptrh	equ	0xFF7
  5762                           tblptrl	equ	0xFF6
  5763                           tablat	equ	0xFF5
  5764                           prodh	equ	0xFF4
  5765                           prodl	equ	0xFF3
  5766                           intcon	equ	0xFF2
  5767                           postinc0	equ	0xFEE
  5768                           wreg	equ	0xFE8
  5769                           indf1	equ	0xFE7
  5770                           postinc1	equ	0xFE6
  5771                           postdec1	equ	0xFE5
  5772                           fsr1h	equ	0xFE2
  5773                           fsr1l	equ	0xFE1
  5774                           indf2	equ	0xFDF
  5775                           postinc2	equ	0xFDE
  5776                           postdec2	equ	0xFDD
  5777                           plusw2	equ	0xFDB
  5778                           fsr2h	equ	0xFDA
  5779                           fsr2l	equ	0xFD9
  5780                           status	equ	0xFD8
  5781                           
  5782 ;; *************** function _Key_Init *****************
  5783 ;; Defined at:
  5784 ;;		line 42 in file "_01_USER/Key.c"
  5785 ;; Parameters:    Size  Location     Type
  5786 ;;		None
  5787 ;; Auto vars:     Size  Location     Type
  5788 ;;		None
  5789 ;; Return value:  Size  Location     Type
  5790 ;;		None               void
  5791 ;; Registers used:
  5792 ;;		None
  5793 ;; Tracked objects:
  5794 ;;		On entry : 0/0
  5795 ;;		On exit  : 0/0
  5796 ;;		Unchanged: 0/0
  5797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5802 ;;Total ram usage:        0 bytes
  5803 ;; Hardware stack levels used:    1
  5804 ;; Hardware stack levels required when called:    3
  5805 ;; This function calls:
  5806 ;;		Nothing
  5807 ;; This function is called by:
  5808 ;;		_main
  5809 ;; This function uses a non-reentrant model
  5810 ;;
  5811                           
  5812                           	psect	text36
  5813  0017B0                     __ptext36:
  5814                           	opt stack 0
  5815  0017B0                     _Key_Init:
  5816                           	opt stack 27
  5817                           
  5818                           ;Key.c: 45: TRISC1 = 1;
  5819                           
  5820                           ;incstack = 0
  5821  0017B0  8294               	bsf	3988,1,c	;volatile
  5822                           
  5823                           ;Key.c: 46: TRISF1 = 1;
  5824  0017B2  8297               	bsf	3991,1,c	;volatile
  5825                           
  5826                           ;Key.c: 47: TRISF2 = 1;
  5827  0017B4  8497               	bsf	3991,2,c	;volatile
  5828                           
  5829                           ;Key.c: 48: TRISA4 = 1;
  5830  0017B6  8892               	bsf	3986,4,c	;volatile
  5831                           
  5832                           ;Key.c: 49: TRISA5 = 1;
  5833  0017B8  8A92               	bsf	3986,5,c	;volatile
  5834                           
  5835                           ;Key.c: 50: TRISF3 = 1;
  5836  0017BA  8697               	bsf	3991,3,c	;volatile
  5837                           
  5838                           ;Key.c: 53: ANSEL4 = 0;
  5839  0017BC  010F               	movlb	15	; () banked
  5840  0017BE  9925               	bcf	37,4,b	;volatile
  5841                           
  5842                           ;Key.c: 54: ANSEL6 = 0;
  5843  0017C0  010F               	movlb	15	; () banked
  5844  0017C2  9D25               	bcf	37,6,b	;volatile
  5845                           
  5846                           ;Key.c: 55: ANSEL7 = 0;
  5847  0017C4  010F               	movlb	15	; () banked
  5848  0017C6  9F25               	bcf	37,7,b	;volatile
  5849                           
  5850                           ;Key.c: 56: ANSEL8 = 0;
  5851  0017C8  010F               	movlb	15	; () banked
  5852  0017CA  9124               	bcf	36,0,b	;volatile
  5853                           
  5854                           ; BSR set to: 15
  5855  0017CC  0012               	return		;funcret
  5856  0017CE                     __end_of_Key_Init:
  5857                           	opt stack 0
  5858                           tblptru	equ	0xFF8
  5859                           tblptrh	equ	0xFF7
  5860                           tblptrl	equ	0xFF6
  5861                           tablat	equ	0xFF5
  5862                           prodh	equ	0xFF4
  5863                           prodl	equ	0xFF3
  5864                           intcon	equ	0xFF2
  5865                           postinc0	equ	0xFEE
  5866                           wreg	equ	0xFE8
  5867                           indf1	equ	0xFE7
  5868                           postinc1	equ	0xFE6
  5869                           postdec1	equ	0xFE5
  5870                           fsr1h	equ	0xFE2
  5871                           fsr1l	equ	0xFE1
  5872                           indf2	equ	0xFDF
  5873                           postinc2	equ	0xFDE
  5874                           postdec2	equ	0xFDD
  5875                           plusw2	equ	0xFDB
  5876                           fsr2h	equ	0xFDA
  5877                           fsr2l	equ	0xFD9
  5878                           status	equ	0xFD8
  5879                           
  5880 ;; *************** function _Init_TM1640 *****************
  5881 ;; Defined at:
  5882 ;;		line 21 in file "_01_USER/TM1640.c"
  5883 ;; Parameters:    Size  Location     Type
  5884 ;;		None
  5885 ;; Auto vars:     Size  Location     Type
  5886 ;;		None
  5887 ;; Return value:  Size  Location     Type
  5888 ;;		None               void
  5889 ;; Registers used:
  5890 ;;		wreg, status,2, status,0, cstack
  5891 ;; Tracked objects:
  5892 ;;		On entry : 0/0
  5893 ;;		On exit  : 0/0
  5894 ;;		Unchanged: 0/0
  5895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5900 ;;Total ram usage:        0 bytes
  5901 ;; Hardware stack levels used:    1
  5902 ;; Hardware stack levels required when called:    5
  5903 ;; This function calls:
  5904 ;;		_TM1640_Start
  5905 ;;		_TM1640_Stop
  5906 ;;		_TM1640_Writer_Byte
  5907 ;; This function is called by:
  5908 ;;		_main
  5909 ;; This function uses a non-reentrant model
  5910 ;;
  5911                           
  5912                           	psect	text37
  5913  0016FC                     __ptext37:
  5914                           	opt stack 0
  5915  0016FC                     _Init_TM1640:
  5916                           	opt stack 25
  5917                           
  5918                           ;TM1640.c: 24: TRISD5 = 0;
  5919                           
  5920                           ; BSR set to: 15
  5921                           ;incstack = 0
  5922  0016FC  9A95               	bcf	3989,5,c	;volatile
  5923                           
  5924                           ;TM1640.c: 25: TRISD6 = 0;
  5925  0016FE  9C95               	bcf	3989,6,c	;volatile
  5926                           
  5927                           ;TM1640.c: 27: TM1640_Stop();
  5928  001700  ECA3  F00B         	call	_TM1640_Stop	;wreg free
  5929                           
  5930                           ;TM1640.c: 29: TM1640_Start();
  5931  001704  ECB5  F00B         	call	_TM1640_Start	;wreg free
  5932                           
  5933                           ;TM1640.c: 30: TM1640_Writer_Byte(0x44);
  5934  001708  0E44               	movlw	68
  5935  00170A  EC9D  F00A         	call	_TM1640_Writer_Byte
  5936                           
  5937                           ;TM1640.c: 31: TM1640_Stop();
  5938  00170E  ECA3  F00B         	call	_TM1640_Stop	;wreg free
  5939                           
  5940                           ;TM1640.c: 33: TM1640_Start();
  5941  001712  ECB5  F00B         	call	_TM1640_Start	;wreg free
  5942                           
  5943                           ;TM1640.c: 34: TM1640_Writer_Byte(0x8F);
  5944  001716  0E8F               	movlw	143
  5945  001718  EC9D  F00A         	call	_TM1640_Writer_Byte
  5946                           
  5947                           ;TM1640.c: 35: TM1640_Stop();
  5948  00171C  ECA3  F00B         	call	_TM1640_Stop	;wreg free
  5949  001720  0012               	return		;funcret
  5950  001722                     __end_of_Init_TM1640:
  5951                           	opt stack 0
  5952                           tblptru	equ	0xFF8
  5953                           tblptrh	equ	0xFF7
  5954                           tblptrl	equ	0xFF6
  5955                           tablat	equ	0xFF5
  5956                           prodh	equ	0xFF4
  5957                           prodl	equ	0xFF3
  5958                           intcon	equ	0xFF2
  5959                           postinc0	equ	0xFEE
  5960                           wreg	equ	0xFE8
  5961                           indf1	equ	0xFE7
  5962                           postinc1	equ	0xFE6
  5963                           postdec1	equ	0xFE5
  5964                           fsr1h	equ	0xFE2
  5965                           fsr1l	equ	0xFE1
  5966                           indf2	equ	0xFDF
  5967                           postinc2	equ	0xFDE
  5968                           postdec2	equ	0xFDD
  5969                           plusw2	equ	0xFDB
  5970                           fsr2h	equ	0xFDA
  5971                           fsr2l	equ	0xFD9
  5972                           status	equ	0xFD8
  5973                           
  5974 ;; *************** function _TM1640_Writer_Byte *****************
  5975 ;; Defined at:
  5976 ;;		line 116 in file "_01_USER/TM1640.c"
  5977 ;; Parameters:    Size  Location     Type
  5978 ;;  Date            1    wreg     unsigned char 
  5979 ;; Auto vars:     Size  Location     Type
  5980 ;;  Date            1   26[COMRAM] unsigned char 
  5981 ;;  mask            1   27[COMRAM] unsigned char 
  5982 ;; Return value:  Size  Location     Type
  5983 ;;		None               void
  5984 ;; Registers used:
  5985 ;;		wreg, status,2, status,0, cstack
  5986 ;; Tracked objects:
  5987 ;;		On entry : 0/0
  5988 ;;		On exit  : 0/0
  5989 ;;		Unchanged: 0/0
  5990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5992 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5994 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5995 ;;Total ram usage:        2 bytes
  5996 ;; Hardware stack levels used:    1
  5997 ;; Hardware stack levels required when called:    4
  5998 ;; This function calls:
  5999 ;;		_TM1640_Delay
  6000 ;; This function is called by:
  6001 ;;		_Init_TM1640
  6002 ;;		_TM1640_Writer_Dates
  6003 ;;		_Open_Display
  6004 ;;		_Disable_Display
  6005 ;; This function uses a non-reentrant model
  6006 ;;
  6007                           
  6008                           	psect	text38
  6009  00153A                     __ptext38:
  6010                           	opt stack 0
  6011  00153A                     _TM1640_Writer_Byte:
  6012                           	opt stack 24
  6013                           
  6014                           ;incstack = 0
  6015                           ;TM1640_Writer_Byte@Date stored from wreg
  6016  00153A  6E1B               	movwf	TM1640_Writer_Byte@Date,c
  6017                           
  6018                           ;TM1640.c: 118: unsigned char mask;
  6019                           ;TM1640.c: 120: for(mask=0x01; mask; mask<<=1)
  6020  00153C  0E01               	movlw	1
  6021  00153E  6E1C               	movwf	TM1640_Writer_Byte@mask,c
  6022  001540  D017               	goto	l2355
  6023  001542                     l369:
  6024                           
  6025                           ;TM1640.c: 121: {
  6026                           ;TM1640.c: 122: RD6 = 0;
  6027  001542  9C83               	bcf	3971,6,c	;volatile
  6028                           
  6029                           ;TM1640.c: 123: TM1640_Delay(1);
  6030  001544  0E01               	movlw	1
  6031  001546  EC02  F00C         	call	_TM1640_Delay
  6032                           
  6033                           ;TM1640.c: 124: if(mask & Date)
  6034  00154A  501C               	movf	TM1640_Writer_Byte@mask,w,c
  6035  00154C  141B               	andwf	TM1640_Writer_Byte@Date,w,c
  6036  00154E  0900               	iorlw	0
  6037  001550  B4D8               	btfsc	status,2,c
  6038  001552  D002               	goto	l370
  6039                           
  6040                           ;TM1640.c: 125: RD5 = 1;
  6041  001554  8A83               	bsf	3971,5,c	;volatile
  6042  001556  D002               	goto	l2349
  6043  001558                     l370:
  6044                           
  6045                           ;TM1640.c: 126: else
  6046                           ;TM1640.c: 127: RD5 = 0;
  6047  001558  9A83               	bcf	3971,5,c	;volatile
  6048  00155A  D000               	goto	l2349
  6049  00155C                     l2349:
  6050                           
  6051                           ;TM1640.c: 128: TM1640_Delay(1);
  6052  00155C  0E01               	movlw	1
  6053  00155E  EC02  F00C         	call	_TM1640_Delay
  6054                           
  6055                           ;TM1640.c: 129: RD6 = 1;
  6056  001562  8C83               	bsf	3971,6,c	;volatile
  6057                           
  6058                           ;TM1640.c: 130: TM1640_Delay(1);
  6059  001564  0E01               	movlw	1
  6060  001566  EC02  F00C         	call	_TM1640_Delay
  6061  00156A  90D8               	bcf	status,0,c
  6062  00156C  361C               	rlcf	TM1640_Writer_Byte@mask,f,c
  6063  00156E  D000               	goto	l2355
  6064  001570                     l2355:
  6065  001570  501C               	movf	TM1640_Writer_Byte@mask,w,c
  6066  001572  A4D8               	btfss	status,2,c
  6067  001574  D7E6               	goto	l369
  6068  001576  0012               	return		;funcret
  6069  001578                     __end_of_TM1640_Writer_Byte:
  6070                           	opt stack 0
  6071                           tblptru	equ	0xFF8
  6072                           tblptrh	equ	0xFF7
  6073                           tblptrl	equ	0xFF6
  6074                           tablat	equ	0xFF5
  6075                           prodh	equ	0xFF4
  6076                           prodl	equ	0xFF3
  6077                           intcon	equ	0xFF2
  6078                           postinc0	equ	0xFEE
  6079                           wreg	equ	0xFE8
  6080                           indf1	equ	0xFE7
  6081                           postinc1	equ	0xFE6
  6082                           postdec1	equ	0xFE5
  6083                           fsr1h	equ	0xFE2
  6084                           fsr1l	equ	0xFE1
  6085                           indf2	equ	0xFDF
  6086                           postinc2	equ	0xFDE
  6087                           postdec2	equ	0xFDD
  6088                           plusw2	equ	0xFDB
  6089                           fsr2h	equ	0xFDA
  6090                           fsr2l	equ	0xFD9
  6091                           status	equ	0xFD8
  6092                           
  6093 ;; *************** function _TM1640_Stop *****************
  6094 ;; Defined at:
  6095 ;;		line 63 in file "_01_USER/TM1640.c"
  6096 ;; Parameters:    Size  Location     Type
  6097 ;;		None
  6098 ;; Auto vars:     Size  Location     Type
  6099 ;;		None
  6100 ;; Return value:  Size  Location     Type
  6101 ;;		None               void
  6102 ;; Registers used:
  6103 ;;		wreg, status,2, status,0, cstack
  6104 ;; Tracked objects:
  6105 ;;		On entry : 0/0
  6106 ;;		On exit  : 0/0
  6107 ;;		Unchanged: 0/0
  6108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6113 ;;Total ram usage:        0 bytes
  6114 ;; Hardware stack levels used:    1
  6115 ;; Hardware stack levels required when called:    4
  6116 ;; This function calls:
  6117 ;;		_TM1640_Delay
  6118 ;; This function is called by:
  6119 ;;		_Init_TM1640
  6120 ;;		_TM1640_Writer_Dates
  6121 ;;		_Open_Display
  6122 ;;		_Disable_Display
  6123 ;; This function uses a non-reentrant model
  6124 ;;
  6125                           
  6126                           	psect	text39
  6127  001746                     __ptext39:
  6128                           	opt stack 0
  6129  001746                     _TM1640_Stop:
  6130                           	opt stack 24
  6131                           
  6132                           ;TM1640.c: 65: RD6 = 0;
  6133                           
  6134                           ;incstack = 0
  6135  001746  9C83               	bcf	3971,6,c	;volatile
  6136                           
  6137                           ;TM1640.c: 66: TM1640_Delay(1);
  6138  001748  0E01               	movlw	1
  6139  00174A  EC02  F00C         	call	_TM1640_Delay
  6140                           
  6141                           ;TM1640.c: 67: RD5 = 0;
  6142  00174E  9A83               	bcf	3971,5,c	;volatile
  6143                           
  6144                           ;TM1640.c: 68: TM1640_Delay(1);
  6145  001750  0E01               	movlw	1
  6146  001752  EC02  F00C         	call	_TM1640_Delay
  6147                           
  6148                           ;TM1640.c: 69: RD6 = 1;
  6149  001756  8C83               	bsf	3971,6,c	;volatile
  6150                           
  6151                           ;TM1640.c: 70: TM1640_Delay(1);
  6152  001758  0E01               	movlw	1
  6153  00175A  EC02  F00C         	call	_TM1640_Delay
  6154                           
  6155                           ;TM1640.c: 71: RD5 = 1;
  6156  00175E  8A83               	bsf	3971,5,c	;volatile
  6157                           
  6158                           ;TM1640.c: 72: TM1640_Delay(1);
  6159  001760  0E01               	movlw	1
  6160  001762  EC02  F00C         	call	_TM1640_Delay
  6161                           
  6162                           ;TM1640.c: 73: RD6 = 0;
  6163  001766  9C83               	bcf	3971,6,c	;volatile
  6164  001768  0012               	return		;funcret
  6165  00176A                     __end_of_TM1640_Stop:
  6166                           	opt stack 0
  6167                           tblptru	equ	0xFF8
  6168                           tblptrh	equ	0xFF7
  6169                           tblptrl	equ	0xFF6
  6170                           tablat	equ	0xFF5
  6171                           prodh	equ	0xFF4
  6172                           prodl	equ	0xFF3
  6173                           intcon	equ	0xFF2
  6174                           postinc0	equ	0xFEE
  6175                           wreg	equ	0xFE8
  6176                           indf1	equ	0xFE7
  6177                           postinc1	equ	0xFE6
  6178                           postdec1	equ	0xFE5
  6179                           fsr1h	equ	0xFE2
  6180                           fsr1l	equ	0xFE1
  6181                           indf2	equ	0xFDF
  6182                           postinc2	equ	0xFDE
  6183                           postdec2	equ	0xFDD
  6184                           plusw2	equ	0xFDB
  6185                           fsr2h	equ	0xFDA
  6186                           fsr2l	equ	0xFD9
  6187                           status	equ	0xFD8
  6188                           
  6189 ;; *************** function _TM1640_Start *****************
  6190 ;; Defined at:
  6191 ;;		line 44 in file "_01_USER/TM1640.c"
  6192 ;; Parameters:    Size  Location     Type
  6193 ;;		None
  6194 ;; Auto vars:     Size  Location     Type
  6195 ;;		None
  6196 ;; Return value:  Size  Location     Type
  6197 ;;		None               void
  6198 ;; Registers used:
  6199 ;;		wreg, status,2, status,0, cstack
  6200 ;; Tracked objects:
  6201 ;;		On entry : 0/0
  6202 ;;		On exit  : 0/0
  6203 ;;		Unchanged: 0/0
  6204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6209 ;;Total ram usage:        0 bytes
  6210 ;; Hardware stack levels used:    1
  6211 ;; Hardware stack levels required when called:    4
  6212 ;; This function calls:
  6213 ;;		_TM1640_Delay
  6214 ;; This function is called by:
  6215 ;;		_Init_TM1640
  6216 ;;		_TM1640_Writer_Dates
  6217 ;;		_Open_Display
  6218 ;;		_Disable_Display
  6219 ;; This function uses a non-reentrant model
  6220 ;;
  6221                           
  6222                           	psect	text40
  6223  00176A                     __ptext40:
  6224                           	opt stack 0
  6225  00176A                     _TM1640_Start:
  6226                           	opt stack 24
  6227                           
  6228                           ;TM1640.c: 46: RD6 = 0;
  6229                           
  6230                           ;incstack = 0
  6231  00176A  9C83               	bcf	3971,6,c	;volatile
  6232                           
  6233                           ;TM1640.c: 47: TM1640_Delay(1);
  6234  00176C  0E01               	movlw	1
  6235  00176E  EC02  F00C         	call	_TM1640_Delay
  6236                           
  6237                           ;TM1640.c: 48: RD5 = 1;
  6238  001772  8A83               	bsf	3971,5,c	;volatile
  6239                           
  6240                           ;TM1640.c: 49: TM1640_Delay(1);
  6241  001774  0E01               	movlw	1
  6242  001776  EC02  F00C         	call	_TM1640_Delay
  6243                           
  6244                           ;TM1640.c: 50: RD6 = 1;
  6245  00177A  8C83               	bsf	3971,6,c	;volatile
  6246                           
  6247                           ;TM1640.c: 51: TM1640_Delay(1);
  6248  00177C  0E01               	movlw	1
  6249  00177E  EC02  F00C         	call	_TM1640_Delay
  6250                           
  6251                           ;TM1640.c: 52: RD5 = 0;
  6252  001782  9A83               	bcf	3971,5,c	;volatile
  6253                           
  6254                           ;TM1640.c: 53: TM1640_Delay(1);
  6255  001784  0E01               	movlw	1
  6256  001786  EC02  F00C         	call	_TM1640_Delay
  6257                           
  6258                           ;TM1640.c: 54: RD6 = 0;
  6259  00178A  9C83               	bcf	3971,6,c	;volatile
  6260  00178C  0012               	return		;funcret
  6261  00178E                     __end_of_TM1640_Start:
  6262                           	opt stack 0
  6263                           tblptru	equ	0xFF8
  6264                           tblptrh	equ	0xFF7
  6265                           tblptrl	equ	0xFF6
  6266                           tablat	equ	0xFF5
  6267                           prodh	equ	0xFF4
  6268                           prodl	equ	0xFF3
  6269                           intcon	equ	0xFF2
  6270                           postinc0	equ	0xFEE
  6271                           wreg	equ	0xFE8
  6272                           indf1	equ	0xFE7
  6273                           postinc1	equ	0xFE6
  6274                           postdec1	equ	0xFE5
  6275                           fsr1h	equ	0xFE2
  6276                           fsr1l	equ	0xFE1
  6277                           indf2	equ	0xFDF
  6278                           postinc2	equ	0xFDE
  6279                           postdec2	equ	0xFDD
  6280                           plusw2	equ	0xFDB
  6281                           fsr2h	equ	0xFDA
  6282                           fsr2l	equ	0xFD9
  6283                           status	equ	0xFD8
  6284                           
  6285 ;; *************** function _TM1640_Delay *****************
  6286 ;; Defined at:
  6287 ;;		line 166 in file "_01_USER/TM1640.c"
  6288 ;; Parameters:    Size  Location     Type
  6289 ;;  Time            1    wreg     unsigned char 
  6290 ;; Auto vars:     Size  Location     Type
  6291 ;;  Time            1   24[COMRAM] unsigned char 
  6292 ;;  i               1   25[COMRAM] unsigned char 
  6293 ;; Return value:  Size  Location     Type
  6294 ;;		None               void
  6295 ;; Registers used:
  6296 ;;		wreg, status,2, status,0
  6297 ;; Tracked objects:
  6298 ;;		On entry : 0/0
  6299 ;;		On exit  : 0/0
  6300 ;;		Unchanged: 0/0
  6301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6303 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6305 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6306 ;;Total ram usage:        2 bytes
  6307 ;; Hardware stack levels used:    1
  6308 ;; Hardware stack levels required when called:    3
  6309 ;; This function calls:
  6310 ;;		Nothing
  6311 ;; This function is called by:
  6312 ;;		_TM1640_Start
  6313 ;;		_TM1640_Stop
  6314 ;;		_TM1640_Writer_Byte
  6315 ;; This function uses a non-reentrant model
  6316 ;;
  6317                           
  6318                           	psect	text41
  6319  001804                     __ptext41:
  6320                           	opt stack 0
  6321  001804                     _TM1640_Delay:
  6322                           	opt stack 24
  6323                           
  6324                           ;incstack = 0
  6325                           ;TM1640_Delay@Time stored from wreg
  6326  001804  6E19               	movwf	TM1640_Delay@Time,c
  6327  001806                     
  6328                           ;TM1640.c: 171: {
  6329                           ;TM1640.c: 172: for(i=0; i<10; ++i);
  6330  001806  0E00               	movlw	0
  6331  001808  6E1A               	movwf	TM1640_Delay@i,c
  6332  00180A  D002               	goto	l2291
  6333  00180C  D004               	goto	l384
  6334  00180E                     l2289:
  6335  00180E  2A1A               	incf	TM1640_Delay@i,f,c
  6336  001810                     l2291:
  6337  001810  0E09               	movlw	9
  6338  001812  641A               	cpfsgt	TM1640_Delay@i,c
  6339  001814  D7FC               	goto	l2289
  6340  001816                     l384:
  6341                           
  6342                           ;TM1640.c: 173: }while(--Time);
  6343  001816  2E19               	decfsz	TM1640_Delay@Time,f,c
  6344  001818  D7F6               	goto	l2283
  6345  00181A  0012               	return	
  6346  00181C  0012               	return		;funcret
  6347  00181E                     __end_of_TM1640_Delay:
  6348                           	opt stack 0
  6349                           tblptru	equ	0xFF8
  6350                           tblptrh	equ	0xFF7
  6351                           tblptrl	equ	0xFF6
  6352                           tablat	equ	0xFF5
  6353                           prodh	equ	0xFF4
  6354                           prodl	equ	0xFF3
  6355                           intcon	equ	0xFF2
  6356                           postinc0	equ	0xFEE
  6357                           wreg	equ	0xFE8
  6358                           indf1	equ	0xFE7
  6359                           postinc1	equ	0xFE6
  6360                           postdec1	equ	0xFE5
  6361                           fsr1h	equ	0xFE2
  6362                           fsr1l	equ	0xFE1
  6363                           indf2	equ	0xFDF
  6364                           postinc2	equ	0xFDE
  6365                           postdec2	equ	0xFDD
  6366                           plusw2	equ	0xFDB
  6367                           fsr2h	equ	0xFDA
  6368                           fsr2l	equ	0xFD9
  6369                           status	equ	0xFD8
  6370                           
  6371 ;; *************** function _GPIO_Config *****************
  6372 ;; Defined at:
  6373 ;;		line 39 in file "_01_USER/GPIO.c"
  6374 ;; Parameters:    Size  Location     Type
  6375 ;;		None
  6376 ;; Auto vars:     Size  Location     Type
  6377 ;;		None
  6378 ;; Return value:  Size  Location     Type
  6379 ;;		None               void
  6380 ;; Registers used:
  6381 ;;		None
  6382 ;; Tracked objects:
  6383 ;;		On entry : 0/0
  6384 ;;		On exit  : 0/0
  6385 ;;		Unchanged: 0/0
  6386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6391 ;;Total ram usage:        0 bytes
  6392 ;; Hardware stack levels used:    1
  6393 ;; Hardware stack levels required when called:    3
  6394 ;; This function calls:
  6395 ;;		Nothing
  6396 ;; This function is called by:
  6397 ;;		_main
  6398 ;; This function uses a non-reentrant model
  6399 ;;
  6400                           
  6401                           	psect	text42
  6402  001894                     __ptext42:
  6403                           	opt stack 0
  6404  001894                     _GPIO_Config:
  6405                           	opt stack 27
  6406                           
  6407                           ;incstack = 0
  6408  001894  0012               	return		;funcret
  6409  001896                     __end_of_GPIO_Config:
  6410                           	opt stack 0
  6411                           tblptru	equ	0xFF8
  6412                           tblptrh	equ	0xFF7
  6413                           tblptrl	equ	0xFF6
  6414                           tablat	equ	0xFF5
  6415                           prodh	equ	0xFF4
  6416                           prodl	equ	0xFF3
  6417                           intcon	equ	0xFF2
  6418                           postinc0	equ	0xFEE
  6419                           wreg	equ	0xFE8
  6420                           indf1	equ	0xFE7
  6421                           postinc1	equ	0xFE6
  6422                           postdec1	equ	0xFE5
  6423                           fsr1h	equ	0xFE2
  6424                           fsr1l	equ	0xFE1
  6425                           indf2	equ	0xFDF
  6426                           postinc2	equ	0xFDE
  6427                           postdec2	equ	0xFDD
  6428                           plusw2	equ	0xFDB
  6429                           fsr2h	equ	0xFDA
  6430                           fsr2l	equ	0xFD9
  6431                           status	equ	0xFD8
  6432                           
  6433 ;; *************** function _ADC6_Init *****************
  6434 ;; Defined at:
  6435 ;;		line 37 in file "_01_USER/My_ADC.c"
  6436 ;; Parameters:    Size  Location     Type
  6437 ;;		None
  6438 ;; Auto vars:     Size  Location     Type
  6439 ;;		None
  6440 ;; Return value:  Size  Location     Type
  6441 ;;		None               void
  6442 ;; Registers used:
  6443 ;;		wreg, status,2, status,0, cstack
  6444 ;; Tracked objects:
  6445 ;;		On entry : 0/0
  6446 ;;		On exit  : 0/0
  6447 ;;		Unchanged: 0/0
  6448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6453 ;;Total ram usage:        0 bytes
  6454 ;; Hardware stack levels used:    1
  6455 ;; Hardware stack levels required when called:    4
  6456 ;; This function calls:
  6457 ;;		_OpenADC
  6458 ;; This function is called by:
  6459 ;;		_main
  6460 ;; This function uses a non-reentrant model
  6461 ;;
  6462                           
  6463                           	psect	text43
  6464  001836                     __ptext43:
  6465                           	opt stack 0
  6466  001836                     _ADC6_Init:
  6467                           	opt stack 26
  6468                           
  6469                           ;My_ADC.c: 40: OpenADC(0b11111111 &
  6470                           ;My_ADC.c: 41: 0b11110011 &
  6471                           ;My_ADC.c: 42: 0b10001111
  6472                           ;My_ADC.c: 43: ,
  6473                           ;My_ADC.c: 44: 0b10011011
  6474                           ;My_ADC.c: 45: ,
  6475                           ;My_ADC.c: 46: 0b00111111 &
  6476                           ;My_ADC.c: 47: 0b11111111 &
  6477                           ;My_ADC.c: 48: 0b11110111 &
  6478                           ;My_ADC.c: 49: 0b11111000
  6479                           ;My_ADC.c: 50: );
  6480                           
  6481                           ;incstack = 0
  6482  001836  0E9B               	movlw	155
  6483  001838  6E19               	movwf	OpenADC@config2,c
  6484  00183A  0E30               	movlw	48
  6485  00183C  6E1A               	movwf	OpenADC@config3,c
  6486  00183E  0E83               	movlw	131
  6487  001840  ECA6  F009         	call	_OpenADC
  6488                           
  6489                           ;My_ADC.c: 52: (PIE1bits.ADIE=0);
  6490  001844  9C9D               	bcf	3997,6,c	;volatile
  6491  001846  0012               	return		;funcret
  6492  001848                     __end_of_ADC6_Init:
  6493                           	opt stack 0
  6494                           tblptru	equ	0xFF8
  6495                           tblptrh	equ	0xFF7
  6496                           tblptrl	equ	0xFF6
  6497                           tablat	equ	0xFF5
  6498                           prodh	equ	0xFF4
  6499                           prodl	equ	0xFF3
  6500                           intcon	equ	0xFF2
  6501                           postinc0	equ	0xFEE
  6502                           wreg	equ	0xFE8
  6503                           indf1	equ	0xFE7
  6504                           postinc1	equ	0xFE6
  6505                           postdec1	equ	0xFE5
  6506                           fsr1h	equ	0xFE2
  6507                           fsr1l	equ	0xFE1
  6508                           indf2	equ	0xFDF
  6509                           postinc2	equ	0xFDE
  6510                           postdec2	equ	0xFDD
  6511                           plusw2	equ	0xFDB
  6512                           fsr2h	equ	0xFDA
  6513                           fsr2l	equ	0xFD9
  6514                           status	equ	0xFD8
  6515                           
  6516 ;; *************** function _OpenADC *****************
  6517 ;; Defined at:
  6518 ;;		line 305 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  6519 ;; Parameters:    Size  Location     Type
  6520 ;;  config          1    wreg     unsigned char 
  6521 ;;  config2         1   24[COMRAM] unsigned char 
  6522 ;;  config3         1   25[COMRAM] unsigned char 
  6523 ;; Auto vars:     Size  Location     Type
  6524 ;;  config          1   28[COMRAM] unsigned char 
  6525 ;; Return value:  Size  Location     Type
  6526 ;;		None               void
  6527 ;; Registers used:
  6528 ;;		wreg, status,2, status,0
  6529 ;; Tracked objects:
  6530 ;;		On entry : 0/0
  6531 ;;		On exit  : 0/0
  6532 ;;		Unchanged: 0/0
  6533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6534 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6535 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6536 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6537 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6538 ;;Total ram usage:        5 bytes
  6539 ;; Hardware stack levels used:    1
  6540 ;; Hardware stack levels required when called:    3
  6541 ;; This function calls:
  6542 ;;		Nothing
  6543 ;; This function is called by:
  6544 ;;		_ADC6_Init
  6545 ;; This function uses a non-reentrant model
  6546 ;;
  6547                           
  6548                           	psect	text44
  6549  00134C                     __ptext44:
  6550                           	opt stack 0
  6551  00134C                     _OpenADC:
  6552                           	opt stack 26
  6553                           
  6554                           ;incstack = 0
  6555                           ;OpenADC@config stored from wreg
  6556  00134C  6E1D               	movwf	OpenADC@config,c
  6557  00134E  0E00               	movlw	0
  6558  001350  6EC2               	movwf	4034,c	;volatile
  6559  001352  0E00               	movlw	0
  6560  001354  6EC1               	movwf	4033,c	;volatile
  6561  001356  0E00               	movlw	0
  6562  001358  6EC0               	movwf	4032,c	;volatile
  6563  00135A  5019               	movf	OpenADC@config2,w,c
  6564  00135C  0B7C               	andlw	124
  6565  00135E  6EC2               	movwf	4034,c	;volatile
  6566  001360  C01A  FFC1         	movff	OpenADC@config3,4033	;volatile
  6567  001364  C01D  F01B         	movff	OpenADC@config,??_OpenADC
  6568  001368  90D8               	bcf	status,0,c
  6569  00136A  361B               	rlcf	??_OpenADC,f,c
  6570  00136C  90D8               	bcf	status,0,c
  6571  00136E  361B               	rlcf	??_OpenADC,f,c
  6572  001370  0E38               	movlw	56
  6573  001372  161B               	andwf	??_OpenADC,f,c
  6574  001374  C01D  F01C         	movff	OpenADC@config,??_OpenADC+1
  6575  001378  3A1C               	swapf	??_OpenADC+1,f,c
  6576  00137A  0E0F               	movlw	15
  6577  00137C  161C               	andwf	??_OpenADC+1,f,c
  6578  00137E  0E07               	movlw	7
  6579  001380  161C               	andwf	??_OpenADC+1,f,c
  6580  001382  501D               	movf	OpenADC@config,w,c
  6581  001384  0B80               	andlw	128
  6582  001386  101C               	iorwf	??_OpenADC+1,w,c
  6583  001388  101B               	iorwf	??_OpenADC,w,c
  6584  00138A  6EC0               	movwf	4032,c	;volatile
  6585  00138C  AE19               	btfss	OpenADC@config2,7,c
  6586  00138E  D003               	goto	l584
  6587  001390  9C9E               	bcf	3998,6,c	;volatile
  6588  001392  8C9D               	bsf	3997,6,c	;volatile
  6589  001394  8CF2               	bsf	intcon,6,c	;volatile
  6590  001396                     l584:
  6591  001396  80C2               	bsf	4034,0,c	;volatile
  6592  001398  0012               	return		;funcret
  6593  00139A                     __end_of_OpenADC:
  6594                           	opt stack 0
  6595                           tblptru	equ	0xFF8
  6596                           tblptrh	equ	0xFF7
  6597                           tblptrl	equ	0xFF6
  6598                           tablat	equ	0xFF5
  6599                           prodh	equ	0xFF4
  6600                           prodl	equ	0xFF3
  6601                           intcon	equ	0xFF2
  6602                           postinc0	equ	0xFEE
  6603                           wreg	equ	0xFE8
  6604                           indf1	equ	0xFE7
  6605                           postinc1	equ	0xFE6
  6606                           postdec1	equ	0xFE5
  6607                           fsr1h	equ	0xFE2
  6608                           fsr1l	equ	0xFE1
  6609                           indf2	equ	0xFDF
  6610                           postinc2	equ	0xFDE
  6611                           postdec2	equ	0xFDD
  6612                           plusw2	equ	0xFDB
  6613                           fsr2h	equ	0xFDA
  6614                           fsr2l	equ	0xFD9
  6615                           status	equ	0xFD8
  6616                           
  6617 ;; *************** function _Sys_Cyc *****************
  6618 ;; Defined at:
  6619 ;;		line 100 in file "_01_USER/My_Timer.c"
  6620 ;; Parameters:    Size  Location     Type
  6621 ;;		None
  6622 ;; Auto vars:     Size  Location     Type
  6623 ;;  _temp           1   23[COMRAM] unsigned char 
  6624 ;; Return value:  Size  Location     Type
  6625 ;;		None               void
  6626 ;; Registers used:
  6627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6628 ;; Tracked objects:
  6629 ;;		On entry : 0/0
  6630 ;;		On exit  : 0/0
  6631 ;;		Unchanged: 0/0
  6632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6634 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6635 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6636 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6637 ;;Total ram usage:       15 bytes
  6638 ;; Hardware stack levels used:    1
  6639 ;; Hardware stack levels required when called:    2
  6640 ;; This function calls:
  6641 ;;		_Key_ScanFSM
  6642 ;;		_Pulse_1Khz
  6643 ;;		i2_LED_Control
  6644 ;;		i2_SetTimer0
  6645 ;;		i2___llmod
  6646 ;; This function is called by:
  6647 ;;		Interrupt level 2
  6648 ;; This function uses a non-reentrant model
  6649 ;;
  6650                           
  6651                           	psect	intcode
  6652  000008                     __pintcode:
  6653                           	opt stack 0
  6654  000008                     _Sys_Cyc:
  6655                           	opt stack 23
  6656                           
  6657                           ;incstack = 0
  6658  000008  CFFA F00A          	movff	pclath,??_Sys_Cyc
  6659  00000C  CFFB F00B          	movff	pclatu,??_Sys_Cyc+1
  6660  000010  CFE9 F00C          	movff	fsr0l,??_Sys_Cyc+2
  6661  000014  CFEA F00D          	movff	fsr0h,??_Sys_Cyc+3
  6662  000018  CFE1 F00E          	movff	fsr1l,??_Sys_Cyc+4
  6663  00001C  CFE2 F00F          	movff	fsr1h,??_Sys_Cyc+5
  6664  000020  CFD9 F010          	movff	fsr2l,??_Sys_Cyc+6
  6665  000024  CFDA F011          	movff	fsr2h,??_Sys_Cyc+7
  6666  000028  CFF3 F012          	movff	prodl,??_Sys_Cyc+8
  6667  00002C  CFF4 F013          	movff	prodh,??_Sys_Cyc+9
  6668  000030  CFF6 F014          	movff	tblptrl,??_Sys_Cyc+10
  6669  000034  CFF7 F015          	movff	tblptrh,??_Sys_Cyc+11
  6670  000038  CFF8 F016          	movff	tblptru,??_Sys_Cyc+12
  6671  00003C  CFF5 F017          	movff	tablat,??_Sys_Cyc+13
  6672                           
  6673                           ;My_Timer.c: 102: static unsigned char _overturn_LED = 0;
  6674                           ;My_Timer.c: 103: static char _Byte;
  6675                           ;My_Timer.c: 104: static char _flag = 0;
  6676                           ;My_Timer.c: 105: unsigned char _temp;
  6677                           ;My_Timer.c: 108: if(TMR0IF)
  6678  000040  A4F2               	btfss	intcon,2,c	;volatile
  6679  000042  D06D               	goto	i2l3217
  6680                           
  6681                           ;My_Timer.c: 109: {
  6682                           ;My_Timer.c: 110: g_Timer_Cyc = (g_Timer_Cyc+1) % 4294967296;
  6683  000044  0E01               	movlw	1
  6684  000046  2433               	addwf	_g_Timer_Cyc,w,c
  6685  000048  6E01               	movwf	i2___llmod@dividend,c
  6686  00004A  0E00               	movlw	0
  6687  00004C  2034               	addwfc	_g_Timer_Cyc+1,w,c
  6688  00004E  6E02               	movwf	i2___llmod@dividend+1,c
  6689  000050  0E00               	movlw	0
  6690  000052  2035               	addwfc	_g_Timer_Cyc+2,w,c
  6691  000054  6E03               	movwf	i2___llmod@dividend+2,c
  6692  000056  0E00               	movlw	0
  6693  000058  2036               	addwfc	_g_Timer_Cyc+3,w,c
  6694  00005A  6E04               	movwf	i2___llmod@dividend+3,c
  6695  00005C  0E00               	movlw	0
  6696  00005E  6E05               	movwf	i2___llmod@divisor,c
  6697  000060  0E00               	movlw	0
  6698  000062  6E06               	movwf	i2___llmod@divisor+1,c
  6699  000064  0E00               	movlw	0
  6700  000066  6E07               	movwf	i2___llmod@divisor+2,c
  6701  000068  0E00               	movlw	0
  6702  00006A  6E08               	movwf	i2___llmod@divisor+3,c
  6703  00006C  EC4C  F008         	call	i2___llmod	;wreg free
  6704  000070  C001  F033         	movff	?i2___llmod,_g_Timer_Cyc
  6705  000074  C002  F034         	movff	?i2___llmod+1,_g_Timer_Cyc+1
  6706  000078  C003  F035         	movff	?i2___llmod+2,_g_Timer_Cyc+2
  6707  00007C  C004  F036         	movff	?i2___llmod+3,_g_Timer_Cyc+3
  6708                           
  6709                           ;My_Timer.c: 111: SetTimer0(8);
  6710  000080  0E00               	movlw	0
  6711  000082  6E02               	movwf	i2SetTimer0@_tmr+1,c
  6712  000084  0E08               	movlw	8
  6713  000086  6E01               	movwf	i2SetTimer0@_tmr,c
  6714  000088  EC3F  F00B         	call	i2_SetTimer0	;wreg free
  6715                           
  6716                           ;My_Timer.c: 114: if( g_Timer_Cyc%300 == 0 )
  6717  00008C  C033  F001         	movff	_g_Timer_Cyc,i2___llmod@dividend
  6718  000090  C034  F002         	movff	_g_Timer_Cyc+1,i2___llmod@dividend+1
  6719  000094  C035  F003         	movff	_g_Timer_Cyc+2,i2___llmod@dividend+2
  6720  000098  C036  F004         	movff	_g_Timer_Cyc+3,i2___llmod@dividend+3
  6721  00009C  0E2C               	movlw	44
  6722  00009E  6E05               	movwf	i2___llmod@divisor,c
  6723  0000A0  0E01               	movlw	1
  6724  0000A2  6E06               	movwf	i2___llmod@divisor+1,c
  6725  0000A4  0E00               	movlw	0
  6726  0000A6  6E07               	movwf	i2___llmod@divisor+2,c
  6727  0000A8  0E00               	movlw	0
  6728  0000AA  6E08               	movwf	i2___llmod@divisor+3,c
  6729  0000AC  EC4C  F008         	call	i2___llmod	;wreg free
  6730  0000B0  5001               	movf	?i2___llmod,w,c
  6731  0000B2  1002               	iorwf	?i2___llmod+1,w,c
  6732  0000B4  1003               	iorwf	?i2___llmod+2,w,c
  6733  0000B6  1004               	iorwf	?i2___llmod+3,w,c
  6734  0000B8  A4D8               	btfss	status,2,c
  6735  0000BA  D010               	goto	i2l3211
  6736                           
  6737                           ;My_Timer.c: 115: {
  6738                           ;My_Timer.c: 116: _overturn_LED = ~_overturn_LED;
  6739  0000BC  1E3D               	comf	Sys_Cyc@_overturn_LED,f,c
  6740                           
  6741                           ;My_Timer.c: 117: if(_overturn_LED) LED_Control(3,1);
  6742  0000BE  503D               	movf	Sys_Cyc@_overturn_LED,w,c
  6743  0000C0  B4D8               	btfsc	status,2,c
  6744  0000C2  D006               	goto	i2l3209
  6745  0000C4  0E01               	movlw	1
  6746  0000C6  6E01               	movwf	i2LED_Control@_switch,c
  6747  0000C8  0E03               	movlw	3
  6748  0000CA  EC3A  F00A         	call	i2_LED_Control
  6749  0000CE  D006               	goto	i2l3211
  6750  0000D0                     i2l3209:
  6751                           
  6752                           ;My_Timer.c: 118: else LED_Control(3,0);
  6753  0000D0  0E00               	movlw	0
  6754  0000D2  6E01               	movwf	i2LED_Control@_switch,c
  6755  0000D4  0E03               	movlw	3
  6756  0000D6  EC3A  F00A         	call	i2_LED_Control
  6757  0000DA  D000               	goto	i2l3211
  6758  0000DC                     i2l3211:
  6759                           
  6760                           ;My_Timer.c: 119: }
  6761                           ;My_Timer.c: 122: if( gs_Handle_Switch._1Khz )
  6762  0000DC  5041               	movf	_gs_Handle_Switch,w,c
  6763  0000DE  B4D8               	btfsc	status,2,c
  6764  0000E0  D003               	goto	i2l304
  6765                           
  6766                           ;My_Timer.c: 123: Pulse_1Khz(1);
  6767  0000E2  0E01               	movlw	1
  6768  0000E4  EC7E  F009         	call	_Pulse_1Khz
  6769  0000E8                     i2l304:
  6770                           
  6771                           ;My_Timer.c: 126: if( g_Timer_Cyc%10 == 0 )
  6772  0000E8  C033  F001         	movff	_g_Timer_Cyc,i2___llmod@dividend
  6773  0000EC  C034  F002         	movff	_g_Timer_Cyc+1,i2___llmod@dividend+1
  6774  0000F0  C035  F003         	movff	_g_Timer_Cyc+2,i2___llmod@dividend+2
  6775  0000F4  C036  F004         	movff	_g_Timer_Cyc+3,i2___llmod@dividend+3
  6776  0000F8  0E0A               	movlw	10
  6777  0000FA  6E05               	movwf	i2___llmod@divisor,c
  6778  0000FC  0E00               	movlw	0
  6779  0000FE  6E06               	movwf	i2___llmod@divisor+1,c
  6780  000100  0E00               	movlw	0
  6781  000102  6E07               	movwf	i2___llmod@divisor+2,c
  6782  000104  0E00               	movlw	0
  6783  000106  6E08               	movwf	i2___llmod@divisor+3,c
  6784  000108  EC4C  F008         	call	i2___llmod	;wreg free
  6785  00010C  5001               	movf	?i2___llmod,w,c
  6786  00010E  1002               	iorwf	?i2___llmod+1,w,c
  6787  000110  1003               	iorwf	?i2___llmod+2,w,c
  6788  000112  1004               	iorwf	?i2___llmod+3,w,c
  6789  000114  A4D8               	btfss	status,2,c
  6790  000116  D003               	goto	i2l3217
  6791                           
  6792                           ;My_Timer.c: 127: Key_ScanFSM();
  6793  000118  EC51  F009         	call	_Key_ScanFSM	;wreg free
  6794  00011C  D000               	goto	i2l3217
  6795  00011E                     i2l3217:
  6796                           
  6797                           ;My_Timer.c: 128: }
  6798                           ;My_Timer.c: 131: if( RC1IF )
  6799  00011E  AA9E               	btfss	3998,5,c	;volatile
  6800  000120  D023               	goto	i2l311
  6801                           
  6802                           ;My_Timer.c: 132: {
  6803                           ;My_Timer.c: 133: _temp = RCREG1;
  6804  000122  CFAE F018          	movff	4014,Sys_Cyc@_temp	;volatile
  6805                           
  6806                           ;My_Timer.c: 134: if( g_RS485_Receive_Flag == 0 )
  6807  000126  5040               	movf	_g_RS485_Receive_Flag,w,c
  6808  000128  A4D8               	btfss	status,2,c
  6809  00012A  D01E               	goto	i2l311
  6810                           
  6811                           ;My_Timer.c: 135: {
  6812                           ;My_Timer.c: 137: if( _temp == 0xff )
  6813  00012C  2818               	incf	Sys_Cyc@_temp,w,c
  6814  00012E  A4D8               	btfss	status,2,c
  6815  000130  D004               	goto	i2l308
  6816                           
  6817                           ;My_Timer.c: 138: {
  6818                           ;My_Timer.c: 139: _Byte = 10 ;
  6819  000132  0E0A               	movlw	10
  6820  000134  6E3B               	movwf	Sys_Cyc@_Byte,c
  6821                           
  6822                           ;My_Timer.c: 140: _flag = 0;
  6823  000136  0E00               	movlw	0
  6824  000138  6E3C               	movwf	Sys_Cyc@_flag,c
  6825  00013A                     i2l308:
  6826                           
  6827                           ;My_Timer.c: 141: }
  6828                           ;My_Timer.c: 144: if ( _flag == 0 )
  6829  00013A  503C               	movf	Sys_Cyc@_flag,w,c
  6830  00013C  A4D8               	btfss	status,2,c
  6831  00013E  D00C               	goto	i2l3231
  6832                           
  6833                           ;My_Timer.c: 145: {
  6834                           ;My_Timer.c: 146: _Byte -- ;
  6835  000140  063B               	decf	Sys_Cyc@_Byte,f,c
  6836                           
  6837                           ;My_Timer.c: 147: ga_RS485_ReceiveBuff[ _Byte ] = _temp;
  6838  000142  503B               	movf	Sys_Cyc@_Byte,w,c
  6839  000144  0D01               	mullw	1
  6840  000146  0EDA               	movlw	low _ga_RS485_ReceiveBuff
  6841  000148  24F3               	addwf	prodl,w,c
  6842  00014A  6ED9               	movwf	fsr2l,c
  6843  00014C  0E00               	movlw	high _ga_RS485_ReceiveBuff
  6844  00014E  20F4               	addwfc	prodh,w,c
  6845  000150  6EDA               	movwf	fsr2h,c
  6846  000152  C018  FFDF         	movff	Sys_Cyc@_temp,indf2
  6847  000156  D000               	goto	i2l3231
  6848  000158                     i2l3231:
  6849                           
  6850                           ;My_Timer.c: 148: }
  6851                           ;My_Timer.c: 151: if( _Byte == 0 )
  6852  000158  503B               	movf	Sys_Cyc@_Byte,w,c
  6853  00015A  A4D8               	btfss	status,2,c
  6854  00015C  D005               	goto	i2l311
  6855                           
  6856                           ;My_Timer.c: 152: {
  6857                           ;My_Timer.c: 153: g_RS485_Receive_Flag = 1 ;
  6858  00015E  0E01               	movlw	1
  6859  000160  6E40               	movwf	_g_RS485_Receive_Flag,c
  6860                           
  6861                           ;My_Timer.c: 154: _flag = 1;
  6862  000162  0E01               	movlw	1
  6863  000164  6E3C               	movwf	Sys_Cyc@_flag,c
  6864  000166  D000               	goto	i2l311
  6865  000168                     i2l311:
  6866  000168  C017  FFF5         	movff	??_Sys_Cyc+13,tablat
  6867  00016C  C016  FFF8         	movff	??_Sys_Cyc+12,tblptru
  6868  000170  C015  FFF7         	movff	??_Sys_Cyc+11,tblptrh
  6869  000174  C014  FFF6         	movff	??_Sys_Cyc+10,tblptrl
  6870  000178  C013  FFF4         	movff	??_Sys_Cyc+9,prodh
  6871  00017C  C012  FFF3         	movff	??_Sys_Cyc+8,prodl
  6872  000180  C011  FFDA         	movff	??_Sys_Cyc+7,fsr2h
  6873  000184  C010  FFD9         	movff	??_Sys_Cyc+6,fsr2l
  6874  000188  C00F  FFE2         	movff	??_Sys_Cyc+5,fsr1h
  6875  00018C  C00E  FFE1         	movff	??_Sys_Cyc+4,fsr1l
  6876  000190  C00D  FFEA         	movff	??_Sys_Cyc+3,fsr0h
  6877  000194  C00C  FFE9         	movff	??_Sys_Cyc+2,fsr0l
  6878  000198  C00B  FFFB         	movff	??_Sys_Cyc+1,pclatu
  6879  00019C  C00A  FFFA         	movff	??_Sys_Cyc,pclath
  6880  0001A0  0011               	retfie		f
  6881  0001A2                     __end_of_Sys_Cyc:
  6882                           	opt stack 0
  6883                           pclatu	equ	0xFFB
  6884                           pclath	equ	0xFFA
  6885                           tblptru	equ	0xFF8
  6886                           tblptrh	equ	0xFF7
  6887                           tblptrl	equ	0xFF6
  6888                           tablat	equ	0xFF5
  6889                           prodh	equ	0xFF4
  6890                           prodl	equ	0xFF3
  6891                           intcon	equ	0xFF2
  6892                           postinc0	equ	0xFEE
  6893                           fsr0h	equ	0xFEA
  6894                           fsr0l	equ	0xFE9
  6895                           wreg	equ	0xFE8
  6896                           indf1	equ	0xFE7
  6897                           postinc1	equ	0xFE6
  6898                           postdec1	equ	0xFE5
  6899                           fsr1h	equ	0xFE2
  6900                           fsr1l	equ	0xFE1
  6901                           indf2	equ	0xFDF
  6902                           postinc2	equ	0xFDE
  6903                           postdec2	equ	0xFDD
  6904                           plusw2	equ	0xFDB
  6905                           fsr2h	equ	0xFDA
  6906                           fsr2l	equ	0xFD9
  6907                           status	equ	0xFD8
  6908                           
  6909 ;; *************** function i2___llmod *****************
  6910 ;; Defined at:
  6911 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  6912 ;; Parameters:    Size  Location     Type
  6913 ;;  dividend        4    0[COMRAM] unsigned long 
  6914 ;;  divisor         4    4[COMRAM] unsigned long 
  6915 ;; Auto vars:     Size  Location     Type
  6916 ;;  __llmod         1    8[COMRAM] unsigned char 
  6917 ;; Return value:  Size  Location     Type
  6918 ;;                  4    0[COMRAM] unsigned long 
  6919 ;; Registers used:
  6920 ;;		wreg, status,2, status,0
  6921 ;; Tracked objects:
  6922 ;;		On entry : 0/0
  6923 ;;		On exit  : 0/0
  6924 ;;		Unchanged: 0/0
  6925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6926 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6927 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6929 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6930 ;;Total ram usage:        9 bytes
  6931 ;; Hardware stack levels used:    1
  6932 ;; This function calls:
  6933 ;;		Nothing
  6934 ;; This function is called by:
  6935 ;;		_Sys_Cyc
  6936 ;; This function uses a non-reentrant model
  6937 ;;
  6938                           
  6939                           	psect	text46
  6940  001098                     __ptext46:
  6941                           	opt stack 0
  6942  001098                     i2___llmod:
  6943                           	opt stack 24
  6944                           
  6945                           ;incstack = 0
  6946  001098  5005               	movf	i2___llmod@divisor,w,c
  6947  00109A  1006               	iorwf	i2___llmod@divisor+1,w,c
  6948  00109C  1007               	iorwf	i2___llmod@divisor+2,w,c
  6949  00109E  1008               	iorwf	i2___llmod@divisor+3,w,c
  6950  0010A0  B4D8               	btfsc	status,2,c
  6951  0010A2  D029               	goto	i2l1119
  6952  0010A4  0E01               	movlw	1
  6953  0010A6  6E09               	movwf	i2___llmod@counter,c
  6954  0010A8  D007               	goto	i2l3169
  6955  0010AA                     i2l3167:
  6956  0010AA  90D8               	bcf	status,0,c
  6957  0010AC  3605               	rlcf	i2___llmod@divisor,f,c
  6958  0010AE  3606               	rlcf	i2___llmod@divisor+1,f,c
  6959  0010B0  3607               	rlcf	i2___llmod@divisor+2,f,c
  6960  0010B2  3608               	rlcf	i2___llmod@divisor+3,f,c
  6961  0010B4  2A09               	incf	i2___llmod@counter,f,c
  6962  0010B6  D000               	goto	i2l3169
  6963  0010B8                     i2l3169:
  6964  0010B8  BE08               	btfsc	i2___llmod@divisor+3,7,c
  6965  0010BA  D002               	goto	i2l3171
  6966  0010BC  D7F6               	goto	i2l3167
  6967  0010BE  D000               	goto	i2l3171
  6968  0010C0                     i2l3171:
  6969  0010C0  5005               	movf	i2___llmod@divisor,w,c
  6970  0010C2  5C01               	subwf	i2___llmod@dividend,w,c
  6971  0010C4  5006               	movf	i2___llmod@divisor+1,w,c
  6972  0010C6  5802               	subwfb	i2___llmod@dividend+1,w,c
  6973  0010C8  5007               	movf	i2___llmod@divisor+2,w,c
  6974  0010CA  5803               	subwfb	i2___llmod@dividend+2,w,c
  6975  0010CC  5008               	movf	i2___llmod@divisor+3,w,c
  6976  0010CE  5804               	subwfb	i2___llmod@dividend+3,w,c
  6977  0010D0  A0D8               	btfss	status,0,c
  6978  0010D2  D009               	goto	i2l3175
  6979  0010D4  5005               	movf	i2___llmod@divisor,w,c
  6980  0010D6  5E01               	subwf	i2___llmod@dividend,f,c
  6981  0010D8  5006               	movf	i2___llmod@divisor+1,w,c
  6982  0010DA  5A02               	subwfb	i2___llmod@dividend+1,f,c
  6983  0010DC  5007               	movf	i2___llmod@divisor+2,w,c
  6984  0010DE  5A03               	subwfb	i2___llmod@dividend+2,f,c
  6985  0010E0  5008               	movf	i2___llmod@divisor+3,w,c
  6986  0010E2  5A04               	subwfb	i2___llmod@dividend+3,f,c
  6987  0010E4  D000               	goto	i2l3175
  6988  0010E6                     i2l3175:
  6989  0010E6  90D8               	bcf	status,0,c
  6990  0010E8  3208               	rrcf	i2___llmod@divisor+3,f,c
  6991  0010EA  3207               	rrcf	i2___llmod@divisor+2,f,c
  6992  0010EC  3206               	rrcf	i2___llmod@divisor+1,f,c
  6993  0010EE  3205               	rrcf	i2___llmod@divisor,f,c
  6994  0010F0  2E09               	decfsz	i2___llmod@counter,f,c
  6995  0010F2  D7E6               	goto	i2l3171
  6996  0010F4  D000               	goto	i2l1119
  6997  0010F6                     i2l1119:
  6998  0010F6  C001  F001         	movff	i2___llmod@dividend,?i2___llmod
  6999  0010FA  C002  F002         	movff	i2___llmod@dividend+1,?i2___llmod+1
  7000  0010FE  C003  F003         	movff	i2___llmod@dividend+2,?i2___llmod+2
  7001  001102  C004  F004         	movff	i2___llmod@dividend+3,?i2___llmod+3
  7002  001106  0012               	return		;funcret
  7003  001108                     __end_ofi2___llmod:
  7004                           	opt stack 0
  7005                           pclatu	equ	0xFFB
  7006                           pclath	equ	0xFFA
  7007                           tblptru	equ	0xFF8
  7008                           tblptrh	equ	0xFF7
  7009                           tblptrl	equ	0xFF6
  7010                           tablat	equ	0xFF5
  7011                           prodh	equ	0xFF4
  7012                           prodl	equ	0xFF3
  7013                           intcon	equ	0xFF2
  7014                           postinc0	equ	0xFEE
  7015                           fsr0h	equ	0xFEA
  7016                           fsr0l	equ	0xFE9
  7017                           wreg	equ	0xFE8
  7018                           indf1	equ	0xFE7
  7019                           postinc1	equ	0xFE6
  7020                           postdec1	equ	0xFE5
  7021                           fsr1h	equ	0xFE2
  7022                           fsr1l	equ	0xFE1
  7023                           indf2	equ	0xFDF
  7024                           postinc2	equ	0xFDE
  7025                           postdec2	equ	0xFDD
  7026                           plusw2	equ	0xFDB
  7027                           fsr2h	equ	0xFDA
  7028                           fsr2l	equ	0xFD9
  7029                           status	equ	0xFD8
  7030                           
  7031 ;; *************** function i2_SetTimer0 *****************
  7032 ;; Defined at:
  7033 ;;		line 81 in file "_01_USER/My_Timer.c"
  7034 ;; Parameters:    Size  Location     Type
  7035 ;;  _tmr            2    0[COMRAM] unsigned int 
  7036 ;; Auto vars:     Size  Location     Type
  7037 ;;		None
  7038 ;; Return value:  Size  Location     Type
  7039 ;;		None               void
  7040 ;; Registers used:
  7041 ;;		wreg, status,2, status,0
  7042 ;; Tracked objects:
  7043 ;;		On entry : 0/0
  7044 ;;		On exit  : 0/0
  7045 ;;		Unchanged: 0/0
  7046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7047 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7049 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7050 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7051 ;;Total ram usage:        4 bytes
  7052 ;; Hardware stack levels used:    1
  7053 ;; This function calls:
  7054 ;;		Nothing
  7055 ;; This function is called by:
  7056 ;;		_Sys_Cyc
  7057 ;; This function uses a non-reentrant model
  7058 ;;
  7059                           
  7060                           	psect	text47
  7061  00167E                     __ptext47:
  7062                           	opt stack 0
  7063  00167E                     i2_SetTimer0:
  7064                           	opt stack 24
  7065                           
  7066                           ;My_Timer.c: 83: if(_tmr > 0xffff) _tmr = 0xffff;
  7067                           
  7068                           ;incstack = 0
  7069  00167E  D003               	goto	i2l3131
  7070  001680  6801               	setf	i2SetTimer0@_tmr,c
  7071  001682  6802               	setf	i2SetTimer0@_tmr+1,c
  7072  001684  D000               	goto	i2l3131
  7073  001686                     i2l3131:
  7074                           
  7075                           ;My_Timer.c: 84: _tmr=0xffff-_tmr;
  7076  001686  C001  F003         	movff	i2SetTimer0@_tmr,??i2_SetTimer0
  7077  00168A  C002  F004         	movff	i2SetTimer0@_tmr+1,??i2_SetTimer0+1
  7078  00168E  1E03               	comf	??i2_SetTimer0,f,c
  7079  001690  1E04               	comf	??i2_SetTimer0+1,f,c
  7080  001692  4A03               	infsnz	??i2_SetTimer0,f,c
  7081  001694  2A04               	incf	??i2_SetTimer0+1,f,c
  7082  001696  0EFF               	movlw	255
  7083  001698  2403               	addwf	??i2_SetTimer0,w,c
  7084  00169A  6E01               	movwf	i2SetTimer0@_tmr,c
  7085  00169C  0EFF               	movlw	255
  7086  00169E  2004               	addwfc	??i2_SetTimer0+1,w,c
  7087  0016A0  6E02               	movwf	i2SetTimer0@_tmr+1,c
  7088                           
  7089                           ;My_Timer.c: 85: TMR0H = _tmr/256;
  7090  0016A2  5002               	movf	i2SetTimer0@_tmr+1,w,c
  7091  0016A4  6ED7               	movwf	4055,c	;volatile
  7092                           
  7093                           ;My_Timer.c: 86: TMR0L = _tmr%256;
  7094  0016A6  C001  FFD6         	movff	i2SetTimer0@_tmr,4054	;volatile
  7095                           
  7096                           ;My_Timer.c: 87: TMR0IF = 0;
  7097  0016AA  94F2               	bcf	intcon,2,c	;volatile
  7098  0016AC  0012               	return		;funcret
  7099  0016AE                     __end_ofi2_SetTimer0:
  7100                           	opt stack 0
  7101                           pclatu	equ	0xFFB
  7102                           pclath	equ	0xFFA
  7103                           tblptru	equ	0xFF8
  7104                           tblptrh	equ	0xFF7
  7105                           tblptrl	equ	0xFF6
  7106                           tablat	equ	0xFF5
  7107                           prodh	equ	0xFF4
  7108                           prodl	equ	0xFF3
  7109                           intcon	equ	0xFF2
  7110                           postinc0	equ	0xFEE
  7111                           fsr0h	equ	0xFEA
  7112                           fsr0l	equ	0xFE9
  7113                           wreg	equ	0xFE8
  7114                           indf1	equ	0xFE7
  7115                           postinc1	equ	0xFE6
  7116                           postdec1	equ	0xFE5
  7117                           fsr1h	equ	0xFE2
  7118                           fsr1l	equ	0xFE1
  7119                           indf2	equ	0xFDF
  7120                           postinc2	equ	0xFDE
  7121                           postdec2	equ	0xFDD
  7122                           plusw2	equ	0xFDB
  7123                           fsr2h	equ	0xFDA
  7124                           fsr2l	equ	0xFD9
  7125                           status	equ	0xFD8
  7126                           
  7127 ;; *************** function i2_LED_Control *****************
  7128 ;; Defined at:
  7129 ;;		line 58 in file "_01_USER/GPIO.c"
  7130 ;; Parameters:    Size  Location     Type
  7131 ;;  _LED_num        1    wreg     unsigned char 
  7132 ;;  _switch         1    0[COMRAM] unsigned char 
  7133 ;; Auto vars:     Size  Location     Type
  7134 ;;  _LED_num        1    1[COMRAM] unsigned char 
  7135 ;; Return value:  Size  Location     Type
  7136 ;;		None               void
  7137 ;; Registers used:
  7138 ;;		wreg, status,2, status,0
  7139 ;; Tracked objects:
  7140 ;;		On entry : 0/0
  7141 ;;		On exit  : 0/0
  7142 ;;		Unchanged: 0/0
  7143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7144 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7145 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7147 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7148 ;;Total ram usage:        2 bytes
  7149 ;; Hardware stack levels used:    1
  7150 ;; This function calls:
  7151 ;;		Nothing
  7152 ;; This function is called by:
  7153 ;;		_Sys_Cyc
  7154 ;; This function uses a non-reentrant model
  7155 ;;
  7156                           
  7157                           	psect	text48
  7158  001474                     __ptext48:
  7159                           	opt stack 0
  7160  001474                     i2_LED_Control:
  7161                           	opt stack 24
  7162                           
  7163                           ;incstack = 0
  7164                           ;i2LED_Control@_LED_num stored from wreg
  7165  001474  6E02               	movwf	i2LED_Control@_LED_num,c
  7166                           
  7167                           ;GPIO.c: 62: if(_LED_num == 1)
  7168  001476  0402               	decf	i2LED_Control@_LED_num,w,c
  7169  001478  A4D8               	btfss	status,2,c
  7170  00147A  D007               	goto	i2l3147
  7171                           
  7172                           ;GPIO.c: 63: if(_switch) LED_BUS |= 0x01;
  7173  00147C  5001               	movf	i2LED_Control@_switch,w,c
  7174  00147E  B4D8               	btfsc	status,2,c
  7175  001480  D002               	goto	i2l3145
  7176  001482  803E               	bsf	_LED_BUS,0,c
  7177  001484  D002               	goto	i2l3147
  7178  001486                     i2l3145:
  7179                           
  7180                           ;GPIO.c: 64: else LED_BUS &= 0xFE;
  7181  001486  903E               	bcf	_LED_BUS,0,c
  7182  001488  D000               	goto	i2l3147
  7183  00148A                     i2l3147:
  7184                           
  7185                           ;GPIO.c: 66: if(_LED_num == 2)
  7186  00148A  0E02               	movlw	2
  7187  00148C  1802               	xorwf	i2LED_Control@_LED_num,w,c
  7188  00148E  A4D8               	btfss	status,2,c
  7189  001490  D007               	goto	i2l3155
  7190                           
  7191                           ;GPIO.c: 67: if(_switch) LED_BUS |= 0x02;
  7192  001492  5001               	movf	i2LED_Control@_switch,w,c
  7193  001494  B4D8               	btfsc	status,2,c
  7194  001496  D002               	goto	i2l3153
  7195  001498  823E               	bsf	_LED_BUS,1,c
  7196  00149A  D002               	goto	i2l3155
  7197  00149C                     i2l3153:
  7198                           
  7199                           ;GPIO.c: 68: else LED_BUS &= 0xFD;
  7200  00149C  923E               	bcf	_LED_BUS,1,c
  7201  00149E  D000               	goto	i2l3155
  7202  0014A0                     i2l3155:
  7203                           
  7204                           ;GPIO.c: 70: if(_LED_num == 3)
  7205  0014A0  0E03               	movlw	3
  7206  0014A2  1802               	xorwf	i2LED_Control@_LED_num,w,c
  7207  0014A4  A4D8               	btfss	status,2,c
  7208  0014A6  0012               	return	
  7209                           
  7210                           ;GPIO.c: 71: if(_switch) LED_BUS |= 0x04;
  7211  0014A8  5001               	movf	i2LED_Control@_switch,w,c
  7212  0014AA  B4D8               	btfsc	status,2,c
  7213  0014AC  D002               	goto	i2l3161
  7214  0014AE  843E               	bsf	_LED_BUS,2,c
  7215  0014B0  0012               	return	
  7216  0014B2                     i2l3161:
  7217                           
  7218                           ;GPIO.c: 72: else LED_BUS &= 0xFB;
  7219  0014B2  943E               	bcf	_LED_BUS,2,c
  7220  0014B4  0012               	return	
  7221  0014B6  0012               	return		;funcret
  7222  0014B8                     __end_ofi2_LED_Control:
  7223                           	opt stack 0
  7224                           pclatu	equ	0xFFB
  7225                           pclath	equ	0xFFA
  7226                           tblptru	equ	0xFF8
  7227                           tblptrh	equ	0xFF7
  7228                           tblptrl	equ	0xFF6
  7229                           tablat	equ	0xFF5
  7230                           prodh	equ	0xFF4
  7231                           prodl	equ	0xFF3
  7232                           intcon	equ	0xFF2
  7233                           postinc0	equ	0xFEE
  7234                           fsr0h	equ	0xFEA
  7235                           fsr0l	equ	0xFE9
  7236                           wreg	equ	0xFE8
  7237                           indf1	equ	0xFE7
  7238                           postinc1	equ	0xFE6
  7239                           postdec1	equ	0xFE5
  7240                           fsr1h	equ	0xFE2
  7241                           fsr1l	equ	0xFE1
  7242                           indf2	equ	0xFDF
  7243                           postinc2	equ	0xFDE
  7244                           postdec2	equ	0xFDD
  7245                           plusw2	equ	0xFDB
  7246                           fsr2h	equ	0xFDA
  7247                           fsr2l	equ	0xFD9
  7248                           status	equ	0xFD8
  7249                           
  7250 ;; *************** function _Pulse_1Khz *****************
  7251 ;; Defined at:
  7252 ;;		line 79 in file "_01_USER/SCR.c"
  7253 ;; Parameters:    Size  Location     Type
  7254 ;;  _QD             1    wreg     unsigned char 
  7255 ;; Auto vars:     Size  Location     Type
  7256 ;;  _QD             1    3[COMRAM] unsigned char 
  7257 ;;  _pulse          1    4[COMRAM] unsigned char 
  7258 ;; Return value:  Size  Location     Type
  7259 ;;		None               void
  7260 ;; Registers used:
  7261 ;;		wreg, status,2, status,0, cstack
  7262 ;; Tracked objects:
  7263 ;;		On entry : 0/0
  7264 ;;		On exit  : 0/0
  7265 ;;		Unchanged: 0/0
  7266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7268 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7270 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7271 ;;Total ram usage:        2 bytes
  7272 ;; Hardware stack levels used:    1
  7273 ;; Hardware stack levels required when called:    1
  7274 ;; This function calls:
  7275 ;;		_Delay_1Khz
  7276 ;; This function is called by:
  7277 ;;		_Sys_Cyc
  7278 ;; This function uses a non-reentrant model
  7279 ;;
  7280                           
  7281                           	psect	text49
  7282  0012FC                     __ptext49:
  7283                           	opt stack 0
  7284  0012FC                     _Pulse_1Khz:
  7285                           	opt stack 23
  7286                           
  7287                           ;incstack = 0
  7288                           ;Pulse_1Khz@_QD stored from wreg
  7289  0012FC  6E04               	movwf	Pulse_1Khz@_QD,c
  7290                           
  7291                           ;SCR.c: 81: unsigned char _pulse = 8;
  7292  0012FE  0E08               	movlw	8
  7293  001300  6E05               	movwf	Pulse_1Khz@_pulse,c
  7294                           
  7295                           ;SCR.c: 82: static unsigned char _overturn_1Khz = 0;
  7296                           ;SCR.c: 85: if(_QD == 1)
  7297  001302  0404               	decf	Pulse_1Khz@_QD,w,c
  7298  001304  B4D8               	btfsc	status,2,c
  7299  001306  D009               	goto	i2l3111
  7300  001308  D00E               	goto	i2l3113
  7301                           
  7302                           ;SCR.c: 86: while( _pulse-- )
  7303  00130A  D007               	goto	i2l3111
  7304  00130C                     i2l3103:
  7305                           
  7306                           ;SCR.c: 87: {
  7307                           ;SCR.c: 88: _overturn_1Khz =~ _overturn_1Khz;
  7308  00130C  1E3A               	comf	Pulse_1Khz@_overturn_1Khz,f,c
  7309                           
  7310                           ;SCR.c: 89: if(_overturn_1Khz) RB1 = 1;
  7311  00130E  503A               	movf	Pulse_1Khz@_overturn_1Khz,w,c
  7312                           
  7313                           ;SCR.c: 90: else RB1 = 1;
  7314  001310  8281               	bsf	3969,1,c	;volatile
  7315  001312  D000               	goto	i2l3109
  7316  001314                     i2l3109:
  7317                           
  7318                           ;SCR.c: 91: Delay_1Khz();
  7319  001314  ECD8  F00A         	call	_Delay_1Khz	;wreg free
  7320  001318  D000               	goto	i2l3111
  7321  00131A                     i2l3111:
  7322  00131A  0605               	decf	Pulse_1Khz@_pulse,f,c
  7323  00131C  2805               	incf	Pulse_1Khz@_pulse,w,c
  7324  00131E  B4D8               	btfsc	status,2,c
  7325  001320  D002               	goto	i2l3113
  7326  001322  D7F4               	goto	i2l3103
  7327  001324  D000               	goto	i2l3113
  7328  001326                     i2l3113:
  7329                           
  7330                           ;SCR.c: 92: }
  7331                           ;SCR.c: 95: if(_QD == 2)
  7332  001326  0E02               	movlw	2
  7333  001328  1804               	xorwf	Pulse_1Khz@_QD,w,c
  7334  00132A  A4D8               	btfss	status,2,c
  7335  00132C  0012               	return	
  7336                           
  7337                           ;SCR.c: 96: while( _pulse-- )
  7338  00132E  D007               	goto	i2l3125
  7339  001330                     i2l3117:
  7340                           
  7341                           ;SCR.c: 97: {
  7342                           ;SCR.c: 98: _overturn_1Khz =~ _overturn_1Khz;
  7343  001330  1E3A               	comf	Pulse_1Khz@_overturn_1Khz,f,c
  7344                           
  7345                           ;SCR.c: 99: if(_overturn_1Khz) RB0 = 1;
  7346  001332  503A               	movf	Pulse_1Khz@_overturn_1Khz,w,c
  7347                           
  7348                           ;SCR.c: 100: else RB0 = 1;
  7349  001334  8081               	bsf	3969,0,c	;volatile
  7350  001336  D000               	goto	i2l3123
  7351  001338                     i2l3123:
  7352                           
  7353                           ;SCR.c: 101: Delay_1Khz();
  7354  001338  ECD8  F00A         	call	_Delay_1Khz	;wreg free
  7355  00133C  D000               	goto	i2l3125
  7356  00133E                     i2l3125:
  7357  00133E  0605               	decf	Pulse_1Khz@_pulse,f,c
  7358  001340  2805               	incf	Pulse_1Khz@_pulse,w,c
  7359  001342  B4D8               	btfsc	status,2,c
  7360  001344  0012               	return	
  7361  001346  D7F4               	goto	i2l3117
  7362  001348  0012               	return	
  7363  00134A  0012               	return		;funcret
  7364  00134C                     __end_of_Pulse_1Khz:
  7365                           	opt stack 0
  7366                           pclatu	equ	0xFFB
  7367                           pclath	equ	0xFFA
  7368                           tblptru	equ	0xFF8
  7369                           tblptrh	equ	0xFF7
  7370                           tblptrl	equ	0xFF6
  7371                           tablat	equ	0xFF5
  7372                           prodh	equ	0xFF4
  7373                           prodl	equ	0xFF3
  7374                           intcon	equ	0xFF2
  7375                           postinc0	equ	0xFEE
  7376                           fsr0h	equ	0xFEA
  7377                           fsr0l	equ	0xFE9
  7378                           wreg	equ	0xFE8
  7379                           indf1	equ	0xFE7
  7380                           postinc1	equ	0xFE6
  7381                           postdec1	equ	0xFE5
  7382                           fsr1h	equ	0xFE2
  7383                           fsr1l	equ	0xFE1
  7384                           indf2	equ	0xFDF
  7385                           postinc2	equ	0xFDE
  7386                           postdec2	equ	0xFDD
  7387                           plusw2	equ	0xFDB
  7388                           fsr2h	equ	0xFDA
  7389                           fsr2l	equ	0xFD9
  7390                           status	equ	0xFD8
  7391                           
  7392 ;; *************** function _Delay_1Khz *****************
  7393 ;; Defined at:
  7394 ;;		line 62 in file "_01_USER/SCR.c"
  7395 ;; Parameters:    Size  Location     Type
  7396 ;;		None
  7397 ;; Auto vars:     Size  Location     Type
  7398 ;;  c               1    2[COMRAM] unsigned char 
  7399 ;;  b               1    1[COMRAM] unsigned char 
  7400 ;;  a               1    0[COMRAM] unsigned char 
  7401 ;; Return value:  Size  Location     Type
  7402 ;;		None               void
  7403 ;; Registers used:
  7404 ;;		wreg, status,2, status,0
  7405 ;; Tracked objects:
  7406 ;;		On entry : 0/0
  7407 ;;		On exit  : 0/0
  7408 ;;		Unchanged: 0/0
  7409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7411 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7413 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7414 ;;Total ram usage:        3 bytes
  7415 ;; Hardware stack levels used:    1
  7416 ;; This function calls:
  7417 ;;		Nothing
  7418 ;; This function is called by:
  7419 ;;		_Pulse_1Khz
  7420 ;; This function uses a non-reentrant model
  7421 ;;
  7422                           
  7423                           	psect	text50
  7424  0015B0                     __ptext50:
  7425                           	opt stack 0
  7426  0015B0                     _Delay_1Khz:
  7427                           	opt stack 23
  7428                           
  7429                           ;SCR.c: 64: unsigned char a,b,c;
  7430                           ;SCR.c: 65: for(c=1;c>0;c--)
  7431                           
  7432                           ;incstack = 0
  7433  0015B0  0E01               	movlw	1
  7434  0015B2  6E03               	movwf	Delay_1Khz@c,c
  7435  0015B4  5003               	movf	Delay_1Khz@c,w,c
  7436  0015B6  B4D8               	btfsc	status,2,c
  7437  0015B8  0012               	return	
  7438  0015BA  D001               	goto	i2l2989
  7439  0015BC  0012               	return	
  7440  0015BE                     i2l2989:
  7441                           
  7442                           ;SCR.c: 66: for(b=32;b>0;b--)
  7443  0015BE  0E20               	movlw	32
  7444  0015C0  6E02               	movwf	Delay_1Khz@b,c
  7445  0015C2  5002               	movf	Delay_1Khz@b,w,c
  7446  0015C4  B4D8               	btfsc	status,2,c
  7447  0015C6  D00D               	goto	i2l3005
  7448  0015C8  D001               	goto	i2l2993
  7449  0015CA  D00B               	goto	i2l3005
  7450  0015CC                     i2l2993:
  7451                           
  7452                           ;SCR.c: 67: for(a=2;a>0;a--);
  7453  0015CC  0E02               	movlw	2
  7454  0015CE  6E01               	movwf	Delay_1Khz@a,c
  7455  0015D0  5001               	movf	Delay_1Khz@a,w,c
  7456  0015D2  B4D8               	btfsc	status,2,c
  7457  0015D4  D004               	goto	i2l3001
  7458  0015D6  D001               	goto	i2l2997
  7459  0015D8  D002               	goto	i2l3001
  7460  0015DA                     i2l2997:
  7461  0015DA  0601               	decf	Delay_1Khz@a,f,c
  7462  0015DC  D7F9               	goto	L10
  7463  0015DE                     i2l3001:
  7464  0015DE  0602               	decf	Delay_1Khz@b,f,c
  7465  0015E0  D7F0               	goto	L11
  7466  0015E2                     i2l3005:
  7467  0015E2  0603               	decf	Delay_1Khz@c,f,c
  7468  0015E4  D7E7               	goto	L12
  7469  0015E6  0012               	return		;funcret
  7470  0015E8                     __end_of_Delay_1Khz:
  7471                           	opt stack 0
  7472                           pclatu	equ	0xFFB
  7473                           pclath	equ	0xFFA
  7474                           tblptru	equ	0xFF8
  7475                           tblptrh	equ	0xFF7
  7476                           tblptrl	equ	0xFF6
  7477                           tablat	equ	0xFF5
  7478                           prodh	equ	0xFF4
  7479                           prodl	equ	0xFF3
  7480                           intcon	equ	0xFF2
  7481                           postinc0	equ	0xFEE
  7482                           fsr0h	equ	0xFEA
  7483                           fsr0l	equ	0xFE9
  7484                           wreg	equ	0xFE8
  7485                           indf1	equ	0xFE7
  7486                           postinc1	equ	0xFE6
  7487                           postdec1	equ	0xFE5
  7488                           fsr1h	equ	0xFE2
  7489                           fsr1l	equ	0xFE1
  7490                           indf2	equ	0xFDF
  7491                           postinc2	equ	0xFDE
  7492                           postdec2	equ	0xFDD
  7493                           plusw2	equ	0xFDB
  7494                           fsr2h	equ	0xFDA
  7495                           fsr2l	equ	0xFD9
  7496                           status	equ	0xFD8
  7497                           
  7498 ;; *************** function _Key_ScanFSM *****************
  7499 ;; Defined at:
  7500 ;;		line 91 in file "_01_USER/Key.c"
  7501 ;; Parameters:    Size  Location     Type
  7502 ;;		None
  7503 ;; Auto vars:     Size  Location     Type
  7504 ;;		None
  7505 ;; Return value:  Size  Location     Type
  7506 ;;		None               void
  7507 ;; Registers used:
  7508 ;;		wreg, status,2, status,0, cstack
  7509 ;; Tracked objects:
  7510 ;;		On entry : 0/0
  7511 ;;		On exit  : 0/0
  7512 ;;		Unchanged: 0/0
  7513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7518 ;;Total ram usage:        0 bytes
  7519 ;; Hardware stack levels used:    1
  7520 ;; Hardware stack levels required when called:    1
  7521 ;; This function calls:
  7522 ;;		_Key_Scan
  7523 ;; This function is called by:
  7524 ;;		_Sys_Cyc
  7525 ;; This function uses a non-reentrant model
  7526 ;;
  7527                           
  7528                           	psect	text51
  7529  0012A2                     __ptext51:
  7530                           	opt stack 0
  7531  0012A2                     _Key_ScanFSM:
  7532                           	opt stack 23
  7533                           
  7534                           ;Key.c: 93: Key_Scan();
  7535                           
  7536                           ;incstack = 0
  7537  0012A2  EC5C  F00A         	call	_Key_Scan	;wreg free
  7538                           
  7539                           ;Key.c: 94: if( s_Local_Key_FSM.key_BUS & 0x01 ) s_Local_Key_FSM.a_key_count[0]++;
  7540  0012A6  0100               	movlb	0	; () banked
  7541  0012A8  A1C5               	btfss	_s_Local_Key_FSM& (0+255),0,b	;volatile
  7542  0012AA  D004               	goto	i2l3077
  7543                           
  7544                           ; BSR set to: 0
  7545  0012AC  0100               	movlb	0	; () banked
  7546  0012AE  4BC8               	infsnz	(_s_Local_Key_FSM+3)& (0+255),f,b	;volatile
  7547  0012B0  2BC9               	incf	(_s_Local_Key_FSM+4)& (0+255),f,b	;volatile
  7548  0012B2  D000               	goto	i2l3077
  7549  0012B4                     i2l3077:
  7550                           
  7551                           ; BSR set to: 0
  7552                           ;Key.c: 95: if( s_Local_Key_FSM.key_BUS & 0x02 ) s_Local_Key_FSM.a_key_count[1]++;
  7553  0012B4  0100               	movlb	0	; () banked
  7554  0012B6  A3C5               	btfss	_s_Local_Key_FSM& (0+255),1,b	;volatile
  7555  0012B8  D004               	goto	i2l3081
  7556                           
  7557                           ; BSR set to: 0
  7558  0012BA  0100               	movlb	0	; () banked
  7559  0012BC  4BCA               	infsnz	(_s_Local_Key_FSM+5)& (0+255),f,b	;volatile
  7560  0012BE  2BCB               	incf	(_s_Local_Key_FSM+6)& (0+255),f,b	;volatile
  7561  0012C0  D000               	goto	i2l3081
  7562  0012C2                     i2l3081:
  7563                           
  7564                           ; BSR set to: 0
  7565                           ;Key.c: 96: if( s_Local_Key_FSM.key_BUS & 0x04 ) s_Local_Key_FSM.a_key_count[2]++;
  7566  0012C2  0100               	movlb	0	; () banked
  7567  0012C4  A5C5               	btfss	_s_Local_Key_FSM& (0+255),2,b	;volatile
  7568  0012C6  D004               	goto	i2l3085
  7569                           
  7570                           ; BSR set to: 0
  7571  0012C8  0100               	movlb	0	; () banked
  7572  0012CA  4BCC               	infsnz	(_s_Local_Key_FSM+7)& (0+255),f,b	;volatile
  7573  0012CC  2BCD               	incf	(_s_Local_Key_FSM+8)& (0+255),f,b	;volatile
  7574  0012CE  D000               	goto	i2l3085
  7575  0012D0                     i2l3085:
  7576                           
  7577                           ; BSR set to: 0
  7578                           ;Key.c: 97: if( s_Local_Key_FSM.key_BUS & 0x08 ) s_Local_Key_FSM.a_key_count[3]++;
  7579  0012D0  0100               	movlb	0	; () banked
  7580  0012D2  A7C5               	btfss	_s_Local_Key_FSM& (0+255),3,b	;volatile
  7581  0012D4  D004               	goto	i2l3089
  7582                           
  7583                           ; BSR set to: 0
  7584  0012D6  0100               	movlb	0	; () banked
  7585  0012D8  4BCE               	infsnz	(_s_Local_Key_FSM+9)& (0+255),f,b	;volatile
  7586  0012DA  2BCF               	incf	(_s_Local_Key_FSM+10)& (0+255),f,b	;volatile
  7587  0012DC  D000               	goto	i2l3089
  7588  0012DE                     i2l3089:
  7589                           
  7590                           ; BSR set to: 0
  7591                           ;Key.c: 98: if( s_Local_Key_FSM.key_BUS & 0x10 ) s_Local_Key_FSM.a_key_count[4]++;
  7592  0012DE  0100               	movlb	0	; () banked
  7593  0012E0  A9C5               	btfss	_s_Local_Key_FSM& (0+255),4,b	;volatile
  7594  0012E2  D004               	goto	i2l3093
  7595                           
  7596                           ; BSR set to: 0
  7597  0012E4  0100               	movlb	0	; () banked
  7598  0012E6  4BD0               	infsnz	(_s_Local_Key_FSM+11)& (0+255),f,b	;volatile
  7599  0012E8  2BD1               	incf	(_s_Local_Key_FSM+12)& (0+255),f,b	;volatile
  7600  0012EA  D000               	goto	i2l3093
  7601  0012EC                     i2l3093:
  7602                           
  7603                           ; BSR set to: 0
  7604                           ;Key.c: 99: if( s_Local_Key_FSM.key_BUS & 0x20 ) s_Local_Key_FSM.a_key_count[5]++;
  7605  0012EC  0100               	movlb	0	; () banked
  7606  0012EE  ABC5               	btfss	_s_Local_Key_FSM& (0+255),5,b	;volatile
  7607  0012F0  0012               	return	
  7608                           
  7609                           ; BSR set to: 0
  7610  0012F2  0100               	movlb	0	; () banked
  7611  0012F4  4BD2               	infsnz	(_s_Local_Key_FSM+13)& (0+255),f,b	;volatile
  7612  0012F6  2BD3               	incf	(_s_Local_Key_FSM+14)& (0+255),f,b	;volatile
  7613  0012F8  0012               	return	
  7614                           
  7615                           ; BSR set to: 0
  7616                           
  7617                           ; BSR set to: 0
  7618  0012FA  0012               	return		;funcret
  7619  0012FC                     __end_of_Key_ScanFSM:
  7620                           	opt stack 0
  7621                           pclatu	equ	0xFFB
  7622                           pclath	equ	0xFFA
  7623                           tblptru	equ	0xFF8
  7624                           tblptrh	equ	0xFF7
  7625                           tblptrl	equ	0xFF6
  7626                           tablat	equ	0xFF5
  7627                           prodh	equ	0xFF4
  7628                           prodl	equ	0xFF3
  7629                           intcon	equ	0xFF2
  7630                           postinc0	equ	0xFEE
  7631                           fsr0h	equ	0xFEA
  7632                           fsr0l	equ	0xFE9
  7633                           wreg	equ	0xFE8
  7634                           indf1	equ	0xFE7
  7635                           postinc1	equ	0xFE6
  7636                           postdec1	equ	0xFE5
  7637                           fsr1h	equ	0xFE2
  7638                           fsr1l	equ	0xFE1
  7639                           indf2	equ	0xFDF
  7640                           postinc2	equ	0xFDE
  7641                           postdec2	equ	0xFDD
  7642                           plusw2	equ	0xFDB
  7643                           fsr2h	equ	0xFDA
  7644                           fsr2l	equ	0xFD9
  7645                           status	equ	0xFD8
  7646                           
  7647 ;; *************** function _Key_Scan *****************
  7648 ;; Defined at:
  7649 ;;		line 69 in file "_01_USER/Key.c"
  7650 ;; Parameters:    Size  Location     Type
  7651 ;;		None
  7652 ;; Auto vars:     Size  Location     Type
  7653 ;;		None
  7654 ;; Return value:  Size  Location     Type
  7655 ;;		None               void
  7656 ;; Registers used:
  7657 ;;		wreg, status,2, status,0
  7658 ;; Tracked objects:
  7659 ;;		On entry : 0/0
  7660 ;;		On exit  : 0/0
  7661 ;;		Unchanged: 0/0
  7662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7667 ;;Total ram usage:        0 bytes
  7668 ;; Hardware stack levels used:    1
  7669 ;; This function calls:
  7670 ;;		Nothing
  7671 ;; This function is called by:
  7672 ;;		_Key_ScanFSM
  7673 ;; This function uses a non-reentrant model
  7674 ;;
  7675                           
  7676                           	psect	text52
  7677  0014B8                     __ptext52:
  7678                           	opt stack 0
  7679  0014B8                     _Key_Scan:
  7680                           	opt stack 23
  7681                           
  7682                           ;Key.c: 71: s_Local_Key_FSM.key_BUS = 0x00;
  7683                           
  7684                           ; BSR set to: 0
  7685                           ;incstack = 0
  7686  0014B8  0E00               	movlw	0
  7687  0014BA  0100               	movlb	0	; () banked
  7688  0014BC  6FC5               	movwf	_s_Local_Key_FSM& (0+255),b	;volatile
  7689                           
  7690                           ; BSR set to: 0
  7691                           ;Key.c: 73: if( RC1 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 0) ;
  7692  0014BE  B282               	btfsc	3970,1,c	;volatile
  7693  0014C0  D003               	goto	i2l2679
  7694                           
  7695                           ; BSR set to: 0
  7696  0014C2  0100               	movlb	0	; () banked
  7697  0014C4  81C5               	bsf	_s_Local_Key_FSM& (0+255),0,b	;volatile
  7698  0014C6  D000               	goto	i2l2679
  7699  0014C8                     i2l2679:
  7700                           
  7701                           ; BSR set to: 0
  7702                           ;Key.c: 74: if( RF1 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 1) ;
  7703  0014C8  B285               	btfsc	3973,1,c	;volatile
  7704  0014CA  D003               	goto	i2l2683
  7705                           
  7706                           ; BSR set to: 0
  7707  0014CC  0100               	movlb	0	; () banked
  7708  0014CE  83C5               	bsf	_s_Local_Key_FSM& (0+255),1,b	;volatile
  7709  0014D0  D000               	goto	i2l2683
  7710  0014D2                     i2l2683:
  7711                           
  7712                           ; BSR set to: 0
  7713                           ;Key.c: 75: if( RF2 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 2) ;
  7714  0014D2  B485               	btfsc	3973,2,c	;volatile
  7715  0014D4  D003               	goto	i2l2687
  7716                           
  7717                           ; BSR set to: 0
  7718  0014D6  0100               	movlb	0	; () banked
  7719  0014D8  85C5               	bsf	_s_Local_Key_FSM& (0+255),2,b	;volatile
  7720  0014DA  D000               	goto	i2l2687
  7721  0014DC                     i2l2687:
  7722                           
  7723                           ; BSR set to: 0
  7724                           ;Key.c: 76: if( RA4 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 3) ;
  7725  0014DC  B880               	btfsc	3968,4,c	;volatile
  7726  0014DE  D003               	goto	i2l2691
  7727                           
  7728                           ; BSR set to: 0
  7729  0014E0  0100               	movlb	0	; () banked
  7730  0014E2  87C5               	bsf	_s_Local_Key_FSM& (0+255),3,b	;volatile
  7731  0014E4  D000               	goto	i2l2691
  7732  0014E6                     i2l2691:
  7733                           
  7734                           ; BSR set to: 0
  7735                           ;Key.c: 77: if( RA5 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 4) ;
  7736  0014E6  BA80               	btfsc	3968,5,c	;volatile
  7737  0014E8  D003               	goto	i2l2695
  7738                           
  7739                           ; BSR set to: 0
  7740  0014EA  0100               	movlb	0	; () banked
  7741  0014EC  89C5               	bsf	_s_Local_Key_FSM& (0+255),4,b	;volatile
  7742  0014EE  D000               	goto	i2l2695
  7743  0014F0                     i2l2695:
  7744                           
  7745                           ; BSR set to: 0
  7746                           ;Key.c: 78: if( RF3 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 5) ;
  7747  0014F0  B685               	btfsc	3973,3,c	;volatile
  7748  0014F2  0012               	return	
  7749                           
  7750                           ; BSR set to: 0
  7751  0014F4  0100               	movlb	0	; () banked
  7752  0014F6  8BC5               	bsf	_s_Local_Key_FSM& (0+255),5,b	;volatile
  7753  0014F8  0012               	return	
  7754                           
  7755                           ; BSR set to: 0
  7756                           
  7757                           ; BSR set to: 0
  7758  0014FA  0012               	return		;funcret
  7759  0014FC                     __end_of_Key_Scan:
  7760                           	opt stack 0
  7761  0000                     pclatu	equ	0xFFB
  7762                           pclath	equ	0xFFA
  7763                           tblptru	equ	0xFF8
  7764                           tblptrh	equ	0xFF7
  7765                           tblptrl	equ	0xFF6
  7766                           tablat	equ	0xFF5
  7767                           prodh	equ	0xFF4
  7768                           prodl	equ	0xFF3
  7769                           intcon	equ	0xFF2
  7770                           postinc0	equ	0xFEE
  7771                           fsr0h	equ	0xFEA
  7772                           fsr0l	equ	0xFE9
  7773                           wreg	equ	0xFE8
  7774                           indf1	equ	0xFE7
  7775                           postinc1	equ	0xFE6
  7776                           postdec1	equ	0xFE5
  7777                           fsr1h	equ	0xFE2
  7778                           fsr1l	equ	0xFE1
  7779                           indf2	equ	0xFDF
  7780                           postinc2	equ	0xFDE
  7781                           postdec2	equ	0xFDD
  7782                           plusw2	equ	0xFDB
  7783                           fsr2h	equ	0xFDA
  7784                           fsr2l	equ	0xFD9
  7785                           status	equ	0xFD8
  7786                           pclatu	equ	0xFFB
  7787                           pclath	equ	0xFFA
  7788                           tblptru	equ	0xFF8
  7789                           tblptrh	equ	0xFF7
  7790                           tblptrl	equ	0xFF6
  7791                           tablat	equ	0xFF5
  7792                           prodh	equ	0xFF4
  7793                           prodl	equ	0xFF3
  7794                           intcon	equ	0xFF2
  7795                           postinc0	equ	0xFEE
  7796                           fsr0h	equ	0xFEA
  7797                           fsr0l	equ	0xFE9
  7798                           wreg	equ	0xFE8
  7799                           indf1	equ	0xFE7
  7800                           postinc1	equ	0xFE6
  7801                           postdec1	equ	0xFE5
  7802                           fsr1h	equ	0xFE2
  7803                           fsr1l	equ	0xFE1
  7804                           indf2	equ	0xFDF
  7805                           postinc2	equ	0xFDE
  7806                           postdec2	equ	0xFDD
  7807                           plusw2	equ	0xFDB
  7808                           fsr2h	equ	0xFDA
  7809                           fsr2l	equ	0xFD9
  7810                           status	equ	0xFD8
  7811                           
  7812                           	psect	rparam
  7813  0000                     pclatu	equ	0xFFB
  7814                           pclath	equ	0xFFA
  7815                           tblptru	equ	0xFF8
  7816                           tblptrh	equ	0xFF7
  7817                           tblptrl	equ	0xFF6
  7818                           tablat	equ	0xFF5
  7819                           prodh	equ	0xFF4
  7820                           prodl	equ	0xFF3
  7821                           intcon	equ	0xFF2
  7822                           postinc0	equ	0xFEE
  7823                           fsr0h	equ	0xFEA
  7824                           fsr0l	equ	0xFE9
  7825                           wreg	equ	0xFE8
  7826                           indf1	equ	0xFE7
  7827                           postinc1	equ	0xFE6
  7828                           postdec1	equ	0xFE5
  7829                           fsr1h	equ	0xFE2
  7830                           fsr1l	equ	0xFE1
  7831                           indf2	equ	0xFDF
  7832                           postinc2	equ	0xFDE
  7833                           postdec2	equ	0xFDD
  7834                           plusw2	equ	0xFDB
  7835                           fsr2h	equ	0xFDA
  7836                           fsr2l	equ	0xFD9
  7837                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         163
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     50      71
    BANK0           160      1     159
    BANK1           256     19      19
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    VerifyCRC@DataBuff	PTR unsigned char  size(2) Largest target is 10
		 -> ga_RS485_ReceiveBuff(BANK0[10]), ga_RS485_SendBuff(BANK0[10]), 

    RS485_ManageMessage@DataBuff	PTR unsigned char  size(2) Largest target is 10
		 -> ga_RS485_ReceiveBuff(BANK0[10]), 

    RS485_SendDate@date_dress	PTR unsigned char  size(2) Largest target is 10
		 -> ga_RS485_SendBuff(BANK0[10]), 


Critical Paths under _main in COMRAM

    _Timer0_Init->_SetTimer0
    _ShowResult->_TM1640_Show_integer
    _TM1640_Show_integer->_TM1640_Writer_Dates
    _TM1640_Show_integer->___lwdiv
    _TM1640_Writer_Dates->___lwmod
    _Relay_Control->_delay_ms
    _delay_ms->_delay1ms
    _RS485_SendDate->_VerifyCRC
    _GetADC6->___ftmul
    ___lwtoft->___ftpack
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul
    _RS485_Init->_Open1USART
    _RS485_ManageMessage->_VerifyCRC
    _VerifyCRC->___lldiv
    _Key_ManageMessage->_Key_ReadFSM
    _Init_TM1640->_TM1640_Writer_Byte
    _TM1640_Writer_Byte->_TM1640_Delay
    _TM1640_Stop->_TM1640_Delay
    _TM1640_Start->_TM1640_Delay
    _ADC6_Init->_OpenADC

Critical Paths under _Sys_Cyc in COMRAM

    _Sys_Cyc->i2___llmod
    _Pulse_1Khz->_Delay_1Khz

Critical Paths under _main in BANK0

    _Run->_RS485_SendDate

Critical Paths under _Sys_Cyc in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Run
    _GetADC6->___ftdiv
    _ManageMessage->_RS485_ManageMessage

Critical Paths under _Sys_Cyc in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Sys_Cyc in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Sys_Cyc in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Sys_Cyc in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Sys_Cyc in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Sys_Cyc in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Sys_Cyc in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Sys_Cyc in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Sys_Cyc in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Sys_Cyc in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Sys_Cyc in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Sys_Cyc in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Sys_Cyc in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Sys_Cyc in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Sys_Cyc in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   21898
                          _ADC6_Init
                        _GPIO_Config
                        _Init_TM1640
                           _Key_Init
                      _ManageMessage
                         _RS485_Init
                         _Relay_Init
                                _Run
                           _SCR_Init
                         _ShowResult
                        _Timer0_Init
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0     170
                          _SetTimer0
 ---------------------------------------------------------------------------------
 (2) _SetTimer0                                            4     2      2     170
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ShowResult                                           1     1      0    4593
                                             33 COMRAM     1     1      0
                        _LED_Control
                _TM1640_Show_integer
                _TM1640_Writer_Dates
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     415
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _TM1640_Show_integer                                  2     0      2    2672
                                             31 COMRAM     2     0      2
                _TM1640_Writer_Dates
                            ___lwdiv
                            ___lwmod
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     671
                                             24 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     546
                                             24 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _TM1640_Writer_Dates                                  2     1      1    1170
                                             29 COMRAM     2     1      1
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _LED_Control                                          2     1      1     336
                                             24 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _SCR_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Run                                                  4     4      0   12311
                                             15 BANK1      4     4      0
                            _GetADC6
                     _RS485_SendDate
                      _Relay_Control
 ---------------------------------------------------------------------------------
 (2) _Relay_Control                                        2     1      1     464
                                             29 COMRAM     2     1      1
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             2     0      2     224
                                             27 COMRAM     2     0      2
                           _delay1ms
 ---------------------------------------------------------------------------------
 (4) _delay1ms                                             3     3      0     138
                                             24 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _RS485_SendDate                                       4     1      3    2467
                                              0 BANK0      1     1      0
                                              0 BANK1      3     0      3
                          _VerifyCRC
 ---------------------------------------------------------------------------------
 (2) _GetADC6                                              0     0      0    9380
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2512
                                             32 COMRAM     3     0      3
                            _ReadADC (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3314
                                             35 COMRAM    15     9      6
                            _ReadADC (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3554
                                              0 BANK1     15     9      6
                            _ReadADC (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2404
                                             24 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) _ReadADC                                              4     2      2       0
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Relay_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RS485_Init                                           0     0      0     284
                         _Open1USART
 ---------------------------------------------------------------------------------
 (2) _Open1USART                                           3     1      2     284
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _ManageMessage                                        0     0      0    4008
                  _Key_ManageMessage
                _RS485_ManageMessage
 ---------------------------------------------------------------------------------
 (2) _RS485_ManageMessage                                 11     8      3    3251
                                              0 BANK1     11     8      3
                          _VerifyCRC
 ---------------------------------------------------------------------------------
 (3) _VerifyCRC                                           13    10      3    1941
                                             37 COMRAM    13    10      3
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     792
                                             24 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     395
                                             24 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _Key_ManageMessage                                    4     4      0     757
                                             30 COMRAM     4     4      0
                        _Key_ReadFSM
                       _Key_ResetFSM
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     223
                                             24 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) _Key_ResetFSM                                         1     1      0      67
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Key_ReadFSM                                          6     6      0     467
                                             24 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _Key_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_TM1640                                          0     0      0     272
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
 ---------------------------------------------------------------------------------
 (3) _TM1640_Writer_Byte                                   2     2      0     136
                                             26 COMRAM     2     2      0
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (3) _TM1640_Stop                                          0     0      0      68
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (3) _TM1640_Start                                         0     0      0      68
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (4) _TM1640_Delay                                         2     2      0      68
                                             24 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC6_Init                                            0     0      0     260
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     260
                                             24 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Sys_Cyc                                             15    15      0     865
                                              9 COMRAM    15    15      0
                        _Key_ScanFSM
                         _Pulse_1Khz
                      i2_LED_Control
                        i2_SetTimer0
                          i2___llmod
 ---------------------------------------------------------------------------------
 (7) i2___llmod                                            9     1      8     315
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) i2_SetTimer0                                          4     2      2      94
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) i2_LED_Control                                        2     1      1     184
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (7) _Pulse_1Khz                                           2     2      0     227
                                              3 COMRAM     2     2      0
                         _Delay_1Khz
 ---------------------------------------------------------------------------------
 (8) _Delay_1Khz                                           3     3      0     138
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (7) _Key_ScanFSM                                          0     0      0       0
                           _Key_Scan
 ---------------------------------------------------------------------------------
 (8) _Key_Scan                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC6_Init
     _OpenADC
   _GPIO_Config
   _Init_TM1640
     _TM1640_Start
       _TM1640_Delay
     _TM1640_Stop
       _TM1640_Delay
     _TM1640_Writer_Byte
       _TM1640_Delay
   _Key_Init
   _ManageMessage
     _Key_ManageMessage
       _Key_ReadFSM
       _Key_ResetFSM
       ___lbmod
     _RS485_ManageMessage
       _VerifyCRC
         ___lldiv
         ___llmod
   _RS485_Init
     _Open1USART
   _Relay_Init
   _Run
     _GetADC6
       _BusyADC
       _ConvertADC
       _ReadADC
       ___ftdiv
         _ReadADC (ARG)
         ___ftmul (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___ftmul
         _ReadADC (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___lwtoft
         _ReadADC (ARG)
         ___ftpack (ARG)
     _RS485_SendDate
       _VerifyCRC
         ___lldiv
         ___llmod
     _Relay_Control
       _delay_ms
         _delay1ms
   _SCR_Init
   _ShowResult
     _LED_Control
     _TM1640_Show_integer
       _TM1640_Writer_Dates
         _TM1640_Start
           _TM1640_Delay
         _TM1640_Stop
           _TM1640_Delay
         _TM1640_Writer_Byte
           _TM1640_Delay
         ___lwmod (ARG)
       ___lwdiv
       ___lwmod
       ___wmul (ARG)
     _TM1640_Writer_Dates
       _TM1640_Start
         _TM1640_Delay
       _TM1640_Stop
         _TM1640_Delay
       _TM1640_Writer_Byte
         _TM1640_Delay
       ___lwmod (ARG)
     ___wmul
   _Timer0_Init
     _SetTimer0

 _Sys_Cyc (ROOT)
   _Key_ScanFSM
     _Key_Scan
   _Pulse_1Khz
     _Delay_1Khz
   i2_LED_Control
   i2_SetTimer0
   i2___llmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     13      13       7        7.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      1      9F       5       99.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     32      47       1       74.7%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F9      12        0.0%
DATA                 0      0      F9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Dec 19 16:52:15 2015

                 ?_TM1640_Stop 0001   __size_of_TM1640_Writer_Dates 0022                  ?_TM1640_Delay 0001  
          ___wmul@multiplicand 001B                    __CFG_BORV$3 000000                  ?_TM1640_Start 0001  
                 _gf_ADC6_Buff 0037                   __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000  
                 __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000                   __CFG_CP4$OFF 000000  
                 __CFG_CP5$OFF 000000                   __CFG_CP6$OFF 000000                   __CFG_CP7$OFF 000000  
                          l210 0E5C                            l202 0DFE                            l211 0E78  
                          l205 0E20                            l134 05F6                            l160 07D4  
                          l234 0AEC                            l512 0FE0                            l370 1558  
                          l515 0FFA                            l509 0FC6                            l384 1816  
                          l369 1542                            l650 1238                            l643 120E  
                          l647 122A                            l584 1396                            l649 1236  
                          l973 0DA4                            _GIE 007F97                   __CFG_CPB$OFF 000000  
                          _RB0 007C08                            _RB1 007C09                            _RC0 007C10  
                          _RA4 007C04                            _RC1 007C11                            _RA5 007C05  
                          _RD0 007C18                            _RD1 007C19                            _RD2 007C1A  
                          _RD3 007C1B                            _RD4 007C1C                            _RF1 007C29  
                          _RD5 007C1D                            _RF2 007C2A                            _RD6 007C1E  
                          _RF3 007C2B                            _RD7 007C1F                   __CFG_CPD$OFF 000000  
                          _PSA 007EAB                            _Run 1108       RS485_SendDate@date_dress 0100  
                          prod 000FF3       RS485_SendDate@date_lenth 0102                   ?_LED_Control 0019  
                          wreg 000FE8                   ?_GPIO_Config 0001                     _TXSTA1bits 000FAC  
         ?_TM1640_Show_integer 0020                  ?_Key_ResetFSM 0001                    ?_RS485_Init 0001  
                ??_Key_ReadFSM 0019                   ___ftdiv@cntr 0109                  ??_Key_ScanFSM 0001  
                         ?_Run 0001                   ___ftdiv@sign 010E                           l1109 0FA0  
                         l1037 09A6                           l1119 1086                           l1172 1298  
                         l2301 1594                           l1182 13DC                           l2305 15A2  
                         l2313 15AA                           l2309 15A6                           l3401 0D8C  
                         l2433 17EC                           l3065 0ED8                           l2291 1810  
                         l2283 1806                           l2355 1570                           l2451 0610  
                         l3403 0D98                           l2435 17F2                           l2349 155C  
                         l3069 0F1A                           l2455 0642                           l2447 05CC  
                         l2439 0574                           l2711 075A                           l3415 0DBE  
                         l2289 180E                           l2481 0704                           l2465 066E  
                         l2449 05E2                           l2457 0658                           l2625 1642  
                         l2617 1628                           l2713 0760                           l3425 0F48  
                         l2801 122E                           l3409 0DAC                           l3505 0964  
                         l2297 1586                           l2641 126E                           l2627 1648  
                         l2723 07A6                           l3427 0F56                           l3603 0244  
                         l3515 09B8                           l3531 0B58                           l2477 0700  
                         l2469 067A                           l2733 07C6                           l2725 07AC  
                         l3437 0F90                           l3429 0F5E                           l3453 1076  
                         l3445 103A                           l3525 0B30                           l2637 125C  
                         l2661 13BA                           l2487 13F8                           l2751 0828  
                         l2743 07EE                           l3447 1048                           l3463 0A60  
                         l3631 0398                           l3623 034A                           l3391 0D28  
                         l2911 1458                           l2903 1442                           l2639 1266  
                         l2489 1426                           l2729 07B8                           l3449 1050  
                         l3617 02E4                           l3609 025C                           l3393 0D34  
                         l3553 0BB4                           l3545 0B8C                           l2913 145C  
                         l2905 1446                           l2649 128C                           l2665 13D0  
                         l2657 13A8                           l2763 0870                           l2755 0836  
                         l2747 080A                           l2739 07E0                           l3459 09F6  
                         l3627 0370                           l3395 0D54                           l3387 0D18  
                         l3563 0BE2                           l3555 0BBA                           l2659 13B2  
                         l2781 11FE                           l3485 0902                           l3549 0B9E  
                         l3581 0E80                           l2767 087A                           l2759 0852  
                         l3591 01F4                           l3399 0D6C                           l3479 08C8  
                         l3559 0BCC                           l3647 117C                           l3663 1136  
                         l2919 146E                           l2769 0888                           l2793 121A  
                         l2785 1206                           l2777 11F4                           l3577 0E28  
                         l2961 0FE6                           l3657 1114                           l2955 0FCC  
                         l2797 1222                           l2789 1212                           l2973 101A  
                         l2967 1000                           l3679 160A                           l2889 1656  
                         _T0CS 007EAD                           u2050 059A                           _T0SE 007EAC  
                         u2060 05B8                           u2220 1870                           u2134 06C8  
                         u2070 062E                           u2135 06C4                           u2144 06DC  
                         u2145 06D8                           _IPEN 007E87                           u3901 0B40  
                         u3831 08A4                           u3851 08DE                           u3881 0B18  
     RS485_ManageMessage@CRC_H 0108       RS485_ManageMessage@CRC_L 0109                  ??_Init_TM1640 001D  
                   _Delay_1Khz 15B0                           _main 15E8                   ___ftpack@arg 0019  
                 ___ftpack@exp 001C                           fsr0h 000FEA                           fsr1h 000FE2  
                         fsr0l 000FE9                           fsr2h 000FDA                           indf1 000FE7  
                         fsr1l 000FE1                           indf2 000FDF                           fsr2l 000FD9  
                         pclat 000FFA                __end_of_GetADC6 11E2                           prodh 000FF4  
                         prodl 000FF3                           start 01A2                  __CFG_IESO$OFF 000000  
                __CFG_FOSC$HS1 000000                  __CFG_MCLRE$ON 000000                   ___ftmul@cntr 0031  
                 ___param_bank 000010                   ___ftmul@sign 0032                __end_of_BusyADC 1876  
              __end_of_ReadADC 1868                 ??_TM1640_Delay 0019                __end_of_OpenADC 139A  
                        ??_Run 010F                ??_ManageMessage 0033                 ??_TM1640_Start 001B  
                __CFG_RETEN$ON 000000                          ?_main 0001                __end_of___lbmod 164E  
              __end_of_Sys_Cyc 01A2                __end_of___ftdiv 09E0                __end_of___lldiv 0FB2  
              __end_of___ftmul 0C0A                __end_of___llmod 1098                          _RC1IF 007CF5  
                        _T0PS0 007EA8                          _T0PS1 007EA9                          _T0PS2 007EAA  
              __end_of___lwdiv 12A2                __end_of___lwmod 13E6                          i2l311 0168  
                        i2l304 00E8                          i2l308 013A              __end_of_ADC6_Init 1848  
                        _TMR0H 000FD7                          _TMR0L 000FD6                 ??_Key_ResetFSM 0019  
        ??_TM1640_Show_integer 0022                  __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000  
                __CFG_WRT2$OFF 000000                  __CFG_WRT3$OFF 000000                  __CFG_WRT4$OFF 000000  
               __CFG_EBRT0$OFF 000000                  __CFG_WRT5$OFF 000000                 __CFG_EBRT1$OFF 000000  
                __CFG_WRT6$OFF 000000                 __CFG_EBRT2$OFF 000000                  __CFG_WRT7$OFF 000000  
               __CFG_EBRT3$OFF 000000                 __CFG_EBRT4$OFF 000000                 __CFG_FCMEN$OFF 000000  
               __CFG_EBRT5$OFF 000000                 __CFG_EBRT6$OFF 000000                 __CFG_EBRT7$OFF 000000  
             __end_of_SCR_Init 1890                  __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000  
                __CFG_WRTD$OFF 000000                 __CFG_EBRTB$OFF 000000                  ___ftpack@sign 001D  
                   _ConvertADC 1890                          tablat 000FF5                          plusw2 000FDB  
                        status 000FD8             _TM1640_Writer_Byte 153A            __end_of_Key_ReadFSM 0710  
          __end_of_Key_ScanFSM 12FC             __size_ofi2___llmod 0070                __initialization 14FC  
          __end_of_Init_TM1640 1722            __size_of_RS485_Init 0018                   __end_of_main 161C  
          ?_TM1640_Writer_Byte 0001               __end_of_Key_Init 17CE               __end_of_Key_Scan 14FC  
        i2LED_Control@_LED_num 0002                     _Open1USART 11E2                         ??_main 0033  
                __activetblptr 000000  RS485_ManageMessage@date_lenth 0102           ??_TM1640_Writer_Byte 001B  
                       _ADCON0 000FC2                         _ADCON1 000FC1                         _ADCON2 000FC0  
             ___llmod@dividend 0019                     _Relay_Init 1876                         _ADRESH 000FC4  
                       _ADRESL 000FC3                         _T08BIT 007EAE                         _ANSEL4 00792C  
                       _ANSEL6 00792E                         _ANSEL7 00792F                         _ANSEL8 007920  
             __end_of___ftpack 0DCE                      ??_GetADC6 0033                         i2l1119 10F6  
              __CFG_BBSIZ$BB2K 000000                         i2l3001 15DE                         i2l3005 15E2  
                       i2l3103 130C                         i2l3111 131A                         i2l3113 1326  
                       i2l3123 1338                         i2l3131 1686                         i2l3211 00DC  
                       i2l3117 1330                         i2l3125 133E                         i2l3109 1314  
                       i2l3231 0158                         i2l3081 12C2                         i2l3161 14B2  
                       i2l3153 149C                         i2l3145 1486                         i2l3209 00D0  
                       i2l3217 011E                         i2l3155 14A0                         i2l3147 148A  
                       i2l3171 10C0                         i2l3093 12EC                         i2l3085 12D0  
                       i2l3077 12B4                 __CFG_WDTEN$OFF 000000                         i2l3175 10E6  
                       i2l3167 10AA                         i2l3089 12DE                         i2l3169 10B8  
                       i2l2691 14E6                         i2l2683 14D2                         i2l2695 14F0  
                       i2l2687 14DC                         i2l2679 14C8                         i2l2993 15CC  
                       i2l2997 15DA                         i2l2989 15BE                  SetTimer0@_tmr 0019  
                       _RCREG1 000FAE               __end_of___lwtoft 16FC                         _RCSTA1 000FAB  
                  ?_Delay_1Khz 0001                         _TMR0IE 007F95                         _SPBRG1 000FAF  
                       _TMR0IF 007F92                         _TMR0ON 007EAF                         _TRISB0 007C98  
                       _TRISB1 007C99                         _TRISC0 007CA0                         _TRISB2 007C9A  
                       _TRISA4 007C94                         _TRISC1 007CA1                         _TRISA5 007C95  
                       _TRISD0 007CA8                         _TRISD1 007CA9                         _TRISD2 007CAA  
                       _TRISD3 007CAB                         _TRISD4 007CAC                         _TRISC6 007CA6  
                TM1640_Delay@i 001A                         _TRISF1 007CB9                         _TRISD5 007CAD  
                       _TRISC7 007CA7                         _TRISF2 007CBA                         _TRISD6 007CAE  
                       _TRISF3 007CBB                         _TRISD7 007CAF                      ??_BusyADC 0019  
                       _TXREG1 000FAD                      ??_ReadADC 001B                         _TXSTA1 000FAC  
             __end_of_delay1ms 15B0               __end_of_delay_ms 1804                  ??_Timer0_Init 001D  
                    ??_OpenADC 001B                   Sys_Cyc@_Byte 003B         TM1640_Writer_Byte@Date 001B  
                 Sys_Cyc@_flag 003C                 __CFG_XINST$OFF 000000                   Sys_Cyc@_temp 0018  
       TM1640_Writer_Byte@mask 001C        __size_of_RS485_SendDate 00C2                         ___wmul 16AE  
               __CFG_STVREN$ON 000000                      ??___lbmod 001A                      ??_Sys_Cyc 000A  
                    ??___ftdiv 0106                      ??___lldiv 0021                      ??___ftmul 002A  
                    ??___llmod 0021           Sys_Cyc@_overturn_LED 003D                      ??___lwdiv 001D  
           __size_of_SetTimer0 0030                      ??___lwmod 001D                     _ShowResult 0E90  
           LED_Control@_switch 0019                         clear_0 1502                         clear_1 150E  
         __size_of_TM1640_Stop 0024   __size_of_RS485_ManageMessage 03C8          ___ftmul@f3_as_product 002E  
                   _Pulse_1Khz 12FC             __size_of_VerifyCRC 0128              __end_ofi2___llmod 1108  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
         __size_of_LED_Control 0044           __size_of_GPIO_Config 0002                    _Key_ReadFSM 056E  
          _TM1640_Writer_Dates 178E                    ?_ConvertADC 0001           __end_of_TM1640_Delay 181E  
                  _Key_ScanFSM 12A2  RS485_ManageMessage@from_dress 010A                ___lbmod@divisor 0019  
         __end_of_TM1640_Start 178E                     __accesstop 0060        __end_of__initialization 1534  
              ___lbmod@counter 001B                    _Init_TM1640 16FC                   ?i2_SetTimer0 0001  
                ___rparam_used 000001                     ___ftdiv@f1 0100                     ___ftdiv@f2 0103  
                   ___ftdiv@f3 010A              i2___llmod@divisor 0005               Pulse_1Khz@_pulse 0005  
            i2___llmod@counter 0009           __end_of_Key_ResetFSM 1430                     ___ftmul@f1 0024  
                   ___ftmul@f2 0027                 __pcstackCOMRAM 0001         __size_ofi2_LED_Control 0044  
                 __pidataBANK0 1848                  Key_ResetFSM@t 0019                      ?_SCR_Init 0001  
         ?_TM1640_Writer_Dates 001E            __end_of_Timer0_Init 1746                    ?_Open1USART 0019  
                   ___lwtoft@c 0021            __size_of_Delay_1Khz 0038         __size_of_Relay_Control 0076  
                 ??_RS485_Init 001C                    ?_Relay_Init 0001              __end_of_SetTimer0 167E  
                   __pbssBANK0 0060                      ?_Key_Init 0001                      ?_Key_Scan 0001  
                  _ReceiveBuff 0060                __CFG_PLLCFG$OFF 000000        TM1640_Writer_Dates@Addr 001F  
      TM1640_Writer_Dates@Date 001E              __end_of_VerifyCRC 0B08          ??_TM1640_Writer_Dates 001F  
                      ?___wmul 0019                     ??_SCR_Init 0019             __end_of_RS485_Init 1836  
                  ?_ShowResult 0001            LED_Control@_LED_num 001A            __size_of_ConvertADC 0004  
                    ?___ftpack 0019                      ?___lwtoft 0021               Open1USART@config 001B  
                      _LED_BUS 003E                    ?_Pulse_1Khz 0001                      ?_delay1ms 0001  
                    ?_delay_ms 001C                  i2_LED_Control 1474                        _SPBRGH1 000FD4  
                    _ADC6_Init 1836              _ga_RS485_SendBuff 00E4                        _GetADC6 1176  
                   ??_Key_Init 0019                     ??_Key_Scan 0001                  _Relay_Control 0FB2  
          __size_of_Open1USART 0064                        _BusyADC 1868                        _ReadADC 1858  
              __CFG_PWRTEN$OFF 000000                        _OpenADC 134C                        __Hparam 0000  
                  _Timer0_Init 1722                        __Lparam 0000                 _RS485_SendDate 0DCE  
                      ___lbmod 161C                        _Sys_Cyc 0008                        ___ftdiv 088E  
                      ___lldiv 0F26                __size_of___wmul 0028                        ___ftmul 0B08  
                      ___llmod 1028                        ___lwdiv 1246                        ___lwmod 139A  
          __size_of_Relay_Init 000E    __end_of_TM1640_Show_integer 0D08                        __pcinit 14FC  
                   ??___ftpack 001E                        __ramtop 1000          __end_of_ManageMessage 17EA  
                      __ptext0 15E8                        __ptext1 1722                        __ptext2 164E  
                      __ptext3 0E90                        __ptext4 16AE                        __ptext5 0C0A  
                      __ptext6 139A                        __ptext7 1246                        __ptext8 178E  
                      __ptext9 1430                     ??___lwtoft 0024                   __size_of_Run 006E  
                   ??_delay1ms 0019          __size_of_TM1640_Delay 001A              __CFG_MSSPMSK$MSK7 000000  
               ?i2_LED_Control 0001                     ??_delay_ms 001E          __size_of_TM1640_Start 0024  
                   ?_ADC6_Init 0001                 OpenADC@config2 0019                 OpenADC@config3 001A  
         end_of_initialization 1534                   ??_Delay_1Khz 0001            __size_of_ShowResult 0096  
               ?_Relay_Control 001E          __size_of_Key_ResetFSM 004A            _RS485_ManageMessage 01A6  
              ___lldiv@divisor 001D         __end_of_RS485_SendDate 0E90              _Key_ManageMessage 0710  
              ___lldiv@counter 0025            __size_of_Pulse_1Khz 0050               _gs_Handle_Switch 0041  
         __size_ofi2_SetTimer0 0030             ?_Key_ManageMessage 0001                        postdec1 000FE5  
                      postdec2 000FDD                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE                   _TM1640_Delay 1804           ?_RS485_ManageMessage 0100  
                 _TM1640_Start 176A            ??_Key_ManageMessage 001F               TM1640_Delay@Time 0019  
           __end_of_Delay_1Khz 15E8               ___lbmod@dividend 001A                   _Key_ResetFSM 13E6  
  __size_of_TM1640_Writer_Byte 003E                   ?_Key_ReadFSM 0001                      i2___llmod 1098  
                 ??_ConvertADC 0019                   ?_Key_ScanFSM 0001            VerifyCRC@date_lenth 0028  
                  ___lbmod@rem 001C                   ?_Init_TM1640 0001                    ___ftdiv@exp 010D  
    __end_of_Key_ManageMessage 088E             i2___llmod@dividend 0001             VerifyCRC@CRC_Value 002E  
              ?_RS485_SendDate 0100                    ___ftmul@exp 002D                  ??_TM1640_Stop 001B  
               __end_of___wmul 16D6          ??_RS485_ManageMessage 0103                   ??_Open1USART 001B  
            __size_of_SCR_Init 000C             __end_of_ConvertADC 1894                ??i2_LED_Control 0002  
                ??_LED_Control 001A                  ??_GPIO_Config 0019            start_initialization 14FC  
                  _g_Timer_Cyc 0033                    __end_of_Run 1176                    ??_ADC6_Init 001E  
                 ??_Relay_Init 0019                     ?i2___llmod 0001                ??_Relay_Control 001F  
   TM1640_Show_integer@Numbers 0020                ___llmod@divisor 001D              __size_of_Key_Init 001E  
            __size_of_Key_Scan 0044                ___llmod@counter 0021                      _SetTimer0 164E  
           __end_of_Open1USART 1246                i2SetTimer0@_tmr 0001                       ??___wmul 001D  
                 ??_ShowResult 0022                      _VerifyCRC 09E0                    __pdataBANK0 00EE  
         i2LED_Control@_switch 0001             __end_of_Relay_Init 1884            __end_of_TM1640_Stop 176A  
            __size_of___ftpack 00C6                   ??_Pulse_1Khz 0004                    __pbssCOMRAM 0033  
            __size_of___lwtoft 0026                  __pcstackBANK0 00FE                  __pcstackBANK1 0100  
            __size_of_delay1ms 0038              __size_of_delay_ms 001A                       ?_GetADC6 0001  
          __end_of_LED_Control 1474            __end_of_GPIO_Config 1896             __end_of_ShowResult 0F26  
   __size_of_Key_ManageMessage 017E                       ?_BusyADC 0001                       ?_ReadADC 0019  
  __end_of_TM1640_Writer_Dates 17B0                     ?_SetTimer0 0019                       ?_OpenADC 0019  
                 ?_Timer0_Init 0001               ___lwdiv@dividend 0019              __CFG_CCP2MX$PORTC 000000  
           __end_of_Pulse_1Khz 134C                      __pintcode 0008                       ?___lbmod 0019  
                     ?_Sys_Cyc 0001                       ?___ftdiv 0100                       ?___lldiv 0019  
                     ?___ftmul 0024                       ?___llmod 0019                       ?___lwdiv 0019  
                     ?___lwmod 0019                     ?_VerifyCRC 0026                Open1USART@spbrg 0019  
         Relay_Control@_switch 001E               ___lwdiv@quotient 001D                    ??i2___llmod 0009  
                    delay1ms@a 0019                      delay1ms@b 001A                      delay1ms@c 001B  
              _s_Local_Key_FSM 00C5           __size_of_Key_ReadFSM 01A2           __size_of_Key_ScanFSM 005A  
               ___wmul@product 001D                  OpenADC@config 001D                       _PIE1bits 000F9D  
         __size_of_Init_TM1640 0026                       _PIR1bits 000F9E                       _SCR_Init 1884  
                  _TM1640_Stop 1746                     _ADCON0bits 000FC2              ___wmul@multiplier 0019  
             __CFG_SOSCSEL$DIG 000000              VerifyCRC@CRC_Byte 0032                    _LED_Control 1430  
                  _GPIO_Config 1894                    Delay_1Khz@a 0001                    Delay_1Khz@b 0002  
                  Delay_1Khz@c 0003   __size_of_TM1640_Show_integer 00FE    RS485_ManageMessage@DataBuff 0100  
                    copy_data0 1528                       _Key_Init 17B0                       _Key_Scan 14B8  
             ??_RS485_SendDate 00FE               __size_of_GetADC6 006C                  ??i2_SetTimer0 0003  
       __size_of_ManageMessage 001C                    ??_SetTimer0 001B               __size_of_BusyADC 000E  
             __size_of_ReadADC 0010                       __Hrparam 0000               __size_of_OpenADC 004E  
                     __Lrparam 0000             __CFG_BOREN$SBORDIS 000000              VerifyCRC@DataBuff 0026  
                  ??_VerifyCRC 0029             Key_ReadFSM@key_num 001E       Pulse_1Khz@_overturn_1Khz 003A  
             __size_of___lbmod 0032               __size_of_Sys_Cyc 019A               __size_of___ftdiv 0152  
             __size_of___lldiv 008C               __size_of___ftmul 0102               __size_of___llmod 0070  
             __size_of___lwdiv 005C               __size_of___lwmod 004C                       ___ftpack 0D08  
                 _g_RS485_Byte 003F           _g_RS485_Receive_Flag 0040                       ___lwtoft 16D6  
               _gsa_Handle_Msg 006A                       _delay1ms 1578     __end_of_TM1640_Writer_Byte 1578  
                     _delay_ms 17EA                ___lwdiv@divisor 001B                ___lwdiv@counter 001F  
                     __ptext10 1884                       __ptext11 1108                       __ptext20 0D08  
                     __ptext12 0FB2                       __ptext21 1858                       __ptext13 17EA  
                     __ptext30 1028                       __ptext22 1890                       __ptext14 1578  
                     __ptext31 0F26                       __ptext23 1868                       __ptext15 0DCE  
                     __ptext40 176A                       __ptext32 0710                       __ptext24 1876  
                     __ptext16 1176                       __ptext41 1804                       __ptext33 161C  
                     __ptext25 181E                       __ptext17 16D6                       __ptext50 15B0  
                     __ptext42 1894                       __ptext34 13E6                       __ptext26 11E2  
                     __ptext18 0B08                       __ptext51 12A2                       __ptext43 1836  
                     __ptext35 056E                       __ptext27 17CE                       __ptext19 088E  
                     __ptext52 14B8                       __ptext44 134C                       __ptext36 17B0  
                     __ptext28 01A6                       __ptext37 16FC                       __ptext29 09E0  
                     __ptext46 1098                       __ptext38 153A                       __ptext47 167E  
                     __ptext39 1746                       __ptext48 1474                       __ptext49 12FC  
       Relay_Control@relay_num 001F                  __size_of_main 0034            __CFG_RTCOSC$SOSCREF 000000  
  __end_of_RS485_ManageMessage 056E           __size_of_Timer0_Init 0024            __end_ofi2_SetTimer0 16AE  
          __CFG_INTOSCSEL$HIGH 000000                    delay_ms@_ms 001C                     _LED_Number 00EE  
                _ManageMessage 17CE                     _INTCONbits 000FF2          __end_ofi2_LED_Control 14B8  
                   _RS485_Init 181E                  Pulse_1Khz@_QD 0004                       intlevel2 0000  
        __end_of_Relay_Control 1028               ___lwmod@dividend 0019               ___lldiv@dividend 0019  
                   _RCSTA1bits 000FAB        Key_ReadFSM@key_num_mate 001D             __CFG_WDTPS$1048576 000000  
            _gs_Local_Key_User 00B0                 ?_ManageMessage 0001           _ga_RS485_ReceiveBuff 00DA  
             ___lldiv@quotient 0021                ___lwmod@divisor 001B                ___lwmod@counter 001D  
          __CFG_BORPWR$ZPBORMV 000000             __size_of_ADC6_Init 0012                    i2_SetTimer0 167E  
          _TM1640_Show_integer 0C0A  
