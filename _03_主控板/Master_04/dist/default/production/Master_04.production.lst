

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Dec 24 21:46:05 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F67K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    68  0000                     
    69                           	psect	idataBANK0
    70  001854                     __pidataBANK0:
    71                           	opt stack 0
    72                           
    73                           ;initializer for _LED_Number
    74  001854  3F                 	db	63
    75  001855  06                 	db	6
    76  001856  5B                 	db	91
    77  001857  4F                 	db	79
    78  001858  66                 	db	102
    79  001859  6D                 	db	109
    80  00185A  7D                 	db	125
    81  00185B  07                 	db	7
    82  00185C  7F                 	db	127
    83  00185D  6F                 	db	111
    84  00185E  77                 	db	119
    85  00185F  7C                 	db	124
    86  001860  39                 	db	57
    87  001861  5E                 	db	94
    88  001862  79                 	db	121
    89  001863  71                 	db	113
    90  0000                     _ANSEL4	set	31020
    91  0000                     _ANSEL6	set	31022
    92  0000                     _ANSEL7	set	31023
    93  0000                     _ANSEL8	set	31008
    94  0000                     _ADCON0	set	4034
    95  0000                     _ADCON0bits	set	4034
    96  0000                     _ADCON1	set	4033
    97  0000                     _ADCON2	set	4032
    98  0000                     _ADRESH	set	4036
    99  0000                     _ADRESL	set	4035
   100  0000                     _INTCONbits	set	4082
   101  0000                     _PIE1bits	set	3997
   102  0000                     _PIR1bits	set	3998
   103  0000                     _RCREG1	set	4014
   104  0000                     _RCSTA1	set	4011
   105  0000                     _RCSTA1bits	set	4011
   106  0000                     _SPBRG1	set	4015
   107  0000                     _SPBRGH1	set	4052
   108  0000                     _TMR0H	set	4055
   109  0000                     _TMR0L	set	4054
   110  0000                     _TXREG1	set	4013
   111  0000                     _TXSTA1	set	4012
   112  0000                     _TXSTA1bits	set	4012
   113  0000                     _GIE	set	32663
   114  0000                     _IPEN	set	32391
   115  0000                     _PSA	set	32427
   116  0000                     _RA4	set	31748
   117  0000                     _RA5	set	31749
   118  0000                     _RB0	set	31752
   119  0000                     _RB1	set	31753
   120  0000                     _RC0	set	31760
   121  0000                     _RC1	set	31761
   122  0000                     _RC1IF	set	31989
   123  0000                     _RD0	set	31768
   124  0000                     _RD1	set	31769
   125  0000                     _RD2	set	31770
   126  0000                     _RD3	set	31771
   127  0000                     _RD4	set	31772
   128  0000                     _RD5	set	31773
   129  0000                     _RD6	set	31774
   130  0000                     _RD7	set	31775
   131  0000                     _RF1	set	31785
   132  0000                     _RF2	set	31786
   133  0000                     _RF3	set	31787
   134  0000                     _T08BIT	set	32430
   135  0000                     _T0CS	set	32429
   136  0000                     _T0PS0	set	32424
   137  0000                     _T0PS1	set	32425
   138  0000                     _T0PS2	set	32426
   139  0000                     _T0SE	set	32428
   140  0000                     _TMR0IE	set	32661
   141  0000                     _TMR0IF	set	32658
   142  0000                     _TMR0ON	set	32431
   143  0000                     _TRISA4	set	31892
   144  0000                     _TRISA5	set	31893
   145  0000                     _TRISB0	set	31896
   146  0000                     _TRISB1	set	31897
   147  0000                     _TRISB2	set	31898
   148  0000                     _TRISC0	set	31904
   149  0000                     _TRISC1	set	31905
   150  0000                     _TRISC6	set	31910
   151  0000                     _TRISC7	set	31911
   152  0000                     _TRISD0	set	31912
   153  0000                     _TRISD1	set	31913
   154  0000                     _TRISD2	set	31914
   155  0000                     _TRISD3	set	31915
   156  0000                     _TRISD4	set	31916
   157  0000                     _TRISD5	set	31917
   158  0000                     _TRISD6	set	31918
   159  0000                     _TRISD7	set	31919
   160  0000                     _TRISF1	set	31929
   161  0000                     _TRISF2	set	31930
   162  0000                     _TRISF3	set	31931
   163                           
   164                           ; #config settings
   165  0000                     
   166                           	psect	cinit
   167  0013E6                     __pcinit:
   168                           	opt stack 0
   169  0013E6                     start_initialization:
   170                           	opt stack 0
   171  0013E6                     __initialization:
   172                           	opt stack 0
   173                           
   174                           ; Clear objects allocated to BANK1 (70 bytes)
   175  0013E6  EE01  F000         	lfsr	0,__pbssBANK1
   176  0013EA  0E46               	movlw	70
   177  0013EC                     clear_0:
   178  0013EC  6AEE               	clrf	postinc0,c
   179  0013EE  06E8               	decf	wreg,f,c
   180  0013F0  E1FD               	bnz	clear_0
   181                           
   182                           ; Clear objects allocated to BANK0 (90 bytes)
   183  0013F2  EE00  F060         	lfsr	0,__pbssBANK0
   184  0013F6  0E5A               	movlw	90
   185  0013F8                     clear_1:
   186  0013F8  6AEE               	clrf	postinc0,c
   187  0013FA  06E8               	decf	wreg,f,c
   188  0013FC  E1FD               	bnz	clear_1
   189                           
   190                           ; Clear objects allocated to COMRAM (21 bytes)
   191  0013FE  EE00  F033         	lfsr	0,__pbssCOMRAM
   192  001402  0E15               	movlw	21
   193  001404                     clear_2:
   194  001404  6AEE               	clrf	postinc0,c
   195  001406  06E8               	decf	wreg,f,c
   196  001408  E1FD               	bnz	clear_2
   197                           
   198                           ; Initialize objects allocated to BANK0 (16 bytes)
   199                           ; load TBLPTR registers with __pidataBANK0
   200  00140A  0E54               	movlw	low __pidataBANK0
   201  00140C  6EF6               	movwf	tblptrl,c
   202  00140E  0E18               	movlw	high __pidataBANK0
   203  001410  6EF7               	movwf	tblptrh,c
   204  001412  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   205  001414  6EF8               	movwf	tblptru,c
   206  001416  EE00  F0CD         	lfsr	0,__pdataBANK0
   207  00141A  EE10 F010          	lfsr	1,16
   208  00141E                     copy_data0:
   209  00141E  0009               	tblrd		*+
   210  001420  CFF5 FFEE          	movff	tablat,postinc0
   211  001424  50E5               	movf	postdec1,w,c
   212  001426  50E1               	movf	fsr1l,w,c
   213  001428  E1FA               	bnz	copy_data0
   214  00142A                     end_of_initialization:
   215                           	opt stack 0
   216  00142A                     __end_of__initialization:
   217                           	opt stack 0
   218  00142A  0100               	movlb	0
   219  00142C  EFFA  F00A         	goto	_main	;jump to C main() function
   220                           tblptru	equ	0xFF8
   221                           tblptrh	equ	0xFF7
   222                           tblptrl	equ	0xFF6
   223                           tablat	equ	0xFF5
   224                           postinc0	equ	0xFEE
   225                           wreg	equ	0xFE8
   226                           postdec1	equ	0xFE5
   227                           fsr1l	equ	0xFE1
   228                           
   229                           	psect	bssCOMRAM
   230  000033                     __pbssCOMRAM:
   231                           	opt stack 0
   232  000033                     _g_Timer_Cyc:
   233                           	opt stack 0
   234  000033                     	ds	4
   235  000037                     _gf_ADC6_Buff:
   236                           	opt stack 0
   237  000037                     	ds	3
   238  00003A                     Pulse_1Khz@_overturn_1Khz:
   239                           	opt stack 0
   240  00003A                     	ds	1
   241  00003B                     Sys_Cyc@_Byte:
   242                           	opt stack 0
   243  00003B                     	ds	1
   244  00003C                     Sys_Cyc@_flag:
   245                           	opt stack 0
   246  00003C                     	ds	1
   247  00003D                     Sys_Cyc@_overturn_LED:
   248                           	opt stack 0
   249  00003D                     	ds	1
   250  00003E                     _LED_BUS:
   251                           	opt stack 0
   252  00003E                     	ds	1
   253  00003F                     _g_RS485_Byte:
   254                           	opt stack 0
   255  00003F                     	ds	1
   256  000040                     _g_RS485_Receive_Flag:
   257                           	opt stack 0
   258  000040                     	ds	1
   259  000041                     _gs_Handle_Switch:
   260                           	opt stack 0
   261  000041                     	ds	7
   262                           tblptru	equ	0xFF8
   263                           tblptrh	equ	0xFF7
   264                           tblptrl	equ	0xFF6
   265                           tablat	equ	0xFF5
   266                           postinc0	equ	0xFEE
   267                           wreg	equ	0xFE8
   268                           postdec1	equ	0xFE5
   269                           fsr1l	equ	0xFE1
   270                           
   271                           	psect	bssBANK0
   272  000060                     __pbssBANK0:
   273                           	opt stack 0
   274  000060                     _gs_Menu:
   275                           	opt stack 0
   276  000060                     	ds	18
   277  000072                     _ReceiveBuff:
   278                           	opt stack 0
   279  000072                     	ds	10
   280  00007C                     _gs_Local_Key_User:
   281                           	opt stack 0
   282  00007C                     	ds	21
   283  000091                     _s_Local_Key_FSM:
   284                           	opt stack 0
   285  000091                     	ds	21
   286  0000A6                     _ga_RS485_ReceiveBuff:
   287                           	opt stack 0
   288  0000A6                     	ds	10
   289  0000B0                     _ga_RS485_SendBuff:
   290                           	opt stack 0
   291  0000B0                     	ds	10
   292                           tblptru	equ	0xFF8
   293                           tblptrh	equ	0xFF7
   294                           tblptrl	equ	0xFF6
   295                           tablat	equ	0xFF5
   296                           postinc0	equ	0xFEE
   297                           wreg	equ	0xFE8
   298                           postdec1	equ	0xFE5
   299                           fsr1l	equ	0xFE1
   300                           
   301                           	psect	dataBANK0
   302  0000CD                     __pdataBANK0:
   303                           	opt stack 0
   304  0000CD                     _LED_Number:
   305                           	opt stack 0
   306  0000CD                     	ds	16
   307                           tblptru	equ	0xFF8
   308                           tblptrh	equ	0xFF7
   309                           tblptrl	equ	0xFF6
   310                           tablat	equ	0xFF5
   311                           postinc0	equ	0xFEE
   312                           wreg	equ	0xFE8
   313                           postdec1	equ	0xFE5
   314                           fsr1l	equ	0xFE1
   315                           
   316                           	psect	bssBANK1
   317  000100                     __pbssBANK1:
   318                           	opt stack 0
   319  000100                     _gsa_Handle_Msg:
   320                           	opt stack 0
   321  000100                     	ds	70
   322                           tblptru	equ	0xFF8
   323                           tblptrh	equ	0xFF7
   324                           tblptrl	equ	0xFF6
   325                           tablat	equ	0xFF5
   326                           postinc0	equ	0xFEE
   327                           wreg	equ	0xFE8
   328                           postdec1	equ	0xFE5
   329                           fsr1l	equ	0xFE1
   330                           
   331                           	psect	cstackBANK0
   332  0000BA                     __pcstackBANK0:
   333                           	opt stack 0
   334  0000BA                     ?___ftdiv:
   335                           	opt stack 0
   336  0000BA                     RS485_SendDate@date_dress:
   337                           	opt stack 0
   338  0000BA                     RS485_ManageMessage@DataBuff:
   339                           	opt stack 0
   340  0000BA                     ___ftdiv@f1:
   341                           	opt stack 0
   342                           
   343                           ; 3 bytes @ 0x0
   344  0000BA                     	ds	2
   345  0000BC                     RS485_SendDate@date_lenth:
   346                           	opt stack 0
   347  0000BC                     RS485_ManageMessage@date_lenth:
   348                           	opt stack 0
   349                           
   350                           ; 1 bytes @ 0x2
   351  0000BC                     	ds	1
   352  0000BD                     ??_RS485_ManageMessage:
   353  0000BD                     ___ftdiv@f2:
   354                           	opt stack 0
   355                           
   356                           ; 3 bytes @ 0x3
   357  0000BD                     	ds	3
   358  0000C0                     ??___ftdiv:
   359                           
   360                           ; 0 bytes @ 0x6
   361  0000C0                     	ds	2
   362  0000C2                     RS485_ManageMessage@CRC_H:
   363                           	opt stack 0
   364                           
   365                           ; 1 bytes @ 0x8
   366  0000C2                     	ds	1
   367  0000C3                     RS485_ManageMessage@CRC_L:
   368                           	opt stack 0
   369  0000C3                     ___ftdiv@cntr:
   370                           	opt stack 0
   371                           
   372                           ; 1 bytes @ 0x9
   373  0000C3                     	ds	1
   374  0000C4                     RS485_ManageMessage@from_dress:
   375                           	opt stack 0
   376  0000C4                     ___ftdiv@f3:
   377                           	opt stack 0
   378                           
   379                           ; 3 bytes @ 0xA
   380  0000C4                     	ds	3
   381  0000C7                     ___ftdiv@exp:
   382                           	opt stack 0
   383                           
   384                           ; 1 bytes @ 0xD
   385  0000C7                     	ds	1
   386  0000C8                     ___ftdiv@sign:
   387                           	opt stack 0
   388                           
   389                           ; 1 bytes @ 0xE
   390  0000C8                     	ds	1
   391  0000C9                     ??_Run:
   392                           
   393                           ; 0 bytes @ 0xF
   394  0000C9                     	ds	4
   395                           tblptru	equ	0xFF8
   396                           tblptrh	equ	0xFF7
   397                           tblptrl	equ	0xFF6
   398                           tablat	equ	0xFF5
   399                           postinc0	equ	0xFEE
   400                           wreg	equ	0xFE8
   401                           postdec1	equ	0xFE5
   402                           fsr1l	equ	0xFE1
   403                           
   404                           	psect	cstackCOMRAM
   405  000001                     __pcstackCOMRAM:
   406                           	opt stack 0
   407  000001                     ?i2___llmod:
   408                           	opt stack 0
   409  000001                     Delay_1Khz@a:
   410                           	opt stack 0
   411  000001                     i2LED_Control@_switch:
   412                           	opt stack 0
   413  000001                     i2SetTimer0@_tmr:
   414                           	opt stack 0
   415  000001                     i2___llmod@dividend:
   416                           	opt stack 0
   417                           
   418                           ; 4 bytes @ 0x0
   419  000001                     	ds	1
   420  000002                     Delay_1Khz@b:
   421                           	opt stack 0
   422  000002                     i2LED_Control@_LED_num:
   423                           	opt stack 0
   424                           
   425                           ; 1 bytes @ 0x1
   426  000002                     	ds	1
   427  000003                     ??i2_SetTimer0:
   428  000003                     Delay_1Khz@c:
   429                           	opt stack 0
   430                           
   431                           ; 1 bytes @ 0x2
   432  000003                     	ds	1
   433  000004                     Pulse_1Khz@_QD:
   434                           	opt stack 0
   435                           
   436                           ; 1 bytes @ 0x3
   437  000004                     	ds	1
   438  000005                     Pulse_1Khz@_pulse:
   439                           	opt stack 0
   440  000005                     i2___llmod@divisor:
   441                           	opt stack 0
   442                           
   443                           ; 4 bytes @ 0x4
   444  000005                     	ds	4
   445  000009                     i2___llmod@counter:
   446                           	opt stack 0
   447                           
   448                           ; 1 bytes @ 0x8
   449  000009                     	ds	1
   450  00000A                     ??_Sys_Cyc:
   451                           
   452                           ; 0 bytes @ 0x9
   453  00000A                     	ds	14
   454  000018                     Sys_Cyc@_temp:
   455                           	opt stack 0
   456                           
   457                           ; 1 bytes @ 0x17
   458  000018                     	ds	1
   459  000019                     ??_Key_ReadFSM:
   460  000019                     ?_ReadADC:
   461                           	opt stack 0
   462  000019                     ?___wmul:
   463                           	opt stack 0
   464  000019                     ?___lwdiv:
   465                           	opt stack 0
   466  000019                     ?___lwmod:
   467                           	opt stack 0
   468  000019                     ?___ftpack:
   469                           	opt stack 0
   470  000019                     ?___lldiv:
   471                           	opt stack 0
   472  000019                     ?___llmod:
   473                           	opt stack 0
   474  000019                     delay1ms@a:
   475                           	opt stack 0
   476  000019                     Key_ResetFSM@t:
   477                           	opt stack 0
   478  000019                     LED_Control@_switch:
   479                           	opt stack 0
   480  000019                     TM1640_Delay@Time:
   481                           	opt stack 0
   482  000019                     OpenADC@config2:
   483                           	opt stack 0
   484  000019                     ___lbmod@divisor:
   485                           	opt stack 0
   486  000019                     SetTimer0@_tmr:
   487                           	opt stack 0
   488  000019                     Open1USART@spbrg:
   489                           	opt stack 0
   490  000019                     ___wmul@multiplier:
   491                           	opt stack 0
   492  000019                     ___lwdiv@dividend:
   493                           	opt stack 0
   494  000019                     ___lwmod@dividend:
   495                           	opt stack 0
   496  000019                     ___ftpack@arg:
   497                           	opt stack 0
   498  000019                     ___lldiv@dividend:
   499                           	opt stack 0
   500  000019                     ___llmod@dividend:
   501                           	opt stack 0
   502                           
   503                           ; 4 bytes @ 0x18
   504  000019                     	ds	1
   505  00001A                     delay1ms@b:
   506                           	opt stack 0
   507  00001A                     LED_Control@_LED_num:
   508                           	opt stack 0
   509  00001A                     TM1640_Delay@i:
   510                           	opt stack 0
   511  00001A                     OpenADC@config3:
   512                           	opt stack 0
   513  00001A                     ___lbmod@dividend:
   514                           	opt stack 0
   515                           
   516                           ; 1 bytes @ 0x19
   517  00001A                     	ds	1
   518  00001B                     ??_SetTimer0:
   519  00001B                     ??_OpenADC:
   520  00001B                     ??_ReadADC:
   521  00001B                     delay1ms@c:
   522                           	opt stack 0
   523  00001B                     TM1640_Writer_Byte@Date:
   524                           	opt stack 0
   525  00001B                     Open1USART@config:
   526                           	opt stack 0
   527  00001B                     ___lbmod@counter:
   528                           	opt stack 0
   529  00001B                     ___wmul@multiplicand:
   530                           	opt stack 0
   531  00001B                     ___lwdiv@divisor:
   532                           	opt stack 0
   533  00001B                     ___lwmod@divisor:
   534                           	opt stack 0
   535                           
   536                           ; 2 bytes @ 0x1A
   537  00001B                     	ds	1
   538  00001C                     TM1640_Writer_Byte@mask:
   539                           	opt stack 0
   540  00001C                     ___ftpack@exp:
   541                           	opt stack 0
   542  00001C                     ___lbmod@rem:
   543                           	opt stack 0
   544  00001C                     delay_ms@_ms:
   545                           	opt stack 0
   546                           
   547                           ; 2 bytes @ 0x1B
   548  00001C                     	ds	1
   549  00001D                     Key_ReadFSM@key_num_mate:
   550                           	opt stack 0
   551  00001D                     OpenADC@config:
   552                           	opt stack 0
   553  00001D                     ___ftpack@sign:
   554                           	opt stack 0
   555  00001D                     ___lwmod@counter:
   556                           	opt stack 0
   557  00001D                     ___wmul@product:
   558                           	opt stack 0
   559  00001D                     ___lwdiv@quotient:
   560                           	opt stack 0
   561  00001D                     ___lldiv@divisor:
   562                           	opt stack 0
   563  00001D                     ___llmod@divisor:
   564                           	opt stack 0
   565                           
   566                           ; 4 bytes @ 0x1C
   567  00001D                     	ds	1
   568  00001E                     ??___ftpack:
   569  00001E                     Key_ReadFSM@key_num:
   570                           	opt stack 0
   571  00001E                     TM1640_Writer_Dates@Date:
   572                           	opt stack 0
   573  00001E                     Relay_Control@_switch:
   574                           	opt stack 0
   575                           
   576                           ; 1 bytes @ 0x1D
   577  00001E                     	ds	1
   578  00001F                     ??_Key_ManageMessage:
   579  00001F                     TM1640_Writer_Dates@Addr:
   580                           	opt stack 0
   581  00001F                     Relay_Control@relay_num:
   582                           	opt stack 0
   583  00001F                     ___lwdiv@counter:
   584                           	opt stack 0
   585                           
   586                           ; 1 bytes @ 0x1E
   587  00001F                     	ds	1
   588  000020                     TM1640_Show_integer@Numbers:
   589                           	opt stack 0
   590                           
   591                           ; 2 bytes @ 0x1F
   592  000020                     	ds	1
   593  000021                     ?___lwtoft:
   594                           	opt stack 0
   595  000021                     ___llmod@counter:
   596                           	opt stack 0
   597  000021                     ___lwtoft@c:
   598                           	opt stack 0
   599  000021                     ___lldiv@quotient:
   600                           	opt stack 0
   601                           
   602                           ; 4 bytes @ 0x20
   603  000021                     	ds	1
   604  000022                     ??_ShowResult:
   605  000022                     
   606                           ; 0 bytes @ 0x21
   607  000022                     	ds	2
   608  000024                     ?___ftmul:
   609                           	opt stack 0
   610  000024                     ___ftmul@f1:
   611                           	opt stack 0
   612                           
   613                           ; 3 bytes @ 0x23
   614  000024                     	ds	1
   615  000025                     ___lldiv@counter:
   616                           	opt stack 0
   617                           
   618                           ; 1 bytes @ 0x24
   619  000025                     	ds	1
   620  000026                     VerifyCRC@DataBuff:
   621                           	opt stack 0
   622                           
   623                           ; 2 bytes @ 0x25
   624  000026                     	ds	1
   625  000027                     ___ftmul@f2:
   626                           	opt stack 0
   627                           
   628                           ; 3 bytes @ 0x26
   629  000027                     	ds	1
   630  000028                     VerifyCRC@date_lenth:
   631                           	opt stack 0
   632                           
   633                           ; 1 bytes @ 0x27
   634  000028                     	ds	1
   635  000029                     ??_VerifyCRC:
   636                           
   637                           ; 0 bytes @ 0x28
   638  000029                     	ds	1
   639  00002A                     ??___ftmul:
   640                           
   641                           ; 0 bytes @ 0x29
   642  00002A                     	ds	3
   643  00002D                     ___ftmul@exp:
   644                           	opt stack 0
   645                           
   646                           ; 1 bytes @ 0x2C
   647  00002D                     	ds	1
   648  00002E                     ___ftmul@f3_as_product:
   649                           	opt stack 0
   650  00002E                     VerifyCRC@CRC_Value:
   651                           	opt stack 0
   652                           
   653                           ; 4 bytes @ 0x2D
   654  00002E                     	ds	3
   655  000031                     ___ftmul@cntr:
   656                           	opt stack 0
   657                           
   658                           ; 1 bytes @ 0x30
   659  000031                     	ds	1
   660  000032                     VerifyCRC@CRC_Byte:
   661                           	opt stack 0
   662  000032                     ___ftmul@sign:
   663                           	opt stack 0
   664                           
   665                           ; 1 bytes @ 0x31
   666  000032                     	ds	1
   667  000033                     tblptru	equ	0xFF8
   668                           tblptrh	equ	0xFF7
   669                           tblptrl	equ	0xFF6
   670                           tablat	equ	0xFF5
   671                           postinc0	equ	0xFEE
   672                           wreg	equ	0xFE8
   673                           postdec1	equ	0xFE5
   674                           fsr1l	equ	0xFE1
   675                           
   676                           ; 0 bytes @ 0x32
   677 ;;
   678 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   679 ;;
   680 ;; *************** function _main *****************
   681 ;; Defined at:
   682 ;;		line 40 in file "_01_USER/main.c"
   683 ;; Parameters:    Size  Location     Type
   684 ;;		None
   685 ;; Auto vars:     Size  Location     Type
   686 ;;		None
   687 ;; Return value:  Size  Location     Type
   688 ;;                  2   24[None  ] int 
   689 ;; Registers used:
   690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   691 ;; Tracked objects:
   692 ;;		On entry : 0/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   700 ;;Total ram usage:        0 bytes
   701 ;; Hardware stack levels required when called:    8
   702 ;; This function calls:
   703 ;;		_ADC6_Init
   704 ;;		_GPIO_Config
   705 ;;		_Init_TM1640
   706 ;;		_Key_Init
   707 ;;		_ManageMessage
   708 ;;		_RS485_Init
   709 ;;		_Relay_Init
   710 ;;		_Run
   711 ;;		_SCR_Init
   712 ;;		_ShowResult
   713 ;;		_Timer0_Init
   714 ;; This function is called by:
   715 ;;		Startup code after reset
   716 ;; This function uses a non-reentrant model
   717 ;;
   718                           
   719                           	psect	text0
   720  0015F4                     __ptext0:
   721                           	opt stack 0
   722  0015F4                     _main:
   723                           	opt stack 23
   724                           
   725                           ;main.c: 45: GPIO_Config();
   726                           
   727                           ; BSR set to: 0
   728                           ;incstack = 0
   729  0015F4  EC50  F00C         	call	_GPIO_Config	;wreg free
   730                           
   731                           ;main.c: 46: Key_Init();
   732  0015F8  ECDE  F00B         	call	_Key_Init	;wreg free
   733                           
   734                           ;main.c: 47: Timer0_Init();
   735  0015FC  EC97  F00B         	call	_Timer0_Init	;wreg free
   736                           
   737                           ;main.c: 48: Init_TM1640();
   738  001600  EC84  F00B         	call	_Init_TM1640	;wreg free
   739                           
   740                           ;main.c: 49: ADC6_Init();
   741  001604  EC21  F00C         	call	_ADC6_Init	;wreg free
   742                           
   743                           ;main.c: 50: RS485_Init();
   744  001608  EC15  F00C         	call	_RS485_Init	;wreg free
   745                           
   746                           ;main.c: 51: Relay_Init();
   747  00160C  EC41  F00C         	call	_Relay_Init	;wreg free
   748                           
   749                           ;main.c: 52: SCR_Init();
   750  001610  EC48  F00C         	call	_SCR_Init	;wreg free
   751  001614  D000               	goto	l3813
   752  001616                     l3813:
   753                           
   754                           ;main.c: 56: {
   755                           ;main.c: 57: ManageMessage();
   756  001616  ECED  F00B         	call	_ManageMessage	;wreg free
   757                           
   758                           ;main.c: 58: Run();
   759  00161A  EC84  F008         	call	_Run	;wreg free
   760                           
   761                           ;main.c: 59: ShowResult();
   762  00161E  EC48  F007         	call	_ShowResult	;wreg free
   763  001622  D7F9               	goto	l3813
   764                           
   765                           ;main.c: 60: }
   766                           ;main.c: 62: return 0;
   767                           ;	Return value of _main is never used
   768  001624  EFD1  F000         	goto	start
   769  001628                     __end_of_main:
   770                           	opt stack 0
   771                           tblptru	equ	0xFF8
   772                           tblptrh	equ	0xFF7
   773                           tblptrl	equ	0xFF6
   774                           tablat	equ	0xFF5
   775                           postinc0	equ	0xFEE
   776                           wreg	equ	0xFE8
   777                           postdec1	equ	0xFE5
   778                           fsr1l	equ	0xFE1
   779                           
   780 ;; *************** function _Timer0_Init *****************
   781 ;; Defined at:
   782 ;;		line 43 in file "_01_USER/My_Timer.c"
   783 ;; Parameters:    Size  Location     Type
   784 ;;		None
   785 ;; Auto vars:     Size  Location     Type
   786 ;;		None
   787 ;; Return value:  Size  Location     Type
   788 ;;		None               void
   789 ;; Registers used:
   790 ;;		wreg, status,2, status,0, cstack
   791 ;; Tracked objects:
   792 ;;		On entry : 0/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   800 ;;Total ram usage:        0 bytes
   801 ;; Hardware stack levels used:    1
   802 ;; Hardware stack levels required when called:    4
   803 ;; This function calls:
   804 ;;		_SetTimer0
   805 ;; This function is called by:
   806 ;;		_main
   807 ;; This function uses a non-reentrant model
   808 ;;
   809                           
   810                           	psect	text1
   811  00172E                     __ptext1:
   812                           	opt stack 0
   813  00172E                     _Timer0_Init:
   814                           	opt stack 26
   815                           
   816                           ;My_Timer.c: 45: T08BIT = 0;
   817                           
   818                           ;incstack = 0
   819  00172E  9CD5               	bcf	4053,6,c	;volatile
   820                           
   821                           ;My_Timer.c: 46: T0CS = 0;
   822  001730  9AD5               	bcf	4053,5,c	;volatile
   823                           
   824                           ;My_Timer.c: 47: T0SE = 0;
   825  001732  98D5               	bcf	4053,4,c	;volatile
   826                           
   827                           ;My_Timer.c: 48: PSA = 0;
   828  001734  96D5               	bcf	4053,3,c	;volatile
   829                           
   830                           ;My_Timer.c: 49: T0PS2 = 1;
   831  001736  84D5               	bsf	4053,2,c	;volatile
   832                           
   833                           ;My_Timer.c: 50: T0PS1 = 1;
   834  001738  82D5               	bsf	4053,1,c	;volatile
   835                           
   836                           ;My_Timer.c: 51: T0PS0 = 1;
   837  00173A  80D5               	bsf	4053,0,c	;volatile
   838                           
   839                           ;My_Timer.c: 65: SetTimer0(1);
   840  00173C  0E00               	movlw	0
   841  00173E  6E1A               	movwf	SetTimer0@_tmr+1,c
   842  001740  0E01               	movlw	1
   843  001742  6E19               	movwf	SetTimer0@_tmr,c
   844  001744  EC2D  F00B         	call	_SetTimer0	;wreg free
   845                           
   846                           ;My_Timer.c: 66: TMR0ON = 1;
   847  001748  8ED5               	bsf	4053,7,c	;volatile
   848                           
   849                           ;My_Timer.c: 67: TMR0IE = 1;
   850  00174A  8AF2               	bsf	intcon,5,c	;volatile
   851                           
   852                           ;My_Timer.c: 68: IPEN = 0;GIE = 1;
   853  00174C  9ED0               	bcf	4048,7,c	;volatile
   854  00174E  8EF2               	bsf	intcon,7,c	;volatile
   855  001750  0012               	return		;funcret
   856  001752                     __end_of_Timer0_Init:
   857                           	opt stack 0
   858                           tblptru	equ	0xFF8
   859                           tblptrh	equ	0xFF7
   860                           tblptrl	equ	0xFF6
   861                           tablat	equ	0xFF5
   862                           intcon	equ	0xFF2
   863                           postinc0	equ	0xFEE
   864                           wreg	equ	0xFE8
   865                           postdec1	equ	0xFE5
   866                           fsr1l	equ	0xFE1
   867                           
   868 ;; *************** function _SetTimer0 *****************
   869 ;; Defined at:
   870 ;;		line 81 in file "_01_USER/My_Timer.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;  _tmr            2   24[COMRAM] unsigned int 
   873 ;; Auto vars:     Size  Location     Type
   874 ;;		None
   875 ;; Return value:  Size  Location     Type
   876 ;;		None               void
   877 ;; Registers used:
   878 ;;		wreg, status,2, status,0
   879 ;; Tracked objects:
   880 ;;		On entry : 0/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   884 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   886 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   887 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   888 ;;Total ram usage:        4 bytes
   889 ;; Hardware stack levels used:    1
   890 ;; Hardware stack levels required when called:    3
   891 ;; This function calls:
   892 ;;		Nothing
   893 ;; This function is called by:
   894 ;;		_Timer0_Init
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898                           	psect	text2
   899  00165A                     __ptext2:
   900                           	opt stack 0
   901  00165A                     _SetTimer0:
   902                           	opt stack 26
   903                           
   904                           ;My_Timer.c: 83: if(_tmr > 0xffff) _tmr = 0xffff;
   905                           
   906                           ;incstack = 0
   907  00165A  D003               	goto	l2979
   908  00165C  6819               	setf	SetTimer0@_tmr,c
   909  00165E  681A               	setf	SetTimer0@_tmr+1,c
   910  001660  D000               	goto	l2979
   911  001662                     l2979:
   912                           
   913                           ;My_Timer.c: 84: _tmr=0xffff-_tmr;
   914  001662  C019  F01B         	movff	SetTimer0@_tmr,??_SetTimer0
   915  001666  C01A  F01C         	movff	SetTimer0@_tmr+1,??_SetTimer0+1
   916  00166A  1E1B               	comf	??_SetTimer0,f,c
   917  00166C  1E1C               	comf	??_SetTimer0+1,f,c
   918  00166E  4A1B               	infsnz	??_SetTimer0,f,c
   919  001670  2A1C               	incf	??_SetTimer0+1,f,c
   920  001672  0EFF               	movlw	255
   921  001674  241B               	addwf	??_SetTimer0,w,c
   922  001676  6E19               	movwf	SetTimer0@_tmr,c
   923  001678  0EFF               	movlw	255
   924  00167A  201C               	addwfc	??_SetTimer0+1,w,c
   925  00167C  6E1A               	movwf	SetTimer0@_tmr+1,c
   926                           
   927                           ;My_Timer.c: 85: TMR0H = _tmr/256;
   928  00167E  501A               	movf	SetTimer0@_tmr+1,w,c
   929  001680  6ED7               	movwf	4055,c	;volatile
   930                           
   931                           ;My_Timer.c: 86: TMR0L = _tmr%256;
   932  001682  C019  FFD6         	movff	SetTimer0@_tmr,4054	;volatile
   933                           
   934                           ;My_Timer.c: 87: TMR0IF = 0;
   935  001686  94F2               	bcf	intcon,2,c	;volatile
   936  001688  0012               	return		;funcret
   937  00168A                     __end_of_SetTimer0:
   938                           	opt stack 0
   939                           tblptru	equ	0xFF8
   940                           tblptrh	equ	0xFF7
   941                           tblptrl	equ	0xFF6
   942                           tablat	equ	0xFF5
   943                           intcon	equ	0xFF2
   944                           postinc0	equ	0xFEE
   945                           wreg	equ	0xFE8
   946                           postdec1	equ	0xFE5
   947                           fsr1l	equ	0xFE1
   948                           
   949 ;; *************** function _ShowResult *****************
   950 ;; Defined at:
   951 ;;		line 94 in file "_01_USER/Run.c"
   952 ;; Parameters:    Size  Location     Type
   953 ;;		None
   954 ;; Auto vars:     Size  Location     Type
   955 ;;		None
   956 ;; Return value:  Size  Location     Type
   957 ;;		None               void
   958 ;; Registers used:
   959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   960 ;; Tracked objects:
   961 ;;		On entry : 0/0
   962 ;;		On exit  : 0/0
   963 ;;		Unchanged: 0/0
   964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   967 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   968 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   969 ;;Total ram usage:        1 bytes
   970 ;; Hardware stack levels used:    1
   971 ;; Hardware stack levels required when called:    7
   972 ;; This function calls:
   973 ;;		_LED_Control
   974 ;;		_TM1640_Show_integer
   975 ;;		_TM1640_Writer_Dates
   976 ;;		___wmul
   977 ;; This function is called by:
   978 ;;		_main
   979 ;; This function uses a non-reentrant model
   980 ;;
   981                           
   982                           	psect	text3
   983  000E90                     __ptext3:
   984                           	opt stack 0
   985  000E90                     _ShowResult:
   986                           	opt stack 23
   987                           
   988                           ;Run.c: 96: if( gs_Handle_Switch.Show_Send_Receive )
   989                           
   990                           ;incstack = 0
   991  000E90  5044               	movf	_gs_Handle_Switch+3,w,c
   992  000E92  B4D8               	btfsc	status,2,c
   993  000E94  D021               	goto	l3155
   994                           
   995                           ;Run.c: 97: {
   996                           ;Run.c: 98: TM1640_Show_integer( ga_RS485_SendBuff[g_RS485_Byte] + (g_RS485_Byte * 1000)
      +                           );
   997  000E96  C03F  F019         	movff	_g_RS485_Byte,___wmul@multiplier
   998  000E9A  6A1A               	clrf	___wmul@multiplier+1,c
   999  000E9C  0E03               	movlw	3
  1000  000E9E  6E1C               	movwf	___wmul@multiplicand+1,c
  1001  000EA0  0EE8               	movlw	232
  1002  000EA2  6E1B               	movwf	___wmul@multiplicand,c
  1003  000EA4  EC5D  F00B         	call	___wmul	;wreg free
  1004  000EA8  503F               	movf	_g_RS485_Byte,w,c
  1005  000EAA  0D01               	mullw	1
  1006  000EAC  0EB0               	movlw	low _ga_RS485_SendBuff
  1007  000EAE  24F3               	addwf	prodl,w,c
  1008  000EB0  6ED9               	movwf	fsr2l,c
  1009  000EB2  0E00               	movlw	high _ga_RS485_SendBuff
  1010  000EB4  20F4               	addwfc	prodh,w,c
  1011  000EB6  6EDA               	movwf	fsr2h,c
  1012  000EB8  50DF               	movf	indf2,w,c
  1013  000EBA  6E22               	movwf	??_ShowResult& (0+255),c
  1014  000EBC  5022               	movf	??_ShowResult,w,c
  1015  000EBE  2419               	addwf	?___wmul,w,c
  1016  000EC0  6E20               	movwf	TM1640_Show_integer@Numbers,c
  1017  000EC2  0E00               	movlw	0
  1018  000EC4  201A               	addwfc	?___wmul+1,w,c
  1019  000EC6  6E21               	movwf	TM1640_Show_integer@Numbers+1,c
  1020  000EC8  EC05  F006         	call	_TM1640_Show_integer	;wreg free
  1021                           
  1022                           ;Run.c: 99: LED_Control(1,1);
  1023  000ECC  0E01               	movlw	1
  1024  000ECE  6E19               	movwf	LED_Control@_switch,c
  1025  000ED0  0E01               	movlw	1
  1026  000ED2  EC3D  F00A         	call	_LED_Control
  1027                           
  1028                           ;Run.c: 100: }
  1029  000ED6  D021               	goto	l3159
  1030  000ED8                     l3155:
  1031                           
  1032                           ;Run.c: 102: else
  1033                           ;Run.c: 103: {
  1034                           ;Run.c: 104: TM1640_Show_integer( ga_RS485_ReceiveBuff[g_RS485_Byte] + (g_RS485_Byte * 1
      +                          000) );
  1035  000ED8  C03F  F019         	movff	_g_RS485_Byte,___wmul@multiplier
  1036  000EDC  6A1A               	clrf	___wmul@multiplier+1,c
  1037  000EDE  0E03               	movlw	3
  1038  000EE0  6E1C               	movwf	___wmul@multiplicand+1,c
  1039  000EE2  0EE8               	movlw	232
  1040  000EE4  6E1B               	movwf	___wmul@multiplicand,c
  1041  000EE6  EC5D  F00B         	call	___wmul	;wreg free
  1042  000EEA  503F               	movf	_g_RS485_Byte,w,c
  1043  000EEC  0D01               	mullw	1
  1044  000EEE  0EA6               	movlw	low _ga_RS485_ReceiveBuff
  1045  000EF0  24F3               	addwf	prodl,w,c
  1046  000EF2  6ED9               	movwf	fsr2l,c
  1047  000EF4  0E00               	movlw	high _ga_RS485_ReceiveBuff
  1048  000EF6  20F4               	addwfc	prodh,w,c
  1049  000EF8  6EDA               	movwf	fsr2h,c
  1050  000EFA  50DF               	movf	indf2,w,c
  1051  000EFC  6E22               	movwf	??_ShowResult& (0+255),c
  1052  000EFE  5022               	movf	??_ShowResult,w,c
  1053  000F00  2419               	addwf	?___wmul,w,c
  1054  000F02  6E20               	movwf	TM1640_Show_integer@Numbers,c
  1055  000F04  0E00               	movlw	0
  1056  000F06  201A               	addwfc	?___wmul+1,w,c
  1057  000F08  6E21               	movwf	TM1640_Show_integer@Numbers+1,c
  1058  000F0A  EC05  F006         	call	_TM1640_Show_integer	;wreg free
  1059                           
  1060                           ;Run.c: 105: LED_Control(1,0);
  1061  000F0E  0E00               	movlw	0
  1062  000F10  6E19               	movwf	LED_Control@_switch,c
  1063  000F12  0E01               	movlw	1
  1064  000F14  EC3D  F00A         	call	_LED_Control
  1065  000F18  D000               	goto	l3159
  1066  000F1A                     l3159:
  1067                           
  1068                           ;Run.c: 106: }
  1069                           ;Run.c: 108: TM1640_Writer_Dates(4, LED_BUS);
  1070  000F1A  C03E  F01E         	movff	_LED_BUS,TM1640_Writer_Dates@Date
  1071  000F1E  0E04               	movlw	4
  1072  000F20  ECCD  F00B         	call	_TM1640_Writer_Dates
  1073  000F24  0012               	return		;funcret
  1074  000F26                     __end_of_ShowResult:
  1075                           	opt stack 0
  1076                           tblptru	equ	0xFF8
  1077                           tblptrh	equ	0xFF7
  1078                           tblptrl	equ	0xFF6
  1079                           tablat	equ	0xFF5
  1080                           prodh	equ	0xFF4
  1081                           prodl	equ	0xFF3
  1082                           intcon	equ	0xFF2
  1083                           postinc0	equ	0xFEE
  1084                           wreg	equ	0xFE8
  1085                           postdec1	equ	0xFE5
  1086                           fsr1l	equ	0xFE1
  1087                           indf2	equ	0xFDF
  1088                           fsr2h	equ	0xFDA
  1089                           fsr2l	equ	0xFD9
  1090                           status	equ	0xFD8
  1091                           
  1092 ;; *************** function ___wmul *****************
  1093 ;; Defined at:
  1094 ;;		line 15 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  1095 ;; Parameters:    Size  Location     Type
  1096 ;;  multiplier      2   24[COMRAM] unsigned int 
  1097 ;;  multiplicand    2   26[COMRAM] unsigned int 
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;  product         2   28[COMRAM] unsigned int 
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  2   24[COMRAM] unsigned int 
  1102 ;; Registers used:
  1103 ;;		wreg, status,2, status,0, prodl, prodh
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1109 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1110 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1112 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1113 ;;Total ram usage:        6 bytes
  1114 ;; Hardware stack levels used:    1
  1115 ;; Hardware stack levels required when called:    3
  1116 ;; This function calls:
  1117 ;;		Nothing
  1118 ;; This function is called by:
  1119 ;;		_ShowResult
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123                           	psect	text4
  1124  0016BA                     __ptext4:
  1125                           	opt stack 0
  1126  0016BA                     ___wmul:
  1127                           	opt stack 26
  1128                           
  1129                           ;incstack = 0
  1130  0016BA  5019               	movf	___wmul@multiplier,w,c
  1131  0016BC  021B               	mulwf	___wmul@multiplicand,c
  1132  0016BE  CFF3 F01D          	movff	prodl,___wmul@product
  1133  0016C2  CFF4 F01E          	movff	prodh,___wmul@product+1
  1134  0016C6  5019               	movf	___wmul@multiplier,w,c
  1135  0016C8  021C               	mulwf	___wmul@multiplicand+1,c
  1136  0016CA  50F3               	movf	prodl,w,c
  1137  0016CC  261E               	addwf	___wmul@product+1,f,c
  1138  0016CE  501A               	movf	___wmul@multiplier+1,w,c
  1139  0016D0  021B               	mulwf	___wmul@multiplicand,c
  1140  0016D2  50F3               	movf	prodl,w,c
  1141  0016D4  261E               	addwf	___wmul@product+1,f,c
  1142  0016D6  C01D  F019         	movff	___wmul@product,?___wmul
  1143  0016DA  C01E  F01A         	movff	___wmul@product+1,?___wmul+1
  1144  0016DE  0012               	return	
  1145  0016E0  0012               	return		;funcret
  1146  0016E2                     __end_of___wmul:
  1147                           	opt stack 0
  1148                           tblptru	equ	0xFF8
  1149                           tblptrh	equ	0xFF7
  1150                           tblptrl	equ	0xFF6
  1151                           tablat	equ	0xFF5
  1152                           prodh	equ	0xFF4
  1153                           prodl	equ	0xFF3
  1154                           intcon	equ	0xFF2
  1155                           postinc0	equ	0xFEE
  1156                           wreg	equ	0xFE8
  1157                           postdec1	equ	0xFE5
  1158                           fsr1l	equ	0xFE1
  1159                           indf2	equ	0xFDF
  1160                           fsr2h	equ	0xFDA
  1161                           fsr2l	equ	0xFD9
  1162                           status	equ	0xFD8
  1163                           
  1164 ;; *************** function _TM1640_Show_integer *****************
  1165 ;; Defined at:
  1166 ;;		line 206 in file "_01_USER/TM1640.c"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;  Numbers         2   31[COMRAM] unsigned int 
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;		None
  1171 ;; Return value:  Size  Location     Type
  1172 ;;		None               void
  1173 ;; Registers used:
  1174 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1175 ;; Tracked objects:
  1176 ;;		On entry : 0/0
  1177 ;;		On exit  : 0/0
  1178 ;;		Unchanged: 0/0
  1179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1180 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1183 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1184 ;;Total ram usage:        2 bytes
  1185 ;; Hardware stack levels used:    1
  1186 ;; Hardware stack levels required when called:    6
  1187 ;; This function calls:
  1188 ;;		_TM1640_Writer_Dates
  1189 ;;		___lwdiv
  1190 ;;		___lwmod
  1191 ;; This function is called by:
  1192 ;;		_ShowResult
  1193 ;;		_MenuUnlock
  1194 ;;		_Mune1
  1195 ;;		_Mune2
  1196 ;;		_Mune3
  1197 ;;		_Mune4
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           	psect	text5
  1202  000C0A                     __ptext5:
  1203                           	opt stack 0
  1204  000C0A                     _TM1640_Show_integer:
  1205                           	opt stack 23
  1206                           
  1207                           ;TM1640.c: 209: TM1640_Writer_Dates(3,LED_Number[Numbers%10]); Numbers/=10;
  1208                           
  1209                           ;incstack = 0
  1210  000C0A  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1211  000C0E  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1212  000C12  0E00               	movlw	0
  1213  000C14  6E1C               	movwf	___lwmod@divisor+1,c
  1214  000C16  0E0A               	movlw	10
  1215  000C18  6E1B               	movwf	___lwmod@divisor,c
  1216  000C1A  ECCD  F009         	call	___lwmod	;wreg free
  1217  000C1E  0ECD               	movlw	low _LED_Number
  1218  000C20  2419               	addwf	?___lwmod,w,c
  1219  000C22  6ED9               	movwf	fsr2l,c
  1220  000C24  0E00               	movlw	high _LED_Number
  1221  000C26  201A               	addwfc	?___lwmod+1,w,c
  1222  000C28  6EDA               	movwf	fsr2h,c
  1223  000C2A  50DF               	movf	indf2,w,c
  1224  000C2C  6E1E               	movwf	TM1640_Writer_Dates@Date,c
  1225  000C2E  0E03               	movlw	3
  1226  000C30  ECCD  F00B         	call	_TM1640_Writer_Dates
  1227  000C34  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1228  000C38  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1229  000C3C  0E00               	movlw	0
  1230  000C3E  6E1C               	movwf	___lwdiv@divisor+1,c
  1231  000C40  0E0A               	movlw	10
  1232  000C42  6E1B               	movwf	___lwdiv@divisor,c
  1233  000C44  EC23  F009         	call	___lwdiv	;wreg free
  1234  000C48  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1235  000C4C  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1236                           
  1237                           ;TM1640.c: 210: TM1640_Writer_Dates(2,LED_Number[Numbers%10]); Numbers/=10;
  1238  000C50  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1239  000C54  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1240  000C58  0E00               	movlw	0
  1241  000C5A  6E1C               	movwf	___lwmod@divisor+1,c
  1242  000C5C  0E0A               	movlw	10
  1243  000C5E  6E1B               	movwf	___lwmod@divisor,c
  1244  000C60  ECCD  F009         	call	___lwmod	;wreg free
  1245  000C64  0ECD               	movlw	low _LED_Number
  1246  000C66  2419               	addwf	?___lwmod,w,c
  1247  000C68  6ED9               	movwf	fsr2l,c
  1248  000C6A  0E00               	movlw	high _LED_Number
  1249  000C6C  201A               	addwfc	?___lwmod+1,w,c
  1250  000C6E  6EDA               	movwf	fsr2h,c
  1251  000C70  50DF               	movf	indf2,w,c
  1252  000C72  6E1E               	movwf	TM1640_Writer_Dates@Date,c
  1253  000C74  0E02               	movlw	2
  1254  000C76  ECCD  F00B         	call	_TM1640_Writer_Dates
  1255  000C7A  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1256  000C7E  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1257  000C82  0E00               	movlw	0
  1258  000C84  6E1C               	movwf	___lwdiv@divisor+1,c
  1259  000C86  0E0A               	movlw	10
  1260  000C88  6E1B               	movwf	___lwdiv@divisor,c
  1261  000C8A  EC23  F009         	call	___lwdiv	;wreg free
  1262  000C8E  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1263  000C92  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1264                           
  1265                           ;TM1640.c: 211: TM1640_Writer_Dates(1,LED_Number[Numbers%10]); Numbers/=10;
  1266  000C96  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1267  000C9A  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1268  000C9E  0E00               	movlw	0
  1269  000CA0  6E1C               	movwf	___lwmod@divisor+1,c
  1270  000CA2  0E0A               	movlw	10
  1271  000CA4  6E1B               	movwf	___lwmod@divisor,c
  1272  000CA6  ECCD  F009         	call	___lwmod	;wreg free
  1273  000CAA  0ECD               	movlw	low _LED_Number
  1274  000CAC  2419               	addwf	?___lwmod,w,c
  1275  000CAE  6ED9               	movwf	fsr2l,c
  1276  000CB0  0E00               	movlw	high _LED_Number
  1277  000CB2  201A               	addwfc	?___lwmod+1,w,c
  1278  000CB4  6EDA               	movwf	fsr2h,c
  1279  000CB6  50DF               	movf	indf2,w,c
  1280  000CB8  6E1E               	movwf	TM1640_Writer_Dates@Date,c
  1281  000CBA  0E01               	movlw	1
  1282  000CBC  ECCD  F00B         	call	_TM1640_Writer_Dates
  1283  000CC0  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1284  000CC4  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1285  000CC8  0E00               	movlw	0
  1286  000CCA  6E1C               	movwf	___lwdiv@divisor+1,c
  1287  000CCC  0E0A               	movlw	10
  1288  000CCE  6E1B               	movwf	___lwdiv@divisor,c
  1289  000CD0  EC23  F009         	call	___lwdiv	;wreg free
  1290  000CD4  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1291  000CD8  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1292                           
  1293                           ;TM1640.c: 212: TM1640_Writer_Dates(0,LED_Number[Numbers%10]);
  1294  000CDC  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1295  000CE0  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1296  000CE4  0E00               	movlw	0
  1297  000CE6  6E1C               	movwf	___lwmod@divisor+1,c
  1298  000CE8  0E0A               	movlw	10
  1299  000CEA  6E1B               	movwf	___lwmod@divisor,c
  1300  000CEC  ECCD  F009         	call	___lwmod	;wreg free
  1301  000CF0  0ECD               	movlw	low _LED_Number
  1302  000CF2  2419               	addwf	?___lwmod,w,c
  1303  000CF4  6ED9               	movwf	fsr2l,c
  1304  000CF6  0E00               	movlw	high _LED_Number
  1305  000CF8  201A               	addwfc	?___lwmod+1,w,c
  1306  000CFA  6EDA               	movwf	fsr2h,c
  1307  000CFC  50DF               	movf	indf2,w,c
  1308  000CFE  6E1E               	movwf	TM1640_Writer_Dates@Date,c
  1309  000D00  0E00               	movlw	0
  1310  000D02  ECCD  F00B         	call	_TM1640_Writer_Dates
  1311  000D06  0012               	return		;funcret
  1312  000D08                     __end_of_TM1640_Show_integer:
  1313                           	opt stack 0
  1314                           tblptru	equ	0xFF8
  1315                           tblptrh	equ	0xFF7
  1316                           tblptrl	equ	0xFF6
  1317                           tablat	equ	0xFF5
  1318                           prodh	equ	0xFF4
  1319                           prodl	equ	0xFF3
  1320                           intcon	equ	0xFF2
  1321                           postinc0	equ	0xFEE
  1322                           wreg	equ	0xFE8
  1323                           postdec1	equ	0xFE5
  1324                           fsr1l	equ	0xFE1
  1325                           indf2	equ	0xFDF
  1326                           fsr2h	equ	0xFDA
  1327                           fsr2l	equ	0xFD9
  1328                           status	equ	0xFD8
  1329                           
  1330 ;; *************** function ___lwmod *****************
  1331 ;; Defined at:
  1332 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;  dividend        2   24[COMRAM] unsigned int 
  1335 ;;  divisor         2   26[COMRAM] unsigned int 
  1336 ;; Auto vars:     Size  Location     Type
  1337 ;;  counter         1   28[COMRAM] unsigned char 
  1338 ;; Return value:  Size  Location     Type
  1339 ;;                  2   24[COMRAM] unsigned int 
  1340 ;; Registers used:
  1341 ;;		wreg, status,2, status,0
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/0
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1347 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1348 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1350 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1351 ;;Total ram usage:        5 bytes
  1352 ;; Hardware stack levels used:    1
  1353 ;; Hardware stack levels required when called:    3
  1354 ;; This function calls:
  1355 ;;		Nothing
  1356 ;; This function is called by:
  1357 ;;		_TM1640_Show_integer
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361                           	psect	text6
  1362  00139A                     __ptext6:
  1363                           	opt stack 0
  1364  00139A                     ___lwmod:
  1365                           	opt stack 25
  1366                           
  1367                           ;incstack = 0
  1368  00139A  501B               	movf	___lwmod@divisor,w,c
  1369  00139C  101C               	iorwf	___lwmod@divisor+1,w,c
  1370  00139E  B4D8               	btfsc	status,2,c
  1371  0013A0  D01D               	goto	l1228
  1372  0013A2  0E01               	movlw	1
  1373  0013A4  6E1D               	movwf	___lwmod@counter,c
  1374  0013A6  D005               	goto	l2749
  1375  0013A8                     l2747:
  1376  0013A8  90D8               	bcf	status,0,c
  1377  0013AA  361B               	rlcf	___lwmod@divisor,f,c
  1378  0013AC  361C               	rlcf	___lwmod@divisor+1,f,c
  1379  0013AE  2A1D               	incf	___lwmod@counter,f,c
  1380  0013B0  D000               	goto	l2749
  1381  0013B2                     l2749:
  1382  0013B2  BE1C               	btfsc	___lwmod@divisor+1,7,c
  1383  0013B4  D002               	goto	l2751
  1384  0013B6  D7F8               	goto	l2747
  1385  0013B8  D000               	goto	l2751
  1386  0013BA                     l2751:
  1387  0013BA  501B               	movf	___lwmod@divisor,w,c
  1388  0013BC  5C19               	subwf	___lwmod@dividend,w,c
  1389  0013BE  501C               	movf	___lwmod@divisor+1,w,c
  1390  0013C0  581A               	subwfb	___lwmod@dividend+1,w,c
  1391  0013C2  A0D8               	btfss	status,0,c
  1392  0013C4  D005               	goto	l2755
  1393  0013C6  501B               	movf	___lwmod@divisor,w,c
  1394  0013C8  5E19               	subwf	___lwmod@dividend,f,c
  1395  0013CA  501C               	movf	___lwmod@divisor+1,w,c
  1396  0013CC  5A1A               	subwfb	___lwmod@dividend+1,f,c
  1397  0013CE  D000               	goto	l2755
  1398  0013D0                     l2755:
  1399  0013D0  90D8               	bcf	status,0,c
  1400  0013D2  321C               	rrcf	___lwmod@divisor+1,f,c
  1401  0013D4  321B               	rrcf	___lwmod@divisor,f,c
  1402  0013D6  2E1D               	decfsz	___lwmod@counter,f,c
  1403  0013D8  D7F0               	goto	l2751
  1404  0013DA  D000               	goto	l1228
  1405  0013DC                     l1228:
  1406  0013DC  C019  F019         	movff	___lwmod@dividend,?___lwmod
  1407  0013E0  C01A  F01A         	movff	___lwmod@dividend+1,?___lwmod+1
  1408  0013E4  0012               	return		;funcret
  1409  0013E6                     __end_of___lwmod:
  1410                           	opt stack 0
  1411                           tblptru	equ	0xFF8
  1412                           tblptrh	equ	0xFF7
  1413                           tblptrl	equ	0xFF6
  1414                           tablat	equ	0xFF5
  1415                           prodh	equ	0xFF4
  1416                           prodl	equ	0xFF3
  1417                           intcon	equ	0xFF2
  1418                           postinc0	equ	0xFEE
  1419                           wreg	equ	0xFE8
  1420                           postdec1	equ	0xFE5
  1421                           fsr1l	equ	0xFE1
  1422                           indf2	equ	0xFDF
  1423                           fsr2h	equ	0xFDA
  1424                           fsr2l	equ	0xFD9
  1425                           status	equ	0xFD8
  1426                           
  1427 ;; *************** function ___lwdiv *****************
  1428 ;; Defined at:
  1429 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;  dividend        2   24[COMRAM] unsigned int 
  1432 ;;  divisor         2   26[COMRAM] unsigned int 
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;  quotient        2   28[COMRAM] unsigned int 
  1435 ;;  counter         1   30[COMRAM] unsigned char 
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  2   24[COMRAM] unsigned int 
  1438 ;; Registers used:
  1439 ;;		wreg, status,2, status,0
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1445 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1446 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1448 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1449 ;;Total ram usage:        7 bytes
  1450 ;; Hardware stack levels used:    1
  1451 ;; Hardware stack levels required when called:    3
  1452 ;; This function calls:
  1453 ;;		Nothing
  1454 ;; This function is called by:
  1455 ;;		_TM1640_Show_integer
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459                           	psect	text7
  1460  001246                     __ptext7:
  1461                           	opt stack 0
  1462  001246                     ___lwdiv:
  1463                           	opt stack 25
  1464                           
  1465                           ;incstack = 0
  1466  001246  0E00               	movlw	0
  1467  001248  6E1E               	movwf	___lwdiv@quotient+1,c
  1468  00124A  0E00               	movlw	0
  1469  00124C  6E1D               	movwf	___lwdiv@quotient,c
  1470  00124E  501B               	movf	___lwdiv@divisor,w,c
  1471  001250  101C               	iorwf	___lwdiv@divisor+1,w,c
  1472  001252  B4D8               	btfsc	status,2,c
  1473  001254  D021               	goto	l1218
  1474  001256  0E01               	movlw	1
  1475  001258  6E1F               	movwf	___lwdiv@counter,c
  1476  00125A  D005               	goto	l2729
  1477  00125C                     l2727:
  1478  00125C  90D8               	bcf	status,0,c
  1479  00125E  361B               	rlcf	___lwdiv@divisor,f,c
  1480  001260  361C               	rlcf	___lwdiv@divisor+1,f,c
  1481  001262  2A1F               	incf	___lwdiv@counter,f,c
  1482  001264  D000               	goto	l2729
  1483  001266                     l2729:
  1484  001266  BE1C               	btfsc	___lwdiv@divisor+1,7,c
  1485  001268  D002               	goto	l2731
  1486  00126A  D7F8               	goto	l2727
  1487  00126C  D000               	goto	l2731
  1488  00126E                     l2731:
  1489  00126E  90D8               	bcf	status,0,c
  1490  001270  361D               	rlcf	___lwdiv@quotient,f,c
  1491  001272  361E               	rlcf	___lwdiv@quotient+1,f,c
  1492  001274  501B               	movf	___lwdiv@divisor,w,c
  1493  001276  5C19               	subwf	___lwdiv@dividend,w,c
  1494  001278  501C               	movf	___lwdiv@divisor+1,w,c
  1495  00127A  581A               	subwfb	___lwdiv@dividend+1,w,c
  1496  00127C  A0D8               	btfss	status,0,c
  1497  00127E  D006               	goto	l2739
  1498  001280  501B               	movf	___lwdiv@divisor,w,c
  1499  001282  5E19               	subwf	___lwdiv@dividend,f,c
  1500  001284  501C               	movf	___lwdiv@divisor+1,w,c
  1501  001286  5A1A               	subwfb	___lwdiv@dividend+1,f,c
  1502  001288  801D               	bsf	___lwdiv@quotient,0,c
  1503  00128A  D000               	goto	l2739
  1504  00128C                     l2739:
  1505  00128C  90D8               	bcf	status,0,c
  1506  00128E  321C               	rrcf	___lwdiv@divisor+1,f,c
  1507  001290  321B               	rrcf	___lwdiv@divisor,f,c
  1508  001292  2E1F               	decfsz	___lwdiv@counter,f,c
  1509  001294  D7EC               	goto	l2731
  1510  001296  D000               	goto	l1218
  1511  001298                     l1218:
  1512  001298  C01D  F019         	movff	___lwdiv@quotient,?___lwdiv
  1513  00129C  C01E  F01A         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1514  0012A0  0012               	return		;funcret
  1515  0012A2                     __end_of___lwdiv:
  1516                           	opt stack 0
  1517                           tblptru	equ	0xFF8
  1518                           tblptrh	equ	0xFF7
  1519                           tblptrl	equ	0xFF6
  1520                           tablat	equ	0xFF5
  1521                           prodh	equ	0xFF4
  1522                           prodl	equ	0xFF3
  1523                           intcon	equ	0xFF2
  1524                           postinc0	equ	0xFEE
  1525                           wreg	equ	0xFE8
  1526                           postdec1	equ	0xFE5
  1527                           fsr1l	equ	0xFE1
  1528                           indf2	equ	0xFDF
  1529                           fsr2h	equ	0xFDA
  1530                           fsr2l	equ	0xFD9
  1531                           status	equ	0xFD8
  1532                           
  1533 ;; *************** function _TM1640_Writer_Dates *****************
  1534 ;; Defined at:
  1535 ;;		line 99 in file "_01_USER/TM1640.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;  Addr            1    wreg     unsigned char 
  1538 ;;  Date            1   29[COMRAM] unsigned char 
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;  Addr            1   30[COMRAM] unsigned char 
  1541 ;; Return value:  Size  Location     Type
  1542 ;;		None               void
  1543 ;; Registers used:
  1544 ;;		wreg, status,2, status,0, cstack
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1550 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1551 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1553 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1554 ;;Total ram usage:        2 bytes
  1555 ;; Hardware stack levels used:    1
  1556 ;; Hardware stack levels required when called:    5
  1557 ;; This function calls:
  1558 ;;		_TM1640_Start
  1559 ;;		_TM1640_Stop
  1560 ;;		_TM1640_Writer_Byte
  1561 ;; This function is called by:
  1562 ;;		_TM1640_Show_integer
  1563 ;;		_ShowResult
  1564 ;;		_TM1640_Show_Numbers
  1565 ;;		_TM1640_Show_Decimal
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           	psect	text8
  1570  00179A                     __ptext8:
  1571                           	opt stack 0
  1572  00179A                     _TM1640_Writer_Dates:
  1573                           	opt stack 24
  1574                           
  1575                           ;incstack = 0
  1576                           ;TM1640_Writer_Dates@Addr stored from wreg
  1577  00179A  6E1F               	movwf	TM1640_Writer_Dates@Addr,c
  1578                           
  1579                           ;TM1640.c: 101: if((Addr >= 0) && (Addr <= 15))
  1580  00179C  0E10               	movlw	16
  1581  00179E  601F               	cpfslt	TM1640_Writer_Dates@Addr,c
  1582  0017A0  0012               	return	
  1583                           
  1584                           ;TM1640.c: 102: {
  1585                           ;TM1640.c: 103: TM1640_Start();
  1586  0017A2  ECBB  F00B         	call	_TM1640_Start	;wreg free
  1587                           
  1588                           ;TM1640.c: 104: TM1640_Writer_Byte(0xC0 + Addr);
  1589  0017A6  501F               	movf	TM1640_Writer_Dates@Addr,w,c
  1590  0017A8  0FC0               	addlw	192
  1591  0017AA  ECA3  F00A         	call	_TM1640_Writer_Byte
  1592                           
  1593                           ;TM1640.c: 105: TM1640_Writer_Byte(Date);
  1594  0017AE  501E               	movf	TM1640_Writer_Dates@Date,w,c
  1595  0017B0  ECA3  F00A         	call	_TM1640_Writer_Byte
  1596                           
  1597                           ;TM1640.c: 106: TM1640_Stop();
  1598  0017B4  ECA9  F00B         	call	_TM1640_Stop	;wreg free
  1599  0017B8  0012               	return	
  1600  0017BA  0012               	return		;funcret
  1601  0017BC                     __end_of_TM1640_Writer_Dates:
  1602                           	opt stack 0
  1603                           tblptru	equ	0xFF8
  1604                           tblptrh	equ	0xFF7
  1605                           tblptrl	equ	0xFF6
  1606                           tablat	equ	0xFF5
  1607                           prodh	equ	0xFF4
  1608                           prodl	equ	0xFF3
  1609                           intcon	equ	0xFF2
  1610                           postinc0	equ	0xFEE
  1611                           wreg	equ	0xFE8
  1612                           postdec1	equ	0xFE5
  1613                           fsr1l	equ	0xFE1
  1614                           indf2	equ	0xFDF
  1615                           fsr2h	equ	0xFDA
  1616                           fsr2l	equ	0xFD9
  1617                           status	equ	0xFD8
  1618                           
  1619 ;; *************** function _LED_Control *****************
  1620 ;; Defined at:
  1621 ;;		line 58 in file "_01_USER/GPIO.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  _LED_num        1    wreg     unsigned char 
  1624 ;;  _switch         1   24[COMRAM] unsigned char 
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;  _LED_num        1   25[COMRAM] unsigned char 
  1627 ;; Return value:  Size  Location     Type
  1628 ;;		None               void
  1629 ;; Registers used:
  1630 ;;		wreg, status,2, status,0
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1636 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1637 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1639 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1640 ;;Total ram usage:        2 bytes
  1641 ;; Hardware stack levels used:    1
  1642 ;; Hardware stack levels required when called:    3
  1643 ;; This function calls:
  1644 ;;		Nothing
  1645 ;; This function is called by:
  1646 ;;		_ShowResult
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           	psect	text9
  1651  00147A                     __ptext9:
  1652                           	opt stack 0
  1653  00147A                     _LED_Control:
  1654                           	opt stack 26
  1655                           
  1656                           ;incstack = 0
  1657                           ;LED_Control@_LED_num stored from wreg
  1658  00147A  6E1A               	movwf	LED_Control@_LED_num,c
  1659                           
  1660                           ;GPIO.c: 62: if(_LED_num == 1)
  1661  00147C  041A               	decf	LED_Control@_LED_num,w,c
  1662  00147E  A4D8               	btfss	status,2,c
  1663  001480  D007               	goto	l2995
  1664                           
  1665                           ;GPIO.c: 63: if(_switch) LED_BUS |= 0x01;
  1666  001482  5019               	movf	LED_Control@_switch,w,c
  1667  001484  B4D8               	btfsc	status,2,c
  1668  001486  D002               	goto	l2993
  1669  001488  803E               	bsf	_LED_BUS,0,c
  1670  00148A  D002               	goto	l2995
  1671  00148C                     l2993:
  1672                           
  1673                           ;GPIO.c: 64: else LED_BUS &= 0xFE;
  1674  00148C  903E               	bcf	_LED_BUS,0,c
  1675  00148E  D000               	goto	l2995
  1676  001490                     l2995:
  1677                           
  1678                           ;GPIO.c: 66: if(_LED_num == 2)
  1679  001490  0E02               	movlw	2
  1680  001492  181A               	xorwf	LED_Control@_LED_num,w,c
  1681  001494  A4D8               	btfss	status,2,c
  1682  001496  D007               	goto	l3003
  1683                           
  1684                           ;GPIO.c: 67: if(_switch) LED_BUS |= 0x02;
  1685  001498  5019               	movf	LED_Control@_switch,w,c
  1686  00149A  B4D8               	btfsc	status,2,c
  1687  00149C  D002               	goto	l3001
  1688  00149E  823E               	bsf	_LED_BUS,1,c
  1689  0014A0  D002               	goto	l3003
  1690  0014A2                     l3001:
  1691                           
  1692                           ;GPIO.c: 68: else LED_BUS &= 0xFD;
  1693  0014A2  923E               	bcf	_LED_BUS,1,c
  1694  0014A4  D000               	goto	l3003
  1695  0014A6                     l3003:
  1696                           
  1697                           ;GPIO.c: 70: if(_LED_num == 3)
  1698  0014A6  0E03               	movlw	3
  1699  0014A8  181A               	xorwf	LED_Control@_LED_num,w,c
  1700  0014AA  A4D8               	btfss	status,2,c
  1701  0014AC  0012               	return	
  1702                           
  1703                           ;GPIO.c: 71: if(_switch) LED_BUS |= 0x04;
  1704  0014AE  5019               	movf	LED_Control@_switch,w,c
  1705  0014B0  B4D8               	btfsc	status,2,c
  1706  0014B2  D002               	goto	l3009
  1707  0014B4  843E               	bsf	_LED_BUS,2,c
  1708  0014B6  0012               	return	
  1709  0014B8                     l3009:
  1710                           
  1711                           ;GPIO.c: 72: else LED_BUS &= 0xFB;
  1712  0014B8  943E               	bcf	_LED_BUS,2,c
  1713  0014BA  0012               	return	
  1714  0014BC  0012               	return		;funcret
  1715  0014BE                     __end_of_LED_Control:
  1716                           	opt stack 0
  1717                           tblptru	equ	0xFF8
  1718                           tblptrh	equ	0xFF7
  1719                           tblptrl	equ	0xFF6
  1720                           tablat	equ	0xFF5
  1721                           prodh	equ	0xFF4
  1722                           prodl	equ	0xFF3
  1723                           intcon	equ	0xFF2
  1724                           postinc0	equ	0xFEE
  1725                           wreg	equ	0xFE8
  1726                           postdec1	equ	0xFE5
  1727                           fsr1l	equ	0xFE1
  1728                           indf2	equ	0xFDF
  1729                           fsr2h	equ	0xFDA
  1730                           fsr2l	equ	0xFD9
  1731                           status	equ	0xFD8
  1732                           
  1733 ;; *************** function _SCR_Init *****************
  1734 ;; Defined at:
  1735 ;;		line 38 in file "_01_USER/SCR.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;		None
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;		None
  1740 ;; Return value:  Size  Location     Type
  1741 ;;		None               void
  1742 ;; Registers used:
  1743 ;;		None
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1753 ;;Total ram usage:        0 bytes
  1754 ;; Hardware stack levels used:    1
  1755 ;; Hardware stack levels required when called:    3
  1756 ;; This function calls:
  1757 ;;		Nothing
  1758 ;; This function is called by:
  1759 ;;		_main
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763                           	psect	text10
  1764  001890                     __ptext10:
  1765                           	opt stack 0
  1766  001890                     _SCR_Init:
  1767                           	opt stack 27
  1768                           
  1769                           ;SCR.c: 41: TRISB1 = 0;
  1770                           
  1771                           ;incstack = 0
  1772  001890  9293               	bcf	3987,1,c	;volatile
  1773                           
  1774                           ;SCR.c: 42: TRISB0 = 0;
  1775  001892  9093               	bcf	3987,0,c	;volatile
  1776                           
  1777                           ;SCR.c: 45: TRISB2 = 1;
  1778  001894  8493               	bsf	3987,2,c	;volatile
  1779                           
  1780                           ;SCR.c: 48: RB1 = 0;
  1781  001896  9281               	bcf	3969,1,c	;volatile
  1782                           
  1783                           ;SCR.c: 49: RB0 = 0;
  1784  001898  9081               	bcf	3969,0,c	;volatile
  1785  00189A  0012               	return		;funcret
  1786  00189C                     __end_of_SCR_Init:
  1787                           	opt stack 0
  1788                           tblptru	equ	0xFF8
  1789                           tblptrh	equ	0xFF7
  1790                           tblptrl	equ	0xFF6
  1791                           tablat	equ	0xFF5
  1792                           prodh	equ	0xFF4
  1793                           prodl	equ	0xFF3
  1794                           intcon	equ	0xFF2
  1795                           postinc0	equ	0xFEE
  1796                           wreg	equ	0xFE8
  1797                           postdec1	equ	0xFE5
  1798                           fsr1l	equ	0xFE1
  1799                           indf2	equ	0xFDF
  1800                           fsr2h	equ	0xFDA
  1801                           fsr2l	equ	0xFD9
  1802                           status	equ	0xFD8
  1803                           
  1804 ;; *************** function _Run *****************
  1805 ;; Defined at:
  1806 ;;		line 68 in file "_01_USER/Run.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;		None
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;		None
  1811 ;; Return value:  Size  Location     Type
  1812 ;;		None               void
  1813 ;; Registers used:
  1814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1822 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1823 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1824 ;;Total ram usage:        4 bytes
  1825 ;; Hardware stack levels used:    1
  1826 ;; Hardware stack levels required when called:    6
  1827 ;; This function calls:
  1828 ;;		_GetADC6
  1829 ;;		_RS485_SendDate
  1830 ;;		_Relay_Control
  1831 ;; This function is called by:
  1832 ;;		_main
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836                           	psect	text11
  1837  001108                     __ptext11:
  1838                           	opt stack 0
  1839  001108                     _Run:
  1840                           	opt stack 24
  1841                           
  1842                           ;Run.c: 71: if( gs_Handle_Switch.ADC6 ) GetADC6();
  1843                           
  1844                           ;incstack = 0
  1845  001108  5042               	movf	_gs_Handle_Switch+1,w,c
  1846  00110A  B4D8               	btfsc	status,2,c
  1847  00110C  D003               	goto	l3791
  1848  00110E  ECBB  F008         	call	_GetADC6	;wreg free
  1849  001112  D000               	goto	l3791
  1850  001114                     l3791:
  1851                           
  1852                           ;Run.c: 74: if ( gs_Handle_Switch.Usart_OneDate )
  1853  001114  5043               	movf	_gs_Handle_Switch+2,w,c
  1854  001116  B4D8               	btfsc	status,2,c
  1855  001118  D00E               	goto	l3797
  1856                           
  1857                           ;Run.c: 75: {
  1858                           ;Run.c: 76: gs_Handle_Switch.Usart_OneDate = 0;
  1859  00111A  0E00               	movlw	0
  1860  00111C  6E43               	movwf	_gs_Handle_Switch+2,c
  1861                           
  1862                           ;Run.c: 77: RS485_SendDate(ga_RS485_SendBuff,10);
  1863  00111E  0EB0               	movlw	low _ga_RS485_SendBuff
  1864  001120  0100               	movlb	0	; () banked
  1865  001122  6FBA               	movwf	RS485_SendDate@date_dress& (0+255),b
  1866  001124  0E00               	movlw	high _ga_RS485_SendBuff
  1867  001126  0100               	movlb	0	; () banked
  1868  001128  6FBB               	movwf	(RS485_SendDate@date_dress+1)& (0+255),b
  1869  00112A  0E0A               	movlw	10
  1870  00112C  0100               	movlb	0	; () banked
  1871  00112E  6FBC               	movwf	RS485_SendDate@date_lenth& (0+255),b
  1872  001130  ECE7  F006         	call	_RS485_SendDate	;wreg free
  1873  001134  D000               	goto	l3797
  1874  001136                     l3797:
  1875                           
  1876                           ;Run.c: 78: }
  1877                           ;Run.c: 80: Relay_Control(g_RS485_Byte,gs_Handle_Switch.Relay[g_RS485_Byte - 1]);
  1878  001136  0EFF               	movlw	255
  1879  001138  0100               	movlb	0	; () banked
  1880  00113A  6FC9               	movwf	??_Run& (0+255),b
  1881  00113C  0EFF               	movlw	255
  1882  00113E  0100               	movlb	0	; () banked
  1883  001140  6FCA               	movwf	(??_Run+1)& (0+255),b
  1884  001142  503F               	movf	_g_RS485_Byte,w,c
  1885  001144  0100               	movlb	0	; () banked
  1886  001146  6FCB               	movwf	(??_Run+2)& (0+255),b
  1887  001148  6BCC               	clrf	(??_Run+3)& (0+255),b
  1888  00114A  0100               	movlb	0	; () banked
  1889  00114C  51C9               	movf	??_Run& (0+255),w,b
  1890  00114E  0100               	movlb	0	; () banked
  1891  001150  27CB               	addwf	(??_Run+2)& (0+255),f,b
  1892  001152  0100               	movlb	0	; () banked
  1893  001154  51CA               	movf	(??_Run+1)& (0+255),w,b
  1894  001156  0100               	movlb	0	; () banked
  1895  001158  23CC               	addwfc	(??_Run+3)& (0+255),f,b
  1896  00115A  0E45               	movlw	low (_gs_Handle_Switch+4)
  1897  00115C  0100               	movlb	0	; () banked
  1898  00115E  25CB               	addwf	(??_Run+2)& (0+255),w,b
  1899  001160  6ED9               	movwf	fsr2l,c
  1900  001162  0E00               	movlw	high (_gs_Handle_Switch+4)
  1901  001164  0100               	movlb	0	; () banked
  1902  001166  21CC               	addwfc	(??_Run+3)& (0+255),w,b
  1903  001168  6EDA               	movwf	fsr2h,c
  1904  00116A  50DF               	movf	indf2,w,c
  1905  00116C  6E1E               	movwf	Relay_Control@_switch,c
  1906  00116E  503F               	movf	_g_RS485_Byte,w,c
  1907  001170  ECD9  F007         	call	_Relay_Control
  1908  001174  0012               	return		;funcret
  1909  001176                     __end_of_Run:
  1910                           	opt stack 0
  1911                           tblptru	equ	0xFF8
  1912                           tblptrh	equ	0xFF7
  1913                           tblptrl	equ	0xFF6
  1914                           tablat	equ	0xFF5
  1915                           prodh	equ	0xFF4
  1916                           prodl	equ	0xFF3
  1917                           intcon	equ	0xFF2
  1918                           postinc0	equ	0xFEE
  1919                           wreg	equ	0xFE8
  1920                           postdec1	equ	0xFE5
  1921                           fsr1l	equ	0xFE1
  1922                           indf2	equ	0xFDF
  1923                           fsr2h	equ	0xFDA
  1924                           fsr2l	equ	0xFD9
  1925                           status	equ	0xFD8
  1926                           
  1927 ;; *************** function _Relay_Control *****************
  1928 ;; Defined at:
  1929 ;;		line 60 in file "_01_USER/Relay.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;  relay_num       1    wreg     unsigned char 
  1932 ;;  _switch         1   29[COMRAM] unsigned char 
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;  relay_num       1   30[COMRAM] unsigned char 
  1935 ;; Return value:  Size  Location     Type
  1936 ;;		None               void
  1937 ;; Registers used:
  1938 ;;		wreg, status,2, status,0, cstack
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1944 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1945 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1947 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1948 ;;Total ram usage:        2 bytes
  1949 ;; Hardware stack levels used:    1
  1950 ;; Hardware stack levels required when called:    5
  1951 ;; This function calls:
  1952 ;;		_delay_ms
  1953 ;; This function is called by:
  1954 ;;		_Run
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           	psect	text12
  1959  000FB2                     __ptext12:
  1960                           	opt stack 0
  1961  000FB2                     _Relay_Control:
  1962                           	opt stack 24
  1963                           
  1964                           ;incstack = 0
  1965                           ;Relay_Control@relay_num stored from wreg
  1966  000FB2  6E1F               	movwf	Relay_Control@relay_num,c
  1967                           
  1968                           ;Relay.c: 63: if( relay_num == 1)
  1969  000FB4  041F               	decf	Relay_Control@relay_num,w,c
  1970  000FB6  A4D8               	btfss	status,2,c
  1971  000FB8  D009               	goto	l3045
  1972                           
  1973                           ;Relay.c: 64: {
  1974                           ;Relay.c: 65: if(_switch)
  1975  000FBA  501E               	movf	Relay_Control@_switch,w,c
  1976  000FBC  B4D8               	btfsc	status,2,c
  1977  000FBE  D003               	goto	l509
  1978                           
  1979                           ;Relay.c: 66: {
  1980                           ;Relay.c: 67: RD0 = 1,RD1 = 0;
  1981  000FC0  8083               	bsf	3971,0,c	;volatile
  1982  000FC2  9283               	bcf	3971,1,c	;volatile
  1983                           
  1984                           ;Relay.c: 68: }
  1985  000FC4  D003               	goto	l3045
  1986  000FC6                     l509:
  1987                           
  1988                           ;Relay.c: 69: else
  1989                           ;Relay.c: 70: {
  1990                           ;Relay.c: 71: RD0 = 0,RD1 = 1;
  1991  000FC6  9083               	bcf	3971,0,c	;volatile
  1992  000FC8  8283               	bsf	3971,1,c	;volatile
  1993  000FCA  D000               	goto	l3045
  1994  000FCC                     l3045:
  1995                           
  1996                           ;Relay.c: 72: }
  1997                           ;Relay.c: 73: }
  1998                           ;Relay.c: 76: if( relay_num == 2)
  1999  000FCC  0E02               	movlw	2
  2000  000FCE  181F               	xorwf	Relay_Control@relay_num,w,c
  2001  000FD0  A4D8               	btfss	status,2,c
  2002  000FD2  D009               	goto	l3051
  2003                           
  2004                           ;Relay.c: 77: {
  2005                           ;Relay.c: 78: if(_switch)
  2006  000FD4  501E               	movf	Relay_Control@_switch,w,c
  2007  000FD6  B4D8               	btfsc	status,2,c
  2008  000FD8  D003               	goto	l512
  2009                           
  2010                           ;Relay.c: 79: {
  2011                           ;Relay.c: 80: RD2 = 1,RD3 = 0;
  2012  000FDA  8483               	bsf	3971,2,c	;volatile
  2013  000FDC  9683               	bcf	3971,3,c	;volatile
  2014                           
  2015                           ;Relay.c: 81: }
  2016  000FDE  D003               	goto	l3051
  2017  000FE0                     l512:
  2018                           
  2019                           ;Relay.c: 82: else
  2020                           ;Relay.c: 83: {
  2021                           ;Relay.c: 84: RD2 = 0,RD3 = 1;
  2022  000FE0  9483               	bcf	3971,2,c	;volatile
  2023  000FE2  8683               	bsf	3971,3,c	;volatile
  2024  000FE4  D000               	goto	l3051
  2025  000FE6                     l3051:
  2026                           
  2027                           ;Relay.c: 85: }
  2028                           ;Relay.c: 86: }
  2029                           ;Relay.c: 89: if( relay_num == 3)
  2030  000FE6  0E03               	movlw	3
  2031  000FE8  181F               	xorwf	Relay_Control@relay_num,w,c
  2032  000FEA  A4D8               	btfss	status,2,c
  2033  000FEC  D009               	goto	l3057
  2034                           
  2035                           ;Relay.c: 90: {
  2036                           ;Relay.c: 91: if(_switch)
  2037  000FEE  501E               	movf	Relay_Control@_switch,w,c
  2038  000FF0  B4D8               	btfsc	status,2,c
  2039  000FF2  D003               	goto	l515
  2040                           
  2041                           ;Relay.c: 92: {
  2042                           ;Relay.c: 93: RD4 = 1,RD7 = 0;
  2043  000FF4  8883               	bsf	3971,4,c	;volatile
  2044  000FF6  9E83               	bcf	3971,7,c	;volatile
  2045                           
  2046                           ;Relay.c: 94: }
  2047  000FF8  D003               	goto	l3057
  2048  000FFA                     l515:
  2049                           
  2050                           ;Relay.c: 95: else
  2051                           ;Relay.c: 96: {
  2052                           ;Relay.c: 97: RD4 = 0,RD7 = 1;
  2053  000FFA  9883               	bcf	3971,4,c	;volatile
  2054  000FFC  8E83               	bsf	3971,7,c	;volatile
  2055  000FFE  D000               	goto	l3057
  2056  001000                     l3057:
  2057                           
  2058                           ;Relay.c: 98: }
  2059                           ;Relay.c: 99: }
  2060                           ;Relay.c: 102: if( relay_num >= 1 && relay_num <=3 )
  2061  001000  501F               	movf	Relay_Control@relay_num,w,c
  2062  001002  B4D8               	btfsc	status,2,c
  2063  001004  D00A               	goto	l3063
  2064  001006  0E04               	movlw	4
  2065  001008  601F               	cpfslt	Relay_Control@relay_num,c
  2066  00100A  D007               	goto	l3063
  2067                           
  2068                           ;Relay.c: 103: {
  2069                           ;Relay.c: 104: delay_ms(2);
  2070  00100C  0E00               	movlw	0
  2071  00100E  6E1D               	movwf	delay_ms@_ms+1,c
  2072  001010  0E02               	movlw	2
  2073  001012  6E1C               	movwf	delay_ms@_ms,c
  2074  001014  ECFB  F00B         	call	_delay_ms	;wreg free
  2075  001018  D000               	goto	l3063
  2076  00101A                     l3063:
  2077                           
  2078                           ;Relay.c: 105: }
  2079                           ;Relay.c: 108: RD0 = 0;
  2080  00101A  9083               	bcf	3971,0,c	;volatile
  2081                           
  2082                           ;Relay.c: 109: RD1 = 0;
  2083  00101C  9283               	bcf	3971,1,c	;volatile
  2084                           
  2085                           ;Relay.c: 110: RD2 = 0;
  2086  00101E  9483               	bcf	3971,2,c	;volatile
  2087                           
  2088                           ;Relay.c: 111: RD3 = 0;
  2089  001020  9683               	bcf	3971,3,c	;volatile
  2090                           
  2091                           ;Relay.c: 112: RD4 = 0;
  2092  001022  9883               	bcf	3971,4,c	;volatile
  2093                           
  2094                           ;Relay.c: 113: RD7 = 0;
  2095  001024  9E83               	bcf	3971,7,c	;volatile
  2096  001026  0012               	return		;funcret
  2097  001028                     __end_of_Relay_Control:
  2098                           	opt stack 0
  2099                           tblptru	equ	0xFF8
  2100                           tblptrh	equ	0xFF7
  2101                           tblptrl	equ	0xFF6
  2102                           tablat	equ	0xFF5
  2103                           prodh	equ	0xFF4
  2104                           prodl	equ	0xFF3
  2105                           intcon	equ	0xFF2
  2106                           postinc0	equ	0xFEE
  2107                           wreg	equ	0xFE8
  2108                           postdec1	equ	0xFE5
  2109                           fsr1l	equ	0xFE1
  2110                           indf2	equ	0xFDF
  2111                           fsr2h	equ	0xFDA
  2112                           fsr2l	equ	0xFD9
  2113                           status	equ	0xFD8
  2114                           
  2115 ;; *************** function _delay_ms *****************
  2116 ;; Defined at:
  2117 ;;		line 37 in file "_01_USER/My_Delay.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;  _ms             2   27[COMRAM] unsigned int 
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;		None
  2122 ;; Return value:  Size  Location     Type
  2123 ;;		None               void
  2124 ;; Registers used:
  2125 ;;		wreg, status,2, status,0, cstack
  2126 ;; Tracked objects:
  2127 ;;		On entry : 0/0
  2128 ;;		On exit  : 0/0
  2129 ;;		Unchanged: 0/0
  2130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2131 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2134 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2135 ;;Total ram usage:        2 bytes
  2136 ;; Hardware stack levels used:    1
  2137 ;; Hardware stack levels required when called:    4
  2138 ;; This function calls:
  2139 ;;		_delay1ms
  2140 ;; This function is called by:
  2141 ;;		_Relay_Control
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145                           	psect	text13
  2146  0017F6                     __ptext13:
  2147                           	opt stack 0
  2148  0017F6                     _delay_ms:
  2149                           	opt stack 24
  2150                           
  2151                           ;My_Delay.c: 39: while(_ms--) delay1ms();
  2152                           
  2153                           ;incstack = 0
  2154  0017F6  D003               	goto	l2525
  2155  0017F8                     l2523:
  2156  0017F8  ECC2  F00A         	call	_delay1ms	;wreg free
  2157  0017FC  D000               	goto	l2525
  2158  0017FE                     l2525:
  2159  0017FE  061C               	decf	delay_ms@_ms,f,c
  2160  001800  A0D8               	btfss	status,0,c
  2161  001802  061D               	decf	delay_ms@_ms+1,f,c
  2162  001804  281C               	incf	delay_ms@_ms,w,c
  2163  001806  E1F8               	bnz	l2523
  2164  001808  281D               	incf	delay_ms@_ms+1,w,c
  2165  00180A  A4D8               	btfss	status,2,c
  2166  00180C  D7F5               	goto	l2523
  2167  00180E  0012               	return		;funcret
  2168  001810                     __end_of_delay_ms:
  2169                           	opt stack 0
  2170                           tblptru	equ	0xFF8
  2171                           tblptrh	equ	0xFF7
  2172                           tblptrl	equ	0xFF6
  2173                           tablat	equ	0xFF5
  2174                           prodh	equ	0xFF4
  2175                           prodl	equ	0xFF3
  2176                           intcon	equ	0xFF2
  2177                           postinc0	equ	0xFEE
  2178                           wreg	equ	0xFE8
  2179                           postdec1	equ	0xFE5
  2180                           fsr1l	equ	0xFE1
  2181                           indf2	equ	0xFDF
  2182                           fsr2h	equ	0xFDA
  2183                           fsr2l	equ	0xFD9
  2184                           status	equ	0xFD8
  2185                           
  2186 ;; *************** function _delay1ms *****************
  2187 ;; Defined at:
  2188 ;;		line 59 in file "_01_USER/My_Delay.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;		None
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;  c               1   26[COMRAM] unsigned char 
  2193 ;;  b               1   25[COMRAM] unsigned char 
  2194 ;;  a               1   24[COMRAM] unsigned char 
  2195 ;; Return value:  Size  Location     Type
  2196 ;;		None               void
  2197 ;; Registers used:
  2198 ;;		wreg, status,2, status,0
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2205 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2207 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2208 ;;Total ram usage:        3 bytes
  2209 ;; Hardware stack levels used:    1
  2210 ;; Hardware stack levels required when called:    3
  2211 ;; This function calls:
  2212 ;;		Nothing
  2213 ;; This function is called by:
  2214 ;;		_delay_ms
  2215 ;; This function uses a non-reentrant model
  2216 ;;
  2217                           
  2218                           	psect	text14
  2219  001584                     __ptext14:
  2220                           	opt stack 0
  2221  001584                     _delay1ms:
  2222                           	opt stack 24
  2223                           
  2224                           ;My_Delay.c: 61: unsigned char a,b,c;
  2225                           ;My_Delay.c: 62: for(c=1;c>0;c--)
  2226                           
  2227                           ;incstack = 0
  2228  001584  0E01               	movlw	1
  2229  001586  6E1B               	movwf	delay1ms@c,c
  2230  001588  501B               	movf	delay1ms@c,w,c
  2231  00158A  B4D8               	btfsc	status,2,c
  2232  00158C  0012               	return	
  2233  00158E  D001               	goto	l2387
  2234  001590  0012               	return	
  2235  001592                     l2387:
  2236                           
  2237                           ;My_Delay.c: 63: for(b=94;b>0;b--)
  2238  001592  0E5E               	movlw	94
  2239  001594  6E1A               	movwf	delay1ms@b,c
  2240  001596  501A               	movf	delay1ms@b,w,c
  2241  001598  B4D8               	btfsc	status,2,c
  2242  00159A  D00D               	goto	l2403
  2243  00159C  D001               	goto	l2391
  2244  00159E  D00B               	goto	l2403
  2245  0015A0                     l2391:
  2246                           
  2247                           ;My_Delay.c: 64: for(a=2;a>0;a--);
  2248  0015A0  0E02               	movlw	2
  2249  0015A2  6E19               	movwf	delay1ms@a,c
  2250  0015A4  5019               	movf	delay1ms@a,w,c
  2251  0015A6  B4D8               	btfsc	status,2,c
  2252  0015A8  D004               	goto	l2399
  2253  0015AA  D001               	goto	l2395
  2254  0015AC  D002               	goto	l2399
  2255  0015AE                     l2395:
  2256  0015AE  0619               	decf	delay1ms@a,f,c
  2257  0015B0  D7F9               	goto	L1
  2258  0015B2                     l2399:
  2259  0015B2  061A               	decf	delay1ms@b,f,c
  2260  0015B4  D7F0               	goto	L2
  2261  0015B6                     l2403:
  2262  0015B6  061B               	decf	delay1ms@c,f,c
  2263  0015B8  D7E7               	goto	L3
  2264  0015BA  0012               	return		;funcret
  2265  0015BC                     __end_of_delay1ms:
  2266                           	opt stack 0
  2267                           tblptru	equ	0xFF8
  2268                           tblptrh	equ	0xFF7
  2269                           tblptrl	equ	0xFF6
  2270                           tablat	equ	0xFF5
  2271                           prodh	equ	0xFF4
  2272                           prodl	equ	0xFF3
  2273                           intcon	equ	0xFF2
  2274                           postinc0	equ	0xFEE
  2275                           wreg	equ	0xFE8
  2276                           postdec1	equ	0xFE5
  2277                           fsr1l	equ	0xFE1
  2278                           indf2	equ	0xFDF
  2279                           fsr2h	equ	0xFDA
  2280                           fsr2l	equ	0xFD9
  2281                           status	equ	0xFD8
  2282                           
  2283 ;; *************** function _RS485_SendDate *****************
  2284 ;; Defined at:
  2285 ;;		line 77 in file "_01_USER/My_USART.c"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;  date_dress      2    0[BANK0 ] PTR unsigned char 
  2288 ;;		 -> ga_RS485_SendBuff(10), 
  2289 ;;  date_lenth      1    2[BANK0 ] unsigned char 
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;		None
  2292 ;; Return value:  Size  Location     Type
  2293 ;;		None               void
  2294 ;; Registers used:
  2295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2301 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2303 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2304 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2305 ;;Total ram usage:        4 bytes
  2306 ;; Hardware stack levels used:    1
  2307 ;; Hardware stack levels required when called:    5
  2308 ;; This function calls:
  2309 ;;		_VerifyCRC
  2310 ;; This function is called by:
  2311 ;;		_Run
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314                           
  2315                           	psect	text15
  2316  000DCE                     __ptext15:
  2317                           	opt stack 0
  2318  000DCE                     _RS485_SendDate:
  2319                           	opt stack 24
  2320                           
  2321                           ;My_USART.c: 80: date_dress[--date_lenth] = 0xff;
  2322                           
  2323                           ;incstack = 0
  2324  000DCE  0100               	movlb	0	; () banked
  2325  000DD0  07BC               	decf	RS485_SendDate@date_lenth& (0+255),f,b
  2326  000DD2  0100               	movlb	0	; () banked
  2327  000DD4  51BC               	movf	RS485_SendDate@date_lenth& (0+255),w,b
  2328  000DD6  0D01               	mullw	1
  2329  000DD8  50F3               	movf	prodl,w,c
  2330  000DDA  0100               	movlb	0	; () banked
  2331  000DDC  25BA               	addwf	RS485_SendDate@date_dress& (0+255),w,b
  2332  000DDE  6ED9               	movwf	fsr2l,c
  2333  000DE0  50F4               	movf	prodh,w,c
  2334  000DE2  0100               	movlb	0	; () banked
  2335  000DE4  21BB               	addwfc	(RS485_SendDate@date_dress+1)& (0+255),w,b
  2336  000DE6  6EDA               	movwf	fsr2h,c
  2337  000DE8  0EFF               	movlw	255
  2338  000DEA  6EDF               	movwf	indf2,c
  2339                           
  2340                           ; BSR set to: 0
  2341                           ;My_USART.c: 83: VerifyCRC(date_dress,10);
  2342  000DEC  C0BA  F026         	movff	RS485_SendDate@date_dress,VerifyCRC@DataBuff
  2343  000DF0  C0BB  F027         	movff	RS485_SendDate@date_dress+1,VerifyCRC@DataBuff+1
  2344  000DF4  0E0A               	movlw	10
  2345  000DF6  6E28               	movwf	VerifyCRC@date_lenth,c
  2346  000DF8  ECF0  F004         	call	_VerifyCRC	;wreg free
  2347                           
  2348                           ;My_USART.c: 86: while( (!TXSTA1bits.TRMT) );
  2349  000DFC  D000               	goto	l202
  2350  000DFE                     l202:
  2351  000DFE  A2AC               	btfss	4012,1,c	;volatile
  2352  000E00  D7FE               	goto	l202
  2353                           
  2354                           ;My_USART.c: 87: RC0 = 0;
  2355  000E02  9082               	bcf	3970,0,c	;volatile
  2356                           
  2357                           ;My_USART.c: 90: TXREG1 = date_dress[date_lenth];
  2358  000E04  0100               	movlb	0	; () banked
  2359  000E06  51BC               	movf	RS485_SendDate@date_lenth& (0+255),w,b
  2360  000E08  0D01               	mullw	1
  2361  000E0A  50F3               	movf	prodl,w,c
  2362  000E0C  0100               	movlb	0	; () banked
  2363  000E0E  25BA               	addwf	RS485_SendDate@date_dress& (0+255),w,b
  2364  000E10  6ED9               	movwf	fsr2l,c
  2365  000E12  50F4               	movf	prodh,w,c
  2366  000E14  0100               	movlb	0	; () banked
  2367  000E16  21BB               	addwfc	(RS485_SendDate@date_dress+1)& (0+255),w,b
  2368  000E18  6EDA               	movwf	fsr2h,c
  2369  000E1A  50DF               	movf	indf2,w,c
  2370  000E1C  6EAD               	movwf	4013,c	;volatile
  2371                           
  2372                           ;My_USART.c: 91: while( (!TXSTA1bits.TRMT) );
  2373  000E1E  D000               	goto	l205
  2374  000E20                     l205:
  2375  000E20  B2AC               	btfsc	4012,1,c	;volatile
  2376  000E22  D02E               	goto	l3715
  2377  000E24  D7FD               	goto	l205
  2378                           
  2379                           ;My_USART.c: 94: while( date_lenth --)
  2380  000E26  D02C               	goto	l3715
  2381  000E28                     l3711:
  2382                           
  2383                           ;My_USART.c: 95: {
  2384                           ;My_USART.c: 96: if(date_dress[date_lenth] == 0xff ) date_dress[date_lenth]--;
  2385  000E28  0100               	movlb	0	; () banked
  2386  000E2A  51BC               	movf	RS485_SendDate@date_lenth& (0+255),w,b
  2387  000E2C  0D01               	mullw	1
  2388  000E2E  50F3               	movf	prodl,w,c
  2389  000E30  0100               	movlb	0	; () banked
  2390  000E32  25BA               	addwf	RS485_SendDate@date_dress& (0+255),w,b
  2391  000E34  6ED9               	movwf	fsr2l,c
  2392  000E36  50F4               	movf	prodh,w,c
  2393  000E38  0100               	movlb	0	; () banked
  2394  000E3A  21BB               	addwfc	(RS485_SendDate@date_dress+1)& (0+255),w,b
  2395  000E3C  6EDA               	movwf	fsr2h,c
  2396  000E3E  28DE               	incf	postinc2,w,c
  2397  000E40  A4D8               	btfss	status,2,c
  2398  000E42  D00C               	goto	l210
  2399                           
  2400                           ; BSR set to: 0
  2401  000E44  0100               	movlb	0	; () banked
  2402  000E46  51BC               	movf	RS485_SendDate@date_lenth& (0+255),w,b
  2403  000E48  0D01               	mullw	1
  2404  000E4A  50F3               	movf	prodl,w,c
  2405  000E4C  0100               	movlb	0	; () banked
  2406  000E4E  25BA               	addwf	RS485_SendDate@date_dress& (0+255),w,b
  2407  000E50  6ED9               	movwf	fsr2l,c
  2408  000E52  50F4               	movf	prodh,w,c
  2409  000E54  0100               	movlb	0	; () banked
  2410  000E56  21BB               	addwfc	(RS485_SendDate@date_dress+1)& (0+255),w,b
  2411  000E58  6EDA               	movwf	fsr2h,c
  2412  000E5A  06DF               	decf	indf2,f,c
  2413  000E5C                     l210:
  2414                           
  2415                           ; BSR set to: 0
  2416                           ;My_USART.c: 97: TXREG1 = date_dress[date_lenth];
  2417  000E5C  0100               	movlb	0	; () banked
  2418  000E5E  51BC               	movf	RS485_SendDate@date_lenth& (0+255),w,b
  2419  000E60  0D01               	mullw	1
  2420  000E62  50F3               	movf	prodl,w,c
  2421  000E64  0100               	movlb	0	; () banked
  2422  000E66  25BA               	addwf	RS485_SendDate@date_dress& (0+255),w,b
  2423  000E68  6ED9               	movwf	fsr2l,c
  2424  000E6A  50F4               	movf	prodh,w,c
  2425  000E6C  0100               	movlb	0	; () banked
  2426  000E6E  21BB               	addwfc	(RS485_SendDate@date_dress+1)& (0+255),w,b
  2427  000E70  6EDA               	movwf	fsr2h,c
  2428  000E72  50DF               	movf	indf2,w,c
  2429  000E74  6EAD               	movwf	4013,c	;volatile
  2430                           
  2431                           ;My_USART.c: 98: while( (!TXSTA1bits.TRMT));
  2432  000E76  D000               	goto	l211
  2433  000E78                     l211:
  2434  000E78  B2AC               	btfsc	4012,1,c	;volatile
  2435  000E7A  D002               	goto	l3715
  2436  000E7C  D7FD               	goto	l211
  2437  000E7E  D000               	goto	l3715
  2438  000E80                     l3715:
  2439  000E80  0100               	movlb	0	; () banked
  2440  000E82  07BC               	decf	RS485_SendDate@date_lenth& (0+255),f,b
  2441  000E84  0100               	movlb	0	; () banked
  2442  000E86  29BC               	incf	RS485_SendDate@date_lenth& (0+255),w,b
  2443  000E88  A4D8               	btfss	status,2,c
  2444  000E8A  D7CE               	goto	l3711
  2445                           
  2446                           ; BSR set to: 0
  2447                           ;My_USART.c: 99: }
  2448                           ;My_USART.c: 101: RC0 = 1;
  2449  000E8C  8082               	bsf	3970,0,c	;volatile
  2450                           
  2451                           ; BSR set to: 0
  2452  000E8E  0012               	return		;funcret
  2453  000E90                     __end_of_RS485_SendDate:
  2454                           	opt stack 0
  2455                           tblptru	equ	0xFF8
  2456                           tblptrh	equ	0xFF7
  2457                           tblptrl	equ	0xFF6
  2458                           tablat	equ	0xFF5
  2459                           prodh	equ	0xFF4
  2460                           prodl	equ	0xFF3
  2461                           intcon	equ	0xFF2
  2462                           postinc0	equ	0xFEE
  2463                           wreg	equ	0xFE8
  2464                           postdec1	equ	0xFE5
  2465                           fsr1l	equ	0xFE1
  2466                           indf2	equ	0xFDF
  2467                           postinc2	equ	0xFDE
  2468                           fsr2h	equ	0xFDA
  2469                           fsr2l	equ	0xFD9
  2470                           status	equ	0xFD8
  2471                           
  2472 ;; *************** function _GetADC6 *****************
  2473 ;; Defined at:
  2474 ;;		line 67 in file "_01_USER/My_ADC.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;		None
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;		None
  2479 ;; Return value:  Size  Location     Type
  2480 ;;		None               void
  2481 ;; Registers used:
  2482 ;;		wreg, status,2, status,0, cstack
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2492 ;;Total ram usage:        0 bytes
  2493 ;; Hardware stack levels used:    1
  2494 ;; Hardware stack levels required when called:    5
  2495 ;; This function calls:
  2496 ;;		_BusyADC
  2497 ;;		_ConvertADC
  2498 ;;		_ReadADC
  2499 ;;		___ftdiv
  2500 ;;		___ftmul
  2501 ;;		___lwtoft
  2502 ;; This function is called by:
  2503 ;;		_Run
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507                           	psect	text16
  2508  001176                     __ptext16:
  2509                           	opt stack 0
  2510  001176                     _GetADC6:
  2511                           	opt stack 24
  2512                           
  2513                           ;My_ADC.c: 69: ConvertADC();
  2514                           
  2515                           ; BSR set to: 0
  2516                           ;incstack = 0
  2517  001176  EC4E  F00C         	call	_ConvertADC	;wreg free
  2518                           
  2519                           ;My_ADC.c: 70: while(BusyADC());
  2520  00117A  D000               	goto	l3781
  2521  00117C                     l3781:
  2522  00117C  EC3A  F00C         	call	_BusyADC	;wreg free
  2523  001180  0900               	iorlw	0
  2524  001182  A4D8               	btfss	status,2,c
  2525  001184  D7FB               	goto	l3781
  2526                           
  2527                           ;My_ADC.c: 71: gf_ADC6_Buff =(unsigned int)ReadADC()*4.096f/4095.0f;
  2528  001186  0E12               	movlw	18
  2529  001188  6E27               	movwf	___ftmul@f2,c
  2530  00118A  0E83               	movlw	131
  2531  00118C  6E28               	movwf	___ftmul@f2+1,c
  2532  00118E  0E40               	movlw	64
  2533  001190  6E29               	movwf	___ftmul@f2+2,c
  2534  001192  EC32  F00C         	call	_ReadADC	;wreg free
  2535  001196  C019  F021         	movff	?_ReadADC,___lwtoft@c
  2536  00119A  C01A  F022         	movff	?_ReadADC+1,___lwtoft@c+1
  2537  00119E  EC71  F00B         	call	___lwtoft	;wreg free
  2538  0011A2  C021  F024         	movff	?___lwtoft,___ftmul@f1
  2539  0011A6  C022  F025         	movff	?___lwtoft+1,___ftmul@f1+1
  2540  0011AA  C023  F026         	movff	?___lwtoft+2,___ftmul@f1+2
  2541  0011AE  EC84  F005         	call	___ftmul	;wreg free
  2542  0011B2  C024  F0BA         	movff	?___ftmul,___ftdiv@f1
  2543  0011B6  C025  F0BB         	movff	?___ftmul+1,___ftdiv@f1+1
  2544  0011BA  C026  F0BC         	movff	?___ftmul+2,___ftdiv@f1+2
  2545  0011BE  0EF0               	movlw	240
  2546  0011C0  0100               	movlb	0	; () banked
  2547  0011C2  6FBD               	movwf	___ftdiv@f2& (0+255),b
  2548  0011C4  0E7F               	movlw	127
  2549  0011C6  0100               	movlb	0	; () banked
  2550  0011C8  6FBE               	movwf	(___ftdiv@f2+1)& (0+255),b
  2551  0011CA  0E45               	movlw	69
  2552  0011CC  0100               	movlb	0	; () banked
  2553  0011CE  6FBF               	movwf	(___ftdiv@f2+2)& (0+255),b
  2554  0011D0  EC47  F004         	call	___ftdiv	;wreg free
  2555  0011D4  C0BA  F037         	movff	?___ftdiv,_gf_ADC6_Buff	;volatile
  2556  0011D8  C0BB  F038         	movff	?___ftdiv+1,_gf_ADC6_Buff+1	;volatile
  2557  0011DC  C0BC  F039         	movff	?___ftdiv+2,_gf_ADC6_Buff+2	;volatile
  2558  0011E0  0012               	return		;funcret
  2559  0011E2                     __end_of_GetADC6:
  2560                           	opt stack 0
  2561                           tblptru	equ	0xFF8
  2562                           tblptrh	equ	0xFF7
  2563                           tblptrl	equ	0xFF6
  2564                           tablat	equ	0xFF5
  2565                           prodh	equ	0xFF4
  2566                           prodl	equ	0xFF3
  2567                           intcon	equ	0xFF2
  2568                           postinc0	equ	0xFEE
  2569                           wreg	equ	0xFE8
  2570                           postdec1	equ	0xFE5
  2571                           fsr1l	equ	0xFE1
  2572                           indf2	equ	0xFDF
  2573                           postinc2	equ	0xFDE
  2574                           fsr2h	equ	0xFDA
  2575                           fsr2l	equ	0xFD9
  2576                           status	equ	0xFD8
  2577                           
  2578 ;; *************** function ___lwtoft *****************
  2579 ;; Defined at:
  2580 ;;		line 28 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  2581 ;; Parameters:    Size  Location     Type
  2582 ;;  c               2   32[COMRAM] unsigned int 
  2583 ;; Auto vars:     Size  Location     Type
  2584 ;;		None
  2585 ;; Return value:  Size  Location     Type
  2586 ;;                  3   32[COMRAM] float 
  2587 ;; Registers used:
  2588 ;;		wreg, status,2, status,0, cstack
  2589 ;; Tracked objects:
  2590 ;;		On entry : 0/0
  2591 ;;		On exit  : 0/0
  2592 ;;		Unchanged: 0/0
  2593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2594 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2597 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2598 ;;Total ram usage:        3 bytes
  2599 ;; Hardware stack levels used:    1
  2600 ;; Hardware stack levels required when called:    4
  2601 ;; This function calls:
  2602 ;;		___ftpack
  2603 ;; This function is called by:
  2604 ;;		_GetADC6
  2605 ;; This function uses a non-reentrant model
  2606 ;;
  2607                           
  2608                           	psect	text17
  2609  0016E2                     __ptext17:
  2610                           	opt stack 0
  2611  0016E2                     ___lwtoft:
  2612                           	opt stack 24
  2613                           
  2614                           ;incstack = 0
  2615  0016E2  C021  F019         	movff	___lwtoft@c,___ftpack@arg
  2616  0016E6  C022  F01A         	movff	___lwtoft@c+1,___ftpack@arg+1
  2617  0016EA  6A1B               	clrf	___ftpack@arg+2,c
  2618  0016EC  0E8E               	movlw	142
  2619  0016EE  6E1C               	movwf	___ftpack@exp,c
  2620  0016F0  0E00               	movlw	0
  2621  0016F2  6E1D               	movwf	___ftpack@sign,c
  2622  0016F4  EC84  F006         	call	___ftpack	;wreg free
  2623  0016F8  C019  F021         	movff	?___ftpack,?___lwtoft
  2624  0016FC  C01A  F022         	movff	?___ftpack+1,?___lwtoft+1
  2625  001700  C01B  F023         	movff	?___ftpack+2,?___lwtoft+2
  2626  001704  0012               	return	
  2627  001706  0012               	return		;funcret
  2628  001708                     __end_of___lwtoft:
  2629                           	opt stack 0
  2630                           tblptru	equ	0xFF8
  2631                           tblptrh	equ	0xFF7
  2632                           tblptrl	equ	0xFF6
  2633                           tablat	equ	0xFF5
  2634                           prodh	equ	0xFF4
  2635                           prodl	equ	0xFF3
  2636                           intcon	equ	0xFF2
  2637                           postinc0	equ	0xFEE
  2638                           wreg	equ	0xFE8
  2639                           postdec1	equ	0xFE5
  2640                           fsr1l	equ	0xFE1
  2641                           indf2	equ	0xFDF
  2642                           postinc2	equ	0xFDE
  2643                           fsr2h	equ	0xFDA
  2644                           fsr2l	equ	0xFD9
  2645                           status	equ	0xFD8
  2646                           
  2647 ;; *************** function ___ftmul *****************
  2648 ;; Defined at:
  2649 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  2650 ;; Parameters:    Size  Location     Type
  2651 ;;  f1              3   35[COMRAM] float 
  2652 ;;  f2              3   38[COMRAM] float 
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;  f3_as_produc    3   45[COMRAM] unsigned um
  2655 ;;  sign            1   49[COMRAM] unsigned char 
  2656 ;;  cntr            1   48[COMRAM] unsigned char 
  2657 ;;  exp             1   44[COMRAM] unsigned char 
  2658 ;; Return value:  Size  Location     Type
  2659 ;;                  3   35[COMRAM] float 
  2660 ;; Registers used:
  2661 ;;		wreg, status,2, status,0, cstack
  2662 ;; Tracked objects:
  2663 ;;		On entry : 0/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2667 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2668 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2669 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2670 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2671 ;;Total ram usage:       15 bytes
  2672 ;; Hardware stack levels used:    1
  2673 ;; Hardware stack levels required when called:    4
  2674 ;; This function calls:
  2675 ;;		___ftpack
  2676 ;; This function is called by:
  2677 ;;		_GetADC6
  2678 ;;		_TM1640_Show_Decimal
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682                           	psect	text18
  2683  000B08                     __ptext18:
  2684                           	opt stack 0
  2685  000B08                     ___ftmul:
  2686                           	opt stack 24
  2687                           
  2688                           ;incstack = 0
  2689  000B08  C026  F02A         	movff	___ftmul@f1+2,??___ftmul
  2690  000B0C  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  2691  000B0E  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  2692  000B10  3425               	rlcf	___ftmul@f1+1,w,c
  2693  000B12  362A               	rlcf	??___ftmul& (0+255),f,c
  2694  000B14  E301               	bnc	u4041
  2695  000B16  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  2696  000B18                     u4041:
  2697  000B18  502A               	movf	??___ftmul,w,c
  2698  000B1A  6E2D               	movwf	___ftmul@exp,c
  2699  000B1C  502D               	movf	___ftmul@exp,w,c
  2700  000B1E  A4D8               	btfss	status,2,c
  2701  000B20  D007               	goto	l3659
  2702  000B22  0E00               	movlw	0
  2703  000B24  6E24               	movwf	?___ftmul,c
  2704  000B26  0E00               	movlw	0
  2705  000B28  6E25               	movwf	?___ftmul+1,c
  2706  000B2A  0E00               	movlw	0
  2707  000B2C  6E26               	movwf	?___ftmul+2,c
  2708  000B2E  0012               	return	
  2709  000B30                     l3659:
  2710  000B30  C029  F02A         	movff	___ftmul@f2+2,??___ftmul
  2711  000B34  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  2712  000B36  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  2713  000B38  3428               	rlcf	___ftmul@f2+1,w,c
  2714  000B3A  362A               	rlcf	??___ftmul& (0+255),f,c
  2715  000B3C  E301               	bnc	u4061
  2716  000B3E  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  2717  000B40                     u4061:
  2718  000B40  502A               	movf	??___ftmul,w,c
  2719  000B42  6E32               	movwf	___ftmul@sign,c
  2720  000B44  5032               	movf	___ftmul@sign,w,c
  2721  000B46  A4D8               	btfss	status,2,c
  2722  000B48  D007               	goto	l3665
  2723  000B4A  0E00               	movlw	0
  2724  000B4C  6E24               	movwf	?___ftmul,c
  2725  000B4E  0E00               	movlw	0
  2726  000B50  6E25               	movwf	?___ftmul+1,c
  2727  000B52  0E00               	movlw	0
  2728  000B54  6E26               	movwf	?___ftmul+2,c
  2729  000B56  0012               	return	
  2730  000B58                     l3665:
  2731  000B58  5032               	movf	___ftmul@sign,w,c
  2732  000B5A  0F7B               	addlw	123
  2733  000B5C  262D               	addwf	___ftmul@exp,f,c
  2734  000B5E  C026  F032         	movff	___ftmul@f1+2,___ftmul@sign
  2735  000B62  5029               	movf	___ftmul@f2+2,w,c
  2736  000B64  1A32               	xorwf	___ftmul@sign,f,c
  2737  000B66  0E80               	movlw	128
  2738  000B68  1632               	andwf	___ftmul@sign,f,c
  2739  000B6A  8E25               	bsf	___ftmul@f1+1,7,c
  2740  000B6C  8E28               	bsf	___ftmul@f2+1,7,c
  2741  000B6E  0EFF               	movlw	255
  2742  000B70  1627               	andwf	___ftmul@f2,f,c
  2743  000B72  0EFF               	movlw	255
  2744  000B74  1628               	andwf	___ftmul@f2+1,f,c
  2745  000B76  0E00               	movlw	0
  2746  000B78  1629               	andwf	___ftmul@f2+2,f,c
  2747  000B7A  0E00               	movlw	0
  2748  000B7C  6E2E               	movwf	___ftmul@f3_as_product,c
  2749  000B7E  0E00               	movlw	0
  2750  000B80  6E2F               	movwf	___ftmul@f3_as_product+1,c
  2751  000B82  0E00               	movlw	0
  2752  000B84  6E30               	movwf	___ftmul@f3_as_product+2,c
  2753  000B86  0E07               	movlw	7
  2754  000B88  6E31               	movwf	___ftmul@cntr,c
  2755  000B8A  D000               	goto	l3679
  2756  000B8C                     l3679:
  2757  000B8C  A024               	btfss	___ftmul@f1,0,c
  2758  000B8E  D007               	goto	l3683
  2759  000B90  5027               	movf	___ftmul@f2,w,c
  2760  000B92  262E               	addwf	___ftmul@f3_as_product,f,c
  2761  000B94  5028               	movf	___ftmul@f2+1,w,c
  2762  000B96  222F               	addwfc	___ftmul@f3_as_product+1,f,c
  2763  000B98  5029               	movf	___ftmul@f2+2,w,c
  2764  000B9A  2230               	addwfc	___ftmul@f3_as_product+2,f,c
  2765  000B9C  D000               	goto	l3683
  2766  000B9E                     l3683:
  2767  000B9E  90D8               	bcf	status,0,c
  2768  000BA0  3226               	rrcf	___ftmul@f1+2,f,c
  2769  000BA2  3225               	rrcf	___ftmul@f1+1,f,c
  2770  000BA4  3224               	rrcf	___ftmul@f1,f,c
  2771  000BA6  90D8               	bcf	status,0,c
  2772  000BA8  3627               	rlcf	___ftmul@f2,f,c
  2773  000BAA  3628               	rlcf	___ftmul@f2+1,f,c
  2774  000BAC  3629               	rlcf	___ftmul@f2+2,f,c
  2775  000BAE  2E31               	decfsz	___ftmul@cntr,f,c
  2776  000BB0  D7ED               	goto	l3679
  2777  000BB2  D000               	goto	l3687
  2778  000BB4                     l3687:
  2779  000BB4  0E09               	movlw	9
  2780  000BB6  6E31               	movwf	___ftmul@cntr,c
  2781  000BB8  D000               	goto	l3689
  2782  000BBA                     l3689:
  2783  000BBA  A024               	btfss	___ftmul@f1,0,c
  2784  000BBC  D007               	goto	l3693
  2785  000BBE  5027               	movf	___ftmul@f2,w,c
  2786  000BC0  262E               	addwf	___ftmul@f3_as_product,f,c
  2787  000BC2  5028               	movf	___ftmul@f2+1,w,c
  2788  000BC4  222F               	addwfc	___ftmul@f3_as_product+1,f,c
  2789  000BC6  5029               	movf	___ftmul@f2+2,w,c
  2790  000BC8  2230               	addwfc	___ftmul@f3_as_product+2,f,c
  2791  000BCA  D000               	goto	l3693
  2792  000BCC                     l3693:
  2793  000BCC  90D8               	bcf	status,0,c
  2794  000BCE  3226               	rrcf	___ftmul@f1+2,f,c
  2795  000BD0  3225               	rrcf	___ftmul@f1+1,f,c
  2796  000BD2  3224               	rrcf	___ftmul@f1,f,c
  2797  000BD4  90D8               	bcf	status,0,c
  2798  000BD6  3230               	rrcf	___ftmul@f3_as_product+2,f,c
  2799  000BD8  322F               	rrcf	___ftmul@f3_as_product+1,f,c
  2800  000BDA  322E               	rrcf	___ftmul@f3_as_product,f,c
  2801  000BDC  2E31               	decfsz	___ftmul@cntr,f,c
  2802  000BDE  D7ED               	goto	l3689
  2803  000BE0  D000               	goto	l3697
  2804  000BE2                     l3697:
  2805  000BE2  C02E  F019         	movff	___ftmul@f3_as_product,___ftpack@arg
  2806  000BE6  C02F  F01A         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2807  000BEA  C030  F01B         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2808  000BEE  C02D  F01C         	movff	___ftmul@exp,___ftpack@exp
  2809  000BF2  C032  F01D         	movff	___ftmul@sign,___ftpack@sign
  2810  000BF6  EC84  F006         	call	___ftpack	;wreg free
  2811  000BFA  C019  F024         	movff	?___ftpack,?___ftmul
  2812  000BFE  C01A  F025         	movff	?___ftpack+1,?___ftmul+1
  2813  000C02  C01B  F026         	movff	?___ftpack+2,?___ftmul+2
  2814  000C06  0012               	return	
  2815  000C08  0012               	return		;funcret
  2816  000C0A                     __end_of___ftmul:
  2817                           	opt stack 0
  2818                           tblptru	equ	0xFF8
  2819                           tblptrh	equ	0xFF7
  2820                           tblptrl	equ	0xFF6
  2821                           tablat	equ	0xFF5
  2822                           prodh	equ	0xFF4
  2823                           prodl	equ	0xFF3
  2824                           intcon	equ	0xFF2
  2825                           postinc0	equ	0xFEE
  2826                           wreg	equ	0xFE8
  2827                           postdec1	equ	0xFE5
  2828                           fsr1l	equ	0xFE1
  2829                           indf2	equ	0xFDF
  2830                           postinc2	equ	0xFDE
  2831                           fsr2h	equ	0xFDA
  2832                           fsr2l	equ	0xFD9
  2833                           status	equ	0xFD8
  2834                           
  2835 ;; *************** function ___ftdiv *****************
  2836 ;; Defined at:
  2837 ;;		line 54 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;  f1              3    0[BANK0 ] float 
  2840 ;;  f2              3    3[BANK0 ] float 
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;  f3              3   10[BANK0 ] float 
  2843 ;;  sign            1   14[BANK0 ] unsigned char 
  2844 ;;  exp             1   13[BANK0 ] unsigned char 
  2845 ;;  cntr            1    9[BANK0 ] unsigned char 
  2846 ;; Return value:  Size  Location     Type
  2847 ;;                  3    0[BANK0 ] float 
  2848 ;; Registers used:
  2849 ;;		wreg, status,2, status,0, cstack
  2850 ;; Tracked objects:
  2851 ;;		On entry : 0/0
  2852 ;;		On exit  : 0/0
  2853 ;;		Unchanged: 0/0
  2854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2855 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2856 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2857 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2858 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2859 ;;Total ram usage:       15 bytes
  2860 ;; Hardware stack levels used:    1
  2861 ;; Hardware stack levels required when called:    4
  2862 ;; This function calls:
  2863 ;;		___ftpack
  2864 ;; This function is called by:
  2865 ;;		_GetADC6
  2866 ;;		_TM1640_Show_Decimal
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           
  2870                           	psect	text19
  2871  00088E                     __ptext19:
  2872                           	opt stack 0
  2873  00088E                     ___ftdiv:
  2874                           	opt stack 24
  2875                           
  2876                           ;incstack = 0
  2877  00088E  C0BC  F0C0         	movff	___ftdiv@f1+2,??___ftdiv
  2878  000892  0100               	movlb	0	; () banked
  2879  000894  6BC1               	clrf	(??___ftdiv+1)& (0+255),b
  2880  000896  6BC2               	clrf	(??___ftdiv+2)& (0+255),b
  2881  000898  0100               	movlb	0	; () banked
  2882  00089A  35BB               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  2883  00089C  0100               	movlb	0	; () banked
  2884  00089E  37C0               	rlcf	??___ftdiv& (0+255),f,b
  2885  0008A0  E301               	bnc	u3991
  2886  0008A2  81C1               	bsf	(??___ftdiv+1)& (0+255),0,b
  2887  0008A4                     u3991:
  2888  0008A4  0100               	movlb	0	; () banked
  2889  0008A6  51C0               	movf	??___ftdiv& (0+255),w,b
  2890  0008A8  0100               	movlb	0	; () banked
  2891  0008AA  6FC7               	movwf	___ftdiv@exp& (0+255),b
  2892  0008AC  0100               	movlb	0	; () banked
  2893  0008AE  51C7               	movf	___ftdiv@exp& (0+255),w,b
  2894  0008B0  A4D8               	btfss	status,2,c
  2895  0008B2  D00A               	goto	l3613
  2896                           
  2897                           ; BSR set to: 0
  2898  0008B4  0E00               	movlw	0
  2899  0008B6  0100               	movlb	0	; () banked
  2900  0008B8  6FBA               	movwf	?___ftdiv& (0+255),b
  2901  0008BA  0E00               	movlw	0
  2902  0008BC  0100               	movlb	0	; () banked
  2903  0008BE  6FBB               	movwf	(?___ftdiv+1)& (0+255),b
  2904  0008C0  0E00               	movlw	0
  2905  0008C2  0100               	movlb	0	; () banked
  2906  0008C4  6FBC               	movwf	(?___ftdiv+2)& (0+255),b
  2907                           
  2908                           ; BSR set to: 0
  2909  0008C6  0012               	return	
  2910  0008C8                     l3613:
  2911                           
  2912                           ; BSR set to: 0
  2913  0008C8  C0BF  F0C0         	movff	___ftdiv@f2+2,??___ftdiv
  2914  0008CC  0100               	movlb	0	; () banked
  2915  0008CE  6BC1               	clrf	(??___ftdiv+1)& (0+255),b
  2916  0008D0  6BC2               	clrf	(??___ftdiv+2)& (0+255),b
  2917  0008D2  0100               	movlb	0	; () banked
  2918  0008D4  35BE               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  2919  0008D6  0100               	movlb	0	; () banked
  2920  0008D8  37C0               	rlcf	??___ftdiv& (0+255),f,b
  2921  0008DA  E301               	bnc	u4011
  2922  0008DC  81C1               	bsf	(??___ftdiv+1)& (0+255),0,b
  2923  0008DE                     u4011:
  2924  0008DE  0100               	movlb	0	; () banked
  2925  0008E0  51C0               	movf	??___ftdiv& (0+255),w,b
  2926  0008E2  0100               	movlb	0	; () banked
  2927  0008E4  6FC8               	movwf	___ftdiv@sign& (0+255),b
  2928  0008E6  0100               	movlb	0	; () banked
  2929  0008E8  51C8               	movf	___ftdiv@sign& (0+255),w,b
  2930  0008EA  A4D8               	btfss	status,2,c
  2931  0008EC  D00A               	goto	l3619
  2932                           
  2933                           ; BSR set to: 0
  2934  0008EE  0E00               	movlw	0
  2935  0008F0  0100               	movlb	0	; () banked
  2936  0008F2  6FBA               	movwf	?___ftdiv& (0+255),b
  2937  0008F4  0E00               	movlw	0
  2938  0008F6  0100               	movlb	0	; () banked
  2939  0008F8  6FBB               	movwf	(?___ftdiv+1)& (0+255),b
  2940  0008FA  0E00               	movlw	0
  2941  0008FC  0100               	movlb	0	; () banked
  2942  0008FE  6FBC               	movwf	(?___ftdiv+2)& (0+255),b
  2943                           
  2944                           ; BSR set to: 0
  2945  000900  0012               	return	
  2946  000902                     l3619:
  2947                           
  2948                           ; BSR set to: 0
  2949  000902  0E00               	movlw	0
  2950  000904  0100               	movlb	0	; () banked
  2951  000906  6FC4               	movwf	___ftdiv@f3& (0+255),b
  2952  000908  0E00               	movlw	0
  2953  00090A  0100               	movlb	0	; () banked
  2954  00090C  6FC5               	movwf	(___ftdiv@f3+1)& (0+255),b
  2955  00090E  0E00               	movlw	0
  2956  000910  0100               	movlb	0	; () banked
  2957  000912  6FC6               	movwf	(___ftdiv@f3+2)& (0+255),b
  2958                           
  2959                           ; BSR set to: 0
  2960  000914  0100               	movlb	0	; () banked
  2961  000916  51C8               	movf	___ftdiv@sign& (0+255),w,b
  2962  000918  0F89               	addlw	137
  2963  00091A  0100               	movlb	0	; () banked
  2964  00091C  5FC7               	subwf	___ftdiv@exp& (0+255),f,b
  2965                           
  2966                           ; BSR set to: 0
  2967  00091E  C0BC  F0C8         	movff	___ftdiv@f1+2,___ftdiv@sign
  2968                           
  2969                           ; BSR set to: 0
  2970  000922  0100               	movlb	0	; () banked
  2971  000924  51BF               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2972  000926  0100               	movlb	0	; () banked
  2973  000928  1BC8               	xorwf	___ftdiv@sign& (0+255),f,b
  2974                           
  2975                           ; BSR set to: 0
  2976  00092A  0E80               	movlw	128
  2977  00092C  0100               	movlb	0	; () banked
  2978  00092E  17C8               	andwf	___ftdiv@sign& (0+255),f,b
  2979                           
  2980                           ; BSR set to: 0
  2981  000930  0100               	movlb	0	; () banked
  2982  000932  8FBB               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  2983                           
  2984                           ; BSR set to: 0
  2985  000934  0EFF               	movlw	255
  2986  000936  0100               	movlb	0	; () banked
  2987  000938  17BA               	andwf	___ftdiv@f1& (0+255),f,b
  2988  00093A  0EFF               	movlw	255
  2989  00093C  0100               	movlb	0	; () banked
  2990  00093E  17BB               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  2991  000940  0E00               	movlw	0
  2992  000942  0100               	movlb	0	; () banked
  2993  000944  17BC               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  2994                           
  2995                           ; BSR set to: 0
  2996  000946  0100               	movlb	0	; () banked
  2997  000948  8FBE               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  2998                           
  2999                           ; BSR set to: 0
  3000  00094A  0EFF               	movlw	255
  3001  00094C  0100               	movlb	0	; () banked
  3002  00094E  17BD               	andwf	___ftdiv@f2& (0+255),f,b
  3003  000950  0EFF               	movlw	255
  3004  000952  0100               	movlb	0	; () banked
  3005  000954  17BE               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  3006  000956  0E00               	movlw	0
  3007  000958  0100               	movlb	0	; () banked
  3008  00095A  17BF               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  3009                           
  3010                           ; BSR set to: 0
  3011  00095C  0E18               	movlw	24
  3012  00095E  0100               	movlb	0	; () banked
  3013  000960  6FC3               	movwf	___ftdiv@cntr& (0+255),b
  3014  000962  D000               	goto	l3639
  3015  000964                     l3639:
  3016                           
  3017                           ; BSR set to: 0
  3018  000964  0100               	movlb	0	; () banked
  3019  000966  90D8               	bcf	status,0,c
  3020  000968  37C4               	rlcf	___ftdiv@f3& (0+255),f,b
  3021  00096A  37C5               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  3022  00096C  37C6               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  3023                           
  3024                           ; BSR set to: 0
  3025  00096E  0100               	movlb	0	; () banked
  3026  000970  51BD               	movf	___ftdiv@f2& (0+255),w,b
  3027  000972  0100               	movlb	0	; () banked
  3028  000974  5DBA               	subwf	___ftdiv@f1& (0+255),w,b
  3029  000976  0100               	movlb	0	; () banked
  3030  000978  51BE               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3031  00097A  0100               	movlb	0	; () banked
  3032  00097C  59BB               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  3033  00097E  0100               	movlb	0	; () banked
  3034  000980  51BF               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3035  000982  0100               	movlb	0	; () banked
  3036  000984  59BC               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  3037  000986  A0D8               	btfss	status,0,c
  3038  000988  D00E               	goto	l1083
  3039                           
  3040                           ; BSR set to: 0
  3041  00098A  0100               	movlb	0	; () banked
  3042  00098C  51BD               	movf	___ftdiv@f2& (0+255),w,b
  3043  00098E  0100               	movlb	0	; () banked
  3044  000990  5FBA               	subwf	___ftdiv@f1& (0+255),f,b
  3045  000992  0100               	movlb	0	; () banked
  3046  000994  51BE               	movf	(___ftdiv@f2+1)& (0+255),w,b
  3047  000996  0100               	movlb	0	; () banked
  3048  000998  5BBB               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  3049  00099A  0100               	movlb	0	; () banked
  3050  00099C  51BF               	movf	(___ftdiv@f2+2)& (0+255),w,b
  3051  00099E  0100               	movlb	0	; () banked
  3052  0009A0  5BBC               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  3053                           
  3054                           ; BSR set to: 0
  3055  0009A2  0100               	movlb	0	; () banked
  3056  0009A4  81C4               	bsf	___ftdiv@f3& (0+255),0,b
  3057  0009A6                     l1083:
  3058                           
  3059                           ; BSR set to: 0
  3060  0009A6  0100               	movlb	0	; () banked
  3061  0009A8  90D8               	bcf	status,0,c
  3062  0009AA  37BA               	rlcf	___ftdiv@f1& (0+255),f,b
  3063  0009AC  37BB               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  3064  0009AE  37BC               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  3065                           
  3066                           ; BSR set to: 0
  3067  0009B0  0100               	movlb	0	; () banked
  3068  0009B2  2FC3               	decfsz	___ftdiv@cntr& (0+255),f,b
  3069  0009B4  D7D7               	goto	l3639
  3070  0009B6  D000               	goto	l3649
  3071  0009B8                     l3649:
  3072                           
  3073                           ; BSR set to: 0
  3074  0009B8  C0C4  F019         	movff	___ftdiv@f3,___ftpack@arg
  3075  0009BC  C0C5  F01A         	movff	___ftdiv@f3+1,___ftpack@arg+1
  3076  0009C0  C0C6  F01B         	movff	___ftdiv@f3+2,___ftpack@arg+2
  3077  0009C4  C0C7  F01C         	movff	___ftdiv@exp,___ftpack@exp
  3078  0009C8  C0C8  F01D         	movff	___ftdiv@sign,___ftpack@sign
  3079  0009CC  EC84  F006         	call	___ftpack	;wreg free
  3080  0009D0  C019  F0BA         	movff	?___ftpack,?___ftdiv
  3081  0009D4  C01A  F0BB         	movff	?___ftpack+1,?___ftdiv+1
  3082  0009D8  C01B  F0BC         	movff	?___ftpack+2,?___ftdiv+2
  3083  0009DC  0012               	return	
  3084  0009DE  0012               	return		;funcret
  3085  0009E0                     __end_of___ftdiv:
  3086                           	opt stack 0
  3087                           tblptru	equ	0xFF8
  3088                           tblptrh	equ	0xFF7
  3089                           tblptrl	equ	0xFF6
  3090                           tablat	equ	0xFF5
  3091                           prodh	equ	0xFF4
  3092                           prodl	equ	0xFF3
  3093                           intcon	equ	0xFF2
  3094                           postinc0	equ	0xFEE
  3095                           wreg	equ	0xFE8
  3096                           postdec1	equ	0xFE5
  3097                           fsr1l	equ	0xFE1
  3098                           indf2	equ	0xFDF
  3099                           postinc2	equ	0xFDE
  3100                           fsr2h	equ	0xFDA
  3101                           fsr2l	equ	0xFD9
  3102                           status	equ	0xFD8
  3103                           
  3104 ;; *************** function ___ftpack *****************
  3105 ;; Defined at:
  3106 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  3107 ;; Parameters:    Size  Location     Type
  3108 ;;  arg             3   24[COMRAM] unsigned um
  3109 ;;  exp             1   27[COMRAM] unsigned char 
  3110 ;;  sign            1   28[COMRAM] unsigned char 
  3111 ;; Auto vars:     Size  Location     Type
  3112 ;;		None
  3113 ;; Return value:  Size  Location     Type
  3114 ;;                  3   24[COMRAM] float 
  3115 ;; Registers used:
  3116 ;;		wreg, status,2, status,0
  3117 ;; Tracked objects:
  3118 ;;		On entry : 0/0
  3119 ;;		On exit  : 0/0
  3120 ;;		Unchanged: 0/0
  3121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3122 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3124 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3125 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3126 ;;Total ram usage:        8 bytes
  3127 ;; Hardware stack levels used:    1
  3128 ;; Hardware stack levels required when called:    3
  3129 ;; This function calls:
  3130 ;;		Nothing
  3131 ;; This function is called by:
  3132 ;;		___ftdiv
  3133 ;;		___ftmul
  3134 ;;		___lwtoft
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137                           
  3138                           	psect	text20
  3139  000D08                     __ptext20:
  3140                           	opt stack 0
  3141  000D08                     ___ftpack:
  3142                           	opt stack 24
  3143                           
  3144                           ;incstack = 0
  3145  000D08  501C               	movf	___ftpack@exp,w,c
  3146  000D0A  B4D8               	btfsc	status,2,c
  3147  000D0C  D005               	goto	l3521
  3148  000D0E  5019               	movf	___ftpack@arg,w,c
  3149  000D10  101A               	iorwf	___ftpack@arg+1,w,c
  3150  000D12  101B               	iorwf	___ftpack@arg+2,w,c
  3151  000D14  A4D8               	btfss	status,2,c
  3152  000D16  D00E               	goto	l3527
  3153  000D18                     l3521:
  3154  000D18  0E00               	movlw	0
  3155  000D1A  6E19               	movwf	?___ftpack,c
  3156  000D1C  0E00               	movlw	0
  3157  000D1E  6E1A               	movwf	?___ftpack+1,c
  3158  000D20  0E00               	movlw	0
  3159  000D22  6E1B               	movwf	?___ftpack+2,c
  3160  000D24  0012               	return	
  3161  000D26  D006               	goto	l3527
  3162  000D28                     l3525:
  3163  000D28  2A1C               	incf	___ftpack@exp,f,c
  3164  000D2A  90D8               	bcf	status,0,c
  3165  000D2C  321B               	rrcf	___ftpack@arg+2,f,c
  3166  000D2E  321A               	rrcf	___ftpack@arg+1,f,c
  3167  000D30  3219               	rrcf	___ftpack@arg,f,c
  3168  000D32  D000               	goto	l3527
  3169  000D34                     l3527:
  3170  000D34  0E00               	movlw	0
  3171  000D36  1419               	andwf	___ftpack@arg,w,c
  3172  000D38  6E1E               	movwf	??___ftpack& (0+255),c
  3173  000D3A  0E00               	movlw	0
  3174  000D3C  141A               	andwf	___ftpack@arg+1,w,c
  3175  000D3E  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  3176  000D40  0EFE               	movlw	254
  3177  000D42  141B               	andwf	___ftpack@arg+2,w,c
  3178  000D44  6E20               	movwf	(??___ftpack+2)& (0+255),c
  3179  000D46  501E               	movf	??___ftpack,w,c
  3180  000D48  101F               	iorwf	??___ftpack+1,w,c
  3181  000D4A  1020               	iorwf	??___ftpack+2,w,c
  3182  000D4C  B4D8               	btfsc	status,2,c
  3183  000D4E  D00E               	goto	l3533
  3184  000D50  D7EB               	goto	l3525
  3185  000D52  D00C               	goto	l3533
  3186  000D54                     l3529:
  3187  000D54  2A1C               	incf	___ftpack@exp,f,c
  3188  000D56  0E01               	movlw	1
  3189  000D58  2619               	addwf	___ftpack@arg,f,c
  3190  000D5A  0E00               	movlw	0
  3191  000D5C  221A               	addwfc	___ftpack@arg+1,f,c
  3192  000D5E  0E00               	movlw	0
  3193  000D60  221B               	addwfc	___ftpack@arg+2,f,c
  3194  000D62  90D8               	bcf	status,0,c
  3195  000D64  321B               	rrcf	___ftpack@arg+2,f,c
  3196  000D66  321A               	rrcf	___ftpack@arg+1,f,c
  3197  000D68  3219               	rrcf	___ftpack@arg,f,c
  3198  000D6A  D000               	goto	l3533
  3199  000D6C                     l3533:
  3200  000D6C  0E00               	movlw	0
  3201  000D6E  1419               	andwf	___ftpack@arg,w,c
  3202  000D70  6E1E               	movwf	??___ftpack& (0+255),c
  3203  000D72  0E00               	movlw	0
  3204  000D74  141A               	andwf	___ftpack@arg+1,w,c
  3205  000D76  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  3206  000D78  0EFF               	movlw	255
  3207  000D7A  141B               	andwf	___ftpack@arg+2,w,c
  3208  000D7C  6E20               	movwf	(??___ftpack+2)& (0+255),c
  3209  000D7E  501E               	movf	??___ftpack,w,c
  3210  000D80  101F               	iorwf	??___ftpack+1,w,c
  3211  000D82  1020               	iorwf	??___ftpack+2,w,c
  3212  000D84  B4D8               	btfsc	status,2,c
  3213  000D86  D008               	goto	l3537
  3214  000D88  D7E5               	goto	l3529
  3215  000D8A  D006               	goto	l3537
  3216  000D8C                     l3535:
  3217  000D8C  061C               	decf	___ftpack@exp,f,c
  3218  000D8E  90D8               	bcf	status,0,c
  3219  000D90  3619               	rlcf	___ftpack@arg,f,c
  3220  000D92  361A               	rlcf	___ftpack@arg+1,f,c
  3221  000D94  361B               	rlcf	___ftpack@arg+2,f,c
  3222  000D96  D000               	goto	l3537
  3223  000D98                     l3537:
  3224  000D98  BE1A               	btfsc	___ftpack@arg+1,7,c
  3225  000D9A  D004               	goto	l1019
  3226  000D9C  0E02               	movlw	2
  3227  000D9E  601C               	cpfslt	___ftpack@exp,c
  3228  000DA0  D7F5               	goto	l3535
  3229  000DA2  D000               	goto	l1019
  3230  000DA4                     l1019:
  3231  000DA4  B01C               	btfsc	___ftpack@exp,0,c
  3232  000DA6  D002               	goto	l3543
  3233  000DA8  9E1A               	bcf	___ftpack@arg+1,7,c
  3234  000DAA  D000               	goto	l3543
  3235  000DAC                     l3543:
  3236  000DAC  90D8               	bcf	status,0,c
  3237  000DAE  321C               	rrcf	___ftpack@exp,f,c
  3238  000DB0  501C               	movf	___ftpack@exp,w,c
  3239  000DB2  121B               	iorwf	___ftpack@arg+2,f,c
  3240  000DB4  501D               	movf	___ftpack@sign,w,c
  3241  000DB6  B4D8               	btfsc	status,2,c
  3242  000DB8  D002               	goto	l3549
  3243  000DBA  8E1B               	bsf	___ftpack@arg+2,7,c
  3244  000DBC  D000               	goto	l3549
  3245  000DBE                     l3549:
  3246  000DBE  C019  F019         	movff	___ftpack@arg,?___ftpack
  3247  000DC2  C01A  F01A         	movff	___ftpack@arg+1,?___ftpack+1
  3248  000DC6  C01B  F01B         	movff	___ftpack@arg+2,?___ftpack+2
  3249  000DCA  0012               	return	
  3250  000DCC  0012               	return		;funcret
  3251  000DCE                     __end_of___ftpack:
  3252                           	opt stack 0
  3253                           tblptru	equ	0xFF8
  3254                           tblptrh	equ	0xFF7
  3255                           tblptrl	equ	0xFF6
  3256                           tablat	equ	0xFF5
  3257                           prodh	equ	0xFF4
  3258                           prodl	equ	0xFF3
  3259                           intcon	equ	0xFF2
  3260                           postinc0	equ	0xFEE
  3261                           wreg	equ	0xFE8
  3262                           postdec1	equ	0xFE5
  3263                           fsr1l	equ	0xFE1
  3264                           indf2	equ	0xFDF
  3265                           postinc2	equ	0xFDE
  3266                           fsr2h	equ	0xFDA
  3267                           fsr2l	equ	0xFD9
  3268                           status	equ	0xFD8
  3269                           
  3270 ;; *************** function _ReadADC *****************
  3271 ;; Defined at:
  3272 ;;		line 24 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  3273 ;; Parameters:    Size  Location     Type
  3274 ;;		None
  3275 ;; Auto vars:     Size  Location     Type
  3276 ;;		None
  3277 ;; Return value:  Size  Location     Type
  3278 ;;                  2   24[COMRAM] int 
  3279 ;; Registers used:
  3280 ;;		wreg, status,2
  3281 ;; Tracked objects:
  3282 ;;		On entry : 0/0
  3283 ;;		On exit  : 0/0
  3284 ;;		Unchanged: 0/0
  3285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3286 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3288 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3289 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3290 ;;Total ram usage:        4 bytes
  3291 ;; Hardware stack levels used:    1
  3292 ;; Hardware stack levels required when called:    3
  3293 ;; This function calls:
  3294 ;;		Nothing
  3295 ;; This function is called by:
  3296 ;;		_GetADC6
  3297 ;; This function uses a non-reentrant model
  3298 ;;
  3299                           
  3300                           	psect	text21
  3301  001864                     __ptext21:
  3302                           	opt stack 0
  3303  001864                     _ReadADC:
  3304                           	opt stack 25
  3305                           
  3306                           ;incstack = 0
  3307  001864  50C4               	movf	4036,w,c	;volatile
  3308  001866  6E1B               	movwf	??_ReadADC& (0+255),c
  3309  001868  50C3               	movf	4035,w,c	;volatile
  3310  00186A  6E19               	movwf	?_ReadADC,c
  3311  00186C  C01B  F01A         	movff	??_ReadADC,?_ReadADC+1
  3312  001870  0012               	return	
  3313  001872  0012               	return		;funcret
  3314  001874                     __end_of_ReadADC:
  3315                           	opt stack 0
  3316                           tblptru	equ	0xFF8
  3317                           tblptrh	equ	0xFF7
  3318                           tblptrl	equ	0xFF6
  3319                           tablat	equ	0xFF5
  3320                           prodh	equ	0xFF4
  3321                           prodl	equ	0xFF3
  3322                           intcon	equ	0xFF2
  3323                           postinc0	equ	0xFEE
  3324                           wreg	equ	0xFE8
  3325                           postdec1	equ	0xFE5
  3326                           fsr1l	equ	0xFE1
  3327                           indf2	equ	0xFDF
  3328                           postinc2	equ	0xFDE
  3329                           fsr2h	equ	0xFDA
  3330                           fsr2l	equ	0xFD9
  3331                           status	equ	0xFD8
  3332                           
  3333 ;; *************** function _ConvertADC *****************
  3334 ;; Defined at:
  3335 ;;		line 22 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  3336 ;; Parameters:    Size  Location     Type
  3337 ;;		None
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;		None
  3340 ;; Return value:  Size  Location     Type
  3341 ;;		None               void
  3342 ;; Registers used:
  3343 ;;		None
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3353 ;;Total ram usage:        0 bytes
  3354 ;; Hardware stack levels used:    1
  3355 ;; Hardware stack levels required when called:    3
  3356 ;; This function calls:
  3357 ;;		Nothing
  3358 ;; This function is called by:
  3359 ;;		_GetADC6
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363                           	psect	text22
  3364  00189C                     __ptext22:
  3365                           	opt stack 0
  3366  00189C                     _ConvertADC:
  3367                           	opt stack 25
  3368                           
  3369                           ;incstack = 0
  3370  00189C  82C2               	bsf	4034,1,c	;volatile
  3371  00189E  0012               	return		;funcret
  3372  0018A0                     __end_of_ConvertADC:
  3373                           	opt stack 0
  3374                           tblptru	equ	0xFF8
  3375                           tblptrh	equ	0xFF7
  3376                           tblptrl	equ	0xFF6
  3377                           tablat	equ	0xFF5
  3378                           prodh	equ	0xFF4
  3379                           prodl	equ	0xFF3
  3380                           intcon	equ	0xFF2
  3381                           postinc0	equ	0xFEE
  3382                           wreg	equ	0xFE8
  3383                           postdec1	equ	0xFE5
  3384                           fsr1l	equ	0xFE1
  3385                           indf2	equ	0xFDF
  3386                           postinc2	equ	0xFDE
  3387                           fsr2h	equ	0xFDA
  3388                           fsr2l	equ	0xFD9
  3389                           status	equ	0xFD8
  3390                           
  3391 ;; *************** function _BusyADC *****************
  3392 ;; Defined at:
  3393 ;;		line 26 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;		None
  3396 ;; Auto vars:     Size  Location     Type
  3397 ;;		None
  3398 ;; Return value:  Size  Location     Type
  3399 ;;                  1    wreg      unsigned char 
  3400 ;; Registers used:
  3401 ;;		wreg
  3402 ;; Tracked objects:
  3403 ;;		On entry : 0/0
  3404 ;;		On exit  : 0/0
  3405 ;;		Unchanged: 0/0
  3406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3411 ;;Total ram usage:        0 bytes
  3412 ;; Hardware stack levels used:    1
  3413 ;; Hardware stack levels required when called:    3
  3414 ;; This function calls:
  3415 ;;		Nothing
  3416 ;; This function is called by:
  3417 ;;		_GetADC6
  3418 ;; This function uses a non-reentrant model
  3419 ;;
  3420                           
  3421                           	psect	text23
  3422  001874                     __ptext23:
  3423                           	opt stack 0
  3424  001874                     _BusyADC:
  3425                           	opt stack 25
  3426                           
  3427                           ;incstack = 0
  3428  001874  A2C2               	btfss	4034,1,c	;volatile
  3429  001876  D002               	goto	u2300
  3430  001878  0E01               	movlw	1
  3431  00187A  0012               	return	
  3432  00187C                     u2300:
  3433  00187C  0E00               	movlw	0
  3434  00187E  0012               	return	
  3435  001880  0012               	return		;funcret
  3436  001882                     __end_of_BusyADC:
  3437                           	opt stack 0
  3438                           tblptru	equ	0xFF8
  3439                           tblptrh	equ	0xFF7
  3440                           tblptrl	equ	0xFF6
  3441                           tablat	equ	0xFF5
  3442                           prodh	equ	0xFF4
  3443                           prodl	equ	0xFF3
  3444                           intcon	equ	0xFF2
  3445                           postinc0	equ	0xFEE
  3446                           wreg	equ	0xFE8
  3447                           postdec1	equ	0xFE5
  3448                           fsr1l	equ	0xFE1
  3449                           indf2	equ	0xFDF
  3450                           postinc2	equ	0xFDE
  3451                           fsr2h	equ	0xFDA
  3452                           fsr2l	equ	0xFD9
  3453                           status	equ	0xFD8
  3454                           
  3455 ;; *************** function _Relay_Init *****************
  3456 ;; Defined at:
  3457 ;;		line 39 in file "_01_USER/Relay.c"
  3458 ;; Parameters:    Size  Location     Type
  3459 ;;		None
  3460 ;; Auto vars:     Size  Location     Type
  3461 ;;		None
  3462 ;; Return value:  Size  Location     Type
  3463 ;;		None               void
  3464 ;; Registers used:
  3465 ;;		None
  3466 ;; Tracked objects:
  3467 ;;		On entry : 0/0
  3468 ;;		On exit  : 0/0
  3469 ;;		Unchanged: 0/0
  3470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3475 ;;Total ram usage:        0 bytes
  3476 ;; Hardware stack levels used:    1
  3477 ;; Hardware stack levels required when called:    3
  3478 ;; This function calls:
  3479 ;;		Nothing
  3480 ;; This function is called by:
  3481 ;;		_main
  3482 ;; This function uses a non-reentrant model
  3483 ;;
  3484                           
  3485                           	psect	text24
  3486  001882                     __ptext24:
  3487                           	opt stack 0
  3488  001882                     _Relay_Init:
  3489                           	opt stack 27
  3490                           
  3491                           ;Relay.c: 42: TRISD0 = 0;
  3492                           
  3493                           ;incstack = 0
  3494  001882  9095               	bcf	3989,0,c	;volatile
  3495                           
  3496                           ;Relay.c: 43: TRISD1 = 0;
  3497  001884  9295               	bcf	3989,1,c	;volatile
  3498                           
  3499                           ;Relay.c: 44: TRISD2 = 0;
  3500  001886  9495               	bcf	3989,2,c	;volatile
  3501                           
  3502                           ;Relay.c: 45: TRISD3 = 0;
  3503  001888  9695               	bcf	3989,3,c	;volatile
  3504                           
  3505                           ;Relay.c: 46: TRISD4 = 0;
  3506  00188A  9895               	bcf	3989,4,c	;volatile
  3507                           
  3508                           ;Relay.c: 47: TRISD7 = 0;
  3509  00188C  9E95               	bcf	3989,7,c	;volatile
  3510  00188E  0012               	return		;funcret
  3511  001890                     __end_of_Relay_Init:
  3512                           	opt stack 0
  3513                           tblptru	equ	0xFF8
  3514                           tblptrh	equ	0xFF7
  3515                           tblptrl	equ	0xFF6
  3516                           tablat	equ	0xFF5
  3517                           prodh	equ	0xFF4
  3518                           prodl	equ	0xFF3
  3519                           intcon	equ	0xFF2
  3520                           postinc0	equ	0xFEE
  3521                           wreg	equ	0xFE8
  3522                           postdec1	equ	0xFE5
  3523                           fsr1l	equ	0xFE1
  3524                           indf2	equ	0xFDF
  3525                           postinc2	equ	0xFDE
  3526                           fsr2h	equ	0xFDA
  3527                           fsr2l	equ	0xFD9
  3528                           status	equ	0xFD8
  3529                           
  3530 ;; *************** function _RS485_Init *****************
  3531 ;; Defined at:
  3532 ;;		line 47 in file "_01_USER/My_USART.c"
  3533 ;; Parameters:    Size  Location     Type
  3534 ;;		None
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;		None
  3537 ;; Return value:  Size  Location     Type
  3538 ;;		None               void
  3539 ;; Registers used:
  3540 ;;		wreg, status,2, cstack
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3550 ;;Total ram usage:        0 bytes
  3551 ;; Hardware stack levels used:    1
  3552 ;; Hardware stack levels required when called:    4
  3553 ;; This function calls:
  3554 ;;		_Open1USART
  3555 ;; This function is called by:
  3556 ;;		_main
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560                           	psect	text25
  3561  00182A                     __ptext25:
  3562                           	opt stack 0
  3563  00182A                     _RS485_Init:
  3564                           	opt stack 26
  3565                           
  3566                           ;My_USART.c: 49: Open1USART( 0b01111111 &
  3567                           ;My_USART.c: 50: 0b11111111 &
  3568                           ;My_USART.c: 51: 0b11111110 &
  3569                           ;My_USART.c: 52: 0b11111101 &
  3570                           ;My_USART.c: 53: 0b11111111 &
  3571                           ;My_USART.c: 54: 0b11101111
  3572                           ;My_USART.c: 55: ,
  3573                           ;My_USART.c: 56: 12
  3574                           ;My_USART.c: 57: );
  3575                           
  3576                           ;incstack = 0
  3577  00182A  0E00               	movlw	0
  3578  00182C  6E1A               	movwf	Open1USART@spbrg+1,c
  3579  00182E  0E0C               	movlw	12
  3580  001830  6E19               	movwf	Open1USART@spbrg,c
  3581  001832  0E6C               	movlw	108
  3582  001834  ECF1  F008         	call	_Open1USART
  3583                           
  3584                           ;My_USART.c: 59: TRISC7 = 1;
  3585  001838  8E94               	bsf	3988,7,c	;volatile
  3586                           
  3587                           ;My_USART.c: 60: TRISC6 = 0;
  3588  00183A  9C94               	bcf	3988,6,c	;volatile
  3589                           
  3590                           ;My_USART.c: 61: TRISC0 = 0;
  3591  00183C  9094               	bcf	3988,0,c	;volatile
  3592                           
  3593                           ;My_USART.c: 62: RC0 = 1;
  3594  00183E  8082               	bsf	3970,0,c	;volatile
  3595  001840  0012               	return		;funcret
  3596  001842                     __end_of_RS485_Init:
  3597                           	opt stack 0
  3598                           tblptru	equ	0xFF8
  3599                           tblptrh	equ	0xFF7
  3600                           tblptrl	equ	0xFF6
  3601                           tablat	equ	0xFF5
  3602                           prodh	equ	0xFF4
  3603                           prodl	equ	0xFF3
  3604                           intcon	equ	0xFF2
  3605                           postinc0	equ	0xFEE
  3606                           wreg	equ	0xFE8
  3607                           postdec1	equ	0xFE5
  3608                           fsr1l	equ	0xFE1
  3609                           indf2	equ	0xFDF
  3610                           postinc2	equ	0xFDE
  3611                           fsr2h	equ	0xFDA
  3612                           fsr2l	equ	0xFD9
  3613                           status	equ	0xFD8
  3614                           
  3615 ;; *************** function _Open1USART *****************
  3616 ;; Defined at:
  3617 ;;		line 124 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1open.c"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;  config          1    wreg     unsigned char 
  3620 ;;  spbrg           2   24[COMRAM] unsigned int 
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;  config          1   26[COMRAM] unsigned char 
  3623 ;; Return value:  Size  Location     Type
  3624 ;;		None               void
  3625 ;; Registers used:
  3626 ;;		wreg, status,2
  3627 ;; Tracked objects:
  3628 ;;		On entry : 0/0
  3629 ;;		On exit  : 0/0
  3630 ;;		Unchanged: 0/0
  3631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3632 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3633 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3635 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3636 ;;Total ram usage:        3 bytes
  3637 ;; Hardware stack levels used:    1
  3638 ;; Hardware stack levels required when called:    3
  3639 ;; This function calls:
  3640 ;;		Nothing
  3641 ;; This function is called by:
  3642 ;;		_RS485_Init
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645                           
  3646                           	psect	text26
  3647  0011E2                     __ptext26:
  3648                           	opt stack 0
  3649  0011E2                     _Open1USART:
  3650                           	opt stack 26
  3651                           
  3652                           ;incstack = 0
  3653                           ;Open1USART@config stored from wreg
  3654  0011E2  6E1B               	movwf	Open1USART@config,c
  3655  0011E4  0E00               	movlw	0
  3656  0011E6  6EAC               	movwf	4012,c	;volatile
  3657  0011E8  0E00               	movlw	0
  3658  0011EA  6EAB               	movwf	4011,c	;volatile
  3659  0011EC  A01B               	btfss	Open1USART@config,0,c
  3660  0011EE  D002               	goto	l2867
  3661  0011F0  88AC               	bsf	4012,4,c	;volatile
  3662  0011F2  D000               	goto	l2867
  3663  0011F4                     l2867:
  3664  0011F4  A21B               	btfss	Open1USART@config,1,c
  3665  0011F6  D003               	goto	l2871
  3666  0011F8  8CAC               	bsf	4012,6,c	;volatile
  3667  0011FA  8CAB               	bsf	4011,6,c	;volatile
  3668  0011FC  D000               	goto	l2871
  3669  0011FE                     l2871:
  3670  0011FE  A41B               	btfss	Open1USART@config,2,c
  3671  001200  D002               	goto	l2875
  3672  001202  8EAC               	bsf	4012,7,c	;volatile
  3673  001204  D000               	goto	l2875
  3674  001206                     l2875:
  3675  001206  A61B               	btfss	Open1USART@config,3,c
  3676  001208  D002               	goto	l689
  3677  00120A  88AB               	bsf	4011,4,c	;volatile
  3678  00120C  D002               	goto	l2879
  3679  00120E                     l689:
  3680  00120E  8AAB               	bsf	4011,5,c	;volatile
  3681  001210  D000               	goto	l2879
  3682  001212                     l2879:
  3683  001212  A81B               	btfss	Open1USART@config,4,c
  3684  001214  D002               	goto	l2883
  3685  001216  84AC               	bsf	4012,2,c	;volatile
  3686  001218  D000               	goto	l2883
  3687  00121A                     l2883:
  3688  00121A  AA1B               	btfss	Open1USART@config,5,c
  3689  00121C  D002               	goto	l2887
  3690  00121E  86AB               	bsf	4011,3,c	;volatile
  3691  001220  D000               	goto	l2887
  3692  001222                     l2887:
  3693  001222  AC1B               	btfss	Open1USART@config,6,c
  3694  001224  D002               	goto	l693
  3695  001226  8A9D               	bsf	3997,5,c	;volatile
  3696  001228  D002               	goto	l2891
  3697  00122A                     l693:
  3698  00122A  9A9D               	bcf	3997,5,c	;volatile
  3699  00122C  D000               	goto	l2891
  3700  00122E                     l2891:
  3701  00122E  AE1B               	btfss	Open1USART@config,7,c
  3702  001230  D002               	goto	l695
  3703  001232  889D               	bsf	3997,4,c	;volatile
  3704  001234  D001               	goto	l696
  3705  001236                     l695:
  3706  001236  989D               	bcf	3997,4,c	;volatile
  3707  001238                     l696:
  3708  001238  C019  FFAF         	movff	Open1USART@spbrg,4015	;volatile
  3709  00123C  501A               	movf	Open1USART@spbrg+1,w,c
  3710  00123E  6ED4               	movwf	4052,c	;volatile
  3711  001240  8AAC               	bsf	4012,5,c	;volatile
  3712  001242  8EAB               	bsf	4011,7,c	;volatile
  3713  001244  0012               	return		;funcret
  3714  001246                     __end_of_Open1USART:
  3715                           	opt stack 0
  3716                           tblptru	equ	0xFF8
  3717                           tblptrh	equ	0xFF7
  3718                           tblptrl	equ	0xFF6
  3719                           tablat	equ	0xFF5
  3720                           prodh	equ	0xFF4
  3721                           prodl	equ	0xFF3
  3722                           intcon	equ	0xFF2
  3723                           postinc0	equ	0xFEE
  3724                           wreg	equ	0xFE8
  3725                           postdec1	equ	0xFE5
  3726                           fsr1l	equ	0xFE1
  3727                           indf2	equ	0xFDF
  3728                           postinc2	equ	0xFDE
  3729                           fsr2h	equ	0xFDA
  3730                           fsr2l	equ	0xFD9
  3731                           status	equ	0xFD8
  3732                           
  3733 ;; *************** function _ManageMessage *****************
  3734 ;; Defined at:
  3735 ;;		line 51 in file "_01_USER/Run.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;		None
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;		None
  3740 ;; Return value:  Size  Location     Type
  3741 ;;		None               void
  3742 ;; Registers used:
  3743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3744 ;; Tracked objects:
  3745 ;;		On entry : 0/0
  3746 ;;		On exit  : 0/0
  3747 ;;		Unchanged: 0/0
  3748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3753 ;;Total ram usage:        0 bytes
  3754 ;; Hardware stack levels used:    1
  3755 ;; Hardware stack levels required when called:    6
  3756 ;; This function calls:
  3757 ;;		_Key_ManageMessage
  3758 ;;		_RS485_ManageMessage
  3759 ;; This function is called by:
  3760 ;;		_main
  3761 ;; This function uses a non-reentrant model
  3762 ;;
  3763                           
  3764                           	psect	text27
  3765  0017DA                     __ptext27:
  3766                           	opt stack 0
  3767  0017DA                     _ManageMessage:
  3768                           	opt stack 24
  3769                           
  3770                           ;Run.c: 53: Key_ManageMessage();
  3771                           
  3772                           ;incstack = 0
  3773  0017DA  EC88  F003         	call	_Key_ManageMessage	;wreg free
  3774                           
  3775                           ;Run.c: 54: RS485_ManageMessage(ga_RS485_ReceiveBuff,10);
  3776  0017DE  0EA6               	movlw	low _ga_RS485_ReceiveBuff
  3777  0017E0  0100               	movlb	0	; () banked
  3778  0017E2  6FBA               	movwf	RS485_ManageMessage@DataBuff& (0+255),b
  3779  0017E4  0E00               	movlw	high _ga_RS485_ReceiveBuff
  3780  0017E6  0100               	movlb	0	; () banked
  3781  0017E8  6FBB               	movwf	(RS485_ManageMessage@DataBuff+1)& (0+255),b
  3782  0017EA  0E0A               	movlw	10
  3783  0017EC  0100               	movlb	0	; () banked
  3784  0017EE  6FBC               	movwf	RS485_ManageMessage@date_lenth& (0+255),b
  3785  0017F0  ECD3  F000         	call	_RS485_ManageMessage	;wreg free
  3786  0017F4  0012               	return		;funcret
  3787  0017F6                     __end_of_ManageMessage:
  3788                           	opt stack 0
  3789                           tblptru	equ	0xFF8
  3790                           tblptrh	equ	0xFF7
  3791                           tblptrl	equ	0xFF6
  3792                           tablat	equ	0xFF5
  3793                           prodh	equ	0xFF4
  3794                           prodl	equ	0xFF3
  3795                           intcon	equ	0xFF2
  3796                           postinc0	equ	0xFEE
  3797                           wreg	equ	0xFE8
  3798                           postdec1	equ	0xFE5
  3799                           fsr1l	equ	0xFE1
  3800                           indf2	equ	0xFDF
  3801                           postinc2	equ	0xFDE
  3802                           fsr2h	equ	0xFDA
  3803                           fsr2l	equ	0xFD9
  3804                           status	equ	0xFD8
  3805                           
  3806 ;; *************** function _RS485_ManageMessage *****************
  3807 ;; Defined at:
  3808 ;;		line 114 in file "_01_USER/My_USART.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;  DataBuff        2    0[BANK0 ] PTR unsigned char 
  3811 ;;		 -> ga_RS485_ReceiveBuff(10), 
  3812 ;;  date_lenth      1    2[BANK0 ] unsigned char 
  3813 ;; Auto vars:     Size  Location     Type
  3814 ;;  from_dress      1   10[BANK0 ] unsigned char 
  3815 ;;  CRC_L           1    9[BANK0 ] unsigned char 
  3816 ;;  CRC_H           1    8[BANK0 ] unsigned char 
  3817 ;; Return value:  Size  Location     Type
  3818 ;;                  1    wreg      unsigned char 
  3819 ;; Registers used:
  3820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3821 ;; Tracked objects:
  3822 ;;		On entry : 0/0
  3823 ;;		On exit  : 0/0
  3824 ;;		Unchanged: 0/0
  3825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3826 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3827 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3828 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3829 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3830 ;;Total ram usage:       11 bytes
  3831 ;; Hardware stack levels used:    1
  3832 ;; Hardware stack levels required when called:    5
  3833 ;; This function calls:
  3834 ;;		_VerifyCRC
  3835 ;; This function is called by:
  3836 ;;		_ManageMessage
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           	psect	text28
  3841  0001A6                     __ptext28:
  3842                           	opt stack 0
  3843  0001A6                     _RS485_ManageMessage:
  3844                           	opt stack 24
  3845                           
  3846                           ;My_USART.c: 116: unsigned char CRC_H,CRC_L,from_dress;
  3847                           ;My_USART.c: 117: if( g_RS485_Receive_Flag == 1 )
  3848                           
  3849                           ;incstack = 0
  3850  0001A6  0440               	decf	_g_RS485_Receive_Flag,w,c
  3851  0001A8  A4D8               	btfss	status,2,c
  3852  0001AA  0012               	return	
  3853                           
  3854                           ;My_USART.c: 118: {
  3855                           ;My_USART.c: 121: if( DataBuff [date_lenth-1] != 0xaa) { g_RS485_Receive_Flag = 0; retur
      +                          n 1;}
  3856  0001AC  0EFF               	movlw	255
  3857  0001AE  0100               	movlb	0	; () banked
  3858  0001B0  6FBD               	movwf	??_RS485_ManageMessage& (0+255),b
  3859  0001B2  0EFF               	movlw	255
  3860  0001B4  0100               	movlb	0	; () banked
  3861  0001B6  6FBE               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  3862  0001B8  0100               	movlb	0	; () banked
  3863  0001BA  51BC               	movf	RS485_ManageMessage@date_lenth& (0+255),w,b
  3864  0001BC  0100               	movlb	0	; () banked
  3865  0001BE  6FBF               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  3866  0001C0  6BC0               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  3867  0001C2  0100               	movlb	0	; () banked
  3868  0001C4  51BD               	movf	??_RS485_ManageMessage& (0+255),w,b
  3869  0001C6  0100               	movlb	0	; () banked
  3870  0001C8  27BF               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  3871  0001CA  0100               	movlb	0	; () banked
  3872  0001CC  51BE               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  3873  0001CE  0100               	movlb	0	; () banked
  3874  0001D0  23C0               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  3875  0001D2  0100               	movlb	0	; () banked
  3876  0001D4  51BF               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  3877  0001D6  0100               	movlb	0	; () banked
  3878  0001D8  25BA               	addwf	RS485_ManageMessage@DataBuff& (0+255),w,b
  3879  0001DA  6ED9               	movwf	fsr2l,c
  3880  0001DC  0100               	movlb	0	; () banked
  3881  0001DE  51C0               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  3882  0001E0  0100               	movlb	0	; () banked
  3883  0001E2  21BB               	addwfc	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  3884  0001E4  6EDA               	movwf	fsr2h,c
  3885  0001E6  0EAA               	movlw	170
  3886  0001E8  18DE               	xorwf	postinc2,w,c
  3887  0001EA  B4D8               	btfsc	status,2,c
  3888  0001EC  D003               	goto	l3725
  3889                           
  3890                           ; BSR set to: 0
  3891  0001EE  0E00               	movlw	0
  3892  0001F0  6E40               	movwf	_g_RS485_Receive_Flag,c
  3893                           
  3894                           ; BSR set to: 0
  3895                           ;	Return value of _RS485_ManageMessage is never used
  3896  0001F2  0012               	return	
  3897  0001F4                     l3725:
  3898                           
  3899                           ; BSR set to: 0
  3900                           ;My_USART.c: 124: CRC_H = DataBuff[1];
  3901  0001F4  0100               	movlb	0	; () banked
  3902  0001F6  EE20 F001          	lfsr	2,1
  3903  0001FA  51BA               	movf	RS485_ManageMessage@DataBuff& (0+255),w,b
  3904  0001FC  26D9               	addwf	fsr2l,f,c
  3905  0001FE  51BB               	movf	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  3906  000200  22DA               	addwfc	fsr2h,f,c
  3907  000202  50DF               	movf	indf2,w,c
  3908  000204  0100               	movlb	0	; () banked
  3909  000206  6FC2               	movwf	RS485_ManageMessage@CRC_H& (0+255),b
  3910                           
  3911                           ; BSR set to: 0
  3912                           ;My_USART.c: 125: CRC_L = DataBuff[0];
  3913  000208  C0BA  FFD9         	movff	RS485_ManageMessage@DataBuff,fsr2l
  3914  00020C  C0BB  FFDA         	movff	RS485_ManageMessage@DataBuff+1,fsr2h
  3915  000210  50DF               	movf	indf2,w,c
  3916  000212  0100               	movlb	0	; () banked
  3917  000214  6FC3               	movwf	RS485_ManageMessage@CRC_L& (0+255),b
  3918                           
  3919                           ; BSR set to: 0
  3920                           ;My_USART.c: 126: VerifyCRC(DataBuff,10);
  3921  000216  C0BA  F026         	movff	RS485_ManageMessage@DataBuff,VerifyCRC@DataBuff
  3922  00021A  C0BB  F027         	movff	RS485_ManageMessage@DataBuff+1,VerifyCRC@DataBuff+1
  3923  00021E  0E0A               	movlw	10
  3924  000220  6E28               	movwf	VerifyCRC@date_lenth,c
  3925  000222  ECF0  F004         	call	_VerifyCRC	;wreg free
  3926                           
  3927                           ;My_USART.c: 127: if( DataBuff[1] != CRC_H ) { g_RS485_Receive_Flag = 0; return 2 ;}
  3928  000226  0100               	movlb	0	; () banked
  3929  000228  EE20 F001          	lfsr	2,1
  3930  00022C  51BA               	movf	RS485_ManageMessage@DataBuff& (0+255),w,b
  3931  00022E  26D9               	addwf	fsr2l,f,c
  3932  000230  51BB               	movf	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  3933  000232  22DA               	addwfc	fsr2h,f,c
  3934  000234  0100               	movlb	0	; () banked
  3935  000236  51C2               	movf	RS485_ManageMessage@CRC_H& (0+255),w,b
  3936  000238  18DE               	xorwf	postinc2,w,c
  3937  00023A  B4D8               	btfsc	status,2,c
  3938  00023C  D003               	goto	l3737
  3939                           
  3940                           ; BSR set to: 0
  3941  00023E  0E00               	movlw	0
  3942  000240  6E40               	movwf	_g_RS485_Receive_Flag,c
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;	Return value of _RS485_ManageMessage is never used
  3946  000242  0012               	return	
  3947  000244                     l3737:
  3948                           
  3949                           ; BSR set to: 0
  3950                           ;My_USART.c: 128: if( DataBuff[0] != CRC_L ) { g_RS485_Receive_Flag = 0; return 2 ;}
  3951  000244  C0BA  FFD9         	movff	RS485_ManageMessage@DataBuff,fsr2l
  3952  000248  C0BB  FFDA         	movff	RS485_ManageMessage@DataBuff+1,fsr2h
  3953  00024C  0100               	movlb	0	; () banked
  3954  00024E  51C3               	movf	RS485_ManageMessage@CRC_L& (0+255),w,b
  3955  000250  18DE               	xorwf	postinc2,w,c
  3956  000252  B4D8               	btfsc	status,2,c
  3957  000254  D003               	goto	l3743
  3958                           
  3959                           ; BSR set to: 0
  3960  000256  0E00               	movlw	0
  3961  000258  6E40               	movwf	_g_RS485_Receive_Flag,c
  3962                           
  3963                           ; BSR set to: 0
  3964                           ;	Return value of _RS485_ManageMessage is never used
  3965  00025A  0012               	return	
  3966  00025C                     l3743:
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;My_USART.c: 131: if( ( DataBuff[date_lenth - 2] != 0x10 ) && ( DataBuff[date_lenth - 2]
      +                           != 0xff) ) { g_RS485_Receive_Flag = 0; return 3;}
  3970  00025C  0EFE               	movlw	254
  3971  00025E  0100               	movlb	0	; () banked
  3972  000260  6FBD               	movwf	??_RS485_ManageMessage& (0+255),b
  3973  000262  0EFF               	movlw	255
  3974  000264  0100               	movlb	0	; () banked
  3975  000266  6FBE               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  3976  000268  0100               	movlb	0	; () banked
  3977  00026A  51BC               	movf	RS485_ManageMessage@date_lenth& (0+255),w,b
  3978  00026C  0100               	movlb	0	; () banked
  3979  00026E  6FBF               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  3980  000270  6BC0               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  3981  000272  0100               	movlb	0	; () banked
  3982  000274  51BD               	movf	??_RS485_ManageMessage& (0+255),w,b
  3983  000276  0100               	movlb	0	; () banked
  3984  000278  27BF               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  3985  00027A  0100               	movlb	0	; () banked
  3986  00027C  51BE               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  3987  00027E  0100               	movlb	0	; () banked
  3988  000280  23C0               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  3989  000282  0100               	movlb	0	; () banked
  3990  000284  51BF               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  3991  000286  0100               	movlb	0	; () banked
  3992  000288  25BA               	addwf	RS485_ManageMessage@DataBuff& (0+255),w,b
  3993  00028A  6ED9               	movwf	fsr2l,c
  3994  00028C  0100               	movlb	0	; () banked
  3995  00028E  51C0               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  3996  000290  0100               	movlb	0	; () banked
  3997  000292  21BB               	addwfc	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  3998  000294  6EDA               	movwf	fsr2h,c
  3999  000296  0E10               	movlw	16
  4000  000298  18DE               	xorwf	postinc2,w,c
  4001  00029A  B4D8               	btfsc	status,2,c
  4002  00029C  D023               	goto	l3751
  4003                           
  4004                           ; BSR set to: 0
  4005  00029E  0EFE               	movlw	254
  4006  0002A0  0100               	movlb	0	; () banked
  4007  0002A2  6FBD               	movwf	??_RS485_ManageMessage& (0+255),b
  4008  0002A4  0EFF               	movlw	255
  4009  0002A6  0100               	movlb	0	; () banked
  4010  0002A8  6FBE               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  4011  0002AA  0100               	movlb	0	; () banked
  4012  0002AC  51BC               	movf	RS485_ManageMessage@date_lenth& (0+255),w,b
  4013  0002AE  0100               	movlb	0	; () banked
  4014  0002B0  6FBF               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  4015  0002B2  6BC0               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  4016  0002B4  0100               	movlb	0	; () banked
  4017  0002B6  51BD               	movf	??_RS485_ManageMessage& (0+255),w,b
  4018  0002B8  0100               	movlb	0	; () banked
  4019  0002BA  27BF               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  4020  0002BC  0100               	movlb	0	; () banked
  4021  0002BE  51BE               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  4022  0002C0  0100               	movlb	0	; () banked
  4023  0002C2  23C0               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  4024  0002C4  0100               	movlb	0	; () banked
  4025  0002C6  51BF               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  4026  0002C8  0100               	movlb	0	; () banked
  4027  0002CA  25BA               	addwf	RS485_ManageMessage@DataBuff& (0+255),w,b
  4028  0002CC  6ED9               	movwf	fsr2l,c
  4029  0002CE  0100               	movlb	0	; () banked
  4030  0002D0  51C0               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  4031  0002D2  0100               	movlb	0	; () banked
  4032  0002D4  21BB               	addwfc	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  4033  0002D6  6EDA               	movwf	fsr2h,c
  4034  0002D8  28DE               	incf	postinc2,w,c
  4035  0002DA  B4D8               	btfsc	status,2,c
  4036  0002DC  D003               	goto	l3751
  4037                           
  4038                           ; BSR set to: 0
  4039  0002DE  0E00               	movlw	0
  4040  0002E0  6E40               	movwf	_g_RS485_Receive_Flag,c
  4041                           
  4042                           ; BSR set to: 0
  4043                           ;	Return value of _RS485_ManageMessage is never used
  4044  0002E2  0012               	return	
  4045  0002E4                     l3751:
  4046                           
  4047                           ; BSR set to: 0
  4048                           ;My_USART.c: 134: from_dress = DataBuff[date_lenth - 3];
  4049  0002E4  0EFD               	movlw	253
  4050  0002E6  0100               	movlb	0	; () banked
  4051  0002E8  6FBD               	movwf	??_RS485_ManageMessage& (0+255),b
  4052  0002EA  0EFF               	movlw	255
  4053  0002EC  0100               	movlb	0	; () banked
  4054  0002EE  6FBE               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  4055  0002F0  0100               	movlb	0	; () banked
  4056  0002F2  51BC               	movf	RS485_ManageMessage@date_lenth& (0+255),w,b
  4057  0002F4  0100               	movlb	0	; () banked
  4058  0002F6  6FBF               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  4059  0002F8  6BC0               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  4060  0002FA  0100               	movlb	0	; () banked
  4061  0002FC  51BD               	movf	??_RS485_ManageMessage& (0+255),w,b
  4062  0002FE  0100               	movlb	0	; () banked
  4063  000300  27BF               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  4064  000302  0100               	movlb	0	; () banked
  4065  000304  51BE               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  4066  000306  0100               	movlb	0	; () banked
  4067  000308  23C0               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  4068  00030A  0100               	movlb	0	; () banked
  4069  00030C  51BF               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  4070  00030E  0100               	movlb	0	; () banked
  4071  000310  25BA               	addwf	RS485_ManageMessage@DataBuff& (0+255),w,b
  4072  000312  6ED9               	movwf	fsr2l,c
  4073  000314  0100               	movlb	0	; () banked
  4074  000316  51C0               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  4075  000318  0100               	movlb	0	; () banked
  4076  00031A  21BB               	addwfc	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  4077  00031C  6EDA               	movwf	fsr2h,c
  4078  00031E  50DF               	movf	indf2,w,c
  4079  000320  0100               	movlb	0	; () banked
  4080  000322  6FC4               	movwf	RS485_ManageMessage@from_dress& (0+255),b
  4081                           
  4082                           ; BSR set to: 0
  4083                           ;My_USART.c: 135: if( from_dress < 0x10 ) gsa_Handle_Msg[from_dress].Hardware_Type = Typ
      +                          e_HANDLE;
  4084  000324  0E10               	movlw	16
  4085  000326  0100               	movlb	0	; () banked
  4086  000328  61C4               	cpfslt	RS485_ManageMessage@from_dress& (0+255),b
  4087  00032A  D00F               	goto	l3757
  4088                           
  4089                           ; BSR set to: 0
  4090  00032C  0100               	movlb	0	; () banked
  4091  00032E  51C4               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  4092  000330  0D07               	mullw	7
  4093  000332  0E05               	movlw	5
  4094  000334  26F3               	addwf	prodl,f,c
  4095  000336  0E00               	movlw	0
  4096  000338  22F4               	addwfc	prodh,f,c
  4097  00033A  0E00               	movlw	low _gsa_Handle_Msg
  4098  00033C  24F3               	addwf	prodl,w,c
  4099  00033E  6ED9               	movwf	fsr2l,c
  4100  000340  0E01               	movlw	high _gsa_Handle_Msg
  4101  000342  20F4               	addwfc	prodh,w,c
  4102  000344  6EDA               	movwf	fsr2h,c
  4103  000346  0E00               	movlw	0
  4104  000348  D025               	goto	L5
  4105  00034A                     l3757:
  4106                           
  4107                           ; BSR set to: 0
  4108                           ;My_USART.c: 136: else if( from_dress < 0x20 ) gsa_Handle_Msg[from_dress].Hardware_Type 
      +                          = Type_MASTER;
  4109  00034A  0E20               	movlw	32
  4110  00034C  0100               	movlb	0	; () banked
  4111  00034E  61C4               	cpfslt	RS485_ManageMessage@from_dress& (0+255),b
  4112  000350  D00F               	goto	l3761
  4113                           
  4114                           ; BSR set to: 0
  4115  000352  0100               	movlb	0	; () banked
  4116  000354  51C4               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  4117  000356  0D07               	mullw	7
  4118  000358  0E05               	movlw	5
  4119  00035A  26F3               	addwf	prodl,f,c
  4120  00035C  0E00               	movlw	0
  4121  00035E  22F4               	addwfc	prodh,f,c
  4122  000360  0E00               	movlw	low _gsa_Handle_Msg
  4123  000362  24F3               	addwf	prodl,w,c
  4124  000364  6ED9               	movwf	fsr2l,c
  4125  000366  0E01               	movlw	high _gsa_Handle_Msg
  4126  000368  20F4               	addwfc	prodh,w,c
  4127  00036A  6EDA               	movwf	fsr2h,c
  4128  00036C  0E01               	movlw	1
  4129  00036E  D012               	goto	L5
  4130  000370                     l3761:
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;My_USART.c: 137: else if( from_dress < 0x30 ) gsa_Handle_Msg[from_dress].Hardware_Type 
      +                          = Type_SENSOR;
  4134  000370  0E30               	movlw	48
  4135  000372  0100               	movlb	0	; () banked
  4136  000374  61C4               	cpfslt	RS485_ManageMessage@from_dress& (0+255),b
  4137  000376  D010               	goto	l3765
  4138                           
  4139                           ; BSR set to: 0
  4140  000378  0100               	movlb	0	; () banked
  4141  00037A  51C4               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  4142  00037C  0D07               	mullw	7
  4143  00037E  0E05               	movlw	5
  4144  000380  26F3               	addwf	prodl,f,c
  4145  000382  0E00               	movlw	0
  4146  000384  22F4               	addwfc	prodh,f,c
  4147  000386  0E00               	movlw	low _gsa_Handle_Msg
  4148  000388  24F3               	addwf	prodl,w,c
  4149  00038A  6ED9               	movwf	fsr2l,c
  4150  00038C  0E01               	movlw	high _gsa_Handle_Msg
  4151  00038E  20F4               	addwfc	prodh,w,c
  4152  000390  6EDA               	movwf	fsr2h,c
  4153  000392  0E02               	movlw	2
  4154  000394                     L5:
  4155  000394  6EDF               	movwf	indf2,c
  4156                           
  4157                           ; BSR set to: 0
  4158                           
  4159                           ; BSR set to: 0
  4160  000396  D000               	goto	l3765
  4161  000398                     l3765:
  4162                           
  4163                           ; BSR set to: 0
  4164                           ;My_USART.c: 140: gsa_Handle_Msg[from_dress].Order = DataBuff[date_lenth - 4];
  4165  000398  0EFC               	movlw	252
  4166  00039A  0100               	movlb	0	; () banked
  4167  00039C  6FBD               	movwf	??_RS485_ManageMessage& (0+255),b
  4168  00039E  0EFF               	movlw	255
  4169  0003A0  0100               	movlb	0	; () banked
  4170  0003A2  6FBE               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  4171  0003A4  0100               	movlb	0	; () banked
  4172  0003A6  51BC               	movf	RS485_ManageMessage@date_lenth& (0+255),w,b
  4173  0003A8  0100               	movlb	0	; () banked
  4174  0003AA  6FBF               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  4175  0003AC  6BC0               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  4176  0003AE  0100               	movlb	0	; () banked
  4177  0003B0  51BD               	movf	??_RS485_ManageMessage& (0+255),w,b
  4178  0003B2  0100               	movlb	0	; () banked
  4179  0003B4  27BF               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  4180  0003B6  0100               	movlb	0	; () banked
  4181  0003B8  51BE               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  4182  0003BA  0100               	movlb	0	; () banked
  4183  0003BC  23C0               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  4184  0003BE  0100               	movlb	0	; () banked
  4185  0003C0  51BF               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  4186  0003C2  0100               	movlb	0	; () banked
  4187  0003C4  25BA               	addwf	RS485_ManageMessage@DataBuff& (0+255),w,b
  4188  0003C6  6ED9               	movwf	fsr2l,c
  4189  0003C8  0100               	movlb	0	; () banked
  4190  0003CA  51C0               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  4191  0003CC  0100               	movlb	0	; () banked
  4192  0003CE  21BB               	addwfc	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  4193  0003D0  6EDA               	movwf	fsr2h,c
  4194  0003D2  0100               	movlb	0	; () banked
  4195  0003D4  51C4               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  4196  0003D6  0D07               	mullw	7
  4197  0003D8  0E00               	movlw	low _gsa_Handle_Msg
  4198  0003DA  24F3               	addwf	prodl,w,c
  4199  0003DC  6EE1               	movwf	fsr1l,c
  4200  0003DE  0E01               	movlw	high _gsa_Handle_Msg
  4201  0003E0  20F4               	addwfc	prodh,w,c
  4202  0003E2  6EE2               	movwf	fsr1h,c
  4203  0003E4  CFDF FFE7          	movff	indf2,indf1
  4204                           
  4205                           ; BSR set to: 0
  4206                           ;My_USART.c: 141: gsa_Handle_Msg[from_dress].a_Parameter[3] = DataBuff[date_lenth -5];
  4207  0003E8  0EFB               	movlw	251
  4208  0003EA  0100               	movlb	0	; () banked
  4209  0003EC  6FBD               	movwf	??_RS485_ManageMessage& (0+255),b
  4210  0003EE  0EFF               	movlw	255
  4211  0003F0  0100               	movlb	0	; () banked
  4212  0003F2  6FBE               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  4213  0003F4  0100               	movlb	0	; () banked
  4214  0003F6  51BC               	movf	RS485_ManageMessage@date_lenth& (0+255),w,b
  4215  0003F8  0100               	movlb	0	; () banked
  4216  0003FA  6FBF               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  4217  0003FC  6BC0               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  4218  0003FE  0100               	movlb	0	; () banked
  4219  000400  51BD               	movf	??_RS485_ManageMessage& (0+255),w,b
  4220  000402  0100               	movlb	0	; () banked
  4221  000404  27BF               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  4222  000406  0100               	movlb	0	; () banked
  4223  000408  51BE               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  4224  00040A  0100               	movlb	0	; () banked
  4225  00040C  23C0               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  4226  00040E  0100               	movlb	0	; () banked
  4227  000410  51BF               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  4228  000412  0100               	movlb	0	; () banked
  4229  000414  25BA               	addwf	RS485_ManageMessage@DataBuff& (0+255),w,b
  4230  000416  6ED9               	movwf	fsr2l,c
  4231  000418  0100               	movlb	0	; () banked
  4232  00041A  51C0               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  4233  00041C  0100               	movlb	0	; () banked
  4234  00041E  21BB               	addwfc	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  4235  000420  6EDA               	movwf	fsr2h,c
  4236  000422  0100               	movlb	0	; () banked
  4237  000424  51C4               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  4238  000426  0D07               	mullw	7
  4239  000428  0E04               	movlw	4
  4240  00042A  26F3               	addwf	prodl,f,c
  4241  00042C  0E00               	movlw	0
  4242  00042E  22F4               	addwfc	prodh,f,c
  4243  000430  0E00               	movlw	low _gsa_Handle_Msg
  4244  000432  24F3               	addwf	prodl,w,c
  4245  000434  6EE1               	movwf	fsr1l,c
  4246  000436  0E01               	movlw	high _gsa_Handle_Msg
  4247  000438  20F4               	addwfc	prodh,w,c
  4248  00043A  6EE2               	movwf	fsr1h,c
  4249  00043C  CFDF FFE7          	movff	indf2,indf1
  4250                           
  4251                           ; BSR set to: 0
  4252                           ;My_USART.c: 142: gsa_Handle_Msg[from_dress].a_Parameter[2] = DataBuff[date_lenth -6];
  4253  000440  0EFA               	movlw	250
  4254  000442  0100               	movlb	0	; () banked
  4255  000444  6FBD               	movwf	??_RS485_ManageMessage& (0+255),b
  4256  000446  0EFF               	movlw	255
  4257  000448  0100               	movlb	0	; () banked
  4258  00044A  6FBE               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  4259  00044C  0100               	movlb	0	; () banked
  4260  00044E  51BC               	movf	RS485_ManageMessage@date_lenth& (0+255),w,b
  4261  000450  0100               	movlb	0	; () banked
  4262  000452  6FBF               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  4263  000454  6BC0               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  4264  000456  0100               	movlb	0	; () banked
  4265  000458  51BD               	movf	??_RS485_ManageMessage& (0+255),w,b
  4266  00045A  0100               	movlb	0	; () banked
  4267  00045C  27BF               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  4268  00045E  0100               	movlb	0	; () banked
  4269  000460  51BE               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  4270  000462  0100               	movlb	0	; () banked
  4271  000464  23C0               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  4272  000466  0100               	movlb	0	; () banked
  4273  000468  51BF               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  4274  00046A  0100               	movlb	0	; () banked
  4275  00046C  25BA               	addwf	RS485_ManageMessage@DataBuff& (0+255),w,b
  4276  00046E  6ED9               	movwf	fsr2l,c
  4277  000470  0100               	movlb	0	; () banked
  4278  000472  51C0               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  4279  000474  0100               	movlb	0	; () banked
  4280  000476  21BB               	addwfc	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  4281  000478  6EDA               	movwf	fsr2h,c
  4282  00047A  0100               	movlb	0	; () banked
  4283  00047C  51C4               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  4284  00047E  0D07               	mullw	7
  4285  000480  0E03               	movlw	3
  4286  000482  26F3               	addwf	prodl,f,c
  4287  000484  0E00               	movlw	0
  4288  000486  22F4               	addwfc	prodh,f,c
  4289  000488  0E00               	movlw	low _gsa_Handle_Msg
  4290  00048A  24F3               	addwf	prodl,w,c
  4291  00048C  6EE1               	movwf	fsr1l,c
  4292  00048E  0E01               	movlw	high _gsa_Handle_Msg
  4293  000490  20F4               	addwfc	prodh,w,c
  4294  000492  6EE2               	movwf	fsr1h,c
  4295  000494  CFDF FFE7          	movff	indf2,indf1
  4296                           
  4297                           ; BSR set to: 0
  4298                           ;My_USART.c: 143: gsa_Handle_Msg[from_dress].a_Parameter[1] = DataBuff[date_lenth -7];
  4299  000498  0EF9               	movlw	249
  4300  00049A  0100               	movlb	0	; () banked
  4301  00049C  6FBD               	movwf	??_RS485_ManageMessage& (0+255),b
  4302  00049E  0EFF               	movlw	255
  4303  0004A0  0100               	movlb	0	; () banked
  4304  0004A2  6FBE               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  4305  0004A4  0100               	movlb	0	; () banked
  4306  0004A6  51BC               	movf	RS485_ManageMessage@date_lenth& (0+255),w,b
  4307  0004A8  0100               	movlb	0	; () banked
  4308  0004AA  6FBF               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  4309  0004AC  6BC0               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  4310  0004AE  0100               	movlb	0	; () banked
  4311  0004B0  51BD               	movf	??_RS485_ManageMessage& (0+255),w,b
  4312  0004B2  0100               	movlb	0	; () banked
  4313  0004B4  27BF               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  4314  0004B6  0100               	movlb	0	; () banked
  4315  0004B8  51BE               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  4316  0004BA  0100               	movlb	0	; () banked
  4317  0004BC  23C0               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  4318  0004BE  0100               	movlb	0	; () banked
  4319  0004C0  51BF               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  4320  0004C2  0100               	movlb	0	; () banked
  4321  0004C4  25BA               	addwf	RS485_ManageMessage@DataBuff& (0+255),w,b
  4322  0004C6  6ED9               	movwf	fsr2l,c
  4323  0004C8  0100               	movlb	0	; () banked
  4324  0004CA  51C0               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  4325  0004CC  0100               	movlb	0	; () banked
  4326  0004CE  21BB               	addwfc	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  4327  0004D0  6EDA               	movwf	fsr2h,c
  4328  0004D2  0100               	movlb	0	; () banked
  4329  0004D4  51C4               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  4330  0004D6  0D07               	mullw	7
  4331  0004D8  0E02               	movlw	2
  4332  0004DA  26F3               	addwf	prodl,f,c
  4333  0004DC  0E00               	movlw	0
  4334  0004DE  22F4               	addwfc	prodh,f,c
  4335  0004E0  0E00               	movlw	low _gsa_Handle_Msg
  4336  0004E2  24F3               	addwf	prodl,w,c
  4337  0004E4  6EE1               	movwf	fsr1l,c
  4338  0004E6  0E01               	movlw	high _gsa_Handle_Msg
  4339  0004E8  20F4               	addwfc	prodh,w,c
  4340  0004EA  6EE2               	movwf	fsr1h,c
  4341  0004EC  CFDF FFE7          	movff	indf2,indf1
  4342                           
  4343                           ; BSR set to: 0
  4344                           ;My_USART.c: 144: gsa_Handle_Msg[from_dress].a_Parameter[0] = DataBuff[date_lenth -8];
  4345  0004F0  0EF8               	movlw	248
  4346  0004F2  0100               	movlb	0	; () banked
  4347  0004F4  6FBD               	movwf	??_RS485_ManageMessage& (0+255),b
  4348  0004F6  0EFF               	movlw	255
  4349  0004F8  0100               	movlb	0	; () banked
  4350  0004FA  6FBE               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  4351  0004FC  0100               	movlb	0	; () banked
  4352  0004FE  51BC               	movf	RS485_ManageMessage@date_lenth& (0+255),w,b
  4353  000500  0100               	movlb	0	; () banked
  4354  000502  6FBF               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  4355  000504  6BC0               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  4356  000506  0100               	movlb	0	; () banked
  4357  000508  51BD               	movf	??_RS485_ManageMessage& (0+255),w,b
  4358  00050A  0100               	movlb	0	; () banked
  4359  00050C  27BF               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  4360  00050E  0100               	movlb	0	; () banked
  4361  000510  51BE               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  4362  000512  0100               	movlb	0	; () banked
  4363  000514  23C0               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  4364  000516  0100               	movlb	0	; () banked
  4365  000518  51BF               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  4366  00051A  0100               	movlb	0	; () banked
  4367  00051C  25BA               	addwf	RS485_ManageMessage@DataBuff& (0+255),w,b
  4368  00051E  6ED9               	movwf	fsr2l,c
  4369  000520  0100               	movlb	0	; () banked
  4370  000522  51C0               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  4371  000524  0100               	movlb	0	; () banked
  4372  000526  21BB               	addwfc	(RS485_ManageMessage@DataBuff+1)& (0+255),w,b
  4373  000528  6EDA               	movwf	fsr2h,c
  4374  00052A  0100               	movlb	0	; () banked
  4375  00052C  51C4               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  4376  00052E  0D07               	mullw	7
  4377  000530  0E01               	movlw	1
  4378  000532  26F3               	addwf	prodl,f,c
  4379  000534  0E00               	movlw	0
  4380  000536  22F4               	addwfc	prodh,f,c
  4381  000538  0E00               	movlw	low _gsa_Handle_Msg
  4382  00053A  24F3               	addwf	prodl,w,c
  4383  00053C  6EE1               	movwf	fsr1l,c
  4384  00053E  0E01               	movlw	high _gsa_Handle_Msg
  4385  000540  20F4               	addwfc	prodh,w,c
  4386  000542  6EE2               	movwf	fsr1h,c
  4387  000544  CFDF FFE7          	movff	indf2,indf1
  4388                           
  4389                           ; BSR set to: 0
  4390                           ;My_USART.c: 147: gsa_Handle_Msg[from_dress].hand_info = 1;
  4391  000548  0100               	movlb	0	; () banked
  4392  00054A  51C4               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  4393  00054C  0D07               	mullw	7
  4394  00054E  0E06               	movlw	6
  4395  000550  26F3               	addwf	prodl,f,c
  4396  000552  0E00               	movlw	0
  4397  000554  22F4               	addwfc	prodh,f,c
  4398  000556  0E00               	movlw	low _gsa_Handle_Msg
  4399  000558  24F3               	addwf	prodl,w,c
  4400  00055A  6ED9               	movwf	fsr2l,c
  4401  00055C  0E01               	movlw	high _gsa_Handle_Msg
  4402  00055E  20F4               	addwfc	prodh,w,c
  4403  000560  6EDA               	movwf	fsr2h,c
  4404  000562  0E01               	movlw	1
  4405  000564  6EDF               	movwf	indf2,c
  4406                           
  4407                           ; BSR set to: 0
  4408                           ;My_USART.c: 148: g_RS485_Receive_Flag = 0;
  4409  000566  0E00               	movlw	0
  4410  000568  6E40               	movwf	_g_RS485_Receive_Flag,c
  4411  00056A  0012               	return	
  4412                           
  4413                           ; BSR set to: 0
  4414  00056C  0012               	return		;funcret
  4415  00056E                     __end_of_RS485_ManageMessage:
  4416                           	opt stack 0
  4417                           tblptru	equ	0xFF8
  4418                           tblptrh	equ	0xFF7
  4419                           tblptrl	equ	0xFF6
  4420                           tablat	equ	0xFF5
  4421                           prodh	equ	0xFF4
  4422                           prodl	equ	0xFF3
  4423                           intcon	equ	0xFF2
  4424                           postinc0	equ	0xFEE
  4425                           wreg	equ	0xFE8
  4426                           indf1	equ	0xFE7
  4427                           postdec1	equ	0xFE5
  4428                           fsr1h	equ	0xFE2
  4429                           fsr1l	equ	0xFE1
  4430                           indf2	equ	0xFDF
  4431                           postinc2	equ	0xFDE
  4432                           fsr2h	equ	0xFDA
  4433                           fsr2l	equ	0xFD9
  4434                           status	equ	0xFD8
  4435                           
  4436 ;; *************** function _VerifyCRC *****************
  4437 ;; Defined at:
  4438 ;;		line 163 in file "_01_USER/My_USART.c"
  4439 ;; Parameters:    Size  Location     Type
  4440 ;;  DataBuff        2   37[COMRAM] PTR unsigned char 
  4441 ;;		 -> ga_RS485_ReceiveBuff(10), ga_RS485_SendBuff(10), 
  4442 ;;  date_lenth      1   39[COMRAM] unsigned char 
  4443 ;; Auto vars:     Size  Location     Type
  4444 ;;  CRC_Value       4   45[COMRAM] unsigned long 
  4445 ;;  CRC_Byte        1   49[COMRAM] unsigned char 
  4446 ;; Return value:  Size  Location     Type
  4447 ;;		None               void
  4448 ;; Registers used:
  4449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4450 ;; Tracked objects:
  4451 ;;		On entry : 0/0
  4452 ;;		On exit  : 0/0
  4453 ;;		Unchanged: 0/0
  4454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4455 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4456 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4457 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4458 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4459 ;;Total ram usage:       13 bytes
  4460 ;; Hardware stack levels used:    1
  4461 ;; Hardware stack levels required when called:    4
  4462 ;; This function calls:
  4463 ;;		___lldiv
  4464 ;;		___llmod
  4465 ;; This function is called by:
  4466 ;;		_RS485_SendDate
  4467 ;;		_RS485_ManageMessage
  4468 ;; This function uses a non-reentrant model
  4469 ;;
  4470                           
  4471                           	psect	text29
  4472  0009E0                     __ptext29:
  4473                           	opt stack 0
  4474  0009E0                     _VerifyCRC:
  4475                           	opt stack 24
  4476                           
  4477                           ;My_USART.c: 165: unsigned long int CRC_Value = 0;
  4478                           
  4479                           ;incstack = 0
  4480  0009E0  0E00               	movlw	0
  4481  0009E2  6E2E               	movwf	VerifyCRC@CRC_Value,c
  4482  0009E4  0E00               	movlw	0
  4483  0009E6  6E2F               	movwf	VerifyCRC@CRC_Value+1,c
  4484  0009E8  0E00               	movlw	0
  4485  0009EA  6E30               	movwf	VerifyCRC@CRC_Value+2,c
  4486  0009EC  0E00               	movlw	0
  4487  0009EE  6E31               	movwf	VerifyCRC@CRC_Value+3,c
  4488                           
  4489                           ;My_USART.c: 166: unsigned char CRC_Byte;
  4490                           ;My_USART.c: 168: for(CRC_Byte = 2; CRC_Byte < date_lenth ;CRC_Byte++)
  4491  0009F0  0E02               	movlw	2
  4492  0009F2  6E32               	movwf	VerifyCRC@CRC_Byte,c
  4493  0009F4  D035               	goto	l3597
  4494  0009F6                     l3593:
  4495                           
  4496                           ;My_USART.c: 169: CRC_Value = ( CRC_Value + DataBuff[CRC_Byte]*CRC_Byte ) % 0xffff;
  4497  0009F6  5032               	movf	VerifyCRC@CRC_Byte,w,c
  4498  0009F8  0D01               	mullw	1
  4499  0009FA  50F3               	movf	prodl,w,c
  4500  0009FC  2426               	addwf	VerifyCRC@DataBuff,w,c
  4501  0009FE  6ED9               	movwf	fsr2l,c
  4502  000A00  50F4               	movf	prodh,w,c
  4503  000A02  2027               	addwfc	VerifyCRC@DataBuff+1,w,c
  4504  000A04  6EDA               	movwf	fsr2h,c
  4505  000A06  50DF               	movf	indf2,w,c
  4506  000A08  6E29               	movwf	??_VerifyCRC& (0+255),c
  4507  000A0A  5029               	movf	??_VerifyCRC,w,c
  4508  000A0C  0232               	mulwf	VerifyCRC@CRC_Byte,c
  4509  000A0E  CFF3 F02A          	movff	prodl,??_VerifyCRC+1
  4510  000A12  CFF4 F02B          	movff	prodh,??_VerifyCRC+2
  4511  000A16  0E00               	movlw	0
  4512  000A18  BE2B               	btfsc	(??_VerifyCRC+2)& (0+255),7,c
  4513  000A1A  0EFF               	movlw	255
  4514  000A1C  6E2C               	movwf	(??_VerifyCRC+3)& (0+255),c
  4515  000A1E  6E2D               	movwf	(??_VerifyCRC+4)& (0+255),c
  4516  000A20  502E               	movf	VerifyCRC@CRC_Value,w,c
  4517  000A22  242A               	addwf	??_VerifyCRC+1,w,c
  4518  000A24  6E19               	movwf	___llmod@dividend,c
  4519  000A26  502F               	movf	VerifyCRC@CRC_Value+1,w,c
  4520  000A28  202B               	addwfc	??_VerifyCRC+2,w,c
  4521  000A2A  6E1A               	movwf	___llmod@dividend+1,c
  4522  000A2C  5030               	movf	VerifyCRC@CRC_Value+2,w,c
  4523  000A2E  202C               	addwfc	??_VerifyCRC+3,w,c
  4524  000A30  6E1B               	movwf	___llmod@dividend+2,c
  4525  000A32  5031               	movf	VerifyCRC@CRC_Value+3,w,c
  4526  000A34  202D               	addwfc	??_VerifyCRC+4,w,c
  4527  000A36  6E1C               	movwf	___llmod@dividend+3,c
  4528  000A38  0EFF               	movlw	255
  4529  000A3A  6E1D               	movwf	___llmod@divisor,c
  4530  000A3C  0EFF               	movlw	255
  4531  000A3E  6E1E               	movwf	___llmod@divisor+1,c
  4532  000A40  0E00               	movlw	0
  4533  000A42  6E1F               	movwf	___llmod@divisor+2,c
  4534  000A44  0E00               	movlw	0
  4535  000A46  6E20               	movwf	___llmod@divisor+3,c
  4536  000A48  EC14  F008         	call	___llmod	;wreg free
  4537  000A4C  C019  F02E         	movff	?___llmod,VerifyCRC@CRC_Value
  4538  000A50  C01A  F02F         	movff	?___llmod+1,VerifyCRC@CRC_Value+1
  4539  000A54  C01B  F030         	movff	?___llmod+2,VerifyCRC@CRC_Value+2
  4540  000A58  C01C  F031         	movff	?___llmod+3,VerifyCRC@CRC_Value+3
  4541  000A5C  2A32               	incf	VerifyCRC@CRC_Byte,f,c
  4542  000A5E  D000               	goto	l3597
  4543  000A60                     l3597:
  4544  000A60  5028               	movf	VerifyCRC@date_lenth,w,c
  4545  000A62  5C32               	subwf	VerifyCRC@CRC_Byte,w,c
  4546  000A64  A0D8               	btfss	status,0,c
  4547  000A66  D7C7               	goto	l3593
  4548                           
  4549                           ;My_USART.c: 171: DataBuff[1] = CRC_Value/0xff;
  4550  000A68  EE20 F001          	lfsr	2,1
  4551  000A6C  5026               	movf	VerifyCRC@DataBuff,w,c
  4552  000A6E  26D9               	addwf	fsr2l,f,c
  4553  000A70  5027               	movf	VerifyCRC@DataBuff+1,w,c
  4554  000A72  22DA               	addwfc	fsr2h,f,c
  4555  000A74  C02E  F019         	movff	VerifyCRC@CRC_Value,___lldiv@dividend
  4556  000A78  C02F  F01A         	movff	VerifyCRC@CRC_Value+1,___lldiv@dividend+1
  4557  000A7C  C030  F01B         	movff	VerifyCRC@CRC_Value+2,___lldiv@dividend+2
  4558  000A80  C031  F01C         	movff	VerifyCRC@CRC_Value+3,___lldiv@dividend+3
  4559  000A84  0EFF               	movlw	255
  4560  000A86  6E1D               	movwf	___lldiv@divisor,c
  4561  000A88  0E00               	movlw	0
  4562  000A8A  6E1E               	movwf	___lldiv@divisor+1,c
  4563  000A8C  0E00               	movlw	0
  4564  000A8E  6E1F               	movwf	___lldiv@divisor+2,c
  4565  000A90  0E00               	movlw	0
  4566  000A92  6E20               	movwf	___lldiv@divisor+3,c
  4567  000A94  EC93  F007         	call	___lldiv	;wreg free
  4568  000A98  5019               	movf	?___lldiv,w,c
  4569  000A9A  6EDF               	movwf	indf2,c
  4570                           
  4571                           ;My_USART.c: 172: DataBuff[0] = CRC_Value%0xff;
  4572  000A9C  C02E  F019         	movff	VerifyCRC@CRC_Value,___llmod@dividend
  4573  000AA0  C02F  F01A         	movff	VerifyCRC@CRC_Value+1,___llmod@dividend+1
  4574  000AA4  C030  F01B         	movff	VerifyCRC@CRC_Value+2,___llmod@dividend+2
  4575  000AA8  C031  F01C         	movff	VerifyCRC@CRC_Value+3,___llmod@dividend+3
  4576  000AAC  0EFF               	movlw	255
  4577  000AAE  6E1D               	movwf	___llmod@divisor,c
  4578  000AB0  0E00               	movlw	0
  4579  000AB2  6E1E               	movwf	___llmod@divisor+1,c
  4580  000AB4  0E00               	movlw	0
  4581  000AB6  6E1F               	movwf	___llmod@divisor+2,c
  4582  000AB8  0E00               	movlw	0
  4583  000ABA  6E20               	movwf	___llmod@divisor+3,c
  4584  000ABC  EC14  F008         	call	___llmod	;wreg free
  4585  000AC0  5019               	movf	?___llmod,w,c
  4586  000AC2  C026  FFD9         	movff	VerifyCRC@DataBuff,fsr2l
  4587  000AC6  C027  FFDA         	movff	VerifyCRC@DataBuff+1,fsr2h
  4588  000ACA  6EDF               	movwf	indf2,c
  4589                           
  4590                           ;My_USART.c: 174: if( DataBuff[1] == 0xff ) DataBuff[1] --;
  4591  000ACC  EE20 F001          	lfsr	2,1
  4592  000AD0  5026               	movf	VerifyCRC@DataBuff,w,c
  4593  000AD2  26D9               	addwf	fsr2l,f,c
  4594  000AD4  5027               	movf	VerifyCRC@DataBuff+1,w,c
  4595  000AD6  22DA               	addwfc	fsr2h,f,c
  4596  000AD8  28DE               	incf	postinc2,w,c
  4597  000ADA  A4D8               	btfss	status,2,c
  4598  000ADC  D007               	goto	l234
  4599  000ADE  EE20 F001          	lfsr	2,1
  4600  000AE2  5026               	movf	VerifyCRC@DataBuff,w,c
  4601  000AE4  26D9               	addwf	fsr2l,f,c
  4602  000AE6  5027               	movf	VerifyCRC@DataBuff+1,w,c
  4603  000AE8  22DA               	addwfc	fsr2h,f,c
  4604  000AEA  06DF               	decf	indf2,f,c
  4605  000AEC                     l234:
  4606                           
  4607                           ;My_USART.c: 175: if( DataBuff[0] == 0xff ) DataBuff[0] --;
  4608  000AEC  C026  FFD9         	movff	VerifyCRC@DataBuff,fsr2l
  4609  000AF0  C027  FFDA         	movff	VerifyCRC@DataBuff+1,fsr2h
  4610  000AF4  28DE               	incf	postinc2,w,c
  4611  000AF6  A4D8               	btfss	status,2,c
  4612  000AF8  0012               	return	
  4613  000AFA  C026  FFD9         	movff	VerifyCRC@DataBuff,fsr2l
  4614  000AFE  C027  FFDA         	movff	VerifyCRC@DataBuff+1,fsr2h
  4615  000B02  06DF               	decf	indf2,f,c
  4616  000B04  0012               	return	
  4617  000B06  0012               	return		;funcret
  4618  000B08                     __end_of_VerifyCRC:
  4619                           	opt stack 0
  4620                           tblptru	equ	0xFF8
  4621                           tblptrh	equ	0xFF7
  4622                           tblptrl	equ	0xFF6
  4623                           tablat	equ	0xFF5
  4624                           prodh	equ	0xFF4
  4625                           prodl	equ	0xFF3
  4626                           intcon	equ	0xFF2
  4627                           postinc0	equ	0xFEE
  4628                           wreg	equ	0xFE8
  4629                           indf1	equ	0xFE7
  4630                           postdec1	equ	0xFE5
  4631                           fsr1h	equ	0xFE2
  4632                           fsr1l	equ	0xFE1
  4633                           indf2	equ	0xFDF
  4634                           postinc2	equ	0xFDE
  4635                           fsr2h	equ	0xFDA
  4636                           fsr2l	equ	0xFD9
  4637                           status	equ	0xFD8
  4638                           
  4639 ;; *************** function ___llmod *****************
  4640 ;; Defined at:
  4641 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  4642 ;; Parameters:    Size  Location     Type
  4643 ;;  dividend        4   24[COMRAM] unsigned long 
  4644 ;;  divisor         4   28[COMRAM] unsigned long 
  4645 ;; Auto vars:     Size  Location     Type
  4646 ;;  counter         1   32[COMRAM] unsigned char 
  4647 ;; Return value:  Size  Location     Type
  4648 ;;                  4   24[COMRAM] unsigned long 
  4649 ;; Registers used:
  4650 ;;		wreg, status,2, status,0
  4651 ;; Tracked objects:
  4652 ;;		On entry : 0/0
  4653 ;;		On exit  : 0/0
  4654 ;;		Unchanged: 0/0
  4655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4656 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4657 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4659 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4660 ;;Total ram usage:        9 bytes
  4661 ;; Hardware stack levels used:    1
  4662 ;; Hardware stack levels required when called:    3
  4663 ;; This function calls:
  4664 ;;		Nothing
  4665 ;; This function is called by:
  4666 ;;		_VerifyCRC
  4667 ;; This function uses a non-reentrant model
  4668 ;;
  4669                           
  4670                           	psect	text30
  4671  001028                     __ptext30:
  4672                           	opt stack 0
  4673  001028                     ___llmod:
  4674                           	opt stack 24
  4675                           
  4676                           ;incstack = 0
  4677  001028  501D               	movf	___llmod@divisor,w,c
  4678  00102A  101E               	iorwf	___llmod@divisor+1,w,c
  4679  00102C  101F               	iorwf	___llmod@divisor+2,w,c
  4680  00102E  1020               	iorwf	___llmod@divisor+3,w,c
  4681  001030  B4D8               	btfsc	status,2,c
  4682  001032  D029               	goto	l1165
  4683  001034  0E01               	movlw	1
  4684  001036  6E21               	movwf	___llmod@counter,c
  4685  001038  D007               	goto	l3581
  4686  00103A                     l3579:
  4687  00103A  90D8               	bcf	status,0,c
  4688  00103C  361D               	rlcf	___llmod@divisor,f,c
  4689  00103E  361E               	rlcf	___llmod@divisor+1,f,c
  4690  001040  361F               	rlcf	___llmod@divisor+2,f,c
  4691  001042  3620               	rlcf	___llmod@divisor+3,f,c
  4692  001044  2A21               	incf	___llmod@counter,f,c
  4693  001046  D000               	goto	l3581
  4694  001048                     l3581:
  4695  001048  BE20               	btfsc	___llmod@divisor+3,7,c
  4696  00104A  D002               	goto	l3583
  4697  00104C  D7F6               	goto	l3579
  4698  00104E  D000               	goto	l3583
  4699  001050                     l3583:
  4700  001050  501D               	movf	___llmod@divisor,w,c
  4701  001052  5C19               	subwf	___llmod@dividend,w,c
  4702  001054  501E               	movf	___llmod@divisor+1,w,c
  4703  001056  581A               	subwfb	___llmod@dividend+1,w,c
  4704  001058  501F               	movf	___llmod@divisor+2,w,c
  4705  00105A  581B               	subwfb	___llmod@dividend+2,w,c
  4706  00105C  5020               	movf	___llmod@divisor+3,w,c
  4707  00105E  581C               	subwfb	___llmod@dividend+3,w,c
  4708  001060  A0D8               	btfss	status,0,c
  4709  001062  D009               	goto	l3587
  4710  001064  501D               	movf	___llmod@divisor,w,c
  4711  001066  5E19               	subwf	___llmod@dividend,f,c
  4712  001068  501E               	movf	___llmod@divisor+1,w,c
  4713  00106A  5A1A               	subwfb	___llmod@dividend+1,f,c
  4714  00106C  501F               	movf	___llmod@divisor+2,w,c
  4715  00106E  5A1B               	subwfb	___llmod@dividend+2,f,c
  4716  001070  5020               	movf	___llmod@divisor+3,w,c
  4717  001072  5A1C               	subwfb	___llmod@dividend+3,f,c
  4718  001074  D000               	goto	l3587
  4719  001076                     l3587:
  4720  001076  90D8               	bcf	status,0,c
  4721  001078  3220               	rrcf	___llmod@divisor+3,f,c
  4722  00107A  321F               	rrcf	___llmod@divisor+2,f,c
  4723  00107C  321E               	rrcf	___llmod@divisor+1,f,c
  4724  00107E  321D               	rrcf	___llmod@divisor,f,c
  4725  001080  2E21               	decfsz	___llmod@counter,f,c
  4726  001082  D7E6               	goto	l3583
  4727  001084  D000               	goto	l1165
  4728  001086                     l1165:
  4729  001086  C019  F019         	movff	___llmod@dividend,?___llmod
  4730  00108A  C01A  F01A         	movff	___llmod@dividend+1,?___llmod+1
  4731  00108E  C01B  F01B         	movff	___llmod@dividend+2,?___llmod+2
  4732  001092  C01C  F01C         	movff	___llmod@dividend+3,?___llmod+3
  4733  001096  0012               	return		;funcret
  4734  001098                     __end_of___llmod:
  4735                           	opt stack 0
  4736                           tblptru	equ	0xFF8
  4737                           tblptrh	equ	0xFF7
  4738                           tblptrl	equ	0xFF6
  4739                           tablat	equ	0xFF5
  4740                           prodh	equ	0xFF4
  4741                           prodl	equ	0xFF3
  4742                           intcon	equ	0xFF2
  4743                           postinc0	equ	0xFEE
  4744                           wreg	equ	0xFE8
  4745                           indf1	equ	0xFE7
  4746                           postdec1	equ	0xFE5
  4747                           fsr1h	equ	0xFE2
  4748                           fsr1l	equ	0xFE1
  4749                           indf2	equ	0xFDF
  4750                           postinc2	equ	0xFDE
  4751                           fsr2h	equ	0xFDA
  4752                           fsr2l	equ	0xFD9
  4753                           status	equ	0xFD8
  4754                           
  4755 ;; *************** function ___lldiv *****************
  4756 ;; Defined at:
  4757 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  4758 ;; Parameters:    Size  Location     Type
  4759 ;;  dividend        4   24[COMRAM] unsigned long 
  4760 ;;  divisor         4   28[COMRAM] unsigned long 
  4761 ;; Auto vars:     Size  Location     Type
  4762 ;;  quotient        4   32[COMRAM] unsigned long 
  4763 ;;  counter         1   36[COMRAM] unsigned char 
  4764 ;; Return value:  Size  Location     Type
  4765 ;;                  4   24[COMRAM] unsigned long 
  4766 ;; Registers used:
  4767 ;;		wreg, status,2, status,0
  4768 ;; Tracked objects:
  4769 ;;		On entry : 0/0
  4770 ;;		On exit  : 0/0
  4771 ;;		Unchanged: 0/0
  4772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4773 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4774 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4776 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4777 ;;Total ram usage:       13 bytes
  4778 ;; Hardware stack levels used:    1
  4779 ;; Hardware stack levels required when called:    3
  4780 ;; This function calls:
  4781 ;;		Nothing
  4782 ;; This function is called by:
  4783 ;;		_VerifyCRC
  4784 ;; This function uses a non-reentrant model
  4785 ;;
  4786                           
  4787                           	psect	text31
  4788  000F26                     __ptext31:
  4789                           	opt stack 0
  4790  000F26                     ___lldiv:
  4791                           	opt stack 24
  4792                           
  4793                           ;incstack = 0
  4794  000F26  0E00               	movlw	0
  4795  000F28  6E21               	movwf	___lldiv@quotient,c
  4796  000F2A  0E00               	movlw	0
  4797  000F2C  6E22               	movwf	___lldiv@quotient+1,c
  4798  000F2E  0E00               	movlw	0
  4799  000F30  6E23               	movwf	___lldiv@quotient+2,c
  4800  000F32  0E00               	movlw	0
  4801  000F34  6E24               	movwf	___lldiv@quotient+3,c
  4802  000F36  501D               	movf	___lldiv@divisor,w,c
  4803  000F38  101E               	iorwf	___lldiv@divisor+1,w,c
  4804  000F3A  101F               	iorwf	___lldiv@divisor+2,w,c
  4805  000F3C  1020               	iorwf	___lldiv@divisor+3,w,c
  4806  000F3E  B4D8               	btfsc	status,2,c
  4807  000F40  D02F               	goto	l1155
  4808  000F42  0E01               	movlw	1
  4809  000F44  6E25               	movwf	___lldiv@counter,c
  4810  000F46  D007               	goto	l3561
  4811  000F48                     l3559:
  4812  000F48  90D8               	bcf	status,0,c
  4813  000F4A  361D               	rlcf	___lldiv@divisor,f,c
  4814  000F4C  361E               	rlcf	___lldiv@divisor+1,f,c
  4815  000F4E  361F               	rlcf	___lldiv@divisor+2,f,c
  4816  000F50  3620               	rlcf	___lldiv@divisor+3,f,c
  4817  000F52  2A25               	incf	___lldiv@counter,f,c
  4818  000F54  D000               	goto	l3561
  4819  000F56                     l3561:
  4820  000F56  BE20               	btfsc	___lldiv@divisor+3,7,c
  4821  000F58  D002               	goto	l3563
  4822  000F5A  D7F6               	goto	l3559
  4823  000F5C  D000               	goto	l3563
  4824  000F5E                     l3563:
  4825  000F5E  90D8               	bcf	status,0,c
  4826  000F60  3621               	rlcf	___lldiv@quotient,f,c
  4827  000F62  3622               	rlcf	___lldiv@quotient+1,f,c
  4828  000F64  3623               	rlcf	___lldiv@quotient+2,f,c
  4829  000F66  3624               	rlcf	___lldiv@quotient+3,f,c
  4830  000F68  501D               	movf	___lldiv@divisor,w,c
  4831  000F6A  5C19               	subwf	___lldiv@dividend,w,c
  4832  000F6C  501E               	movf	___lldiv@divisor+1,w,c
  4833  000F6E  581A               	subwfb	___lldiv@dividend+1,w,c
  4834  000F70  501F               	movf	___lldiv@divisor+2,w,c
  4835  000F72  581B               	subwfb	___lldiv@dividend+2,w,c
  4836  000F74  5020               	movf	___lldiv@divisor+3,w,c
  4837  000F76  581C               	subwfb	___lldiv@dividend+3,w,c
  4838  000F78  A0D8               	btfss	status,0,c
  4839  000F7A  D00A               	goto	l3571
  4840  000F7C  501D               	movf	___lldiv@divisor,w,c
  4841  000F7E  5E19               	subwf	___lldiv@dividend,f,c
  4842  000F80  501E               	movf	___lldiv@divisor+1,w,c
  4843  000F82  5A1A               	subwfb	___lldiv@dividend+1,f,c
  4844  000F84  501F               	movf	___lldiv@divisor+2,w,c
  4845  000F86  5A1B               	subwfb	___lldiv@dividend+2,f,c
  4846  000F88  5020               	movf	___lldiv@divisor+3,w,c
  4847  000F8A  5A1C               	subwfb	___lldiv@dividend+3,f,c
  4848  000F8C  8021               	bsf	___lldiv@quotient,0,c
  4849  000F8E  D000               	goto	l3571
  4850  000F90                     l3571:
  4851  000F90  90D8               	bcf	status,0,c
  4852  000F92  3220               	rrcf	___lldiv@divisor+3,f,c
  4853  000F94  321F               	rrcf	___lldiv@divisor+2,f,c
  4854  000F96  321E               	rrcf	___lldiv@divisor+1,f,c
  4855  000F98  321D               	rrcf	___lldiv@divisor,f,c
  4856  000F9A  2E25               	decfsz	___lldiv@counter,f,c
  4857  000F9C  D7E0               	goto	l3563
  4858  000F9E  D000               	goto	l1155
  4859  000FA0                     l1155:
  4860  000FA0  C021  F019         	movff	___lldiv@quotient,?___lldiv
  4861  000FA4  C022  F01A         	movff	___lldiv@quotient+1,?___lldiv+1
  4862  000FA8  C023  F01B         	movff	___lldiv@quotient+2,?___lldiv+2
  4863  000FAC  C024  F01C         	movff	___lldiv@quotient+3,?___lldiv+3
  4864  000FB0  0012               	return		;funcret
  4865  000FB2                     __end_of___lldiv:
  4866                           	opt stack 0
  4867                           tblptru	equ	0xFF8
  4868                           tblptrh	equ	0xFF7
  4869                           tblptrl	equ	0xFF6
  4870                           tablat	equ	0xFF5
  4871                           prodh	equ	0xFF4
  4872                           prodl	equ	0xFF3
  4873                           intcon	equ	0xFF2
  4874                           postinc0	equ	0xFEE
  4875                           wreg	equ	0xFE8
  4876                           indf1	equ	0xFE7
  4877                           postdec1	equ	0xFE5
  4878                           fsr1h	equ	0xFE2
  4879                           fsr1l	equ	0xFE1
  4880                           indf2	equ	0xFDF
  4881                           postinc2	equ	0xFDE
  4882                           fsr2h	equ	0xFDA
  4883                           fsr2l	equ	0xFD9
  4884                           status	equ	0xFD8
  4885                           
  4886 ;; *************** function _Key_ManageMessage *****************
  4887 ;; Defined at:
  4888 ;;		line 182 in file "_01_USER/Key.c"
  4889 ;; Parameters:    Size  Location     Type
  4890 ;;		None
  4891 ;; Auto vars:     Size  Location     Type
  4892 ;;		None
  4893 ;; Return value:  Size  Location     Type
  4894 ;;		None               void
  4895 ;; Registers used:
  4896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4897 ;; Tracked objects:
  4898 ;;		On entry : 0/0
  4899 ;;		On exit  : 0/0
  4900 ;;		Unchanged: 0/0
  4901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4904 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4905 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4906 ;;Total ram usage:        4 bytes
  4907 ;; Hardware stack levels used:    1
  4908 ;; Hardware stack levels required when called:    4
  4909 ;; This function calls:
  4910 ;;		_Key_ReadFSM
  4911 ;;		_Key_ResetFSM
  4912 ;;		___lbmod
  4913 ;; This function is called by:
  4914 ;;		_ManageMessage
  4915 ;; This function uses a non-reentrant model
  4916 ;;
  4917                           
  4918                           	psect	text32
  4919  000710                     __ptext32:
  4920                           	opt stack 0
  4921  000710                     _Key_ManageMessage:
  4922                           	opt stack 25
  4923                           
  4924                           ;Key.c: 184: Key_ReadFSM();
  4925                           
  4926                           ;incstack = 0
  4927  000710  ECB7  F002         	call	_Key_ReadFSM	;wreg free
  4928                           
  4929                           ;Key.c: 186: if ( gs_Local_Key_User.key_group == ((0x01<<3)|(0x01<<4)) && gs_Local_Key_U
      +                          ser.key_group_state == KEY_short )
  4930  000714  0E18               	movlw	24
  4931  000716  0100               	movlb	0	; () banked
  4932  000718  197D               	xorwf	(_gs_Local_Key_User+1)& (0+255),w,b	;volatile
  4933  00071A  A4D8               	btfss	status,2,c
  4934  00071C  D021               	goto	l2803
  4935                           
  4936                           ; BSR set to: 0
  4937  00071E  0100               	movlb	0	; () banked
  4938  000720  057E               	decf	(_gs_Local_Key_User+2)& (0+255),w,b	;volatile
  4939  000722  A4D8               	btfss	status,2,c
  4940  000724  D01D               	goto	l2803
  4941                           
  4942                           ; BSR set to: 0
  4943                           ;Key.c: 187: {
  4944                           ;Key.c: 188: if(g_RS485_Byte >=1 && g_RS485_Byte <=3)
  4945  000726  503F               	movf	_g_RS485_Byte,w,c
  4946  000728  B4D8               	btfsc	status,2,c
  4947  00072A  D017               	goto	l2801
  4948                           
  4949                           ; BSR set to: 0
  4950  00072C  0E04               	movlw	4
  4951  00072E  603F               	cpfslt	_g_RS485_Byte,c
  4952  000730  D014               	goto	l2801
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;Key.c: 189: gs_Handle_Switch.Relay[g_RS485_Byte - 1] = 1;
  4956  000732  0EFF               	movlw	255
  4957  000734  6E1F               	movwf	??_Key_ManageMessage& (0+255),c
  4958  000736  0EFF               	movlw	255
  4959  000738  6E20               	movwf	(??_Key_ManageMessage+1)& (0+255),c
  4960  00073A  503F               	movf	_g_RS485_Byte,w,c
  4961  00073C  6E21               	movwf	(??_Key_ManageMessage+2)& (0+255),c
  4962  00073E  6A22               	clrf	(??_Key_ManageMessage+3)& (0+255),c
  4963  000740  501F               	movf	??_Key_ManageMessage,w,c
  4964  000742  2621               	addwf	??_Key_ManageMessage+2,f,c
  4965  000744  5020               	movf	??_Key_ManageMessage+1,w,c
  4966  000746  2222               	addwfc	??_Key_ManageMessage+3,f,c
  4967  000748  0E45               	movlw	low (_gs_Handle_Switch+4)
  4968  00074A  2421               	addwf	??_Key_ManageMessage+2,w,c
  4969  00074C  6ED9               	movwf	fsr2l,c
  4970  00074E  0E00               	movlw	high (_gs_Handle_Switch+4)
  4971  000750  2022               	addwfc	??_Key_ManageMessage+3,w,c
  4972  000752  6EDA               	movwf	fsr2h,c
  4973  000754  0E01               	movlw	1
  4974  000756  6EDF               	movwf	indf2,c
  4975  000758  D000               	goto	l2801
  4976  00075A                     l2801:
  4977                           
  4978                           ; BSR set to: 0
  4979                           ;Key.c: 190: Key_ResetFSM();
  4980  00075A  EC18  F00A         	call	_Key_ResetFSM	;wreg free
  4981  00075E  D000               	goto	l2803
  4982  000760                     l2803:
  4983                           
  4984                           ;Key.c: 191: }
  4985                           ;Key.c: 193: if ( gs_Local_Key_User.key_group == ((0x01<<4)|(0x01<<5)) && gs_Local_Key_U
      +                          ser.key_group_state == KEY_short )
  4986  000760  0E30               	movlw	48
  4987  000762  0100               	movlb	0	; () banked
  4988  000764  197D               	xorwf	(_gs_Local_Key_User+1)& (0+255),w,b	;volatile
  4989  000766  A4D8               	btfss	status,2,c
  4990  000768  D021               	goto	l2815
  4991                           
  4992                           ; BSR set to: 0
  4993  00076A  0100               	movlb	0	; () banked
  4994  00076C  057E               	decf	(_gs_Local_Key_User+2)& (0+255),w,b	;volatile
  4995  00076E  A4D8               	btfss	status,2,c
  4996  000770  D01D               	goto	l2815
  4997                           
  4998                           ; BSR set to: 0
  4999                           ;Key.c: 194: {
  5000                           ;Key.c: 195: if(g_RS485_Byte >=1 && g_RS485_Byte <=3)
  5001  000772  503F               	movf	_g_RS485_Byte,w,c
  5002  000774  B4D8               	btfsc	status,2,c
  5003  000776  D017               	goto	l2813
  5004                           
  5005                           ; BSR set to: 0
  5006  000778  0E04               	movlw	4
  5007  00077A  603F               	cpfslt	_g_RS485_Byte,c
  5008  00077C  D014               	goto	l2813
  5009                           
  5010                           ; BSR set to: 0
  5011                           ;Key.c: 196: gs_Handle_Switch.Relay[g_RS485_Byte - 1] = 0;
  5012  00077E  0EFF               	movlw	255
  5013  000780  6E1F               	movwf	??_Key_ManageMessage& (0+255),c
  5014  000782  0EFF               	movlw	255
  5015  000784  6E20               	movwf	(??_Key_ManageMessage+1)& (0+255),c
  5016  000786  503F               	movf	_g_RS485_Byte,w,c
  5017  000788  6E21               	movwf	(??_Key_ManageMessage+2)& (0+255),c
  5018  00078A  6A22               	clrf	(??_Key_ManageMessage+3)& (0+255),c
  5019  00078C  501F               	movf	??_Key_ManageMessage,w,c
  5020  00078E  2621               	addwf	??_Key_ManageMessage+2,f,c
  5021  000790  5020               	movf	??_Key_ManageMessage+1,w,c
  5022  000792  2222               	addwfc	??_Key_ManageMessage+3,f,c
  5023  000794  0E45               	movlw	low (_gs_Handle_Switch+4)
  5024  000796  2421               	addwf	??_Key_ManageMessage+2,w,c
  5025  000798  6ED9               	movwf	fsr2l,c
  5026  00079A  0E00               	movlw	high (_gs_Handle_Switch+4)
  5027  00079C  2022               	addwfc	??_Key_ManageMessage+3,w,c
  5028  00079E  6EDA               	movwf	fsr2h,c
  5029  0007A0  0E00               	movlw	0
  5030  0007A2  6EDF               	movwf	indf2,c
  5031  0007A4  D000               	goto	l2813
  5032  0007A6                     l2813:
  5033                           
  5034                           ; BSR set to: 0
  5035                           ;Key.c: 197: Key_ResetFSM();
  5036  0007A6  EC18  F00A         	call	_Key_ResetFSM	;wreg free
  5037  0007AA  D000               	goto	l2815
  5038  0007AC                     l2815:
  5039                           
  5040                           ;Key.c: 198: }
  5041                           ;Key.c: 201: if (gs_Local_Key_User.a_key_state[1-1] == KEY_short) g_RS485_Byte ++ ;
  5042  0007AC  0100               	movlb	0	; () banked
  5043  0007AE  058B               	decf	(_gs_Local_Key_User+15)& (0+255),w,b	;volatile
  5044  0007B0  A4D8               	btfss	status,2,c
  5045  0007B2  D002               	goto	l2819
  5046                           
  5047                           ; BSR set to: 0
  5048  0007B4  2A3F               	incf	_g_RS485_Byte,f,c
  5049  0007B6  D000               	goto	l2819
  5050  0007B8                     l2819:
  5051                           
  5052                           ; BSR set to: 0
  5053                           ;Key.c: 202: if (gs_Local_Key_User.a_key_state[1-1] == KEY_hold) g_RS485_Byte ++ ;
  5054  0007B8  0E03               	movlw	3
  5055  0007BA  0100               	movlb	0	; () banked
  5056  0007BC  198B               	xorwf	(_gs_Local_Key_User+15)& (0+255),w,b	;volatile
  5057  0007BE  A4D8               	btfss	status,2,c
  5058  0007C0  D002               	goto	l2823
  5059                           
  5060                           ; BSR set to: 0
  5061  0007C2  2A3F               	incf	_g_RS485_Byte,f,c
  5062  0007C4  D000               	goto	l2823
  5063  0007C6                     l2823:
  5064                           
  5065                           ; BSR set to: 0
  5066                           ;Key.c: 205: if (gs_Local_Key_User.a_key_state[2-1] == KEY_short) gs_Handle_Switch.Show_
      +                          Send_Receive = ~gs_Handle_Switch.Show_Send_Receive;
  5067  0007C6  0100               	movlb	0	; () banked
  5068  0007C8  058C               	decf	(_gs_Local_Key_User+16)& (0+255),w,b	;volatile
  5069  0007CA  A4D8               	btfss	status,2,c
  5070  0007CC  D003               	goto	l160
  5071                           
  5072                           ; BSR set to: 0
  5073  0007CE  5044               	movf	_gs_Handle_Switch+3,w,c
  5074  0007D0  0AFF               	xorlw	255
  5075  0007D2  6E44               	movwf	_gs_Handle_Switch+3,c
  5076  0007D4                     l160:
  5077                           
  5078                           ; BSR set to: 0
  5079                           ;Key.c: 208: if (gs_Local_Key_User.a_key_state[3-1] == KEY_short) g_RS485_Byte -- ;
  5080  0007D4  0100               	movlb	0	; () banked
  5081  0007D6  058D               	decf	(_gs_Local_Key_User+17)& (0+255),w,b	;volatile
  5082  0007D8  A4D8               	btfss	status,2,c
  5083  0007DA  D002               	goto	l2829
  5084                           
  5085                           ; BSR set to: 0
  5086  0007DC  063F               	decf	_g_RS485_Byte,f,c
  5087  0007DE  D000               	goto	l2829
  5088  0007E0                     l2829:
  5089                           
  5090                           ; BSR set to: 0
  5091                           ;Key.c: 209: if (gs_Local_Key_User.a_key_state[3-1] == KEY_hold) g_RS485_Byte -- ;
  5092  0007E0  0E03               	movlw	3
  5093  0007E2  0100               	movlb	0	; () banked
  5094  0007E4  198D               	xorwf	(_gs_Local_Key_User+17)& (0+255),w,b	;volatile
  5095  0007E6  A4D8               	btfss	status,2,c
  5096  0007E8  D002               	goto	l2833
  5097                           
  5098                           ; BSR set to: 0
  5099  0007EA  063F               	decf	_g_RS485_Byte,f,c
  5100  0007EC  D000               	goto	l2833
  5101  0007EE                     l2833:
  5102                           
  5103                           ; BSR set to: 0
  5104                           ;Key.c: 212: if (gs_Local_Key_User.a_key_state[4-1] == KEY_short) ga_RS485_SendBuff[g_RS
      +                          485_Byte] ++ ;
  5105  0007EE  0100               	movlb	0	; () banked
  5106  0007F0  058E               	decf	(_gs_Local_Key_User+18)& (0+255),w,b	;volatile
  5107  0007F2  A4D8               	btfss	status,2,c
  5108  0007F4  D00A               	goto	l2837
  5109                           
  5110                           ; BSR set to: 0
  5111  0007F6  503F               	movf	_g_RS485_Byte,w,c
  5112  0007F8  0D01               	mullw	1
  5113  0007FA  0EB0               	movlw	low _ga_RS485_SendBuff
  5114  0007FC  24F3               	addwf	prodl,w,c
  5115  0007FE  6ED9               	movwf	fsr2l,c
  5116  000800  0E00               	movlw	high _ga_RS485_SendBuff
  5117  000802  20F4               	addwfc	prodh,w,c
  5118  000804  6EDA               	movwf	fsr2h,c
  5119  000806  2ADF               	incf	indf2,f,c
  5120  000808  D000               	goto	l2837
  5121  00080A                     l2837:
  5122                           
  5123                           ; BSR set to: 0
  5124                           ;Key.c: 213: if (gs_Local_Key_User.a_key_state[4-1] == KEY_hold) ga_RS485_SendBuff[g_RS4
      +                          85_Byte] ++ ;
  5125  00080A  0E03               	movlw	3
  5126  00080C  0100               	movlb	0	; () banked
  5127  00080E  198E               	xorwf	(_gs_Local_Key_User+18)& (0+255),w,b	;volatile
  5128  000810  A4D8               	btfss	status,2,c
  5129  000812  D00A               	goto	l2841
  5130                           
  5131                           ; BSR set to: 0
  5132  000814  503F               	movf	_g_RS485_Byte,w,c
  5133  000816  0D01               	mullw	1
  5134  000818  0EB0               	movlw	low _ga_RS485_SendBuff
  5135  00081A  24F3               	addwf	prodl,w,c
  5136  00081C  6ED9               	movwf	fsr2l,c
  5137  00081E  0E00               	movlw	high _ga_RS485_SendBuff
  5138  000820  20F4               	addwfc	prodh,w,c
  5139  000822  6EDA               	movwf	fsr2h,c
  5140  000824  2ADF               	incf	indf2,f,c
  5141  000826  D000               	goto	l2841
  5142  000828                     l2841:
  5143                           
  5144                           ; BSR set to: 0
  5145                           ;Key.c: 216: if (gs_Local_Key_User.a_key_state[5-1] == KEY_short)
  5146  000828  0100               	movlb	0	; () banked
  5147  00082A  058F               	decf	(_gs_Local_Key_User+19)& (0+255),w,b	;volatile
  5148  00082C  A4D8               	btfss	status,2,c
  5149  00082E  D003               	goto	l2845
  5150                           
  5151                           ; BSR set to: 0
  5152                           ;Key.c: 217: gs_Handle_Switch.Usart_OneDate = 1;
  5153  000830  0E01               	movlw	1
  5154  000832  6E43               	movwf	_gs_Handle_Switch+2,c
  5155  000834  D000               	goto	l2845
  5156  000836                     l2845:
  5157                           
  5158                           ; BSR set to: 0
  5159                           ;Key.c: 220: if (gs_Local_Key_User.a_key_state[6-1] == KEY_short) ga_RS485_SendBuff[g_RS
      +                          485_Byte] -- ;
  5160  000836  0100               	movlb	0	; () banked
  5161  000838  0590               	decf	(_gs_Local_Key_User+20)& (0+255),w,b	;volatile
  5162  00083A  A4D8               	btfss	status,2,c
  5163  00083C  D00A               	goto	l2849
  5164                           
  5165                           ; BSR set to: 0
  5166  00083E  503F               	movf	_g_RS485_Byte,w,c
  5167  000840  0D01               	mullw	1
  5168  000842  0EB0               	movlw	low _ga_RS485_SendBuff
  5169  000844  24F3               	addwf	prodl,w,c
  5170  000846  6ED9               	movwf	fsr2l,c
  5171  000848  0E00               	movlw	high _ga_RS485_SendBuff
  5172  00084A  20F4               	addwfc	prodh,w,c
  5173  00084C  6EDA               	movwf	fsr2h,c
  5174  00084E  06DF               	decf	indf2,f,c
  5175  000850  D000               	goto	l2849
  5176  000852                     l2849:
  5177                           
  5178                           ; BSR set to: 0
  5179                           ;Key.c: 221: if (gs_Local_Key_User.a_key_state[6-1] == KEY_hold) ga_RS485_SendBuff[g_RS4
      +                          85_Byte] -- ;
  5180  000852  0E03               	movlw	3
  5181  000854  0100               	movlb	0	; () banked
  5182  000856  1990               	xorwf	(_gs_Local_Key_User+20)& (0+255),w,b	;volatile
  5183  000858  A4D8               	btfss	status,2,c
  5184  00085A  D00A               	goto	l2853
  5185                           
  5186                           ; BSR set to: 0
  5187  00085C  503F               	movf	_g_RS485_Byte,w,c
  5188  00085E  0D01               	mullw	1
  5189  000860  0EB0               	movlw	low _ga_RS485_SendBuff
  5190  000862  24F3               	addwf	prodl,w,c
  5191  000864  6ED9               	movwf	fsr2l,c
  5192  000866  0E00               	movlw	high _ga_RS485_SendBuff
  5193  000868  20F4               	addwfc	prodh,w,c
  5194  00086A  6EDA               	movwf	fsr2h,c
  5195  00086C  06DF               	decf	indf2,f,c
  5196  00086E  D000               	goto	l2853
  5197  000870                     l2853:
  5198                           
  5199                           ; BSR set to: 0
  5200                           ;Key.c: 225: if( g_RS485_Byte > 250 ) g_RS485_Byte = 10 - 1;
  5201  000870  0EFA               	movlw	250
  5202  000872  643F               	cpfsgt	_g_RS485_Byte,c
  5203  000874  D002               	goto	l2857
  5204                           
  5205                           ; BSR set to: 0
  5206  000876  0E09               	movlw	9
  5207  000878  D005               	goto	L6
  5208  00087A                     l2857:
  5209                           
  5210                           ; BSR set to: 0
  5211                           ;Key.c: 226: else g_RS485_Byte %= 10;
  5212  00087A  0E0A               	movlw	10
  5213  00087C  6E19               	movwf	___lbmod@divisor,c
  5214  00087E  503F               	movf	_g_RS485_Byte,w,c
  5215  000880  EC14  F00B         	call	___lbmod
  5216  000884                     L6:
  5217  000884  6E3F               	movwf	_g_RS485_Byte,c
  5218  000886  D000               	goto	l2859
  5219  000888                     l2859:
  5220                           
  5221                           ;Key.c: 229: Key_ResetFSM();
  5222  000888  EC18  F00A         	call	_Key_ResetFSM	;wreg free
  5223  00088C  0012               	return		;funcret
  5224  00088E                     __end_of_Key_ManageMessage:
  5225                           	opt stack 0
  5226                           tblptru	equ	0xFF8
  5227                           tblptrh	equ	0xFF7
  5228                           tblptrl	equ	0xFF6
  5229                           tablat	equ	0xFF5
  5230                           prodh	equ	0xFF4
  5231                           prodl	equ	0xFF3
  5232                           intcon	equ	0xFF2
  5233                           postinc0	equ	0xFEE
  5234                           wreg	equ	0xFE8
  5235                           indf1	equ	0xFE7
  5236                           postdec1	equ	0xFE5
  5237                           fsr1h	equ	0xFE2
  5238                           fsr1l	equ	0xFE1
  5239                           indf2	equ	0xFDF
  5240                           postinc2	equ	0xFDE
  5241                           fsr2h	equ	0xFDA
  5242                           fsr2l	equ	0xFD9
  5243                           status	equ	0xFD8
  5244                           
  5245 ;; *************** function ___lbmod *****************
  5246 ;; Defined at:
  5247 ;;		line 4 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbmod.c"
  5248 ;; Parameters:    Size  Location     Type
  5249 ;;  dividend        1    wreg     unsigned char 
  5250 ;;  divisor         1   24[COMRAM] unsigned char 
  5251 ;; Auto vars:     Size  Location     Type
  5252 ;;  dividend        1   25[COMRAM] unsigned char 
  5253 ;;  rem             1   27[COMRAM] unsigned char 
  5254 ;;  counter         1   26[COMRAM] unsigned char 
  5255 ;; Return value:  Size  Location     Type
  5256 ;;                  1    wreg      unsigned char 
  5257 ;; Registers used:
  5258 ;;		wreg, status,2, status,0
  5259 ;; Tracked objects:
  5260 ;;		On entry : 0/0
  5261 ;;		On exit  : 0/0
  5262 ;;		Unchanged: 0/0
  5263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5264 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5265 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5267 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5268 ;;Total ram usage:        4 bytes
  5269 ;; Hardware stack levels used:    1
  5270 ;; Hardware stack levels required when called:    3
  5271 ;; This function calls:
  5272 ;;		Nothing
  5273 ;; This function is called by:
  5274 ;;		_Key_ManageMessage
  5275 ;; This function uses a non-reentrant model
  5276 ;;
  5277                           
  5278                           	psect	text33
  5279  001628                     __ptext33:
  5280                           	opt stack 0
  5281  001628                     ___lbmod:
  5282                           	opt stack 25
  5283                           
  5284                           ;incstack = 0
  5285                           ;___lbmod@dividend stored from wreg
  5286  001628  6E1A               	movwf	___lbmod@dividend,c
  5287  00162A  0E08               	movlw	8
  5288  00162C  6E1B               	movwf	___lbmod@counter,c
  5289  00162E  0E00               	movlw	0
  5290  001630  6E1C               	movwf	___lbmod@rem,c
  5291  001632  D000               	goto	l2707
  5292  001634                     l2707:
  5293  001634  90D8               	bcf	status,0,c
  5294  001636  341A               	rlcf	___lbmod@dividend,w,c
  5295  001638  341C               	rlcf	___lbmod@rem,w,c
  5296  00163A  6E1C               	movwf	___lbmod@rem,c
  5297  00163C  90D8               	bcf	status,0,c
  5298  00163E  361A               	rlcf	___lbmod@dividend,f,c
  5299  001640  5019               	movf	___lbmod@divisor,w,c
  5300  001642  5C1C               	subwf	___lbmod@rem,w,c
  5301  001644  A0D8               	btfss	status,0,c
  5302  001646  D003               	goto	l2715
  5303  001648  5019               	movf	___lbmod@divisor,w,c
  5304  00164A  5E1C               	subwf	___lbmod@rem,f,c
  5305  00164C  D000               	goto	l2715
  5306  00164E                     l2715:
  5307  00164E  2E1B               	decfsz	___lbmod@counter,f,c
  5308  001650  D7F1               	goto	l2707
  5309  001652  D000               	goto	l2717
  5310  001654                     l2717:
  5311  001654  501C               	movf	___lbmod@rem,w,c
  5312  001656  0012               	return	
  5313  001658  0012               	return		;funcret
  5314  00165A                     __end_of___lbmod:
  5315                           	opt stack 0
  5316                           tblptru	equ	0xFF8
  5317                           tblptrh	equ	0xFF7
  5318                           tblptrl	equ	0xFF6
  5319                           tablat	equ	0xFF5
  5320                           prodh	equ	0xFF4
  5321                           prodl	equ	0xFF3
  5322                           intcon	equ	0xFF2
  5323                           postinc0	equ	0xFEE
  5324                           wreg	equ	0xFE8
  5325                           indf1	equ	0xFE7
  5326                           postdec1	equ	0xFE5
  5327                           fsr1h	equ	0xFE2
  5328                           fsr1l	equ	0xFE1
  5329                           indf2	equ	0xFDF
  5330                           postinc2	equ	0xFDE
  5331                           fsr2h	equ	0xFDA
  5332                           fsr2l	equ	0xFD9
  5333                           status	equ	0xFD8
  5334                           
  5335 ;; *************** function _Key_ResetFSM *****************
  5336 ;; Defined at:
  5337 ;;		line 162 in file "_01_USER/Key.c"
  5338 ;; Parameters:    Size  Location     Type
  5339 ;;		None
  5340 ;; Auto vars:     Size  Location     Type
  5341 ;;  t               1   24[COMRAM] unsigned char 
  5342 ;; Return value:  Size  Location     Type
  5343 ;;		None               void
  5344 ;; Registers used:
  5345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5346 ;; Tracked objects:
  5347 ;;		On entry : 0/0
  5348 ;;		On exit  : 0/0
  5349 ;;		Unchanged: 0/0
  5350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5352 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5354 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5355 ;;Total ram usage:        1 bytes
  5356 ;; Hardware stack levels used:    1
  5357 ;; Hardware stack levels required when called:    3
  5358 ;; This function calls:
  5359 ;;		Nothing
  5360 ;; This function is called by:
  5361 ;;		_Key_ManageMessage
  5362 ;;		_MenuLock
  5363 ;;		_Menu_Run
  5364 ;; This function uses a non-reentrant model
  5365 ;;
  5366                           
  5367                           	psect	text34
  5368  001430                     __ptext34:
  5369                           	opt stack 0
  5370  001430                     _Key_ResetFSM:
  5371                           	opt stack 25
  5372                           
  5373                           ;Key.c: 164: unsigned char t;
  5374                           ;Key.c: 165: gs_Local_Key_User.key_BUS = 0x00;
  5375                           
  5376                           ;incstack = 0
  5377  001430  0E00               	movlw	0
  5378  001432  0100               	movlb	0	; () banked
  5379  001434  6F7C               	movwf	_gs_Local_Key_User& (0+255),b	;volatile
  5380                           
  5381                           ;Key.c: 166: gs_Local_Key_User.key_group = KEY_default;
  5382  001436  0E00               	movlw	0
  5383  001438  0100               	movlb	0	; () banked
  5384  00143A  6F7D               	movwf	(_gs_Local_Key_User+1)& (0+255),b	;volatile
  5385                           
  5386                           ;Key.c: 167: t=4;
  5387  00143C  0E04               	movlw	4
  5388  00143E  6E19               	movwf	Key_ResetFSM@t,c
  5389                           
  5390                           ;Key.c: 168: while(t--) gs_Local_Key_User.a_key_count[t] = 0,
  5391  001440  D017               	goto	l2579
  5392  001442                     l2577:
  5393                           
  5394                           ;Key.c: 169: gs_Local_Key_User.a_key_state[t] = KEY_default;
  5395  001442  5019               	movf	Key_ResetFSM@t,w,c
  5396  001444  0D02               	mullw	2
  5397  001446  0E7F               	movlw	low (_gs_Local_Key_User+3)
  5398  001448  24F3               	addwf	prodl,w,c
  5399  00144A  6ED9               	movwf	fsr2l,c
  5400  00144C  0E00               	movlw	high (_gs_Local_Key_User+3)
  5401  00144E  20F4               	addwfc	prodh,w,c
  5402  001450  6EDA               	movwf	fsr2h,c
  5403  001452  0E00               	movlw	0
  5404  001454  6EDE               	movwf	postinc2,c
  5405  001456  0E00               	movlw	0
  5406  001458  6EDD               	movwf	postdec2,c
  5407  00145A  5019               	movf	Key_ResetFSM@t,w,c
  5408  00145C  0D01               	mullw	1
  5409  00145E  0E8B               	movlw	low (_gs_Local_Key_User+15)
  5410  001460  24F3               	addwf	prodl,w,c
  5411  001462  6ED9               	movwf	fsr2l,c
  5412  001464  0E00               	movlw	high (_gs_Local_Key_User+15)
  5413  001466  20F4               	addwfc	prodh,w,c
  5414  001468  6EDA               	movwf	fsr2h,c
  5415  00146A  0E00               	movlw	0
  5416  00146C  6EDF               	movwf	indf2,c
  5417  00146E  D000               	goto	l2579
  5418  001470                     l2579:
  5419  001470  0619               	decf	Key_ResetFSM@t,f,c
  5420  001472  2819               	incf	Key_ResetFSM@t,w,c
  5421  001474  A4D8               	btfss	status,2,c
  5422  001476  D7E5               	goto	l2577
  5423  001478  0012               	return		;funcret
  5424  00147A                     __end_of_Key_ResetFSM:
  5425                           	opt stack 0
  5426                           tblptru	equ	0xFF8
  5427                           tblptrh	equ	0xFF7
  5428                           tblptrl	equ	0xFF6
  5429                           tablat	equ	0xFF5
  5430                           prodh	equ	0xFF4
  5431                           prodl	equ	0xFF3
  5432                           intcon	equ	0xFF2
  5433                           postinc0	equ	0xFEE
  5434                           wreg	equ	0xFE8
  5435                           indf1	equ	0xFE7
  5436                           postdec1	equ	0xFE5
  5437                           fsr1h	equ	0xFE2
  5438                           fsr1l	equ	0xFE1
  5439                           indf2	equ	0xFDF
  5440                           postinc2	equ	0xFDE
  5441                           postdec2	equ	0xFDD
  5442                           fsr2h	equ	0xFDA
  5443                           fsr2l	equ	0xFD9
  5444                           status	equ	0xFD8
  5445                           
  5446 ;; *************** function _Key_ReadFSM *****************
  5447 ;; Defined at:
  5448 ;;		line 113 in file "_01_USER/Key.c"
  5449 ;; Parameters:    Size  Location     Type
  5450 ;;		None
  5451 ;; Auto vars:     Size  Location     Type
  5452 ;;  key_num         1   29[COMRAM] unsigned char 
  5453 ;;  key_num_mate    1   28[COMRAM] unsigned char 
  5454 ;; Return value:  Size  Location     Type
  5455 ;;		None               void
  5456 ;; Registers used:
  5457 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5458 ;; Tracked objects:
  5459 ;;		On entry : 0/0
  5460 ;;		On exit  : 0/0
  5461 ;;		Unchanged: 0/0
  5462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5464 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5465 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5466 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5467 ;;Total ram usage:        6 bytes
  5468 ;; Hardware stack levels used:    1
  5469 ;; Hardware stack levels required when called:    3
  5470 ;; This function calls:
  5471 ;;		Nothing
  5472 ;; This function is called by:
  5473 ;;		_Key_ManageMessage
  5474 ;;		_Menu_Run
  5475 ;; This function uses a non-reentrant model
  5476 ;;
  5477                           
  5478                           	psect	text35
  5479  00056E                     __ptext35:
  5480                           	opt stack 0
  5481  00056E                     _Key_ReadFSM:
  5482                           	opt stack 25
  5483                           
  5484                           ;Key.c: 115: unsigned char key_num = 6,key_num_mate;
  5485                           
  5486                           ;incstack = 0
  5487  00056E  0E06               	movlw	6
  5488  000570  6E1E               	movwf	Key_ReadFSM@key_num,c
  5489                           
  5490                           ;Key.c: 118: while(key_num--)
  5491  000572  D072               	goto	l2547
  5492  000574                     l2529:
  5493                           
  5494                           ;Key.c: 119: {
  5495                           ;Key.c: 121: if( s_Local_Key_FSM.key_BUS == 0x00 )
  5496  000574  0100               	movlb	0	; () banked
  5497  000576  5191               	movf	_s_Local_Key_FSM& (0+255),w,b	;volatile
  5498  000578  A4D8               	btfss	status,2,c
  5499  00057A  D04A               	goto	l2541
  5500                           
  5501                           ; BSR set to: 0
  5502                           ;Key.c: 122: {
  5503                           ;Key.c: 123: if( s_Local_Key_FSM.a_key_count[key_num] > 5 )
  5504  00057C  501E               	movf	Key_ReadFSM@key_num,w,c
  5505  00057E  0D02               	mullw	2
  5506  000580  0E94               	movlw	low (_s_Local_Key_FSM+3)
  5507  000582  24F3               	addwf	prodl,w,c
  5508  000584  6ED9               	movwf	fsr2l,c
  5509  000586  0E00               	movlw	high (_s_Local_Key_FSM+3)
  5510  000588  20F4               	addwfc	prodh,w,c
  5511  00058A  6EDA               	movwf	fsr2h,c
  5512  00058C  0E01               	movlw	1
  5513  00058E  50DB               	movf	plusw2,w,c
  5514  000590  E104               	bnz	u2130
  5515  000592  0E06               	movlw	6
  5516  000594  5CDE               	subwf	postinc2,w,c
  5517  000596  A0D8               	btfss	status,0,c
  5518  000598  D024               	goto	l2539
  5519  00059A                     u2130:
  5520                           
  5521                           ; BSR set to: 0
  5522                           ;Key.c: 124: {
  5523                           ;Key.c: 125: if( s_Local_Key_FSM.a_key_count[key_num] > 60 )
  5524  00059A  501E               	movf	Key_ReadFSM@key_num,w,c
  5525  00059C  0D02               	mullw	2
  5526  00059E  0E94               	movlw	low (_s_Local_Key_FSM+3)
  5527  0005A0  24F3               	addwf	prodl,w,c
  5528  0005A2  6ED9               	movwf	fsr2l,c
  5529  0005A4  0E00               	movlw	high (_s_Local_Key_FSM+3)
  5530  0005A6  20F4               	addwfc	prodh,w,c
  5531  0005A8  6EDA               	movwf	fsr2h,c
  5532  0005AA  0E01               	movlw	1
  5533  0005AC  50DB               	movf	plusw2,w,c
  5534  0005AE  E104               	bnz	u2140
  5535  0005B0  0E3D               	movlw	61
  5536  0005B2  5CDE               	subwf	postinc2,w,c
  5537  0005B4  A0D8               	btfss	status,0,c
  5538  0005B6  D00A               	goto	l2537
  5539  0005B8                     u2140:
  5540                           
  5541                           ; BSR set to: 0
  5542                           ;Key.c: 126: gs_Local_Key_User.a_key_state[key_num] = KEY_long;
  5543  0005B8  501E               	movf	Key_ReadFSM@key_num,w,c
  5544  0005BA  0D01               	mullw	1
  5545  0005BC  0E8B               	movlw	low (_gs_Local_Key_User+15)
  5546  0005BE  24F3               	addwf	prodl,w,c
  5547  0005C0  6ED9               	movwf	fsr2l,c
  5548  0005C2  0E00               	movlw	high (_gs_Local_Key_User+15)
  5549  0005C4  20F4               	addwfc	prodh,w,c
  5550  0005C6  6EDA               	movwf	fsr2h,c
  5551  0005C8  0E05               	movlw	5
  5552  0005CA  D014               	goto	L7
  5553  0005CC                     l2537:
  5554                           
  5555                           ; BSR set to: 0
  5556                           ;Key.c: 127: else gs_Local_Key_User.a_key_state[key_num] = KEY_short;
  5557  0005CC  501E               	movf	Key_ReadFSM@key_num,w,c
  5558  0005CE  0D01               	mullw	1
  5559  0005D0  0E8B               	movlw	low (_gs_Local_Key_User+15)
  5560  0005D2  24F3               	addwf	prodl,w,c
  5561  0005D4  6ED9               	movwf	fsr2l,c
  5562  0005D6  0E00               	movlw	high (_gs_Local_Key_User+15)
  5563  0005D8  20F4               	addwfc	prodh,w,c
  5564  0005DA  6EDA               	movwf	fsr2h,c
  5565  0005DC  0E01               	movlw	1
  5566  0005DE  6EDF               	movwf	indf2,c
  5567                           
  5568                           ; BSR set to: 0
  5569                           ;Key.c: 128: }
  5570  0005E0  D00A               	goto	l134
  5571  0005E2                     l2539:
  5572                           
  5573                           ; BSR set to: 0
  5574                           ;Key.c: 129: else gs_Local_Key_User.a_key_state[key_num] = KEY_default;
  5575  0005E2  501E               	movf	Key_ReadFSM@key_num,w,c
  5576  0005E4  0D01               	mullw	1
  5577  0005E6  0E8B               	movlw	low (_gs_Local_Key_User+15)
  5578  0005E8  24F3               	addwf	prodl,w,c
  5579  0005EA  6ED9               	movwf	fsr2l,c
  5580  0005EC  0E00               	movlw	high (_gs_Local_Key_User+15)
  5581  0005EE  20F4               	addwfc	prodh,w,c
  5582  0005F0  6EDA               	movwf	fsr2h,c
  5583  0005F2  0E00               	movlw	0
  5584  0005F4                     L7:
  5585  0005F4  6EDF               	movwf	indf2,c
  5586  0005F6                     l134:
  5587                           
  5588                           ; BSR set to: 0
  5589                           ;Key.c: 130: s_Local_Key_FSM.a_key_count[key_num] = 0;
  5590  0005F6  501E               	movf	Key_ReadFSM@key_num,w,c
  5591  0005F8  0D02               	mullw	2
  5592  0005FA  0E94               	movlw	low (_s_Local_Key_FSM+3)
  5593  0005FC  24F3               	addwf	prodl,w,c
  5594  0005FE  6ED9               	movwf	fsr2l,c
  5595  000600  0E00               	movlw	high (_s_Local_Key_FSM+3)
  5596  000602  20F4               	addwfc	prodh,w,c
  5597  000604  6EDA               	movwf	fsr2h,c
  5598  000606  0E00               	movlw	0
  5599  000608  6EDE               	movwf	postinc2,c
  5600  00060A  0E00               	movlw	0
  5601  00060C  6EDD               	movwf	postdec2,c
  5602                           
  5603                           ;Key.c: 131: }
  5604  00060E  D024               	goto	l2547
  5605  000610                     l2541:
  5606                           
  5607                           ; BSR set to: 0
  5608                           ;Key.c: 133: else if( s_Local_Key_FSM.a_key_count[key_num] > 60 )
  5609  000610  501E               	movf	Key_ReadFSM@key_num,w,c
  5610  000612  0D02               	mullw	2
  5611  000614  0E94               	movlw	low (_s_Local_Key_FSM+3)
  5612  000616  24F3               	addwf	prodl,w,c
  5613  000618  6ED9               	movwf	fsr2l,c
  5614  00061A  0E00               	movlw	high (_s_Local_Key_FSM+3)
  5615  00061C  20F4               	addwfc	prodh,w,c
  5616  00061E  6EDA               	movwf	fsr2h,c
  5617  000620  0E01               	movlw	1
  5618  000622  50DB               	movf	plusw2,w,c
  5619  000624  E104               	bnz	u2150
  5620  000626  0E3D               	movlw	61
  5621  000628  5CDE               	subwf	postinc2,w,c
  5622  00062A  A0D8               	btfss	status,0,c
  5623  00062C  D00A               	goto	l2545
  5624  00062E                     u2150:
  5625                           
  5626                           ; BSR set to: 0
  5627                           ;Key.c: 134: gs_Local_Key_User.a_key_state[key_num] = KEY_hold;
  5628  00062E  501E               	movf	Key_ReadFSM@key_num,w,c
  5629  000630  0D01               	mullw	1
  5630  000632  0E8B               	movlw	low (_gs_Local_Key_User+15)
  5631  000634  24F3               	addwf	prodl,w,c
  5632  000636  6ED9               	movwf	fsr2l,c
  5633  000638  0E00               	movlw	high (_gs_Local_Key_User+15)
  5634  00063A  20F4               	addwfc	prodh,w,c
  5635  00063C  6EDA               	movwf	fsr2h,c
  5636  00063E  0E03               	movlw	3
  5637  000640  D009               	goto	L8
  5638  000642                     l2545:
  5639                           
  5640                           ; BSR set to: 0
  5641                           ;Key.c: 137: else gs_Local_Key_User.a_key_state[key_num] = KEY_busy;
  5642  000642  501E               	movf	Key_ReadFSM@key_num,w,c
  5643  000644  0D01               	mullw	1
  5644  000646  0E8B               	movlw	low (_gs_Local_Key_User+15)
  5645  000648  24F3               	addwf	prodl,w,c
  5646  00064A  6ED9               	movwf	fsr2l,c
  5647  00064C  0E00               	movlw	high (_gs_Local_Key_User+15)
  5648  00064E  20F4               	addwfc	prodh,w,c
  5649  000650  6EDA               	movwf	fsr2h,c
  5650  000652  0E04               	movlw	4
  5651  000654                     L8:
  5652  000654  6EDF               	movwf	indf2,c
  5653                           
  5654                           ; BSR set to: 0
  5655                           
  5656                           ; BSR set to: 0
  5657  000656  D000               	goto	l2547
  5658  000658                     l2547:
  5659  000658  061E               	decf	Key_ReadFSM@key_num,f,c
  5660  00065A  281E               	incf	Key_ReadFSM@key_num,w,c
  5661  00065C  A4D8               	btfss	status,2,c
  5662  00065E  D78A               	goto	l2529
  5663                           
  5664                           ;Key.c: 138: }
  5665                           ;Key.c: 141: for( key_num = 0;key_num < 6 - 1; key_num ++)
  5666  000660  0E00               	movlw	0
  5667  000662  6E1E               	movwf	Key_ReadFSM@key_num,c
  5668  000664  0E04               	movlw	4
  5669  000666  641E               	cpfsgt	Key_ReadFSM@key_num,c
  5670  000668  D002               	goto	l2555
  5671  00066A  0012               	return	
  5672  00066C  0012               	return	
  5673  00066E                     l2555:
  5674                           
  5675                           ;Key.c: 142: for( key_num_mate = key_num+1;key_num_mate < 6 ; key_num_mate ++)
  5676  00066E  281E               	incf	Key_ReadFSM@key_num,w,c
  5677  000670  6E1D               	movwf	Key_ReadFSM@key_num_mate,c
  5678  000672  0E05               	movlw	5
  5679  000674  641D               	cpfsgt	Key_ReadFSM@key_num_mate,c
  5680  000676  D001               	goto	l2559
  5681  000678  D045               	goto	l2571
  5682  00067A                     l2559:
  5683                           
  5684                           ;Key.c: 143: if( gs_Local_Key_User.a_key_state[key_num] == gs_Local_Key_User.a_key_state
      +                          [key_num_mate] )
  5685  00067A  501D               	movf	Key_ReadFSM@key_num_mate,w,c
  5686  00067C  0D01               	mullw	1
  5687  00067E  0E8B               	movlw	low (_gs_Local_Key_User+15)
  5688  000680  24F3               	addwf	prodl,w,c
  5689  000682  6ED9               	movwf	fsr2l,c
  5690  000684  0E00               	movlw	high (_gs_Local_Key_User+15)
  5691  000686  20F4               	addwfc	prodh,w,c
  5692  000688  6EDA               	movwf	fsr2h,c
  5693  00068A  501E               	movf	Key_ReadFSM@key_num,w,c
  5694  00068C  0D01               	mullw	1
  5695  00068E  0E8B               	movlw	low (_gs_Local_Key_User+15)
  5696  000690  24F3               	addwf	prodl,w,c
  5697  000692  6EE1               	movwf	fsr1l,c
  5698  000694  0E00               	movlw	high (_gs_Local_Key_User+15)
  5699  000696  20F4               	addwfc	prodh,w,c
  5700  000698  6EE2               	movwf	fsr1h,c
  5701  00069A  50DE               	movf	postinc2,w,c
  5702  00069C  18E6               	xorwf	postinc1,w,c
  5703  00069E  A4D8               	btfss	status,2,c
  5704  0006A0  D02F               	goto	l2567
  5705                           
  5706                           ;Key.c: 144: if(gs_Local_Key_User.a_key_state[key_num] != KEY_default)
  5707  0006A2  501E               	movf	Key_ReadFSM@key_num,w,c
  5708  0006A4  0D01               	mullw	1
  5709  0006A6  0E8B               	movlw	low (_gs_Local_Key_User+15)
  5710  0006A8  24F3               	addwf	prodl,w,c
  5711  0006AA  6ED9               	movwf	fsr2l,c
  5712  0006AC  0E00               	movlw	high (_gs_Local_Key_User+15)
  5713  0006AE  20F4               	addwfc	prodh,w,c
  5714  0006B0  6EDA               	movwf	fsr2h,c
  5715  0006B2  50DF               	movf	indf2,w,c
  5716  0006B4  B4D8               	btfsc	status,2,c
  5717  0006B6  D024               	goto	l2567
  5718                           
  5719                           ;Key.c: 145: {
  5720                           ;Key.c: 146: gs_Local_Key_User.key_group = (0x01 << key_num)|(0x01 << key_num_mate);
  5721  0006B8  C01D  F019         	movff	Key_ReadFSM@key_num_mate,??_Key_ReadFSM
  5722  0006BC  0E01               	movlw	1
  5723  0006BE  6E1A               	movwf	(??_Key_ReadFSM+1)& (0+255),c
  5724  0006C0  2A19               	incf	??_Key_ReadFSM,f,c
  5725  0006C2  D002               	goto	u2214
  5726  0006C4                     u2215:
  5727  0006C4  90D8               	bcf	status,0,c
  5728  0006C6  361A               	rlcf	??_Key_ReadFSM+1,f,c
  5729  0006C8                     u2214:
  5730  0006C8  2E19               	decfsz	??_Key_ReadFSM,f,c
  5731  0006CA  D7FC               	goto	u2215
  5732  0006CC  C01E  F01B         	movff	Key_ReadFSM@key_num,??_Key_ReadFSM+2
  5733  0006D0  0E01               	movlw	1
  5734  0006D2  6E1C               	movwf	(??_Key_ReadFSM+3)& (0+255),c
  5735  0006D4  2A1B               	incf	??_Key_ReadFSM+2,f,c
  5736  0006D6  D002               	goto	u2224
  5737  0006D8                     u2225:
  5738  0006D8  90D8               	bcf	status,0,c
  5739  0006DA  361C               	rlcf	??_Key_ReadFSM+3,f,c
  5740  0006DC                     u2224:
  5741  0006DC  2E1B               	decfsz	??_Key_ReadFSM+2,f,c
  5742  0006DE  D7FC               	goto	u2225
  5743  0006E0  501C               	movf	??_Key_ReadFSM+3,w,c
  5744  0006E2  101A               	iorwf	??_Key_ReadFSM+1,w,c
  5745  0006E4  0100               	movlb	0	; () banked
  5746  0006E6  6F7D               	movwf	(_gs_Local_Key_User+1)& (0+255),b	;volatile
  5747                           
  5748                           ; BSR set to: 0
  5749                           ;Key.c: 147: gs_Local_Key_User.key_group_state = gs_Local_Key_User.a_key_state[key_num];
  5750  0006E8  501E               	movf	Key_ReadFSM@key_num,w,c
  5751  0006EA  0D01               	mullw	1
  5752  0006EC  0E8B               	movlw	low (_gs_Local_Key_User+15)
  5753  0006EE  24F3               	addwf	prodl,w,c
  5754  0006F0  6ED9               	movwf	fsr2l,c
  5755  0006F2  0E00               	movlw	high (_gs_Local_Key_User+15)
  5756  0006F4  20F4               	addwfc	prodh,w,c
  5757  0006F6  6EDA               	movwf	fsr2h,c
  5758  0006F8  50DF               	movf	indf2,w,c
  5759  0006FA  0100               	movlb	0	; () banked
  5760  0006FC  6F7E               	movwf	(_gs_Local_Key_User+2)& (0+255),b	;volatile
  5761                           
  5762                           ; BSR set to: 0
  5763  0006FE  D000               	goto	l2567
  5764  000700                     l2567:
  5765  000700  2A1D               	incf	Key_ReadFSM@key_num_mate,f,c
  5766  000702  D7B7               	goto	L9
  5767  000704                     l2571:
  5768  000704  2A1E               	incf	Key_ReadFSM@key_num,f,c
  5769  000706  0E04               	movlw	4
  5770  000708  641E               	cpfsgt	Key_ReadFSM@key_num,c
  5771  00070A  D7B1               	goto	l2555
  5772  00070C  0012               	return	
  5773  00070E  0012               	return		;funcret
  5774  000710                     __end_of_Key_ReadFSM:
  5775                           	opt stack 0
  5776                           tblptru	equ	0xFF8
  5777                           tblptrh	equ	0xFF7
  5778                           tblptrl	equ	0xFF6
  5779                           tablat	equ	0xFF5
  5780                           prodh	equ	0xFF4
  5781                           prodl	equ	0xFF3
  5782                           intcon	equ	0xFF2
  5783                           postinc0	equ	0xFEE
  5784                           wreg	equ	0xFE8
  5785                           indf1	equ	0xFE7
  5786                           postinc1	equ	0xFE6
  5787                           postdec1	equ	0xFE5
  5788                           fsr1h	equ	0xFE2
  5789                           fsr1l	equ	0xFE1
  5790                           indf2	equ	0xFDF
  5791                           postinc2	equ	0xFDE
  5792                           postdec2	equ	0xFDD
  5793                           plusw2	equ	0xFDB
  5794                           fsr2h	equ	0xFDA
  5795                           fsr2l	equ	0xFD9
  5796                           status	equ	0xFD8
  5797                           
  5798 ;; *************** function _Key_Init *****************
  5799 ;; Defined at:
  5800 ;;		line 42 in file "_01_USER/Key.c"
  5801 ;; Parameters:    Size  Location     Type
  5802 ;;		None
  5803 ;; Auto vars:     Size  Location     Type
  5804 ;;		None
  5805 ;; Return value:  Size  Location     Type
  5806 ;;		None               void
  5807 ;; Registers used:
  5808 ;;		None
  5809 ;; Tracked objects:
  5810 ;;		On entry : 0/0
  5811 ;;		On exit  : 0/0
  5812 ;;		Unchanged: 0/0
  5813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5818 ;;Total ram usage:        0 bytes
  5819 ;; Hardware stack levels used:    1
  5820 ;; Hardware stack levels required when called:    3
  5821 ;; This function calls:
  5822 ;;		Nothing
  5823 ;; This function is called by:
  5824 ;;		_main
  5825 ;; This function uses a non-reentrant model
  5826 ;;
  5827                           
  5828                           	psect	text36
  5829  0017BC                     __ptext36:
  5830                           	opt stack 0
  5831  0017BC                     _Key_Init:
  5832                           	opt stack 27
  5833                           
  5834                           ;Key.c: 45: TRISC1 = 1;
  5835                           
  5836                           ;incstack = 0
  5837  0017BC  8294               	bsf	3988,1,c	;volatile
  5838                           
  5839                           ;Key.c: 46: TRISF1 = 1;
  5840  0017BE  8297               	bsf	3991,1,c	;volatile
  5841                           
  5842                           ;Key.c: 47: TRISF2 = 1;
  5843  0017C0  8497               	bsf	3991,2,c	;volatile
  5844                           
  5845                           ;Key.c: 48: TRISA4 = 1;
  5846  0017C2  8892               	bsf	3986,4,c	;volatile
  5847                           
  5848                           ;Key.c: 49: TRISA5 = 1;
  5849  0017C4  8A92               	bsf	3986,5,c	;volatile
  5850                           
  5851                           ;Key.c: 50: TRISF3 = 1;
  5852  0017C6  8697               	bsf	3991,3,c	;volatile
  5853                           
  5854                           ;Key.c: 53: ANSEL4 = 0;
  5855  0017C8  010F               	movlb	15	; () banked
  5856  0017CA  9925               	bcf	37,4,b	;volatile
  5857                           
  5858                           ;Key.c: 54: ANSEL6 = 0;
  5859  0017CC  010F               	movlb	15	; () banked
  5860  0017CE  9D25               	bcf	37,6,b	;volatile
  5861                           
  5862                           ;Key.c: 55: ANSEL7 = 0;
  5863  0017D0  010F               	movlb	15	; () banked
  5864  0017D2  9F25               	bcf	37,7,b	;volatile
  5865                           
  5866                           ;Key.c: 56: ANSEL8 = 0;
  5867  0017D4  010F               	movlb	15	; () banked
  5868  0017D6  9124               	bcf	36,0,b	;volatile
  5869                           
  5870                           ; BSR set to: 15
  5871  0017D8  0012               	return		;funcret
  5872  0017DA                     __end_of_Key_Init:
  5873                           	opt stack 0
  5874                           tblptru	equ	0xFF8
  5875                           tblptrh	equ	0xFF7
  5876                           tblptrl	equ	0xFF6
  5877                           tablat	equ	0xFF5
  5878                           prodh	equ	0xFF4
  5879                           prodl	equ	0xFF3
  5880                           intcon	equ	0xFF2
  5881                           postinc0	equ	0xFEE
  5882                           wreg	equ	0xFE8
  5883                           indf1	equ	0xFE7
  5884                           postinc1	equ	0xFE6
  5885                           postdec1	equ	0xFE5
  5886                           fsr1h	equ	0xFE2
  5887                           fsr1l	equ	0xFE1
  5888                           indf2	equ	0xFDF
  5889                           postinc2	equ	0xFDE
  5890                           postdec2	equ	0xFDD
  5891                           plusw2	equ	0xFDB
  5892                           fsr2h	equ	0xFDA
  5893                           fsr2l	equ	0xFD9
  5894                           status	equ	0xFD8
  5895                           
  5896 ;; *************** function _Init_TM1640 *****************
  5897 ;; Defined at:
  5898 ;;		line 21 in file "_01_USER/TM1640.c"
  5899 ;; Parameters:    Size  Location     Type
  5900 ;;		None
  5901 ;; Auto vars:     Size  Location     Type
  5902 ;;		None
  5903 ;; Return value:  Size  Location     Type
  5904 ;;		None               void
  5905 ;; Registers used:
  5906 ;;		wreg, status,2, status,0, cstack
  5907 ;; Tracked objects:
  5908 ;;		On entry : 0/0
  5909 ;;		On exit  : 0/0
  5910 ;;		Unchanged: 0/0
  5911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5916 ;;Total ram usage:        0 bytes
  5917 ;; Hardware stack levels used:    1
  5918 ;; Hardware stack levels required when called:    5
  5919 ;; This function calls:
  5920 ;;		_TM1640_Start
  5921 ;;		_TM1640_Stop
  5922 ;;		_TM1640_Writer_Byte
  5923 ;; This function is called by:
  5924 ;;		_main
  5925 ;; This function uses a non-reentrant model
  5926 ;;
  5927                           
  5928                           	psect	text37
  5929  001708                     __ptext37:
  5930                           	opt stack 0
  5931  001708                     _Init_TM1640:
  5932                           	opt stack 25
  5933                           
  5934                           ;TM1640.c: 24: TRISD5 = 0;
  5935                           
  5936                           ; BSR set to: 15
  5937                           ;incstack = 0
  5938  001708  9A95               	bcf	3989,5,c	;volatile
  5939                           
  5940                           ;TM1640.c: 25: TRISD6 = 0;
  5941  00170A  9C95               	bcf	3989,6,c	;volatile
  5942                           
  5943                           ;TM1640.c: 27: TM1640_Stop();
  5944  00170C  ECA9  F00B         	call	_TM1640_Stop	;wreg free
  5945                           
  5946                           ;TM1640.c: 29: TM1640_Start();
  5947  001710  ECBB  F00B         	call	_TM1640_Start	;wreg free
  5948                           
  5949                           ;TM1640.c: 30: TM1640_Writer_Byte(0x44);
  5950  001714  0E44               	movlw	68
  5951  001716  ECA3  F00A         	call	_TM1640_Writer_Byte
  5952                           
  5953                           ;TM1640.c: 31: TM1640_Stop();
  5954  00171A  ECA9  F00B         	call	_TM1640_Stop	;wreg free
  5955                           
  5956                           ;TM1640.c: 33: TM1640_Start();
  5957  00171E  ECBB  F00B         	call	_TM1640_Start	;wreg free
  5958                           
  5959                           ;TM1640.c: 34: TM1640_Writer_Byte(0x8F);
  5960  001722  0E8F               	movlw	143
  5961  001724  ECA3  F00A         	call	_TM1640_Writer_Byte
  5962                           
  5963                           ;TM1640.c: 35: TM1640_Stop();
  5964  001728  ECA9  F00B         	call	_TM1640_Stop	;wreg free
  5965  00172C  0012               	return		;funcret
  5966  00172E                     __end_of_Init_TM1640:
  5967                           	opt stack 0
  5968                           tblptru	equ	0xFF8
  5969                           tblptrh	equ	0xFF7
  5970                           tblptrl	equ	0xFF6
  5971                           tablat	equ	0xFF5
  5972                           prodh	equ	0xFF4
  5973                           prodl	equ	0xFF3
  5974                           intcon	equ	0xFF2
  5975                           postinc0	equ	0xFEE
  5976                           wreg	equ	0xFE8
  5977                           indf1	equ	0xFE7
  5978                           postinc1	equ	0xFE6
  5979                           postdec1	equ	0xFE5
  5980                           fsr1h	equ	0xFE2
  5981                           fsr1l	equ	0xFE1
  5982                           indf2	equ	0xFDF
  5983                           postinc2	equ	0xFDE
  5984                           postdec2	equ	0xFDD
  5985                           plusw2	equ	0xFDB
  5986                           fsr2h	equ	0xFDA
  5987                           fsr2l	equ	0xFD9
  5988                           status	equ	0xFD8
  5989                           
  5990 ;; *************** function _TM1640_Writer_Byte *****************
  5991 ;; Defined at:
  5992 ;;		line 116 in file "_01_USER/TM1640.c"
  5993 ;; Parameters:    Size  Location     Type
  5994 ;;  Date            1    wreg     unsigned char 
  5995 ;; Auto vars:     Size  Location     Type
  5996 ;;  Date            1   26[COMRAM] unsigned char 
  5997 ;;  mask            1   27[COMRAM] unsigned char 
  5998 ;; Return value:  Size  Location     Type
  5999 ;;		None               void
  6000 ;; Registers used:
  6001 ;;		wreg, status,2, status,0, cstack
  6002 ;; Tracked objects:
  6003 ;;		On entry : 0/0
  6004 ;;		On exit  : 0/0
  6005 ;;		Unchanged: 0/0
  6006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6008 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6010 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6011 ;;Total ram usage:        2 bytes
  6012 ;; Hardware stack levels used:    1
  6013 ;; Hardware stack levels required when called:    4
  6014 ;; This function calls:
  6015 ;;		_TM1640_Delay
  6016 ;; This function is called by:
  6017 ;;		_Init_TM1640
  6018 ;;		_TM1640_Writer_Dates
  6019 ;;		_Open_Display
  6020 ;;		_Disable_Display
  6021 ;; This function uses a non-reentrant model
  6022 ;;
  6023                           
  6024                           	psect	text38
  6025  001546                     __ptext38:
  6026                           	opt stack 0
  6027  001546                     _TM1640_Writer_Byte:
  6028                           	opt stack 24
  6029                           
  6030                           ;incstack = 0
  6031                           ;TM1640_Writer_Byte@Date stored from wreg
  6032  001546  6E1B               	movwf	TM1640_Writer_Byte@Date,c
  6033                           
  6034                           ;TM1640.c: 118: unsigned char mask;
  6035                           ;TM1640.c: 120: for(mask=0x01; mask; mask<<=1)
  6036  001548  0E01               	movlw	1
  6037  00154A  6E1C               	movwf	TM1640_Writer_Byte@mask,c
  6038  00154C  D017               	goto	l2445
  6039  00154E                     l369:
  6040                           
  6041                           ;TM1640.c: 121: {
  6042                           ;TM1640.c: 122: RD6 = 0;
  6043  00154E  9C83               	bcf	3971,6,c	;volatile
  6044                           
  6045                           ;TM1640.c: 123: TM1640_Delay(1);
  6046  001550  0E01               	movlw	1
  6047  001552  EC08  F00C         	call	_TM1640_Delay
  6048                           
  6049                           ;TM1640.c: 124: if(mask & Date)
  6050  001556  501C               	movf	TM1640_Writer_Byte@mask,w,c
  6051  001558  141B               	andwf	TM1640_Writer_Byte@Date,w,c
  6052  00155A  0900               	iorlw	0
  6053  00155C  B4D8               	btfsc	status,2,c
  6054  00155E  D002               	goto	l370
  6055                           
  6056                           ;TM1640.c: 125: RD5 = 1;
  6057  001560  8A83               	bsf	3971,5,c	;volatile
  6058  001562  D002               	goto	l2439
  6059  001564                     l370:
  6060                           
  6061                           ;TM1640.c: 126: else
  6062                           ;TM1640.c: 127: RD5 = 0;
  6063  001564  9A83               	bcf	3971,5,c	;volatile
  6064  001566  D000               	goto	l2439
  6065  001568                     l2439:
  6066                           
  6067                           ;TM1640.c: 128: TM1640_Delay(1);
  6068  001568  0E01               	movlw	1
  6069  00156A  EC08  F00C         	call	_TM1640_Delay
  6070                           
  6071                           ;TM1640.c: 129: RD6 = 1;
  6072  00156E  8C83               	bsf	3971,6,c	;volatile
  6073                           
  6074                           ;TM1640.c: 130: TM1640_Delay(1);
  6075  001570  0E01               	movlw	1
  6076  001572  EC08  F00C         	call	_TM1640_Delay
  6077  001576  90D8               	bcf	status,0,c
  6078  001578  361C               	rlcf	TM1640_Writer_Byte@mask,f,c
  6079  00157A  D000               	goto	l2445
  6080  00157C                     l2445:
  6081  00157C  501C               	movf	TM1640_Writer_Byte@mask,w,c
  6082  00157E  A4D8               	btfss	status,2,c
  6083  001580  D7E6               	goto	l369
  6084  001582  0012               	return		;funcret
  6085  001584                     __end_of_TM1640_Writer_Byte:
  6086                           	opt stack 0
  6087                           tblptru	equ	0xFF8
  6088                           tblptrh	equ	0xFF7
  6089                           tblptrl	equ	0xFF6
  6090                           tablat	equ	0xFF5
  6091                           prodh	equ	0xFF4
  6092                           prodl	equ	0xFF3
  6093                           intcon	equ	0xFF2
  6094                           postinc0	equ	0xFEE
  6095                           wreg	equ	0xFE8
  6096                           indf1	equ	0xFE7
  6097                           postinc1	equ	0xFE6
  6098                           postdec1	equ	0xFE5
  6099                           fsr1h	equ	0xFE2
  6100                           fsr1l	equ	0xFE1
  6101                           indf2	equ	0xFDF
  6102                           postinc2	equ	0xFDE
  6103                           postdec2	equ	0xFDD
  6104                           plusw2	equ	0xFDB
  6105                           fsr2h	equ	0xFDA
  6106                           fsr2l	equ	0xFD9
  6107                           status	equ	0xFD8
  6108                           
  6109 ;; *************** function _TM1640_Stop *****************
  6110 ;; Defined at:
  6111 ;;		line 63 in file "_01_USER/TM1640.c"
  6112 ;; Parameters:    Size  Location     Type
  6113 ;;		None
  6114 ;; Auto vars:     Size  Location     Type
  6115 ;;		None
  6116 ;; Return value:  Size  Location     Type
  6117 ;;		None               void
  6118 ;; Registers used:
  6119 ;;		wreg, status,2, status,0, cstack
  6120 ;; Tracked objects:
  6121 ;;		On entry : 0/0
  6122 ;;		On exit  : 0/0
  6123 ;;		Unchanged: 0/0
  6124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6129 ;;Total ram usage:        0 bytes
  6130 ;; Hardware stack levels used:    1
  6131 ;; Hardware stack levels required when called:    4
  6132 ;; This function calls:
  6133 ;;		_TM1640_Delay
  6134 ;; This function is called by:
  6135 ;;		_Init_TM1640
  6136 ;;		_TM1640_Writer_Dates
  6137 ;;		_Open_Display
  6138 ;;		_Disable_Display
  6139 ;; This function uses a non-reentrant model
  6140 ;;
  6141                           
  6142                           	psect	text39
  6143  001752                     __ptext39:
  6144                           	opt stack 0
  6145  001752                     _TM1640_Stop:
  6146                           	opt stack 24
  6147                           
  6148                           ;TM1640.c: 65: RD6 = 0;
  6149                           
  6150                           ;incstack = 0
  6151  001752  9C83               	bcf	3971,6,c	;volatile
  6152                           
  6153                           ;TM1640.c: 66: TM1640_Delay(1);
  6154  001754  0E01               	movlw	1
  6155  001756  EC08  F00C         	call	_TM1640_Delay
  6156                           
  6157                           ;TM1640.c: 67: RD5 = 0;
  6158  00175A  9A83               	bcf	3971,5,c	;volatile
  6159                           
  6160                           ;TM1640.c: 68: TM1640_Delay(1);
  6161  00175C  0E01               	movlw	1
  6162  00175E  EC08  F00C         	call	_TM1640_Delay
  6163                           
  6164                           ;TM1640.c: 69: RD6 = 1;
  6165  001762  8C83               	bsf	3971,6,c	;volatile
  6166                           
  6167                           ;TM1640.c: 70: TM1640_Delay(1);
  6168  001764  0E01               	movlw	1
  6169  001766  EC08  F00C         	call	_TM1640_Delay
  6170                           
  6171                           ;TM1640.c: 71: RD5 = 1;
  6172  00176A  8A83               	bsf	3971,5,c	;volatile
  6173                           
  6174                           ;TM1640.c: 72: TM1640_Delay(1);
  6175  00176C  0E01               	movlw	1
  6176  00176E  EC08  F00C         	call	_TM1640_Delay
  6177                           
  6178                           ;TM1640.c: 73: RD6 = 0;
  6179  001772  9C83               	bcf	3971,6,c	;volatile
  6180  001774  0012               	return		;funcret
  6181  001776                     __end_of_TM1640_Stop:
  6182                           	opt stack 0
  6183                           tblptru	equ	0xFF8
  6184                           tblptrh	equ	0xFF7
  6185                           tblptrl	equ	0xFF6
  6186                           tablat	equ	0xFF5
  6187                           prodh	equ	0xFF4
  6188                           prodl	equ	0xFF3
  6189                           intcon	equ	0xFF2
  6190                           postinc0	equ	0xFEE
  6191                           wreg	equ	0xFE8
  6192                           indf1	equ	0xFE7
  6193                           postinc1	equ	0xFE6
  6194                           postdec1	equ	0xFE5
  6195                           fsr1h	equ	0xFE2
  6196                           fsr1l	equ	0xFE1
  6197                           indf2	equ	0xFDF
  6198                           postinc2	equ	0xFDE
  6199                           postdec2	equ	0xFDD
  6200                           plusw2	equ	0xFDB
  6201                           fsr2h	equ	0xFDA
  6202                           fsr2l	equ	0xFD9
  6203                           status	equ	0xFD8
  6204                           
  6205 ;; *************** function _TM1640_Start *****************
  6206 ;; Defined at:
  6207 ;;		line 44 in file "_01_USER/TM1640.c"
  6208 ;; Parameters:    Size  Location     Type
  6209 ;;		None
  6210 ;; Auto vars:     Size  Location     Type
  6211 ;;		None
  6212 ;; Return value:  Size  Location     Type
  6213 ;;		None               void
  6214 ;; Registers used:
  6215 ;;		wreg, status,2, status,0, cstack
  6216 ;; Tracked objects:
  6217 ;;		On entry : 0/0
  6218 ;;		On exit  : 0/0
  6219 ;;		Unchanged: 0/0
  6220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6225 ;;Total ram usage:        0 bytes
  6226 ;; Hardware stack levels used:    1
  6227 ;; Hardware stack levels required when called:    4
  6228 ;; This function calls:
  6229 ;;		_TM1640_Delay
  6230 ;; This function is called by:
  6231 ;;		_Init_TM1640
  6232 ;;		_TM1640_Writer_Dates
  6233 ;;		_Open_Display
  6234 ;;		_Disable_Display
  6235 ;; This function uses a non-reentrant model
  6236 ;;
  6237                           
  6238                           	psect	text40
  6239  001776                     __ptext40:
  6240                           	opt stack 0
  6241  001776                     _TM1640_Start:
  6242                           	opt stack 24
  6243                           
  6244                           ;TM1640.c: 46: RD6 = 0;
  6245                           
  6246                           ;incstack = 0
  6247  001776  9C83               	bcf	3971,6,c	;volatile
  6248                           
  6249                           ;TM1640.c: 47: TM1640_Delay(1);
  6250  001778  0E01               	movlw	1
  6251  00177A  EC08  F00C         	call	_TM1640_Delay
  6252                           
  6253                           ;TM1640.c: 48: RD5 = 1;
  6254  00177E  8A83               	bsf	3971,5,c	;volatile
  6255                           
  6256                           ;TM1640.c: 49: TM1640_Delay(1);
  6257  001780  0E01               	movlw	1
  6258  001782  EC08  F00C         	call	_TM1640_Delay
  6259                           
  6260                           ;TM1640.c: 50: RD6 = 1;
  6261  001786  8C83               	bsf	3971,6,c	;volatile
  6262                           
  6263                           ;TM1640.c: 51: TM1640_Delay(1);
  6264  001788  0E01               	movlw	1
  6265  00178A  EC08  F00C         	call	_TM1640_Delay
  6266                           
  6267                           ;TM1640.c: 52: RD5 = 0;
  6268  00178E  9A83               	bcf	3971,5,c	;volatile
  6269                           
  6270                           ;TM1640.c: 53: TM1640_Delay(1);
  6271  001790  0E01               	movlw	1
  6272  001792  EC08  F00C         	call	_TM1640_Delay
  6273                           
  6274                           ;TM1640.c: 54: RD6 = 0;
  6275  001796  9C83               	bcf	3971,6,c	;volatile
  6276  001798  0012               	return		;funcret
  6277  00179A                     __end_of_TM1640_Start:
  6278                           	opt stack 0
  6279                           tblptru	equ	0xFF8
  6280                           tblptrh	equ	0xFF7
  6281                           tblptrl	equ	0xFF6
  6282                           tablat	equ	0xFF5
  6283                           prodh	equ	0xFF4
  6284                           prodl	equ	0xFF3
  6285                           intcon	equ	0xFF2
  6286                           postinc0	equ	0xFEE
  6287                           wreg	equ	0xFE8
  6288                           indf1	equ	0xFE7
  6289                           postinc1	equ	0xFE6
  6290                           postdec1	equ	0xFE5
  6291                           fsr1h	equ	0xFE2
  6292                           fsr1l	equ	0xFE1
  6293                           indf2	equ	0xFDF
  6294                           postinc2	equ	0xFDE
  6295                           postdec2	equ	0xFDD
  6296                           plusw2	equ	0xFDB
  6297                           fsr2h	equ	0xFDA
  6298                           fsr2l	equ	0xFD9
  6299                           status	equ	0xFD8
  6300                           
  6301 ;; *************** function _TM1640_Delay *****************
  6302 ;; Defined at:
  6303 ;;		line 166 in file "_01_USER/TM1640.c"
  6304 ;; Parameters:    Size  Location     Type
  6305 ;;  Time            1    wreg     unsigned char 
  6306 ;; Auto vars:     Size  Location     Type
  6307 ;;  Time            1   24[COMRAM] unsigned char 
  6308 ;;  i               1   25[COMRAM] unsigned char 
  6309 ;; Return value:  Size  Location     Type
  6310 ;;		None               void
  6311 ;; Registers used:
  6312 ;;		wreg, status,2, status,0
  6313 ;; Tracked objects:
  6314 ;;		On entry : 0/0
  6315 ;;		On exit  : 0/0
  6316 ;;		Unchanged: 0/0
  6317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6319 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6321 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6322 ;;Total ram usage:        2 bytes
  6323 ;; Hardware stack levels used:    1
  6324 ;; Hardware stack levels required when called:    3
  6325 ;; This function calls:
  6326 ;;		Nothing
  6327 ;; This function is called by:
  6328 ;;		_TM1640_Start
  6329 ;;		_TM1640_Stop
  6330 ;;		_TM1640_Writer_Byte
  6331 ;; This function uses a non-reentrant model
  6332 ;;
  6333                           
  6334                           	psect	text41
  6335  001810                     __ptext41:
  6336                           	opt stack 0
  6337  001810                     _TM1640_Delay:
  6338                           	opt stack 24
  6339                           
  6340                           ;incstack = 0
  6341                           ;TM1640_Delay@Time stored from wreg
  6342  001810  6E19               	movwf	TM1640_Delay@Time,c
  6343  001812                     
  6344                           ;TM1640.c: 171: {
  6345                           ;TM1640.c: 172: for(i=0; i<10; ++i);
  6346  001812  0E00               	movlw	0
  6347  001814  6E1A               	movwf	TM1640_Delay@i,c
  6348  001816  D002               	goto	l2381
  6349  001818  D004               	goto	l384
  6350  00181A                     l2379:
  6351  00181A  2A1A               	incf	TM1640_Delay@i,f,c
  6352  00181C                     l2381:
  6353  00181C  0E09               	movlw	9
  6354  00181E  641A               	cpfsgt	TM1640_Delay@i,c
  6355  001820  D7FC               	goto	l2379
  6356  001822                     l384:
  6357                           
  6358                           ;TM1640.c: 173: }while(--Time);
  6359  001822  2E19               	decfsz	TM1640_Delay@Time,f,c
  6360  001824  D7F6               	goto	l2373
  6361  001826  0012               	return	
  6362  001828  0012               	return		;funcret
  6363  00182A                     __end_of_TM1640_Delay:
  6364                           	opt stack 0
  6365                           tblptru	equ	0xFF8
  6366                           tblptrh	equ	0xFF7
  6367                           tblptrl	equ	0xFF6
  6368                           tablat	equ	0xFF5
  6369                           prodh	equ	0xFF4
  6370                           prodl	equ	0xFF3
  6371                           intcon	equ	0xFF2
  6372                           postinc0	equ	0xFEE
  6373                           wreg	equ	0xFE8
  6374                           indf1	equ	0xFE7
  6375                           postinc1	equ	0xFE6
  6376                           postdec1	equ	0xFE5
  6377                           fsr1h	equ	0xFE2
  6378                           fsr1l	equ	0xFE1
  6379                           indf2	equ	0xFDF
  6380                           postinc2	equ	0xFDE
  6381                           postdec2	equ	0xFDD
  6382                           plusw2	equ	0xFDB
  6383                           fsr2h	equ	0xFDA
  6384                           fsr2l	equ	0xFD9
  6385                           status	equ	0xFD8
  6386                           
  6387 ;; *************** function _GPIO_Config *****************
  6388 ;; Defined at:
  6389 ;;		line 39 in file "_01_USER/GPIO.c"
  6390 ;; Parameters:    Size  Location     Type
  6391 ;;		None
  6392 ;; Auto vars:     Size  Location     Type
  6393 ;;		None
  6394 ;; Return value:  Size  Location     Type
  6395 ;;		None               void
  6396 ;; Registers used:
  6397 ;;		None
  6398 ;; Tracked objects:
  6399 ;;		On entry : 0/0
  6400 ;;		On exit  : 0/0
  6401 ;;		Unchanged: 0/0
  6402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6407 ;;Total ram usage:        0 bytes
  6408 ;; Hardware stack levels used:    1
  6409 ;; Hardware stack levels required when called:    3
  6410 ;; This function calls:
  6411 ;;		Nothing
  6412 ;; This function is called by:
  6413 ;;		_main
  6414 ;; This function uses a non-reentrant model
  6415 ;;
  6416                           
  6417                           	psect	text42
  6418  0018A0                     __ptext42:
  6419                           	opt stack 0
  6420  0018A0                     _GPIO_Config:
  6421                           	opt stack 27
  6422                           
  6423                           ;incstack = 0
  6424  0018A0  0012               	return		;funcret
  6425  0018A2                     __end_of_GPIO_Config:
  6426                           	opt stack 0
  6427                           tblptru	equ	0xFF8
  6428                           tblptrh	equ	0xFF7
  6429                           tblptrl	equ	0xFF6
  6430                           tablat	equ	0xFF5
  6431                           prodh	equ	0xFF4
  6432                           prodl	equ	0xFF3
  6433                           intcon	equ	0xFF2
  6434                           postinc0	equ	0xFEE
  6435                           wreg	equ	0xFE8
  6436                           indf1	equ	0xFE7
  6437                           postinc1	equ	0xFE6
  6438                           postdec1	equ	0xFE5
  6439                           fsr1h	equ	0xFE2
  6440                           fsr1l	equ	0xFE1
  6441                           indf2	equ	0xFDF
  6442                           postinc2	equ	0xFDE
  6443                           postdec2	equ	0xFDD
  6444                           plusw2	equ	0xFDB
  6445                           fsr2h	equ	0xFDA
  6446                           fsr2l	equ	0xFD9
  6447                           status	equ	0xFD8
  6448                           
  6449 ;; *************** function _ADC6_Init *****************
  6450 ;; Defined at:
  6451 ;;		line 37 in file "_01_USER/My_ADC.c"
  6452 ;; Parameters:    Size  Location     Type
  6453 ;;		None
  6454 ;; Auto vars:     Size  Location     Type
  6455 ;;		None
  6456 ;; Return value:  Size  Location     Type
  6457 ;;		None               void
  6458 ;; Registers used:
  6459 ;;		wreg, status,2, status,0, cstack
  6460 ;; Tracked objects:
  6461 ;;		On entry : 0/0
  6462 ;;		On exit  : 0/0
  6463 ;;		Unchanged: 0/0
  6464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6469 ;;Total ram usage:        0 bytes
  6470 ;; Hardware stack levels used:    1
  6471 ;; Hardware stack levels required when called:    4
  6472 ;; This function calls:
  6473 ;;		_OpenADC
  6474 ;; This function is called by:
  6475 ;;		_main
  6476 ;; This function uses a non-reentrant model
  6477 ;;
  6478                           
  6479                           	psect	text43
  6480  001842                     __ptext43:
  6481                           	opt stack 0
  6482  001842                     _ADC6_Init:
  6483                           	opt stack 26
  6484                           
  6485                           ;My_ADC.c: 40: OpenADC(0b11111111 &
  6486                           ;My_ADC.c: 41: 0b11110011 &
  6487                           ;My_ADC.c: 42: 0b10001111
  6488                           ;My_ADC.c: 43: ,
  6489                           ;My_ADC.c: 44: 0b10011011
  6490                           ;My_ADC.c: 45: ,
  6491                           ;My_ADC.c: 46: 0b00111111 &
  6492                           ;My_ADC.c: 47: 0b11111111 &
  6493                           ;My_ADC.c: 48: 0b11110111 &
  6494                           ;My_ADC.c: 49: 0b11111000
  6495                           ;My_ADC.c: 50: );
  6496                           
  6497                           ;incstack = 0
  6498  001842  0E9B               	movlw	155
  6499  001844  6E19               	movwf	OpenADC@config2,c
  6500  001846  0E30               	movlw	48
  6501  001848  6E1A               	movwf	OpenADC@config3,c
  6502  00184A  0E83               	movlw	131
  6503  00184C  ECA6  F009         	call	_OpenADC
  6504                           
  6505                           ;My_ADC.c: 52: (PIE1bits.ADIE=0);
  6506  001850  9C9D               	bcf	3997,6,c	;volatile
  6507  001852  0012               	return		;funcret
  6508  001854                     __end_of_ADC6_Init:
  6509                           	opt stack 0
  6510                           tblptru	equ	0xFF8
  6511                           tblptrh	equ	0xFF7
  6512                           tblptrl	equ	0xFF6
  6513                           tablat	equ	0xFF5
  6514                           prodh	equ	0xFF4
  6515                           prodl	equ	0xFF3
  6516                           intcon	equ	0xFF2
  6517                           postinc0	equ	0xFEE
  6518                           wreg	equ	0xFE8
  6519                           indf1	equ	0xFE7
  6520                           postinc1	equ	0xFE6
  6521                           postdec1	equ	0xFE5
  6522                           fsr1h	equ	0xFE2
  6523                           fsr1l	equ	0xFE1
  6524                           indf2	equ	0xFDF
  6525                           postinc2	equ	0xFDE
  6526                           postdec2	equ	0xFDD
  6527                           plusw2	equ	0xFDB
  6528                           fsr2h	equ	0xFDA
  6529                           fsr2l	equ	0xFD9
  6530                           status	equ	0xFD8
  6531                           
  6532 ;; *************** function _OpenADC *****************
  6533 ;; Defined at:
  6534 ;;		line 305 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  6535 ;; Parameters:    Size  Location     Type
  6536 ;;  config          1    wreg     unsigned char 
  6537 ;;  config2         1   24[COMRAM] unsigned char 
  6538 ;;  config3         1   25[COMRAM] unsigned char 
  6539 ;; Auto vars:     Size  Location     Type
  6540 ;;  config          1   28[COMRAM] unsigned char 
  6541 ;; Return value:  Size  Location     Type
  6542 ;;		None               void
  6543 ;; Registers used:
  6544 ;;		wreg, status,2, status,0
  6545 ;; Tracked objects:
  6546 ;;		On entry : 0/0
  6547 ;;		On exit  : 0/0
  6548 ;;		Unchanged: 0/0
  6549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6550 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6551 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6552 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6553 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6554 ;;Total ram usage:        5 bytes
  6555 ;; Hardware stack levels used:    1
  6556 ;; Hardware stack levels required when called:    3
  6557 ;; This function calls:
  6558 ;;		Nothing
  6559 ;; This function is called by:
  6560 ;;		_ADC6_Init
  6561 ;; This function uses a non-reentrant model
  6562 ;;
  6563                           
  6564                           	psect	text44
  6565  00134C                     __ptext44:
  6566                           	opt stack 0
  6567  00134C                     _OpenADC:
  6568                           	opt stack 26
  6569                           
  6570                           ;incstack = 0
  6571                           ;OpenADC@config stored from wreg
  6572  00134C  6E1D               	movwf	OpenADC@config,c
  6573  00134E  0E00               	movlw	0
  6574  001350  6EC2               	movwf	4034,c	;volatile
  6575  001352  0E00               	movlw	0
  6576  001354  6EC1               	movwf	4033,c	;volatile
  6577  001356  0E00               	movlw	0
  6578  001358  6EC0               	movwf	4032,c	;volatile
  6579  00135A  5019               	movf	OpenADC@config2,w,c
  6580  00135C  0B7C               	andlw	124
  6581  00135E  6EC2               	movwf	4034,c	;volatile
  6582  001360  C01A  FFC1         	movff	OpenADC@config3,4033	;volatile
  6583  001364  C01D  F01B         	movff	OpenADC@config,??_OpenADC
  6584  001368  90D8               	bcf	status,0,c
  6585  00136A  361B               	rlcf	??_OpenADC,f,c
  6586  00136C  90D8               	bcf	status,0,c
  6587  00136E  361B               	rlcf	??_OpenADC,f,c
  6588  001370  0E38               	movlw	56
  6589  001372  161B               	andwf	??_OpenADC,f,c
  6590  001374  C01D  F01C         	movff	OpenADC@config,??_OpenADC+1
  6591  001378  3A1C               	swapf	??_OpenADC+1,f,c
  6592  00137A  0E0F               	movlw	15
  6593  00137C  161C               	andwf	??_OpenADC+1,f,c
  6594  00137E  0E07               	movlw	7
  6595  001380  161C               	andwf	??_OpenADC+1,f,c
  6596  001382  501D               	movf	OpenADC@config,w,c
  6597  001384  0B80               	andlw	128
  6598  001386  101C               	iorwf	??_OpenADC+1,w,c
  6599  001388  101B               	iorwf	??_OpenADC,w,c
  6600  00138A  6EC0               	movwf	4032,c	;volatile
  6601  00138C  AE19               	btfss	OpenADC@config2,7,c
  6602  00138E  D003               	goto	l630
  6603  001390  9C9E               	bcf	3998,6,c	;volatile
  6604  001392  8C9D               	bsf	3997,6,c	;volatile
  6605  001394  8CF2               	bsf	intcon,6,c	;volatile
  6606  001396                     l630:
  6607  001396  80C2               	bsf	4034,0,c	;volatile
  6608  001398  0012               	return		;funcret
  6609  00139A                     __end_of_OpenADC:
  6610                           	opt stack 0
  6611                           tblptru	equ	0xFF8
  6612                           tblptrh	equ	0xFF7
  6613                           tblptrl	equ	0xFF6
  6614                           tablat	equ	0xFF5
  6615                           prodh	equ	0xFF4
  6616                           prodl	equ	0xFF3
  6617                           intcon	equ	0xFF2
  6618                           postinc0	equ	0xFEE
  6619                           wreg	equ	0xFE8
  6620                           indf1	equ	0xFE7
  6621                           postinc1	equ	0xFE6
  6622                           postdec1	equ	0xFE5
  6623                           fsr1h	equ	0xFE2
  6624                           fsr1l	equ	0xFE1
  6625                           indf2	equ	0xFDF
  6626                           postinc2	equ	0xFDE
  6627                           postdec2	equ	0xFDD
  6628                           plusw2	equ	0xFDB
  6629                           fsr2h	equ	0xFDA
  6630                           fsr2l	equ	0xFD9
  6631                           status	equ	0xFD8
  6632                           
  6633 ;; *************** function _Sys_Cyc *****************
  6634 ;; Defined at:
  6635 ;;		line 100 in file "_01_USER/My_Timer.c"
  6636 ;; Parameters:    Size  Location     Type
  6637 ;;		None
  6638 ;; Auto vars:     Size  Location     Type
  6639 ;;  _temp           1   23[COMRAM] unsigned char 
  6640 ;; Return value:  Size  Location     Type
  6641 ;;		None               void
  6642 ;; Registers used:
  6643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6644 ;; Tracked objects:
  6645 ;;		On entry : 0/0
  6646 ;;		On exit  : 0/0
  6647 ;;		Unchanged: 0/0
  6648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6650 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6651 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6652 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6653 ;;Total ram usage:       15 bytes
  6654 ;; Hardware stack levels used:    1
  6655 ;; Hardware stack levels required when called:    2
  6656 ;; This function calls:
  6657 ;;		_Key_ScanFSM
  6658 ;;		_Pulse_1Khz
  6659 ;;		i2_LED_Control
  6660 ;;		i2_SetTimer0
  6661 ;;		i2___llmod
  6662 ;; This function is called by:
  6663 ;;		Interrupt level 2
  6664 ;; This function uses a non-reentrant model
  6665 ;;
  6666                           
  6667                           	psect	intcode
  6668  000008                     __pintcode:
  6669                           	opt stack 0
  6670  000008                     _Sys_Cyc:
  6671                           	opt stack 23
  6672                           
  6673                           ;incstack = 0
  6674  000008  CFFA F00A          	movff	pclath,??_Sys_Cyc
  6675  00000C  CFFB F00B          	movff	pclatu,??_Sys_Cyc+1
  6676  000010  CFE9 F00C          	movff	fsr0l,??_Sys_Cyc+2
  6677  000014  CFEA F00D          	movff	fsr0h,??_Sys_Cyc+3
  6678  000018  CFE1 F00E          	movff	fsr1l,??_Sys_Cyc+4
  6679  00001C  CFE2 F00F          	movff	fsr1h,??_Sys_Cyc+5
  6680  000020  CFD9 F010          	movff	fsr2l,??_Sys_Cyc+6
  6681  000024  CFDA F011          	movff	fsr2h,??_Sys_Cyc+7
  6682  000028  CFF3 F012          	movff	prodl,??_Sys_Cyc+8
  6683  00002C  CFF4 F013          	movff	prodh,??_Sys_Cyc+9
  6684  000030  CFF6 F014          	movff	tblptrl,??_Sys_Cyc+10
  6685  000034  CFF7 F015          	movff	tblptrh,??_Sys_Cyc+11
  6686  000038  CFF8 F016          	movff	tblptru,??_Sys_Cyc+12
  6687  00003C  CFF5 F017          	movff	tablat,??_Sys_Cyc+13
  6688                           
  6689                           ;My_Timer.c: 102: static unsigned char _overturn_LED = 0;
  6690                           ;My_Timer.c: 103: static char _Byte;
  6691                           ;My_Timer.c: 104: static char _flag = 0;
  6692                           ;My_Timer.c: 105: unsigned char _temp;
  6693                           ;My_Timer.c: 108: if(TMR0IF)
  6694  000040  A4F2               	btfss	intcon,2,c	;volatile
  6695  000042  D06D               	goto	i2l3323
  6696                           
  6697                           ;My_Timer.c: 109: {
  6698                           ;My_Timer.c: 110: g_Timer_Cyc = (g_Timer_Cyc+1) % 4294967296;
  6699  000044  0E01               	movlw	1
  6700  000046  2433               	addwf	_g_Timer_Cyc,w,c
  6701  000048  6E01               	movwf	i2___llmod@dividend,c
  6702  00004A  0E00               	movlw	0
  6703  00004C  2034               	addwfc	_g_Timer_Cyc+1,w,c
  6704  00004E  6E02               	movwf	i2___llmod@dividend+1,c
  6705  000050  0E00               	movlw	0
  6706  000052  2035               	addwfc	_g_Timer_Cyc+2,w,c
  6707  000054  6E03               	movwf	i2___llmod@dividend+2,c
  6708  000056  0E00               	movlw	0
  6709  000058  2036               	addwfc	_g_Timer_Cyc+3,w,c
  6710  00005A  6E04               	movwf	i2___llmod@dividend+3,c
  6711  00005C  0E00               	movlw	0
  6712  00005E  6E05               	movwf	i2___llmod@divisor,c
  6713  000060  0E00               	movlw	0
  6714  000062  6E06               	movwf	i2___llmod@divisor+1,c
  6715  000064  0E00               	movlw	0
  6716  000066  6E07               	movwf	i2___llmod@divisor+2,c
  6717  000068  0E00               	movlw	0
  6718  00006A  6E08               	movwf	i2___llmod@divisor+3,c
  6719  00006C  EC4C  F008         	call	i2___llmod	;wreg free
  6720  000070  C001  F033         	movff	?i2___llmod,_g_Timer_Cyc
  6721  000074  C002  F034         	movff	?i2___llmod+1,_g_Timer_Cyc+1
  6722  000078  C003  F035         	movff	?i2___llmod+2,_g_Timer_Cyc+2
  6723  00007C  C004  F036         	movff	?i2___llmod+3,_g_Timer_Cyc+3
  6724                           
  6725                           ;My_Timer.c: 111: SetTimer0(8);
  6726  000080  0E00               	movlw	0
  6727  000082  6E02               	movwf	i2SetTimer0@_tmr+1,c
  6728  000084  0E08               	movlw	8
  6729  000086  6E01               	movwf	i2SetTimer0@_tmr,c
  6730  000088  EC45  F00B         	call	i2_SetTimer0	;wreg free
  6731                           
  6732                           ;My_Timer.c: 114: if( g_Timer_Cyc%300 == 0 )
  6733  00008C  C033  F001         	movff	_g_Timer_Cyc,i2___llmod@dividend
  6734  000090  C034  F002         	movff	_g_Timer_Cyc+1,i2___llmod@dividend+1
  6735  000094  C035  F003         	movff	_g_Timer_Cyc+2,i2___llmod@dividend+2
  6736  000098  C036  F004         	movff	_g_Timer_Cyc+3,i2___llmod@dividend+3
  6737  00009C  0E2C               	movlw	44
  6738  00009E  6E05               	movwf	i2___llmod@divisor,c
  6739  0000A0  0E01               	movlw	1
  6740  0000A2  6E06               	movwf	i2___llmod@divisor+1,c
  6741  0000A4  0E00               	movlw	0
  6742  0000A6  6E07               	movwf	i2___llmod@divisor+2,c
  6743  0000A8  0E00               	movlw	0
  6744  0000AA  6E08               	movwf	i2___llmod@divisor+3,c
  6745  0000AC  EC4C  F008         	call	i2___llmod	;wreg free
  6746  0000B0  5001               	movf	?i2___llmod,w,c
  6747  0000B2  1002               	iorwf	?i2___llmod+1,w,c
  6748  0000B4  1003               	iorwf	?i2___llmod+2,w,c
  6749  0000B6  1004               	iorwf	?i2___llmod+3,w,c
  6750  0000B8  A4D8               	btfss	status,2,c
  6751  0000BA  D010               	goto	i2l3317
  6752                           
  6753                           ;My_Timer.c: 115: {
  6754                           ;My_Timer.c: 116: _overturn_LED = ~_overturn_LED;
  6755  0000BC  1E3D               	comf	Sys_Cyc@_overturn_LED,f,c
  6756                           
  6757                           ;My_Timer.c: 117: if(_overturn_LED) LED_Control(3,1);
  6758  0000BE  503D               	movf	Sys_Cyc@_overturn_LED,w,c
  6759  0000C0  B4D8               	btfsc	status,2,c
  6760  0000C2  D006               	goto	i2l3315
  6761  0000C4  0E01               	movlw	1
  6762  0000C6  6E01               	movwf	i2LED_Control@_switch,c
  6763  0000C8  0E03               	movlw	3
  6764  0000CA  EC5F  F00A         	call	i2_LED_Control
  6765  0000CE  D006               	goto	i2l3317
  6766  0000D0                     i2l3315:
  6767                           
  6768                           ;My_Timer.c: 118: else LED_Control(3,0);
  6769  0000D0  0E00               	movlw	0
  6770  0000D2  6E01               	movwf	i2LED_Control@_switch,c
  6771  0000D4  0E03               	movlw	3
  6772  0000D6  EC5F  F00A         	call	i2_LED_Control
  6773  0000DA  D000               	goto	i2l3317
  6774  0000DC                     i2l3317:
  6775                           
  6776                           ;My_Timer.c: 119: }
  6777                           ;My_Timer.c: 122: if( gs_Handle_Switch._1Khz )
  6778  0000DC  5041               	movf	_gs_Handle_Switch,w,c
  6779  0000DE  B4D8               	btfsc	status,2,c
  6780  0000E0  D003               	goto	i2l304
  6781                           
  6782                           ;My_Timer.c: 123: Pulse_1Khz(1);
  6783  0000E2  0E01               	movlw	1
  6784  0000E4  EC7E  F009         	call	_Pulse_1Khz
  6785  0000E8                     i2l304:
  6786                           
  6787                           ;My_Timer.c: 126: if( g_Timer_Cyc%10 == 0 )
  6788  0000E8  C033  F001         	movff	_g_Timer_Cyc,i2___llmod@dividend
  6789  0000EC  C034  F002         	movff	_g_Timer_Cyc+1,i2___llmod@dividend+1
  6790  0000F0  C035  F003         	movff	_g_Timer_Cyc+2,i2___llmod@dividend+2
  6791  0000F4  C036  F004         	movff	_g_Timer_Cyc+3,i2___llmod@dividend+3
  6792  0000F8  0E0A               	movlw	10
  6793  0000FA  6E05               	movwf	i2___llmod@divisor,c
  6794  0000FC  0E00               	movlw	0
  6795  0000FE  6E06               	movwf	i2___llmod@divisor+1,c
  6796  000100  0E00               	movlw	0
  6797  000102  6E07               	movwf	i2___llmod@divisor+2,c
  6798  000104  0E00               	movlw	0
  6799  000106  6E08               	movwf	i2___llmod@divisor+3,c
  6800  000108  EC4C  F008         	call	i2___llmod	;wreg free
  6801  00010C  5001               	movf	?i2___llmod,w,c
  6802  00010E  1002               	iorwf	?i2___llmod+1,w,c
  6803  000110  1003               	iorwf	?i2___llmod+2,w,c
  6804  000112  1004               	iorwf	?i2___llmod+3,w,c
  6805  000114  A4D8               	btfss	status,2,c
  6806  000116  D003               	goto	i2l3323
  6807                           
  6808                           ;My_Timer.c: 127: Key_ScanFSM();
  6809  000118  EC51  F009         	call	_Key_ScanFSM	;wreg free
  6810  00011C  D000               	goto	i2l3323
  6811  00011E                     i2l3323:
  6812                           
  6813                           ;My_Timer.c: 128: }
  6814                           ;My_Timer.c: 131: if( RC1IF )
  6815  00011E  AA9E               	btfss	3998,5,c	;volatile
  6816  000120  D023               	goto	i2l311
  6817                           
  6818                           ;My_Timer.c: 132: {
  6819                           ;My_Timer.c: 133: _temp = RCREG1;
  6820  000122  CFAE F018          	movff	4014,Sys_Cyc@_temp	;volatile
  6821                           
  6822                           ;My_Timer.c: 134: if( g_RS485_Receive_Flag == 0 )
  6823  000126  5040               	movf	_g_RS485_Receive_Flag,w,c
  6824  000128  A4D8               	btfss	status,2,c
  6825  00012A  D01E               	goto	i2l311
  6826                           
  6827                           ;My_Timer.c: 135: {
  6828                           ;My_Timer.c: 137: if( _temp == 0xff )
  6829  00012C  2818               	incf	Sys_Cyc@_temp,w,c
  6830  00012E  A4D8               	btfss	status,2,c
  6831  000130  D004               	goto	i2l308
  6832                           
  6833                           ;My_Timer.c: 138: {
  6834                           ;My_Timer.c: 139: _Byte = 10 ;
  6835  000132  0E0A               	movlw	10
  6836  000134  6E3B               	movwf	Sys_Cyc@_Byte,c
  6837                           
  6838                           ;My_Timer.c: 140: _flag = 0;
  6839  000136  0E00               	movlw	0
  6840  000138  6E3C               	movwf	Sys_Cyc@_flag,c
  6841  00013A                     i2l308:
  6842                           
  6843                           ;My_Timer.c: 141: }
  6844                           ;My_Timer.c: 144: if ( _flag == 0 )
  6845  00013A  503C               	movf	Sys_Cyc@_flag,w,c
  6846  00013C  A4D8               	btfss	status,2,c
  6847  00013E  D00C               	goto	i2l3337
  6848                           
  6849                           ;My_Timer.c: 145: {
  6850                           ;My_Timer.c: 146: _Byte -- ;
  6851  000140  063B               	decf	Sys_Cyc@_Byte,f,c
  6852                           
  6853                           ;My_Timer.c: 147: ga_RS485_ReceiveBuff[ _Byte ] = _temp;
  6854  000142  503B               	movf	Sys_Cyc@_Byte,w,c
  6855  000144  0D01               	mullw	1
  6856  000146  0EA6               	movlw	low _ga_RS485_ReceiveBuff
  6857  000148  24F3               	addwf	prodl,w,c
  6858  00014A  6ED9               	movwf	fsr2l,c
  6859  00014C  0E00               	movlw	high _ga_RS485_ReceiveBuff
  6860  00014E  20F4               	addwfc	prodh,w,c
  6861  000150  6EDA               	movwf	fsr2h,c
  6862  000152  C018  FFDF         	movff	Sys_Cyc@_temp,indf2
  6863  000156  D000               	goto	i2l3337
  6864  000158                     i2l3337:
  6865                           
  6866                           ;My_Timer.c: 148: }
  6867                           ;My_Timer.c: 151: if( _Byte == 0 )
  6868  000158  503B               	movf	Sys_Cyc@_Byte,w,c
  6869  00015A  A4D8               	btfss	status,2,c
  6870  00015C  D005               	goto	i2l311
  6871                           
  6872                           ;My_Timer.c: 152: {
  6873                           ;My_Timer.c: 153: g_RS485_Receive_Flag = 1 ;
  6874  00015E  0E01               	movlw	1
  6875  000160  6E40               	movwf	_g_RS485_Receive_Flag,c
  6876                           
  6877                           ;My_Timer.c: 154: _flag = 1;
  6878  000162  0E01               	movlw	1
  6879  000164  6E3C               	movwf	Sys_Cyc@_flag,c
  6880  000166  D000               	goto	i2l311
  6881  000168                     i2l311:
  6882  000168  C017  FFF5         	movff	??_Sys_Cyc+13,tablat
  6883  00016C  C016  FFF8         	movff	??_Sys_Cyc+12,tblptru
  6884  000170  C015  FFF7         	movff	??_Sys_Cyc+11,tblptrh
  6885  000174  C014  FFF6         	movff	??_Sys_Cyc+10,tblptrl
  6886  000178  C013  FFF4         	movff	??_Sys_Cyc+9,prodh
  6887  00017C  C012  FFF3         	movff	??_Sys_Cyc+8,prodl
  6888  000180  C011  FFDA         	movff	??_Sys_Cyc+7,fsr2h
  6889  000184  C010  FFD9         	movff	??_Sys_Cyc+6,fsr2l
  6890  000188  C00F  FFE2         	movff	??_Sys_Cyc+5,fsr1h
  6891  00018C  C00E  FFE1         	movff	??_Sys_Cyc+4,fsr1l
  6892  000190  C00D  FFEA         	movff	??_Sys_Cyc+3,fsr0h
  6893  000194  C00C  FFE9         	movff	??_Sys_Cyc+2,fsr0l
  6894  000198  C00B  FFFB         	movff	??_Sys_Cyc+1,pclatu
  6895  00019C  C00A  FFFA         	movff	??_Sys_Cyc,pclath
  6896  0001A0  0011               	retfie		f
  6897  0001A2                     __end_of_Sys_Cyc:
  6898                           	opt stack 0
  6899                           pclatu	equ	0xFFB
  6900                           pclath	equ	0xFFA
  6901                           tblptru	equ	0xFF8
  6902                           tblptrh	equ	0xFF7
  6903                           tblptrl	equ	0xFF6
  6904                           tablat	equ	0xFF5
  6905                           prodh	equ	0xFF4
  6906                           prodl	equ	0xFF3
  6907                           intcon	equ	0xFF2
  6908                           postinc0	equ	0xFEE
  6909                           fsr0h	equ	0xFEA
  6910                           fsr0l	equ	0xFE9
  6911                           wreg	equ	0xFE8
  6912                           indf1	equ	0xFE7
  6913                           postinc1	equ	0xFE6
  6914                           postdec1	equ	0xFE5
  6915                           fsr1h	equ	0xFE2
  6916                           fsr1l	equ	0xFE1
  6917                           indf2	equ	0xFDF
  6918                           postinc2	equ	0xFDE
  6919                           postdec2	equ	0xFDD
  6920                           plusw2	equ	0xFDB
  6921                           fsr2h	equ	0xFDA
  6922                           fsr2l	equ	0xFD9
  6923                           status	equ	0xFD8
  6924                           
  6925 ;; *************** function i2___llmod *****************
  6926 ;; Defined at:
  6927 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  6928 ;; Parameters:    Size  Location     Type
  6929 ;;  dividend        4    0[COMRAM] unsigned long 
  6930 ;;  divisor         4    4[COMRAM] unsigned long 
  6931 ;; Auto vars:     Size  Location     Type
  6932 ;;  __llmod         1    8[COMRAM] unsigned char 
  6933 ;; Return value:  Size  Location     Type
  6934 ;;                  4    0[COMRAM] unsigned long 
  6935 ;; Registers used:
  6936 ;;		wreg, status,2, status,0
  6937 ;; Tracked objects:
  6938 ;;		On entry : 0/0
  6939 ;;		On exit  : 0/0
  6940 ;;		Unchanged: 0/0
  6941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6942 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6943 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6945 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6946 ;;Total ram usage:        9 bytes
  6947 ;; Hardware stack levels used:    1
  6948 ;; This function calls:
  6949 ;;		Nothing
  6950 ;; This function is called by:
  6951 ;;		_Sys_Cyc
  6952 ;; This function uses a non-reentrant model
  6953 ;;
  6954                           
  6955                           	psect	text46
  6956  001098                     __ptext46:
  6957                           	opt stack 0
  6958  001098                     i2___llmod:
  6959                           	opt stack 24
  6960                           
  6961                           ;incstack = 0
  6962  001098  5005               	movf	i2___llmod@divisor,w,c
  6963  00109A  1006               	iorwf	i2___llmod@divisor+1,w,c
  6964  00109C  1007               	iorwf	i2___llmod@divisor+2,w,c
  6965  00109E  1008               	iorwf	i2___llmod@divisor+3,w,c
  6966  0010A0  B4D8               	btfsc	status,2,c
  6967  0010A2  D029               	goto	i2l1165
  6968  0010A4  0E01               	movlw	1
  6969  0010A6  6E09               	movwf	i2___llmod@counter,c
  6970  0010A8  D007               	goto	i2l3275
  6971  0010AA                     i2l3273:
  6972  0010AA  90D8               	bcf	status,0,c
  6973  0010AC  3605               	rlcf	i2___llmod@divisor,f,c
  6974  0010AE  3606               	rlcf	i2___llmod@divisor+1,f,c
  6975  0010B0  3607               	rlcf	i2___llmod@divisor+2,f,c
  6976  0010B2  3608               	rlcf	i2___llmod@divisor+3,f,c
  6977  0010B4  2A09               	incf	i2___llmod@counter,f,c
  6978  0010B6  D000               	goto	i2l3275
  6979  0010B8                     i2l3275:
  6980  0010B8  BE08               	btfsc	i2___llmod@divisor+3,7,c
  6981  0010BA  D002               	goto	i2l3277
  6982  0010BC  D7F6               	goto	i2l3273
  6983  0010BE  D000               	goto	i2l3277
  6984  0010C0                     i2l3277:
  6985  0010C0  5005               	movf	i2___llmod@divisor,w,c
  6986  0010C2  5C01               	subwf	i2___llmod@dividend,w,c
  6987  0010C4  5006               	movf	i2___llmod@divisor+1,w,c
  6988  0010C6  5802               	subwfb	i2___llmod@dividend+1,w,c
  6989  0010C8  5007               	movf	i2___llmod@divisor+2,w,c
  6990  0010CA  5803               	subwfb	i2___llmod@dividend+2,w,c
  6991  0010CC  5008               	movf	i2___llmod@divisor+3,w,c
  6992  0010CE  5804               	subwfb	i2___llmod@dividend+3,w,c
  6993  0010D0  A0D8               	btfss	status,0,c
  6994  0010D2  D009               	goto	i2l3281
  6995  0010D4  5005               	movf	i2___llmod@divisor,w,c
  6996  0010D6  5E01               	subwf	i2___llmod@dividend,f,c
  6997  0010D8  5006               	movf	i2___llmod@divisor+1,w,c
  6998  0010DA  5A02               	subwfb	i2___llmod@dividend+1,f,c
  6999  0010DC  5007               	movf	i2___llmod@divisor+2,w,c
  7000  0010DE  5A03               	subwfb	i2___llmod@dividend+2,f,c
  7001  0010E0  5008               	movf	i2___llmod@divisor+3,w,c
  7002  0010E2  5A04               	subwfb	i2___llmod@dividend+3,f,c
  7003  0010E4  D000               	goto	i2l3281
  7004  0010E6                     i2l3281:
  7005  0010E6  90D8               	bcf	status,0,c
  7006  0010E8  3208               	rrcf	i2___llmod@divisor+3,f,c
  7007  0010EA  3207               	rrcf	i2___llmod@divisor+2,f,c
  7008  0010EC  3206               	rrcf	i2___llmod@divisor+1,f,c
  7009  0010EE  3205               	rrcf	i2___llmod@divisor,f,c
  7010  0010F0  2E09               	decfsz	i2___llmod@counter,f,c
  7011  0010F2  D7E6               	goto	i2l3277
  7012  0010F4  D000               	goto	i2l1165
  7013  0010F6                     i2l1165:
  7014  0010F6  C001  F001         	movff	i2___llmod@dividend,?i2___llmod
  7015  0010FA  C002  F002         	movff	i2___llmod@dividend+1,?i2___llmod+1
  7016  0010FE  C003  F003         	movff	i2___llmod@dividend+2,?i2___llmod+2
  7017  001102  C004  F004         	movff	i2___llmod@dividend+3,?i2___llmod+3
  7018  001106  0012               	return		;funcret
  7019  001108                     __end_ofi2___llmod:
  7020                           	opt stack 0
  7021                           pclatu	equ	0xFFB
  7022                           pclath	equ	0xFFA
  7023                           tblptru	equ	0xFF8
  7024                           tblptrh	equ	0xFF7
  7025                           tblptrl	equ	0xFF6
  7026                           tablat	equ	0xFF5
  7027                           prodh	equ	0xFF4
  7028                           prodl	equ	0xFF3
  7029                           intcon	equ	0xFF2
  7030                           postinc0	equ	0xFEE
  7031                           fsr0h	equ	0xFEA
  7032                           fsr0l	equ	0xFE9
  7033                           wreg	equ	0xFE8
  7034                           indf1	equ	0xFE7
  7035                           postinc1	equ	0xFE6
  7036                           postdec1	equ	0xFE5
  7037                           fsr1h	equ	0xFE2
  7038                           fsr1l	equ	0xFE1
  7039                           indf2	equ	0xFDF
  7040                           postinc2	equ	0xFDE
  7041                           postdec2	equ	0xFDD
  7042                           plusw2	equ	0xFDB
  7043                           fsr2h	equ	0xFDA
  7044                           fsr2l	equ	0xFD9
  7045                           status	equ	0xFD8
  7046                           
  7047 ;; *************** function i2_SetTimer0 *****************
  7048 ;; Defined at:
  7049 ;;		line 81 in file "_01_USER/My_Timer.c"
  7050 ;; Parameters:    Size  Location     Type
  7051 ;;  _tmr            2    0[COMRAM] unsigned int 
  7052 ;; Auto vars:     Size  Location     Type
  7053 ;;		None
  7054 ;; Return value:  Size  Location     Type
  7055 ;;		None               void
  7056 ;; Registers used:
  7057 ;;		wreg, status,2, status,0
  7058 ;; Tracked objects:
  7059 ;;		On entry : 0/0
  7060 ;;		On exit  : 0/0
  7061 ;;		Unchanged: 0/0
  7062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7063 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7065 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7066 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7067 ;;Total ram usage:        4 bytes
  7068 ;; Hardware stack levels used:    1
  7069 ;; This function calls:
  7070 ;;		Nothing
  7071 ;; This function is called by:
  7072 ;;		_Sys_Cyc
  7073 ;; This function uses a non-reentrant model
  7074 ;;
  7075                           
  7076                           	psect	text47
  7077  00168A                     __ptext47:
  7078                           	opt stack 0
  7079  00168A                     i2_SetTimer0:
  7080                           	opt stack 24
  7081                           
  7082                           ;My_Timer.c: 83: if(_tmr > 0xffff) _tmr = 0xffff;
  7083                           
  7084                           ;incstack = 0
  7085  00168A  D003               	goto	i2l3237
  7086  00168C  6801               	setf	i2SetTimer0@_tmr,c
  7087  00168E  6802               	setf	i2SetTimer0@_tmr+1,c
  7088  001690  D000               	goto	i2l3237
  7089  001692                     i2l3237:
  7090                           
  7091                           ;My_Timer.c: 84: _tmr=0xffff-_tmr;
  7092  001692  C001  F003         	movff	i2SetTimer0@_tmr,??i2_SetTimer0
  7093  001696  C002  F004         	movff	i2SetTimer0@_tmr+1,??i2_SetTimer0+1
  7094  00169A  1E03               	comf	??i2_SetTimer0,f,c
  7095  00169C  1E04               	comf	??i2_SetTimer0+1,f,c
  7096  00169E  4A03               	infsnz	??i2_SetTimer0,f,c
  7097  0016A0  2A04               	incf	??i2_SetTimer0+1,f,c
  7098  0016A2  0EFF               	movlw	255
  7099  0016A4  2403               	addwf	??i2_SetTimer0,w,c
  7100  0016A6  6E01               	movwf	i2SetTimer0@_tmr,c
  7101  0016A8  0EFF               	movlw	255
  7102  0016AA  2004               	addwfc	??i2_SetTimer0+1,w,c
  7103  0016AC  6E02               	movwf	i2SetTimer0@_tmr+1,c
  7104                           
  7105                           ;My_Timer.c: 85: TMR0H = _tmr/256;
  7106  0016AE  5002               	movf	i2SetTimer0@_tmr+1,w,c
  7107  0016B0  6ED7               	movwf	4055,c	;volatile
  7108                           
  7109                           ;My_Timer.c: 86: TMR0L = _tmr%256;
  7110  0016B2  C001  FFD6         	movff	i2SetTimer0@_tmr,4054	;volatile
  7111                           
  7112                           ;My_Timer.c: 87: TMR0IF = 0;
  7113  0016B6  94F2               	bcf	intcon,2,c	;volatile
  7114  0016B8  0012               	return		;funcret
  7115  0016BA                     __end_ofi2_SetTimer0:
  7116                           	opt stack 0
  7117                           pclatu	equ	0xFFB
  7118                           pclath	equ	0xFFA
  7119                           tblptru	equ	0xFF8
  7120                           tblptrh	equ	0xFF7
  7121                           tblptrl	equ	0xFF6
  7122                           tablat	equ	0xFF5
  7123                           prodh	equ	0xFF4
  7124                           prodl	equ	0xFF3
  7125                           intcon	equ	0xFF2
  7126                           postinc0	equ	0xFEE
  7127                           fsr0h	equ	0xFEA
  7128                           fsr0l	equ	0xFE9
  7129                           wreg	equ	0xFE8
  7130                           indf1	equ	0xFE7
  7131                           postinc1	equ	0xFE6
  7132                           postdec1	equ	0xFE5
  7133                           fsr1h	equ	0xFE2
  7134                           fsr1l	equ	0xFE1
  7135                           indf2	equ	0xFDF
  7136                           postinc2	equ	0xFDE
  7137                           postdec2	equ	0xFDD
  7138                           plusw2	equ	0xFDB
  7139                           fsr2h	equ	0xFDA
  7140                           fsr2l	equ	0xFD9
  7141                           status	equ	0xFD8
  7142                           
  7143 ;; *************** function i2_LED_Control *****************
  7144 ;; Defined at:
  7145 ;;		line 58 in file "_01_USER/GPIO.c"
  7146 ;; Parameters:    Size  Location     Type
  7147 ;;  _LED_num        1    wreg     unsigned char 
  7148 ;;  _switch         1    0[COMRAM] unsigned char 
  7149 ;; Auto vars:     Size  Location     Type
  7150 ;;  _LED_num        1    1[COMRAM] unsigned char 
  7151 ;; Return value:  Size  Location     Type
  7152 ;;		None               void
  7153 ;; Registers used:
  7154 ;;		wreg, status,2, status,0
  7155 ;; Tracked objects:
  7156 ;;		On entry : 0/0
  7157 ;;		On exit  : 0/0
  7158 ;;		Unchanged: 0/0
  7159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7160 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7161 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7163 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7164 ;;Total ram usage:        2 bytes
  7165 ;; Hardware stack levels used:    1
  7166 ;; This function calls:
  7167 ;;		Nothing
  7168 ;; This function is called by:
  7169 ;;		_Sys_Cyc
  7170 ;; This function uses a non-reentrant model
  7171 ;;
  7172                           
  7173                           	psect	text48
  7174  0014BE                     __ptext48:
  7175                           	opt stack 0
  7176  0014BE                     i2_LED_Control:
  7177                           	opt stack 24
  7178                           
  7179                           ;incstack = 0
  7180                           ;i2LED_Control@_LED_num stored from wreg
  7181  0014BE  6E02               	movwf	i2LED_Control@_LED_num,c
  7182                           
  7183                           ;GPIO.c: 62: if(_LED_num == 1)
  7184  0014C0  0402               	decf	i2LED_Control@_LED_num,w,c
  7185  0014C2  A4D8               	btfss	status,2,c
  7186  0014C4  D007               	goto	i2l3253
  7187                           
  7188                           ;GPIO.c: 63: if(_switch) LED_BUS |= 0x01;
  7189  0014C6  5001               	movf	i2LED_Control@_switch,w,c
  7190  0014C8  B4D8               	btfsc	status,2,c
  7191  0014CA  D002               	goto	i2l3251
  7192  0014CC  803E               	bsf	_LED_BUS,0,c
  7193  0014CE  D002               	goto	i2l3253
  7194  0014D0                     i2l3251:
  7195                           
  7196                           ;GPIO.c: 64: else LED_BUS &= 0xFE;
  7197  0014D0  903E               	bcf	_LED_BUS,0,c
  7198  0014D2  D000               	goto	i2l3253
  7199  0014D4                     i2l3253:
  7200                           
  7201                           ;GPIO.c: 66: if(_LED_num == 2)
  7202  0014D4  0E02               	movlw	2
  7203  0014D6  1802               	xorwf	i2LED_Control@_LED_num,w,c
  7204  0014D8  A4D8               	btfss	status,2,c
  7205  0014DA  D007               	goto	i2l3261
  7206                           
  7207                           ;GPIO.c: 67: if(_switch) LED_BUS |= 0x02;
  7208  0014DC  5001               	movf	i2LED_Control@_switch,w,c
  7209  0014DE  B4D8               	btfsc	status,2,c
  7210  0014E0  D002               	goto	i2l3259
  7211  0014E2  823E               	bsf	_LED_BUS,1,c
  7212  0014E4  D002               	goto	i2l3261
  7213  0014E6                     i2l3259:
  7214                           
  7215                           ;GPIO.c: 68: else LED_BUS &= 0xFD;
  7216  0014E6  923E               	bcf	_LED_BUS,1,c
  7217  0014E8  D000               	goto	i2l3261
  7218  0014EA                     i2l3261:
  7219                           
  7220                           ;GPIO.c: 70: if(_LED_num == 3)
  7221  0014EA  0E03               	movlw	3
  7222  0014EC  1802               	xorwf	i2LED_Control@_LED_num,w,c
  7223  0014EE  A4D8               	btfss	status,2,c
  7224  0014F0  0012               	return	
  7225                           
  7226                           ;GPIO.c: 71: if(_switch) LED_BUS |= 0x04;
  7227  0014F2  5001               	movf	i2LED_Control@_switch,w,c
  7228  0014F4  B4D8               	btfsc	status,2,c
  7229  0014F6  D002               	goto	i2l3267
  7230  0014F8  843E               	bsf	_LED_BUS,2,c
  7231  0014FA  0012               	return	
  7232  0014FC                     i2l3267:
  7233                           
  7234                           ;GPIO.c: 72: else LED_BUS &= 0xFB;
  7235  0014FC  943E               	bcf	_LED_BUS,2,c
  7236  0014FE  0012               	return	
  7237  001500  0012               	return		;funcret
  7238  001502                     __end_ofi2_LED_Control:
  7239                           	opt stack 0
  7240                           pclatu	equ	0xFFB
  7241                           pclath	equ	0xFFA
  7242                           tblptru	equ	0xFF8
  7243                           tblptrh	equ	0xFF7
  7244                           tblptrl	equ	0xFF6
  7245                           tablat	equ	0xFF5
  7246                           prodh	equ	0xFF4
  7247                           prodl	equ	0xFF3
  7248                           intcon	equ	0xFF2
  7249                           postinc0	equ	0xFEE
  7250                           fsr0h	equ	0xFEA
  7251                           fsr0l	equ	0xFE9
  7252                           wreg	equ	0xFE8
  7253                           indf1	equ	0xFE7
  7254                           postinc1	equ	0xFE6
  7255                           postdec1	equ	0xFE5
  7256                           fsr1h	equ	0xFE2
  7257                           fsr1l	equ	0xFE1
  7258                           indf2	equ	0xFDF
  7259                           postinc2	equ	0xFDE
  7260                           postdec2	equ	0xFDD
  7261                           plusw2	equ	0xFDB
  7262                           fsr2h	equ	0xFDA
  7263                           fsr2l	equ	0xFD9
  7264                           status	equ	0xFD8
  7265                           
  7266 ;; *************** function _Pulse_1Khz *****************
  7267 ;; Defined at:
  7268 ;;		line 79 in file "_01_USER/SCR.c"
  7269 ;; Parameters:    Size  Location     Type
  7270 ;;  _QD             1    wreg     unsigned char 
  7271 ;; Auto vars:     Size  Location     Type
  7272 ;;  _QD             1    3[COMRAM] unsigned char 
  7273 ;;  _pulse          1    4[COMRAM] unsigned char 
  7274 ;; Return value:  Size  Location     Type
  7275 ;;		None               void
  7276 ;; Registers used:
  7277 ;;		wreg, status,2, status,0, cstack
  7278 ;; Tracked objects:
  7279 ;;		On entry : 0/0
  7280 ;;		On exit  : 0/0
  7281 ;;		Unchanged: 0/0
  7282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7284 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7286 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7287 ;;Total ram usage:        2 bytes
  7288 ;; Hardware stack levels used:    1
  7289 ;; Hardware stack levels required when called:    1
  7290 ;; This function calls:
  7291 ;;		_Delay_1Khz
  7292 ;; This function is called by:
  7293 ;;		_Sys_Cyc
  7294 ;; This function uses a non-reentrant model
  7295 ;;
  7296                           
  7297                           	psect	text49
  7298  0012FC                     __ptext49:
  7299                           	opt stack 0
  7300  0012FC                     _Pulse_1Khz:
  7301                           	opt stack 23
  7302                           
  7303                           ;incstack = 0
  7304                           ;Pulse_1Khz@_QD stored from wreg
  7305  0012FC  6E04               	movwf	Pulse_1Khz@_QD,c
  7306                           
  7307                           ;SCR.c: 81: unsigned char _pulse = 8;
  7308  0012FE  0E08               	movlw	8
  7309  001300  6E05               	movwf	Pulse_1Khz@_pulse,c
  7310                           
  7311                           ;SCR.c: 82: static unsigned char _overturn_1Khz = 0;
  7312                           ;SCR.c: 85: if(_QD == 1)
  7313  001302  0404               	decf	Pulse_1Khz@_QD,w,c
  7314  001304  B4D8               	btfsc	status,2,c
  7315  001306  D009               	goto	i2l3201
  7316  001308  D00E               	goto	i2l3203
  7317                           
  7318                           ;SCR.c: 86: while( _pulse-- )
  7319  00130A  D007               	goto	i2l3201
  7320  00130C                     i2l3193:
  7321                           
  7322                           ;SCR.c: 87: {
  7323                           ;SCR.c: 88: _overturn_1Khz =~ _overturn_1Khz;
  7324  00130C  1E3A               	comf	Pulse_1Khz@_overturn_1Khz,f,c
  7325                           
  7326                           ;SCR.c: 89: if(_overturn_1Khz) RB1 = 1;
  7327  00130E  503A               	movf	Pulse_1Khz@_overturn_1Khz,w,c
  7328                           
  7329                           ;SCR.c: 90: else RB1 = 1;
  7330  001310  8281               	bsf	3969,1,c	;volatile
  7331  001312  D000               	goto	i2l3199
  7332  001314                     i2l3199:
  7333                           
  7334                           ;SCR.c: 91: Delay_1Khz();
  7335  001314  ECDE  F00A         	call	_Delay_1Khz	;wreg free
  7336  001318  D000               	goto	i2l3201
  7337  00131A                     i2l3201:
  7338  00131A  0605               	decf	Pulse_1Khz@_pulse,f,c
  7339  00131C  2805               	incf	Pulse_1Khz@_pulse,w,c
  7340  00131E  B4D8               	btfsc	status,2,c
  7341  001320  D002               	goto	i2l3203
  7342  001322  D7F4               	goto	i2l3193
  7343  001324  D000               	goto	i2l3203
  7344  001326                     i2l3203:
  7345                           
  7346                           ;SCR.c: 92: }
  7347                           ;SCR.c: 95: if(_QD == 2)
  7348  001326  0E02               	movlw	2
  7349  001328  1804               	xorwf	Pulse_1Khz@_QD,w,c
  7350  00132A  A4D8               	btfss	status,2,c
  7351  00132C  0012               	return	
  7352                           
  7353                           ;SCR.c: 96: while( _pulse-- )
  7354  00132E  D007               	goto	i2l3215
  7355  001330                     i2l3207:
  7356                           
  7357                           ;SCR.c: 97: {
  7358                           ;SCR.c: 98: _overturn_1Khz =~ _overturn_1Khz;
  7359  001330  1E3A               	comf	Pulse_1Khz@_overturn_1Khz,f,c
  7360                           
  7361                           ;SCR.c: 99: if(_overturn_1Khz) RB0 = 1;
  7362  001332  503A               	movf	Pulse_1Khz@_overturn_1Khz,w,c
  7363                           
  7364                           ;SCR.c: 100: else RB0 = 1;
  7365  001334  8081               	bsf	3969,0,c	;volatile
  7366  001336  D000               	goto	i2l3213
  7367  001338                     i2l3213:
  7368                           
  7369                           ;SCR.c: 101: Delay_1Khz();
  7370  001338  ECDE  F00A         	call	_Delay_1Khz	;wreg free
  7371  00133C  D000               	goto	i2l3215
  7372  00133E                     i2l3215:
  7373  00133E  0605               	decf	Pulse_1Khz@_pulse,f,c
  7374  001340  2805               	incf	Pulse_1Khz@_pulse,w,c
  7375  001342  B4D8               	btfsc	status,2,c
  7376  001344  0012               	return	
  7377  001346  D7F4               	goto	i2l3207
  7378  001348  0012               	return	
  7379  00134A  0012               	return		;funcret
  7380  00134C                     __end_of_Pulse_1Khz:
  7381                           	opt stack 0
  7382                           pclatu	equ	0xFFB
  7383                           pclath	equ	0xFFA
  7384                           tblptru	equ	0xFF8
  7385                           tblptrh	equ	0xFF7
  7386                           tblptrl	equ	0xFF6
  7387                           tablat	equ	0xFF5
  7388                           prodh	equ	0xFF4
  7389                           prodl	equ	0xFF3
  7390                           intcon	equ	0xFF2
  7391                           postinc0	equ	0xFEE
  7392                           fsr0h	equ	0xFEA
  7393                           fsr0l	equ	0xFE9
  7394                           wreg	equ	0xFE8
  7395                           indf1	equ	0xFE7
  7396                           postinc1	equ	0xFE6
  7397                           postdec1	equ	0xFE5
  7398                           fsr1h	equ	0xFE2
  7399                           fsr1l	equ	0xFE1
  7400                           indf2	equ	0xFDF
  7401                           postinc2	equ	0xFDE
  7402                           postdec2	equ	0xFDD
  7403                           plusw2	equ	0xFDB
  7404                           fsr2h	equ	0xFDA
  7405                           fsr2l	equ	0xFD9
  7406                           status	equ	0xFD8
  7407                           
  7408 ;; *************** function _Delay_1Khz *****************
  7409 ;; Defined at:
  7410 ;;		line 62 in file "_01_USER/SCR.c"
  7411 ;; Parameters:    Size  Location     Type
  7412 ;;		None
  7413 ;; Auto vars:     Size  Location     Type
  7414 ;;  c               1    2[COMRAM] unsigned char 
  7415 ;;  b               1    1[COMRAM] unsigned char 
  7416 ;;  a               1    0[COMRAM] unsigned char 
  7417 ;; Return value:  Size  Location     Type
  7418 ;;		None               void
  7419 ;; Registers used:
  7420 ;;		wreg, status,2, status,0
  7421 ;; Tracked objects:
  7422 ;;		On entry : 0/0
  7423 ;;		On exit  : 0/0
  7424 ;;		Unchanged: 0/0
  7425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7427 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7429 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7430 ;;Total ram usage:        3 bytes
  7431 ;; Hardware stack levels used:    1
  7432 ;; This function calls:
  7433 ;;		Nothing
  7434 ;; This function is called by:
  7435 ;;		_Pulse_1Khz
  7436 ;; This function uses a non-reentrant model
  7437 ;;
  7438                           
  7439                           	psect	text50
  7440  0015BC                     __ptext50:
  7441                           	opt stack 0
  7442  0015BC                     _Delay_1Khz:
  7443                           	opt stack 23
  7444                           
  7445                           ;SCR.c: 64: unsigned char a,b,c;
  7446                           ;SCR.c: 65: for(c=1;c>0;c--)
  7447                           
  7448                           ;incstack = 0
  7449  0015BC  0E01               	movlw	1
  7450  0015BE  6E03               	movwf	Delay_1Khz@c,c
  7451  0015C0  5003               	movf	Delay_1Khz@c,w,c
  7452  0015C2  B4D8               	btfsc	status,2,c
  7453  0015C4  0012               	return	
  7454  0015C6  D001               	goto	i2l3079
  7455  0015C8  0012               	return	
  7456  0015CA                     i2l3079:
  7457                           
  7458                           ;SCR.c: 66: for(b=32;b>0;b--)
  7459  0015CA  0E20               	movlw	32
  7460  0015CC  6E02               	movwf	Delay_1Khz@b,c
  7461  0015CE  5002               	movf	Delay_1Khz@b,w,c
  7462  0015D0  B4D8               	btfsc	status,2,c
  7463  0015D2  D00D               	goto	i2l3095
  7464  0015D4  D001               	goto	i2l3083
  7465  0015D6  D00B               	goto	i2l3095
  7466  0015D8                     i2l3083:
  7467                           
  7468                           ;SCR.c: 67: for(a=2;a>0;a--);
  7469  0015D8  0E02               	movlw	2
  7470  0015DA  6E01               	movwf	Delay_1Khz@a,c
  7471  0015DC  5001               	movf	Delay_1Khz@a,w,c
  7472  0015DE  B4D8               	btfsc	status,2,c
  7473  0015E0  D004               	goto	i2l3091
  7474  0015E2  D001               	goto	i2l3087
  7475  0015E4  D002               	goto	i2l3091
  7476  0015E6                     i2l3087:
  7477  0015E6  0601               	decf	Delay_1Khz@a,f,c
  7478  0015E8  D7F9               	goto	L10
  7479  0015EA                     i2l3091:
  7480  0015EA  0602               	decf	Delay_1Khz@b,f,c
  7481  0015EC  D7F0               	goto	L11
  7482  0015EE                     i2l3095:
  7483  0015EE  0603               	decf	Delay_1Khz@c,f,c
  7484  0015F0  D7E7               	goto	L12
  7485  0015F2  0012               	return		;funcret
  7486  0015F4                     __end_of_Delay_1Khz:
  7487                           	opt stack 0
  7488                           pclatu	equ	0xFFB
  7489                           pclath	equ	0xFFA
  7490                           tblptru	equ	0xFF8
  7491                           tblptrh	equ	0xFF7
  7492                           tblptrl	equ	0xFF6
  7493                           tablat	equ	0xFF5
  7494                           prodh	equ	0xFF4
  7495                           prodl	equ	0xFF3
  7496                           intcon	equ	0xFF2
  7497                           postinc0	equ	0xFEE
  7498                           fsr0h	equ	0xFEA
  7499                           fsr0l	equ	0xFE9
  7500                           wreg	equ	0xFE8
  7501                           indf1	equ	0xFE7
  7502                           postinc1	equ	0xFE6
  7503                           postdec1	equ	0xFE5
  7504                           fsr1h	equ	0xFE2
  7505                           fsr1l	equ	0xFE1
  7506                           indf2	equ	0xFDF
  7507                           postinc2	equ	0xFDE
  7508                           postdec2	equ	0xFDD
  7509                           plusw2	equ	0xFDB
  7510                           fsr2h	equ	0xFDA
  7511                           fsr2l	equ	0xFD9
  7512                           status	equ	0xFD8
  7513                           
  7514 ;; *************** function _Key_ScanFSM *****************
  7515 ;; Defined at:
  7516 ;;		line 91 in file "_01_USER/Key.c"
  7517 ;; Parameters:    Size  Location     Type
  7518 ;;		None
  7519 ;; Auto vars:     Size  Location     Type
  7520 ;;		None
  7521 ;; Return value:  Size  Location     Type
  7522 ;;		None               void
  7523 ;; Registers used:
  7524 ;;		wreg, status,2, status,0, cstack
  7525 ;; Tracked objects:
  7526 ;;		On entry : 0/0
  7527 ;;		On exit  : 0/0
  7528 ;;		Unchanged: 0/0
  7529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7534 ;;Total ram usage:        0 bytes
  7535 ;; Hardware stack levels used:    1
  7536 ;; Hardware stack levels required when called:    1
  7537 ;; This function calls:
  7538 ;;		_Key_Scan
  7539 ;; This function is called by:
  7540 ;;		_Sys_Cyc
  7541 ;; This function uses a non-reentrant model
  7542 ;;
  7543                           
  7544                           	psect	text51
  7545  0012A2                     __ptext51:
  7546                           	opt stack 0
  7547  0012A2                     _Key_ScanFSM:
  7548                           	opt stack 23
  7549                           
  7550                           ;Key.c: 93: Key_Scan();
  7551                           
  7552                           ;incstack = 0
  7553  0012A2  EC81  F00A         	call	_Key_Scan	;wreg free
  7554                           
  7555                           ;Key.c: 94: if( s_Local_Key_FSM.key_BUS & 0x01 ) s_Local_Key_FSM.a_key_count[0]++;
  7556  0012A6  0100               	movlb	0	; () banked
  7557  0012A8  A191               	btfss	_s_Local_Key_FSM& (0+255),0,b	;volatile
  7558  0012AA  D004               	goto	i2l3167
  7559                           
  7560                           ; BSR set to: 0
  7561  0012AC  0100               	movlb	0	; () banked
  7562  0012AE  4B94               	infsnz	(_s_Local_Key_FSM+3)& (0+255),f,b	;volatile
  7563  0012B0  2B95               	incf	(_s_Local_Key_FSM+4)& (0+255),f,b	;volatile
  7564  0012B2  D000               	goto	i2l3167
  7565  0012B4                     i2l3167:
  7566                           
  7567                           ; BSR set to: 0
  7568                           ;Key.c: 95: if( s_Local_Key_FSM.key_BUS & 0x02 ) s_Local_Key_FSM.a_key_count[1]++;
  7569  0012B4  0100               	movlb	0	; () banked
  7570  0012B6  A391               	btfss	_s_Local_Key_FSM& (0+255),1,b	;volatile
  7571  0012B8  D004               	goto	i2l3171
  7572                           
  7573                           ; BSR set to: 0
  7574  0012BA  0100               	movlb	0	; () banked
  7575  0012BC  4B96               	infsnz	(_s_Local_Key_FSM+5)& (0+255),f,b	;volatile
  7576  0012BE  2B97               	incf	(_s_Local_Key_FSM+6)& (0+255),f,b	;volatile
  7577  0012C0  D000               	goto	i2l3171
  7578  0012C2                     i2l3171:
  7579                           
  7580                           ; BSR set to: 0
  7581                           ;Key.c: 96: if( s_Local_Key_FSM.key_BUS & 0x04 ) s_Local_Key_FSM.a_key_count[2]++;
  7582  0012C2  0100               	movlb	0	; () banked
  7583  0012C4  A591               	btfss	_s_Local_Key_FSM& (0+255),2,b	;volatile
  7584  0012C6  D004               	goto	i2l3175
  7585                           
  7586                           ; BSR set to: 0
  7587  0012C8  0100               	movlb	0	; () banked
  7588  0012CA  4B98               	infsnz	(_s_Local_Key_FSM+7)& (0+255),f,b	;volatile
  7589  0012CC  2B99               	incf	(_s_Local_Key_FSM+8)& (0+255),f,b	;volatile
  7590  0012CE  D000               	goto	i2l3175
  7591  0012D0                     i2l3175:
  7592                           
  7593                           ; BSR set to: 0
  7594                           ;Key.c: 97: if( s_Local_Key_FSM.key_BUS & 0x08 ) s_Local_Key_FSM.a_key_count[3]++;
  7595  0012D0  0100               	movlb	0	; () banked
  7596  0012D2  A791               	btfss	_s_Local_Key_FSM& (0+255),3,b	;volatile
  7597  0012D4  D004               	goto	i2l3179
  7598                           
  7599                           ; BSR set to: 0
  7600  0012D6  0100               	movlb	0	; () banked
  7601  0012D8  4B9A               	infsnz	(_s_Local_Key_FSM+9)& (0+255),f,b	;volatile
  7602  0012DA  2B9B               	incf	(_s_Local_Key_FSM+10)& (0+255),f,b	;volatile
  7603  0012DC  D000               	goto	i2l3179
  7604  0012DE                     i2l3179:
  7605                           
  7606                           ; BSR set to: 0
  7607                           ;Key.c: 98: if( s_Local_Key_FSM.key_BUS & 0x10 ) s_Local_Key_FSM.a_key_count[4]++;
  7608  0012DE  0100               	movlb	0	; () banked
  7609  0012E0  A991               	btfss	_s_Local_Key_FSM& (0+255),4,b	;volatile
  7610  0012E2  D004               	goto	i2l3183
  7611                           
  7612                           ; BSR set to: 0
  7613  0012E4  0100               	movlb	0	; () banked
  7614  0012E6  4B9C               	infsnz	(_s_Local_Key_FSM+11)& (0+255),f,b	;volatile
  7615  0012E8  2B9D               	incf	(_s_Local_Key_FSM+12)& (0+255),f,b	;volatile
  7616  0012EA  D000               	goto	i2l3183
  7617  0012EC                     i2l3183:
  7618                           
  7619                           ; BSR set to: 0
  7620                           ;Key.c: 99: if( s_Local_Key_FSM.key_BUS & 0x20 ) s_Local_Key_FSM.a_key_count[5]++;
  7621  0012EC  0100               	movlb	0	; () banked
  7622  0012EE  AB91               	btfss	_s_Local_Key_FSM& (0+255),5,b	;volatile
  7623  0012F0  0012               	return	
  7624                           
  7625                           ; BSR set to: 0
  7626  0012F2  0100               	movlb	0	; () banked
  7627  0012F4  4B9E               	infsnz	(_s_Local_Key_FSM+13)& (0+255),f,b	;volatile
  7628  0012F6  2B9F               	incf	(_s_Local_Key_FSM+14)& (0+255),f,b	;volatile
  7629  0012F8  0012               	return	
  7630                           
  7631                           ; BSR set to: 0
  7632                           
  7633                           ; BSR set to: 0
  7634  0012FA  0012               	return		;funcret
  7635  0012FC                     __end_of_Key_ScanFSM:
  7636                           	opt stack 0
  7637                           pclatu	equ	0xFFB
  7638                           pclath	equ	0xFFA
  7639                           tblptru	equ	0xFF8
  7640                           tblptrh	equ	0xFF7
  7641                           tblptrl	equ	0xFF6
  7642                           tablat	equ	0xFF5
  7643                           prodh	equ	0xFF4
  7644                           prodl	equ	0xFF3
  7645                           intcon	equ	0xFF2
  7646                           postinc0	equ	0xFEE
  7647                           fsr0h	equ	0xFEA
  7648                           fsr0l	equ	0xFE9
  7649                           wreg	equ	0xFE8
  7650                           indf1	equ	0xFE7
  7651                           postinc1	equ	0xFE6
  7652                           postdec1	equ	0xFE5
  7653                           fsr1h	equ	0xFE2
  7654                           fsr1l	equ	0xFE1
  7655                           indf2	equ	0xFDF
  7656                           postinc2	equ	0xFDE
  7657                           postdec2	equ	0xFDD
  7658                           plusw2	equ	0xFDB
  7659                           fsr2h	equ	0xFDA
  7660                           fsr2l	equ	0xFD9
  7661                           status	equ	0xFD8
  7662                           
  7663 ;; *************** function _Key_Scan *****************
  7664 ;; Defined at:
  7665 ;;		line 69 in file "_01_USER/Key.c"
  7666 ;; Parameters:    Size  Location     Type
  7667 ;;		None
  7668 ;; Auto vars:     Size  Location     Type
  7669 ;;		None
  7670 ;; Return value:  Size  Location     Type
  7671 ;;		None               void
  7672 ;; Registers used:
  7673 ;;		wreg, status,2, status,0
  7674 ;; Tracked objects:
  7675 ;;		On entry : 0/0
  7676 ;;		On exit  : 0/0
  7677 ;;		Unchanged: 0/0
  7678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7683 ;;Total ram usage:        0 bytes
  7684 ;; Hardware stack levels used:    1
  7685 ;; This function calls:
  7686 ;;		Nothing
  7687 ;; This function is called by:
  7688 ;;		_Key_ScanFSM
  7689 ;; This function uses a non-reentrant model
  7690 ;;
  7691                           
  7692                           	psect	text52
  7693  001502                     __ptext52:
  7694                           	opt stack 0
  7695  001502                     _Key_Scan:
  7696                           	opt stack 23
  7697                           
  7698                           ;Key.c: 71: s_Local_Key_FSM.key_BUS = 0x00;
  7699                           
  7700                           ; BSR set to: 0
  7701                           ;incstack = 0
  7702  001502  0E00               	movlw	0
  7703  001504  0100               	movlb	0	; () banked
  7704  001506  6F91               	movwf	_s_Local_Key_FSM& (0+255),b	;volatile
  7705                           
  7706                           ; BSR set to: 0
  7707                           ;Key.c: 73: if( RC1 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 0) ;
  7708  001508  B282               	btfsc	3970,1,c	;volatile
  7709  00150A  D003               	goto	i2l2769
  7710                           
  7711                           ; BSR set to: 0
  7712  00150C  0100               	movlb	0	; () banked
  7713  00150E  8191               	bsf	_s_Local_Key_FSM& (0+255),0,b	;volatile
  7714  001510  D000               	goto	i2l2769
  7715  001512                     i2l2769:
  7716                           
  7717                           ; BSR set to: 0
  7718                           ;Key.c: 74: if( RF1 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 1) ;
  7719  001512  B285               	btfsc	3973,1,c	;volatile
  7720  001514  D003               	goto	i2l2773
  7721                           
  7722                           ; BSR set to: 0
  7723  001516  0100               	movlb	0	; () banked
  7724  001518  8391               	bsf	_s_Local_Key_FSM& (0+255),1,b	;volatile
  7725  00151A  D000               	goto	i2l2773
  7726  00151C                     i2l2773:
  7727                           
  7728                           ; BSR set to: 0
  7729                           ;Key.c: 75: if( RF2 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 2) ;
  7730  00151C  B485               	btfsc	3973,2,c	;volatile
  7731  00151E  D003               	goto	i2l2777
  7732                           
  7733                           ; BSR set to: 0
  7734  001520  0100               	movlb	0	; () banked
  7735  001522  8591               	bsf	_s_Local_Key_FSM& (0+255),2,b	;volatile
  7736  001524  D000               	goto	i2l2777
  7737  001526                     i2l2777:
  7738                           
  7739                           ; BSR set to: 0
  7740                           ;Key.c: 76: if( RA4 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 3) ;
  7741  001526  B880               	btfsc	3968,4,c	;volatile
  7742  001528  D003               	goto	i2l2781
  7743                           
  7744                           ; BSR set to: 0
  7745  00152A  0100               	movlb	0	; () banked
  7746  00152C  8791               	bsf	_s_Local_Key_FSM& (0+255),3,b	;volatile
  7747  00152E  D000               	goto	i2l2781
  7748  001530                     i2l2781:
  7749                           
  7750                           ; BSR set to: 0
  7751                           ;Key.c: 77: if( RA5 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 4) ;
  7752  001530  BA80               	btfsc	3968,5,c	;volatile
  7753  001532  D003               	goto	i2l2785
  7754                           
  7755                           ; BSR set to: 0
  7756  001534  0100               	movlb	0	; () banked
  7757  001536  8991               	bsf	_s_Local_Key_FSM& (0+255),4,b	;volatile
  7758  001538  D000               	goto	i2l2785
  7759  00153A                     i2l2785:
  7760                           
  7761                           ; BSR set to: 0
  7762                           ;Key.c: 78: if( RF3 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 5) ;
  7763  00153A  B685               	btfsc	3973,3,c	;volatile
  7764  00153C  0012               	return	
  7765                           
  7766                           ; BSR set to: 0
  7767  00153E  0100               	movlb	0	; () banked
  7768  001540  8B91               	bsf	_s_Local_Key_FSM& (0+255),5,b	;volatile
  7769  001542  0012               	return	
  7770                           
  7771                           ; BSR set to: 0
  7772                           
  7773                           ; BSR set to: 0
  7774  001544  0012               	return		;funcret
  7775  001546                     __end_of_Key_Scan:
  7776                           	opt stack 0
  7777  0000                     pclatu	equ	0xFFB
  7778                           pclath	equ	0xFFA
  7779                           tblptru	equ	0xFF8
  7780                           tblptrh	equ	0xFF7
  7781                           tblptrl	equ	0xFF6
  7782                           tablat	equ	0xFF5
  7783                           prodh	equ	0xFF4
  7784                           prodl	equ	0xFF3
  7785                           intcon	equ	0xFF2
  7786                           postinc0	equ	0xFEE
  7787                           fsr0h	equ	0xFEA
  7788                           fsr0l	equ	0xFE9
  7789                           wreg	equ	0xFE8
  7790                           indf1	equ	0xFE7
  7791                           postinc1	equ	0xFE6
  7792                           postdec1	equ	0xFE5
  7793                           fsr1h	equ	0xFE2
  7794                           fsr1l	equ	0xFE1
  7795                           indf2	equ	0xFDF
  7796                           postinc2	equ	0xFDE
  7797                           postdec2	equ	0xFDD
  7798                           plusw2	equ	0xFDB
  7799                           fsr2h	equ	0xFDA
  7800                           fsr2l	equ	0xFD9
  7801                           status	equ	0xFD8
  7802                           pclatu	equ	0xFFB
  7803                           pclath	equ	0xFFA
  7804                           tblptru	equ	0xFF8
  7805                           tblptrh	equ	0xFF7
  7806                           tblptrl	equ	0xFF6
  7807                           tablat	equ	0xFF5
  7808                           prodh	equ	0xFF4
  7809                           prodl	equ	0xFF3
  7810                           intcon	equ	0xFF2
  7811                           postinc0	equ	0xFEE
  7812                           fsr0h	equ	0xFEA
  7813                           fsr0l	equ	0xFE9
  7814                           wreg	equ	0xFE8
  7815                           indf1	equ	0xFE7
  7816                           postinc1	equ	0xFE6
  7817                           postdec1	equ	0xFE5
  7818                           fsr1h	equ	0xFE2
  7819                           fsr1l	equ	0xFE1
  7820                           indf2	equ	0xFDF
  7821                           postinc2	equ	0xFDE
  7822                           postdec2	equ	0xFDD
  7823                           plusw2	equ	0xFDB
  7824                           fsr2h	equ	0xFDA
  7825                           fsr2l	equ	0xFD9
  7826                           status	equ	0xFD8
  7827                           
  7828                           	psect	rparam
  7829  0000                     pclatu	equ	0xFFB
  7830                           pclath	equ	0xFFA
  7831                           tblptru	equ	0xFF8
  7832                           tblptrh	equ	0xFF7
  7833                           tblptrl	equ	0xFF6
  7834                           tablat	equ	0xFF5
  7835                           prodh	equ	0xFF4
  7836                           prodl	equ	0xFF3
  7837                           intcon	equ	0xFF2
  7838                           postinc0	equ	0xFEE
  7839                           fsr0h	equ	0xFEA
  7840                           fsr0l	equ	0xFE9
  7841                           wreg	equ	0xFE8
  7842                           indf1	equ	0xFE7
  7843                           postinc1	equ	0xFE6
  7844                           postdec1	equ	0xFE5
  7845                           fsr1h	equ	0xFE2
  7846                           fsr1l	equ	0xFE1
  7847                           indf2	equ	0xFDF
  7848                           postinc2	equ	0xFDE
  7849                           postdec2	equ	0xFDD
  7850                           plusw2	equ	0xFDB
  7851                           fsr2h	equ	0xFDA
  7852                           fsr2l	equ	0xFD9
  7853                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         181
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     50      71
    BANK0           160     19     125
    BANK1           256      0      70
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    VerifyCRC@DataBuff	PTR unsigned char  size(2) Largest target is 10
		 -> ga_RS485_ReceiveBuff(BANK0[10]), ga_RS485_SendBuff(BANK0[10]), 

    RS485_ManageMessage@DataBuff	PTR unsigned char  size(2) Largest target is 10
		 -> ga_RS485_ReceiveBuff(BANK0[10]), 

    RS485_SendDate@date_dress	PTR unsigned char  size(2) Largest target is 10
		 -> ga_RS485_SendBuff(BANK0[10]), 


Critical Paths under _main in COMRAM

    _Timer0_Init->_SetTimer0
    _ShowResult->_TM1640_Show_integer
    _TM1640_Show_integer->_TM1640_Writer_Dates
    _TM1640_Show_integer->___lwdiv
    _TM1640_Writer_Dates->___lwmod
    _Relay_Control->_delay_ms
    _delay_ms->_delay1ms
    _RS485_SendDate->_VerifyCRC
    _GetADC6->___ftmul
    ___lwtoft->___ftpack
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul
    _RS485_Init->_Open1USART
    _RS485_ManageMessage->_VerifyCRC
    _VerifyCRC->___lldiv
    _Key_ManageMessage->_Key_ReadFSM
    _Init_TM1640->_TM1640_Writer_Byte
    _TM1640_Writer_Byte->_TM1640_Delay
    _TM1640_Stop->_TM1640_Delay
    _TM1640_Start->_TM1640_Delay
    _ADC6_Init->_OpenADC

Critical Paths under _Sys_Cyc in COMRAM

    _Sys_Cyc->i2___llmod
    _Pulse_1Khz->_Delay_1Khz

Critical Paths under _main in BANK0

    _main->_Run
    _GetADC6->___ftdiv
    _ManageMessage->_RS485_ManageMessage

Critical Paths under _Sys_Cyc in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Sys_Cyc in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Sys_Cyc in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Sys_Cyc in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Sys_Cyc in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Sys_Cyc in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Sys_Cyc in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Sys_Cyc in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Sys_Cyc in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Sys_Cyc in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Sys_Cyc in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Sys_Cyc in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Sys_Cyc in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Sys_Cyc in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Sys_Cyc in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Sys_Cyc in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   22218
                          _ADC6_Init
                        _GPIO_Config
                        _Init_TM1640
                           _Key_Init
                      _ManageMessage
                         _RS485_Init
                         _Relay_Init
                                _Run
                           _SCR_Init
                         _ShowResult
                        _Timer0_Init
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0     170
                          _SetTimer0
 ---------------------------------------------------------------------------------
 (2) _SetTimer0                                            4     2      2     170
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ShowResult                                           1     1      0    4913
                                             33 COMRAM     1     1      0
                        _LED_Control
                _TM1640_Show_integer
                _TM1640_Writer_Dates
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     415
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _TM1640_Show_integer                                  2     0      2    2992
                                             31 COMRAM     2     0      2
                _TM1640_Writer_Dates
                            ___lwdiv
                            ___lwmod
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     671
                                             24 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     546
                                             24 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _TM1640_Writer_Dates                                  2     1      1    1170
                                             29 COMRAM     2     1      1
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _LED_Control                                          2     1      1     336
                                             24 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _SCR_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Run                                                  4     4      0   12311
                                             15 BANK0      4     4      0
                            _GetADC6
                     _RS485_SendDate
                      _Relay_Control
 ---------------------------------------------------------------------------------
 (2) _Relay_Control                                        2     1      1     464
                                             29 COMRAM     2     1      1
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             2     0      2     224
                                             27 COMRAM     2     0      2
                           _delay1ms
 ---------------------------------------------------------------------------------
 (4) _delay1ms                                             3     3      0     138
                                             24 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _RS485_SendDate                                       4     1      3    2467
                                              0 BANK0      4     1      3
                          _VerifyCRC
 ---------------------------------------------------------------------------------
 (2) _GetADC6                                              0     0      0    9380
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2512
                                             32 COMRAM     3     0      3
                            _ReadADC (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3314
                                             35 COMRAM    15     9      6
                            _ReadADC (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3554
                                              0 BANK0     15     9      6
                            _ReadADC (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2404
                                             24 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) _ReadADC                                              4     2      2       0
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Relay_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RS485_Init                                           0     0      0     284
                         _Open1USART
 ---------------------------------------------------------------------------------
 (2) _Open1USART                                           3     1      2     284
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _ManageMessage                                        0     0      0    4008
                  _Key_ManageMessage
                _RS485_ManageMessage
 ---------------------------------------------------------------------------------
 (2) _RS485_ManageMessage                                 11     8      3    3251
                                              0 BANK0     11     8      3
                          _VerifyCRC
 ---------------------------------------------------------------------------------
 (3) _VerifyCRC                                           13    10      3    1941
                                             37 COMRAM    13    10      3
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     792
                                             24 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     395
                                             24 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _Key_ManageMessage                                    4     4      0     757
                                             30 COMRAM     4     4      0
                        _Key_ReadFSM
                       _Key_ResetFSM
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     223
                                             24 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) _Key_ResetFSM                                         1     1      0      67
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Key_ReadFSM                                          6     6      0     467
                                             24 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _Key_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_TM1640                                          0     0      0     272
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
 ---------------------------------------------------------------------------------
 (3) _TM1640_Writer_Byte                                   2     2      0     136
                                             26 COMRAM     2     2      0
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (3) _TM1640_Stop                                          0     0      0      68
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (3) _TM1640_Start                                         0     0      0      68
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (4) _TM1640_Delay                                         2     2      0      68
                                             24 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC6_Init                                            0     0      0     260
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     260
                                             24 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Sys_Cyc                                             15    15      0     865
                                              9 COMRAM    15    15      0
                        _Key_ScanFSM
                         _Pulse_1Khz
                      i2_LED_Control
                        i2_SetTimer0
                          i2___llmod
 ---------------------------------------------------------------------------------
 (7) i2___llmod                                            9     1      8     315
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) i2_SetTimer0                                          4     2      2      94
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) i2_LED_Control                                        2     1      1     184
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (7) _Pulse_1Khz                                           2     2      0     227
                                              3 COMRAM     2     2      0
                         _Delay_1Khz
 ---------------------------------------------------------------------------------
 (8) _Delay_1Khz                                           3     3      0     138
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (7) _Key_ScanFSM                                          0     0      0       0
                           _Key_Scan
 ---------------------------------------------------------------------------------
 (8) _Key_Scan                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC6_Init
     _OpenADC
   _GPIO_Config
   _Init_TM1640
     _TM1640_Start
       _TM1640_Delay
     _TM1640_Stop
       _TM1640_Delay
     _TM1640_Writer_Byte
       _TM1640_Delay
   _Key_Init
   _ManageMessage
     _Key_ManageMessage
       _Key_ReadFSM
       _Key_ResetFSM
       ___lbmod
     _RS485_ManageMessage
       _VerifyCRC
         ___lldiv
         ___llmod
   _RS485_Init
     _Open1USART
   _Relay_Init
   _Run
     _GetADC6
       _BusyADC
       _ConvertADC
       _ReadADC
       ___ftdiv
         _ReadADC (ARG)
         ___ftmul (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___ftmul
         _ReadADC (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___lwtoft
         _ReadADC (ARG)
         ___ftpack (ARG)
     _RS485_SendDate
       _VerifyCRC
         ___lldiv
         ___llmod
     _Relay_Control
       _delay_ms
         _delay1ms
   _SCR_Init
   _ShowResult
     _LED_Control
     _TM1640_Show_integer
       _TM1640_Writer_Dates
         _TM1640_Start
           _TM1640_Delay
         _TM1640_Stop
           _TM1640_Delay
         _TM1640_Writer_Byte
           _TM1640_Delay
         ___lwmod (ARG)
       ___lwdiv
       ___lwmod
       ___wmul (ARG)
     _TM1640_Writer_Dates
       _TM1640_Start
         _TM1640_Delay
       _TM1640_Stop
         _TM1640_Delay
       _TM1640_Writer_Byte
         _TM1640_Delay
       ___lwmod (ARG)
     ___wmul
   _Timer0_Init
     _SetTimer0

 _Sys_Cyc (ROOT)
   _Key_ScanFSM
     _Key_Scan
   _Pulse_1Khz
     _Delay_1Khz
   i2_LED_Control
   i2_SetTimer0
   i2___llmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      46       7       27.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     13      7D       5       78.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     32      47       1       74.7%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10A      12        0.0%
DATA                 0      0     10A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Dec 24 21:46:05 2015

                 ?_TM1640_Stop 0001   __size_of_TM1640_Writer_Dates 0022                  ?_TM1640_Delay 0001  
          ___wmul@multiplicand 001B                    __CFG_BORV$3 000000                  ?_TM1640_Start 0001  
                 _gf_ADC6_Buff 0037                   __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000  
                 __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000                   __CFG_CP4$OFF 000000  
                 __CFG_CP5$OFF 000000                   __CFG_CP6$OFF 000000                   __CFG_CP7$OFF 000000  
                          l210 0E5C                            l202 0DFE                            l211 0E78  
                          l205 0E20                            l134 05F6                            l160 07D4  
                          l234 0AEC                            l512 0FE0                            l370 1564  
                          l515 0FFA                            l509 0FC6                            l630 1396  
                          l384 1822                            l369 154E                            l693 122A  
                          l695 1236                            l696 1238                            l689 120E  
                          _GIE 007F97                   __CFG_CPB$OFF 000000                            _RB0 007C08  
                          _RB1 007C09                            _RC0 007C10                            _RA4 007C04  
                          _RC1 007C11                            _RA5 007C05                            _RD0 007C18  
                          _RD1 007C19                            _RD2 007C1A                            _RD3 007C1B  
                          _RD4 007C1C                            _RF1 007C29                            _RD5 007C1D  
                          _RF2 007C2A                            _RD6 007C1E                            _RF3 007C2B  
                          _RD7 007C1F                   __CFG_CPD$OFF 000000                            _PSA 007EAB  
                          _Run 1108       RS485_SendDate@date_dress 00BA                            prod 000FF3  
     RS485_SendDate@date_lenth 00BC                   ?_LED_Control 0019                            wreg 000FE8  
                 ?_GPIO_Config 0001                     _TXSTA1bits 000FAC           ?_TM1640_Show_integer 0020  
                ?_Key_ResetFSM 0001                    ?_RS485_Init 0001                  ??_Key_ReadFSM 0019  
                 ___ftdiv@cntr 00C3                  ??_Key_ScanFSM 0001                           ?_Run 0001  
                 ___ftdiv@sign 00C8                           l1019 0DA4                           l3001 14A2  
                         l1218 1298                           l1155 0FA0                           l1083 09A6  
                         l3003 14A6                           l1228 13DC                           l1165 1086  
                         l3009 14B8                           l2403 15B6                           l3051 0FE6  
                         l3045 0FCC                           l3063 101A                           l3057 1000  
                         l2523 17F8                           l3155 0ED8                           l2381 181C  
                         l2373 1812                           l2445 157C                           l2541 0610  
                         l2525 17FE                           l2439 1568                           l2391 15A0  
                         l3159 0F1A                           l2545 0642                           l2537 05CC  
                         l2529 0574                           l2801 075A                           l3521 0D18  
                         l2379 181A                           l2571 0704                           l2555 066E  
                         l2539 05E2                           l2547 0658                           l2715 164E  
                         l2707 1634                           l2803 0760                           l2395 15AE  
                         l2387 1592                           l2731 126E                           l2717 1654  
                         l2813 07A6                           l3533 0D6C                           l3525 0D28  
                         l3613 08C8                           l2567 0700                           l2559 067A  
                         l2823 07C6                           l2815 07AC                           l3543 0DAC  
                         l3535 0D8C                           l3527 0D34                           l3711 0E28  
                         l2399 15B2                           l2727 125C                           l2751 13BA  
                         l2577 1442                           l2841 0828                           l2833 07EE  
                         l3561 0F56                           l3537 0D98                           l3529 0D54  
                         l2729 1266                           l2579 1470                           l2819 07B8  
                         l3571 0F90                           l3563 0F5E                           l3619 0902  
                         l3715 0E80                           l2739 128C                           l2755 13D0  
                         l2747 13A8                           l2853 0870                           l2845 0836  
                         l2837 080A                           l2829 07E0                           l3581 1048  
                         l3725 01F4                           l3549 0DBE                           l2749 13B2  
                         l3813 1616                           l3559 0F48                           l3583 1050  
                         l3751 02E4                           l3743 025C                           l2871 11FE  
                         l3639 0964                           l2857 087A                           l2849 0852  
                         l3593 09F6                           l3761 0370                           l3737 0244  
                         l3649 09B8                           l3665 0B58                           l2859 0888  
                         l3587 1076                           l3579 103A                           l2891 122E  
                         l2883 121A                           l2875 1206                           l2867 11F4  
                         l3683 0B9E                           l3659 0B30                           l3597 0A60  
                         l3765 0398                           l3757 034A                           l3693 0BCC  
                         l3781 117C                           l2887 1222                           l2879 1212  
                         l3687 0BB4                           l3679 0B8C                           l3791 1114  
                         l3697 0BE2                           l3689 0BBA                           l2993 148C  
                         l2995 1490                           l2979 1662                           l3797 1136  
                         _T0CS 007EAD                           u2130 059A                           _T0SE 007EAC  
                         u2140 05B8                           u2300 187C                           u2214 06C8  
                         u2150 062E                           u2215 06C4                           u2224 06DC  
                         u2225 06D8                           u4011 08DE                           u4041 0B18  
                         u4061 0B40                           _IPEN 007E87                           u3991 08A4  
     RS485_ManageMessage@CRC_H 00C2       RS485_ManageMessage@CRC_L 00C3                  ??_Init_TM1640 001D  
                   _Delay_1Khz 15BC                           _main 15F4                   ___ftpack@arg 0019  
                 ___ftpack@exp 001C                           fsr0h 000FEA                           fsr1h 000FE2  
                         fsr0l 000FE9                           fsr2h 000FDA                           indf1 000FE7  
                         fsr1l 000FE1                           indf2 000FDF                           fsr2l 000FD9  
                         pclat 000FFA                __end_of_GetADC6 11E2                           prodh 000FF4  
                         prodl 000FF3                           start 01A2                  __CFG_IESO$OFF 000000  
                __CFG_FOSC$HS1 000000                  __CFG_MCLRE$ON 000000                   ___ftmul@cntr 0031  
                 ___param_bank 000010                   ___ftmul@sign 0032                __end_of_BusyADC 1882  
              __end_of_ReadADC 1874                 ??_TM1640_Delay 0019                __end_of_OpenADC 139A  
                        ??_Run 00C9                ??_ManageMessage 0033                 ??_TM1640_Start 001B  
                __CFG_RETEN$ON 000000                          ?_main 0001                __end_of___lbmod 165A  
              __end_of_Sys_Cyc 01A2                __end_of___ftdiv 09E0                __end_of___lldiv 0FB2  
              __end_of___ftmul 0C0A                __end_of___llmod 1098                          _RC1IF 007CF5  
                        _T0PS0 007EA8                          _T0PS1 007EA9                          _T0PS2 007EAA  
              __end_of___lwdiv 12A2                __end_of___lwmod 13E6                          i2l311 0168  
                        i2l304 00E8                          i2l308 013A              __end_of_ADC6_Init 1854  
                        _TMR0H 000FD7                          _TMR0L 000FD6                 ??_Key_ResetFSM 0019  
        ??_TM1640_Show_integer 0022                  __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000  
                __CFG_WRT2$OFF 000000                  __CFG_WRT3$OFF 000000                  __CFG_WRT4$OFF 000000  
               __CFG_EBRT0$OFF 000000                  __CFG_WRT5$OFF 000000                 __CFG_EBRT1$OFF 000000  
                __CFG_WRT6$OFF 000000                 __CFG_EBRT2$OFF 000000                  __CFG_WRT7$OFF 000000  
               __CFG_EBRT3$OFF 000000                 __CFG_EBRT4$OFF 000000                 __CFG_FCMEN$OFF 000000  
               __CFG_EBRT5$OFF 000000                 __CFG_EBRT6$OFF 000000                 __CFG_EBRT7$OFF 000000  
             __end_of_SCR_Init 189C                  __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000  
                __CFG_WRTD$OFF 000000                 __CFG_EBRTB$OFF 000000                  ___ftpack@sign 001D  
                   _ConvertADC 189C                          tablat 000FF5                          plusw2 000FDB  
                        status 000FD8             _TM1640_Writer_Byte 1546            __end_of_Key_ReadFSM 0710  
          __end_of_Key_ScanFSM 12FC             __size_ofi2___llmod 0070                __initialization 13E6  
          __end_of_Init_TM1640 172E            __size_of_RS485_Init 0018                   __end_of_main 1628  
          ?_TM1640_Writer_Byte 0001               __end_of_Key_Init 17DA               __end_of_Key_Scan 1546  
        i2LED_Control@_LED_num 0002                     _Open1USART 11E2                         ??_main 0033  
                __activetblptr 000000  RS485_ManageMessage@date_lenth 00BC           ??_TM1640_Writer_Byte 001B  
                       _ADCON0 000FC2                         _ADCON1 000FC1                         _ADCON2 000FC0  
             ___llmod@dividend 0019                     _Relay_Init 1882                         _ADRESH 000FC4  
                       _ADRESL 000FC3                         _T08BIT 007EAE                         _ANSEL4 00792C  
                       _ANSEL6 00792E                         _ANSEL7 00792F                         _ANSEL8 007920  
             __end_of___ftpack 0DCE                      ??_GetADC6 0033                __CFG_BBSIZ$BB2K 000000  
                       i2l1165 10F6                         i2l3201 131A                         i2l3203 1326  
                       i2l3213 1338                         i2l3207 1330                         i2l3215 133E  
                       i2l3171 12C2                         i2l3091 15EA                         i2l3083 15D8  
                       i2l3251 14D0                         i2l3315 00D0                         i2l3323 011E  
                       i2l3261 14EA                         i2l3253 14D4                         i2l3237 1692  
                       i2l3317 00DC                 __CFG_WDTEN$OFF 000000                         i2l3183 12EC  
                       i2l3175 12D0                         i2l3167 12B4                         i2l3087 15E6  
                       i2l3095 15EE                         i2l3079 15CA                         i2l3193 130C  
                       i2l3281 10E6                         i2l3273 10AA                         i2l3337 0158  
                       i2l3179 12DE                         i2l3267 14FC                         i2l3259 14E6  
                       i2l3275 10B8                         i2l3277 10C0                         i2l3199 1314  
                       i2l2781 1530                         i2l2773 151C                         i2l2785 153A  
                       i2l2777 1526                         i2l2769 1512                  SetTimer0@_tmr 0019  
                       _RCREG1 000FAE               __end_of___lwtoft 1708                         _RCSTA1 000FAB  
                  ?_Delay_1Khz 0001                         _TMR0IE 007F95                         _SPBRG1 000FAF  
                       _TMR0IF 007F92                         _TMR0ON 007EAF                         _TRISB0 007C98  
                       _TRISB1 007C99                         _TRISC0 007CA0                         _TRISB2 007C9A  
                       _TRISA4 007C94                         _TRISC1 007CA1                         _TRISA5 007C95  
                       _TRISD0 007CA8                         _TRISD1 007CA9                         _TRISD2 007CAA  
                       _TRISD3 007CAB                         _TRISD4 007CAC                         _TRISC6 007CA6  
                TM1640_Delay@i 001A                         _TRISF1 007CB9                         _TRISD5 007CAD  
                       _TRISC7 007CA7                         _TRISF2 007CBA                         _TRISD6 007CAE  
                       _TRISF3 007CBB                         _TRISD7 007CAF                      ??_BusyADC 0019  
                       _TXREG1 000FAD                      ??_ReadADC 001B                         _TXSTA1 000FAC  
             __end_of_delay1ms 15BC               __end_of_delay_ms 1810                  ??_Timer0_Init 001D  
                    ??_OpenADC 001B                   Sys_Cyc@_Byte 003B         TM1640_Writer_Byte@Date 001B  
                 Sys_Cyc@_flag 003C                 __CFG_XINST$OFF 000000                   Sys_Cyc@_temp 0018  
       TM1640_Writer_Byte@mask 001C        __size_of_RS485_SendDate 00C2                         ___wmul 16BA  
               __CFG_STVREN$ON 000000                      ??___lbmod 001A                      ??_Sys_Cyc 000A  
                    ??___ftdiv 00C0                      ??___lldiv 0021                      ??___ftmul 002A  
                    ??___llmod 0021           Sys_Cyc@_overturn_LED 003D                      ??___lwdiv 001D  
           __size_of_SetTimer0 0030                      ??___lwmod 001D                     _ShowResult 0E90  
           LED_Control@_switch 0019                         clear_0 13EC                         clear_1 13F8  
                       clear_2 1404           __size_of_TM1640_Stop 0024   __size_of_RS485_ManageMessage 03C8  
        ___ftmul@f3_as_product 002E                     _Pulse_1Khz 12FC             __size_of_VerifyCRC 0128  
            __end_ofi2___llmod 1108                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8           __size_of_LED_Control 0044           __size_of_GPIO_Config 0002  
                  _Key_ReadFSM 056E            _TM1640_Writer_Dates 179A                    ?_ConvertADC 0001  
         __end_of_TM1640_Delay 182A                    _Key_ScanFSM 12A2  RS485_ManageMessage@from_dress 00C4  
              ___lbmod@divisor 0019           __end_of_TM1640_Start 179A                     __accesstop 0060  
      __end_of__initialization 142A                ___lbmod@counter 001B                    _Init_TM1640 1708  
                 ?i2_SetTimer0 0001                  ___rparam_used 000001                     ___ftdiv@f1 00BA  
                   ___ftdiv@f2 00BD                     ___ftdiv@f3 00C4              i2___llmod@divisor 0005  
             Pulse_1Khz@_pulse 0005              i2___llmod@counter 0009           __end_of_Key_ResetFSM 147A  
                   ___ftmul@f1 0024                     ___ftmul@f2 0027                 __pcstackCOMRAM 0001  
       __size_ofi2_LED_Control 0044                   __pidataBANK0 1854                  Key_ResetFSM@t 0019  
                    ?_SCR_Init 0001           ?_TM1640_Writer_Dates 001E            __end_of_Timer0_Init 1752  
                  ?_Open1USART 0019                     ___lwtoft@c 0021            __size_of_Delay_1Khz 0038  
       __size_of_Relay_Control 0076                   ??_RS485_Init 001C                    ?_Relay_Init 0001  
            __end_of_SetTimer0 168A                     __pbssBANK0 0060                     __pbssBANK1 0100  
                    ?_Key_Init 0001                      ?_Key_Scan 0001                    _ReceiveBuff 0072  
              __CFG_PLLCFG$OFF 000000        TM1640_Writer_Dates@Addr 001F        TM1640_Writer_Dates@Date 001E  
            __end_of_VerifyCRC 0B08          ??_TM1640_Writer_Dates 001F                        ?___wmul 0019  
                   ??_SCR_Init 0019             __end_of_RS485_Init 1842                    ?_ShowResult 0001  
          LED_Control@_LED_num 001A            __size_of_ConvertADC 0004                      ?___ftpack 0019  
                    ?___lwtoft 0021               Open1USART@config 001B                        _LED_BUS 003E  
                  ?_Pulse_1Khz 0001                      ?_delay1ms 0001                      ?_delay_ms 001C  
                i2_LED_Control 14BE                        _SPBRGH1 000FD4                      _ADC6_Init 1842  
            _ga_RS485_SendBuff 00B0                        _GetADC6 1176                     ??_Key_Init 0019  
                   ??_Key_Scan 0001                  _Relay_Control 0FB2            __size_of_Open1USART 0064  
                      _BusyADC 1874                        _ReadADC 1864                __CFG_PWRTEN$OFF 000000  
                      _OpenADC 134C                        __Hparam 0000                    _Timer0_Init 172E  
                      __Lparam 0000                 _RS485_SendDate 0DCE                        ___lbmod 1628  
                      _Sys_Cyc 0008                        ___ftdiv 088E                        ___lldiv 0F26  
              __size_of___wmul 0028                        ___ftmul 0B08                        ___llmod 1028  
                      ___lwdiv 1246                        ___lwmod 139A            __size_of_Relay_Init 000E  
  __end_of_TM1640_Show_integer 0D08                        __pcinit 13E6                     ??___ftpack 001E  
                      __ramtop 1000          __end_of_ManageMessage 17F6                        __ptext0 15F4  
                      __ptext1 172E                        __ptext2 165A                        __ptext3 0E90  
                      __ptext4 16BA                        __ptext5 0C0A                        __ptext6 139A  
                      __ptext7 1246                        __ptext8 179A                        __ptext9 147A  
                      _gs_Menu 0060                     ??___lwtoft 0024                   __size_of_Run 006E  
                   ??_delay1ms 0019          __size_of_TM1640_Delay 001A              __CFG_MSSPMSK$MSK7 000000  
               ?i2_LED_Control 0001                     ??_delay_ms 001E          __size_of_TM1640_Start 0024  
                   ?_ADC6_Init 0001                 OpenADC@config2 0019                 OpenADC@config3 001A  
         end_of_initialization 142A                   ??_Delay_1Khz 0001            __size_of_ShowResult 0096  
               ?_Relay_Control 001E          __size_of_Key_ResetFSM 004A            _RS485_ManageMessage 01A6  
              ___lldiv@divisor 001D         __end_of_RS485_SendDate 0E90              _Key_ManageMessage 0710  
              ___lldiv@counter 0025            __size_of_Pulse_1Khz 0050               _gs_Handle_Switch 0041  
         __size_ofi2_SetTimer0 0030             ?_Key_ManageMessage 0001                        postdec1 000FE5  
                      postdec2 000FDD                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE                   _TM1640_Delay 1810           ?_RS485_ManageMessage 00BA  
                 _TM1640_Start 1776            ??_Key_ManageMessage 001F               TM1640_Delay@Time 0019  
           __end_of_Delay_1Khz 15F4               ___lbmod@dividend 001A                   _Key_ResetFSM 1430  
  __size_of_TM1640_Writer_Byte 003E                   ?_Key_ReadFSM 0001                      i2___llmod 1098  
                 ??_ConvertADC 0019                   ?_Key_ScanFSM 0001            VerifyCRC@date_lenth 0028  
                  ___lbmod@rem 001C                   ?_Init_TM1640 0001                    ___ftdiv@exp 00C7  
    __end_of_Key_ManageMessage 088E             i2___llmod@dividend 0001             VerifyCRC@CRC_Value 002E  
              ?_RS485_SendDate 00BA                    ___ftmul@exp 002D                  ??_TM1640_Stop 001B  
               __end_of___wmul 16E2          ??_RS485_ManageMessage 00BD                   ??_Open1USART 001B  
            __size_of_SCR_Init 000C             __end_of_ConvertADC 18A0                ??i2_LED_Control 0002  
                ??_LED_Control 001A                  ??_GPIO_Config 0019            start_initialization 13E6  
                  _g_Timer_Cyc 0033                    __end_of_Run 1176                    ??_ADC6_Init 001E  
                 ??_Relay_Init 0019                     ?i2___llmod 0001                ??_Relay_Control 001F  
   TM1640_Show_integer@Numbers 0020                ___llmod@divisor 001D              __size_of_Key_Init 001E  
            __size_of_Key_Scan 0044                ___llmod@counter 0021                      _SetTimer0 165A  
           __end_of_Open1USART 1246                i2SetTimer0@_tmr 0001                       ??___wmul 001D  
                 ??_ShowResult 0022                      _VerifyCRC 09E0                    __pdataBANK0 00CD  
         i2LED_Control@_switch 0001             __end_of_Relay_Init 1890            __end_of_TM1640_Stop 1776  
            __size_of___ftpack 00C6                   ??_Pulse_1Khz 0004                    __pbssCOMRAM 0033  
            __size_of___lwtoft 0026                  __pcstackBANK0 00BA              __size_of_delay1ms 0038  
            __size_of_delay_ms 001A                       ?_GetADC6 0001            __end_of_LED_Control 14BE  
          __end_of_GPIO_Config 18A2             __end_of_ShowResult 0F26     __size_of_Key_ManageMessage 017E  
                     ?_BusyADC 0001                       ?_ReadADC 0019    __end_of_TM1640_Writer_Dates 17BC  
                   ?_SetTimer0 0019                       ?_OpenADC 0019                   ?_Timer0_Init 0001  
             ___lwdiv@dividend 0019              __CFG_CCP2MX$PORTC 000000             __end_of_Pulse_1Khz 134C  
                    __pintcode 0008                       ?___lbmod 0019                       ?_Sys_Cyc 0001  
                     ?___ftdiv 00BA                       ?___lldiv 0019                       ?___ftmul 0024  
                     ?___llmod 0019                       ?___lwdiv 0019                       ?___lwmod 0019  
                   ?_VerifyCRC 0026                Open1USART@spbrg 0019           Relay_Control@_switch 001E  
             ___lwdiv@quotient 001D                    ??i2___llmod 0009                      delay1ms@a 0019  
                    delay1ms@b 001A                      delay1ms@c 001B                _s_Local_Key_FSM 0091  
         __size_of_Key_ReadFSM 01A2           __size_of_Key_ScanFSM 005A                 ___wmul@product 001D  
                OpenADC@config 001D                       _PIE1bits 000F9D           __size_of_Init_TM1640 0026  
                     _PIR1bits 000F9E                       _SCR_Init 1890                    _TM1640_Stop 1752  
                   _ADCON0bits 000FC2              ___wmul@multiplier 0019               __CFG_SOSCSEL$DIG 000000  
            VerifyCRC@CRC_Byte 0032                    _LED_Control 147A                    _GPIO_Config 18A0  
                  Delay_1Khz@a 0001                    Delay_1Khz@b 0002                    Delay_1Khz@c 0003  
 __size_of_TM1640_Show_integer 00FE    RS485_ManageMessage@DataBuff 00BA                      copy_data0 141E  
                     _Key_Init 17BC                       _Key_Scan 1502               ??_RS485_SendDate 00BD  
             __size_of_GetADC6 006C                  ??i2_SetTimer0 0003         __size_of_ManageMessage 001C  
                  ??_SetTimer0 001B               __size_of_BusyADC 000E               __size_of_ReadADC 0010  
                     __Hrparam 0000               __size_of_OpenADC 004E                       __Lrparam 0000  
           __CFG_BOREN$SBORDIS 000000              VerifyCRC@DataBuff 0026                    ??_VerifyCRC 0029  
           Key_ReadFSM@key_num 001E       Pulse_1Khz@_overturn_1Khz 003A               __size_of___lbmod 0032  
             __size_of_Sys_Cyc 019A               __size_of___ftdiv 0152               __size_of___lldiv 008C  
             __size_of___ftmul 0102               __size_of___llmod 0070               __size_of___lwdiv 005C  
             __size_of___lwmod 004C                       ___ftpack 0D08                   _g_RS485_Byte 003F  
         _g_RS485_Receive_Flag 0040                       ___lwtoft 16E2                 _gsa_Handle_Msg 0100  
                     _delay1ms 1584     __end_of_TM1640_Writer_Byte 1584                       _delay_ms 17F6  
              ___lwdiv@divisor 001B                ___lwdiv@counter 001F                       __ptext10 1890  
                     __ptext11 1108                       __ptext20 0D08                       __ptext12 0FB2  
                     __ptext21 1864                       __ptext13 17F6                       __ptext30 1028  
                     __ptext22 189C                       __ptext14 1584                       __ptext31 0F26  
                     __ptext23 1874                       __ptext15 0DCE                       __ptext40 1776  
                     __ptext32 0710                       __ptext24 1882                       __ptext16 1176  
                     __ptext41 1810                       __ptext33 1628                       __ptext25 182A  
                     __ptext17 16E2                       __ptext50 15BC                       __ptext42 18A0  
                     __ptext34 1430                       __ptext26 11E2                       __ptext18 0B08  
                     __ptext51 12A2                       __ptext43 1842                       __ptext35 056E  
                     __ptext27 17DA                       __ptext19 088E                       __ptext52 1502  
                     __ptext44 134C                       __ptext36 17BC                       __ptext28 01A6  
                     __ptext37 1708                       __ptext29 09E0                       __ptext46 1098  
                     __ptext38 1546                       __ptext47 168A                       __ptext39 1752  
                     __ptext48 14BE                       __ptext49 12FC         Relay_Control@relay_num 001F  
                __size_of_main 0034            __CFG_RTCOSC$SOSCREF 000000    __end_of_RS485_ManageMessage 056E  
         __size_of_Timer0_Init 0024            __end_ofi2_SetTimer0 16BA            __CFG_INTOSCSEL$HIGH 000000  
                  delay_ms@_ms 001C                     _LED_Number 00CD                  _ManageMessage 17DA  
                   _INTCONbits 000FF2          __end_ofi2_LED_Control 1502                     _RS485_Init 182A  
                Pulse_1Khz@_QD 0004                       intlevel2 0000          __end_of_Relay_Control 1028  
             ___lwmod@dividend 0019               ___lldiv@dividend 0019                     _RCSTA1bits 000FAB  
      Key_ReadFSM@key_num_mate 001D             __CFG_WDTPS$1048576 000000              _gs_Local_Key_User 007C  
               ?_ManageMessage 0001           _ga_RS485_ReceiveBuff 00A6               ___lldiv@quotient 0021  
              ___lwmod@divisor 001B                ___lwmod@counter 001D            __CFG_BORPWR$ZPBORMV 000000  
           __size_of_ADC6_Init 0012                    i2_SetTimer0 168A            _TM1640_Show_integer 0C0A  
