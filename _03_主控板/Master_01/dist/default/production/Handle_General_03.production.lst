

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Dec 17 15:24:18 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F67K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    59  0000                     
    60                           	psect	smallconst
    61  001000                     __psmallconst:
    62                           	opt stack 0
    63  001000  00                 	db	0
    64  001001                     _LED_Number:
    65                           	opt stack 0
    66  001001  3F                 	db	63
    67  001002  06                 	db	6
    68  001003  5B                 	db	91
    69  001004  4F                 	db	79
    70  001005  66                 	db	102
    71  001006  6D                 	db	109
    72  001007  7D                 	db	125
    73  001008  07                 	db	7
    74  001009  7F                 	db	127
    75  00100A  6F                 	db	111
    76  00100B  77                 	db	119
    77  00100C  7C                 	db	124
    78  00100D  39                 	db	57
    79  00100E  5E                 	db	94
    80  00100F  79                 	db	121
    81  001010  71                 	db	113
    82  001011                     __end_of_LED_Number:
    83                           	opt stack 0
    84  0000                     _ANCON2	set	3875
    85  0000                     _RCREG2	set	3869
    86  0000                     _RCSTA2	set	3874
    87  0000                     _RCSTA2bits	set	3874
    88  0000                     _SPBRG2	set	3870
    89  0000                     _SPBRGH2	set	3871
    90  0000                     _TXREG2	set	3868
    91  0000                     _TXSTA2	set	3873
    92  0000                     _TXSTA2bits	set	3873
    93  0000                     _ADCON0	set	4034
    94  0000                     _ADCON0bits	set	4034
    95  0000                     _ADCON1	set	4033
    96  0000                     _ADCON2	set	4032
    97  0000                     _ADRESH	set	4036
    98  0000                     _ADRESL	set	4035
    99  0000                     _INTCONbits	set	4082
   100  0000                     _PIE1bits	set	3997
   101  0000                     _PIE3bits	set	4003
   102  0000                     _PIR1bits	set	3998
   103  0000                     _PORTEbits	set	3972
   104  0000                     _TMR0H	set	4055
   105  0000                     _TMR0L	set	4054
   106  0000                     _TRISCbits	set	3988
   107  0000                     _TRISD	set	3989
   108  0000                     _TRISE	set	3990
   109  0000                     _TRISGbits	set	3992
   110  0000                     _GIE	set	32663
   111  0000                     _IPEN	set	32391
   112  0000                     _PSA	set	32427
   113  0000                     _RC2IF	set	32037
   114  0000                     _RC3	set	31763
   115  0000                     _RC4	set	31764
   116  0000                     _RD6	set	31774
   117  0000                     _RD7	set	31775
   118  0000                     _RE2	set	31778
   119  0000                     _RE3	set	31779
   120  0000                     _RE4	set	31780
   121  0000                     _RE5	set	31781
   122  0000                     _RE6	set	31782
   123  0000                     _RE7	set	31783
   124  0000                     _RG3	set	31795
   125  0000                     _T08BIT	set	32430
   126  0000                     _T0CS	set	32429
   127  0000                     _T0PS0	set	32424
   128  0000                     _T0PS1	set	32425
   129  0000                     _T0PS2	set	32426
   130  0000                     _T0SE	set	32428
   131  0000                     _TMR0IE	set	32661
   132  0000                     _TMR0IF	set	32658
   133  0000                     _TMR0ON	set	32431
   134                           
   135                           ; #config settings
   136  001011  00                 	db	0	; dummy byte at the end
   137  0000                     
   138                           	psect	cinit
   139  002298                     __pcinit:
   140                           	opt stack 0
   141  002298                     start_initialization:
   142                           	opt stack 0
   143  002298                     __initialization:
   144                           	opt stack 0
   145                           
   146                           ; Clear objects allocated to BANK0 (126 bytes)
   147  002298  EE00  F060         	lfsr	0,__pbssBANK0
   148  00229C  0E7E               	movlw	126
   149  00229E                     clear_0:
   150  00229E  6AEE               	clrf	postinc0,c
   151  0022A0  06E8               	decf	wreg,f,c
   152  0022A2  E1FD               	bnz	clear_0
   153                           
   154                           ; Clear objects allocated to COMRAM (27 bytes)
   155  0022A4  EE00  F02D         	lfsr	0,__pbssCOMRAM
   156  0022A8  0E1B               	movlw	27
   157  0022AA                     clear_1:
   158  0022AA  6AEE               	clrf	postinc0,c
   159  0022AC  06E8               	decf	wreg,f,c
   160  0022AE  E1FD               	bnz	clear_1
   161  0022B0                     end_of_initialization:
   162                           	opt stack 0
   163  0022B0                     __end_of__initialization:
   164                           	opt stack 0
   165  0022B0  0E00               	movlw	low (__Lsmallconst shr (0+16))
   166  0022B2  6EF8               	movwf	tblptru,c
   167  0022B4  0E10               	movlw	high __Lsmallconst
   168  0022B6  6EF7               	movwf	tblptrh,c
   169  0022B8  0100               	movlb	0
   170  0022BA  EF0D  F011         	goto	_main	;jump to C main() function
   171                           tblptru	equ	0xFF8
   172                           tblptrh	equ	0xFF7
   173                           postinc0	equ	0xFEE
   174                           wreg	equ	0xFE8
   175                           
   176                           	psect	bssCOMRAM
   177  00002D                     __pbssCOMRAM:
   178                           	opt stack 0
   179  00002D                     _g_Timer_Cyc:
   180                           	opt stack 0
   181  00002D                     	ds	4
   182  000031                     _gs_Handle_Switch:
   183                           	opt stack 0
   184  000031                     	ds	4
   185  000035                     _gf_ADC6_Buff:
   186                           	opt stack 0
   187  000035                     	ds	3
   188  000038                     Pulse_1Khz@_overturn_1Khz:
   189                           	opt stack 0
   190  000038                     	ds	1
   191  000039                     Sys_Cyc@_Byte:
   192                           	opt stack 0
   193  000039                     	ds	1
   194  00003A                     Sys_Cyc@_flag:
   195                           	opt stack 0
   196  00003A                     	ds	1
   197  00003B                     Sys_Cyc@_overturn_LED:
   198                           	opt stack 0
   199  00003B                     	ds	1
   200  00003C                     _g_RS485_Byte:
   201                           	opt stack 0
   202  00003C                     	ds	1
   203  00003D                     _g_RS485_Receive_Flag:
   204                           	opt stack 0
   205  00003D                     	ds	1
   206  00003E                     _ga_RS485_SendBuff:
   207                           	opt stack 0
   208  00003E                     	ds	10
   209                           tblptru	equ	0xFF8
   210                           tblptrh	equ	0xFF7
   211                           postinc0	equ	0xFEE
   212                           wreg	equ	0xFE8
   213                           
   214                           	psect	bssBANK0
   215  000060                     __pbssBANK0:
   216                           	opt stack 0
   217  000060                     _ReceiveBuff:
   218                           	opt stack 0
   219  000060                     	ds	10
   220  00006A                     _gsa_Handle_Msg:
   221                           	opt stack 0
   222  00006A                     	ds	70
   223  0000B0                     _gs_Local_Key_User:
   224                           	opt stack 0
   225  0000B0                     	ds	18
   226  0000C2                     _s_Local_Key_FSM:
   227                           	opt stack 0
   228  0000C2                     	ds	18
   229  0000D4                     _ga_RS485_ReceiveBuff:
   230                           	opt stack 0
   231  0000D4                     	ds	10
   232                           tblptru	equ	0xFF8
   233                           tblptrh	equ	0xFF7
   234                           postinc0	equ	0xFEE
   235                           wreg	equ	0xFE8
   236                           
   237                           	psect	cstackBANK0
   238  0000DE                     __pcstackBANK0:
   239                           	opt stack 0
   240  0000DE                     ??_VerifyCRC:
   241  0000DE                     ___ftmul@exp:
   242                           	opt stack 0
   243                           
   244                           ; 1 bytes @ 0x0
   245  0000DE                     	ds	1
   246  0000DF                     ___ftmul@f3_as_product:
   247                           	opt stack 0
   248                           
   249                           ; 3 bytes @ 0x1
   250  0000DF                     	ds	3
   251  0000E2                     ___ftmul@cntr:
   252                           	opt stack 0
   253                           
   254                           ; 1 bytes @ 0x4
   255  0000E2                     	ds	1
   256  0000E3                     ___ftmul@sign:
   257                           	opt stack 0
   258  0000E3                     VerifyCRC@CRC_Value:
   259                           	opt stack 0
   260                           
   261                           ; 4 bytes @ 0x5
   262  0000E3                     	ds	1
   263  0000E4                     ?___ftdiv:
   264                           	opt stack 0
   265  0000E4                     ___ftdiv@f1:
   266                           	opt stack 0
   267                           
   268                           ; 3 bytes @ 0x6
   269  0000E4                     	ds	3
   270  0000E7                     VerifyCRC@CRC_Byte:
   271                           	opt stack 0
   272  0000E7                     ___ftdiv@f2:
   273                           	opt stack 0
   274                           
   275                           ; 3 bytes @ 0x9
   276  0000E7                     	ds	1
   277  0000E8                     ??_RS485_ManageMessage:
   278                           
   279                           ; 0 bytes @ 0xA
   280  0000E8                     	ds	2
   281  0000EA                     ??___ftdiv:
   282                           
   283                           ; 0 bytes @ 0xC
   284  0000EA                     	ds	3
   285  0000ED                     RS485_ManageMessage@CRC_H:
   286                           	opt stack 0
   287  0000ED                     ___ftdiv@cntr:
   288                           	opt stack 0
   289                           
   290                           ; 1 bytes @ 0xF
   291  0000ED                     	ds	1
   292  0000EE                     RS485_ManageMessage@CRC_L:
   293                           	opt stack 0
   294  0000EE                     ___ftdiv@f3:
   295                           	opt stack 0
   296                           
   297                           ; 3 bytes @ 0x10
   298  0000EE                     	ds	1
   299  0000EF                     RS485_ManageMessage@from_dress:
   300                           	opt stack 0
   301                           
   302                           ; 1 bytes @ 0x11
   303  0000EF                     	ds	2
   304  0000F1                     ___ftdiv@exp:
   305                           	opt stack 0
   306                           
   307                           ; 1 bytes @ 0x13
   308  0000F1                     	ds	1
   309  0000F2                     ___ftdiv@sign:
   310                           	opt stack 0
   311                           
   312                           ; 1 bytes @ 0x14
   313  0000F2                     	ds	1
   314                           tblptru	equ	0xFF8
   315                           tblptrh	equ	0xFF7
   316                           postinc0	equ	0xFEE
   317                           wreg	equ	0xFE8
   318                           
   319                           	psect	cstackCOMRAM
   320  000001                     __pcstackCOMRAM:
   321                           	opt stack 0
   322  000001                     ?i2___llmod:
   323                           	opt stack 0
   324  000001                     Delay_1Khz@a:
   325                           	opt stack 0
   326  000001                     i2SetTimer0@_tmr:
   327                           	opt stack 0
   328  000001                     i2___llmod@dividend:
   329                           	opt stack 0
   330                           
   331                           ; 4 bytes @ 0x0
   332  000001                     	ds	1
   333  000002                     Delay_1Khz@b:
   334                           	opt stack 0
   335                           
   336                           ; 1 bytes @ 0x1
   337  000002                     	ds	1
   338  000003                     ??i2_SetTimer0:
   339  000003                     Delay_1Khz@c:
   340                           	opt stack 0
   341                           
   342                           ; 1 bytes @ 0x2
   343  000003                     	ds	1
   344  000004                     Pulse_1Khz@_pulse:
   345                           	opt stack 0
   346                           
   347                           ; 1 bytes @ 0x3
   348  000004                     	ds	1
   349  000005                     i2___llmod@divisor:
   350                           	opt stack 0
   351                           
   352                           ; 4 bytes @ 0x4
   353  000005                     	ds	4
   354  000009                     i2___llmod@counter:
   355                           	opt stack 0
   356                           
   357                           ; 1 bytes @ 0x8
   358  000009                     	ds	1
   359  00000A                     ??_Sys_Cyc:
   360                           
   361                           ; 0 bytes @ 0x9
   362  00000A                     	ds	14
   363  000018                     Sys_Cyc@_temp:
   364                           	opt stack 0
   365                           
   366                           ; 1 bytes @ 0x17
   367  000018                     	ds	1
   368  000019                     ??_Key_ReadFSM:
   369  000019                     ?_ReadADC:
   370                           	opt stack 0
   371  000019                     ?___wmul:
   372                           	opt stack 0
   373  000019                     ?___lwdiv:
   374                           	opt stack 0
   375  000019                     ?___lwmod:
   376                           	opt stack 0
   377  000019                     ?___ftpack:
   378                           	opt stack 0
   379  000019                     ?___lldiv:
   380                           	opt stack 0
   381  000019                     ?___llmod:
   382                           	opt stack 0
   383  000019                     Key_ResetFSM@t:
   384                           	opt stack 0
   385  000019                     TM1640_Delay@Time:
   386                           	opt stack 0
   387  000019                     OpenADC@config2:
   388                           	opt stack 0
   389  000019                     ___lbmod@divisor:
   390                           	opt stack 0
   391  000019                     SetTimer0@_tmr:
   392                           	opt stack 0
   393  000019                     Open2USART@spbrg:
   394                           	opt stack 0
   395  000019                     ___wmul@multiplier:
   396                           	opt stack 0
   397  000019                     ___lwdiv@dividend:
   398                           	opt stack 0
   399  000019                     ___lwmod@dividend:
   400                           	opt stack 0
   401  000019                     ___ftpack@arg:
   402                           	opt stack 0
   403  000019                     ___lldiv@dividend:
   404                           	opt stack 0
   405  000019                     ___llmod@dividend:
   406                           	opt stack 0
   407                           
   408                           ; 4 bytes @ 0x18
   409  000019                     	ds	1
   410  00001A                     TM1640_Delay@i:
   411                           	opt stack 0
   412  00001A                     OpenADC@config3:
   413                           	opt stack 0
   414  00001A                     ___lbmod@dividend:
   415                           	opt stack 0
   416                           
   417                           ; 1 bytes @ 0x19
   418  00001A                     	ds	1
   419  00001B                     ??_SetTimer0:
   420  00001B                     ??_OpenADC:
   421  00001B                     ??_ReadADC:
   422  00001B                     TM1640_Writer_Byte@Date:
   423                           	opt stack 0
   424  00001B                     Open2USART@config:
   425                           	opt stack 0
   426  00001B                     ___lbmod@counter:
   427                           	opt stack 0
   428  00001B                     ___wmul@multiplicand:
   429                           	opt stack 0
   430  00001B                     ___lwdiv@divisor:
   431                           	opt stack 0
   432  00001B                     ___lwmod@divisor:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0x1A
   436  00001B                     	ds	1
   437  00001C                     TM1640_Writer_Byte@mask:
   438                           	opt stack 0
   439  00001C                     ___ftpack@exp:
   440                           	opt stack 0
   441  00001C                     ___lbmod@rem:
   442                           	opt stack 0
   443                           
   444                           ; 1 bytes @ 0x1B
   445  00001C                     	ds	1
   446  00001D                     Key_ReadFSM@key_num_mate:
   447                           	opt stack 0
   448  00001D                     OpenADC@config:
   449                           	opt stack 0
   450  00001D                     ___ftpack@sign:
   451                           	opt stack 0
   452  00001D                     ___lwmod@counter:
   453                           	opt stack 0
   454  00001D                     ___wmul@product:
   455                           	opt stack 0
   456  00001D                     ___lwdiv@quotient:
   457                           	opt stack 0
   458  00001D                     ___lldiv@divisor:
   459                           	opt stack 0
   460  00001D                     ___llmod@divisor:
   461                           	opt stack 0
   462                           
   463                           ; 4 bytes @ 0x1C
   464  00001D                     	ds	1
   465  00001E                     ??___ftpack:
   466  00001E                     Key_ReadFSM@key_num:
   467                           	opt stack 0
   468  00001E                     TM1640_Writer_Dates@Date:
   469                           	opt stack 0
   470                           
   471                           ; 1 bytes @ 0x1D
   472  00001E                     	ds	1
   473  00001F                     TM1640_Writer_Dates@Addr:
   474                           	opt stack 0
   475  00001F                     ___lwdiv@counter:
   476                           	opt stack 0
   477                           
   478                           ; 1 bytes @ 0x1E
   479  00001F                     	ds	1
   480  000020                     TM1640_Show_integer@Numbers:
   481                           	opt stack 0
   482                           
   483                           ; 2 bytes @ 0x1F
   484  000020                     	ds	1
   485  000021                     ?___lwtoft:
   486                           	opt stack 0
   487  000021                     ___llmod@counter:
   488                           	opt stack 0
   489  000021                     ___lwtoft@c:
   490                           	opt stack 0
   491  000021                     ___lldiv@quotient:
   492                           	opt stack 0
   493                           
   494                           ; 4 bytes @ 0x20
   495  000021                     	ds	1
   496  000022                     ??_ShowResult:
   497  000022                     
   498                           ; 0 bytes @ 0x21
   499  000022                     	ds	2
   500  000024                     ?___ftmul:
   501                           	opt stack 0
   502  000024                     ___ftmul@f1:
   503                           	opt stack 0
   504                           
   505                           ; 3 bytes @ 0x23
   506  000024                     	ds	1
   507  000025                     ___lldiv@counter:
   508                           	opt stack 0
   509                           
   510                           ; 1 bytes @ 0x24
   511  000025                     	ds	1
   512  000026                     VerifyCRC@DataBuff:
   513                           	opt stack 0
   514                           
   515                           ; 2 bytes @ 0x25
   516  000026                     	ds	1
   517  000027                     ___ftmul@f2:
   518                           	opt stack 0
   519                           
   520                           ; 3 bytes @ 0x26
   521  000027                     	ds	1
   522  000028                     VerifyCRC@date_lenth:
   523                           	opt stack 0
   524                           
   525                           ; 1 bytes @ 0x27
   526  000028                     	ds	1
   527  000029                     RS485_SendDate@date_dress:
   528                           	opt stack 0
   529  000029                     RS485_ManageMessage@DataBuff:
   530                           	opt stack 0
   531                           
   532                           ; 2 bytes @ 0x28
   533  000029                     	ds	1
   534  00002A                     ??___ftmul:
   535                           
   536                           ; 0 bytes @ 0x29
   537  00002A                     	ds	1
   538  00002B                     RS485_SendDate@date_lenth:
   539                           	opt stack 0
   540  00002B                     RS485_ManageMessage@date_lenth:
   541                           	opt stack 0
   542                           
   543                           ; 1 bytes @ 0x2A
   544  00002B                     	ds	1
   545  00002C                     
   546                           ; 0 bytes @ 0x2B
   547  00002C                     	ds	1
   548  00002D                     tblptru	equ	0xFF8
   549                           tblptrh	equ	0xFF7
   550                           postinc0	equ	0xFEE
   551                           wreg	equ	0xFE8
   552                           
   553                           ; 0 bytes @ 0x2C
   554 ;;
   555 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   556 ;;
   557 ;; *************** function _main *****************
   558 ;; Defined at:
   559 ;;		line 37 in file "_01_USER/main.c"
   560 ;; Parameters:    Size  Location     Type
   561 ;;		None
   562 ;; Auto vars:     Size  Location     Type
   563 ;;		None
   564 ;; Return value:  Size  Location     Type
   565 ;;                  2   20[None  ] int 
   566 ;; Registers used:
   567 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   568 ;; Tracked objects:
   569 ;;		On entry : 0/0
   570 ;;		On exit  : 0/0
   571 ;;		Unchanged: 0/0
   572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   577 ;;Total ram usage:        0 bytes
   578 ;; Hardware stack levels required when called:    8
   579 ;; This function calls:
   580 ;;		_ADC6_Init
   581 ;;		_GPIO_Config
   582 ;;		_Init_TM1640
   583 ;;		_Key_Init
   584 ;;		_ManageMessage
   585 ;;		_RS485_Init
   586 ;;		_Run
   587 ;;		_ShowResult
   588 ;;		_Timer0_Init
   589 ;; This function is called by:
   590 ;;		Startup code after reset
   591 ;; This function uses a non-reentrant model
   592 ;;
   593                           
   594                           	psect	text0
   595  00221A                     __ptext0:
   596                           	opt stack 0
   597  00221A                     _main:
   598                           	opt stack 23
   599                           
   600                           ;main.c: 42: GPIO_Config();
   601                           
   602                           ; BSR set to: 0
   603                           ;incstack = 0
   604  00221A  EC1E  F012         	call	_GPIO_Config	;wreg free
   605                           
   606                           ;main.c: 43: Key_Init();
   607  00221E  EC24  F012         	call	_Key_Init	;wreg free
   608                           
   609                           ;main.c: 44: Timer0_Init();
   610  002222  EC98  F011         	call	_Timer0_Init	;wreg free
   611                           
   612                           ;main.c: 45: Init_TM1640();
   613  002226  EC72  F011         	call	_Init_TM1640	;wreg free
   614                           
   615                           ;main.c: 46: ADC6_Init();
   616  00222A  EC06  F012         	call	_ADC6_Init	;wreg free
   617                           
   618                           ;main.c: 47: RS485_Init();
   619  00222E  ECDF  F011         	call	_RS485_Init	;wreg free
   620  002232  D000               	goto	l3008
   621  002234                     l3008:
   622                           
   623                           ;main.c: 51: {
   624                           ;main.c: 52: ManageMessage();
   625  002234  ECFB  F011         	call	_ManageMessage	;wreg free
   626                           
   627                           ;main.c: 53: Run();
   628  002238  EC23  F011         	call	_Run	;wreg free
   629                           
   630                           ;main.c: 54: ShowResult();
   631  00223C  ECC2  F00E         	call	_ShowResult	;wreg free
   632  002240  D7F9               	goto	l3008
   633                           
   634                           ;main.c: 55: }
   635                           ;main.c: 57: return 0;
   636                           ;	Return value of _main is never used
   637  002242  EFAF  F000         	goto	start
   638  002246                     __end_of_main:
   639                           	opt stack 0
   640                           tblptru	equ	0xFF8
   641                           tblptrh	equ	0xFF7
   642                           postinc0	equ	0xFEE
   643                           wreg	equ	0xFE8
   644                           
   645 ;; *************** function _Timer0_Init *****************
   646 ;; Defined at:
   647 ;;		line 43 in file "_01_USER/My_Timer.c"
   648 ;; Parameters:    Size  Location     Type
   649 ;;		None
   650 ;; Auto vars:     Size  Location     Type
   651 ;;		None
   652 ;; Return value:  Size  Location     Type
   653 ;;		None               void
   654 ;; Registers used:
   655 ;;		wreg, status,2, status,0, cstack
   656 ;; Tracked objects:
   657 ;;		On entry : 0/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   665 ;;Total ram usage:        0 bytes
   666 ;; Hardware stack levels used:    1
   667 ;; Hardware stack levels required when called:    4
   668 ;; This function calls:
   669 ;;		_SetTimer0
   670 ;; This function is called by:
   671 ;;		_main
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675                           	psect	text1
   676  002330                     __ptext1:
   677                           	opt stack 0
   678  002330                     _Timer0_Init:
   679                           	opt stack 26
   680                           
   681                           ;My_Timer.c: 45: T08BIT = 0;
   682                           
   683                           ;incstack = 0
   684  002330  9CD5               	bcf	4053,6,c	;volatile
   685                           
   686                           ;My_Timer.c: 46: T0CS = 0;
   687  002332  9AD5               	bcf	4053,5,c	;volatile
   688                           
   689                           ;My_Timer.c: 47: T0SE = 0;
   690  002334  98D5               	bcf	4053,4,c	;volatile
   691                           
   692                           ;My_Timer.c: 48: PSA = 0;
   693  002336  96D5               	bcf	4053,3,c	;volatile
   694                           
   695                           ;My_Timer.c: 49: T0PS2 = 1;
   696  002338  84D5               	bsf	4053,2,c	;volatile
   697                           
   698                           ;My_Timer.c: 50: T0PS1 = 1;
   699  00233A  82D5               	bsf	4053,1,c	;volatile
   700                           
   701                           ;My_Timer.c: 51: T0PS0 = 1;
   702  00233C  80D5               	bsf	4053,0,c	;volatile
   703                           
   704                           ;My_Timer.c: 65: SetTimer0(1);
   705  00233E  0E00               	movlw	0
   706  002340  6E1A               	movwf	SetTimer0@_tmr+1,c
   707  002342  0E01               	movlw	1
   708  002344  6E19               	movwf	SetTimer0@_tmr,c
   709  002346  ECDD  F010         	call	_SetTimer0	;wreg free
   710                           
   711                           ;My_Timer.c: 66: TMR0ON = 1;
   712  00234A  8ED5               	bsf	4053,7,c	;volatile
   713                           
   714                           ;My_Timer.c: 67: TMR0IE = 1;
   715  00234C  8AF2               	bsf	intcon,5,c	;volatile
   716                           
   717                           ;My_Timer.c: 68: IPEN = 0;GIE = 1;
   718  00234E  9ED0               	bcf	4048,7,c	;volatile
   719  002350  8EF2               	bsf	intcon,7,c	;volatile
   720  002352  0012               	return		;funcret
   721  002354                     __end_of_Timer0_Init:
   722                           	opt stack 0
   723                           tblptru	equ	0xFF8
   724                           tblptrh	equ	0xFF7
   725                           intcon	equ	0xFF2
   726                           postinc0	equ	0xFEE
   727                           wreg	equ	0xFE8
   728                           
   729 ;; *************** function _SetTimer0 *****************
   730 ;; Defined at:
   731 ;;		line 81 in file "_01_USER/My_Timer.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;  _tmr            2   24[COMRAM] unsigned int 
   734 ;; Auto vars:     Size  Location     Type
   735 ;;		None
   736 ;; Return value:  Size  Location     Type
   737 ;;		None               void
   738 ;; Registers used:
   739 ;;		wreg, status,2, status,0
   740 ;; Tracked objects:
   741 ;;		On entry : 0/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   745 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   747 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   748 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   749 ;;Total ram usage:        4 bytes
   750 ;; Hardware stack levels used:    1
   751 ;; Hardware stack levels required when called:    3
   752 ;; This function calls:
   753 ;;		Nothing
   754 ;; This function is called by:
   755 ;;		_Timer0_Init
   756 ;; This function uses a non-reentrant model
   757 ;;
   758                           
   759                           	psect	text2
   760  0021BA                     __ptext2:
   761                           	opt stack 0
   762  0021BA                     _SetTimer0:
   763                           	opt stack 26
   764                           
   765                           ;My_Timer.c: 83: if(_tmr > 0xffff) _tmr = 0xffff;
   766                           
   767                           ;incstack = 0
   768  0021BA  D003               	goto	l2512
   769  0021BC  6819               	setf	SetTimer0@_tmr,c
   770  0021BE  681A               	setf	SetTimer0@_tmr+1,c
   771  0021C0  D000               	goto	l2512
   772  0021C2                     l2512:
   773                           
   774                           ;My_Timer.c: 84: _tmr=0xffff-_tmr;
   775  0021C2  C019  F01B         	movff	SetTimer0@_tmr,??_SetTimer0
   776  0021C6  C01A  F01C         	movff	SetTimer0@_tmr+1,??_SetTimer0+1
   777  0021CA  1E1B               	comf	??_SetTimer0,f,c
   778  0021CC  1E1C               	comf	??_SetTimer0+1,f,c
   779  0021CE  4A1B               	infsnz	??_SetTimer0,f,c
   780  0021D0  2A1C               	incf	??_SetTimer0+1,f,c
   781  0021D2  0EFF               	movlw	255
   782  0021D4  241B               	addwf	??_SetTimer0,w,c
   783  0021D6  6E19               	movwf	SetTimer0@_tmr,c
   784  0021D8  0EFF               	movlw	255
   785  0021DA  201C               	addwfc	??_SetTimer0+1,w,c
   786  0021DC  6E1A               	movwf	SetTimer0@_tmr+1,c
   787                           
   788                           ;My_Timer.c: 85: TMR0H = _tmr/256;
   789  0021DE  501A               	movf	SetTimer0@_tmr+1,w,c
   790  0021E0  6ED7               	movwf	4055,c	;volatile
   791                           
   792                           ;My_Timer.c: 86: TMR0L = _tmr%256;
   793  0021E2  C019  FFD6         	movff	SetTimer0@_tmr,4054	;volatile
   794                           
   795                           ;My_Timer.c: 87: TMR0IF = 0;
   796  0021E6  94F2               	bcf	intcon,2,c	;volatile
   797  0021E8  0012               	return		;funcret
   798  0021EA                     __end_of_SetTimer0:
   799                           	opt stack 0
   800                           tblptru	equ	0xFF8
   801                           tblptrh	equ	0xFF7
   802                           intcon	equ	0xFF2
   803                           postinc0	equ	0xFEE
   804                           wreg	equ	0xFE8
   805                           
   806 ;; *************** function _ShowResult *****************
   807 ;; Defined at:
   808 ;;		line 96 in file "_01_USER/Run.c"
   809 ;; Parameters:    Size  Location     Type
   810 ;;		None
   811 ;; Auto vars:     Size  Location     Type
   812 ;;		None
   813 ;; Return value:  Size  Location     Type
   814 ;;		None               void
   815 ;; Registers used:
   816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   824 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   825 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   826 ;;Total ram usage:        1 bytes
   827 ;; Hardware stack levels used:    1
   828 ;; Hardware stack levels required when called:    7
   829 ;; This function calls:
   830 ;;		_TM1640_Show_integer
   831 ;;		___wmul
   832 ;; This function is called by:
   833 ;;		_main
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           	psect	text3
   838  001D84                     __ptext3:
   839                           	opt stack 0
   840  001D84                     _ShowResult:
   841                           	opt stack 23
   842                           
   843                           ;Run.c: 98: if( gs_Handle_Switch.Show_Send_Receive )
   844                           
   845                           ;incstack = 0
   846  001D84  5034               	movf	_gs_Handle_Switch+3,w,c
   847  001D86  B4D8               	btfsc	status,2,c
   848  001D88  D01D               	goto	l2604
   849                           
   850                           ;Run.c: 99: {
   851                           ;Run.c: 100: TM1640_Show_integer( ga_RS485_SendBuff[g_RS485_Byte] + (g_RS485_Byte * 1000
      +                          ) );
   852  001D8A  C03C  F019         	movff	_g_RS485_Byte,___wmul@multiplier
   853  001D8E  6A1A               	clrf	___wmul@multiplier+1,c
   854  001D90  0E03               	movlw	3
   855  001D92  6E1C               	movwf	___wmul@multiplicand+1,c
   856  001D94  0EE8               	movlw	232
   857  001D96  6E1B               	movwf	___wmul@multiplicand,c
   858  001D98  EC38  F011         	call	___wmul	;wreg free
   859  001D9C  503C               	movf	_g_RS485_Byte,w,c
   860  001D9E  0D01               	mullw	1
   861  001DA0  0E3E               	movlw	low _ga_RS485_SendBuff
   862  001DA2  24F3               	addwf	prodl,w,c
   863  001DA4  6ED9               	movwf	fsr2l,c
   864  001DA6  0E00               	movlw	high _ga_RS485_SendBuff
   865  001DA8  20F4               	addwfc	prodh,w,c
   866  001DAA  6EDA               	movwf	fsr2h,c
   867  001DAC  50DF               	movf	indf2,w,c
   868  001DAE  6E22               	movwf	??_ShowResult& (0+255),c
   869  001DB0  5022               	movf	??_ShowResult,w,c
   870  001DB2  2419               	addwf	?___wmul,w,c
   871  001DB4  6E20               	movwf	TM1640_Show_integer@Numbers,c
   872  001DB6  0E00               	movlw	0
   873  001DB8  201A               	addwfc	?___wmul+1,w,c
   874  001DBA  6E21               	movwf	TM1640_Show_integer@Numbers+1,c
   875  001DBC  EC85  F00C         	call	_TM1640_Show_integer	;wreg free
   876                           
   877                           ;Run.c: 101: PORTEbits.RE7=0;
   878  001DC0  9E84               	bcf	3972,7,c	;volatile
   879                           
   880                           ;Run.c: 102: }
   881  001DC2  0012               	return	
   882  001DC4                     l2604:
   883                           
   884                           ;Run.c: 104: else
   885                           ;Run.c: 105: {
   886                           ;Run.c: 106: TM1640_Show_integer( ga_RS485_ReceiveBuff[g_RS485_Byte] + (g_RS485_Byte * 1
      +                          000) );
   887  001DC4  C03C  F019         	movff	_g_RS485_Byte,___wmul@multiplier
   888  001DC8  6A1A               	clrf	___wmul@multiplier+1,c
   889  001DCA  0E03               	movlw	3
   890  001DCC  6E1C               	movwf	___wmul@multiplicand+1,c
   891  001DCE  0EE8               	movlw	232
   892  001DD0  6E1B               	movwf	___wmul@multiplicand,c
   893  001DD2  EC38  F011         	call	___wmul	;wreg free
   894  001DD6  503C               	movf	_g_RS485_Byte,w,c
   895  001DD8  0D01               	mullw	1
   896  001DDA  0ED4               	movlw	low _ga_RS485_ReceiveBuff
   897  001DDC  24F3               	addwf	prodl,w,c
   898  001DDE  6ED9               	movwf	fsr2l,c
   899  001DE0  0E00               	movlw	high _ga_RS485_ReceiveBuff
   900  001DE2  20F4               	addwfc	prodh,w,c
   901  001DE4  6EDA               	movwf	fsr2h,c
   902  001DE6  50DF               	movf	indf2,w,c
   903  001DE8  6E22               	movwf	??_ShowResult& (0+255),c
   904  001DEA  5022               	movf	??_ShowResult,w,c
   905  001DEC  2419               	addwf	?___wmul,w,c
   906  001DEE  6E20               	movwf	TM1640_Show_integer@Numbers,c
   907  001DF0  0E00               	movlw	0
   908  001DF2  201A               	addwfc	?___wmul+1,w,c
   909  001DF4  6E21               	movwf	TM1640_Show_integer@Numbers+1,c
   910  001DF6  EC85  F00C         	call	_TM1640_Show_integer	;wreg free
   911                           
   912                           ;Run.c: 107: PORTEbits.RE7=1;
   913  001DFA  8E84               	bsf	3972,7,c	;volatile
   914  001DFC  0012               	return	
   915  001DFE  0012               	return		;funcret
   916  001E00                     __end_of_ShowResult:
   917                           	opt stack 0
   918                           tblptru	equ	0xFF8
   919                           tblptrh	equ	0xFF7
   920                           prodh	equ	0xFF4
   921                           prodl	equ	0xFF3
   922                           intcon	equ	0xFF2
   923                           postinc0	equ	0xFEE
   924                           wreg	equ	0xFE8
   925                           indf2	equ	0xFDF
   926                           fsr2h	equ	0xFDA
   927                           fsr2l	equ	0xFD9
   928                           status	equ	0xFD8
   929                           
   930 ;; *************** function ___wmul *****************
   931 ;; Defined at:
   932 ;;		line 15 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
   933 ;; Parameters:    Size  Location     Type
   934 ;;  multiplier      2   24[COMRAM] unsigned int 
   935 ;;  multiplicand    2   26[COMRAM] unsigned int 
   936 ;; Auto vars:     Size  Location     Type
   937 ;;  product         2   28[COMRAM] unsigned int 
   938 ;; Return value:  Size  Location     Type
   939 ;;                  2   24[COMRAM] unsigned int 
   940 ;; Registers used:
   941 ;;		wreg, status,2, status,0, prodl, prodh
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   947 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   948 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   950 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   951 ;;Total ram usage:        6 bytes
   952 ;; Hardware stack levels used:    1
   953 ;; Hardware stack levels required when called:    3
   954 ;; This function calls:
   955 ;;		Nothing
   956 ;; This function is called by:
   957 ;;		_ShowResult
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961                           	psect	text4
   962  002270                     __ptext4:
   963                           	opt stack 0
   964  002270                     ___wmul:
   965                           	opt stack 26
   966                           
   967                           ;incstack = 0
   968  002270  5019               	movf	___wmul@multiplier,w,c
   969  002272  021B               	mulwf	___wmul@multiplicand,c
   970  002274  CFF3 F01D          	movff	prodl,___wmul@product
   971  002278  CFF4 F01E          	movff	prodh,___wmul@product+1
   972  00227C  5019               	movf	___wmul@multiplier,w,c
   973  00227E  021C               	mulwf	___wmul@multiplicand+1,c
   974  002280  50F3               	movf	prodl,w,c
   975  002282  261E               	addwf	___wmul@product+1,f,c
   976  002284  501A               	movf	___wmul@multiplier+1,w,c
   977  002286  021B               	mulwf	___wmul@multiplicand,c
   978  002288  50F3               	movf	prodl,w,c
   979  00228A  261E               	addwf	___wmul@product+1,f,c
   980  00228C  C01D  F019         	movff	___wmul@product,?___wmul
   981  002290  C01E  F01A         	movff	___wmul@product+1,?___wmul+1
   982  002294  0012               	return	
   983  002296  0012               	return		;funcret
   984  002298                     __end_of___wmul:
   985                           	opt stack 0
   986                           tblptru	equ	0xFF8
   987                           tblptrh	equ	0xFF7
   988                           prodh	equ	0xFF4
   989                           prodl	equ	0xFF3
   990                           intcon	equ	0xFF2
   991                           postinc0	equ	0xFEE
   992                           wreg	equ	0xFE8
   993                           indf2	equ	0xFDF
   994                           fsr2h	equ	0xFDA
   995                           fsr2l	equ	0xFD9
   996                           status	equ	0xFD8
   997                           
   998 ;; *************** function _TM1640_Show_integer *****************
   999 ;; Defined at:
  1000 ;;		line 55 in file "_01_USER/TM1640.c"
  1001 ;; Parameters:    Size  Location     Type
  1002 ;;  Numbers         2   31[COMRAM] unsigned int 
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;		None
  1005 ;; Return value:  Size  Location     Type
  1006 ;;		None               void
  1007 ;; Registers used:
  1008 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1014 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1017 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1018 ;;Total ram usage:        2 bytes
  1019 ;; Hardware stack levels used:    1
  1020 ;; Hardware stack levels required when called:    6
  1021 ;; This function calls:
  1022 ;;		_TM1640_Writer_Dates
  1023 ;;		___lwdiv
  1024 ;;		___lwmod
  1025 ;; This function is called by:
  1026 ;;		_ShowResult
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           	psect	text5
  1031  00190A                     __ptext5:
  1032                           	opt stack 0
  1033  00190A                     _TM1640_Show_integer:
  1034                           	opt stack 23
  1035                           
  1036                           ;TM1640.c: 58: TM1640_Writer_Dates(3,LED_Number[Numbers%10]); Numbers/=10;
  1037                           
  1038                           ;incstack = 0
  1039  00190A  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1040  00190E  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1041  001912  0E00               	movlw	0
  1042  001914  6E1C               	movwf	___lwmod@divisor+1,c
  1043  001916  0E0A               	movlw	10
  1044  001918  6E1B               	movwf	___lwmod@divisor,c
  1045  00191A  ECFB  F00F         	call	___lwmod	;wreg free
  1046  00191E  0E01               	movlw	low _LED_Number
  1047  001920  2419               	addwf	?___lwmod,w,c
  1048  001922  6EF6               	movwf	tblptrl,c
  1049  001924  0E10               	movlw	high _LED_Number
  1050  001926  201A               	addwfc	?___lwmod+1,w,c
  1051  001928  6EF7               	movwf	tblptrh,c
  1052  00192A                     	if	0	;There are less than 3 active tblptr bytes
  1053  00192A                     	endif
  1054  00192A  0008               	tblrd		*
  1055  00192C  CFF5 F01E          	movff	tablat,TM1640_Writer_Dates@Date
  1056  001930  0E03               	movlw	3
  1057  001932  ECCE  F011         	call	_TM1640_Writer_Dates
  1058  001936  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1059  00193A  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1060  00193E  0E00               	movlw	0
  1061  001940  6E1C               	movwf	___lwdiv@divisor+1,c
  1062  001942  0E0A               	movlw	10
  1063  001944  6E1B               	movwf	___lwdiv@divisor,c
  1064  001946  ECA6  F00F         	call	___lwdiv	;wreg free
  1065  00194A  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1066  00194E  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1067                           
  1068                           ;TM1640.c: 59: TM1640_Writer_Dates(2,LED_Number[Numbers%10]); Numbers/=10;
  1069  001952  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1070  001956  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1071  00195A  0E00               	movlw	0
  1072  00195C  6E1C               	movwf	___lwmod@divisor+1,c
  1073  00195E  0E0A               	movlw	10
  1074  001960  6E1B               	movwf	___lwmod@divisor,c
  1075  001962  ECFB  F00F         	call	___lwmod	;wreg free
  1076  001966  0E01               	movlw	low _LED_Number
  1077  001968  2419               	addwf	?___lwmod,w,c
  1078  00196A  6EF6               	movwf	tblptrl,c
  1079  00196C  0E10               	movlw	high _LED_Number
  1080  00196E  201A               	addwfc	?___lwmod+1,w,c
  1081  001970  6EF7               	movwf	tblptrh,c
  1082  001972                     	if	0	;There are less than 3 active tblptr bytes
  1083  001972                     	endif
  1084  001972  0008               	tblrd		*
  1085  001974  CFF5 F01E          	movff	tablat,TM1640_Writer_Dates@Date
  1086  001978  0E02               	movlw	2
  1087  00197A  ECCE  F011         	call	_TM1640_Writer_Dates
  1088  00197E  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1089  001982  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1090  001986  0E00               	movlw	0
  1091  001988  6E1C               	movwf	___lwdiv@divisor+1,c
  1092  00198A  0E0A               	movlw	10
  1093  00198C  6E1B               	movwf	___lwdiv@divisor,c
  1094  00198E  ECA6  F00F         	call	___lwdiv	;wreg free
  1095  001992  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1096  001996  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1097                           
  1098                           ;TM1640.c: 60: TM1640_Writer_Dates(1,LED_Number[Numbers%10]); Numbers/=10;
  1099  00199A  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1100  00199E  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1101  0019A2  0E00               	movlw	0
  1102  0019A4  6E1C               	movwf	___lwmod@divisor+1,c
  1103  0019A6  0E0A               	movlw	10
  1104  0019A8  6E1B               	movwf	___lwmod@divisor,c
  1105  0019AA  ECFB  F00F         	call	___lwmod	;wreg free
  1106  0019AE  0E01               	movlw	low _LED_Number
  1107  0019B0  2419               	addwf	?___lwmod,w,c
  1108  0019B2  6EF6               	movwf	tblptrl,c
  1109  0019B4  0E10               	movlw	high _LED_Number
  1110  0019B6  201A               	addwfc	?___lwmod+1,w,c
  1111  0019B8  6EF7               	movwf	tblptrh,c
  1112  0019BA                     	if	0	;There are less than 3 active tblptr bytes
  1113  0019BA                     	endif
  1114  0019BA  0008               	tblrd		*
  1115  0019BC  CFF5 F01E          	movff	tablat,TM1640_Writer_Dates@Date
  1116  0019C0  0E01               	movlw	1
  1117  0019C2  ECCE  F011         	call	_TM1640_Writer_Dates
  1118  0019C6  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1119  0019CA  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1120  0019CE  0E00               	movlw	0
  1121  0019D0  6E1C               	movwf	___lwdiv@divisor+1,c
  1122  0019D2  0E0A               	movlw	10
  1123  0019D4  6E1B               	movwf	___lwdiv@divisor,c
  1124  0019D6  ECA6  F00F         	call	___lwdiv	;wreg free
  1125  0019DA  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1126  0019DE  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1127                           
  1128                           ;TM1640.c: 61: TM1640_Writer_Dates(0,LED_Number[Numbers%10]);
  1129  0019E2  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1130  0019E6  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1131  0019EA  0E00               	movlw	0
  1132  0019EC  6E1C               	movwf	___lwmod@divisor+1,c
  1133  0019EE  0E0A               	movlw	10
  1134  0019F0  6E1B               	movwf	___lwmod@divisor,c
  1135  0019F2  ECFB  F00F         	call	___lwmod	;wreg free
  1136  0019F6  0E01               	movlw	low _LED_Number
  1137  0019F8  2419               	addwf	?___lwmod,w,c
  1138  0019FA  6EF6               	movwf	tblptrl,c
  1139  0019FC  0E10               	movlw	high _LED_Number
  1140  0019FE  201A               	addwfc	?___lwmod+1,w,c
  1141  001A00  6EF7               	movwf	tblptrh,c
  1142  001A02                     	if	0	;There are less than 3 active tblptr bytes
  1143  001A02                     	endif
  1144  001A02  0008               	tblrd		*
  1145  001A04  CFF5 F01E          	movff	tablat,TM1640_Writer_Dates@Date
  1146  001A08  0E00               	movlw	0
  1147  001A0A  ECCE  F011         	call	_TM1640_Writer_Dates
  1148  001A0E  0012               	return		;funcret
  1149  001A10                     __end_of_TM1640_Show_integer:
  1150                           	opt stack 0
  1151                           tblptru	equ	0xFF8
  1152                           tblptrh	equ	0xFF7
  1153                           tblptrl	equ	0xFF6
  1154                           tablat	equ	0xFF5
  1155                           prodh	equ	0xFF4
  1156                           prodl	equ	0xFF3
  1157                           intcon	equ	0xFF2
  1158                           postinc0	equ	0xFEE
  1159                           wreg	equ	0xFE8
  1160                           indf2	equ	0xFDF
  1161                           fsr2h	equ	0xFDA
  1162                           fsr2l	equ	0xFD9
  1163                           status	equ	0xFD8
  1164                           
  1165 ;; *************** function ___lwmod *****************
  1166 ;; Defined at:
  1167 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;  dividend        2   24[COMRAM] unsigned int 
  1170 ;;  divisor         2   26[COMRAM] unsigned int 
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;  counter         1   28[COMRAM] unsigned char 
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  2   24[COMRAM] unsigned int 
  1175 ;; Registers used:
  1176 ;;		wreg, status,2, status,0
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1182 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1183 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1185 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1186 ;;Total ram usage:        5 bytes
  1187 ;; Hardware stack levels used:    1
  1188 ;; Hardware stack levels required when called:    3
  1189 ;; This function calls:
  1190 ;;		Nothing
  1191 ;; This function is called by:
  1192 ;;		_TM1640_Show_integer
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           	psect	text6
  1197  001FF6                     __ptext6:
  1198                           	opt stack 0
  1199  001FF6                     ___lwmod:
  1200                           	opt stack 25
  1201                           
  1202                           ;incstack = 0
  1203  001FF6  501B               	movf	___lwmod@divisor,w,c
  1204  001FF8  101C               	iorwf	___lwmod@divisor+1,w,c
  1205  001FFA  B4D8               	btfsc	status,2,c
  1206  001FFC  D01D               	goto	l1019
  1207  001FFE  0E01               	movlw	1
  1208  002000  6E1D               	movwf	___lwmod@counter,c
  1209  002002  D005               	goto	l2280
  1210  002004                     l2278:
  1211  002004  90D8               	bcf	status,0,c
  1212  002006  361B               	rlcf	___lwmod@divisor,f,c
  1213  002008  361C               	rlcf	___lwmod@divisor+1,f,c
  1214  00200A  2A1D               	incf	___lwmod@counter,f,c
  1215  00200C  D000               	goto	l2280
  1216  00200E                     l2280:
  1217  00200E  BE1C               	btfsc	___lwmod@divisor+1,7,c
  1218  002010  D002               	goto	l2282
  1219  002012  D7F8               	goto	l2278
  1220  002014  D000               	goto	l2282
  1221  002016                     l2282:
  1222  002016  501B               	movf	___lwmod@divisor,w,c
  1223  002018  5C19               	subwf	___lwmod@dividend,w,c
  1224  00201A  501C               	movf	___lwmod@divisor+1,w,c
  1225  00201C  581A               	subwfb	___lwmod@dividend+1,w,c
  1226  00201E  A0D8               	btfss	status,0,c
  1227  002020  D005               	goto	l2286
  1228  002022  501B               	movf	___lwmod@divisor,w,c
  1229  002024  5E19               	subwf	___lwmod@dividend,f,c
  1230  002026  501C               	movf	___lwmod@divisor+1,w,c
  1231  002028  5A1A               	subwfb	___lwmod@dividend+1,f,c
  1232  00202A  D000               	goto	l2286
  1233  00202C                     l2286:
  1234  00202C  90D8               	bcf	status,0,c
  1235  00202E  321C               	rrcf	___lwmod@divisor+1,f,c
  1236  002030  321B               	rrcf	___lwmod@divisor,f,c
  1237  002032  2E1D               	decfsz	___lwmod@counter,f,c
  1238  002034  D7F0               	goto	l2282
  1239  002036  D000               	goto	l1019
  1240  002038                     l1019:
  1241  002038  C019  F019         	movff	___lwmod@dividend,?___lwmod
  1242  00203C  C01A  F01A         	movff	___lwmod@dividend+1,?___lwmod+1
  1243  002040  0012               	return		;funcret
  1244  002042                     __end_of___lwmod:
  1245                           	opt stack 0
  1246                           tblptru	equ	0xFF8
  1247                           tblptrh	equ	0xFF7
  1248                           tblptrl	equ	0xFF6
  1249                           tablat	equ	0xFF5
  1250                           prodh	equ	0xFF4
  1251                           prodl	equ	0xFF3
  1252                           intcon	equ	0xFF2
  1253                           postinc0	equ	0xFEE
  1254                           wreg	equ	0xFE8
  1255                           indf2	equ	0xFDF
  1256                           fsr2h	equ	0xFDA
  1257                           fsr2l	equ	0xFD9
  1258                           status	equ	0xFD8
  1259                           
  1260 ;; *************** function ___lwdiv *****************
  1261 ;; Defined at:
  1262 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;  dividend        2   24[COMRAM] unsigned int 
  1265 ;;  divisor         2   26[COMRAM] unsigned int 
  1266 ;; Auto vars:     Size  Location     Type
  1267 ;;  quotient        2   28[COMRAM] unsigned int 
  1268 ;;  counter         1   30[COMRAM] unsigned char 
  1269 ;; Return value:  Size  Location     Type
  1270 ;;                  2   24[COMRAM] unsigned int 
  1271 ;; Registers used:
  1272 ;;		wreg, status,2, status,0
  1273 ;; Tracked objects:
  1274 ;;		On entry : 0/0
  1275 ;;		On exit  : 0/0
  1276 ;;		Unchanged: 0/0
  1277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1278 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1279 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1281 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1282 ;;Total ram usage:        7 bytes
  1283 ;; Hardware stack levels used:    1
  1284 ;; Hardware stack levels required when called:    3
  1285 ;; This function calls:
  1286 ;;		Nothing
  1287 ;; This function is called by:
  1288 ;;		_TM1640_Show_integer
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           	psect	text7
  1293  001F4C                     __ptext7:
  1294                           	opt stack 0
  1295  001F4C                     ___lwdiv:
  1296                           	opt stack 25
  1297                           
  1298                           ;incstack = 0
  1299  001F4C  0E00               	movlw	0
  1300  001F4E  6E1E               	movwf	___lwdiv@quotient+1,c
  1301  001F50  0E00               	movlw	0
  1302  001F52  6E1D               	movwf	___lwdiv@quotient,c
  1303  001F54  501B               	movf	___lwdiv@divisor,w,c
  1304  001F56  101C               	iorwf	___lwdiv@divisor+1,w,c
  1305  001F58  B4D8               	btfsc	status,2,c
  1306  001F5A  D021               	goto	l1009
  1307  001F5C  0E01               	movlw	1
  1308  001F5E  6E1F               	movwf	___lwdiv@counter,c
  1309  001F60  D005               	goto	l2260
  1310  001F62                     l2258:
  1311  001F62  90D8               	bcf	status,0,c
  1312  001F64  361B               	rlcf	___lwdiv@divisor,f,c
  1313  001F66  361C               	rlcf	___lwdiv@divisor+1,f,c
  1314  001F68  2A1F               	incf	___lwdiv@counter,f,c
  1315  001F6A  D000               	goto	l2260
  1316  001F6C                     l2260:
  1317  001F6C  BE1C               	btfsc	___lwdiv@divisor+1,7,c
  1318  001F6E  D002               	goto	l2262
  1319  001F70  D7F8               	goto	l2258
  1320  001F72  D000               	goto	l2262
  1321  001F74                     l2262:
  1322  001F74  90D8               	bcf	status,0,c
  1323  001F76  361D               	rlcf	___lwdiv@quotient,f,c
  1324  001F78  361E               	rlcf	___lwdiv@quotient+1,f,c
  1325  001F7A  501B               	movf	___lwdiv@divisor,w,c
  1326  001F7C  5C19               	subwf	___lwdiv@dividend,w,c
  1327  001F7E  501C               	movf	___lwdiv@divisor+1,w,c
  1328  001F80  581A               	subwfb	___lwdiv@dividend+1,w,c
  1329  001F82  A0D8               	btfss	status,0,c
  1330  001F84  D006               	goto	l2270
  1331  001F86  501B               	movf	___lwdiv@divisor,w,c
  1332  001F88  5E19               	subwf	___lwdiv@dividend,f,c
  1333  001F8A  501C               	movf	___lwdiv@divisor+1,w,c
  1334  001F8C  5A1A               	subwfb	___lwdiv@dividend+1,f,c
  1335  001F8E  801D               	bsf	___lwdiv@quotient,0,c
  1336  001F90  D000               	goto	l2270
  1337  001F92                     l2270:
  1338  001F92  90D8               	bcf	status,0,c
  1339  001F94  321C               	rrcf	___lwdiv@divisor+1,f,c
  1340  001F96  321B               	rrcf	___lwdiv@divisor,f,c
  1341  001F98  2E1F               	decfsz	___lwdiv@counter,f,c
  1342  001F9A  D7EC               	goto	l2262
  1343  001F9C  D000               	goto	l1009
  1344  001F9E                     l1009:
  1345  001F9E  C01D  F019         	movff	___lwdiv@quotient,?___lwdiv
  1346  001FA2  C01E  F01A         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1347  001FA6  0012               	return		;funcret
  1348  001FA8                     __end_of___lwdiv:
  1349                           	opt stack 0
  1350                           tblptru	equ	0xFF8
  1351                           tblptrh	equ	0xFF7
  1352                           tblptrl	equ	0xFF6
  1353                           tablat	equ	0xFF5
  1354                           prodh	equ	0xFF4
  1355                           prodl	equ	0xFF3
  1356                           intcon	equ	0xFF2
  1357                           postinc0	equ	0xFEE
  1358                           wreg	equ	0xFE8
  1359                           indf2	equ	0xFDF
  1360                           fsr2h	equ	0xFDA
  1361                           fsr2l	equ	0xFD9
  1362                           status	equ	0xFD8
  1363                           
  1364 ;; *************** function _TM1640_Writer_Dates *****************
  1365 ;; Defined at:
  1366 ;;		line 66 in file "_01_USER/TM1640.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;  Addr            1    wreg     unsigned char 
  1369 ;;  Date            1   29[COMRAM] unsigned char 
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;  Addr            1   30[COMRAM] unsigned char 
  1372 ;; Return value:  Size  Location     Type
  1373 ;;		None               void
  1374 ;; Registers used:
  1375 ;;		wreg, status,2, status,0, cstack
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1381 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1382 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1384 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1385 ;;Total ram usage:        2 bytes
  1386 ;; Hardware stack levels used:    1
  1387 ;; Hardware stack levels required when called:    5
  1388 ;; This function calls:
  1389 ;;		_TM1640_Start
  1390 ;;		_TM1640_Stop
  1391 ;;		_TM1640_Writer_Byte
  1392 ;; This function is called by:
  1393 ;;		_TM1640_Show_integer
  1394 ;;		_TM1640_Show_Decimal
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398                           	psect	text8
  1399  00239C                     __ptext8:
  1400                           	opt stack 0
  1401  00239C                     _TM1640_Writer_Dates:
  1402                           	opt stack 23
  1403                           
  1404                           ;incstack = 0
  1405                           ;TM1640_Writer_Dates@Addr stored from wreg
  1406  00239C  6E1F               	movwf	TM1640_Writer_Dates@Addr,c
  1407                           
  1408                           ;TM1640.c: 68: if((Addr >= 0) && (Addr <= 3))
  1409  00239E  0E04               	movlw	4
  1410  0023A0  601F               	cpfslt	TM1640_Writer_Dates@Addr,c
  1411  0023A2  0012               	return	
  1412                           
  1413                           ;TM1640.c: 69: {
  1414                           ;TM1640.c: 70: TM1640_Start();
  1415  0023A4  ECBC  F011         	call	_TM1640_Start	;wreg free
  1416                           
  1417                           ;TM1640.c: 71: TM1640_Writer_Byte(0xC0 + Addr);
  1418  0023A8  501F               	movf	TM1640_Writer_Dates@Addr,w,c
  1419  0023AA  0FC0               	addlw	192
  1420  0023AC  EC6C  F010         	call	_TM1640_Writer_Byte
  1421                           
  1422                           ;TM1640.c: 72: TM1640_Writer_Byte(Date);
  1423  0023B0  501E               	movf	TM1640_Writer_Dates@Date,w,c
  1424  0023B2  EC6C  F010         	call	_TM1640_Writer_Byte
  1425                           
  1426                           ;TM1640.c: 73: TM1640_Stop();
  1427  0023B6  ECAA  F011         	call	_TM1640_Stop	;wreg free
  1428  0023BA  0012               	return	
  1429  0023BC  0012               	return		;funcret
  1430  0023BE                     __end_of_TM1640_Writer_Dates:
  1431                           	opt stack 0
  1432                           tblptru	equ	0xFF8
  1433                           tblptrh	equ	0xFF7
  1434                           tblptrl	equ	0xFF6
  1435                           tablat	equ	0xFF5
  1436                           prodh	equ	0xFF4
  1437                           prodl	equ	0xFF3
  1438                           intcon	equ	0xFF2
  1439                           postinc0	equ	0xFEE
  1440                           wreg	equ	0xFE8
  1441                           indf2	equ	0xFDF
  1442                           fsr2h	equ	0xFDA
  1443                           fsr2l	equ	0xFD9
  1444                           status	equ	0xFD8
  1445                           
  1446 ;; *************** function _Run *****************
  1447 ;; Defined at:
  1448 ;;		line 67 in file "_01_USER/Run.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;		None
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;		None
  1453 ;; Return value:  Size  Location     Type
  1454 ;;		None               void
  1455 ;; Registers used:
  1456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1457 ;; Tracked objects:
  1458 ;;		On entry : 0/0
  1459 ;;		On exit  : 0/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1466 ;;Total ram usage:        0 bytes
  1467 ;; Hardware stack levels used:    1
  1468 ;; Hardware stack levels required when called:    6
  1469 ;; This function calls:
  1470 ;;		_GetADC6
  1471 ;;		_RS485_SendDate
  1472 ;; This function is called by:
  1473 ;;		_main
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           	psect	text9
  1478  002246                     __ptext9:
  1479                           	opt stack 0
  1480  002246                     _Run:
  1481                           	opt stack 24
  1482                           
  1483                           ;Run.c: 70: if( gs_Handle_Switch.ADC6 ) GetADC6();
  1484                           
  1485                           ;incstack = 0
  1486  002246  5032               	movf	_gs_Handle_Switch+1,w,c
  1487  002248  B4D8               	btfsc	status,2,c
  1488  00224A  D003               	goto	l3000
  1489  00224C  EC70  F00F         	call	_GetADC6	;wreg free
  1490  002250  D000               	goto	l3000
  1491  002252                     l3000:
  1492                           
  1493                           ;Run.c: 73: if ( gs_Handle_Switch.Usart_OneDate )
  1494  002252  5033               	movf	_gs_Handle_Switch+2,w,c
  1495  002254  B4D8               	btfsc	status,2,c
  1496  002256  0012               	return	
  1497                           
  1498                           ;Run.c: 74: {
  1499                           ;Run.c: 75: gs_Handle_Switch.Usart_OneDate = 0;
  1500  002258  0E00               	movlw	0
  1501  00225A  6E33               	movwf	_gs_Handle_Switch+2,c
  1502                           
  1503                           ;Run.c: 76: RS485_SendDate(ga_RS485_SendBuff,10);
  1504  00225C  0E3E               	movlw	low _ga_RS485_SendBuff
  1505  00225E  6E29               	movwf	RS485_SendDate@date_dress,c
  1506  002260  0E00               	movlw	high _ga_RS485_SendBuff
  1507  002262  6E2A               	movwf	RS485_SendDate@date_dress+1,c
  1508  002264  0E0A               	movlw	10
  1509  002266  6E2B               	movwf	RS485_SendDate@date_lenth,c
  1510  002268  ECE6  F00D         	call	_RS485_SendDate	;wreg free
  1511  00226C  0012               	return	
  1512  00226E  0012               	return		;funcret
  1513  002270                     __end_of_Run:
  1514                           	opt stack 0
  1515                           tblptru	equ	0xFF8
  1516                           tblptrh	equ	0xFF7
  1517                           tblptrl	equ	0xFF6
  1518                           tablat	equ	0xFF5
  1519                           prodh	equ	0xFF4
  1520                           prodl	equ	0xFF3
  1521                           intcon	equ	0xFF2
  1522                           postinc0	equ	0xFEE
  1523                           wreg	equ	0xFE8
  1524                           indf2	equ	0xFDF
  1525                           fsr2h	equ	0xFDA
  1526                           fsr2l	equ	0xFD9
  1527                           status	equ	0xFD8
  1528                           
  1529 ;; *************** function _RS485_SendDate *****************
  1530 ;; Defined at:
  1531 ;;		line 77 in file "_01_USER/My_USART.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;  date_dress      2   40[COMRAM] PTR unsigned char 
  1534 ;;		 -> ga_RS485_SendBuff(10), 
  1535 ;;  date_lenth      1   42[COMRAM] unsigned char 
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;		None
  1538 ;; Return value:  Size  Location     Type
  1539 ;;		None               void
  1540 ;; Registers used:
  1541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1547 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1549 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1550 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1551 ;;Total ram usage:        4 bytes
  1552 ;; Hardware stack levels used:    1
  1553 ;; Hardware stack levels required when called:    5
  1554 ;; This function calls:
  1555 ;;		_VerifyCRC
  1556 ;; This function is called by:
  1557 ;;		_Run
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           	psect	text10
  1562  001BCC                     __ptext10:
  1563                           	opt stack 0
  1564  001BCC                     _RS485_SendDate:
  1565                           	opt stack 24
  1566                           
  1567                           ;My_USART.c: 80: date_dress[--date_lenth] = 0xff;
  1568                           
  1569                           ;incstack = 0
  1570  001BCC  062B               	decf	RS485_SendDate@date_lenth,f,c
  1571  001BCE  502B               	movf	RS485_SendDate@date_lenth,w,c
  1572  001BD0  0D01               	mullw	1
  1573  001BD2  50F3               	movf	prodl,w,c
  1574  001BD4  2429               	addwf	RS485_SendDate@date_dress,w,c
  1575  001BD6  6ED9               	movwf	fsr2l,c
  1576  001BD8  50F4               	movf	prodh,w,c
  1577  001BDA  202A               	addwfc	RS485_SendDate@date_dress+1,w,c
  1578  001BDC  6EDA               	movwf	fsr2h,c
  1579  001BDE  0EFF               	movlw	255
  1580  001BE0  6EDF               	movwf	indf2,c
  1581                           
  1582                           ;My_USART.c: 83: VerifyCRC(date_dress,10);
  1583  001BE2  C029  F026         	movff	RS485_SendDate@date_dress,VerifyCRC@DataBuff
  1584  001BE6  C02A  F027         	movff	RS485_SendDate@date_dress+1,VerifyCRC@DataBuff+1
  1585  001BEA  0E0A               	movlw	10
  1586  001BEC  6E28               	movwf	VerifyCRC@date_lenth,c
  1587  001BEE  EC49  F00B         	call	_VerifyCRC	;wreg free
  1588                           
  1589                           ;My_USART.c: 86: while( (!TXSTA2bits.TRMT) );
  1590  001BF2  D000               	goto	l193
  1591  001BF4                     l193:
  1592  001BF4  010F               	movlb	15	; () banked
  1593  001BF6  A321               	btfss	33,1,b	;volatile
  1594  001BF8  D7FD               	goto	l193
  1595                           
  1596                           ; BSR set to: 15
  1597                           ;My_USART.c: 87: RG3 = 0;
  1598  001BFA  9686               	bcf	3974,3,c	;volatile
  1599                           
  1600                           ; BSR set to: 15
  1601                           ;My_USART.c: 90: TXREG2 = date_dress[date_lenth];
  1602  001BFC  502B               	movf	RS485_SendDate@date_lenth,w,c
  1603  001BFE  0D01               	mullw	1
  1604  001C00  50F3               	movf	prodl,w,c
  1605  001C02  2429               	addwf	RS485_SendDate@date_dress,w,c
  1606  001C04  6ED9               	movwf	fsr2l,c
  1607  001C06  50F4               	movf	prodh,w,c
  1608  001C08  202A               	addwfc	RS485_SendDate@date_dress+1,w,c
  1609  001C0A  6EDA               	movwf	fsr2h,c
  1610  001C0C  50DF               	movf	indf2,w,c
  1611  001C0E  010F               	movlb	15	; () banked
  1612  001C10  6F1C               	movwf	28,b	;volatile
  1613                           
  1614                           ;My_USART.c: 91: while( (!TXSTA2bits.TRMT) );
  1615  001C12  D000               	goto	l196
  1616  001C14                     l196:
  1617                           
  1618                           ; BSR set to: 15
  1619  001C14  010F               	movlb	15	; () banked
  1620  001C16  B321               	btfsc	33,1,b	;volatile
  1621  001C18  D027               	goto	l2924
  1622  001C1A  D7FC               	goto	l196
  1623                           
  1624                           ; BSR set to: 15
  1625                           ;My_USART.c: 94: while( date_lenth --)
  1626  001C1C  D025               	goto	l2924
  1627  001C1E                     l2920:
  1628                           
  1629                           ; BSR set to: 15
  1630                           ;My_USART.c: 95: {
  1631                           ;My_USART.c: 96: if(date_dress[date_lenth] == 0xff ) date_dress[date_lenth]--;
  1632  001C1E  502B               	movf	RS485_SendDate@date_lenth,w,c
  1633  001C20  0D01               	mullw	1
  1634  001C22  50F3               	movf	prodl,w,c
  1635  001C24  2429               	addwf	RS485_SendDate@date_dress,w,c
  1636  001C26  6ED9               	movwf	fsr2l,c
  1637  001C28  50F4               	movf	prodh,w,c
  1638  001C2A  202A               	addwfc	RS485_SendDate@date_dress+1,w,c
  1639  001C2C  6EDA               	movwf	fsr2h,c
  1640  001C2E  28DE               	incf	postinc2,w,c
  1641  001C30  A4D8               	btfss	status,2,c
  1642  001C32  D009               	goto	l201
  1643                           
  1644                           ; BSR set to: 15
  1645  001C34  502B               	movf	RS485_SendDate@date_lenth,w,c
  1646  001C36  0D01               	mullw	1
  1647  001C38  50F3               	movf	prodl,w,c
  1648  001C3A  2429               	addwf	RS485_SendDate@date_dress,w,c
  1649  001C3C  6ED9               	movwf	fsr2l,c
  1650  001C3E  50F4               	movf	prodh,w,c
  1651  001C40  202A               	addwfc	RS485_SendDate@date_dress+1,w,c
  1652  001C42  6EDA               	movwf	fsr2h,c
  1653  001C44  06DF               	decf	indf2,f,c
  1654  001C46                     l201:
  1655                           
  1656                           ; BSR set to: 15
  1657                           ;My_USART.c: 97: TXREG2 = date_dress[date_lenth];
  1658  001C46  502B               	movf	RS485_SendDate@date_lenth,w,c
  1659  001C48  0D01               	mullw	1
  1660  001C4A  50F3               	movf	prodl,w,c
  1661  001C4C  2429               	addwf	RS485_SendDate@date_dress,w,c
  1662  001C4E  6ED9               	movwf	fsr2l,c
  1663  001C50  50F4               	movf	prodh,w,c
  1664  001C52  202A               	addwfc	RS485_SendDate@date_dress+1,w,c
  1665  001C54  6EDA               	movwf	fsr2h,c
  1666  001C56  50DF               	movf	indf2,w,c
  1667  001C58  010F               	movlb	15	; () banked
  1668  001C5A  6F1C               	movwf	28,b	;volatile
  1669                           
  1670                           ;My_USART.c: 98: while( (!TXSTA2bits.TRMT));
  1671  001C5C  D000               	goto	l202
  1672  001C5E                     l202:
  1673                           
  1674                           ; BSR set to: 15
  1675  001C5E  010F               	movlb	15	; () banked
  1676  001C60  B321               	btfsc	33,1,b	;volatile
  1677  001C62  D002               	goto	l2924
  1678  001C64  D7FC               	goto	l202
  1679                           
  1680                           ; BSR set to: 15
  1681  001C66  D000               	goto	l2924
  1682  001C68                     l2924:
  1683                           
  1684                           ; BSR set to: 15
  1685  001C68  062B               	decf	RS485_SendDate@date_lenth,f,c
  1686  001C6A  282B               	incf	RS485_SendDate@date_lenth,w,c
  1687  001C6C  A4D8               	btfss	status,2,c
  1688  001C6E  D7D7               	goto	l2920
  1689                           
  1690                           ; BSR set to: 15
  1691                           ;My_USART.c: 99: }
  1692                           ;My_USART.c: 101: RG3 = 1;
  1693  001C70  8686               	bsf	3974,3,c	;volatile
  1694                           
  1695                           ; BSR set to: 15
  1696  001C72  0012               	return		;funcret
  1697  001C74                     __end_of_RS485_SendDate:
  1698                           	opt stack 0
  1699                           tblptru	equ	0xFF8
  1700                           tblptrh	equ	0xFF7
  1701                           tblptrl	equ	0xFF6
  1702                           tablat	equ	0xFF5
  1703                           prodh	equ	0xFF4
  1704                           prodl	equ	0xFF3
  1705                           intcon	equ	0xFF2
  1706                           postinc0	equ	0xFEE
  1707                           wreg	equ	0xFE8
  1708                           indf2	equ	0xFDF
  1709                           postinc2	equ	0xFDE
  1710                           fsr2h	equ	0xFDA
  1711                           fsr2l	equ	0xFD9
  1712                           status	equ	0xFD8
  1713                           
  1714 ;; *************** function _GetADC6 *****************
  1715 ;; Defined at:
  1716 ;;		line 67 in file "_01_USER/My_ADC.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;		None
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;		None
  1721 ;; Return value:  Size  Location     Type
  1722 ;;		None               void
  1723 ;; Registers used:
  1724 ;;		wreg, status,2, status,0, cstack
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1734 ;;Total ram usage:        0 bytes
  1735 ;; Hardware stack levels used:    1
  1736 ;; Hardware stack levels required when called:    5
  1737 ;; This function calls:
  1738 ;;		_BusyADC
  1739 ;;		_ConvertADC
  1740 ;;		_ReadADC
  1741 ;;		___ftdiv
  1742 ;;		___ftmul
  1743 ;;		___lwtoft
  1744 ;; This function is called by:
  1745 ;;		_Run
  1746 ;; This function uses a non-reentrant model
  1747 ;;
  1748                           
  1749                           	psect	text11
  1750  001EE0                     __ptext11:
  1751                           	opt stack 0
  1752  001EE0                     _GetADC6:
  1753                           	opt stack 24
  1754                           
  1755                           ;My_ADC.c: 69: ConvertADC();
  1756                           
  1757                           ; BSR set to: 15
  1758                           ;incstack = 0
  1759  001EE0  EC29  F012         	call	_ConvertADC	;wreg free
  1760                           
  1761                           ;My_ADC.c: 70: while(BusyADC());
  1762  001EE4  D000               	goto	l2990
  1763  001EE6                     l2990:
  1764  001EE6  EC17  F012         	call	_BusyADC	;wreg free
  1765  001EEA  0900               	iorlw	0
  1766  001EEC  A4D8               	btfss	status,2,c
  1767  001EEE  D7FB               	goto	l2990
  1768                           
  1769                           ;My_ADC.c: 71: gf_ADC6_Buff =(unsigned int)ReadADC()*4.096f/4095.0f;
  1770  001EF0  0E12               	movlw	18
  1771  001EF2  6E27               	movwf	___ftmul@f2,c
  1772  001EF4  0E83               	movlw	131
  1773  001EF6  6E28               	movwf	___ftmul@f2+1,c
  1774  001EF8  0E40               	movlw	64
  1775  001EFA  6E29               	movwf	___ftmul@f2+2,c
  1776  001EFC  EC0F  F012         	call	_ReadADC	;wreg free
  1777  001F00  C019  F021         	movff	?_ReadADC,___lwtoft@c
  1778  001F04  C01A  F022         	movff	?_ReadADC+1,___lwtoft@c+1
  1779  001F08  EC5F  F011         	call	___lwtoft	;wreg free
  1780  001F0C  C021  F024         	movff	?___lwtoft,___ftmul@f1
  1781  001F10  C022  F025         	movff	?___lwtoft+1,___ftmul@f1+1
  1782  001F14  C023  F026         	movff	?___lwtoft+2,___ftmul@f1+2
  1783  001F18  ECEE  F00B         	call	___ftmul	;wreg free
  1784  001F1C  C024  F0E4         	movff	?___ftmul,___ftdiv@f1
  1785  001F20  C025  F0E5         	movff	?___ftmul+1,___ftdiv@f1+1
  1786  001F24  C026  F0E6         	movff	?___ftmul+2,___ftdiv@f1+2
  1787  001F28  0EF0               	movlw	240
  1788  001F2A  0100               	movlb	0	; () banked
  1789  001F2C  6FE7               	movwf	___ftdiv@f2& (0+255),b
  1790  001F2E  0E7F               	movlw	127
  1791  001F30  0100               	movlb	0	; () banked
  1792  001F32  6FE8               	movwf	(___ftdiv@f2+1)& (0+255),b
  1793  001F34  0E45               	movlw	69
  1794  001F36  0100               	movlb	0	; () banked
  1795  001F38  6FE9               	movwf	(___ftdiv@f2+2)& (0+255),b
  1796  001F3A  ECA0  F00A         	call	___ftdiv	;wreg free
  1797  001F3E  C0E4  F035         	movff	?___ftdiv,_gf_ADC6_Buff	;volatile
  1798  001F42  C0E5  F036         	movff	?___ftdiv+1,_gf_ADC6_Buff+1	;volatile
  1799  001F46  C0E6  F037         	movff	?___ftdiv+2,_gf_ADC6_Buff+2	;volatile
  1800  001F4A  0012               	return		;funcret
  1801  001F4C                     __end_of_GetADC6:
  1802                           	opt stack 0
  1803                           tblptru	equ	0xFF8
  1804                           tblptrh	equ	0xFF7
  1805                           tblptrl	equ	0xFF6
  1806                           tablat	equ	0xFF5
  1807                           prodh	equ	0xFF4
  1808                           prodl	equ	0xFF3
  1809                           intcon	equ	0xFF2
  1810                           postinc0	equ	0xFEE
  1811                           wreg	equ	0xFE8
  1812                           indf2	equ	0xFDF
  1813                           postinc2	equ	0xFDE
  1814                           fsr2h	equ	0xFDA
  1815                           fsr2l	equ	0xFD9
  1816                           status	equ	0xFD8
  1817                           
  1818 ;; *************** function ___lwtoft *****************
  1819 ;; Defined at:
  1820 ;;		line 28 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;  c               2   32[COMRAM] unsigned int 
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;		None
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  3   32[COMRAM] float 
  1827 ;; Registers used:
  1828 ;;		wreg, status,2, status,0, cstack
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1834 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1837 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1838 ;;Total ram usage:        3 bytes
  1839 ;; Hardware stack levels used:    1
  1840 ;; Hardware stack levels required when called:    4
  1841 ;; This function calls:
  1842 ;;		___ftpack
  1843 ;; This function is called by:
  1844 ;;		_GetADC6
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           	psect	text12
  1849  0022BE                     __ptext12:
  1850                           	opt stack 0
  1851  0022BE                     ___lwtoft:
  1852                           	opt stack 24
  1853                           
  1854                           ;incstack = 0
  1855  0022BE  C021  F019         	movff	___lwtoft@c,___ftpack@arg
  1856  0022C2  C022  F01A         	movff	___lwtoft@c+1,___ftpack@arg+1
  1857  0022C6  6A1B               	clrf	___ftpack@arg+2,c
  1858  0022C8  0E8E               	movlw	142
  1859  0022CA  6E1C               	movwf	___ftpack@exp,c
  1860  0022CC  0E00               	movlw	0
  1861  0022CE  6E1D               	movwf	___ftpack@sign,c
  1862  0022D0  EC83  F00D         	call	___ftpack	;wreg free
  1863  0022D4  C019  F021         	movff	?___ftpack,?___lwtoft
  1864  0022D8  C01A  F022         	movff	?___ftpack+1,?___lwtoft+1
  1865  0022DC  C01B  F023         	movff	?___ftpack+2,?___lwtoft+2
  1866  0022E0  0012               	return	
  1867  0022E2  0012               	return		;funcret
  1868  0022E4                     __end_of___lwtoft:
  1869                           	opt stack 0
  1870                           tblptru	equ	0xFF8
  1871                           tblptrh	equ	0xFF7
  1872                           tblptrl	equ	0xFF6
  1873                           tablat	equ	0xFF5
  1874                           prodh	equ	0xFF4
  1875                           prodl	equ	0xFF3
  1876                           intcon	equ	0xFF2
  1877                           postinc0	equ	0xFEE
  1878                           wreg	equ	0xFE8
  1879                           indf2	equ	0xFDF
  1880                           postinc2	equ	0xFDE
  1881                           fsr2h	equ	0xFDA
  1882                           fsr2l	equ	0xFD9
  1883                           status	equ	0xFD8
  1884                           
  1885 ;; *************** function ___ftmul *****************
  1886 ;; Defined at:
  1887 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;  f1              3   35[COMRAM] float 
  1890 ;;  f2              3   38[COMRAM] float 
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;  f3_as_produc    3    1[BANK0 ] unsigned um
  1893 ;;  sign            1    5[BANK0 ] unsigned char 
  1894 ;;  cntr            1    4[BANK0 ] unsigned char 
  1895 ;;  exp             1    0[BANK0 ] unsigned char 
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  3   35[COMRAM] float 
  1898 ;; Registers used:
  1899 ;;		wreg, status,2, status,0, cstack
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1905 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1906 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1907 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1908 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1909 ;;Total ram usage:       15 bytes
  1910 ;; Hardware stack levels used:    1
  1911 ;; Hardware stack levels required when called:    4
  1912 ;; This function calls:
  1913 ;;		___ftpack
  1914 ;; This function is called by:
  1915 ;;		_GetADC6
  1916 ;;		_TM1640_Show_Decimal
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           	psect	text13
  1921  0017DC                     __ptext13:
  1922                           	opt stack 0
  1923  0017DC                     ___ftmul:
  1924                           	opt stack 24
  1925                           
  1926                           ;incstack = 0
  1927  0017DC  C026  F02A         	movff	___ftmul@f1+2,??___ftmul
  1928  0017E0  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  1929  0017E2  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  1930  0017E4  3425               	rlcf	___ftmul@f1+1,w,c
  1931  0017E6  362A               	rlcf	??___ftmul& (0+255),f,c
  1932  0017E8  E301               	bnc	u2841
  1933  0017EA  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  1934  0017EC                     u2841:
  1935  0017EC  502A               	movf	??___ftmul,w,c
  1936  0017EE  0100               	movlb	0	; () banked
  1937  0017F0  6FDE               	movwf	___ftmul@exp& (0+255),b
  1938  0017F2  0100               	movlb	0	; () banked
  1939  0017F4  51DE               	movf	___ftmul@exp& (0+255),w,b
  1940  0017F6  A4D8               	btfss	status,2,c
  1941  0017F8  D007               	goto	l2868
  1942                           
  1943                           ; BSR set to: 0
  1944  0017FA  0E00               	movlw	0
  1945  0017FC  6E24               	movwf	?___ftmul,c
  1946  0017FE  0E00               	movlw	0
  1947  001800  6E25               	movwf	?___ftmul+1,c
  1948  001802  0E00               	movlw	0
  1949  001804  6E26               	movwf	?___ftmul+2,c
  1950                           
  1951                           ; BSR set to: 0
  1952  001806  0012               	return	
  1953  001808                     l2868:
  1954                           
  1955                           ; BSR set to: 0
  1956  001808  C029  F02A         	movff	___ftmul@f2+2,??___ftmul
  1957  00180C  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  1958  00180E  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  1959  001810  3428               	rlcf	___ftmul@f2+1,w,c
  1960  001812  362A               	rlcf	??___ftmul& (0+255),f,c
  1961  001814  E301               	bnc	u2861
  1962  001816  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  1963  001818                     u2861:
  1964  001818  502A               	movf	??___ftmul,w,c
  1965  00181A  0100               	movlb	0	; () banked
  1966  00181C  6FE3               	movwf	___ftmul@sign& (0+255),b
  1967  00181E  0100               	movlb	0	; () banked
  1968  001820  51E3               	movf	___ftmul@sign& (0+255),w,b
  1969  001822  A4D8               	btfss	status,2,c
  1970  001824  D007               	goto	l2874
  1971                           
  1972                           ; BSR set to: 0
  1973  001826  0E00               	movlw	0
  1974  001828  6E24               	movwf	?___ftmul,c
  1975  00182A  0E00               	movlw	0
  1976  00182C  6E25               	movwf	?___ftmul+1,c
  1977  00182E  0E00               	movlw	0
  1978  001830  6E26               	movwf	?___ftmul+2,c
  1979                           
  1980                           ; BSR set to: 0
  1981  001832  0012               	return	
  1982  001834                     l2874:
  1983                           
  1984                           ; BSR set to: 0
  1985  001834  0100               	movlb	0	; () banked
  1986  001836  51E3               	movf	___ftmul@sign& (0+255),w,b
  1987  001838  0F7B               	addlw	123
  1988  00183A  0100               	movlb	0	; () banked
  1989  00183C  27DE               	addwf	___ftmul@exp& (0+255),f,b
  1990                           
  1991                           ; BSR set to: 0
  1992  00183E  C026  F0E3         	movff	___ftmul@f1+2,___ftmul@sign
  1993  001842  5029               	movf	___ftmul@f2+2,w,c
  1994  001844  0100               	movlb	0	; () banked
  1995  001846  1BE3               	xorwf	___ftmul@sign& (0+255),f,b
  1996  001848  0E80               	movlw	128
  1997  00184A  0100               	movlb	0	; () banked
  1998  00184C  17E3               	andwf	___ftmul@sign& (0+255),f,b
  1999                           
  2000                           ; BSR set to: 0
  2001  00184E  8E25               	bsf	___ftmul@f1+1,7,c
  2002                           
  2003                           ; BSR set to: 0
  2004  001850  8E28               	bsf	___ftmul@f2+1,7,c
  2005                           
  2006                           ; BSR set to: 0
  2007  001852  0EFF               	movlw	255
  2008  001854  1627               	andwf	___ftmul@f2,f,c
  2009  001856  0EFF               	movlw	255
  2010  001858  1628               	andwf	___ftmul@f2+1,f,c
  2011  00185A  0E00               	movlw	0
  2012  00185C  1629               	andwf	___ftmul@f2+2,f,c
  2013                           
  2014                           ; BSR set to: 0
  2015  00185E  0E00               	movlw	0
  2016  001860  0100               	movlb	0	; () banked
  2017  001862  6FDF               	movwf	___ftmul@f3_as_product& (0+255),b
  2018  001864  0E00               	movlw	0
  2019  001866  0100               	movlb	0	; () banked
  2020  001868  6FE0               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  2021  00186A  0E00               	movlw	0
  2022  00186C  0100               	movlb	0	; () banked
  2023  00186E  6FE1               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  2024                           
  2025                           ; BSR set to: 0
  2026  001870  0E07               	movlw	7
  2027  001872  0100               	movlb	0	; () banked
  2028  001874  6FE2               	movwf	___ftmul@cntr& (0+255),b
  2029  001876  D000               	goto	l2888
  2030  001878                     l2888:
  2031                           
  2032                           ; BSR set to: 0
  2033  001878  A024               	btfss	___ftmul@f1,0,c
  2034  00187A  D00A               	goto	l2892
  2035                           
  2036                           ; BSR set to: 0
  2037  00187C  5027               	movf	___ftmul@f2,w,c
  2038  00187E  0100               	movlb	0	; () banked
  2039  001880  27DF               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2040  001882  5028               	movf	___ftmul@f2+1,w,c
  2041  001884  0100               	movlb	0	; () banked
  2042  001886  23E0               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2043  001888  5029               	movf	___ftmul@f2+2,w,c
  2044  00188A  0100               	movlb	0	; () banked
  2045  00188C  23E1               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2046  00188E  D000               	goto	l2892
  2047  001890                     l2892:
  2048                           
  2049                           ; BSR set to: 0
  2050  001890  90D8               	bcf	status,0,c
  2051  001892  3226               	rrcf	___ftmul@f1+2,f,c
  2052  001894  3225               	rrcf	___ftmul@f1+1,f,c
  2053  001896  3224               	rrcf	___ftmul@f1,f,c
  2054  001898  90D8               	bcf	status,0,c
  2055  00189A  3627               	rlcf	___ftmul@f2,f,c
  2056  00189C  3628               	rlcf	___ftmul@f2+1,f,c
  2057  00189E  3629               	rlcf	___ftmul@f2+2,f,c
  2058                           
  2059                           ; BSR set to: 0
  2060  0018A0  0100               	movlb	0	; () banked
  2061  0018A2  2FE2               	decfsz	___ftmul@cntr& (0+255),f,b
  2062  0018A4  D7E9               	goto	l2888
  2063  0018A6  D000               	goto	l2896
  2064  0018A8                     l2896:
  2065                           
  2066                           ; BSR set to: 0
  2067  0018A8  0E09               	movlw	9
  2068  0018AA  0100               	movlb	0	; () banked
  2069  0018AC  6FE2               	movwf	___ftmul@cntr& (0+255),b
  2070  0018AE  D000               	goto	l2898
  2071  0018B0                     l2898:
  2072                           
  2073                           ; BSR set to: 0
  2074  0018B0  A024               	btfss	___ftmul@f1,0,c
  2075  0018B2  D00A               	goto	l2902
  2076                           
  2077                           ; BSR set to: 0
  2078  0018B4  5027               	movf	___ftmul@f2,w,c
  2079  0018B6  0100               	movlb	0	; () banked
  2080  0018B8  27DF               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2081  0018BA  5028               	movf	___ftmul@f2+1,w,c
  2082  0018BC  0100               	movlb	0	; () banked
  2083  0018BE  23E0               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2084  0018C0  5029               	movf	___ftmul@f2+2,w,c
  2085  0018C2  0100               	movlb	0	; () banked
  2086  0018C4  23E1               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2087  0018C6  D000               	goto	l2902
  2088  0018C8                     l2902:
  2089                           
  2090                           ; BSR set to: 0
  2091  0018C8  90D8               	bcf	status,0,c
  2092  0018CA  3226               	rrcf	___ftmul@f1+2,f,c
  2093  0018CC  3225               	rrcf	___ftmul@f1+1,f,c
  2094  0018CE  3224               	rrcf	___ftmul@f1,f,c
  2095  0018D0  0100               	movlb	0	; () banked
  2096  0018D2  90D8               	bcf	status,0,c
  2097  0018D4  33E1               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  2098  0018D6  33E0               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  2099  0018D8  33DF               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  2100                           
  2101                           ; BSR set to: 0
  2102  0018DA  0100               	movlb	0	; () banked
  2103  0018DC  2FE2               	decfsz	___ftmul@cntr& (0+255),f,b
  2104  0018DE  D7E8               	goto	l2898
  2105  0018E0  D000               	goto	l2906
  2106  0018E2                     l2906:
  2107                           
  2108                           ; BSR set to: 0
  2109  0018E2  C0DF  F019         	movff	___ftmul@f3_as_product,___ftpack@arg
  2110  0018E6  C0E0  F01A         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2111  0018EA  C0E1  F01B         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2112  0018EE  C0DE  F01C         	movff	___ftmul@exp,___ftpack@exp
  2113  0018F2  C0E3  F01D         	movff	___ftmul@sign,___ftpack@sign
  2114  0018F6  EC83  F00D         	call	___ftpack	;wreg free
  2115  0018FA  C019  F024         	movff	?___ftpack,?___ftmul
  2116  0018FE  C01A  F025         	movff	?___ftpack+1,?___ftmul+1
  2117  001902  C01B  F026         	movff	?___ftpack+2,?___ftmul+2
  2118  001906  0012               	return	
  2119  001908  0012               	return		;funcret
  2120  00190A                     __end_of___ftmul:
  2121                           	opt stack 0
  2122                           tblptru	equ	0xFF8
  2123                           tblptrh	equ	0xFF7
  2124                           tblptrl	equ	0xFF6
  2125                           tablat	equ	0xFF5
  2126                           prodh	equ	0xFF4
  2127                           prodl	equ	0xFF3
  2128                           intcon	equ	0xFF2
  2129                           postinc0	equ	0xFEE
  2130                           wreg	equ	0xFE8
  2131                           indf2	equ	0xFDF
  2132                           postinc2	equ	0xFDE
  2133                           fsr2h	equ	0xFDA
  2134                           fsr2l	equ	0xFD9
  2135                           status	equ	0xFD8
  2136                           
  2137 ;; *************** function ___ftdiv *****************
  2138 ;; Defined at:
  2139 ;;		line 54 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  2140 ;; Parameters:    Size  Location     Type
  2141 ;;  f1              3    6[BANK0 ] float 
  2142 ;;  f2              3    9[BANK0 ] float 
  2143 ;; Auto vars:     Size  Location     Type
  2144 ;;  f3              3   16[BANK0 ] float 
  2145 ;;  sign            1   20[BANK0 ] unsigned char 
  2146 ;;  exp             1   19[BANK0 ] unsigned char 
  2147 ;;  cntr            1   15[BANK0 ] unsigned char 
  2148 ;; Return value:  Size  Location     Type
  2149 ;;                  3    6[BANK0 ] float 
  2150 ;; Registers used:
  2151 ;;		wreg, status,2, status,0, cstack
  2152 ;; Tracked objects:
  2153 ;;		On entry : 0/0
  2154 ;;		On exit  : 0/0
  2155 ;;		Unchanged: 0/0
  2156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2157 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2158 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2159 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2160 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2161 ;;Total ram usage:       15 bytes
  2162 ;; Hardware stack levels used:    1
  2163 ;; Hardware stack levels required when called:    4
  2164 ;; This function calls:
  2165 ;;		___ftpack
  2166 ;; This function is called by:
  2167 ;;		_GetADC6
  2168 ;;		_TM1640_Show_Decimal
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172                           	psect	text14
  2173  001540                     __ptext14:
  2174                           	opt stack 0
  2175  001540                     ___ftdiv:
  2176                           	opt stack 24
  2177                           
  2178                           ;incstack = 0
  2179  001540  C0E6  F0EA         	movff	___ftdiv@f1+2,??___ftdiv
  2180  001544  0100               	movlb	0	; () banked
  2181  001546  6BEB               	clrf	(??___ftdiv+1)& (0+255),b
  2182  001548  6BEC               	clrf	(??___ftdiv+2)& (0+255),b
  2183  00154A  0100               	movlb	0	; () banked
  2184  00154C  35E5               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  2185  00154E  0100               	movlb	0	; () banked
  2186  001550  37EA               	rlcf	??___ftdiv& (0+255),f,b
  2187  001552  E301               	bnc	u2791
  2188  001554  81EB               	bsf	(??___ftdiv+1)& (0+255),0,b
  2189  001556                     u2791:
  2190  001556  0100               	movlb	0	; () banked
  2191  001558  51EA               	movf	??___ftdiv& (0+255),w,b
  2192  00155A  0100               	movlb	0	; () banked
  2193  00155C  6FF1               	movwf	___ftdiv@exp& (0+255),b
  2194  00155E  0100               	movlb	0	; () banked
  2195  001560  51F1               	movf	___ftdiv@exp& (0+255),w,b
  2196  001562  A4D8               	btfss	status,2,c
  2197  001564  D00A               	goto	l2822
  2198                           
  2199                           ; BSR set to: 0
  2200  001566  0E00               	movlw	0
  2201  001568  0100               	movlb	0	; () banked
  2202  00156A  6FE4               	movwf	?___ftdiv& (0+255),b
  2203  00156C  0E00               	movlw	0
  2204  00156E  0100               	movlb	0	; () banked
  2205  001570  6FE5               	movwf	(?___ftdiv+1)& (0+255),b
  2206  001572  0E00               	movlw	0
  2207  001574  0100               	movlb	0	; () banked
  2208  001576  6FE6               	movwf	(?___ftdiv+2)& (0+255),b
  2209                           
  2210                           ; BSR set to: 0
  2211  001578  0012               	return	
  2212  00157A                     l2822:
  2213                           
  2214                           ; BSR set to: 0
  2215  00157A  C0E9  F0EA         	movff	___ftdiv@f2+2,??___ftdiv
  2216  00157E  0100               	movlb	0	; () banked
  2217  001580  6BEB               	clrf	(??___ftdiv+1)& (0+255),b
  2218  001582  6BEC               	clrf	(??___ftdiv+2)& (0+255),b
  2219  001584  0100               	movlb	0	; () banked
  2220  001586  35E8               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  2221  001588  0100               	movlb	0	; () banked
  2222  00158A  37EA               	rlcf	??___ftdiv& (0+255),f,b
  2223  00158C  E301               	bnc	u2811
  2224  00158E  81EB               	bsf	(??___ftdiv+1)& (0+255),0,b
  2225  001590                     u2811:
  2226  001590  0100               	movlb	0	; () banked
  2227  001592  51EA               	movf	??___ftdiv& (0+255),w,b
  2228  001594  0100               	movlb	0	; () banked
  2229  001596  6FF2               	movwf	___ftdiv@sign& (0+255),b
  2230  001598  0100               	movlb	0	; () banked
  2231  00159A  51F2               	movf	___ftdiv@sign& (0+255),w,b
  2232  00159C  A4D8               	btfss	status,2,c
  2233  00159E  D00A               	goto	l2828
  2234                           
  2235                           ; BSR set to: 0
  2236  0015A0  0E00               	movlw	0
  2237  0015A2  0100               	movlb	0	; () banked
  2238  0015A4  6FE4               	movwf	?___ftdiv& (0+255),b
  2239  0015A6  0E00               	movlw	0
  2240  0015A8  0100               	movlb	0	; () banked
  2241  0015AA  6FE5               	movwf	(?___ftdiv+1)& (0+255),b
  2242  0015AC  0E00               	movlw	0
  2243  0015AE  0100               	movlb	0	; () banked
  2244  0015B0  6FE6               	movwf	(?___ftdiv+2)& (0+255),b
  2245                           
  2246                           ; BSR set to: 0
  2247  0015B2  0012               	return	
  2248  0015B4                     l2828:
  2249                           
  2250                           ; BSR set to: 0
  2251  0015B4  0E00               	movlw	0
  2252  0015B6  0100               	movlb	0	; () banked
  2253  0015B8  6FEE               	movwf	___ftdiv@f3& (0+255),b
  2254  0015BA  0E00               	movlw	0
  2255  0015BC  0100               	movlb	0	; () banked
  2256  0015BE  6FEF               	movwf	(___ftdiv@f3+1)& (0+255),b
  2257  0015C0  0E00               	movlw	0
  2258  0015C2  0100               	movlb	0	; () banked
  2259  0015C4  6FF0               	movwf	(___ftdiv@f3+2)& (0+255),b
  2260                           
  2261                           ; BSR set to: 0
  2262  0015C6  0100               	movlb	0	; () banked
  2263  0015C8  51F2               	movf	___ftdiv@sign& (0+255),w,b
  2264  0015CA  0F89               	addlw	137
  2265  0015CC  0100               	movlb	0	; () banked
  2266  0015CE  5FF1               	subwf	___ftdiv@exp& (0+255),f,b
  2267                           
  2268                           ; BSR set to: 0
  2269  0015D0  C0E6  F0F2         	movff	___ftdiv@f1+2,___ftdiv@sign
  2270                           
  2271                           ; BSR set to: 0
  2272  0015D4  0100               	movlb	0	; () banked
  2273  0015D6  51E9               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2274  0015D8  0100               	movlb	0	; () banked
  2275  0015DA  1BF2               	xorwf	___ftdiv@sign& (0+255),f,b
  2276                           
  2277                           ; BSR set to: 0
  2278  0015DC  0E80               	movlw	128
  2279  0015DE  0100               	movlb	0	; () banked
  2280  0015E0  17F2               	andwf	___ftdiv@sign& (0+255),f,b
  2281                           
  2282                           ; BSR set to: 0
  2283  0015E2  0100               	movlb	0	; () banked
  2284  0015E4  8FE5               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  2285                           
  2286                           ; BSR set to: 0
  2287  0015E6  0EFF               	movlw	255
  2288  0015E8  0100               	movlb	0	; () banked
  2289  0015EA  17E4               	andwf	___ftdiv@f1& (0+255),f,b
  2290  0015EC  0EFF               	movlw	255
  2291  0015EE  0100               	movlb	0	; () banked
  2292  0015F0  17E5               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  2293  0015F2  0E00               	movlw	0
  2294  0015F4  0100               	movlb	0	; () banked
  2295  0015F6  17E6               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  2296                           
  2297                           ; BSR set to: 0
  2298  0015F8  0100               	movlb	0	; () banked
  2299  0015FA  8FE8               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  2300                           
  2301                           ; BSR set to: 0
  2302  0015FC  0EFF               	movlw	255
  2303  0015FE  0100               	movlb	0	; () banked
  2304  001600  17E7               	andwf	___ftdiv@f2& (0+255),f,b
  2305  001602  0EFF               	movlw	255
  2306  001604  0100               	movlb	0	; () banked
  2307  001606  17E8               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  2308  001608  0E00               	movlw	0
  2309  00160A  0100               	movlb	0	; () banked
  2310  00160C  17E9               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  2311                           
  2312                           ; BSR set to: 0
  2313  00160E  0E18               	movlw	24
  2314  001610  0100               	movlb	0	; () banked
  2315  001612  6FED               	movwf	___ftdiv@cntr& (0+255),b
  2316  001614  D000               	goto	l2848
  2317  001616                     l2848:
  2318                           
  2319                           ; BSR set to: 0
  2320  001616  0100               	movlb	0	; () banked
  2321  001618  90D8               	bcf	status,0,c
  2322  00161A  37EE               	rlcf	___ftdiv@f3& (0+255),f,b
  2323  00161C  37EF               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  2324  00161E  37F0               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  2325                           
  2326                           ; BSR set to: 0
  2327  001620  0100               	movlb	0	; () banked
  2328  001622  51E7               	movf	___ftdiv@f2& (0+255),w,b
  2329  001624  0100               	movlb	0	; () banked
  2330  001626  5DE4               	subwf	___ftdiv@f1& (0+255),w,b
  2331  001628  0100               	movlb	0	; () banked
  2332  00162A  51E8               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2333  00162C  0100               	movlb	0	; () banked
  2334  00162E  59E5               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  2335  001630  0100               	movlb	0	; () banked
  2336  001632  51E9               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2337  001634  0100               	movlb	0	; () banked
  2338  001636  59E6               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  2339  001638  A0D8               	btfss	status,0,c
  2340  00163A  D00E               	goto	l874
  2341                           
  2342                           ; BSR set to: 0
  2343  00163C  0100               	movlb	0	; () banked
  2344  00163E  51E7               	movf	___ftdiv@f2& (0+255),w,b
  2345  001640  0100               	movlb	0	; () banked
  2346  001642  5FE4               	subwf	___ftdiv@f1& (0+255),f,b
  2347  001644  0100               	movlb	0	; () banked
  2348  001646  51E8               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2349  001648  0100               	movlb	0	; () banked
  2350  00164A  5BE5               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  2351  00164C  0100               	movlb	0	; () banked
  2352  00164E  51E9               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2353  001650  0100               	movlb	0	; () banked
  2354  001652  5BE6               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  2355                           
  2356                           ; BSR set to: 0
  2357  001654  0100               	movlb	0	; () banked
  2358  001656  81EE               	bsf	___ftdiv@f3& (0+255),0,b
  2359  001658                     l874:
  2360                           
  2361                           ; BSR set to: 0
  2362  001658  0100               	movlb	0	; () banked
  2363  00165A  90D8               	bcf	status,0,c
  2364  00165C  37E4               	rlcf	___ftdiv@f1& (0+255),f,b
  2365  00165E  37E5               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  2366  001660  37E6               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  2367                           
  2368                           ; BSR set to: 0
  2369  001662  0100               	movlb	0	; () banked
  2370  001664  2FED               	decfsz	___ftdiv@cntr& (0+255),f,b
  2371  001666  D7D7               	goto	l2848
  2372  001668  D000               	goto	l2858
  2373  00166A                     l2858:
  2374                           
  2375                           ; BSR set to: 0
  2376  00166A  C0EE  F019         	movff	___ftdiv@f3,___ftpack@arg
  2377  00166E  C0EF  F01A         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2378  001672  C0F0  F01B         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2379  001676  C0F1  F01C         	movff	___ftdiv@exp,___ftpack@exp
  2380  00167A  C0F2  F01D         	movff	___ftdiv@sign,___ftpack@sign
  2381  00167E  EC83  F00D         	call	___ftpack	;wreg free
  2382  001682  C019  F0E4         	movff	?___ftpack,?___ftdiv
  2383  001686  C01A  F0E5         	movff	?___ftpack+1,?___ftdiv+1
  2384  00168A  C01B  F0E6         	movff	?___ftpack+2,?___ftdiv+2
  2385  00168E  0012               	return	
  2386  001690  0012               	return		;funcret
  2387  001692                     __end_of___ftdiv:
  2388                           	opt stack 0
  2389                           tblptru	equ	0xFF8
  2390                           tblptrh	equ	0xFF7
  2391                           tblptrl	equ	0xFF6
  2392                           tablat	equ	0xFF5
  2393                           prodh	equ	0xFF4
  2394                           prodl	equ	0xFF3
  2395                           intcon	equ	0xFF2
  2396                           postinc0	equ	0xFEE
  2397                           wreg	equ	0xFE8
  2398                           indf2	equ	0xFDF
  2399                           postinc2	equ	0xFDE
  2400                           fsr2h	equ	0xFDA
  2401                           fsr2l	equ	0xFD9
  2402                           status	equ	0xFD8
  2403                           
  2404 ;; *************** function ___ftpack *****************
  2405 ;; Defined at:
  2406 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;  arg             3   24[COMRAM] unsigned um
  2409 ;;  exp             1   27[COMRAM] unsigned char 
  2410 ;;  sign            1   28[COMRAM] unsigned char 
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;		None
  2413 ;; Return value:  Size  Location     Type
  2414 ;;                  3   24[COMRAM] float 
  2415 ;; Registers used:
  2416 ;;		wreg, status,2, status,0
  2417 ;; Tracked objects:
  2418 ;;		On entry : 0/0
  2419 ;;		On exit  : 0/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2422 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2424 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2425 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2426 ;;Total ram usage:        8 bytes
  2427 ;; Hardware stack levels used:    1
  2428 ;; Hardware stack levels required when called:    3
  2429 ;; This function calls:
  2430 ;;		Nothing
  2431 ;; This function is called by:
  2432 ;;		___ftdiv
  2433 ;;		___ftmul
  2434 ;;		___lwtoft
  2435 ;; This function uses a non-reentrant model
  2436 ;;
  2437                           
  2438                           	psect	text15
  2439  001B06                     __ptext15:
  2440                           	opt stack 0
  2441  001B06                     ___ftpack:
  2442                           	opt stack 24
  2443                           
  2444                           ;incstack = 0
  2445  001B06  501C               	movf	___ftpack@exp,w,c
  2446  001B08  B4D8               	btfsc	status,2,c
  2447  001B0A  D005               	goto	l2730
  2448  001B0C  5019               	movf	___ftpack@arg,w,c
  2449  001B0E  101A               	iorwf	___ftpack@arg+1,w,c
  2450  001B10  101B               	iorwf	___ftpack@arg+2,w,c
  2451  001B12  A4D8               	btfss	status,2,c
  2452  001B14  D00E               	goto	l2736
  2453  001B16                     l2730:
  2454  001B16  0E00               	movlw	0
  2455  001B18  6E19               	movwf	?___ftpack,c
  2456  001B1A  0E00               	movlw	0
  2457  001B1C  6E1A               	movwf	?___ftpack+1,c
  2458  001B1E  0E00               	movlw	0
  2459  001B20  6E1B               	movwf	?___ftpack+2,c
  2460  001B22  0012               	return	
  2461  001B24  D006               	goto	l2736
  2462  001B26                     l2734:
  2463  001B26  2A1C               	incf	___ftpack@exp,f,c
  2464  001B28  90D8               	bcf	status,0,c
  2465  001B2A  321B               	rrcf	___ftpack@arg+2,f,c
  2466  001B2C  321A               	rrcf	___ftpack@arg+1,f,c
  2467  001B2E  3219               	rrcf	___ftpack@arg,f,c
  2468  001B30  D000               	goto	l2736
  2469  001B32                     l2736:
  2470  001B32  0E00               	movlw	0
  2471  001B34  1419               	andwf	___ftpack@arg,w,c
  2472  001B36  6E1E               	movwf	??___ftpack& (0+255),c
  2473  001B38  0E00               	movlw	0
  2474  001B3A  141A               	andwf	___ftpack@arg+1,w,c
  2475  001B3C  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  2476  001B3E  0EFE               	movlw	254
  2477  001B40  141B               	andwf	___ftpack@arg+2,w,c
  2478  001B42  6E20               	movwf	(??___ftpack+2)& (0+255),c
  2479  001B44  501E               	movf	??___ftpack,w,c
  2480  001B46  101F               	iorwf	??___ftpack+1,w,c
  2481  001B48  1020               	iorwf	??___ftpack+2,w,c
  2482  001B4A  B4D8               	btfsc	status,2,c
  2483  001B4C  D00E               	goto	l2742
  2484  001B4E  D7EB               	goto	l2734
  2485  001B50  D00C               	goto	l2742
  2486  001B52                     l2738:
  2487  001B52  2A1C               	incf	___ftpack@exp,f,c
  2488  001B54  0E01               	movlw	1
  2489  001B56  2619               	addwf	___ftpack@arg,f,c
  2490  001B58  0E00               	movlw	0
  2491  001B5A  221A               	addwfc	___ftpack@arg+1,f,c
  2492  001B5C  0E00               	movlw	0
  2493  001B5E  221B               	addwfc	___ftpack@arg+2,f,c
  2494  001B60  90D8               	bcf	status,0,c
  2495  001B62  321B               	rrcf	___ftpack@arg+2,f,c
  2496  001B64  321A               	rrcf	___ftpack@arg+1,f,c
  2497  001B66  3219               	rrcf	___ftpack@arg,f,c
  2498  001B68  D000               	goto	l2742
  2499  001B6A                     l2742:
  2500  001B6A  0E00               	movlw	0
  2501  001B6C  1419               	andwf	___ftpack@arg,w,c
  2502  001B6E  6E1E               	movwf	??___ftpack& (0+255),c
  2503  001B70  0E00               	movlw	0
  2504  001B72  141A               	andwf	___ftpack@arg+1,w,c
  2505  001B74  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  2506  001B76  0EFF               	movlw	255
  2507  001B78  141B               	andwf	___ftpack@arg+2,w,c
  2508  001B7A  6E20               	movwf	(??___ftpack+2)& (0+255),c
  2509  001B7C  501E               	movf	??___ftpack,w,c
  2510  001B7E  101F               	iorwf	??___ftpack+1,w,c
  2511  001B80  1020               	iorwf	??___ftpack+2,w,c
  2512  001B82  B4D8               	btfsc	status,2,c
  2513  001B84  D008               	goto	l2746
  2514  001B86  D7E5               	goto	l2738
  2515  001B88  D006               	goto	l2746
  2516  001B8A                     l2744:
  2517  001B8A  061C               	decf	___ftpack@exp,f,c
  2518  001B8C  90D8               	bcf	status,0,c
  2519  001B8E  3619               	rlcf	___ftpack@arg,f,c
  2520  001B90  361A               	rlcf	___ftpack@arg+1,f,c
  2521  001B92  361B               	rlcf	___ftpack@arg+2,f,c
  2522  001B94  D000               	goto	l2746
  2523  001B96                     l2746:
  2524  001B96  BE1A               	btfsc	___ftpack@arg+1,7,c
  2525  001B98  D004               	goto	l810
  2526  001B9A  0E02               	movlw	2
  2527  001B9C  601C               	cpfslt	___ftpack@exp,c
  2528  001B9E  D7F5               	goto	l2744
  2529  001BA0  D000               	goto	l810
  2530  001BA2                     l810:
  2531  001BA2  B01C               	btfsc	___ftpack@exp,0,c
  2532  001BA4  D002               	goto	l2752
  2533  001BA6  9E1A               	bcf	___ftpack@arg+1,7,c
  2534  001BA8  D000               	goto	l2752
  2535  001BAA                     l2752:
  2536  001BAA  90D8               	bcf	status,0,c
  2537  001BAC  321C               	rrcf	___ftpack@exp,f,c
  2538  001BAE  501C               	movf	___ftpack@exp,w,c
  2539  001BB0  121B               	iorwf	___ftpack@arg+2,f,c
  2540  001BB2  501D               	movf	___ftpack@sign,w,c
  2541  001BB4  B4D8               	btfsc	status,2,c
  2542  001BB6  D002               	goto	l2758
  2543  001BB8  8E1B               	bsf	___ftpack@arg+2,7,c
  2544  001BBA  D000               	goto	l2758
  2545  001BBC                     l2758:
  2546  001BBC  C019  F019         	movff	___ftpack@arg,?___ftpack
  2547  001BC0  C01A  F01A         	movff	___ftpack@arg+1,?___ftpack+1
  2548  001BC4  C01B  F01B         	movff	___ftpack@arg+2,?___ftpack+2
  2549  001BC8  0012               	return	
  2550  001BCA  0012               	return		;funcret
  2551  001BCC                     __end_of___ftpack:
  2552                           	opt stack 0
  2553                           tblptru	equ	0xFF8
  2554                           tblptrh	equ	0xFF7
  2555                           tblptrl	equ	0xFF6
  2556                           tablat	equ	0xFF5
  2557                           prodh	equ	0xFF4
  2558                           prodl	equ	0xFF3
  2559                           intcon	equ	0xFF2
  2560                           postinc0	equ	0xFEE
  2561                           wreg	equ	0xFE8
  2562                           indf2	equ	0xFDF
  2563                           postinc2	equ	0xFDE
  2564                           fsr2h	equ	0xFDA
  2565                           fsr2l	equ	0xFD9
  2566                           status	equ	0xFD8
  2567                           
  2568 ;; *************** function _ReadADC *****************
  2569 ;; Defined at:
  2570 ;;		line 24 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  2571 ;; Parameters:    Size  Location     Type
  2572 ;;		None
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;		None
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  2   24[COMRAM] int 
  2577 ;; Registers used:
  2578 ;;		wreg, status,2
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2584 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2586 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2587 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2588 ;;Total ram usage:        4 bytes
  2589 ;; Hardware stack levels used:    1
  2590 ;; Hardware stack levels required when called:    3
  2591 ;; This function calls:
  2592 ;;		Nothing
  2593 ;; This function is called by:
  2594 ;;		_GetADC6
  2595 ;; This function uses a non-reentrant model
  2596 ;;
  2597                           
  2598                           	psect	text16
  2599  00241E                     __ptext16:
  2600                           	opt stack 0
  2601  00241E                     _ReadADC:
  2602                           	opt stack 25
  2603                           
  2604                           ;incstack = 0
  2605  00241E  50C4               	movf	4036,w,c	;volatile
  2606  002420  6E1B               	movwf	??_ReadADC& (0+255),c
  2607  002422  50C3               	movf	4035,w,c	;volatile
  2608  002424  6E19               	movwf	?_ReadADC,c
  2609  002426  C01B  F01A         	movff	??_ReadADC,?_ReadADC+1
  2610  00242A  0012               	return	
  2611  00242C  0012               	return		;funcret
  2612  00242E                     __end_of_ReadADC:
  2613                           	opt stack 0
  2614                           tblptru	equ	0xFF8
  2615                           tblptrh	equ	0xFF7
  2616                           tblptrl	equ	0xFF6
  2617                           tablat	equ	0xFF5
  2618                           prodh	equ	0xFF4
  2619                           prodl	equ	0xFF3
  2620                           intcon	equ	0xFF2
  2621                           postinc0	equ	0xFEE
  2622                           wreg	equ	0xFE8
  2623                           indf2	equ	0xFDF
  2624                           postinc2	equ	0xFDE
  2625                           fsr2h	equ	0xFDA
  2626                           fsr2l	equ	0xFD9
  2627                           status	equ	0xFD8
  2628                           
  2629 ;; *************** function _ConvertADC *****************
  2630 ;; Defined at:
  2631 ;;		line 22 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;		None
  2634 ;; Auto vars:     Size  Location     Type
  2635 ;;		None
  2636 ;; Return value:  Size  Location     Type
  2637 ;;		None               void
  2638 ;; Registers used:
  2639 ;;		None
  2640 ;; Tracked objects:
  2641 ;;		On entry : 0/0
  2642 ;;		On exit  : 0/0
  2643 ;;		Unchanged: 0/0
  2644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2649 ;;Total ram usage:        0 bytes
  2650 ;; Hardware stack levels used:    1
  2651 ;; Hardware stack levels required when called:    3
  2652 ;; This function calls:
  2653 ;;		Nothing
  2654 ;; This function is called by:
  2655 ;;		_GetADC6
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659                           	psect	text17
  2660  002452                     __ptext17:
  2661                           	opt stack 0
  2662  002452                     _ConvertADC:
  2663                           	opt stack 25
  2664                           
  2665                           ;incstack = 0
  2666  002452  82C2               	bsf	4034,1,c	;volatile
  2667  002454  0012               	return		;funcret
  2668  002456                     __end_of_ConvertADC:
  2669                           	opt stack 0
  2670                           tblptru	equ	0xFF8
  2671                           tblptrh	equ	0xFF7
  2672                           tblptrl	equ	0xFF6
  2673                           tablat	equ	0xFF5
  2674                           prodh	equ	0xFF4
  2675                           prodl	equ	0xFF3
  2676                           intcon	equ	0xFF2
  2677                           postinc0	equ	0xFEE
  2678                           wreg	equ	0xFE8
  2679                           indf2	equ	0xFDF
  2680                           postinc2	equ	0xFDE
  2681                           fsr2h	equ	0xFDA
  2682                           fsr2l	equ	0xFD9
  2683                           status	equ	0xFD8
  2684                           
  2685 ;; *************** function _BusyADC *****************
  2686 ;; Defined at:
  2687 ;;		line 26 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  2688 ;; Parameters:    Size  Location     Type
  2689 ;;		None
  2690 ;; Auto vars:     Size  Location     Type
  2691 ;;		None
  2692 ;; Return value:  Size  Location     Type
  2693 ;;                  1    wreg      unsigned char 
  2694 ;; Registers used:
  2695 ;;		wreg
  2696 ;; Tracked objects:
  2697 ;;		On entry : 0/0
  2698 ;;		On exit  : 0/0
  2699 ;;		Unchanged: 0/0
  2700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2705 ;;Total ram usage:        0 bytes
  2706 ;; Hardware stack levels used:    1
  2707 ;; Hardware stack levels required when called:    3
  2708 ;; This function calls:
  2709 ;;		Nothing
  2710 ;; This function is called by:
  2711 ;;		_GetADC6
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           
  2715                           	psect	text18
  2716  00242E                     __ptext18:
  2717                           	opt stack 0
  2718  00242E                     _BusyADC:
  2719                           	opt stack 25
  2720                           
  2721                           ;incstack = 0
  2722  00242E  A2C2               	btfss	4034,1,c	;volatile
  2723  002430  D002               	goto	u370
  2724  002432  0E01               	movlw	1
  2725  002434  0012               	return	
  2726  002436                     u370:
  2727  002436  0E00               	movlw	0
  2728  002438  0012               	return	
  2729  00243A  0012               	return		;funcret
  2730  00243C                     __end_of_BusyADC:
  2731                           	opt stack 0
  2732                           tblptru	equ	0xFF8
  2733                           tblptrh	equ	0xFF7
  2734                           tblptrl	equ	0xFF6
  2735                           tablat	equ	0xFF5
  2736                           prodh	equ	0xFF4
  2737                           prodl	equ	0xFF3
  2738                           intcon	equ	0xFF2
  2739                           postinc0	equ	0xFEE
  2740                           wreg	equ	0xFE8
  2741                           indf2	equ	0xFDF
  2742                           postinc2	equ	0xFDE
  2743                           fsr2h	equ	0xFDA
  2744                           fsr2l	equ	0xFD9
  2745                           status	equ	0xFD8
  2746                           
  2747 ;; *************** function _RS485_Init *****************
  2748 ;; Defined at:
  2749 ;;		line 47 in file "_01_USER/My_USART.c"
  2750 ;; Parameters:    Size  Location     Type
  2751 ;;		None
  2752 ;; Auto vars:     Size  Location     Type
  2753 ;;		None
  2754 ;; Return value:  Size  Location     Type
  2755 ;;		None               void
  2756 ;; Registers used:
  2757 ;;		wreg, status,2, status,0, cstack
  2758 ;; Tracked objects:
  2759 ;;		On entry : 0/0
  2760 ;;		On exit  : 0/0
  2761 ;;		Unchanged: 0/0
  2762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2767 ;;Total ram usage:        0 bytes
  2768 ;; Hardware stack levels used:    1
  2769 ;; Hardware stack levels required when called:    4
  2770 ;; This function calls:
  2771 ;;		_Open2USART
  2772 ;; This function is called by:
  2773 ;;		_main
  2774 ;; This function uses a non-reentrant model
  2775 ;;
  2776                           
  2777                           	psect	text19
  2778  0023BE                     __ptext19:
  2779                           	opt stack 0
  2780  0023BE                     _RS485_Init:
  2781                           	opt stack 26
  2782                           
  2783                           ;My_USART.c: 49: Open2USART( 0b01111111 &
  2784                           ;My_USART.c: 50: 0b11111111 &
  2785                           ;My_USART.c: 51: 0b11111110 &
  2786                           ;My_USART.c: 52: 0b11111101 &
  2787                           ;My_USART.c: 53: 0b11111111 &
  2788                           ;My_USART.c: 54: 0b11101111
  2789                           ;My_USART.c: 55: ,
  2790                           ;My_USART.c: 56: 12
  2791                           ;My_USART.c: 57: );
  2792                           
  2793                           ;incstack = 0
  2794  0023BE  0E00               	movlw	0
  2795  0023C0  6E1A               	movwf	Open2USART@spbrg+1,c
  2796  0023C2  0E0C               	movlw	12
  2797  0023C4  6E19               	movwf	Open2USART@spbrg,c
  2798  0023C6  0E6C               	movlw	108
  2799  0023C8  EC80  F00E         	call	_Open2USART
  2800                           
  2801                           ;My_USART.c: 59: TRISGbits.TRISG1 = 1;
  2802  0023CC  8298               	bsf	3992,1,c	;volatile
  2803                           
  2804                           ;My_USART.c: 60: TRISGbits.TRISG2 = 0;
  2805  0023CE  9498               	bcf	3992,2,c	;volatile
  2806                           
  2807                           ;My_USART.c: 61: TRISGbits.TRISG3 = 0;
  2808  0023D0  9698               	bcf	3992,3,c	;volatile
  2809                           
  2810                           ;My_USART.c: 62: RG3 = 1;
  2811  0023D2  8686               	bsf	3974,3,c	;volatile
  2812                           
  2813                           ;My_USART.c: 63: ANCON2 &= 0XF1;
  2814  0023D4  0EF1               	movlw	241
  2815  0023D6  010F               	movlb	15	; () banked
  2816  0023D8  1723               	andwf	35,f,b	;volatile
  2817                           
  2818                           ; BSR set to: 15
  2819  0023DA  0012               	return		;funcret
  2820  0023DC                     __end_of_RS485_Init:
  2821                           	opt stack 0
  2822                           tblptru	equ	0xFF8
  2823                           tblptrh	equ	0xFF7
  2824                           tblptrl	equ	0xFF6
  2825                           tablat	equ	0xFF5
  2826                           prodh	equ	0xFF4
  2827                           prodl	equ	0xFF3
  2828                           intcon	equ	0xFF2
  2829                           postinc0	equ	0xFEE
  2830                           wreg	equ	0xFE8
  2831                           indf2	equ	0xFDF
  2832                           postinc2	equ	0xFDE
  2833                           fsr2h	equ	0xFDA
  2834                           fsr2l	equ	0xFD9
  2835                           status	equ	0xFD8
  2836                           
  2837 ;; *************** function _Open2USART *****************
  2838 ;; Defined at:
  2839 ;;		line 118 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u2open.c"
  2840 ;; Parameters:    Size  Location     Type
  2841 ;;  config          1    wreg     unsigned char 
  2842 ;;  spbrg           2   24[COMRAM] unsigned int 
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;  config          1   26[COMRAM] unsigned char 
  2845 ;; Return value:  Size  Location     Type
  2846 ;;		None               void
  2847 ;; Registers used:
  2848 ;;		wreg, status,2
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2854 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2855 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2857 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2858 ;;Total ram usage:        3 bytes
  2859 ;; Hardware stack levels used:    1
  2860 ;; Hardware stack levels required when called:    3
  2861 ;; This function calls:
  2862 ;;		Nothing
  2863 ;; This function is called by:
  2864 ;;		_RS485_Init
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           	psect	text20
  2869  001D00                     __ptext20:
  2870                           	opt stack 0
  2871  001D00                     _Open2USART:
  2872                           	opt stack 26
  2873                           
  2874                           ; BSR set to: 15
  2875                           ;incstack = 0
  2876                           ;Open2USART@config stored from wreg
  2877  001D00  6E1B               	movwf	Open2USART@config,c
  2878  001D02  0E00               	movlw	0
  2879  001D04  010F               	movlb	15	; () banked
  2880  001D06  6F21               	movwf	33,b	;volatile
  2881  001D08  0E00               	movlw	0
  2882  001D0A  010F               	movlb	15	; () banked
  2883  001D0C  6F22               	movwf	34,b	;volatile
  2884                           
  2885                           ; BSR set to: 15
  2886  001D0E  A01B               	btfss	Open2USART@config,0,c
  2887  001D10  D003               	goto	l2400
  2888                           
  2889                           ; BSR set to: 15
  2890  001D12  010F               	movlb	15	; () banked
  2891  001D14  8921               	bsf	33,4,b	;volatile
  2892  001D16  D000               	goto	l2400
  2893  001D18                     l2400:
  2894                           
  2895                           ; BSR set to: 15
  2896  001D18  A21B               	btfss	Open2USART@config,1,c
  2897  001D1A  D005               	goto	l2404
  2898                           
  2899                           ; BSR set to: 15
  2900  001D1C  010F               	movlb	15	; () banked
  2901  001D1E  8D21               	bsf	33,6,b	;volatile
  2902  001D20  010F               	movlb	15	; () banked
  2903  001D22  8D22               	bsf	34,6,b	;volatile
  2904  001D24  D000               	goto	l2404
  2905  001D26                     l2404:
  2906                           
  2907                           ; BSR set to: 15
  2908  001D26  A41B               	btfss	Open2USART@config,2,c
  2909  001D28  D003               	goto	l2408
  2910                           
  2911                           ; BSR set to: 15
  2912  001D2A  010F               	movlb	15	; () banked
  2913  001D2C  8F21               	bsf	33,7,b	;volatile
  2914  001D2E  D000               	goto	l2408
  2915  001D30                     l2408:
  2916                           
  2917                           ; BSR set to: 15
  2918  001D30  A61B               	btfss	Open2USART@config,3,c
  2919  001D32  D003               	goto	l479
  2920                           
  2921                           ; BSR set to: 15
  2922  001D34  010F               	movlb	15	; () banked
  2923  001D36  8922               	bsf	34,4,b	;volatile
  2924  001D38  D003               	goto	l2412
  2925  001D3A                     l479:
  2926                           
  2927                           ; BSR set to: 15
  2928  001D3A  010F               	movlb	15	; () banked
  2929  001D3C  8B22               	bsf	34,5,b	;volatile
  2930  001D3E  D000               	goto	l2412
  2931  001D40                     l2412:
  2932                           
  2933                           ; BSR set to: 15
  2934  001D40  A81B               	btfss	Open2USART@config,4,c
  2935  001D42  D003               	goto	l481
  2936                           
  2937                           ; BSR set to: 15
  2938  001D44  010F               	movlb	15	; () banked
  2939  001D46  8521               	bsf	33,2,b	;volatile
  2940  001D48  D003               	goto	l2416
  2941  001D4A                     l481:
  2942                           
  2943                           ; BSR set to: 15
  2944  001D4A  010F               	movlb	15	; () banked
  2945  001D4C  9521               	bcf	33,2,b	;volatile
  2946  001D4E  D000               	goto	l2416
  2947  001D50                     l2416:
  2948                           
  2949                           ; BSR set to: 15
  2950  001D50  AA1B               	btfss	Open2USART@config,5,c
  2951  001D52  D003               	goto	l2420
  2952                           
  2953                           ; BSR set to: 15
  2954  001D54  010F               	movlb	15	; () banked
  2955  001D56  8722               	bsf	34,3,b	;volatile
  2956  001D58  D000               	goto	l2420
  2957  001D5A                     l2420:
  2958                           
  2959                           ; BSR set to: 15
  2960  001D5A  AC1B               	btfss	Open2USART@config,6,c
  2961  001D5C  D002               	goto	l484
  2962                           
  2963                           ; BSR set to: 15
  2964  001D5E  8AA3               	bsf	4003,5,c	;volatile
  2965  001D60  D002               	goto	l2424
  2966  001D62                     l484:
  2967                           
  2968                           ; BSR set to: 15
  2969  001D62  9AA3               	bcf	4003,5,c	;volatile
  2970  001D64  D000               	goto	l2424
  2971  001D66                     l2424:
  2972                           
  2973                           ; BSR set to: 15
  2974  001D66  AE1B               	btfss	Open2USART@config,7,c
  2975  001D68  D002               	goto	l486
  2976                           
  2977                           ; BSR set to: 15
  2978  001D6A  88A3               	bsf	4003,4,c	;volatile
  2979  001D6C  D001               	goto	l487
  2980  001D6E                     l486:
  2981                           
  2982                           ; BSR set to: 15
  2983  001D6E  98A3               	bcf	4003,4,c	;volatile
  2984  001D70                     l487:
  2985                           
  2986                           ; BSR set to: 15
  2987  001D70  C019  FF1E         	movff	Open2USART@spbrg,3870	;volatile
  2988                           
  2989                           ; BSR set to: 15
  2990  001D74  501A               	movf	Open2USART@spbrg+1,w,c
  2991  001D76  010F               	movlb	15	; () banked
  2992  001D78  6F1F               	movwf	31,b	;volatile
  2993                           
  2994                           ; BSR set to: 15
  2995  001D7A  010F               	movlb	15	; () banked
  2996  001D7C  8B21               	bsf	33,5,b	;volatile
  2997                           
  2998                           ; BSR set to: 15
  2999  001D7E  010F               	movlb	15	; () banked
  3000  001D80  8F22               	bsf	34,7,b	;volatile
  3001                           
  3002                           ; BSR set to: 15
  3003  001D82  0012               	return		;funcret
  3004  001D84                     __end_of_Open2USART:
  3005                           	opt stack 0
  3006                           tblptru	equ	0xFF8
  3007                           tblptrh	equ	0xFF7
  3008                           tblptrl	equ	0xFF6
  3009                           tablat	equ	0xFF5
  3010                           prodh	equ	0xFF4
  3011                           prodl	equ	0xFF3
  3012                           intcon	equ	0xFF2
  3013                           postinc0	equ	0xFEE
  3014                           wreg	equ	0xFE8
  3015                           indf2	equ	0xFDF
  3016                           postinc2	equ	0xFDE
  3017                           fsr2h	equ	0xFDA
  3018                           fsr2l	equ	0xFD9
  3019                           status	equ	0xFD8
  3020                           
  3021 ;; *************** function _ManageMessage *****************
  3022 ;; Defined at:
  3023 ;;		line 50 in file "_01_USER/Run.c"
  3024 ;; Parameters:    Size  Location     Type
  3025 ;;		None
  3026 ;; Auto vars:     Size  Location     Type
  3027 ;;		None
  3028 ;; Return value:  Size  Location     Type
  3029 ;;		None               void
  3030 ;; Registers used:
  3031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3032 ;; Tracked objects:
  3033 ;;		On entry : 0/0
  3034 ;;		On exit  : 0/0
  3035 ;;		Unchanged: 0/0
  3036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3041 ;;Total ram usage:        0 bytes
  3042 ;; Hardware stack levels used:    1
  3043 ;; Hardware stack levels required when called:    6
  3044 ;; This function calls:
  3045 ;;		_Key_ManageMessage
  3046 ;;		_RS485_ManageMessage
  3047 ;; This function is called by:
  3048 ;;		_main
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052                           	psect	text21
  3053  0023F6                     __ptext21:
  3054                           	opt stack 0
  3055  0023F6                     _ManageMessage:
  3056                           	opt stack 24
  3057                           
  3058                           ;Run.c: 52: Key_ManageMessage();
  3059                           
  3060                           ; BSR set to: 15
  3061                           ;incstack = 0
  3062  0023F6  EC08  F00D         	call	_Key_ManageMessage	;wreg free
  3063                           
  3064                           ;Run.c: 53: RS485_ManageMessage(ga_RS485_ReceiveBuff,10);
  3065  0023FA  0ED4               	movlw	low _ga_RS485_ReceiveBuff
  3066  0023FC  6E29               	movwf	RS485_ManageMessage@DataBuff,c
  3067  0023FE  0E00               	movlw	high _ga_RS485_ReceiveBuff
  3068  002400  6E2A               	movwf	RS485_ManageMessage@DataBuff+1,c
  3069  002402  0E0A               	movlw	10
  3070  002404  6E2B               	movwf	RS485_ManageMessage@date_lenth,c
  3071  002406  EC09  F008         	call	_RS485_ManageMessage	;wreg free
  3072  00240A  0012               	return		;funcret
  3073  00240C                     __end_of_ManageMessage:
  3074                           	opt stack 0
  3075                           tblptru	equ	0xFF8
  3076                           tblptrh	equ	0xFF7
  3077                           tblptrl	equ	0xFF6
  3078                           tablat	equ	0xFF5
  3079                           prodh	equ	0xFF4
  3080                           prodl	equ	0xFF3
  3081                           intcon	equ	0xFF2
  3082                           postinc0	equ	0xFEE
  3083                           wreg	equ	0xFE8
  3084                           indf2	equ	0xFDF
  3085                           postinc2	equ	0xFDE
  3086                           fsr2h	equ	0xFDA
  3087                           fsr2l	equ	0xFD9
  3088                           status	equ	0xFD8
  3089                           
  3090 ;; *************** function _RS485_ManageMessage *****************
  3091 ;; Defined at:
  3092 ;;		line 114 in file "_01_USER/My_USART.c"
  3093 ;; Parameters:    Size  Location     Type
  3094 ;;  DataBuff        2   40[COMRAM] PTR unsigned char 
  3095 ;;		 -> ga_RS485_ReceiveBuff(10), 
  3096 ;;  date_lenth      1   42[COMRAM] unsigned char 
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;  from_dress      1   17[BANK0 ] unsigned char 
  3099 ;;  CRC_L           1   16[BANK0 ] unsigned char 
  3100 ;;  CRC_H           1   15[BANK0 ] unsigned char 
  3101 ;; Return value:  Size  Location     Type
  3102 ;;                  1    wreg      unsigned char 
  3103 ;; Registers used:
  3104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3110 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3111 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3112 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3113 ;;      Totals:         3       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3114 ;;Total ram usage:       11 bytes
  3115 ;; Hardware stack levels used:    1
  3116 ;; Hardware stack levels required when called:    5
  3117 ;; This function calls:
  3118 ;;		_VerifyCRC
  3119 ;; This function is called by:
  3120 ;;		_ManageMessage
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123                           
  3124                           	psect	text22
  3125  001012                     __ptext22:
  3126                           	opt stack 0
  3127  001012                     _RS485_ManageMessage:
  3128                           	opt stack 24
  3129                           
  3130                           ;My_USART.c: 116: unsigned char CRC_H,CRC_L,from_dress;
  3131                           ;My_USART.c: 117: if( g_RS485_Receive_Flag == 1 )
  3132                           
  3133                           ;incstack = 0
  3134  001012  043D               	decf	_g_RS485_Receive_Flag,w,c
  3135  001014  A4D8               	btfss	status,2,c
  3136  001016  0012               	return	
  3137                           
  3138                           ;My_USART.c: 118: {
  3139                           ;My_USART.c: 121: if( DataBuff [date_lenth-1] != 0xaa) { g_RS485_Receive_Flag = 0; retur
      +                          n 1;}
  3140  001018  0EFF               	movlw	255
  3141  00101A  0100               	movlb	0	; () banked
  3142  00101C  6FE8               	movwf	??_RS485_ManageMessage& (0+255),b
  3143  00101E  0EFF               	movlw	255
  3144  001020  0100               	movlb	0	; () banked
  3145  001022  6FE9               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  3146  001024  502B               	movf	RS485_ManageMessage@date_lenth,w,c
  3147  001026  0100               	movlb	0	; () banked
  3148  001028  6FEA               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  3149  00102A  6BEB               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  3150  00102C  0100               	movlb	0	; () banked
  3151  00102E  51E8               	movf	??_RS485_ManageMessage& (0+255),w,b
  3152  001030  0100               	movlb	0	; () banked
  3153  001032  27EA               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  3154  001034  0100               	movlb	0	; () banked
  3155  001036  51E9               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  3156  001038  0100               	movlb	0	; () banked
  3157  00103A  23EB               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  3158  00103C  0100               	movlb	0	; () banked
  3159  00103E  51EA               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  3160  001040  2429               	addwf	RS485_ManageMessage@DataBuff,w,c
  3161  001042  6ED9               	movwf	fsr2l,c
  3162  001044  0100               	movlb	0	; () banked
  3163  001046  51EB               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  3164  001048  202A               	addwfc	RS485_ManageMessage@DataBuff+1,w,c
  3165  00104A  6EDA               	movwf	fsr2h,c
  3166  00104C  0EAA               	movlw	170
  3167  00104E  18DE               	xorwf	postinc2,w,c
  3168  001050  B4D8               	btfsc	status,2,c
  3169  001052  D003               	goto	l2934
  3170                           
  3171                           ; BSR set to: 0
  3172  001054  0E00               	movlw	0
  3173  001056  6E3D               	movwf	_g_RS485_Receive_Flag,c
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;	Return value of _RS485_ManageMessage is never used
  3177  001058  0012               	return	
  3178  00105A                     l2934:
  3179                           
  3180                           ; BSR set to: 0
  3181                           ;My_USART.c: 124: CRC_H = DataBuff[1];
  3182  00105A  EE20 F001          	lfsr	2,1
  3183  00105E  5029               	movf	RS485_ManageMessage@DataBuff,w,c
  3184  001060  26D9               	addwf	fsr2l,f,c
  3185  001062  502A               	movf	RS485_ManageMessage@DataBuff+1,w,c
  3186  001064  22DA               	addwfc	fsr2h,f,c
  3187  001066  50DF               	movf	indf2,w,c
  3188  001068  0100               	movlb	0	; () banked
  3189  00106A  6FED               	movwf	RS485_ManageMessage@CRC_H& (0+255),b
  3190                           
  3191                           ; BSR set to: 0
  3192                           ;My_USART.c: 125: CRC_L = DataBuff[0];
  3193  00106C  C029  FFD9         	movff	RS485_ManageMessage@DataBuff,fsr2l
  3194  001070  C02A  FFDA         	movff	RS485_ManageMessage@DataBuff+1,fsr2h
  3195  001074  50DF               	movf	indf2,w,c
  3196  001076  0100               	movlb	0	; () banked
  3197  001078  6FEE               	movwf	RS485_ManageMessage@CRC_L& (0+255),b
  3198                           
  3199                           ; BSR set to: 0
  3200                           ;My_USART.c: 126: VerifyCRC(DataBuff,10);
  3201  00107A  C029  F026         	movff	RS485_ManageMessage@DataBuff,VerifyCRC@DataBuff
  3202  00107E  C02A  F027         	movff	RS485_ManageMessage@DataBuff+1,VerifyCRC@DataBuff+1
  3203  001082  0E0A               	movlw	10
  3204  001084  6E28               	movwf	VerifyCRC@date_lenth,c
  3205  001086  EC49  F00B         	call	_VerifyCRC	;wreg free
  3206                           
  3207                           ;My_USART.c: 127: if( DataBuff[1] != CRC_H ) { g_RS485_Receive_Flag = 0; return 2 ;}
  3208  00108A  EE20 F001          	lfsr	2,1
  3209  00108E  5029               	movf	RS485_ManageMessage@DataBuff,w,c
  3210  001090  26D9               	addwf	fsr2l,f,c
  3211  001092  502A               	movf	RS485_ManageMessage@DataBuff+1,w,c
  3212  001094  22DA               	addwfc	fsr2h,f,c
  3213  001096  0100               	movlb	0	; () banked
  3214  001098  51ED               	movf	RS485_ManageMessage@CRC_H& (0+255),w,b
  3215  00109A  18DE               	xorwf	postinc2,w,c
  3216  00109C  B4D8               	btfsc	status,2,c
  3217  00109E  D003               	goto	l2946
  3218                           
  3219                           ; BSR set to: 0
  3220  0010A0  0E00               	movlw	0
  3221  0010A2  6E3D               	movwf	_g_RS485_Receive_Flag,c
  3222                           
  3223                           ; BSR set to: 0
  3224                           ;	Return value of _RS485_ManageMessage is never used
  3225  0010A4  0012               	return	
  3226  0010A6                     l2946:
  3227                           
  3228                           ; BSR set to: 0
  3229                           ;My_USART.c: 128: if( DataBuff[0] != CRC_L ) { g_RS485_Receive_Flag = 0; return 2 ;}
  3230  0010A6  C029  FFD9         	movff	RS485_ManageMessage@DataBuff,fsr2l
  3231  0010AA  C02A  FFDA         	movff	RS485_ManageMessage@DataBuff+1,fsr2h
  3232  0010AE  0100               	movlb	0	; () banked
  3233  0010B0  51EE               	movf	RS485_ManageMessage@CRC_L& (0+255),w,b
  3234  0010B2  18DE               	xorwf	postinc2,w,c
  3235  0010B4  B4D8               	btfsc	status,2,c
  3236  0010B6  D003               	goto	l2952
  3237                           
  3238                           ; BSR set to: 0
  3239  0010B8  0E00               	movlw	0
  3240  0010BA  6E3D               	movwf	_g_RS485_Receive_Flag,c
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;	Return value of _RS485_ManageMessage is never used
  3244  0010BC  0012               	return	
  3245  0010BE                     l2952:
  3246                           
  3247                           ; BSR set to: 0
  3248                           ;My_USART.c: 131: if( ( DataBuff[date_lenth - 2] != 0x01 ) && ( DataBuff[date_lenth - 2]
      +                           != 0xff) ) { g_RS485_Receive_Flag = 0; return 3;}
  3249  0010BE  0EFE               	movlw	254
  3250  0010C0  0100               	movlb	0	; () banked
  3251  0010C2  6FE8               	movwf	??_RS485_ManageMessage& (0+255),b
  3252  0010C4  0EFF               	movlw	255
  3253  0010C6  0100               	movlb	0	; () banked
  3254  0010C8  6FE9               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  3255  0010CA  502B               	movf	RS485_ManageMessage@date_lenth,w,c
  3256  0010CC  0100               	movlb	0	; () banked
  3257  0010CE  6FEA               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  3258  0010D0  6BEB               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  3259  0010D2  0100               	movlb	0	; () banked
  3260  0010D4  51E8               	movf	??_RS485_ManageMessage& (0+255),w,b
  3261  0010D6  0100               	movlb	0	; () banked
  3262  0010D8  27EA               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  3263  0010DA  0100               	movlb	0	; () banked
  3264  0010DC  51E9               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  3265  0010DE  0100               	movlb	0	; () banked
  3266  0010E0  23EB               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  3267  0010E2  0100               	movlb	0	; () banked
  3268  0010E4  51EA               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  3269  0010E6  2429               	addwf	RS485_ManageMessage@DataBuff,w,c
  3270  0010E8  6ED9               	movwf	fsr2l,c
  3271  0010EA  0100               	movlb	0	; () banked
  3272  0010EC  51EB               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  3273  0010EE  202A               	addwfc	RS485_ManageMessage@DataBuff+1,w,c
  3274  0010F0  6EDA               	movwf	fsr2h,c
  3275  0010F2  04DE               	decf	postinc2,w,c
  3276  0010F4  B4D8               	btfsc	status,2,c
  3277  0010F6  D020               	goto	l2960
  3278                           
  3279                           ; BSR set to: 0
  3280  0010F8  0EFE               	movlw	254
  3281  0010FA  0100               	movlb	0	; () banked
  3282  0010FC  6FE8               	movwf	??_RS485_ManageMessage& (0+255),b
  3283  0010FE  0EFF               	movlw	255
  3284  001100  0100               	movlb	0	; () banked
  3285  001102  6FE9               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  3286  001104  502B               	movf	RS485_ManageMessage@date_lenth,w,c
  3287  001106  0100               	movlb	0	; () banked
  3288  001108  6FEA               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  3289  00110A  6BEB               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  3290  00110C  0100               	movlb	0	; () banked
  3291  00110E  51E8               	movf	??_RS485_ManageMessage& (0+255),w,b
  3292  001110  0100               	movlb	0	; () banked
  3293  001112  27EA               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  3294  001114  0100               	movlb	0	; () banked
  3295  001116  51E9               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  3296  001118  0100               	movlb	0	; () banked
  3297  00111A  23EB               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  3298  00111C  0100               	movlb	0	; () banked
  3299  00111E  51EA               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  3300  001120  2429               	addwf	RS485_ManageMessage@DataBuff,w,c
  3301  001122  6ED9               	movwf	fsr2l,c
  3302  001124  0100               	movlb	0	; () banked
  3303  001126  51EB               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  3304  001128  202A               	addwfc	RS485_ManageMessage@DataBuff+1,w,c
  3305  00112A  6EDA               	movwf	fsr2h,c
  3306  00112C  28DE               	incf	postinc2,w,c
  3307  00112E  B4D8               	btfsc	status,2,c
  3308  001130  D003               	goto	l2960
  3309                           
  3310                           ; BSR set to: 0
  3311  001132  0E00               	movlw	0
  3312  001134  6E3D               	movwf	_g_RS485_Receive_Flag,c
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;	Return value of _RS485_ManageMessage is never used
  3316  001136  0012               	return	
  3317  001138                     l2960:
  3318                           
  3319                           ; BSR set to: 0
  3320                           ;My_USART.c: 134: from_dress = DataBuff[date_lenth - 3];
  3321  001138  0EFD               	movlw	253
  3322  00113A  0100               	movlb	0	; () banked
  3323  00113C  6FE8               	movwf	??_RS485_ManageMessage& (0+255),b
  3324  00113E  0EFF               	movlw	255
  3325  001140  0100               	movlb	0	; () banked
  3326  001142  6FE9               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  3327  001144  502B               	movf	RS485_ManageMessage@date_lenth,w,c
  3328  001146  0100               	movlb	0	; () banked
  3329  001148  6FEA               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  3330  00114A  6BEB               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  3331  00114C  0100               	movlb	0	; () banked
  3332  00114E  51E8               	movf	??_RS485_ManageMessage& (0+255),w,b
  3333  001150  0100               	movlb	0	; () banked
  3334  001152  27EA               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  3335  001154  0100               	movlb	0	; () banked
  3336  001156  51E9               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  3337  001158  0100               	movlb	0	; () banked
  3338  00115A  23EB               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  3339  00115C  0100               	movlb	0	; () banked
  3340  00115E  51EA               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  3341  001160  2429               	addwf	RS485_ManageMessage@DataBuff,w,c
  3342  001162  6ED9               	movwf	fsr2l,c
  3343  001164  0100               	movlb	0	; () banked
  3344  001166  51EB               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  3345  001168  202A               	addwfc	RS485_ManageMessage@DataBuff+1,w,c
  3346  00116A  6EDA               	movwf	fsr2h,c
  3347  00116C  50DF               	movf	indf2,w,c
  3348  00116E  0100               	movlb	0	; () banked
  3349  001170  6FEF               	movwf	RS485_ManageMessage@from_dress& (0+255),b
  3350                           
  3351                           ; BSR set to: 0
  3352                           ;My_USART.c: 135: if( from_dress < 0x10 ) gsa_Handle_Msg[from_dress].Hardware_Type = Typ
      +                          e_HANDLE;
  3353  001172  0E10               	movlw	16
  3354  001174  0100               	movlb	0	; () banked
  3355  001176  61EF               	cpfslt	RS485_ManageMessage@from_dress& (0+255),b
  3356  001178  D00F               	goto	l2966
  3357                           
  3358                           ; BSR set to: 0
  3359  00117A  0100               	movlb	0	; () banked
  3360  00117C  51EF               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  3361  00117E  0D07               	mullw	7
  3362  001180  0E05               	movlw	5
  3363  001182  26F3               	addwf	prodl,f,c
  3364  001184  0E00               	movlw	0
  3365  001186  22F4               	addwfc	prodh,f,c
  3366  001188  0E6A               	movlw	low _gsa_Handle_Msg
  3367  00118A  24F3               	addwf	prodl,w,c
  3368  00118C  6ED9               	movwf	fsr2l,c
  3369  00118E  0E00               	movlw	high _gsa_Handle_Msg
  3370  001190  20F4               	addwfc	prodh,w,c
  3371  001192  6EDA               	movwf	fsr2h,c
  3372  001194  0E00               	movlw	0
  3373  001196  D025               	goto	L2
  3374  001198                     l2966:
  3375                           
  3376                           ; BSR set to: 0
  3377                           ;My_USART.c: 136: else if( from_dress < 0x20 ) gsa_Handle_Msg[from_dress].Hardware_Type 
      +                          = Type_MASTER;
  3378  001198  0E20               	movlw	32
  3379  00119A  0100               	movlb	0	; () banked
  3380  00119C  61EF               	cpfslt	RS485_ManageMessage@from_dress& (0+255),b
  3381  00119E  D00F               	goto	l2970
  3382                           
  3383                           ; BSR set to: 0
  3384  0011A0  0100               	movlb	0	; () banked
  3385  0011A2  51EF               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  3386  0011A4  0D07               	mullw	7
  3387  0011A6  0E05               	movlw	5
  3388  0011A8  26F3               	addwf	prodl,f,c
  3389  0011AA  0E00               	movlw	0
  3390  0011AC  22F4               	addwfc	prodh,f,c
  3391  0011AE  0E6A               	movlw	low _gsa_Handle_Msg
  3392  0011B0  24F3               	addwf	prodl,w,c
  3393  0011B2  6ED9               	movwf	fsr2l,c
  3394  0011B4  0E00               	movlw	high _gsa_Handle_Msg
  3395  0011B6  20F4               	addwfc	prodh,w,c
  3396  0011B8  6EDA               	movwf	fsr2h,c
  3397  0011BA  0E01               	movlw	1
  3398  0011BC  D012               	goto	L2
  3399  0011BE                     l2970:
  3400                           
  3401                           ; BSR set to: 0
  3402                           ;My_USART.c: 137: else if( from_dress < 0x30 ) gsa_Handle_Msg[from_dress].Hardware_Type 
      +                          = Type_SENSOR;
  3403  0011BE  0E30               	movlw	48
  3404  0011C0  0100               	movlb	0	; () banked
  3405  0011C2  61EF               	cpfslt	RS485_ManageMessage@from_dress& (0+255),b
  3406  0011C4  D010               	goto	l2974
  3407                           
  3408                           ; BSR set to: 0
  3409  0011C6  0100               	movlb	0	; () banked
  3410  0011C8  51EF               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  3411  0011CA  0D07               	mullw	7
  3412  0011CC  0E05               	movlw	5
  3413  0011CE  26F3               	addwf	prodl,f,c
  3414  0011D0  0E00               	movlw	0
  3415  0011D2  22F4               	addwfc	prodh,f,c
  3416  0011D4  0E6A               	movlw	low _gsa_Handle_Msg
  3417  0011D6  24F3               	addwf	prodl,w,c
  3418  0011D8  6ED9               	movwf	fsr2l,c
  3419  0011DA  0E00               	movlw	high _gsa_Handle_Msg
  3420  0011DC  20F4               	addwfc	prodh,w,c
  3421  0011DE  6EDA               	movwf	fsr2h,c
  3422  0011E0  0E02               	movlw	2
  3423  0011E2                     L2:
  3424  0011E2  6EDF               	movwf	indf2,c
  3425                           
  3426                           ; BSR set to: 0
  3427                           
  3428                           ; BSR set to: 0
  3429  0011E4  D000               	goto	l2974
  3430  0011E6                     l2974:
  3431                           
  3432                           ; BSR set to: 0
  3433                           ;My_USART.c: 140: gsa_Handle_Msg[from_dress].Order = DataBuff[date_lenth - 4];
  3434  0011E6  0EFC               	movlw	252
  3435  0011E8  0100               	movlb	0	; () banked
  3436  0011EA  6FE8               	movwf	??_RS485_ManageMessage& (0+255),b
  3437  0011EC  0EFF               	movlw	255
  3438  0011EE  0100               	movlb	0	; () banked
  3439  0011F0  6FE9               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  3440  0011F2  502B               	movf	RS485_ManageMessage@date_lenth,w,c
  3441  0011F4  0100               	movlb	0	; () banked
  3442  0011F6  6FEA               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  3443  0011F8  6BEB               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  3444  0011FA  0100               	movlb	0	; () banked
  3445  0011FC  51E8               	movf	??_RS485_ManageMessage& (0+255),w,b
  3446  0011FE  0100               	movlb	0	; () banked
  3447  001200  27EA               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  3448  001202  0100               	movlb	0	; () banked
  3449  001204  51E9               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  3450  001206  0100               	movlb	0	; () banked
  3451  001208  23EB               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  3452  00120A  0100               	movlb	0	; () banked
  3453  00120C  51EA               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  3454  00120E  2429               	addwf	RS485_ManageMessage@DataBuff,w,c
  3455  001210  6ED9               	movwf	fsr2l,c
  3456  001212  0100               	movlb	0	; () banked
  3457  001214  51EB               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  3458  001216  202A               	addwfc	RS485_ManageMessage@DataBuff+1,w,c
  3459  001218  6EDA               	movwf	fsr2h,c
  3460  00121A  0100               	movlb	0	; () banked
  3461  00121C  51EF               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  3462  00121E  0D07               	mullw	7
  3463  001220  0E6A               	movlw	low _gsa_Handle_Msg
  3464  001222  24F3               	addwf	prodl,w,c
  3465  001224  6EE1               	movwf	fsr1l,c
  3466  001226  0E00               	movlw	high _gsa_Handle_Msg
  3467  001228  20F4               	addwfc	prodh,w,c
  3468  00122A  6EE2               	movwf	fsr1h,c
  3469  00122C  CFDF FFE7          	movff	indf2,indf1
  3470                           
  3471                           ; BSR set to: 0
  3472                           ;My_USART.c: 141: gsa_Handle_Msg[from_dress].a_Parameter[3] = DataBuff[date_lenth -5];
  3473  001230  0EFB               	movlw	251
  3474  001232  0100               	movlb	0	; () banked
  3475  001234  6FE8               	movwf	??_RS485_ManageMessage& (0+255),b
  3476  001236  0EFF               	movlw	255
  3477  001238  0100               	movlb	0	; () banked
  3478  00123A  6FE9               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  3479  00123C  502B               	movf	RS485_ManageMessage@date_lenth,w,c
  3480  00123E  0100               	movlb	0	; () banked
  3481  001240  6FEA               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  3482  001242  6BEB               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  3483  001244  0100               	movlb	0	; () banked
  3484  001246  51E8               	movf	??_RS485_ManageMessage& (0+255),w,b
  3485  001248  0100               	movlb	0	; () banked
  3486  00124A  27EA               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  3487  00124C  0100               	movlb	0	; () banked
  3488  00124E  51E9               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  3489  001250  0100               	movlb	0	; () banked
  3490  001252  23EB               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  3491  001254  0100               	movlb	0	; () banked
  3492  001256  51EA               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  3493  001258  2429               	addwf	RS485_ManageMessage@DataBuff,w,c
  3494  00125A  6ED9               	movwf	fsr2l,c
  3495  00125C  0100               	movlb	0	; () banked
  3496  00125E  51EB               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  3497  001260  202A               	addwfc	RS485_ManageMessage@DataBuff+1,w,c
  3498  001262  6EDA               	movwf	fsr2h,c
  3499  001264  0100               	movlb	0	; () banked
  3500  001266  51EF               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  3501  001268  0D07               	mullw	7
  3502  00126A  0E04               	movlw	4
  3503  00126C  26F3               	addwf	prodl,f,c
  3504  00126E  0E00               	movlw	0
  3505  001270  22F4               	addwfc	prodh,f,c
  3506  001272  0E6A               	movlw	low _gsa_Handle_Msg
  3507  001274  24F3               	addwf	prodl,w,c
  3508  001276  6EE1               	movwf	fsr1l,c
  3509  001278  0E00               	movlw	high _gsa_Handle_Msg
  3510  00127A  20F4               	addwfc	prodh,w,c
  3511  00127C  6EE2               	movwf	fsr1h,c
  3512  00127E  CFDF FFE7          	movff	indf2,indf1
  3513                           
  3514                           ; BSR set to: 0
  3515                           ;My_USART.c: 142: gsa_Handle_Msg[from_dress].a_Parameter[2] = DataBuff[date_lenth -6];
  3516  001282  0EFA               	movlw	250
  3517  001284  0100               	movlb	0	; () banked
  3518  001286  6FE8               	movwf	??_RS485_ManageMessage& (0+255),b
  3519  001288  0EFF               	movlw	255
  3520  00128A  0100               	movlb	0	; () banked
  3521  00128C  6FE9               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  3522  00128E  502B               	movf	RS485_ManageMessage@date_lenth,w,c
  3523  001290  0100               	movlb	0	; () banked
  3524  001292  6FEA               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  3525  001294  6BEB               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  3526  001296  0100               	movlb	0	; () banked
  3527  001298  51E8               	movf	??_RS485_ManageMessage& (0+255),w,b
  3528  00129A  0100               	movlb	0	; () banked
  3529  00129C  27EA               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  3530  00129E  0100               	movlb	0	; () banked
  3531  0012A0  51E9               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  3532  0012A2  0100               	movlb	0	; () banked
  3533  0012A4  23EB               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  3534  0012A6  0100               	movlb	0	; () banked
  3535  0012A8  51EA               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  3536  0012AA  2429               	addwf	RS485_ManageMessage@DataBuff,w,c
  3537  0012AC  6ED9               	movwf	fsr2l,c
  3538  0012AE  0100               	movlb	0	; () banked
  3539  0012B0  51EB               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  3540  0012B2  202A               	addwfc	RS485_ManageMessage@DataBuff+1,w,c
  3541  0012B4  6EDA               	movwf	fsr2h,c
  3542  0012B6  0100               	movlb	0	; () banked
  3543  0012B8  51EF               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  3544  0012BA  0D07               	mullw	7
  3545  0012BC  0E03               	movlw	3
  3546  0012BE  26F3               	addwf	prodl,f,c
  3547  0012C0  0E00               	movlw	0
  3548  0012C2  22F4               	addwfc	prodh,f,c
  3549  0012C4  0E6A               	movlw	low _gsa_Handle_Msg
  3550  0012C6  24F3               	addwf	prodl,w,c
  3551  0012C8  6EE1               	movwf	fsr1l,c
  3552  0012CA  0E00               	movlw	high _gsa_Handle_Msg
  3553  0012CC  20F4               	addwfc	prodh,w,c
  3554  0012CE  6EE2               	movwf	fsr1h,c
  3555  0012D0  CFDF FFE7          	movff	indf2,indf1
  3556                           
  3557                           ; BSR set to: 0
  3558                           ;My_USART.c: 143: gsa_Handle_Msg[from_dress].a_Parameter[1] = DataBuff[date_lenth -7];
  3559  0012D4  0EF9               	movlw	249
  3560  0012D6  0100               	movlb	0	; () banked
  3561  0012D8  6FE8               	movwf	??_RS485_ManageMessage& (0+255),b
  3562  0012DA  0EFF               	movlw	255
  3563  0012DC  0100               	movlb	0	; () banked
  3564  0012DE  6FE9               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  3565  0012E0  502B               	movf	RS485_ManageMessage@date_lenth,w,c
  3566  0012E2  0100               	movlb	0	; () banked
  3567  0012E4  6FEA               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  3568  0012E6  6BEB               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  3569  0012E8  0100               	movlb	0	; () banked
  3570  0012EA  51E8               	movf	??_RS485_ManageMessage& (0+255),w,b
  3571  0012EC  0100               	movlb	0	; () banked
  3572  0012EE  27EA               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  3573  0012F0  0100               	movlb	0	; () banked
  3574  0012F2  51E9               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  3575  0012F4  0100               	movlb	0	; () banked
  3576  0012F6  23EB               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  3577  0012F8  0100               	movlb	0	; () banked
  3578  0012FA  51EA               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  3579  0012FC  2429               	addwf	RS485_ManageMessage@DataBuff,w,c
  3580  0012FE  6ED9               	movwf	fsr2l,c
  3581  001300  0100               	movlb	0	; () banked
  3582  001302  51EB               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  3583  001304  202A               	addwfc	RS485_ManageMessage@DataBuff+1,w,c
  3584  001306  6EDA               	movwf	fsr2h,c
  3585  001308  0100               	movlb	0	; () banked
  3586  00130A  51EF               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  3587  00130C  0D07               	mullw	7
  3588  00130E  0E02               	movlw	2
  3589  001310  26F3               	addwf	prodl,f,c
  3590  001312  0E00               	movlw	0
  3591  001314  22F4               	addwfc	prodh,f,c
  3592  001316  0E6A               	movlw	low _gsa_Handle_Msg
  3593  001318  24F3               	addwf	prodl,w,c
  3594  00131A  6EE1               	movwf	fsr1l,c
  3595  00131C  0E00               	movlw	high _gsa_Handle_Msg
  3596  00131E  20F4               	addwfc	prodh,w,c
  3597  001320  6EE2               	movwf	fsr1h,c
  3598  001322  CFDF FFE7          	movff	indf2,indf1
  3599                           
  3600                           ; BSR set to: 0
  3601                           ;My_USART.c: 144: gsa_Handle_Msg[from_dress].a_Parameter[0] = DataBuff[date_lenth -8];
  3602  001326  0EF8               	movlw	248
  3603  001328  0100               	movlb	0	; () banked
  3604  00132A  6FE8               	movwf	??_RS485_ManageMessage& (0+255),b
  3605  00132C  0EFF               	movlw	255
  3606  00132E  0100               	movlb	0	; () banked
  3607  001330  6FE9               	movwf	(??_RS485_ManageMessage+1)& (0+255),b
  3608  001332  502B               	movf	RS485_ManageMessage@date_lenth,w,c
  3609  001334  0100               	movlb	0	; () banked
  3610  001336  6FEA               	movwf	(??_RS485_ManageMessage+2)& (0+255),b
  3611  001338  6BEB               	clrf	(??_RS485_ManageMessage+3)& (0+255),b
  3612  00133A  0100               	movlb	0	; () banked
  3613  00133C  51E8               	movf	??_RS485_ManageMessage& (0+255),w,b
  3614  00133E  0100               	movlb	0	; () banked
  3615  001340  27EA               	addwf	(??_RS485_ManageMessage+2)& (0+255),f,b
  3616  001342  0100               	movlb	0	; () banked
  3617  001344  51E9               	movf	(??_RS485_ManageMessage+1)& (0+255),w,b
  3618  001346  0100               	movlb	0	; () banked
  3619  001348  23EB               	addwfc	(??_RS485_ManageMessage+3)& (0+255),f,b
  3620  00134A  0100               	movlb	0	; () banked
  3621  00134C  51EA               	movf	(??_RS485_ManageMessage+2)& (0+255),w,b
  3622  00134E  2429               	addwf	RS485_ManageMessage@DataBuff,w,c
  3623  001350  6ED9               	movwf	fsr2l,c
  3624  001352  0100               	movlb	0	; () banked
  3625  001354  51EB               	movf	(??_RS485_ManageMessage+3)& (0+255),w,b
  3626  001356  202A               	addwfc	RS485_ManageMessage@DataBuff+1,w,c
  3627  001358  6EDA               	movwf	fsr2h,c
  3628  00135A  0100               	movlb	0	; () banked
  3629  00135C  51EF               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  3630  00135E  0D07               	mullw	7
  3631  001360  0E01               	movlw	1
  3632  001362  26F3               	addwf	prodl,f,c
  3633  001364  0E00               	movlw	0
  3634  001366  22F4               	addwfc	prodh,f,c
  3635  001368  0E6A               	movlw	low _gsa_Handle_Msg
  3636  00136A  24F3               	addwf	prodl,w,c
  3637  00136C  6EE1               	movwf	fsr1l,c
  3638  00136E  0E00               	movlw	high _gsa_Handle_Msg
  3639  001370  20F4               	addwfc	prodh,w,c
  3640  001372  6EE2               	movwf	fsr1h,c
  3641  001374  CFDF FFE7          	movff	indf2,indf1
  3642                           
  3643                           ; BSR set to: 0
  3644                           ;My_USART.c: 147: gsa_Handle_Msg[from_dress].hand_info = 1;
  3645  001378  0100               	movlb	0	; () banked
  3646  00137A  51EF               	movf	RS485_ManageMessage@from_dress& (0+255),w,b
  3647  00137C  0D07               	mullw	7
  3648  00137E  0E06               	movlw	6
  3649  001380  26F3               	addwf	prodl,f,c
  3650  001382  0E00               	movlw	0
  3651  001384  22F4               	addwfc	prodh,f,c
  3652  001386  0E6A               	movlw	low _gsa_Handle_Msg
  3653  001388  24F3               	addwf	prodl,w,c
  3654  00138A  6ED9               	movwf	fsr2l,c
  3655  00138C  0E00               	movlw	high _gsa_Handle_Msg
  3656  00138E  20F4               	addwfc	prodh,w,c
  3657  001390  6EDA               	movwf	fsr2h,c
  3658  001392  0E01               	movlw	1
  3659  001394  6EDF               	movwf	indf2,c
  3660                           
  3661                           ; BSR set to: 0
  3662                           ;My_USART.c: 148: g_RS485_Receive_Flag = 0;
  3663  001396  0E00               	movlw	0
  3664  001398  6E3D               	movwf	_g_RS485_Receive_Flag,c
  3665  00139A  0012               	return	
  3666                           
  3667                           ; BSR set to: 0
  3668  00139C  0012               	return		;funcret
  3669  00139E                     __end_of_RS485_ManageMessage:
  3670                           	opt stack 0
  3671                           tblptru	equ	0xFF8
  3672                           tblptrh	equ	0xFF7
  3673                           tblptrl	equ	0xFF6
  3674                           tablat	equ	0xFF5
  3675                           prodh	equ	0xFF4
  3676                           prodl	equ	0xFF3
  3677                           intcon	equ	0xFF2
  3678                           postinc0	equ	0xFEE
  3679                           wreg	equ	0xFE8
  3680                           indf1	equ	0xFE7
  3681                           fsr1h	equ	0xFE2
  3682                           fsr1l	equ	0xFE1
  3683                           indf2	equ	0xFDF
  3684                           postinc2	equ	0xFDE
  3685                           fsr2h	equ	0xFDA
  3686                           fsr2l	equ	0xFD9
  3687                           status	equ	0xFD8
  3688                           
  3689 ;; *************** function _VerifyCRC *****************
  3690 ;; Defined at:
  3691 ;;		line 163 in file "_01_USER/My_USART.c"
  3692 ;; Parameters:    Size  Location     Type
  3693 ;;  DataBuff        2   37[COMRAM] PTR unsigned char 
  3694 ;;		 -> ga_RS485_ReceiveBuff(10), ga_RS485_SendBuff(10), 
  3695 ;;  date_lenth      1   39[COMRAM] unsigned char 
  3696 ;; Auto vars:     Size  Location     Type
  3697 ;;  CRC_Value       4    5[BANK0 ] unsigned long 
  3698 ;;  CRC_Byte        1    9[BANK0 ] unsigned char 
  3699 ;; Return value:  Size  Location     Type
  3700 ;;		None               void
  3701 ;; Registers used:
  3702 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3703 ;; Tracked objects:
  3704 ;;		On entry : 0/0
  3705 ;;		On exit  : 0/0
  3706 ;;		Unchanged: 0/0
  3707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3708 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3709 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3710 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3711 ;;      Totals:         3      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3712 ;;Total ram usage:       13 bytes
  3713 ;; Hardware stack levels used:    1
  3714 ;; Hardware stack levels required when called:    4
  3715 ;; This function calls:
  3716 ;;		___lldiv
  3717 ;;		___llmod
  3718 ;; This function is called by:
  3719 ;;		_RS485_SendDate
  3720 ;;		_RS485_ManageMessage
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           
  3724                           	psect	text23
  3725  001692                     __ptext23:
  3726                           	opt stack 0
  3727  001692                     _VerifyCRC:
  3728                           	opt stack 24
  3729                           
  3730                           ;My_USART.c: 165: unsigned long int CRC_Value = 0;
  3731                           
  3732                           ;incstack = 0
  3733  001692  0E00               	movlw	0
  3734  001694  0100               	movlb	0	; () banked
  3735  001696  6FE3               	movwf	VerifyCRC@CRC_Value& (0+255),b
  3736  001698  0E00               	movlw	0
  3737  00169A  6FE4               	movwf	(VerifyCRC@CRC_Value+1)& (0+255),b
  3738  00169C  0E00               	movlw	0
  3739  00169E  6FE5               	movwf	(VerifyCRC@CRC_Value+2)& (0+255),b
  3740  0016A0  0E00               	movlw	0
  3741  0016A2  6FE6               	movwf	(VerifyCRC@CRC_Value+3)& (0+255),b
  3742                           
  3743                           ;My_USART.c: 166: unsigned char CRC_Byte;
  3744                           ;My_USART.c: 168: for(CRC_Byte = 2; CRC_Byte < date_lenth ;CRC_Byte++)
  3745  0016A4  0E02               	movlw	2
  3746  0016A6  0100               	movlb	0	; () banked
  3747  0016A8  6FE7               	movwf	VerifyCRC@CRC_Byte& (0+255),b
  3748  0016AA  D043               	goto	l2806
  3749  0016AC                     l2802:
  3750                           
  3751                           ; BSR set to: 0
  3752                           ;My_USART.c: 169: CRC_Value = ( CRC_Value + DataBuff[CRC_Byte]*CRC_Byte ) % 0xffff;
  3753  0016AC  0100               	movlb	0	; () banked
  3754  0016AE  51E7               	movf	VerifyCRC@CRC_Byte& (0+255),w,b
  3755  0016B0  0D01               	mullw	1
  3756  0016B2  50F3               	movf	prodl,w,c
  3757  0016B4  2426               	addwf	VerifyCRC@DataBuff,w,c
  3758  0016B6  6ED9               	movwf	fsr2l,c
  3759  0016B8  50F4               	movf	prodh,w,c
  3760  0016BA  2027               	addwfc	VerifyCRC@DataBuff+1,w,c
  3761  0016BC  6EDA               	movwf	fsr2h,c
  3762  0016BE  50DF               	movf	indf2,w,c
  3763  0016C0  0100               	movlb	0	; () banked
  3764  0016C2  6FDE               	movwf	??_VerifyCRC& (0+255),b
  3765  0016C4  0100               	movlb	0	; () banked
  3766  0016C6  51DE               	movf	??_VerifyCRC& (0+255),w,b
  3767  0016C8  0100               	movlb	0	; () banked
  3768  0016CA  03E7               	mulwf	VerifyCRC@CRC_Byte& (0+255),b
  3769  0016CC  CFF3 F0DF          	movff	prodl,??_VerifyCRC+1
  3770  0016D0  CFF4 F0E0          	movff	prodh,??_VerifyCRC+2
  3771  0016D4  0E00               	movlw	0
  3772  0016D6  0100               	movlb	0	; () banked
  3773  0016D8  BFE0               	btfsc	(??_VerifyCRC+2)& (0+255),7,b
  3774  0016DA  0EFF               	movlw	255
  3775  0016DC  6FE1               	movwf	(??_VerifyCRC+3)& (0+255),b
  3776  0016DE  6FE2               	movwf	(??_VerifyCRC+4)& (0+255),b
  3777  0016E0  0100               	movlb	0	; () banked
  3778  0016E2  51E3               	movf	VerifyCRC@CRC_Value& (0+255),w,b
  3779  0016E4  0100               	movlb	0	; () banked
  3780  0016E6  25DF               	addwf	(??_VerifyCRC+1)& (0+255),w,b
  3781  0016E8  6E19               	movwf	___llmod@dividend,c
  3782  0016EA  0100               	movlb	0	; () banked
  3783  0016EC  51E4               	movf	(VerifyCRC@CRC_Value+1)& (0+255),w,b
  3784  0016EE  0100               	movlb	0	; () banked
  3785  0016F0  21E0               	addwfc	(??_VerifyCRC+2)& (0+255),w,b
  3786  0016F2  6E1A               	movwf	___llmod@dividend+1,c
  3787  0016F4  0100               	movlb	0	; () banked
  3788  0016F6  51E5               	movf	(VerifyCRC@CRC_Value+2)& (0+255),w,b
  3789  0016F8  0100               	movlb	0	; () banked
  3790  0016FA  21E1               	addwfc	(??_VerifyCRC+3)& (0+255),w,b
  3791  0016FC  6E1B               	movwf	___llmod@dividend+2,c
  3792  0016FE  0100               	movlb	0	; () banked
  3793  001700  51E6               	movf	(VerifyCRC@CRC_Value+3)& (0+255),w,b
  3794  001702  0100               	movlb	0	; () banked
  3795  001704  21E2               	addwfc	(??_VerifyCRC+4)& (0+255),w,b
  3796  001706  6E1C               	movwf	___llmod@dividend+3,c
  3797  001708  0EFF               	movlw	255
  3798  00170A  6E1D               	movwf	___llmod@divisor,c
  3799  00170C  0EFF               	movlw	255
  3800  00170E  6E1E               	movwf	___llmod@divisor+1,c
  3801  001710  0E00               	movlw	0
  3802  001712  6E1F               	movwf	___llmod@divisor+2,c
  3803  001714  0E00               	movlw	0
  3804  001716  6E20               	movwf	___llmod@divisor+3,c
  3805  001718  EC00  F00F         	call	___llmod	;wreg free
  3806  00171C  C019  F0E3         	movff	?___llmod,VerifyCRC@CRC_Value
  3807  001720  C01A  F0E4         	movff	?___llmod+1,VerifyCRC@CRC_Value+1
  3808  001724  C01B  F0E5         	movff	?___llmod+2,VerifyCRC@CRC_Value+2
  3809  001728  C01C  F0E6         	movff	?___llmod+3,VerifyCRC@CRC_Value+3
  3810  00172C  0100               	movlb	0	; () banked
  3811  00172E  2BE7               	incf	VerifyCRC@CRC_Byte& (0+255),f,b
  3812  001730  D000               	goto	l2806
  3813  001732                     l2806:
  3814                           
  3815                           ; BSR set to: 0
  3816  001732  5028               	movf	VerifyCRC@date_lenth,w,c
  3817  001734  0100               	movlb	0	; () banked
  3818  001736  5DE7               	subwf	VerifyCRC@CRC_Byte& (0+255),w,b
  3819  001738  A0D8               	btfss	status,0,c
  3820  00173A  D7B8               	goto	l2802
  3821                           
  3822                           ; BSR set to: 0
  3823                           ;My_USART.c: 171: DataBuff[1] = CRC_Value/0xff;
  3824                           
  3825                           ; BSR set to: 0
  3826  00173C  EE20 F001          	lfsr	2,1
  3827  001740  5026               	movf	VerifyCRC@DataBuff,w,c
  3828  001742  26D9               	addwf	fsr2l,f,c
  3829  001744  5027               	movf	VerifyCRC@DataBuff+1,w,c
  3830  001746  22DA               	addwfc	fsr2h,f,c
  3831  001748  C0E3  F019         	movff	VerifyCRC@CRC_Value,___lldiv@dividend
  3832  00174C  C0E4  F01A         	movff	VerifyCRC@CRC_Value+1,___lldiv@dividend+1
  3833  001750  C0E5  F01B         	movff	VerifyCRC@CRC_Value+2,___lldiv@dividend+2
  3834  001754  C0E6  F01C         	movff	VerifyCRC@CRC_Value+3,___lldiv@dividend+3
  3835  001758  0EFF               	movlw	255
  3836  00175A  6E1D               	movwf	___lldiv@divisor,c
  3837  00175C  0E00               	movlw	0
  3838  00175E  6E1E               	movwf	___lldiv@divisor+1,c
  3839  001760  0E00               	movlw	0
  3840  001762  6E1F               	movwf	___lldiv@divisor+2,c
  3841  001764  0E00               	movlw	0
  3842  001766  6E20               	movwf	___lldiv@divisor+3,c
  3843  001768  EC3A  F00E         	call	___lldiv	;wreg free
  3844  00176C  5019               	movf	?___lldiv,w,c
  3845  00176E  6EDF               	movwf	indf2,c
  3846                           
  3847                           ;My_USART.c: 172: DataBuff[0] = CRC_Value%0xff;
  3848  001770  C0E3  F019         	movff	VerifyCRC@CRC_Value,___llmod@dividend
  3849  001774  C0E4  F01A         	movff	VerifyCRC@CRC_Value+1,___llmod@dividend+1
  3850  001778  C0E5  F01B         	movff	VerifyCRC@CRC_Value+2,___llmod@dividend+2
  3851  00177C  C0E6  F01C         	movff	VerifyCRC@CRC_Value+3,___llmod@dividend+3
  3852  001780  0EFF               	movlw	255
  3853  001782  6E1D               	movwf	___llmod@divisor,c
  3854  001784  0E00               	movlw	0
  3855  001786  6E1E               	movwf	___llmod@divisor+1,c
  3856  001788  0E00               	movlw	0
  3857  00178A  6E1F               	movwf	___llmod@divisor+2,c
  3858  00178C  0E00               	movlw	0
  3859  00178E  6E20               	movwf	___llmod@divisor+3,c
  3860  001790  EC00  F00F         	call	___llmod	;wreg free
  3861  001794  5019               	movf	?___llmod,w,c
  3862  001796  C026  FFD9         	movff	VerifyCRC@DataBuff,fsr2l
  3863  00179A  C027  FFDA         	movff	VerifyCRC@DataBuff+1,fsr2h
  3864  00179E  6EDF               	movwf	indf2,c
  3865                           
  3866                           ;My_USART.c: 174: if( DataBuff[1] == 0xff ) DataBuff[1] --;
  3867  0017A0  EE20 F001          	lfsr	2,1
  3868  0017A4  5026               	movf	VerifyCRC@DataBuff,w,c
  3869  0017A6  26D9               	addwf	fsr2l,f,c
  3870  0017A8  5027               	movf	VerifyCRC@DataBuff+1,w,c
  3871  0017AA  22DA               	addwfc	fsr2h,f,c
  3872  0017AC  28DE               	incf	postinc2,w,c
  3873  0017AE  A4D8               	btfss	status,2,c
  3874  0017B0  D007               	goto	l225
  3875  0017B2  EE20 F001          	lfsr	2,1
  3876  0017B6  5026               	movf	VerifyCRC@DataBuff,w,c
  3877  0017B8  26D9               	addwf	fsr2l,f,c
  3878  0017BA  5027               	movf	VerifyCRC@DataBuff+1,w,c
  3879  0017BC  22DA               	addwfc	fsr2h,f,c
  3880  0017BE  06DF               	decf	indf2,f,c
  3881  0017C0                     l225:
  3882                           
  3883                           ;My_USART.c: 175: if( DataBuff[0] == 0xff ) DataBuff[0] --;
  3884  0017C0  C026  FFD9         	movff	VerifyCRC@DataBuff,fsr2l
  3885  0017C4  C027  FFDA         	movff	VerifyCRC@DataBuff+1,fsr2h
  3886  0017C8  28DE               	incf	postinc2,w,c
  3887  0017CA  A4D8               	btfss	status,2,c
  3888  0017CC  0012               	return	
  3889  0017CE  C026  FFD9         	movff	VerifyCRC@DataBuff,fsr2l
  3890  0017D2  C027  FFDA         	movff	VerifyCRC@DataBuff+1,fsr2h
  3891  0017D6  06DF               	decf	indf2,f,c
  3892  0017D8  0012               	return	
  3893  0017DA  0012               	return		;funcret
  3894  0017DC                     __end_of_VerifyCRC:
  3895                           	opt stack 0
  3896                           tblptru	equ	0xFF8
  3897                           tblptrh	equ	0xFF7
  3898                           tblptrl	equ	0xFF6
  3899                           tablat	equ	0xFF5
  3900                           prodh	equ	0xFF4
  3901                           prodl	equ	0xFF3
  3902                           intcon	equ	0xFF2
  3903                           postinc0	equ	0xFEE
  3904                           wreg	equ	0xFE8
  3905                           indf1	equ	0xFE7
  3906                           fsr1h	equ	0xFE2
  3907                           fsr1l	equ	0xFE1
  3908                           indf2	equ	0xFDF
  3909                           postinc2	equ	0xFDE
  3910                           fsr2h	equ	0xFDA
  3911                           fsr2l	equ	0xFD9
  3912                           status	equ	0xFD8
  3913                           
  3914 ;; *************** function ___llmod *****************
  3915 ;; Defined at:
  3916 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;  dividend        4   24[COMRAM] unsigned long 
  3919 ;;  divisor         4   28[COMRAM] unsigned long 
  3920 ;; Auto vars:     Size  Location     Type
  3921 ;;  counter         1   32[COMRAM] unsigned char 
  3922 ;; Return value:  Size  Location     Type
  3923 ;;                  4   24[COMRAM] unsigned long 
  3924 ;; Registers used:
  3925 ;;		wreg, status,2, status,0
  3926 ;; Tracked objects:
  3927 ;;		On entry : 0/0
  3928 ;;		On exit  : 0/0
  3929 ;;		Unchanged: 0/0
  3930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3931 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3932 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3934 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3935 ;;Total ram usage:        9 bytes
  3936 ;; Hardware stack levels used:    1
  3937 ;; Hardware stack levels required when called:    3
  3938 ;; This function calls:
  3939 ;;		Nothing
  3940 ;; This function is called by:
  3941 ;;		_VerifyCRC
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945                           	psect	text24
  3946  001E00                     __ptext24:
  3947                           	opt stack 0
  3948  001E00                     ___llmod:
  3949                           	opt stack 24
  3950                           
  3951                           ;incstack = 0
  3952  001E00  501D               	movf	___llmod@divisor,w,c
  3953  001E02  101E               	iorwf	___llmod@divisor+1,w,c
  3954  001E04  101F               	iorwf	___llmod@divisor+2,w,c
  3955  001E06  1020               	iorwf	___llmod@divisor+3,w,c
  3956  001E08  B4D8               	btfsc	status,2,c
  3957  001E0A  D029               	goto	l956
  3958  001E0C  0E01               	movlw	1
  3959  001E0E  6E21               	movwf	___llmod@counter,c
  3960  001E10  D007               	goto	l2790
  3961  001E12                     l2788:
  3962  001E12  90D8               	bcf	status,0,c
  3963  001E14  361D               	rlcf	___llmod@divisor,f,c
  3964  001E16  361E               	rlcf	___llmod@divisor+1,f,c
  3965  001E18  361F               	rlcf	___llmod@divisor+2,f,c
  3966  001E1A  3620               	rlcf	___llmod@divisor+3,f,c
  3967  001E1C  2A21               	incf	___llmod@counter,f,c
  3968  001E1E  D000               	goto	l2790
  3969  001E20                     l2790:
  3970  001E20  BE20               	btfsc	___llmod@divisor+3,7,c
  3971  001E22  D002               	goto	l2792
  3972  001E24  D7F6               	goto	l2788
  3973  001E26  D000               	goto	l2792
  3974  001E28                     l2792:
  3975  001E28  501D               	movf	___llmod@divisor,w,c
  3976  001E2A  5C19               	subwf	___llmod@dividend,w,c
  3977  001E2C  501E               	movf	___llmod@divisor+1,w,c
  3978  001E2E  581A               	subwfb	___llmod@dividend+1,w,c
  3979  001E30  501F               	movf	___llmod@divisor+2,w,c
  3980  001E32  581B               	subwfb	___llmod@dividend+2,w,c
  3981  001E34  5020               	movf	___llmod@divisor+3,w,c
  3982  001E36  581C               	subwfb	___llmod@dividend+3,w,c
  3983  001E38  A0D8               	btfss	status,0,c
  3984  001E3A  D009               	goto	l2796
  3985  001E3C  501D               	movf	___llmod@divisor,w,c
  3986  001E3E  5E19               	subwf	___llmod@dividend,f,c
  3987  001E40  501E               	movf	___llmod@divisor+1,w,c
  3988  001E42  5A1A               	subwfb	___llmod@dividend+1,f,c
  3989  001E44  501F               	movf	___llmod@divisor+2,w,c
  3990  001E46  5A1B               	subwfb	___llmod@dividend+2,f,c
  3991  001E48  5020               	movf	___llmod@divisor+3,w,c
  3992  001E4A  5A1C               	subwfb	___llmod@dividend+3,f,c
  3993  001E4C  D000               	goto	l2796
  3994  001E4E                     l2796:
  3995  001E4E  90D8               	bcf	status,0,c
  3996  001E50  3220               	rrcf	___llmod@divisor+3,f,c
  3997  001E52  321F               	rrcf	___llmod@divisor+2,f,c
  3998  001E54  321E               	rrcf	___llmod@divisor+1,f,c
  3999  001E56  321D               	rrcf	___llmod@divisor,f,c
  4000  001E58  2E21               	decfsz	___llmod@counter,f,c
  4001  001E5A  D7E6               	goto	l2792
  4002  001E5C  D000               	goto	l956
  4003  001E5E                     l956:
  4004  001E5E  C019  F019         	movff	___llmod@dividend,?___llmod
  4005  001E62  C01A  F01A         	movff	___llmod@dividend+1,?___llmod+1
  4006  001E66  C01B  F01B         	movff	___llmod@dividend+2,?___llmod+2
  4007  001E6A  C01C  F01C         	movff	___llmod@dividend+3,?___llmod+3
  4008  001E6E  0012               	return		;funcret
  4009  001E70                     __end_of___llmod:
  4010                           	opt stack 0
  4011                           tblptru	equ	0xFF8
  4012                           tblptrh	equ	0xFF7
  4013                           tblptrl	equ	0xFF6
  4014                           tablat	equ	0xFF5
  4015                           prodh	equ	0xFF4
  4016                           prodl	equ	0xFF3
  4017                           intcon	equ	0xFF2
  4018                           postinc0	equ	0xFEE
  4019                           wreg	equ	0xFE8
  4020                           indf1	equ	0xFE7
  4021                           fsr1h	equ	0xFE2
  4022                           fsr1l	equ	0xFE1
  4023                           indf2	equ	0xFDF
  4024                           postinc2	equ	0xFDE
  4025                           fsr2h	equ	0xFDA
  4026                           fsr2l	equ	0xFD9
  4027                           status	equ	0xFD8
  4028                           
  4029 ;; *************** function ___lldiv *****************
  4030 ;; Defined at:
  4031 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;  dividend        4   24[COMRAM] unsigned long 
  4034 ;;  divisor         4   28[COMRAM] unsigned long 
  4035 ;; Auto vars:     Size  Location     Type
  4036 ;;  quotient        4   32[COMRAM] unsigned long 
  4037 ;;  counter         1   36[COMRAM] unsigned char 
  4038 ;; Return value:  Size  Location     Type
  4039 ;;                  4   24[COMRAM] unsigned long 
  4040 ;; Registers used:
  4041 ;;		wreg, status,2, status,0
  4042 ;; Tracked objects:
  4043 ;;		On entry : 0/0
  4044 ;;		On exit  : 0/0
  4045 ;;		Unchanged: 0/0
  4046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4047 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4048 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4050 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4051 ;;Total ram usage:       13 bytes
  4052 ;; Hardware stack levels used:    1
  4053 ;; Hardware stack levels required when called:    3
  4054 ;; This function calls:
  4055 ;;		Nothing
  4056 ;; This function is called by:
  4057 ;;		_VerifyCRC
  4058 ;; This function uses a non-reentrant model
  4059 ;;
  4060                           
  4061                           	psect	text25
  4062  001C74                     __ptext25:
  4063                           	opt stack 0
  4064  001C74                     ___lldiv:
  4065                           	opt stack 24
  4066                           
  4067                           ;incstack = 0
  4068  001C74  0E00               	movlw	0
  4069  001C76  6E21               	movwf	___lldiv@quotient,c
  4070  001C78  0E00               	movlw	0
  4071  001C7A  6E22               	movwf	___lldiv@quotient+1,c
  4072  001C7C  0E00               	movlw	0
  4073  001C7E  6E23               	movwf	___lldiv@quotient+2,c
  4074  001C80  0E00               	movlw	0
  4075  001C82  6E24               	movwf	___lldiv@quotient+3,c
  4076  001C84  501D               	movf	___lldiv@divisor,w,c
  4077  001C86  101E               	iorwf	___lldiv@divisor+1,w,c
  4078  001C88  101F               	iorwf	___lldiv@divisor+2,w,c
  4079  001C8A  1020               	iorwf	___lldiv@divisor+3,w,c
  4080  001C8C  B4D8               	btfsc	status,2,c
  4081  001C8E  D02F               	goto	l946
  4082  001C90  0E01               	movlw	1
  4083  001C92  6E25               	movwf	___lldiv@counter,c
  4084  001C94  D007               	goto	l2770
  4085  001C96                     l2768:
  4086  001C96  90D8               	bcf	status,0,c
  4087  001C98  361D               	rlcf	___lldiv@divisor,f,c
  4088  001C9A  361E               	rlcf	___lldiv@divisor+1,f,c
  4089  001C9C  361F               	rlcf	___lldiv@divisor+2,f,c
  4090  001C9E  3620               	rlcf	___lldiv@divisor+3,f,c
  4091  001CA0  2A25               	incf	___lldiv@counter,f,c
  4092  001CA2  D000               	goto	l2770
  4093  001CA4                     l2770:
  4094  001CA4  BE20               	btfsc	___lldiv@divisor+3,7,c
  4095  001CA6  D002               	goto	l2772
  4096  001CA8  D7F6               	goto	l2768
  4097  001CAA  D000               	goto	l2772
  4098  001CAC                     l2772:
  4099  001CAC  90D8               	bcf	status,0,c
  4100  001CAE  3621               	rlcf	___lldiv@quotient,f,c
  4101  001CB0  3622               	rlcf	___lldiv@quotient+1,f,c
  4102  001CB2  3623               	rlcf	___lldiv@quotient+2,f,c
  4103  001CB4  3624               	rlcf	___lldiv@quotient+3,f,c
  4104  001CB6  501D               	movf	___lldiv@divisor,w,c
  4105  001CB8  5C19               	subwf	___lldiv@dividend,w,c
  4106  001CBA  501E               	movf	___lldiv@divisor+1,w,c
  4107  001CBC  581A               	subwfb	___lldiv@dividend+1,w,c
  4108  001CBE  501F               	movf	___lldiv@divisor+2,w,c
  4109  001CC0  581B               	subwfb	___lldiv@dividend+2,w,c
  4110  001CC2  5020               	movf	___lldiv@divisor+3,w,c
  4111  001CC4  581C               	subwfb	___lldiv@dividend+3,w,c
  4112  001CC6  A0D8               	btfss	status,0,c
  4113  001CC8  D00A               	goto	l2780
  4114  001CCA  501D               	movf	___lldiv@divisor,w,c
  4115  001CCC  5E19               	subwf	___lldiv@dividend,f,c
  4116  001CCE  501E               	movf	___lldiv@divisor+1,w,c
  4117  001CD0  5A1A               	subwfb	___lldiv@dividend+1,f,c
  4118  001CD2  501F               	movf	___lldiv@divisor+2,w,c
  4119  001CD4  5A1B               	subwfb	___lldiv@dividend+2,f,c
  4120  001CD6  5020               	movf	___lldiv@divisor+3,w,c
  4121  001CD8  5A1C               	subwfb	___lldiv@dividend+3,f,c
  4122  001CDA  8021               	bsf	___lldiv@quotient,0,c
  4123  001CDC  D000               	goto	l2780
  4124  001CDE                     l2780:
  4125  001CDE  90D8               	bcf	status,0,c
  4126  001CE0  3220               	rrcf	___lldiv@divisor+3,f,c
  4127  001CE2  321F               	rrcf	___lldiv@divisor+2,f,c
  4128  001CE4  321E               	rrcf	___lldiv@divisor+1,f,c
  4129  001CE6  321D               	rrcf	___lldiv@divisor,f,c
  4130  001CE8  2E25               	decfsz	___lldiv@counter,f,c
  4131  001CEA  D7E0               	goto	l2772
  4132  001CEC  D000               	goto	l946
  4133  001CEE                     l946:
  4134  001CEE  C021  F019         	movff	___lldiv@quotient,?___lldiv
  4135  001CF2  C022  F01A         	movff	___lldiv@quotient+1,?___lldiv+1
  4136  001CF6  C023  F01B         	movff	___lldiv@quotient+2,?___lldiv+2
  4137  001CFA  C024  F01C         	movff	___lldiv@quotient+3,?___lldiv+3
  4138  001CFE  0012               	return		;funcret
  4139  001D00                     __end_of___lldiv:
  4140                           	opt stack 0
  4141                           tblptru	equ	0xFF8
  4142                           tblptrh	equ	0xFF7
  4143                           tblptrl	equ	0xFF6
  4144                           tablat	equ	0xFF5
  4145                           prodh	equ	0xFF4
  4146                           prodl	equ	0xFF3
  4147                           intcon	equ	0xFF2
  4148                           postinc0	equ	0xFEE
  4149                           wreg	equ	0xFE8
  4150                           indf1	equ	0xFE7
  4151                           fsr1h	equ	0xFE2
  4152                           fsr1l	equ	0xFE1
  4153                           indf2	equ	0xFDF
  4154                           postinc2	equ	0xFDE
  4155                           fsr2h	equ	0xFDA
  4156                           fsr2l	equ	0xFD9
  4157                           status	equ	0xFD8
  4158                           
  4159 ;; *************** function _Key_ManageMessage *****************
  4160 ;; Defined at:
  4161 ;;		line 171 in file "_01_USER/Key.c"
  4162 ;; Parameters:    Size  Location     Type
  4163 ;;		None
  4164 ;; Auto vars:     Size  Location     Type
  4165 ;;		None
  4166 ;; Return value:  Size  Location     Type
  4167 ;;		None               void
  4168 ;; Registers used:
  4169 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4170 ;; Tracked objects:
  4171 ;;		On entry : 0/0
  4172 ;;		On exit  : 0/0
  4173 ;;		Unchanged: 0/0
  4174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4179 ;;Total ram usage:        0 bytes
  4180 ;; Hardware stack levels used:    1
  4181 ;; Hardware stack levels required when called:    4
  4182 ;; This function calls:
  4183 ;;		_Key_ReadFSM
  4184 ;;		_Key_ResetFSM
  4185 ;;		___lbmod
  4186 ;; This function is called by:
  4187 ;;		_ManageMessage
  4188 ;; This function uses a non-reentrant model
  4189 ;;
  4190                           
  4191                           	psect	text26
  4192  001A10                     __ptext26:
  4193                           	opt stack 0
  4194  001A10                     _Key_ManageMessage:
  4195                           	opt stack 25
  4196                           
  4197                           ;Key.c: 173: Key_ReadFSM();
  4198                           
  4199                           ;incstack = 0
  4200  001A10  ECCF  F009         	call	_Key_ReadFSM	;wreg free
  4201                           
  4202                           ;Key.c: 175: if ( gs_Local_Key_User.key_group == ((0x01<<1)|(0x01<<3)) && gs_Local_Key_U
      +                          ser.key_group_state == KEY_short )
  4203  001A14  0E0A               	movlw	10
  4204  001A16  0100               	movlb	0	; () banked
  4205  001A18  19B1               	xorwf	(_gs_Local_Key_User+1)& (0+255),w,b	;volatile
  4206  001A1A  A4D8               	btfss	status,2,c
  4207  001A1C  D00A               	goto	l2350
  4208                           
  4209                           ; BSR set to: 0
  4210  001A1E  0100               	movlb	0	; () banked
  4211  001A20  05B2               	decf	(_gs_Local_Key_User+2)& (0+255),w,b	;volatile
  4212  001A22  A4D8               	btfss	status,2,c
  4213  001A24  D006               	goto	l2350
  4214                           
  4215                           ; BSR set to: 0
  4216                           ;Key.c: 176: {
  4217                           ;Key.c: 177: gs_Handle_Switch.Show_Send_Receive = ~gs_Handle_Switch.Show_Send_Receive ;
  4218  001A26  5034               	movf	_gs_Handle_Switch+3,w,c
  4219  001A28  0AFF               	xorlw	255
  4220  001A2A  6E34               	movwf	_gs_Handle_Switch+3,c
  4221                           
  4222                           ; BSR set to: 0
  4223                           ;Key.c: 178: Key_ResetFSM();
  4224  001A2C  EC47  F010         	call	_Key_ResetFSM	;wreg free
  4225  001A30  D000               	goto	l2350
  4226  001A32                     l2350:
  4227                           
  4228                           ;Key.c: 179: }
  4229                           ;Key.c: 182: if (gs_Local_Key_User.a_key_state[5-1] == KEY_short) g_RS485_Byte -- ;
  4230  001A32  0100               	movlb	0	; () banked
  4231  001A34  05C1               	decf	(_gs_Local_Key_User+17)& (0+255),w,b	;volatile
  4232  001A36  A4D8               	btfss	status,2,c
  4233  001A38  D002               	goto	l2354
  4234                           
  4235                           ; BSR set to: 0
  4236  001A3A  063C               	decf	_g_RS485_Byte,f,c
  4237  001A3C  D000               	goto	l2354
  4238  001A3E                     l2354:
  4239                           
  4240                           ; BSR set to: 0
  4241                           ;Key.c: 183: if (gs_Local_Key_User.a_key_state[5-1] == KEY_hold) g_RS485_Byte -- ;
  4242  001A3E  0E03               	movlw	3
  4243  001A40  0100               	movlb	0	; () banked
  4244  001A42  19C1               	xorwf	(_gs_Local_Key_User+17)& (0+255),w,b	;volatile
  4245  001A44  A4D8               	btfss	status,2,c
  4246  001A46  D002               	goto	l2358
  4247                           
  4248                           ; BSR set to: 0
  4249  001A48  063C               	decf	_g_RS485_Byte,f,c
  4250  001A4A  D000               	goto	l2358
  4251  001A4C                     l2358:
  4252                           
  4253                           ; BSR set to: 0
  4254                           ;Key.c: 186: if (gs_Local_Key_User.a_key_state[3-1] == KEY_short) g_RS485_Byte ++ ;
  4255  001A4C  0100               	movlb	0	; () banked
  4256  001A4E  05BF               	decf	(_gs_Local_Key_User+15)& (0+255),w,b	;volatile
  4257  001A50  A4D8               	btfss	status,2,c
  4258  001A52  D002               	goto	l2362
  4259                           
  4260                           ; BSR set to: 0
  4261  001A54  2A3C               	incf	_g_RS485_Byte,f,c
  4262  001A56  D000               	goto	l2362
  4263  001A58                     l2362:
  4264                           
  4265                           ; BSR set to: 0
  4266                           ;Key.c: 187: if (gs_Local_Key_User.a_key_state[3-1] == KEY_hold) g_RS485_Byte ++ ;
  4267  001A58  0E03               	movlw	3
  4268  001A5A  0100               	movlb	0	; () banked
  4269  001A5C  19BF               	xorwf	(_gs_Local_Key_User+15)& (0+255),w,b	;volatile
  4270  001A5E  A4D8               	btfss	status,2,c
  4271  001A60  D002               	goto	l2366
  4272                           
  4273                           ; BSR set to: 0
  4274  001A62  2A3C               	incf	_g_RS485_Byte,f,c
  4275  001A64  D000               	goto	l2366
  4276  001A66                     l2366:
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;Key.c: 189: if( g_RS485_Byte > 250 ) g_RS485_Byte = 10 - 1;
  4280  001A66  0EFA               	movlw	250
  4281  001A68  643C               	cpfsgt	_g_RS485_Byte,c
  4282  001A6A  D002               	goto	l2370
  4283                           
  4284                           ; BSR set to: 0
  4285  001A6C  0E09               	movlw	9
  4286  001A6E  D005               	goto	L3
  4287  001A70                     l2370:
  4288                           
  4289                           ; BSR set to: 0
  4290                           ;Key.c: 190: else g_RS485_Byte %= 10;
  4291  001A70  0E0A               	movlw	10
  4292  001A72  6E19               	movwf	___lbmod@divisor,c
  4293  001A74  503C               	movf	_g_RS485_Byte,w,c
  4294  001A76  ECC4  F010         	call	___lbmod
  4295  001A7A                     L3:
  4296  001A7A  6E3C               	movwf	_g_RS485_Byte,c
  4297  001A7C  D000               	goto	l2372
  4298  001A7E                     l2372:
  4299                           
  4300                           ;Key.c: 193: if (gs_Local_Key_User.a_key_state[4-1] == KEY_short) ga_RS485_SendBuff[g_RS
      +                          485_Byte] ++ ;
  4301  001A7E  0100               	movlb	0	; () banked
  4302  001A80  05C0               	decf	(_gs_Local_Key_User+16)& (0+255),w,b	;volatile
  4303  001A82  A4D8               	btfss	status,2,c
  4304  001A84  D00A               	goto	l2376
  4305                           
  4306                           ; BSR set to: 0
  4307  001A86  503C               	movf	_g_RS485_Byte,w,c
  4308  001A88  0D01               	mullw	1
  4309  001A8A  0E3E               	movlw	low _ga_RS485_SendBuff
  4310  001A8C  24F3               	addwf	prodl,w,c
  4311  001A8E  6ED9               	movwf	fsr2l,c
  4312  001A90  0E00               	movlw	high _ga_RS485_SendBuff
  4313  001A92  20F4               	addwfc	prodh,w,c
  4314  001A94  6EDA               	movwf	fsr2h,c
  4315  001A96  2ADF               	incf	indf2,f,c
  4316  001A98  D000               	goto	l2376
  4317  001A9A                     l2376:
  4318                           
  4319                           ; BSR set to: 0
  4320                           ;Key.c: 194: if (gs_Local_Key_User.a_key_state[4-1] == KEY_hold) ga_RS485_SendBuff[g_RS4
      +                          85_Byte] ++ ;
  4321  001A9A  0E03               	movlw	3
  4322  001A9C  0100               	movlb	0	; () banked
  4323  001A9E  19C0               	xorwf	(_gs_Local_Key_User+16)& (0+255),w,b	;volatile
  4324  001AA0  A4D8               	btfss	status,2,c
  4325  001AA2  D00A               	goto	l2380
  4326                           
  4327                           ; BSR set to: 0
  4328  001AA4  503C               	movf	_g_RS485_Byte,w,c
  4329  001AA6  0D01               	mullw	1
  4330  001AA8  0E3E               	movlw	low _ga_RS485_SendBuff
  4331  001AAA  24F3               	addwf	prodl,w,c
  4332  001AAC  6ED9               	movwf	fsr2l,c
  4333  001AAE  0E00               	movlw	high _ga_RS485_SendBuff
  4334  001AB0  20F4               	addwfc	prodh,w,c
  4335  001AB2  6EDA               	movwf	fsr2h,c
  4336  001AB4  2ADF               	incf	indf2,f,c
  4337  001AB6  D000               	goto	l2380
  4338  001AB8                     l2380:
  4339                           
  4340                           ; BSR set to: 0
  4341                           ;Key.c: 197: if (gs_Local_Key_User.a_key_state[2-1] == KEY_short) ga_RS485_SendBuff[g_RS
      +                          485_Byte] -- ;
  4342  001AB8  0100               	movlb	0	; () banked
  4343  001ABA  05BE               	decf	(_gs_Local_Key_User+14)& (0+255),w,b	;volatile
  4344  001ABC  A4D8               	btfss	status,2,c
  4345  001ABE  D00A               	goto	l2384
  4346                           
  4347                           ; BSR set to: 0
  4348  001AC0  503C               	movf	_g_RS485_Byte,w,c
  4349  001AC2  0D01               	mullw	1
  4350  001AC4  0E3E               	movlw	low _ga_RS485_SendBuff
  4351  001AC6  24F3               	addwf	prodl,w,c
  4352  001AC8  6ED9               	movwf	fsr2l,c
  4353  001ACA  0E00               	movlw	high _ga_RS485_SendBuff
  4354  001ACC  20F4               	addwfc	prodh,w,c
  4355  001ACE  6EDA               	movwf	fsr2h,c
  4356  001AD0  06DF               	decf	indf2,f,c
  4357  001AD2  D000               	goto	l2384
  4358  001AD4                     l2384:
  4359                           
  4360                           ; BSR set to: 0
  4361                           ;Key.c: 198: if (gs_Local_Key_User.a_key_state[2-1] == KEY_hold) ga_RS485_SendBuff[g_RS4
      +                          85_Byte] -- ;
  4362  001AD4  0E03               	movlw	3
  4363  001AD6  0100               	movlb	0	; () banked
  4364  001AD8  19BE               	xorwf	(_gs_Local_Key_User+14)& (0+255),w,b	;volatile
  4365  001ADA  A4D8               	btfss	status,2,c
  4366  001ADC  D00A               	goto	l2388
  4367                           
  4368                           ; BSR set to: 0
  4369  001ADE  503C               	movf	_g_RS485_Byte,w,c
  4370  001AE0  0D01               	mullw	1
  4371  001AE2  0E3E               	movlw	low _ga_RS485_SendBuff
  4372  001AE4  24F3               	addwf	prodl,w,c
  4373  001AE6  6ED9               	movwf	fsr2l,c
  4374  001AE8  0E00               	movlw	high _ga_RS485_SendBuff
  4375  001AEA  20F4               	addwfc	prodh,w,c
  4376  001AEC  6EDA               	movwf	fsr2h,c
  4377  001AEE  06DF               	decf	indf2,f,c
  4378  001AF0  D000               	goto	l2388
  4379  001AF2                     l2388:
  4380                           
  4381                           ; BSR set to: 0
  4382                           ;Key.c: 203: if (gs_Local_Key_User.a_key_state[1-1] == KEY_short) gs_Handle_Switch.Usart
      +                          _OneDate = 1 ;
  4383  001AF2  0100               	movlb	0	; () banked
  4384  001AF4  05BD               	decf	(_gs_Local_Key_User+13)& (0+255),w,b	;volatile
  4385  001AF6  A4D8               	btfss	status,2,c
  4386  001AF8  D003               	goto	l2392
  4387                           
  4388                           ; BSR set to: 0
  4389  001AFA  0E01               	movlw	1
  4390  001AFC  6E33               	movwf	_gs_Handle_Switch+2,c
  4391  001AFE  D000               	goto	l2392
  4392  001B00                     l2392:
  4393                           
  4394                           ; BSR set to: 0
  4395                           ;Key.c: 206: Key_ResetFSM();
  4396  001B00  EC47  F010         	call	_Key_ResetFSM	;wreg free
  4397  001B04  0012               	return		;funcret
  4398  001B06                     __end_of_Key_ManageMessage:
  4399                           	opt stack 0
  4400                           tblptru	equ	0xFF8
  4401                           tblptrh	equ	0xFF7
  4402                           tblptrl	equ	0xFF6
  4403                           tablat	equ	0xFF5
  4404                           prodh	equ	0xFF4
  4405                           prodl	equ	0xFF3
  4406                           intcon	equ	0xFF2
  4407                           postinc0	equ	0xFEE
  4408                           wreg	equ	0xFE8
  4409                           indf1	equ	0xFE7
  4410                           fsr1h	equ	0xFE2
  4411                           fsr1l	equ	0xFE1
  4412                           indf2	equ	0xFDF
  4413                           postinc2	equ	0xFDE
  4414                           fsr2h	equ	0xFDA
  4415                           fsr2l	equ	0xFD9
  4416                           status	equ	0xFD8
  4417                           
  4418 ;; *************** function ___lbmod *****************
  4419 ;; Defined at:
  4420 ;;		line 4 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbmod.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;  dividend        1    wreg     unsigned char 
  4423 ;;  divisor         1   24[COMRAM] unsigned char 
  4424 ;; Auto vars:     Size  Location     Type
  4425 ;;  dividend        1   25[COMRAM] unsigned char 
  4426 ;;  rem             1   27[COMRAM] unsigned char 
  4427 ;;  counter         1   26[COMRAM] unsigned char 
  4428 ;; Return value:  Size  Location     Type
  4429 ;;                  1    wreg      unsigned char 
  4430 ;; Registers used:
  4431 ;;		wreg, status,2, status,0
  4432 ;; Tracked objects:
  4433 ;;		On entry : 0/0
  4434 ;;		On exit  : 0/0
  4435 ;;		Unchanged: 0/0
  4436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4437 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4438 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4440 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4441 ;;Total ram usage:        4 bytes
  4442 ;; Hardware stack levels used:    1
  4443 ;; Hardware stack levels required when called:    3
  4444 ;; This function calls:
  4445 ;;		Nothing
  4446 ;; This function is called by:
  4447 ;;		_Key_ManageMessage
  4448 ;; This function uses a non-reentrant model
  4449 ;;
  4450                           
  4451                           	psect	text27
  4452  002188                     __ptext27:
  4453                           	opt stack 0
  4454  002188                     ___lbmod:
  4455                           	opt stack 25
  4456                           
  4457                           ;incstack = 0
  4458                           ;___lbmod@dividend stored from wreg
  4459  002188  6E1A               	movwf	___lbmod@dividend,c
  4460  00218A  0E08               	movlw	8
  4461  00218C  6E1B               	movwf	___lbmod@counter,c
  4462  00218E  0E00               	movlw	0
  4463  002190  6E1C               	movwf	___lbmod@rem,c
  4464  002192  D000               	goto	l2238
  4465  002194                     l2238:
  4466  002194  90D8               	bcf	status,0,c
  4467  002196  341A               	rlcf	___lbmod@dividend,w,c
  4468  002198  341C               	rlcf	___lbmod@rem,w,c
  4469  00219A  6E1C               	movwf	___lbmod@rem,c
  4470  00219C  90D8               	bcf	status,0,c
  4471  00219E  361A               	rlcf	___lbmod@dividend,f,c
  4472  0021A0  5019               	movf	___lbmod@divisor,w,c
  4473  0021A2  5C1C               	subwf	___lbmod@rem,w,c
  4474  0021A4  A0D8               	btfss	status,0,c
  4475  0021A6  D003               	goto	l2246
  4476  0021A8  5019               	movf	___lbmod@divisor,w,c
  4477  0021AA  5E1C               	subwf	___lbmod@rem,f,c
  4478  0021AC  D000               	goto	l2246
  4479  0021AE                     l2246:
  4480  0021AE  2E1B               	decfsz	___lbmod@counter,f,c
  4481  0021B0  D7F1               	goto	l2238
  4482  0021B2  D000               	goto	l2248
  4483  0021B4                     l2248:
  4484  0021B4  501C               	movf	___lbmod@rem,w,c
  4485  0021B6  0012               	return	
  4486  0021B8  0012               	return		;funcret
  4487  0021BA                     __end_of___lbmod:
  4488                           	opt stack 0
  4489                           tblptru	equ	0xFF8
  4490                           tblptrh	equ	0xFF7
  4491                           tblptrl	equ	0xFF6
  4492                           tablat	equ	0xFF5
  4493                           prodh	equ	0xFF4
  4494                           prodl	equ	0xFF3
  4495                           intcon	equ	0xFF2
  4496                           postinc0	equ	0xFEE
  4497                           wreg	equ	0xFE8
  4498                           indf1	equ	0xFE7
  4499                           fsr1h	equ	0xFE2
  4500                           fsr1l	equ	0xFE1
  4501                           indf2	equ	0xFDF
  4502                           postinc2	equ	0xFDE
  4503                           fsr2h	equ	0xFDA
  4504                           fsr2l	equ	0xFD9
  4505                           status	equ	0xFD8
  4506                           
  4507 ;; *************** function _Key_ResetFSM *****************
  4508 ;; Defined at:
  4509 ;;		line 151 in file "_01_USER/Key.c"
  4510 ;; Parameters:    Size  Location     Type
  4511 ;;		None
  4512 ;; Auto vars:     Size  Location     Type
  4513 ;;  t               1   24[COMRAM] unsigned char 
  4514 ;; Return value:  Size  Location     Type
  4515 ;;		None               void
  4516 ;; Registers used:
  4517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4518 ;; Tracked objects:
  4519 ;;		On entry : 0/0
  4520 ;;		On exit  : 0/0
  4521 ;;		Unchanged: 0/0
  4522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4524 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4526 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4527 ;;Total ram usage:        1 bytes
  4528 ;; Hardware stack levels used:    1
  4529 ;; Hardware stack levels required when called:    3
  4530 ;; This function calls:
  4531 ;;		Nothing
  4532 ;; This function is called by:
  4533 ;;		_Key_ManageMessage
  4534 ;; This function uses a non-reentrant model
  4535 ;;
  4536                           
  4537                           	psect	text28
  4538  00208E                     __ptext28:
  4539                           	opt stack 0
  4540  00208E                     _Key_ResetFSM:
  4541                           	opt stack 25
  4542                           
  4543                           ;Key.c: 153: unsigned char t;
  4544                           ;Key.c: 154: gs_Local_Key_User.key_BUS = 0x00;
  4545                           
  4546                           ;incstack = 0
  4547  00208E  0E00               	movlw	0
  4548  002090  0100               	movlb	0	; () banked
  4549  002092  6FB0               	movwf	_gs_Local_Key_User& (0+255),b	;volatile
  4550                           
  4551                           ;Key.c: 155: gs_Local_Key_User.key_group = KEY_default;
  4552  002094  0E00               	movlw	0
  4553  002096  0100               	movlb	0	; () banked
  4554  002098  6FB1               	movwf	(_gs_Local_Key_User+1)& (0+255),b	;volatile
  4555                           
  4556                           ;Key.c: 156: t=4;
  4557  00209A  0E04               	movlw	4
  4558  00209C  6E19               	movwf	Key_ResetFSM@t,c
  4559                           
  4560                           ;Key.c: 157: while(t--) gs_Local_Key_User.a_key_count[t] = 0,
  4561  00209E  D017               	goto	l2116
  4562  0020A0                     l2114:
  4563                           
  4564                           ;Key.c: 158: gs_Local_Key_User.a_key_state[t] = KEY_default;
  4565  0020A0  5019               	movf	Key_ResetFSM@t,w,c
  4566  0020A2  0D02               	mullw	2
  4567  0020A4  0EB3               	movlw	low (_gs_Local_Key_User+3)
  4568  0020A6  24F3               	addwf	prodl,w,c
  4569  0020A8  6ED9               	movwf	fsr2l,c
  4570  0020AA  0E00               	movlw	high (_gs_Local_Key_User+3)
  4571  0020AC  20F4               	addwfc	prodh,w,c
  4572  0020AE  6EDA               	movwf	fsr2h,c
  4573  0020B0  0E00               	movlw	0
  4574  0020B2  6EDE               	movwf	postinc2,c
  4575  0020B4  0E00               	movlw	0
  4576  0020B6  6EDD               	movwf	postdec2,c
  4577  0020B8  5019               	movf	Key_ResetFSM@t,w,c
  4578  0020BA  0D01               	mullw	1
  4579  0020BC  0EBD               	movlw	low (_gs_Local_Key_User+13)
  4580  0020BE  24F3               	addwf	prodl,w,c
  4581  0020C0  6ED9               	movwf	fsr2l,c
  4582  0020C2  0E00               	movlw	high (_gs_Local_Key_User+13)
  4583  0020C4  20F4               	addwfc	prodh,w,c
  4584  0020C6  6EDA               	movwf	fsr2h,c
  4585  0020C8  0E00               	movlw	0
  4586  0020CA  6EDF               	movwf	indf2,c
  4587  0020CC  D000               	goto	l2116
  4588  0020CE                     l2116:
  4589  0020CE  0619               	decf	Key_ResetFSM@t,f,c
  4590  0020D0  2819               	incf	Key_ResetFSM@t,w,c
  4591  0020D2  A4D8               	btfss	status,2,c
  4592  0020D4  D7E5               	goto	l2114
  4593  0020D6  0012               	return		;funcret
  4594  0020D8                     __end_of_Key_ResetFSM:
  4595                           	opt stack 0
  4596                           tblptru	equ	0xFF8
  4597                           tblptrh	equ	0xFF7
  4598                           tblptrl	equ	0xFF6
  4599                           tablat	equ	0xFF5
  4600                           prodh	equ	0xFF4
  4601                           prodl	equ	0xFF3
  4602                           intcon	equ	0xFF2
  4603                           postinc0	equ	0xFEE
  4604                           wreg	equ	0xFE8
  4605                           indf1	equ	0xFE7
  4606                           fsr1h	equ	0xFE2
  4607                           fsr1l	equ	0xFE1
  4608                           indf2	equ	0xFDF
  4609                           postinc2	equ	0xFDE
  4610                           postdec2	equ	0xFDD
  4611                           fsr2h	equ	0xFDA
  4612                           fsr2l	equ	0xFD9
  4613                           status	equ	0xFD8
  4614                           
  4615 ;; *************** function _Key_ReadFSM *****************
  4616 ;; Defined at:
  4617 ;;		line 101 in file "_01_USER/Key.c"
  4618 ;; Parameters:    Size  Location     Type
  4619 ;;		None
  4620 ;; Auto vars:     Size  Location     Type
  4621 ;;  key_num         1   29[COMRAM] unsigned char 
  4622 ;;  key_num_mate    1   28[COMRAM] unsigned char 
  4623 ;; Return value:  Size  Location     Type
  4624 ;;		None               void
  4625 ;; Registers used:
  4626 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4627 ;; Tracked objects:
  4628 ;;		On entry : 0/0
  4629 ;;		On exit  : 0/0
  4630 ;;		Unchanged: 0/0
  4631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4633 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4634 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4635 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4636 ;;Total ram usage:        6 bytes
  4637 ;; Hardware stack levels used:    1
  4638 ;; Hardware stack levels required when called:    3
  4639 ;; This function calls:
  4640 ;;		Nothing
  4641 ;; This function is called by:
  4642 ;;		_Key_ManageMessage
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           
  4646                           	psect	text29
  4647  00139E                     __ptext29:
  4648                           	opt stack 0
  4649  00139E                     _Key_ReadFSM:
  4650                           	opt stack 25
  4651                           
  4652                           ;Key.c: 103: unsigned char key_num = 5,key_num_mate;
  4653                           
  4654                           ;incstack = 0
  4655  00139E  0E05               	movlw	5
  4656  0013A0  6E1E               	movwf	Key_ReadFSM@key_num,c
  4657                           
  4658                           ;Key.c: 106: while(key_num--)
  4659  0013A2  D072               	goto	l2084
  4660  0013A4                     l2066:
  4661                           
  4662                           ;Key.c: 107: {
  4663                           ;Key.c: 109: if( s_Local_Key_FSM.key_BUS == 0x00 )
  4664  0013A4  0100               	movlb	0	; () banked
  4665  0013A6  51C2               	movf	_s_Local_Key_FSM& (0+255),w,b	;volatile
  4666  0013A8  A4D8               	btfss	status,2,c
  4667  0013AA  D04A               	goto	l2078
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;Key.c: 110: {
  4671                           ;Key.c: 111: if( s_Local_Key_FSM.a_key_count[key_num] > 5 )
  4672  0013AC  501E               	movf	Key_ReadFSM@key_num,w,c
  4673  0013AE  0D02               	mullw	2
  4674  0013B0  0EC5               	movlw	low (_s_Local_Key_FSM+3)
  4675  0013B2  24F3               	addwf	prodl,w,c
  4676  0013B4  6ED9               	movwf	fsr2l,c
  4677  0013B6  0E00               	movlw	high (_s_Local_Key_FSM+3)
  4678  0013B8  20F4               	addwfc	prodh,w,c
  4679  0013BA  6EDA               	movwf	fsr2h,c
  4680  0013BC  0E01               	movlw	1
  4681  0013BE  50DB               	movf	plusw2,w,c
  4682  0013C0  E104               	bnz	u1580
  4683  0013C2  0E06               	movlw	6
  4684  0013C4  5CDE               	subwf	postinc2,w,c
  4685  0013C6  A0D8               	btfss	status,0,c
  4686  0013C8  D024               	goto	l2076
  4687  0013CA                     u1580:
  4688                           
  4689                           ; BSR set to: 0
  4690                           ;Key.c: 112: {
  4691                           ;Key.c: 113: if( s_Local_Key_FSM.a_key_count[key_num] > 60 )
  4692  0013CA  501E               	movf	Key_ReadFSM@key_num,w,c
  4693  0013CC  0D02               	mullw	2
  4694  0013CE  0EC5               	movlw	low (_s_Local_Key_FSM+3)
  4695  0013D0  24F3               	addwf	prodl,w,c
  4696  0013D2  6ED9               	movwf	fsr2l,c
  4697  0013D4  0E00               	movlw	high (_s_Local_Key_FSM+3)
  4698  0013D6  20F4               	addwfc	prodh,w,c
  4699  0013D8  6EDA               	movwf	fsr2h,c
  4700  0013DA  0E01               	movlw	1
  4701  0013DC  50DB               	movf	plusw2,w,c
  4702  0013DE  E104               	bnz	u1590
  4703  0013E0  0E3D               	movlw	61
  4704  0013E2  5CDE               	subwf	postinc2,w,c
  4705  0013E4  A0D8               	btfss	status,0,c
  4706  0013E6  D00A               	goto	l2074
  4707  0013E8                     u1590:
  4708                           
  4709                           ; BSR set to: 0
  4710                           ;Key.c: 114: gs_Local_Key_User.a_key_state[key_num] = KEY_long;
  4711  0013E8  501E               	movf	Key_ReadFSM@key_num,w,c
  4712  0013EA  0D01               	mullw	1
  4713  0013EC  0EBD               	movlw	low (_gs_Local_Key_User+13)
  4714  0013EE  24F3               	addwf	prodl,w,c
  4715  0013F0  6ED9               	movwf	fsr2l,c
  4716  0013F2  0E00               	movlw	high (_gs_Local_Key_User+13)
  4717  0013F4  20F4               	addwfc	prodh,w,c
  4718  0013F6  6EDA               	movwf	fsr2h,c
  4719  0013F8  0E05               	movlw	5
  4720  0013FA  D014               	goto	L4
  4721  0013FC                     l2074:
  4722                           
  4723                           ; BSR set to: 0
  4724                           ;Key.c: 115: else gs_Local_Key_User.a_key_state[key_num] = KEY_short;
  4725  0013FC  501E               	movf	Key_ReadFSM@key_num,w,c
  4726  0013FE  0D01               	mullw	1
  4727  001400  0EBD               	movlw	low (_gs_Local_Key_User+13)
  4728  001402  24F3               	addwf	prodl,w,c
  4729  001404  6ED9               	movwf	fsr2l,c
  4730  001406  0E00               	movlw	high (_gs_Local_Key_User+13)
  4731  001408  20F4               	addwfc	prodh,w,c
  4732  00140A  6EDA               	movwf	fsr2h,c
  4733  00140C  0E01               	movlw	1
  4734  00140E  6EDF               	movwf	indf2,c
  4735                           
  4736                           ; BSR set to: 0
  4737                           ;Key.c: 116: }
  4738  001410  D00A               	goto	l131
  4739  001412                     l2076:
  4740                           
  4741                           ; BSR set to: 0
  4742                           ;Key.c: 117: else gs_Local_Key_User.a_key_state[key_num] = KEY_default;
  4743  001412  501E               	movf	Key_ReadFSM@key_num,w,c
  4744  001414  0D01               	mullw	1
  4745  001416  0EBD               	movlw	low (_gs_Local_Key_User+13)
  4746  001418  24F3               	addwf	prodl,w,c
  4747  00141A  6ED9               	movwf	fsr2l,c
  4748  00141C  0E00               	movlw	high (_gs_Local_Key_User+13)
  4749  00141E  20F4               	addwfc	prodh,w,c
  4750  001420  6EDA               	movwf	fsr2h,c
  4751  001422  0E00               	movlw	0
  4752  001424                     L4:
  4753  001424  6EDF               	movwf	indf2,c
  4754  001426                     l131:
  4755                           
  4756                           ; BSR set to: 0
  4757                           ;Key.c: 118: s_Local_Key_FSM.a_key_count[key_num] = 0;
  4758  001426  501E               	movf	Key_ReadFSM@key_num,w,c
  4759  001428  0D02               	mullw	2
  4760  00142A  0EC5               	movlw	low (_s_Local_Key_FSM+3)
  4761  00142C  24F3               	addwf	prodl,w,c
  4762  00142E  6ED9               	movwf	fsr2l,c
  4763  001430  0E00               	movlw	high (_s_Local_Key_FSM+3)
  4764  001432  20F4               	addwfc	prodh,w,c
  4765  001434  6EDA               	movwf	fsr2h,c
  4766  001436  0E00               	movlw	0
  4767  001438  6EDE               	movwf	postinc2,c
  4768  00143A  0E00               	movlw	0
  4769  00143C  6EDD               	movwf	postdec2,c
  4770                           
  4771                           ;Key.c: 119: }
  4772  00143E  D024               	goto	l2084
  4773  001440                     l2078:
  4774                           
  4775                           ; BSR set to: 0
  4776                           ;Key.c: 121: else if( s_Local_Key_FSM.a_key_count[key_num] > 60 )
  4777  001440  501E               	movf	Key_ReadFSM@key_num,w,c
  4778  001442  0D02               	mullw	2
  4779  001444  0EC5               	movlw	low (_s_Local_Key_FSM+3)
  4780  001446  24F3               	addwf	prodl,w,c
  4781  001448  6ED9               	movwf	fsr2l,c
  4782  00144A  0E00               	movlw	high (_s_Local_Key_FSM+3)
  4783  00144C  20F4               	addwfc	prodh,w,c
  4784  00144E  6EDA               	movwf	fsr2h,c
  4785  001450  0E01               	movlw	1
  4786  001452  50DB               	movf	plusw2,w,c
  4787  001454  E104               	bnz	u1600
  4788  001456  0E3D               	movlw	61
  4789  001458  5CDE               	subwf	postinc2,w,c
  4790  00145A  A0D8               	btfss	status,0,c
  4791  00145C  D00A               	goto	l2082
  4792  00145E                     u1600:
  4793                           
  4794                           ; BSR set to: 0
  4795                           ;Key.c: 122: gs_Local_Key_User.a_key_state[key_num] = KEY_hold;
  4796  00145E  501E               	movf	Key_ReadFSM@key_num,w,c
  4797  001460  0D01               	mullw	1
  4798  001462  0EBD               	movlw	low (_gs_Local_Key_User+13)
  4799  001464  24F3               	addwf	prodl,w,c
  4800  001466  6ED9               	movwf	fsr2l,c
  4801  001468  0E00               	movlw	high (_gs_Local_Key_User+13)
  4802  00146A  20F4               	addwfc	prodh,w,c
  4803  00146C  6EDA               	movwf	fsr2h,c
  4804  00146E  0E03               	movlw	3
  4805  001470  D009               	goto	L5
  4806  001472                     l2082:
  4807                           
  4808                           ; BSR set to: 0
  4809                           ;Key.c: 125: else gs_Local_Key_User.a_key_state[key_num] = KEY_busy;
  4810  001472  501E               	movf	Key_ReadFSM@key_num,w,c
  4811  001474  0D01               	mullw	1
  4812  001476  0EBD               	movlw	low (_gs_Local_Key_User+13)
  4813  001478  24F3               	addwf	prodl,w,c
  4814  00147A  6ED9               	movwf	fsr2l,c
  4815  00147C  0E00               	movlw	high (_gs_Local_Key_User+13)
  4816  00147E  20F4               	addwfc	prodh,w,c
  4817  001480  6EDA               	movwf	fsr2h,c
  4818  001482  0E04               	movlw	4
  4819  001484                     L5:
  4820  001484  6EDF               	movwf	indf2,c
  4821                           
  4822                           ; BSR set to: 0
  4823                           
  4824                           ; BSR set to: 0
  4825  001486  D000               	goto	l2084
  4826  001488                     l2084:
  4827  001488  061E               	decf	Key_ReadFSM@key_num,f,c
  4828  00148A  281E               	incf	Key_ReadFSM@key_num,w,c
  4829  00148C  A4D8               	btfss	status,2,c
  4830  00148E  D78A               	goto	l2066
  4831                           
  4832                           ;Key.c: 126: }
  4833                           ;Key.c: 130: for( key_num = 0;key_num < 5 - 1; key_num ++)
  4834  001490  0E00               	movlw	0
  4835  001492  6E1E               	movwf	Key_ReadFSM@key_num,c
  4836  001494  0E03               	movlw	3
  4837  001496  641E               	cpfsgt	Key_ReadFSM@key_num,c
  4838  001498  D002               	goto	l2092
  4839  00149A  0012               	return	
  4840  00149C  0012               	return	
  4841  00149E                     l2092:
  4842                           
  4843                           ;Key.c: 131: for( key_num_mate = key_num+1;key_num_mate < 5 ; key_num_mate ++)
  4844  00149E  281E               	incf	Key_ReadFSM@key_num,w,c
  4845  0014A0  6E1D               	movwf	Key_ReadFSM@key_num_mate,c
  4846  0014A2  0E04               	movlw	4
  4847  0014A4  641D               	cpfsgt	Key_ReadFSM@key_num_mate,c
  4848  0014A6  D001               	goto	l2096
  4849  0014A8  D045               	goto	l2108
  4850  0014AA                     l2096:
  4851                           
  4852                           ;Key.c: 132: if( gs_Local_Key_User.a_key_state[key_num] == gs_Local_Key_User.a_key_state
      +                          [key_num_mate] )
  4853  0014AA  501D               	movf	Key_ReadFSM@key_num_mate,w,c
  4854  0014AC  0D01               	mullw	1
  4855  0014AE  0EBD               	movlw	low (_gs_Local_Key_User+13)
  4856  0014B0  24F3               	addwf	prodl,w,c
  4857  0014B2  6ED9               	movwf	fsr2l,c
  4858  0014B4  0E00               	movlw	high (_gs_Local_Key_User+13)
  4859  0014B6  20F4               	addwfc	prodh,w,c
  4860  0014B8  6EDA               	movwf	fsr2h,c
  4861  0014BA  501E               	movf	Key_ReadFSM@key_num,w,c
  4862  0014BC  0D01               	mullw	1
  4863  0014BE  0EBD               	movlw	low (_gs_Local_Key_User+13)
  4864  0014C0  24F3               	addwf	prodl,w,c
  4865  0014C2  6EE1               	movwf	fsr1l,c
  4866  0014C4  0E00               	movlw	high (_gs_Local_Key_User+13)
  4867  0014C6  20F4               	addwfc	prodh,w,c
  4868  0014C8  6EE2               	movwf	fsr1h,c
  4869  0014CA  50DE               	movf	postinc2,w,c
  4870  0014CC  18E6               	xorwf	postinc1,w,c
  4871  0014CE  A4D8               	btfss	status,2,c
  4872  0014D0  D02F               	goto	l2104
  4873                           
  4874                           ;Key.c: 133: if(gs_Local_Key_User.a_key_state[key_num] != KEY_default)
  4875  0014D2  501E               	movf	Key_ReadFSM@key_num,w,c
  4876  0014D4  0D01               	mullw	1
  4877  0014D6  0EBD               	movlw	low (_gs_Local_Key_User+13)
  4878  0014D8  24F3               	addwf	prodl,w,c
  4879  0014DA  6ED9               	movwf	fsr2l,c
  4880  0014DC  0E00               	movlw	high (_gs_Local_Key_User+13)
  4881  0014DE  20F4               	addwfc	prodh,w,c
  4882  0014E0  6EDA               	movwf	fsr2h,c
  4883  0014E2  50DF               	movf	indf2,w,c
  4884  0014E4  B4D8               	btfsc	status,2,c
  4885  0014E6  D024               	goto	l2104
  4886                           
  4887                           ;Key.c: 134: {
  4888                           ;Key.c: 135: gs_Local_Key_User.key_group = (0x01 << key_num)|(0x01 << key_num_mate);
  4889  0014E8  C01D  F019         	movff	Key_ReadFSM@key_num_mate,??_Key_ReadFSM
  4890  0014EC  0E01               	movlw	1
  4891  0014EE  6E1A               	movwf	(??_Key_ReadFSM+1)& (0+255),c
  4892  0014F0  2A19               	incf	??_Key_ReadFSM,f,c
  4893  0014F2  D002               	goto	u1664
  4894  0014F4                     u1665:
  4895  0014F4  90D8               	bcf	status,0,c
  4896  0014F6  361A               	rlcf	??_Key_ReadFSM+1,f,c
  4897  0014F8                     u1664:
  4898  0014F8  2E19               	decfsz	??_Key_ReadFSM,f,c
  4899  0014FA  D7FC               	goto	u1665
  4900  0014FC  C01E  F01B         	movff	Key_ReadFSM@key_num,??_Key_ReadFSM+2
  4901  001500  0E01               	movlw	1
  4902  001502  6E1C               	movwf	(??_Key_ReadFSM+3)& (0+255),c
  4903  001504  2A1B               	incf	??_Key_ReadFSM+2,f,c
  4904  001506  D002               	goto	u1674
  4905  001508                     u1675:
  4906  001508  90D8               	bcf	status,0,c
  4907  00150A  361C               	rlcf	??_Key_ReadFSM+3,f,c
  4908  00150C                     u1674:
  4909  00150C  2E1B               	decfsz	??_Key_ReadFSM+2,f,c
  4910  00150E  D7FC               	goto	u1675
  4911  001510  501C               	movf	??_Key_ReadFSM+3,w,c
  4912  001512  101A               	iorwf	??_Key_ReadFSM+1,w,c
  4913  001514  0100               	movlb	0	; () banked
  4914  001516  6FB1               	movwf	(_gs_Local_Key_User+1)& (0+255),b	;volatile
  4915                           
  4916                           ; BSR set to: 0
  4917                           ;Key.c: 136: gs_Local_Key_User.key_group_state = gs_Local_Key_User.a_key_state[key_num];
  4918  001518  501E               	movf	Key_ReadFSM@key_num,w,c
  4919  00151A  0D01               	mullw	1
  4920  00151C  0EBD               	movlw	low (_gs_Local_Key_User+13)
  4921  00151E  24F3               	addwf	prodl,w,c
  4922  001520  6ED9               	movwf	fsr2l,c
  4923  001522  0E00               	movlw	high (_gs_Local_Key_User+13)
  4924  001524  20F4               	addwfc	prodh,w,c
  4925  001526  6EDA               	movwf	fsr2h,c
  4926  001528  50DF               	movf	indf2,w,c
  4927  00152A  0100               	movlb	0	; () banked
  4928  00152C  6FB2               	movwf	(_gs_Local_Key_User+2)& (0+255),b	;volatile
  4929                           
  4930                           ; BSR set to: 0
  4931  00152E  D000               	goto	l2104
  4932  001530                     l2104:
  4933  001530  2A1D               	incf	Key_ReadFSM@key_num_mate,f,c
  4934  001532  D7B7               	goto	L6
  4935  001534                     l2108:
  4936  001534  2A1E               	incf	Key_ReadFSM@key_num,f,c
  4937  001536  0E03               	movlw	3
  4938  001538  641E               	cpfsgt	Key_ReadFSM@key_num,c
  4939  00153A  D7B1               	goto	l2092
  4940  00153C  0012               	return	
  4941  00153E  0012               	return		;funcret
  4942  001540                     __end_of_Key_ReadFSM:
  4943                           	opt stack 0
  4944                           tblptru	equ	0xFF8
  4945                           tblptrh	equ	0xFF7
  4946                           tblptrl	equ	0xFF6
  4947                           tablat	equ	0xFF5
  4948                           prodh	equ	0xFF4
  4949                           prodl	equ	0xFF3
  4950                           intcon	equ	0xFF2
  4951                           postinc0	equ	0xFEE
  4952                           wreg	equ	0xFE8
  4953                           indf1	equ	0xFE7
  4954                           postinc1	equ	0xFE6
  4955                           fsr1h	equ	0xFE2
  4956                           fsr1l	equ	0xFE1
  4957                           indf2	equ	0xFDF
  4958                           postinc2	equ	0xFDE
  4959                           postdec2	equ	0xFDD
  4960                           plusw2	equ	0xFDB
  4961                           fsr2h	equ	0xFDA
  4962                           fsr2l	equ	0xFD9
  4963                           status	equ	0xFD8
  4964                           
  4965 ;; *************** function _Key_Init *****************
  4966 ;; Defined at:
  4967 ;;		line 42 in file "_01_USER/Key.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;		None
  4970 ;; Auto vars:     Size  Location     Type
  4971 ;;		None
  4972 ;; Return value:  Size  Location     Type
  4973 ;;		None               void
  4974 ;; Registers used:
  4975 ;;		wreg, status,2, status,0
  4976 ;; Tracked objects:
  4977 ;;		On entry : 0/0
  4978 ;;		On exit  : 0/0
  4979 ;;		Unchanged: 0/0
  4980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4985 ;;Total ram usage:        0 bytes
  4986 ;; Hardware stack levels used:    1
  4987 ;; Hardware stack levels required when called:    3
  4988 ;; This function calls:
  4989 ;;		Nothing
  4990 ;; This function is called by:
  4991 ;;		_main
  4992 ;; This function uses a non-reentrant model
  4993 ;;
  4994                           
  4995                           	psect	text30
  4996  002448                     __ptext30:
  4997                           	opt stack 0
  4998  002448                     _Key_Init:
  4999                           	opt stack 27
  5000                           
  5001                           ;Key.c: 44: TRISE |= 0x1e;
  5002                           
  5003                           ;incstack = 0
  5004  002448  0E1E               	movlw	30
  5005  00244A  1296               	iorwf	3990,f,c	;volatile
  5006                           
  5007                           ;Key.c: 45: TRISD |= 0xc0;
  5008  00244C  0EC0               	movlw	192
  5009  00244E  1295               	iorwf	3989,f,c	;volatile
  5010  002450  0012               	return		;funcret
  5011  002452                     __end_of_Key_Init:
  5012                           	opt stack 0
  5013                           tblptru	equ	0xFF8
  5014                           tblptrh	equ	0xFF7
  5015                           tblptrl	equ	0xFF6
  5016                           tablat	equ	0xFF5
  5017                           prodh	equ	0xFF4
  5018                           prodl	equ	0xFF3
  5019                           intcon	equ	0xFF2
  5020                           postinc0	equ	0xFEE
  5021                           wreg	equ	0xFE8
  5022                           indf1	equ	0xFE7
  5023                           postinc1	equ	0xFE6
  5024                           fsr1h	equ	0xFE2
  5025                           fsr1l	equ	0xFE1
  5026                           indf2	equ	0xFDF
  5027                           postinc2	equ	0xFDE
  5028                           postdec2	equ	0xFDD
  5029                           plusw2	equ	0xFDB
  5030                           fsr2h	equ	0xFDA
  5031                           fsr2l	equ	0xFD9
  5032                           status	equ	0xFD8
  5033                           
  5034 ;; *************** function _Init_TM1640 *****************
  5035 ;; Defined at:
  5036 ;;		line 119 in file "_01_USER/TM1640.c"
  5037 ;; Parameters:    Size  Location     Type
  5038 ;;		None
  5039 ;; Auto vars:     Size  Location     Type
  5040 ;;		None
  5041 ;; Return value:  Size  Location     Type
  5042 ;;		None               void
  5043 ;; Registers used:
  5044 ;;		wreg, status,2, status,0, cstack
  5045 ;; Tracked objects:
  5046 ;;		On entry : 0/0
  5047 ;;		On exit  : 0/0
  5048 ;;		Unchanged: 0/0
  5049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5054 ;;Total ram usage:        0 bytes
  5055 ;; Hardware stack levels used:    1
  5056 ;; Hardware stack levels required when called:    5
  5057 ;; This function calls:
  5058 ;;		_TM1640_Start
  5059 ;;		_TM1640_Stop
  5060 ;;		_TM1640_Writer_Byte
  5061 ;; This function is called by:
  5062 ;;		_main
  5063 ;; This function uses a non-reentrant model
  5064 ;;
  5065                           
  5066                           	psect	text31
  5067  0022E4                     __ptext31:
  5068                           	opt stack 0
  5069  0022E4                     _Init_TM1640:
  5070                           	opt stack 25
  5071                           
  5072                           ;TM1640.c: 121: TRISCbits.TRISC3 = 0;
  5073                           
  5074                           ;incstack = 0
  5075  0022E4  9694               	bcf	3988,3,c	;volatile
  5076                           
  5077                           ;TM1640.c: 122: TRISCbits.TRISC4 = 0;
  5078  0022E6  9894               	bcf	3988,4,c	;volatile
  5079                           
  5080                           ;TM1640.c: 123: TM1640_Stop();
  5081  0022E8  ECAA  F011         	call	_TM1640_Stop	;wreg free
  5082                           
  5083                           ;TM1640.c: 125: TM1640_Start();
  5084  0022EC  ECBC  F011         	call	_TM1640_Start	;wreg free
  5085                           
  5086                           ;TM1640.c: 126: TM1640_Writer_Byte(0x44);
  5087  0022F0  0E44               	movlw	68
  5088  0022F2  EC6C  F010         	call	_TM1640_Writer_Byte
  5089                           
  5090                           ;TM1640.c: 127: TM1640_Stop();
  5091  0022F6  ECAA  F011         	call	_TM1640_Stop	;wreg free
  5092                           
  5093                           ;TM1640.c: 129: TM1640_Start();
  5094  0022FA  ECBC  F011         	call	_TM1640_Start	;wreg free
  5095                           
  5096                           ;TM1640.c: 130: TM1640_Writer_Byte(0x8F);
  5097  0022FE  0E8F               	movlw	143
  5098  002300  EC6C  F010         	call	_TM1640_Writer_Byte
  5099                           
  5100                           ;TM1640.c: 131: TM1640_Stop();
  5101  002304  ECAA  F011         	call	_TM1640_Stop	;wreg free
  5102  002308  0012               	return		;funcret
  5103  00230A                     __end_of_Init_TM1640:
  5104                           	opt stack 0
  5105                           tblptru	equ	0xFF8
  5106                           tblptrh	equ	0xFF7
  5107                           tblptrl	equ	0xFF6
  5108                           tablat	equ	0xFF5
  5109                           prodh	equ	0xFF4
  5110                           prodl	equ	0xFF3
  5111                           intcon	equ	0xFF2
  5112                           postinc0	equ	0xFEE
  5113                           wreg	equ	0xFE8
  5114                           indf1	equ	0xFE7
  5115                           postinc1	equ	0xFE6
  5116                           fsr1h	equ	0xFE2
  5117                           fsr1l	equ	0xFE1
  5118                           indf2	equ	0xFDF
  5119                           postinc2	equ	0xFDE
  5120                           postdec2	equ	0xFDD
  5121                           plusw2	equ	0xFDB
  5122                           fsr2h	equ	0xFDA
  5123                           fsr2l	equ	0xFD9
  5124                           status	equ	0xFD8
  5125                           
  5126 ;; *************** function _TM1640_Writer_Byte *****************
  5127 ;; Defined at:
  5128 ;;		line 77 in file "_01_USER/TM1640.c"
  5129 ;; Parameters:    Size  Location     Type
  5130 ;;  Date            1    wreg     const unsigned char 
  5131 ;; Auto vars:     Size  Location     Type
  5132 ;;  Date            1   26[COMRAM] const unsigned char 
  5133 ;;  mask            1   27[COMRAM] unsigned char 
  5134 ;; Return value:  Size  Location     Type
  5135 ;;		None               void
  5136 ;; Registers used:
  5137 ;;		wreg, status,2, status,0, cstack
  5138 ;; Tracked objects:
  5139 ;;		On entry : 0/0
  5140 ;;		On exit  : 0/0
  5141 ;;		Unchanged: 0/0
  5142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5144 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5146 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5147 ;;Total ram usage:        2 bytes
  5148 ;; Hardware stack levels used:    1
  5149 ;; Hardware stack levels required when called:    4
  5150 ;; This function calls:
  5151 ;;		_TM1640_Delay
  5152 ;; This function is called by:
  5153 ;;		_TM1640_Writer_Dates
  5154 ;;		_Init_TM1640
  5155 ;;		_Open_Display
  5156 ;;		_Disable_Display
  5157 ;; This function uses a non-reentrant model
  5158 ;;
  5159                           
  5160                           	psect	text32
  5161  0020D8                     __ptext32:
  5162                           	opt stack 0
  5163  0020D8                     _TM1640_Writer_Byte:
  5164                           	opt stack 23
  5165                           
  5166                           ;incstack = 0
  5167                           ;TM1640_Writer_Byte@Date stored from wreg
  5168  0020D8  6E1B               	movwf	TM1640_Writer_Byte@Date,c
  5169                           
  5170                           ;TM1640.c: 79: unsigned char mask;
  5171                           ;TM1640.c: 81: for(mask=0x01; mask; mask<<=1)
  5172  0020DA  0E01               	movlw	1
  5173  0020DC  6E1C               	movwf	TM1640_Writer_Byte@mask,c
  5174  0020DE  D017               	goto	l1988
  5175  0020E0                     l346:
  5176                           
  5177                           ;TM1640.c: 82: {
  5178                           ;TM1640.c: 83: RC3 = 0;
  5179  0020E0  9682               	bcf	3970,3,c	;volatile
  5180                           
  5181                           ;TM1640.c: 84: TM1640_Delay(1);
  5182  0020E2  0E01               	movlw	1
  5183  0020E4  ECEE  F011         	call	_TM1640_Delay
  5184                           
  5185                           ;TM1640.c: 85: if(mask & Date)
  5186  0020E8  501C               	movf	TM1640_Writer_Byte@mask,w,c
  5187  0020EA  141B               	andwf	TM1640_Writer_Byte@Date,w,c
  5188  0020EC  0900               	iorlw	0
  5189  0020EE  B4D8               	btfsc	status,2,c
  5190  0020F0  D002               	goto	l347
  5191                           
  5192                           ;TM1640.c: 86: RC4 = 1;
  5193  0020F2  8882               	bsf	3970,4,c	;volatile
  5194  0020F4  D002               	goto	l1982
  5195  0020F6                     l347:
  5196                           
  5197                           ;TM1640.c: 87: else
  5198                           ;TM1640.c: 88: RC4 = 0;
  5199  0020F6  9882               	bcf	3970,4,c	;volatile
  5200  0020F8  D000               	goto	l1982
  5201  0020FA                     l1982:
  5202                           
  5203                           ;TM1640.c: 89: TM1640_Delay(1);
  5204  0020FA  0E01               	movlw	1
  5205  0020FC  ECEE  F011         	call	_TM1640_Delay
  5206                           
  5207                           ;TM1640.c: 90: RC3 = 1;
  5208  002100  8682               	bsf	3970,3,c	;volatile
  5209                           
  5210                           ;TM1640.c: 91: TM1640_Delay(1);
  5211  002102  0E01               	movlw	1
  5212  002104  ECEE  F011         	call	_TM1640_Delay
  5213  002108  90D8               	bcf	status,0,c
  5214  00210A  361C               	rlcf	TM1640_Writer_Byte@mask,f,c
  5215  00210C  D000               	goto	l1988
  5216  00210E                     l1988:
  5217  00210E  501C               	movf	TM1640_Writer_Byte@mask,w,c
  5218  002110  A4D8               	btfss	status,2,c
  5219  002112  D7E6               	goto	l346
  5220  002114  0012               	return		;funcret
  5221  002116                     __end_of_TM1640_Writer_Byte:
  5222                           	opt stack 0
  5223                           tblptru	equ	0xFF8
  5224                           tblptrh	equ	0xFF7
  5225                           tblptrl	equ	0xFF6
  5226                           tablat	equ	0xFF5
  5227                           prodh	equ	0xFF4
  5228                           prodl	equ	0xFF3
  5229                           intcon	equ	0xFF2
  5230                           postinc0	equ	0xFEE
  5231                           wreg	equ	0xFE8
  5232                           indf1	equ	0xFE7
  5233                           postinc1	equ	0xFE6
  5234                           fsr1h	equ	0xFE2
  5235                           fsr1l	equ	0xFE1
  5236                           indf2	equ	0xFDF
  5237                           postinc2	equ	0xFDE
  5238                           postdec2	equ	0xFDD
  5239                           plusw2	equ	0xFDB
  5240                           fsr2h	equ	0xFDA
  5241                           fsr2l	equ	0xFD9
  5242                           status	equ	0xFD8
  5243                           
  5244 ;; *************** function _TM1640_Stop *****************
  5245 ;; Defined at:
  5246 ;;		line 32 in file "_01_USER/TM1640.c"
  5247 ;; Parameters:    Size  Location     Type
  5248 ;;		None
  5249 ;; Auto vars:     Size  Location     Type
  5250 ;;		None
  5251 ;; Return value:  Size  Location     Type
  5252 ;;		None               void
  5253 ;; Registers used:
  5254 ;;		wreg, status,2, status,0, cstack
  5255 ;; Tracked objects:
  5256 ;;		On entry : 0/0
  5257 ;;		On exit  : 0/0
  5258 ;;		Unchanged: 0/0
  5259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5264 ;;Total ram usage:        0 bytes
  5265 ;; Hardware stack levels used:    1
  5266 ;; Hardware stack levels required when called:    4
  5267 ;; This function calls:
  5268 ;;		_TM1640_Delay
  5269 ;; This function is called by:
  5270 ;;		_TM1640_Writer_Dates
  5271 ;;		_Init_TM1640
  5272 ;;		_Open_Display
  5273 ;;		_Disable_Display
  5274 ;; This function uses a non-reentrant model
  5275 ;;
  5276                           
  5277                           	psect	text33
  5278  002354                     __ptext33:
  5279                           	opt stack 0
  5280  002354                     _TM1640_Stop:
  5281                           	opt stack 23
  5282                           
  5283                           ;TM1640.c: 34: RC3 = 0;
  5284                           
  5285                           ;incstack = 0
  5286  002354  9682               	bcf	3970,3,c	;volatile
  5287                           
  5288                           ;TM1640.c: 35: TM1640_Delay(1);
  5289  002356  0E01               	movlw	1
  5290  002358  ECEE  F011         	call	_TM1640_Delay
  5291                           
  5292                           ;TM1640.c: 36: RC4 = 0;
  5293  00235C  9882               	bcf	3970,4,c	;volatile
  5294                           
  5295                           ;TM1640.c: 37: TM1640_Delay(1);
  5296  00235E  0E01               	movlw	1
  5297  002360  ECEE  F011         	call	_TM1640_Delay
  5298                           
  5299                           ;TM1640.c: 38: RC3 = 1;
  5300  002364  8682               	bsf	3970,3,c	;volatile
  5301                           
  5302                           ;TM1640.c: 39: TM1640_Delay(1);
  5303  002366  0E01               	movlw	1
  5304  002368  ECEE  F011         	call	_TM1640_Delay
  5305                           
  5306                           ;TM1640.c: 40: RC4 = 1;
  5307  00236C  8882               	bsf	3970,4,c	;volatile
  5308                           
  5309                           ;TM1640.c: 41: TM1640_Delay(1);
  5310  00236E  0E01               	movlw	1
  5311  002370  ECEE  F011         	call	_TM1640_Delay
  5312                           
  5313                           ;TM1640.c: 42: RC3 = 0;
  5314  002374  9682               	bcf	3970,3,c	;volatile
  5315  002376  0012               	return		;funcret
  5316  002378                     __end_of_TM1640_Stop:
  5317                           	opt stack 0
  5318                           tblptru	equ	0xFF8
  5319                           tblptrh	equ	0xFF7
  5320                           tblptrl	equ	0xFF6
  5321                           tablat	equ	0xFF5
  5322                           prodh	equ	0xFF4
  5323                           prodl	equ	0xFF3
  5324                           intcon	equ	0xFF2
  5325                           postinc0	equ	0xFEE
  5326                           wreg	equ	0xFE8
  5327                           indf1	equ	0xFE7
  5328                           postinc1	equ	0xFE6
  5329                           fsr1h	equ	0xFE2
  5330                           fsr1l	equ	0xFE1
  5331                           indf2	equ	0xFDF
  5332                           postinc2	equ	0xFDE
  5333                           postdec2	equ	0xFDD
  5334                           plusw2	equ	0xFDB
  5335                           fsr2h	equ	0xFDA
  5336                           fsr2l	equ	0xFD9
  5337                           status	equ	0xFD8
  5338                           
  5339 ;; *************** function _TM1640_Start *****************
  5340 ;; Defined at:
  5341 ;;		line 19 in file "_01_USER/TM1640.c"
  5342 ;; Parameters:    Size  Location     Type
  5343 ;;		None
  5344 ;; Auto vars:     Size  Location     Type
  5345 ;;		None
  5346 ;; Return value:  Size  Location     Type
  5347 ;;		None               void
  5348 ;; Registers used:
  5349 ;;		wreg, status,2, status,0, cstack
  5350 ;; Tracked objects:
  5351 ;;		On entry : 0/0
  5352 ;;		On exit  : 0/0
  5353 ;;		Unchanged: 0/0
  5354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5359 ;;Total ram usage:        0 bytes
  5360 ;; Hardware stack levels used:    1
  5361 ;; Hardware stack levels required when called:    4
  5362 ;; This function calls:
  5363 ;;		_TM1640_Delay
  5364 ;; This function is called by:
  5365 ;;		_TM1640_Writer_Dates
  5366 ;;		_Init_TM1640
  5367 ;;		_Open_Display
  5368 ;;		_Disable_Display
  5369 ;; This function uses a non-reentrant model
  5370 ;;
  5371                           
  5372                           	psect	text34
  5373  002378                     __ptext34:
  5374                           	opt stack 0
  5375  002378                     _TM1640_Start:
  5376                           	opt stack 23
  5377                           
  5378                           ;TM1640.c: 21: RC3 = 0;
  5379                           
  5380                           ;incstack = 0
  5381  002378  9682               	bcf	3970,3,c	;volatile
  5382                           
  5383                           ;TM1640.c: 22: TM1640_Delay(1);
  5384  00237A  0E01               	movlw	1
  5385  00237C  ECEE  F011         	call	_TM1640_Delay
  5386                           
  5387                           ;TM1640.c: 23: RC4 = 1;
  5388  002380  8882               	bsf	3970,4,c	;volatile
  5389                           
  5390                           ;TM1640.c: 24: TM1640_Delay(1);
  5391  002382  0E01               	movlw	1
  5392  002384  ECEE  F011         	call	_TM1640_Delay
  5393                           
  5394                           ;TM1640.c: 25: RC3 = 1;
  5395  002388  8682               	bsf	3970,3,c	;volatile
  5396                           
  5397                           ;TM1640.c: 26: TM1640_Delay(1);
  5398  00238A  0E01               	movlw	1
  5399  00238C  ECEE  F011         	call	_TM1640_Delay
  5400                           
  5401                           ;TM1640.c: 27: RC4 = 0;
  5402  002390  9882               	bcf	3970,4,c	;volatile
  5403                           
  5404                           ;TM1640.c: 28: TM1640_Delay(1);
  5405  002392  0E01               	movlw	1
  5406  002394  ECEE  F011         	call	_TM1640_Delay
  5407                           
  5408                           ;TM1640.c: 29: RC3 = 0;
  5409  002398  9682               	bcf	3970,3,c	;volatile
  5410  00239A  0012               	return		;funcret
  5411  00239C                     __end_of_TM1640_Start:
  5412                           	opt stack 0
  5413                           tblptru	equ	0xFF8
  5414                           tblptrh	equ	0xFF7
  5415                           tblptrl	equ	0xFF6
  5416                           tablat	equ	0xFF5
  5417                           prodh	equ	0xFF4
  5418                           prodl	equ	0xFF3
  5419                           intcon	equ	0xFF2
  5420                           postinc0	equ	0xFEE
  5421                           wreg	equ	0xFE8
  5422                           indf1	equ	0xFE7
  5423                           postinc1	equ	0xFE6
  5424                           fsr1h	equ	0xFE2
  5425                           fsr1l	equ	0xFE1
  5426                           indf2	equ	0xFDF
  5427                           postinc2	equ	0xFDE
  5428                           postdec2	equ	0xFDD
  5429                           plusw2	equ	0xFDB
  5430                           fsr2h	equ	0xFDA
  5431                           fsr2l	equ	0xFD9
  5432                           status	equ	0xFD8
  5433                           
  5434 ;; *************** function _TM1640_Delay *****************
  5435 ;; Defined at:
  5436 ;;		line 109 in file "_01_USER/TM1640.c"
  5437 ;; Parameters:    Size  Location     Type
  5438 ;;  Time            1    wreg     unsigned char 
  5439 ;; Auto vars:     Size  Location     Type
  5440 ;;  Time            1   24[COMRAM] unsigned char 
  5441 ;;  i               1   25[COMRAM] unsigned char 
  5442 ;; Return value:  Size  Location     Type
  5443 ;;		None               void
  5444 ;; Registers used:
  5445 ;;		wreg, status,2, status,0
  5446 ;; Tracked objects:
  5447 ;;		On entry : 0/0
  5448 ;;		On exit  : 0/0
  5449 ;;		Unchanged: 0/0
  5450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5452 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5454 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5455 ;;Total ram usage:        2 bytes
  5456 ;; Hardware stack levels used:    1
  5457 ;; Hardware stack levels required when called:    3
  5458 ;; This function calls:
  5459 ;;		Nothing
  5460 ;; This function is called by:
  5461 ;;		_TM1640_Start
  5462 ;;		_TM1640_Stop
  5463 ;;		_TM1640_Writer_Byte
  5464 ;; This function uses a non-reentrant model
  5465 ;;
  5466                           
  5467                           	psect	text35
  5468  0023DC                     __ptext35:
  5469                           	opt stack 0
  5470  0023DC                     _TM1640_Delay:
  5471                           	opt stack 23
  5472                           
  5473                           ;incstack = 0
  5474                           ;TM1640_Delay@Time stored from wreg
  5475  0023DC  6E19               	movwf	TM1640_Delay@Time,c
  5476  0023DE                     
  5477                           ;TM1640.c: 114: {
  5478                           ;TM1640.c: 115: for(i=0; i<10; ++i);
  5479  0023DE  0E00               	movlw	0
  5480  0023E0  6E1A               	movwf	TM1640_Delay@i,c
  5481  0023E2  D002               	goto	l1948
  5482  0023E4  D004               	goto	l361
  5483  0023E6                     l1946:
  5484  0023E6  2A1A               	incf	TM1640_Delay@i,f,c
  5485  0023E8                     l1948:
  5486  0023E8  0E09               	movlw	9
  5487  0023EA  641A               	cpfsgt	TM1640_Delay@i,c
  5488  0023EC  D7FC               	goto	l1946
  5489  0023EE                     l361:
  5490                           
  5491                           ;TM1640.c: 116: }while(--Time);
  5492  0023EE  2E19               	decfsz	TM1640_Delay@Time,f,c
  5493  0023F0  D7F6               	goto	l1940
  5494  0023F2  0012               	return	
  5495  0023F4  0012               	return		;funcret
  5496  0023F6                     __end_of_TM1640_Delay:
  5497                           	opt stack 0
  5498                           tblptru	equ	0xFF8
  5499                           tblptrh	equ	0xFF7
  5500                           tblptrl	equ	0xFF6
  5501                           tablat	equ	0xFF5
  5502                           prodh	equ	0xFF4
  5503                           prodl	equ	0xFF3
  5504                           intcon	equ	0xFF2
  5505                           postinc0	equ	0xFEE
  5506                           wreg	equ	0xFE8
  5507                           indf1	equ	0xFE7
  5508                           postinc1	equ	0xFE6
  5509                           fsr1h	equ	0xFE2
  5510                           fsr1l	equ	0xFE1
  5511                           indf2	equ	0xFDF
  5512                           postinc2	equ	0xFDE
  5513                           postdec2	equ	0xFDD
  5514                           plusw2	equ	0xFDB
  5515                           fsr2h	equ	0xFDA
  5516                           fsr2l	equ	0xFD9
  5517                           status	equ	0xFD8
  5518                           
  5519 ;; *************** function _GPIO_Config *****************
  5520 ;; Defined at:
  5521 ;;		line 37 in file "_01_USER/GPIO.c"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;		None
  5524 ;; Auto vars:     Size  Location     Type
  5525 ;;		None
  5526 ;; Return value:  Size  Location     Type
  5527 ;;		None               void
  5528 ;; Registers used:
  5529 ;;		wreg, status,2, status,0
  5530 ;; Tracked objects:
  5531 ;;		On entry : 0/0
  5532 ;;		On exit  : 0/0
  5533 ;;		Unchanged: 0/0
  5534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5539 ;;Total ram usage:        0 bytes
  5540 ;; Hardware stack levels used:    1
  5541 ;; Hardware stack levels required when called:    3
  5542 ;; This function calls:
  5543 ;;		Nothing
  5544 ;; This function is called by:
  5545 ;;		_main
  5546 ;; This function uses a non-reentrant model
  5547 ;;
  5548                           
  5549                           	psect	text36
  5550  00243C                     __ptext36:
  5551                           	opt stack 0
  5552  00243C                     _GPIO_Config:
  5553                           	opt stack 27
  5554                           
  5555                           ;GPIO.c: 40: TRISE &= 0x1f;
  5556                           
  5557                           ;incstack = 0
  5558  00243C  0E1F               	movlw	31
  5559  00243E  1696               	andwf	3990,f,c	;volatile
  5560                           
  5561                           ;GPIO.c: 42: RE5 = 1;
  5562  002440  8A84               	bsf	3972,5,c	;volatile
  5563                           
  5564                           ;GPIO.c: 43: RE6 = 1;
  5565  002442  8C84               	bsf	3972,6,c	;volatile
  5566                           
  5567                           ;GPIO.c: 44: RE7 = 1;
  5568  002444  8E84               	bsf	3972,7,c	;volatile
  5569  002446  0012               	return		;funcret
  5570  002448                     __end_of_GPIO_Config:
  5571                           	opt stack 0
  5572                           tblptru	equ	0xFF8
  5573                           tblptrh	equ	0xFF7
  5574                           tblptrl	equ	0xFF6
  5575                           tablat	equ	0xFF5
  5576                           prodh	equ	0xFF4
  5577                           prodl	equ	0xFF3
  5578                           intcon	equ	0xFF2
  5579                           postinc0	equ	0xFEE
  5580                           wreg	equ	0xFE8
  5581                           indf1	equ	0xFE7
  5582                           postinc1	equ	0xFE6
  5583                           fsr1h	equ	0xFE2
  5584                           fsr1l	equ	0xFE1
  5585                           indf2	equ	0xFDF
  5586                           postinc2	equ	0xFDE
  5587                           postdec2	equ	0xFDD
  5588                           plusw2	equ	0xFDB
  5589                           fsr2h	equ	0xFDA
  5590                           fsr2l	equ	0xFD9
  5591                           status	equ	0xFD8
  5592                           
  5593 ;; *************** function _ADC6_Init *****************
  5594 ;; Defined at:
  5595 ;;		line 37 in file "_01_USER/My_ADC.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;		None
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;		None
  5600 ;; Return value:  Size  Location     Type
  5601 ;;		None               void
  5602 ;; Registers used:
  5603 ;;		wreg, status,2, status,0, cstack
  5604 ;; Tracked objects:
  5605 ;;		On entry : 0/0
  5606 ;;		On exit  : 0/0
  5607 ;;		Unchanged: 0/0
  5608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5613 ;;Total ram usage:        0 bytes
  5614 ;; Hardware stack levels used:    1
  5615 ;; Hardware stack levels required when called:    4
  5616 ;; This function calls:
  5617 ;;		_OpenADC
  5618 ;; This function is called by:
  5619 ;;		_main
  5620 ;; This function uses a non-reentrant model
  5621 ;;
  5622                           
  5623                           	psect	text37
  5624  00240C                     __ptext37:
  5625                           	opt stack 0
  5626  00240C                     _ADC6_Init:
  5627                           	opt stack 26
  5628                           
  5629                           ;My_ADC.c: 40: OpenADC(0b11111111 &
  5630                           ;My_ADC.c: 41: 0b11110011 &
  5631                           ;My_ADC.c: 42: 0b10001111
  5632                           ;My_ADC.c: 43: ,
  5633                           ;My_ADC.c: 44: 0b10011011
  5634                           ;My_ADC.c: 45: ,
  5635                           ;My_ADC.c: 46: 0b00111111 &
  5636                           ;My_ADC.c: 47: 0b11111111 &
  5637                           ;My_ADC.c: 48: 0b11110111 &
  5638                           ;My_ADC.c: 49: 0b11111000
  5639                           ;My_ADC.c: 50: );
  5640                           
  5641                           ;incstack = 0
  5642  00240C  0E9B               	movlw	155
  5643  00240E  6E19               	movwf	OpenADC@config2,c
  5644  002410  0E30               	movlw	48
  5645  002412  6E1A               	movwf	OpenADC@config3,c
  5646  002414  0E83               	movlw	131
  5647  002416  ECD4  F00F         	call	_OpenADC
  5648                           
  5649                           ;My_ADC.c: 52: (PIE1bits.ADIE=0);
  5650  00241A  9C9D               	bcf	3997,6,c	;volatile
  5651  00241C  0012               	return		;funcret
  5652  00241E                     __end_of_ADC6_Init:
  5653                           	opt stack 0
  5654                           tblptru	equ	0xFF8
  5655                           tblptrh	equ	0xFF7
  5656                           tblptrl	equ	0xFF6
  5657                           tablat	equ	0xFF5
  5658                           prodh	equ	0xFF4
  5659                           prodl	equ	0xFF3
  5660                           intcon	equ	0xFF2
  5661                           postinc0	equ	0xFEE
  5662                           wreg	equ	0xFE8
  5663                           indf1	equ	0xFE7
  5664                           postinc1	equ	0xFE6
  5665                           fsr1h	equ	0xFE2
  5666                           fsr1l	equ	0xFE1
  5667                           indf2	equ	0xFDF
  5668                           postinc2	equ	0xFDE
  5669                           postdec2	equ	0xFDD
  5670                           plusw2	equ	0xFDB
  5671                           fsr2h	equ	0xFDA
  5672                           fsr2l	equ	0xFD9
  5673                           status	equ	0xFD8
  5674                           
  5675 ;; *************** function _OpenADC *****************
  5676 ;; Defined at:
  5677 ;;		line 305 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  5678 ;; Parameters:    Size  Location     Type
  5679 ;;  config          1    wreg     unsigned char 
  5680 ;;  config2         1   24[COMRAM] unsigned char 
  5681 ;;  config3         1   25[COMRAM] unsigned char 
  5682 ;; Auto vars:     Size  Location     Type
  5683 ;;  config          1   28[COMRAM] unsigned char 
  5684 ;; Return value:  Size  Location     Type
  5685 ;;		None               void
  5686 ;; Registers used:
  5687 ;;		wreg, status,2, status,0
  5688 ;; Tracked objects:
  5689 ;;		On entry : 0/0
  5690 ;;		On exit  : 0/0
  5691 ;;		Unchanged: 0/0
  5692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5693 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5694 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5695 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5696 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5697 ;;Total ram usage:        5 bytes
  5698 ;; Hardware stack levels used:    1
  5699 ;; Hardware stack levels required when called:    3
  5700 ;; This function calls:
  5701 ;;		Nothing
  5702 ;; This function is called by:
  5703 ;;		_ADC6_Init
  5704 ;; This function uses a non-reentrant model
  5705 ;;
  5706                           
  5707                           	psect	text38
  5708  001FA8                     __ptext38:
  5709                           	opt stack 0
  5710  001FA8                     _OpenADC:
  5711                           	opt stack 26
  5712                           
  5713                           ;incstack = 0
  5714                           ;OpenADC@config stored from wreg
  5715  001FA8  6E1D               	movwf	OpenADC@config,c
  5716  001FAA  0E00               	movlw	0
  5717  001FAC  6EC2               	movwf	4034,c	;volatile
  5718  001FAE  0E00               	movlw	0
  5719  001FB0  6EC1               	movwf	4033,c	;volatile
  5720  001FB2  0E00               	movlw	0
  5721  001FB4  6EC0               	movwf	4032,c	;volatile
  5722  001FB6  5019               	movf	OpenADC@config2,w,c
  5723  001FB8  0B7C               	andlw	124
  5724  001FBA  6EC2               	movwf	4034,c	;volatile
  5725  001FBC  C01A  FFC1         	movff	OpenADC@config3,4033	;volatile
  5726  001FC0  C01D  F01B         	movff	OpenADC@config,??_OpenADC
  5727  001FC4  90D8               	bcf	status,0,c
  5728  001FC6  361B               	rlcf	??_OpenADC,f,c
  5729  001FC8  90D8               	bcf	status,0,c
  5730  001FCA  361B               	rlcf	??_OpenADC,f,c
  5731  001FCC  0E38               	movlw	56
  5732  001FCE  161B               	andwf	??_OpenADC,f,c
  5733  001FD0  C01D  F01C         	movff	OpenADC@config,??_OpenADC+1
  5734  001FD4  3A1C               	swapf	??_OpenADC+1,f,c
  5735  001FD6  0E0F               	movlw	15
  5736  001FD8  161C               	andwf	??_OpenADC+1,f,c
  5737  001FDA  0E07               	movlw	7
  5738  001FDC  161C               	andwf	??_OpenADC+1,f,c
  5739  001FDE  501D               	movf	OpenADC@config,w,c
  5740  001FE0  0B80               	andlw	128
  5741  001FE2  101C               	iorwf	??_OpenADC+1,w,c
  5742  001FE4  101B               	iorwf	??_OpenADC,w,c
  5743  001FE6  6EC0               	movwf	4032,c	;volatile
  5744  001FE8  AE19               	btfss	OpenADC@config2,7,c
  5745  001FEA  D003               	goto	l451
  5746  001FEC  9C9E               	bcf	3998,6,c	;volatile
  5747  001FEE  8C9D               	bsf	3997,6,c	;volatile
  5748  001FF0  8CF2               	bsf	intcon,6,c	;volatile
  5749  001FF2                     l451:
  5750  001FF2  80C2               	bsf	4034,0,c	;volatile
  5751  001FF4  0012               	return		;funcret
  5752  001FF6                     __end_of_OpenADC:
  5753                           	opt stack 0
  5754                           tblptru	equ	0xFF8
  5755                           tblptrh	equ	0xFF7
  5756                           tblptrl	equ	0xFF6
  5757                           tablat	equ	0xFF5
  5758                           prodh	equ	0xFF4
  5759                           prodl	equ	0xFF3
  5760                           intcon	equ	0xFF2
  5761                           postinc0	equ	0xFEE
  5762                           wreg	equ	0xFE8
  5763                           indf1	equ	0xFE7
  5764                           postinc1	equ	0xFE6
  5765                           fsr1h	equ	0xFE2
  5766                           fsr1l	equ	0xFE1
  5767                           indf2	equ	0xFDF
  5768                           postinc2	equ	0xFDE
  5769                           postdec2	equ	0xFDD
  5770                           plusw2	equ	0xFDB
  5771                           fsr2h	equ	0xFDA
  5772                           fsr2l	equ	0xFD9
  5773                           status	equ	0xFD8
  5774                           
  5775 ;; *************** function _Sys_Cyc *****************
  5776 ;; Defined at:
  5777 ;;		line 100 in file "_01_USER/My_Timer.c"
  5778 ;; Parameters:    Size  Location     Type
  5779 ;;		None
  5780 ;; Auto vars:     Size  Location     Type
  5781 ;;  _temp           1   23[COMRAM] unsigned char 
  5782 ;; Return value:  Size  Location     Type
  5783 ;;		None               void
  5784 ;; Registers used:
  5785 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5786 ;; Tracked objects:
  5787 ;;		On entry : 0/0
  5788 ;;		On exit  : 0/0
  5789 ;;		Unchanged: 0/0
  5790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5792 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5793 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5794 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5795 ;;Total ram usage:       15 bytes
  5796 ;; Hardware stack levels used:    1
  5797 ;; Hardware stack levels required when called:    2
  5798 ;; This function calls:
  5799 ;;		_Key_ScanFSM
  5800 ;;		_Pulse_1Khz
  5801 ;;		i2_SetTimer0
  5802 ;;		i2___llmod
  5803 ;; This function is called by:
  5804 ;;		Interrupt level 2
  5805 ;; This function uses a non-reentrant model
  5806 ;;
  5807                           
  5808                           	psect	intcode
  5809  000008                     __pintcode:
  5810                           	opt stack 0
  5811  000008                     _Sys_Cyc:
  5812                           	opt stack 23
  5813                           
  5814                           ;incstack = 0
  5815  000008  CFFA F00A          	movff	pclath,??_Sys_Cyc
  5816  00000C  CFFB F00B          	movff	pclatu,??_Sys_Cyc+1
  5817  000010  CFE9 F00C          	movff	fsr0l,??_Sys_Cyc+2
  5818  000014  CFEA F00D          	movff	fsr0h,??_Sys_Cyc+3
  5819  000018  CFE1 F00E          	movff	fsr1l,??_Sys_Cyc+4
  5820  00001C  CFE2 F00F          	movff	fsr1h,??_Sys_Cyc+5
  5821  000020  CFD9 F010          	movff	fsr2l,??_Sys_Cyc+6
  5822  000024  CFDA F011          	movff	fsr2h,??_Sys_Cyc+7
  5823  000028  CFF3 F012          	movff	prodl,??_Sys_Cyc+8
  5824  00002C  CFF4 F013          	movff	prodh,??_Sys_Cyc+9
  5825  000030  CFF6 F014          	movff	tblptrl,??_Sys_Cyc+10
  5826  000034  CFF7 F015          	movff	tblptrh,??_Sys_Cyc+11
  5827  000038  CFF8 F016          	movff	tblptru,??_Sys_Cyc+12
  5828  00003C  CFF5 F017          	movff	tablat,??_Sys_Cyc+13
  5829                           
  5830                           ;My_Timer.c: 102: static unsigned char _overturn_LED = 0;
  5831                           ;My_Timer.c: 103: static char _Byte;
  5832                           ;My_Timer.c: 104: static char _flag = 0;
  5833                           ;My_Timer.c: 105: unsigned char _temp;
  5834                           ;My_Timer.c: 108: if(TMR0IF)
  5835  000040  A4F2               	btfss	intcon,2,c	;volatile
  5836  000042  D04B               	goto	i2l2692
  5837                           
  5838                           ;My_Timer.c: 109: {
  5839                           ;My_Timer.c: 110: g_Timer_Cyc = (g_Timer_Cyc+1) % 4294967296;
  5840  000044  0E01               	movlw	1
  5841  000046  242D               	addwf	_g_Timer_Cyc,w,c
  5842  000048  6E01               	movwf	i2___llmod@dividend,c
  5843  00004A  0E00               	movlw	0
  5844  00004C  202E               	addwfc	_g_Timer_Cyc+1,w,c
  5845  00004E  6E02               	movwf	i2___llmod@dividend+1,c
  5846  000050  0E00               	movlw	0
  5847  000052  202F               	addwfc	_g_Timer_Cyc+2,w,c
  5848  000054  6E03               	movwf	i2___llmod@dividend+2,c
  5849  000056  0E00               	movlw	0
  5850  000058  2030               	addwfc	_g_Timer_Cyc+3,w,c
  5851  00005A  6E04               	movwf	i2___llmod@dividend+3,c
  5852  00005C  0E00               	movlw	0
  5853  00005E  6E05               	movwf	i2___llmod@divisor,c
  5854  000060  0E00               	movlw	0
  5855  000062  6E06               	movwf	i2___llmod@divisor+1,c
  5856  000064  0E00               	movlw	0
  5857  000066  6E07               	movwf	i2___llmod@divisor+2,c
  5858  000068  0E00               	movlw	0
  5859  00006A  6E08               	movwf	i2___llmod@divisor+3,c
  5860  00006C  EC38  F00F         	call	i2___llmod	;wreg free
  5861  000070  C001  F02D         	movff	?i2___llmod,_g_Timer_Cyc
  5862  000074  C002  F02E         	movff	?i2___llmod+1,_g_Timer_Cyc+1
  5863  000078  C003  F02F         	movff	?i2___llmod+2,_g_Timer_Cyc+2
  5864  00007C  C004  F030         	movff	?i2___llmod+3,_g_Timer_Cyc+3
  5865                           
  5866                           ;My_Timer.c: 111: SetTimer0(78);
  5867  000080  0E00               	movlw	0
  5868  000082  6E02               	movwf	i2SetTimer0@_tmr+1,c
  5869  000084  0E4E               	movlw	78
  5870  000086  6E01               	movwf	i2SetTimer0@_tmr,c
  5871  000088  ECF5  F010         	call	i2_SetTimer0	;wreg free
  5872                           
  5873                           ;My_Timer.c: 114: if( g_Timer_Cyc%30 == 0 )
  5874  00008C  C02D  F001         	movff	_g_Timer_Cyc,i2___llmod@dividend
  5875  000090  C02E  F002         	movff	_g_Timer_Cyc+1,i2___llmod@dividend+1
  5876  000094  C02F  F003         	movff	_g_Timer_Cyc+2,i2___llmod@dividend+2
  5877  000098  C030  F004         	movff	_g_Timer_Cyc+3,i2___llmod@dividend+3
  5878  00009C  0E1E               	movlw	30
  5879  00009E  6E05               	movwf	i2___llmod@divisor,c
  5880  0000A0  0E00               	movlw	0
  5881  0000A2  6E06               	movwf	i2___llmod@divisor+1,c
  5882  0000A4  0E00               	movlw	0
  5883  0000A6  6E07               	movwf	i2___llmod@divisor+2,c
  5884  0000A8  0E00               	movlw	0
  5885  0000AA  6E08               	movwf	i2___llmod@divisor+3,c
  5886  0000AC  EC38  F00F         	call	i2___llmod	;wreg free
  5887  0000B0  5001               	movf	?i2___llmod,w,c
  5888  0000B2  1002               	iorwf	?i2___llmod+1,w,c
  5889  0000B4  1003               	iorwf	?i2___llmod+2,w,c
  5890  0000B6  1004               	iorwf	?i2___llmod+3,w,c
  5891  0000B8  A4D8               	btfss	status,2,c
  5892  0000BA  D008               	goto	i2l2688
  5893                           
  5894                           ;My_Timer.c: 115: {
  5895                           ;My_Timer.c: 116: _overturn_LED = ~_overturn_LED;
  5896  0000BC  1E3B               	comf	Sys_Cyc@_overturn_LED,f,c
  5897                           
  5898                           ;My_Timer.c: 117: if(_overturn_LED) PORTEbits.RE5=0;
  5899  0000BE  503B               	movf	Sys_Cyc@_overturn_LED,w,c
  5900  0000C0  B4D8               	btfsc	status,2,c
  5901  0000C2  D002               	goto	i2l293
  5902  0000C4  9A84               	bcf	3972,5,c	;volatile
  5903  0000C6  D002               	goto	i2l2688
  5904  0000C8                     i2l293:
  5905                           
  5906                           ;My_Timer.c: 118: else PORTEbits.RE5=1;
  5907  0000C8  8A84               	bsf	3972,5,c	;volatile
  5908  0000CA  D000               	goto	i2l2688
  5909  0000CC                     i2l2688:
  5910                           
  5911                           ;My_Timer.c: 119: }
  5912                           ;My_Timer.c: 122: if( gs_Handle_Switch._1Khz )
  5913  0000CC  5031               	movf	_gs_Handle_Switch,w,c
  5914  0000CE  A4D8               	btfss	status,2,c
  5915                           
  5916                           ;My_Timer.c: 123: Pulse_1Khz();
  5917  0000D0  EC85  F011         	call	_Pulse_1Khz	;wreg free
  5918                           
  5919                           ;My_Timer.c: 126: Key_ScanFSM();
  5920  0000D4  EC21  F010         	call	_Key_ScanFSM	;wreg free
  5921  0000D8  D000               	goto	i2l2692
  5922  0000DA                     i2l2692:
  5923                           
  5924                           ;My_Timer.c: 128: }
  5925                           ;My_Timer.c: 131: if( RC2IF )
  5926  0000DA  AAA4               	btfss	4004,5,c	;volatile
  5927  0000DC  D023               	goto	i2l301
  5928                           
  5929                           ;My_Timer.c: 132: {
  5930                           ;My_Timer.c: 133: _temp = RCREG2;
  5931  0000DE  CF1D F018          	movff	3869,Sys_Cyc@_temp	;volatile
  5932                           
  5933                           ;My_Timer.c: 134: if( g_RS485_Receive_Flag == 0 )
  5934  0000E2  503D               	movf	_g_RS485_Receive_Flag,w,c
  5935  0000E4  A4D8               	btfss	status,2,c
  5936  0000E6  D01E               	goto	i2l301
  5937                           
  5938                           ;My_Timer.c: 135: {
  5939                           ;My_Timer.c: 136: if( _temp == 0xff )
  5940  0000E8  2818               	incf	Sys_Cyc@_temp,w,c
  5941  0000EA  A4D8               	btfss	status,2,c
  5942  0000EC  D004               	goto	i2l298
  5943                           
  5944                           ;My_Timer.c: 137: {
  5945                           ;My_Timer.c: 138: _Byte = 10 ;
  5946  0000EE  0E0A               	movlw	10
  5947  0000F0  6E39               	movwf	Sys_Cyc@_Byte,c
  5948                           
  5949                           ;My_Timer.c: 139: _flag = 0;
  5950  0000F2  0E00               	movlw	0
  5951  0000F4  6E3A               	movwf	Sys_Cyc@_flag,c
  5952  0000F6                     i2l298:
  5953                           
  5954                           ;My_Timer.c: 140: }
  5955                           ;My_Timer.c: 142: if ( _flag == 0 )
  5956  0000F6  503A               	movf	Sys_Cyc@_flag,w,c
  5957  0000F8  A4D8               	btfss	status,2,c
  5958  0000FA  D00C               	goto	i2l2706
  5959                           
  5960                           ;My_Timer.c: 143: {
  5961                           ;My_Timer.c: 144: _Byte -- ;
  5962  0000FC  0639               	decf	Sys_Cyc@_Byte,f,c
  5963                           
  5964                           ;My_Timer.c: 145: ga_RS485_ReceiveBuff[ _Byte ] = _temp;
  5965  0000FE  5039               	movf	Sys_Cyc@_Byte,w,c
  5966  000100  0D01               	mullw	1
  5967  000102  0ED4               	movlw	low _ga_RS485_ReceiveBuff
  5968  000104  24F3               	addwf	prodl,w,c
  5969  000106  6ED9               	movwf	fsr2l,c
  5970  000108  0E00               	movlw	high _ga_RS485_ReceiveBuff
  5971  00010A  20F4               	addwfc	prodh,w,c
  5972  00010C  6EDA               	movwf	fsr2h,c
  5973  00010E  C018  FFDF         	movff	Sys_Cyc@_temp,indf2
  5974  000112  D000               	goto	i2l2706
  5975  000114                     i2l2706:
  5976                           
  5977                           ;My_Timer.c: 146: }
  5978                           ;My_Timer.c: 148: if( _Byte == 0 )
  5979  000114  5039               	movf	Sys_Cyc@_Byte,w,c
  5980  000116  A4D8               	btfss	status,2,c
  5981  000118  D005               	goto	i2l301
  5982                           
  5983                           ;My_Timer.c: 149: {
  5984                           ;My_Timer.c: 150: g_RS485_Receive_Flag = 1 ;
  5985  00011A  0E01               	movlw	1
  5986  00011C  6E3D               	movwf	_g_RS485_Receive_Flag,c
  5987                           
  5988                           ;My_Timer.c: 151: _flag = 1;
  5989  00011E  0E01               	movlw	1
  5990  000120  6E3A               	movwf	Sys_Cyc@_flag,c
  5991  000122  D000               	goto	i2l301
  5992  000124                     i2l301:
  5993  000124  C017  FFF5         	movff	??_Sys_Cyc+13,tablat
  5994  000128  C016  FFF8         	movff	??_Sys_Cyc+12,tblptru
  5995  00012C  C015  FFF7         	movff	??_Sys_Cyc+11,tblptrh
  5996  000130  C014  FFF6         	movff	??_Sys_Cyc+10,tblptrl
  5997  000134  C013  FFF4         	movff	??_Sys_Cyc+9,prodh
  5998  000138  C012  FFF3         	movff	??_Sys_Cyc+8,prodl
  5999  00013C  C011  FFDA         	movff	??_Sys_Cyc+7,fsr2h
  6000  000140  C010  FFD9         	movff	??_Sys_Cyc+6,fsr2l
  6001  000144  C00F  FFE2         	movff	??_Sys_Cyc+5,fsr1h
  6002  000148  C00E  FFE1         	movff	??_Sys_Cyc+4,fsr1l
  6003  00014C  C00D  FFEA         	movff	??_Sys_Cyc+3,fsr0h
  6004  000150  C00C  FFE9         	movff	??_Sys_Cyc+2,fsr0l
  6005  000154  C00B  FFFB         	movff	??_Sys_Cyc+1,pclatu
  6006  000158  C00A  FFFA         	movff	??_Sys_Cyc,pclath
  6007  00015C  0011               	retfie		f
  6008  00015E                     __end_of_Sys_Cyc:
  6009                           	opt stack 0
  6010                           pclatu	equ	0xFFB
  6011                           pclath	equ	0xFFA
  6012                           tblptru	equ	0xFF8
  6013                           tblptrh	equ	0xFF7
  6014                           tblptrl	equ	0xFF6
  6015                           tablat	equ	0xFF5
  6016                           prodh	equ	0xFF4
  6017                           prodl	equ	0xFF3
  6018                           intcon	equ	0xFF2
  6019                           postinc0	equ	0xFEE
  6020                           fsr0h	equ	0xFEA
  6021                           fsr0l	equ	0xFE9
  6022                           wreg	equ	0xFE8
  6023                           indf1	equ	0xFE7
  6024                           postinc1	equ	0xFE6
  6025                           fsr1h	equ	0xFE2
  6026                           fsr1l	equ	0xFE1
  6027                           indf2	equ	0xFDF
  6028                           postinc2	equ	0xFDE
  6029                           postdec2	equ	0xFDD
  6030                           plusw2	equ	0xFDB
  6031                           fsr2h	equ	0xFDA
  6032                           fsr2l	equ	0xFD9
  6033                           status	equ	0xFD8
  6034                           
  6035 ;; *************** function i2___llmod *****************
  6036 ;; Defined at:
  6037 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  6038 ;; Parameters:    Size  Location     Type
  6039 ;;  dividend        4    0[COMRAM] unsigned long 
  6040 ;;  divisor         4    4[COMRAM] unsigned long 
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;  __llmod         1    8[COMRAM] unsigned char 
  6043 ;; Return value:  Size  Location     Type
  6044 ;;                  4    0[COMRAM] unsigned long 
  6045 ;; Registers used:
  6046 ;;		wreg, status,2, status,0
  6047 ;; Tracked objects:
  6048 ;;		On entry : 0/0
  6049 ;;		On exit  : 0/0
  6050 ;;		Unchanged: 0/0
  6051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6052 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6053 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6055 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6056 ;;Total ram usage:        9 bytes
  6057 ;; Hardware stack levels used:    1
  6058 ;; This function calls:
  6059 ;;		Nothing
  6060 ;; This function is called by:
  6061 ;;		_Sys_Cyc
  6062 ;; This function uses a non-reentrant model
  6063 ;;
  6064                           
  6065                           	psect	text40
  6066  001E70                     __ptext40:
  6067                           	opt stack 0
  6068  001E70                     i2___llmod:
  6069                           	opt stack 24
  6070                           
  6071                           ;incstack = 0
  6072  001E70  5005               	movf	i2___llmod@divisor,w,c
  6073  001E72  1006               	iorwf	i2___llmod@divisor+1,w,c
  6074  001E74  1007               	iorwf	i2___llmod@divisor+2,w,c
  6075  001E76  1008               	iorwf	i2___llmod@divisor+3,w,c
  6076  001E78  B4D8               	btfsc	status,2,c
  6077  001E7A  D029               	goto	i2l956
  6078  001E7C  0E01               	movlw	1
  6079  001E7E  6E09               	movwf	i2___llmod@counter,c
  6080  001E80  D007               	goto	i2l2660
  6081  001E82                     i2l2658:
  6082  001E82  90D8               	bcf	status,0,c
  6083  001E84  3605               	rlcf	i2___llmod@divisor,f,c
  6084  001E86  3606               	rlcf	i2___llmod@divisor+1,f,c
  6085  001E88  3607               	rlcf	i2___llmod@divisor+2,f,c
  6086  001E8A  3608               	rlcf	i2___llmod@divisor+3,f,c
  6087  001E8C  2A09               	incf	i2___llmod@counter,f,c
  6088  001E8E  D000               	goto	i2l2660
  6089  001E90                     i2l2660:
  6090  001E90  BE08               	btfsc	i2___llmod@divisor+3,7,c
  6091  001E92  D002               	goto	i2l2662
  6092  001E94  D7F6               	goto	i2l2658
  6093  001E96  D000               	goto	i2l2662
  6094  001E98                     i2l2662:
  6095  001E98  5005               	movf	i2___llmod@divisor,w,c
  6096  001E9A  5C01               	subwf	i2___llmod@dividend,w,c
  6097  001E9C  5006               	movf	i2___llmod@divisor+1,w,c
  6098  001E9E  5802               	subwfb	i2___llmod@dividend+1,w,c
  6099  001EA0  5007               	movf	i2___llmod@divisor+2,w,c
  6100  001EA2  5803               	subwfb	i2___llmod@dividend+2,w,c
  6101  001EA4  5008               	movf	i2___llmod@divisor+3,w,c
  6102  001EA6  5804               	subwfb	i2___llmod@dividend+3,w,c
  6103  001EA8  A0D8               	btfss	status,0,c
  6104  001EAA  D009               	goto	i2l2666
  6105  001EAC  5005               	movf	i2___llmod@divisor,w,c
  6106  001EAE  5E01               	subwf	i2___llmod@dividend,f,c
  6107  001EB0  5006               	movf	i2___llmod@divisor+1,w,c
  6108  001EB2  5A02               	subwfb	i2___llmod@dividend+1,f,c
  6109  001EB4  5007               	movf	i2___llmod@divisor+2,w,c
  6110  001EB6  5A03               	subwfb	i2___llmod@dividend+2,f,c
  6111  001EB8  5008               	movf	i2___llmod@divisor+3,w,c
  6112  001EBA  5A04               	subwfb	i2___llmod@dividend+3,f,c
  6113  001EBC  D000               	goto	i2l2666
  6114  001EBE                     i2l2666:
  6115  001EBE  90D8               	bcf	status,0,c
  6116  001EC0  3208               	rrcf	i2___llmod@divisor+3,f,c
  6117  001EC2  3207               	rrcf	i2___llmod@divisor+2,f,c
  6118  001EC4  3206               	rrcf	i2___llmod@divisor+1,f,c
  6119  001EC6  3205               	rrcf	i2___llmod@divisor,f,c
  6120  001EC8  2E09               	decfsz	i2___llmod@counter,f,c
  6121  001ECA  D7E6               	goto	i2l2662
  6122  001ECC  D000               	goto	i2l956
  6123  001ECE                     i2l956:
  6124  001ECE  C001  F001         	movff	i2___llmod@dividend,?i2___llmod
  6125  001ED2  C002  F002         	movff	i2___llmod@dividend+1,?i2___llmod+1
  6126  001ED6  C003  F003         	movff	i2___llmod@dividend+2,?i2___llmod+2
  6127  001EDA  C004  F004         	movff	i2___llmod@dividend+3,?i2___llmod+3
  6128  001EDE  0012               	return		;funcret
  6129  001EE0                     __end_ofi2___llmod:
  6130                           	opt stack 0
  6131                           pclatu	equ	0xFFB
  6132                           pclath	equ	0xFFA
  6133                           tblptru	equ	0xFF8
  6134                           tblptrh	equ	0xFF7
  6135                           tblptrl	equ	0xFF6
  6136                           tablat	equ	0xFF5
  6137                           prodh	equ	0xFF4
  6138                           prodl	equ	0xFF3
  6139                           intcon	equ	0xFF2
  6140                           postinc0	equ	0xFEE
  6141                           fsr0h	equ	0xFEA
  6142                           fsr0l	equ	0xFE9
  6143                           wreg	equ	0xFE8
  6144                           indf1	equ	0xFE7
  6145                           postinc1	equ	0xFE6
  6146                           fsr1h	equ	0xFE2
  6147                           fsr1l	equ	0xFE1
  6148                           indf2	equ	0xFDF
  6149                           postinc2	equ	0xFDE
  6150                           postdec2	equ	0xFDD
  6151                           plusw2	equ	0xFDB
  6152                           fsr2h	equ	0xFDA
  6153                           fsr2l	equ	0xFD9
  6154                           status	equ	0xFD8
  6155                           
  6156 ;; *************** function i2_SetTimer0 *****************
  6157 ;; Defined at:
  6158 ;;		line 81 in file "_01_USER/My_Timer.c"
  6159 ;; Parameters:    Size  Location     Type
  6160 ;;  _tmr            2    0[COMRAM] unsigned int 
  6161 ;; Auto vars:     Size  Location     Type
  6162 ;;		None
  6163 ;; Return value:  Size  Location     Type
  6164 ;;		None               void
  6165 ;; Registers used:
  6166 ;;		wreg, status,2, status,0
  6167 ;; Tracked objects:
  6168 ;;		On entry : 0/0
  6169 ;;		On exit  : 0/0
  6170 ;;		Unchanged: 0/0
  6171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6172 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6174 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6175 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6176 ;;Total ram usage:        4 bytes
  6177 ;; Hardware stack levels used:    1
  6178 ;; This function calls:
  6179 ;;		Nothing
  6180 ;; This function is called by:
  6181 ;;		_Sys_Cyc
  6182 ;; This function uses a non-reentrant model
  6183 ;;
  6184                           
  6185                           	psect	text41
  6186  0021EA                     __ptext41:
  6187                           	opt stack 0
  6188  0021EA                     i2_SetTimer0:
  6189                           	opt stack 24
  6190                           
  6191                           ;My_Timer.c: 83: if(_tmr > 0xffff) _tmr = 0xffff;
  6192                           
  6193                           ;incstack = 0
  6194  0021EA  D003               	goto	i2l2646
  6195  0021EC  6801               	setf	i2SetTimer0@_tmr,c
  6196  0021EE  6802               	setf	i2SetTimer0@_tmr+1,c
  6197  0021F0  D000               	goto	i2l2646
  6198  0021F2                     i2l2646:
  6199                           
  6200                           ;My_Timer.c: 84: _tmr=0xffff-_tmr;
  6201  0021F2  C001  F003         	movff	i2SetTimer0@_tmr,??i2_SetTimer0
  6202  0021F6  C002  F004         	movff	i2SetTimer0@_tmr+1,??i2_SetTimer0+1
  6203  0021FA  1E03               	comf	??i2_SetTimer0,f,c
  6204  0021FC  1E04               	comf	??i2_SetTimer0+1,f,c
  6205  0021FE  4A03               	infsnz	??i2_SetTimer0,f,c
  6206  002200  2A04               	incf	??i2_SetTimer0+1,f,c
  6207  002202  0EFF               	movlw	255
  6208  002204  2403               	addwf	??i2_SetTimer0,w,c
  6209  002206  6E01               	movwf	i2SetTimer0@_tmr,c
  6210  002208  0EFF               	movlw	255
  6211  00220A  2004               	addwfc	??i2_SetTimer0+1,w,c
  6212  00220C  6E02               	movwf	i2SetTimer0@_tmr+1,c
  6213                           
  6214                           ;My_Timer.c: 85: TMR0H = _tmr/256;
  6215  00220E  5002               	movf	i2SetTimer0@_tmr+1,w,c
  6216  002210  6ED7               	movwf	4055,c	;volatile
  6217                           
  6218                           ;My_Timer.c: 86: TMR0L = _tmr%256;
  6219  002212  C001  FFD6         	movff	i2SetTimer0@_tmr,4054	;volatile
  6220                           
  6221                           ;My_Timer.c: 87: TMR0IF = 0;
  6222  002216  94F2               	bcf	intcon,2,c	;volatile
  6223  002218  0012               	return		;funcret
  6224  00221A                     __end_ofi2_SetTimer0:
  6225                           	opt stack 0
  6226                           pclatu	equ	0xFFB
  6227                           pclath	equ	0xFFA
  6228                           tblptru	equ	0xFF8
  6229                           tblptrh	equ	0xFF7
  6230                           tblptrl	equ	0xFF6
  6231                           tablat	equ	0xFF5
  6232                           prodh	equ	0xFF4
  6233                           prodl	equ	0xFF3
  6234                           intcon	equ	0xFF2
  6235                           postinc0	equ	0xFEE
  6236                           fsr0h	equ	0xFEA
  6237                           fsr0l	equ	0xFE9
  6238                           wreg	equ	0xFE8
  6239                           indf1	equ	0xFE7
  6240                           postinc1	equ	0xFE6
  6241                           fsr1h	equ	0xFE2
  6242                           fsr1l	equ	0xFE1
  6243                           indf2	equ	0xFDF
  6244                           postinc2	equ	0xFDE
  6245                           postdec2	equ	0xFDD
  6246                           plusw2	equ	0xFDB
  6247                           fsr2h	equ	0xFDA
  6248                           fsr2l	equ	0xFD9
  6249                           status	equ	0xFD8
  6250                           
  6251 ;; *************** function _Pulse_1Khz *****************
  6252 ;; Defined at:
  6253 ;;		line 86 in file "_01_USER/My_Delay.c"
  6254 ;; Parameters:    Size  Location     Type
  6255 ;;		None
  6256 ;; Auto vars:     Size  Location     Type
  6257 ;;  _pulse          1    3[COMRAM] unsigned char 
  6258 ;; Return value:  Size  Location     Type
  6259 ;;		None               void
  6260 ;; Registers used:
  6261 ;;		wreg, status,2, status,0, cstack
  6262 ;; Tracked objects:
  6263 ;;		On entry : 0/0
  6264 ;;		On exit  : 0/0
  6265 ;;		Unchanged: 0/0
  6266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6268 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6270 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6271 ;;Total ram usage:        1 bytes
  6272 ;; Hardware stack levels used:    1
  6273 ;; Hardware stack levels required when called:    1
  6274 ;; This function calls:
  6275 ;;		_Delay_1Khz
  6276 ;; This function is called by:
  6277 ;;		_Sys_Cyc
  6278 ;; This function uses a non-reentrant model
  6279 ;;
  6280                           
  6281                           	psect	text42
  6282  00230A                     __ptext42:
  6283                           	opt stack 0
  6284  00230A                     _Pulse_1Khz:
  6285                           	opt stack 23
  6286                           
  6287                           ;My_Delay.c: 88: unsigned char _pulse = 10;
  6288                           
  6289                           ;incstack = 0
  6290  00230A  0E0A               	movlw	10
  6291  00230C  6E04               	movwf	Pulse_1Khz@_pulse,c
  6292                           
  6293                           ;My_Delay.c: 89: static unsigned char _overturn_1Khz = 0;
  6294                           ;My_Delay.c: 91: while( _pulse-- )
  6295  00230E  D00B               	goto	i2l2618
  6296  002310                     i2l2610:
  6297                           
  6298                           ;My_Delay.c: 92: {
  6299                           ;My_Delay.c: 93: _overturn_1Khz =~ _overturn_1Khz;
  6300  002310  1E38               	comf	Pulse_1Khz@_overturn_1Khz,f,c
  6301                           
  6302                           ;My_Delay.c: 94: if(_overturn_1Khz) PORTEbits.RE7 = 1;
  6303  002312  5038               	movf	Pulse_1Khz@_overturn_1Khz,w,c
  6304  002314  B4D8               	btfsc	status,2,c
  6305  002316  D002               	goto	i2l58
  6306  002318  8E84               	bsf	3972,7,c	;volatile
  6307  00231A  D002               	goto	i2l2616
  6308  00231C                     i2l58:
  6309                           
  6310                           ;My_Delay.c: 95: else PORTEbits.RE7 = 0;
  6311  00231C  9E84               	bcf	3972,7,c	;volatile
  6312  00231E  D000               	goto	i2l2616
  6313  002320                     i2l2616:
  6314                           
  6315                           ;My_Delay.c: 96: Delay_1Khz();
  6316  002320  ECA8  F010         	call	_Delay_1Khz	;wreg free
  6317  002324  D000               	goto	i2l2618
  6318  002326                     i2l2618:
  6319  002326  0604               	decf	Pulse_1Khz@_pulse,f,c
  6320  002328  2804               	incf	Pulse_1Khz@_pulse,w,c
  6321  00232A  A4D8               	btfss	status,2,c
  6322  00232C  D7F1               	goto	i2l2610
  6323  00232E  0012               	return		;funcret
  6324  002330                     __end_of_Pulse_1Khz:
  6325                           	opt stack 0
  6326                           pclatu	equ	0xFFB
  6327                           pclath	equ	0xFFA
  6328                           tblptru	equ	0xFF8
  6329                           tblptrh	equ	0xFF7
  6330                           tblptrl	equ	0xFF6
  6331                           tablat	equ	0xFF5
  6332                           prodh	equ	0xFF4
  6333                           prodl	equ	0xFF3
  6334                           intcon	equ	0xFF2
  6335                           postinc0	equ	0xFEE
  6336                           fsr0h	equ	0xFEA
  6337                           fsr0l	equ	0xFE9
  6338                           wreg	equ	0xFE8
  6339                           indf1	equ	0xFE7
  6340                           postinc1	equ	0xFE6
  6341                           fsr1h	equ	0xFE2
  6342                           fsr1l	equ	0xFE1
  6343                           indf2	equ	0xFDF
  6344                           postinc2	equ	0xFDE
  6345                           postdec2	equ	0xFDD
  6346                           plusw2	equ	0xFDB
  6347                           fsr2h	equ	0xFDA
  6348                           fsr2l	equ	0xFD9
  6349                           status	equ	0xFD8
  6350                           
  6351 ;; *************** function _Delay_1Khz *****************
  6352 ;; Defined at:
  6353 ;;		line 69 in file "_01_USER/My_Delay.c"
  6354 ;; Parameters:    Size  Location     Type
  6355 ;;		None
  6356 ;; Auto vars:     Size  Location     Type
  6357 ;;  c               1    2[COMRAM] unsigned char 
  6358 ;;  b               1    1[COMRAM] unsigned char 
  6359 ;;  a               1    0[COMRAM] unsigned char 
  6360 ;; Return value:  Size  Location     Type
  6361 ;;		None               void
  6362 ;; Registers used:
  6363 ;;		wreg, status,2, status,0
  6364 ;; Tracked objects:
  6365 ;;		On entry : 0/0
  6366 ;;		On exit  : 0/0
  6367 ;;		Unchanged: 0/0
  6368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6370 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6372 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6373 ;;Total ram usage:        3 bytes
  6374 ;; Hardware stack levels used:    1
  6375 ;; This function calls:
  6376 ;;		Nothing
  6377 ;; This function is called by:
  6378 ;;		_Pulse_1Khz
  6379 ;; This function uses a non-reentrant model
  6380 ;;
  6381                           
  6382                           	psect	text43
  6383  002150                     __ptext43:
  6384                           	opt stack 0
  6385  002150                     _Delay_1Khz:
  6386                           	opt stack 23
  6387                           
  6388                           ;My_Delay.c: 71: unsigned char a,b,c;
  6389                           ;My_Delay.c: 72: for(c=1;c>0;c--)
  6390                           
  6391                           ;incstack = 0
  6392  002150  0E01               	movlw	1
  6393  002152  6E03               	movwf	Delay_1Khz@c,c
  6394  002154  5003               	movf	Delay_1Khz@c,w,c
  6395  002156  B4D8               	btfsc	status,2,c
  6396  002158  0012               	return	
  6397  00215A  D001               	goto	i2l2298
  6398  00215C  0012               	return	
  6399  00215E                     i2l2298:
  6400                           
  6401                           ;My_Delay.c: 73: for(b=32;b>0;b--)
  6402  00215E  0E20               	movlw	32
  6403  002160  6E02               	movwf	Delay_1Khz@b,c
  6404  002162  5002               	movf	Delay_1Khz@b,w,c
  6405  002164  B4D8               	btfsc	status,2,c
  6406  002166  D00D               	goto	i2l2314
  6407  002168  D001               	goto	i2l2302
  6408  00216A  D00B               	goto	i2l2314
  6409  00216C                     i2l2302:
  6410                           
  6411                           ;My_Delay.c: 74: for(a=2;a>0;a--);
  6412  00216C  0E02               	movlw	2
  6413  00216E  6E01               	movwf	Delay_1Khz@a,c
  6414  002170  5001               	movf	Delay_1Khz@a,w,c
  6415  002172  B4D8               	btfsc	status,2,c
  6416  002174  D004               	goto	i2l2310
  6417  002176  D001               	goto	i2l2306
  6418  002178  D002               	goto	i2l2310
  6419  00217A                     i2l2306:
  6420  00217A  0601               	decf	Delay_1Khz@a,f,c
  6421  00217C  D7F9               	goto	L7
  6422  00217E                     i2l2310:
  6423  00217E  0602               	decf	Delay_1Khz@b,f,c
  6424  002180  D7F0               	goto	L8
  6425  002182                     i2l2314:
  6426  002182  0603               	decf	Delay_1Khz@c,f,c
  6427  002184  D7E7               	goto	L9
  6428  002186  0012               	return		;funcret
  6429  002188                     __end_of_Delay_1Khz:
  6430                           	opt stack 0
  6431                           pclatu	equ	0xFFB
  6432                           pclath	equ	0xFFA
  6433                           tblptru	equ	0xFF8
  6434                           tblptrh	equ	0xFF7
  6435                           tblptrl	equ	0xFF6
  6436                           tablat	equ	0xFF5
  6437                           prodh	equ	0xFF4
  6438                           prodl	equ	0xFF3
  6439                           intcon	equ	0xFF2
  6440                           postinc0	equ	0xFEE
  6441                           fsr0h	equ	0xFEA
  6442                           fsr0l	equ	0xFE9
  6443                           wreg	equ	0xFE8
  6444                           indf1	equ	0xFE7
  6445                           postinc1	equ	0xFE6
  6446                           fsr1h	equ	0xFE2
  6447                           fsr1l	equ	0xFE1
  6448                           indf2	equ	0xFDF
  6449                           postinc2	equ	0xFDE
  6450                           postdec2	equ	0xFDD
  6451                           plusw2	equ	0xFDB
  6452                           fsr2h	equ	0xFDA
  6453                           fsr2l	equ	0xFD9
  6454                           status	equ	0xFD8
  6455                           
  6456 ;; *************** function _Key_ScanFSM *****************
  6457 ;; Defined at:
  6458 ;;		line 80 in file "_01_USER/Key.c"
  6459 ;; Parameters:    Size  Location     Type
  6460 ;;		None
  6461 ;; Auto vars:     Size  Location     Type
  6462 ;;		None
  6463 ;; Return value:  Size  Location     Type
  6464 ;;		None               void
  6465 ;; Registers used:
  6466 ;;		wreg, status,2, status,0, cstack
  6467 ;; Tracked objects:
  6468 ;;		On entry : 0/0
  6469 ;;		On exit  : 0/0
  6470 ;;		Unchanged: 0/0
  6471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6476 ;;Total ram usage:        0 bytes
  6477 ;; Hardware stack levels used:    1
  6478 ;; Hardware stack levels required when called:    1
  6479 ;; This function calls:
  6480 ;;		_Key_Scan
  6481 ;; This function is called by:
  6482 ;;		_Sys_Cyc
  6483 ;; This function uses a non-reentrant model
  6484 ;;
  6485                           
  6486                           	psect	text44
  6487  002042                     __ptext44:
  6488                           	opt stack 0
  6489  002042                     _Key_ScanFSM:
  6490                           	opt stack 23
  6491                           
  6492                           ;Key.c: 82: Key_Scan();
  6493                           
  6494                           ;incstack = 0
  6495  002042  EC8B  F010         	call	_Key_Scan	;wreg free
  6496                           
  6497                           ;Key.c: 83: if( s_Local_Key_FSM.key_BUS & 0x01 ) s_Local_Key_FSM.a_key_count[0]++;
  6498  002046  0100               	movlb	0	; () banked
  6499  002048  A1C2               	btfss	_s_Local_Key_FSM& (0+255),0,b	;volatile
  6500  00204A  D004               	goto	i2l2626
  6501                           
  6502                           ; BSR set to: 0
  6503  00204C  0100               	movlb	0	; () banked
  6504  00204E  4BC5               	infsnz	(_s_Local_Key_FSM+3)& (0+255),f,b	;volatile
  6505  002050  2BC6               	incf	(_s_Local_Key_FSM+4)& (0+255),f,b	;volatile
  6506  002052  D000               	goto	i2l2626
  6507  002054                     i2l2626:
  6508                           
  6509                           ; BSR set to: 0
  6510                           ;Key.c: 84: if( s_Local_Key_FSM.key_BUS & 0x02 ) s_Local_Key_FSM.a_key_count[1]++;
  6511  002054  0100               	movlb	0	; () banked
  6512  002056  A3C2               	btfss	_s_Local_Key_FSM& (0+255),1,b	;volatile
  6513  002058  D004               	goto	i2l2630
  6514                           
  6515                           ; BSR set to: 0
  6516  00205A  0100               	movlb	0	; () banked
  6517  00205C  4BC7               	infsnz	(_s_Local_Key_FSM+5)& (0+255),f,b	;volatile
  6518  00205E  2BC8               	incf	(_s_Local_Key_FSM+6)& (0+255),f,b	;volatile
  6519  002060  D000               	goto	i2l2630
  6520  002062                     i2l2630:
  6521                           
  6522                           ; BSR set to: 0
  6523                           ;Key.c: 85: if( s_Local_Key_FSM.key_BUS & 0x04 ) s_Local_Key_FSM.a_key_count[2]++;
  6524  002062  0100               	movlb	0	; () banked
  6525  002064  A5C2               	btfss	_s_Local_Key_FSM& (0+255),2,b	;volatile
  6526  002066  D004               	goto	i2l2634
  6527                           
  6528                           ; BSR set to: 0
  6529  002068  0100               	movlb	0	; () banked
  6530  00206A  4BC9               	infsnz	(_s_Local_Key_FSM+7)& (0+255),f,b	;volatile
  6531  00206C  2BCA               	incf	(_s_Local_Key_FSM+8)& (0+255),f,b	;volatile
  6532  00206E  D000               	goto	i2l2634
  6533  002070                     i2l2634:
  6534                           
  6535                           ; BSR set to: 0
  6536                           ;Key.c: 86: if( s_Local_Key_FSM.key_BUS & 0x08 ) s_Local_Key_FSM.a_key_count[3]++;
  6537  002070  0100               	movlb	0	; () banked
  6538  002072  A7C2               	btfss	_s_Local_Key_FSM& (0+255),3,b	;volatile
  6539  002074  D004               	goto	i2l2638
  6540                           
  6541                           ; BSR set to: 0
  6542  002076  0100               	movlb	0	; () banked
  6543  002078  4BCB               	infsnz	(_s_Local_Key_FSM+9)& (0+255),f,b	;volatile
  6544  00207A  2BCC               	incf	(_s_Local_Key_FSM+10)& (0+255),f,b	;volatile
  6545  00207C  D000               	goto	i2l2638
  6546  00207E                     i2l2638:
  6547                           
  6548                           ; BSR set to: 0
  6549                           ;Key.c: 87: if( s_Local_Key_FSM.key_BUS & 0x10 ) s_Local_Key_FSM.a_key_count[4]++;
  6550  00207E  0100               	movlb	0	; () banked
  6551  002080  A9C2               	btfss	_s_Local_Key_FSM& (0+255),4,b	;volatile
  6552  002082  0012               	return	
  6553                           
  6554                           ; BSR set to: 0
  6555  002084  0100               	movlb	0	; () banked
  6556  002086  4BCD               	infsnz	(_s_Local_Key_FSM+11)& (0+255),f,b	;volatile
  6557  002088  2BCE               	incf	(_s_Local_Key_FSM+12)& (0+255),f,b	;volatile
  6558  00208A  0012               	return	
  6559                           
  6560                           ; BSR set to: 0
  6561                           
  6562                           ; BSR set to: 0
  6563  00208C  0012               	return		;funcret
  6564  00208E                     __end_of_Key_ScanFSM:
  6565                           	opt stack 0
  6566                           pclatu	equ	0xFFB
  6567                           pclath	equ	0xFFA
  6568                           tblptru	equ	0xFF8
  6569                           tblptrh	equ	0xFF7
  6570                           tblptrl	equ	0xFF6
  6571                           tablat	equ	0xFF5
  6572                           prodh	equ	0xFF4
  6573                           prodl	equ	0xFF3
  6574                           intcon	equ	0xFF2
  6575                           postinc0	equ	0xFEE
  6576                           fsr0h	equ	0xFEA
  6577                           fsr0l	equ	0xFE9
  6578                           wreg	equ	0xFE8
  6579                           indf1	equ	0xFE7
  6580                           postinc1	equ	0xFE6
  6581                           fsr1h	equ	0xFE2
  6582                           fsr1l	equ	0xFE1
  6583                           indf2	equ	0xFDF
  6584                           postinc2	equ	0xFDE
  6585                           postdec2	equ	0xFDD
  6586                           plusw2	equ	0xFDB
  6587                           fsr2h	equ	0xFDA
  6588                           fsr2l	equ	0xFD9
  6589                           status	equ	0xFD8
  6590                           
  6591 ;; *************** function _Key_Scan *****************
  6592 ;; Defined at:
  6593 ;;		line 58 in file "_01_USER/Key.c"
  6594 ;; Parameters:    Size  Location     Type
  6595 ;;		None
  6596 ;; Auto vars:     Size  Location     Type
  6597 ;;		None
  6598 ;; Return value:  Size  Location     Type
  6599 ;;		None               void
  6600 ;; Registers used:
  6601 ;;		wreg, status,2, status,0
  6602 ;; Tracked objects:
  6603 ;;		On entry : 0/0
  6604 ;;		On exit  : 0/0
  6605 ;;		Unchanged: 0/0
  6606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6611 ;;Total ram usage:        0 bytes
  6612 ;; Hardware stack levels used:    1
  6613 ;; This function calls:
  6614 ;;		Nothing
  6615 ;; This function is called by:
  6616 ;;		_Key_ScanFSM
  6617 ;; This function uses a non-reentrant model
  6618 ;;
  6619                           
  6620                           	psect	text45
  6621  002116                     __ptext45:
  6622                           	opt stack 0
  6623  002116                     _Key_Scan:
  6624                           	opt stack 23
  6625                           
  6626                           ;Key.c: 61: s_Local_Key_FSM.key_BUS = 0x00;
  6627                           
  6628                           ; BSR set to: 0
  6629                           ;incstack = 0
  6630  002116  0E00               	movlw	0
  6631  002118  0100               	movlb	0	; () banked
  6632  00211A  6FC2               	movwf	_s_Local_Key_FSM& (0+255),b	;volatile
  6633                           
  6634                           ; BSR set to: 0
  6635                           ;Key.c: 63: if( RE3 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 0) ;
  6636  00211C  B684               	btfsc	3972,3,c	;volatile
  6637  00211E  D003               	goto	i2l2324
  6638                           
  6639                           ; BSR set to: 0
  6640  002120  0100               	movlb	0	; () banked
  6641  002122  81C2               	bsf	_s_Local_Key_FSM& (0+255),0,b	;volatile
  6642  002124  D000               	goto	i2l2324
  6643  002126                     i2l2324:
  6644                           
  6645                           ; BSR set to: 0
  6646                           ;Key.c: 64: if( RE2 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 1) ;
  6647  002126  B484               	btfsc	3972,2,c	;volatile
  6648  002128  D003               	goto	i2l2328
  6649                           
  6650                           ; BSR set to: 0
  6651  00212A  0100               	movlb	0	; () banked
  6652  00212C  83C2               	bsf	_s_Local_Key_FSM& (0+255),1,b	;volatile
  6653  00212E  D000               	goto	i2l2328
  6654  002130                     i2l2328:
  6655                           
  6656                           ; BSR set to: 0
  6657                           ;Key.c: 65: if( RD6 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 2) ;
  6658  002130  BC83               	btfsc	3971,6,c	;volatile
  6659  002132  D003               	goto	i2l2332
  6660                           
  6661                           ; BSR set to: 0
  6662  002134  0100               	movlb	0	; () banked
  6663  002136  85C2               	bsf	_s_Local_Key_FSM& (0+255),2,b	;volatile
  6664  002138  D000               	goto	i2l2332
  6665  00213A                     i2l2332:
  6666                           
  6667                           ; BSR set to: 0
  6668                           ;Key.c: 66: if( RE4 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 3) ;
  6669  00213A  B884               	btfsc	3972,4,c	;volatile
  6670  00213C  D003               	goto	i2l2336
  6671                           
  6672                           ; BSR set to: 0
  6673  00213E  0100               	movlb	0	; () banked
  6674  002140  87C2               	bsf	_s_Local_Key_FSM& (0+255),3,b	;volatile
  6675  002142  D000               	goto	i2l2336
  6676  002144                     i2l2336:
  6677                           
  6678                           ; BSR set to: 0
  6679                           ;Key.c: 67: if( RD7 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 4) ;
  6680  002144  BE83               	btfsc	3971,7,c	;volatile
  6681  002146  0012               	return	
  6682                           
  6683                           ; BSR set to: 0
  6684  002148  0100               	movlb	0	; () banked
  6685  00214A  89C2               	bsf	_s_Local_Key_FSM& (0+255),4,b	;volatile
  6686  00214C  0012               	return	
  6687                           
  6688                           ; BSR set to: 0
  6689                           
  6690                           ; BSR set to: 0
  6691  00214E  0012               	return		;funcret
  6692  002150                     __end_of_Key_Scan:
  6693                           	opt stack 0
  6694                           pclatu	equ	0xFFB
  6695                           pclath	equ	0xFFA
  6696                           tblptru	equ	0xFF8
  6697                           tblptrh	equ	0xFF7
  6698                           tblptrl	equ	0xFF6
  6699                           tablat	equ	0xFF5
  6700                           prodh	equ	0xFF4
  6701                           prodl	equ	0xFF3
  6702                           intcon	equ	0xFF2
  6703                           postinc0	equ	0xFEE
  6704                           fsr0h	equ	0xFEA
  6705                           fsr0l	equ	0xFE9
  6706                           wreg	equ	0xFE8
  6707                           indf1	equ	0xFE7
  6708                           postinc1	equ	0xFE6
  6709                           fsr1h	equ	0xFE2
  6710                           fsr1l	equ	0xFE1
  6711                           indf2	equ	0xFDF
  6712                           postinc2	equ	0xFDE
  6713                           postdec2	equ	0xFDD
  6714                           plusw2	equ	0xFDB
  6715                           fsr2h	equ	0xFDA
  6716                           fsr2l	equ	0xFD9
  6717                           status	equ	0xFD8
  6718                           pclatu	equ	0xFFB
  6719                           pclath	equ	0xFFA
  6720                           tblptru	equ	0xFF8
  6721                           tblptrh	equ	0xFF7
  6722                           tblptrl	equ	0xFF6
  6723                           tablat	equ	0xFF5
  6724                           prodh	equ	0xFF4
  6725                           prodl	equ	0xFF3
  6726                           intcon	equ	0xFF2
  6727                           postinc0	equ	0xFEE
  6728                           fsr0h	equ	0xFEA
  6729                           fsr0l	equ	0xFE9
  6730                           wreg	equ	0xFE8
  6731                           indf1	equ	0xFE7
  6732                           postinc1	equ	0xFE6
  6733                           fsr1h	equ	0xFE2
  6734                           fsr1l	equ	0xFE1
  6735                           indf2	equ	0xFDF
  6736                           postinc2	equ	0xFDE
  6737                           postdec2	equ	0xFDD
  6738                           plusw2	equ	0xFDB
  6739                           fsr2h	equ	0xFDA
  6740                           fsr2l	equ	0xFD9
  6741                           status	equ	0xFD8
  6742                           
  6743                           	psect	rparam
  6744  0000                     pclatu	equ	0xFFB
  6745                           pclath	equ	0xFFA
  6746                           tblptru	equ	0xFF8
  6747                           tblptrh	equ	0xFF7
  6748                           tblptrl	equ	0xFF6
  6749                           tablat	equ	0xFF5
  6750                           prodh	equ	0xFF4
  6751                           prodl	equ	0xFF3
  6752                           intcon	equ	0xFF2
  6753                           postinc0	equ	0xFEE
  6754                           fsr0h	equ	0xFEA
  6755                           fsr0l	equ	0xFE9
  6756                           wreg	equ	0xFE8
  6757                           indf1	equ	0xFE7
  6758                           postinc1	equ	0xFE6
  6759                           fsr1h	equ	0xFE2
  6760                           fsr1l	equ	0xFE1
  6761                           indf2	equ	0xFDF
  6762                           postinc2	equ	0xFDE
  6763                           postdec2	equ	0xFDD
  6764                           plusw2	equ	0xFDB
  6765                           fsr2h	equ	0xFDA
  6766                           fsr2l	equ	0xFD9
  6767                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         153
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      71
    BANK0           160     21     147
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    VerifyCRC@DataBuff	PTR unsigned char  size(2) Largest target is 10
		 -> ga_RS485_ReceiveBuff(BANK0[10]), ga_RS485_SendBuff(COMRAM[10]), 

    RS485_ManageMessage@DataBuff	PTR unsigned char  size(2) Largest target is 10
		 -> ga_RS485_ReceiveBuff(BANK0[10]), 

    RS485_SendDate@date_dress	PTR unsigned char  size(2) Largest target is 10
		 -> ga_RS485_SendBuff(COMRAM[10]), 


Critical Paths under _main in COMRAM

    _Timer0_Init->_SetTimer0
    _ShowResult->_TM1640_Show_integer
    _TM1640_Show_integer->_TM1640_Writer_Dates
    _TM1640_Show_integer->___lwdiv
    _TM1640_Writer_Dates->___lwmod
    _Run->_RS485_SendDate
    _RS485_SendDate->_VerifyCRC
    _GetADC6->___ftmul
    ___lwtoft->___ftpack
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul
    _RS485_Init->_Open2USART
    _ManageMessage->_RS485_ManageMessage
    _RS485_ManageMessage->_VerifyCRC
    _VerifyCRC->___lldiv
    _Key_ManageMessage->_Key_ReadFSM
    _Init_TM1640->_TM1640_Writer_Byte
    _TM1640_Writer_Byte->_TM1640_Delay
    _TM1640_Stop->_TM1640_Delay
    _TM1640_Start->_TM1640_Delay
    _ADC6_Init->_OpenADC

Critical Paths under _Sys_Cyc in COMRAM

    _Sys_Cyc->i2___llmod
    _Pulse_1Khz->_Delay_1Khz

Critical Paths under _main in BANK0

    _RS485_SendDate->_VerifyCRC
    _GetADC6->___ftdiv
    ___ftdiv->___ftmul
    _ManageMessage->_RS485_ManageMessage
    _RS485_ManageMessage->_VerifyCRC

Critical Paths under _Sys_Cyc in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Sys_Cyc in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Sys_Cyc in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Sys_Cyc in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Sys_Cyc in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Sys_Cyc in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Sys_Cyc in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Sys_Cyc in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Sys_Cyc in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Sys_Cyc in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Sys_Cyc in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Sys_Cyc in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Sys_Cyc in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Sys_Cyc in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Sys_Cyc in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Sys_Cyc in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   17290
                          _ADC6_Init
                        _GPIO_Config
                        _Init_TM1640
                           _Key_Init
                      _ManageMessage
                         _RS485_Init
                                _Run
                         _ShowResult
                        _Timer0_Init
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0     148
                          _SetTimer0
 ---------------------------------------------------------------------------------
 (2) _SetTimer0                                            4     2      2     148
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ShowResult                                           1     1      0    2459
                                             33 COMRAM     1     1      0
                _TM1640_Show_integer
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     371
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _TM1640_Show_integer                                  2     0      2    2088
                                             31 COMRAM     2     0      2
                _TM1640_Writer_Dates
                            ___lwdiv
                            ___lwmod
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     583
                                             24 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     480
                                             24 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _TM1640_Writer_Dates                                  2     1      1     762
                                             29 COMRAM     2     1      1
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Run                                                  0     0      0   10179
                            _GetADC6
                     _RS485_SendDate
 ---------------------------------------------------------------------------------
 (2) _RS485_SendDate                                       4     1      3    2191
                                             40 COMRAM     4     1      3
                          _VerifyCRC
 ---------------------------------------------------------------------------------
 (2) _GetADC6                                              0     0      0    7988
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2104
                                             32 COMRAM     3     0      3
                            _ReadADC (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    2846
                                             35 COMRAM     9     3      6
                                              0 BANK0      6     6      0
                            _ReadADC (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3038
                                              6 BANK0     15     9      6
                            _ReadADC (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2008
                                             24 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) _ReadADC                                              4     2      2       0
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RS485_Init                                           0     0      0     273
                         _Open2USART
 ---------------------------------------------------------------------------------
 (2) _Open2USART                                           3     1      2     273
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _ManageMessage                                        0     0      0    3721
                  _Key_ManageMessage
                _RS485_ManageMessage
 ---------------------------------------------------------------------------------
 (2) _RS485_ManageMessage                                 11     8      3    2975
                                             40 COMRAM     3     0      3
                                             10 BANK0      8     8      0
                          _VerifyCRC
 ---------------------------------------------------------------------------------
 (3) _VerifyCRC                                           13    10      3    1689
                                             37 COMRAM     3     0      3
                                              0 BANK0     10    10      0
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     612
                                             24 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     371
                                             24 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _Key_ManageMessage                                    0     0      0     746
                        _Key_ReadFSM
                       _Key_ResetFSM
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     212
                                             24 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) _Key_ResetFSM                                         1     1      0      67
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Key_ReadFSM                                          6     6      0     467
                                             24 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _Key_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_TM1640                                          0     0      0     272
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
 ---------------------------------------------------------------------------------
 (4) _TM1640_Writer_Byte                                   2     2      0     136
                                             26 COMRAM     2     2      0
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (4) _TM1640_Stop                                          0     0      0      68
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (4) _TM1640_Start                                         0     0      0      68
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (5) _TM1640_Delay                                         2     2      0      68
                                             24 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC6_Init                                            0     0      0     238
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     238
                                             24 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Sys_Cyc                                             15    15      0     563
                                              9 COMRAM    15    15      0
                        _Key_ScanFSM
                         _Pulse_1Khz
                        i2_SetTimer0
                          i2___llmod
 ---------------------------------------------------------------------------------
 (7) i2___llmod                                            9     1      8     263
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) i2_SetTimer0                                          4     2      2      94
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _Pulse_1Khz                                           1     1      0     161
                                              3 COMRAM     1     1      0
                         _Delay_1Khz
 ---------------------------------------------------------------------------------
 (8) _Delay_1Khz                                           3     3      0     138
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (7) _Key_ScanFSM                                          0     0      0       0
                           _Key_Scan
 ---------------------------------------------------------------------------------
 (8) _Key_Scan                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC6_Init
     _OpenADC
   _GPIO_Config
   _Init_TM1640
     _TM1640_Start
       _TM1640_Delay
     _TM1640_Stop
       _TM1640_Delay
     _TM1640_Writer_Byte
       _TM1640_Delay
   _Key_Init
   _ManageMessage
     _Key_ManageMessage
       _Key_ReadFSM
       _Key_ResetFSM
       ___lbmod
     _RS485_ManageMessage
       _VerifyCRC
         ___lldiv
         ___llmod
   _RS485_Init
     _Open2USART
   _Run
     _GetADC6
       _BusyADC
       _ConvertADC
       _ReadADC
       ___ftdiv
         _ReadADC (ARG)
         ___ftmul (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___ftmul
         _ReadADC (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___lwtoft
         _ReadADC (ARG)
         ___ftpack (ARG)
     _RS485_SendDate
       _VerifyCRC
         ___lldiv
         ___llmod
   _ShowResult
     _TM1640_Show_integer
       _TM1640_Writer_Dates
         _TM1640_Start
           _TM1640_Delay
         _TM1640_Stop
           _TM1640_Delay
         _TM1640_Writer_Byte
           _TM1640_Delay
         ___lwmod (ARG)
       ___lwdiv
       ___lwmod
       ___wmul (ARG)
     ___wmul
   _Timer0_Init
     _SetTimer0

 _Sys_Cyc (ROOT)
   _Key_ScanFSM
     _Key_Scan
   _Pulse_1Khz
     _Delay_1Khz
   i2_SetTimer0
   i2___llmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     15      93       5       91.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      47       1       74.7%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      DA      12        0.0%
DATA                 0      0      DA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Dec 17 15:24:18 2015

                 ?_TM1640_Stop 0001   __size_of_TM1640_Writer_Dates 0022                  ?_TM1640_Delay 0001  
          ___wmul@multiplicand 001B                    __CFG_BORV$3 000000                  ?_TM1640_Start 0001  
                 _gf_ADC6_Buff 0035                   __CFG_CP0$OFF 000000                   __CFG_CP1$OFF 000000  
                 __CFG_CP2$OFF 000000                   __CFG_CP3$OFF 000000                   __CFG_CP4$OFF 000000  
                 __CFG_CP5$OFF 000000                   __CFG_CP6$OFF 000000                   __CFG_CP7$OFF 000000  
                          l201 1C46                            l202 1C5E                            l131 1426  
                          l225 17C0                            l361 23EE                            l193 1BF4  
                          l346 20E0                            l451 1FF2                            l347 20F6  
                          l196 1C14                            l481 1D4A                            l810 1BA2  
                          l484 1D62                            l486 1D6E                            l487 1D70  
                          l479 1D3A                            l946 1CEE                            l874 1658  
                          l956 1E5E                            _GIE 007F97                   __CFG_CPB$OFF 000000  
                          _RC3 007C13                            _RC4 007C14                            _RE2 007C22  
                          _RE3 007C23                            _RE4 007C24                            _RD6 007C1E  
                          _RE5 007C25                            _RD7 007C1F                            _RE6 007C26  
                          _RG3 007C33                            _RE7 007C27                            u370 2436  
                 __CFG_CPD$OFF 000000                            _PSA 007EAB                            _Run 2246  
     RS485_SendDate@date_dress 0029                            prod 000FF3       RS485_SendDate@date_lenth 002B  
                          wreg 000FE8                   ?_GPIO_Config 0001                     _TXSTA2bits 000F21  
         ?_TM1640_Show_integer 0020                  ?_Key_ResetFSM 0001                    ?_RS485_Init 0001  
                ??_Key_ReadFSM 0019                   ___ftdiv@cntr 00ED                  ??_Key_ScanFSM 0001  
                         ?_Run 0001                   ___ftdiv@sign 00F2                           l1009 1F9E  
                         l1019 2038                           l2104 1530                           l3000 2252  
                         l2114 20A0                           l2108 1534                           l2116 20CE  
                         l2400 1D18                           l3008 2234                           l2082 1472  
                         l2074 13FC                           l2066 13A4                           l2092 149E  
                         l2076 1412                           l2084 1488                           l2420 1D5A  
                         l2412 1D40                           l2404 1D26                           l2260 1F6C  
                         l2078 1440                           l2246 21AE                           l2238 2194  
                         l2350 1A32                           l2270 1F92                           l2262 1F74  
                         l2096 14AA                           l2248 21B4                           l2424 1D66  
                         l2416 1D50                           l2408 1D30                           l2280 200E  
                         l2512 21C2                           l2370 1A70                           l2362 1A58  
                         l2354 1A3E                           l2258 1F62                           l2282 2016  
                         l2380 1AB8                           l2372 1A7E                           l2604 1DC4  
                         l2366 1A66                           l2358 1A4C                           l2286 202C  
                         l2278 2004                           l2392 1B00                           l2384 1AD4  
                         l2376 1A9A                           l2802 16AC                           l2730 1B16  
                         l1940 23DE                           l2388 1AF2                           l2806 1732  
                         l2742 1B6A                           l2734 1B26                           l2822 157A  
                         l2902 18C8                           l2752 1BAA                           l2744 1B8A  
                         l2736 1B32                           l2920 1C1E                           l1946 23E6  
                         l2770 1CA4                           l2746 1B96                           l2738 1B52  
                         l2906 18E2                           l1948 23E8                           l2780 1CDE  
                         l2772 1CAC                           l2828 15B4                           l2924 1C68  
                         l1982 20FA                           l2790 1E20                           l2934 105A  
                         l2758 1BBC                           l2768 1C96                           l2792 1E28  
                         l2960 1138                           l2952 10BE                           l2848 1616  
                         l2970 11BE                           l2946 10A6                           l2858 166A  
                         l2874 1834                           l1988 210E                           l2796 1E4E  
                         l2788 1E12                           l2892 1890                           l2868 1808  
                         l2974 11E6                           l2966 1198                           l2990 1EE6  
                         l2896 18A8                           l2888 1878                           l2898 18B0  
                         _T0CS 007EAD                           _T0SE 007EAC                           u1600 145E  
                         u1580 13CA                           u1590 13E8                           u1664 14F8  
                         _IPEN 007E87                           u1665 14F4                           u1674 150C  
                         u1675 1508                           u2811 1590                           u2841 17EC  
                         u2861 1818                           u2791 1556                           i2l58 231C  
     RS485_ManageMessage@CRC_H 00ED       RS485_ManageMessage@CRC_L 00EE                  ??_Init_TM1640 001D  
                   _Delay_1Khz 2150                           _main 221A                   ___ftpack@arg 0019  
                 ___ftpack@exp 001C                           fsr0h 000FEA                           fsr1h 000FE2  
                         fsr0l 000FE9                           fsr2h 000FDA                           indf1 000FE7  
                         fsr1l 000FE1                           indf2 000FDF                           fsr2l 000FD9  
                         pclat 000FFA                __end_of_GetADC6 1F4C                           prodh 000FF4  
                         prodl 000FF3                           start 015E                  __CFG_IESO$OFF 000000  
                __CFG_FOSC$HS1 000000                  __CFG_MCLRE$ON 000000                   ___ftmul@cntr 00E2  
                 ___param_bank 000010                   ___ftmul@sign 00E3                __end_of_BusyADC 243C  
              __end_of_ReadADC 242E                 ??_TM1640_Delay 0019                __end_of_OpenADC 1FF6  
                        ??_Run 002D                ??_ManageMessage 002C                 ??_TM1640_Start 001B  
                __CFG_RETEN$ON 000000                          ?_main 0001                __end_of___lbmod 21BA  
              __end_of_Sys_Cyc 015E                __end_of___ftdiv 1692                __end_of___lldiv 1D00  
              __end_of___ftmul 190A                __end_of___llmod 1E70                          _T0PS0 007EA8  
                        _T0PS1 007EA9                          _T0PS2 007EAA                          _RC2IF 007D25  
              __end_of___lwdiv 1FA8                __end_of___lwmod 2042                          i2l301 0124  
                        i2l293 00C8                          i2l298 00F6                          i2l956 1ECE  
            __end_of_ADC6_Init 241E                          _TMR0H 000FD7                          _TMR0L 000FD6  
                        _TRISD 000F95                          _TRISE 000F96                 ??_Key_ResetFSM 0019  
        ??_TM1640_Show_integer 0022                  __CFG_WRT0$OFF 000000                  __CFG_WRT1$OFF 000000  
                __CFG_WRT2$OFF 000000                  __CFG_WRT3$OFF 000000                  __CFG_WRT4$OFF 000000  
               __CFG_EBRT0$OFF 000000                  __CFG_WRT5$OFF 000000                 __CFG_EBRT1$OFF 000000  
                __CFG_WRT6$OFF 000000                 __CFG_EBRT2$OFF 000000                  __CFG_WRT7$OFF 000000  
               __CFG_EBRT3$OFF 000000                 __CFG_EBRT4$OFF 000000                 __CFG_FCMEN$OFF 000000  
               __CFG_EBRT5$OFF 000000                 __CFG_EBRT6$OFF 000000                 __CFG_EBRT7$OFF 000000  
                __CFG_WRTB$OFF 000000                  __CFG_WRTC$OFF 000000                  __CFG_WRTD$OFF 000000  
               __CFG_EBRTB$OFF 000000                  ___ftpack@sign 001D                     _ConvertADC 2452  
                        tablat 000FF5                          plusw2 000FDB                          status 000FD8  
           _TM1640_Writer_Byte 20D8            __end_of_Key_ReadFSM 1540            __end_of_Key_ScanFSM 208E  
           __size_ofi2___llmod 0070                __initialization 2298            __end_of_Init_TM1640 230A  
          __size_of_RS485_Init 001E                   __end_of_main 2246            ?_TM1640_Writer_Byte 0001  
             __end_of_Key_Init 2452               __end_of_Key_Scan 2150                     _Open2USART 1D00  
                       ??_main 002D                  __activetblptr 000001  RS485_ManageMessage@date_lenth 002B  
         ??_TM1640_Writer_Byte 001B                         _ADCON0 000FC2                         _ADCON1 000FC1  
                       _ADCON2 000FC0               ___llmod@dividend 0019                         _ADRESH 000FC4  
                       _ADRESL 000FC3                         _ANCON2 000F23                         _T08BIT 007EAE  
             __end_of___ftpack 1BCC                      ??_GetADC6 002D                __CFG_BBSIZ$BB2K 000000  
                       i2l2310 217E                         i2l2302 216C                         i2l2306 217A  
                       i2l2314 2182                         i2l2332 213A                         i2l2324 2126  
                       i2l2336 2144                         i2l2328 2130                         i2l2610 2310  
                       i2l2630 2062                         i2l2616 2320                         i2l2634 2070  
                       i2l2626 2054                         i2l2298 215E                         i2l2618 2326  
                       i2l2706 0114                         i2l2660 1E90                         i2l2638 207E  
                       i2l2646 21F2                         i2l2662 1E98                         i2l2666 1EBE  
                       i2l2658 1E82                         i2l2692 00DA                         i2l2688 00CC  
                SetTimer0@_tmr 0019                         _RCREG2 000F1D               __end_of___lwtoft 22E4  
                       _RCSTA2 000F22                    ?_Delay_1Khz 0001                         _TMR0IE 007F95  
                       _TMR0IF 007F92                         _SPBRG2 000F1E                         _TMR0ON 007EAF  
                TM1640_Delay@i 001A                      ??_BusyADC 0019                         _TXREG2 000F1C  
                    ??_ReadADC 001B                         _TXSTA2 000F21                  ??_Timer0_Init 001D  
                    ??_OpenADC 001B                   Sys_Cyc@_Byte 0039         TM1640_Writer_Byte@Date 001B  
                 Sys_Cyc@_flag 003A                 __CFG_XINST$OFF 000000                   Sys_Cyc@_temp 0018  
       TM1640_Writer_Byte@mask 001C        __size_of_RS485_SendDate 00A8                         ___wmul 2270  
               __CFG_STVREN$ON 000000                      ??___lbmod 001A                      ??_Sys_Cyc 000A  
                    ??___ftdiv 00EA                      ??___lldiv 0021                      ??___ftmul 002A  
                    ??___llmod 0021           Sys_Cyc@_overturn_LED 003B                      ??___lwdiv 001D  
           __size_of_SetTimer0 0030                      ??___lwmod 001D                     _ShowResult 1D84  
                       clear_0 229E                         clear_1 22AA           __size_of_TM1640_Stop 0024  
 __size_of_RS485_ManageMessage 038C          ___ftmul@f3_as_product 00DF                     _Pulse_1Khz 230A  
           __size_of_VerifyCRC 014A              __end_ofi2___llmod 1EE0                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
         __size_of_GPIO_Config 000C                    _Key_ReadFSM 139E            _TM1640_Writer_Dates 239C  
                  ?_ConvertADC 0001           __end_of_TM1640_Delay 23F6                    _Key_ScanFSM 2042  
RS485_ManageMessage@from_dress 00EF                ___lbmod@divisor 0019           __end_of_TM1640_Start 239C  
                   __accesstop 0060        __end_of__initialization 22B0                ___lbmod@counter 001B  
                  _Init_TM1640 22E4                   ?i2_SetTimer0 0001                  ___rparam_used 000001  
                   ___ftdiv@f1 00E4                     ___ftdiv@f2 00E7                     ___ftdiv@f3 00EE  
            i2___llmod@divisor 0005               Pulse_1Khz@_pulse 0004              i2___llmod@counter 0009  
         __end_of_Key_ResetFSM 20D8                     ___ftmul@f1 0024                     ___ftmul@f2 0027  
               __pcstackCOMRAM 0001                  Key_ResetFSM@t 0019           ?_TM1640_Writer_Dates 001E  
          __end_of_Timer0_Init 2354                    ?_Open2USART 0019                     ___lwtoft@c 0021  
          __size_of_Delay_1Khz 0038                   ??_RS485_Init 001C              __end_of_SetTimer0 21EA  
                   __pbssBANK0 0060                      ?_Key_Init 0001                      ?_Key_Scan 0001  
                  _ReceiveBuff 0060                __CFG_PLLCFG$OFF 000000        TM1640_Writer_Dates@Addr 001F  
           __end_of_LED_Number 1011        TM1640_Writer_Dates@Date 001E              __end_of_VerifyCRC 17DC  
        ??_TM1640_Writer_Dates 001F                        ?___wmul 0019             __end_of_RS485_Init 23DC  
                  ?_ShowResult 0001            __size_of_ConvertADC 0004                      ?___ftpack 0019  
                    ?___lwtoft 0021                    ?_Pulse_1Khz 0001                        _SPBRGH2 000F1F  
                    _ADC6_Init 240C              _ga_RS485_SendBuff 003E                        _GetADC6 1EE0  
                   ??_Key_Init 0019                     ??_Key_Scan 0001            __size_of_Open2USART 0084  
                      _BusyADC 242E                        _ReadADC 241E                __CFG_PWRTEN$OFF 000000  
                      _OpenADC 1FA8                        __Hparam 0000                    _Timer0_Init 2330  
                      __Lparam 0000                 _RS485_SendDate 1BCC                        ___lbmod 2188  
                      _Sys_Cyc 0008                        ___ftdiv 1540                        ___lldiv 1C74  
              __size_of___wmul 0028                        ___ftmul 17DC                        ___llmod 1E00  
                      ___lwdiv 1F4C                        ___lwmod 1FF6                   __psmallconst 1000  
  __end_of_TM1640_Show_integer 1A10                        __pcinit 2298                     ??___ftpack 001E  
                      __ramtop 1000          __end_of_ManageMessage 240C                        __ptext0 221A  
                      __ptext1 2330                        __ptext2 21BA                        __ptext3 1D84  
                      __ptext4 2270                        __ptext5 190A                        __ptext6 1FF6  
                      __ptext7 1F4C                        __ptext8 239C                        __ptext9 2246  
                   ??___lwtoft 0024                   __size_of_Run 002A               Open2USART@config 001B  
        __size_of_TM1640_Delay 001A              __CFG_MSSPMSK$MSK7 000000          __size_of_TM1640_Start 0024  
                   ?_ADC6_Init 0001                 OpenADC@config2 0019                 OpenADC@config3 001A  
         end_of_initialization 22B0                   ??_Delay_1Khz 0001            __size_of_ShowResult 007C  
        __size_of_Key_ResetFSM 004A            _RS485_ManageMessage 1012                ___lldiv@divisor 001D  
       __end_of_RS485_SendDate 1C74              _Key_ManageMessage 1A10                ___lldiv@counter 0025  
          __size_of_Pulse_1Khz 0026               _gs_Handle_Switch 0031           __size_ofi2_SetTimer0 0030  
           ?_Key_ManageMessage 0001                        postdec2 000FDD                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE                   _TM1640_Delay 23DC  
         ?_RS485_ManageMessage 0029                   _TM1640_Start 2378            ??_Key_ManageMessage 001F  
                    _PORTEbits 000F84               TM1640_Delay@Time 0019             __end_of_Delay_1Khz 2188  
             ___lbmod@dividend 001A                      _TRISCbits 000F94                      _TRISGbits 000F98  
                 _Key_ResetFSM 208E    __size_of_TM1640_Writer_Byte 003E                   ?_Key_ReadFSM 0001  
                    i2___llmod 1E70              __CFG_SOSCSEL$HIGH 000000                   ??_ConvertADC 0019  
                 ?_Key_ScanFSM 0001            VerifyCRC@date_lenth 0028                    ___lbmod@rem 001C  
                 ?_Init_TM1640 0001                    ___ftdiv@exp 00F1      __end_of_Key_ManageMessage 1B06  
           i2___llmod@dividend 0001             VerifyCRC@CRC_Value 00E3                ?_RS485_SendDate 0029  
                  ___ftmul@exp 00DE                  ??_TM1640_Stop 001B                 __end_of___wmul 2298  
        ??_RS485_ManageMessage 00E8                   ??_Open2USART 001B             __end_of_ConvertADC 2456  
                ??_GPIO_Config 0019            start_initialization 2298                    _g_Timer_Cyc 002D  
                  __end_of_Run 2270                    ??_ADC6_Init 001E                     ?i2___llmod 0001  
   TM1640_Show_integer@Numbers 0020                ___llmod@divisor 001D              __size_of_Key_Init 000A  
            __size_of_Key_Scan 003A                ___llmod@counter 0021                      _SetTimer0 21BA  
           __end_of_Open2USART 1D84                i2SetTimer0@_tmr 0001                       ??___wmul 001D  
                 ??_ShowResult 0022                      _VerifyCRC 1692            __end_of_TM1640_Stop 2378  
            __size_of___ftpack 00C6                   ??_Pulse_1Khz 0004                    __pbssCOMRAM 002D  
            __size_of___lwtoft 0026                  __pcstackBANK0 00DE                       ?_GetADC6 0001  
          __end_of_GPIO_Config 2448             __end_of_ShowResult 1E00     __size_of_Key_ManageMessage 00F6  
                     ?_BusyADC 0001                       ?_ReadADC 0019    __end_of_TM1640_Writer_Dates 23BE  
                   ?_SetTimer0 0019                       ?_OpenADC 0019                   ?_Timer0_Init 0001  
             ___lwdiv@dividend 0019              __CFG_CCP2MX$PORTC 000000             __end_of_Pulse_1Khz 2330  
                    __pintcode 0008                       ?___lbmod 0019                       ?_Sys_Cyc 0001  
                     ?___ftdiv 00E4                       ?___lldiv 0019                       ?___ftmul 0024  
                     ?___llmod 0019                       ?___lwdiv 0019                       ?___lwmod 0019  
                   ?_VerifyCRC 0026                    __smallconst 1000               ___lwdiv@quotient 001D  
                  ??i2___llmod 0009                Open2USART@spbrg 0019                _s_Local_Key_FSM 00C2  
         __size_of_Key_ReadFSM 01A2           __size_of_Key_ScanFSM 004C                 ___wmul@product 001D  
                OpenADC@config 001D                       _PIE1bits 000F9D                       _PIE3bits 000FA3  
         __size_of_Init_TM1640 0026                       _PIR1bits 000F9E                    _TM1640_Stop 2354  
                   _ADCON0bits 000FC2              ___wmul@multiplier 0019              VerifyCRC@CRC_Byte 00E7  
                  _GPIO_Config 243C                    Delay_1Khz@a 0001                    Delay_1Khz@b 0002  
                  Delay_1Khz@c 0003   __size_of_TM1640_Show_integer 0106    RS485_ManageMessage@DataBuff 0029  
                     _Key_Init 2448                       _Key_Scan 2116               ??_RS485_SendDate 002C  
             __size_of_GetADC6 006C                  ??i2_SetTimer0 0003         __size_of_ManageMessage 0016  
                  ??_SetTimer0 001B               __size_of_BusyADC 000E               __size_of_ReadADC 0010  
                     __Hrparam 0000               __size_of_OpenADC 004E                       __Lrparam 0000  
                 __Lsmallconst 1000             __CFG_BOREN$SBORDIS 000000              VerifyCRC@DataBuff 0026  
                  ??_VerifyCRC 00DE             Key_ReadFSM@key_num 001E       Pulse_1Khz@_overturn_1Khz 0038  
             __size_of___lbmod 0032               __size_of_Sys_Cyc 0156               __size_of___ftdiv 0152  
             __size_of___lldiv 008C               __size_of___ftmul 012E               __size_of___llmod 0070  
             __size_of___lwdiv 005C               __size_of___lwmod 004C                       ___ftpack 1B06  
                 _g_RS485_Byte 003C           _g_RS485_Receive_Flag 003D                       ___lwtoft 22BE  
               _gsa_Handle_Msg 006A     __end_of_TM1640_Writer_Byte 2116                ___lwdiv@divisor 001B  
              ___lwdiv@counter 001F                       __ptext10 1BCC                       __ptext11 1EE0  
                     __ptext20 1D00                       __ptext12 22BE                       __ptext21 23F6  
                     __ptext13 17DC                       __ptext30 2448                       __ptext22 1012  
                     __ptext14 1540                       __ptext31 22E4                       __ptext23 1692  
                     __ptext15 1B06                       __ptext40 1E70                       __ptext32 20D8  
                     __ptext24 1E00                       __ptext16 241E                       __ptext41 21EA  
                     __ptext33 2354                       __ptext25 1C74                       __ptext17 2452  
                     __ptext42 230A                       __ptext34 2378                       __ptext26 1A10  
                     __ptext18 242E                       __ptext43 2150                       __ptext35 23DC  
                     __ptext27 2188                       __ptext19 23BE                       __ptext44 2042  
                     __ptext36 243C                       __ptext28 208E                       __ptext45 2116  
                     __ptext37 240C                       __ptext29 139E                       __ptext38 1FA8  
                __size_of_main 002C            __CFG_RTCOSC$SOSCREF 000000    __end_of_RS485_ManageMessage 139E  
         __size_of_Timer0_Init 0024            __end_ofi2_SetTimer0 221A            __CFG_INTOSCSEL$HIGH 000000  
                   _LED_Number 1001                  _ManageMessage 23F6             __CFG_WDTEN$SWDTDIS 000000  
                   _INTCONbits 000FF2                     _RS485_Init 23BE                       intlevel2 0000  
             ___lwmod@dividend 0019               ___lldiv@dividend 0019                     _RCSTA2bits 000F22  
      Key_ReadFSM@key_num_mate 001D             __CFG_WDTPS$1048576 000000              _gs_Local_Key_User 00B0  
               ?_ManageMessage 0001           _ga_RS485_ReceiveBuff 00D4               ___lldiv@quotient 0021  
              ___lwmod@divisor 001B                ___lwmod@counter 001D            __CFG_BORPWR$ZPBORMV 000000  
           __size_of_ADC6_Init 0012                    i2_SetTimer0 21EA            _TM1640_Show_integer 190A  
