

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Dec 18 13:42:52 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F67K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    43  0000                     
    44                           	psect	idataBANK0
    45  0009A0                     __pidataBANK0:
    46                           	opt stack 0
    47                           
    48                           ;initializer for _LED_Number
    49  0009A0  3F                 	db	63
    50  0009A1  06                 	db	6
    51  0009A2  5B                 	db	91
    52  0009A3  4F                 	db	79
    53  0009A4  66                 	db	102
    54  0009A5  6D                 	db	109
    55  0009A6  7D                 	db	125
    56  0009A7  07                 	db	7
    57  0009A8  7F                 	db	127
    58  0009A9  6F                 	db	111
    59  0009AA  77                 	db	119
    60  0009AB  7C                 	db	124
    61  0009AC  39                 	db	57
    62  0009AD  5E                 	db	94
    63  0009AE  79                 	db	121
    64  0009AF  71                 	db	113
    65  0000                     _TXREG2	set	3868
    66  0000                     _TXSTA2bits	set	3873
    67  0000                     _ANSEL4	set	31020
    68  0000                     _ANSEL6	set	31022
    69  0000                     _ANSEL7	set	31023
    70  0000                     _ANSEL8	set	31008
    71  0000                     _ADCON0	set	4034
    72  0000                     _ADCON0bits	set	4034
    73  0000                     _ADCON1	set	4033
    74  0000                     _ADCON2	set	4032
    75  0000                     _ADRESH	set	4036
    76  0000                     _ADRESL	set	4035
    77  0000                     _INTCONbits	set	4082
    78  0000                     _PIE1bits	set	3997
    79  0000                     _PIR1bits	set	3998
    80  0000                     _PORTEbits	set	3972
    81  0000                     _RCREG1	set	4014
    82  0000                     _RCSTA1	set	4011
    83  0000                     _RCSTA1bits	set	4011
    84  0000                     _SPBRG1	set	4015
    85  0000                     _SPBRGH1	set	4052
    86  0000                     _TMR0H	set	4055
    87  0000                     _TMR0L	set	4054
    88  0000                     _TXSTA1	set	4012
    89  0000                     _TXSTA1bits	set	4012
    90  0000                     _GIE	set	32663
    91  0000                     _IPEN	set	32391
    92  0000                     _PSA	set	32427
    93  0000                     _RA4	set	31748
    94  0000                     _RA5	set	31749
    95  0000                     _RC0	set	31760
    96  0000                     _RC1	set	31761
    97  0000                     _RC1IF	set	31989
    98  0000                     _RD5	set	31773
    99  0000                     _RD6	set	31774
   100  0000                     _RF1	set	31785
   101  0000                     _RF2	set	31786
   102  0000                     _RF3	set	31787
   103  0000                     _T08BIT	set	32430
   104  0000                     _T0CS	set	32429
   105  0000                     _T0PS0	set	32424
   106  0000                     _T0PS1	set	32425
   107  0000                     _T0PS2	set	32426
   108  0000                     _T0SE	set	32428
   109  0000                     _TMR0IE	set	32661
   110  0000                     _TMR0IF	set	32658
   111  0000                     _TMR0ON	set	32431
   112  0000                     _TRISA4	set	31892
   113  0000                     _TRISA5	set	31893
   114  0000                     _TRISC0	set	31904
   115  0000                     _TRISC1	set	31905
   116  0000                     _TRISC6	set	31910
   117  0000                     _TRISC7	set	31911
   118  0000                     _TRISD5	set	31917
   119  0000                     _TRISD6	set	31918
   120  0000                     _TRISF1	set	31929
   121  0000                     _TRISF2	set	31930
   122  0000                     _TRISF3	set	31931
   123                           
   124                           ; #config settings
   125  0000                     
   126                           	psect	cinit
   127  0006F8                     __pcinit:
   128                           	opt stack 0
   129  0006F8                     start_initialization:
   130                           	opt stack 0
   131  0006F8                     __initialization:
   132                           	opt stack 0
   133                           
   134                           ; Clear objects allocated to BANK0 (100 bytes)
   135  0006F8  EE00  F060         	lfsr	0,__pbssBANK0
   136  0006FC  0E64               	movlw	100
   137  0006FE                     clear_0:
   138  0006FE  6AEE               	clrf	postinc0,c
   139  000700  06E8               	decf	wreg,f,c
   140  000702  E1FD               	bnz	clear_0
   141                           
   142                           ; Clear objects allocated to COMRAM (60 bytes)
   143  000704  EE00  F001         	lfsr	0,__pbssCOMRAM
   144  000708  0E3C               	movlw	60
   145  00070A                     clear_1:
   146  00070A  6AEE               	clrf	postinc0,c
   147  00070C  06E8               	decf	wreg,f,c
   148  00070E  E1FD               	bnz	clear_1
   149                           
   150                           ; Initialize objects allocated to BANK0 (16 bytes)
   151                           ; load TBLPTR registers with __pidataBANK0
   152  000710  0EA0               	movlw	low __pidataBANK0
   153  000712  6EF6               	movwf	tblptrl,c
   154  000714  0E09               	movlw	high __pidataBANK0
   155  000716  6EF7               	movwf	tblptrh,c
   156  000718  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   157  00071A  6EF8               	movwf	tblptru,c
   158  00071C  EE00  F0C4         	lfsr	0,__pdataBANK0
   159  000720  EE10 F010          	lfsr	1,16
   160  000724                     copy_data0:
   161  000724  0009               	tblrd		*+
   162  000726  CFF5 FFEE          	movff	tablat,postinc0
   163  00072A  50E5               	movf	postdec1,w,c
   164  00072C  50E1               	movf	fsr1l,w,c
   165  00072E  E1FA               	bnz	copy_data0
   166  000730                     end_of_initialization:
   167                           	opt stack 0
   168  000730                     __end_of__initialization:
   169                           	opt stack 0
   170  000730  0100               	movlb	0
   171  000732  EF17  F003         	goto	_main	;jump to C main() function
   172                           tblptru	equ	0xFF8
   173                           tblptrh	equ	0xFF7
   174                           tblptrl	equ	0xFF6
   175                           tablat	equ	0xFF5
   176                           postinc0	equ	0xFEE
   177                           wreg	equ	0xFE8
   178                           postdec1	equ	0xFE5
   179                           fsr1l	equ	0xFE1
   180                           
   181                           	psect	bssCOMRAM
   182  000001                     __pbssCOMRAM:
   183                           	opt stack 0
   184  000001                     _g_Timer_Cyc:
   185                           	opt stack 0
   186  000001                     	ds	4
   187  000005                     _gs_Handle_Switch:
   188                           	opt stack 0
   189  000005                     	ds	4
   190  000009                     _gf_ADC6_Buff:
   191                           	opt stack 0
   192  000009                     	ds	3
   193  00000C                     Pulse_1Khz@_overturn_1Khz:
   194                           	opt stack 0
   195  00000C                     	ds	1
   196  00000D                     Sys_Cyc@_Byte:
   197                           	opt stack 0
   198  00000D                     	ds	1
   199  00000E                     Sys_Cyc@_flag:
   200                           	opt stack 0
   201  00000E                     	ds	1
   202  00000F                     Sys_Cyc@_overturn_LED:
   203                           	opt stack 0
   204  00000F                     	ds	1
   205  000010                     _LED_BUS:
   206                           	opt stack 0
   207  000010                     	ds	1
   208  000011                     _g_RS485_Byte:
   209                           	opt stack 0
   210  000011                     	ds	1
   211  000012                     _g_RS485_Receive_Flag:
   212                           	opt stack 0
   213  000012                     	ds	1
   214  000013                     _gs_Local_Key_User:
   215                           	opt stack 0
   216  000013                     	ds	21
   217  000028                     _s_Local_Key_FSM:
   218                           	opt stack 0
   219  000028                     	ds	21
   220                           tblptru	equ	0xFF8
   221                           tblptrh	equ	0xFF7
   222                           tblptrl	equ	0xFF6
   223                           tablat	equ	0xFF5
   224                           postinc0	equ	0xFEE
   225                           wreg	equ	0xFE8
   226                           postdec1	equ	0xFE5
   227                           fsr1l	equ	0xFE1
   228                           
   229                           	psect	bssBANK0
   230  000060                     __pbssBANK0:
   231                           	opt stack 0
   232  000060                     _ReceiveBuff:
   233                           	opt stack 0
   234  000060                     	ds	10
   235  00006A                     _gsa_Handle_Msg:
   236                           	opt stack 0
   237  00006A                     	ds	70
   238  0000B0                     _ga_RS485_ReceiveBuff:
   239                           	opt stack 0
   240  0000B0                     	ds	10
   241  0000BA                     _ga_RS485_SendBuff:
   242                           	opt stack 0
   243  0000BA                     	ds	10
   244                           tblptru	equ	0xFF8
   245                           tblptrh	equ	0xFF7
   246                           tblptrl	equ	0xFF6
   247                           tablat	equ	0xFF5
   248                           postinc0	equ	0xFEE
   249                           wreg	equ	0xFE8
   250                           postdec1	equ	0xFE5
   251                           fsr1l	equ	0xFE1
   252                           
   253                           	psect	dataBANK0
   254  0000C4                     __pdataBANK0:
   255                           	opt stack 0
   256  0000C4                     _LED_Number:
   257                           	opt stack 0
   258  0000C4                     	ds	16
   259                           tblptru	equ	0xFF8
   260                           tblptrh	equ	0xFF7
   261                           tblptrl	equ	0xFF6
   262                           tablat	equ	0xFF5
   263                           postinc0	equ	0xFEE
   264                           wreg	equ	0xFE8
   265                           postdec1	equ	0xFE5
   266                           fsr1l	equ	0xFE1
   267                           
   268                           	psect	cstackBANK0
   269  0000D4                     __pcstackBANK0:
   270                           	opt stack 0
   271  0000D4                     ?___wmul:
   272                           	opt stack 0
   273  0000D4                     ?___lwdiv:
   274                           	opt stack 0
   275  0000D4                     ?___lwmod:
   276                           	opt stack 0
   277  0000D4                     LED_Control@_switch:
   278                           	opt stack 0
   279  0000D4                     TM1640_Delay@Time:
   280                           	opt stack 0
   281  0000D4                     OpenADC@config2:
   282                           	opt stack 0
   283  0000D4                     SetTimer0@_tmr:
   284                           	opt stack 0
   285  0000D4                     Open1USART@spbrg:
   286                           	opt stack 0
   287  0000D4                     ___wmul@multiplier:
   288                           	opt stack 0
   289  0000D4                     ___lwdiv@dividend:
   290                           	opt stack 0
   291  0000D4                     ___lwmod@dividend:
   292                           	opt stack 0
   293                           
   294                           ; 2 bytes @ 0x0
   295  0000D4                     	ds	1
   296  0000D5                     LED_Control@_LED_num:
   297                           	opt stack 0
   298  0000D5                     TM1640_Delay@i:
   299                           	opt stack 0
   300  0000D5                     OpenADC@config3:
   301                           	opt stack 0
   302                           
   303                           ; 1 bytes @ 0x1
   304  0000D5                     	ds	1
   305  0000D6                     ??_SetTimer0:
   306  0000D6                     ??_OpenADC:
   307  0000D6                     TM1640_Writer_Byte@Date:
   308                           	opt stack 0
   309  0000D6                     Open1USART@config:
   310                           	opt stack 0
   311  0000D6                     ___wmul@multiplicand:
   312                           	opt stack 0
   313  0000D6                     ___lwdiv@divisor:
   314                           	opt stack 0
   315  0000D6                     ___lwmod@divisor:
   316                           	opt stack 0
   317                           
   318                           ; 2 bytes @ 0x2
   319  0000D6                     	ds	1
   320  0000D7                     TM1640_Writer_Byte@mask:
   321                           	opt stack 0
   322                           
   323                           ; 1 bytes @ 0x3
   324  0000D7                     	ds	1
   325  0000D8                     OpenADC@config:
   326                           	opt stack 0
   327  0000D8                     ___lwdiv@counter:
   328                           	opt stack 0
   329  0000D8                     ___lwmod@counter:
   330                           	opt stack 0
   331  0000D8                     ___wmul@product:
   332                           	opt stack 0
   333                           
   334                           ; 2 bytes @ 0x4
   335  0000D8                     	ds	1
   336  0000D9                     TM1640_Writer_Dates@Date:
   337                           	opt stack 0
   338  0000D9                     ___lwdiv@quotient:
   339                           	opt stack 0
   340                           
   341                           ; 2 bytes @ 0x5
   342  0000D9                     	ds	1
   343  0000DA                     TM1640_Writer_Dates@Addr:
   344                           	opt stack 0
   345                           
   346                           ; 1 bytes @ 0x6
   347  0000DA                     	ds	1
   348  0000DB                     TM1640_Show_integer@Numbers:
   349                           	opt stack 0
   350                           
   351                           ; 2 bytes @ 0x7
   352  0000DB                     	ds	2
   353  0000DD                     ??_ShowResult:
   354  0000DD                     
   355                           ; 0 bytes @ 0x9
   356  0000DD                     	ds	1
   357  0000DE                     tblptru	equ	0xFF8
   358                           tblptrh	equ	0xFF7
   359                           tblptrl	equ	0xFF6
   360                           tablat	equ	0xFF5
   361                           postinc0	equ	0xFEE
   362                           wreg	equ	0xFE8
   363                           postdec1	equ	0xFE5
   364                           fsr1l	equ	0xFE1
   365                           
   366                           ; 0 bytes @ 0xA
   367                           
   368                           	psect	cstackCOMRAM
   369  00003D                     __pcstackCOMRAM:
   370                           	opt stack 0
   371  00003D                     ?___llmod:
   372                           	opt stack 0
   373  00003D                     Delay_1Khz@a:
   374                           	opt stack 0
   375  00003D                     i2LED_Control@_switch:
   376                           	opt stack 0
   377  00003D                     i2SetTimer0@_tmr:
   378                           	opt stack 0
   379  00003D                     ___llmod@dividend:
   380                           	opt stack 0
   381                           
   382                           ; 4 bytes @ 0x0
   383  00003D                     	ds	1
   384  00003E                     Delay_1Khz@b:
   385                           	opt stack 0
   386  00003E                     i2LED_Control@_LED_num:
   387                           	opt stack 0
   388                           
   389                           ; 1 bytes @ 0x1
   390  00003E                     	ds	1
   391  00003F                     ??i2_SetTimer0:
   392  00003F                     Delay_1Khz@c:
   393                           	opt stack 0
   394                           
   395                           ; 1 bytes @ 0x2
   396  00003F                     	ds	1
   397  000040                     Pulse_1Khz@_pulse:
   398                           	opt stack 0
   399                           
   400                           ; 1 bytes @ 0x3
   401  000040                     	ds	1
   402  000041                     ___llmod@divisor:
   403                           	opt stack 0
   404                           
   405                           ; 4 bytes @ 0x4
   406  000041                     	ds	4
   407  000045                     ___llmod@counter:
   408                           	opt stack 0
   409                           
   410                           ; 1 bytes @ 0x8
   411  000045                     	ds	1
   412  000046                     ??_Sys_Cyc:
   413                           
   414                           ; 0 bytes @ 0x9
   415  000046                     	ds	14
   416  000054                     Sys_Cyc@_temp:
   417                           	opt stack 0
   418                           
   419                           ; 1 bytes @ 0x17
   420  000054                     	ds	1
   421                           tblptru	equ	0xFF8
   422                           tblptrh	equ	0xFF7
   423                           tblptrl	equ	0xFF6
   424                           tablat	equ	0xFF5
   425                           postinc0	equ	0xFEE
   426                           wreg	equ	0xFE8
   427                           postdec1	equ	0xFE5
   428                           fsr1l	equ	0xFE1
   429                           
   430 ;;
   431 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   432 ;;
   433 ;; *************** function _main *****************
   434 ;; Defined at:
   435 ;;		line 38 in file "_01_USER/main.c"
   436 ;; Parameters:    Size  Location     Type
   437 ;;		None
   438 ;; Auto vars:     Size  Location     Type
   439 ;;		None
   440 ;; Return value:  Size  Location     Type
   441 ;;                  2   20[None  ] int 
   442 ;; Registers used:
   443 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   444 ;; Tracked objects:
   445 ;;		On entry : 0/0
   446 ;;		On exit  : 0/0
   447 ;;		Unchanged: 0/0
   448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   453 ;;Total ram usage:        0 bytes
   454 ;; Hardware stack levels required when called:    8
   455 ;; This function calls:
   456 ;;		_ADC6_Init
   457 ;;		_GPIO_Config
   458 ;;		_Init_TM1640
   459 ;;		_Key_Init
   460 ;;		_LED_Control
   461 ;;		_RS485_Init
   462 ;;		_ShowResult
   463 ;;		_Timer0_Init
   464 ;; This function is called by:
   465 ;;		Startup code after reset
   466 ;; This function uses a non-reentrant model
   467 ;;
   468                           
   469                           	psect	text0
   470  00062E                     __ptext0:
   471                           	opt stack 0
   472  00062E                     _main:
   473                           	opt stack 23
   474                           
   475                           ;main.c: 43: GPIO_Config();
   476                           
   477                           ;incstack = 0
   478  00062E  ECD8  F004         	call	_GPIO_Config	;wreg free
   479                           
   480                           ;main.c: 44: Key_Init();
   481  000632  ECA9  F004         	call	_Key_Init	;wreg free
   482                           
   483                           ;main.c: 45: Timer0_Init();
   484  000636  EC3A  F004         	call	_Timer0_Init	;wreg free
   485                           
   486                           ;main.c: 46: Init_TM1640();
   487  00063A  EC4D  F004         	call	_Init_TM1640	;wreg free
   488                           
   489                           ;main.c: 47: ADC6_Init();
   490  00063E  ECC5  F004         	call	_ADC6_Init	;wreg free
   491                           
   492                           ;main.c: 48: RS485_Init();
   493  000642  ECB8  F004         	call	_RS485_Init	;wreg free
   494  000646  D000               	goto	l3130
   495  000648                     l3130:
   496                           
   497                           ;main.c: 52: {
   498                           ;main.c: 53: if(RF3 == 0) LED_Control(1,1); else LED_Control(1,0);
   499  000648  B685               	btfsc	3973,3,c	;volatile
   500  00064A  D007               	goto	l3134
   501  00064C  0E01               	movlw	1
   502  00064E  0100               	movlb	0	; () banked
   503  000650  6FD4               	movwf	LED_Control@_switch& (0+255),b
   504  000652  0E01               	movlw	1
   505  000654  ECC5  F002         	call	_LED_Control
   506  000658  D007               	goto	l3136
   507  00065A                     l3134:
   508  00065A  0E00               	movlw	0
   509  00065C  0100               	movlb	0	; () banked
   510  00065E  6FD4               	movwf	LED_Control@_switch& (0+255),b
   511  000660  0E01               	movlw	1
   512  000662  ECC5  F002         	call	_LED_Control
   513  000666  D000               	goto	l3136
   514  000668                     l3136:
   515                           
   516                           ;main.c: 56: ShowResult();
   517  000668  EC4B  F001         	call	_ShowResult	;wreg free
   518  00066C  D7ED               	goto	l3130
   519                           
   520                           ;main.c: 58: }
   521                           ;main.c: 60: return 0;
   522                           ;	Return value of _main is never used
   523  00066E  EFB7  F000         	goto	start
   524  000672                     __end_of_main:
   525                           	opt stack 0
   526                           tblptru	equ	0xFF8
   527                           tblptrh	equ	0xFF7
   528                           tblptrl	equ	0xFF6
   529                           tablat	equ	0xFF5
   530                           postinc0	equ	0xFEE
   531                           wreg	equ	0xFE8
   532                           postdec1	equ	0xFE5
   533                           fsr1l	equ	0xFE1
   534                           
   535 ;; *************** function _Timer0_Init *****************
   536 ;; Defined at:
   537 ;;		line 43 in file "_01_USER/My_Timer.c"
   538 ;; Parameters:    Size  Location     Type
   539 ;;		None
   540 ;; Auto vars:     Size  Location     Type
   541 ;;		None
   542 ;; Return value:  Size  Location     Type
   543 ;;		None               void
   544 ;; Registers used:
   545 ;;		wreg, status,2, status,0, cstack
   546 ;; Tracked objects:
   547 ;;		On entry : 0/0
   548 ;;		On exit  : 0/0
   549 ;;		Unchanged: 0/0
   550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   555 ;;Total ram usage:        0 bytes
   556 ;; Hardware stack levels used:    1
   557 ;; Hardware stack levels required when called:    4
   558 ;; This function calls:
   559 ;;		_SetTimer0
   560 ;; This function is called by:
   561 ;;		_main
   562 ;; This function uses a non-reentrant model
   563 ;;
   564                           
   565                           	psect	text1
   566  000874                     __ptext1:
   567                           	opt stack 0
   568  000874                     _Timer0_Init:
   569                           	opt stack 26
   570                           
   571                           ;My_Timer.c: 45: T08BIT = 0;
   572                           
   573                           ;incstack = 0
   574  000874  9CD5               	bcf	4053,6,c	;volatile
   575                           
   576                           ;My_Timer.c: 46: T0CS = 0;
   577  000876  9AD5               	bcf	4053,5,c	;volatile
   578                           
   579                           ;My_Timer.c: 47: T0SE = 0;
   580  000878  98D5               	bcf	4053,4,c	;volatile
   581                           
   582                           ;My_Timer.c: 48: PSA = 0;
   583  00087A  96D5               	bcf	4053,3,c	;volatile
   584                           
   585                           ;My_Timer.c: 49: T0PS2 = 1;
   586  00087C  84D5               	bsf	4053,2,c	;volatile
   587                           
   588                           ;My_Timer.c: 50: T0PS1 = 1;
   589  00087E  82D5               	bsf	4053,1,c	;volatile
   590                           
   591                           ;My_Timer.c: 51: T0PS0 = 1;
   592  000880  80D5               	bsf	4053,0,c	;volatile
   593                           
   594                           ;My_Timer.c: 65: SetTimer0(1);
   595  000882  0E00               	movlw	0
   596  000884  0100               	movlb	0	; () banked
   597  000886  6FD5               	movwf	(SetTimer0@_tmr+1)& (0+255),b
   598  000888  0E01               	movlw	1
   599  00088A  6FD4               	movwf	SetTimer0@_tmr& (0+255),b
   600  00088C  EC9B  F003         	call	_SetTimer0	;wreg free
   601                           
   602                           ;My_Timer.c: 66: TMR0ON = 1;
   603  000890  8ED5               	bsf	4053,7,c	;volatile
   604                           
   605                           ;My_Timer.c: 67: TMR0IE = 1;
   606  000892  8AF2               	bsf	intcon,5,c	;volatile
   607                           
   608                           ;My_Timer.c: 68: IPEN = 0;GIE = 1;
   609  000894  9ED0               	bcf	4048,7,c	;volatile
   610  000896  8EF2               	bsf	intcon,7,c	;volatile
   611  000898  0012               	return		;funcret
   612  00089A                     __end_of_Timer0_Init:
   613                           	opt stack 0
   614                           tblptru	equ	0xFF8
   615                           tblptrh	equ	0xFF7
   616                           tblptrl	equ	0xFF6
   617                           tablat	equ	0xFF5
   618                           intcon	equ	0xFF2
   619                           postinc0	equ	0xFEE
   620                           wreg	equ	0xFE8
   621                           postdec1	equ	0xFE5
   622                           fsr1l	equ	0xFE1
   623                           
   624 ;; *************** function _SetTimer0 *****************
   625 ;; Defined at:
   626 ;;		line 81 in file "_01_USER/My_Timer.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;  _tmr            2    0[BANK0 ] unsigned int 
   629 ;; Auto vars:     Size  Location     Type
   630 ;;		None
   631 ;; Return value:  Size  Location     Type
   632 ;;		None               void
   633 ;; Registers used:
   634 ;;		wreg, status,2, status,0
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   640 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   642 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   643 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   644 ;;Total ram usage:        4 bytes
   645 ;; Hardware stack levels used:    1
   646 ;; Hardware stack levels required when called:    3
   647 ;; This function calls:
   648 ;;		Nothing
   649 ;; This function is called by:
   650 ;;		_Timer0_Init
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           	psect	text2
   655  000736                     __ptext2:
   656                           	opt stack 0
   657  000736                     _SetTimer0:
   658                           	opt stack 26
   659                           
   660                           ;My_Timer.c: 83: if(_tmr > 0xffff) _tmr = 0xffff;
   661                           
   662                           ;incstack = 0
   663  000736  D004               	goto	l3040
   664  000738  0100               	movlb	0	; () banked
   665  00073A  69D4               	setf	SetTimer0@_tmr& (0+255),b
   666  00073C  69D5               	setf	(SetTimer0@_tmr+1)& (0+255),b
   667  00073E  D000               	goto	l3040
   668  000740                     l3040:
   669                           
   670                           ;My_Timer.c: 84: _tmr=0xffff-_tmr;
   671  000740  C0D4  F0D6         	movff	SetTimer0@_tmr,??_SetTimer0
   672  000744  C0D5  F0D7         	movff	SetTimer0@_tmr+1,??_SetTimer0+1
   673  000748  0100               	movlb	0	; () banked
   674  00074A  1FD6               	comf	??_SetTimer0& (0+255),f,b
   675  00074C  1FD7               	comf	(??_SetTimer0+1)& (0+255),f,b
   676  00074E  4BD6               	infsnz	??_SetTimer0& (0+255),f,b
   677  000750  2BD7               	incf	(??_SetTimer0+1)& (0+255),f,b
   678  000752  0EFF               	movlw	255
   679  000754  0100               	movlb	0	; () banked
   680  000756  25D6               	addwf	??_SetTimer0& (0+255),w,b
   681  000758  0100               	movlb	0	; () banked
   682  00075A  6FD4               	movwf	SetTimer0@_tmr& (0+255),b
   683  00075C  0EFF               	movlw	255
   684  00075E  0100               	movlb	0	; () banked
   685  000760  21D7               	addwfc	(??_SetTimer0+1)& (0+255),w,b
   686  000762  0100               	movlb	0	; () banked
   687  000764  6FD5               	movwf	(SetTimer0@_tmr+1)& (0+255),b
   688                           
   689                           ; BSR set to: 0
   690                           ;My_Timer.c: 85: TMR0H = _tmr/256;
   691  000766  0100               	movlb	0	; () banked
   692  000768  51D5               	movf	(SetTimer0@_tmr+1)& (0+255),w,b
   693  00076A  6ED7               	movwf	4055,c	;volatile
   694                           
   695                           ; BSR set to: 0
   696                           ;My_Timer.c: 86: TMR0L = _tmr%256;
   697  00076C  C0D4  FFD6         	movff	SetTimer0@_tmr,4054	;volatile
   698                           
   699                           ; BSR set to: 0
   700                           ;My_Timer.c: 87: TMR0IF = 0;
   701  000770  94F2               	bcf	intcon,2,c	;volatile
   702                           
   703                           ; BSR set to: 0
   704  000772  0012               	return		;funcret
   705  000774                     __end_of_SetTimer0:
   706                           	opt stack 0
   707                           tblptru	equ	0xFF8
   708                           tblptrh	equ	0xFF7
   709                           tblptrl	equ	0xFF6
   710                           tablat	equ	0xFF5
   711                           intcon	equ	0xFF2
   712                           postinc0	equ	0xFEE
   713                           wreg	equ	0xFE8
   714                           postdec1	equ	0xFE5
   715                           fsr1l	equ	0xFE1
   716                           
   717 ;; *************** function _ShowResult *****************
   718 ;; Defined at:
   719 ;;		line 96 in file "_01_USER/Run.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;		None
   722 ;; Auto vars:     Size  Location     Type
   723 ;;		None
   724 ;; Return value:  Size  Location     Type
   725 ;;		None               void
   726 ;; Registers used:
   727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   735 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   736 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   737 ;;Total ram usage:        1 bytes
   738 ;; Hardware stack levels used:    1
   739 ;; Hardware stack levels required when called:    7
   740 ;; This function calls:
   741 ;;		_LED_Control
   742 ;;		_TM1640_Show_integer
   743 ;;		_TM1640_Writer_Dates
   744 ;;		___wmul
   745 ;; This function is called by:
   746 ;;		_main
   747 ;; This function uses a non-reentrant model
   748 ;;
   749                           
   750                           	psect	text3
   751  000296                     __ptext3:
   752                           	opt stack 0
   753  000296                     _ShowResult:
   754                           	opt stack 23
   755                           
   756                           ;Run.c: 98: if( gs_Handle_Switch.Show_Send_Receive )
   757                           
   758                           ; BSR set to: 0
   759                           ;incstack = 0
   760  000296  5008               	movf	_gs_Handle_Switch+3,w,c
   761  000298  B4D8               	btfsc	status,2,c
   762  00029A  D02A               	goto	l3114
   763                           
   764                           ;Run.c: 99: {
   765                           ;Run.c: 100: TM1640_Show_integer( ga_RS485_SendBuff[g_RS485_Byte] + (g_RS485_Byte * 1000
      +                          ) );
   766  00029C  C011  F0D4         	movff	_g_RS485_Byte,___wmul@multiplier
   767  0002A0  0100               	movlb	0	; () banked
   768  0002A2  6BD5               	clrf	(___wmul@multiplier+1)& (0+255),b
   769  0002A4  0E03               	movlw	3
   770  0002A6  0100               	movlb	0	; () banked
   771  0002A8  6FD7               	movwf	(___wmul@multiplicand+1)& (0+255),b
   772  0002AA  0EE8               	movlw	232
   773  0002AC  6FD6               	movwf	___wmul@multiplicand& (0+255),b
   774  0002AE  ECBA  F003         	call	___wmul	;wreg free
   775  0002B2  5011               	movf	_g_RS485_Byte,w,c
   776  0002B4  0D01               	mullw	1
   777  0002B6  0EBA               	movlw	low _ga_RS485_SendBuff
   778  0002B8  24F3               	addwf	prodl,w,c
   779  0002BA  6ED9               	movwf	fsr2l,c
   780  0002BC  0E00               	movlw	high _ga_RS485_SendBuff
   781  0002BE  20F4               	addwfc	prodh,w,c
   782  0002C0  6EDA               	movwf	fsr2h,c
   783  0002C2  50DF               	movf	indf2,w,c
   784  0002C4  0100               	movlb	0	; () banked
   785  0002C6  6FDD               	movwf	??_ShowResult& (0+255),b
   786  0002C8  0100               	movlb	0	; () banked
   787  0002CA  51DD               	movf	??_ShowResult& (0+255),w,b
   788  0002CC  0100               	movlb	0	; () banked
   789  0002CE  25D4               	addwf	?___wmul& (0+255),w,b
   790  0002D0  0100               	movlb	0	; () banked
   791  0002D2  6FDB               	movwf	TM1640_Show_integer@Numbers& (0+255),b
   792  0002D4  0E00               	movlw	0
   793  0002D6  0100               	movlb	0	; () banked
   794  0002D8  21D5               	addwfc	(?___wmul+1)& (0+255),w,b
   795  0002DA  0100               	movlb	0	; () banked
   796  0002DC  6FDC               	movwf	(TM1640_Show_integer@Numbers+1)& (0+255),b
   797  0002DE  ECB9  F000         	call	_TM1640_Show_integer	;wreg free
   798                           
   799                           ;Run.c: 101: LED_Control(1,1);
   800  0002E2  0E01               	movlw	1
   801  0002E4  0100               	movlb	0	; () banked
   802  0002E6  6FD4               	movwf	LED_Control@_switch& (0+255),b
   803  0002E8  0E01               	movlw	1
   804  0002EA  ECC5  F002         	call	_LED_Control
   805                           
   806                           ;Run.c: 102: }
   807  0002EE  D02A               	goto	l3118
   808  0002F0                     l3114:
   809                           
   810                           ;Run.c: 104: else
   811                           ;Run.c: 105: {
   812                           ;Run.c: 106: TM1640_Show_integer( ga_RS485_ReceiveBuff[g_RS485_Byte] + (g_RS485_Byte * 1
      +                          000) );
   813  0002F0  C011  F0D4         	movff	_g_RS485_Byte,___wmul@multiplier
   814  0002F4  0100               	movlb	0	; () banked
   815  0002F6  6BD5               	clrf	(___wmul@multiplier+1)& (0+255),b
   816  0002F8  0E03               	movlw	3
   817  0002FA  0100               	movlb	0	; () banked
   818  0002FC  6FD7               	movwf	(___wmul@multiplicand+1)& (0+255),b
   819  0002FE  0EE8               	movlw	232
   820  000300  6FD6               	movwf	___wmul@multiplicand& (0+255),b
   821  000302  ECBA  F003         	call	___wmul	;wreg free
   822  000306  5011               	movf	_g_RS485_Byte,w,c
   823  000308  0D01               	mullw	1
   824  00030A  0EB0               	movlw	low _ga_RS485_ReceiveBuff
   825  00030C  24F3               	addwf	prodl,w,c
   826  00030E  6ED9               	movwf	fsr2l,c
   827  000310  0E00               	movlw	high _ga_RS485_ReceiveBuff
   828  000312  20F4               	addwfc	prodh,w,c
   829  000314  6EDA               	movwf	fsr2h,c
   830  000316  50DF               	movf	indf2,w,c
   831  000318  0100               	movlb	0	; () banked
   832  00031A  6FDD               	movwf	??_ShowResult& (0+255),b
   833  00031C  0100               	movlb	0	; () banked
   834  00031E  51DD               	movf	??_ShowResult& (0+255),w,b
   835  000320  0100               	movlb	0	; () banked
   836  000322  25D4               	addwf	?___wmul& (0+255),w,b
   837  000324  0100               	movlb	0	; () banked
   838  000326  6FDB               	movwf	TM1640_Show_integer@Numbers& (0+255),b
   839  000328  0E00               	movlw	0
   840  00032A  0100               	movlb	0	; () banked
   841  00032C  21D5               	addwfc	(?___wmul+1)& (0+255),w,b
   842  00032E  0100               	movlb	0	; () banked
   843  000330  6FDC               	movwf	(TM1640_Show_integer@Numbers+1)& (0+255),b
   844  000332  ECB9  F000         	call	_TM1640_Show_integer	;wreg free
   845                           
   846                           ;Run.c: 107: LED_Control(1,0);
   847  000336  0E00               	movlw	0
   848  000338  0100               	movlb	0	; () banked
   849  00033A  6FD4               	movwf	LED_Control@_switch& (0+255),b
   850  00033C  0E01               	movlw	1
   851  00033E  ECC5  F002         	call	_LED_Control
   852  000342  D000               	goto	l3118
   853  000344                     l3118:
   854                           
   855                           ;Run.c: 108: }
   856                           ;Run.c: 110: TM1640_Writer_Dates(4, LED_BUS);
   857  000344  C010  F0D9         	movff	_LED_BUS,TM1640_Writer_Dates@Date
   858  000348  0E04               	movlw	4
   859  00034A  EC25  F004         	call	_TM1640_Writer_Dates
   860  00034E  0012               	return		;funcret
   861  000350                     __end_of_ShowResult:
   862                           	opt stack 0
   863                           tblptru	equ	0xFF8
   864                           tblptrh	equ	0xFF7
   865                           tblptrl	equ	0xFF6
   866                           tablat	equ	0xFF5
   867                           prodh	equ	0xFF4
   868                           prodl	equ	0xFF3
   869                           intcon	equ	0xFF2
   870                           postinc0	equ	0xFEE
   871                           wreg	equ	0xFE8
   872                           postdec1	equ	0xFE5
   873                           fsr1l	equ	0xFE1
   874                           indf2	equ	0xFDF
   875                           fsr2h	equ	0xFDA
   876                           fsr2l	equ	0xFD9
   877                           status	equ	0xFD8
   878                           
   879 ;; *************** function ___wmul *****************
   880 ;; Defined at:
   881 ;;		line 15 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;  multiplier      2    0[BANK0 ] unsigned int 
   884 ;;  multiplicand    2    2[BANK0 ] unsigned int 
   885 ;; Auto vars:     Size  Location     Type
   886 ;;  product         2    4[BANK0 ] unsigned int 
   887 ;; Return value:  Size  Location     Type
   888 ;;                  2    0[BANK0 ] unsigned int 
   889 ;; Registers used:
   890 ;;		wreg, status,2, status,0, prodl, prodh
   891 ;; Tracked objects:
   892 ;;		On entry : 0/0
   893 ;;		On exit  : 0/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   896 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   897 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   899 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   900 ;;Total ram usage:        6 bytes
   901 ;; Hardware stack levels used:    1
   902 ;; Hardware stack levels required when called:    3
   903 ;; This function calls:
   904 ;;		Nothing
   905 ;; This function is called by:
   906 ;;		_ShowResult
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910                           	psect	text4
   911  000774                     __ptext4:
   912                           	opt stack 0
   913  000774                     ___wmul:
   914                           	opt stack 26
   915                           
   916                           ;incstack = 0
   917  000774  0100               	movlb	0	; () banked
   918  000776  51D4               	movf	___wmul@multiplier& (0+255),w,b
   919  000778  0100               	movlb	0	; () banked
   920  00077A  03D6               	mulwf	___wmul@multiplicand& (0+255),b
   921  00077C  CFF3 F0D8          	movff	prodl,___wmul@product
   922  000780  CFF4 F0D9          	movff	prodh,___wmul@product+1
   923  000784  0100               	movlb	0	; () banked
   924  000786  51D4               	movf	___wmul@multiplier& (0+255),w,b
   925  000788  0100               	movlb	0	; () banked
   926  00078A  03D7               	mulwf	(___wmul@multiplicand+1)& (0+255),b
   927  00078C  50F3               	movf	prodl,w,c
   928  00078E  0100               	movlb	0	; () banked
   929  000790  27D9               	addwf	(___wmul@product+1)& (0+255),f,b
   930  000792  0100               	movlb	0	; () banked
   931  000794  51D5               	movf	(___wmul@multiplier+1)& (0+255),w,b
   932  000796  0100               	movlb	0	; () banked
   933  000798  03D6               	mulwf	___wmul@multiplicand& (0+255),b
   934  00079A  50F3               	movf	prodl,w,c
   935  00079C  0100               	movlb	0	; () banked
   936  00079E  27D9               	addwf	(___wmul@product+1)& (0+255),f,b
   937                           
   938                           ; BSR set to: 0
   939  0007A0  C0D8  F0D4         	movff	___wmul@product,?___wmul
   940  0007A4  C0D9  F0D5         	movff	___wmul@product+1,?___wmul+1
   941  0007A8  0012               	return	
   942                           
   943                           ; BSR set to: 0
   944                           
   945                           ; BSR set to: 0
   946  0007AA  0012               	return		;funcret
   947  0007AC                     __end_of___wmul:
   948                           	opt stack 0
   949                           tblptru	equ	0xFF8
   950                           tblptrh	equ	0xFF7
   951                           tblptrl	equ	0xFF6
   952                           tablat	equ	0xFF5
   953                           prodh	equ	0xFF4
   954                           prodl	equ	0xFF3
   955                           intcon	equ	0xFF2
   956                           postinc0	equ	0xFEE
   957                           wreg	equ	0xFE8
   958                           postdec1	equ	0xFE5
   959                           fsr1l	equ	0xFE1
   960                           indf2	equ	0xFDF
   961                           fsr2h	equ	0xFDA
   962                           fsr2l	equ	0xFD9
   963                           status	equ	0xFD8
   964                           
   965 ;; *************** function _TM1640_Show_integer *****************
   966 ;; Defined at:
   967 ;;		line 206 in file "_01_USER/TM1640.c"
   968 ;; Parameters:    Size  Location     Type
   969 ;;  Numbers         2    7[BANK0 ] unsigned int 
   970 ;; Auto vars:     Size  Location     Type
   971 ;;		None
   972 ;; Return value:  Size  Location     Type
   973 ;;		None               void
   974 ;; Registers used:
   975 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   976 ;; Tracked objects:
   977 ;;		On entry : 0/0
   978 ;;		On exit  : 0/0
   979 ;;		Unchanged: 0/0
   980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   981 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   984 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   985 ;;Total ram usage:        2 bytes
   986 ;; Hardware stack levels used:    1
   987 ;; Hardware stack levels required when called:    6
   988 ;; This function calls:
   989 ;;		_TM1640_Writer_Dates
   990 ;;		___lwdiv
   991 ;;		___lwmod
   992 ;; This function is called by:
   993 ;;		_ShowResult
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           	psect	text5
   998  000172                     __ptext5:
   999                           	opt stack 0
  1000  000172                     _TM1640_Show_integer:
  1001                           	opt stack 23
  1002                           
  1003                           ;TM1640.c: 209: TM1640_Writer_Dates(3,LED_Number[Numbers%10]); Numbers/=10;
  1004                           
  1005                           ; BSR set to: 0
  1006                           ;incstack = 0
  1007  000172  C0DB  F0D4         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1008  000176  C0DC  F0D5         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1009  00017A  0E00               	movlw	0
  1010  00017C  0100               	movlb	0	; () banked
  1011  00017E  6FD7               	movwf	(___lwmod@divisor+1)& (0+255),b
  1012  000180  0E0A               	movlw	10
  1013  000182  6FD6               	movwf	___lwmod@divisor& (0+255),b
  1014  000184  EC5D  F002         	call	___lwmod	;wreg free
  1015  000188  0EC4               	movlw	low _LED_Number
  1016  00018A  0100               	movlb	0	; () banked
  1017  00018C  25D4               	addwf	?___lwmod& (0+255),w,b
  1018  00018E  6ED9               	movwf	fsr2l,c
  1019  000190  0E00               	movlw	high _LED_Number
  1020  000192  0100               	movlb	0	; () banked
  1021  000194  21D5               	addwfc	(?___lwmod+1)& (0+255),w,b
  1022  000196  6EDA               	movwf	fsr2h,c
  1023  000198  50DF               	movf	indf2,w,c
  1024  00019A  0100               	movlb	0	; () banked
  1025  00019C  6FD9               	movwf	TM1640_Writer_Dates@Date& (0+255),b
  1026  00019E  0E03               	movlw	3
  1027  0001A0  EC25  F004         	call	_TM1640_Writer_Dates
  1028  0001A4  C0DB  F0D4         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1029  0001A8  C0DC  F0D5         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1030  0001AC  0E00               	movlw	0
  1031  0001AE  0100               	movlb	0	; () banked
  1032  0001B0  6FD7               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1033  0001B2  0E0A               	movlw	10
  1034  0001B4  6FD6               	movwf	___lwdiv@divisor& (0+255),b
  1035  0001B6  ECA8  F001         	call	___lwdiv	;wreg free
  1036  0001BA  C0D4  F0DB         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1037  0001BE  C0D5  F0DC         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1038                           
  1039                           ;TM1640.c: 210: TM1640_Writer_Dates(2,LED_Number[Numbers%10]); Numbers/=10;
  1040  0001C2  C0DB  F0D4         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1041  0001C6  C0DC  F0D5         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1042  0001CA  0E00               	movlw	0
  1043  0001CC  0100               	movlb	0	; () banked
  1044  0001CE  6FD7               	movwf	(___lwmod@divisor+1)& (0+255),b
  1045  0001D0  0E0A               	movlw	10
  1046  0001D2  6FD6               	movwf	___lwmod@divisor& (0+255),b
  1047  0001D4  EC5D  F002         	call	___lwmod	;wreg free
  1048  0001D8  0EC4               	movlw	low _LED_Number
  1049  0001DA  0100               	movlb	0	; () banked
  1050  0001DC  25D4               	addwf	?___lwmod& (0+255),w,b
  1051  0001DE  6ED9               	movwf	fsr2l,c
  1052  0001E0  0E00               	movlw	high _LED_Number
  1053  0001E2  0100               	movlb	0	; () banked
  1054  0001E4  21D5               	addwfc	(?___lwmod+1)& (0+255),w,b
  1055  0001E6  6EDA               	movwf	fsr2h,c
  1056  0001E8  50DF               	movf	indf2,w,c
  1057  0001EA  0100               	movlb	0	; () banked
  1058  0001EC  6FD9               	movwf	TM1640_Writer_Dates@Date& (0+255),b
  1059  0001EE  0E02               	movlw	2
  1060  0001F0  EC25  F004         	call	_TM1640_Writer_Dates
  1061  0001F4  C0DB  F0D4         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1062  0001F8  C0DC  F0D5         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1063  0001FC  0E00               	movlw	0
  1064  0001FE  0100               	movlb	0	; () banked
  1065  000200  6FD7               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1066  000202  0E0A               	movlw	10
  1067  000204  6FD6               	movwf	___lwdiv@divisor& (0+255),b
  1068  000206  ECA8  F001         	call	___lwdiv	;wreg free
  1069  00020A  C0D4  F0DB         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1070  00020E  C0D5  F0DC         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1071                           
  1072                           ;TM1640.c: 211: TM1640_Writer_Dates(1,LED_Number[Numbers%10]); Numbers/=10;
  1073  000212  C0DB  F0D4         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1074  000216  C0DC  F0D5         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1075  00021A  0E00               	movlw	0
  1076  00021C  0100               	movlb	0	; () banked
  1077  00021E  6FD7               	movwf	(___lwmod@divisor+1)& (0+255),b
  1078  000220  0E0A               	movlw	10
  1079  000222  6FD6               	movwf	___lwmod@divisor& (0+255),b
  1080  000224  EC5D  F002         	call	___lwmod	;wreg free
  1081  000228  0EC4               	movlw	low _LED_Number
  1082  00022A  0100               	movlb	0	; () banked
  1083  00022C  25D4               	addwf	?___lwmod& (0+255),w,b
  1084  00022E  6ED9               	movwf	fsr2l,c
  1085  000230  0E00               	movlw	high _LED_Number
  1086  000232  0100               	movlb	0	; () banked
  1087  000234  21D5               	addwfc	(?___lwmod+1)& (0+255),w,b
  1088  000236  6EDA               	movwf	fsr2h,c
  1089  000238  50DF               	movf	indf2,w,c
  1090  00023A  0100               	movlb	0	; () banked
  1091  00023C  6FD9               	movwf	TM1640_Writer_Dates@Date& (0+255),b
  1092  00023E  0E01               	movlw	1
  1093  000240  EC25  F004         	call	_TM1640_Writer_Dates
  1094  000244  C0DB  F0D4         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1095  000248  C0DC  F0D5         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1096  00024C  0E00               	movlw	0
  1097  00024E  0100               	movlb	0	; () banked
  1098  000250  6FD7               	movwf	(___lwdiv@divisor+1)& (0+255),b
  1099  000252  0E0A               	movlw	10
  1100  000254  6FD6               	movwf	___lwdiv@divisor& (0+255),b
  1101  000256  ECA8  F001         	call	___lwdiv	;wreg free
  1102  00025A  C0D4  F0DB         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1103  00025E  C0D5  F0DC         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1104                           
  1105                           ;TM1640.c: 212: TM1640_Writer_Dates(0,LED_Number[Numbers%10]);
  1106  000262  C0DB  F0D4         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1107  000266  C0DC  F0D5         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1108  00026A  0E00               	movlw	0
  1109  00026C  0100               	movlb	0	; () banked
  1110  00026E  6FD7               	movwf	(___lwmod@divisor+1)& (0+255),b
  1111  000270  0E0A               	movlw	10
  1112  000272  6FD6               	movwf	___lwmod@divisor& (0+255),b
  1113  000274  EC5D  F002         	call	___lwmod	;wreg free
  1114  000278  0EC4               	movlw	low _LED_Number
  1115  00027A  0100               	movlb	0	; () banked
  1116  00027C  25D4               	addwf	?___lwmod& (0+255),w,b
  1117  00027E  6ED9               	movwf	fsr2l,c
  1118  000280  0E00               	movlw	high _LED_Number
  1119  000282  0100               	movlb	0	; () banked
  1120  000284  21D5               	addwfc	(?___lwmod+1)& (0+255),w,b
  1121  000286  6EDA               	movwf	fsr2h,c
  1122  000288  50DF               	movf	indf2,w,c
  1123  00028A  0100               	movlb	0	; () banked
  1124  00028C  6FD9               	movwf	TM1640_Writer_Dates@Date& (0+255),b
  1125  00028E  0E00               	movlw	0
  1126  000290  EC25  F004         	call	_TM1640_Writer_Dates
  1127  000294  0012               	return		;funcret
  1128  000296                     __end_of_TM1640_Show_integer:
  1129                           	opt stack 0
  1130                           tblptru	equ	0xFF8
  1131                           tblptrh	equ	0xFF7
  1132                           tblptrl	equ	0xFF6
  1133                           tablat	equ	0xFF5
  1134                           prodh	equ	0xFF4
  1135                           prodl	equ	0xFF3
  1136                           intcon	equ	0xFF2
  1137                           postinc0	equ	0xFEE
  1138                           wreg	equ	0xFE8
  1139                           postdec1	equ	0xFE5
  1140                           fsr1l	equ	0xFE1
  1141                           indf2	equ	0xFDF
  1142                           fsr2h	equ	0xFDA
  1143                           fsr2l	equ	0xFD9
  1144                           status	equ	0xFD8
  1145                           
  1146 ;; *************** function ___lwmod *****************
  1147 ;; Defined at:
  1148 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1149 ;; Parameters:    Size  Location     Type
  1150 ;;  dividend        2    0[BANK0 ] unsigned int 
  1151 ;;  divisor         2    2[BANK0 ] unsigned int 
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;  counter         1    4[BANK0 ] unsigned char 
  1154 ;; Return value:  Size  Location     Type
  1155 ;;                  2    0[BANK0 ] unsigned int 
  1156 ;; Registers used:
  1157 ;;		wreg, status,2, status,0
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1163 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1164 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1166 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1167 ;;Total ram usage:        5 bytes
  1168 ;; Hardware stack levels used:    1
  1169 ;; Hardware stack levels required when called:    3
  1170 ;; This function calls:
  1171 ;;		Nothing
  1172 ;; This function is called by:
  1173 ;;		_TM1640_Show_integer
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           
  1177                           	psect	text6
  1178  0004BA                     __ptext6:
  1179                           	opt stack 0
  1180  0004BA                     ___lwmod:
  1181                           	opt stack 25
  1182                           
  1183                           ;incstack = 0
  1184  0004BA  0100               	movlb	0	; () banked
  1185  0004BC  51D6               	movf	___lwmod@divisor& (0+255),w,b
  1186  0004BE  0100               	movlb	0	; () banked
  1187  0004C0  11D7               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  1188  0004C2  B4D8               	btfsc	status,2,c
  1189  0004C4  D02B               	goto	l1113
  1190                           
  1191                           ; BSR set to: 0
  1192  0004C6  0E01               	movlw	1
  1193  0004C8  0100               	movlb	0	; () banked
  1194  0004CA  6FD8               	movwf	___lwmod@counter& (0+255),b
  1195  0004CC  D007               	goto	l2962
  1196  0004CE                     l2960:
  1197                           
  1198                           ; BSR set to: 0
  1199  0004CE  0100               	movlb	0	; () banked
  1200  0004D0  90D8               	bcf	status,0,c
  1201  0004D2  37D6               	rlcf	___lwmod@divisor& (0+255),f,b
  1202  0004D4  37D7               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1203  0004D6  0100               	movlb	0	; () banked
  1204  0004D8  2BD8               	incf	___lwmod@counter& (0+255),f,b
  1205  0004DA  D000               	goto	l2962
  1206  0004DC                     l2962:
  1207                           
  1208                           ; BSR set to: 0
  1209  0004DC  0100               	movlb	0	; () banked
  1210  0004DE  BFD7               	btfsc	(___lwmod@divisor+1)& (0+255),7,b
  1211  0004E0  D002               	goto	l2964
  1212  0004E2  D7F5               	goto	l2960
  1213                           
  1214                           ; BSR set to: 0
  1215  0004E4  D000               	goto	l2964
  1216  0004E6                     l2964:
  1217                           
  1218                           ; BSR set to: 0
  1219  0004E6  0100               	movlb	0	; () banked
  1220  0004E8  51D6               	movf	___lwmod@divisor& (0+255),w,b
  1221  0004EA  0100               	movlb	0	; () banked
  1222  0004EC  5DD4               	subwf	___lwmod@dividend& (0+255),w,b
  1223  0004EE  0100               	movlb	0	; () banked
  1224  0004F0  51D7               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1225  0004F2  0100               	movlb	0	; () banked
  1226  0004F4  59D5               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1227  0004F6  A0D8               	btfss	status,0,c
  1228  0004F8  D009               	goto	l2968
  1229                           
  1230                           ; BSR set to: 0
  1231  0004FA  0100               	movlb	0	; () banked
  1232  0004FC  51D6               	movf	___lwmod@divisor& (0+255),w,b
  1233  0004FE  0100               	movlb	0	; () banked
  1234  000500  5FD4               	subwf	___lwmod@dividend& (0+255),f,b
  1235  000502  0100               	movlb	0	; () banked
  1236  000504  51D7               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1237  000506  0100               	movlb	0	; () banked
  1238  000508  5BD5               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1239  00050A  D000               	goto	l2968
  1240  00050C                     l2968:
  1241                           
  1242                           ; BSR set to: 0
  1243  00050C  0100               	movlb	0	; () banked
  1244  00050E  90D8               	bcf	status,0,c
  1245  000510  33D7               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1246  000512  33D6               	rrcf	___lwmod@divisor& (0+255),f,b
  1247                           
  1248                           ; BSR set to: 0
  1249  000514  0100               	movlb	0	; () banked
  1250  000516  2FD8               	decfsz	___lwmod@counter& (0+255),f,b
  1251  000518  D7E6               	goto	l2964
  1252  00051A  D000               	goto	l1113
  1253  00051C                     l1113:
  1254                           
  1255                           ; BSR set to: 0
  1256  00051C  C0D4  F0D4         	movff	___lwmod@dividend,?___lwmod
  1257  000520  C0D5  F0D5         	movff	___lwmod@dividend+1,?___lwmod+1
  1258                           
  1259                           ; BSR set to: 0
  1260  000524  0012               	return		;funcret
  1261  000526                     __end_of___lwmod:
  1262                           	opt stack 0
  1263                           tblptru	equ	0xFF8
  1264                           tblptrh	equ	0xFF7
  1265                           tblptrl	equ	0xFF6
  1266                           tablat	equ	0xFF5
  1267                           prodh	equ	0xFF4
  1268                           prodl	equ	0xFF3
  1269                           intcon	equ	0xFF2
  1270                           postinc0	equ	0xFEE
  1271                           wreg	equ	0xFE8
  1272                           postdec1	equ	0xFE5
  1273                           fsr1l	equ	0xFE1
  1274                           indf2	equ	0xFDF
  1275                           fsr2h	equ	0xFDA
  1276                           fsr2l	equ	0xFD9
  1277                           status	equ	0xFD8
  1278                           
  1279 ;; *************** function ___lwdiv *****************
  1280 ;; Defined at:
  1281 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;  dividend        2    0[BANK0 ] unsigned int 
  1284 ;;  divisor         2    2[BANK0 ] unsigned int 
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;  quotient        2    5[BANK0 ] unsigned int 
  1287 ;;  counter         1    4[BANK0 ] unsigned char 
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  2    0[BANK0 ] unsigned int 
  1290 ;; Registers used:
  1291 ;;		wreg, status,2, status,0
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1297 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1298 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1300 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1301 ;;Total ram usage:        7 bytes
  1302 ;; Hardware stack levels used:    1
  1303 ;; Hardware stack levels required when called:    3
  1304 ;; This function calls:
  1305 ;;		Nothing
  1306 ;; This function is called by:
  1307 ;;		_TM1640_Show_integer
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311                           	psect	text7
  1312  000350                     __ptext7:
  1313                           	opt stack 0
  1314  000350                     ___lwdiv:
  1315                           	opt stack 25
  1316                           
  1317                           ; BSR set to: 0
  1318                           ;incstack = 0
  1319  000350  0E00               	movlw	0
  1320  000352  0100               	movlb	0	; () banked
  1321  000354  6FDA               	movwf	(___lwdiv@quotient+1)& (0+255),b
  1322  000356  0E00               	movlw	0
  1323  000358  6FD9               	movwf	___lwdiv@quotient& (0+255),b
  1324                           
  1325                           ; BSR set to: 0
  1326  00035A  0100               	movlb	0	; () banked
  1327  00035C  51D6               	movf	___lwdiv@divisor& (0+255),w,b
  1328  00035E  0100               	movlb	0	; () banked
  1329  000360  11D7               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  1330  000362  B4D8               	btfsc	status,2,c
  1331  000364  D031               	goto	l1103
  1332                           
  1333                           ; BSR set to: 0
  1334  000366  0E01               	movlw	1
  1335  000368  0100               	movlb	0	; () banked
  1336  00036A  6FD8               	movwf	___lwdiv@counter& (0+255),b
  1337  00036C  D007               	goto	l2942
  1338  00036E                     l2940:
  1339                           
  1340                           ; BSR set to: 0
  1341  00036E  0100               	movlb	0	; () banked
  1342  000370  90D8               	bcf	status,0,c
  1343  000372  37D6               	rlcf	___lwdiv@divisor& (0+255),f,b
  1344  000374  37D7               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  1345  000376  0100               	movlb	0	; () banked
  1346  000378  2BD8               	incf	___lwdiv@counter& (0+255),f,b
  1347  00037A  D000               	goto	l2942
  1348  00037C                     l2942:
  1349                           
  1350                           ; BSR set to: 0
  1351  00037C  0100               	movlb	0	; () banked
  1352  00037E  BFD7               	btfsc	(___lwdiv@divisor+1)& (0+255),7,b
  1353  000380  D002               	goto	l2944
  1354  000382  D7F5               	goto	l2940
  1355                           
  1356                           ; BSR set to: 0
  1357  000384  D000               	goto	l2944
  1358  000386                     l2944:
  1359                           
  1360                           ; BSR set to: 0
  1361  000386  0100               	movlb	0	; () banked
  1362  000388  90D8               	bcf	status,0,c
  1363  00038A  37D9               	rlcf	___lwdiv@quotient& (0+255),f,b
  1364  00038C  37DA               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  1365                           
  1366                           ; BSR set to: 0
  1367  00038E  0100               	movlb	0	; () banked
  1368  000390  51D6               	movf	___lwdiv@divisor& (0+255),w,b
  1369  000392  0100               	movlb	0	; () banked
  1370  000394  5DD4               	subwf	___lwdiv@dividend& (0+255),w,b
  1371  000396  0100               	movlb	0	; () banked
  1372  000398  51D7               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  1373  00039A  0100               	movlb	0	; () banked
  1374  00039C  59D5               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  1375  00039E  A0D8               	btfss	status,0,c
  1376  0003A0  D00B               	goto	l2952
  1377                           
  1378                           ; BSR set to: 0
  1379  0003A2  0100               	movlb	0	; () banked
  1380  0003A4  51D6               	movf	___lwdiv@divisor& (0+255),w,b
  1381  0003A6  0100               	movlb	0	; () banked
  1382  0003A8  5FD4               	subwf	___lwdiv@dividend& (0+255),f,b
  1383  0003AA  0100               	movlb	0	; () banked
  1384  0003AC  51D7               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  1385  0003AE  0100               	movlb	0	; () banked
  1386  0003B0  5BD5               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  1387                           
  1388                           ; BSR set to: 0
  1389  0003B2  0100               	movlb	0	; () banked
  1390  0003B4  81D9               	bsf	___lwdiv@quotient& (0+255),0,b
  1391  0003B6  D000               	goto	l2952
  1392  0003B8                     l2952:
  1393                           
  1394                           ; BSR set to: 0
  1395  0003B8  0100               	movlb	0	; () banked
  1396  0003BA  90D8               	bcf	status,0,c
  1397  0003BC  33D7               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  1398  0003BE  33D6               	rrcf	___lwdiv@divisor& (0+255),f,b
  1399                           
  1400                           ; BSR set to: 0
  1401  0003C0  0100               	movlb	0	; () banked
  1402  0003C2  2FD8               	decfsz	___lwdiv@counter& (0+255),f,b
  1403  0003C4  D7E0               	goto	l2944
  1404  0003C6  D000               	goto	l1103
  1405  0003C8                     l1103:
  1406                           
  1407                           ; BSR set to: 0
  1408  0003C8  C0D9  F0D4         	movff	___lwdiv@quotient,?___lwdiv
  1409  0003CC  C0DA  F0D5         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1410                           
  1411                           ; BSR set to: 0
  1412  0003D0  0012               	return		;funcret
  1413  0003D2                     __end_of___lwdiv:
  1414                           	opt stack 0
  1415                           tblptru	equ	0xFF8
  1416                           tblptrh	equ	0xFF7
  1417                           tblptrl	equ	0xFF6
  1418                           tablat	equ	0xFF5
  1419                           prodh	equ	0xFF4
  1420                           prodl	equ	0xFF3
  1421                           intcon	equ	0xFF2
  1422                           postinc0	equ	0xFEE
  1423                           wreg	equ	0xFE8
  1424                           postdec1	equ	0xFE5
  1425                           fsr1l	equ	0xFE1
  1426                           indf2	equ	0xFDF
  1427                           fsr2h	equ	0xFDA
  1428                           fsr2l	equ	0xFD9
  1429                           status	equ	0xFD8
  1430                           
  1431 ;; *************** function _TM1640_Writer_Dates *****************
  1432 ;; Defined at:
  1433 ;;		line 99 in file "_01_USER/TM1640.c"
  1434 ;; Parameters:    Size  Location     Type
  1435 ;;  Addr            1    wreg     unsigned char 
  1436 ;;  Date            1    5[BANK0 ] unsigned char 
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;  Addr            1    6[BANK0 ] unsigned char 
  1439 ;; Return value:  Size  Location     Type
  1440 ;;		None               void
  1441 ;; Registers used:
  1442 ;;		wreg, status,2, status,0, cstack
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1448 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1449 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1451 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1452 ;;Total ram usage:        2 bytes
  1453 ;; Hardware stack levels used:    1
  1454 ;; Hardware stack levels required when called:    5
  1455 ;; This function calls:
  1456 ;;		_TM1640_Start
  1457 ;;		_TM1640_Stop
  1458 ;;		_TM1640_Writer_Byte
  1459 ;; This function is called by:
  1460 ;;		_TM1640_Show_integer
  1461 ;;		_ShowResult
  1462 ;;		_TM1640_Show_Numbers
  1463 ;;		_TM1640_Show_Decimal
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           	psect	text8
  1468  00084A                     __ptext8:
  1469                           	opt stack 0
  1470  00084A                     _TM1640_Writer_Dates:
  1471                           	opt stack 24
  1472                           
  1473                           ; BSR set to: 0
  1474                           ;incstack = 0
  1475                           ;TM1640_Writer_Dates@Addr stored from wreg
  1476  00084A  0100               	movlb	0	; () banked
  1477  00084C  6FDA               	movwf	TM1640_Writer_Dates@Addr& (0+255),b
  1478                           
  1479                           ; BSR set to: 0
  1480                           ;TM1640.c: 101: if((Addr >= 0) && (Addr <= 15))
  1481  00084E  0E10               	movlw	16
  1482  000850  0100               	movlb	0	; () banked
  1483  000852  61DA               	cpfslt	TM1640_Writer_Dates@Addr& (0+255),b
  1484  000854  0012               	return	
  1485                           
  1486                           ; BSR set to: 0
  1487                           ;TM1640.c: 102: {
  1488                           ;TM1640.c: 103: TM1640_Start();
  1489  000856  EC85  F004         	call	_TM1640_Start	;wreg free
  1490                           
  1491                           ;TM1640.c: 104: TM1640_Writer_Byte(0xC0 + Addr);
  1492  00085A  0100               	movlb	0	; () banked
  1493  00085C  51DA               	movf	TM1640_Writer_Dates@Addr& (0+255),w,b
  1494  00085E  0FC0               	addlw	192
  1495  000860  ECF1  F002         	call	_TM1640_Writer_Byte
  1496                           
  1497                           ;TM1640.c: 105: TM1640_Writer_Byte(Date);
  1498  000864  0100               	movlb	0	; () banked
  1499  000866  51D9               	movf	TM1640_Writer_Dates@Date& (0+255),w,b
  1500  000868  ECF1  F002         	call	_TM1640_Writer_Byte
  1501                           
  1502                           ;TM1640.c: 106: TM1640_Stop();
  1503  00086C  EC73  F004         	call	_TM1640_Stop	;wreg free
  1504  000870  0012               	return	
  1505  000872  0012               	return		;funcret
  1506  000874                     __end_of_TM1640_Writer_Dates:
  1507                           	opt stack 0
  1508                           tblptru	equ	0xFF8
  1509                           tblptrh	equ	0xFF7
  1510                           tblptrl	equ	0xFF6
  1511                           tablat	equ	0xFF5
  1512                           prodh	equ	0xFF4
  1513                           prodl	equ	0xFF3
  1514                           intcon	equ	0xFF2
  1515                           postinc0	equ	0xFEE
  1516                           wreg	equ	0xFE8
  1517                           postdec1	equ	0xFE5
  1518                           fsr1l	equ	0xFE1
  1519                           indf2	equ	0xFDF
  1520                           fsr2h	equ	0xFDA
  1521                           fsr2l	equ	0xFD9
  1522                           status	equ	0xFD8
  1523                           
  1524 ;; *************** function _LED_Control *****************
  1525 ;; Defined at:
  1526 ;;		line 58 in file "_01_USER/GPIO.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;  _LED_num        1    wreg     unsigned char 
  1529 ;;  _switch         1    0[BANK0 ] unsigned char 
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;  _LED_num        1    1[BANK0 ] unsigned char 
  1532 ;; Return value:  Size  Location     Type
  1533 ;;		None               void
  1534 ;; Registers used:
  1535 ;;		wreg, status,2, status,0
  1536 ;; Tracked objects:
  1537 ;;		On entry : 0/0
  1538 ;;		On exit  : 0/0
  1539 ;;		Unchanged: 0/0
  1540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1541 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1542 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1544 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1545 ;;Total ram usage:        2 bytes
  1546 ;; Hardware stack levels used:    1
  1547 ;; Hardware stack levels required when called:    3
  1548 ;; This function calls:
  1549 ;;		Nothing
  1550 ;; This function is called by:
  1551 ;;		_main
  1552 ;;		_ShowResult
  1553 ;; This function uses a non-reentrant model
  1554 ;;
  1555                           
  1556                           	psect	text9
  1557  00058A                     __ptext9:
  1558                           	opt stack 0
  1559  00058A                     _LED_Control:
  1560                           	opt stack 26
  1561                           
  1562                           ;incstack = 0
  1563                           ;LED_Control@_LED_num stored from wreg
  1564  00058A  0100               	movlb	0	; () banked
  1565  00058C  6FD5               	movwf	LED_Control@_LED_num& (0+255),b
  1566                           
  1567                           ; BSR set to: 0
  1568                           ;GPIO.c: 62: if(_LED_num == 1)
  1569  00058E  0100               	movlb	0	; () banked
  1570  000590  05D5               	decf	LED_Control@_LED_num& (0+255),w,b
  1571  000592  A4D8               	btfss	status,2,c
  1572  000594  D009               	goto	l2980
  1573                           
  1574                           ; BSR set to: 0
  1575                           ;GPIO.c: 63: if(_switch) LED_BUS |= 0x01;
  1576  000596  0100               	movlb	0	; () banked
  1577  000598  51D4               	movf	LED_Control@_switch& (0+255),w,b
  1578  00059A  0100               	movlb	0	; () banked
  1579  00059C  B4D8               	btfsc	status,2,c
  1580  00059E  D002               	goto	l2978
  1581                           
  1582                           ; BSR set to: 0
  1583  0005A0  8010               	bsf	_LED_BUS,0,c
  1584  0005A2  D002               	goto	l2980
  1585  0005A4                     l2978:
  1586                           
  1587                           ; BSR set to: 0
  1588                           ;GPIO.c: 64: else LED_BUS &= 0xFE;
  1589  0005A4  9010               	bcf	_LED_BUS,0,c
  1590                           
  1591                           ; BSR set to: 0
  1592  0005A6  D000               	goto	l2980
  1593  0005A8                     l2980:
  1594                           
  1595                           ; BSR set to: 0
  1596                           ;GPIO.c: 66: if(_LED_num == 2)
  1597  0005A8  0E02               	movlw	2
  1598  0005AA  0100               	movlb	0	; () banked
  1599  0005AC  19D5               	xorwf	LED_Control@_LED_num& (0+255),w,b
  1600  0005AE  A4D8               	btfss	status,2,c
  1601  0005B0  D009               	goto	l2988
  1602                           
  1603                           ; BSR set to: 0
  1604                           ;GPIO.c: 67: if(_switch) LED_BUS |= 0x02;
  1605  0005B2  0100               	movlb	0	; () banked
  1606  0005B4  51D4               	movf	LED_Control@_switch& (0+255),w,b
  1607  0005B6  0100               	movlb	0	; () banked
  1608  0005B8  B4D8               	btfsc	status,2,c
  1609  0005BA  D002               	goto	l2986
  1610                           
  1611                           ; BSR set to: 0
  1612  0005BC  8210               	bsf	_LED_BUS,1,c
  1613  0005BE  D002               	goto	l2988
  1614  0005C0                     l2986:
  1615                           
  1616                           ; BSR set to: 0
  1617                           ;GPIO.c: 68: else LED_BUS &= 0xFD;
  1618  0005C0  9210               	bcf	_LED_BUS,1,c
  1619                           
  1620                           ; BSR set to: 0
  1621  0005C2  D000               	goto	l2988
  1622  0005C4                     l2988:
  1623                           
  1624                           ; BSR set to: 0
  1625                           ;GPIO.c: 70: if(_LED_num == 3)
  1626  0005C4  0E03               	movlw	3
  1627  0005C6  0100               	movlb	0	; () banked
  1628  0005C8  19D5               	xorwf	LED_Control@_LED_num& (0+255),w,b
  1629  0005CA  A4D8               	btfss	status,2,c
  1630  0005CC  0012               	return	
  1631                           
  1632                           ; BSR set to: 0
  1633                           ;GPIO.c: 71: if(_switch) LED_BUS |= 0x04;
  1634  0005CE  0100               	movlb	0	; () banked
  1635  0005D0  51D4               	movf	LED_Control@_switch& (0+255),w,b
  1636  0005D2  0100               	movlb	0	; () banked
  1637  0005D4  B4D8               	btfsc	status,2,c
  1638  0005D6  D002               	goto	l2994
  1639                           
  1640                           ; BSR set to: 0
  1641  0005D8  8410               	bsf	_LED_BUS,2,c
  1642  0005DA  0012               	return	
  1643  0005DC                     l2994:
  1644                           
  1645                           ; BSR set to: 0
  1646                           ;GPIO.c: 72: else LED_BUS &= 0xFB;
  1647  0005DC  9410               	bcf	_LED_BUS,2,c
  1648                           
  1649                           ; BSR set to: 0
  1650  0005DE  0012               	return	
  1651                           
  1652                           ; BSR set to: 0
  1653                           
  1654                           ; BSR set to: 0
  1655  0005E0  0012               	return		;funcret
  1656  0005E2                     __end_of_LED_Control:
  1657                           	opt stack 0
  1658                           tblptru	equ	0xFF8
  1659                           tblptrh	equ	0xFF7
  1660                           tblptrl	equ	0xFF6
  1661                           tablat	equ	0xFF5
  1662                           prodh	equ	0xFF4
  1663                           prodl	equ	0xFF3
  1664                           intcon	equ	0xFF2
  1665                           postinc0	equ	0xFEE
  1666                           wreg	equ	0xFE8
  1667                           postdec1	equ	0xFE5
  1668                           fsr1l	equ	0xFE1
  1669                           indf2	equ	0xFDF
  1670                           fsr2h	equ	0xFDA
  1671                           fsr2l	equ	0xFD9
  1672                           status	equ	0xFD8
  1673                           
  1674 ;; *************** function _RS485_Init *****************
  1675 ;; Defined at:
  1676 ;;		line 47 in file "_01_USER/My_USART.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;		None
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;		None
  1681 ;; Return value:  Size  Location     Type
  1682 ;;		None               void
  1683 ;; Registers used:
  1684 ;;		wreg, status,2, cstack
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1694 ;;Total ram usage:        0 bytes
  1695 ;; Hardware stack levels used:    1
  1696 ;; Hardware stack levels required when called:    4
  1697 ;; This function calls:
  1698 ;;		_Open1USART
  1699 ;; This function is called by:
  1700 ;;		_main
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704                           	psect	text10
  1705  000970                     __ptext10:
  1706                           	opt stack 0
  1707  000970                     _RS485_Init:
  1708                           	opt stack 26
  1709                           
  1710                           ;My_USART.c: 49: Open1USART( 0b01111111 &
  1711                           ;My_USART.c: 50: 0b11111111 &
  1712                           ;My_USART.c: 51: 0b11111110 &
  1713                           ;My_USART.c: 52: 0b11111101 &
  1714                           ;My_USART.c: 53: 0b11111111 &
  1715                           ;My_USART.c: 54: 0b11101111
  1716                           ;My_USART.c: 55: ,
  1717                           ;My_USART.c: 56: 12
  1718                           ;My_USART.c: 57: );
  1719                           
  1720                           ; BSR set to: 0
  1721                           ;incstack = 0
  1722  000970  0E00               	movlw	0
  1723  000972  0100               	movlb	0	; () banked
  1724  000974  6FD5               	movwf	(Open1USART@spbrg+1)& (0+255),b
  1725  000976  0E0C               	movlw	12
  1726  000978  6FD4               	movwf	Open1USART@spbrg& (0+255),b
  1727  00097A  0E6C               	movlw	108
  1728  00097C  ECE9  F001         	call	_Open1USART
  1729                           
  1730                           ;My_USART.c: 59: TRISC7 = 1;
  1731  000980  8E94               	bsf	3988,7,c	;volatile
  1732                           
  1733                           ;My_USART.c: 60: TRISC6 = 0;
  1734  000982  9C94               	bcf	3988,6,c	;volatile
  1735                           
  1736                           ;My_USART.c: 61: TRISC0 = 0;
  1737  000984  9094               	bcf	3988,0,c	;volatile
  1738                           
  1739                           ;My_USART.c: 62: RC0 = 1;
  1740  000986  8082               	bsf	3970,0,c	;volatile
  1741  000988  0012               	return		;funcret
  1742  00098A                     __end_of_RS485_Init:
  1743                           	opt stack 0
  1744                           tblptru	equ	0xFF8
  1745                           tblptrh	equ	0xFF7
  1746                           tblptrl	equ	0xFF6
  1747                           tablat	equ	0xFF5
  1748                           prodh	equ	0xFF4
  1749                           prodl	equ	0xFF3
  1750                           intcon	equ	0xFF2
  1751                           postinc0	equ	0xFEE
  1752                           wreg	equ	0xFE8
  1753                           postdec1	equ	0xFE5
  1754                           fsr1l	equ	0xFE1
  1755                           indf2	equ	0xFDF
  1756                           fsr2h	equ	0xFDA
  1757                           fsr2l	equ	0xFD9
  1758                           status	equ	0xFD8
  1759                           
  1760 ;; *************** function _Open1USART *****************
  1761 ;; Defined at:
  1762 ;;		line 124 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u1open.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;  config          1    wreg     unsigned char 
  1765 ;;  spbrg           2    0[BANK0 ] unsigned int 
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;  config          1    2[BANK0 ] unsigned char 
  1768 ;; Return value:  Size  Location     Type
  1769 ;;		None               void
  1770 ;; Registers used:
  1771 ;;		wreg, status,2
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1777 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1778 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1780 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1781 ;;Total ram usage:        3 bytes
  1782 ;; Hardware stack levels used:    1
  1783 ;; Hardware stack levels required when called:    3
  1784 ;; This function calls:
  1785 ;;		Nothing
  1786 ;; This function is called by:
  1787 ;;		_RS485_Init
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           	psect	text11
  1792  0003D2                     __ptext11:
  1793                           	opt stack 0
  1794  0003D2                     _Open1USART:
  1795                           	opt stack 26
  1796                           
  1797                           ;incstack = 0
  1798                           ;Open1USART@config stored from wreg
  1799  0003D2  0100               	movlb	0	; () banked
  1800  0003D4  6FD6               	movwf	Open1USART@config& (0+255),b
  1801                           
  1802                           ; BSR set to: 0
  1803  0003D6  0E00               	movlw	0
  1804  0003D8  6EAC               	movwf	4012,c	;volatile
  1805  0003DA  0E00               	movlw	0
  1806  0003DC  6EAB               	movwf	4011,c	;volatile
  1807                           
  1808                           ; BSR set to: 0
  1809  0003DE  0100               	movlb	0	; () banked
  1810  0003E0  A1D6               	btfss	Open1USART@config& (0+255),0,b
  1811  0003E2  D002               	goto	l3002
  1812                           
  1813                           ; BSR set to: 0
  1814  0003E4  88AC               	bsf	4012,4,c	;volatile
  1815  0003E6  D000               	goto	l3002
  1816  0003E8                     l3002:
  1817                           
  1818                           ; BSR set to: 0
  1819  0003E8  0100               	movlb	0	; () banked
  1820  0003EA  A3D6               	btfss	Open1USART@config& (0+255),1,b
  1821  0003EC  D003               	goto	l3006
  1822                           
  1823                           ; BSR set to: 0
  1824  0003EE  8CAC               	bsf	4012,6,c	;volatile
  1825  0003F0  8CAB               	bsf	4011,6,c	;volatile
  1826  0003F2  D000               	goto	l3006
  1827  0003F4                     l3006:
  1828                           
  1829                           ; BSR set to: 0
  1830  0003F4  0100               	movlb	0	; () banked
  1831  0003F6  A5D6               	btfss	Open1USART@config& (0+255),2,b
  1832  0003F8  D002               	goto	l3010
  1833                           
  1834                           ; BSR set to: 0
  1835  0003FA  8EAC               	bsf	4012,7,c	;volatile
  1836  0003FC  D000               	goto	l3010
  1837  0003FE                     l3010:
  1838                           
  1839                           ; BSR set to: 0
  1840  0003FE  0100               	movlb	0	; () banked
  1841  000400  A7D6               	btfss	Open1USART@config& (0+255),3,b
  1842  000402  D002               	goto	l574
  1843                           
  1844                           ; BSR set to: 0
  1845  000404  88AB               	bsf	4011,4,c	;volatile
  1846  000406  D002               	goto	l3014
  1847  000408                     l574:
  1848                           
  1849                           ; BSR set to: 0
  1850  000408  8AAB               	bsf	4011,5,c	;volatile
  1851  00040A  D000               	goto	l3014
  1852  00040C                     l3014:
  1853                           
  1854                           ; BSR set to: 0
  1855  00040C  0100               	movlb	0	; () banked
  1856  00040E  A9D6               	btfss	Open1USART@config& (0+255),4,b
  1857  000410  D002               	goto	l3018
  1858                           
  1859                           ; BSR set to: 0
  1860  000412  84AC               	bsf	4012,2,c	;volatile
  1861  000414  D000               	goto	l3018
  1862  000416                     l3018:
  1863                           
  1864                           ; BSR set to: 0
  1865  000416  0100               	movlb	0	; () banked
  1866  000418  ABD6               	btfss	Open1USART@config& (0+255),5,b
  1867  00041A  D002               	goto	l3022
  1868                           
  1869                           ; BSR set to: 0
  1870  00041C  86AB               	bsf	4011,3,c	;volatile
  1871  00041E  D000               	goto	l3022
  1872  000420                     l3022:
  1873                           
  1874                           ; BSR set to: 0
  1875  000420  0100               	movlb	0	; () banked
  1876  000422  ADD6               	btfss	Open1USART@config& (0+255),6,b
  1877  000424  D002               	goto	l578
  1878                           
  1879                           ; BSR set to: 0
  1880  000426  8A9D               	bsf	3997,5,c	;volatile
  1881  000428  D002               	goto	l3026
  1882  00042A                     l578:
  1883                           
  1884                           ; BSR set to: 0
  1885  00042A  9A9D               	bcf	3997,5,c	;volatile
  1886  00042C  D000               	goto	l3026
  1887  00042E                     l3026:
  1888                           
  1889                           ; BSR set to: 0
  1890  00042E  0100               	movlb	0	; () banked
  1891  000430  AFD6               	btfss	Open1USART@config& (0+255),7,b
  1892  000432  D002               	goto	l580
  1893                           
  1894                           ; BSR set to: 0
  1895  000434  889D               	bsf	3997,4,c	;volatile
  1896  000436  D001               	goto	l581
  1897  000438                     l580:
  1898                           
  1899                           ; BSR set to: 0
  1900  000438  989D               	bcf	3997,4,c	;volatile
  1901  00043A                     l581:
  1902                           
  1903                           ; BSR set to: 0
  1904  00043A  C0D4  FFAF         	movff	Open1USART@spbrg,4015	;volatile
  1905                           
  1906                           ; BSR set to: 0
  1907  00043E  0100               	movlb	0	; () banked
  1908  000440  51D5               	movf	(Open1USART@spbrg+1)& (0+255),w,b
  1909  000442  6ED4               	movwf	4052,c	;volatile
  1910                           
  1911                           ; BSR set to: 0
  1912  000444  8AAC               	bsf	4012,5,c	;volatile
  1913                           
  1914                           ; BSR set to: 0
  1915  000446  8EAB               	bsf	4011,7,c	;volatile
  1916                           
  1917                           ; BSR set to: 0
  1918  000448  0012               	return		;funcret
  1919  00044A                     __end_of_Open1USART:
  1920                           	opt stack 0
  1921                           tblptru	equ	0xFF8
  1922                           tblptrh	equ	0xFF7
  1923                           tblptrl	equ	0xFF6
  1924                           tablat	equ	0xFF5
  1925                           prodh	equ	0xFF4
  1926                           prodl	equ	0xFF3
  1927                           intcon	equ	0xFF2
  1928                           postinc0	equ	0xFEE
  1929                           wreg	equ	0xFE8
  1930                           postdec1	equ	0xFE5
  1931                           fsr1l	equ	0xFE1
  1932                           indf2	equ	0xFDF
  1933                           fsr2h	equ	0xFDA
  1934                           fsr2l	equ	0xFD9
  1935                           status	equ	0xFD8
  1936                           
  1937 ;; *************** function _Key_Init *****************
  1938 ;; Defined at:
  1939 ;;		line 42 in file "_01_USER/Key.c"
  1940 ;; Parameters:    Size  Location     Type
  1941 ;;		None
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;		None
  1944 ;; Return value:  Size  Location     Type
  1945 ;;		None               void
  1946 ;; Registers used:
  1947 ;;		None
  1948 ;; Tracked objects:
  1949 ;;		On entry : 0/0
  1950 ;;		On exit  : 0/0
  1951 ;;		Unchanged: 0/0
  1952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1957 ;;Total ram usage:        0 bytes
  1958 ;; Hardware stack levels used:    1
  1959 ;; Hardware stack levels required when called:    3
  1960 ;; This function calls:
  1961 ;;		Nothing
  1962 ;; This function is called by:
  1963 ;;		_main
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967                           	psect	text12
  1968  000952                     __ptext12:
  1969                           	opt stack 0
  1970  000952                     _Key_Init:
  1971                           	opt stack 27
  1972                           
  1973                           ;Key.c: 45: TRISC1 = 1;
  1974                           
  1975                           ; BSR set to: 0
  1976                           ;incstack = 0
  1977  000952  8294               	bsf	3988,1,c	;volatile
  1978                           
  1979                           ;Key.c: 46: TRISF1 = 1;
  1980  000954  8297               	bsf	3991,1,c	;volatile
  1981                           
  1982                           ;Key.c: 47: TRISF2 = 1;
  1983  000956  8497               	bsf	3991,2,c	;volatile
  1984                           
  1985                           ;Key.c: 48: TRISA4 = 1;
  1986  000958  8892               	bsf	3986,4,c	;volatile
  1987                           
  1988                           ;Key.c: 49: TRISA5 = 1;
  1989  00095A  8A92               	bsf	3986,5,c	;volatile
  1990                           
  1991                           ;Key.c: 50: TRISF3 = 1;
  1992  00095C  8697               	bsf	3991,3,c	;volatile
  1993                           
  1994                           ;Key.c: 53: ANSEL4 = 0;
  1995  00095E  010F               	movlb	15	; () banked
  1996  000960  9925               	bcf	37,4,b	;volatile
  1997                           
  1998                           ;Key.c: 54: ANSEL6 = 0;
  1999  000962  010F               	movlb	15	; () banked
  2000  000964  9D25               	bcf	37,6,b	;volatile
  2001                           
  2002                           ;Key.c: 55: ANSEL7 = 0;
  2003  000966  010F               	movlb	15	; () banked
  2004  000968  9F25               	bcf	37,7,b	;volatile
  2005                           
  2006                           ;Key.c: 56: ANSEL8 = 0;
  2007  00096A  010F               	movlb	15	; () banked
  2008  00096C  9124               	bcf	36,0,b	;volatile
  2009                           
  2010                           ; BSR set to: 15
  2011  00096E  0012               	return		;funcret
  2012  000970                     __end_of_Key_Init:
  2013                           	opt stack 0
  2014                           tblptru	equ	0xFF8
  2015                           tblptrh	equ	0xFF7
  2016                           tblptrl	equ	0xFF6
  2017                           tablat	equ	0xFF5
  2018                           prodh	equ	0xFF4
  2019                           prodl	equ	0xFF3
  2020                           intcon	equ	0xFF2
  2021                           postinc0	equ	0xFEE
  2022                           wreg	equ	0xFE8
  2023                           postdec1	equ	0xFE5
  2024                           fsr1l	equ	0xFE1
  2025                           indf2	equ	0xFDF
  2026                           fsr2h	equ	0xFDA
  2027                           fsr2l	equ	0xFD9
  2028                           status	equ	0xFD8
  2029                           
  2030 ;; *************** function _Init_TM1640 *****************
  2031 ;; Defined at:
  2032 ;;		line 21 in file "_01_USER/TM1640.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;		None
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;		None
  2037 ;; Return value:  Size  Location     Type
  2038 ;;		None               void
  2039 ;; Registers used:
  2040 ;;		wreg, status,2, status,0, cstack
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2050 ;;Total ram usage:        0 bytes
  2051 ;; Hardware stack levels used:    1
  2052 ;; Hardware stack levels required when called:    5
  2053 ;; This function calls:
  2054 ;;		_TM1640_Start
  2055 ;;		_TM1640_Stop
  2056 ;;		_TM1640_Writer_Byte
  2057 ;; This function is called by:
  2058 ;;		_main
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062                           	psect	text13
  2063  00089A                     __ptext13:
  2064                           	opt stack 0
  2065  00089A                     _Init_TM1640:
  2066                           	opt stack 25
  2067                           
  2068                           ;TM1640.c: 24: TRISD5 = 0;
  2069                           
  2070                           ; BSR set to: 15
  2071                           ;incstack = 0
  2072  00089A  9A95               	bcf	3989,5,c	;volatile
  2073                           
  2074                           ;TM1640.c: 25: TRISD6 = 0;
  2075  00089C  9C95               	bcf	3989,6,c	;volatile
  2076                           
  2077                           ;TM1640.c: 27: TM1640_Stop();
  2078  00089E  EC73  F004         	call	_TM1640_Stop	;wreg free
  2079                           
  2080                           ;TM1640.c: 29: TM1640_Start();
  2081  0008A2  EC85  F004         	call	_TM1640_Start	;wreg free
  2082                           
  2083                           ;TM1640.c: 30: TM1640_Writer_Byte(0x44);
  2084  0008A6  0E44               	movlw	68
  2085  0008A8  ECF1  F002         	call	_TM1640_Writer_Byte
  2086                           
  2087                           ;TM1640.c: 31: TM1640_Stop();
  2088  0008AC  EC73  F004         	call	_TM1640_Stop	;wreg free
  2089                           
  2090                           ;TM1640.c: 33: TM1640_Start();
  2091  0008B0  EC85  F004         	call	_TM1640_Start	;wreg free
  2092                           
  2093                           ;TM1640.c: 34: TM1640_Writer_Byte(0x8F);
  2094  0008B4  0E8F               	movlw	143
  2095  0008B6  ECF1  F002         	call	_TM1640_Writer_Byte
  2096                           
  2097                           ;TM1640.c: 35: TM1640_Stop();
  2098  0008BA  EC73  F004         	call	_TM1640_Stop	;wreg free
  2099  0008BE  0012               	return		;funcret
  2100  0008C0                     __end_of_Init_TM1640:
  2101                           	opt stack 0
  2102                           tblptru	equ	0xFF8
  2103                           tblptrh	equ	0xFF7
  2104                           tblptrl	equ	0xFF6
  2105                           tablat	equ	0xFF5
  2106                           prodh	equ	0xFF4
  2107                           prodl	equ	0xFF3
  2108                           intcon	equ	0xFF2
  2109                           postinc0	equ	0xFEE
  2110                           wreg	equ	0xFE8
  2111                           postdec1	equ	0xFE5
  2112                           fsr1l	equ	0xFE1
  2113                           indf2	equ	0xFDF
  2114                           fsr2h	equ	0xFDA
  2115                           fsr2l	equ	0xFD9
  2116                           status	equ	0xFD8
  2117                           
  2118 ;; *************** function _TM1640_Writer_Byte *****************
  2119 ;; Defined at:
  2120 ;;		line 116 in file "_01_USER/TM1640.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;  Date            1    wreg     unsigned char 
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;  Date            1    2[BANK0 ] unsigned char 
  2125 ;;  mask            1    3[BANK0 ] unsigned char 
  2126 ;; Return value:  Size  Location     Type
  2127 ;;		None               void
  2128 ;; Registers used:
  2129 ;;		wreg, status,2, status,0, cstack
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2136 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2138 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2139 ;;Total ram usage:        2 bytes
  2140 ;; Hardware stack levels used:    1
  2141 ;; Hardware stack levels required when called:    4
  2142 ;; This function calls:
  2143 ;;		_TM1640_Delay
  2144 ;; This function is called by:
  2145 ;;		_Init_TM1640
  2146 ;;		_TM1640_Writer_Dates
  2147 ;;		_Open_Display
  2148 ;;		_Disable_Display
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           	psect	text14
  2153  0005E2                     __ptext14:
  2154                           	opt stack 0
  2155  0005E2                     _TM1640_Writer_Byte:
  2156                           	opt stack 24
  2157                           
  2158                           ;incstack = 0
  2159                           ;TM1640_Writer_Byte@Date stored from wreg
  2160  0005E2  0100               	movlb	0	; () banked
  2161  0005E4  6FD6               	movwf	TM1640_Writer_Byte@Date& (0+255),b
  2162                           
  2163                           ; BSR set to: 0
  2164                           ;TM1640.c: 118: unsigned char mask;
  2165                           ;TM1640.c: 120: for(mask=0x01; mask; mask<<=1)
  2166  0005E6  0E01               	movlw	1
  2167  0005E8  0100               	movlb	0	; () banked
  2168  0005EA  6FD7               	movwf	TM1640_Writer_Byte@mask& (0+255),b
  2169  0005EC  D01A               	goto	l2928
  2170  0005EE                     l383:
  2171                           
  2172                           ; BSR set to: 0
  2173                           ;TM1640.c: 121: {
  2174                           ;TM1640.c: 122: RD6 = 0;
  2175  0005EE  9C83               	bcf	3971,6,c	;volatile
  2176                           
  2177                           ; BSR set to: 0
  2178                           ;TM1640.c: 123: TM1640_Delay(1);
  2179  0005F0  0E01               	movlw	1
  2180  0005F2  EC97  F004         	call	_TM1640_Delay
  2181                           
  2182                           ;TM1640.c: 124: if(mask & Date)
  2183  0005F6  0100               	movlb	0	; () banked
  2184  0005F8  51D7               	movf	TM1640_Writer_Byte@mask& (0+255),w,b
  2185  0005FA  0100               	movlb	0	; () banked
  2186  0005FC  15D6               	andwf	TM1640_Writer_Byte@Date& (0+255),w,b
  2187  0005FE  0900               	iorlw	0
  2188  000600  B4D8               	btfsc	status,2,c
  2189  000602  D002               	goto	l384
  2190                           
  2191                           ; BSR set to: 0
  2192                           ;TM1640.c: 125: RD5 = 1;
  2193  000604  8A83               	bsf	3971,5,c	;volatile
  2194  000606  D002               	goto	l2922
  2195  000608                     l384:
  2196                           
  2197                           ; BSR set to: 0
  2198                           ;TM1640.c: 126: else
  2199                           ;TM1640.c: 127: RD5 = 0;
  2200  000608  9A83               	bcf	3971,5,c	;volatile
  2201  00060A  D000               	goto	l2922
  2202  00060C                     l2922:
  2203                           
  2204                           ; BSR set to: 0
  2205                           ;TM1640.c: 128: TM1640_Delay(1);
  2206  00060C  0E01               	movlw	1
  2207  00060E  EC97  F004         	call	_TM1640_Delay
  2208                           
  2209                           ;TM1640.c: 129: RD6 = 1;
  2210  000612  8C83               	bsf	3971,6,c	;volatile
  2211                           
  2212                           ;TM1640.c: 130: TM1640_Delay(1);
  2213  000614  0E01               	movlw	1
  2214  000616  EC97  F004         	call	_TM1640_Delay
  2215  00061A  0100               	movlb	0	; () banked
  2216  00061C  90D8               	bcf	status,0,c
  2217  00061E  37D7               	rlcf	TM1640_Writer_Byte@mask& (0+255),f,b
  2218  000620  D000               	goto	l2928
  2219  000622                     l2928:
  2220                           
  2221                           ; BSR set to: 0
  2222  000622  0100               	movlb	0	; () banked
  2223  000624  51D7               	movf	TM1640_Writer_Byte@mask& (0+255),w,b
  2224  000626  0100               	movlb	0	; () banked
  2225  000628  A4D8               	btfss	status,2,c
  2226  00062A  D7E1               	goto	l383
  2227                           
  2228                           ; BSR set to: 0
  2229                           
  2230                           ; BSR set to: 0
  2231  00062C  0012               	return		;funcret
  2232  00062E                     __end_of_TM1640_Writer_Byte:
  2233                           	opt stack 0
  2234                           tblptru	equ	0xFF8
  2235                           tblptrh	equ	0xFF7
  2236                           tblptrl	equ	0xFF6
  2237                           tablat	equ	0xFF5
  2238                           prodh	equ	0xFF4
  2239                           prodl	equ	0xFF3
  2240                           intcon	equ	0xFF2
  2241                           postinc0	equ	0xFEE
  2242                           wreg	equ	0xFE8
  2243                           postdec1	equ	0xFE5
  2244                           fsr1l	equ	0xFE1
  2245                           indf2	equ	0xFDF
  2246                           fsr2h	equ	0xFDA
  2247                           fsr2l	equ	0xFD9
  2248                           status	equ	0xFD8
  2249                           
  2250 ;; *************** function _TM1640_Stop *****************
  2251 ;; Defined at:
  2252 ;;		line 63 in file "_01_USER/TM1640.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;		None
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;		None
  2257 ;; Return value:  Size  Location     Type
  2258 ;;		None               void
  2259 ;; Registers used:
  2260 ;;		wreg, status,2, status,0, cstack
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2270 ;;Total ram usage:        0 bytes
  2271 ;; Hardware stack levels used:    1
  2272 ;; Hardware stack levels required when called:    4
  2273 ;; This function calls:
  2274 ;;		_TM1640_Delay
  2275 ;; This function is called by:
  2276 ;;		_Init_TM1640
  2277 ;;		_TM1640_Writer_Dates
  2278 ;;		_Open_Display
  2279 ;;		_Disable_Display
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           	psect	text15
  2284  0008E6                     __ptext15:
  2285                           	opt stack 0
  2286  0008E6                     _TM1640_Stop:
  2287                           	opt stack 24
  2288                           
  2289                           ;TM1640.c: 65: RD6 = 0;
  2290                           
  2291                           ; BSR set to: 0
  2292                           ;incstack = 0
  2293  0008E6  9C83               	bcf	3971,6,c	;volatile
  2294                           
  2295                           ;TM1640.c: 66: TM1640_Delay(1);
  2296  0008E8  0E01               	movlw	1
  2297  0008EA  EC97  F004         	call	_TM1640_Delay
  2298                           
  2299                           ;TM1640.c: 67: RD5 = 0;
  2300  0008EE  9A83               	bcf	3971,5,c	;volatile
  2301                           
  2302                           ;TM1640.c: 68: TM1640_Delay(1);
  2303  0008F0  0E01               	movlw	1
  2304  0008F2  EC97  F004         	call	_TM1640_Delay
  2305                           
  2306                           ;TM1640.c: 69: RD6 = 1;
  2307  0008F6  8C83               	bsf	3971,6,c	;volatile
  2308                           
  2309                           ;TM1640.c: 70: TM1640_Delay(1);
  2310  0008F8  0E01               	movlw	1
  2311  0008FA  EC97  F004         	call	_TM1640_Delay
  2312                           
  2313                           ;TM1640.c: 71: RD5 = 1;
  2314  0008FE  8A83               	bsf	3971,5,c	;volatile
  2315                           
  2316                           ;TM1640.c: 72: TM1640_Delay(1);
  2317  000900  0E01               	movlw	1
  2318  000902  EC97  F004         	call	_TM1640_Delay
  2319                           
  2320                           ;TM1640.c: 73: RD6 = 0;
  2321  000906  9C83               	bcf	3971,6,c	;volatile
  2322  000908  0012               	return		;funcret
  2323  00090A                     __end_of_TM1640_Stop:
  2324                           	opt stack 0
  2325                           tblptru	equ	0xFF8
  2326                           tblptrh	equ	0xFF7
  2327                           tblptrl	equ	0xFF6
  2328                           tablat	equ	0xFF5
  2329                           prodh	equ	0xFF4
  2330                           prodl	equ	0xFF3
  2331                           intcon	equ	0xFF2
  2332                           postinc0	equ	0xFEE
  2333                           wreg	equ	0xFE8
  2334                           postdec1	equ	0xFE5
  2335                           fsr1l	equ	0xFE1
  2336                           indf2	equ	0xFDF
  2337                           fsr2h	equ	0xFDA
  2338                           fsr2l	equ	0xFD9
  2339                           status	equ	0xFD8
  2340                           
  2341 ;; *************** function _TM1640_Start *****************
  2342 ;; Defined at:
  2343 ;;		line 44 in file "_01_USER/TM1640.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;		None
  2346 ;; Auto vars:     Size  Location     Type
  2347 ;;		None
  2348 ;; Return value:  Size  Location     Type
  2349 ;;		None               void
  2350 ;; Registers used:
  2351 ;;		wreg, status,2, status,0, cstack
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2361 ;;Total ram usage:        0 bytes
  2362 ;; Hardware stack levels used:    1
  2363 ;; Hardware stack levels required when called:    4
  2364 ;; This function calls:
  2365 ;;		_TM1640_Delay
  2366 ;; This function is called by:
  2367 ;;		_Init_TM1640
  2368 ;;		_TM1640_Writer_Dates
  2369 ;;		_Open_Display
  2370 ;;		_Disable_Display
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           	psect	text16
  2375  00090A                     __ptext16:
  2376                           	opt stack 0
  2377  00090A                     _TM1640_Start:
  2378                           	opt stack 24
  2379                           
  2380                           ;TM1640.c: 46: RD6 = 0;
  2381                           
  2382                           ;incstack = 0
  2383  00090A  9C83               	bcf	3971,6,c	;volatile
  2384                           
  2385                           ;TM1640.c: 47: TM1640_Delay(1);
  2386  00090C  0E01               	movlw	1
  2387  00090E  EC97  F004         	call	_TM1640_Delay
  2388                           
  2389                           ;TM1640.c: 48: RD5 = 1;
  2390  000912  8A83               	bsf	3971,5,c	;volatile
  2391                           
  2392                           ;TM1640.c: 49: TM1640_Delay(1);
  2393  000914  0E01               	movlw	1
  2394  000916  EC97  F004         	call	_TM1640_Delay
  2395                           
  2396                           ;TM1640.c: 50: RD6 = 1;
  2397  00091A  8C83               	bsf	3971,6,c	;volatile
  2398                           
  2399                           ;TM1640.c: 51: TM1640_Delay(1);
  2400  00091C  0E01               	movlw	1
  2401  00091E  EC97  F004         	call	_TM1640_Delay
  2402                           
  2403                           ;TM1640.c: 52: RD5 = 0;
  2404  000922  9A83               	bcf	3971,5,c	;volatile
  2405                           
  2406                           ;TM1640.c: 53: TM1640_Delay(1);
  2407  000924  0E01               	movlw	1
  2408  000926  EC97  F004         	call	_TM1640_Delay
  2409                           
  2410                           ;TM1640.c: 54: RD6 = 0;
  2411  00092A  9C83               	bcf	3971,6,c	;volatile
  2412  00092C  0012               	return		;funcret
  2413  00092E                     __end_of_TM1640_Start:
  2414                           	opt stack 0
  2415                           tblptru	equ	0xFF8
  2416                           tblptrh	equ	0xFF7
  2417                           tblptrl	equ	0xFF6
  2418                           tablat	equ	0xFF5
  2419                           prodh	equ	0xFF4
  2420                           prodl	equ	0xFF3
  2421                           intcon	equ	0xFF2
  2422                           postinc0	equ	0xFEE
  2423                           wreg	equ	0xFE8
  2424                           postdec1	equ	0xFE5
  2425                           fsr1l	equ	0xFE1
  2426                           indf2	equ	0xFDF
  2427                           fsr2h	equ	0xFDA
  2428                           fsr2l	equ	0xFD9
  2429                           status	equ	0xFD8
  2430                           
  2431 ;; *************** function _TM1640_Delay *****************
  2432 ;; Defined at:
  2433 ;;		line 166 in file "_01_USER/TM1640.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;  Time            1    wreg     unsigned char 
  2436 ;; Auto vars:     Size  Location     Type
  2437 ;;  Time            1    0[BANK0 ] unsigned char 
  2438 ;;  i               1    1[BANK0 ] unsigned char 
  2439 ;; Return value:  Size  Location     Type
  2440 ;;		None               void
  2441 ;; Registers used:
  2442 ;;		wreg, status,2, status,0
  2443 ;; Tracked objects:
  2444 ;;		On entry : 0/0
  2445 ;;		On exit  : 0/0
  2446 ;;		Unchanged: 0/0
  2447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2449 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2451 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2452 ;;Total ram usage:        2 bytes
  2453 ;; Hardware stack levels used:    1
  2454 ;; Hardware stack levels required when called:    3
  2455 ;; This function calls:
  2456 ;;		Nothing
  2457 ;; This function is called by:
  2458 ;;		_TM1640_Start
  2459 ;;		_TM1640_Stop
  2460 ;;		_TM1640_Writer_Byte
  2461 ;; This function uses a non-reentrant model
  2462 ;;
  2463                           
  2464                           	psect	text17
  2465  00092E                     __ptext17:
  2466                           	opt stack 0
  2467  00092E                     _TM1640_Delay:
  2468                           	opt stack 24
  2469                           
  2470                           ;incstack = 0
  2471                           ;TM1640_Delay@Time stored from wreg
  2472  00092E  0100               	movlb	0	; () banked
  2473  000930  6FD4               	movwf	TM1640_Delay@Time& (0+255),b
  2474  000932                     
  2475                           ; BSR set to: 0
  2476                           ;TM1640.c: 171: {
  2477                           ;TM1640.c: 172: for(i=0; i<10; ++i);
  2478  000932  0E00               	movlw	0
  2479  000934  0100               	movlb	0	; () banked
  2480  000936  6FD5               	movwf	TM1640_Delay@i& (0+255),b
  2481  000938  D003               	goto	l2888
  2482                           
  2483                           ; BSR set to: 0
  2484                           
  2485                           ; BSR set to: 0
  2486  00093A  D006               	goto	l398
  2487  00093C                     l2886:
  2488                           
  2489                           ; BSR set to: 0
  2490  00093C  0100               	movlb	0	; () banked
  2491  00093E  2BD5               	incf	TM1640_Delay@i& (0+255),f,b
  2492  000940                     l2888:
  2493                           
  2494                           ; BSR set to: 0
  2495  000940  0E09               	movlw	9
  2496  000942  0100               	movlb	0	; () banked
  2497  000944  65D5               	cpfsgt	TM1640_Delay@i& (0+255),b
  2498  000946  D7FA               	goto	l2886
  2499  000948                     l398:
  2500                           
  2501                           ; BSR set to: 0
  2502                           ;TM1640.c: 173: }while(--Time);
  2503  000948  0100               	movlb	0	; () banked
  2504  00094A  2FD4               	decfsz	TM1640_Delay@Time& (0+255),f,b
  2505  00094C  D7F2               	goto	l2880
  2506  00094E  0012               	return	
  2507                           
  2508                           ; BSR set to: 0
  2509                           
  2510                           ; BSR set to: 0
  2511  000950  0012               	return		;funcret
  2512  000952                     __end_of_TM1640_Delay:
  2513                           	opt stack 0
  2514                           tblptru	equ	0xFF8
  2515                           tblptrh	equ	0xFF7
  2516                           tblptrl	equ	0xFF6
  2517                           tablat	equ	0xFF5
  2518                           prodh	equ	0xFF4
  2519                           prodl	equ	0xFF3
  2520                           intcon	equ	0xFF2
  2521                           postinc0	equ	0xFEE
  2522                           wreg	equ	0xFE8
  2523                           postdec1	equ	0xFE5
  2524                           fsr1l	equ	0xFE1
  2525                           indf2	equ	0xFDF
  2526                           fsr2h	equ	0xFDA
  2527                           fsr2l	equ	0xFD9
  2528                           status	equ	0xFD8
  2529                           
  2530 ;; *************** function _GPIO_Config *****************
  2531 ;; Defined at:
  2532 ;;		line 39 in file "_01_USER/GPIO.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;		None
  2535 ;; Auto vars:     Size  Location     Type
  2536 ;;		None
  2537 ;; Return value:  Size  Location     Type
  2538 ;;		None               void
  2539 ;; Registers used:
  2540 ;;		None
  2541 ;; Tracked objects:
  2542 ;;		On entry : 0/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2550 ;;Total ram usage:        0 bytes
  2551 ;; Hardware stack levels used:    1
  2552 ;; Hardware stack levels required when called:    3
  2553 ;; This function calls:
  2554 ;;		Nothing
  2555 ;; This function is called by:
  2556 ;;		_main
  2557 ;; This function uses a non-reentrant model
  2558 ;;
  2559                           
  2560                           	psect	text18
  2561  0009B0                     __ptext18:
  2562                           	opt stack 0
  2563  0009B0                     _GPIO_Config:
  2564                           	opt stack 27
  2565                           
  2566                           ; BSR set to: 0
  2567                           ;incstack = 0
  2568  0009B0  0012               	return		;funcret
  2569  0009B2                     __end_of_GPIO_Config:
  2570                           	opt stack 0
  2571                           tblptru	equ	0xFF8
  2572                           tblptrh	equ	0xFF7
  2573                           tblptrl	equ	0xFF6
  2574                           tablat	equ	0xFF5
  2575                           prodh	equ	0xFF4
  2576                           prodl	equ	0xFF3
  2577                           intcon	equ	0xFF2
  2578                           postinc0	equ	0xFEE
  2579                           wreg	equ	0xFE8
  2580                           postdec1	equ	0xFE5
  2581                           fsr1l	equ	0xFE1
  2582                           indf2	equ	0xFDF
  2583                           fsr2h	equ	0xFDA
  2584                           fsr2l	equ	0xFD9
  2585                           status	equ	0xFD8
  2586                           
  2587 ;; *************** function _ADC6_Init *****************
  2588 ;; Defined at:
  2589 ;;		line 37 in file "_01_USER/My_ADC.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;		None
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;		None
  2594 ;; Return value:  Size  Location     Type
  2595 ;;		None               void
  2596 ;; Registers used:
  2597 ;;		wreg, status,2, status,0, cstack
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2607 ;;Total ram usage:        0 bytes
  2608 ;; Hardware stack levels used:    1
  2609 ;; Hardware stack levels required when called:    4
  2610 ;; This function calls:
  2611 ;;		_OpenADC
  2612 ;; This function is called by:
  2613 ;;		_main
  2614 ;; This function uses a non-reentrant model
  2615 ;;
  2616                           
  2617                           	psect	text19
  2618  00098A                     __ptext19:
  2619                           	opt stack 0
  2620  00098A                     _ADC6_Init:
  2621                           	opt stack 26
  2622                           
  2623                           ;My_ADC.c: 40: OpenADC(0b11111111 &
  2624                           ;My_ADC.c: 41: 0b11110011 &
  2625                           ;My_ADC.c: 42: 0b10001111
  2626                           ;My_ADC.c: 43: ,
  2627                           ;My_ADC.c: 44: 0b10011011
  2628                           ;My_ADC.c: 45: ,
  2629                           ;My_ADC.c: 46: 0b00111111 &
  2630                           ;My_ADC.c: 47: 0b11111111 &
  2631                           ;My_ADC.c: 48: 0b11110111 &
  2632                           ;My_ADC.c: 49: 0b11111000
  2633                           ;My_ADC.c: 50: );
  2634                           
  2635                           ;incstack = 0
  2636  00098A  0E9B               	movlw	155
  2637  00098C  0100               	movlb	0	; () banked
  2638  00098E  6FD4               	movwf	OpenADC@config2& (0+255),b
  2639  000990  0E30               	movlw	48
  2640  000992  0100               	movlb	0	; () banked
  2641  000994  6FD5               	movwf	OpenADC@config3& (0+255),b
  2642  000996  0E83               	movlw	131
  2643  000998  EC93  F002         	call	_OpenADC
  2644                           
  2645                           ;My_ADC.c: 52: (PIE1bits.ADIE=0);
  2646  00099C  9C9D               	bcf	3997,6,c	;volatile
  2647  00099E  0012               	return		;funcret
  2648  0009A0                     __end_of_ADC6_Init:
  2649                           	opt stack 0
  2650                           tblptru	equ	0xFF8
  2651                           tblptrh	equ	0xFF7
  2652                           tblptrl	equ	0xFF6
  2653                           tablat	equ	0xFF5
  2654                           prodh	equ	0xFF4
  2655                           prodl	equ	0xFF3
  2656                           intcon	equ	0xFF2
  2657                           postinc0	equ	0xFEE
  2658                           wreg	equ	0xFE8
  2659                           postdec1	equ	0xFE5
  2660                           fsr1l	equ	0xFE1
  2661                           indf2	equ	0xFDF
  2662                           fsr2h	equ	0xFDA
  2663                           fsr2l	equ	0xFD9
  2664                           status	equ	0xFD8
  2665                           
  2666 ;; *************** function _OpenADC *****************
  2667 ;; Defined at:
  2668 ;;		line 305 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;  config          1    wreg     unsigned char 
  2671 ;;  config2         1    0[BANK0 ] unsigned char 
  2672 ;;  config3         1    1[BANK0 ] unsigned char 
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;  config          1    4[BANK0 ] unsigned char 
  2675 ;; Return value:  Size  Location     Type
  2676 ;;		None               void
  2677 ;; Registers used:
  2678 ;;		wreg, status,2, status,0
  2679 ;; Tracked objects:
  2680 ;;		On entry : 0/0
  2681 ;;		On exit  : 0/0
  2682 ;;		Unchanged: 0/0
  2683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2684 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2685 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2686 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2687 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2688 ;;Total ram usage:        5 bytes
  2689 ;; Hardware stack levels used:    1
  2690 ;; Hardware stack levels required when called:    3
  2691 ;; This function calls:
  2692 ;;		Nothing
  2693 ;; This function is called by:
  2694 ;;		_ADC6_Init
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698                           	psect	text20
  2699  000526                     __ptext20:
  2700                           	opt stack 0
  2701  000526                     _OpenADC:
  2702                           	opt stack 26
  2703                           
  2704                           ;incstack = 0
  2705                           ;OpenADC@config stored from wreg
  2706  000526  0100               	movlb	0	; () banked
  2707  000528  6FD8               	movwf	OpenADC@config& (0+255),b
  2708                           
  2709                           ; BSR set to: 0
  2710  00052A  0E00               	movlw	0
  2711  00052C  6EC2               	movwf	4034,c	;volatile
  2712  00052E  0E00               	movlw	0
  2713  000530  6EC1               	movwf	4033,c	;volatile
  2714  000532  0E00               	movlw	0
  2715  000534  6EC0               	movwf	4032,c	;volatile
  2716                           
  2717                           ; BSR set to: 0
  2718  000536  0100               	movlb	0	; () banked
  2719  000538  51D4               	movf	OpenADC@config2& (0+255),w,b
  2720  00053A  0B7C               	andlw	124
  2721  00053C  6EC2               	movwf	4034,c	;volatile
  2722                           
  2723                           ; BSR set to: 0
  2724  00053E  C0D5  FFC1         	movff	OpenADC@config3,4033	;volatile
  2725                           
  2726                           ; BSR set to: 0
  2727  000542  C0D8  F0D6         	movff	OpenADC@config,??_OpenADC
  2728  000546  0100               	movlb	0	; () banked
  2729  000548  90D8               	bcf	status,0,c
  2730  00054A  37D6               	rlcf	??_OpenADC& (0+255),f,b
  2731  00054C  0100               	movlb	0	; () banked
  2732  00054E  90D8               	bcf	status,0,c
  2733  000550  37D6               	rlcf	??_OpenADC& (0+255),f,b
  2734  000552  0E38               	movlw	56
  2735  000554  0100               	movlb	0	; () banked
  2736  000556  17D6               	andwf	??_OpenADC& (0+255),f,b
  2737  000558  C0D8  F0D7         	movff	OpenADC@config,??_OpenADC+1
  2738  00055C  0100               	movlb	0	; () banked
  2739  00055E  3BD7               	swapf	(??_OpenADC+1)& (0+255),f,b
  2740  000560  0E0F               	movlw	15
  2741  000562  17D7               	andwf	(??_OpenADC+1)& (0+255),f,b
  2742  000564  0E07               	movlw	7
  2743  000566  0100               	movlb	0	; () banked
  2744  000568  17D7               	andwf	(??_OpenADC+1)& (0+255),f,b
  2745  00056A  0100               	movlb	0	; () banked
  2746  00056C  51D8               	movf	OpenADC@config& (0+255),w,b
  2747  00056E  0B80               	andlw	128
  2748  000570  0100               	movlb	0	; () banked
  2749  000572  11D7               	iorwf	(??_OpenADC+1)& (0+255),w,b
  2750  000574  0100               	movlb	0	; () banked
  2751  000576  11D6               	iorwf	??_OpenADC& (0+255),w,b
  2752  000578  6EC0               	movwf	4032,c	;volatile
  2753                           
  2754                           ; BSR set to: 0
  2755  00057A  0100               	movlb	0	; () banked
  2756  00057C  AFD4               	btfss	OpenADC@config2& (0+255),7,b
  2757  00057E  D003               	goto	l515
  2758                           
  2759                           ; BSR set to: 0
  2760  000580  9C9E               	bcf	3998,6,c	;volatile
  2761  000582  8C9D               	bsf	3997,6,c	;volatile
  2762  000584  8CF2               	bsf	intcon,6,c	;volatile
  2763  000586                     l515:
  2764                           
  2765                           ; BSR set to: 0
  2766  000586  80C2               	bsf	4034,0,c	;volatile
  2767                           
  2768                           ; BSR set to: 0
  2769  000588  0012               	return		;funcret
  2770  00058A                     __end_of_OpenADC:
  2771                           	opt stack 0
  2772                           tblptru	equ	0xFF8
  2773                           tblptrh	equ	0xFF7
  2774                           tblptrl	equ	0xFF6
  2775                           tablat	equ	0xFF5
  2776                           prodh	equ	0xFF4
  2777                           prodl	equ	0xFF3
  2778                           intcon	equ	0xFF2
  2779                           postinc0	equ	0xFEE
  2780                           wreg	equ	0xFE8
  2781                           postdec1	equ	0xFE5
  2782                           fsr1l	equ	0xFE1
  2783                           indf2	equ	0xFDF
  2784                           fsr2h	equ	0xFDA
  2785                           fsr2l	equ	0xFD9
  2786                           status	equ	0xFD8
  2787                           
  2788 ;; *************** function _Sys_Cyc *****************
  2789 ;; Defined at:
  2790 ;;		line 100 in file "_01_USER/My_Timer.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;		None
  2793 ;; Auto vars:     Size  Location     Type
  2794 ;;  _temp           1   23[COMRAM] unsigned char 
  2795 ;; Return value:  Size  Location     Type
  2796 ;;		None               void
  2797 ;; Registers used:
  2798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2799 ;; Tracked objects:
  2800 ;;		On entry : 0/0
  2801 ;;		On exit  : 0/0
  2802 ;;		Unchanged: 0/0
  2803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2805 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2806 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2807 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2808 ;;Total ram usage:       15 bytes
  2809 ;; Hardware stack levels used:    1
  2810 ;; Hardware stack levels required when called:    2
  2811 ;; This function calls:
  2812 ;;		_Key_ScanFSM
  2813 ;;		_Pulse_1Khz
  2814 ;;		___llmod
  2815 ;;		i2_LED_Control
  2816 ;;		i2_SetTimer0
  2817 ;; This function is called by:
  2818 ;;		Interrupt level 2
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           	psect	intcode
  2823  000008                     __pintcode:
  2824                           	opt stack 0
  2825  000008                     _Sys_Cyc:
  2826                           	opt stack 23
  2827                           
  2828                           ; BSR set to: 0
  2829                           ;incstack = 0
  2830  000008  CFFA F046          	movff	pclath,??_Sys_Cyc
  2831  00000C  CFFB F047          	movff	pclatu,??_Sys_Cyc+1
  2832  000010  CFE9 F048          	movff	fsr0l,??_Sys_Cyc+2
  2833  000014  CFEA F049          	movff	fsr0h,??_Sys_Cyc+3
  2834  000018  CFE1 F04A          	movff	fsr1l,??_Sys_Cyc+4
  2835  00001C  CFE2 F04B          	movff	fsr1h,??_Sys_Cyc+5
  2836  000020  CFD9 F04C          	movff	fsr2l,??_Sys_Cyc+6
  2837  000024  CFDA F04D          	movff	fsr2h,??_Sys_Cyc+7
  2838  000028  CFF3 F04E          	movff	prodl,??_Sys_Cyc+8
  2839  00002C  CFF4 F04F          	movff	prodh,??_Sys_Cyc+9
  2840  000030  CFF6 F050          	movff	tblptrl,??_Sys_Cyc+10
  2841  000034  CFF7 F051          	movff	tblptrh,??_Sys_Cyc+11
  2842  000038  CFF8 F052          	movff	tblptru,??_Sys_Cyc+12
  2843  00003C  CFF5 F053          	movff	tablat,??_Sys_Cyc+13
  2844                           
  2845                           ;My_Timer.c: 102: static unsigned char _overturn_LED = 0;
  2846                           ;My_Timer.c: 103: static char _Byte;
  2847                           ;My_Timer.c: 104: static char _flag = 0;
  2848                           ;My_Timer.c: 105: unsigned char _temp;
  2849                           ;My_Timer.c: 108: if(TMR0IF)
  2850  000040  A4F2               	btfss	intcon,2,c	;volatile
  2851  000042  D053               	goto	i2l2566
  2852                           
  2853                           ;My_Timer.c: 109: {
  2854                           ;My_Timer.c: 110: g_Timer_Cyc = (g_Timer_Cyc+1) % 4294967296;
  2855  000044  0E01               	movlw	1
  2856  000046  2401               	addwf	_g_Timer_Cyc,w,c
  2857  000048  6E3D               	movwf	___llmod@dividend,c
  2858  00004A  0E00               	movlw	0
  2859  00004C  2002               	addwfc	_g_Timer_Cyc+1,w,c
  2860  00004E  6E3E               	movwf	___llmod@dividend+1,c
  2861  000050  0E00               	movlw	0
  2862  000052  2003               	addwfc	_g_Timer_Cyc+2,w,c
  2863  000054  6E3F               	movwf	___llmod@dividend+2,c
  2864  000056  0E00               	movlw	0
  2865  000058  2004               	addwfc	_g_Timer_Cyc+3,w,c
  2866  00005A  6E40               	movwf	___llmod@dividend+3,c
  2867  00005C  0E00               	movlw	0
  2868  00005E  6E41               	movwf	___llmod@divisor,c
  2869  000060  0E00               	movlw	0
  2870  000062  6E42               	movwf	___llmod@divisor+1,c
  2871  000064  0E00               	movlw	0
  2872  000066  6E43               	movwf	___llmod@divisor+2,c
  2873  000068  0E00               	movlw	0
  2874  00006A  6E44               	movwf	___llmod@divisor+3,c
  2875  00006C  EC25  F002         	call	___llmod	;wreg free
  2876  000070  C03D  F001         	movff	?___llmod,_g_Timer_Cyc
  2877  000074  C03E  F002         	movff	?___llmod+1,_g_Timer_Cyc+1
  2878  000078  C03F  F003         	movff	?___llmod+2,_g_Timer_Cyc+2
  2879  00007C  C040  F004         	movff	?___llmod+3,_g_Timer_Cyc+3
  2880                           
  2881                           ;My_Timer.c: 111: SetTimer0(78);
  2882  000080  0E00               	movlw	0
  2883  000082  6E3E               	movwf	i2SetTimer0@_tmr+1,c
  2884  000084  0E4E               	movlw	78
  2885  000086  6E3D               	movwf	i2SetTimer0@_tmr,c
  2886  000088  EC0D  F004         	call	i2_SetTimer0	;wreg free
  2887                           
  2888                           ;My_Timer.c: 114: if( g_Timer_Cyc%30 == 0 )
  2889  00008C  C001  F03D         	movff	_g_Timer_Cyc,___llmod@dividend
  2890  000090  C002  F03E         	movff	_g_Timer_Cyc+1,___llmod@dividend+1
  2891  000094  C003  F03F         	movff	_g_Timer_Cyc+2,___llmod@dividend+2
  2892  000098  C004  F040         	movff	_g_Timer_Cyc+3,___llmod@dividend+3
  2893  00009C  0E1E               	movlw	30
  2894  00009E  6E41               	movwf	___llmod@divisor,c
  2895  0000A0  0E00               	movlw	0
  2896  0000A2  6E42               	movwf	___llmod@divisor+1,c
  2897  0000A4  0E00               	movlw	0
  2898  0000A6  6E43               	movwf	___llmod@divisor+2,c
  2899  0000A8  0E00               	movlw	0
  2900  0000AA  6E44               	movwf	___llmod@divisor+3,c
  2901  0000AC  EC25  F002         	call	___llmod	;wreg free
  2902  0000B0  503D               	movf	?___llmod,w,c
  2903  0000B2  103E               	iorwf	?___llmod+1,w,c
  2904  0000B4  103F               	iorwf	?___llmod+2,w,c
  2905  0000B6  1040               	iorwf	?___llmod+3,w,c
  2906  0000B8  A4D8               	btfss	status,2,c
  2907  0000BA  D010               	goto	i2l2562
  2908                           
  2909                           ;My_Timer.c: 115: {
  2910                           ;My_Timer.c: 116: _overturn_LED = ~_overturn_LED;
  2911  0000BC  1E0F               	comf	Sys_Cyc@_overturn_LED,f,c
  2912                           
  2913                           ;My_Timer.c: 117: if(_overturn_LED) LED_Control(3,1);
  2914  0000BE  500F               	movf	Sys_Cyc@_overturn_LED,w,c
  2915  0000C0  B4D8               	btfsc	status,2,c
  2916  0000C2  D006               	goto	i2l2560
  2917  0000C4  0E01               	movlw	1
  2918  0000C6  6E3D               	movwf	i2LED_Control@_switch,c
  2919  0000C8  0E03               	movlw	3
  2920  0000CA  EC39  F003         	call	i2_LED_Control
  2921  0000CE  D006               	goto	i2l2562
  2922  0000D0                     i2l2560:
  2923                           
  2924                           ;My_Timer.c: 118: else LED_Control(3,0);
  2925  0000D0  0E00               	movlw	0
  2926  0000D2  6E3D               	movwf	i2LED_Control@_switch,c
  2927  0000D4  0E03               	movlw	3
  2928  0000D6  EC39  F003         	call	i2_LED_Control
  2929  0000DA  D000               	goto	i2l2562
  2930  0000DC                     i2l2562:
  2931                           
  2932                           ;My_Timer.c: 119: }
  2933                           ;My_Timer.c: 122: if( gs_Handle_Switch._1Khz )
  2934  0000DC  5005               	movf	_gs_Handle_Switch,w,c
  2935  0000DE  A4D8               	btfss	status,2,c
  2936                           
  2937                           ;My_Timer.c: 123: Pulse_1Khz();
  2938  0000E0  EC60  F004         	call	_Pulse_1Khz	;wreg free
  2939                           
  2940                           ;My_Timer.c: 126: Key_ScanFSM();
  2941  0000E4  EC5B  F003         	call	_Key_ScanFSM	;wreg free
  2942  0000E8  D000               	goto	i2l2566
  2943  0000EA                     i2l2566:
  2944                           
  2945                           ;My_Timer.c: 127: }
  2946                           ;My_Timer.c: 130: if( RC1IF )
  2947  0000EA  AA9E               	btfss	3998,5,c	;volatile
  2948  0000EC  D023               	goto	i2l325
  2949                           
  2950                           ;My_Timer.c: 131: {
  2951                           ;My_Timer.c: 132: _temp = RCREG1;
  2952  0000EE  CFAE F054          	movff	4014,Sys_Cyc@_temp	;volatile
  2953                           
  2954                           ;My_Timer.c: 133: if( g_RS485_Receive_Flag == 0 )
  2955  0000F2  5012               	movf	_g_RS485_Receive_Flag,w,c
  2956  0000F4  A4D8               	btfss	status,2,c
  2957  0000F6  D01E               	goto	i2l325
  2958                           
  2959                           ;My_Timer.c: 134: {
  2960                           ;My_Timer.c: 135: if( _temp == 0xff )
  2961  0000F8  2854               	incf	Sys_Cyc@_temp,w,c
  2962  0000FA  A4D8               	btfss	status,2,c
  2963  0000FC  D004               	goto	i2l322
  2964                           
  2965                           ;My_Timer.c: 136: {
  2966                           ;My_Timer.c: 137: _Byte = 10 ;
  2967  0000FE  0E0A               	movlw	10
  2968  000100  6E0D               	movwf	Sys_Cyc@_Byte,c
  2969                           
  2970                           ;My_Timer.c: 138: _flag = 0;
  2971  000102  0E00               	movlw	0
  2972  000104  6E0E               	movwf	Sys_Cyc@_flag,c
  2973  000106                     i2l322:
  2974                           
  2975                           ;My_Timer.c: 139: }
  2976                           ;My_Timer.c: 141: if ( _flag == 0 )
  2977  000106  500E               	movf	Sys_Cyc@_flag,w,c
  2978  000108  A4D8               	btfss	status,2,c
  2979  00010A  D00C               	goto	i2l2580
  2980                           
  2981                           ;My_Timer.c: 142: {
  2982                           ;My_Timer.c: 143: _Byte -- ;
  2983  00010C  060D               	decf	Sys_Cyc@_Byte,f,c
  2984                           
  2985                           ;My_Timer.c: 144: ga_RS485_ReceiveBuff[ _Byte ] = _temp;
  2986  00010E  500D               	movf	Sys_Cyc@_Byte,w,c
  2987  000110  0D01               	mullw	1
  2988  000112  0EB0               	movlw	low _ga_RS485_ReceiveBuff
  2989  000114  24F3               	addwf	prodl,w,c
  2990  000116  6ED9               	movwf	fsr2l,c
  2991  000118  0E00               	movlw	high _ga_RS485_ReceiveBuff
  2992  00011A  20F4               	addwfc	prodh,w,c
  2993  00011C  6EDA               	movwf	fsr2h,c
  2994  00011E  C054  FFDF         	movff	Sys_Cyc@_temp,indf2
  2995  000122  D000               	goto	i2l2580
  2996  000124                     i2l2580:
  2997                           
  2998                           ;My_Timer.c: 145: }
  2999                           ;My_Timer.c: 147: if( _Byte == 0 )
  3000  000124  500D               	movf	Sys_Cyc@_Byte,w,c
  3001  000126  A4D8               	btfss	status,2,c
  3002  000128  D005               	goto	i2l325
  3003                           
  3004                           ;My_Timer.c: 148: {
  3005                           ;My_Timer.c: 149: g_RS485_Receive_Flag = 1 ;
  3006  00012A  0E01               	movlw	1
  3007  00012C  6E12               	movwf	_g_RS485_Receive_Flag,c
  3008                           
  3009                           ;My_Timer.c: 150: _flag = 1;
  3010  00012E  0E01               	movlw	1
  3011  000130  6E0E               	movwf	Sys_Cyc@_flag,c
  3012  000132  D000               	goto	i2l325
  3013  000134                     i2l325:
  3014  000134  C053  FFF5         	movff	??_Sys_Cyc+13,tablat
  3015  000138  C052  FFF8         	movff	??_Sys_Cyc+12,tblptru
  3016  00013C  C051  FFF7         	movff	??_Sys_Cyc+11,tblptrh
  3017  000140  C050  FFF6         	movff	??_Sys_Cyc+10,tblptrl
  3018  000144  C04F  FFF4         	movff	??_Sys_Cyc+9,prodh
  3019  000148  C04E  FFF3         	movff	??_Sys_Cyc+8,prodl
  3020  00014C  C04D  FFDA         	movff	??_Sys_Cyc+7,fsr2h
  3021  000150  C04C  FFD9         	movff	??_Sys_Cyc+6,fsr2l
  3022  000154  C04B  FFE2         	movff	??_Sys_Cyc+5,fsr1h
  3023  000158  C04A  FFE1         	movff	??_Sys_Cyc+4,fsr1l
  3024  00015C  C049  FFEA         	movff	??_Sys_Cyc+3,fsr0h
  3025  000160  C048  FFE9         	movff	??_Sys_Cyc+2,fsr0l
  3026  000164  C047  FFFB         	movff	??_Sys_Cyc+1,pclatu
  3027  000168  C046  FFFA         	movff	??_Sys_Cyc,pclath
  3028  00016C  0011               	retfie		f
  3029  00016E                     __end_of_Sys_Cyc:
  3030                           	opt stack 0
  3031                           pclatu	equ	0xFFB
  3032                           pclath	equ	0xFFA
  3033                           tblptru	equ	0xFF8
  3034                           tblptrh	equ	0xFF7
  3035                           tblptrl	equ	0xFF6
  3036                           tablat	equ	0xFF5
  3037                           prodh	equ	0xFF4
  3038                           prodl	equ	0xFF3
  3039                           intcon	equ	0xFF2
  3040                           postinc0	equ	0xFEE
  3041                           fsr0h	equ	0xFEA
  3042                           fsr0l	equ	0xFE9
  3043                           wreg	equ	0xFE8
  3044                           postdec1	equ	0xFE5
  3045                           fsr1h	equ	0xFE2
  3046                           fsr1l	equ	0xFE1
  3047                           indf2	equ	0xFDF
  3048                           fsr2h	equ	0xFDA
  3049                           fsr2l	equ	0xFD9
  3050                           status	equ	0xFD8
  3051                           
  3052 ;; *************** function i2_SetTimer0 *****************
  3053 ;; Defined at:
  3054 ;;		line 81 in file "_01_USER/My_Timer.c"
  3055 ;; Parameters:    Size  Location     Type
  3056 ;;  _tmr            2    0[COMRAM] unsigned int 
  3057 ;; Auto vars:     Size  Location     Type
  3058 ;;		None
  3059 ;; Return value:  Size  Location     Type
  3060 ;;		None               void
  3061 ;; Registers used:
  3062 ;;		wreg, status,2, status,0
  3063 ;; Tracked objects:
  3064 ;;		On entry : 0/0
  3065 ;;		On exit  : 0/0
  3066 ;;		Unchanged: 0/0
  3067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3068 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3070 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3071 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3072 ;;Total ram usage:        4 bytes
  3073 ;; Hardware stack levels used:    1
  3074 ;; This function calls:
  3075 ;;		Nothing
  3076 ;; This function is called by:
  3077 ;;		_Sys_Cyc
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081                           	psect	text22
  3082  00081A                     __ptext22:
  3083                           	opt stack 0
  3084  00081A                     i2_SetTimer0:
  3085                           	opt stack 24
  3086                           
  3087                           ;My_Timer.c: 83: if(_tmr > 0xffff) _tmr = 0xffff;
  3088                           
  3089                           ;incstack = 0
  3090  00081A  D003               	goto	i2l2500
  3091  00081C  683D               	setf	i2SetTimer0@_tmr,c
  3092  00081E  683E               	setf	i2SetTimer0@_tmr+1,c
  3093  000820  D000               	goto	i2l2500
  3094  000822                     i2l2500:
  3095                           
  3096                           ;My_Timer.c: 84: _tmr=0xffff-_tmr;
  3097  000822  C03D  F03F         	movff	i2SetTimer0@_tmr,??i2_SetTimer0
  3098  000826  C03E  F040         	movff	i2SetTimer0@_tmr+1,??i2_SetTimer0+1
  3099  00082A  1E3F               	comf	??i2_SetTimer0,f,c
  3100  00082C  1E40               	comf	??i2_SetTimer0+1,f,c
  3101  00082E  4A3F               	infsnz	??i2_SetTimer0,f,c
  3102  000830  2A40               	incf	??i2_SetTimer0+1,f,c
  3103  000832  0EFF               	movlw	255
  3104  000834  243F               	addwf	??i2_SetTimer0,w,c
  3105  000836  6E3D               	movwf	i2SetTimer0@_tmr,c
  3106  000838  0EFF               	movlw	255
  3107  00083A  2040               	addwfc	??i2_SetTimer0+1,w,c
  3108  00083C  6E3E               	movwf	i2SetTimer0@_tmr+1,c
  3109                           
  3110                           ;My_Timer.c: 85: TMR0H = _tmr/256;
  3111  00083E  503E               	movf	i2SetTimer0@_tmr+1,w,c
  3112  000840  6ED7               	movwf	4055,c	;volatile
  3113                           
  3114                           ;My_Timer.c: 86: TMR0L = _tmr%256;
  3115  000842  C03D  FFD6         	movff	i2SetTimer0@_tmr,4054	;volatile
  3116                           
  3117                           ;My_Timer.c: 87: TMR0IF = 0;
  3118  000846  94F2               	bcf	intcon,2,c	;volatile
  3119  000848  0012               	return		;funcret
  3120  00084A                     __end_ofi2_SetTimer0:
  3121                           	opt stack 0
  3122                           pclatu	equ	0xFFB
  3123                           pclath	equ	0xFFA
  3124                           tblptru	equ	0xFF8
  3125                           tblptrh	equ	0xFF7
  3126                           tblptrl	equ	0xFF6
  3127                           tablat	equ	0xFF5
  3128                           prodh	equ	0xFF4
  3129                           prodl	equ	0xFF3
  3130                           intcon	equ	0xFF2
  3131                           postinc0	equ	0xFEE
  3132                           fsr0h	equ	0xFEA
  3133                           fsr0l	equ	0xFE9
  3134                           wreg	equ	0xFE8
  3135                           postdec1	equ	0xFE5
  3136                           fsr1h	equ	0xFE2
  3137                           fsr1l	equ	0xFE1
  3138                           indf2	equ	0xFDF
  3139                           fsr2h	equ	0xFDA
  3140                           fsr2l	equ	0xFD9
  3141                           status	equ	0xFD8
  3142                           
  3143 ;; *************** function i2_LED_Control *****************
  3144 ;; Defined at:
  3145 ;;		line 58 in file "_01_USER/GPIO.c"
  3146 ;; Parameters:    Size  Location     Type
  3147 ;;  _LED_num        1    wreg     unsigned char 
  3148 ;;  _switch         1    0[COMRAM] unsigned char 
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;  _LED_num        1    1[COMRAM] unsigned char 
  3151 ;; Return value:  Size  Location     Type
  3152 ;;		None               void
  3153 ;; Registers used:
  3154 ;;		wreg, status,2, status,0
  3155 ;; Tracked objects:
  3156 ;;		On entry : 0/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3160 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3161 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3163 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3164 ;;Total ram usage:        2 bytes
  3165 ;; Hardware stack levels used:    1
  3166 ;; This function calls:
  3167 ;;		Nothing
  3168 ;; This function is called by:
  3169 ;;		_Sys_Cyc
  3170 ;; This function uses a non-reentrant model
  3171 ;;
  3172                           
  3173                           	psect	text23
  3174  000672                     __ptext23:
  3175                           	opt stack 0
  3176  000672                     i2_LED_Control:
  3177                           	opt stack 24
  3178                           
  3179                           ;incstack = 0
  3180                           ;i2LED_Control@_LED_num stored from wreg
  3181  000672  6E3E               	movwf	i2LED_Control@_LED_num,c
  3182                           
  3183                           ;GPIO.c: 62: if(_LED_num == 1)
  3184  000674  043E               	decf	i2LED_Control@_LED_num,w,c
  3185  000676  A4D8               	btfss	status,2,c
  3186  000678  D007               	goto	i2l2516
  3187                           
  3188                           ;GPIO.c: 63: if(_switch) LED_BUS |= 0x01;
  3189  00067A  503D               	movf	i2LED_Control@_switch,w,c
  3190  00067C  B4D8               	btfsc	status,2,c
  3191  00067E  D002               	goto	i2l2514
  3192  000680  8010               	bsf	_LED_BUS,0,c
  3193  000682  D002               	goto	i2l2516
  3194  000684                     i2l2514:
  3195                           
  3196                           ;GPIO.c: 64: else LED_BUS &= 0xFE;
  3197  000684  9010               	bcf	_LED_BUS,0,c
  3198  000686  D000               	goto	i2l2516
  3199  000688                     i2l2516:
  3200                           
  3201                           ;GPIO.c: 66: if(_LED_num == 2)
  3202  000688  0E02               	movlw	2
  3203  00068A  183E               	xorwf	i2LED_Control@_LED_num,w,c
  3204  00068C  A4D8               	btfss	status,2,c
  3205  00068E  D007               	goto	i2l2524
  3206                           
  3207                           ;GPIO.c: 67: if(_switch) LED_BUS |= 0x02;
  3208  000690  503D               	movf	i2LED_Control@_switch,w,c
  3209  000692  B4D8               	btfsc	status,2,c
  3210  000694  D002               	goto	i2l2522
  3211  000696  8210               	bsf	_LED_BUS,1,c
  3212  000698  D002               	goto	i2l2524
  3213  00069A                     i2l2522:
  3214                           
  3215                           ;GPIO.c: 68: else LED_BUS &= 0xFD;
  3216  00069A  9210               	bcf	_LED_BUS,1,c
  3217  00069C  D000               	goto	i2l2524
  3218  00069E                     i2l2524:
  3219                           
  3220                           ;GPIO.c: 70: if(_LED_num == 3)
  3221  00069E  0E03               	movlw	3
  3222  0006A0  183E               	xorwf	i2LED_Control@_LED_num,w,c
  3223  0006A2  A4D8               	btfss	status,2,c
  3224  0006A4  0012               	return	
  3225                           
  3226                           ;GPIO.c: 71: if(_switch) LED_BUS |= 0x04;
  3227  0006A6  503D               	movf	i2LED_Control@_switch,w,c
  3228  0006A8  B4D8               	btfsc	status,2,c
  3229  0006AA  D002               	goto	i2l2530
  3230  0006AC  8410               	bsf	_LED_BUS,2,c
  3231  0006AE  0012               	return	
  3232  0006B0                     i2l2530:
  3233                           
  3234                           ;GPIO.c: 72: else LED_BUS &= 0xFB;
  3235  0006B0  9410               	bcf	_LED_BUS,2,c
  3236  0006B2  0012               	return	
  3237  0006B4  0012               	return		;funcret
  3238  0006B6                     __end_ofi2_LED_Control:
  3239                           	opt stack 0
  3240                           pclatu	equ	0xFFB
  3241                           pclath	equ	0xFFA
  3242                           tblptru	equ	0xFF8
  3243                           tblptrh	equ	0xFF7
  3244                           tblptrl	equ	0xFF6
  3245                           tablat	equ	0xFF5
  3246                           prodh	equ	0xFF4
  3247                           prodl	equ	0xFF3
  3248                           intcon	equ	0xFF2
  3249                           postinc0	equ	0xFEE
  3250                           fsr0h	equ	0xFEA
  3251                           fsr0l	equ	0xFE9
  3252                           wreg	equ	0xFE8
  3253                           postdec1	equ	0xFE5
  3254                           fsr1h	equ	0xFE2
  3255                           fsr1l	equ	0xFE1
  3256                           indf2	equ	0xFDF
  3257                           fsr2h	equ	0xFDA
  3258                           fsr2l	equ	0xFD9
  3259                           status	equ	0xFD8
  3260                           
  3261 ;; *************** function ___llmod *****************
  3262 ;; Defined at:
  3263 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;  dividend        4    0[COMRAM] unsigned long 
  3266 ;;  divisor         4    4[COMRAM] unsigned long 
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;  counter         1    8[COMRAM] unsigned char 
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  4    0[COMRAM] unsigned long 
  3271 ;; Registers used:
  3272 ;;		wreg, status,2, status,0
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3278 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3279 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3281 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3282 ;;Total ram usage:        9 bytes
  3283 ;; Hardware stack levels used:    1
  3284 ;; This function calls:
  3285 ;;		Nothing
  3286 ;; This function is called by:
  3287 ;;		_Sys_Cyc
  3288 ;;		_VerifyCRC
  3289 ;; This function uses a non-reentrant model
  3290 ;;
  3291                           
  3292                           	psect	text24
  3293  00044A                     __ptext24:
  3294                           	opt stack 0
  3295  00044A                     ___llmod:
  3296                           	opt stack 24
  3297                           
  3298                           ;incstack = 0
  3299  00044A  5041               	movf	___llmod@divisor,w,c
  3300  00044C  1042               	iorwf	___llmod@divisor+1,w,c
  3301  00044E  1043               	iorwf	___llmod@divisor+2,w,c
  3302  000450  1044               	iorwf	___llmod@divisor+3,w,c
  3303  000452  B4D8               	btfsc	status,2,c
  3304  000454  D029               	goto	i2l1050
  3305  000456  0E01               	movlw	1
  3306  000458  6E45               	movwf	___llmod@counter,c
  3307  00045A  D007               	goto	i2l2486
  3308  00045C                     i2l2484:
  3309  00045C  90D8               	bcf	status,0,c
  3310  00045E  3641               	rlcf	___llmod@divisor,f,c
  3311  000460  3642               	rlcf	___llmod@divisor+1,f,c
  3312  000462  3643               	rlcf	___llmod@divisor+2,f,c
  3313  000464  3644               	rlcf	___llmod@divisor+3,f,c
  3314  000466  2A45               	incf	___llmod@counter,f,c
  3315  000468  D000               	goto	i2l2486
  3316  00046A                     i2l2486:
  3317  00046A  BE44               	btfsc	___llmod@divisor+3,7,c
  3318  00046C  D002               	goto	i2l2488
  3319  00046E  D7F6               	goto	i2l2484
  3320  000470  D000               	goto	i2l2488
  3321  000472                     i2l2488:
  3322  000472  5041               	movf	___llmod@divisor,w,c
  3323  000474  5C3D               	subwf	___llmod@dividend,w,c
  3324  000476  5042               	movf	___llmod@divisor+1,w,c
  3325  000478  583E               	subwfb	___llmod@dividend+1,w,c
  3326  00047A  5043               	movf	___llmod@divisor+2,w,c
  3327  00047C  583F               	subwfb	___llmod@dividend+2,w,c
  3328  00047E  5044               	movf	___llmod@divisor+3,w,c
  3329  000480  5840               	subwfb	___llmod@dividend+3,w,c
  3330  000482  A0D8               	btfss	status,0,c
  3331  000484  D009               	goto	i2l2492
  3332  000486  5041               	movf	___llmod@divisor,w,c
  3333  000488  5E3D               	subwf	___llmod@dividend,f,c
  3334  00048A  5042               	movf	___llmod@divisor+1,w,c
  3335  00048C  5A3E               	subwfb	___llmod@dividend+1,f,c
  3336  00048E  5043               	movf	___llmod@divisor+2,w,c
  3337  000490  5A3F               	subwfb	___llmod@dividend+2,f,c
  3338  000492  5044               	movf	___llmod@divisor+3,w,c
  3339  000494  5A40               	subwfb	___llmod@dividend+3,f,c
  3340  000496  D000               	goto	i2l2492
  3341  000498                     i2l2492:
  3342  000498  90D8               	bcf	status,0,c
  3343  00049A  3244               	rrcf	___llmod@divisor+3,f,c
  3344  00049C  3243               	rrcf	___llmod@divisor+2,f,c
  3345  00049E  3242               	rrcf	___llmod@divisor+1,f,c
  3346  0004A0  3241               	rrcf	___llmod@divisor,f,c
  3347  0004A2  2E45               	decfsz	___llmod@counter,f,c
  3348  0004A4  D7E6               	goto	i2l2488
  3349  0004A6  D000               	goto	i2l1050
  3350  0004A8                     i2l1050:
  3351  0004A8  C03D  F03D         	movff	___llmod@dividend,?___llmod
  3352  0004AC  C03E  F03E         	movff	___llmod@dividend+1,?___llmod+1
  3353  0004B0  C03F  F03F         	movff	___llmod@dividend+2,?___llmod+2
  3354  0004B4  C040  F040         	movff	___llmod@dividend+3,?___llmod+3
  3355  0004B8  0012               	return		;funcret
  3356  0004BA                     __end_of___llmod:
  3357                           	opt stack 0
  3358                           pclatu	equ	0xFFB
  3359                           pclath	equ	0xFFA
  3360                           tblptru	equ	0xFF8
  3361                           tblptrh	equ	0xFF7
  3362                           tblptrl	equ	0xFF6
  3363                           tablat	equ	0xFF5
  3364                           prodh	equ	0xFF4
  3365                           prodl	equ	0xFF3
  3366                           intcon	equ	0xFF2
  3367                           postinc0	equ	0xFEE
  3368                           fsr0h	equ	0xFEA
  3369                           fsr0l	equ	0xFE9
  3370                           wreg	equ	0xFE8
  3371                           postdec1	equ	0xFE5
  3372                           fsr1h	equ	0xFE2
  3373                           fsr1l	equ	0xFE1
  3374                           indf2	equ	0xFDF
  3375                           fsr2h	equ	0xFDA
  3376                           fsr2l	equ	0xFD9
  3377                           status	equ	0xFD8
  3378                           
  3379 ;; *************** function _Pulse_1Khz *****************
  3380 ;; Defined at:
  3381 ;;		line 86 in file "_01_USER/My_Delay.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;		None
  3384 ;; Auto vars:     Size  Location     Type
  3385 ;;  _pulse          1    3[COMRAM] unsigned char 
  3386 ;; Return value:  Size  Location     Type
  3387 ;;		None               void
  3388 ;; Registers used:
  3389 ;;		wreg, status,2, status,0, cstack
  3390 ;; Tracked objects:
  3391 ;;		On entry : 0/0
  3392 ;;		On exit  : 0/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3396 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3398 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3399 ;;Total ram usage:        1 bytes
  3400 ;; Hardware stack levels used:    1
  3401 ;; Hardware stack levels required when called:    1
  3402 ;; This function calls:
  3403 ;;		_Delay_1Khz
  3404 ;; This function is called by:
  3405 ;;		_Sys_Cyc
  3406 ;; This function uses a non-reentrant model
  3407 ;;
  3408                           
  3409                           	psect	text25
  3410  0008C0                     __ptext25:
  3411                           	opt stack 0
  3412  0008C0                     _Pulse_1Khz:
  3413                           	opt stack 23
  3414                           
  3415                           ;My_Delay.c: 88: unsigned char _pulse = 10;
  3416                           
  3417                           ;incstack = 0
  3418  0008C0  0E0A               	movlw	10
  3419  0008C2  6E40               	movwf	Pulse_1Khz@_pulse,c
  3420                           
  3421                           ;My_Delay.c: 89: static unsigned char _overturn_1Khz = 0;
  3422                           ;My_Delay.c: 91: while( _pulse-- )
  3423  0008C4  D00B               	goto	i2l2288
  3424  0008C6                     i2l2280:
  3425                           
  3426                           ;My_Delay.c: 92: {
  3427                           ;My_Delay.c: 93: _overturn_1Khz =~ _overturn_1Khz;
  3428  0008C6  1E0C               	comf	Pulse_1Khz@_overturn_1Khz,f,c
  3429                           
  3430                           ;My_Delay.c: 94: if(_overturn_1Khz) PORTEbits.RE7 = 1;
  3431  0008C8  500C               	movf	Pulse_1Khz@_overturn_1Khz,w,c
  3432  0008CA  B4D8               	btfsc	status,2,c
  3433  0008CC  D002               	goto	i2l60
  3434  0008CE  8E84               	bsf	3972,7,c	;volatile
  3435  0008D0  D002               	goto	i2l2286
  3436  0008D2                     i2l60:
  3437                           
  3438                           ;My_Delay.c: 95: else PORTEbits.RE7 = 0;
  3439  0008D2  9E84               	bcf	3972,7,c	;volatile
  3440  0008D4  D000               	goto	i2l2286
  3441  0008D6                     i2l2286:
  3442                           
  3443                           ;My_Delay.c: 96: Delay_1Khz();
  3444  0008D6  ECD6  F003         	call	_Delay_1Khz	;wreg free
  3445  0008DA  D000               	goto	i2l2288
  3446  0008DC                     i2l2288:
  3447  0008DC  0640               	decf	Pulse_1Khz@_pulse,f,c
  3448  0008DE  2840               	incf	Pulse_1Khz@_pulse,w,c
  3449  0008E0  A4D8               	btfss	status,2,c
  3450  0008E2  D7F1               	goto	i2l2280
  3451  0008E4  0012               	return		;funcret
  3452  0008E6                     __end_of_Pulse_1Khz:
  3453                           	opt stack 0
  3454                           pclatu	equ	0xFFB
  3455                           pclath	equ	0xFFA
  3456                           tblptru	equ	0xFF8
  3457                           tblptrh	equ	0xFF7
  3458                           tblptrl	equ	0xFF6
  3459                           tablat	equ	0xFF5
  3460                           prodh	equ	0xFF4
  3461                           prodl	equ	0xFF3
  3462                           intcon	equ	0xFF2
  3463                           postinc0	equ	0xFEE
  3464                           fsr0h	equ	0xFEA
  3465                           fsr0l	equ	0xFE9
  3466                           wreg	equ	0xFE8
  3467                           postdec1	equ	0xFE5
  3468                           fsr1h	equ	0xFE2
  3469                           fsr1l	equ	0xFE1
  3470                           indf2	equ	0xFDF
  3471                           fsr2h	equ	0xFDA
  3472                           fsr2l	equ	0xFD9
  3473                           status	equ	0xFD8
  3474                           
  3475 ;; *************** function _Delay_1Khz *****************
  3476 ;; Defined at:
  3477 ;;		line 69 in file "_01_USER/My_Delay.c"
  3478 ;; Parameters:    Size  Location     Type
  3479 ;;		None
  3480 ;; Auto vars:     Size  Location     Type
  3481 ;;  c               1    2[COMRAM] unsigned char 
  3482 ;;  b               1    1[COMRAM] unsigned char 
  3483 ;;  a               1    0[COMRAM] unsigned char 
  3484 ;; Return value:  Size  Location     Type
  3485 ;;		None               void
  3486 ;; Registers used:
  3487 ;;		wreg, status,2, status,0
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3494 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3496 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3497 ;;Total ram usage:        3 bytes
  3498 ;; Hardware stack levels used:    1
  3499 ;; This function calls:
  3500 ;;		Nothing
  3501 ;; This function is called by:
  3502 ;;		_Pulse_1Khz
  3503 ;; This function uses a non-reentrant model
  3504 ;;
  3505                           
  3506                           	psect	text26
  3507  0007AC                     __ptext26:
  3508                           	opt stack 0
  3509  0007AC                     _Delay_1Khz:
  3510                           	opt stack 23
  3511                           
  3512                           ;My_Delay.c: 71: unsigned char a,b,c;
  3513                           ;My_Delay.c: 72: for(c=1;c>0;c--)
  3514                           
  3515                           ;incstack = 0
  3516  0007AC  0E01               	movlw	1
  3517  0007AE  6E3F               	movwf	Delay_1Khz@c,c
  3518  0007B0  503F               	movf	Delay_1Khz@c,w,c
  3519  0007B2  B4D8               	btfsc	status,2,c
  3520  0007B4  0012               	return	
  3521  0007B6  D001               	goto	i2l2038
  3522  0007B8  0012               	return	
  3523  0007BA                     i2l2038:
  3524                           
  3525                           ;My_Delay.c: 73: for(b=32;b>0;b--)
  3526  0007BA  0E20               	movlw	32
  3527  0007BC  6E3E               	movwf	Delay_1Khz@b,c
  3528  0007BE  503E               	movf	Delay_1Khz@b,w,c
  3529  0007C0  B4D8               	btfsc	status,2,c
  3530  0007C2  D00D               	goto	i2l2054
  3531  0007C4  D001               	goto	i2l2042
  3532  0007C6  D00B               	goto	i2l2054
  3533  0007C8                     i2l2042:
  3534                           
  3535                           ;My_Delay.c: 74: for(a=2;a>0;a--);
  3536  0007C8  0E02               	movlw	2
  3537  0007CA  6E3D               	movwf	Delay_1Khz@a,c
  3538  0007CC  503D               	movf	Delay_1Khz@a,w,c
  3539  0007CE  B4D8               	btfsc	status,2,c
  3540  0007D0  D004               	goto	i2l2050
  3541  0007D2  D001               	goto	i2l2046
  3542  0007D4  D002               	goto	i2l2050
  3543  0007D6                     i2l2046:
  3544  0007D6  063D               	decf	Delay_1Khz@a,f,c
  3545  0007D8  D7F9               	goto	L1
  3546  0007DA                     i2l2050:
  3547  0007DA  063E               	decf	Delay_1Khz@b,f,c
  3548  0007DC  D7F0               	goto	L2
  3549  0007DE                     i2l2054:
  3550  0007DE  063F               	decf	Delay_1Khz@c,f,c
  3551  0007E0  D7E7               	goto	L3
  3552  0007E2  0012               	return		;funcret
  3553  0007E4                     __end_of_Delay_1Khz:
  3554                           	opt stack 0
  3555                           pclatu	equ	0xFFB
  3556                           pclath	equ	0xFFA
  3557                           tblptru	equ	0xFF8
  3558                           tblptrh	equ	0xFF7
  3559                           tblptrl	equ	0xFF6
  3560                           tablat	equ	0xFF5
  3561                           prodh	equ	0xFF4
  3562                           prodl	equ	0xFF3
  3563                           intcon	equ	0xFF2
  3564                           postinc0	equ	0xFEE
  3565                           fsr0h	equ	0xFEA
  3566                           fsr0l	equ	0xFE9
  3567                           wreg	equ	0xFE8
  3568                           postdec1	equ	0xFE5
  3569                           fsr1h	equ	0xFE2
  3570                           fsr1l	equ	0xFE1
  3571                           indf2	equ	0xFDF
  3572                           fsr2h	equ	0xFDA
  3573                           fsr2l	equ	0xFD9
  3574                           status	equ	0xFD8
  3575                           
  3576 ;; *************** function _Key_ScanFSM *****************
  3577 ;; Defined at:
  3578 ;;		line 91 in file "_01_USER/Key.c"
  3579 ;; Parameters:    Size  Location     Type
  3580 ;;		None
  3581 ;; Auto vars:     Size  Location     Type
  3582 ;;		None
  3583 ;; Return value:  Size  Location     Type
  3584 ;;		None               void
  3585 ;; Registers used:
  3586 ;;		wreg, status,2, status,0, cstack
  3587 ;; Tracked objects:
  3588 ;;		On entry : 0/0
  3589 ;;		On exit  : 0/0
  3590 ;;		Unchanged: 0/0
  3591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3596 ;;Total ram usage:        0 bytes
  3597 ;; Hardware stack levels used:    1
  3598 ;; Hardware stack levels required when called:    1
  3599 ;; This function calls:
  3600 ;;		_Key_Scan
  3601 ;; This function is called by:
  3602 ;;		_Sys_Cyc
  3603 ;; This function uses a non-reentrant model
  3604 ;;
  3605                           
  3606                           	psect	text27
  3607  0006B6                     __ptext27:
  3608                           	opt stack 0
  3609  0006B6                     _Key_ScanFSM:
  3610                           	opt stack 23
  3611                           
  3612                           ;Key.c: 93: Key_Scan();
  3613                           
  3614                           ;incstack = 0
  3615  0006B6  ECF2  F003         	call	_Key_Scan	;wreg free
  3616                           
  3617                           ;Key.c: 94: if( s_Local_Key_FSM.key_BUS & 0x01 ) s_Local_Key_FSM.a_key_count[0]++;
  3618  0006BA  A028               	btfss	_s_Local_Key_FSM,0,c	;volatile
  3619  0006BC  D003               	goto	i2l2296
  3620  0006BE  4A2B               	infsnz	_s_Local_Key_FSM+3,f,c	;volatile
  3621  0006C0  2A2C               	incf	_s_Local_Key_FSM+4,f,c	;volatile
  3622  0006C2  D000               	goto	i2l2296
  3623  0006C4                     i2l2296:
  3624                           
  3625                           ;Key.c: 95: if( s_Local_Key_FSM.key_BUS & 0x02 ) s_Local_Key_FSM.a_key_count[1]++;
  3626  0006C4  A228               	btfss	_s_Local_Key_FSM,1,c	;volatile
  3627  0006C6  D003               	goto	i2l2300
  3628  0006C8  4A2D               	infsnz	_s_Local_Key_FSM+5,f,c	;volatile
  3629  0006CA  2A2E               	incf	_s_Local_Key_FSM+6,f,c	;volatile
  3630  0006CC  D000               	goto	i2l2300
  3631  0006CE                     i2l2300:
  3632                           
  3633                           ;Key.c: 96: if( s_Local_Key_FSM.key_BUS & 0x04 ) s_Local_Key_FSM.a_key_count[2]++;
  3634  0006CE  A428               	btfss	_s_Local_Key_FSM,2,c	;volatile
  3635  0006D0  D003               	goto	i2l2304
  3636  0006D2  4A2F               	infsnz	_s_Local_Key_FSM+7,f,c	;volatile
  3637  0006D4  2A30               	incf	_s_Local_Key_FSM+8,f,c	;volatile
  3638  0006D6  D000               	goto	i2l2304
  3639  0006D8                     i2l2304:
  3640                           
  3641                           ;Key.c: 97: if( s_Local_Key_FSM.key_BUS & 0x08 ) s_Local_Key_FSM.a_key_count[3]++;
  3642  0006D8  A628               	btfss	_s_Local_Key_FSM,3,c	;volatile
  3643  0006DA  D003               	goto	i2l2308
  3644  0006DC  4A31               	infsnz	_s_Local_Key_FSM+9,f,c	;volatile
  3645  0006DE  2A32               	incf	_s_Local_Key_FSM+10,f,c	;volatile
  3646  0006E0  D000               	goto	i2l2308
  3647  0006E2                     i2l2308:
  3648                           
  3649                           ;Key.c: 98: if( s_Local_Key_FSM.key_BUS & 0x10 ) s_Local_Key_FSM.a_key_count[4]++;
  3650  0006E2  A828               	btfss	_s_Local_Key_FSM,4,c	;volatile
  3651  0006E4  D003               	goto	i2l2312
  3652  0006E6  4A33               	infsnz	_s_Local_Key_FSM+11,f,c	;volatile
  3653  0006E8  2A34               	incf	_s_Local_Key_FSM+12,f,c	;volatile
  3654  0006EA  D000               	goto	i2l2312
  3655  0006EC                     i2l2312:
  3656                           
  3657                           ;Key.c: 99: if( s_Local_Key_FSM.key_BUS & 0x20 ) s_Local_Key_FSM.a_key_count[5]++;
  3658  0006EC  AA28               	btfss	_s_Local_Key_FSM,5,c	;volatile
  3659  0006EE  0012               	return	
  3660  0006F0  4A35               	infsnz	_s_Local_Key_FSM+13,f,c	;volatile
  3661  0006F2  2A36               	incf	_s_Local_Key_FSM+14,f,c	;volatile
  3662  0006F4  0012               	return	
  3663  0006F6  0012               	return		;funcret
  3664  0006F8                     __end_of_Key_ScanFSM:
  3665                           	opt stack 0
  3666                           pclatu	equ	0xFFB
  3667                           pclath	equ	0xFFA
  3668                           tblptru	equ	0xFF8
  3669                           tblptrh	equ	0xFF7
  3670                           tblptrl	equ	0xFF6
  3671                           tablat	equ	0xFF5
  3672                           prodh	equ	0xFF4
  3673                           prodl	equ	0xFF3
  3674                           intcon	equ	0xFF2
  3675                           postinc0	equ	0xFEE
  3676                           fsr0h	equ	0xFEA
  3677                           fsr0l	equ	0xFE9
  3678                           wreg	equ	0xFE8
  3679                           postdec1	equ	0xFE5
  3680                           fsr1h	equ	0xFE2
  3681                           fsr1l	equ	0xFE1
  3682                           indf2	equ	0xFDF
  3683                           fsr2h	equ	0xFDA
  3684                           fsr2l	equ	0xFD9
  3685                           status	equ	0xFD8
  3686                           
  3687 ;; *************** function _Key_Scan *****************
  3688 ;; Defined at:
  3689 ;;		line 69 in file "_01_USER/Key.c"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;		None
  3692 ;; Auto vars:     Size  Location     Type
  3693 ;;		None
  3694 ;; Return value:  Size  Location     Type
  3695 ;;		None               void
  3696 ;; Registers used:
  3697 ;;		wreg, status,2, status,0
  3698 ;; Tracked objects:
  3699 ;;		On entry : 0/0
  3700 ;;		On exit  : 0/0
  3701 ;;		Unchanged: 0/0
  3702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3707 ;;Total ram usage:        0 bytes
  3708 ;; Hardware stack levels used:    1
  3709 ;; This function calls:
  3710 ;;		Nothing
  3711 ;; This function is called by:
  3712 ;;		_Key_ScanFSM
  3713 ;; This function uses a non-reentrant model
  3714 ;;
  3715                           
  3716                           	psect	text28
  3717  0007E4                     __ptext28:
  3718                           	opt stack 0
  3719  0007E4                     _Key_Scan:
  3720                           	opt stack 23
  3721                           
  3722                           ;Key.c: 71: s_Local_Key_FSM.key_BUS = 0x00;
  3723                           
  3724                           ;incstack = 0
  3725  0007E4  0E00               	movlw	0
  3726  0007E6  6E28               	movwf	_s_Local_Key_FSM,c	;volatile
  3727                           
  3728                           ;Key.c: 73: if( RC1 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 0) ;
  3729  0007E8  B282               	btfsc	3970,1,c	;volatile
  3730  0007EA  D002               	goto	i2l2064
  3731  0007EC  8028               	bsf	_s_Local_Key_FSM,0,c	;volatile
  3732  0007EE  D000               	goto	i2l2064
  3733  0007F0                     i2l2064:
  3734                           
  3735                           ;Key.c: 74: if( RF1 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 1) ;
  3736  0007F0  B285               	btfsc	3973,1,c	;volatile
  3737  0007F2  D002               	goto	i2l2068
  3738  0007F4  8228               	bsf	_s_Local_Key_FSM,1,c	;volatile
  3739  0007F6  D000               	goto	i2l2068
  3740  0007F8                     i2l2068:
  3741                           
  3742                           ;Key.c: 75: if( RF2 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 2) ;
  3743  0007F8  B485               	btfsc	3973,2,c	;volatile
  3744  0007FA  D002               	goto	i2l2072
  3745  0007FC  8428               	bsf	_s_Local_Key_FSM,2,c	;volatile
  3746  0007FE  D000               	goto	i2l2072
  3747  000800                     i2l2072:
  3748                           
  3749                           ;Key.c: 76: if( RA4 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 3) ;
  3750  000800  B880               	btfsc	3968,4,c	;volatile
  3751  000802  D002               	goto	i2l2076
  3752  000804  8628               	bsf	_s_Local_Key_FSM,3,c	;volatile
  3753  000806  D000               	goto	i2l2076
  3754  000808                     i2l2076:
  3755                           
  3756                           ;Key.c: 77: if( RA5 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 4) ;
  3757  000808  BA80               	btfsc	3968,5,c	;volatile
  3758  00080A  D002               	goto	i2l2080
  3759  00080C  8828               	bsf	_s_Local_Key_FSM,4,c	;volatile
  3760  00080E  D000               	goto	i2l2080
  3761  000810                     i2l2080:
  3762                           
  3763                           ;Key.c: 78: if( RF3 == 0 ) s_Local_Key_FSM.key_BUS |= (0x01 << 5) ;
  3764  000810  B685               	btfsc	3973,3,c	;volatile
  3765  000812  0012               	return	
  3766  000814  8A28               	bsf	_s_Local_Key_FSM,5,c	;volatile
  3767  000816  0012               	return	
  3768  000818  0012               	return		;funcret
  3769  00081A                     __end_of_Key_Scan:
  3770                           	opt stack 0
  3771  0000                     pclatu	equ	0xFFB
  3772                           pclath	equ	0xFFA
  3773                           tblptru	equ	0xFF8
  3774                           tblptrh	equ	0xFF7
  3775                           tblptrl	equ	0xFF6
  3776                           tablat	equ	0xFF5
  3777                           prodh	equ	0xFF4
  3778                           prodl	equ	0xFF3
  3779                           intcon	equ	0xFF2
  3780                           postinc0	equ	0xFEE
  3781                           fsr0h	equ	0xFEA
  3782                           fsr0l	equ	0xFE9
  3783                           wreg	equ	0xFE8
  3784                           postdec1	equ	0xFE5
  3785                           fsr1h	equ	0xFE2
  3786                           fsr1l	equ	0xFE1
  3787                           indf2	equ	0xFDF
  3788                           fsr2h	equ	0xFDA
  3789                           fsr2l	equ	0xFD9
  3790                           status	equ	0xFD8
  3791                           pclatu	equ	0xFFB
  3792                           pclath	equ	0xFFA
  3793                           tblptru	equ	0xFF8
  3794                           tblptrh	equ	0xFF7
  3795                           tblptrl	equ	0xFF6
  3796                           tablat	equ	0xFF5
  3797                           prodh	equ	0xFF4
  3798                           prodl	equ	0xFF3
  3799                           intcon	equ	0xFF2
  3800                           postinc0	equ	0xFEE
  3801                           fsr0h	equ	0xFEA
  3802                           fsr0l	equ	0xFE9
  3803                           wreg	equ	0xFE8
  3804                           postdec1	equ	0xFE5
  3805                           fsr1h	equ	0xFE2
  3806                           fsr1l	equ	0xFE1
  3807                           indf2	equ	0xFDF
  3808                           fsr2h	equ	0xFDA
  3809                           fsr2l	equ	0xFD9
  3810                           status	equ	0xFD8
  3811                           
  3812                           	psect	rparam
  3813  0000                     pclatu	equ	0xFFB
  3814                           pclath	equ	0xFFA
  3815                           tblptru	equ	0xFF8
  3816                           tblptrh	equ	0xFF7
  3817                           tblptrl	equ	0xFF6
  3818                           tablat	equ	0xFF5
  3819                           prodh	equ	0xFF4
  3820                           prodl	equ	0xFF3
  3821                           intcon	equ	0xFF2
  3822                           postinc0	equ	0xFEE
  3823                           fsr0h	equ	0xFEA
  3824                           fsr0l	equ	0xFE9
  3825                           wreg	equ	0xFE8
  3826                           postdec1	equ	0xFE5
  3827                           fsr1h	equ	0xFE2
  3828                           fsr1l	equ	0xFE1
  3829                           indf2	equ	0xFDF
  3830                           fsr2h	equ	0xFDA
  3831                           fsr2l	equ	0xFD9
  3832                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         160
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     24      84
    BANK0           160     10     126
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _Sys_Cyc in COMRAM

    _Sys_Cyc->___llmod
    _Pulse_1Khz->_Delay_1Khz

Critical Paths under _main in BANK0

    _main->_ShowResult
    _Timer0_Init->_SetTimer0
    _ShowResult->_TM1640_Show_integer
    _TM1640_Show_integer->_TM1640_Writer_Dates
    _TM1640_Show_integer->___lwdiv
    _TM1640_Writer_Dates->___lwmod
    _RS485_Init->_Open1USART
    _Init_TM1640->_TM1640_Writer_Byte
    _TM1640_Writer_Byte->_TM1640_Delay
    _TM1640_Stop->_TM1640_Delay
    _TM1640_Start->_TM1640_Delay
    _ADC6_Init->_OpenADC

Critical Paths under _Sys_Cyc in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Sys_Cyc in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Sys_Cyc in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Sys_Cyc in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Sys_Cyc in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Sys_Cyc in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Sys_Cyc in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Sys_Cyc in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Sys_Cyc in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Sys_Cyc in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Sys_Cyc in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Sys_Cyc in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Sys_Cyc in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Sys_Cyc in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Sys_Cyc in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Sys_Cyc in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7948
                          _ADC6_Init
                        _GPIO_Config
                        _Init_TM1640
                           _Key_Init
                        _LED_Control
                         _RS485_Init
                         _ShowResult
                        _Timer0_Init
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0     218
                          _SetTimer0
 ---------------------------------------------------------------------------------
 (2) _SetTimer0                                            4     2      2     218
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _ShowResult                                           1     1      0    6029
                                              9 BANK0      1     1      0
                        _LED_Control
                _TM1640_Show_integer
                _TM1640_Writer_Dates
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     540
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _TM1640_Show_integer                                  2     0      2    3421
                                              7 BANK0      2     0      2
                _TM1640_Writer_Dates
                            ___lwdiv
                            ___lwmod
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     848
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     703
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) _TM1640_Writer_Dates                                  2     1      1    1490
                                              5 BANK0      2     1      1
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _LED_Control                                          2     1      1     578
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _RS485_Init                                           0     0      0     387
                         _Open1USART
 ---------------------------------------------------------------------------------
 (2) _Open1USART                                           3     1      2     387
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _Key_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_TM1640                                          0     0      0     396
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
 ---------------------------------------------------------------------------------
 (3) _TM1640_Writer_Byte                                   2     2      0     198
                                              2 BANK0      2     2      0
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (3) _TM1640_Stop                                          0     0      0      99
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (3) _TM1640_Start                                         0     0      0      99
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (4) _TM1640_Delay                                         2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC6_Init                                            0     0      0     340
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     340
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Sys_Cyc                                             15    15      0    1155
                                              9 COMRAM    15    15      0
                        _Key_ScanFSM
                         _Pulse_1Khz
                            ___llmod
                      i2_LED_Control
                        i2_SetTimer0
 ---------------------------------------------------------------------------------
 (7) i2_SetTimer0                                          4     2      2      94
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) i2_LED_Control                                        2     1      1     184
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8     671
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) _Pulse_1Khz                                           1     1      0     161
                                              3 COMRAM     1     1      0
                         _Delay_1Khz
 ---------------------------------------------------------------------------------
 (8) _Delay_1Khz                                           3     3      0     138
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (7) _Key_ScanFSM                                          0     0      0       0
                           _Key_Scan
 ---------------------------------------------------------------------------------
 (8) _Key_Scan                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC6_Init
     _OpenADC
   _GPIO_Config
   _Init_TM1640
     _TM1640_Start
       _TM1640_Delay
     _TM1640_Stop
       _TM1640_Delay
     _TM1640_Writer_Byte
       _TM1640_Delay
   _Key_Init
   _LED_Control
   _RS485_Init
     _Open1USART
   _ShowResult
     _LED_Control
     _TM1640_Show_integer
       _TM1640_Writer_Dates
         _TM1640_Start
           _TM1640_Delay
         _TM1640_Stop
           _TM1640_Delay
         _TM1640_Writer_Byte
           _TM1640_Delay
         ___lwmod (ARG)
       ___lwdiv
       ___lwmod
       ___wmul (ARG)
     _TM1640_Writer_Dates
       _TM1640_Start
         _TM1640_Delay
       _TM1640_Stop
         _TM1640_Delay
       _TM1640_Writer_Byte
         _TM1640_Delay
       ___lwmod (ARG)
     ___wmul
   _Timer0_Init
     _SetTimer0

 _Sys_Cyc (ROOT)
   _Key_ScanFSM
     _Key_Scan
   _Pulse_1Khz
     _Delay_1Khz
   ___llmod
   i2_LED_Control
   i2_SetTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      A      7E       5       78.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     18      54       1       88.4%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D2      12        0.0%
DATA                 0      0      D2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Dec 18 13:42:52 2015

                ?_TM1640_Stop 003D  __size_of_TM1640_Writer_Dates 002A                 ?_TM1640_Delay 003D  
         ___wmul@multiplicand 00D6                   __CFG_BORV$3 000000                 ?_TM1640_Start 003D  
                _gf_ADC6_Buff 0009                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000                  __CFG_CP4$OFF 000000  
                __CFG_CP5$OFF 000000                  __CFG_CP6$OFF 000000                  __CFG_CP7$OFF 000000  
                         l515 0586                           l383 05EE                           l384 0608  
                         l580 0438                           l581 043A                           l398 0948  
                         l574 0408                           l578 042A                           _GIE 007F97  
                __CFG_CPB$OFF 000000                           _RC0 007C10                           _RA4 007C04  
                         _RC1 007C11                           _RA5 007C05                           _RF1 007C29  
                         _RD5 007C1D                           _RF2 007C2A                           _RD6 007C1E  
                         _RF3 007C2B                  __CFG_CPD$OFF 000000                           _PSA 007EAB  
                         prod 000FF3                  ?_LED_Control 00D4                           wreg 000FE8  
                ?_GPIO_Config 003D                    _TXSTA1bits 000FAC                    _TXSTA2bits 000F21  
        ?_TM1640_Show_integer 00DB                   ?_RS485_Init 003D                 ??_Key_ScanFSM 003D  
                        l1103 03C8                          l1113 051C                          l3010 03FE  
                        l3002 03E8                          l3022 0420                          l3014 040C  
                        l3006 03F4                          l3040 0740                          l3026 042E  
                        l3018 0416                          l3114 02F0                          l3130 0648  
                        l3118 0344                          l3134 065A                          l3136 0668  
                        l2922 060C                          l2940 036E                          l2942 037C  
                        l2880 0932                          l2928 0622                          l2952 03B8  
                        l2944 0386                          l2960 04CE                          l2962 04DC  
                        l2980 05A8                          l2964 04E6                          l2886 093C  
                        l2888 0940                          l2968 050C                          l2994 05DC  
                        l2986 05C0                          l2978 05A4                          l2988 05C4  
                        _T0CS 007EAD                          _T0SE 007EAC                          _IPEN 007E87  
                        i2l60 08D2                 ??_Init_TM1640 00D8                    _Delay_1Khz 07AC  
                        _main 062E                          fsr0h 000FEA                          fsr1h 000FE2  
                        fsr0l 000FE9                          fsr2h 000FDA                          fsr1l 000FE1  
                        indf2 000FDF                          fsr2l 000FD9                          pclat 000FFA  
                        prodh 000FF4                          prodl 000FF3                          start 016E  
               __CFG_IESO$OFF 000000                 __CFG_FOSC$HS1 000000                 __CFG_MCLRE$ON 000000  
                ___param_bank 000010                ??_TM1640_Delay 00D4               __end_of_OpenADC 058A  
              ??_TM1640_Start 00D6                 __CFG_RETEN$ON 000000                         ?_main 003D  
             __end_of_Sys_Cyc 016E               __end_of___llmod 04BA                         _RC1IF 007CF5  
                       _T0PS0 007EA8                         _T0PS1 007EA9                         _T0PS2 007EAA  
             __end_of___lwdiv 03D2               __end_of___lwmod 0526                         i2l322 0106  
                       i2l325 0134             __end_of_ADC6_Init 09A0                         _TMR0H 000FD7  
                       _TMR0L 000FD6         ??_TM1640_Show_integer 00DD                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
               __CFG_WRT4$OFF 000000                __CFG_EBRT0$OFF 000000                 __CFG_WRT5$OFF 000000  
              __CFG_EBRT1$OFF 000000                 __CFG_WRT6$OFF 000000                __CFG_EBRT2$OFF 000000  
               __CFG_WRT7$OFF 000000                __CFG_EBRT3$OFF 000000                __CFG_EBRT4$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBRT5$OFF 000000                __CFG_EBRT6$OFF 000000  
              __CFG_EBRT7$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBRTB$OFF 000000                         tablat 000FF5  
                       status 000FD8            _TM1640_Writer_Byte 05E2           __end_of_Key_ScanFSM 06F8  
             __initialization 06F8           __end_of_Init_TM1640 08C0           __size_of_RS485_Init 001A  
                __end_of_main 0672           ?_TM1640_Writer_Byte 003D              __end_of_Key_Init 0970  
            __end_of_Key_Scan 081A         i2LED_Control@_LED_num 003E                    _Open1USART 03D2  
                      ??_main 00DE                 __activetblptr 000000          ??_TM1640_Writer_Byte 00D6  
                      _ADCON0 000FC2                        _ADCON1 000FC1                        _ADCON2 000FC0  
            ___llmod@dividend 003D                        _ADRESH 000FC4                        _ADRESL 000FC3  
                      _T08BIT 007EAE                        _ANSEL4 00792C                        _ANSEL6 00792E  
                      _ANSEL7 00792F                        _ANSEL8 007920                        i2l1050 04A8  
             __CFG_BBSIZ$BB2K 000000                        i2l2050 07DA                        i2l2042 07C8  
                      i2l2300 06CE                        i2l2046 07D6                        i2l2054 07DE  
                      i2l2038 07BA                        i2l2080 0810                        i2l2072 0800  
                      i2l2064 07F0                        i2l2312 06EC                        i2l2304 06D8  
                      i2l2076 0808                        i2l2068 07F8                        i2l2308 06E2  
                      i2l2500 0822                        i2l2280 08C6                        i2l2530 06B0  
                      i2l2522 069A                        i2l2514 0684                        i2l2524 069E  
                      i2l2516 0688                        i2l2286 08D6                        i2l2296 06C4  
                      i2l2288 08DC                        i2l2560 00D0                        i2l2562 00DC  
                      i2l2492 0498                        i2l2484 045C                        i2l2580 0124  
                      i2l2486 046A                        i2l2566 00EA                        i2l2488 0472  
               SetTimer0@_tmr 00D4                        _RCREG1 000FAE                        _RCSTA1 000FAB  
                 ?_Delay_1Khz 003D                        _TMR0IE 007F95                        _SPBRG1 000FAF  
                      _TMR0IF 007F92                        _TMR0ON 007EAF                        _TRISC0 007CA0  
                      _TRISA4 007C94                        _TRISC1 007CA1                        _TRISA5 007C95  
                      _TRISC6 007CA6                 TM1640_Delay@i 00D5                        _TRISF1 007CB9  
                      _TRISD5 007CAD                        _TRISC7 007CA7                        _TRISF2 007CBA  
                      _TRISD6 007CAE                        _TRISF3 007CBB                        _TXREG2 000F1C  
                      _TXSTA1 000FAC                 ??_Timer0_Init 00D8                     ??_OpenADC 00D6  
                Sys_Cyc@_Byte 000D        TM1640_Writer_Byte@Date 00D6                  Sys_Cyc@_flag 000E  
              __CFG_XINST$OFF 000000                  Sys_Cyc@_temp 0054        TM1640_Writer_Byte@mask 00D7  
                      ___wmul 0774                __CFG_STVREN$ON 000000                     ??_Sys_Cyc 0046  
                   ??___llmod 0045          Sys_Cyc@_overturn_LED 000F                     ??___lwdiv 00D8  
          __size_of_SetTimer0 003E                     ??___lwmod 00D8                    _ShowResult 0296  
          LED_Control@_switch 00D4                        clear_0 06FE                        clear_1 070A  
        __size_of_TM1640_Stop 0024                    _Pulse_1Khz 08C0                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8          __size_of_LED_Control 0058  
        __size_of_GPIO_Config 0002           _TM1640_Writer_Dates 084A          __end_of_TM1640_Delay 0952  
                 _Key_ScanFSM 06B6          __end_of_TM1640_Start 092E                    __accesstop 0060  
     __end_of__initialization 0730                   _Init_TM1640 089A                  ?i2_SetTimer0 003D  
               ___rparam_used 000001              Pulse_1Khz@_pulse 0040                __pcstackCOMRAM 003D  
      __size_ofi2_LED_Control 0044                  __pidataBANK0 09A0          ?_TM1640_Writer_Dates 00D9  
         __end_of_Timer0_Init 089A                   ?_Open1USART 00D4           __size_of_Delay_1Khz 0038  
                ??_RS485_Init 00D7             __end_of_SetTimer0 0774                    __pbssBANK0 0060  
                   ?_Key_Init 003D                     ?_Key_Scan 003D                   _ReceiveBuff 0060  
             __CFG_PLLCFG$OFF 000000       TM1640_Writer_Dates@Addr 00DA       TM1640_Writer_Dates@Date 00D9  
       ??_TM1640_Writer_Dates 00DA                       ?___wmul 00D4            __end_of_RS485_Init 098A  
                 ?_ShowResult 003D           LED_Control@_LED_num 00D5              Open1USART@config 00D6  
                     _LED_BUS 0010                   ?_Pulse_1Khz 003D                 i2_LED_Control 0672  
                     _SPBRGH1 000FD4                     _ADC6_Init 098A             _ga_RS485_SendBuff 00BA  
                  ??_Key_Init 00D4                    ??_Key_Scan 003D           __size_of_Open1USART 0078  
             __CFG_PWRTEN$OFF 000000                       _OpenADC 0526                       __Hparam 0000  
                 _Timer0_Init 0874                       __Lparam 0000                       _Sys_Cyc 0008  
             __size_of___wmul 0038                       ___llmod 044A                       ___lwdiv 0350  
                     ___lwmod 04BA   __end_of_TM1640_Show_integer 0296                       __pcinit 06F8  
                     __ramtop 1000                       __ptext0 062E                       __ptext1 0874  
                     __ptext2 0736                       __ptext3 0296                       __ptext4 0774  
                     __ptext5 0172                       __ptext6 04BA                       __ptext7 0350  
                     __ptext8 084A                       __ptext9 058A         __size_of_TM1640_Delay 0024  
           __CFG_MSSPMSK$MSK7 000000                ?i2_LED_Control 003D         __size_of_TM1640_Start 0024  
                  ?_ADC6_Init 003D                OpenADC@config2 00D4                OpenADC@config3 00D5  
        end_of_initialization 0730                  ??_Delay_1Khz 003D           __size_of_ShowResult 00BA  
         __size_of_Pulse_1Khz 0026              _gs_Handle_Switch 0005          __size_ofi2_SetTimer0 0030  
                     postdec1 000FE5                       postinc0 000FEE                  _TM1640_Delay 092E  
                _TM1640_Start 090A                     _PORTEbits 000F84              TM1640_Delay@Time 00D4  
          __end_of_Delay_1Khz 07E4   __size_of_TM1640_Writer_Byte 004C             __CFG_SOSCSEL$HIGH 000000  
                ?_Key_ScanFSM 003D                  ?_Init_TM1640 003D                 ??_TM1640_Stop 00D6  
              __end_of___wmul 07AC                  ??_Open1USART 00D6               ??i2_LED_Control 003E  
               ??_LED_Control 00D5                 ??_GPIO_Config 00D4           start_initialization 06F8  
                 _g_Timer_Cyc 0001                   ??_ADC6_Init 00D9    TM1640_Show_integer@Numbers 00DB  
             ___llmod@divisor 0041             __size_of_Key_Init 001E             __size_of_Key_Scan 0036  
             ___llmod@counter 0045                     _SetTimer0 0736            __end_of_Open1USART 044A  
             i2SetTimer0@_tmr 003D                      ??___wmul 00D8                  ??_ShowResult 00DD  
                 __pdataBANK0 00C4          i2LED_Control@_switch 003D           __end_of_TM1640_Stop 090A  
                ??_Pulse_1Khz 0040                   __pbssCOMRAM 0001                 __pcstackBANK0 00D4  
         __end_of_LED_Control 05E2           __end_of_GPIO_Config 09B2            __end_of_ShowResult 0350  
 __end_of_TM1640_Writer_Dates 0874                    ?_SetTimer0 00D4                      ?_OpenADC 00D4  
                ?_Timer0_Init 003D              ___lwdiv@dividend 00D4             __CFG_CCP2MX$PORTC 000000  
          __end_of_Pulse_1Khz 08E6                     __pintcode 0008                      ?_Sys_Cyc 003D  
                    ?___llmod 003D                      ?___lwdiv 00D4                      ?___lwmod 00D4  
             Open1USART@spbrg 00D4              ___lwdiv@quotient 00D9               _s_Local_Key_FSM 0028  
        __size_of_Key_ScanFSM 0042                ___wmul@product 00D8                 OpenADC@config 00D8  
                    _PIE1bits 000F9D          __size_of_Init_TM1640 0026                      _PIR1bits 000F9E  
                 _TM1640_Stop 08E6                    _ADCON0bits 000FC2             ___wmul@multiplier 00D4  
                 _LED_Control 058A                   _GPIO_Config 09B0                   Delay_1Khz@a 003D  
                 Delay_1Khz@b 003E                   Delay_1Khz@c 003F  __size_of_TM1640_Show_integer 0124  
                   copy_data0 0724                      _Key_Init 0952                      _Key_Scan 07E4  
               ??i2_SetTimer0 003F                   ??_SetTimer0 00D6                      __Hrparam 0000  
            __size_of_OpenADC 0064                      __Lrparam 0000            __CFG_BOREN$SBORDIS 000000  
    Pulse_1Khz@_overturn_1Khz 000C              __size_of_Sys_Cyc 0166              __size_of___llmod 0070  
            __size_of___lwdiv 0082              __size_of___lwmod 006C                  _g_RS485_Byte 0011  
        _g_RS485_Receive_Flag 0012                _gsa_Handle_Msg 006A    __end_of_TM1640_Writer_Byte 062E  
             ___lwdiv@divisor 00D6               ___lwdiv@counter 00D8                      __ptext10 0970  
                    __ptext11 03D2                      __ptext20 0526                      __ptext12 0952  
                    __ptext13 089A                      __ptext22 081A                      __ptext14 05E2  
                    __ptext23 0672                      __ptext15 08E6                      __ptext24 044A  
                    __ptext16 090A                      __ptext25 08C0                      __ptext17 092E  
                    __ptext26 07AC                      __ptext18 09B0                      __ptext27 06B6  
                    __ptext19 098A                      __ptext28 07E4                 __size_of_main 0044  
         __CFG_RTCOSC$SOSCREF 000000          __size_of_Timer0_Init 0026           __end_ofi2_SetTimer0 084A  
         __CFG_INTOSCSEL$HIGH 000000                    _LED_Number 00C4            __CFG_WDTEN$SWDTDIS 000000  
                  _INTCONbits 000FF2         __end_ofi2_LED_Control 06B6                    _RS485_Init 0970  
                    intlevel2 0000              ___lwmod@dividend 00D4                    _RCSTA1bits 000FAB  
          __CFG_WDTPS$1048576 000000             _gs_Local_Key_User 0013          _ga_RS485_ReceiveBuff 00B0  
             ___lwmod@divisor 00D6               ___lwmod@counter 00D8           __CFG_BORPWR$ZPBORMV 000000  
          __size_of_ADC6_Init 0016                   i2_SetTimer0 081A           _TM1640_Show_integer 0172  
