

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sun Feb 21 17:24:22 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F67K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    38  0000                     
    39                           	psect	smallconst
    40  001000                     __psmallconst:
    41                           	opt stack 0
    42  001000  00                 	db	0
    43  001001                     _LED_Number:
    44                           	opt stack 0
    45  001001  3F                 	db	63
    46  001002  06                 	db	6
    47  001003  5B                 	db	91
    48  001004  4F                 	db	79
    49  001005  66                 	db	102
    50  001006  6D                 	db	109
    51  001007  7D                 	db	125
    52  001008  07                 	db	7
    53  001009  7F                 	db	127
    54  00100A  6F                 	db	111
    55  00100B                     __end_of_LED_Number:
    56                           	opt stack 0
    57  0000                     _ANSEL10	set	31010
    58  0000                     _ANSEL4	set	31020
    59  0000                     _ANSEL7	set	31023
    60  0000                     _ANSEL8	set	31008
    61  0000                     _ANSEL9	set	31009
    62  0000                     _CCP7OD	set	31044
    63  0000                     _EEADR	set	3938
    64  0000                     _EEADRH	set	3939
    65  0000                     _EECON1bits	set	3967
    66  0000                     _EECON2	set	3966
    67  0000                     _EEDATA	set	3937
    68  0000                     _INTCONbits	set	4082
    69  0000                     _PORTC	set	3970
    70  0000                     _TMR0H	set	4055
    71  0000                     _TMR0L	set	4054
    72  0000                     _TRISAbits	set	3986
    73  0000                     _TRISC	set	3988
    74  0000                     _TRISDbits	set	3989
    75  0000                     _TRISEbits	set	3990
    76  0000                     _TRISFbits	set	3991
    77  0000                     _GIE	set	32663
    78  0000                     _IPEN	set	32391
    79  0000                     _PSA	set	32427
    80  0000                     _RA4	set	31748
    81  0000                     _RA5	set	31749
    82  0000                     _RD2	set	31770
    83  0000                     _RD3	set	31771
    84  0000                     _RE5	set	31781
    85  0000                     _RE6	set	31782
    86  0000                     _RF2	set	31786
    87  0000                     _RF3	set	31787
    88  0000                     _RF4	set	31788
    89  0000                     _RF5	set	31789
    90  0000                     _T08BIT	set	32430
    91  0000                     _T0CS	set	32429
    92  0000                     _T0PS0	set	32424
    93  0000                     _T0PS1	set	32425
    94  0000                     _T0PS2	set	32426
    95  0000                     _T0SE	set	32428
    96  0000                     _TMR0IE	set	32661
    97  0000                     _TMR0IF	set	32658
    98  0000                     _TMR0ON	set	32431
    99                           
   100                           ; #config settings
   101  00100B  00                 	db	0	; dummy byte at the end
   102  0000                     
   103                           	psect	cinit
   104  00172C                     __pcinit:
   105                           	opt stack 0
   106  00172C                     start_initialization:
   107                           	opt stack 0
   108  00172C                     __initialization:
   109                           	opt stack 0
   110                           
   111                           ; Clear objects allocated to COMRAM (30 bytes)
   112  00172C  EE00  F026         	lfsr	0,__pbssCOMRAM
   113  001730  0E1E               	movlw	30
   114  001732                     clear_0:
   115  001732  6AEE               	clrf	postinc0,c
   116  001734  06E8               	decf	wreg,f,c
   117  001736  E1FD               	bnz	clear_0
   118  001738                     end_of_initialization:
   119                           	opt stack 0
   120  001738                     __end_of__initialization:
   121                           	opt stack 0
   122  001738  0E00               	movlw	low (__Lsmallconst shr (0+16))
   123  00173A  6EF8               	movwf	tblptru,c
   124  00173C  0E10               	movlw	high __Lsmallconst
   125  00173E  6EF7               	movwf	tblptrh,c
   126  001740  0100               	movlb	0
   127  001742  EFED  F00A         	goto	_main	;jump to C main() function
   128                           tblptru	equ	0xFF8
   129                           tblptrh	equ	0xFF7
   130                           postinc0	equ	0xFEE
   131                           wreg	equ	0xFE8
   132                           
   133                           	psect	bssCOMRAM
   134  000026                     __pbssCOMRAM:
   135                           	opt stack 0
   136  000026                     _Timer_Cyc:
   137                           	opt stack 0
   138  000026                     	ds	4
   139  00002A                     _IR2184_Timer:
   140                           	opt stack 0
   141  00002A                     	ds	2
   142  00002C                     Manage_Message@F8480:
   143                           	opt stack 0
   144  00002C                     	ds	1
   145  00002D                     Nixie_ShowNum@_t:
   146                           	opt stack 0
   147  00002D                     	ds	1
   148  00002E                     _IR2184_Num:
   149                           	opt stack 0
   150  00002E                     	ds	1
   151  00002F                     _LED2_switch:
   152                           	opt stack 0
   153  00002F                     	ds	1
   154  000030                     _Nix_Flash:
   155                           	opt stack 0
   156  000030                     	ds	1
   157  000031                     main@F8478:
   158                           	opt stack 0
   159  000031                     	ds	1
   160  000032                     _Local_Key_FSM:
   161                           	opt stack 0
   162  000032                     	ds	9
   163  00003B                     _Local_Key_User:
   164                           	opt stack 0
   165  00003B                     	ds	9
   166                           tblptru	equ	0xFF8
   167                           tblptrh	equ	0xFF7
   168                           postinc0	equ	0xFEE
   169                           wreg	equ	0xFE8
   170                           
   171                           	psect	cstackBANK0
   172  000060                     __pcstackBANK0:
   173                           	opt stack 0
   174  000060                     ??_EEPROM_Reads:
   175                           
   176                           ; 0 bytes @ 0x0
   177  000060                     	ds	2
   178  000062                     main@_databuff:
   179                           	opt stack 0
   180                           
   181                           ; 1 bytes @ 0x2
   182  000062                     	ds	1
   183                           tblptru	equ	0xFF8
   184                           tblptrh	equ	0xFF7
   185                           postinc0	equ	0xFEE
   186                           wreg	equ	0xFE8
   187                           
   188                           	psect	cstackCOMRAM
   189  000001                     __pcstackCOMRAM:
   190                           	opt stack 0
   191  000001                     ??_Key_FSM_Read:
   192  000001                     ?___awdiv:
   193                           	opt stack 0
   194  000001                     ?___awmod:
   195                           	opt stack 0
   196  000001                     ?___lwmod:
   197                           	opt stack 0
   198  000001                     ?___llmod:
   199                           	opt stack 0
   200  000001                     Key_FSM_Reset@t:
   201                           	opt stack 0
   202  000001                     Write_b_eep@badd:
   203                           	opt stack 0
   204  000001                     ___awdiv@dividend:
   205                           	opt stack 0
   206  000001                     ___awmod@dividend:
   207                           	opt stack 0
   208  000001                     ___lwmod@dividend:
   209                           	opt stack 0
   210  000001                     i2SetTimer0@_tmr:
   211                           	opt stack 0
   212  000001                     ___llmod@dividend:
   213                           	opt stack 0
   214                           
   215                           ; 4 bytes @ 0x0
   216  000001                     	ds	2
   217  000003                     ??i2_SetTimer0:
   218  000003                     Write_b_eep@bdat:
   219                           	opt stack 0
   220  000003                     ___awdiv@divisor:
   221                           	opt stack 0
   222  000003                     ___awmod@divisor:
   223                           	opt stack 0
   224  000003                     ___lwmod@divisor:
   225                           	opt stack 0
   226                           
   227                           ; 2 bytes @ 0x2
   228  000003                     	ds	1
   229  000004                     Write_b_eep@GIE_BIT_VAL:
   230                           	opt stack 0
   231                           
   232                           ; 1 bytes @ 0x3
   233  000004                     	ds	1
   234  000005                     Key_FSM_Read@key_num_mate:
   235                           	opt stack 0
   236  000005                     ___awdiv@counter:
   237                           	opt stack 0
   238  000005                     ___awmod@counter:
   239                           	opt stack 0
   240  000005                     ___lwmod@counter:
   241                           	opt stack 0
   242  000005                     EEPROM_Writers@Addr:
   243                           	opt stack 0
   244  000005                     ___llmod@divisor:
   245                           	opt stack 0
   246                           
   247                           ; 4 bytes @ 0x4
   248  000005                     	ds	1
   249  000006                     Key_FSM_Read@key_num:
   250                           	opt stack 0
   251  000006                     ___awdiv@sign:
   252                           	opt stack 0
   253  000006                     ___awmod@sign:
   254                           	opt stack 0
   255                           
   256                           ; 1 bytes @ 0x5
   257  000006                     	ds	1
   258  000007                     EEPROM_Writers@DateBuff:
   259                           	opt stack 0
   260  000007                     ___awdiv@quotient:
   261                           	opt stack 0
   262                           
   263                           ; 2 bytes @ 0x6
   264  000007                     	ds	2
   265  000009                     Nixie_ShowNum@_num:
   266                           	opt stack 0
   267  000009                     ___llmod@counter:
   268                           	opt stack 0
   269  000009                     EEPROM_Writers@length:
   270                           	opt stack 0
   271                           
   272                           ; 2 bytes @ 0x8
   273  000009                     	ds	1
   274  00000A                     
   275                           ; 0 bytes @ 0x9
   276  00000A                     	ds	1
   277  00000B                     ??_EEPROM_Writers:
   278                           
   279                           ; 0 bytes @ 0xA
   280  00000B                     	ds	2
   281  00000D                     EEPROM_Writers@i:
   282                           	opt stack 0
   283                           
   284                           ; 1 bytes @ 0xC
   285  00000D                     	ds	1
   286  00000E                     Manage_Message@_databuff:
   287                           	opt stack 0
   288                           
   289                           ; 1 bytes @ 0xD
   290  00000E                     	ds	1
   291  00000F                     ??_Sys_Cyc:
   292                           
   293                           ; 0 bytes @ 0xE
   294  00000F                     	ds	14
   295  00001D                     delay1ms@a:
   296                           	opt stack 0
   297  00001D                     SetTimer0@_tmr:
   298                           	opt stack 0
   299  00001D                     Read_b_eep@badd:
   300                           	opt stack 0
   301                           
   302                           ; 2 bytes @ 0x1C
   303  00001D                     	ds	1
   304  00001E                     delay1ms@b:
   305                           	opt stack 0
   306                           
   307                           ; 1 bytes @ 0x1D
   308  00001E                     	ds	1
   309  00001F                     ??_SetTimer0:
   310  00001F                     delay1ms@c:
   311                           	opt stack 0
   312  00001F                     EEPROM_Reads@Addr:
   313                           	opt stack 0
   314                           
   315                           ; 2 bytes @ 0x1E
   316  00001F                     	ds	1
   317  000020                     delay_ms@_ms:
   318                           	opt stack 0
   319                           
   320                           ; 2 bytes @ 0x1F
   321  000020                     	ds	1
   322  000021                     EEPROM_Reads@DateBuff:
   323                           	opt stack 0
   324                           
   325                           ; 2 bytes @ 0x20
   326  000021                     	ds	1
   327  000022                     ??_Run:
   328  000022                     
   329                           ; 0 bytes @ 0x21
   330  000022                     	ds	1
   331  000023                     EEPROM_Reads@length:
   332                           	opt stack 0
   333                           
   334                           ; 2 bytes @ 0x22
   335  000023                     	ds	2
   336  000025                     EEPROM_Reads@i:
   337                           	opt stack 0
   338                           
   339                           ; 1 bytes @ 0x24
   340  000025                     	ds	1
   341  000026                     tblptru	equ	0xFF8
   342                           tblptrh	equ	0xFF7
   343                           postinc0	equ	0xFEE
   344                           wreg	equ	0xFE8
   345                           
   346                           ; 0 bytes @ 0x25
   347 ;;
   348 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   349 ;;
   350 ;; *************** function _main *****************
   351 ;; Defined at:
   352 ;;		line 36 in file "_01_USER/main.c"
   353 ;; Parameters:    Size  Location     Type
   354 ;;		None
   355 ;; Auto vars:     Size  Location     Type
   356 ;;  _databuff       1    2[BANK0 ] unsigned char [1]
   357 ;; Return value:  Size  Location     Type
   358 ;;                  2   16[None  ] int 
   359 ;; Registers used:
   360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   361 ;; Tracked objects:
   362 ;;		On entry : 0/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   367 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   369 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   370 ;;Total ram usage:        1 bytes
   371 ;; Hardware stack levels required when called:    7
   372 ;; This function calls:
   373 ;;		_EEPROM_Reads
   374 ;;		_IR2184_Init
   375 ;;		_Key_Init
   376 ;;		_Nixie_Init
   377 ;;		_Run
   378 ;;		_Timer0_Init
   379 ;; This function is called by:
   380 ;;		Startup code after reset
   381 ;; This function uses a non-reentrant model
   382 ;;
   383                           
   384                           	psect	text0
   385  0015DA                     __ptext0:
   386                           	opt stack 0
   387  0015DA                     _main:
   388                           	opt stack 24
   389                           
   390                           ;main.c: 39: unsigned char _databuff[1] = {0};
   391                           
   392                           ;incstack = 0
   393  0015DA  C031  F062         	movff	main@F8478,main@_databuff
   394                           
   395                           ;main.c: 42: Key_Init();
   396  0015DE  ECDF  F00B         	call	_Key_Init	;wreg free
   397                           
   398                           ;main.c: 43: Timer0_Init();
   399  0015E2  EC73  F00B         	call	_Timer0_Init	;wreg free
   400                           
   401                           ;main.c: 44: Nixie_Init();
   402  0015E6  ECD5  F00B         	call	_Nixie_Init	;wreg free
   403                           
   404                           ;main.c: 45: IR2184_Init();
   405  0015EA  EC85  F00B         	call	_IR2184_Init	;wreg free
   406                           
   407                           ;main.c: 46: Key_Init();
   408  0015EE  ECDF  F00B         	call	_Key_Init	;wreg free
   409                           
   410                           ;main.c: 48: EEPROM_Reads(0x10,_databuff,1);
   411  0015F2  0E00               	movlw	0
   412  0015F4  6E20               	movwf	EEPROM_Reads@Addr+1,c
   413  0015F6  0E10               	movlw	16
   414  0015F8  6E1F               	movwf	EEPROM_Reads@Addr,c
   415  0015FA  0E62               	movlw	low main@_databuff
   416  0015FC  6E21               	movwf	EEPROM_Reads@DateBuff,c
   417  0015FE  0E00               	movlw	high main@_databuff
   418  001600  6E22               	movwf	EEPROM_Reads@DateBuff+1,c
   419  001602  0E00               	movlw	0
   420  001604  6E24               	movwf	EEPROM_Reads@length+1,c
   421  001606  0E01               	movlw	1
   422  001608  6E23               	movwf	EEPROM_Reads@length,c
   423  00160A  EC12  F00A         	call	_EEPROM_Reads	;wreg free
   424                           
   425                           ;main.c: 49: IR2184_Num = _databuff[0];
   426  00160E  C062  F02E         	movff	main@_databuff,_IR2184_Num
   427  001612  D000               	goto	l1909
   428  001614                     l1909:
   429                           
   430                           ;main.c: 53: {
   431                           ;main.c: 54: Run();
   432  001614  ECDB  F009         	call	_Run	;wreg free
   433  001618  D7FD               	goto	l1909
   434                           
   435                           ;main.c: 55: }
   436                           ;main.c: 57: return 0;
   437                           ;	Return value of _main is never used
   438  00161A  EFA7  F000         	goto	start
   439  00161E                     __end_of_main:
   440                           	opt stack 0
   441                           tblptru	equ	0xFF8
   442                           tblptrh	equ	0xFF7
   443                           postinc0	equ	0xFEE
   444                           wreg	equ	0xFE8
   445                           
   446 ;; *************** function _Timer0_Init *****************
   447 ;; Defined at:
   448 ;;		line 43 in file "_01_USER/My_Timer.c"
   449 ;; Parameters:    Size  Location     Type
   450 ;;		None
   451 ;; Auto vars:     Size  Location     Type
   452 ;;		None
   453 ;; Return value:  Size  Location     Type
   454 ;;		None               void
   455 ;; Registers used:
   456 ;;		wreg, status,2, status,0, cstack
   457 ;; Tracked objects:
   458 ;;		On entry : 0/0
   459 ;;		On exit  : 0/0
   460 ;;		Unchanged: 0/0
   461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   466 ;;Total ram usage:        0 bytes
   467 ;; Hardware stack levels used:    1
   468 ;; Hardware stack levels required when called:    5
   469 ;; This function calls:
   470 ;;		_SetTimer0
   471 ;; This function is called by:
   472 ;;		_main
   473 ;; This function uses a non-reentrant model
   474 ;;
   475                           
   476                           	psect	text1
   477  0016E6                     __ptext1:
   478                           	opt stack 0
   479  0016E6                     _Timer0_Init:
   480                           	opt stack 25
   481                           
   482                           ;My_Timer.c: 45: T08BIT = 0;
   483                           
   484                           ;incstack = 0
   485  0016E6  9CD5               	bcf	4053,6,c	;volatile
   486                           
   487                           ;My_Timer.c: 46: T0CS = 0;
   488  0016E8  9AD5               	bcf	4053,5,c	;volatile
   489                           
   490                           ;My_Timer.c: 47: T0SE = 0;
   491  0016EA  98D5               	bcf	4053,4,c	;volatile
   492                           
   493                           ;My_Timer.c: 48: PSA = 0;
   494  0016EC  96D5               	bcf	4053,3,c	;volatile
   495                           
   496                           ;My_Timer.c: 49: T0PS2 = 1;
   497  0016EE  84D5               	bsf	4053,2,c	;volatile
   498                           
   499                           ;My_Timer.c: 50: T0PS1 = 1;
   500  0016F0  82D5               	bsf	4053,1,c	;volatile
   501                           
   502                           ;My_Timer.c: 51: T0PS0 = 1;
   503  0016F2  80D5               	bsf	4053,0,c	;volatile
   504                           
   505                           ;My_Timer.c: 65: SetTimer0(1);
   506  0016F4  0E00               	movlw	0
   507  0016F6  6E1E               	movwf	SetTimer0@_tmr+1,c
   508  0016F8  0E01               	movlw	1
   509  0016FA  6E1D               	movwf	SetTimer0@_tmr,c
   510  0016FC  EC4B  F00B         	call	_SetTimer0	;wreg free
   511                           
   512                           ;My_Timer.c: 66: TMR0ON = 1;
   513  001700  8ED5               	bsf	4053,7,c	;volatile
   514                           
   515                           ;My_Timer.c: 67: TMR0IE = 1;
   516  001702  8AF2               	bsf	intcon,5,c	;volatile
   517                           
   518                           ;My_Timer.c: 68: IPEN = 0;GIE = 1;
   519  001704  9ED0               	bcf	4048,7,c	;volatile
   520  001706  8EF2               	bsf	intcon,7,c	;volatile
   521  001708  0012               	return		;funcret
   522  00170A                     __end_of_Timer0_Init:
   523                           	opt stack 0
   524                           tblptru	equ	0xFF8
   525                           tblptrh	equ	0xFF7
   526                           intcon	equ	0xFF2
   527                           postinc0	equ	0xFEE
   528                           wreg	equ	0xFE8
   529                           
   530 ;; *************** function _SetTimer0 *****************
   531 ;; Defined at:
   532 ;;		line 81 in file "_01_USER/My_Timer.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;  _tmr            2   28[COMRAM] unsigned int 
   535 ;; Auto vars:     Size  Location     Type
   536 ;;		None
   537 ;; Return value:  Size  Location     Type
   538 ;;		None               void
   539 ;; Registers used:
   540 ;;		wreg, status,2, status,0
   541 ;; Tracked objects:
   542 ;;		On entry : 0/0
   543 ;;		On exit  : 0/0
   544 ;;		Unchanged: 0/0
   545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   546 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   548 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   549 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   550 ;;Total ram usage:        4 bytes
   551 ;; Hardware stack levels used:    1
   552 ;; Hardware stack levels required when called:    4
   553 ;; This function calls:
   554 ;;		Nothing
   555 ;; This function is called by:
   556 ;;		_Timer0_Init
   557 ;; This function uses a non-reentrant model
   558 ;;
   559                           
   560                           	psect	text2
   561  001696                     __ptext2:
   562                           	opt stack 0
   563  001696                     _SetTimer0:
   564                           	opt stack 25
   565                           
   566                           ;My_Timer.c: 84: _tmr=0xffff-_tmr;
   567                           
   568                           ;incstack = 0
   569  001696  C01D  F01F         	movff	SetTimer0@_tmr,??_SetTimer0
   570  00169A  C01E  F020         	movff	SetTimer0@_tmr+1,??_SetTimer0+1
   571  00169E  1E1F               	comf	??_SetTimer0,f,c
   572  0016A0  1E20               	comf	??_SetTimer0+1,f,c
   573  0016A2  4A1F               	infsnz	??_SetTimer0,f,c
   574  0016A4  2A20               	incf	??_SetTimer0+1,f,c
   575  0016A6  0EFF               	movlw	255
   576  0016A8  241F               	addwf	??_SetTimer0,w,c
   577  0016AA  6E1D               	movwf	SetTimer0@_tmr,c
   578  0016AC  0EFF               	movlw	255
   579  0016AE  2020               	addwfc	??_SetTimer0+1,w,c
   580  0016B0  6E1E               	movwf	SetTimer0@_tmr+1,c
   581                           
   582                           ;My_Timer.c: 85: TMR0H = _tmr/256;
   583  0016B2  501E               	movf	SetTimer0@_tmr+1,w,c
   584  0016B4  6ED7               	movwf	4055,c	;volatile
   585                           
   586                           ;My_Timer.c: 86: TMR0L = _tmr%256;
   587  0016B6  C01D  FFD6         	movff	SetTimer0@_tmr,4054	;volatile
   588                           
   589                           ;My_Timer.c: 87: TMR0IF = 0;
   590  0016BA  94F2               	bcf	intcon,2,c	;volatile
   591  0016BC  0012               	return		;funcret
   592  0016BE                     __end_of_SetTimer0:
   593                           	opt stack 0
   594                           tblptru	equ	0xFF8
   595                           tblptrh	equ	0xFF7
   596                           intcon	equ	0xFF2
   597                           postinc0	equ	0xFEE
   598                           wreg	equ	0xFE8
   599                           
   600 ;; *************** function _Run *****************
   601 ;; Defined at:
   602 ;;		line 88 in file "_01_USER/Run.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;		None
   605 ;; Auto vars:     Size  Location     Type
   606 ;;		None
   607 ;; Return value:  Size  Location     Type
   608 ;;		None               void
   609 ;; Registers used:
   610 ;;		wreg, status,2, status,0, cstack
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   618 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   619 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   620 ;;Total ram usage:        2 bytes
   621 ;; Hardware stack levels used:    1
   622 ;; Hardware stack levels required when called:    6
   623 ;; This function calls:
   624 ;;		_delay_ms
   625 ;; This function is called by:
   626 ;;		_main
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630                           	psect	text3
   631  0013B6                     __ptext3:
   632                           	opt stack 0
   633  0013B6                     _Run:
   634                           	opt stack 24
   635                           
   636                           ;Run.c: 90: if( RF4 == 0 )
   637                           
   638                           ;incstack = 0
   639  0013B6  B885               	btfsc	3973,4,c	;volatile
   640  0013B8  D019               	goto	l1881
   641                           
   642                           ;Run.c: 91: {
   643                           ;Run.c: 92: IR2184_Timer = 0;
   644  0013BA  0E00               	movlw	0
   645  0013BC  6E2B               	movwf	_IR2184_Timer+1,c
   646  0013BE  0E00               	movlw	0
   647  0013C0  6E2A               	movwf	_IR2184_Timer,c
   648                           
   649                           ;Run.c: 93: RD2 = 0; RD3 = 1;
   650  0013C2  9483               	bcf	3971,2,c	;volatile
   651  0013C4  8683               	bsf	3971,3,c	;volatile
   652                           
   653                           ;Run.c: 94: while( IR2184_Timer < IR2184_Num );
   654  0013C6  D000               	goto	l1877
   655  0013C8                     l1877:
   656  0013C8  502E               	movf	_IR2184_Num,w,c
   657  0013CA  6E22               	movwf	??_Run& (0+255),c
   658  0013CC  6A23               	clrf	(??_Run+1)& (0+255),c
   659  0013CE  5022               	movf	??_Run,w,c
   660  0013D0  5C2A               	subwf	_IR2184_Timer,w,c
   661  0013D2  5023               	movf	??_Run+1,w,c
   662  0013D4  582B               	subwfb	_IR2184_Timer+1,w,c
   663  0013D6  A0D8               	btfss	status,0,c
   664  0013D8  D7F7               	goto	l1877
   665                           
   666                           ;Run.c: 95: RD2 = 1; RD3 = 0;
   667  0013DA  8483               	bsf	3971,2,c	;volatile
   668  0013DC  9683               	bcf	3971,3,c	;volatile
   669                           
   670                           ;Run.c: 97: delay_ms(20);
   671  0013DE  0E00               	movlw	0
   672  0013E0  6E21               	movwf	delay_ms@_ms+1,c
   673  0013E2  0E14               	movlw	20
   674  0013E4  6E20               	movwf	delay_ms@_ms,c
   675  0013E6  ECA3  F00B         	call	_delay_ms	;wreg free
   676  0013EA  D000               	goto	l1881
   677  0013EC                     l1881:
   678                           
   679                           ;Run.c: 98: }
   680                           ;Run.c: 100: if( RF5 == 0 )
   681  0013EC  BA85               	btfsc	3973,5,c	;volatile
   682  0013EE  0012               	return	
   683                           
   684                           ;Run.c: 101: {
   685                           ;Run.c: 102: IR2184_Timer = 0;
   686  0013F0  0E00               	movlw	0
   687  0013F2  6E2B               	movwf	_IR2184_Timer+1,c
   688  0013F4  0E00               	movlw	0
   689  0013F6  6E2A               	movwf	_IR2184_Timer,c
   690                           
   691                           ;Run.c: 103: RE5 = 0; RE6 = 1;
   692  0013F8  9A84               	bcf	3972,5,c	;volatile
   693  0013FA  8C84               	bsf	3972,6,c	;volatile
   694                           
   695                           ;Run.c: 104: while( IR2184_Timer < IR2184_Num );
   696  0013FC  D000               	goto	l1889
   697  0013FE                     l1889:
   698  0013FE  502E               	movf	_IR2184_Num,w,c
   699  001400  6E22               	movwf	??_Run& (0+255),c
   700  001402  6A23               	clrf	(??_Run+1)& (0+255),c
   701  001404  5022               	movf	??_Run,w,c
   702  001406  5C2A               	subwf	_IR2184_Timer,w,c
   703  001408  5023               	movf	??_Run+1,w,c
   704  00140A  582B               	subwfb	_IR2184_Timer+1,w,c
   705  00140C  A0D8               	btfss	status,0,c
   706  00140E  D7F7               	goto	l1889
   707                           
   708                           ;Run.c: 105: RE5 = 1; RE6 = 0;
   709  001410  8A84               	bsf	3972,5,c	;volatile
   710  001412  9C84               	bcf	3972,6,c	;volatile
   711                           
   712                           ;Run.c: 107: delay_ms(20);
   713  001414  0E00               	movlw	0
   714  001416  6E21               	movwf	delay_ms@_ms+1,c
   715  001418  0E14               	movlw	20
   716  00141A  6E20               	movwf	delay_ms@_ms,c
   717  00141C  ECA3  F00B         	call	_delay_ms	;wreg free
   718  001420  0012               	return	
   719  001422  0012               	return		;funcret
   720  001424                     __end_of_Run:
   721                           	opt stack 0
   722                           tblptru	equ	0xFF8
   723                           tblptrh	equ	0xFF7
   724                           intcon	equ	0xFF2
   725                           postinc0	equ	0xFEE
   726                           wreg	equ	0xFE8
   727                           status	equ	0xFD8
   728                           
   729 ;; *************** function _delay_ms *****************
   730 ;; Defined at:
   731 ;;		line 35 in file "_01_USER/My_Delay.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;  _ms             2   31[COMRAM] unsigned int 
   734 ;; Auto vars:     Size  Location     Type
   735 ;;		None
   736 ;; Return value:  Size  Location     Type
   737 ;;		None               void
   738 ;; Registers used:
   739 ;;		wreg, status,2, status,0, cstack
   740 ;; Tracked objects:
   741 ;;		On entry : 0/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   745 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   748 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   749 ;;Total ram usage:        2 bytes
   750 ;; Hardware stack levels used:    1
   751 ;; Hardware stack levels required when called:    5
   752 ;; This function calls:
   753 ;;		_delay1ms
   754 ;; This function is called by:
   755 ;;		_Run
   756 ;; This function uses a non-reentrant model
   757 ;;
   758                           
   759                           	psect	text4
   760  001746                     __ptext4:
   761                           	opt stack 0
   762  001746                     _delay_ms:
   763                           	opt stack 24
   764                           
   765                           ;My_Delay.c: 37: while(_ms--) delay1ms();
   766                           
   767                           ;incstack = 0
   768  001746  D003               	goto	l1807
   769  001748                     l1805:
   770  001748  EC2F  F00B         	call	_delay1ms	;wreg free
   771  00174C  D000               	goto	l1807
   772  00174E                     l1807:
   773  00174E  0620               	decf	delay_ms@_ms,f,c
   774  001750  A0D8               	btfss	status,0,c
   775  001752  0621               	decf	delay_ms@_ms+1,f,c
   776  001754  2820               	incf	delay_ms@_ms,w,c
   777  001756  E1F8               	bnz	l1805
   778  001758  2821               	incf	delay_ms@_ms+1,w,c
   779  00175A  A4D8               	btfss	status,2,c
   780  00175C  D7F5               	goto	l1805
   781  00175E  0012               	return		;funcret
   782  001760                     __end_of_delay_ms:
   783                           	opt stack 0
   784                           tblptru	equ	0xFF8
   785                           tblptrh	equ	0xFF7
   786                           intcon	equ	0xFF2
   787                           postinc0	equ	0xFEE
   788                           wreg	equ	0xFE8
   789                           status	equ	0xFD8
   790                           
   791 ;; *************** function _delay1ms *****************
   792 ;; Defined at:
   793 ;;		line 58 in file "_01_USER/My_Delay.c"
   794 ;; Parameters:    Size  Location     Type
   795 ;;		None
   796 ;; Auto vars:     Size  Location     Type
   797 ;;  c               1   30[COMRAM] unsigned char 
   798 ;;  b               1   29[COMRAM] unsigned char 
   799 ;;  a               1   28[COMRAM] unsigned char 
   800 ;; Return value:  Size  Location     Type
   801 ;;		None               void
   802 ;; Registers used:
   803 ;;		wreg, status,2, status,0
   804 ;; Tracked objects:
   805 ;;		On entry : 0/0
   806 ;;		On exit  : 0/0
   807 ;;		Unchanged: 0/0
   808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   810 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   812 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   813 ;;Total ram usage:        3 bytes
   814 ;; Hardware stack levels used:    1
   815 ;; Hardware stack levels required when called:    4
   816 ;; This function calls:
   817 ;;		Nothing
   818 ;; This function is called by:
   819 ;;		_delay_ms
   820 ;; This function uses a non-reentrant model
   821 ;;
   822                           
   823                           	psect	text5
   824  00165E                     __ptext5:
   825                           	opt stack 0
   826  00165E                     _delay1ms:
   827                           	opt stack 24
   828                           
   829                           ;My_Delay.c: 60: unsigned char a,b,c;
   830                           ;My_Delay.c: 61: for(c=1;c>0;c--)
   831                           
   832                           ;incstack = 0
   833  00165E  0E01               	movlw	1
   834  001660  6E1F               	movwf	delay1ms@c,c
   835  001662  501F               	movf	delay1ms@c,w,c
   836  001664  B4D8               	btfsc	status,2,c
   837  001666  0012               	return	
   838  001668  D001               	goto	l1775
   839  00166A  0012               	return	
   840  00166C                     l1775:
   841                           
   842                           ;My_Delay.c: 62: for(b=94;b>0;b--)
   843  00166C  0E5E               	movlw	94
   844  00166E  6E1E               	movwf	delay1ms@b,c
   845  001670  501E               	movf	delay1ms@b,w,c
   846  001672  B4D8               	btfsc	status,2,c
   847  001674  D00D               	goto	l1791
   848  001676  D001               	goto	l1779
   849  001678  D00B               	goto	l1791
   850  00167A                     l1779:
   851                           
   852                           ;My_Delay.c: 63: for(a=2;a>0;a--);
   853  00167A  0E02               	movlw	2
   854  00167C  6E1D               	movwf	delay1ms@a,c
   855  00167E  501D               	movf	delay1ms@a,w,c
   856  001680  B4D8               	btfsc	status,2,c
   857  001682  D004               	goto	l1787
   858  001684  D001               	goto	l1783
   859  001686  D002               	goto	l1787
   860  001688                     l1783:
   861  001688  061D               	decf	delay1ms@a,f,c
   862  00168A  D7F9               	goto	L1
   863  00168C                     l1787:
   864  00168C  061E               	decf	delay1ms@b,f,c
   865  00168E  D7F0               	goto	L2
   866  001690                     l1791:
   867  001690  061F               	decf	delay1ms@c,f,c
   868  001692  D7E7               	goto	L3
   869  001694  0012               	return		;funcret
   870  001696                     __end_of_delay1ms:
   871                           	opt stack 0
   872                           tblptru	equ	0xFF8
   873                           tblptrh	equ	0xFF7
   874                           intcon	equ	0xFF2
   875                           postinc0	equ	0xFEE
   876                           wreg	equ	0xFE8
   877                           status	equ	0xFD8
   878                           
   879 ;; *************** function _Nixie_Init *****************
   880 ;; Defined at:
   881 ;;		line 31 in file "_01_USER/Nixie.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;		None
   884 ;; Auto vars:     Size  Location     Type
   885 ;;		None
   886 ;; Return value:  Size  Location     Type
   887 ;;		None               void
   888 ;; Registers used:
   889 ;;		wreg, status,2
   890 ;; Tracked objects:
   891 ;;		On entry : 0/0
   892 ;;		On exit  : 0/0
   893 ;;		Unchanged: 0/0
   894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   899 ;;Total ram usage:        0 bytes
   900 ;; Hardware stack levels used:    1
   901 ;; Hardware stack levels required when called:    4
   902 ;; This function calls:
   903 ;;		Nothing
   904 ;; This function is called by:
   905 ;;		_main
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           	psect	text6
   910  0017AA                     __ptext6:
   911                           	opt stack 0
   912  0017AA                     _Nixie_Init:
   913                           	opt stack 26
   914                           
   915                           ;Nixie.c: 33: TRISC = 0;
   916                           
   917                           ;incstack = 0
   918  0017AA  0E00               	movlw	0
   919  0017AC  6E94               	movwf	3988,c	;volatile
   920                           
   921                           ;Nixie.c: 34: TRISAbits.TRISA4 = 0;
   922  0017AE  9892               	bcf	3986,4,c	;volatile
   923                           
   924                           ;Nixie.c: 35: TRISAbits.TRISA5 = 0;
   925  0017B0  9A92               	bcf	3986,5,c	;volatile
   926                           
   927                           ;Nixie.c: 36: ANSEL4 = 0;
   928  0017B2  010F               	movlb	15	; () banked
   929  0017B4  9925               	bcf	37,4,b	;volatile
   930                           
   931                           ; BSR set to: 15
   932                           ;Nixie.c: 38: PORTC = 0xff;
   933  0017B6  6882               	setf	3970,c	;volatile
   934                           
   935                           ; BSR set to: 15
   936                           ;Nixie.c: 40: RA4 = 1 , RA5 = 0;
   937  0017B8  8880               	bsf	3968,4,c	;volatile
   938                           
   939                           ; BSR set to: 15
   940  0017BA  9A80               	bcf	3968,5,c	;volatile
   941                           
   942                           ; BSR set to: 15
   943  0017BC  0012               	return		;funcret
   944  0017BE                     __end_of_Nixie_Init:
   945                           	opt stack 0
   946                           tblptru	equ	0xFF8
   947                           tblptrh	equ	0xFF7
   948                           intcon	equ	0xFF2
   949                           postinc0	equ	0xFEE
   950                           wreg	equ	0xFE8
   951                           status	equ	0xFD8
   952                           
   953 ;; *************** function _Key_Init *****************
   954 ;; Defined at:
   955 ;;		line 39 in file "_01_USER/Key.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;		None
   958 ;; Auto vars:     Size  Location     Type
   959 ;;		None
   960 ;; Return value:  Size  Location     Type
   961 ;;		None               void
   962 ;; Registers used:
   963 ;;		None
   964 ;; Tracked objects:
   965 ;;		On entry : 0/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   973 ;;Total ram usage:        0 bytes
   974 ;; Hardware stack levels used:    1
   975 ;; Hardware stack levels required when called:    4
   976 ;; This function calls:
   977 ;;		Nothing
   978 ;; This function is called by:
   979 ;;		_main
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983                           	psect	text7
   984  0017BE                     __ptext7:
   985                           	opt stack 0
   986  0017BE                     _Key_Init:
   987                           	opt stack 26
   988                           
   989                           ;Key.c: 41: TRISFbits.TRISF2 = 1;
   990                           
   991                           ; BSR set to: 15
   992                           ;incstack = 0
   993  0017BE  8497               	bsf	3991,2,c	;volatile
   994                           
   995                           ;Key.c: 42: TRISFbits.TRISF3 = 1;
   996  0017C0  8697               	bsf	3991,3,c	;volatile
   997                           
   998                           ;Key.c: 44: ANSEL7 = 0;
   999  0017C2  010F               	movlb	15	; () banked
  1000  0017C4  9F25               	bcf	37,7,b	;volatile
  1001                           
  1002                           ;Key.c: 45: ANSEL8 = 0;
  1003  0017C6  010F               	movlb	15	; () banked
  1004  0017C8  9124               	bcf	36,0,b	;volatile
  1005                           
  1006                           ; BSR set to: 15
  1007  0017CA  0012               	return		;funcret
  1008  0017CC                     __end_of_Key_Init:
  1009                           	opt stack 0
  1010                           tblptru	equ	0xFF8
  1011                           tblptrh	equ	0xFF7
  1012                           intcon	equ	0xFF2
  1013                           postinc0	equ	0xFEE
  1014                           wreg	equ	0xFE8
  1015                           status	equ	0xFD8
  1016                           
  1017 ;; *************** function _IR2184_Init *****************
  1018 ;; Defined at:
  1019 ;;		line 27 in file "_01_USER/IR2184.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;		None
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;		None
  1024 ;; Return value:  Size  Location     Type
  1025 ;;		None               void
  1026 ;; Registers used:
  1027 ;;		None
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1037 ;;Total ram usage:        0 bytes
  1038 ;; Hardware stack levels used:    1
  1039 ;; Hardware stack levels required when called:    4
  1040 ;; This function calls:
  1041 ;;		Nothing
  1042 ;; This function is called by:
  1043 ;;		_main
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           
  1047                           	psect	text8
  1048  00170A                     __ptext8:
  1049                           	opt stack 0
  1050  00170A                     _IR2184_Init:
  1051                           	opt stack 26
  1052                           
  1053                           ;IR2184.c: 29: TRISDbits.TRISD2 = 0;
  1054                           
  1055                           ; BSR set to: 15
  1056                           ;incstack = 0
  1057  00170A  9495               	bcf	3989,2,c	;volatile
  1058                           
  1059                           ;IR2184.c: 30: TRISDbits.TRISD3 = 0;
  1060  00170C  9695               	bcf	3989,3,c	;volatile
  1061                           
  1062                           ;IR2184.c: 32: TRISEbits.TRISE5 = 0;
  1063  00170E  9A96               	bcf	3990,5,c	;volatile
  1064                           
  1065                           ;IR2184.c: 33: TRISEbits.TRISE6 = 0;
  1066  001710  9C96               	bcf	3990,6,c	;volatile
  1067                           
  1068                           ;IR2184.c: 34: CCP7OD = 0;
  1069  001712  010F               	movlb	15	; () banked
  1070  001714  9928               	bcf	40,4,b	;volatile
  1071                           
  1072                           ;IR2184.c: 36: TRISFbits.TRISF5 = 1;
  1073  001716  8A97               	bsf	3991,5,c	;volatile
  1074                           
  1075                           ;IR2184.c: 37: TRISFbits.TRISF4 = 1;
  1076  001718  8897               	bsf	3991,4,c	;volatile
  1077                           
  1078                           ;IR2184.c: 38: ANSEL9 = 0;
  1079  00171A  010F               	movlb	15	; () banked
  1080  00171C  9324               	bcf	36,1,b	;volatile
  1081                           
  1082                           ;IR2184.c: 39: ANSEL10 = 0;
  1083  00171E  010F               	movlb	15	; () banked
  1084  001720  9524               	bcf	36,2,b	;volatile
  1085                           
  1086                           ;IR2184.c: 41: RD2 = 1; RD3 = 0;
  1087  001722  8483               	bsf	3971,2,c	;volatile
  1088  001724  9683               	bcf	3971,3,c	;volatile
  1089                           
  1090                           ;IR2184.c: 42: RE5 = 1; RE6 = 0;
  1091  001726  8A84               	bsf	3972,5,c	;volatile
  1092  001728  9C84               	bcf	3972,6,c	;volatile
  1093                           
  1094                           ; BSR set to: 15
  1095  00172A  0012               	return		;funcret
  1096  00172C                     __end_of_IR2184_Init:
  1097                           	opt stack 0
  1098                           tblptru	equ	0xFF8
  1099                           tblptrh	equ	0xFF7
  1100                           intcon	equ	0xFF2
  1101                           postinc0	equ	0xFEE
  1102                           wreg	equ	0xFE8
  1103                           status	equ	0xFD8
  1104                           
  1105 ;; *************** function _EEPROM_Reads *****************
  1106 ;; Defined at:
  1107 ;;		line 18 in file "_01_USER/EEPROM.c"
  1108 ;; Parameters:    Size  Location     Type
  1109 ;;  Addr            2   30[COMRAM] unsigned int 
  1110 ;;  DateBuff        2   32[COMRAM] PTR unsigned char 
  1111 ;;		 -> main@_databuff(1), 
  1112 ;;  length          2   34[COMRAM] unsigned int 
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;  i               1   36[COMRAM] unsigned char 
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  1    wreg      unsigned char 
  1117 ;; Registers used:
  1118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1124 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1125 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1126 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1127 ;;      Totals:         7       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1128 ;;Total ram usage:        9 bytes
  1129 ;; Hardware stack levels used:    1
  1130 ;; Hardware stack levels required when called:    5
  1131 ;; This function calls:
  1132 ;;		_Read_b_eep
  1133 ;; This function is called by:
  1134 ;;		_main
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           
  1138                           	psect	text9
  1139  001424                     __ptext9:
  1140                           	opt stack 0
  1141  001424                     _EEPROM_Reads:
  1142                           	opt stack 25
  1143                           
  1144                           ;EEPROM.c: 20: unsigned char i;
  1145                           ;EEPROM.c: 22: if(Addr + length <= 1024)
  1146                           
  1147                           ; BSR set to: 15
  1148                           ;incstack = 0
  1149  001424  5023               	movf	EEPROM_Reads@length,w,c
  1150  001426  241F               	addwf	EEPROM_Reads@Addr,w,c
  1151  001428  0100               	movlb	0	; () banked
  1152  00142A  6F60               	movwf	??_EEPROM_Reads& (0+255),b
  1153  00142C  5024               	movf	EEPROM_Reads@length+1,w,c
  1154  00142E  2020               	addwfc	EEPROM_Reads@Addr+1,w,c
  1155  001430  0100               	movlb	0	; () banked
  1156  001432  6F61               	movwf	(??_EEPROM_Reads+1)& (0+255),b
  1157  001434  0100               	movlb	0	; () banked
  1158  001436  0560               	decf	??_EEPROM_Reads& (0+255),w,b
  1159  001438  0E04               	movlw	4
  1160  00143A  0100               	movlb	0	; () banked
  1161  00143C  5961               	subwfb	(??_EEPROM_Reads+1)& (0+255),w,b
  1162  00143E  B0D8               	btfsc	status,0,c
  1163  001440  0012               	return	
  1164                           
  1165                           ; BSR set to: 0
  1166                           ;EEPROM.c: 23: {
  1167                           ;EEPROM.c: 24: for(i=0; i<length; ++i)
  1168  001442  0E00               	movlw	0
  1169  001444  6E25               	movwf	EEPROM_Reads@i,c
  1170  001446  D013               	goto	l1865
  1171  001448                     l1861:
  1172                           
  1173                           ; BSR set to: 0
  1174                           ;EEPROM.c: 25: DateBuff[i] = Read_b_eep(Addr + i);
  1175  001448  5025               	movf	EEPROM_Reads@i,w,c
  1176  00144A  0D01               	mullw	1
  1177  00144C  50F3               	movf	prodl,w,c
  1178  00144E  2421               	addwf	EEPROM_Reads@DateBuff,w,c
  1179  001450  6ED9               	movwf	fsr2l,c
  1180  001452  50F4               	movf	prodh,w,c
  1181  001454  2022               	addwfc	EEPROM_Reads@DateBuff+1,w,c
  1182  001456  6EDA               	movwf	fsr2h,c
  1183  001458  5025               	movf	EEPROM_Reads@i,w,c
  1184  00145A  241F               	addwf	EEPROM_Reads@Addr,w,c
  1185  00145C  6E1D               	movwf	Read_b_eep@badd,c
  1186  00145E  0E00               	movlw	0
  1187  001460  2020               	addwfc	EEPROM_Reads@Addr+1,w,c
  1188  001462  6E1E               	movwf	Read_b_eep@badd+1,c
  1189  001464  ECB0  F00B         	call	_Read_b_eep	;wreg free
  1190  001468  6EDF               	movwf	indf2,c
  1191  00146A  2A25               	incf	EEPROM_Reads@i,f,c
  1192  00146C  D000               	goto	l1865
  1193  00146E                     l1865:
  1194  00146E  5025               	movf	EEPROM_Reads@i,w,c
  1195  001470  0100               	movlb	0	; () banked
  1196  001472  6F60               	movwf	??_EEPROM_Reads& (0+255),b
  1197  001474  6B61               	clrf	(??_EEPROM_Reads+1)& (0+255),b
  1198  001476  5023               	movf	EEPROM_Reads@length,w,c
  1199  001478  0100               	movlb	0	; () banked
  1200  00147A  5D60               	subwf	??_EEPROM_Reads& (0+255),w,b
  1201  00147C  5024               	movf	EEPROM_Reads@length+1,w,c
  1202  00147E  0100               	movlb	0	; () banked
  1203  001480  5961               	subwfb	(??_EEPROM_Reads+1)& (0+255),w,b
  1204  001482  B0D8               	btfsc	status,0,c
  1205  001484  0012               	return	
  1206  001486  D7E0               	goto	l1861
  1207                           
  1208                           ; BSR set to: 0
  1209                           ;EEPROM.c: 28: else
  1210                           ;EEPROM.c: 29: return 1;
  1211                           ;	Return value of _EEPROM_Reads is never used
  1212                           
  1213                           ; BSR set to: 0
  1214                           ;EEPROM.c: 27: }
  1215                           
  1216                           ; BSR set to: 0
  1217                           ;EEPROM.c: 26: return 0;
  1218                           ;	Return value of _EEPROM_Reads is never used
  1219  001488  0012               	return	
  1220                           
  1221                           ; BSR set to: 0
  1222                           
  1223                           ; BSR set to: 0
  1224  00148A  0012               	return		;funcret
  1225  00148C                     __end_of_EEPROM_Reads:
  1226                           	opt stack 0
  1227                           tblptru	equ	0xFF8
  1228                           tblptrh	equ	0xFF7
  1229                           prodh	equ	0xFF4
  1230                           prodl	equ	0xFF3
  1231                           intcon	equ	0xFF2
  1232                           postinc0	equ	0xFEE
  1233                           wreg	equ	0xFE8
  1234                           indf2	equ	0xFDF
  1235                           fsr2h	equ	0xFDA
  1236                           fsr2l	equ	0xFD9
  1237                           status	equ	0xFD8
  1238                           
  1239 ;; *************** function _Read_b_eep *****************
  1240 ;; Defined at:
  1241 ;;		line 35 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\EEP\read_B.c"
  1242 ;; Parameters:    Size  Location     Type
  1243 ;;  badd            2   28[COMRAM] unsigned int 
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;		None
  1246 ;; Return value:  Size  Location     Type
  1247 ;;                  1    wreg      unsigned char 
  1248 ;; Registers used:
  1249 ;;		wreg, status,2, status,0
  1250 ;; Tracked objects:
  1251 ;;		On entry : 0/0
  1252 ;;		On exit  : 0/0
  1253 ;;		Unchanged: 0/0
  1254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1255 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1258 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1259 ;;Total ram usage:        2 bytes
  1260 ;; Hardware stack levels used:    1
  1261 ;; Hardware stack levels required when called:    4
  1262 ;; This function calls:
  1263 ;;		Nothing
  1264 ;; This function is called by:
  1265 ;;		_EEPROM_Reads
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           	psect	text10
  1270  001760                     __ptext10:
  1271                           	opt stack 0
  1272  001760                     _Read_b_eep:
  1273                           	opt stack 25
  1274                           
  1275                           ; BSR set to: 0
  1276                           ;incstack = 0
  1277  001760  501E               	movf	Read_b_eep@badd+1,w,c
  1278  001762  0B03               	andlw	3
  1279  001764  6E63               	movwf	3939,c	;volatile
  1280  001766  C01D  FF62         	movff	Read_b_eep@badd,3938	;volatile
  1281  00176A  9C7F               	bcf	3967,6,c	;volatile
  1282  00176C  9E7F               	bcf	3967,7,c	;volatile
  1283  00176E  807F               	bsf	3967,0,c	;volatile
  1284  001770  F000               	nop	
  1285  001772  F000               	nop	
  1286  001774  5061               	movf	3937,w,c	;volatile
  1287  001776  0012               	return	
  1288  001778  0012               	return		;funcret
  1289  00177A                     __end_of_Read_b_eep:
  1290                           	opt stack 0
  1291                           tblptru	equ	0xFF8
  1292                           tblptrh	equ	0xFF7
  1293                           prodh	equ	0xFF4
  1294                           prodl	equ	0xFF3
  1295                           intcon	equ	0xFF2
  1296                           postinc0	equ	0xFEE
  1297                           wreg	equ	0xFE8
  1298                           indf2	equ	0xFDF
  1299                           fsr2h	equ	0xFDA
  1300                           fsr2l	equ	0xFD9
  1301                           status	equ	0xFD8
  1302                           
  1303 ;; *************** function _Sys_Cyc *****************
  1304 ;; Defined at:
  1305 ;;		line 100 in file "_01_USER/My_Timer.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;		None
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;		None
  1310 ;; Return value:  Size  Location     Type
  1311 ;;		None               void
  1312 ;; Registers used:
  1313 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1321 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1322 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1323 ;;Total ram usage:       14 bytes
  1324 ;; Hardware stack levels used:    1
  1325 ;; Hardware stack levels required when called:    3
  1326 ;; This function calls:
  1327 ;;		_Key_FSM_Scan
  1328 ;;		_Manage_Message
  1329 ;;		_Show_Result
  1330 ;;		___awmod
  1331 ;;		___llmod
  1332 ;;		___lwmod
  1333 ;;		i2_SetTimer0
  1334 ;; This function is called by:
  1335 ;;		Interrupt level 2
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339                           	psect	intcode
  1340  000008                     __pintcode:
  1341                           	opt stack 0
  1342  000008                     _Sys_Cyc:
  1343                           	opt stack 24
  1344                           
  1345                           ;incstack = 0
  1346  000008  CFFA F00F          	movff	pclath,??_Sys_Cyc
  1347  00000C  CFFB F010          	movff	pclatu,??_Sys_Cyc+1
  1348  000010  CFE9 F011          	movff	fsr0l,??_Sys_Cyc+2
  1349  000014  CFEA F012          	movff	fsr0h,??_Sys_Cyc+3
  1350  000018  CFE1 F013          	movff	fsr1l,??_Sys_Cyc+4
  1351  00001C  CFE2 F014          	movff	fsr1h,??_Sys_Cyc+5
  1352  000020  CFD9 F015          	movff	fsr2l,??_Sys_Cyc+6
  1353  000024  CFDA F016          	movff	fsr2h,??_Sys_Cyc+7
  1354  000028  CFF3 F017          	movff	prodl,??_Sys_Cyc+8
  1355  00002C  CFF4 F018          	movff	prodh,??_Sys_Cyc+9
  1356  000030  CFF6 F019          	movff	tblptrl,??_Sys_Cyc+10
  1357  000034  CFF7 F01A          	movff	tblptrh,??_Sys_Cyc+11
  1358  000038  CFF8 F01B          	movff	tblptru,??_Sys_Cyc+12
  1359  00003C  CFF5 F01C          	movff	tablat,??_Sys_Cyc+13
  1360                           
  1361                           ;My_Timer.c: 104: if(TMR0IF && TMR0IE)
  1362  000040  B4F2               	btfsc	intcon,2,c	;volatile
  1363  000042  AAF2               	btfss	intcon,5,c	;volatile
  1364  000044  D067               	goto	i2l130
  1365                           
  1366                           ;My_Timer.c: 105: {
  1367                           ;My_Timer.c: 106: SetTimer0(78);
  1368  000046  0E00               	movlw	0
  1369  000048  6E02               	movwf	i2SetTimer0@_tmr+1,c
  1370  00004A  0E4E               	movlw	78
  1371  00004C  6E01               	movwf	i2SetTimer0@_tmr,c
  1372  00004E  EC5F  F00B         	call	i2_SetTimer0	;wreg free
  1373                           
  1374                           ;My_Timer.c: 108: Timer_Cyc = (Timer_Cyc+1) % 100000000;
  1375  000052  0E01               	movlw	1
  1376  000054  2426               	addwf	_Timer_Cyc,w,c
  1377  000056  6E01               	movwf	___llmod@dividend,c
  1378  000058  0E00               	movlw	0
  1379  00005A  2027               	addwfc	_Timer_Cyc+1,w,c
  1380  00005C  6E02               	movwf	___llmod@dividend+1,c
  1381  00005E  0E00               	movlw	0
  1382  000060  2028               	addwfc	_Timer_Cyc+2,w,c
  1383  000062  6E03               	movwf	___llmod@dividend+2,c
  1384  000064  0E00               	movlw	0
  1385  000066  2029               	addwfc	_Timer_Cyc+3,w,c
  1386  000068  6E04               	movwf	___llmod@dividend+3,c
  1387  00006A  0E00               	movlw	0
  1388  00006C  6E05               	movwf	___llmod@divisor,c
  1389  00006E  0EE1               	movlw	225
  1390  000070  6E06               	movwf	___llmod@divisor+1,c
  1391  000072  0EF5               	movlw	245
  1392  000074  6E07               	movwf	___llmod@divisor+2,c
  1393  000076  0E05               	movlw	5
  1394  000078  6E08               	movwf	___llmod@divisor+3,c
  1395  00007A  ECA3  F009         	call	___llmod	;wreg free
  1396  00007E  C001  F026         	movff	?___llmod,_Timer_Cyc
  1397  000082  C002  F027         	movff	?___llmod+1,_Timer_Cyc+1
  1398  000086  C003  F028         	movff	?___llmod+2,_Timer_Cyc+2
  1399  00008A  C004  F029         	movff	?___llmod+3,_Timer_Cyc+3
  1400                           
  1401                           ;My_Timer.c: 109: IR2184_Timer = (IR2184_Timer+1) % 10000;
  1402  00008E  0E01               	movlw	1
  1403  000090  242A               	addwf	_IR2184_Timer,w,c
  1404  000092  6E01               	movwf	___lwmod@dividend,c
  1405  000094  0E00               	movlw	0
  1406  000096  202B               	addwfc	_IR2184_Timer+1,w,c
  1407  000098  6E02               	movwf	___lwmod@dividend+1,c
  1408  00009A  0E27               	movlw	39
  1409  00009C  6E04               	movwf	___lwmod@divisor+1,c
  1410  00009E  0E10               	movlw	16
  1411  0000A0  6E03               	movwf	___lwmod@divisor,c
  1412  0000A2  ECA4  F00A         	call	___lwmod	;wreg free
  1413  0000A6  C001  F02A         	movff	?___lwmod,_IR2184_Timer
  1414  0000AA  C002  F02B         	movff	?___lwmod+1,_IR2184_Timer+1
  1415                           
  1416                           ;My_Timer.c: 110: if( Nix_Flash != 0 ) Nix_Flash --;
  1417  0000AE  5030               	movf	_Nix_Flash,w,c
  1418  0000B0  B4D8               	btfsc	status,2,c
  1419  0000B2  D002               	goto	i2l1761
  1420  0000B4  0630               	decf	_Nix_Flash,f,c
  1421  0000B6  D000               	goto	i2l1761
  1422  0000B8                     i2l1761:
  1423                           
  1424                           ;My_Timer.c: 113: if(Timer_Cyc%6 == 0) Manage_Message();
  1425  0000B8  C026  F001         	movff	_Timer_Cyc,___llmod@dividend
  1426  0000BC  C027  F002         	movff	_Timer_Cyc+1,___llmod@dividend+1
  1427  0000C0  C028  F003         	movff	_Timer_Cyc+2,___llmod@dividend+2
  1428  0000C4  C029  F004         	movff	_Timer_Cyc+3,___llmod@dividend+3
  1429  0000C8  0E06               	movlw	6
  1430  0000CA  6E05               	movwf	___llmod@divisor,c
  1431  0000CC  0E00               	movlw	0
  1432  0000CE  6E06               	movwf	___llmod@divisor+1,c
  1433  0000D0  0E00               	movlw	0
  1434  0000D2  6E07               	movwf	___llmod@divisor+2,c
  1435  0000D4  0E00               	movlw	0
  1436  0000D6  6E08               	movwf	___llmod@divisor+3,c
  1437  0000D8  ECA3  F009         	call	___llmod	;wreg free
  1438  0000DC  5001               	movf	?___llmod,w,c
  1439  0000DE  1002               	iorwf	?___llmod+1,w,c
  1440  0000E0  1003               	iorwf	?___llmod+2,w,c
  1441  0000E2  1004               	iorwf	?___llmod+3,w,c
  1442  0000E4  A4D8               	btfss	status,2,c
  1443  0000E6  D003               	goto	i2l1765
  1444  0000E8  EC1C  F009         	call	_Manage_Message	;wreg free
  1445  0000EC  D000               	goto	i2l1765
  1446  0000EE                     i2l1765:
  1447                           
  1448                           ;My_Timer.c: 116: if(Nix_Flash%30 == 0) Show_Result();
  1449  0000EE  C030  F001         	movff	_Nix_Flash,___awmod@dividend
  1450  0000F2  6A02               	clrf	___awmod@dividend+1,c
  1451  0000F4  0E00               	movlw	0
  1452  0000F6  6E04               	movwf	___awmod@divisor+1,c
  1453  0000F8  0E1E               	movlw	30
  1454  0000FA  6E03               	movwf	___awmod@divisor,c
  1455  0000FC  EC62  F009         	call	___awmod	;wreg free
  1456  000100  5001               	movf	?___awmod,w,c
  1457  000102  1002               	iorwf	?___awmod+1,w,c
  1458  000104  A4D8               	btfss	status,2,c
  1459  000106  D003               	goto	i2l1769
  1460  000108  ECE6  F00B         	call	_Show_Result	;wreg free
  1461  00010C  D000               	goto	i2l1769
  1462  00010E                     i2l1769:
  1463                           
  1464                           ;My_Timer.c: 119: Key_FSM_Scan();
  1465  00010E  ECBD  F00B         	call	_Key_FSM_Scan	;wreg free
  1466  000112  D000               	goto	i2l130
  1467  000114                     i2l130:
  1468  000114  C01C  FFF5         	movff	??_Sys_Cyc+13,tablat
  1469  000118  C01B  FFF8         	movff	??_Sys_Cyc+12,tblptru
  1470  00011C  C01A  FFF7         	movff	??_Sys_Cyc+11,tblptrh
  1471  000120  C019  FFF6         	movff	??_Sys_Cyc+10,tblptrl
  1472  000124  C018  FFF4         	movff	??_Sys_Cyc+9,prodh
  1473  000128  C017  FFF3         	movff	??_Sys_Cyc+8,prodl
  1474  00012C  C016  FFDA         	movff	??_Sys_Cyc+7,fsr2h
  1475  000130  C015  FFD9         	movff	??_Sys_Cyc+6,fsr2l
  1476  000134  C014  FFE2         	movff	??_Sys_Cyc+5,fsr1h
  1477  000138  C013  FFE1         	movff	??_Sys_Cyc+4,fsr1l
  1478  00013C  C012  FFEA         	movff	??_Sys_Cyc+3,fsr0h
  1479  000140  C011  FFE9         	movff	??_Sys_Cyc+2,fsr0l
  1480  000144  C010  FFFB         	movff	??_Sys_Cyc+1,pclatu
  1481  000148  C00F  FFFA         	movff	??_Sys_Cyc,pclath
  1482  00014C  0011               	retfie		f
  1483  00014E                     __end_of_Sys_Cyc:
  1484                           	opt stack 0
  1485                           pclatu	equ	0xFFB
  1486                           pclath	equ	0xFFA
  1487                           tblptru	equ	0xFF8
  1488                           tblptrh	equ	0xFF7
  1489                           tblptrl	equ	0xFF6
  1490                           tablat	equ	0xFF5
  1491                           prodh	equ	0xFF4
  1492                           prodl	equ	0xFF3
  1493                           intcon	equ	0xFF2
  1494                           postinc0	equ	0xFEE
  1495                           fsr0h	equ	0xFEA
  1496                           fsr0l	equ	0xFE9
  1497                           wreg	equ	0xFE8
  1498                           fsr1h	equ	0xFE2
  1499                           fsr1l	equ	0xFE1
  1500                           indf2	equ	0xFDF
  1501                           fsr2h	equ	0xFDA
  1502                           fsr2l	equ	0xFD9
  1503                           status	equ	0xFD8
  1504                           
  1505 ;; *************** function i2_SetTimer0 *****************
  1506 ;; Defined at:
  1507 ;;		line 81 in file "_01_USER/My_Timer.c"
  1508 ;; Parameters:    Size  Location     Type
  1509 ;;  _tmr            2    0[COMRAM] unsigned int 
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;		None
  1512 ;; Return value:  Size  Location     Type
  1513 ;;		None               void
  1514 ;; Registers used:
  1515 ;;		wreg, status,2, status,0
  1516 ;; Tracked objects:
  1517 ;;		On entry : 0/0
  1518 ;;		On exit  : 0/0
  1519 ;;		Unchanged: 0/0
  1520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1521 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1523 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1524 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1525 ;;Total ram usage:        4 bytes
  1526 ;; Hardware stack levels used:    1
  1527 ;; This function calls:
  1528 ;;		Nothing
  1529 ;; This function is called by:
  1530 ;;		_Sys_Cyc
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534                           	psect	text12
  1535  0016BE                     __ptext12:
  1536                           	opt stack 0
  1537  0016BE                     i2_SetTimer0:
  1538                           	opt stack 26
  1539                           
  1540                           ;My_Timer.c: 84: _tmr=0xffff-_tmr;
  1541                           
  1542                           ;incstack = 0
  1543  0016BE  C001  F003         	movff	i2SetTimer0@_tmr,??i2_SetTimer0
  1544  0016C2  C002  F004         	movff	i2SetTimer0@_tmr+1,??i2_SetTimer0+1
  1545  0016C6  1E03               	comf	??i2_SetTimer0,f,c
  1546  0016C8  1E04               	comf	??i2_SetTimer0+1,f,c
  1547  0016CA  4A03               	infsnz	??i2_SetTimer0,f,c
  1548  0016CC  2A04               	incf	??i2_SetTimer0+1,f,c
  1549  0016CE  0EFF               	movlw	255
  1550  0016D0  2403               	addwf	??i2_SetTimer0,w,c
  1551  0016D2  6E01               	movwf	i2SetTimer0@_tmr,c
  1552  0016D4  0EFF               	movlw	255
  1553  0016D6  2004               	addwfc	??i2_SetTimer0+1,w,c
  1554  0016D8  6E02               	movwf	i2SetTimer0@_tmr+1,c
  1555                           
  1556                           ;My_Timer.c: 85: TMR0H = _tmr/256;
  1557  0016DA  5002               	movf	i2SetTimer0@_tmr+1,w,c
  1558  0016DC  6ED7               	movwf	4055,c	;volatile
  1559                           
  1560                           ;My_Timer.c: 86: TMR0L = _tmr%256;
  1561  0016DE  C001  FFD6         	movff	i2SetTimer0@_tmr,4054	;volatile
  1562                           
  1563                           ;My_Timer.c: 87: TMR0IF = 0;
  1564  0016E2  94F2               	bcf	intcon,2,c	;volatile
  1565  0016E4  0012               	return		;funcret
  1566  0016E6                     __end_ofi2_SetTimer0:
  1567                           	opt stack 0
  1568                           pclatu	equ	0xFFB
  1569                           pclath	equ	0xFFA
  1570                           tblptru	equ	0xFF8
  1571                           tblptrh	equ	0xFF7
  1572                           tblptrl	equ	0xFF6
  1573                           tablat	equ	0xFF5
  1574                           prodh	equ	0xFF4
  1575                           prodl	equ	0xFF3
  1576                           intcon	equ	0xFF2
  1577                           postinc0	equ	0xFEE
  1578                           fsr0h	equ	0xFEA
  1579                           fsr0l	equ	0xFE9
  1580                           wreg	equ	0xFE8
  1581                           fsr1h	equ	0xFE2
  1582                           fsr1l	equ	0xFE1
  1583                           indf2	equ	0xFDF
  1584                           fsr2h	equ	0xFDA
  1585                           fsr2l	equ	0xFD9
  1586                           status	equ	0xFD8
  1587                           
  1588 ;; *************** function ___lwmod *****************
  1589 ;; Defined at:
  1590 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;  dividend        2    0[COMRAM] unsigned int 
  1593 ;;  divisor         2    2[COMRAM] unsigned int 
  1594 ;; Auto vars:     Size  Location     Type
  1595 ;;  counter         1    4[COMRAM] unsigned char 
  1596 ;; Return value:  Size  Location     Type
  1597 ;;                  2    0[COMRAM] unsigned int 
  1598 ;; Registers used:
  1599 ;;		wreg, status,2, status,0
  1600 ;; Tracked objects:
  1601 ;;		On entry : 0/0
  1602 ;;		On exit  : 0/0
  1603 ;;		Unchanged: 0/0
  1604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1605 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1606 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1608 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1609 ;;Total ram usage:        5 bytes
  1610 ;; Hardware stack levels used:    1
  1611 ;; This function calls:
  1612 ;;		Nothing
  1613 ;; This function is called by:
  1614 ;;		_Sys_Cyc
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           
  1618                           	psect	text13
  1619  001548                     __ptext13:
  1620                           	opt stack 0
  1621  001548                     ___lwmod:
  1622                           	opt stack 26
  1623                           
  1624                           ;incstack = 0
  1625  001548  5003               	movf	___lwmod@divisor,w,c
  1626  00154A  1004               	iorwf	___lwmod@divisor+1,w,c
  1627  00154C  B4D8               	btfsc	status,2,c
  1628  00154E  D01D               	goto	i2l874
  1629  001550  0E01               	movlw	1
  1630  001552  6E05               	movwf	___lwmod@counter,c
  1631  001554  D005               	goto	i2l1715
  1632  001556                     i2l1713:
  1633  001556  90D8               	bcf	status,0,c
  1634  001558  3603               	rlcf	___lwmod@divisor,f,c
  1635  00155A  3604               	rlcf	___lwmod@divisor+1,f,c
  1636  00155C  2A05               	incf	___lwmod@counter,f,c
  1637  00155E  D000               	goto	i2l1715
  1638  001560                     i2l1715:
  1639  001560  BE04               	btfsc	___lwmod@divisor+1,7,c
  1640  001562  D002               	goto	i2l1717
  1641  001564  D7F8               	goto	i2l1713
  1642  001566  D000               	goto	i2l1717
  1643  001568                     i2l1717:
  1644  001568  5003               	movf	___lwmod@divisor,w,c
  1645  00156A  5C01               	subwf	___lwmod@dividend,w,c
  1646  00156C  5004               	movf	___lwmod@divisor+1,w,c
  1647  00156E  5802               	subwfb	___lwmod@dividend+1,w,c
  1648  001570  A0D8               	btfss	status,0,c
  1649  001572  D005               	goto	i2l1721
  1650  001574  5003               	movf	___lwmod@divisor,w,c
  1651  001576  5E01               	subwf	___lwmod@dividend,f,c
  1652  001578  5004               	movf	___lwmod@divisor+1,w,c
  1653  00157A  5A02               	subwfb	___lwmod@dividend+1,f,c
  1654  00157C  D000               	goto	i2l1721
  1655  00157E                     i2l1721:
  1656  00157E  90D8               	bcf	status,0,c
  1657  001580  3204               	rrcf	___lwmod@divisor+1,f,c
  1658  001582  3203               	rrcf	___lwmod@divisor,f,c
  1659  001584  2E05               	decfsz	___lwmod@counter,f,c
  1660  001586  D7F0               	goto	i2l1717
  1661  001588  D000               	goto	i2l874
  1662  00158A                     i2l874:
  1663  00158A  C001  F001         	movff	___lwmod@dividend,?___lwmod
  1664  00158E  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  1665  001592  0012               	return		;funcret
  1666  001594                     __end_of___lwmod:
  1667                           	opt stack 0
  1668                           pclatu	equ	0xFFB
  1669                           pclath	equ	0xFFA
  1670                           tblptru	equ	0xFF8
  1671                           tblptrh	equ	0xFF7
  1672                           tblptrl	equ	0xFF6
  1673                           tablat	equ	0xFF5
  1674                           prodh	equ	0xFF4
  1675                           prodl	equ	0xFF3
  1676                           intcon	equ	0xFF2
  1677                           postinc0	equ	0xFEE
  1678                           fsr0h	equ	0xFEA
  1679                           fsr0l	equ	0xFE9
  1680                           wreg	equ	0xFE8
  1681                           fsr1h	equ	0xFE2
  1682                           fsr1l	equ	0xFE1
  1683                           indf2	equ	0xFDF
  1684                           fsr2h	equ	0xFDA
  1685                           fsr2l	equ	0xFD9
  1686                           status	equ	0xFD8
  1687                           
  1688 ;; *************** function ___llmod *****************
  1689 ;; Defined at:
  1690 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  1691 ;; Parameters:    Size  Location     Type
  1692 ;;  dividend        4    0[COMRAM] unsigned long 
  1693 ;;  divisor         4    4[COMRAM] unsigned long 
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;  counter         1    8[COMRAM] unsigned char 
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  4    0[COMRAM] unsigned long 
  1698 ;; Registers used:
  1699 ;;		wreg, status,2, status,0
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1705 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1706 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1708 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1709 ;;Total ram usage:        9 bytes
  1710 ;; Hardware stack levels used:    1
  1711 ;; This function calls:
  1712 ;;		Nothing
  1713 ;; This function is called by:
  1714 ;;		_Sys_Cyc
  1715 ;; This function uses a non-reentrant model
  1716 ;;
  1717                           
  1718                           	psect	text14
  1719  001346                     __ptext14:
  1720                           	opt stack 0
  1721  001346                     ___llmod:
  1722                           	opt stack 26
  1723                           
  1724                           ;incstack = 0
  1725  001346  5005               	movf	___llmod@divisor,w,c
  1726  001348  1006               	iorwf	___llmod@divisor+1,w,c
  1727  00134A  1007               	iorwf	___llmod@divisor+2,w,c
  1728  00134C  1008               	iorwf	___llmod@divisor+3,w,c
  1729  00134E  B4D8               	btfsc	status,2,c
  1730  001350  D029               	goto	i2l811
  1731  001352  0E01               	movlw	1
  1732  001354  6E09               	movwf	___llmod@counter,c
  1733  001356  D007               	goto	i2l1699
  1734  001358                     i2l1697:
  1735  001358  90D8               	bcf	status,0,c
  1736  00135A  3605               	rlcf	___llmod@divisor,f,c
  1737  00135C  3606               	rlcf	___llmod@divisor+1,f,c
  1738  00135E  3607               	rlcf	___llmod@divisor+2,f,c
  1739  001360  3608               	rlcf	___llmod@divisor+3,f,c
  1740  001362  2A09               	incf	___llmod@counter,f,c
  1741  001364  D000               	goto	i2l1699
  1742  001366                     i2l1699:
  1743  001366  BE08               	btfsc	___llmod@divisor+3,7,c
  1744  001368  D002               	goto	i2l1701
  1745  00136A  D7F6               	goto	i2l1697
  1746  00136C  D000               	goto	i2l1701
  1747  00136E                     i2l1701:
  1748  00136E  5005               	movf	___llmod@divisor,w,c
  1749  001370  5C01               	subwf	___llmod@dividend,w,c
  1750  001372  5006               	movf	___llmod@divisor+1,w,c
  1751  001374  5802               	subwfb	___llmod@dividend+1,w,c
  1752  001376  5007               	movf	___llmod@divisor+2,w,c
  1753  001378  5803               	subwfb	___llmod@dividend+2,w,c
  1754  00137A  5008               	movf	___llmod@divisor+3,w,c
  1755  00137C  5804               	subwfb	___llmod@dividend+3,w,c
  1756  00137E  A0D8               	btfss	status,0,c
  1757  001380  D009               	goto	i2l1705
  1758  001382  5005               	movf	___llmod@divisor,w,c
  1759  001384  5E01               	subwf	___llmod@dividend,f,c
  1760  001386  5006               	movf	___llmod@divisor+1,w,c
  1761  001388  5A02               	subwfb	___llmod@dividend+1,f,c
  1762  00138A  5007               	movf	___llmod@divisor+2,w,c
  1763  00138C  5A03               	subwfb	___llmod@dividend+2,f,c
  1764  00138E  5008               	movf	___llmod@divisor+3,w,c
  1765  001390  5A04               	subwfb	___llmod@dividend+3,f,c
  1766  001392  D000               	goto	i2l1705
  1767  001394                     i2l1705:
  1768  001394  90D8               	bcf	status,0,c
  1769  001396  3208               	rrcf	___llmod@divisor+3,f,c
  1770  001398  3207               	rrcf	___llmod@divisor+2,f,c
  1771  00139A  3206               	rrcf	___llmod@divisor+1,f,c
  1772  00139C  3205               	rrcf	___llmod@divisor,f,c
  1773  00139E  2E09               	decfsz	___llmod@counter,f,c
  1774  0013A0  D7E6               	goto	i2l1701
  1775  0013A2  D000               	goto	i2l811
  1776  0013A4                     i2l811:
  1777  0013A4  C001  F001         	movff	___llmod@dividend,?___llmod
  1778  0013A8  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  1779  0013AC  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  1780  0013B0  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  1781  0013B4  0012               	return		;funcret
  1782  0013B6                     __end_of___llmod:
  1783                           	opt stack 0
  1784                           pclatu	equ	0xFFB
  1785                           pclath	equ	0xFFA
  1786                           tblptru	equ	0xFF8
  1787                           tblptrh	equ	0xFF7
  1788                           tblptrl	equ	0xFF6
  1789                           tablat	equ	0xFF5
  1790                           prodh	equ	0xFF4
  1791                           prodl	equ	0xFF3
  1792                           intcon	equ	0xFF2
  1793                           postinc0	equ	0xFEE
  1794                           fsr0h	equ	0xFEA
  1795                           fsr0l	equ	0xFE9
  1796                           wreg	equ	0xFE8
  1797                           fsr1h	equ	0xFE2
  1798                           fsr1l	equ	0xFE1
  1799                           indf2	equ	0xFDF
  1800                           fsr2h	equ	0xFDA
  1801                           fsr2l	equ	0xFD9
  1802                           status	equ	0xFD8
  1803                           
  1804 ;; *************** function _Show_Result *****************
  1805 ;; Defined at:
  1806 ;;		line 122 in file "_01_USER/Run.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;		None
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;		None
  1811 ;; Return value:  Size  Location     Type
  1812 ;;		None               void
  1813 ;; Registers used:
  1814 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1824 ;;Total ram usage:        0 bytes
  1825 ;; Hardware stack levels used:    1
  1826 ;; Hardware stack levels required when called:    2
  1827 ;; This function calls:
  1828 ;;		_Nixie_ShowNum
  1829 ;; This function is called by:
  1830 ;;		_Sys_Cyc
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           	psect	text15
  1835  0017CC                     __ptext15:
  1836                           	opt stack 0
  1837  0017CC                     _Show_Result:
  1838                           	opt stack 24
  1839                           
  1840                           ;Run.c: 124: Nixie_ShowNum(IR2184_Num);
  1841                           
  1842                           ;incstack = 0
  1843  0017CC  502E               	movf	_IR2184_Num,w,c
  1844  0017CE  EC46  F00A         	call	_Nixie_ShowNum
  1845  0017D2  0012               	return		;funcret
  1846  0017D4                     __end_of_Show_Result:
  1847                           	opt stack 0
  1848                           pclatu	equ	0xFFB
  1849                           pclath	equ	0xFFA
  1850                           tblptru	equ	0xFF8
  1851                           tblptrh	equ	0xFF7
  1852                           tblptrl	equ	0xFF6
  1853                           tablat	equ	0xFF5
  1854                           prodh	equ	0xFF4
  1855                           prodl	equ	0xFF3
  1856                           intcon	equ	0xFF2
  1857                           postinc0	equ	0xFEE
  1858                           fsr0h	equ	0xFEA
  1859                           fsr0l	equ	0xFE9
  1860                           wreg	equ	0xFE8
  1861                           fsr1h	equ	0xFE2
  1862                           fsr1l	equ	0xFE1
  1863                           indf2	equ	0xFDF
  1864                           fsr2h	equ	0xFDA
  1865                           fsr2l	equ	0xFD9
  1866                           status	equ	0xFD8
  1867                           
  1868 ;; *************** function _Nixie_ShowNum *****************
  1869 ;; Defined at:
  1870 ;;		line 53 in file "_01_USER/Nixie.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;  _num            1    wreg     unsigned char 
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;  _num            1    8[COMRAM] unsigned char 
  1875 ;; Return value:  Size  Location     Type
  1876 ;;		None               void
  1877 ;; Registers used:
  1878 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1885 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1887 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1888 ;;Total ram usage:        1 bytes
  1889 ;; Hardware stack levels used:    1
  1890 ;; Hardware stack levels required when called:    1
  1891 ;; This function calls:
  1892 ;;		___awdiv
  1893 ;;		___awmod
  1894 ;; This function is called by:
  1895 ;;		_Show_Result
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           	psect	text16
  1900  00148C                     __ptext16:
  1901                           	opt stack 0
  1902  00148C                     _Nixie_ShowNum:
  1903                           	opt stack 24
  1904                           
  1905                           ;incstack = 0
  1906                           ;Nixie_ShowNum@_num stored from wreg
  1907  00148C  6E09               	movwf	Nixie_ShowNum@_num,c
  1908                           
  1909                           ;Nixie.c: 55: static unsigned char _t = 0;
  1910                           ;Nixie.c: 57: _t = ~_t;
  1911  00148E  1E2D               	comf	Nixie_ShowNum@_t,f,c
  1912                           
  1913                           ;Nixie.c: 58: if(_t)
  1914  001490  502D               	movf	Nixie_ShowNum@_t,w,c
  1915  001492  B4D8               	btfsc	status,2,c
  1916  001494  D015               	goto	i2l220
  1917                           
  1918                           ;Nixie.c: 59: {
  1919                           ;Nixie.c: 60: RA5 = 1 , RA4 = 0;
  1920  001496  8A80               	bsf	3968,5,c	;volatile
  1921  001498  9880               	bcf	3968,4,c	;volatile
  1922                           
  1923                           ;Nixie.c: 61: PORTC = LED_Number[_num/10];
  1924  00149A  C009  F001         	movff	Nixie_ShowNum@_num,___awdiv@dividend
  1925  00149E  6A02               	clrf	___awdiv@dividend+1,c
  1926  0014A0  0E00               	movlw	0
  1927  0014A2  6E04               	movwf	___awdiv@divisor+1,c
  1928  0014A4  0E0A               	movlw	10
  1929  0014A6  6E03               	movwf	___awdiv@divisor,c
  1930  0014A8  ECD1  F008         	call	___awdiv	;wreg free
  1931  0014AC  0E01               	movlw	low _LED_Number
  1932  0014AE  2401               	addwf	?___awdiv,w,c
  1933  0014B0  6EF6               	movwf	tblptrl,c
  1934  0014B2  0E10               	movlw	high _LED_Number
  1935  0014B4  2002               	addwfc	?___awdiv+1,w,c
  1936  0014B6  6EF7               	movwf	tblptrh,c
  1937  0014B8                     	if	0	;There are less than 3 active tblptr bytes
  1938  0014B8                     	endif
  1939  0014B8  0008               	tblrd		*
  1940  0014BA  CFF5 FF82          	movff	tablat,3970	;volatile
  1941                           
  1942                           ;Nixie.c: 62: }
  1943  0014BE  0012               	return	
  1944  0014C0                     i2l220:
  1945                           
  1946                           ;Nixie.c: 63: else
  1947                           ;Nixie.c: 64: {
  1948                           ;Nixie.c: 65: RA4 = 1 , RA5 = 0;
  1949  0014C0  8880               	bsf	3968,4,c	;volatile
  1950  0014C2  9A80               	bcf	3968,5,c	;volatile
  1951                           
  1952                           ;Nixie.c: 66: PORTC = LED_Number[_num%10];
  1953  0014C4  C009  F001         	movff	Nixie_ShowNum@_num,___awmod@dividend
  1954  0014C8  6A02               	clrf	___awmod@dividend+1,c
  1955  0014CA  0E00               	movlw	0
  1956  0014CC  6E04               	movwf	___awmod@divisor+1,c
  1957  0014CE  0E0A               	movlw	10
  1958  0014D0  6E03               	movwf	___awmod@divisor,c
  1959  0014D2  EC62  F009         	call	___awmod	;wreg free
  1960  0014D6  0E01               	movlw	low _LED_Number
  1961  0014D8  2401               	addwf	?___awmod,w,c
  1962  0014DA  6EF6               	movwf	tblptrl,c
  1963  0014DC  0E10               	movlw	high _LED_Number
  1964  0014DE  2002               	addwfc	?___awmod+1,w,c
  1965  0014E0  6EF7               	movwf	tblptrh,c
  1966  0014E2                     	if	0	;There are less than 3 active tblptr bytes
  1967  0014E2                     	endif
  1968  0014E2  0008               	tblrd		*
  1969  0014E4  CFF5 FF82          	movff	tablat,3970	;volatile
  1970  0014E8  0012               	return	
  1971  0014EA  0012               	return		;funcret
  1972  0014EC                     __end_of_Nixie_ShowNum:
  1973                           	opt stack 0
  1974                           pclatu	equ	0xFFB
  1975                           pclath	equ	0xFFA
  1976                           tblptru	equ	0xFF8
  1977                           tblptrh	equ	0xFF7
  1978                           tblptrl	equ	0xFF6
  1979                           tablat	equ	0xFF5
  1980                           prodh	equ	0xFF4
  1981                           prodl	equ	0xFF3
  1982                           intcon	equ	0xFF2
  1983                           postinc0	equ	0xFEE
  1984                           fsr0h	equ	0xFEA
  1985                           fsr0l	equ	0xFE9
  1986                           wreg	equ	0xFE8
  1987                           fsr1h	equ	0xFE2
  1988                           fsr1l	equ	0xFE1
  1989                           indf2	equ	0xFDF
  1990                           fsr2h	equ	0xFDA
  1991                           fsr2l	equ	0xFD9
  1992                           status	equ	0xFD8
  1993                           
  1994 ;; *************** function ___awmod *****************
  1995 ;; Defined at:
  1996 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;  dividend        2    0[COMRAM] int 
  1999 ;;  divisor         2    2[COMRAM] int 
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;  sign            1    5[COMRAM] unsigned char 
  2002 ;;  counter         1    4[COMRAM] unsigned char 
  2003 ;; Return value:  Size  Location     Type
  2004 ;;                  2    0[COMRAM] int 
  2005 ;; Registers used:
  2006 ;;		wreg, status,2, status,0
  2007 ;; Tracked objects:
  2008 ;;		On entry : 0/0
  2009 ;;		On exit  : 0/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2012 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2013 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2015 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2016 ;;Total ram usage:        6 bytes
  2017 ;; Hardware stack levels used:    1
  2018 ;; This function calls:
  2019 ;;		Nothing
  2020 ;; This function is called by:
  2021 ;;		_Sys_Cyc
  2022 ;;		_Nixie_ShowNum
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           	psect	text17
  2027  0012C4                     __ptext17:
  2028                           	opt stack 0
  2029  0012C4                     ___awmod:
  2030                           	opt stack 26
  2031                           
  2032                           ;incstack = 0
  2033  0012C4  0E00               	movlw	0
  2034  0012C6  6E06               	movwf	___awmod@sign,c
  2035  0012C8  AE02               	btfss	___awmod@dividend+1,7,c
  2036  0012CA  D007               	goto	i2l1519
  2037  0012CC  6C01               	negf	___awmod@dividend,c
  2038  0012CE  1E02               	comf	___awmod@dividend+1,f,c
  2039  0012D0  B0D8               	btfsc	status,0,c
  2040  0012D2  2A02               	incf	___awmod@dividend+1,f,c
  2041  0012D4  0E01               	movlw	1
  2042  0012D6  6E06               	movwf	___awmod@sign,c
  2043  0012D8  D000               	goto	i2l1519
  2044  0012DA                     i2l1519:
  2045  0012DA  AE04               	btfss	___awmod@divisor+1,7,c
  2046  0012DC  D005               	goto	i2l1523
  2047  0012DE  6C03               	negf	___awmod@divisor,c
  2048  0012E0  1E04               	comf	___awmod@divisor+1,f,c
  2049  0012E2  B0D8               	btfsc	status,0,c
  2050  0012E4  2A04               	incf	___awmod@divisor+1,f,c
  2051  0012E6  D000               	goto	i2l1523
  2052  0012E8                     i2l1523:
  2053  0012E8  5003               	movf	___awmod@divisor,w,c
  2054  0012EA  1004               	iorwf	___awmod@divisor+1,w,c
  2055  0012EC  B4D8               	btfsc	status,2,c
  2056  0012EE  D01D               	goto	i2l1539
  2057  0012F0  0E01               	movlw	1
  2058  0012F2  6E05               	movwf	___awmod@counter,c
  2059  0012F4  D005               	goto	i2l1529
  2060  0012F6                     i2l1527:
  2061  0012F6  90D8               	bcf	status,0,c
  2062  0012F8  3603               	rlcf	___awmod@divisor,f,c
  2063  0012FA  3604               	rlcf	___awmod@divisor+1,f,c
  2064  0012FC  2A05               	incf	___awmod@counter,f,c
  2065  0012FE  D000               	goto	i2l1529
  2066  001300                     i2l1529:
  2067  001300  BE04               	btfsc	___awmod@divisor+1,7,c
  2068  001302  D002               	goto	i2l1531
  2069  001304  D7F8               	goto	i2l1527
  2070  001306  D000               	goto	i2l1531
  2071  001308                     i2l1531:
  2072  001308  5003               	movf	___awmod@divisor,w,c
  2073  00130A  5C01               	subwf	___awmod@dividend,w,c
  2074  00130C  5004               	movf	___awmod@divisor+1,w,c
  2075  00130E  5802               	subwfb	___awmod@dividend+1,w,c
  2076  001310  A0D8               	btfss	status,0,c
  2077  001312  D005               	goto	i2l1535
  2078  001314  5003               	movf	___awmod@divisor,w,c
  2079  001316  5E01               	subwf	___awmod@dividend,f,c
  2080  001318  5004               	movf	___awmod@divisor+1,w,c
  2081  00131A  5A02               	subwfb	___awmod@dividend+1,f,c
  2082  00131C  D000               	goto	i2l1535
  2083  00131E                     i2l1535:
  2084  00131E  90D8               	bcf	status,0,c
  2085  001320  3204               	rrcf	___awmod@divisor+1,f,c
  2086  001322  3203               	rrcf	___awmod@divisor,f,c
  2087  001324  2E05               	decfsz	___awmod@counter,f,c
  2088  001326  D7F0               	goto	i2l1531
  2089  001328  D000               	goto	i2l1539
  2090  00132A                     i2l1539:
  2091  00132A  5006               	movf	___awmod@sign,w,c
  2092  00132C  B4D8               	btfsc	status,2,c
  2093  00132E  D005               	goto	i2l1543
  2094  001330  6C01               	negf	___awmod@dividend,c
  2095  001332  1E02               	comf	___awmod@dividend+1,f,c
  2096  001334  B0D8               	btfsc	status,0,c
  2097  001336  2A02               	incf	___awmod@dividend+1,f,c
  2098  001338  D000               	goto	i2l1543
  2099  00133A                     i2l1543:
  2100  00133A  C001  F001         	movff	___awmod@dividend,?___awmod
  2101  00133E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2102  001342  0012               	return	
  2103  001344  0012               	return		;funcret
  2104  001346                     __end_of___awmod:
  2105                           	opt stack 0
  2106                           pclatu	equ	0xFFB
  2107                           pclath	equ	0xFFA
  2108                           tblptru	equ	0xFF8
  2109                           tblptrh	equ	0xFF7
  2110                           tblptrl	equ	0xFF6
  2111                           tablat	equ	0xFF5
  2112                           prodh	equ	0xFF4
  2113                           prodl	equ	0xFF3
  2114                           intcon	equ	0xFF2
  2115                           postinc0	equ	0xFEE
  2116                           fsr0h	equ	0xFEA
  2117                           fsr0l	equ	0xFE9
  2118                           wreg	equ	0xFE8
  2119                           fsr1h	equ	0xFE2
  2120                           fsr1l	equ	0xFE1
  2121                           indf2	equ	0xFDF
  2122                           fsr2h	equ	0xFDA
  2123                           fsr2l	equ	0xFD9
  2124                           status	equ	0xFD8
  2125                           
  2126 ;; *************** function ___awdiv *****************
  2127 ;; Defined at:
  2128 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;  dividend        2    0[COMRAM] int 
  2131 ;;  divisor         2    2[COMRAM] int 
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;  quotient        2    6[COMRAM] int 
  2134 ;;  sign            1    5[COMRAM] unsigned char 
  2135 ;;  counter         1    4[COMRAM] unsigned char 
  2136 ;; Return value:  Size  Location     Type
  2137 ;;                  2    0[COMRAM] int 
  2138 ;; Registers used:
  2139 ;;		wreg, status,2, status,0
  2140 ;; Tracked objects:
  2141 ;;		On entry : 0/0
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2145 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2146 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2148 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2149 ;;Total ram usage:        8 bytes
  2150 ;; Hardware stack levels used:    1
  2151 ;; This function calls:
  2152 ;;		Nothing
  2153 ;; This function is called by:
  2154 ;;		_Nixie_ShowNum
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158                           	psect	text18
  2159  0011A2                     __ptext18:
  2160                           	opt stack 0
  2161  0011A2                     ___awdiv:
  2162                           	opt stack 24
  2163                           
  2164                           ;incstack = 0
  2165  0011A2  0E00               	movlw	0
  2166  0011A4  6E06               	movwf	___awdiv@sign,c
  2167  0011A6  AE04               	btfss	___awdiv@divisor+1,7,c
  2168  0011A8  D007               	goto	i2l1475
  2169  0011AA  6C03               	negf	___awdiv@divisor,c
  2170  0011AC  1E04               	comf	___awdiv@divisor+1,f,c
  2171  0011AE  B0D8               	btfsc	status,0,c
  2172  0011B0  2A04               	incf	___awdiv@divisor+1,f,c
  2173  0011B2  0E01               	movlw	1
  2174  0011B4  6E06               	movwf	___awdiv@sign,c
  2175  0011B6  D000               	goto	i2l1475
  2176  0011B8                     i2l1475:
  2177  0011B8  AE02               	btfss	___awdiv@dividend+1,7,c
  2178  0011BA  D007               	goto	i2l1481
  2179  0011BC  6C01               	negf	___awdiv@dividend,c
  2180  0011BE  1E02               	comf	___awdiv@dividend+1,f,c
  2181  0011C0  B0D8               	btfsc	status,0,c
  2182  0011C2  2A02               	incf	___awdiv@dividend+1,f,c
  2183  0011C4  0E01               	movlw	1
  2184  0011C6  1A06               	xorwf	___awdiv@sign,f,c
  2185  0011C8  D000               	goto	i2l1481
  2186  0011CA                     i2l1481:
  2187  0011CA  0E00               	movlw	0
  2188  0011CC  6E08               	movwf	___awdiv@quotient+1,c
  2189  0011CE  0E00               	movlw	0
  2190  0011D0  6E07               	movwf	___awdiv@quotient,c
  2191  0011D2  5003               	movf	___awdiv@divisor,w,c
  2192  0011D4  1004               	iorwf	___awdiv@divisor+1,w,c
  2193  0011D6  B4D8               	btfsc	status,2,c
  2194  0011D8  D021               	goto	i2l1503
  2195  0011DA  0E01               	movlw	1
  2196  0011DC  6E05               	movwf	___awdiv@counter,c
  2197  0011DE  D005               	goto	i2l1489
  2198  0011E0                     i2l1487:
  2199  0011E0  90D8               	bcf	status,0,c
  2200  0011E2  3603               	rlcf	___awdiv@divisor,f,c
  2201  0011E4  3604               	rlcf	___awdiv@divisor+1,f,c
  2202  0011E6  2A05               	incf	___awdiv@counter,f,c
  2203  0011E8  D000               	goto	i2l1489
  2204  0011EA                     i2l1489:
  2205  0011EA  BE04               	btfsc	___awdiv@divisor+1,7,c
  2206  0011EC  D002               	goto	i2l1491
  2207  0011EE  D7F8               	goto	i2l1487
  2208  0011F0  D000               	goto	i2l1491
  2209  0011F2                     i2l1491:
  2210  0011F2  90D8               	bcf	status,0,c
  2211  0011F4  3607               	rlcf	___awdiv@quotient,f,c
  2212  0011F6  3608               	rlcf	___awdiv@quotient+1,f,c
  2213  0011F8  5003               	movf	___awdiv@divisor,w,c
  2214  0011FA  5C01               	subwf	___awdiv@dividend,w,c
  2215  0011FC  5004               	movf	___awdiv@divisor+1,w,c
  2216  0011FE  5802               	subwfb	___awdiv@dividend+1,w,c
  2217  001200  A0D8               	btfss	status,0,c
  2218  001202  D006               	goto	i2l1499
  2219  001204  5003               	movf	___awdiv@divisor,w,c
  2220  001206  5E01               	subwf	___awdiv@dividend,f,c
  2221  001208  5004               	movf	___awdiv@divisor+1,w,c
  2222  00120A  5A02               	subwfb	___awdiv@dividend+1,f,c
  2223  00120C  8007               	bsf	___awdiv@quotient,0,c
  2224  00120E  D000               	goto	i2l1499
  2225  001210                     i2l1499:
  2226  001210  90D8               	bcf	status,0,c
  2227  001212  3204               	rrcf	___awdiv@divisor+1,f,c
  2228  001214  3203               	rrcf	___awdiv@divisor,f,c
  2229  001216  2E05               	decfsz	___awdiv@counter,f,c
  2230  001218  D7EC               	goto	i2l1491
  2231  00121A  D000               	goto	i2l1503
  2232  00121C                     i2l1503:
  2233  00121C  5006               	movf	___awdiv@sign,w,c
  2234  00121E  B4D8               	btfsc	status,2,c
  2235  001220  D005               	goto	i2l1507
  2236  001222  6C07               	negf	___awdiv@quotient,c
  2237  001224  1E08               	comf	___awdiv@quotient+1,f,c
  2238  001226  B0D8               	btfsc	status,0,c
  2239  001228  2A08               	incf	___awdiv@quotient+1,f,c
  2240  00122A  D000               	goto	i2l1507
  2241  00122C                     i2l1507:
  2242  00122C  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2243  001230  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2244  001234  0012               	return	
  2245  001236  0012               	return		;funcret
  2246  001238                     __end_of___awdiv:
  2247                           	opt stack 0
  2248                           pclatu	equ	0xFFB
  2249                           pclath	equ	0xFFA
  2250                           tblptru	equ	0xFF8
  2251                           tblptrh	equ	0xFF7
  2252                           tblptrl	equ	0xFF6
  2253                           tablat	equ	0xFF5
  2254                           prodh	equ	0xFF4
  2255                           prodl	equ	0xFF3
  2256                           intcon	equ	0xFF2
  2257                           postinc0	equ	0xFEE
  2258                           fsr0h	equ	0xFEA
  2259                           fsr0l	equ	0xFE9
  2260                           wreg	equ	0xFE8
  2261                           fsr1h	equ	0xFE2
  2262                           fsr1l	equ	0xFE1
  2263                           indf2	equ	0xFDF
  2264                           fsr2h	equ	0xFDA
  2265                           fsr2l	equ	0xFD9
  2266                           status	equ	0xFD8
  2267                           
  2268 ;; *************** function _Manage_Message *****************
  2269 ;; Defined at:
  2270 ;;		line 51 in file "_01_USER/Run.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;		None
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;  _databuff       1   13[COMRAM] unsigned char [1]
  2275 ;; Return value:  Size  Location     Type
  2276 ;;		None               void
  2277 ;; Registers used:
  2278 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2285 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2287 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2288 ;;Total ram usage:        1 bytes
  2289 ;; Hardware stack levels used:    1
  2290 ;; Hardware stack levels required when called:    2
  2291 ;; This function calls:
  2292 ;;		_EEPROM_Writers
  2293 ;;		_Key_FSM_Read
  2294 ;;		_Key_FSM_Reset
  2295 ;; This function is called by:
  2296 ;;		_Sys_Cyc
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           	psect	text19
  2301  001238                     __ptext19:
  2302                           	opt stack 0
  2303  001238                     _Manage_Message:
  2304                           	opt stack 24
  2305                           
  2306                           ;Run.c: 53: unsigned char _databuff[1] = {0};
  2307                           
  2308                           ;incstack = 0
  2309  001238  C02C  F00E         	movff	Manage_Message@F8480,Manage_Message@_databuff
  2310                           
  2311                           ;Run.c: 55: Key_FSM_Read();
  2312  00123C  EC06  F008         	call	_Key_FSM_Read	;wreg free
  2313                           
  2314                           ;Run.c: 57: if ( Local_Key_User.key_group == ((0x01<<0)|(0x01<<1)) && Local_Key_User.key
      +                          _group_state == KEY_short )
  2315  001240  0E03               	movlw	3
  2316  001242  183C               	xorwf	_Local_Key_User+1,w,c	;volatile
  2317  001244  A4D8               	btfss	status,2,c
  2318  001246  D016               	goto	i2l1663
  2319  001248  043D               	decf	_Local_Key_User+2,w,c	;volatile
  2320  00124A  A4D8               	btfss	status,2,c
  2321  00124C  D013               	goto	i2l1663
  2322                           
  2323                           ;Run.c: 58: {
  2324                           ;Run.c: 59: _databuff[0] = IR2184_Num ;
  2325  00124E  C02E  F00E         	movff	_IR2184_Num,Manage_Message@_databuff
  2326                           
  2327                           ;Run.c: 60: EEPROM_Writers(0x10,_databuff,1);
  2328  001252  0E00               	movlw	0
  2329  001254  6E06               	movwf	EEPROM_Writers@Addr+1,c
  2330  001256  0E10               	movlw	16
  2331  001258  6E05               	movwf	EEPROM_Writers@Addr,c
  2332  00125A  0E0E               	movlw	low Manage_Message@_databuff
  2333  00125C  6E07               	movwf	EEPROM_Writers@DateBuff,c
  2334  00125E  0E00               	movlw	high Manage_Message@_databuff
  2335  001260  6E08               	movwf	EEPROM_Writers@DateBuff+1,c
  2336  001262  0E00               	movlw	0
  2337  001264  6E0A               	movwf	EEPROM_Writers@length+1,c
  2338  001266  0E01               	movlw	1
  2339  001268  6E09               	movwf	EEPROM_Writers@length,c
  2340  00126A  EC76  F00A         	call	_EEPROM_Writers	;wreg free
  2341                           
  2342                           ;Run.c: 61: Nix_Flash = 130;
  2343  00126E  0E82               	movlw	130
  2344  001270  6E30               	movwf	_Nix_Flash,c
  2345  001272  D000               	goto	i2l1663
  2346  001274                     i2l1663:
  2347                           
  2348                           ;Run.c: 62: }
  2349                           ;Run.c: 65: if (Local_Key_User.key_state[1-1] == KEY_short) IR2184_Num -- ;
  2350  001274  0442               	decf	_Local_Key_User+7,w,c	;volatile
  2351  001276  A4D8               	btfss	status,2,c
  2352  001278  D002               	goto	i2l1667
  2353  00127A  062E               	decf	_IR2184_Num,f,c
  2354  00127C  D000               	goto	i2l1667
  2355  00127E                     i2l1667:
  2356                           
  2357                           ;Run.c: 66: if (Local_Key_User.key_state[1-1] == KEY_hold) IR2184_Num -- ;
  2358  00127E  0E03               	movlw	3
  2359  001280  1842               	xorwf	_Local_Key_User+7,w,c	;volatile
  2360  001282  A4D8               	btfss	status,2,c
  2361  001284  D002               	goto	i2l1671
  2362  001286  062E               	decf	_IR2184_Num,f,c
  2363  001288  D000               	goto	i2l1671
  2364  00128A                     i2l1671:
  2365                           
  2366                           ;Run.c: 69: if (Local_Key_User.key_state[2-1] == KEY_short) IR2184_Num ++ ;
  2367  00128A  0443               	decf	_Local_Key_User+8,w,c	;volatile
  2368  00128C  A4D8               	btfss	status,2,c
  2369  00128E  D002               	goto	i2l1675
  2370  001290  2A2E               	incf	_IR2184_Num,f,c
  2371  001292  D000               	goto	i2l1675
  2372  001294                     i2l1675:
  2373                           
  2374                           ;Run.c: 70: if (Local_Key_User.key_state[2-1] == KEY_hold) IR2184_Num ++ ;
  2375  001294  0E03               	movlw	3
  2376  001296  1843               	xorwf	_Local_Key_User+8,w,c	;volatile
  2377  001298  A4D8               	btfss	status,2,c
  2378  00129A  D002               	goto	i2l1679
  2379  00129C  2A2E               	incf	_IR2184_Num,f,c
  2380  00129E  D000               	goto	i2l1679
  2381  0012A0                     i2l1679:
  2382                           
  2383                           ;Run.c: 72: if(IR2184_Num > 99 && IR2184_Num <200 ) IR2184_Num = 0;
  2384  0012A0  0E63               	movlw	99
  2385  0012A2  642E               	cpfsgt	_IR2184_Num,c
  2386  0012A4  D006               	goto	i2l1685
  2387  0012A6  0EC8               	movlw	200
  2388  0012A8  602E               	cpfslt	_IR2184_Num,c
  2389  0012AA  D003               	goto	i2l1685
  2390  0012AC  0E00               	movlw	0
  2391  0012AE  6E2E               	movwf	_IR2184_Num,c
  2392  0012B0  D000               	goto	i2l1685
  2393  0012B2                     i2l1685:
  2394                           
  2395                           ;Run.c: 73: if(IR2184_Num > 200 ) IR2184_Num = 99;
  2396  0012B2  0EC8               	movlw	200
  2397  0012B4  642E               	cpfsgt	_IR2184_Num,c
  2398  0012B6  D003               	goto	i2l1689
  2399  0012B8  0E63               	movlw	99
  2400  0012BA  6E2E               	movwf	_IR2184_Num,c
  2401  0012BC  D000               	goto	i2l1689
  2402  0012BE                     i2l1689:
  2403                           
  2404                           ;Run.c: 75: Key_FSM_Reset();
  2405  0012BE  ECCA  F00A         	call	_Key_FSM_Reset	;wreg free
  2406  0012C2  0012               	return		;funcret
  2407  0012C4                     __end_of_Manage_Message:
  2408                           	opt stack 0
  2409                           pclatu	equ	0xFFB
  2410                           pclath	equ	0xFFA
  2411                           tblptru	equ	0xFF8
  2412                           tblptrh	equ	0xFF7
  2413                           tblptrl	equ	0xFF6
  2414                           tablat	equ	0xFF5
  2415                           prodh	equ	0xFF4
  2416                           prodl	equ	0xFF3
  2417                           intcon	equ	0xFF2
  2418                           postinc0	equ	0xFEE
  2419                           fsr0h	equ	0xFEA
  2420                           fsr0l	equ	0xFE9
  2421                           wreg	equ	0xFE8
  2422                           fsr1h	equ	0xFE2
  2423                           fsr1l	equ	0xFE1
  2424                           indf2	equ	0xFDF
  2425                           fsr2h	equ	0xFDA
  2426                           fsr2l	equ	0xFD9
  2427                           status	equ	0xFD8
  2428                           
  2429 ;; *************** function _Key_FSM_Reset *****************
  2430 ;; Defined at:
  2431 ;;		line 151 in file "_01_USER/Key.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;		None
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;  t               1    0[COMRAM] unsigned char 
  2436 ;; Return value:  Size  Location     Type
  2437 ;;		None               void
  2438 ;; Registers used:
  2439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2446 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2448 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2449 ;;Total ram usage:        1 bytes
  2450 ;; Hardware stack levels used:    1
  2451 ;; This function calls:
  2452 ;;		Nothing
  2453 ;; This function is called by:
  2454 ;;		_Manage_Message
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           	psect	text20
  2459  001594                     __ptext20:
  2460                           	opt stack 0
  2461  001594                     _Key_FSM_Reset:
  2462                           	opt stack 25
  2463                           
  2464                           ;Key.c: 153: unsigned char t;
  2465                           ;Key.c: 154: Local_Key_User.key_BUS = 0x00;
  2466                           
  2467                           ;incstack = 0
  2468  001594  0E00               	movlw	0
  2469  001596  6E3B               	movwf	_Local_Key_User,c	;volatile
  2470                           
  2471                           ;Key.c: 155: Local_Key_User.key_group = KEY_default;
  2472  001598  0E00               	movlw	0
  2473  00159A  6E3C               	movwf	_Local_Key_User+1,c	;volatile
  2474                           
  2475                           ;Key.c: 156: t=4;
  2476  00159C  0E04               	movlw	4
  2477  00159E  6E01               	movwf	Key_FSM_Reset@t,c
  2478                           
  2479                           ;Key.c: 157: while(t--) Local_Key_User.key_count[t] = 0,
  2480  0015A0  D017               	goto	i2l1129
  2481  0015A2                     i2l1127:
  2482                           
  2483                           ;Key.c: 158: Local_Key_User.key_state[t] = KEY_default;
  2484  0015A2  5001               	movf	Key_FSM_Reset@t,w,c
  2485  0015A4  0D02               	mullw	2
  2486  0015A6  0E3E               	movlw	low (_Local_Key_User+3)
  2487  0015A8  24F3               	addwf	prodl,w,c
  2488  0015AA  6ED9               	movwf	fsr2l,c
  2489  0015AC  0E00               	movlw	high (_Local_Key_User+3)
  2490  0015AE  20F4               	addwfc	prodh,w,c
  2491  0015B0  6EDA               	movwf	fsr2h,c
  2492  0015B2  0E00               	movlw	0
  2493  0015B4  6EDE               	movwf	postinc2,c
  2494  0015B6  0E00               	movlw	0
  2495  0015B8  6EDD               	movwf	postdec2,c
  2496  0015BA  5001               	movf	Key_FSM_Reset@t,w,c
  2497  0015BC  0D01               	mullw	1
  2498  0015BE  0E42               	movlw	low (_Local_Key_User+7)
  2499  0015C0  24F3               	addwf	prodl,w,c
  2500  0015C2  6ED9               	movwf	fsr2l,c
  2501  0015C4  0E00               	movlw	high (_Local_Key_User+7)
  2502  0015C6  20F4               	addwfc	prodh,w,c
  2503  0015C8  6EDA               	movwf	fsr2h,c
  2504  0015CA  0E00               	movlw	0
  2505  0015CC  6EDF               	movwf	indf2,c
  2506  0015CE  D000               	goto	i2l1129
  2507  0015D0                     i2l1129:
  2508  0015D0  0601               	decf	Key_FSM_Reset@t,f,c
  2509  0015D2  2801               	incf	Key_FSM_Reset@t,w,c
  2510  0015D4  A4D8               	btfss	status,2,c
  2511  0015D6  D7E5               	goto	i2l1127
  2512  0015D8  0012               	return		;funcret
  2513  0015DA                     __end_of_Key_FSM_Reset:
  2514                           	opt stack 0
  2515                           pclatu	equ	0xFFB
  2516                           pclath	equ	0xFFA
  2517                           tblptru	equ	0xFF8
  2518                           tblptrh	equ	0xFF7
  2519                           tblptrl	equ	0xFF6
  2520                           tablat	equ	0xFF5
  2521                           prodh	equ	0xFF4
  2522                           prodl	equ	0xFF3
  2523                           intcon	equ	0xFF2
  2524                           postinc0	equ	0xFEE
  2525                           fsr0h	equ	0xFEA
  2526                           fsr0l	equ	0xFE9
  2527                           wreg	equ	0xFE8
  2528                           fsr1h	equ	0xFE2
  2529                           fsr1l	equ	0xFE1
  2530                           indf2	equ	0xFDF
  2531                           postinc2	equ	0xFDE
  2532                           postdec2	equ	0xFDD
  2533                           fsr2h	equ	0xFDA
  2534                           fsr2l	equ	0xFD9
  2535                           status	equ	0xFD8
  2536                           
  2537 ;; *************** function _Key_FSM_Read *****************
  2538 ;; Defined at:
  2539 ;;		line 101 in file "_01_USER/Key.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;		None
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;  key_num         1    5[COMRAM] unsigned char 
  2544 ;;  key_num_mate    1    4[COMRAM] unsigned char 
  2545 ;; Return value:  Size  Location     Type
  2546 ;;		None               void
  2547 ;; Registers used:
  2548 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2555 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2556 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2557 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2558 ;;Total ram usage:        6 bytes
  2559 ;; Hardware stack levels used:    1
  2560 ;; This function calls:
  2561 ;;		Nothing
  2562 ;; This function is called by:
  2563 ;;		_Manage_Message
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           	psect	text21
  2568  00100C                     __ptext21:
  2569                           	opt stack 0
  2570  00100C                     _Key_FSM_Read:
  2571                           	opt stack 25
  2572                           
  2573                           ;Key.c: 103: unsigned char key_num = 2,key_num_mate;
  2574                           
  2575                           ;incstack = 0
  2576  00100C  0E02               	movlw	2
  2577  00100E  6E06               	movwf	Key_FSM_Read@key_num,c
  2578                           
  2579                           ;Key.c: 106: while(key_num--)
  2580  001010  D071               	goto	i2l1099
  2581  001012                     i2l1081:
  2582                           
  2583                           ;Key.c: 107: {
  2584                           ;Key.c: 109: if( Local_Key_FSM.key_BUS == 0x00 )
  2585  001012  5032               	movf	_Local_Key_FSM,w,c	;volatile
  2586  001014  A4D8               	btfss	status,2,c
  2587  001016  D04A               	goto	i2l1093
  2588                           
  2589                           ;Key.c: 110: {
  2590                           ;Key.c: 111: if( Local_Key_FSM.key_count[key_num] > 5 )
  2591  001018  5006               	movf	Key_FSM_Read@key_num,w,c
  2592  00101A  0D02               	mullw	2
  2593  00101C  0E35               	movlw	low (_Local_Key_FSM+3)
  2594  00101E  24F3               	addwf	prodl,w,c
  2595  001020  6ED9               	movwf	fsr2l,c
  2596  001022  0E00               	movlw	high (_Local_Key_FSM+3)
  2597  001024  20F4               	addwfc	prodh,w,c
  2598  001026  6EDA               	movwf	fsr2h,c
  2599  001028  0E01               	movlw	1
  2600  00102A  50DB               	movf	plusw2,w,c
  2601  00102C  E104               	bnz	i2u24_40
  2602  00102E  0E06               	movlw	6
  2603  001030  5CDE               	subwf	postinc2,w,c
  2604  001032  A0D8               	btfss	status,0,c
  2605  001034  D024               	goto	i2l1091
  2606  001036                     i2u24_40:
  2607                           
  2608                           ;Key.c: 112: {
  2609                           ;Key.c: 113: if( Local_Key_FSM.key_count[key_num] > 60 )
  2610  001036  5006               	movf	Key_FSM_Read@key_num,w,c
  2611  001038  0D02               	mullw	2
  2612  00103A  0E35               	movlw	low (_Local_Key_FSM+3)
  2613  00103C  24F3               	addwf	prodl,w,c
  2614  00103E  6ED9               	movwf	fsr2l,c
  2615  001040  0E00               	movlw	high (_Local_Key_FSM+3)
  2616  001042  20F4               	addwfc	prodh,w,c
  2617  001044  6EDA               	movwf	fsr2h,c
  2618  001046  0E01               	movlw	1
  2619  001048  50DB               	movf	plusw2,w,c
  2620  00104A  E104               	bnz	i2u25_40
  2621  00104C  0E3D               	movlw	61
  2622  00104E  5CDE               	subwf	postinc2,w,c
  2623  001050  A0D8               	btfss	status,0,c
  2624  001052  D00A               	goto	i2l1089
  2625  001054                     i2u25_40:
  2626                           
  2627                           ;Key.c: 114: Local_Key_User.key_state[key_num] = KEY_long;
  2628  001054  5006               	movf	Key_FSM_Read@key_num,w,c
  2629  001056  0D01               	mullw	1
  2630  001058  0E42               	movlw	low (_Local_Key_User+7)
  2631  00105A  24F3               	addwf	prodl,w,c
  2632  00105C  6ED9               	movwf	fsr2l,c
  2633  00105E  0E00               	movlw	high (_Local_Key_User+7)
  2634  001060  20F4               	addwfc	prodh,w,c
  2635  001062  6EDA               	movwf	fsr2h,c
  2636  001064  0E05               	movlw	5
  2637  001066  D014               	goto	L4
  2638  001068                     i2l1089:
  2639                           
  2640                           ;Key.c: 115: else Local_Key_User.key_state[key_num] = KEY_short;
  2641  001068  5006               	movf	Key_FSM_Read@key_num,w,c
  2642  00106A  0D01               	mullw	1
  2643  00106C  0E42               	movlw	low (_Local_Key_User+7)
  2644  00106E  24F3               	addwf	prodl,w,c
  2645  001070  6ED9               	movwf	fsr2l,c
  2646  001072  0E00               	movlw	high (_Local_Key_User+7)
  2647  001074  20F4               	addwfc	prodh,w,c
  2648  001076  6EDA               	movwf	fsr2h,c
  2649  001078  0E01               	movlw	1
  2650  00107A  6EDF               	movwf	indf2,c
  2651                           
  2652                           ;Key.c: 116: }
  2653  00107C  D00A               	goto	i2l58
  2654  00107E                     i2l1091:
  2655                           
  2656                           ;Key.c: 117: else Local_Key_User.key_state[key_num] = KEY_default;
  2657  00107E  5006               	movf	Key_FSM_Read@key_num,w,c
  2658  001080  0D01               	mullw	1
  2659  001082  0E42               	movlw	low (_Local_Key_User+7)
  2660  001084  24F3               	addwf	prodl,w,c
  2661  001086  6ED9               	movwf	fsr2l,c
  2662  001088  0E00               	movlw	high (_Local_Key_User+7)
  2663  00108A  20F4               	addwfc	prodh,w,c
  2664  00108C  6EDA               	movwf	fsr2h,c
  2665  00108E  0E00               	movlw	0
  2666  001090                     L4:
  2667  001090  6EDF               	movwf	indf2,c
  2668  001092                     i2l58:
  2669                           
  2670                           ;Key.c: 118: Local_Key_FSM.key_count[key_num] = 0;
  2671  001092  5006               	movf	Key_FSM_Read@key_num,w,c
  2672  001094  0D02               	mullw	2
  2673  001096  0E35               	movlw	low (_Local_Key_FSM+3)
  2674  001098  24F3               	addwf	prodl,w,c
  2675  00109A  6ED9               	movwf	fsr2l,c
  2676  00109C  0E00               	movlw	high (_Local_Key_FSM+3)
  2677  00109E  20F4               	addwfc	prodh,w,c
  2678  0010A0  6EDA               	movwf	fsr2h,c
  2679  0010A2  0E00               	movlw	0
  2680  0010A4  6EDE               	movwf	postinc2,c
  2681  0010A6  0E00               	movlw	0
  2682  0010A8  6EDD               	movwf	postdec2,c
  2683                           
  2684                           ;Key.c: 119: }
  2685  0010AA  D024               	goto	i2l1099
  2686  0010AC                     i2l1093:
  2687                           
  2688                           ;Key.c: 121: else if( Local_Key_FSM.key_count[key_num] > 60 )
  2689  0010AC  5006               	movf	Key_FSM_Read@key_num,w,c
  2690  0010AE  0D02               	mullw	2
  2691  0010B0  0E35               	movlw	low (_Local_Key_FSM+3)
  2692  0010B2  24F3               	addwf	prodl,w,c
  2693  0010B4  6ED9               	movwf	fsr2l,c
  2694  0010B6  0E00               	movlw	high (_Local_Key_FSM+3)
  2695  0010B8  20F4               	addwfc	prodh,w,c
  2696  0010BA  6EDA               	movwf	fsr2h,c
  2697  0010BC  0E01               	movlw	1
  2698  0010BE  50DB               	movf	plusw2,w,c
  2699  0010C0  E104               	bnz	i2u26_40
  2700  0010C2  0E3D               	movlw	61
  2701  0010C4  5CDE               	subwf	postinc2,w,c
  2702  0010C6  A0D8               	btfss	status,0,c
  2703  0010C8  D00A               	goto	i2l1097
  2704  0010CA                     i2u26_40:
  2705                           
  2706                           ;Key.c: 122: Local_Key_User.key_state[key_num] = KEY_hold;
  2707  0010CA  5006               	movf	Key_FSM_Read@key_num,w,c
  2708  0010CC  0D01               	mullw	1
  2709  0010CE  0E42               	movlw	low (_Local_Key_User+7)
  2710  0010D0  24F3               	addwf	prodl,w,c
  2711  0010D2  6ED9               	movwf	fsr2l,c
  2712  0010D4  0E00               	movlw	high (_Local_Key_User+7)
  2713  0010D6  20F4               	addwfc	prodh,w,c
  2714  0010D8  6EDA               	movwf	fsr2h,c
  2715  0010DA  0E03               	movlw	3
  2716  0010DC  D009               	goto	L5
  2717  0010DE                     i2l1097:
  2718                           
  2719                           ;Key.c: 125: else Local_Key_User.key_state[key_num] = KEY_busy;
  2720  0010DE  5006               	movf	Key_FSM_Read@key_num,w,c
  2721  0010E0  0D01               	mullw	1
  2722  0010E2  0E42               	movlw	low (_Local_Key_User+7)
  2723  0010E4  24F3               	addwf	prodl,w,c
  2724  0010E6  6ED9               	movwf	fsr2l,c
  2725  0010E8  0E00               	movlw	high (_Local_Key_User+7)
  2726  0010EA  20F4               	addwfc	prodh,w,c
  2727  0010EC  6EDA               	movwf	fsr2h,c
  2728  0010EE  0E04               	movlw	4
  2729  0010F0                     L5:
  2730  0010F0  6EDF               	movwf	indf2,c
  2731  0010F2  D000               	goto	i2l1099
  2732  0010F4                     i2l1099:
  2733  0010F4  0606               	decf	Key_FSM_Read@key_num,f,c
  2734  0010F6  2806               	incf	Key_FSM_Read@key_num,w,c
  2735  0010F8  A4D8               	btfss	status,2,c
  2736  0010FA  D78B               	goto	i2l1081
  2737                           
  2738                           ;Key.c: 126: }
  2739                           ;Key.c: 130: for( key_num = 0;key_num < 2 - 1; key_num ++)
  2740  0010FC  0E00               	movlw	0
  2741  0010FE  6E06               	movwf	Key_FSM_Read@key_num,c
  2742  001100  5006               	movf	Key_FSM_Read@key_num,w,c
  2743  001102  A4D8               	btfss	status,2,c
  2744  001104  0012               	return	
  2745  001106  D001               	goto	i2l1105
  2746  001108  0012               	return	
  2747  00110A                     i2l1105:
  2748                           
  2749                           ;Key.c: 131: for( key_num_mate = key_num+1;key_num_mate < 2 ; key_num_mate ++)
  2750  00110A  2806               	incf	Key_FSM_Read@key_num,w,c
  2751  00110C  6E05               	movwf	Key_FSM_Read@key_num_mate,c
  2752  00110E  0E01               	movlw	1
  2753  001110  6405               	cpfsgt	Key_FSM_Read@key_num_mate,c
  2754  001112  D001               	goto	i2l1109
  2755  001114  D043               	goto	i2l1121
  2756  001116                     i2l1109:
  2757                           
  2758                           ;Key.c: 132: if( Local_Key_User.key_state[key_num] == Local_Key_User.key_state[key_num_m
      +                          ate] )
  2759  001116  5005               	movf	Key_FSM_Read@key_num_mate,w,c
  2760  001118  0D01               	mullw	1
  2761  00111A  0E42               	movlw	low (_Local_Key_User+7)
  2762  00111C  24F3               	addwf	prodl,w,c
  2763  00111E  6ED9               	movwf	fsr2l,c
  2764  001120  0E00               	movlw	high (_Local_Key_User+7)
  2765  001122  20F4               	addwfc	prodh,w,c
  2766  001124  6EDA               	movwf	fsr2h,c
  2767  001126  5006               	movf	Key_FSM_Read@key_num,w,c
  2768  001128  0D01               	mullw	1
  2769  00112A  0E42               	movlw	low (_Local_Key_User+7)
  2770  00112C  24F3               	addwf	prodl,w,c
  2771  00112E  6EE1               	movwf	fsr1l,c
  2772  001130  0E00               	movlw	high (_Local_Key_User+7)
  2773  001132  20F4               	addwfc	prodh,w,c
  2774  001134  6EE2               	movwf	fsr1h,c
  2775  001136  50DE               	movf	postinc2,w,c
  2776  001138  18E6               	xorwf	postinc1,w,c
  2777  00113A  A4D8               	btfss	status,2,c
  2778  00113C  D02D               	goto	i2l1117
  2779                           
  2780                           ;Key.c: 133: if(Local_Key_User.key_state[key_num] != KEY_default)
  2781  00113E  5006               	movf	Key_FSM_Read@key_num,w,c
  2782  001140  0D01               	mullw	1
  2783  001142  0E42               	movlw	low (_Local_Key_User+7)
  2784  001144  24F3               	addwf	prodl,w,c
  2785  001146  6ED9               	movwf	fsr2l,c
  2786  001148  0E00               	movlw	high (_Local_Key_User+7)
  2787  00114A  20F4               	addwfc	prodh,w,c
  2788  00114C  6EDA               	movwf	fsr2h,c
  2789  00114E  50DF               	movf	indf2,w,c
  2790  001150  B4D8               	btfsc	status,2,c
  2791  001152  D022               	goto	i2l1117
  2792                           
  2793                           ;Key.c: 134: {
  2794                           ;Key.c: 135: Local_Key_User.key_group = (0x01 << key_num)|(0x01 << key_num_mate);
  2795  001154  C005  F001         	movff	Key_FSM_Read@key_num_mate,??_Key_FSM_Read
  2796  001158  0E01               	movlw	1
  2797  00115A  6E02               	movwf	(??_Key_FSM_Read+1)& (0+255),c
  2798  00115C  2A01               	incf	??_Key_FSM_Read,f,c
  2799  00115E  D002               	goto	i2u32_44
  2800  001160                     i2u32_45:
  2801  001160  90D8               	bcf	status,0,c
  2802  001162  3602               	rlcf	??_Key_FSM_Read+1,f,c
  2803  001164                     i2u32_44:
  2804  001164  2E01               	decfsz	??_Key_FSM_Read,f,c
  2805  001166  D7FC               	goto	i2u32_45
  2806  001168  C006  F003         	movff	Key_FSM_Read@key_num,??_Key_FSM_Read+2
  2807  00116C  0E01               	movlw	1
  2808  00116E  6E04               	movwf	(??_Key_FSM_Read+3)& (0+255),c
  2809  001170  2A03               	incf	??_Key_FSM_Read+2,f,c
  2810  001172  D002               	goto	i2u33_44
  2811  001174                     i2u33_45:
  2812  001174  90D8               	bcf	status,0,c
  2813  001176  3604               	rlcf	??_Key_FSM_Read+3,f,c
  2814  001178                     i2u33_44:
  2815  001178  2E03               	decfsz	??_Key_FSM_Read+2,f,c
  2816  00117A  D7FC               	goto	i2u33_45
  2817  00117C  5004               	movf	??_Key_FSM_Read+3,w,c
  2818  00117E  1002               	iorwf	??_Key_FSM_Read+1,w,c
  2819  001180  6E3C               	movwf	_Local_Key_User+1,c	;volatile
  2820                           
  2821                           ;Key.c: 136: Local_Key_User.key_group_state = Local_Key_User.key_state[key_num];
  2822  001182  5006               	movf	Key_FSM_Read@key_num,w,c
  2823  001184  0D01               	mullw	1
  2824  001186  0E42               	movlw	low (_Local_Key_User+7)
  2825  001188  24F3               	addwf	prodl,w,c
  2826  00118A  6ED9               	movwf	fsr2l,c
  2827  00118C  0E00               	movlw	high (_Local_Key_User+7)
  2828  00118E  20F4               	addwfc	prodh,w,c
  2829  001190  6EDA               	movwf	fsr2h,c
  2830  001192  50DF               	movf	indf2,w,c
  2831  001194  6E3D               	movwf	_Local_Key_User+2,c	;volatile
  2832  001196  D000               	goto	i2l1117
  2833  001198                     i2l1117:
  2834  001198  2A05               	incf	Key_FSM_Read@key_num_mate,f,c
  2835  00119A  D7B9               	goto	L6
  2836  00119C                     i2l1121:
  2837  00119C  2A06               	incf	Key_FSM_Read@key_num,f,c
  2838  00119E  D7B0               	goto	L7
  2839  0011A0  0012               	return		;funcret
  2840  0011A2                     __end_of_Key_FSM_Read:
  2841                           	opt stack 0
  2842                           pclatu	equ	0xFFB
  2843                           pclath	equ	0xFFA
  2844                           tblptru	equ	0xFF8
  2845                           tblptrh	equ	0xFF7
  2846                           tblptrl	equ	0xFF6
  2847                           tablat	equ	0xFF5
  2848                           prodh	equ	0xFF4
  2849                           prodl	equ	0xFF3
  2850                           intcon	equ	0xFF2
  2851                           postinc0	equ	0xFEE
  2852                           fsr0h	equ	0xFEA
  2853                           fsr0l	equ	0xFE9
  2854                           wreg	equ	0xFE8
  2855                           postinc1	equ	0xFE6
  2856                           fsr1h	equ	0xFE2
  2857                           fsr1l	equ	0xFE1
  2858                           indf2	equ	0xFDF
  2859                           postinc2	equ	0xFDE
  2860                           postdec2	equ	0xFDD
  2861                           plusw2	equ	0xFDB
  2862                           fsr2h	equ	0xFDA
  2863                           fsr2l	equ	0xFD9
  2864                           status	equ	0xFD8
  2865                           
  2866 ;; *************** function _EEPROM_Writers *****************
  2867 ;; Defined at:
  2868 ;;		line 38 in file "_01_USER/EEPROM.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;  Addr            2    4[COMRAM] unsigned int 
  2871 ;;  DateBuff        2    6[COMRAM] PTR unsigned char 
  2872 ;;		 -> Manage_Message@_databuff(1), 
  2873 ;;  length          2    8[COMRAM] unsigned int 
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;  i               1   12[COMRAM] unsigned char 
  2876 ;; Return value:  Size  Location     Type
  2877 ;;                  1    wreg      unsigned char 
  2878 ;; Registers used:
  2879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2880 ;; Tracked objects:
  2881 ;;		On entry : 0/0
  2882 ;;		On exit  : 0/0
  2883 ;;		Unchanged: 0/0
  2884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2885 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2886 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2887 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2888 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2889 ;;Total ram usage:        9 bytes
  2890 ;; Hardware stack levels used:    1
  2891 ;; Hardware stack levels required when called:    1
  2892 ;; This function calls:
  2893 ;;		_Write_b_eep
  2894 ;; This function is called by:
  2895 ;;		_Manage_Message
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           
  2899                           	psect	text22
  2900  0014EC                     __ptext22:
  2901                           	opt stack 0
  2902  0014EC                     _EEPROM_Writers:
  2903                           	opt stack 24
  2904                           
  2905                           ;EEPROM.c: 40: unsigned char i;
  2906                           ;EEPROM.c: 42: if(Addr + length <= 1024)
  2907                           
  2908                           ;incstack = 0
  2909  0014EC  5009               	movf	EEPROM_Writers@length,w,c
  2910  0014EE  2405               	addwf	EEPROM_Writers@Addr,w,c
  2911  0014F0  6E0B               	movwf	??_EEPROM_Writers& (0+255),c
  2912  0014F2  500A               	movf	EEPROM_Writers@length+1,w,c
  2913  0014F4  2006               	addwfc	EEPROM_Writers@Addr+1,w,c
  2914  0014F6  6E0C               	movwf	(??_EEPROM_Writers+1)& (0+255),c
  2915  0014F8  040B               	decf	??_EEPROM_Writers,w,c
  2916  0014FA  0E04               	movlw	4
  2917  0014FC  580C               	subwfb	??_EEPROM_Writers+1,w,c
  2918  0014FE  B0D8               	btfsc	status,0,c
  2919  001500  0012               	return	
  2920                           
  2921                           ;EEPROM.c: 43: {
  2922                           ;EEPROM.c: 44: for(i=0; i<length; ++i)
  2923  001502  0E00               	movlw	0
  2924  001504  6E0D               	movwf	EEPROM_Writers@i,c
  2925  001506  D014               	goto	i2l1563
  2926  001508                     i2l1559:
  2927                           
  2928                           ;EEPROM.c: 45: Write_b_eep(Addr + i, DateBuff[i]);
  2929  001508  500D               	movf	EEPROM_Writers@i,w,c
  2930  00150A  2405               	addwf	EEPROM_Writers@Addr,w,c
  2931  00150C  6E01               	movwf	Write_b_eep@badd,c
  2932  00150E  0E00               	movlw	0
  2933  001510  2006               	addwfc	EEPROM_Writers@Addr+1,w,c
  2934  001512  6E02               	movwf	Write_b_eep@badd+1,c
  2935  001514  500D               	movf	EEPROM_Writers@i,w,c
  2936  001516  0D01               	mullw	1
  2937  001518  50F3               	movf	prodl,w,c
  2938  00151A  2407               	addwf	EEPROM_Writers@DateBuff,w,c
  2939  00151C  6ED9               	movwf	fsr2l,c
  2940  00151E  50F4               	movf	prodh,w,c
  2941  001520  2008               	addwfc	EEPROM_Writers@DateBuff+1,w,c
  2942  001522  6EDA               	movwf	fsr2h,c
  2943  001524  50DF               	movf	indf2,w,c
  2944  001526  6E03               	movwf	Write_b_eep@bdat,c
  2945  001528  EC0F  F00B         	call	_Write_b_eep	;wreg free
  2946  00152C  2A0D               	incf	EEPROM_Writers@i,f,c
  2947  00152E  D000               	goto	i2l1563
  2948  001530                     i2l1563:
  2949  001530  500D               	movf	EEPROM_Writers@i,w,c
  2950  001532  6E0B               	movwf	??_EEPROM_Writers& (0+255),c
  2951  001534  6A0C               	clrf	(??_EEPROM_Writers+1)& (0+255),c
  2952  001536  5009               	movf	EEPROM_Writers@length,w,c
  2953  001538  5C0B               	subwf	??_EEPROM_Writers,w,c
  2954  00153A  500A               	movf	EEPROM_Writers@length+1,w,c
  2955  00153C  580C               	subwfb	??_EEPROM_Writers+1,w,c
  2956  00153E  B0D8               	btfsc	status,0,c
  2957  001540  0012               	return	
  2958  001542  D7E2               	goto	i2l1559
  2959                           
  2960                           ;EEPROM.c: 48: else
  2961                           ;EEPROM.c: 49: return 1;
  2962                           ;	Return value of _EEPROM_Writers is never used
  2963                           
  2964                           ;EEPROM.c: 47: }
  2965                           
  2966                           ;EEPROM.c: 46: return 0;
  2967                           ;	Return value of _EEPROM_Writers is never used
  2968  001544  0012               	return	
  2969  001546  0012               	return		;funcret
  2970  001548                     __end_of_EEPROM_Writers:
  2971                           	opt stack 0
  2972                           pclatu	equ	0xFFB
  2973                           pclath	equ	0xFFA
  2974                           tblptru	equ	0xFF8
  2975                           tblptrh	equ	0xFF7
  2976                           tblptrl	equ	0xFF6
  2977                           tablat	equ	0xFF5
  2978                           prodh	equ	0xFF4
  2979                           prodl	equ	0xFF3
  2980                           intcon	equ	0xFF2
  2981                           postinc0	equ	0xFEE
  2982                           fsr0h	equ	0xFEA
  2983                           fsr0l	equ	0xFE9
  2984                           wreg	equ	0xFE8
  2985                           postinc1	equ	0xFE6
  2986                           fsr1h	equ	0xFE2
  2987                           fsr1l	equ	0xFE1
  2988                           indf2	equ	0xFDF
  2989                           postinc2	equ	0xFDE
  2990                           postdec2	equ	0xFDD
  2991                           plusw2	equ	0xFDB
  2992                           fsr2h	equ	0xFDA
  2993                           fsr2l	equ	0xFD9
  2994                           status	equ	0xFD8
  2995                           
  2996 ;; *************** function _Write_b_eep *****************
  2997 ;; Defined at:
  2998 ;;		line 49 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\EEP\write_B.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;  badd            2    0[COMRAM] unsigned int 
  3001 ;;  bdat            1    2[COMRAM] unsigned char 
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;  GIE_BIT_VAL     1    3[COMRAM] char 
  3004 ;; Return value:  Size  Location     Type
  3005 ;;		None               void
  3006 ;; Registers used:
  3007 ;;		wreg, status,2, status,0
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3013 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3014 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3016 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3017 ;;Total ram usage:        4 bytes
  3018 ;; Hardware stack levels used:    1
  3019 ;; This function calls:
  3020 ;;		Nothing
  3021 ;; This function is called by:
  3022 ;;		_EEPROM_Writers
  3023 ;; This function uses a non-reentrant model
  3024 ;;
  3025                           
  3026                           	psect	text23
  3027  00161E                     __ptext23:
  3028                           	opt stack 0
  3029  00161E                     _Write_b_eep:
  3030                           	opt stack 24
  3031                           
  3032                           ;incstack = 0
  3033  00161E  0E00               	movlw	0
  3034  001620  6E04               	movwf	Write_b_eep@GIE_BIT_VAL,c
  3035  001622  5002               	movf	Write_b_eep@badd+1,w,c
  3036  001624  0B03               	andlw	3
  3037  001626  6E63               	movwf	3939,c	;volatile
  3038  001628  C001  FF62         	movff	Write_b_eep@badd,3938	;volatile
  3039  00162C  C003  FF61         	movff	Write_b_eep@bdat,3937	;volatile
  3040  001630  9E7F               	bcf	3967,7,c	;volatile
  3041  001632  9C7F               	bcf	3967,6,c	;volatile
  3042  001634  847F               	bsf	3967,2,c	;volatile
  3043  001636  0E00               	movlw	0
  3044  001638  BEF2               	btfsc	intcon,7,c	;volatile
  3045  00163A  0E01               	movlw	1
  3046  00163C  6E04               	movwf	Write_b_eep@GIE_BIT_VAL,c
  3047  00163E  9EF2               	bcf	intcon,7,c	;volatile
  3048  001640  0E55               	movlw	85
  3049  001642  6E7E               	movwf	3966,c	;volatile
  3050  001644  0EAA               	movlw	170
  3051  001646  6E7E               	movwf	3966,c	;volatile
  3052  001648  827F               	bsf	3967,1,c	;volatile
  3053  00164A  D000               	goto	i2l340
  3054  00164C                     i2l340:
  3055  00164C  B27F               	btfsc	3967,1,c	;volatile
  3056  00164E  D7FE               	goto	i2l340
  3057  001650  B004               	btfsc	Write_b_eep@GIE_BIT_VAL,0,c
  3058  001652  D002               	bra	i2u84_45
  3059  001654  9EF2               	bcf	intcon,7,c	;volatile
  3060  001656  D001               	bra	i2u84_46
  3061  001658                     i2u84_45:
  3062  001658  8EF2               	bsf	intcon,7,c	;volatile
  3063  00165A                     i2u84_46:
  3064  00165A  947F               	bcf	3967,2,c	;volatile
  3065  00165C  0012               	return		;funcret
  3066  00165E                     __end_of_Write_b_eep:
  3067                           	opt stack 0
  3068                           pclatu	equ	0xFFB
  3069                           pclath	equ	0xFFA
  3070                           tblptru	equ	0xFF8
  3071                           tblptrh	equ	0xFF7
  3072                           tblptrl	equ	0xFF6
  3073                           tablat	equ	0xFF5
  3074                           prodh	equ	0xFF4
  3075                           prodl	equ	0xFF3
  3076                           intcon	equ	0xFF2
  3077                           postinc0	equ	0xFEE
  3078                           fsr0h	equ	0xFEA
  3079                           fsr0l	equ	0xFE9
  3080                           wreg	equ	0xFE8
  3081                           postinc1	equ	0xFE6
  3082                           fsr1h	equ	0xFE2
  3083                           fsr1l	equ	0xFE1
  3084                           indf2	equ	0xFDF
  3085                           postinc2	equ	0xFDE
  3086                           postdec2	equ	0xFDD
  3087                           plusw2	equ	0xFDB
  3088                           fsr2h	equ	0xFDA
  3089                           fsr2l	equ	0xFD9
  3090                           status	equ	0xFD8
  3091                           
  3092 ;; *************** function _Key_FSM_Scan *****************
  3093 ;; Defined at:
  3094 ;;		line 80 in file "_01_USER/Key.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;		None
  3097 ;; Auto vars:     Size  Location     Type
  3098 ;;		None
  3099 ;; Return value:  Size  Location     Type
  3100 ;;		None               void
  3101 ;; Registers used:
  3102 ;;		wreg, status,2, status,0, cstack
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3112 ;;Total ram usage:        0 bytes
  3113 ;; Hardware stack levels used:    1
  3114 ;; Hardware stack levels required when called:    1
  3115 ;; This function calls:
  3116 ;;		_Key_Scan
  3117 ;; This function is called by:
  3118 ;;		_Sys_Cyc
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121                           
  3122                           	psect	text24
  3123  00177A                     __ptext24:
  3124                           	opt stack 0
  3125  00177A                     _Key_FSM_Scan:
  3126                           	opt stack 25
  3127                           
  3128                           ;Key.c: 82: Key_Scan();
  3129                           
  3130                           ;incstack = 0
  3131  00177A  ECCA  F00B         	call	_Key_Scan	;wreg free
  3132                           
  3133                           ;Key.c: 83: if( Local_Key_FSM.key_BUS & 0x01 ) Local_Key_FSM.key_count[0]++;
  3134  00177E  A032               	btfss	_Local_Key_FSM,0,c	;volatile
  3135  001780  D003               	goto	i2l1257
  3136  001782  4A35               	infsnz	_Local_Key_FSM+3,f,c	;volatile
  3137  001784  2A36               	incf	_Local_Key_FSM+4,f,c	;volatile
  3138  001786  D000               	goto	i2l1257
  3139  001788                     i2l1257:
  3140                           
  3141                           ;Key.c: 84: if( Local_Key_FSM.key_BUS & 0x02 ) Local_Key_FSM.key_count[1]++;
  3142  001788  A232               	btfss	_Local_Key_FSM,1,c	;volatile
  3143  00178A  0012               	return	
  3144  00178C  4A37               	infsnz	_Local_Key_FSM+5,f,c	;volatile
  3145  00178E  2A38               	incf	_Local_Key_FSM+6,f,c	;volatile
  3146  001790  0012               	return	
  3147  001792  0012               	return		;funcret
  3148  001794                     __end_of_Key_FSM_Scan:
  3149                           	opt stack 0
  3150                           pclatu	equ	0xFFB
  3151                           pclath	equ	0xFFA
  3152                           tblptru	equ	0xFF8
  3153                           tblptrh	equ	0xFF7
  3154                           tblptrl	equ	0xFF6
  3155                           tablat	equ	0xFF5
  3156                           prodh	equ	0xFF4
  3157                           prodl	equ	0xFF3
  3158                           intcon	equ	0xFF2
  3159                           postinc0	equ	0xFEE
  3160                           fsr0h	equ	0xFEA
  3161                           fsr0l	equ	0xFE9
  3162                           wreg	equ	0xFE8
  3163                           postinc1	equ	0xFE6
  3164                           fsr1h	equ	0xFE2
  3165                           fsr1l	equ	0xFE1
  3166                           indf2	equ	0xFDF
  3167                           postinc2	equ	0xFDE
  3168                           postdec2	equ	0xFDD
  3169                           plusw2	equ	0xFDB
  3170                           fsr2h	equ	0xFDA
  3171                           fsr2l	equ	0xFD9
  3172                           status	equ	0xFD8
  3173                           
  3174 ;; *************** function _Key_Scan *****************
  3175 ;; Defined at:
  3176 ;;		line 58 in file "_01_USER/Key.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;		None
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;		None
  3181 ;; Return value:  Size  Location     Type
  3182 ;;		None               void
  3183 ;; Registers used:
  3184 ;;		wreg, status,2, status,0
  3185 ;; Tracked objects:
  3186 ;;		On entry : 0/0
  3187 ;;		On exit  : 0/0
  3188 ;;		Unchanged: 0/0
  3189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3194 ;;Total ram usage:        0 bytes
  3195 ;; Hardware stack levels used:    1
  3196 ;; This function calls:
  3197 ;;		Nothing
  3198 ;; This function is called by:
  3199 ;;		_Key_FSM_Scan
  3200 ;; This function uses a non-reentrant model
  3201 ;;
  3202                           
  3203                           	psect	text25
  3204  001794                     __ptext25:
  3205                           	opt stack 0
  3206  001794                     _Key_Scan:
  3207                           	opt stack 25
  3208                           
  3209                           ;Key.c: 61: Local_Key_FSM.key_BUS = 0x00;
  3210                           
  3211                           ;incstack = 0
  3212  001794  0E00               	movlw	0
  3213  001796  6E32               	movwf	_Local_Key_FSM,c	;volatile
  3214                           
  3215                           ;Key.c: 63: if( RF2 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 0) ;
  3216  001798  B485               	btfsc	3973,2,c	;volatile
  3217  00179A  D002               	goto	i2l1075
  3218  00179C  8032               	bsf	_Local_Key_FSM,0,c	;volatile
  3219  00179E  D000               	goto	i2l1075
  3220  0017A0                     i2l1075:
  3221                           
  3222                           ;Key.c: 64: if( RF3 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 1) ;
  3223  0017A0  B685               	btfsc	3973,3,c	;volatile
  3224  0017A2  0012               	return	
  3225  0017A4  8232               	bsf	_Local_Key_FSM,1,c	;volatile
  3226  0017A6  0012               	return	
  3227  0017A8  0012               	return		;funcret
  3228  0017AA                     __end_of_Key_Scan:
  3229                           	opt stack 0
  3230                           pclatu	equ	0xFFB
  3231                           pclath	equ	0xFFA
  3232                           tblptru	equ	0xFF8
  3233                           tblptrh	equ	0xFF7
  3234                           tblptrl	equ	0xFF6
  3235                           tablat	equ	0xFF5
  3236                           prodh	equ	0xFF4
  3237                           prodl	equ	0xFF3
  3238                           intcon	equ	0xFF2
  3239                           postinc0	equ	0xFEE
  3240                           fsr0h	equ	0xFEA
  3241                           fsr0l	equ	0xFE9
  3242                           wreg	equ	0xFE8
  3243                           postinc1	equ	0xFE6
  3244                           fsr1h	equ	0xFE2
  3245                           fsr1l	equ	0xFE1
  3246                           indf2	equ	0xFDF
  3247                           postinc2	equ	0xFDE
  3248                           postdec2	equ	0xFDD
  3249                           plusw2	equ	0xFDB
  3250                           fsr2h	equ	0xFDA
  3251                           fsr2l	equ	0xFD9
  3252                           status	equ	0xFD8
  3253                           pclatu	equ	0xFFB
  3254                           pclath	equ	0xFFA
  3255                           tblptru	equ	0xFF8
  3256                           tblptrh	equ	0xFF7
  3257                           tblptrl	equ	0xFF6
  3258                           tablat	equ	0xFF5
  3259                           prodh	equ	0xFF4
  3260                           prodl	equ	0xFF3
  3261                           intcon	equ	0xFF2
  3262                           postinc0	equ	0xFEE
  3263                           fsr0h	equ	0xFEA
  3264                           fsr0l	equ	0xFE9
  3265                           wreg	equ	0xFE8
  3266                           postinc1	equ	0xFE6
  3267                           fsr1h	equ	0xFE2
  3268                           fsr1l	equ	0xFE1
  3269                           indf2	equ	0xFDF
  3270                           postinc2	equ	0xFDE
  3271                           postdec2	equ	0xFDD
  3272                           plusw2	equ	0xFDB
  3273                           fsr2h	equ	0xFDA
  3274                           fsr2l	equ	0xFD9
  3275                           status	equ	0xFD8
  3276                           
  3277                           	psect	rparam
  3278  0000                     pclatu	equ	0xFFB
  3279                           pclath	equ	0xFFA
  3280                           tblptru	equ	0xFF8
  3281                           tblptrh	equ	0xFF7
  3282                           tblptrl	equ	0xFF6
  3283                           tablat	equ	0xFF5
  3284                           prodh	equ	0xFF4
  3285                           prodl	equ	0xFF3
  3286                           intcon	equ	0xFF2
  3287                           postinc0	equ	0xFEE
  3288                           fsr0h	equ	0xFEA
  3289                           fsr0l	equ	0xFE9
  3290                           wreg	equ	0xFE8
  3291                           postinc1	equ	0xFE6
  3292                           fsr1h	equ	0xFE2
  3293                           fsr1l	equ	0xFE1
  3294                           indf2	equ	0xFDF
  3295                           postinc2	equ	0xFDE
  3296                           postdec2	equ	0xFDD
  3297                           plusw2	equ	0xFDB
  3298                           fsr2h	equ	0xFDA
  3299                           fsr2l	equ	0xFD9
  3300                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     37      67
    BANK0           160      3       3
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    EEPROM_Writers@DateBuff	PTR unsigned char  size(2) Largest target is 1
		 -> Manage_Message@_databuff(COMRAM[1]), 

    EEPROM_Reads@DateBuff	PTR unsigned char  size(2) Largest target is 1
		 -> main@_databuff(BANK0[1]), 


Critical Paths under _main in COMRAM

    _main->_EEPROM_Reads
    _Timer0_Init->_SetTimer0
    _Run->_delay_ms
    _delay_ms->_delay1ms
    _EEPROM_Reads->_Read_b_eep

Critical Paths under _Sys_Cyc in COMRAM

    _Sys_Cyc->_Manage_Message
    _Show_Result->_Nixie_ShowNum
    _Nixie_ShowNum->___awdiv
    _Manage_Message->_EEPROM_Writers
    _EEPROM_Writers->_Write_b_eep

Critical Paths under _main in BANK0

    _main->_EEPROM_Reads

Critical Paths under _Sys_Cyc in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Sys_Cyc in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Sys_Cyc in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Sys_Cyc in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Sys_Cyc in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Sys_Cyc in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Sys_Cyc in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Sys_Cyc in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Sys_Cyc in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Sys_Cyc in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Sys_Cyc in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Sys_Cyc in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Sys_Cyc in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Sys_Cyc in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Sys_Cyc in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Sys_Cyc in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1233
                                              2 BANK0      1     1      0
                       _EEPROM_Reads
                        _IR2184_Init
                           _Key_Init
                         _Nixie_Init
                                _Run
                        _Timer0_Init
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0     215
                          _SetTimer0
 ---------------------------------------------------------------------------------
 (2) _SetTimer0                                            4     2      2     215
                                             28 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Run                                                  2     2      0     323
                                             33 COMRAM     2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             2     0      2     323
                                             31 COMRAM     2     0      2
                           _delay1ms
 ---------------------------------------------------------------------------------
 (3) _delay1ms                                             3     3      0     138
                                             28 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Nixie_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Key_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IR2184_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EEPROM_Reads                                         9     3      6     624
                                             30 COMRAM     7     1      6
                                              0 BANK0      2     2      0
                         _Read_b_eep
 ---------------------------------------------------------------------------------
 (2) _Read_b_eep                                           2     0      2     139
                                             28 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Sys_Cyc                                             14    14      0    3344
                                             14 COMRAM    14    14      0
                       _Key_FSM_Scan
                     _Manage_Message
                        _Show_Result
                            ___awmod
                            ___llmod
                            ___lwmod
                        i2_SetTimer0
 ---------------------------------------------------------------------------------
 (5) i2_SetTimer0                                          4     2      2      93
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     287
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___llmod                                              9     1      8     415
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (5) _Show_Result                                          0     0      0    1024
                      _Nixie_ShowNum
 ---------------------------------------------------------------------------------
 (6) _Nixie_ShowNum                                        1     1      0    1024
                                              8 COMRAM     1     1      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     552
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     428
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _Manage_Message                                       1     1      0     973
                                             13 COMRAM     1     1      0
                     _EEPROM_Writers
                       _Key_FSM_Read
                      _Key_FSM_Reset
 ---------------------------------------------------------------------------------
 (6) _Key_FSM_Reset                                        1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _Key_FSM_Read                                         6     6      0     315
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (6) _EEPROM_Writers                                       9     3      6     588
                                              4 COMRAM     9     3      6
                        _Write_b_eep
 ---------------------------------------------------------------------------------
 (7) _Write_b_eep                                          4     1      3     218
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (5) _Key_FSM_Scan                                         0     0      0       0
                           _Key_Scan
 ---------------------------------------------------------------------------------
 (6) _Key_Scan                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_Reads
     _Read_b_eep
   _IR2184_Init
   _Key_Init
   _Nixie_Init
   _Run
     _delay_ms
       _delay1ms
   _Timer0_Init
     _SetTimer0

 _Sys_Cyc (ROOT)
   _Key_FSM_Scan
     _Key_Scan
   _Manage_Message
     _EEPROM_Writers
       _Write_b_eep
     _Key_FSM_Read
     _Key_FSM_Reset
   _Show_Result
     _Nixie_ShowNum
       ___awdiv
       ___awmod
   ___awmod
   ___llmod
   ___lwmod
   i2_SetTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      3       3       5        1.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     25      43       1       70.5%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      46      12        0.0%
DATA                 0      0      46       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sun Feb 21 17:24:22 2016

      EEPROM_Reads@length 0023            Key_FSM_Reset@t 0001              ___awdiv@sign 0006  
             __CFG_BORV$3 000000              __CFG_CP0$OFF 000000              __CFG_CP1$OFF 000000  
            __CFG_CP2$OFF 000000              __CFG_CP3$OFF 000000              __CFG_CP4$OFF 000000  
            __CFG_CP5$OFF 000000              __CFG_CP6$OFF 000000              __CFG_CP7$OFF 000000  
                     _GIE 007F97              __CFG_CPB$OFF 000000                       _RA4 007C04  
                     _RA5 007C05                       _RD2 007C1A                       _RD3 007C1B  
                     _RF2 007C2A                       _RF3 007C2B                       _RE5 007C25  
                     _RF4 007C2C                       _RE6 007C26                       _RF5 007C2D  
            __CFG_CPD$OFF 000000                       _PSA 007EAB                       _Run 13B6  
          ??_Key_FSM_Read 0001            ??_Key_FSM_Scan 0001      __size_of_Write_b_eep 0040  
            ___awmod@sign 0006                       prod 000FF3                       wreg 000FE8  
                    ?_Run 0001                      l1805 1748                      l1807 174E  
                    l1861 1448                      l1909 1614                      l1783 1688  
                    l1791 1690                      l1775 166C                      l1865 146E  
                    l1881 13EC                      l1787 168C                      l1779 167A  
                    l1877 13C8                      l1889 13FE                      _T0CS 007EAD  
                    _T0SE 007EAC                      _IPEN 007E87                      i2l58 1092  
 __size_of_EEPROM_Writers 005C                      _main 15DA                      fsr0h 000FEA  
                    fsr1h 000FE2                      fsr0l 000FE9                      fsr2h 000FDA  
                    fsr1l 000FE1                      indf2 000FDF                      fsr2l 000FD9  
                    pclat 000FFA           ??_Key_FSM_Reset 0001                      prodh 000FF4  
                    prodl 000FF3                      start 014E             __CFG_IESO$OFF 000000  
           __CFG_FOSC$HS1 000000             __CFG_MCLRE$ON 000000              ___param_bank 000010  
         EEPROM_Writers@i 000D      __end_of_EEPROM_Reads 148C      __size_of_IR2184_Init 0022  
                   ??_Run 0022             __CFG_RETEN$ON 000000                     ?_main 0001  
         __end_of___awdiv 1238                     _EEADR 000F62           __end_of___awmod 1346  
         __end_of_Sys_Cyc 014E           ___awdiv@divisor 0003           __end_of___llmod 13B6  
                   _T0PS0 007EA8                     _T0PS1 007EA9                     _T0PS2 007EAA  
         __end_of___lwmod 1594                     i2l130 0114                     i2l220 14C0  
                   i2l340 164C                     i2l811 13A4                     i2l874 158A  
         ___awdiv@counter 0005                     _TMR0H 000FD7                     _TMR0L 000FD6  
                   _PORTC 000F82                     _TRISC 000F94             __CFG_WRT0$OFF 000000  
           __CFG_WRT1$OFF 000000             __CFG_WRT2$OFF 000000             __CFG_WRT3$OFF 000000  
           __CFG_WRT4$OFF 000000            __CFG_EBRT0$OFF 000000             __CFG_WRT5$OFF 000000  
          __CFG_EBRT1$OFF 000000             __CFG_WRT6$OFF 000000            __CFG_EBRT2$OFF 000000  
           __CFG_WRT7$OFF 000000            __CFG_EBRT3$OFF 000000            __CFG_EBRT4$OFF 000000  
          __CFG_FCMEN$OFF 000000            __CFG_EBRT5$OFF 000000            __CFG_EBRT6$OFF 000000  
          __CFG_EBRT7$OFF 000000             __CFG_WRTB$OFF 000000             __CFG_WRTC$OFF 000000  
           __CFG_WRTD$OFF 000000            Read_b_eep@badd 001D            __CFG_EBRTB$OFF 000000  
  Write_b_eep@GIE_BIT_VAL 0004             _Local_Key_FSM 0032                     tablat 000FF5  
                   plusw2 000FDB             main@_databuff 0062                     status 000FD8  
         __initialization 172C              __end_of_main 161E          __end_of_Key_Init 17CC  
     Key_FSM_Read@key_num 0006          __end_of_Key_Scan 17AA                _Read_b_eep 1760  
                  ??_main 0026             __activetblptr 000001          ??_Manage_Message 000E  
                  _CCP7OD 007944          ___llmod@dividend 0001                    _EEADRH 000F63  
                  _EEDATA 000F61                    _EECON2 000F7E                    _T08BIT 007EAE  
        ___awdiv@dividend 0001                    _ANSEL4 00792C                    _ANSEL7 00792F  
                  _ANSEL8 007920                    _ANSEL9 007921                    i2l1121 119C  
                  i2l1105 110A                    i2l1117 1198                    i2l1109 1116  
                  i2l1127 15A2           __CFG_BBSIZ$BB2K 000000                    i2l1081 1012  
                  i2l1129 15D0                    i2l1075 17A0                    i2l1091 107E  
                  i2l1093 10AC                    i2l1503 121C                _Nixie_Init 17AA  
                  i2l1257 1788                    i2l1097 10DE                    i2l1089 1068  
                  i2l1099 10F4                    i2l1507 122C                    i2l1531 1308  
                  i2l1523 12E8                    i2l1701 136E                    i2l1543 133A  
                  i2l1535 131E                    i2l1527 12F6                    i2l1519 12DA  
                  i2l1481 11CA                    i2l1529 1300                    i2l1705 1394  
                  i2l1721 157E                    i2l1713 1556                    i2l1563 1530  
                  i2l1491 11F2                    i2l1475 11B8                    i2l1539 132A  
                  i2l1715 1560                    i2l1717 1568                    i2l1559 1508  
                  i2l1671 128A                    i2l1663 1274                    i2l1487 11E0  
                  i2l1489 11EA                    i2l1761 00B8                    i2l1675 1294  
                  i2l1667 127E                    i2l1499 1210                    i2l1685 12B2  
                  i2l1765 00EE                    i2l1679 12A0                    i2l1689 12BE  
                  i2l1697 1358                    i2l1769 010E                    i2l1699 1366  
           SetTimer0@_tmr 001D                    _TMR0IE 007F95                    _TMR0IF 007F92  
                  _TMR0ON 007EAF          __end_of_delay1ms 1696          __end_of_delay_ms 1760  
           ??_Timer0_Init 0021              _IR2184_Timer 002A            __CFG_XINST$OFF 000000  
    __end_of_Key_FSM_Read 11A2      __end_of_Key_FSM_Scan 1794   Manage_Message@_databuff 000E  
    EEPROM_Writers@length 0009                 ??___awdiv 0005            __CFG_STVREN$ON 000000  
               ??___awmod 0005                 ??_Sys_Cyc 000F                 ??___llmod 0009  
      __size_of_SetTimer0 0028                 ??___lwmod 0005                    clear_0 1732  
        ___awdiv@quotient 0007           ___awmod@divisor 0003           ___awmod@counter 0005  
           ??_Show_Result 000A            _Local_Key_User 003B              __mediumconst 0000  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
          _EEPROM_Writers 14EC                __accesstop 0060   __end_of__initialization 1738  
            ?i2_SetTimer0 0001             ___rparam_used 000001     __size_of_EEPROM_Reads 0068  
          __pcstackCOMRAM 0001               ?_Read_b_eep 001D       __end_of_Timer0_Init 170A  
  __end_of_EEPROM_Writers 1548       __end_of_Show_Result 17D4              _EEPROM_Reads 1424  
       __end_of_SetTimer0 16BE               ?_Nixie_Init 0001                 ?_Key_Init 0001  
               ?_Key_Scan 0001           __CFG_PLLCFG$OFF 000000        __end_of_LED_Number 100B  
           ??_Write_b_eep 0004                   _ANSEL10 007922    __size_of_Nixie_ShowNum 0060  
               ?_delay1ms 0001                 ?_delay_ms 0020                   i2u24_40 1036  
                 i2u32_44 1164                   i2u32_45 1160                   i2u25_40 1054  
                 i2u33_44 1178                   i2u33_45 1174                   i2u26_40 10CA  
                 i2u84_45 1658                   i2u84_46 165A           ?_EEPROM_Writers 0005  
              ??_Key_Init 001D       __size_of_Read_b_eep 001A                ??_Key_Scan 0001  
   __size_of_Key_FSM_Read 0196     __size_of_Key_FSM_Scan 001A             ??_IR2184_Init 001D  
         __CFG_PWRTEN$OFF 000000                   __Hparam 0000               _Timer0_Init 16E6  
   __end_of_Key_FSM_Reset 15DA                   __Lparam 0000                   ___awdiv 11A2  
                 ___awmod 12C4                   _Sys_Cyc 0008                   ___llmod 1346  
                 ___lwmod 1548              __psmallconst 1000                   __pcinit 172C  
                 __ramtop 1000       __size_of_Nixie_Init 0014                   __ptext0 15DA  
                 __ptext1 16E6                   __ptext2 1696                   __ptext3 13B6  
                 __ptext4 1746                   __ptext5 165E                   __ptext6 17AA  
                 __ptext7 17BE                   __ptext8 170A                   __ptext9 1424  
             _Show_Result 17CC              __size_of_Run 006E          ___awmod@dividend 0001  
              ??_delay1ms 001D         __CFG_MSSPMSK$MSK7 000000                ??_delay_ms 0022  
            _Key_FSM_Read 100C              _Key_FSM_Scan 177A       __end_of_Write_b_eep 165E  
    end_of_initialization 1738             _Nixie_ShowNum 148C      __size_ofi2_SetTimer0 0028  
                 postdec2 000FDD                   postinc0 000FEE                   postinc1 000FE6  
                 postinc2 000FDE       __end_of_IR2184_Init 172C       Manage_Message@F8480 002C  
               _TRISAbits 000F92                 _TRISDbits 000F95                 _TRISEbits 000F96  
               _TRISFbits 000F97             EEPROM_Reads@i 0025            ?_Nixie_ShowNum 0001  
Key_FSM_Read@key_num_mate 0005              ??_Read_b_eep 001F        EEPROM_Writers@Addr 0005  
             _Write_b_eep 161E       start_initialization 172C               __end_of_Run 1424  
            ??_Nixie_Init 001D                 _Nix_Flash 0030        __end_of_Read_b_eep 177A  
 __size_of_Manage_Message 008C           ___llmod@divisor 0005         __size_of_Key_Init 000E  
       __size_of_Key_Scan 0016           ___llmod@counter 0009                 _SetTimer0 1696  
             _IR2184_Init 170A           i2SetTimer0@_tmr 0001                 _Timer_Cyc 0026  
      __end_of_Nixie_Init 17BE          ??_EEPROM_Writers 000B               __pbssCOMRAM 0026  
           __pcstackBANK0 0060           ??_Nixie_ShowNum 0009         __size_of_delay1ms 0038  
       __size_of_delay_ms 001A                ?_SetTimer0 001D              ?_Timer0_Init 0001  
       __CFG_CCP2MX$PORTC 000000                 __pintcode 0008                  ?___awdiv 0001  
                ?___awmod 0001                  ?_Sys_Cyc 0001                  ?___llmod 0001  
                ?___lwmod 0001           Nixie_ShowNum@_t 002D              ?_Show_Result 0001  
             __smallconst 1000               _LED2_switch 002F                 delay1ms@a 001D  
               delay1ms@b 001E                 delay1ms@c 001F         Nixie_ShowNum@_num 0009  
  EEPROM_Writers@DateBuff 0007                 main@F8478 0031          __CFG_SOSCSEL$DIG 000000  
         Write_b_eep@badd 0001           Write_b_eep@bdat 0003    __size_of_Key_FSM_Reset 0046  
                _Key_Init 17BE                  _Key_Scan 1794            _Manage_Message 1238  
           ??i2_SetTimer0 0003               ??_SetTimer0 001F                _EECON1bits 000F7F  
                __Hrparam 0000                _IR2184_Num 002E                  __Lrparam 0000  
            __Lsmallconst 1000        __CFG_BOREN$SBORDIS 000000          __size_of___awdiv 0096  
        __size_of___awmod 0082          __size_of_Sys_Cyc 0146          __size_of___llmod 0070  
        __size_of___lwmod 004C              ?_Write_b_eep 0001                  _delay1ms 165E  
                _delay_ms 1746                  __ptext10 1760                  __ptext20 1594  
                __ptext12 16BE                  __ptext21 100C                  __ptext13 1548  
                __ptext22 14EC                  __ptext14 1346                  __ptext23 161E  
                __ptext15 17CC                  __ptext24 177A                  __ptext16 148C  
                __ptext25 1794                  __ptext17 12C4                  __ptext18 11A2  
                __ptext19 1238             ?_EEPROM_Reads 001F    __end_of_Manage_Message 12C4  
           __size_of_main 0044       __CFG_RTCOSC$SOSCREF 000000              ?_IR2184_Init 0001  
           _Key_FSM_Reset 1594      __size_of_Timer0_Init 0024       __end_ofi2_SetTimer0 16E6  
     __CFG_INTOSCSEL$HIGH 000000               delay_ms@_ms 0020                _LED_Number 1001  
      __CFG_WDTEN$SWDTDIS 000000                _INTCONbits 000FF2      __size_of_Show_Result 0008  
          ??_EEPROM_Reads 0060           ?_Manage_Message 0001                  intlevel2 0000  
        ___lwmod@dividend 0001            ?_Key_FSM_Reset 0001        __CFG_WDTPS$1048576 000000  
    EEPROM_Reads@DateBuff 0021           ___lwmod@divisor 0003           ___lwmod@counter 0005  
           ?_Key_FSM_Read 0001             ?_Key_FSM_Scan 0001     __end_of_Nixie_ShowNum 14EC  
     __CFG_BORPWR$ZPBORMV 000000               i2_SetTimer0 16BE          EEPROM_Reads@Addr 001F  
