

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Dec 05 21:19:59 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F67K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    36  0000                     
    37                           	psect	idataCOMRAM
    38  0009C4                     __pidataCOMRAM:
    39                           	opt stack 0
    40                           
    41                           ;initializer for _LED_Number
    42  0009C4  3F                 	db	63
    43  0009C5  06                 	db	6
    44  0009C6  5B                 	db	91
    45  0009C7  4F                 	db	79
    46  0009C8  66                 	db	102
    47  0009C9  6D                 	db	109
    48  0009CA  7D                 	db	125
    49  0009CB  07                 	db	7
    50  0009CC  7F                 	db	127
    51  0009CD  6F                 	db	111
    52  0009CE  77                 	db	119
    53  0009CF  7C                 	db	124
    54  0009D0  39                 	db	57
    55  0009D1  5E                 	db	94
    56  0009D2  79                 	db	121
    57  0009D3  71                 	db	113
    58  0000                     _ADCON0bits	set	4034
    59  0000                     _ADRESH	set	4036
    60  0000                     _ADRESL	set	4035
    61  0000                     _PIE1bits	set	3997
    62  0000                     _PORTEbits	set	3972
    63  0000                     _TMR0H	set	4055
    64  0000                     _TMR0L	set	4054
    65  0000                     _TRISCbits	set	3988
    66  0000                     _TRISD	set	3989
    67  0000                     _TRISE	set	3990
    68  0000                     _GIE	set	32663
    69  0000                     _IPEN	set	32391
    70  0000                     _PSA	set	32427
    71  0000                     _RC3	set	31763
    72  0000                     _RC4	set	31764
    73  0000                     _RD6	set	31774
    74  0000                     _RD7	set	31775
    75  0000                     _RE2	set	31778
    76  0000                     _RE3	set	31779
    77  0000                     _RE4	set	31780
    78  0000                     _RE5	set	31781
    79  0000                     _RE6	set	31782
    80  0000                     _RE7	set	31783
    81  0000                     _T08BIT	set	32430
    82  0000                     _T0CS	set	32429
    83  0000                     _T0PS0	set	32424
    84  0000                     _T0PS1	set	32425
    85  0000                     _T0PS2	set	32426
    86  0000                     _T0SE	set	32428
    87  0000                     _TMR0IE	set	32661
    88  0000                     _TMR0IF	set	32658
    89  0000                     _TMR0ON	set	32431
    90                           
    91                           ; #config settings
    92  0000                     
    93                           	psect	cinit
    94  00081C                     __pcinit:
    95                           	opt stack 0
    96  00081C                     start_initialization:
    97                           	opt stack 0
    98  00081C                     __initialization:
    99                           	opt stack 0
   100                           
   101                           ; Clear objects allocated to COMRAM (16 bytes)
   102  00081C  EE00  F025         	lfsr	0,__pbssCOMRAM
   103  000820  0E10               	movlw	16
   104  000822                     clear_0:
   105  000822  6AEE               	clrf	postinc0,c
   106  000824  06E8               	decf	wreg,f,c
   107  000826  E1FD               	bnz	clear_0
   108                           
   109                           ; Initialize objects allocated to COMRAM (16 bytes)
   110                           ; load TBLPTR registers with __pidataCOMRAM
   111  000828  0EC4               	movlw	low __pidataCOMRAM
   112  00082A  6EF6               	movwf	tblptrl,c
   113  00082C  0E09               	movlw	high __pidataCOMRAM
   114  00082E  6EF7               	movwf	tblptrh,c
   115  000830  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   116  000832  6EF8               	movwf	tblptru,c
   117  000834  EE00  F035         	lfsr	0,__pdataCOMRAM
   118  000838  EE10 F010          	lfsr	1,16
   119  00083C                     copy_data0:
   120  00083C  0009               	tblrd		*+
   121  00083E  CFF5 FFEE          	movff	tablat,postinc0
   122  000842  50E5               	movf	postdec1,w,c
   123  000844  50E1               	movf	fsr1l,w,c
   124  000846  E1FA               	bnz	copy_data0
   125  000848                     end_of_initialization:
   126                           	opt stack 0
   127  000848                     __end_of__initialization:
   128                           	opt stack 0
   129  000848  0100               	movlb	0
   130  00084A  EFA8  F003         	goto	_main	;jump to C main() function
   131                           tblptru	equ	0xFF8
   132                           tblptrh	equ	0xFF7
   133                           tblptrl	equ	0xFF6
   134                           tablat	equ	0xFF5
   135                           postinc0	equ	0xFEE
   136                           wreg	equ	0xFE8
   137                           postdec1	equ	0xFE5
   138                           fsr1l	equ	0xFE1
   139                           
   140                           	psect	bssCOMRAM
   141  000025                     __pbssCOMRAM:
   142                           	opt stack 0
   143  000025                     _Timer_Cyc:
   144                           	opt stack 0
   145  000025                     	ds	4
   146  000029                     Sys_Cyc@t:
   147                           	opt stack 0
   148  000029                     	ds	1
   149  00002A                     _LED2_switch:
   150                           	opt stack 0
   151  00002A                     	ds	1
   152  00002B                     _Local_Key_FSM:
   153                           	opt stack 0
   154  00002B                     	ds	10
   155                           tblptru	equ	0xFF8
   156                           tblptrh	equ	0xFF7
   157                           tblptrl	equ	0xFF6
   158                           tablat	equ	0xFF5
   159                           postinc0	equ	0xFEE
   160                           wreg	equ	0xFE8
   161                           postdec1	equ	0xFE5
   162                           fsr1l	equ	0xFE1
   163                           
   164                           	psect	dataCOMRAM
   165  000035                     __pdataCOMRAM:
   166                           	opt stack 0
   167  000035                     _LED_Number:
   168                           	opt stack 0
   169  000035                     	ds	16
   170                           tblptru	equ	0xFF8
   171                           tblptrh	equ	0xFF7
   172                           tblptrl	equ	0xFF6
   173                           tablat	equ	0xFF5
   174                           postinc0	equ	0xFEE
   175                           wreg	equ	0xFE8
   176                           postdec1	equ	0xFE5
   177                           fsr1l	equ	0xFE1
   178                           
   179                           	psect	cstackCOMRAM
   180  000001                     __pcstackCOMRAM:
   181                           	opt stack 0
   182  000001                     ?___llmod:
   183                           	opt stack 0
   184  000001                     i2SetTimer0@_tmr:
   185                           	opt stack 0
   186  000001                     ___llmod@dividend:
   187                           	opt stack 0
   188                           
   189                           ; 4 bytes @ 0x0
   190  000001                     	ds	2
   191  000003                     ??i2_SetTimer0:
   192                           
   193                           ; 0 bytes @ 0x2
   194  000003                     	ds	2
   195  000005                     ___llmod@divisor:
   196                           	opt stack 0
   197                           
   198                           ; 4 bytes @ 0x4
   199  000005                     	ds	4
   200  000009                     ___llmod@counter:
   201                           	opt stack 0
   202                           
   203                           ; 1 bytes @ 0x8
   204  000009                     	ds	1
   205  00000A                     ??_Sys_Cyc:
   206                           
   207                           ; 0 bytes @ 0x9
   208  00000A                     	ds	14
   209  000018                     ?_BusyADC:
   210                           	opt stack 0
   211  000018                     ?_ReadADC:
   212                           	opt stack 0
   213  000018                     ?___awdiv:
   214                           	opt stack 0
   215  000018                     ?___awmod:
   216                           	opt stack 0
   217  000018                     delay1ms@a:
   218                           	opt stack 0
   219  000018                     TM1640_Delay@Time:
   220                           	opt stack 0
   221  000018                     SetTimer0@_tmr:
   222                           	opt stack 0
   223  000018                     ___awdiv@dividend:
   224                           	opt stack 0
   225  000018                     ___awmod@dividend:
   226                           	opt stack 0
   227                           
   228                           ; 2 bytes @ 0x17
   229  000018                     	ds	1
   230  000019                     delay1ms@b:
   231                           	opt stack 0
   232  000019                     TM1640_Delay@i:
   233                           	opt stack 0
   234                           
   235                           ; 1 bytes @ 0x18
   236  000019                     	ds	1
   237  00001A                     ??_ReadADC:
   238  00001A                     ??_SetTimer0:
   239  00001A                     delay1ms@c:
   240                           	opt stack 0
   241  00001A                     TM1640_Writer_Byte@Date:
   242                           	opt stack 0
   243  00001A                     ___awdiv@divisor:
   244                           	opt stack 0
   245  00001A                     ___awmod@divisor:
   246                           	opt stack 0
   247                           
   248                           ; 2 bytes @ 0x19
   249  00001A                     	ds	1
   250  00001B                     TM1640_Writer_Byte@mask:
   251                           	opt stack 0
   252  00001B                     delay_ms@_ms:
   253                           	opt stack 0
   254                           
   255                           ; 2 bytes @ 0x1A
   256  00001B                     	ds	1
   257  00001C                     TM1640_Writer_Dates@Date:
   258                           	opt stack 0
   259  00001C                     ___awdiv@counter:
   260                           	opt stack 0
   261  00001C                     ___awmod@counter:
   262                           	opt stack 0
   263                           
   264                           ; 1 bytes @ 0x1B
   265  00001C                     	ds	1
   266  00001D                     TM1640_Writer_Dates@Addr:
   267                           	opt stack 0
   268  00001D                     ___awdiv@sign:
   269                           	opt stack 0
   270  00001D                     ___awmod@sign:
   271                           	opt stack 0
   272                           
   273                           ; 1 bytes @ 0x1C
   274  00001D                     	ds	1
   275  00001E                     ___awdiv@quotient:
   276                           	opt stack 0
   277                           
   278                           ; 2 bytes @ 0x1D
   279  00001E                     	ds	2
   280  000020                     TM1640_Show_Numbers@Numbers:
   281                           	opt stack 0
   282                           
   283                           ; 2 bytes @ 0x1F
   284  000020                     	ds	2
   285  000022                     TM1640_Show_Numbers@Num:
   286                           	opt stack 0
   287                           
   288                           ; 1 bytes @ 0x21
   289  000022                     	ds	1
   290  000023                     main@num:
   291                           	opt stack 0
   292                           
   293                           ; 2 bytes @ 0x22
   294  000023                     	ds	2
   295                           tblptru	equ	0xFF8
   296                           tblptrh	equ	0xFF7
   297                           tblptrl	equ	0xFF6
   298                           tablat	equ	0xFF5
   299                           postinc0	equ	0xFEE
   300                           wreg	equ	0xFE8
   301                           postdec1	equ	0xFE5
   302                           fsr1l	equ	0xFE1
   303                           
   304 ;;
   305 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   306 ;;
   307 ;; *************** function _main *****************
   308 ;; Defined at:
   309 ;;		line 31 in file "_01_USER/main.c"
   310 ;; Parameters:    Size  Location     Type
   311 ;;		None
   312 ;; Auto vars:     Size  Location     Type
   313 ;;  num             2   34[COMRAM] int 
   314 ;; Return value:  Size  Location     Type
   315 ;;                  2   20[None  ] int 
   316 ;; Registers used:
   317 ;;		wreg, status,2, status,0, cstack
   318 ;; Tracked objects:
   319 ;;		On entry : 0/0
   320 ;;		On exit  : 0/0
   321 ;;		Unchanged: 0/0
   322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   324 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   326 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   327 ;;Total ram usage:        2 bytes
   328 ;; Hardware stack levels required when called:    7
   329 ;; This function calls:
   330 ;;		_BusyADC
   331 ;;		_ConvertADC
   332 ;;		_GPIO_Config
   333 ;;		_Init_TM1640
   334 ;;		_Key_Init
   335 ;;		_ReadADC
   336 ;;		_TM1640_Show_Numbers
   337 ;;		_Timer0_Init
   338 ;;		_delay_ms
   339 ;; This function is called by:
   340 ;;		Startup code after reset
   341 ;; This function uses a non-reentrant model
   342 ;;
   343                           
   344                           	psect	text0
   345  000750                     __ptext0:
   346                           	opt stack 0
   347  000750                     _main:
   348                           	opt stack 24
   349                           
   350                           ;main.c: 33: int num = 0;
   351                           
   352                           ;incstack = 0
   353  000750  0E00               	movlw	0
   354  000752  6E24               	movwf	main@num+1,c
   355  000754  0E00               	movlw	0
   356  000756  6E23               	movwf	main@num,c
   357                           
   358                           ;main.c: 34: GPIO_Config();
   359  000758  ECF9  F004         	call	_GPIO_Config	;wreg free
   360                           
   361                           ;main.c: 35: Key_Init();
   362  00075C  ECFF  F004         	call	_Key_Init	;wreg free
   363                           
   364                           ;main.c: 36: Timer0_Init();
   365  000760  EC81  F004         	call	_Timer0_Init	;wreg free
   366                           
   367                           ;main.c: 37: Init_TM1640();
   368  000764  EC6E  F004         	call	_Init_TM1640	;wreg free
   369  000768  D000               	goto	l1834
   370  00076A                     l1834:
   371                           
   372                           ;main.c: 41: {
   373                           ;main.c: 43: ConvertADC();
   374  00076A  EC04  F005         	call	_ConvertADC	;wreg free
   375                           
   376                           ;main.c: 44: while(BusyADC());
   377  00076E  D000               	goto	l1836
   378  000770                     l1836:
   379  000770  ECF2  F004         	call	_BusyADC	;wreg free
   380  000774  5018               	movf	?_BusyADC,w,c
   381  000776  1019               	iorwf	?_BusyADC+1,w,c
   382  000778  A4D8               	btfss	status,2,c
   383  00077A  D7FA               	goto	l1836
   384                           
   385                           ;main.c: 45: num = ReadADC();
   386  00077C  ECEA  F004         	call	_ReadADC	;wreg free
   387  000780  C018  F023         	movff	?_ReadADC,main@num
   388  000784  C019  F024         	movff	?_ReadADC+1,main@num+1
   389                           
   390                           ;main.c: 46: TM1640_Show_Numbers(num);
   391  000788  C023  F020         	movff	main@num,TM1640_Show_Numbers@Numbers
   392  00078C  C024  F021         	movff	main@num+1,TM1640_Show_Numbers@Numbers+1
   393  000790  EC90  F000         	call	_TM1640_Show_Numbers	;wreg free
   394                           
   395                           ;main.c: 47: delay_ms(1000);
   396  000794  0E03               	movlw	3
   397  000796  6E1C               	movwf	delay_ms@_ms+1,c
   398  000798  0EE8               	movlw	232
   399  00079A  6E1B               	movwf	delay_ms@_ms,c
   400  00079C  ECC8  F004         	call	_delay_ms	;wreg free
   401  0007A0  D7E4               	goto	l1834
   402                           
   403                           ;main.c: 49: }
   404                           ;main.c: 52: return 0;
   405                           ;	Return value of _main is never used
   406  0007A2  EF8E  F000         	goto	start
   407  0007A6                     __end_of_main:
   408                           	opt stack 0
   409                           tblptru	equ	0xFF8
   410                           tblptrh	equ	0xFF7
   411                           tblptrl	equ	0xFF6
   412                           tablat	equ	0xFF5
   413                           postinc0	equ	0xFEE
   414                           wreg	equ	0xFE8
   415                           postdec1	equ	0xFE5
   416                           fsr1l	equ	0xFE1
   417                           status	equ	0xFD8
   418                           
   419 ;; *************** function _delay_ms *****************
   420 ;; Defined at:
   421 ;;		line 35 in file "_01_USER/My_Delay.c"
   422 ;; Parameters:    Size  Location     Type
   423 ;;  _ms             2   26[COMRAM] unsigned int 
   424 ;; Auto vars:     Size  Location     Type
   425 ;;		None
   426 ;; Return value:  Size  Location     Type
   427 ;;		None               void
   428 ;; Registers used:
   429 ;;		wreg, status,2, status,0, cstack
   430 ;; Tracked objects:
   431 ;;		On entry : 0/0
   432 ;;		On exit  : 0/0
   433 ;;		Unchanged: 0/0
   434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   435 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   438 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   439 ;;Total ram usage:        2 bytes
   440 ;; Hardware stack levels used:    1
   441 ;; Hardware stack levels required when called:    4
   442 ;; This function calls:
   443 ;;		_delay1ms
   444 ;; This function is called by:
   445 ;;		_main
   446 ;; This function uses a non-reentrant model
   447 ;;
   448                           
   449                           	psect	text1
   450  000990                     __ptext1:
   451                           	opt stack 0
   452  000990                     _delay_ms:
   453                           	opt stack 26
   454                           
   455                           ;My_Delay.c: 37: while(_ms--) delay1ms();
   456                           
   457                           ;incstack = 0
   458  000990  D003               	goto	l1794
   459  000992                     l1792:
   460  000992  ECF2  F003         	call	_delay1ms	;wreg free
   461  000996  D000               	goto	l1794
   462  000998                     l1794:
   463  000998  061B               	decf	delay_ms@_ms,f,c
   464  00099A  A0D8               	btfss	status,0,c
   465  00099C  061C               	decf	delay_ms@_ms+1,f,c
   466  00099E  281B               	incf	delay_ms@_ms,w,c
   467  0009A0  E1F8               	bnz	l1792
   468  0009A2  281C               	incf	delay_ms@_ms+1,w,c
   469  0009A4  A4D8               	btfss	status,2,c
   470  0009A6  D7F5               	goto	l1792
   471  0009A8  0012               	return		;funcret
   472  0009AA                     __end_of_delay_ms:
   473                           	opt stack 0
   474                           tblptru	equ	0xFF8
   475                           tblptrh	equ	0xFF7
   476                           tblptrl	equ	0xFF6
   477                           tablat	equ	0xFF5
   478                           postinc0	equ	0xFEE
   479                           wreg	equ	0xFE8
   480                           postdec1	equ	0xFE5
   481                           fsr1l	equ	0xFE1
   482                           status	equ	0xFD8
   483                           
   484 ;; *************** function _delay1ms *****************
   485 ;; Defined at:
   486 ;;		line 58 in file "_01_USER/My_Delay.c"
   487 ;; Parameters:    Size  Location     Type
   488 ;;		None
   489 ;; Auto vars:     Size  Location     Type
   490 ;;  c               1   25[COMRAM] unsigned char 
   491 ;;  b               1   24[COMRAM] unsigned char 
   492 ;;  a               1   23[COMRAM] unsigned char 
   493 ;; Return value:  Size  Location     Type
   494 ;;		None               void
   495 ;; Registers used:
   496 ;;		wreg, status,2, status,0
   497 ;; Tracked objects:
   498 ;;		On entry : 0/0
   499 ;;		On exit  : 0/0
   500 ;;		Unchanged: 0/0
   501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   503 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   505 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   506 ;;Total ram usage:        3 bytes
   507 ;; Hardware stack levels used:    1
   508 ;; Hardware stack levels required when called:    3
   509 ;; This function calls:
   510 ;;		Nothing
   511 ;; This function is called by:
   512 ;;		_delay_ms
   513 ;; This function uses a non-reentrant model
   514 ;;
   515                           
   516                           	psect	text2
   517  0007E4                     __ptext2:
   518                           	opt stack 0
   519  0007E4                     _delay1ms:
   520                           	opt stack 26
   521                           
   522                           ;My_Delay.c: 60: unsigned char a,b,c;
   523                           ;My_Delay.c: 61: for(c=1;c>0;c--)
   524                           
   525                           ;incstack = 0
   526  0007E4  0E01               	movlw	1
   527  0007E6  6E1A               	movwf	delay1ms@c,c
   528  0007E8  501A               	movf	delay1ms@c,w,c
   529  0007EA  B4D8               	btfsc	status,2,c
   530  0007EC  0012               	return	
   531  0007EE  D001               	goto	l1008
   532  0007F0  0012               	return	
   533  0007F2                     l1008:
   534                           
   535                           ;My_Delay.c: 62: for(b=94;b>0;b--)
   536  0007F2  0E5E               	movlw	94
   537  0007F4  6E19               	movwf	delay1ms@b,c
   538  0007F6  5019               	movf	delay1ms@b,w,c
   539  0007F8  B4D8               	btfsc	status,2,c
   540  0007FA  D00D               	goto	l1024
   541  0007FC  D001               	goto	l1012
   542  0007FE  D00B               	goto	l1024
   543  000800                     l1012:
   544                           
   545                           ;My_Delay.c: 63: for(a=2;a>0;a--);
   546  000800  0E02               	movlw	2
   547  000802  6E18               	movwf	delay1ms@a,c
   548  000804  5018               	movf	delay1ms@a,w,c
   549  000806  B4D8               	btfsc	status,2,c
   550  000808  D004               	goto	l1020
   551  00080A  D001               	goto	l1016
   552  00080C  D002               	goto	l1020
   553  00080E                     l1016:
   554  00080E  0618               	decf	delay1ms@a,f,c
   555  000810  D7F9               	goto	L1
   556  000812                     l1020:
   557  000812  0619               	decf	delay1ms@b,f,c
   558  000814  D7F0               	goto	L2
   559  000816                     l1024:
   560  000816  061A               	decf	delay1ms@c,f,c
   561  000818  D7E7               	goto	L3
   562  00081A  0012               	return		;funcret
   563  00081C                     __end_of_delay1ms:
   564                           	opt stack 0
   565                           tblptru	equ	0xFF8
   566                           tblptrh	equ	0xFF7
   567                           tblptrl	equ	0xFF6
   568                           tablat	equ	0xFF5
   569                           postinc0	equ	0xFEE
   570                           wreg	equ	0xFE8
   571                           postdec1	equ	0xFE5
   572                           fsr1l	equ	0xFE1
   573                           status	equ	0xFD8
   574                           
   575 ;; *************** function _Timer0_Init *****************
   576 ;; Defined at:
   577 ;;		line 36 in file "_01_USER/My_Timer.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;		None
   580 ;; Auto vars:     Size  Location     Type
   581 ;;		None
   582 ;; Return value:  Size  Location     Type
   583 ;;                  2    6[None  ] int 
   584 ;; Registers used:
   585 ;;		wreg, status,2, status,0, cstack
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   595 ;;Total ram usage:        0 bytes
   596 ;; Hardware stack levels used:    1
   597 ;; Hardware stack levels required when called:    4
   598 ;; This function calls:
   599 ;;		_SetTimer0
   600 ;; This function is called by:
   601 ;;		_main
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605                           	psect	text3
   606  000902                     __ptext3:
   607                           	opt stack 0
   608  000902                     _Timer0_Init:
   609                           	opt stack 26
   610                           
   611                           ;My_Timer.c: 38: T08BIT = 0;
   612                           
   613                           ;incstack = 0
   614  000902  9CD5               	bcf	4053,6,c	;volatile
   615                           
   616                           ;My_Timer.c: 39: T0CS = 0;
   617  000904  9AD5               	bcf	4053,5,c	;volatile
   618                           
   619                           ;My_Timer.c: 40: T0SE = 0;
   620  000906  98D5               	bcf	4053,4,c	;volatile
   621                           
   622                           ;My_Timer.c: 41: PSA = 0;
   623  000908  96D5               	bcf	4053,3,c	;volatile
   624                           
   625                           ;My_Timer.c: 42: T0PS2 = 1;
   626  00090A  84D5               	bsf	4053,2,c	;volatile
   627                           
   628                           ;My_Timer.c: 43: T0PS1 = 1;
   629  00090C  82D5               	bsf	4053,1,c	;volatile
   630                           
   631                           ;My_Timer.c: 44: T0PS0 = 1;
   632  00090E  80D5               	bsf	4053,0,c	;volatile
   633                           
   634                           ;My_Timer.c: 58: SetTimer0(1);
   635  000910  0E00               	movlw	0
   636  000912  6E19               	movwf	SetTimer0@_tmr+1,c
   637  000914  0E01               	movlw	1
   638  000916  6E18               	movwf	SetTimer0@_tmr,c
   639  000918  EC27  F004         	call	_SetTimer0	;wreg free
   640                           
   641                           ;My_Timer.c: 59: TMR0ON = 1;
   642  00091C  8ED5               	bsf	4053,7,c	;volatile
   643                           
   644                           ;My_Timer.c: 60: TMR0IE = 1;
   645  00091E  8AF2               	bsf	intcon,5,c	;volatile
   646                           
   647                           ;My_Timer.c: 61: IPEN = 0;GIE = 1;
   648  000920  9ED0               	bcf	4048,7,c	;volatile
   649  000922  8EF2               	bsf	intcon,7,c	;volatile
   650  000924  0012               	return		;funcret
   651  000926                     __end_of_Timer0_Init:
   652                           	opt stack 0
   653                           tblptru	equ	0xFF8
   654                           tblptrh	equ	0xFF7
   655                           tblptrl	equ	0xFF6
   656                           tablat	equ	0xFF5
   657                           intcon	equ	0xFF2
   658                           postinc0	equ	0xFEE
   659                           wreg	equ	0xFE8
   660                           postdec1	equ	0xFE5
   661                           fsr1l	equ	0xFE1
   662                           status	equ	0xFD8
   663                           
   664 ;; *************** function _SetTimer0 *****************
   665 ;; Defined at:
   666 ;;		line 74 in file "_01_USER/My_Timer.c"
   667 ;; Parameters:    Size  Location     Type
   668 ;;  _tmr            2   23[COMRAM] unsigned int 
   669 ;; Auto vars:     Size  Location     Type
   670 ;;		None
   671 ;; Return value:  Size  Location     Type
   672 ;;		None               void
   673 ;; Registers used:
   674 ;;		wreg, status,2, status,0
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   680 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   682 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   683 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   684 ;;Total ram usage:        4 bytes
   685 ;; Hardware stack levels used:    1
   686 ;; Hardware stack levels required when called:    3
   687 ;; This function calls:
   688 ;;		Nothing
   689 ;; This function is called by:
   690 ;;		_Timer0_Init
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694                           	psect	text4
   695  00084E                     __ptext4:
   696                           	opt stack 0
   697  00084E                     _SetTimer0:
   698                           	opt stack 26
   699                           
   700                           ;My_Timer.c: 76: if(_tmr > 0xffff) _tmr = 0xffff;
   701                           
   702                           ;incstack = 0
   703  00084E  D003               	goto	l1554
   704  000850  6818               	setf	SetTimer0@_tmr,c
   705  000852  6819               	setf	SetTimer0@_tmr+1,c
   706  000854  D000               	goto	l1554
   707  000856                     l1554:
   708                           
   709                           ;My_Timer.c: 77: _tmr=0xffff-_tmr;
   710  000856  C018  F01A         	movff	SetTimer0@_tmr,??_SetTimer0
   711  00085A  C019  F01B         	movff	SetTimer0@_tmr+1,??_SetTimer0+1
   712  00085E  1E1A               	comf	??_SetTimer0,f,c
   713  000860  1E1B               	comf	??_SetTimer0+1,f,c
   714  000862  4A1A               	infsnz	??_SetTimer0,f,c
   715  000864  2A1B               	incf	??_SetTimer0+1,f,c
   716  000866  0EFF               	movlw	255
   717  000868  241A               	addwf	??_SetTimer0,w,c
   718  00086A  6E18               	movwf	SetTimer0@_tmr,c
   719  00086C  0EFF               	movlw	255
   720  00086E  201B               	addwfc	??_SetTimer0+1,w,c
   721  000870  6E19               	movwf	SetTimer0@_tmr+1,c
   722                           
   723                           ;My_Timer.c: 78: TMR0H = _tmr/256;
   724  000872  5019               	movf	SetTimer0@_tmr+1,w,c
   725  000874  6ED7               	movwf	4055,c	;volatile
   726                           
   727                           ;My_Timer.c: 79: TMR0L = _tmr%256;
   728  000876  C018  FFD6         	movff	SetTimer0@_tmr,4054	;volatile
   729                           
   730                           ;My_Timer.c: 80: TMR0IF = 0;
   731  00087A  94F2               	bcf	intcon,2,c	;volatile
   732  00087C  0012               	return		;funcret
   733  00087E                     __end_of_SetTimer0:
   734                           	opt stack 0
   735                           tblptru	equ	0xFF8
   736                           tblptrh	equ	0xFF7
   737                           tblptrl	equ	0xFF6
   738                           tablat	equ	0xFF5
   739                           intcon	equ	0xFF2
   740                           postinc0	equ	0xFEE
   741                           wreg	equ	0xFE8
   742                           postdec1	equ	0xFE5
   743                           fsr1l	equ	0xFE1
   744                           status	equ	0xFD8
   745                           
   746 ;; *************** function _TM1640_Show_Numbers *****************
   747 ;; Defined at:
   748 ;;		line 43 in file "_01_USER/TM1640.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;  Numbers         2   31[COMRAM] int 
   751 ;; Auto vars:     Size  Location     Type
   752 ;;  Num             1   33[COMRAM] unsigned char 
   753 ;; Return value:  Size  Location     Type
   754 ;;		None               void
   755 ;; Registers used:
   756 ;;		wreg, status,2, status,0, cstack
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   762 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   763 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   765 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   766 ;;Total ram usage:        3 bytes
   767 ;; Hardware stack levels used:    1
   768 ;; Hardware stack levels required when called:    6
   769 ;; This function calls:
   770 ;;		_TM1640_Writer_Dates
   771 ;;		___awdiv
   772 ;;		___awmod
   773 ;; This function is called by:
   774 ;;		_main
   775 ;; This function uses a non-reentrant model
   776 ;;
   777                           
   778                           	psect	text5
   779  000120                     __ptext5:
   780                           	opt stack 0
   781  000120                     _TM1640_Show_Numbers:
   782                           	opt stack 24
   783                           
   784                           ;TM1640.c: 45: unsigned char Num = 0;
   785                           
   786                           ;incstack = 0
   787  000120  0E00               	movlw	0
   788  000122  6E22               	movwf	TM1640_Show_Numbers@Num,c
   789                           
   790                           ;TM1640.c: 47: while(Num < 4)
   791  000124  D1CB               	goto	l1772
   792                           
   793                           ;TM1640.c: 48: {
   794                           ;TM1640.c: 49: switch(Num)
   795  000126  D1AC               	goto	l1766
   796                           
   797                           ;TM1640.c: 50: {
   798                           ;TM1640.c: 51: case 0: switch(Numbers % 10)
   799  000128  D03C               	goto	l1690
   800  00012A                     l1668:
   801  00012A  0E3F               	movlw	63
   802  00012C  6E1C               	movwf	TM1640_Writer_Dates@Date,c
   803  00012E  0E03               	movlw	3
   804  000130  ECB7  F004         	call	_TM1640_Writer_Dates
   805  000134  D1B3               	goto	l1768
   806  000136                     l1670:
   807  000136  0E06               	movlw	6
   808  000138  6E1C               	movwf	TM1640_Writer_Dates@Date,c
   809  00013A  0E03               	movlw	3
   810  00013C  ECB7  F004         	call	_TM1640_Writer_Dates
   811  000140  D1AD               	goto	l1768
   812  000142                     l1672:
   813  000142  0E5B               	movlw	91
   814  000144  6E1C               	movwf	TM1640_Writer_Dates@Date,c
   815  000146  0E03               	movlw	3
   816  000148  ECB7  F004         	call	_TM1640_Writer_Dates
   817  00014C  D1A7               	goto	l1768
   818  00014E                     l1674:
   819  00014E  0E4F               	movlw	79
   820  000150  6E1C               	movwf	TM1640_Writer_Dates@Date,c
   821  000152  0E03               	movlw	3
   822  000154  ECB7  F004         	call	_TM1640_Writer_Dates
   823  000158  D1A1               	goto	l1768
   824  00015A                     l1676:
   825  00015A  0E66               	movlw	102
   826  00015C  6E1C               	movwf	TM1640_Writer_Dates@Date,c
   827  00015E  0E03               	movlw	3
   828  000160  ECB7  F004         	call	_TM1640_Writer_Dates
   829  000164  D19B               	goto	l1768
   830  000166                     l1678:
   831  000166  0E6D               	movlw	109
   832  000168  6E1C               	movwf	TM1640_Writer_Dates@Date,c
   833  00016A  0E03               	movlw	3
   834  00016C  ECB7  F004         	call	_TM1640_Writer_Dates
   835  000170  D195               	goto	l1768
   836  000172                     l1680:
   837  000172  0E7D               	movlw	125
   838  000174  6E1C               	movwf	TM1640_Writer_Dates@Date,c
   839  000176  0E03               	movlw	3
   840  000178  ECB7  F004         	call	_TM1640_Writer_Dates
   841  00017C  D18F               	goto	l1768
   842  00017E                     l1682:
   843  00017E  0E07               	movlw	7
   844  000180  6E1C               	movwf	TM1640_Writer_Dates@Date,c
   845  000182  0E03               	movlw	3
   846  000184  ECB7  F004         	call	_TM1640_Writer_Dates
   847  000188  D189               	goto	l1768
   848  00018A                     l1684:
   849  00018A  0E7F               	movlw	127
   850  00018C  6E1C               	movwf	TM1640_Writer_Dates@Date,c
   851  00018E  0E03               	movlw	3
   852  000190  ECB7  F004         	call	_TM1640_Writer_Dates
   853  000194  D183               	goto	l1768
   854  000196                     l1686:
   855  000196  0E6F               	movlw	111
   856  000198  6E1C               	movwf	TM1640_Writer_Dates@Date,c
   857  00019A  0E03               	movlw	3
   858  00019C  ECB7  F004         	call	_TM1640_Writer_Dates
   859                           
   860                           ;TM1640.c: 63: } break;
   861  0001A0  D17D               	goto	l1768
   862  0001A2                     l1690:
   863  0001A2  C020  F018         	movff	TM1640_Show_Numbers@Numbers,___awmod@dividend
   864  0001A6  C021  F019         	movff	TM1640_Show_Numbers@Numbers+1,___awmod@dividend+1
   865  0001AA  0E00               	movlw	0
   866  0001AC  6E1B               	movwf	___awmod@divisor+1,c
   867  0001AE  0E0A               	movlw	10
   868  0001B0  6E1A               	movwf	___awmod@divisor,c
   869  0001B2  EC2F  F003         	call	___awmod	;wreg free
   870                           
   871                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   872                           ; Switch size 1, requested type "space"
   873                           ; Number of cases is 1, Range of values is 0 to 0
   874                           ; switch strategies available:
   875                           ; Name         Instructions Cycles
   876                           ; simple_byte            4     3 (average)
   877                           ;	Chosen strategy is simple_byte
   878  0001B6  5019               	movf	?___awmod+1,w,c
   879  0001B8  0A00               	xorlw	0	; case 0
   880  0001BA  A4D8               	btfss	status,2,c
   881  0001BC  D16F               	goto	l1768
   882                           
   883                           ; Switch size 1, requested type "space"
   884                           ; Number of cases is 10, Range of values is 0 to 9
   885                           ; switch strategies available:
   886                           ; Name         Instructions Cycles
   887                           ; simple_byte           31    16 (average)
   888                           ;	Chosen strategy is simple_byte
   889  0001BE  5018               	movf	?___awmod,w,c
   890  0001C0  0A00               	xorlw	0	; case 0
   891  0001C2  B4D8               	btfsc	status,2,c
   892  0001C4  D7B2               	goto	l1668
   893  0001C6  0A01               	xorlw	1	; case 1
   894  0001C8  B4D8               	btfsc	status,2,c
   895  0001CA  D7B5               	goto	l1670
   896  0001CC  0A03               	xorlw	3	; case 2
   897  0001CE  B4D8               	btfsc	status,2,c
   898  0001D0  D7B8               	goto	l1672
   899  0001D2  0A01               	xorlw	1	; case 3
   900  0001D4  B4D8               	btfsc	status,2,c
   901  0001D6  D7BB               	goto	l1674
   902  0001D8  0A07               	xorlw	7	; case 4
   903  0001DA  B4D8               	btfsc	status,2,c
   904  0001DC  D7BE               	goto	l1676
   905  0001DE  0A01               	xorlw	1	; case 5
   906  0001E0  B4D8               	btfsc	status,2,c
   907  0001E2  D7C1               	goto	l1678
   908  0001E4  0A03               	xorlw	3	; case 6
   909  0001E6  B4D8               	btfsc	status,2,c
   910  0001E8  D7C4               	goto	l1680
   911  0001EA  0A01               	xorlw	1	; case 7
   912  0001EC  B4D8               	btfsc	status,2,c
   913  0001EE  D7C7               	goto	l1682
   914  0001F0  0A0F               	xorlw	15	; case 8
   915  0001F2  B4D8               	btfsc	status,2,c
   916  0001F4  D7CA               	goto	l1684
   917  0001F6  0A01               	xorlw	1	; case 9
   918  0001F8  B4D8               	btfsc	status,2,c
   919  0001FA  D7CD               	goto	l1686
   920  0001FC  D14F               	goto	l1768
   921                           
   922                           ;TM1640.c: 64: case 1: switch(Numbers % 10)
   923  0001FE  D03C               	goto	l1714
   924  000200                     l1692:
   925  000200  0E3F               	movlw	63
   926  000202  6E1C               	movwf	TM1640_Writer_Dates@Date,c
   927  000204  0E02               	movlw	2
   928  000206  ECB7  F004         	call	_TM1640_Writer_Dates
   929  00020A  D148               	goto	l1768
   930  00020C                     l1694:
   931  00020C  0E06               	movlw	6
   932  00020E  6E1C               	movwf	TM1640_Writer_Dates@Date,c
   933  000210  0E02               	movlw	2
   934  000212  ECB7  F004         	call	_TM1640_Writer_Dates
   935  000216  D142               	goto	l1768
   936  000218                     l1696:
   937  000218  0E5B               	movlw	91
   938  00021A  6E1C               	movwf	TM1640_Writer_Dates@Date,c
   939  00021C  0E02               	movlw	2
   940  00021E  ECB7  F004         	call	_TM1640_Writer_Dates
   941  000222  D13C               	goto	l1768
   942  000224                     l1698:
   943  000224  0E4F               	movlw	79
   944  000226  6E1C               	movwf	TM1640_Writer_Dates@Date,c
   945  000228  0E02               	movlw	2
   946  00022A  ECB7  F004         	call	_TM1640_Writer_Dates
   947  00022E  D136               	goto	l1768
   948  000230                     l1700:
   949  000230  0E66               	movlw	102
   950  000232  6E1C               	movwf	TM1640_Writer_Dates@Date,c
   951  000234  0E02               	movlw	2
   952  000236  ECB7  F004         	call	_TM1640_Writer_Dates
   953  00023A  D130               	goto	l1768
   954  00023C                     l1702:
   955  00023C  0E6D               	movlw	109
   956  00023E  6E1C               	movwf	TM1640_Writer_Dates@Date,c
   957  000240  0E02               	movlw	2
   958  000242  ECB7  F004         	call	_TM1640_Writer_Dates
   959  000246  D12A               	goto	l1768
   960  000248                     l1704:
   961  000248  0E7D               	movlw	125
   962  00024A  6E1C               	movwf	TM1640_Writer_Dates@Date,c
   963  00024C  0E02               	movlw	2
   964  00024E  ECB7  F004         	call	_TM1640_Writer_Dates
   965  000252  D124               	goto	l1768
   966  000254                     l1706:
   967  000254  0E07               	movlw	7
   968  000256  6E1C               	movwf	TM1640_Writer_Dates@Date,c
   969  000258  0E02               	movlw	2
   970  00025A  ECB7  F004         	call	_TM1640_Writer_Dates
   971  00025E  D11E               	goto	l1768
   972  000260                     l1708:
   973  000260  0E7F               	movlw	127
   974  000262  6E1C               	movwf	TM1640_Writer_Dates@Date,c
   975  000264  0E02               	movlw	2
   976  000266  ECB7  F004         	call	_TM1640_Writer_Dates
   977  00026A  D118               	goto	l1768
   978  00026C                     l1710:
   979  00026C  0E6F               	movlw	111
   980  00026E  6E1C               	movwf	TM1640_Writer_Dates@Date,c
   981  000270  0E02               	movlw	2
   982  000272  ECB7  F004         	call	_TM1640_Writer_Dates
   983                           
   984                           ;TM1640.c: 76: } break;
   985  000276  D112               	goto	l1768
   986  000278                     l1714:
   987  000278  C020  F018         	movff	TM1640_Show_Numbers@Numbers,___awmod@dividend
   988  00027C  C021  F019         	movff	TM1640_Show_Numbers@Numbers+1,___awmod@dividend+1
   989  000280  0E00               	movlw	0
   990  000282  6E1B               	movwf	___awmod@divisor+1,c
   991  000284  0E0A               	movlw	10
   992  000286  6E1A               	movwf	___awmod@divisor,c
   993  000288  EC2F  F003         	call	___awmod	;wreg free
   994                           
   995                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   996                           ; Switch size 1, requested type "space"
   997                           ; Number of cases is 1, Range of values is 0 to 0
   998                           ; switch strategies available:
   999                           ; Name         Instructions Cycles
  1000                           ; simple_byte            4     3 (average)
  1001                           ;	Chosen strategy is simple_byte
  1002  00028C  5019               	movf	?___awmod+1,w,c
  1003  00028E  0A00               	xorlw	0	; case 0
  1004  000290  A4D8               	btfss	status,2,c
  1005  000292  D104               	goto	l1768
  1006                           
  1007                           ; Switch size 1, requested type "space"
  1008                           ; Number of cases is 10, Range of values is 0 to 9
  1009                           ; switch strategies available:
  1010                           ; Name         Instructions Cycles
  1011                           ; simple_byte           31    16 (average)
  1012                           ;	Chosen strategy is simple_byte
  1013  000294  5018               	movf	?___awmod,w,c
  1014  000296  0A00               	xorlw	0	; case 0
  1015  000298  B4D8               	btfsc	status,2,c
  1016  00029A  D7B2               	goto	l1692
  1017  00029C  0A01               	xorlw	1	; case 1
  1018  00029E  B4D8               	btfsc	status,2,c
  1019  0002A0  D7B5               	goto	l1694
  1020  0002A2  0A03               	xorlw	3	; case 2
  1021  0002A4  B4D8               	btfsc	status,2,c
  1022  0002A6  D7B8               	goto	l1696
  1023  0002A8  0A01               	xorlw	1	; case 3
  1024  0002AA  B4D8               	btfsc	status,2,c
  1025  0002AC  D7BB               	goto	l1698
  1026  0002AE  0A07               	xorlw	7	; case 4
  1027  0002B0  B4D8               	btfsc	status,2,c
  1028  0002B2  D7BE               	goto	l1700
  1029  0002B4  0A01               	xorlw	1	; case 5
  1030  0002B6  B4D8               	btfsc	status,2,c
  1031  0002B8  D7C1               	goto	l1702
  1032  0002BA  0A03               	xorlw	3	; case 6
  1033  0002BC  B4D8               	btfsc	status,2,c
  1034  0002BE  D7C4               	goto	l1704
  1035  0002C0  0A01               	xorlw	1	; case 7
  1036  0002C2  B4D8               	btfsc	status,2,c
  1037  0002C4  D7C7               	goto	l1706
  1038  0002C6  0A0F               	xorlw	15	; case 8
  1039  0002C8  B4D8               	btfsc	status,2,c
  1040  0002CA  D7CA               	goto	l1708
  1041  0002CC  0A01               	xorlw	1	; case 9
  1042  0002CE  B4D8               	btfsc	status,2,c
  1043  0002D0  D7CD               	goto	l1710
  1044  0002D2  D0E4               	goto	l1768
  1045                           
  1046                           ;TM1640.c: 77: case 2: switch(Numbers % 10)
  1047  0002D4  D03C               	goto	l1738
  1048  0002D6                     l1716:
  1049  0002D6  0E3F               	movlw	63
  1050  0002D8  6E1C               	movwf	TM1640_Writer_Dates@Date,c
  1051  0002DA  0E01               	movlw	1
  1052  0002DC  ECB7  F004         	call	_TM1640_Writer_Dates
  1053  0002E0  D0DD               	goto	l1768
  1054  0002E2                     l1718:
  1055  0002E2  0E06               	movlw	6
  1056  0002E4  6E1C               	movwf	TM1640_Writer_Dates@Date,c
  1057  0002E6  0E01               	movlw	1
  1058  0002E8  ECB7  F004         	call	_TM1640_Writer_Dates
  1059  0002EC  D0D7               	goto	l1768
  1060  0002EE                     l1720:
  1061  0002EE  0E5B               	movlw	91
  1062  0002F0  6E1C               	movwf	TM1640_Writer_Dates@Date,c
  1063  0002F2  0E01               	movlw	1
  1064  0002F4  ECB7  F004         	call	_TM1640_Writer_Dates
  1065  0002F8  D0D1               	goto	l1768
  1066  0002FA                     l1722:
  1067  0002FA  0E4F               	movlw	79
  1068  0002FC  6E1C               	movwf	TM1640_Writer_Dates@Date,c
  1069  0002FE  0E01               	movlw	1
  1070  000300  ECB7  F004         	call	_TM1640_Writer_Dates
  1071  000304  D0CB               	goto	l1768
  1072  000306                     l1724:
  1073  000306  0E66               	movlw	102
  1074  000308  6E1C               	movwf	TM1640_Writer_Dates@Date,c
  1075  00030A  0E01               	movlw	1
  1076  00030C  ECB7  F004         	call	_TM1640_Writer_Dates
  1077  000310  D0C5               	goto	l1768
  1078  000312                     l1726:
  1079  000312  0E6D               	movlw	109
  1080  000314  6E1C               	movwf	TM1640_Writer_Dates@Date,c
  1081  000316  0E01               	movlw	1
  1082  000318  ECB7  F004         	call	_TM1640_Writer_Dates
  1083  00031C  D0BF               	goto	l1768
  1084  00031E                     l1728:
  1085  00031E  0E7D               	movlw	125
  1086  000320  6E1C               	movwf	TM1640_Writer_Dates@Date,c
  1087  000322  0E01               	movlw	1
  1088  000324  ECB7  F004         	call	_TM1640_Writer_Dates
  1089  000328  D0B9               	goto	l1768
  1090  00032A                     l1730:
  1091  00032A  0E07               	movlw	7
  1092  00032C  6E1C               	movwf	TM1640_Writer_Dates@Date,c
  1093  00032E  0E01               	movlw	1
  1094  000330  ECB7  F004         	call	_TM1640_Writer_Dates
  1095  000334  D0B3               	goto	l1768
  1096  000336                     l1732:
  1097  000336  0E7F               	movlw	127
  1098  000338  6E1C               	movwf	TM1640_Writer_Dates@Date,c
  1099  00033A  0E01               	movlw	1
  1100  00033C  ECB7  F004         	call	_TM1640_Writer_Dates
  1101  000340  D0AD               	goto	l1768
  1102  000342                     l1734:
  1103  000342  0E6F               	movlw	111
  1104  000344  6E1C               	movwf	TM1640_Writer_Dates@Date,c
  1105  000346  0E01               	movlw	1
  1106  000348  ECB7  F004         	call	_TM1640_Writer_Dates
  1107                           
  1108                           ;TM1640.c: 89: } break;
  1109  00034C  D0A7               	goto	l1768
  1110  00034E                     l1738:
  1111  00034E  C020  F018         	movff	TM1640_Show_Numbers@Numbers,___awmod@dividend
  1112  000352  C021  F019         	movff	TM1640_Show_Numbers@Numbers+1,___awmod@dividend+1
  1113  000356  0E00               	movlw	0
  1114  000358  6E1B               	movwf	___awmod@divisor+1,c
  1115  00035A  0E0A               	movlw	10
  1116  00035C  6E1A               	movwf	___awmod@divisor,c
  1117  00035E  EC2F  F003         	call	___awmod	;wreg free
  1118                           
  1119                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1120                           ; Switch size 1, requested type "space"
  1121                           ; Number of cases is 1, Range of values is 0 to 0
  1122                           ; switch strategies available:
  1123                           ; Name         Instructions Cycles
  1124                           ; simple_byte            4     3 (average)
  1125                           ;	Chosen strategy is simple_byte
  1126  000362  5019               	movf	?___awmod+1,w,c
  1127  000364  0A00               	xorlw	0	; case 0
  1128  000366  A4D8               	btfss	status,2,c
  1129  000368  D099               	goto	l1768
  1130                           
  1131                           ; Switch size 1, requested type "space"
  1132                           ; Number of cases is 10, Range of values is 0 to 9
  1133                           ; switch strategies available:
  1134                           ; Name         Instructions Cycles
  1135                           ; simple_byte           31    16 (average)
  1136                           ;	Chosen strategy is simple_byte
  1137  00036A  5018               	movf	?___awmod,w,c
  1138  00036C  0A00               	xorlw	0	; case 0
  1139  00036E  B4D8               	btfsc	status,2,c
  1140  000370  D7B2               	goto	l1716
  1141  000372  0A01               	xorlw	1	; case 1
  1142  000374  B4D8               	btfsc	status,2,c
  1143  000376  D7B5               	goto	l1718
  1144  000378  0A03               	xorlw	3	; case 2
  1145  00037A  B4D8               	btfsc	status,2,c
  1146  00037C  D7B8               	goto	l1720
  1147  00037E  0A01               	xorlw	1	; case 3
  1148  000380  B4D8               	btfsc	status,2,c
  1149  000382  D7BB               	goto	l1722
  1150  000384  0A07               	xorlw	7	; case 4
  1151  000386  B4D8               	btfsc	status,2,c
  1152  000388  D7BE               	goto	l1724
  1153  00038A  0A01               	xorlw	1	; case 5
  1154  00038C  B4D8               	btfsc	status,2,c
  1155  00038E  D7C1               	goto	l1726
  1156  000390  0A03               	xorlw	3	; case 6
  1157  000392  B4D8               	btfsc	status,2,c
  1158  000394  D7C4               	goto	l1728
  1159  000396  0A01               	xorlw	1	; case 7
  1160  000398  B4D8               	btfsc	status,2,c
  1161  00039A  D7C7               	goto	l1730
  1162  00039C  0A0F               	xorlw	15	; case 8
  1163  00039E  B4D8               	btfsc	status,2,c
  1164  0003A0  D7CA               	goto	l1732
  1165  0003A2  0A01               	xorlw	1	; case 9
  1166  0003A4  B4D8               	btfsc	status,2,c
  1167  0003A6  D7CD               	goto	l1734
  1168  0003A8  D079               	goto	l1768
  1169                           
  1170                           ;TM1640.c: 90: case 3: switch(Numbers % 10)
  1171  0003AA  D03C               	goto	l1762
  1172  0003AC                     l1740:
  1173  0003AC  0E3F               	movlw	63
  1174  0003AE  6E1C               	movwf	TM1640_Writer_Dates@Date,c
  1175  0003B0  0E00               	movlw	0
  1176  0003B2  ECB7  F004         	call	_TM1640_Writer_Dates
  1177  0003B6  D072               	goto	l1768
  1178  0003B8                     l1742:
  1179  0003B8  0E06               	movlw	6
  1180  0003BA  6E1C               	movwf	TM1640_Writer_Dates@Date,c
  1181  0003BC  0E00               	movlw	0
  1182  0003BE  ECB7  F004         	call	_TM1640_Writer_Dates
  1183  0003C2  D06C               	goto	l1768
  1184  0003C4                     l1744:
  1185  0003C4  0E5B               	movlw	91
  1186  0003C6  6E1C               	movwf	TM1640_Writer_Dates@Date,c
  1187  0003C8  0E00               	movlw	0
  1188  0003CA  ECB7  F004         	call	_TM1640_Writer_Dates
  1189  0003CE  D066               	goto	l1768
  1190  0003D0                     l1746:
  1191  0003D0  0E4F               	movlw	79
  1192  0003D2  6E1C               	movwf	TM1640_Writer_Dates@Date,c
  1193  0003D4  0E00               	movlw	0
  1194  0003D6  ECB7  F004         	call	_TM1640_Writer_Dates
  1195  0003DA  D060               	goto	l1768
  1196  0003DC                     l1748:
  1197  0003DC  0E66               	movlw	102
  1198  0003DE  6E1C               	movwf	TM1640_Writer_Dates@Date,c
  1199  0003E0  0E00               	movlw	0
  1200  0003E2  ECB7  F004         	call	_TM1640_Writer_Dates
  1201  0003E6  D05A               	goto	l1768
  1202  0003E8                     l1750:
  1203  0003E8  0E6D               	movlw	109
  1204  0003EA  6E1C               	movwf	TM1640_Writer_Dates@Date,c
  1205  0003EC  0E00               	movlw	0
  1206  0003EE  ECB7  F004         	call	_TM1640_Writer_Dates
  1207  0003F2  D054               	goto	l1768
  1208  0003F4                     l1752:
  1209  0003F4  0E7D               	movlw	125
  1210  0003F6  6E1C               	movwf	TM1640_Writer_Dates@Date,c
  1211  0003F8  0E00               	movlw	0
  1212  0003FA  ECB7  F004         	call	_TM1640_Writer_Dates
  1213  0003FE  D04E               	goto	l1768
  1214  000400                     l1754:
  1215  000400  0E07               	movlw	7
  1216  000402  6E1C               	movwf	TM1640_Writer_Dates@Date,c
  1217  000404  0E00               	movlw	0
  1218  000406  ECB7  F004         	call	_TM1640_Writer_Dates
  1219  00040A  D048               	goto	l1768
  1220  00040C                     l1756:
  1221  00040C  0E7F               	movlw	127
  1222  00040E  6E1C               	movwf	TM1640_Writer_Dates@Date,c
  1223  000410  0E00               	movlw	0
  1224  000412  ECB7  F004         	call	_TM1640_Writer_Dates
  1225  000416  D042               	goto	l1768
  1226  000418                     l1758:
  1227  000418  0E6F               	movlw	111
  1228  00041A  6E1C               	movwf	TM1640_Writer_Dates@Date,c
  1229  00041C  0E00               	movlw	0
  1230  00041E  ECB7  F004         	call	_TM1640_Writer_Dates
  1231                           
  1232                           ;TM1640.c: 102: } break;
  1233  000422  D03C               	goto	l1768
  1234  000424                     l1762:
  1235  000424  C020  F018         	movff	TM1640_Show_Numbers@Numbers,___awmod@dividend
  1236  000428  C021  F019         	movff	TM1640_Show_Numbers@Numbers+1,___awmod@dividend+1
  1237  00042C  0E00               	movlw	0
  1238  00042E  6E1B               	movwf	___awmod@divisor+1,c
  1239  000430  0E0A               	movlw	10
  1240  000432  6E1A               	movwf	___awmod@divisor,c
  1241  000434  EC2F  F003         	call	___awmod	;wreg free
  1242                           
  1243                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1244                           ; Switch size 1, requested type "space"
  1245                           ; Number of cases is 1, Range of values is 0 to 0
  1246                           ; switch strategies available:
  1247                           ; Name         Instructions Cycles
  1248                           ; simple_byte            4     3 (average)
  1249                           ;	Chosen strategy is simple_byte
  1250  000438  5019               	movf	?___awmod+1,w,c
  1251  00043A  0A00               	xorlw	0	; case 0
  1252  00043C  A4D8               	btfss	status,2,c
  1253  00043E  D02E               	goto	l1768
  1254                           
  1255                           ; Switch size 1, requested type "space"
  1256                           ; Number of cases is 10, Range of values is 0 to 9
  1257                           ; switch strategies available:
  1258                           ; Name         Instructions Cycles
  1259                           ; simple_byte           31    16 (average)
  1260                           ;	Chosen strategy is simple_byte
  1261  000440  5018               	movf	?___awmod,w,c
  1262  000442  0A00               	xorlw	0	; case 0
  1263  000444  B4D8               	btfsc	status,2,c
  1264  000446  D7B2               	goto	l1740
  1265  000448  0A01               	xorlw	1	; case 1
  1266  00044A  B4D8               	btfsc	status,2,c
  1267  00044C  D7B5               	goto	l1742
  1268  00044E  0A03               	xorlw	3	; case 2
  1269  000450  B4D8               	btfsc	status,2,c
  1270  000452  D7B8               	goto	l1744
  1271  000454  0A01               	xorlw	1	; case 3
  1272  000456  B4D8               	btfsc	status,2,c
  1273  000458  D7BB               	goto	l1746
  1274  00045A  0A07               	xorlw	7	; case 4
  1275  00045C  B4D8               	btfsc	status,2,c
  1276  00045E  D7BE               	goto	l1748
  1277  000460  0A01               	xorlw	1	; case 5
  1278  000462  B4D8               	btfsc	status,2,c
  1279  000464  D7C1               	goto	l1750
  1280  000466  0A03               	xorlw	3	; case 6
  1281  000468  B4D8               	btfsc	status,2,c
  1282  00046A  D7C4               	goto	l1752
  1283  00046C  0A01               	xorlw	1	; case 7
  1284  00046E  B4D8               	btfsc	status,2,c
  1285  000470  D7C7               	goto	l1754
  1286  000472  0A0F               	xorlw	15	; case 8
  1287  000474  B4D8               	btfsc	status,2,c
  1288  000476  D7CA               	goto	l1756
  1289  000478  0A01               	xorlw	1	; case 9
  1290  00047A  B4D8               	btfsc	status,2,c
  1291  00047C  D7CD               	goto	l1758
  1292                           
  1293                           ;TM1640.c: 103: }
  1294  00047E  D00E               	goto	l1768
  1295  000480                     l1766:
  1296  000480  5022               	movf	TM1640_Show_Numbers@Num,w,c
  1297                           
  1298                           ; Switch size 1, requested type "space"
  1299                           ; Number of cases is 4, Range of values is 0 to 3
  1300                           ; switch strategies available:
  1301                           ; Name         Instructions Cycles
  1302                           ; simple_byte           13     7 (average)
  1303                           ;	Chosen strategy is simple_byte
  1304  000482  0A00               	xorlw	0	; case 0
  1305  000484  B4D8               	btfsc	status,2,c
  1306  000486  D68D               	goto	l1690
  1307  000488  0A01               	xorlw	1	; case 1
  1308  00048A  B4D8               	btfsc	status,2,c
  1309  00048C  D6F5               	goto	l1714
  1310  00048E  0A03               	xorlw	3	; case 2
  1311  000490  B4D8               	btfsc	status,2,c
  1312  000492  D75D               	goto	l1738
  1313  000494  0A01               	xorlw	1	; case 3
  1314  000496  B4D8               	btfsc	status,2,c
  1315  000498  D7C5               	goto	l1762
  1316  00049A  D000               	goto	l1768
  1317  00049C                     l1768:
  1318                           
  1319                           ;TM1640.c: 104: ++Num;
  1320  00049C  2A22               	incf	TM1640_Show_Numbers@Num,f,c
  1321                           
  1322                           ;TM1640.c: 105: Numbers /= 10;
  1323  00049E  C020  F018         	movff	TM1640_Show_Numbers@Numbers,___awdiv@dividend
  1324  0004A2  C021  F019         	movff	TM1640_Show_Numbers@Numbers+1,___awdiv@dividend+1
  1325  0004A6  0E00               	movlw	0
  1326  0004A8  6E1B               	movwf	___awdiv@divisor+1,c
  1327  0004AA  0E0A               	movlw	10
  1328  0004AC  6E1A               	movwf	___awdiv@divisor,c
  1329  0004AE  ECE4  F002         	call	___awdiv	;wreg free
  1330  0004B2  C018  F020         	movff	?___awdiv,TM1640_Show_Numbers@Numbers
  1331  0004B6  C019  F021         	movff	?___awdiv+1,TM1640_Show_Numbers@Numbers+1
  1332  0004BA  D000               	goto	l1772
  1333  0004BC                     l1772:
  1334  0004BC  0E03               	movlw	3
  1335  0004BE  6422               	cpfsgt	TM1640_Show_Numbers@Num,c
  1336  0004C0  D7DF               	goto	l1766
  1337  0004C2  0012               	return	
  1338  0004C4  0012               	return		;funcret
  1339  0004C6                     __end_of_TM1640_Show_Numbers:
  1340                           	opt stack 0
  1341                           tblptru	equ	0xFF8
  1342                           tblptrh	equ	0xFF7
  1343                           tblptrl	equ	0xFF6
  1344                           tablat	equ	0xFF5
  1345                           intcon	equ	0xFF2
  1346                           postinc0	equ	0xFEE
  1347                           wreg	equ	0xFE8
  1348                           postdec1	equ	0xFE5
  1349                           fsr1l	equ	0xFE1
  1350                           status	equ	0xFD8
  1351                           
  1352 ;; *************** function ___awmod *****************
  1353 ;; Defined at:
  1354 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;  dividend        2   23[COMRAM] int 
  1357 ;;  divisor         2   25[COMRAM] int 
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;  sign            1   28[COMRAM] unsigned char 
  1360 ;;  counter         1   27[COMRAM] unsigned char 
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  2   23[COMRAM] int 
  1363 ;; Registers used:
  1364 ;;		wreg, status,2, status,0
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1370 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1371 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1373 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1374 ;;Total ram usage:        6 bytes
  1375 ;; Hardware stack levels used:    1
  1376 ;; Hardware stack levels required when called:    3
  1377 ;; This function calls:
  1378 ;;		Nothing
  1379 ;; This function is called by:
  1380 ;;		_TM1640_Show_Numbers
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384                           	psect	text6
  1385  00065E                     __ptext6:
  1386                           	opt stack 0
  1387  00065E                     ___awmod:
  1388                           	opt stack 26
  1389                           
  1390                           ;incstack = 0
  1391  00065E  0E00               	movlw	0
  1392  000660  6E1D               	movwf	___awmod@sign,c
  1393  000662  AE19               	btfss	___awmod@dividend+1,7,c
  1394  000664  D007               	goto	l1618
  1395  000666  6C18               	negf	___awmod@dividend,c
  1396  000668  1E19               	comf	___awmod@dividend+1,f,c
  1397  00066A  B0D8               	btfsc	status,0,c
  1398  00066C  2A19               	incf	___awmod@dividend+1,f,c
  1399  00066E  0E01               	movlw	1
  1400  000670  6E1D               	movwf	___awmod@sign,c
  1401  000672  D000               	goto	l1618
  1402  000674                     l1618:
  1403  000674  AE1B               	btfss	___awmod@divisor+1,7,c
  1404  000676  D005               	goto	l1622
  1405  000678  6C1A               	negf	___awmod@divisor,c
  1406  00067A  1E1B               	comf	___awmod@divisor+1,f,c
  1407  00067C  B0D8               	btfsc	status,0,c
  1408  00067E  2A1B               	incf	___awmod@divisor+1,f,c
  1409  000680  D000               	goto	l1622
  1410  000682                     l1622:
  1411  000682  501A               	movf	___awmod@divisor,w,c
  1412  000684  101B               	iorwf	___awmod@divisor+1,w,c
  1413  000686  B4D8               	btfsc	status,2,c
  1414  000688  D01D               	goto	l1638
  1415  00068A  0E01               	movlw	1
  1416  00068C  6E1C               	movwf	___awmod@counter,c
  1417  00068E  D005               	goto	l1628
  1418  000690                     l1626:
  1419  000690  90D8               	bcf	status,0,c
  1420  000692  361A               	rlcf	___awmod@divisor,f,c
  1421  000694  361B               	rlcf	___awmod@divisor+1,f,c
  1422  000696  2A1C               	incf	___awmod@counter,f,c
  1423  000698  D000               	goto	l1628
  1424  00069A                     l1628:
  1425  00069A  BE1B               	btfsc	___awmod@divisor+1,7,c
  1426  00069C  D002               	goto	l1630
  1427  00069E  D7F8               	goto	l1626
  1428  0006A0  D000               	goto	l1630
  1429  0006A2                     l1630:
  1430  0006A2  501A               	movf	___awmod@divisor,w,c
  1431  0006A4  5C18               	subwf	___awmod@dividend,w,c
  1432  0006A6  501B               	movf	___awmod@divisor+1,w,c
  1433  0006A8  5819               	subwfb	___awmod@dividend+1,w,c
  1434  0006AA  A0D8               	btfss	status,0,c
  1435  0006AC  D005               	goto	l1634
  1436  0006AE  501A               	movf	___awmod@divisor,w,c
  1437  0006B0  5E18               	subwf	___awmod@dividend,f,c
  1438  0006B2  501B               	movf	___awmod@divisor+1,w,c
  1439  0006B4  5A19               	subwfb	___awmod@dividend+1,f,c
  1440  0006B6  D000               	goto	l1634
  1441  0006B8                     l1634:
  1442  0006B8  90D8               	bcf	status,0,c
  1443  0006BA  321B               	rrcf	___awmod@divisor+1,f,c
  1444  0006BC  321A               	rrcf	___awmod@divisor,f,c
  1445  0006BE  2E1C               	decfsz	___awmod@counter,f,c
  1446  0006C0  D7F0               	goto	l1630
  1447  0006C2  D000               	goto	l1638
  1448  0006C4                     l1638:
  1449  0006C4  501D               	movf	___awmod@sign,w,c
  1450  0006C6  B4D8               	btfsc	status,2,c
  1451  0006C8  D005               	goto	l1642
  1452  0006CA  6C18               	negf	___awmod@dividend,c
  1453  0006CC  1E19               	comf	___awmod@dividend+1,f,c
  1454  0006CE  B0D8               	btfsc	status,0,c
  1455  0006D0  2A19               	incf	___awmod@dividend+1,f,c
  1456  0006D2  D000               	goto	l1642
  1457  0006D4                     l1642:
  1458  0006D4  C018  F018         	movff	___awmod@dividend,?___awmod
  1459  0006D8  C019  F019         	movff	___awmod@dividend+1,?___awmod+1
  1460  0006DC  0012               	return	
  1461  0006DE  0012               	return		;funcret
  1462  0006E0                     __end_of___awmod:
  1463                           	opt stack 0
  1464                           tblptru	equ	0xFF8
  1465                           tblptrh	equ	0xFF7
  1466                           tblptrl	equ	0xFF6
  1467                           tablat	equ	0xFF5
  1468                           intcon	equ	0xFF2
  1469                           postinc0	equ	0xFEE
  1470                           wreg	equ	0xFE8
  1471                           postdec1	equ	0xFE5
  1472                           fsr1l	equ	0xFE1
  1473                           status	equ	0xFD8
  1474                           
  1475 ;; *************** function ___awdiv *****************
  1476 ;; Defined at:
  1477 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  1478 ;; Parameters:    Size  Location     Type
  1479 ;;  dividend        2   23[COMRAM] int 
  1480 ;;  divisor         2   25[COMRAM] int 
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;  quotient        2   29[COMRAM] int 
  1483 ;;  sign            1   28[COMRAM] unsigned char 
  1484 ;;  counter         1   27[COMRAM] unsigned char 
  1485 ;; Return value:  Size  Location     Type
  1486 ;;                  2   23[COMRAM] int 
  1487 ;; Registers used:
  1488 ;;		wreg, status,2, status,0
  1489 ;; Tracked objects:
  1490 ;;		On entry : 0/0
  1491 ;;		On exit  : 0/0
  1492 ;;		Unchanged: 0/0
  1493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1494 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1495 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1497 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1498 ;;Total ram usage:        8 bytes
  1499 ;; Hardware stack levels used:    1
  1500 ;; Hardware stack levels required when called:    3
  1501 ;; This function calls:
  1502 ;;		Nothing
  1503 ;; This function is called by:
  1504 ;;		_TM1640_Show_Numbers
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508                           	psect	text7
  1509  0005C8                     __ptext7:
  1510                           	opt stack 0
  1511  0005C8                     ___awdiv:
  1512                           	opt stack 26
  1513                           
  1514                           ;incstack = 0
  1515  0005C8  0E00               	movlw	0
  1516  0005CA  6E1D               	movwf	___awdiv@sign,c
  1517  0005CC  AE1B               	btfss	___awdiv@divisor+1,7,c
  1518  0005CE  D007               	goto	l1574
  1519  0005D0  6C1A               	negf	___awdiv@divisor,c
  1520  0005D2  1E1B               	comf	___awdiv@divisor+1,f,c
  1521  0005D4  B0D8               	btfsc	status,0,c
  1522  0005D6  2A1B               	incf	___awdiv@divisor+1,f,c
  1523  0005D8  0E01               	movlw	1
  1524  0005DA  6E1D               	movwf	___awdiv@sign,c
  1525  0005DC  D000               	goto	l1574
  1526  0005DE                     l1574:
  1527  0005DE  AE19               	btfss	___awdiv@dividend+1,7,c
  1528  0005E0  D007               	goto	l1580
  1529  0005E2  6C18               	negf	___awdiv@dividend,c
  1530  0005E4  1E19               	comf	___awdiv@dividend+1,f,c
  1531  0005E6  B0D8               	btfsc	status,0,c
  1532  0005E8  2A19               	incf	___awdiv@dividend+1,f,c
  1533  0005EA  0E01               	movlw	1
  1534  0005EC  1A1D               	xorwf	___awdiv@sign,f,c
  1535  0005EE  D000               	goto	l1580
  1536  0005F0                     l1580:
  1537  0005F0  0E00               	movlw	0
  1538  0005F2  6E1F               	movwf	___awdiv@quotient+1,c
  1539  0005F4  0E00               	movlw	0
  1540  0005F6  6E1E               	movwf	___awdiv@quotient,c
  1541  0005F8  501A               	movf	___awdiv@divisor,w,c
  1542  0005FA  101B               	iorwf	___awdiv@divisor+1,w,c
  1543  0005FC  B4D8               	btfsc	status,2,c
  1544  0005FE  D021               	goto	l1602
  1545  000600  0E01               	movlw	1
  1546  000602  6E1C               	movwf	___awdiv@counter,c
  1547  000604  D005               	goto	l1588
  1548  000606                     l1586:
  1549  000606  90D8               	bcf	status,0,c
  1550  000608  361A               	rlcf	___awdiv@divisor,f,c
  1551  00060A  361B               	rlcf	___awdiv@divisor+1,f,c
  1552  00060C  2A1C               	incf	___awdiv@counter,f,c
  1553  00060E  D000               	goto	l1588
  1554  000610                     l1588:
  1555  000610  BE1B               	btfsc	___awdiv@divisor+1,7,c
  1556  000612  D002               	goto	l1590
  1557  000614  D7F8               	goto	l1586
  1558  000616  D000               	goto	l1590
  1559  000618                     l1590:
  1560  000618  90D8               	bcf	status,0,c
  1561  00061A  361E               	rlcf	___awdiv@quotient,f,c
  1562  00061C  361F               	rlcf	___awdiv@quotient+1,f,c
  1563  00061E  501A               	movf	___awdiv@divisor,w,c
  1564  000620  5C18               	subwf	___awdiv@dividend,w,c
  1565  000622  501B               	movf	___awdiv@divisor+1,w,c
  1566  000624  5819               	subwfb	___awdiv@dividend+1,w,c
  1567  000626  A0D8               	btfss	status,0,c
  1568  000628  D006               	goto	l1598
  1569  00062A  501A               	movf	___awdiv@divisor,w,c
  1570  00062C  5E18               	subwf	___awdiv@dividend,f,c
  1571  00062E  501B               	movf	___awdiv@divisor+1,w,c
  1572  000630  5A19               	subwfb	___awdiv@dividend+1,f,c
  1573  000632  801E               	bsf	___awdiv@quotient,0,c
  1574  000634  D000               	goto	l1598
  1575  000636                     l1598:
  1576  000636  90D8               	bcf	status,0,c
  1577  000638  321B               	rrcf	___awdiv@divisor+1,f,c
  1578  00063A  321A               	rrcf	___awdiv@divisor,f,c
  1579  00063C  2E1C               	decfsz	___awdiv@counter,f,c
  1580  00063E  D7EC               	goto	l1590
  1581  000640  D000               	goto	l1602
  1582  000642                     l1602:
  1583  000642  501D               	movf	___awdiv@sign,w,c
  1584  000644  B4D8               	btfsc	status,2,c
  1585  000646  D005               	goto	l1606
  1586  000648  6C1E               	negf	___awdiv@quotient,c
  1587  00064A  1E1F               	comf	___awdiv@quotient+1,f,c
  1588  00064C  B0D8               	btfsc	status,0,c
  1589  00064E  2A1F               	incf	___awdiv@quotient+1,f,c
  1590  000650  D000               	goto	l1606
  1591  000652                     l1606:
  1592  000652  C01E  F018         	movff	___awdiv@quotient,?___awdiv
  1593  000656  C01F  F019         	movff	___awdiv@quotient+1,?___awdiv+1
  1594  00065A  0012               	return	
  1595  00065C  0012               	return		;funcret
  1596  00065E                     __end_of___awdiv:
  1597                           	opt stack 0
  1598                           tblptru	equ	0xFF8
  1599                           tblptrh	equ	0xFF7
  1600                           tblptrl	equ	0xFF6
  1601                           tablat	equ	0xFF5
  1602                           intcon	equ	0xFF2
  1603                           postinc0	equ	0xFEE
  1604                           wreg	equ	0xFE8
  1605                           postdec1	equ	0xFE5
  1606                           fsr1l	equ	0xFE1
  1607                           status	equ	0xFD8
  1608                           
  1609 ;; *************** function _TM1640_Writer_Dates *****************
  1610 ;; Defined at:
  1611 ;;		line 109 in file "_01_USER/TM1640.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;  Addr            1    wreg     unsigned char 
  1614 ;;  Date            1   27[COMRAM] unsigned char 
  1615 ;; Auto vars:     Size  Location     Type
  1616 ;;  Addr            1   28[COMRAM] unsigned char 
  1617 ;; Return value:  Size  Location     Type
  1618 ;;		None               void
  1619 ;; Registers used:
  1620 ;;		wreg, status,2, status,0, cstack
  1621 ;; Tracked objects:
  1622 ;;		On entry : 0/0
  1623 ;;		On exit  : 0/0
  1624 ;;		Unchanged: 0/0
  1625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1626 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1627 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1629 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1630 ;;Total ram usage:        2 bytes
  1631 ;; Hardware stack levels used:    1
  1632 ;; Hardware stack levels required when called:    5
  1633 ;; This function calls:
  1634 ;;		_TM1640_Start
  1635 ;;		_TM1640_Stop
  1636 ;;		_TM1640_Writer_Byte
  1637 ;; This function is called by:
  1638 ;;		_TM1640_Show_Numbers
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642                           	psect	text8
  1643  00096E                     __ptext8:
  1644                           	opt stack 0
  1645  00096E                     _TM1640_Writer_Dates:
  1646                           	opt stack 24
  1647                           
  1648                           ;incstack = 0
  1649                           ;TM1640_Writer_Dates@Addr stored from wreg
  1650  00096E  6E1D               	movwf	TM1640_Writer_Dates@Addr,c
  1651                           
  1652                           ;TM1640.c: 111: if((Addr >= 0) && (Addr <= 3))
  1653  000970  0E04               	movlw	4
  1654  000972  601D               	cpfslt	TM1640_Writer_Dates@Addr,c
  1655  000974  0012               	return	
  1656                           
  1657                           ;TM1640.c: 112: {
  1658                           ;TM1640.c: 113: TM1640_Start();
  1659  000976  ECA5  F004         	call	_TM1640_Start	;wreg free
  1660                           
  1661                           ;TM1640.c: 114: TM1640_Writer_Byte(0xC0 + Addr);
  1662  00097A  501D               	movf	TM1640_Writer_Dates@Addr,w,c
  1663  00097C  0FC0               	addlw	192
  1664  00097E  ECD3  F003         	call	_TM1640_Writer_Byte
  1665                           
  1666                           ;TM1640.c: 115: TM1640_Writer_Byte(Date);
  1667  000982  501C               	movf	TM1640_Writer_Dates@Date,w,c
  1668  000984  ECD3  F003         	call	_TM1640_Writer_Byte
  1669                           
  1670                           ;TM1640.c: 116: TM1640_Stop();
  1671  000988  EC93  F004         	call	_TM1640_Stop	;wreg free
  1672  00098C  0012               	return	
  1673  00098E  0012               	return		;funcret
  1674  000990                     __end_of_TM1640_Writer_Dates:
  1675                           	opt stack 0
  1676                           tblptru	equ	0xFF8
  1677                           tblptrh	equ	0xFF7
  1678                           tblptrl	equ	0xFF6
  1679                           tablat	equ	0xFF5
  1680                           intcon	equ	0xFF2
  1681                           postinc0	equ	0xFEE
  1682                           wreg	equ	0xFE8
  1683                           postdec1	equ	0xFE5
  1684                           fsr1l	equ	0xFE1
  1685                           status	equ	0xFD8
  1686                           
  1687 ;; *************** function _ReadADC *****************
  1688 ;; Defined at:
  1689 ;;		line 24 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  1690 ;; Parameters:    Size  Location     Type
  1691 ;;		None
  1692 ;; Auto vars:     Size  Location     Type
  1693 ;;		None
  1694 ;; Return value:  Size  Location     Type
  1695 ;;                  2   23[COMRAM] int 
  1696 ;; Registers used:
  1697 ;;		wreg, status,2
  1698 ;; Tracked objects:
  1699 ;;		On entry : 0/0
  1700 ;;		On exit  : 0/0
  1701 ;;		Unchanged: 0/0
  1702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1703 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1705 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1706 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1707 ;;Total ram usage:        4 bytes
  1708 ;; Hardware stack levels used:    1
  1709 ;; Hardware stack levels required when called:    3
  1710 ;; This function calls:
  1711 ;;		Nothing
  1712 ;; This function is called by:
  1713 ;;		_main
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           	psect	text9
  1718  0009D4                     __ptext9:
  1719                           	opt stack 0
  1720  0009D4                     _ReadADC:
  1721                           	opt stack 27
  1722                           
  1723                           ;incstack = 0
  1724  0009D4  50C4               	movf	4036,w,c	;volatile
  1725  0009D6  6E1A               	movwf	??_ReadADC& (0+255),c
  1726  0009D8  50C3               	movf	4035,w,c	;volatile
  1727  0009DA  6E18               	movwf	?_ReadADC,c
  1728  0009DC  C01A  F019         	movff	??_ReadADC,?_ReadADC+1
  1729  0009E0  0012               	return	
  1730  0009E2  0012               	return		;funcret
  1731  0009E4                     __end_of_ReadADC:
  1732                           	opt stack 0
  1733                           tblptru	equ	0xFF8
  1734                           tblptrh	equ	0xFF7
  1735                           tblptrl	equ	0xFF6
  1736                           tablat	equ	0xFF5
  1737                           intcon	equ	0xFF2
  1738                           postinc0	equ	0xFEE
  1739                           wreg	equ	0xFE8
  1740                           postdec1	equ	0xFE5
  1741                           fsr1l	equ	0xFE1
  1742                           status	equ	0xFD8
  1743                           
  1744 ;; *************** function _Key_Init *****************
  1745 ;; Defined at:
  1746 ;;		line 38 in file "_01_USER/Key.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;		None
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;		None
  1751 ;; Return value:  Size  Location     Type
  1752 ;;		None               void
  1753 ;; Registers used:
  1754 ;;		wreg, status,2, status,0
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1764 ;;Total ram usage:        0 bytes
  1765 ;; Hardware stack levels used:    1
  1766 ;; Hardware stack levels required when called:    3
  1767 ;; This function calls:
  1768 ;;		Nothing
  1769 ;; This function is called by:
  1770 ;;		_main
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774                           	psect	text10
  1775  0009FE                     __ptext10:
  1776                           	opt stack 0
  1777  0009FE                     _Key_Init:
  1778                           	opt stack 27
  1779                           
  1780                           ;Key.c: 40: TRISE |= 0x1e;
  1781                           
  1782                           ;incstack = 0
  1783  0009FE  0E1E               	movlw	30
  1784  000A00  1296               	iorwf	3990,f,c	;volatile
  1785                           
  1786                           ;Key.c: 41: TRISD |= 0xc0;
  1787  000A02  0EC0               	movlw	192
  1788  000A04  1295               	iorwf	3989,f,c	;volatile
  1789  000A06  0012               	return		;funcret
  1790  000A08                     __end_of_Key_Init:
  1791                           	opt stack 0
  1792                           tblptru	equ	0xFF8
  1793                           tblptrh	equ	0xFF7
  1794                           tblptrl	equ	0xFF6
  1795                           tablat	equ	0xFF5
  1796                           intcon	equ	0xFF2
  1797                           postinc0	equ	0xFEE
  1798                           wreg	equ	0xFE8
  1799                           postdec1	equ	0xFE5
  1800                           fsr1l	equ	0xFE1
  1801                           status	equ	0xFD8
  1802                           
  1803 ;; *************** function _Init_TM1640 *****************
  1804 ;; Defined at:
  1805 ;;		line 162 in file "_01_USER/TM1640.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;		None
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;		None
  1810 ;; Return value:  Size  Location     Type
  1811 ;;		None               void
  1812 ;; Registers used:
  1813 ;;		wreg, status,2, status,0, cstack
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1823 ;;Total ram usage:        0 bytes
  1824 ;; Hardware stack levels used:    1
  1825 ;; Hardware stack levels required when called:    5
  1826 ;; This function calls:
  1827 ;;		_TM1640_Start
  1828 ;;		_TM1640_Stop
  1829 ;;		_TM1640_Writer_Byte
  1830 ;; This function is called by:
  1831 ;;		_main
  1832 ;; This function uses a non-reentrant model
  1833 ;;
  1834                           
  1835                           	psect	text11
  1836  0008DC                     __ptext11:
  1837                           	opt stack 0
  1838  0008DC                     _Init_TM1640:
  1839                           	opt stack 25
  1840                           
  1841                           ;TM1640.c: 164: TRISCbits.TRISC3 = 0;
  1842                           
  1843                           ;incstack = 0
  1844  0008DC  9694               	bcf	3988,3,c	;volatile
  1845                           
  1846                           ;TM1640.c: 165: TRISCbits.TRISC4 = 0;
  1847  0008DE  9894               	bcf	3988,4,c	;volatile
  1848                           
  1849                           ;TM1640.c: 166: TM1640_Stop();
  1850  0008E0  EC93  F004         	call	_TM1640_Stop	;wreg free
  1851                           
  1852                           ;TM1640.c: 168: TM1640_Start();
  1853  0008E4  ECA5  F004         	call	_TM1640_Start	;wreg free
  1854                           
  1855                           ;TM1640.c: 169: TM1640_Writer_Byte(0x44);
  1856  0008E8  0E44               	movlw	68
  1857  0008EA  ECD3  F003         	call	_TM1640_Writer_Byte
  1858                           
  1859                           ;TM1640.c: 170: TM1640_Stop();
  1860  0008EE  EC93  F004         	call	_TM1640_Stop	;wreg free
  1861                           
  1862                           ;TM1640.c: 172: TM1640_Start();
  1863  0008F2  ECA5  F004         	call	_TM1640_Start	;wreg free
  1864                           
  1865                           ;TM1640.c: 173: TM1640_Writer_Byte(0x8F);
  1866  0008F6  0E8F               	movlw	143
  1867  0008F8  ECD3  F003         	call	_TM1640_Writer_Byte
  1868                           
  1869                           ;TM1640.c: 174: TM1640_Stop();
  1870  0008FC  EC93  F004         	call	_TM1640_Stop	;wreg free
  1871  000900  0012               	return		;funcret
  1872  000902                     __end_of_Init_TM1640:
  1873                           	opt stack 0
  1874                           tblptru	equ	0xFF8
  1875                           tblptrh	equ	0xFF7
  1876                           tblptrl	equ	0xFF6
  1877                           tablat	equ	0xFF5
  1878                           intcon	equ	0xFF2
  1879                           postinc0	equ	0xFEE
  1880                           wreg	equ	0xFE8
  1881                           postdec1	equ	0xFE5
  1882                           fsr1l	equ	0xFE1
  1883                           status	equ	0xFD8
  1884                           
  1885 ;; *************** function _TM1640_Writer_Byte *****************
  1886 ;; Defined at:
  1887 ;;		line 120 in file "_01_USER/TM1640.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;  Date            1    wreg     const unsigned char 
  1890 ;; Auto vars:     Size  Location     Type
  1891 ;;  Date            1   25[COMRAM] const unsigned char 
  1892 ;;  mask            1   26[COMRAM] unsigned char 
  1893 ;; Return value:  Size  Location     Type
  1894 ;;		None               void
  1895 ;; Registers used:
  1896 ;;		wreg, status,2, status,0, cstack
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1903 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1905 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1906 ;;Total ram usage:        2 bytes
  1907 ;; Hardware stack levels used:    1
  1908 ;; Hardware stack levels required when called:    4
  1909 ;; This function calls:
  1910 ;;		_TM1640_Delay
  1911 ;; This function is called by:
  1912 ;;		_TM1640_Writer_Dates
  1913 ;;		_Init_TM1640
  1914 ;;		_Open_Display
  1915 ;;		_Disable_Display
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           	psect	text12
  1920  0007A6                     __ptext12:
  1921                           	opt stack 0
  1922  0007A6                     _TM1640_Writer_Byte:
  1923                           	opt stack 24
  1924                           
  1925                           ;incstack = 0
  1926                           ;TM1640_Writer_Byte@Date stored from wreg
  1927  0007A6  6E1A               	movwf	TM1640_Writer_Byte@Date,c
  1928                           
  1929                           ;TM1640.c: 122: unsigned char mask;
  1930                           ;TM1640.c: 124: for(mask=0x01; mask; mask<<=1)
  1931  0007A8  0E01               	movlw	1
  1932  0007AA  6E1B               	movwf	TM1640_Writer_Byte@mask,c
  1933  0007AC  D017               	goto	l1002
  1934  0007AE                     l295:
  1935                           
  1936                           ;TM1640.c: 125: {
  1937                           ;TM1640.c: 126: RC3 = 0;
  1938  0007AE  9682               	bcf	3970,3,c	;volatile
  1939                           
  1940                           ;TM1640.c: 127: TM1640_Delay(1);
  1941  0007B0  0E01               	movlw	1
  1942  0007B2  ECD5  F004         	call	_TM1640_Delay
  1943                           
  1944                           ;TM1640.c: 128: if(mask & Date)
  1945  0007B6  501B               	movf	TM1640_Writer_Byte@mask,w,c
  1946  0007B8  141A               	andwf	TM1640_Writer_Byte@Date,w,c
  1947  0007BA  0900               	iorlw	0
  1948  0007BC  B4D8               	btfsc	status,2,c
  1949  0007BE  D002               	goto	l296
  1950                           
  1951                           ;TM1640.c: 129: RC4 = 1;
  1952  0007C0  8882               	bsf	3970,4,c	;volatile
  1953  0007C2  D002               	goto	l996
  1954  0007C4                     l296:
  1955                           
  1956                           ;TM1640.c: 130: else
  1957                           ;TM1640.c: 131: RC4 = 0;
  1958  0007C4  9882               	bcf	3970,4,c	;volatile
  1959  0007C6  D000               	goto	l996
  1960  0007C8                     l996:
  1961                           
  1962                           ;TM1640.c: 132: TM1640_Delay(1);
  1963  0007C8  0E01               	movlw	1
  1964  0007CA  ECD5  F004         	call	_TM1640_Delay
  1965                           
  1966                           ;TM1640.c: 133: RC3 = 1;
  1967  0007CE  8682               	bsf	3970,3,c	;volatile
  1968                           
  1969                           ;TM1640.c: 134: TM1640_Delay(1);
  1970  0007D0  0E01               	movlw	1
  1971  0007D2  ECD5  F004         	call	_TM1640_Delay
  1972  0007D6  90D8               	bcf	status,0,c
  1973  0007D8  361B               	rlcf	TM1640_Writer_Byte@mask,f,c
  1974  0007DA  D000               	goto	l1002
  1975  0007DC                     l1002:
  1976  0007DC  501B               	movf	TM1640_Writer_Byte@mask,w,c
  1977  0007DE  A4D8               	btfss	status,2,c
  1978  0007E0  D7E6               	goto	l295
  1979  0007E2  0012               	return		;funcret
  1980  0007E4                     __end_of_TM1640_Writer_Byte:
  1981                           	opt stack 0
  1982                           tblptru	equ	0xFF8
  1983                           tblptrh	equ	0xFF7
  1984                           tblptrl	equ	0xFF6
  1985                           tablat	equ	0xFF5
  1986                           intcon	equ	0xFF2
  1987                           postinc0	equ	0xFEE
  1988                           wreg	equ	0xFE8
  1989                           postdec1	equ	0xFE5
  1990                           fsr1l	equ	0xFE1
  1991                           status	equ	0xFD8
  1992                           
  1993 ;; *************** function _TM1640_Stop *****************
  1994 ;; Defined at:
  1995 ;;		line 30 in file "_01_USER/TM1640.c"
  1996 ;; Parameters:    Size  Location     Type
  1997 ;;		None
  1998 ;; Auto vars:     Size  Location     Type
  1999 ;;		None
  2000 ;; Return value:  Size  Location     Type
  2001 ;;		None               void
  2002 ;; Registers used:
  2003 ;;		wreg, status,2, status,0, cstack
  2004 ;; Tracked objects:
  2005 ;;		On entry : 0/0
  2006 ;;		On exit  : 0/0
  2007 ;;		Unchanged: 0/0
  2008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2013 ;;Total ram usage:        0 bytes
  2014 ;; Hardware stack levels used:    1
  2015 ;; Hardware stack levels required when called:    4
  2016 ;; This function calls:
  2017 ;;		_TM1640_Delay
  2018 ;; This function is called by:
  2019 ;;		_TM1640_Writer_Dates
  2020 ;;		_Init_TM1640
  2021 ;;		_Open_Display
  2022 ;;		_Disable_Display
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           	psect	text13
  2027  000926                     __ptext13:
  2028                           	opt stack 0
  2029  000926                     _TM1640_Stop:
  2030                           	opt stack 24
  2031                           
  2032                           ;TM1640.c: 32: RC3 = 0;
  2033                           
  2034                           ;incstack = 0
  2035  000926  9682               	bcf	3970,3,c	;volatile
  2036                           
  2037                           ;TM1640.c: 33: TM1640_Delay(1);
  2038  000928  0E01               	movlw	1
  2039  00092A  ECD5  F004         	call	_TM1640_Delay
  2040                           
  2041                           ;TM1640.c: 34: RC4 = 0;
  2042  00092E  9882               	bcf	3970,4,c	;volatile
  2043                           
  2044                           ;TM1640.c: 35: TM1640_Delay(1);
  2045  000930  0E01               	movlw	1
  2046  000932  ECD5  F004         	call	_TM1640_Delay
  2047                           
  2048                           ;TM1640.c: 36: RC3 = 1;
  2049  000936  8682               	bsf	3970,3,c	;volatile
  2050                           
  2051                           ;TM1640.c: 37: TM1640_Delay(1);
  2052  000938  0E01               	movlw	1
  2053  00093A  ECD5  F004         	call	_TM1640_Delay
  2054                           
  2055                           ;TM1640.c: 38: RC4 = 1;
  2056  00093E  8882               	bsf	3970,4,c	;volatile
  2057                           
  2058                           ;TM1640.c: 39: TM1640_Delay(1);
  2059  000940  0E01               	movlw	1
  2060  000942  ECD5  F004         	call	_TM1640_Delay
  2061                           
  2062                           ;TM1640.c: 40: RC3 = 0;
  2063  000946  9682               	bcf	3970,3,c	;volatile
  2064  000948  0012               	return		;funcret
  2065  00094A                     __end_of_TM1640_Stop:
  2066                           	opt stack 0
  2067                           tblptru	equ	0xFF8
  2068                           tblptrh	equ	0xFF7
  2069                           tblptrl	equ	0xFF6
  2070                           tablat	equ	0xFF5
  2071                           intcon	equ	0xFF2
  2072                           postinc0	equ	0xFEE
  2073                           wreg	equ	0xFE8
  2074                           postdec1	equ	0xFE5
  2075                           fsr1l	equ	0xFE1
  2076                           status	equ	0xFD8
  2077                           
  2078 ;; *************** function _TM1640_Start *****************
  2079 ;; Defined at:
  2080 ;;		line 17 in file "_01_USER/TM1640.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;		None
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;		None
  2085 ;; Return value:  Size  Location     Type
  2086 ;;		None               void
  2087 ;; Registers used:
  2088 ;;		wreg, status,2, status,0, cstack
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2098 ;;Total ram usage:        0 bytes
  2099 ;; Hardware stack levels used:    1
  2100 ;; Hardware stack levels required when called:    4
  2101 ;; This function calls:
  2102 ;;		_TM1640_Delay
  2103 ;; This function is called by:
  2104 ;;		_TM1640_Writer_Dates
  2105 ;;		_Init_TM1640
  2106 ;;		_Open_Display
  2107 ;;		_Disable_Display
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111                           	psect	text14
  2112  00094A                     __ptext14:
  2113                           	opt stack 0
  2114  00094A                     _TM1640_Start:
  2115                           	opt stack 24
  2116                           
  2117                           ;TM1640.c: 19: RC3 = 0;
  2118                           
  2119                           ;incstack = 0
  2120  00094A  9682               	bcf	3970,3,c	;volatile
  2121                           
  2122                           ;TM1640.c: 20: TM1640_Delay(1);
  2123  00094C  0E01               	movlw	1
  2124  00094E  ECD5  F004         	call	_TM1640_Delay
  2125                           
  2126                           ;TM1640.c: 21: RC4 = 1;
  2127  000952  8882               	bsf	3970,4,c	;volatile
  2128                           
  2129                           ;TM1640.c: 22: TM1640_Delay(1);
  2130  000954  0E01               	movlw	1
  2131  000956  ECD5  F004         	call	_TM1640_Delay
  2132                           
  2133                           ;TM1640.c: 23: RC3 = 1;
  2134  00095A  8682               	bsf	3970,3,c	;volatile
  2135                           
  2136                           ;TM1640.c: 24: TM1640_Delay(1);
  2137  00095C  0E01               	movlw	1
  2138  00095E  ECD5  F004         	call	_TM1640_Delay
  2139                           
  2140                           ;TM1640.c: 25: RC4 = 0;
  2141  000962  9882               	bcf	3970,4,c	;volatile
  2142                           
  2143                           ;TM1640.c: 26: TM1640_Delay(1);
  2144  000964  0E01               	movlw	1
  2145  000966  ECD5  F004         	call	_TM1640_Delay
  2146                           
  2147                           ;TM1640.c: 27: RC3 = 0;
  2148  00096A  9682               	bcf	3970,3,c	;volatile
  2149  00096C  0012               	return		;funcret
  2150  00096E                     __end_of_TM1640_Start:
  2151                           	opt stack 0
  2152                           tblptru	equ	0xFF8
  2153                           tblptrh	equ	0xFF7
  2154                           tblptrl	equ	0xFF6
  2155                           tablat	equ	0xFF5
  2156                           intcon	equ	0xFF2
  2157                           postinc0	equ	0xFEE
  2158                           wreg	equ	0xFE8
  2159                           postdec1	equ	0xFE5
  2160                           fsr1l	equ	0xFE1
  2161                           status	equ	0xFD8
  2162                           
  2163 ;; *************** function _TM1640_Delay *****************
  2164 ;; Defined at:
  2165 ;;		line 152 in file "_01_USER/TM1640.c"
  2166 ;; Parameters:    Size  Location     Type
  2167 ;;  Time            1    wreg     unsigned char 
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;  Time            1   23[COMRAM] unsigned char 
  2170 ;;  i               1   24[COMRAM] unsigned char 
  2171 ;; Return value:  Size  Location     Type
  2172 ;;		None               void
  2173 ;; Registers used:
  2174 ;;		wreg, status,2, status,0
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2181 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2183 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2184 ;;Total ram usage:        2 bytes
  2185 ;; Hardware stack levels used:    1
  2186 ;; Hardware stack levels required when called:    3
  2187 ;; This function calls:
  2188 ;;		Nothing
  2189 ;; This function is called by:
  2190 ;;		_TM1640_Start
  2191 ;;		_TM1640_Stop
  2192 ;;		_TM1640_Writer_Byte
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           	psect	text15
  2197  0009AA                     __ptext15:
  2198                           	opt stack 0
  2199  0009AA                     _TM1640_Delay:
  2200                           	opt stack 24
  2201                           
  2202                           ;incstack = 0
  2203                           ;TM1640_Delay@Time stored from wreg
  2204  0009AA  6E18               	movwf	TM1640_Delay@Time,c
  2205  0009AC                     
  2206                           ;TM1640.c: 157: {
  2207                           ;TM1640.c: 158: for(i=0; i<10; ++i);
  2208  0009AC  0E00               	movlw	0
  2209  0009AE  6E19               	movwf	TM1640_Delay@i,c
  2210  0009B0  D002               	goto	l962
  2211  0009B2  D004               	goto	l310
  2212  0009B4                     l960:
  2213  0009B4  2A19               	incf	TM1640_Delay@i,f,c
  2214  0009B6                     l962:
  2215  0009B6  0E09               	movlw	9
  2216  0009B8  6419               	cpfsgt	TM1640_Delay@i,c
  2217  0009BA  D7FC               	goto	l960
  2218  0009BC                     l310:
  2219                           
  2220                           ;TM1640.c: 159: }while(--Time);
  2221  0009BC  2E18               	decfsz	TM1640_Delay@Time,f,c
  2222  0009BE  D7F6               	goto	l954
  2223  0009C0  0012               	return	
  2224  0009C2  0012               	return		;funcret
  2225  0009C4                     __end_of_TM1640_Delay:
  2226                           	opt stack 0
  2227                           tblptru	equ	0xFF8
  2228                           tblptrh	equ	0xFF7
  2229                           tblptrl	equ	0xFF6
  2230                           tablat	equ	0xFF5
  2231                           intcon	equ	0xFF2
  2232                           postinc0	equ	0xFEE
  2233                           wreg	equ	0xFE8
  2234                           postdec1	equ	0xFE5
  2235                           fsr1l	equ	0xFE1
  2236                           status	equ	0xFD8
  2237                           
  2238 ;; *************** function _GPIO_Config *****************
  2239 ;; Defined at:
  2240 ;;		line 38 in file "_01_USER/GPIO.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;		None
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;		None
  2245 ;; Return value:  Size  Location     Type
  2246 ;;		None               void
  2247 ;; Registers used:
  2248 ;;		wreg, status,2, status,0
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2258 ;;Total ram usage:        0 bytes
  2259 ;; Hardware stack levels used:    1
  2260 ;; Hardware stack levels required when called:    3
  2261 ;; This function calls:
  2262 ;;		Nothing
  2263 ;; This function is called by:
  2264 ;;		_main
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268                           	psect	text16
  2269  0009F2                     __ptext16:
  2270                           	opt stack 0
  2271  0009F2                     _GPIO_Config:
  2272                           	opt stack 27
  2273                           
  2274                           ;GPIO.c: 41: TRISE &= 0x1f;
  2275                           
  2276                           ;incstack = 0
  2277  0009F2  0E1F               	movlw	31
  2278  0009F4  1696               	andwf	3990,f,c	;volatile
  2279                           
  2280                           ;GPIO.c: 43: RE5 = 0;
  2281  0009F6  9A84               	bcf	3972,5,c	;volatile
  2282                           
  2283                           ;GPIO.c: 44: RE6 = 0;
  2284  0009F8  9C84               	bcf	3972,6,c	;volatile
  2285                           
  2286                           ;GPIO.c: 45: RE7 = 0;
  2287  0009FA  9E84               	bcf	3972,7,c	;volatile
  2288  0009FC  0012               	return		;funcret
  2289  0009FE                     __end_of_GPIO_Config:
  2290                           	opt stack 0
  2291                           tblptru	equ	0xFF8
  2292                           tblptrh	equ	0xFF7
  2293                           tblptrl	equ	0xFF6
  2294                           tablat	equ	0xFF5
  2295                           intcon	equ	0xFF2
  2296                           postinc0	equ	0xFEE
  2297                           wreg	equ	0xFE8
  2298                           postdec1	equ	0xFE5
  2299                           fsr1l	equ	0xFE1
  2300                           status	equ	0xFD8
  2301                           
  2302 ;; *************** function _ConvertADC *****************
  2303 ;; Defined at:
  2304 ;;		line 22 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;		None
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;		None
  2309 ;; Return value:  Size  Location     Type
  2310 ;;                  2   10[None  ] int 
  2311 ;; Registers used:
  2312 ;;		None
  2313 ;; Tracked objects:
  2314 ;;		On entry : 0/0
  2315 ;;		On exit  : 0/0
  2316 ;;		Unchanged: 0/0
  2317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2322 ;;Total ram usage:        0 bytes
  2323 ;; Hardware stack levels used:    1
  2324 ;; Hardware stack levels required when called:    3
  2325 ;; This function calls:
  2326 ;;		Nothing
  2327 ;; This function is called by:
  2328 ;;		_main
  2329 ;; This function uses a non-reentrant model
  2330 ;;
  2331                           
  2332                           	psect	text17
  2333  000A08                     __ptext17:
  2334                           	opt stack 0
  2335  000A08                     _ConvertADC:
  2336                           	opt stack 27
  2337                           
  2338                           ;incstack = 0
  2339  000A08  82C2               	bsf	4034,1,c	;volatile
  2340  000A0A  0012               	return		;funcret
  2341  000A0C                     __end_of_ConvertADC:
  2342                           	opt stack 0
  2343                           tblptru	equ	0xFF8
  2344                           tblptrh	equ	0xFF7
  2345                           tblptrl	equ	0xFF6
  2346                           tablat	equ	0xFF5
  2347                           intcon	equ	0xFF2
  2348                           postinc0	equ	0xFEE
  2349                           wreg	equ	0xFE8
  2350                           postdec1	equ	0xFE5
  2351                           fsr1l	equ	0xFE1
  2352                           status	equ	0xFD8
  2353                           
  2354 ;; *************** function _BusyADC *****************
  2355 ;; Defined at:
  2356 ;;		line 26 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  2357 ;; Parameters:    Size  Location     Type
  2358 ;;		None
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;		None
  2361 ;; Return value:  Size  Location     Type
  2362 ;;                  2   23[COMRAM] int 
  2363 ;; Registers used:
  2364 ;;		wreg
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2370 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2373 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2374 ;;Total ram usage:        2 bytes
  2375 ;; Hardware stack levels used:    1
  2376 ;; Hardware stack levels required when called:    3
  2377 ;; This function calls:
  2378 ;;		Nothing
  2379 ;; This function is called by:
  2380 ;;		_main
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           
  2384                           	psect	text18
  2385  0009E4                     __ptext18:
  2386                           	opt stack 0
  2387  0009E4                     _BusyADC:
  2388                           	opt stack 27
  2389                           
  2390                           ;incstack = 0
  2391  0009E4  6A19               	clrf	?_BusyADC+1,c
  2392  0009E6  6A18               	clrf	?_BusyADC,c
  2393  0009E8  A2C2               	btfss	4034,1,c	;volatile
  2394  0009EA  D001               	bra	u865
  2395  0009EC  2A18               	incf	?_BusyADC,f,c
  2396  0009EE                     u865:
  2397  0009EE  0012               	return	
  2398  0009F0  0012               	return		;funcret
  2399  0009F2                     __end_of_BusyADC:
  2400                           	opt stack 0
  2401                           tblptru	equ	0xFF8
  2402                           tblptrh	equ	0xFF7
  2403                           tblptrl	equ	0xFF6
  2404                           tablat	equ	0xFF5
  2405                           intcon	equ	0xFF2
  2406                           postinc0	equ	0xFEE
  2407                           wreg	equ	0xFE8
  2408                           postdec1	equ	0xFE5
  2409                           fsr1l	equ	0xFE1
  2410                           status	equ	0xFD8
  2411                           
  2412 ;; *************** function _Sys_Cyc *****************
  2413 ;; Defined at:
  2414 ;;		line 93 in file "_01_USER/My_Timer.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;		None
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;		None
  2419 ;; Return value:  Size  Location     Type
  2420 ;;		None               void
  2421 ;; Registers used:
  2422 ;;		wreg, status,2, status,0, cstack
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2432 ;;Total ram usage:       14 bytes
  2433 ;; Hardware stack levels used:    1
  2434 ;; Hardware stack levels required when called:    2
  2435 ;; This function calls:
  2436 ;;		_Key_FSM_Scan
  2437 ;;		___llmod
  2438 ;;		i2_SetTimer0
  2439 ;; This function is called by:
  2440 ;;		Interrupt level 2
  2441 ;; This function uses a non-reentrant model
  2442 ;;
  2443                           
  2444                           	psect	intcode
  2445  000008                     __pintcode:
  2446                           	opt stack 0
  2447  000008                     _Sys_Cyc:
  2448                           	opt stack 24
  2449                           
  2450                           ;incstack = 0
  2451  000008  CFFA F00A          	movff	pclath,??_Sys_Cyc
  2452  00000C  CFFB F00B          	movff	pclatu,??_Sys_Cyc+1
  2453  000010  CFE9 F00C          	movff	fsr0l,??_Sys_Cyc+2
  2454  000014  CFEA F00D          	movff	fsr0h,??_Sys_Cyc+3
  2455  000018  CFE1 F00E          	movff	fsr1l,??_Sys_Cyc+4
  2456  00001C  CFE2 F00F          	movff	fsr1h,??_Sys_Cyc+5
  2457  000020  CFD9 F010          	movff	fsr2l,??_Sys_Cyc+6
  2458  000024  CFDA F011          	movff	fsr2h,??_Sys_Cyc+7
  2459  000028  CFF3 F012          	movff	prodl,??_Sys_Cyc+8
  2460  00002C  CFF4 F013          	movff	prodh,??_Sys_Cyc+9
  2461  000030  CFF6 F014          	movff	tblptrl,??_Sys_Cyc+10
  2462  000034  CFF7 F015          	movff	tblptrh,??_Sys_Cyc+11
  2463  000038  CFF8 F016          	movff	tblptru,??_Sys_Cyc+12
  2464  00003C  CFF5 F017          	movff	tablat,??_Sys_Cyc+13
  2465                           
  2466                           ;My_Timer.c: 95: static unsigned char t = 0;
  2467                           ;My_Timer.c: 96: if(TMR0IF && TMR0IE)
  2468  000040  B4F2               	btfsc	intcon,2,c	;volatile
  2469  000042  AAF2               	btfss	intcon,5,c	;volatile
  2470  000044  D04E               	goto	i2l194
  2471                           
  2472                           ;My_Timer.c: 97: {
  2473                           ;My_Timer.c: 98: if( Timer_Cyc%50 == 0 )
  2474  000046  C025  F001         	movff	_Timer_Cyc,___llmod@dividend
  2475  00004A  C026  F002         	movff	_Timer_Cyc+1,___llmod@dividend+1
  2476  00004E  C027  F003         	movff	_Timer_Cyc+2,___llmod@dividend+2
  2477  000052  C028  F004         	movff	_Timer_Cyc+3,___llmod@dividend+3
  2478  000056  0E32               	movlw	50
  2479  000058  6E05               	movwf	___llmod@divisor,c
  2480  00005A  0E00               	movlw	0
  2481  00005C  6E06               	movwf	___llmod@divisor+1,c
  2482  00005E  0E00               	movlw	0
  2483  000060  6E07               	movwf	___llmod@divisor+2,c
  2484  000062  0E00               	movlw	0
  2485  000064  6E08               	movwf	___llmod@divisor+3,c
  2486  000066  EC70  F003         	call	___llmod	;wreg free
  2487  00006A  5001               	movf	?___llmod,w,c
  2488  00006C  1002               	iorwf	?___llmod+1,w,c
  2489  00006E  1003               	iorwf	?___llmod+2,w,c
  2490  000070  1004               	iorwf	?___llmod+3,w,c
  2491  000072  A4D8               	btfss	status,2,c
  2492  000074  D00F               	goto	i2l1860
  2493                           
  2494                           ;My_Timer.c: 99: {
  2495                           ;My_Timer.c: 100: t = ( t + 1 ) % 2;
  2496  000076  2829               	incf	Sys_Cyc@t,w,c
  2497  000078  0B01               	andlw	1
  2498  00007A  6E29               	movwf	Sys_Cyc@t,c
  2499                           
  2500                           ;My_Timer.c: 101: if(t) { PORTEbits.RE7=0; if( LED2_switch ) PORTEbits.RE6=0;}
  2501  00007C  5029               	movf	Sys_Cyc@t,w,c
  2502  00007E  B4D8               	btfsc	status,2,c
  2503  000080  D006               	goto	i2l191
  2504  000082  9E84               	bcf	3972,7,c	;volatile
  2505  000084  502A               	movf	_LED2_switch,w,c
  2506  000086  B4D8               	btfsc	status,2,c
  2507  000088  D005               	goto	i2l1860
  2508  00008A  9C84               	bcf	3972,6,c	;volatile
  2509  00008C  D003               	goto	i2l1860
  2510  00008E                     i2l191:
  2511                           
  2512                           ;My_Timer.c: 102: else { PORTEbits.RE7=1; PORTEbits.RE6=1; }
  2513  00008E  8E84               	bsf	3972,7,c	;volatile
  2514  000090  8C84               	bsf	3972,6,c	;volatile
  2515  000092  D000               	goto	i2l1860
  2516  000094                     i2l1860:
  2517                           
  2518                           ;My_Timer.c: 103: }
  2519                           ;My_Timer.c: 107: Key_FSM_Scan();
  2520  000094  EC63  F002         	call	_Key_FSM_Scan	;wreg free
  2521                           
  2522                           ;My_Timer.c: 108: SetTimer0(78);
  2523  000098  0E00               	movlw	0
  2524  00009A  6E02               	movwf	i2SetTimer0@_tmr+1,c
  2525  00009C  0E4E               	movlw	78
  2526  00009E  6E01               	movwf	i2SetTimer0@_tmr,c
  2527  0000A0  EC3F  F004         	call	i2_SetTimer0	;wreg free
  2528                           
  2529                           ;My_Timer.c: 109: Timer_Cyc = (Timer_Cyc+1) % 1000000000;
  2530  0000A4  0E01               	movlw	1
  2531  0000A6  2425               	addwf	_Timer_Cyc,w,c
  2532  0000A8  6E01               	movwf	___llmod@dividend,c
  2533  0000AA  0E00               	movlw	0
  2534  0000AC  2026               	addwfc	_Timer_Cyc+1,w,c
  2535  0000AE  6E02               	movwf	___llmod@dividend+1,c
  2536  0000B0  0E00               	movlw	0
  2537  0000B2  2027               	addwfc	_Timer_Cyc+2,w,c
  2538  0000B4  6E03               	movwf	___llmod@dividend+2,c
  2539  0000B6  0E00               	movlw	0
  2540  0000B8  2028               	addwfc	_Timer_Cyc+3,w,c
  2541  0000BA  6E04               	movwf	___llmod@dividend+3,c
  2542  0000BC  0E00               	movlw	0
  2543  0000BE  6E05               	movwf	___llmod@divisor,c
  2544  0000C0  0ECA               	movlw	202
  2545  0000C2  6E06               	movwf	___llmod@divisor+1,c
  2546  0000C4  0E9A               	movlw	154
  2547  0000C6  6E07               	movwf	___llmod@divisor+2,c
  2548  0000C8  0E3B               	movlw	59
  2549  0000CA  6E08               	movwf	___llmod@divisor+3,c
  2550  0000CC  EC70  F003         	call	___llmod	;wreg free
  2551  0000D0  C001  F025         	movff	?___llmod,_Timer_Cyc
  2552  0000D4  C002  F026         	movff	?___llmod+1,_Timer_Cyc+1
  2553  0000D8  C003  F027         	movff	?___llmod+2,_Timer_Cyc+2
  2554  0000DC  C004  F028         	movff	?___llmod+3,_Timer_Cyc+3
  2555  0000E0  D000               	goto	i2l194
  2556  0000E2                     i2l194:
  2557  0000E2  C017  FFF5         	movff	??_Sys_Cyc+13,tablat
  2558  0000E6  C016  FFF8         	movff	??_Sys_Cyc+12,tblptru
  2559  0000EA  C015  FFF7         	movff	??_Sys_Cyc+11,tblptrh
  2560  0000EE  C014  FFF6         	movff	??_Sys_Cyc+10,tblptrl
  2561  0000F2  C013  FFF4         	movff	??_Sys_Cyc+9,prodh
  2562  0000F6  C012  FFF3         	movff	??_Sys_Cyc+8,prodl
  2563  0000FA  C011  FFDA         	movff	??_Sys_Cyc+7,fsr2h
  2564  0000FE  C010  FFD9         	movff	??_Sys_Cyc+6,fsr2l
  2565  000102  C00F  FFE2         	movff	??_Sys_Cyc+5,fsr1h
  2566  000106  C00E  FFE1         	movff	??_Sys_Cyc+4,fsr1l
  2567  00010A  C00D  FFEA         	movff	??_Sys_Cyc+3,fsr0h
  2568  00010E  C00C  FFE9         	movff	??_Sys_Cyc+2,fsr0l
  2569  000112  C00B  FFFB         	movff	??_Sys_Cyc+1,pclatu
  2570  000116  C00A  FFFA         	movff	??_Sys_Cyc,pclath
  2571  00011A  0011               	retfie		f
  2572  00011C                     __end_of_Sys_Cyc:
  2573                           	opt stack 0
  2574                           pclatu	equ	0xFFB
  2575                           pclath	equ	0xFFA
  2576                           tblptru	equ	0xFF8
  2577                           tblptrh	equ	0xFF7
  2578                           tblptrl	equ	0xFF6
  2579                           tablat	equ	0xFF5
  2580                           prodh	equ	0xFF4
  2581                           prodl	equ	0xFF3
  2582                           intcon	equ	0xFF2
  2583                           postinc0	equ	0xFEE
  2584                           fsr0h	equ	0xFEA
  2585                           fsr0l	equ	0xFE9
  2586                           wreg	equ	0xFE8
  2587                           postdec1	equ	0xFE5
  2588                           fsr1h	equ	0xFE2
  2589                           fsr1l	equ	0xFE1
  2590                           fsr2h	equ	0xFDA
  2591                           fsr2l	equ	0xFD9
  2592                           status	equ	0xFD8
  2593                           
  2594 ;; *************** function i2_SetTimer0 *****************
  2595 ;; Defined at:
  2596 ;;		line 74 in file "_01_USER/My_Timer.c"
  2597 ;; Parameters:    Size  Location     Type
  2598 ;;  _tmr            2    0[COMRAM] unsigned int 
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;		None
  2601 ;; Return value:  Size  Location     Type
  2602 ;;		None               void
  2603 ;; Registers used:
  2604 ;;		wreg, status,2, status,0
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2610 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2612 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2613 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2614 ;;Total ram usage:        4 bytes
  2615 ;; Hardware stack levels used:    1
  2616 ;; This function calls:
  2617 ;;		Nothing
  2618 ;; This function is called by:
  2619 ;;		_Sys_Cyc
  2620 ;; This function uses a non-reentrant model
  2621 ;;
  2622                           
  2623                           	psect	text20
  2624  00087E                     __ptext20:
  2625                           	opt stack 0
  2626  00087E                     i2_SetTimer0:
  2627                           	opt stack 25
  2628                           
  2629                           ;My_Timer.c: 76: if(_tmr > 0xffff) _tmr = 0xffff;
  2630                           
  2631                           ;incstack = 0
  2632  00087E  D003               	goto	i2l1816
  2633  000880  6801               	setf	i2SetTimer0@_tmr,c
  2634  000882  6802               	setf	i2SetTimer0@_tmr+1,c
  2635  000884  D000               	goto	i2l1816
  2636  000886                     i2l1816:
  2637                           
  2638                           ;My_Timer.c: 77: _tmr=0xffff-_tmr;
  2639  000886  C001  F003         	movff	i2SetTimer0@_tmr,??i2_SetTimer0
  2640  00088A  C002  F004         	movff	i2SetTimer0@_tmr+1,??i2_SetTimer0+1
  2641  00088E  1E03               	comf	??i2_SetTimer0,f,c
  2642  000890  1E04               	comf	??i2_SetTimer0+1,f,c
  2643  000892  4A03               	infsnz	??i2_SetTimer0,f,c
  2644  000894  2A04               	incf	??i2_SetTimer0+1,f,c
  2645  000896  0EFF               	movlw	255
  2646  000898  2403               	addwf	??i2_SetTimer0,w,c
  2647  00089A  6E01               	movwf	i2SetTimer0@_tmr,c
  2648  00089C  0EFF               	movlw	255
  2649  00089E  2004               	addwfc	??i2_SetTimer0+1,w,c
  2650  0008A0  6E02               	movwf	i2SetTimer0@_tmr+1,c
  2651                           
  2652                           ;My_Timer.c: 78: TMR0H = _tmr/256;
  2653  0008A2  5002               	movf	i2SetTimer0@_tmr+1,w,c
  2654  0008A4  6ED7               	movwf	4055,c	;volatile
  2655                           
  2656                           ;My_Timer.c: 79: TMR0L = _tmr%256;
  2657  0008A6  C001  FFD6         	movff	i2SetTimer0@_tmr,4054	;volatile
  2658                           
  2659                           ;My_Timer.c: 80: TMR0IF = 0;
  2660  0008AA  94F2               	bcf	intcon,2,c	;volatile
  2661  0008AC  0012               	return		;funcret
  2662  0008AE                     __end_ofi2_SetTimer0:
  2663                           	opt stack 0
  2664                           pclatu	equ	0xFFB
  2665                           pclath	equ	0xFFA
  2666                           tblptru	equ	0xFF8
  2667                           tblptrh	equ	0xFF7
  2668                           tblptrl	equ	0xFF6
  2669                           tablat	equ	0xFF5
  2670                           prodh	equ	0xFF4
  2671                           prodl	equ	0xFF3
  2672                           intcon	equ	0xFF2
  2673                           postinc0	equ	0xFEE
  2674                           fsr0h	equ	0xFEA
  2675                           fsr0l	equ	0xFE9
  2676                           wreg	equ	0xFE8
  2677                           postdec1	equ	0xFE5
  2678                           fsr1h	equ	0xFE2
  2679                           fsr1l	equ	0xFE1
  2680                           fsr2h	equ	0xFDA
  2681                           fsr2l	equ	0xFD9
  2682                           status	equ	0xFD8
  2683                           
  2684 ;; *************** function ___llmod *****************
  2685 ;; Defined at:
  2686 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;  dividend        4    0[COMRAM] unsigned long 
  2689 ;;  divisor         4    4[COMRAM] unsigned long 
  2690 ;; Auto vars:     Size  Location     Type
  2691 ;;  counter         1    8[COMRAM] unsigned char 
  2692 ;; Return value:  Size  Location     Type
  2693 ;;                  4    0[COMRAM] unsigned long 
  2694 ;; Registers used:
  2695 ;;		wreg, status,2, status,0
  2696 ;; Tracked objects:
  2697 ;;		On entry : 0/0
  2698 ;;		On exit  : 0/0
  2699 ;;		Unchanged: 0/0
  2700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2701 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2702 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2704 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2705 ;;Total ram usage:        9 bytes
  2706 ;; Hardware stack levels used:    1
  2707 ;; This function calls:
  2708 ;;		Nothing
  2709 ;; This function is called by:
  2710 ;;		_Sys_Cyc
  2711 ;; This function uses a non-reentrant model
  2712 ;;
  2713                           
  2714                           	psect	text21
  2715  0006E0                     __ptext21:
  2716                           	opt stack 0
  2717  0006E0                     ___llmod:
  2718                           	opt stack 25
  2719                           
  2720                           ;incstack = 0
  2721  0006E0  5005               	movf	___llmod@divisor,w,c
  2722  0006E2  1006               	iorwf	___llmod@divisor+1,w,c
  2723  0006E4  1007               	iorwf	___llmod@divisor+2,w,c
  2724  0006E6  1008               	iorwf	___llmod@divisor+3,w,c
  2725  0006E8  B4D8               	btfsc	status,2,c
  2726  0006EA  D029               	goto	i2l832
  2727  0006EC  0E01               	movlw	1
  2728  0006EE  6E09               	movwf	___llmod@counter,c
  2729  0006F0  D007               	goto	i2l1802
  2730  0006F2                     i2l1800:
  2731  0006F2  90D8               	bcf	status,0,c
  2732  0006F4  3605               	rlcf	___llmod@divisor,f,c
  2733  0006F6  3606               	rlcf	___llmod@divisor+1,f,c
  2734  0006F8  3607               	rlcf	___llmod@divisor+2,f,c
  2735  0006FA  3608               	rlcf	___llmod@divisor+3,f,c
  2736  0006FC  2A09               	incf	___llmod@counter,f,c
  2737  0006FE  D000               	goto	i2l1802
  2738  000700                     i2l1802:
  2739  000700  BE08               	btfsc	___llmod@divisor+3,7,c
  2740  000702  D002               	goto	i2l1804
  2741  000704  D7F6               	goto	i2l1800
  2742  000706  D000               	goto	i2l1804
  2743  000708                     i2l1804:
  2744  000708  5005               	movf	___llmod@divisor,w,c
  2745  00070A  5C01               	subwf	___llmod@dividend,w,c
  2746  00070C  5006               	movf	___llmod@divisor+1,w,c
  2747  00070E  5802               	subwfb	___llmod@dividend+1,w,c
  2748  000710  5007               	movf	___llmod@divisor+2,w,c
  2749  000712  5803               	subwfb	___llmod@dividend+2,w,c
  2750  000714  5008               	movf	___llmod@divisor+3,w,c
  2751  000716  5804               	subwfb	___llmod@dividend+3,w,c
  2752  000718  A0D8               	btfss	status,0,c
  2753  00071A  D009               	goto	i2l1808
  2754  00071C  5005               	movf	___llmod@divisor,w,c
  2755  00071E  5E01               	subwf	___llmod@dividend,f,c
  2756  000720  5006               	movf	___llmod@divisor+1,w,c
  2757  000722  5A02               	subwfb	___llmod@dividend+1,f,c
  2758  000724  5007               	movf	___llmod@divisor+2,w,c
  2759  000726  5A03               	subwfb	___llmod@dividend+2,f,c
  2760  000728  5008               	movf	___llmod@divisor+3,w,c
  2761  00072A  5A04               	subwfb	___llmod@dividend+3,f,c
  2762  00072C  D000               	goto	i2l1808
  2763  00072E                     i2l1808:
  2764  00072E  90D8               	bcf	status,0,c
  2765  000730  3208               	rrcf	___llmod@divisor+3,f,c
  2766  000732  3207               	rrcf	___llmod@divisor+2,f,c
  2767  000734  3206               	rrcf	___llmod@divisor+1,f,c
  2768  000736  3205               	rrcf	___llmod@divisor,f,c
  2769  000738  2E09               	decfsz	___llmod@counter,f,c
  2770  00073A  D7E6               	goto	i2l1804
  2771  00073C  D000               	goto	i2l832
  2772  00073E                     i2l832:
  2773  00073E  C001  F001         	movff	___llmod@dividend,?___llmod
  2774  000742  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  2775  000746  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  2776  00074A  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  2777  00074E  0012               	return		;funcret
  2778  000750                     __end_of___llmod:
  2779                           	opt stack 0
  2780                           pclatu	equ	0xFFB
  2781                           pclath	equ	0xFFA
  2782                           tblptru	equ	0xFF8
  2783                           tblptrh	equ	0xFF7
  2784                           tblptrl	equ	0xFF6
  2785                           tablat	equ	0xFF5
  2786                           prodh	equ	0xFF4
  2787                           prodl	equ	0xFF3
  2788                           intcon	equ	0xFF2
  2789                           postinc0	equ	0xFEE
  2790                           fsr0h	equ	0xFEA
  2791                           fsr0l	equ	0xFE9
  2792                           wreg	equ	0xFE8
  2793                           postdec1	equ	0xFE5
  2794                           fsr1h	equ	0xFE2
  2795                           fsr1l	equ	0xFE1
  2796                           fsr2h	equ	0xFDA
  2797                           fsr2l	equ	0xFD9
  2798                           status	equ	0xFD8
  2799                           
  2800 ;; *************** function _Key_FSM_Scan *****************
  2801 ;; Defined at:
  2802 ;;		line 75 in file "_01_USER/Key.c"
  2803 ;; Parameters:    Size  Location     Type
  2804 ;;		None
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;		None
  2807 ;; Return value:  Size  Location     Type
  2808 ;;		None               void
  2809 ;; Registers used:
  2810 ;;		wreg, status,2, status,0, cstack
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2820 ;;Total ram usage:        0 bytes
  2821 ;; Hardware stack levels used:    1
  2822 ;; Hardware stack levels required when called:    1
  2823 ;; This function calls:
  2824 ;;		_Key_Scan
  2825 ;; This function is called by:
  2826 ;;		_Sys_Cyc
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           
  2830                           	psect	text22
  2831  0004C6                     __ptext22:
  2832                           	opt stack 0
  2833  0004C6                     _Key_FSM_Scan:
  2834                           	opt stack 24
  2835                           
  2836                           ;Key.c: 77: Key_Scan();
  2837                           
  2838                           ;incstack = 0
  2839  0004C6  EC57  F004         	call	_Key_Scan	;wreg free
  2840                           
  2841                           ;Key.c: 78: if( Local_Key_FSM.key_state & 0x01 ) Local_Key_FSM.key[0]++;
  2842  0004CA  A02B               	btfss	_Local_Key_FSM,0,c	;volatile
  2843  0004CC  D002               	goto	i2l1318
  2844  0004CE  2A31               	incf	_Local_Key_FSM+6,f,c	;volatile
  2845  0004D0  D000               	goto	i2l1318
  2846  0004D2                     i2l1318:
  2847                           
  2848                           ;Key.c: 79: if( Local_Key_FSM.key_state & 0x02 ) Local_Key_FSM.key[1]++;
  2849  0004D2  A22B               	btfss	_Local_Key_FSM,1,c	;volatile
  2850  0004D4  D002               	goto	i2l1322
  2851  0004D6  2A32               	incf	_Local_Key_FSM+7,f,c	;volatile
  2852  0004D8  D000               	goto	i2l1322
  2853  0004DA                     i2l1322:
  2854                           
  2855                           ;Key.c: 80: if( Local_Key_FSM.key_state & 0x04 ) Local_Key_FSM.key[2]++;
  2856  0004DA  A42B               	btfss	_Local_Key_FSM,2,c	;volatile
  2857  0004DC  D002               	goto	i2l1326
  2858  0004DE  2A33               	incf	_Local_Key_FSM+8,f,c	;volatile
  2859  0004E0  D000               	goto	i2l1326
  2860  0004E2                     i2l1326:
  2861                           
  2862                           ;Key.c: 81: if( Local_Key_FSM.key_state & 0x08 ) Local_Key_FSM.key[3]++;
  2863  0004E2  A62B               	btfss	_Local_Key_FSM,3,c	;volatile
  2864  0004E4  D002               	goto	i2l1330
  2865  0004E6  2A34               	incf	_Local_Key_FSM+9,f,c	;volatile
  2866  0004E8  D000               	goto	i2l1330
  2867  0004EA                     i2l1330:
  2868                           
  2869                           ;Key.c: 82: if( Local_Key_FSM.key_state & 0x10 ) Local_Key_FSM.key[4]++;
  2870  0004EA  A82B               	btfss	_Local_Key_FSM,4,c	;volatile
  2871  0004EC  D002               	goto	i2l1334
  2872  0004EE  2A35               	incf	_Local_Key_FSM+10,f,c	;volatile
  2873  0004F0  D000               	goto	i2l1334
  2874  0004F2                     i2l1334:
  2875                           
  2876                           ;Key.c: 84: if( Local_Key_FSM.key_state == 0x00 )
  2877  0004F2  502B               	movf	_Local_Key_FSM,w,c	;volatile
  2878  0004F4  A4D8               	btfss	status,2,c
  2879  0004F6  D00B               	goto	i2l1338
  2880                           
  2881                           ;Key.c: 85: {
  2882                           ;Key.c: 86: Local_Key_FSM.key[0] = 0;
  2883  0004F8  0E00               	movlw	0
  2884  0004FA  6E31               	movwf	_Local_Key_FSM+6,c	;volatile
  2885                           
  2886                           ;Key.c: 87: Local_Key_FSM.key[1] = 0;
  2887  0004FC  0E00               	movlw	0
  2888  0004FE  6E32               	movwf	_Local_Key_FSM+7,c	;volatile
  2889                           
  2890                           ;Key.c: 88: Local_Key_FSM.key[2] = 0;
  2891  000500  0E00               	movlw	0
  2892  000502  6E33               	movwf	_Local_Key_FSM+8,c	;volatile
  2893                           
  2894                           ;Key.c: 89: Local_Key_FSM.key[3] = 0;
  2895  000504  0E00               	movlw	0
  2896  000506  6E34               	movwf	_Local_Key_FSM+9,c	;volatile
  2897                           
  2898                           ;Key.c: 90: Local_Key_FSM.key[4] = 0;
  2899  000508  0E00               	movlw	0
  2900  00050A  6E35               	movwf	_Local_Key_FSM+10,c	;volatile
  2901                           
  2902                           ;Key.c: 91: }
  2903  00050C  0012               	return	
  2904  00050E                     i2l1338:
  2905                           
  2906                           ;Key.c: 92: else
  2907                           ;Key.c: 93: {
  2908                           ;Key.c: 95: if( Local_Key_FSM.key[0] < 5 ) Local_Key_FSM.key_FSM[0] = 0x00;
  2909  00050E  0E05               	movlw	5
  2910  000510  6031               	cpfslt	_Local_Key_FSM+6,c	;volatile
  2911  000512  D002               	goto	i2l1342
  2912  000514  0E00               	movlw	0
  2913  000516  D006               	goto	L5
  2914  000518                     i2l1342:
  2915                           
  2916                           ;Key.c: 96: else if( Local_Key_FSM.key[0] < 50 ) Local_Key_FSM.key_FSM[0] = 0x01;
  2917  000518  0E32               	movlw	50
  2918  00051A  6031               	cpfslt	_Local_Key_FSM+6,c	;volatile
  2919  00051C  D002               	goto	i2l1346
  2920  00051E  0E01               	movlw	1
  2921  000520  D001               	goto	L5
  2922  000522                     i2l1346:
  2923                           
  2924                           ;Key.c: 97: else Local_Key_FSM.key_FSM[0] = 0x03;
  2925  000522  0E03               	movlw	3
  2926  000524                     L5:
  2927  000524  6E2C               	movwf	_Local_Key_FSM+1,c	;volatile
  2928  000526  D000               	goto	i2l1348
  2929  000528                     i2l1348:
  2930                           
  2931                           ;Key.c: 99: if( Local_Key_FSM.key[1] < 5 ) Local_Key_FSM.key_FSM[1] = 0x00;
  2932  000528  0E05               	movlw	5
  2933  00052A  6032               	cpfslt	_Local_Key_FSM+7,c	;volatile
  2934  00052C  D002               	goto	i2l1352
  2935  00052E  0E00               	movlw	0
  2936  000530  D006               	goto	L7
  2937  000532                     i2l1352:
  2938                           
  2939                           ;Key.c: 100: else if( Local_Key_FSM.key[1] < 50 ) Local_Key_FSM.key_FSM[1] = 0x01;
  2940  000532  0E32               	movlw	50
  2941  000534  6032               	cpfslt	_Local_Key_FSM+7,c	;volatile
  2942  000536  D002               	goto	i2l1356
  2943  000538  0E01               	movlw	1
  2944  00053A  D001               	goto	L7
  2945  00053C                     i2l1356:
  2946                           
  2947                           ;Key.c: 101: else Local_Key_FSM.key_FSM[1] = 0x03;
  2948  00053C  0E03               	movlw	3
  2949  00053E                     L7:
  2950  00053E  6E2D               	movwf	_Local_Key_FSM+2,c	;volatile
  2951  000540  D000               	goto	i2l1358
  2952  000542                     i2l1358:
  2953                           
  2954                           ;Key.c: 103: if( Local_Key_FSM.key[2] < 5 ) Local_Key_FSM.key_FSM[2] = 0x00;
  2955  000542  0E05               	movlw	5
  2956  000544  6033               	cpfslt	_Local_Key_FSM+8,c	;volatile
  2957  000546  D002               	goto	i2l1362
  2958  000548  0E00               	movlw	0
  2959  00054A  D006               	goto	L9
  2960  00054C                     i2l1362:
  2961                           
  2962                           ;Key.c: 104: else if( Local_Key_FSM.key[2] < 50 ) Local_Key_FSM.key_FSM[2] = 0x01;
  2963  00054C  0E32               	movlw	50
  2964  00054E  6033               	cpfslt	_Local_Key_FSM+8,c	;volatile
  2965  000550  D002               	goto	i2l1366
  2966  000552  0E01               	movlw	1
  2967  000554  D001               	goto	L9
  2968  000556                     i2l1366:
  2969                           
  2970                           ;Key.c: 105: else Local_Key_FSM.key_FSM[2] = 0x03;
  2971  000556  0E03               	movlw	3
  2972  000558                     L9:
  2973  000558  6E2E               	movwf	_Local_Key_FSM+3,c	;volatile
  2974  00055A  D000               	goto	i2l1368
  2975  00055C                     i2l1368:
  2976                           
  2977                           ;Key.c: 107: if( Local_Key_FSM.key[3] < 5 ) Local_Key_FSM.key_FSM[3] = 0x00;
  2978  00055C  0E05               	movlw	5
  2979  00055E  6034               	cpfslt	_Local_Key_FSM+9,c	;volatile
  2980  000560  D002               	goto	i2l1372
  2981  000562  0E00               	movlw	0
  2982  000564  D006               	goto	L11
  2983  000566                     i2l1372:
  2984                           
  2985                           ;Key.c: 108: else if( Local_Key_FSM.key[3] < 50 ) Local_Key_FSM.key_FSM[3] = 0x01;
  2986  000566  0E32               	movlw	50
  2987  000568  6034               	cpfslt	_Local_Key_FSM+9,c	;volatile
  2988  00056A  D002               	goto	i2l1376
  2989  00056C  0E01               	movlw	1
  2990  00056E  D001               	goto	L11
  2991  000570                     i2l1376:
  2992                           
  2993                           ;Key.c: 109: else Local_Key_FSM.key_FSM[3] = 0x03;
  2994  000570  0E03               	movlw	3
  2995  000572                     L11:
  2996  000572  6E2F               	movwf	_Local_Key_FSM+4,c	;volatile
  2997  000574  D000               	goto	i2l1378
  2998  000576                     i2l1378:
  2999                           
  3000                           ;Key.c: 111: if( Local_Key_FSM.key[4] < 5 ) Local_Key_FSM.key_FSM[4] = 0x00;
  3001  000576  0E05               	movlw	5
  3002  000578  6035               	cpfslt	_Local_Key_FSM+10,c	;volatile
  3003  00057A  D002               	goto	i2l1382
  3004  00057C  0E00               	movlw	0
  3005  00057E  D006               	goto	L13
  3006  000580                     i2l1382:
  3007                           
  3008                           ;Key.c: 112: else if( Local_Key_FSM.key[4] < 50 ) Local_Key_FSM.key_FSM[4] = 0x01;
  3009  000580  0E32               	movlw	50
  3010  000582  6035               	cpfslt	_Local_Key_FSM+10,c	;volatile
  3011  000584  D002               	goto	i2l1386
  3012  000586  0E01               	movlw	1
  3013  000588  D001               	goto	L13
  3014  00058A                     i2l1386:
  3015                           
  3016                           ;Key.c: 113: else Local_Key_FSM.key_FSM[4] = 0x03;
  3017  00058A  0E03               	movlw	3
  3018  00058C                     L13:
  3019  00058C  6E30               	movwf	_Local_Key_FSM+5,c	;volatile
  3020  00058E  D000               	goto	i2l115
  3021  000590                     i2l115:
  3022                           
  3023                           ;Key.c: 116: Local_Key_FSM.key_group = 0x00;
  3024  000590  0E00               	movlw	0
  3025  000592  6E30               	movwf	_Local_Key_FSM+5,c	;volatile
  3026                           
  3027                           ;Key.c: 117: if( Local_Key_FSM.key_FSM[0] != 0x00 ) Local_Key_FSM.key_group |= 0x01<<0;
  3028  000594  502C               	movf	_Local_Key_FSM+1,w,c	;volatile
  3029  000596  B4D8               	btfsc	status,2,c
  3030  000598  D002               	goto	i2l1390
  3031  00059A  8030               	bsf	_Local_Key_FSM+5,0,c	;volatile
  3032  00059C  D000               	goto	i2l1390
  3033  00059E                     i2l1390:
  3034                           
  3035                           ;Key.c: 118: if( Local_Key_FSM.key_FSM[1] != 0x00 ) Local_Key_FSM.key_group |= 0x01<<1;
  3036  00059E  502D               	movf	_Local_Key_FSM+2,w,c	;volatile
  3037  0005A0  B4D8               	btfsc	status,2,c
  3038  0005A2  D002               	goto	i2l1394
  3039  0005A4  8230               	bsf	_Local_Key_FSM+5,1,c	;volatile
  3040  0005A6  D000               	goto	i2l1394
  3041  0005A8                     i2l1394:
  3042                           
  3043                           ;Key.c: 119: if( Local_Key_FSM.key_FSM[2] != 0x00 ) Local_Key_FSM.key_group |= 0x01<<2;
  3044  0005A8  502E               	movf	_Local_Key_FSM+3,w,c	;volatile
  3045  0005AA  B4D8               	btfsc	status,2,c
  3046  0005AC  D002               	goto	i2l1398
  3047  0005AE  8430               	bsf	_Local_Key_FSM+5,2,c	;volatile
  3048  0005B0  D000               	goto	i2l1398
  3049  0005B2                     i2l1398:
  3050                           
  3051                           ;Key.c: 120: if( Local_Key_FSM.key_FSM[3] != 0x00 ) Local_Key_FSM.key_group |= 0x01<<3;
  3052  0005B2  502F               	movf	_Local_Key_FSM+4,w,c	;volatile
  3053  0005B4  B4D8               	btfsc	status,2,c
  3054  0005B6  D002               	goto	i2l1402
  3055  0005B8  8630               	bsf	_Local_Key_FSM+5,3,c	;volatile
  3056  0005BA  D000               	goto	i2l1402
  3057  0005BC                     i2l1402:
  3058                           
  3059                           ;Key.c: 121: if( Local_Key_FSM.key_FSM[4] != 0x00 ) Local_Key_FSM.key_group |= 0x01<<4;
  3060  0005BC  5030               	movf	_Local_Key_FSM+5,w,c	;volatile
  3061  0005BE  B4D8               	btfsc	status,2,c
  3062  0005C0  0012               	return	
  3063  0005C2  8830               	bsf	_Local_Key_FSM+5,4,c	;volatile
  3064  0005C4  0012               	return	
  3065  0005C6  0012               	return		;funcret
  3066  0005C8                     __end_of_Key_FSM_Scan:
  3067                           	opt stack 0
  3068                           pclatu	equ	0xFFB
  3069                           pclath	equ	0xFFA
  3070                           tblptru	equ	0xFF8
  3071                           tblptrh	equ	0xFF7
  3072                           tblptrl	equ	0xFF6
  3073                           tablat	equ	0xFF5
  3074                           prodh	equ	0xFF4
  3075                           prodl	equ	0xFF3
  3076                           intcon	equ	0xFF2
  3077                           postinc0	equ	0xFEE
  3078                           fsr0h	equ	0xFEA
  3079                           fsr0l	equ	0xFE9
  3080                           wreg	equ	0xFE8
  3081                           postdec1	equ	0xFE5
  3082                           fsr1h	equ	0xFE2
  3083                           fsr1l	equ	0xFE1
  3084                           fsr2h	equ	0xFDA
  3085                           fsr2l	equ	0xFD9
  3086                           status	equ	0xFD8
  3087                           
  3088 ;; *************** function _Key_Scan *****************
  3089 ;; Defined at:
  3090 ;;		line 54 in file "_01_USER/Key.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;		None
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;		None
  3095 ;; Return value:  Size  Location     Type
  3096 ;;		None               void
  3097 ;; Registers used:
  3098 ;;		wreg, status,2, status,0
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3108 ;;Total ram usage:        0 bytes
  3109 ;; Hardware stack levels used:    1
  3110 ;; This function calls:
  3111 ;;		Nothing
  3112 ;; This function is called by:
  3113 ;;		_Key_FSM_Scan
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text23
  3118  0008AE                     __ptext23:
  3119                           	opt stack 0
  3120  0008AE                     _Key_Scan:
  3121                           	opt stack 24
  3122                           
  3123                           ;Key.c: 56: Local_Key_FSM.key_state = 0x00;
  3124                           
  3125                           ;incstack = 0
  3126  0008AE  0E00               	movlw	0
  3127  0008B0  6E2B               	movwf	_Local_Key_FSM,c	;volatile
  3128                           
  3129                           ;Key.c: 58: if( RE3 == 0 ) Local_Key_FSM.key_state |= (0x01 << 0) ;
  3130  0008B2  B684               	btfsc	3972,3,c	;volatile
  3131  0008B4  D002               	goto	i2l1034
  3132  0008B6  802B               	bsf	_Local_Key_FSM,0,c	;volatile
  3133  0008B8  D000               	goto	i2l1034
  3134  0008BA                     i2l1034:
  3135                           
  3136                           ;Key.c: 59: if( RE2 == 0 ) Local_Key_FSM.key_state |= (0x01 << 1) ;
  3137  0008BA  B484               	btfsc	3972,2,c	;volatile
  3138  0008BC  D002               	goto	i2l1038
  3139  0008BE  822B               	bsf	_Local_Key_FSM,1,c	;volatile
  3140  0008C0  D000               	goto	i2l1038
  3141  0008C2                     i2l1038:
  3142                           
  3143                           ;Key.c: 60: if( RD6 == 0 ) Local_Key_FSM.key_state |= (0x01 << 2) ;
  3144  0008C2  BC83               	btfsc	3971,6,c	;volatile
  3145  0008C4  D002               	goto	i2l1042
  3146  0008C6  842B               	bsf	_Local_Key_FSM,2,c	;volatile
  3147  0008C8  D000               	goto	i2l1042
  3148  0008CA                     i2l1042:
  3149                           
  3150                           ;Key.c: 61: if( RE4 == 0 ) Local_Key_FSM.key_state |= (0x01 << 3) ;
  3151  0008CA  B884               	btfsc	3972,4,c	;volatile
  3152  0008CC  D002               	goto	i2l1046
  3153  0008CE  862B               	bsf	_Local_Key_FSM,3,c	;volatile
  3154  0008D0  D000               	goto	i2l1046
  3155  0008D2                     i2l1046:
  3156                           
  3157                           ;Key.c: 62: if( RD7 == 0 ) Local_Key_FSM.key_state |= (0x01 << 4) ;
  3158  0008D2  BE83               	btfsc	3971,7,c	;volatile
  3159  0008D4  0012               	return	
  3160  0008D6  882B               	bsf	_Local_Key_FSM,4,c	;volatile
  3161  0008D8  0012               	return	
  3162  0008DA  0012               	return		;funcret
  3163  0008DC                     __end_of_Key_Scan:
  3164                           	opt stack 0
  3165  0000                     pclatu	equ	0xFFB
  3166                           pclath	equ	0xFFA
  3167                           tblptru	equ	0xFF8
  3168                           tblptrh	equ	0xFF7
  3169                           tblptrl	equ	0xFF6
  3170                           tablat	equ	0xFF5
  3171                           prodh	equ	0xFF4
  3172                           prodl	equ	0xFF3
  3173                           intcon	equ	0xFF2
  3174                           postinc0	equ	0xFEE
  3175                           fsr0h	equ	0xFEA
  3176                           fsr0l	equ	0xFE9
  3177                           wreg	equ	0xFE8
  3178                           postdec1	equ	0xFE5
  3179                           fsr1h	equ	0xFE2
  3180                           fsr1l	equ	0xFE1
  3181                           fsr2h	equ	0xFDA
  3182                           fsr2l	equ	0xFD9
  3183                           status	equ	0xFD8
  3184                           pclatu	equ	0xFFB
  3185                           pclath	equ	0xFFA
  3186                           tblptru	equ	0xFF8
  3187                           tblptrh	equ	0xFF7
  3188                           tblptrl	equ	0xFF6
  3189                           tablat	equ	0xFF5
  3190                           prodh	equ	0xFF4
  3191                           prodl	equ	0xFF3
  3192                           intcon	equ	0xFF2
  3193                           postinc0	equ	0xFEE
  3194                           fsr0h	equ	0xFEA
  3195                           fsr0l	equ	0xFE9
  3196                           wreg	equ	0xFE8
  3197                           postdec1	equ	0xFE5
  3198                           fsr1h	equ	0xFE2
  3199                           fsr1l	equ	0xFE1
  3200                           fsr2h	equ	0xFDA
  3201                           fsr2l	equ	0xFD9
  3202                           status	equ	0xFD8
  3203                           
  3204                           	psect	rparam
  3205  0000                     pclatu	equ	0xFFB
  3206                           pclath	equ	0xFFA
  3207                           tblptru	equ	0xFF8
  3208                           tblptrh	equ	0xFF7
  3209                           tblptrl	equ	0xFF6
  3210                           tablat	equ	0xFF5
  3211                           prodh	equ	0xFF4
  3212                           prodl	equ	0xFF3
  3213                           intcon	equ	0xFF2
  3214                           postinc0	equ	0xFEE
  3215                           fsr0h	equ	0xFEA
  3216                           fsr0l	equ	0xFE9
  3217                           wreg	equ	0xFE8
  3218                           postdec1	equ	0xFE5
  3219                           fsr1h	equ	0xFE2
  3220                           fsr1l	equ	0xFE1
  3221                           fsr2h	equ	0xFDA
  3222                           fsr2l	equ	0xFD9
  3223                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     36      68
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_TM1640_Show_Numbers
    _delay_ms->_delay1ms
    _Timer0_Init->_SetTimer0
    _TM1640_Show_Numbers->___awdiv
    _TM1640_Writer_Dates->_TM1640_Writer_Byte
    _Init_TM1640->_TM1640_Writer_Byte
    _TM1640_Writer_Byte->_TM1640_Delay
    _TM1640_Stop->_TM1640_Delay
    _TM1640_Start->_TM1640_Delay

Critical Paths under _Sys_Cyc in COMRAM

    _Sys_Cyc->___llmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _Sys_Cyc in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Sys_Cyc in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Sys_Cyc in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Sys_Cyc in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Sys_Cyc in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Sys_Cyc in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Sys_Cyc in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Sys_Cyc in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Sys_Cyc in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Sys_Cyc in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Sys_Cyc in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Sys_Cyc in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Sys_Cyc in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Sys_Cyc in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Sys_Cyc in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Sys_Cyc in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4219
                                             34 COMRAM     2     2      0
                            _BusyADC
                         _ConvertADC
                        _GPIO_Config
                        _Init_TM1640
                           _Key_Init
                            _ReadADC
                _TM1640_Show_Numbers
                        _Timer0_Init
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     165
                                             26 COMRAM     2     0      2
                           _delay1ms
 ---------------------------------------------------------------------------------
 (2) _delay1ms                                             3     3      0      90
                                             23 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0     148
                          _SetTimer0
 ---------------------------------------------------------------------------------
 (2) _SetTimer0                                            4     2      2     148
                                             23 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _TM1640_Show_Numbers                                  3     1      2    3702
                                             31 COMRAM     3     1      2
                _TM1640_Writer_Dates
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     720
                                             23 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     406
                                             23 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _TM1640_Writer_Dates                                  2     1      1    2366
                                             27 COMRAM     2     1      1
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
 ---------------------------------------------------------------------------------
 (1) _ReadADC                                              4     2      2       0
                                             23 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Key_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_TM1640                                          0     0      0     180
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
 ---------------------------------------------------------------------------------
 (3) _TM1640_Writer_Byte                                   2     2      0      90
                                             25 COMRAM     2     2      0
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (3) _TM1640_Stop                                          0     0      0      45
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (3) _TM1640_Start                                         0     0      0      45
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (4) _TM1640_Delay                                         2     2      0      45
                                             23 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _BusyADC                                              2     0      2       0
                                             23 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Sys_Cyc                                             14    14      0     465
                                              9 COMRAM    14    14      0
                       _Key_FSM_Scan
                            ___llmod
                        i2_SetTimer0
 ---------------------------------------------------------------------------------
 (6) i2_SetTimer0                                          4     2      2      94
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     371
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (6) _Key_FSM_Scan                                         0     0      0       0
                           _Key_Scan
 ---------------------------------------------------------------------------------
 (7) _Key_Scan                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BusyADC
   _ConvertADC
   _GPIO_Config
   _Init_TM1640
     _TM1640_Start
       _TM1640_Delay
     _TM1640_Stop
       _TM1640_Delay
     _TM1640_Writer_Byte
       _TM1640_Delay
   _Key_Init
   _ReadADC
   _TM1640_Show_Numbers
     _TM1640_Writer_Dates
       _TM1640_Start
         _TM1640_Delay
       _TM1640_Stop
         _TM1640_Delay
       _TM1640_Writer_Byte
         _TM1640_Delay
     ___awdiv
     ___awmod
   _Timer0_Init
     _SetTimer0
   _delay_ms
     _delay1ms

 _Sys_Cyc (ROOT)
   _Key_FSM_Scan
     _Key_Scan
   ___llmod
   i2_SetTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     24      44       1       71.6%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      44      12        0.0%
DATA                 0      0      44       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Dec 05 21:19:59 2015

        ?_TM1640_Show_Numbers 0020                  ?_TM1640_Stop 0001  __size_of_TM1640_Writer_Dates 0022  
               ?_TM1640_Delay 0001                  ___awdiv@sign 001D                   __CFG_BORV$3 000000  
               ?_TM1640_Start 0001                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000                  __CFG_CP4$OFF 000000  
                __CFG_CP5$OFF 000000                  __CFG_CP6$OFF 000000                  __CFG_CP7$OFF 000000  
                         l310 09BC                           l295 07AE                           l296 07C4  
                         l960 09B4                           l962 09B6                           l954 09AC  
                         _GIE 007F97                           l996 07C8                  __CFG_CPB$OFF 000000  
                         _RC3 007C13                           _RC4 007C14                           _RE2 007C22  
                         _RE3 007C23                           _RE4 007C24                           _RD6 007C1E  
                         _RE5 007C25                           _RD7 007C1F                           _RE6 007C26  
                         _RE7 007C27                  __CFG_CPD$OFF 000000                           _PSA 007EAB  
                         u865 09EE                ??_Key_FSM_Scan 0001                  ___awmod@sign 001D  
                         wreg 000FE8                  ?_GPIO_Config 0001                          l1002 07DC  
                        l1020 0812                          l1012 0800                          l1016 080E  
                        l1024 0816                          l1008 07F2                          l1602 0642  
                        l1700 0230                          l1606 0652                          l1630 06A2  
                        l1622 0682                          l1710 026C                          l1702 023C  
                        l1720 02EE                          l1704 0248                          l1642 06D4  
                        l1634 06B8                          l1626 0690                          l1618 0674  
                        l1730 032A                          l1722 02FA                          l1706 0254  
                        l1714 0278                          l1554 0856                          l1580 05F0  
                        l1628 069A                          l1740 03AC                          l1732 0336  
                        l1724 0306                          l1716 02D6                          l1708 0260  
                        l1590 0618                          l1574 05DE                          l1638 06C4  
                        l1750 03E8                          l1742 03B8                          l1734 0342  
                        l1726 0312                          l1718 02E2                          l1670 0136  
                        l1752 03F4                          l1744 03C4                          l1728 031E  
                        l1680 0172                          l1672 0142                          l1586 0606  
                        l1754 0400                          l1746 03D0                          l1762 0424  
                        l1738 034E                          l1682 017E                          l1674 014E  
                        l1690 01A2                          l1834 076A                          l1588 0610  
                        l1756 040C                          l1748 03DC                          l1692 0200  
                        l1684 018A                          l1676 015A                          l1668 012A  
                        l1772 04BC                          l1836 0770                          l1598 0636  
                        l1758 0418                          l1694 020C                          l1686 0196  
                        l1678 0166                          l1766 0480                          l1696 0218  
                        l1768 049C                          l1792 0992                          l1698 0224  
                        l1794 0998                          _T0CS 007EAD                          _T0SE 007EAC  
                        _IPEN 007E87                 ??_Init_TM1640 001C                          _main 0750  
                        fsr0h 000FEA                          fsr1h 000FE2                          fsr0l 000FE9  
                        fsr2h 000FDA                          fsr1l 000FE1                          fsr2l 000FD9  
                        pclat 000FFA                          prodh 000FF4                          prodl 000FF3  
                        start 011C                 __CFG_IESO$OFF 000000                 __CFG_FOSC$HS1 000000  
               __CFG_MCLRE$ON 000000                  ___param_bank 000010               __end_of_BusyADC 09F2  
       ??_TM1640_Show_Numbers 0022               __end_of_ReadADC 09E4                ??_TM1640_Delay 0018  
              ??_TM1640_Start 001A                 __CFG_RETEN$ON 000000                         ?_main 0001  
             __end_of___awdiv 065E               __end_of___awmod 06E0               __end_of_Sys_Cyc 011C  
             ___awdiv@divisor 001A               __end_of___llmod 0750                         _T0PS0 007EA8  
                       _T0PS1 007EA9                         _T0PS2 007EAA                         i2l115 0590  
                       i2l191 008E                         i2l194 00E2                         i2l832 073E  
             ___awdiv@counter 001C                         _TMR0H 000FD7                         _TMR0L 000FD6  
                       _TRISD 000F95                         _TRISE 000F96                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
               __CFG_WRT4$OFF 000000                __CFG_EBRT0$OFF 000000                 __CFG_WRT5$OFF 000000  
              __CFG_EBRT1$OFF 000000                 __CFG_WRT6$OFF 000000                __CFG_EBRT2$OFF 000000  
               __CFG_WRT7$OFF 000000                __CFG_EBRT3$OFF 000000                __CFG_EBRT4$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBRT5$OFF 000000                __CFG_EBRT6$OFF 000000  
              __CFG_EBRT7$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBRTB$OFF 000000                    _ConvertADC 0A08  
               _Local_Key_FSM 002B                         tablat 000FF5                         status 000FD8  
          _TM1640_Writer_Byte 07A6               __initialization 081C           __end_of_Init_TM1640 0902  
                __end_of_main 07A6           ?_TM1640_Writer_Byte 0001              __end_of_Key_Init 0A08  
            __end_of_Key_Scan 08DC                        ??_main 0023                 __activetblptr 000003  
        ??_TM1640_Writer_Byte 001A              ___llmod@dividend 0001                        _ADRESH 000FC4  
                      _ADRESL 000FC3                        _T08BIT 007EAE              ___awdiv@dividend 0018  
                      i2l1042 08CA                        i2l1034 08BA                        i2l1046 08D2  
                      i2l1038 08C2               __CFG_BBSIZ$BB2K 000000                        i2l1402 05BC  
                      i2l1330 04EA                        i2l1322 04DA                        i2l1342 0518  
                      i2l1334 04F2                        i2l1326 04E2                        i2l1318 04D2  
                      i2l1352 0532                        i2l1362 054C                        i2l1346 0522  
                      i2l1338 050E                        i2l1372 0566                        i2l1356 053C  
                      i2l1348 0528                        i2l1390 059E                        i2l1382 0580  
                      i2l1366 0556                        i2l1358 0542                        i2l1376 0570  
                      i2l1368 055C                        i2l1800 06F2                        i2l1394 05A8  
                      i2l1386 058A                        i2l1378 0576                        i2l1802 0700  
                      i2l1804 0708                        i2l1398 05B2                        i2l1808 072E  
                      i2l1816 0886                        i2l1860 0094                 SetTimer0@_tmr 0018  
                      _TMR0IE 007F95                        _TMR0IF 007F92                        _TMR0ON 007EAF  
               TM1640_Delay@i 0019                     ??_BusyADC 001A                     ??_ReadADC 001A  
            __end_of_delay1ms 081C              __end_of_delay_ms 09AA                 ??_Timer0_Init 001C  
      TM1640_Writer_Byte@Date 001A                __CFG_XINST$OFF 000000          __end_of_Key_FSM_Scan 05C8  
      TM1640_Writer_Byte@mask 001B                     ??___awdiv 001C                __CFG_STVREN$ON 000000  
                   ??___awmod 001C                     ??_Sys_Cyc 000A                     ??___llmod 0009  
          __size_of_SetTimer0 0030                        clear_0 0822              ___awdiv@quotient 001E  
             ___awmod@divisor 001A               ___awmod@counter 001C          __size_of_TM1640_Stop 0024  
                __pdataCOMRAM 0035                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8          __size_of_GPIO_Config 000C           _TM1640_Writer_Dates 096E  
                 ?_ConvertADC 0001          __end_of_TM1640_Delay 09C4          __end_of_TM1640_Start 096E  
                  __accesstop 0060       __end_of__initialization 0848                   _Init_TM1640 08DC  
                ?i2_SetTimer0 0001                 ___rparam_used 000001                __pcstackCOMRAM 0001  
        ?_TM1640_Writer_Dates 001C           __end_of_Timer0_Init 0926             __end_of_SetTimer0 087E  
                   ?_Key_Init 0001                     ?_Key_Scan 0001               __CFG_PLLCFG$OFF 000000  
     TM1640_Writer_Dates@Addr 001D       TM1640_Writer_Dates@Date 001C         ??_TM1640_Writer_Dates 001D  
         __size_of_ConvertADC 0004                     ?_delay1ms 0001                     ?_delay_ms 001B  
                  ??_Key_Init 0018                    ??_Key_Scan 0001         __size_of_Key_FSM_Scan 0102  
 __end_of_TM1640_Show_Numbers 04C6                       _BusyADC 09E4                       _ReadADC 09D4  
             __CFG_PWRTEN$OFF 000000                       __Hparam 0000                   _Timer0_Init 0902  
                     __Lparam 0000                       ___awdiv 05C8                       ___awmod 065E  
                     _Sys_Cyc 0008                       ___llmod 06E0                       __pcinit 081C  
                     __ramtop 1000                       __ptext0 0750                       __ptext1 0990  
                     __ptext2 07E4                       __ptext3 0902                       __ptext4 084E  
                     __ptext5 0120                       __ptext6 065E                       __ptext7 05C8  
                     __ptext8 096E                       __ptext9 09D4              ___awmod@dividend 0018  
                  ??_delay1ms 0018         __size_of_TM1640_Delay 001A             __CFG_MSSPMSK$MSK7 000000  
                  ??_delay_ms 001D                  _Key_FSM_Scan 04C6         __size_of_TM1640_Start 0024  
                     main@num 0023          end_of_initialization 0848          __size_ofi2_SetTimer0 0030  
                     postdec1 000FE5                       postinc0 000FEE                  _TM1640_Delay 09AA  
                _TM1640_Start 094A                     _PORTEbits 000F84              TM1640_Delay@Time 0018  
                   _TRISCbits 000F94   __size_of_TM1640_Writer_Byte 003E             __CFG_SOSCSEL$HIGH 000000  
                ??_ConvertADC 0018                  ?_Init_TM1640 0001                 ??_TM1640_Stop 001A  
               __pidataCOMRAM 09C4            __end_of_ConvertADC 0A0C                 ??_GPIO_Config 0018  
         start_initialization 081C               ___llmod@divisor 0005             __size_of_Key_Init 000A  
           __size_of_Key_Scan 002E               ___llmod@counter 0009                     _SetTimer0 084E  
             i2SetTimer0@_tmr 0001                     _Timer_Cyc 0025           __end_of_TM1640_Stop 094A  
                 __pbssCOMRAM 0025             __size_of_delay1ms 0038             __size_of_delay_ms 001A  
         __end_of_GPIO_Config 09FE                      ?_BusyADC 0018                      ?_ReadADC 0018  
 __end_of_TM1640_Writer_Dates 0990                    ?_SetTimer0 0018                  ?_Timer0_Init 0001  
           __CFG_CCP2MX$PORTC 000000                     __pintcode 0008                      ?___awdiv 0018  
                    ?___awmod 0018                      ?_Sys_Cyc 0001                      ?___llmod 0001  
                 _LED2_switch 002A                     delay1ms@a 0018                     delay1ms@b 0019  
                   delay1ms@c 001A                      _PIE1bits 000F9D    TM1640_Show_Numbers@Numbers 0020  
        __size_of_Init_TM1640 0026  __size_of_TM1640_Show_Numbers 03A6                   _TM1640_Stop 0926  
                  _ADCON0bits 000FC2                   _GPIO_Config 09F2                     copy_data0 083C  
                    _Key_Init 09FE                      _Key_Scan 08AE                 ??i2_SetTimer0 0003  
                 ??_SetTimer0 001A              __size_of_BusyADC 000E              __size_of_ReadADC 0010  
                    __Hrparam 0000                      __Lrparam 0000            __CFG_BOREN$SBORDIS 000000  
            __size_of___awdiv 0096              __size_of___awmod 0082              __size_of_Sys_Cyc 0114  
            __size_of___llmod 0070                      Sys_Cyc@t 0029                      _delay1ms 07E4  
  __end_of_TM1640_Writer_Byte 07E4                      _delay_ms 0990                      __ptext10 09FE  
                    __ptext11 08DC                      __ptext20 087E                      __ptext12 07A6  
                    __ptext21 06E0                      __ptext13 0926                      __ptext22 04C6  
                    __ptext14 094A                      __ptext23 08AE                      __ptext15 09AA  
                    __ptext16 09F2                      __ptext17 0A08                      __ptext18 09E4  
      TM1640_Show_Numbers@Num 0022                 __size_of_main 0056           __CFG_RTCOSC$SOSCREF 000000  
        __size_of_Timer0_Init 0024           __end_ofi2_SetTimer0 08AE           __CFG_INTOSCSEL$HIGH 000000  
                 delay_ms@_ms 001B                    _LED_Number 0035            __CFG_WDTEN$SWDTDIS 000000  
                    intlevel2 0000            __CFG_WDTPS$1048576 000000                 ?_Key_FSM_Scan 0001  
         _TM1640_Show_Numbers 0120           __CFG_BORPWR$ZPBORMV 000000                   i2_SetTimer0 087E  
