

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sun Jan 17 20:41:35 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F67K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    59  0000                     
    60                           	psect	smallconst
    61  001000                     __psmallconst:
    62                           	opt stack 0
    63  001000  00                 	db	0
    64  001001                     _LED_Number:
    65                           	opt stack 0
    66  001001  3F                 	db	63
    67  001002  06                 	db	6
    68  001003  5B                 	db	91
    69  001004  4F                 	db	79
    70  001005  66                 	db	102
    71  001006  6D                 	db	109
    72  001007  7D                 	db	125
    73  001008  07                 	db	7
    74  001009  7F                 	db	127
    75  00100A  6F                 	db	111
    76  00100B  77                 	db	119
    77  00100C  7C                 	db	124
    78  00100D  39                 	db	57
    79  00100E  5E                 	db	94
    80  00100F  79                 	db	121
    81  001010  71                 	db	113
    82  001011                     __end_of_LED_Number:
    83                           	opt stack 0
    84  0000                     _ANCON2	set	3875
    85  0000                     _RCREG2	set	3869
    86  0000                     _RCSTA2	set	3874
    87  0000                     _RCSTA2bits	set	3874
    88  0000                     _SPBRG2	set	3870
    89  0000                     _SPBRGH2	set	3871
    90  0000                     _TXREG2	set	3868
    91  0000                     _TXSTA2	set	3873
    92  0000                     _TXSTA2bits	set	3873
    93  0000                     _ADCON0	set	4034
    94  0000                     _ADCON0bits	set	4034
    95  0000                     _ADCON1	set	4033
    96  0000                     _ADCON2	set	4032
    97  0000                     _ADRESH	set	4036
    98  0000                     _ADRESL	set	4035
    99  0000                     _INTCONbits	set	4082
   100  0000                     _PIE1bits	set	3997
   101  0000                     _PIE3bits	set	4003
   102  0000                     _PIR1bits	set	3998
   103  0000                     _PORTEbits	set	3972
   104  0000                     _TMR0H	set	4055
   105  0000                     _TMR0L	set	4054
   106  0000                     _TRISCbits	set	3988
   107  0000                     _TRISD	set	3989
   108  0000                     _TRISE	set	3990
   109  0000                     _TRISGbits	set	3992
   110  0000                     _GIE	set	32663
   111  0000                     _IPEN	set	32391
   112  0000                     _PSA	set	32427
   113  0000                     _RC2IF	set	32037
   114  0000                     _RC3	set	31763
   115  0000                     _RC4	set	31764
   116  0000                     _RD6	set	31774
   117  0000                     _RD7	set	31775
   118  0000                     _RE2	set	31778
   119  0000                     _RE3	set	31779
   120  0000                     _RE4	set	31780
   121  0000                     _RE5	set	31781
   122  0000                     _RE6	set	31782
   123  0000                     _RE7	set	31783
   124  0000                     _RG3	set	31795
   125  0000                     _T08BIT	set	32430
   126  0000                     _T0CS	set	32429
   127  0000                     _T0PS0	set	32424
   128  0000                     _T0PS1	set	32425
   129  0000                     _T0PS2	set	32426
   130  0000                     _T0SE	set	32428
   131  0000                     _TMR0IE	set	32661
   132  0000                     _TMR0IF	set	32658
   133  0000                     _TMR0ON	set	32431
   134                           
   135                           ; #config settings
   136  001011  00                 	db	0	; dummy byte at the end
   137  0000                     
   138                           	psect	cinit
   139  002250                     __pcinit:
   140                           	opt stack 0
   141  002250                     start_initialization:
   142                           	opt stack 0
   143  002250                     __initialization:
   144                           	opt stack 0
   145                           
   146                           ; Clear objects allocated to BANK0 (136 bytes)
   147  002250  EE00  F060         	lfsr	0,__pbssBANK0
   148  002254  0E88               	movlw	136
   149  002256                     clear_0:
   150  002256  6AEE               	clrf	postinc0,c
   151  002258  06E8               	decf	wreg,f,c
   152  00225A  E1FD               	bnz	clear_0
   153                           
   154                           ; Clear objects allocated to COMRAM (18 bytes)
   155  00225C  EE00  F036         	lfsr	0,__pbssCOMRAM
   156  002260  0E12               	movlw	18
   157  002262                     clear_1:
   158  002262  6AEE               	clrf	postinc0,c
   159  002264  06E8               	decf	wreg,f,c
   160  002266  E1FD               	bnz	clear_1
   161  002268                     end_of_initialization:
   162                           	opt stack 0
   163  002268                     __end_of__initialization:
   164                           	opt stack 0
   165  002268  0E00               	movlw	low (__Lsmallconst shr (0+16))
   166  00226A  6EF8               	movwf	tblptru,c
   167  00226C  0E10               	movlw	high __Lsmallconst
   168  00226E  6EF7               	movwf	tblptrh,c
   169  002270  0100               	movlb	0
   170  002272  EF3F  F010         	goto	_main	;jump to C main() function
   171                           tblptru	equ	0xFF8
   172                           tblptrh	equ	0xFF7
   173                           postinc0	equ	0xFEE
   174                           wreg	equ	0xFE8
   175                           
   176                           	psect	bssCOMRAM
   177  000036                     __pbssCOMRAM:
   178                           	opt stack 0
   179  000036                     _Handle_Switch:
   180                           	opt stack 0
   181  000036                     	ds	4
   182  00003A                     _Timer_Cyc:
   183                           	opt stack 0
   184  00003A                     	ds	4
   185  00003E                     _ADC6_Buff:
   186                           	opt stack 0
   187  00003E                     	ds	3
   188  000041                     Pulse_1Khz@_overturn_1Khz:
   189                           	opt stack 0
   190  000041                     	ds	1
   191  000042                     Sys_Cyc@_RS485_Receive_Byte:
   192                           	opt stack 0
   193  000042                     	ds	1
   194  000043                     Sys_Cyc@_flag:
   195                           	opt stack 0
   196  000043                     	ds	1
   197  000044                     Sys_Cyc@_overturn_LED:
   198                           	opt stack 0
   199  000044                     	ds	1
   200  000045                     _LED2_switch:
   201                           	opt stack 0
   202  000045                     	ds	1
   203  000046                     _RS485_Num:
   204                           	opt stack 0
   205  000046                     	ds	1
   206  000047                     _RS485_Receive_Flag:
   207                           	opt stack 0
   208  000047                     	ds	1
   209                           tblptru	equ	0xFF8
   210                           tblptrh	equ	0xFF7
   211                           postinc0	equ	0xFEE
   212                           wreg	equ	0xFE8
   213                           
   214                           	psect	bssBANK0
   215  000060                     __pbssBANK0:
   216                           	opt stack 0
   217  000060                     _ReceiveBuff:
   218                           	opt stack 0
   219  000060                     	ds	10
   220  00006A                     _Handle_Msg:
   221                           	opt stack 0
   222  00006A                     	ds	70
   223  0000B0                     _Local_Key_FSM:
   224                           	opt stack 0
   225  0000B0                     	ds	18
   226  0000C2                     _Local_Key_User:
   227                           	opt stack 0
   228  0000C2                     	ds	18
   229  0000D4                     _RS485_ReceiveBuff:
   230                           	opt stack 0
   231  0000D4                     	ds	10
   232  0000DE                     _RS485_SendBuff:
   233                           	opt stack 0
   234  0000DE                     	ds	10
   235                           tblptru	equ	0xFF8
   236                           tblptrh	equ	0xFF7
   237                           postinc0	equ	0xFEE
   238                           wreg	equ	0xFE8
   239                           
   240                           	psect	cstackBANK0
   241  0000E8                     __pcstackBANK0:
   242                           	opt stack 0
   243  0000E8                     ??_RS485_Message_Manage:
   244  0000E8                     ?___ftdiv:
   245                           	opt stack 0
   246  0000E8                     ___ftdiv@f1:
   247                           	opt stack 0
   248                           
   249                           ; 3 bytes @ 0x0
   250  0000E8                     	ds	3
   251  0000EB                     ___ftdiv@f2:
   252                           	opt stack 0
   253                           
   254                           ; 3 bytes @ 0x3
   255  0000EB                     	ds	2
   256  0000ED                     RS485_Message_Manage@CRC_H:
   257                           	opt stack 0
   258                           
   259                           ; 1 bytes @ 0x5
   260  0000ED                     	ds	1
   261  0000EE                     RS485_Message_Manage@CRC_L:
   262                           	opt stack 0
   263  0000EE                     ___ftdiv@cntr:
   264                           	opt stack 0
   265                           
   266                           ; 1 bytes @ 0x6
   267  0000EE                     	ds	1
   268  0000EF                     RS485_Message_Manage@from_dress:
   269                           	opt stack 0
   270  0000EF                     ___ftdiv@f3:
   271                           	opt stack 0
   272                           
   273                           ; 3 bytes @ 0x7
   274  0000EF                     	ds	3
   275  0000F2                     ___ftdiv@exp:
   276                           	opt stack 0
   277                           
   278                           ; 1 bytes @ 0xA
   279  0000F2                     	ds	1
   280  0000F3                     ___ftdiv@sign:
   281                           	opt stack 0
   282                           
   283                           ; 1 bytes @ 0xB
   284  0000F3                     	ds	1
   285  0000F4                     main@num:
   286                           	opt stack 0
   287                           
   288                           ; 3 bytes @ 0xC
   289  0000F4                     	ds	3
   290                           tblptru	equ	0xFF8
   291                           tblptrh	equ	0xFF7
   292                           postinc0	equ	0xFEE
   293                           wreg	equ	0xFE8
   294                           
   295                           	psect	cstackCOMRAM
   296  000001                     __pcstackCOMRAM:
   297                           	opt stack 0
   298  000001                     ?i2___llmod:
   299                           	opt stack 0
   300  000001                     Delay_1Khz@a:
   301                           	opt stack 0
   302  000001                     i2SetTimer0@_tmr:
   303                           	opt stack 0
   304  000001                     i2___llmod@dividend:
   305                           	opt stack 0
   306                           
   307                           ; 4 bytes @ 0x0
   308  000001                     	ds	1
   309  000002                     Delay_1Khz@b:
   310                           	opt stack 0
   311                           
   312                           ; 1 bytes @ 0x1
   313  000002                     	ds	1
   314  000003                     ??i2_SetTimer0:
   315  000003                     Delay_1Khz@c:
   316                           	opt stack 0
   317                           
   318                           ; 1 bytes @ 0x2
   319  000003                     	ds	1
   320  000004                     Pulse_1Khz@_pulse:
   321                           	opt stack 0
   322                           
   323                           ; 1 bytes @ 0x3
   324  000004                     	ds	1
   325  000005                     i2___llmod@divisor:
   326                           	opt stack 0
   327                           
   328                           ; 4 bytes @ 0x4
   329  000005                     	ds	4
   330  000009                     i2___llmod@counter:
   331                           	opt stack 0
   332                           
   333                           ; 1 bytes @ 0x8
   334  000009                     	ds	1
   335  00000A                     ??_Sys_Cyc:
   336                           
   337                           ; 0 bytes @ 0x9
   338  00000A                     	ds	14
   339  000018                     Sys_Cyc@_temp:
   340                           	opt stack 0
   341                           
   342                           ; 1 bytes @ 0x17
   343  000018                     	ds	1
   344  000019                     ??_Key_FSM_Read:
   345  000019                     ?_ReadADC:
   346                           	opt stack 0
   347  000019                     ?___wmul:
   348                           	opt stack 0
   349  000019                     ?___lwdiv:
   350                           	opt stack 0
   351  000019                     ?___lwmod:
   352                           	opt stack 0
   353  000019                     ?___ftpack:
   354                           	opt stack 0
   355  000019                     ?___lldiv:
   356                           	opt stack 0
   357  000019                     ?___llmod:
   358                           	opt stack 0
   359  000019                     Key_FSM_Reset@t:
   360                           	opt stack 0
   361  000019                     TM1640_Delay@Time:
   362                           	opt stack 0
   363  000019                     OpenADC@config2:
   364                           	opt stack 0
   365  000019                     ___lbmod@divisor:
   366                           	opt stack 0
   367  000019                     SetTimer0@_tmr:
   368                           	opt stack 0
   369  000019                     Open2USART@spbrg:
   370                           	opt stack 0
   371  000019                     ___wmul@multiplier:
   372                           	opt stack 0
   373  000019                     ___lwdiv@dividend:
   374                           	opt stack 0
   375  000019                     ___lwmod@dividend:
   376                           	opt stack 0
   377  000019                     ___ftpack@arg:
   378                           	opt stack 0
   379  000019                     ___lldiv@dividend:
   380                           	opt stack 0
   381  000019                     ___llmod@dividend:
   382                           	opt stack 0
   383                           
   384                           ; 4 bytes @ 0x18
   385  000019                     	ds	1
   386  00001A                     TM1640_Delay@i:
   387                           	opt stack 0
   388  00001A                     OpenADC@config3:
   389                           	opt stack 0
   390  00001A                     ___lbmod@dividend:
   391                           	opt stack 0
   392                           
   393                           ; 1 bytes @ 0x19
   394  00001A                     	ds	1
   395  00001B                     ??_SetTimer0:
   396  00001B                     ??_OpenADC:
   397  00001B                     ??_ReadADC:
   398  00001B                     TM1640_Writer_Byte@Date:
   399                           	opt stack 0
   400  00001B                     Open2USART@config:
   401                           	opt stack 0
   402  00001B                     ___lbmod@counter:
   403                           	opt stack 0
   404  00001B                     ___wmul@multiplicand:
   405                           	opt stack 0
   406  00001B                     ___lwdiv@divisor:
   407                           	opt stack 0
   408  00001B                     ___lwmod@divisor:
   409                           	opt stack 0
   410                           
   411                           ; 2 bytes @ 0x1A
   412  00001B                     	ds	1
   413  00001C                     TM1640_Writer_Byte@mask:
   414                           	opt stack 0
   415  00001C                     ___ftpack@exp:
   416                           	opt stack 0
   417  00001C                     ___lbmod@rem:
   418                           	opt stack 0
   419                           
   420                           ; 1 bytes @ 0x1B
   421  00001C                     	ds	1
   422  00001D                     Key_FSM_Read@key_num_mate:
   423                           	opt stack 0
   424  00001D                     OpenADC@config:
   425                           	opt stack 0
   426  00001D                     ___ftpack@sign:
   427                           	opt stack 0
   428  00001D                     ___lwdiv@counter:
   429                           	opt stack 0
   430  00001D                     ___lwmod@counter:
   431                           	opt stack 0
   432  00001D                     ___wmul@product:
   433                           	opt stack 0
   434  00001D                     ___lldiv@divisor:
   435                           	opt stack 0
   436  00001D                     ___llmod@divisor:
   437                           	opt stack 0
   438                           
   439                           ; 4 bytes @ 0x1C
   440  00001D                     	ds	1
   441  00001E                     ??___ftpack:
   442  00001E                     Key_FSM_Read@key_num:
   443                           	opt stack 0
   444  00001E                     TM1640_Writer_Dates@Date:
   445                           	opt stack 0
   446  00001E                     ___lwdiv@quotient:
   447                           	opt stack 0
   448                           
   449                           ; 2 bytes @ 0x1D
   450  00001E                     	ds	1
   451  00001F                     TM1640_Writer_Dates@Addr:
   452                           	opt stack 0
   453                           
   454                           ; 1 bytes @ 0x1E
   455  00001F                     	ds	1
   456  000020                     TM1640_Show_integer@Numbers:
   457                           	opt stack 0
   458                           
   459                           ; 2 bytes @ 0x1F
   460  000020                     	ds	1
   461  000021                     ?___lwtoft:
   462                           	opt stack 0
   463  000021                     ___llmod@counter:
   464                           	opt stack 0
   465  000021                     ___lwtoft@c:
   466                           	opt stack 0
   467  000021                     ___lldiv@quotient:
   468                           	opt stack 0
   469                           
   470                           ; 4 bytes @ 0x20
   471  000021                     	ds	1
   472  000022                     ??_Result_Show:
   473  000022                     
   474                           ; 0 bytes @ 0x21
   475  000022                     	ds	2
   476  000024                     ?___ftmul:
   477                           	opt stack 0
   478  000024                     ___ftmul@f1:
   479                           	opt stack 0
   480                           
   481                           ; 3 bytes @ 0x23
   482  000024                     	ds	1
   483  000025                     ___lldiv@counter:
   484                           	opt stack 0
   485                           
   486                           ; 1 bytes @ 0x24
   487  000025                     	ds	1
   488  000026                     CRC_Verify@DataBuff:
   489                           	opt stack 0
   490                           
   491                           ; 2 bytes @ 0x25
   492  000026                     	ds	1
   493  000027                     ___ftmul@f2:
   494                           	opt stack 0
   495                           
   496                           ; 3 bytes @ 0x26
   497  000027                     	ds	1
   498  000028                     CRC_Verify@date_lenth:
   499                           	opt stack 0
   500                           
   501                           ; 1 bytes @ 0x27
   502  000028                     	ds	1
   503  000029                     ??_CRC_Verify:
   504                           
   505                           ; 0 bytes @ 0x28
   506  000029                     	ds	1
   507  00002A                     ??___ftmul:
   508                           
   509                           ; 0 bytes @ 0x29
   510  00002A                     	ds	3
   511  00002D                     ___ftmul@exp:
   512                           	opt stack 0
   513                           
   514                           ; 1 bytes @ 0x2C
   515  00002D                     	ds	1
   516  00002E                     ___ftmul@f3_as_product:
   517                           	opt stack 0
   518  00002E                     CRC_Verify@CRC_Value:
   519                           	opt stack 0
   520                           
   521                           ; 4 bytes @ 0x2D
   522  00002E                     	ds	3
   523  000031                     ___ftmul@cntr:
   524                           	opt stack 0
   525                           
   526                           ; 1 bytes @ 0x30
   527  000031                     	ds	1
   528  000032                     CRC_Verify@CRC_Byte:
   529                           	opt stack 0
   530  000032                     ___ftmul@sign:
   531                           	opt stack 0
   532                           
   533                           ; 1 bytes @ 0x31
   534  000032                     	ds	1
   535  000033                     ??___ftdiv:
   536  000033                     RS485_Send_Date@date_dress:
   537                           	opt stack 0
   538  000033                     RS485_Message_Manage@DataBuff:
   539                           	opt stack 0
   540                           
   541                           ; 2 bytes @ 0x32
   542  000033                     	ds	2
   543  000035                     RS485_Send_Date@date_lenth:
   544                           	opt stack 0
   545  000035                     RS485_Message_Manage@date_lenth:
   546                           	opt stack 0
   547                           
   548                           ; 1 bytes @ 0x34
   549  000035                     	ds	1
   550  000036                     tblptru	equ	0xFF8
   551                           tblptrh	equ	0xFF7
   552                           postinc0	equ	0xFEE
   553                           wreg	equ	0xFE8
   554                           
   555                           ; 0 bytes @ 0x35
   556 ;;
   557 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   558 ;;
   559 ;; *************** function _main *****************
   560 ;; Defined at:
   561 ;;		line 37 in file "_01_USER/main.c"
   562 ;; Parameters:    Size  Location     Type
   563 ;;		None
   564 ;; Auto vars:     Size  Location     Type
   565 ;;  num             3   12[BANK0 ] float 
   566 ;; Return value:  Size  Location     Type
   567 ;;                  2   20[None  ] int 
   568 ;; Registers used:
   569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   570 ;; Tracked objects:
   571 ;;		On entry : 0/0
   572 ;;		On exit  : 0/0
   573 ;;		Unchanged: 0/0
   574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   576 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   578 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   579 ;;Total ram usage:        3 bytes
   580 ;; Hardware stack levels required when called:    8
   581 ;; This function calls:
   582 ;;		_ADC6_Init
   583 ;;		_GPIO_Config
   584 ;;		_Init_TM1640
   585 ;;		_Key_Init
   586 ;;		_Message_Manage
   587 ;;		_RS485_Init
   588 ;;		_Result_Show
   589 ;;		_Run
   590 ;;		_Timer0_Init
   591 ;; This function is called by:
   592 ;;		Startup code after reset
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596                           	psect	text0
   597  00207E                     __ptext0:
   598                           	opt stack 0
   599  00207E                     _main:
   600                           	opt stack 23
   601                           
   602                           ;main.c: 40: float num = 0;
   603                           
   604                           ; BSR set to: 0
   605                           ;incstack = 0
   606  00207E  0E00               	movlw	0
   607  002080  0100               	movlb	0	; () banked
   608  002082  6FF4               	movwf	main@num& (0+255),b
   609  002084  0E00               	movlw	0
   610  002086  0100               	movlb	0	; () banked
   611  002088  6FF5               	movwf	(main@num+1)& (0+255),b
   612  00208A  0E00               	movlw	0
   613  00208C  0100               	movlb	0	; () banked
   614  00208E  6FF6               	movwf	(main@num+2)& (0+255),b
   615                           
   616                           ; BSR set to: 0
   617                           ;main.c: 43: GPIO_Config();
   618  002090  ECFA  F011         	call	_GPIO_Config	;wreg free
   619                           
   620                           ;main.c: 44: Key_Init();
   621  002094  EC00  F012         	call	_Key_Init	;wreg free
   622                           
   623                           ;main.c: 45: Timer0_Init();
   624  002098  EC74  F011         	call	_Timer0_Init	;wreg free
   625                           
   626                           ;main.c: 46: Init_TM1640();
   627  00209C  EC4E  F011         	call	_Init_TM1640	;wreg free
   628                           
   629                           ;main.c: 47: ADC6_Init();
   630  0020A0  ECE2  F011         	call	_ADC6_Init	;wreg free
   631                           
   632                           ;main.c: 48: RS485_Init();
   633  0020A4  ECBB  F011         	call	_RS485_Init	;wreg free
   634  0020A8  D000               	goto	l3414
   635  0020AA                     l3414:
   636                           
   637                           ;main.c: 52: {
   638                           ;main.c: 53: Message_Manage();
   639  0020AA  ECD7  F011         	call	_Message_Manage	;wreg free
   640                           
   641                           ;main.c: 54: Run();
   642  0020AE  ECFF  F010         	call	_Run	;wreg free
   643                           
   644                           ;main.c: 55: Result_Show();
   645  0020B2  EC95  F00E         	call	_Result_Show	;wreg free
   646  0020B6  D7F9               	goto	l3414
   647                           
   648                           ;main.c: 56: }
   649                           ;main.c: 58: return 0;
   650                           ;	Return value of _main is never used
   651  0020B8  EFB0  F000         	goto	start
   652  0020BC                     __end_of_main:
   653                           	opt stack 0
   654                           tblptru	equ	0xFF8
   655                           tblptrh	equ	0xFF7
   656                           postinc0	equ	0xFEE
   657                           wreg	equ	0xFE8
   658                           
   659 ;; *************** function _Timer0_Init *****************
   660 ;; Defined at:
   661 ;;		line 43 in file "_01_USER/My_Timer.c"
   662 ;; Parameters:    Size  Location     Type
   663 ;;		None
   664 ;; Auto vars:     Size  Location     Type
   665 ;;		None
   666 ;; Return value:  Size  Location     Type
   667 ;;		None               void
   668 ;; Registers used:
   669 ;;		wreg, status,2, status,0, cstack
   670 ;; Tracked objects:
   671 ;;		On entry : 0/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   679 ;;Total ram usage:        0 bytes
   680 ;; Hardware stack levels used:    1
   681 ;; Hardware stack levels required when called:    4
   682 ;; This function calls:
   683 ;;		_SetTimer0
   684 ;; This function is called by:
   685 ;;		_main
   686 ;; This function uses a non-reentrant model
   687 ;;
   688                           
   689                           	psect	text1
   690  0022E8                     __ptext1:
   691                           	opt stack 0
   692  0022E8                     _Timer0_Init:
   693                           	opt stack 26
   694                           
   695                           ;My_Timer.c: 45: T08BIT = 0;
   696                           
   697                           ;incstack = 0
   698  0022E8  9CD5               	bcf	4053,6,c	;volatile
   699                           
   700                           ;My_Timer.c: 46: T0CS = 0;
   701  0022EA  9AD5               	bcf	4053,5,c	;volatile
   702                           
   703                           ;My_Timer.c: 47: T0SE = 0;
   704  0022EC  98D5               	bcf	4053,4,c	;volatile
   705                           
   706                           ;My_Timer.c: 48: PSA = 0;
   707  0022EE  96D5               	bcf	4053,3,c	;volatile
   708                           
   709                           ;My_Timer.c: 49: T0PS2 = 1;
   710  0022F0  84D5               	bsf	4053,2,c	;volatile
   711                           
   712                           ;My_Timer.c: 50: T0PS1 = 1;
   713  0022F2  82D5               	bsf	4053,1,c	;volatile
   714                           
   715                           ;My_Timer.c: 51: T0PS0 = 1;
   716  0022F4  80D5               	bsf	4053,0,c	;volatile
   717                           
   718                           ;My_Timer.c: 65: SetTimer0(1);
   719  0022F6  0E00               	movlw	0
   720  0022F8  6E1A               	movwf	SetTimer0@_tmr+1,c
   721  0022FA  0E01               	movlw	1
   722  0022FC  6E19               	movwf	SetTimer0@_tmr,c
   723  0022FE  ECCF  F010         	call	_SetTimer0	;wreg free
   724                           
   725                           ;My_Timer.c: 66: TMR0ON = 1;
   726  002302  8ED5               	bsf	4053,7,c	;volatile
   727                           
   728                           ;My_Timer.c: 67: TMR0IE = 1;
   729  002304  8AF2               	bsf	intcon,5,c	;volatile
   730                           
   731                           ;My_Timer.c: 68: IPEN = 0;GIE = 1;
   732  002306  9ED0               	bcf	4048,7,c	;volatile
   733  002308  8EF2               	bsf	intcon,7,c	;volatile
   734  00230A  0012               	return		;funcret
   735  00230C                     __end_of_Timer0_Init:
   736                           	opt stack 0
   737                           tblptru	equ	0xFF8
   738                           tblptrh	equ	0xFF7
   739                           intcon	equ	0xFF2
   740                           postinc0	equ	0xFEE
   741                           wreg	equ	0xFE8
   742                           
   743 ;; *************** function _SetTimer0 *****************
   744 ;; Defined at:
   745 ;;		line 81 in file "_01_USER/My_Timer.c"
   746 ;; Parameters:    Size  Location     Type
   747 ;;  _tmr            2   24[COMRAM] unsigned int 
   748 ;; Auto vars:     Size  Location     Type
   749 ;;		None
   750 ;; Return value:  Size  Location     Type
   751 ;;		None               void
   752 ;; Registers used:
   753 ;;		wreg, status,2, status,0
   754 ;; Tracked objects:
   755 ;;		On entry : 0/0
   756 ;;		On exit  : 0/0
   757 ;;		Unchanged: 0/0
   758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   759 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   761 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   762 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   763 ;;Total ram usage:        4 bytes
   764 ;; Hardware stack levels used:    1
   765 ;; Hardware stack levels required when called:    3
   766 ;; This function calls:
   767 ;;		Nothing
   768 ;; This function is called by:
   769 ;;		_Timer0_Init
   770 ;; This function uses a non-reentrant model
   771 ;;
   772                           
   773                           	psect	text2
   774  00219E                     __ptext2:
   775                           	opt stack 0
   776  00219E                     _SetTimer0:
   777                           	opt stack 26
   778                           
   779                           ;My_Timer.c: 83: if(_tmr > 0xffff) _tmr = 0xffff;
   780                           
   781                           ;incstack = 0
   782  00219E  D003               	goto	l3294
   783  0021A0  6819               	setf	SetTimer0@_tmr,c
   784  0021A2  681A               	setf	SetTimer0@_tmr+1,c
   785  0021A4  D000               	goto	l3294
   786  0021A6                     l3294:
   787                           
   788                           ;My_Timer.c: 84: _tmr=0xffff-_tmr;
   789  0021A6  C019  F01B         	movff	SetTimer0@_tmr,??_SetTimer0
   790  0021AA  C01A  F01C         	movff	SetTimer0@_tmr+1,??_SetTimer0+1
   791  0021AE  1E1B               	comf	??_SetTimer0,f,c
   792  0021B0  1E1C               	comf	??_SetTimer0+1,f,c
   793  0021B2  4A1B               	infsnz	??_SetTimer0,f,c
   794  0021B4  2A1C               	incf	??_SetTimer0+1,f,c
   795  0021B6  0EFF               	movlw	255
   796  0021B8  241B               	addwf	??_SetTimer0,w,c
   797  0021BA  6E19               	movwf	SetTimer0@_tmr,c
   798  0021BC  0EFF               	movlw	255
   799  0021BE  201C               	addwfc	??_SetTimer0+1,w,c
   800  0021C0  6E1A               	movwf	SetTimer0@_tmr+1,c
   801                           
   802                           ;My_Timer.c: 85: TMR0H = _tmr/256;
   803  0021C2  501A               	movf	SetTimer0@_tmr+1,w,c
   804  0021C4  6ED7               	movwf	4055,c	;volatile
   805                           
   806                           ;My_Timer.c: 86: TMR0L = _tmr%256;
   807  0021C6  C019  FFD6         	movff	SetTimer0@_tmr,4054	;volatile
   808                           
   809                           ;My_Timer.c: 87: TMR0IF = 0;
   810  0021CA  94F2               	bcf	intcon,2,c	;volatile
   811  0021CC  0012               	return		;funcret
   812  0021CE                     __end_of_SetTimer0:
   813                           	opt stack 0
   814                           tblptru	equ	0xFF8
   815                           tblptrh	equ	0xFF7
   816                           intcon	equ	0xFF2
   817                           postinc0	equ	0xFEE
   818                           wreg	equ	0xFE8
   819                           
   820 ;; *************** function _Run *****************
   821 ;; Defined at:
   822 ;;		line 69 in file "_01_USER/Run.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;		None
   825 ;; Auto vars:     Size  Location     Type
   826 ;;		None
   827 ;; Return value:  Size  Location     Type
   828 ;;		None               void
   829 ;; Registers used:
   830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   840 ;;Total ram usage:        0 bytes
   841 ;; Hardware stack levels used:    1
   842 ;; Hardware stack levels required when called:    6
   843 ;; This function calls:
   844 ;;		_Get_ADC6
   845 ;;		_RS485_Send_Date
   846 ;; This function is called by:
   847 ;;		_main
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851                           	psect	text3
   852  0021FE                     __ptext3:
   853                           	opt stack 0
   854  0021FE                     _Run:
   855                           	opt stack 24
   856                           
   857                           ;Run.c: 72: if( Handle_Switch.ADC6 ) Get_ADC6();
   858                           
   859                           ;incstack = 0
   860  0021FE  5037               	movf	_Handle_Switch+1,w,c
   861  002200  B4D8               	btfsc	status,2,c
   862  002202  D003               	goto	l3384
   863  002204  EC43  F00F         	call	_Get_ADC6	;wreg free
   864  002208  D000               	goto	l3384
   865  00220A                     l3384:
   866                           
   867                           ;Run.c: 75: if ( Handle_Switch.Usart_OneDate )
   868  00220A  5038               	movf	_Handle_Switch+2,w,c
   869  00220C  B4D8               	btfsc	status,2,c
   870  00220E  0012               	return	
   871                           
   872                           ;Run.c: 76: {
   873                           ;Run.c: 77: Handle_Switch.Usart_OneDate = 0;
   874  002210  0E00               	movlw	0
   875  002212  6E38               	movwf	_Handle_Switch+2,c
   876                           
   877                           ;Run.c: 78: RS485_Send_Date(RS485_SendBuff,10);
   878  002214  0EDE               	movlw	low _RS485_SendBuff
   879  002216  6E33               	movwf	RS485_Send_Date@date_dress,c
   880  002218  0E00               	movlw	high _RS485_SendBuff
   881  00221A  6E34               	movwf	RS485_Send_Date@date_dress+1,c
   882  00221C  0E0A               	movlw	10
   883  00221E  6E35               	movwf	RS485_Send_Date@date_lenth,c
   884  002220  ECB9  F00D         	call	_RS485_Send_Date	;wreg free
   885  002224  0012               	return	
   886  002226  0012               	return		;funcret
   887  002228                     __end_of_Run:
   888                           	opt stack 0
   889                           tblptru	equ	0xFF8
   890                           tblptrh	equ	0xFF7
   891                           intcon	equ	0xFF2
   892                           postinc0	equ	0xFEE
   893                           wreg	equ	0xFE8
   894                           status	equ	0xFD8
   895                           
   896 ;; *************** function _RS485_Send_Date *****************
   897 ;; Defined at:
   898 ;;		line 77 in file "_01_USER/My_USART.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;  date_dress      2   50[COMRAM] PTR unsigned char 
   901 ;;		 -> RS485_SendBuff(10), 
   902 ;;  date_lenth      1   52[COMRAM] unsigned char 
   903 ;; Auto vars:     Size  Location     Type
   904 ;;		None
   905 ;; Return value:  Size  Location     Type
   906 ;;		None               void
   907 ;; Registers used:
   908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   914 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   916 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   917 ;;      Totals:         3       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   918 ;;Total ram usage:        4 bytes
   919 ;; Hardware stack levels used:    1
   920 ;; Hardware stack levels required when called:    5
   921 ;; This function calls:
   922 ;;		_CRC_Verify
   923 ;; This function is called by:
   924 ;;		_Run
   925 ;; This function uses a non-reentrant model
   926 ;;
   927                           
   928                           	psect	text4
   929  001B72                     __ptext4:
   930                           	opt stack 0
   931  001B72                     _RS485_Send_Date:
   932                           	opt stack 24
   933                           
   934                           ;My_USART.c: 80: date_dress[--date_lenth] = 0xff;
   935                           
   936                           ;incstack = 0
   937  001B72  0635               	decf	RS485_Send_Date@date_lenth,f,c
   938  001B74  5035               	movf	RS485_Send_Date@date_lenth,w,c
   939  001B76  0D01               	mullw	1
   940  001B78  50F3               	movf	prodl,w,c
   941  001B7A  2433               	addwf	RS485_Send_Date@date_dress,w,c
   942  001B7C  6ED9               	movwf	fsr2l,c
   943  001B7E  50F4               	movf	prodh,w,c
   944  001B80  2034               	addwfc	RS485_Send_Date@date_dress+1,w,c
   945  001B82  6EDA               	movwf	fsr2h,c
   946  001B84  0EFF               	movlw	255
   947  001B86  6EDF               	movwf	indf2,c
   948                           
   949                           ;My_USART.c: 83: CRC_Verify(date_dress,10);
   950  001B88  C033  F026         	movff	RS485_Send_Date@date_dress,CRC_Verify@DataBuff
   951  001B8C  C034  F027         	movff	RS485_Send_Date@date_dress+1,CRC_Verify@DataBuff+1
   952  001B90  0E0A               	movlw	10
   953  001B92  6E28               	movwf	CRC_Verify@date_lenth,c
   954  001B94  EC43  F00B         	call	_CRC_Verify	;wreg free
   955                           
   956                           ;My_USART.c: 86: while( (!TXSTA2bits.TRMT) );
   957  001B98  D000               	goto	l193
   958  001B9A                     l193:
   959  001B9A  010F               	movlb	15	; () banked
   960  001B9C  A321               	btfss	33,1,b	;volatile
   961  001B9E  D7FD               	goto	l193
   962                           
   963                           ; BSR set to: 15
   964                           ;My_USART.c: 87: RG3 = 0;
   965  001BA0  9686               	bcf	3974,3,c	;volatile
   966                           
   967                           ; BSR set to: 15
   968                           ;My_USART.c: 90: TXREG2 = date_dress[date_lenth];
   969  001BA2  5035               	movf	RS485_Send_Date@date_lenth,w,c
   970  001BA4  0D01               	mullw	1
   971  001BA6  50F3               	movf	prodl,w,c
   972  001BA8  2433               	addwf	RS485_Send_Date@date_dress,w,c
   973  001BAA  6ED9               	movwf	fsr2l,c
   974  001BAC  50F4               	movf	prodh,w,c
   975  001BAE  2034               	addwfc	RS485_Send_Date@date_dress+1,w,c
   976  001BB0  6EDA               	movwf	fsr2h,c
   977  001BB2  50DF               	movf	indf2,w,c
   978  001BB4  010F               	movlb	15	; () banked
   979  001BB6  6F1C               	movwf	28,b	;volatile
   980                           
   981                           ;My_USART.c: 91: while( (!TXSTA2bits.TRMT) );
   982  001BB8  D000               	goto	l196
   983  001BBA                     l196:
   984                           
   985                           ; BSR set to: 15
   986  001BBA  010F               	movlb	15	; () banked
   987  001BBC  B321               	btfsc	33,1,b	;volatile
   988  001BBE  D027               	goto	l3226
   989  001BC0  D7FC               	goto	l196
   990                           
   991                           ; BSR set to: 15
   992                           ;My_USART.c: 94: while( date_lenth --)
   993  001BC2  D025               	goto	l3226
   994  001BC4                     l3222:
   995                           
   996                           ; BSR set to: 15
   997                           ;My_USART.c: 95: {
   998                           ;My_USART.c: 96: if(date_dress[date_lenth] == 0xff ) date_dress[date_lenth]--;
   999  001BC4  5035               	movf	RS485_Send_Date@date_lenth,w,c
  1000  001BC6  0D01               	mullw	1
  1001  001BC8  50F3               	movf	prodl,w,c
  1002  001BCA  2433               	addwf	RS485_Send_Date@date_dress,w,c
  1003  001BCC  6ED9               	movwf	fsr2l,c
  1004  001BCE  50F4               	movf	prodh,w,c
  1005  001BD0  2034               	addwfc	RS485_Send_Date@date_dress+1,w,c
  1006  001BD2  6EDA               	movwf	fsr2h,c
  1007  001BD4  28DE               	incf	postinc2,w,c
  1008  001BD6  A4D8               	btfss	status,2,c
  1009  001BD8  D009               	goto	l201
  1010                           
  1011                           ; BSR set to: 15
  1012  001BDA  5035               	movf	RS485_Send_Date@date_lenth,w,c
  1013  001BDC  0D01               	mullw	1
  1014  001BDE  50F3               	movf	prodl,w,c
  1015  001BE0  2433               	addwf	RS485_Send_Date@date_dress,w,c
  1016  001BE2  6ED9               	movwf	fsr2l,c
  1017  001BE4  50F4               	movf	prodh,w,c
  1018  001BE6  2034               	addwfc	RS485_Send_Date@date_dress+1,w,c
  1019  001BE8  6EDA               	movwf	fsr2h,c
  1020  001BEA  06DF               	decf	indf2,f,c
  1021  001BEC                     l201:
  1022                           
  1023                           ; BSR set to: 15
  1024                           ;My_USART.c: 97: TXREG2 = date_dress[date_lenth];
  1025  001BEC  5035               	movf	RS485_Send_Date@date_lenth,w,c
  1026  001BEE  0D01               	mullw	1
  1027  001BF0  50F3               	movf	prodl,w,c
  1028  001BF2  2433               	addwf	RS485_Send_Date@date_dress,w,c
  1029  001BF4  6ED9               	movwf	fsr2l,c
  1030  001BF6  50F4               	movf	prodh,w,c
  1031  001BF8  2034               	addwfc	RS485_Send_Date@date_dress+1,w,c
  1032  001BFA  6EDA               	movwf	fsr2h,c
  1033  001BFC  50DF               	movf	indf2,w,c
  1034  001BFE  010F               	movlb	15	; () banked
  1035  001C00  6F1C               	movwf	28,b	;volatile
  1036                           
  1037                           ;My_USART.c: 98: while( (!TXSTA2bits.TRMT));
  1038  001C02  D000               	goto	l202
  1039  001C04                     l202:
  1040                           
  1041                           ; BSR set to: 15
  1042  001C04  010F               	movlb	15	; () banked
  1043  001C06  B321               	btfsc	33,1,b	;volatile
  1044  001C08  D002               	goto	l3226
  1045  001C0A  D7FC               	goto	l202
  1046                           
  1047                           ; BSR set to: 15
  1048  001C0C  D000               	goto	l3226
  1049  001C0E                     l3226:
  1050                           
  1051                           ; BSR set to: 15
  1052  001C0E  0635               	decf	RS485_Send_Date@date_lenth,f,c
  1053  001C10  2835               	incf	RS485_Send_Date@date_lenth,w,c
  1054  001C12  A4D8               	btfss	status,2,c
  1055  001C14  D7D7               	goto	l3222
  1056                           
  1057                           ; BSR set to: 15
  1058                           ;My_USART.c: 99: }
  1059                           ;My_USART.c: 101: RG3 = 1;
  1060  001C16  8686               	bsf	3974,3,c	;volatile
  1061                           
  1062                           ; BSR set to: 15
  1063  001C18  0012               	return		;funcret
  1064  001C1A                     __end_of_RS485_Send_Date:
  1065                           	opt stack 0
  1066                           tblptru	equ	0xFF8
  1067                           tblptrh	equ	0xFF7
  1068                           prodh	equ	0xFF4
  1069                           prodl	equ	0xFF3
  1070                           intcon	equ	0xFF2
  1071                           postinc0	equ	0xFEE
  1072                           wreg	equ	0xFE8
  1073                           indf2	equ	0xFDF
  1074                           postinc2	equ	0xFDE
  1075                           fsr2h	equ	0xFDA
  1076                           fsr2l	equ	0xFD9
  1077                           status	equ	0xFD8
  1078                           
  1079 ;; *************** function _Get_ADC6 *****************
  1080 ;; Defined at:
  1081 ;;		line 67 in file "_01_USER/My_ADC.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;		None
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;		None
  1086 ;; Return value:  Size  Location     Type
  1087 ;;		None               void
  1088 ;; Registers used:
  1089 ;;		wreg, status,2, status,0, cstack
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1099 ;;Total ram usage:        0 bytes
  1100 ;; Hardware stack levels used:    1
  1101 ;; Hardware stack levels required when called:    5
  1102 ;; This function calls:
  1103 ;;		_BusyADC
  1104 ;;		_ConvertADC
  1105 ;;		_ReadADC
  1106 ;;		___ftdiv
  1107 ;;		___ftmul
  1108 ;;		___lwtoft
  1109 ;; This function is called by:
  1110 ;;		_Run
  1111 ;; This function uses a non-reentrant model
  1112 ;;
  1113                           
  1114                           	psect	text5
  1115  001E86                     __ptext5:
  1116                           	opt stack 0
  1117  001E86                     _Get_ADC6:
  1118                           	opt stack 24
  1119                           
  1120                           ;My_ADC.c: 69: ConvertADC();
  1121                           
  1122                           ; BSR set to: 15
  1123                           ;incstack = 0
  1124  001E86  EC05  F012         	call	_ConvertADC	;wreg free
  1125                           
  1126                           ;My_ADC.c: 70: while(BusyADC());
  1127  001E8A  D000               	goto	l3326
  1128  001E8C                     l3326:
  1129  001E8C  ECF3  F011         	call	_BusyADC	;wreg free
  1130  001E90  0900               	iorlw	0
  1131  001E92  A4D8               	btfss	status,2,c
  1132  001E94  D7FB               	goto	l3326
  1133                           
  1134                           ;My_ADC.c: 71: ADC6_Buff =(unsigned int)ReadADC()*4.096f/4095.0f;
  1135  001E96  0E12               	movlw	18
  1136  001E98  6E27               	movwf	___ftmul@f2,c
  1137  001E9A  0E83               	movlw	131
  1138  001E9C  6E28               	movwf	___ftmul@f2+1,c
  1139  001E9E  0E40               	movlw	64
  1140  001EA0  6E29               	movwf	___ftmul@f2+2,c
  1141  001EA2  ECEB  F011         	call	_ReadADC	;wreg free
  1142  001EA6  C019  F021         	movff	?_ReadADC,___lwtoft@c
  1143  001EAA  C01A  F022         	movff	?_ReadADC+1,___lwtoft@c+1
  1144  001EAE  EC3B  F011         	call	___lwtoft	;wreg free
  1145  001EB2  C021  F024         	movff	?___lwtoft,___ftmul@f1
  1146  001EB6  C022  F025         	movff	?___lwtoft+1,___ftmul@f1+1
  1147  001EBA  C023  F026         	movff	?___lwtoft+2,___ftmul@f1+2
  1148  001EBE  EC5A  F00C         	call	___ftmul	;wreg free
  1149  001EC2  C024  F0E8         	movff	?___ftmul,___ftdiv@f1
  1150  001EC6  C025  F0E9         	movff	?___ftmul+1,___ftdiv@f1+1
  1151  001ECA  C026  F0EA         	movff	?___ftmul+2,___ftdiv@f1+2
  1152  001ECE  0EF0               	movlw	240
  1153  001ED0  0100               	movlb	0	; () banked
  1154  001ED2  6FEB               	movwf	___ftdiv@f2& (0+255),b
  1155  001ED4  0E7F               	movlw	127
  1156  001ED6  0100               	movlb	0	; () banked
  1157  001ED8  6FEC               	movwf	(___ftdiv@f2+1)& (0+255),b
  1158  001EDA  0E45               	movlw	69
  1159  001EDC  0100               	movlb	0	; () banked
  1160  001EDE  6FED               	movwf	(___ftdiv@f2+2)& (0+255),b
  1161  001EE0  ECA0  F00A         	call	___ftdiv	;wreg free
  1162  001EE4  C0E8  F03E         	movff	?___ftdiv,_ADC6_Buff	;volatile
  1163  001EE8  C0E9  F03F         	movff	?___ftdiv+1,_ADC6_Buff+1	;volatile
  1164  001EEC  C0EA  F040         	movff	?___ftdiv+2,_ADC6_Buff+2	;volatile
  1165  001EF0  0012               	return		;funcret
  1166  001EF2                     __end_of_Get_ADC6:
  1167                           	opt stack 0
  1168                           tblptru	equ	0xFF8
  1169                           tblptrh	equ	0xFF7
  1170                           prodh	equ	0xFF4
  1171                           prodl	equ	0xFF3
  1172                           intcon	equ	0xFF2
  1173                           postinc0	equ	0xFEE
  1174                           wreg	equ	0xFE8
  1175                           indf2	equ	0xFDF
  1176                           postinc2	equ	0xFDE
  1177                           fsr2h	equ	0xFDA
  1178                           fsr2l	equ	0xFD9
  1179                           status	equ	0xFD8
  1180                           
  1181 ;; *************** function ___lwtoft *****************
  1182 ;; Defined at:
  1183 ;;		line 28 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;  c               2   32[COMRAM] unsigned int 
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;		None
  1188 ;; Return value:  Size  Location     Type
  1189 ;;                  3   32[COMRAM] float 
  1190 ;; Registers used:
  1191 ;;		wreg, status,2, status,0, cstack
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1197 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1200 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1201 ;;Total ram usage:        3 bytes
  1202 ;; Hardware stack levels used:    1
  1203 ;; Hardware stack levels required when called:    4
  1204 ;; This function calls:
  1205 ;;		___ftpack
  1206 ;; This function is called by:
  1207 ;;		_Get_ADC6
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211                           	psect	text6
  1212  002276                     __ptext6:
  1213                           	opt stack 0
  1214  002276                     ___lwtoft:
  1215                           	opt stack 24
  1216                           
  1217                           ;incstack = 0
  1218  002276  C021  F019         	movff	___lwtoft@c,___ftpack@arg
  1219  00227A  C022  F01A         	movff	___lwtoft@c+1,___ftpack@arg+1
  1220  00227E  6A1B               	clrf	___ftpack@arg+2,c
  1221  002280  0E8E               	movlw	142
  1222  002282  6E1C               	movwf	___ftpack@exp,c
  1223  002284  0E00               	movlw	0
  1224  002286  6E1D               	movwf	___ftpack@sign,c
  1225  002288  EC56  F00D         	call	___ftpack	;wreg free
  1226  00228C  C019  F021         	movff	?___ftpack,?___lwtoft
  1227  002290  C01A  F022         	movff	?___ftpack+1,?___lwtoft+1
  1228  002294  C01B  F023         	movff	?___ftpack+2,?___lwtoft+2
  1229  002298  0012               	return	
  1230  00229A  0012               	return		;funcret
  1231  00229C                     __end_of___lwtoft:
  1232                           	opt stack 0
  1233                           tblptru	equ	0xFF8
  1234                           tblptrh	equ	0xFF7
  1235                           prodh	equ	0xFF4
  1236                           prodl	equ	0xFF3
  1237                           intcon	equ	0xFF2
  1238                           postinc0	equ	0xFEE
  1239                           wreg	equ	0xFE8
  1240                           indf2	equ	0xFDF
  1241                           postinc2	equ	0xFDE
  1242                           fsr2h	equ	0xFDA
  1243                           fsr2l	equ	0xFD9
  1244                           status	equ	0xFD8
  1245                           
  1246 ;; *************** function ___ftmul *****************
  1247 ;; Defined at:
  1248 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;  f1              3   35[COMRAM] float 
  1251 ;;  f2              3   38[COMRAM] float 
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;  f3_as_produc    3   45[COMRAM] unsigned um
  1254 ;;  sign            1   49[COMRAM] unsigned char 
  1255 ;;  cntr            1   48[COMRAM] unsigned char 
  1256 ;;  exp             1   44[COMRAM] unsigned char 
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  3   35[COMRAM] float 
  1259 ;; Registers used:
  1260 ;;		wreg, status,2, status,0, cstack
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1266 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1267 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1268 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1269 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1270 ;;Total ram usage:       15 bytes
  1271 ;; Hardware stack levels used:    1
  1272 ;; Hardware stack levels required when called:    4
  1273 ;; This function calls:
  1274 ;;		___ftpack
  1275 ;; This function is called by:
  1276 ;;		_Get_ADC6
  1277 ;;		_TM1640_Show_Decimal
  1278 ;; This function uses a non-reentrant model
  1279 ;;
  1280                           
  1281                           	psect	text7
  1282  0018B4                     __ptext7:
  1283                           	opt stack 0
  1284  0018B4                     ___ftmul:
  1285                           	opt stack 24
  1286                           
  1287                           ;incstack = 0
  1288  0018B4  C026  F02A         	movff	___ftmul@f1+2,??___ftmul
  1289  0018B8  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  1290  0018BA  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  1291  0018BC  3425               	rlcf	___ftmul@f1+1,w,c
  1292  0018BE  362A               	rlcf	??___ftmul& (0+255),f,c
  1293  0018C0  E301               	bnc	u3071
  1294  0018C2  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  1295  0018C4                     u3071:
  1296  0018C4  502A               	movf	??___ftmul,w,c
  1297  0018C6  6E2D               	movwf	___ftmul@exp,c
  1298  0018C8  502D               	movf	___ftmul@exp,w,c
  1299  0018CA  A4D8               	btfss	status,2,c
  1300  0018CC  D007               	goto	l3022
  1301  0018CE  0E00               	movlw	0
  1302  0018D0  6E24               	movwf	?___ftmul,c
  1303  0018D2  0E00               	movlw	0
  1304  0018D4  6E25               	movwf	?___ftmul+1,c
  1305  0018D6  0E00               	movlw	0
  1306  0018D8  6E26               	movwf	?___ftmul+2,c
  1307  0018DA  0012               	return	
  1308  0018DC                     l3022:
  1309  0018DC  C029  F02A         	movff	___ftmul@f2+2,??___ftmul
  1310  0018E0  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  1311  0018E2  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  1312  0018E4  3428               	rlcf	___ftmul@f2+1,w,c
  1313  0018E6  362A               	rlcf	??___ftmul& (0+255),f,c
  1314  0018E8  E301               	bnc	u3091
  1315  0018EA  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  1316  0018EC                     u3091:
  1317  0018EC  502A               	movf	??___ftmul,w,c
  1318  0018EE  6E32               	movwf	___ftmul@sign,c
  1319  0018F0  5032               	movf	___ftmul@sign,w,c
  1320  0018F2  A4D8               	btfss	status,2,c
  1321  0018F4  D007               	goto	l3028
  1322  0018F6  0E00               	movlw	0
  1323  0018F8  6E24               	movwf	?___ftmul,c
  1324  0018FA  0E00               	movlw	0
  1325  0018FC  6E25               	movwf	?___ftmul+1,c
  1326  0018FE  0E00               	movlw	0
  1327  001900  6E26               	movwf	?___ftmul+2,c
  1328  001902  0012               	return	
  1329  001904                     l3028:
  1330  001904  5032               	movf	___ftmul@sign,w,c
  1331  001906  0F7B               	addlw	123
  1332  001908  262D               	addwf	___ftmul@exp,f,c
  1333  00190A  C026  F032         	movff	___ftmul@f1+2,___ftmul@sign
  1334  00190E  5029               	movf	___ftmul@f2+2,w,c
  1335  001910  1A32               	xorwf	___ftmul@sign,f,c
  1336  001912  0E80               	movlw	128
  1337  001914  1632               	andwf	___ftmul@sign,f,c
  1338  001916  8E25               	bsf	___ftmul@f1+1,7,c
  1339  001918  8E28               	bsf	___ftmul@f2+1,7,c
  1340  00191A  0EFF               	movlw	255
  1341  00191C  1627               	andwf	___ftmul@f2,f,c
  1342  00191E  0EFF               	movlw	255
  1343  001920  1628               	andwf	___ftmul@f2+1,f,c
  1344  001922  0E00               	movlw	0
  1345  001924  1629               	andwf	___ftmul@f2+2,f,c
  1346  001926  0E00               	movlw	0
  1347  001928  6E2E               	movwf	___ftmul@f3_as_product,c
  1348  00192A  0E00               	movlw	0
  1349  00192C  6E2F               	movwf	___ftmul@f3_as_product+1,c
  1350  00192E  0E00               	movlw	0
  1351  001930  6E30               	movwf	___ftmul@f3_as_product+2,c
  1352  001932  0E07               	movlw	7
  1353  001934  6E31               	movwf	___ftmul@cntr,c
  1354  001936  D000               	goto	l3042
  1355  001938                     l3042:
  1356  001938  A024               	btfss	___ftmul@f1,0,c
  1357  00193A  D007               	goto	l3046
  1358  00193C  5027               	movf	___ftmul@f2,w,c
  1359  00193E  262E               	addwf	___ftmul@f3_as_product,f,c
  1360  001940  5028               	movf	___ftmul@f2+1,w,c
  1361  001942  222F               	addwfc	___ftmul@f3_as_product+1,f,c
  1362  001944  5029               	movf	___ftmul@f2+2,w,c
  1363  001946  2230               	addwfc	___ftmul@f3_as_product+2,f,c
  1364  001948  D000               	goto	l3046
  1365  00194A                     l3046:
  1366  00194A  90D8               	bcf	status,0,c
  1367  00194C  3226               	rrcf	___ftmul@f1+2,f,c
  1368  00194E  3225               	rrcf	___ftmul@f1+1,f,c
  1369  001950  3224               	rrcf	___ftmul@f1,f,c
  1370  001952  90D8               	bcf	status,0,c
  1371  001954  3627               	rlcf	___ftmul@f2,f,c
  1372  001956  3628               	rlcf	___ftmul@f2+1,f,c
  1373  001958  3629               	rlcf	___ftmul@f2+2,f,c
  1374  00195A  2E31               	decfsz	___ftmul@cntr,f,c
  1375  00195C  D7ED               	goto	l3042
  1376  00195E  D000               	goto	l3050
  1377  001960                     l3050:
  1378  001960  0E09               	movlw	9
  1379  001962  6E31               	movwf	___ftmul@cntr,c
  1380  001964  D000               	goto	l3052
  1381  001966                     l3052:
  1382  001966  A024               	btfss	___ftmul@f1,0,c
  1383  001968  D007               	goto	l3056
  1384  00196A  5027               	movf	___ftmul@f2,w,c
  1385  00196C  262E               	addwf	___ftmul@f3_as_product,f,c
  1386  00196E  5028               	movf	___ftmul@f2+1,w,c
  1387  001970  222F               	addwfc	___ftmul@f3_as_product+1,f,c
  1388  001972  5029               	movf	___ftmul@f2+2,w,c
  1389  001974  2230               	addwfc	___ftmul@f3_as_product+2,f,c
  1390  001976  D000               	goto	l3056
  1391  001978                     l3056:
  1392  001978  90D8               	bcf	status,0,c
  1393  00197A  3226               	rrcf	___ftmul@f1+2,f,c
  1394  00197C  3225               	rrcf	___ftmul@f1+1,f,c
  1395  00197E  3224               	rrcf	___ftmul@f1,f,c
  1396  001980  90D8               	bcf	status,0,c
  1397  001982  3230               	rrcf	___ftmul@f3_as_product+2,f,c
  1398  001984  322F               	rrcf	___ftmul@f3_as_product+1,f,c
  1399  001986  322E               	rrcf	___ftmul@f3_as_product,f,c
  1400  001988  2E31               	decfsz	___ftmul@cntr,f,c
  1401  00198A  D7ED               	goto	l3052
  1402  00198C  D000               	goto	l3060
  1403  00198E                     l3060:
  1404  00198E  C02E  F019         	movff	___ftmul@f3_as_product,___ftpack@arg
  1405  001992  C02F  F01A         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1406  001996  C030  F01B         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1407  00199A  C02D  F01C         	movff	___ftmul@exp,___ftpack@exp
  1408  00199E  C032  F01D         	movff	___ftmul@sign,___ftpack@sign
  1409  0019A2  EC56  F00D         	call	___ftpack	;wreg free
  1410  0019A6  C019  F024         	movff	?___ftpack,?___ftmul
  1411  0019AA  C01A  F025         	movff	?___ftpack+1,?___ftmul+1
  1412  0019AE  C01B  F026         	movff	?___ftpack+2,?___ftmul+2
  1413  0019B2  0012               	return	
  1414  0019B4  0012               	return		;funcret
  1415  0019B6                     __end_of___ftmul:
  1416                           	opt stack 0
  1417                           tblptru	equ	0xFF8
  1418                           tblptrh	equ	0xFF7
  1419                           prodh	equ	0xFF4
  1420                           prodl	equ	0xFF3
  1421                           intcon	equ	0xFF2
  1422                           postinc0	equ	0xFEE
  1423                           wreg	equ	0xFE8
  1424                           indf2	equ	0xFDF
  1425                           postinc2	equ	0xFDE
  1426                           fsr2h	equ	0xFDA
  1427                           fsr2l	equ	0xFD9
  1428                           status	equ	0xFD8
  1429                           
  1430 ;; *************** function ___ftdiv *****************
  1431 ;; Defined at:
  1432 ;;		line 54 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;  f1              3    0[BANK0 ] float 
  1435 ;;  f2              3    3[BANK0 ] float 
  1436 ;; Auto vars:     Size  Location     Type
  1437 ;;  f3              3    7[BANK0 ] float 
  1438 ;;  sign            1   11[BANK0 ] unsigned char 
  1439 ;;  exp             1   10[BANK0 ] unsigned char 
  1440 ;;  cntr            1    6[BANK0 ] unsigned char 
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  3    0[BANK0 ] float 
  1443 ;; Registers used:
  1444 ;;		wreg, status,2, status,0, cstack
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1450 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1451 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1452 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1453 ;;      Totals:         3      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1454 ;;Total ram usage:       15 bytes
  1455 ;; Hardware stack levels used:    1
  1456 ;; Hardware stack levels required when called:    4
  1457 ;; This function calls:
  1458 ;;		___ftpack
  1459 ;; This function is called by:
  1460 ;;		_Get_ADC6
  1461 ;;		_TM1640_Show_Decimal
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465                           	psect	text8
  1466  001540                     __ptext8:
  1467                           	opt stack 0
  1468  001540                     ___ftdiv:
  1469                           	opt stack 24
  1470                           
  1471                           ;incstack = 0
  1472  001540  C0EA  F033         	movff	___ftdiv@f1+2,??___ftdiv
  1473  001544  6A34               	clrf	(??___ftdiv+1)& (0+255),c
  1474  001546  6A35               	clrf	(??___ftdiv+2)& (0+255),c
  1475  001548  0100               	movlb	0	; () banked
  1476  00154A  35E9               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  1477  00154C  3633               	rlcf	??___ftdiv& (0+255),f,c
  1478  00154E  E301               	bnc	u3021
  1479  001550  8034               	bsf	(??___ftdiv+1)& (0+255),0,c
  1480  001552                     u3021:
  1481  001552  5033               	movf	??___ftdiv,w,c
  1482  001554  0100               	movlb	0	; () banked
  1483  001556  6FF2               	movwf	___ftdiv@exp& (0+255),b
  1484  001558  0100               	movlb	0	; () banked
  1485  00155A  51F2               	movf	___ftdiv@exp& (0+255),w,b
  1486  00155C  A4D8               	btfss	status,2,c
  1487  00155E  D00A               	goto	l2976
  1488                           
  1489                           ; BSR set to: 0
  1490  001560  0E00               	movlw	0
  1491  001562  0100               	movlb	0	; () banked
  1492  001564  6FE8               	movwf	?___ftdiv& (0+255),b
  1493  001566  0E00               	movlw	0
  1494  001568  0100               	movlb	0	; () banked
  1495  00156A  6FE9               	movwf	(?___ftdiv+1)& (0+255),b
  1496  00156C  0E00               	movlw	0
  1497  00156E  0100               	movlb	0	; () banked
  1498  001570  6FEA               	movwf	(?___ftdiv+2)& (0+255),b
  1499                           
  1500                           ; BSR set to: 0
  1501  001572  0012               	return	
  1502  001574                     l2976:
  1503                           
  1504                           ; BSR set to: 0
  1505  001574  C0ED  F033         	movff	___ftdiv@f2+2,??___ftdiv
  1506  001578  6A34               	clrf	(??___ftdiv+1)& (0+255),c
  1507  00157A  6A35               	clrf	(??___ftdiv+2)& (0+255),c
  1508  00157C  0100               	movlb	0	; () banked
  1509  00157E  35EC               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  1510  001580  3633               	rlcf	??___ftdiv& (0+255),f,c
  1511  001582  E301               	bnc	u3041
  1512  001584  8034               	bsf	(??___ftdiv+1)& (0+255),0,c
  1513  001586                     u3041:
  1514  001586  5033               	movf	??___ftdiv,w,c
  1515  001588  0100               	movlb	0	; () banked
  1516  00158A  6FF3               	movwf	___ftdiv@sign& (0+255),b
  1517  00158C  0100               	movlb	0	; () banked
  1518  00158E  51F3               	movf	___ftdiv@sign& (0+255),w,b
  1519  001590  A4D8               	btfss	status,2,c
  1520  001592  D00A               	goto	l2982
  1521                           
  1522                           ; BSR set to: 0
  1523  001594  0E00               	movlw	0
  1524  001596  0100               	movlb	0	; () banked
  1525  001598  6FE8               	movwf	?___ftdiv& (0+255),b
  1526  00159A  0E00               	movlw	0
  1527  00159C  0100               	movlb	0	; () banked
  1528  00159E  6FE9               	movwf	(?___ftdiv+1)& (0+255),b
  1529  0015A0  0E00               	movlw	0
  1530  0015A2  0100               	movlb	0	; () banked
  1531  0015A4  6FEA               	movwf	(?___ftdiv+2)& (0+255),b
  1532                           
  1533                           ; BSR set to: 0
  1534  0015A6  0012               	return	
  1535  0015A8                     l2982:
  1536                           
  1537                           ; BSR set to: 0
  1538  0015A8  0E00               	movlw	0
  1539  0015AA  0100               	movlb	0	; () banked
  1540  0015AC  6FEF               	movwf	___ftdiv@f3& (0+255),b
  1541  0015AE  0E00               	movlw	0
  1542  0015B0  0100               	movlb	0	; () banked
  1543  0015B2  6FF0               	movwf	(___ftdiv@f3+1)& (0+255),b
  1544  0015B4  0E00               	movlw	0
  1545  0015B6  0100               	movlb	0	; () banked
  1546  0015B8  6FF1               	movwf	(___ftdiv@f3+2)& (0+255),b
  1547                           
  1548                           ; BSR set to: 0
  1549  0015BA  0100               	movlb	0	; () banked
  1550  0015BC  51F3               	movf	___ftdiv@sign& (0+255),w,b
  1551  0015BE  0F89               	addlw	137
  1552  0015C0  0100               	movlb	0	; () banked
  1553  0015C2  5FF2               	subwf	___ftdiv@exp& (0+255),f,b
  1554                           
  1555                           ; BSR set to: 0
  1556  0015C4  C0EA  F0F3         	movff	___ftdiv@f1+2,___ftdiv@sign
  1557                           
  1558                           ; BSR set to: 0
  1559  0015C8  0100               	movlb	0	; () banked
  1560  0015CA  51ED               	movf	(___ftdiv@f2+2)& (0+255),w,b
  1561  0015CC  0100               	movlb	0	; () banked
  1562  0015CE  1BF3               	xorwf	___ftdiv@sign& (0+255),f,b
  1563                           
  1564                           ; BSR set to: 0
  1565  0015D0  0E80               	movlw	128
  1566  0015D2  0100               	movlb	0	; () banked
  1567  0015D4  17F3               	andwf	___ftdiv@sign& (0+255),f,b
  1568                           
  1569                           ; BSR set to: 0
  1570  0015D6  0100               	movlb	0	; () banked
  1571  0015D8  8FE9               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  1572                           
  1573                           ; BSR set to: 0
  1574  0015DA  0EFF               	movlw	255
  1575  0015DC  0100               	movlb	0	; () banked
  1576  0015DE  17E8               	andwf	___ftdiv@f1& (0+255),f,b
  1577  0015E0  0EFF               	movlw	255
  1578  0015E2  0100               	movlb	0	; () banked
  1579  0015E4  17E9               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  1580  0015E6  0E00               	movlw	0
  1581  0015E8  0100               	movlb	0	; () banked
  1582  0015EA  17EA               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  1583                           
  1584                           ; BSR set to: 0
  1585  0015EC  0100               	movlb	0	; () banked
  1586  0015EE  8FEC               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  1587                           
  1588                           ; BSR set to: 0
  1589  0015F0  0EFF               	movlw	255
  1590  0015F2  0100               	movlb	0	; () banked
  1591  0015F4  17EB               	andwf	___ftdiv@f2& (0+255),f,b
  1592  0015F6  0EFF               	movlw	255
  1593  0015F8  0100               	movlb	0	; () banked
  1594  0015FA  17EC               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  1595  0015FC  0E00               	movlw	0
  1596  0015FE  0100               	movlb	0	; () banked
  1597  001600  17ED               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  1598                           
  1599                           ; BSR set to: 0
  1600  001602  0E18               	movlw	24
  1601  001604  0100               	movlb	0	; () banked
  1602  001606  6FEE               	movwf	___ftdiv@cntr& (0+255),b
  1603  001608  D000               	goto	l3002
  1604  00160A                     l3002:
  1605                           
  1606                           ; BSR set to: 0
  1607  00160A  0100               	movlb	0	; () banked
  1608  00160C  90D8               	bcf	status,0,c
  1609  00160E  37EF               	rlcf	___ftdiv@f3& (0+255),f,b
  1610  001610  37F0               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  1611  001612  37F1               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  1612                           
  1613                           ; BSR set to: 0
  1614  001614  0100               	movlb	0	; () banked
  1615  001616  51EB               	movf	___ftdiv@f2& (0+255),w,b
  1616  001618  0100               	movlb	0	; () banked
  1617  00161A  5DE8               	subwf	___ftdiv@f1& (0+255),w,b
  1618  00161C  0100               	movlb	0	; () banked
  1619  00161E  51EC               	movf	(___ftdiv@f2+1)& (0+255),w,b
  1620  001620  0100               	movlb	0	; () banked
  1621  001622  59E9               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  1622  001624  0100               	movlb	0	; () banked
  1623  001626  51ED               	movf	(___ftdiv@f2+2)& (0+255),w,b
  1624  001628  0100               	movlb	0	; () banked
  1625  00162A  59EA               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  1626  00162C  A0D8               	btfss	status,0,c
  1627  00162E  D00E               	goto	l876
  1628                           
  1629                           ; BSR set to: 0
  1630  001630  0100               	movlb	0	; () banked
  1631  001632  51EB               	movf	___ftdiv@f2& (0+255),w,b
  1632  001634  0100               	movlb	0	; () banked
  1633  001636  5FE8               	subwf	___ftdiv@f1& (0+255),f,b
  1634  001638  0100               	movlb	0	; () banked
  1635  00163A  51EC               	movf	(___ftdiv@f2+1)& (0+255),w,b
  1636  00163C  0100               	movlb	0	; () banked
  1637  00163E  5BE9               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  1638  001640  0100               	movlb	0	; () banked
  1639  001642  51ED               	movf	(___ftdiv@f2+2)& (0+255),w,b
  1640  001644  0100               	movlb	0	; () banked
  1641  001646  5BEA               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  1642                           
  1643                           ; BSR set to: 0
  1644  001648  0100               	movlb	0	; () banked
  1645  00164A  81EF               	bsf	___ftdiv@f3& (0+255),0,b
  1646  00164C                     l876:
  1647                           
  1648                           ; BSR set to: 0
  1649  00164C  0100               	movlb	0	; () banked
  1650  00164E  90D8               	bcf	status,0,c
  1651  001650  37E8               	rlcf	___ftdiv@f1& (0+255),f,b
  1652  001652  37E9               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  1653  001654  37EA               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  1654                           
  1655                           ; BSR set to: 0
  1656  001656  0100               	movlb	0	; () banked
  1657  001658  2FEE               	decfsz	___ftdiv@cntr& (0+255),f,b
  1658  00165A  D7D7               	goto	l3002
  1659  00165C  D000               	goto	l3012
  1660  00165E                     l3012:
  1661                           
  1662                           ; BSR set to: 0
  1663  00165E  C0EF  F019         	movff	___ftdiv@f3,___ftpack@arg
  1664  001662  C0F0  F01A         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1665  001666  C0F1  F01B         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1666  00166A  C0F2  F01C         	movff	___ftdiv@exp,___ftpack@exp
  1667  00166E  C0F3  F01D         	movff	___ftdiv@sign,___ftpack@sign
  1668  001672  EC56  F00D         	call	___ftpack	;wreg free
  1669  001676  C019  F0E8         	movff	?___ftpack,?___ftdiv
  1670  00167A  C01A  F0E9         	movff	?___ftpack+1,?___ftdiv+1
  1671  00167E  C01B  F0EA         	movff	?___ftpack+2,?___ftdiv+2
  1672  001682  0012               	return	
  1673  001684  0012               	return		;funcret
  1674  001686                     __end_of___ftdiv:
  1675                           	opt stack 0
  1676                           tblptru	equ	0xFF8
  1677                           tblptrh	equ	0xFF7
  1678                           prodh	equ	0xFF4
  1679                           prodl	equ	0xFF3
  1680                           intcon	equ	0xFF2
  1681                           postinc0	equ	0xFEE
  1682                           wreg	equ	0xFE8
  1683                           indf2	equ	0xFDF
  1684                           postinc2	equ	0xFDE
  1685                           fsr2h	equ	0xFDA
  1686                           fsr2l	equ	0xFD9
  1687                           status	equ	0xFD8
  1688                           
  1689 ;; *************** function ___ftpack *****************
  1690 ;; Defined at:
  1691 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;  arg             3   24[COMRAM] unsigned um
  1694 ;;  exp             1   27[COMRAM] unsigned char 
  1695 ;;  sign            1   28[COMRAM] unsigned char 
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;		None
  1698 ;; Return value:  Size  Location     Type
  1699 ;;                  3   24[COMRAM] float 
  1700 ;; Registers used:
  1701 ;;		wreg, status,2, status,0
  1702 ;; Tracked objects:
  1703 ;;		On entry : 0/0
  1704 ;;		On exit  : 0/0
  1705 ;;		Unchanged: 0/0
  1706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1707 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1709 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1710 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1711 ;;Total ram usage:        8 bytes
  1712 ;; Hardware stack levels used:    1
  1713 ;; Hardware stack levels required when called:    3
  1714 ;; This function calls:
  1715 ;;		Nothing
  1716 ;; This function is called by:
  1717 ;;		___ftdiv
  1718 ;;		___ftmul
  1719 ;;		___lwtoft
  1720 ;; This function uses a non-reentrant model
  1721 ;;
  1722                           
  1723                           	psect	text9
  1724  001AAC                     __ptext9:
  1725                           	opt stack 0
  1726  001AAC                     ___ftpack:
  1727                           	opt stack 24
  1728                           
  1729                           ;incstack = 0
  1730  001AAC  501C               	movf	___ftpack@exp,w,c
  1731  001AAE  B4D8               	btfsc	status,2,c
  1732  001AB0  D005               	goto	l2816
  1733  001AB2  5019               	movf	___ftpack@arg,w,c
  1734  001AB4  101A               	iorwf	___ftpack@arg+1,w,c
  1735  001AB6  101B               	iorwf	___ftpack@arg+2,w,c
  1736  001AB8  A4D8               	btfss	status,2,c
  1737  001ABA  D00E               	goto	l2822
  1738  001ABC                     l2816:
  1739  001ABC  0E00               	movlw	0
  1740  001ABE  6E19               	movwf	?___ftpack,c
  1741  001AC0  0E00               	movlw	0
  1742  001AC2  6E1A               	movwf	?___ftpack+1,c
  1743  001AC4  0E00               	movlw	0
  1744  001AC6  6E1B               	movwf	?___ftpack+2,c
  1745  001AC8  0012               	return	
  1746  001ACA  D006               	goto	l2822
  1747  001ACC                     l2820:
  1748  001ACC  2A1C               	incf	___ftpack@exp,f,c
  1749  001ACE  90D8               	bcf	status,0,c
  1750  001AD0  321B               	rrcf	___ftpack@arg+2,f,c
  1751  001AD2  321A               	rrcf	___ftpack@arg+1,f,c
  1752  001AD4  3219               	rrcf	___ftpack@arg,f,c
  1753  001AD6  D000               	goto	l2822
  1754  001AD8                     l2822:
  1755  001AD8  0E00               	movlw	0
  1756  001ADA  1419               	andwf	___ftpack@arg,w,c
  1757  001ADC  6E1E               	movwf	??___ftpack& (0+255),c
  1758  001ADE  0E00               	movlw	0
  1759  001AE0  141A               	andwf	___ftpack@arg+1,w,c
  1760  001AE2  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  1761  001AE4  0EFE               	movlw	254
  1762  001AE6  141B               	andwf	___ftpack@arg+2,w,c
  1763  001AE8  6E20               	movwf	(??___ftpack+2)& (0+255),c
  1764  001AEA  501E               	movf	??___ftpack,w,c
  1765  001AEC  101F               	iorwf	??___ftpack+1,w,c
  1766  001AEE  1020               	iorwf	??___ftpack+2,w,c
  1767  001AF0  B4D8               	btfsc	status,2,c
  1768  001AF2  D00E               	goto	l2828
  1769  001AF4  D7EB               	goto	l2820
  1770  001AF6  D00C               	goto	l2828
  1771  001AF8                     l2824:
  1772  001AF8  2A1C               	incf	___ftpack@exp,f,c
  1773  001AFA  0E01               	movlw	1
  1774  001AFC  2619               	addwf	___ftpack@arg,f,c
  1775  001AFE  0E00               	movlw	0
  1776  001B00  221A               	addwfc	___ftpack@arg+1,f,c
  1777  001B02  0E00               	movlw	0
  1778  001B04  221B               	addwfc	___ftpack@arg+2,f,c
  1779  001B06  90D8               	bcf	status,0,c
  1780  001B08  321B               	rrcf	___ftpack@arg+2,f,c
  1781  001B0A  321A               	rrcf	___ftpack@arg+1,f,c
  1782  001B0C  3219               	rrcf	___ftpack@arg,f,c
  1783  001B0E  D000               	goto	l2828
  1784  001B10                     l2828:
  1785  001B10  0E00               	movlw	0
  1786  001B12  1419               	andwf	___ftpack@arg,w,c
  1787  001B14  6E1E               	movwf	??___ftpack& (0+255),c
  1788  001B16  0E00               	movlw	0
  1789  001B18  141A               	andwf	___ftpack@arg+1,w,c
  1790  001B1A  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  1791  001B1C  0EFF               	movlw	255
  1792  001B1E  141B               	andwf	___ftpack@arg+2,w,c
  1793  001B20  6E20               	movwf	(??___ftpack+2)& (0+255),c
  1794  001B22  501E               	movf	??___ftpack,w,c
  1795  001B24  101F               	iorwf	??___ftpack+1,w,c
  1796  001B26  1020               	iorwf	??___ftpack+2,w,c
  1797  001B28  B4D8               	btfsc	status,2,c
  1798  001B2A  D008               	goto	l2832
  1799  001B2C  D7E5               	goto	l2824
  1800  001B2E  D006               	goto	l2832
  1801  001B30                     l2830:
  1802  001B30  061C               	decf	___ftpack@exp,f,c
  1803  001B32  90D8               	bcf	status,0,c
  1804  001B34  3619               	rlcf	___ftpack@arg,f,c
  1805  001B36  361A               	rlcf	___ftpack@arg+1,f,c
  1806  001B38  361B               	rlcf	___ftpack@arg+2,f,c
  1807  001B3A  D000               	goto	l2832
  1808  001B3C                     l2832:
  1809  001B3C  BE1A               	btfsc	___ftpack@arg+1,7,c
  1810  001B3E  D004               	goto	l812
  1811  001B40  0E02               	movlw	2
  1812  001B42  601C               	cpfslt	___ftpack@exp,c
  1813  001B44  D7F5               	goto	l2830
  1814  001B46  D000               	goto	l812
  1815  001B48                     l812:
  1816  001B48  B01C               	btfsc	___ftpack@exp,0,c
  1817  001B4A  D002               	goto	l2838
  1818  001B4C  9E1A               	bcf	___ftpack@arg+1,7,c
  1819  001B4E  D000               	goto	l2838
  1820  001B50                     l2838:
  1821  001B50  90D8               	bcf	status,0,c
  1822  001B52  321C               	rrcf	___ftpack@exp,f,c
  1823  001B54  501C               	movf	___ftpack@exp,w,c
  1824  001B56  121B               	iorwf	___ftpack@arg+2,f,c
  1825  001B58  501D               	movf	___ftpack@sign,w,c
  1826  001B5A  B4D8               	btfsc	status,2,c
  1827  001B5C  D002               	goto	l2844
  1828  001B5E  8E1B               	bsf	___ftpack@arg+2,7,c
  1829  001B60  D000               	goto	l2844
  1830  001B62                     l2844:
  1831  001B62  C019  F019         	movff	___ftpack@arg,?___ftpack
  1832  001B66  C01A  F01A         	movff	___ftpack@arg+1,?___ftpack+1
  1833  001B6A  C01B  F01B         	movff	___ftpack@arg+2,?___ftpack+2
  1834  001B6E  0012               	return	
  1835  001B70  0012               	return		;funcret
  1836  001B72                     __end_of___ftpack:
  1837                           	opt stack 0
  1838                           tblptru	equ	0xFF8
  1839                           tblptrh	equ	0xFF7
  1840                           prodh	equ	0xFF4
  1841                           prodl	equ	0xFF3
  1842                           intcon	equ	0xFF2
  1843                           postinc0	equ	0xFEE
  1844                           wreg	equ	0xFE8
  1845                           indf2	equ	0xFDF
  1846                           postinc2	equ	0xFDE
  1847                           fsr2h	equ	0xFDA
  1848                           fsr2l	equ	0xFD9
  1849                           status	equ	0xFD8
  1850                           
  1851 ;; *************** function _ReadADC *****************
  1852 ;; Defined at:
  1853 ;;		line 24 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  1854 ;; Parameters:    Size  Location     Type
  1855 ;;		None
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;		None
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  2   24[COMRAM] int 
  1860 ;; Registers used:
  1861 ;;		wreg, status,2
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1867 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1869 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1870 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1871 ;;Total ram usage:        4 bytes
  1872 ;; Hardware stack levels used:    1
  1873 ;; Hardware stack levels required when called:    3
  1874 ;; This function calls:
  1875 ;;		Nothing
  1876 ;; This function is called by:
  1877 ;;		_Get_ADC6
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881                           	psect	text10
  1882  0023D6                     __ptext10:
  1883                           	opt stack 0
  1884  0023D6                     _ReadADC:
  1885                           	opt stack 25
  1886                           
  1887                           ;incstack = 0
  1888  0023D6  50C4               	movf	4036,w,c	;volatile
  1889  0023D8  6E1B               	movwf	??_ReadADC& (0+255),c
  1890  0023DA  50C3               	movf	4035,w,c	;volatile
  1891  0023DC  6E19               	movwf	?_ReadADC,c
  1892  0023DE  C01B  F01A         	movff	??_ReadADC,?_ReadADC+1
  1893  0023E2  0012               	return	
  1894  0023E4  0012               	return		;funcret
  1895  0023E6                     __end_of_ReadADC:
  1896                           	opt stack 0
  1897                           tblptru	equ	0xFF8
  1898                           tblptrh	equ	0xFF7
  1899                           prodh	equ	0xFF4
  1900                           prodl	equ	0xFF3
  1901                           intcon	equ	0xFF2
  1902                           postinc0	equ	0xFEE
  1903                           wreg	equ	0xFE8
  1904                           indf2	equ	0xFDF
  1905                           postinc2	equ	0xFDE
  1906                           fsr2h	equ	0xFDA
  1907                           fsr2l	equ	0xFD9
  1908                           status	equ	0xFD8
  1909                           
  1910 ;; *************** function _ConvertADC *****************
  1911 ;; Defined at:
  1912 ;;		line 22 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  1913 ;; Parameters:    Size  Location     Type
  1914 ;;		None
  1915 ;; Auto vars:     Size  Location     Type
  1916 ;;		None
  1917 ;; Return value:  Size  Location     Type
  1918 ;;		None               void
  1919 ;; Registers used:
  1920 ;;		None
  1921 ;; Tracked objects:
  1922 ;;		On entry : 0/0
  1923 ;;		On exit  : 0/0
  1924 ;;		Unchanged: 0/0
  1925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1930 ;;Total ram usage:        0 bytes
  1931 ;; Hardware stack levels used:    1
  1932 ;; Hardware stack levels required when called:    3
  1933 ;; This function calls:
  1934 ;;		Nothing
  1935 ;; This function is called by:
  1936 ;;		_Get_ADC6
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           	psect	text11
  1941  00240A                     __ptext11:
  1942                           	opt stack 0
  1943  00240A                     _ConvertADC:
  1944                           	opt stack 25
  1945                           
  1946                           ;incstack = 0
  1947  00240A  82C2               	bsf	4034,1,c	;volatile
  1948  00240C  0012               	return		;funcret
  1949  00240E                     __end_of_ConvertADC:
  1950                           	opt stack 0
  1951                           tblptru	equ	0xFF8
  1952                           tblptrh	equ	0xFF7
  1953                           prodh	equ	0xFF4
  1954                           prodl	equ	0xFF3
  1955                           intcon	equ	0xFF2
  1956                           postinc0	equ	0xFEE
  1957                           wreg	equ	0xFE8
  1958                           indf2	equ	0xFDF
  1959                           postinc2	equ	0xFDE
  1960                           fsr2h	equ	0xFDA
  1961                           fsr2l	equ	0xFD9
  1962                           status	equ	0xFD8
  1963                           
  1964 ;; *************** function _BusyADC *****************
  1965 ;; Defined at:
  1966 ;;		line 26 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;		None
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;		None
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      unsigned char 
  1973 ;; Registers used:
  1974 ;;		wreg
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1984 ;;Total ram usage:        0 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; Hardware stack levels required when called:    3
  1987 ;; This function calls:
  1988 ;;		Nothing
  1989 ;; This function is called by:
  1990 ;;		_Get_ADC6
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           	psect	text12
  1995  0023E6                     __ptext12:
  1996                           	opt stack 0
  1997  0023E6                     _BusyADC:
  1998                           	opt stack 25
  1999                           
  2000                           ;incstack = 0
  2001  0023E6  A2C2               	btfss	4034,1,c	;volatile
  2002  0023E8  D002               	goto	u3010
  2003  0023EA  0E01               	movlw	1
  2004  0023EC  0012               	return	
  2005  0023EE                     u3010:
  2006  0023EE  0E00               	movlw	0
  2007  0023F0  0012               	return	
  2008  0023F2  0012               	return		;funcret
  2009  0023F4                     __end_of_BusyADC:
  2010                           	opt stack 0
  2011                           tblptru	equ	0xFF8
  2012                           tblptrh	equ	0xFF7
  2013                           prodh	equ	0xFF4
  2014                           prodl	equ	0xFF3
  2015                           intcon	equ	0xFF2
  2016                           postinc0	equ	0xFEE
  2017                           wreg	equ	0xFE8
  2018                           indf2	equ	0xFDF
  2019                           postinc2	equ	0xFDE
  2020                           fsr2h	equ	0xFDA
  2021                           fsr2l	equ	0xFD9
  2022                           status	equ	0xFD8
  2023                           
  2024 ;; *************** function _Result_Show *****************
  2025 ;; Defined at:
  2026 ;;		line 98 in file "_01_USER/Run.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;		None
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;		None
  2031 ;; Return value:  Size  Location     Type
  2032 ;;		None               void
  2033 ;; Registers used:
  2034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2035 ;; Tracked objects:
  2036 ;;		On entry : 0/0
  2037 ;;		On exit  : 0/0
  2038 ;;		Unchanged: 0/0
  2039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2042 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2043 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2044 ;;Total ram usage:        1 bytes
  2045 ;; Hardware stack levels used:    1
  2046 ;; Hardware stack levels required when called:    7
  2047 ;; This function calls:
  2048 ;;		_TM1640_Show_integer
  2049 ;;		___wmul
  2050 ;; This function is called by:
  2051 ;;		_main
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           	psect	text13
  2056  001D2A                     __ptext13:
  2057                           	opt stack 0
  2058  001D2A                     _Result_Show:
  2059                           	opt stack 23
  2060                           
  2061                           ;Run.c: 100: if( Handle_Switch.Show_Send_Receive )
  2062                           
  2063                           ;incstack = 0
  2064  001D2A  5039               	movf	_Handle_Switch+3,w,c
  2065  001D2C  B4D8               	btfsc	status,2,c
  2066  001D2E  D01D               	goto	l3396
  2067                           
  2068                           ;Run.c: 101: {
  2069                           ;Run.c: 102: TM1640_Show_integer( RS485_SendBuff[RS485_Num] + (RS485_Num * 1000) );
  2070  001D30  C046  F019         	movff	_RS485_Num,___wmul@multiplier
  2071  001D34  6A1A               	clrf	___wmul@multiplier+1,c
  2072  001D36  0E03               	movlw	3
  2073  001D38  6E1C               	movwf	___wmul@multiplicand+1,c
  2074  001D3A  0EE8               	movlw	232
  2075  001D3C  6E1B               	movwf	___wmul@multiplicand,c
  2076  001D3E  EC14  F011         	call	___wmul	;wreg free
  2077  001D42  5046               	movf	_RS485_Num,w,c
  2078  001D44  0D01               	mullw	1
  2079  001D46  0EDE               	movlw	low _RS485_SendBuff
  2080  001D48  24F3               	addwf	prodl,w,c
  2081  001D4A  6ED9               	movwf	fsr2l,c
  2082  001D4C  0E00               	movlw	high _RS485_SendBuff
  2083  001D4E  20F4               	addwfc	prodh,w,c
  2084  001D50  6EDA               	movwf	fsr2h,c
  2085  001D52  50DF               	movf	indf2,w,c
  2086  001D54  6E22               	movwf	??_Result_Show& (0+255),c
  2087  001D56  5022               	movf	??_Result_Show,w,c
  2088  001D58  2419               	addwf	?___wmul,w,c
  2089  001D5A  6E20               	movwf	TM1640_Show_integer@Numbers,c
  2090  001D5C  0E00               	movlw	0
  2091  001D5E  201A               	addwfc	?___wmul+1,w,c
  2092  001D60  6E21               	movwf	TM1640_Show_integer@Numbers+1,c
  2093  001D62  ECD7  F00B         	call	_TM1640_Show_integer	;wreg free
  2094                           
  2095                           ;Run.c: 103: PORTEbits.RE7=0;
  2096  001D66  9E84               	bcf	3972,7,c	;volatile
  2097                           
  2098                           ;Run.c: 104: }
  2099  001D68  0012               	return	
  2100  001D6A                     l3396:
  2101                           
  2102                           ;Run.c: 106: else
  2103                           ;Run.c: 107: {
  2104                           ;Run.c: 108: TM1640_Show_integer( RS485_ReceiveBuff[RS485_Num] + (RS485_Num * 1000) );
  2105  001D6A  C046  F019         	movff	_RS485_Num,___wmul@multiplier
  2106  001D6E  6A1A               	clrf	___wmul@multiplier+1,c
  2107  001D70  0E03               	movlw	3
  2108  001D72  6E1C               	movwf	___wmul@multiplicand+1,c
  2109  001D74  0EE8               	movlw	232
  2110  001D76  6E1B               	movwf	___wmul@multiplicand,c
  2111  001D78  EC14  F011         	call	___wmul	;wreg free
  2112  001D7C  5046               	movf	_RS485_Num,w,c
  2113  001D7E  0D01               	mullw	1
  2114  001D80  0ED4               	movlw	low _RS485_ReceiveBuff
  2115  001D82  24F3               	addwf	prodl,w,c
  2116  001D84  6ED9               	movwf	fsr2l,c
  2117  001D86  0E00               	movlw	high _RS485_ReceiveBuff
  2118  001D88  20F4               	addwfc	prodh,w,c
  2119  001D8A  6EDA               	movwf	fsr2h,c
  2120  001D8C  50DF               	movf	indf2,w,c
  2121  001D8E  6E22               	movwf	??_Result_Show& (0+255),c
  2122  001D90  5022               	movf	??_Result_Show,w,c
  2123  001D92  2419               	addwf	?___wmul,w,c
  2124  001D94  6E20               	movwf	TM1640_Show_integer@Numbers,c
  2125  001D96  0E00               	movlw	0
  2126  001D98  201A               	addwfc	?___wmul+1,w,c
  2127  001D9A  6E21               	movwf	TM1640_Show_integer@Numbers+1,c
  2128  001D9C  ECD7  F00B         	call	_TM1640_Show_integer	;wreg free
  2129                           
  2130                           ;Run.c: 109: PORTEbits.RE7=1;
  2131  001DA0  8E84               	bsf	3972,7,c	;volatile
  2132  001DA2  0012               	return	
  2133  001DA4  0012               	return		;funcret
  2134  001DA6                     __end_of_Result_Show:
  2135                           	opt stack 0
  2136                           tblptru	equ	0xFF8
  2137                           tblptrh	equ	0xFF7
  2138                           prodh	equ	0xFF4
  2139                           prodl	equ	0xFF3
  2140                           intcon	equ	0xFF2
  2141                           postinc0	equ	0xFEE
  2142                           wreg	equ	0xFE8
  2143                           indf2	equ	0xFDF
  2144                           postinc2	equ	0xFDE
  2145                           fsr2h	equ	0xFDA
  2146                           fsr2l	equ	0xFD9
  2147                           status	equ	0xFD8
  2148                           
  2149 ;; *************** function ___wmul *****************
  2150 ;; Defined at:
  2151 ;;		line 15 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;  multiplier      2   24[COMRAM] unsigned int 
  2154 ;;  multiplicand    2   26[COMRAM] unsigned int 
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;  product         2   28[COMRAM] unsigned int 
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  2   24[COMRAM] unsigned int 
  2159 ;; Registers used:
  2160 ;;		wreg, status,2, status,0, prodl, prodh
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2166 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2169 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2170 ;;Total ram usage:        6 bytes
  2171 ;; Hardware stack levels used:    1
  2172 ;; Hardware stack levels required when called:    3
  2173 ;; This function calls:
  2174 ;;		Nothing
  2175 ;; This function is called by:
  2176 ;;		_Result_Show
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180                           	psect	text14
  2181  002228                     __ptext14:
  2182                           	opt stack 0
  2183  002228                     ___wmul:
  2184                           	opt stack 26
  2185                           
  2186                           ;incstack = 0
  2187  002228  5019               	movf	___wmul@multiplier,w,c
  2188  00222A  021B               	mulwf	___wmul@multiplicand,c
  2189  00222C  CFF3 F01D          	movff	prodl,___wmul@product
  2190  002230  CFF4 F01E          	movff	prodh,___wmul@product+1
  2191  002234  5019               	movf	___wmul@multiplier,w,c
  2192  002236  021C               	mulwf	___wmul@multiplicand+1,c
  2193  002238  50F3               	movf	prodl,w,c
  2194  00223A  261E               	addwf	___wmul@product+1,f,c
  2195  00223C  501A               	movf	___wmul@multiplier+1,w,c
  2196  00223E  021B               	mulwf	___wmul@multiplicand,c
  2197  002240  50F3               	movf	prodl,w,c
  2198  002242  261E               	addwf	___wmul@product+1,f,c
  2199  002244  C01D  F019         	movff	___wmul@product,?___wmul
  2200  002248  C01E  F01A         	movff	___wmul@product+1,?___wmul+1
  2201  00224C  0012               	return	
  2202  00224E  0012               	return		;funcret
  2203  002250                     __end_of___wmul:
  2204                           	opt stack 0
  2205                           tblptru	equ	0xFF8
  2206                           tblptrh	equ	0xFF7
  2207                           prodh	equ	0xFF4
  2208                           prodl	equ	0xFF3
  2209                           intcon	equ	0xFF2
  2210                           postinc0	equ	0xFEE
  2211                           wreg	equ	0xFE8
  2212                           indf2	equ	0xFDF
  2213                           postinc2	equ	0xFDE
  2214                           fsr2h	equ	0xFDA
  2215                           fsr2l	equ	0xFD9
  2216                           status	equ	0xFD8
  2217                           
  2218 ;; *************** function _TM1640_Show_integer *****************
  2219 ;; Defined at:
  2220 ;;		line 55 in file "_01_USER/TM1640.c"
  2221 ;; Parameters:    Size  Location     Type
  2222 ;;  Numbers         2   31[COMRAM] unsigned int 
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;		None
  2225 ;; Return value:  Size  Location     Type
  2226 ;;		None               void
  2227 ;; Registers used:
  2228 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2234 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2237 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2238 ;;Total ram usage:        2 bytes
  2239 ;; Hardware stack levels used:    1
  2240 ;; Hardware stack levels required when called:    6
  2241 ;; This function calls:
  2242 ;;		_TM1640_Writer_Dates
  2243 ;;		___lwdiv
  2244 ;;		___lwmod
  2245 ;; This function is called by:
  2246 ;;		_Result_Show
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           	psect	text15
  2251  0017AE                     __ptext15:
  2252                           	opt stack 0
  2253  0017AE                     _TM1640_Show_integer:
  2254                           	opt stack 23
  2255                           
  2256                           ;TM1640.c: 58: TM1640_Writer_Dates(3,LED_Number[Numbers%10]); Numbers/=10;
  2257                           
  2258                           ;incstack = 0
  2259  0017AE  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  2260  0017B2  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  2261  0017B6  0E00               	movlw	0
  2262  0017B8  6E1C               	movwf	___lwmod@divisor+1,c
  2263  0017BA  0E0A               	movlw	10
  2264  0017BC  6E1B               	movwf	___lwmod@divisor,c
  2265  0017BE  ECCE  F00F         	call	___lwmod	;wreg free
  2266  0017C2  0E01               	movlw	low _LED_Number
  2267  0017C4  2419               	addwf	?___lwmod,w,c
  2268  0017C6  6EF6               	movwf	tblptrl,c
  2269  0017C8  0E10               	movlw	high _LED_Number
  2270  0017CA  201A               	addwfc	?___lwmod+1,w,c
  2271  0017CC  6EF7               	movwf	tblptrh,c
  2272  0017CE                     	if	0	;There are less than 3 active tblptr bytes
  2273  0017CE                     	endif
  2274  0017CE  0008               	tblrd		*
  2275  0017D0  CFF5 F01E          	movff	tablat,TM1640_Writer_Dates@Date
  2276  0017D4  0E03               	movlw	3
  2277  0017D6  ECAA  F011         	call	_TM1640_Writer_Dates
  2278  0017DA  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  2279  0017DE  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  2280  0017E2  0E00               	movlw	0
  2281  0017E4  6E1C               	movwf	___lwdiv@divisor+1,c
  2282  0017E6  0E0A               	movlw	10
  2283  0017E8  6E1B               	movwf	___lwdiv@divisor,c
  2284  0017EA  EC79  F00F         	call	___lwdiv	;wreg free
  2285  0017EE  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  2286  0017F2  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  2287                           
  2288                           ;TM1640.c: 59: TM1640_Writer_Dates(2,LED_Number[Numbers%10]); Numbers/=10;
  2289  0017F6  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  2290  0017FA  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  2291  0017FE  0E00               	movlw	0
  2292  001800  6E1C               	movwf	___lwmod@divisor+1,c
  2293  001802  0E0A               	movlw	10
  2294  001804  6E1B               	movwf	___lwmod@divisor,c
  2295  001806  ECCE  F00F         	call	___lwmod	;wreg free
  2296  00180A  0E01               	movlw	low _LED_Number
  2297  00180C  2419               	addwf	?___lwmod,w,c
  2298  00180E  6EF6               	movwf	tblptrl,c
  2299  001810  0E10               	movlw	high _LED_Number
  2300  001812  201A               	addwfc	?___lwmod+1,w,c
  2301  001814  6EF7               	movwf	tblptrh,c
  2302  001816                     	if	0	;There are less than 3 active tblptr bytes
  2303  001816                     	endif
  2304  001816  0008               	tblrd		*
  2305  001818  CFF5 F01E          	movff	tablat,TM1640_Writer_Dates@Date
  2306  00181C  0E02               	movlw	2
  2307  00181E  ECAA  F011         	call	_TM1640_Writer_Dates
  2308  001822  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  2309  001826  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  2310  00182A  0E00               	movlw	0
  2311  00182C  6E1C               	movwf	___lwdiv@divisor+1,c
  2312  00182E  0E0A               	movlw	10
  2313  001830  6E1B               	movwf	___lwdiv@divisor,c
  2314  001832  EC79  F00F         	call	___lwdiv	;wreg free
  2315  001836  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  2316  00183A  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  2317                           
  2318                           ;TM1640.c: 60: TM1640_Writer_Dates(1,LED_Number[Numbers%10]); Numbers/=10;
  2319  00183E  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  2320  001842  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  2321  001846  0E00               	movlw	0
  2322  001848  6E1C               	movwf	___lwmod@divisor+1,c
  2323  00184A  0E0A               	movlw	10
  2324  00184C  6E1B               	movwf	___lwmod@divisor,c
  2325  00184E  ECCE  F00F         	call	___lwmod	;wreg free
  2326  001852  0E01               	movlw	low _LED_Number
  2327  001854  2419               	addwf	?___lwmod,w,c
  2328  001856  6EF6               	movwf	tblptrl,c
  2329  001858  0E10               	movlw	high _LED_Number
  2330  00185A  201A               	addwfc	?___lwmod+1,w,c
  2331  00185C  6EF7               	movwf	tblptrh,c
  2332  00185E                     	if	0	;There are less than 3 active tblptr bytes
  2333  00185E                     	endif
  2334  00185E  0008               	tblrd		*
  2335  001860  CFF5 F01E          	movff	tablat,TM1640_Writer_Dates@Date
  2336  001864  0E01               	movlw	1
  2337  001866  ECAA  F011         	call	_TM1640_Writer_Dates
  2338  00186A  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  2339  00186E  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  2340  001872  0E00               	movlw	0
  2341  001874  6E1C               	movwf	___lwdiv@divisor+1,c
  2342  001876  0E0A               	movlw	10
  2343  001878  6E1B               	movwf	___lwdiv@divisor,c
  2344  00187A  EC79  F00F         	call	___lwdiv	;wreg free
  2345  00187E  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  2346  001882  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  2347                           
  2348                           ;TM1640.c: 61: TM1640_Writer_Dates(0,LED_Number[Numbers%10]);
  2349  001886  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  2350  00188A  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  2351  00188E  0E00               	movlw	0
  2352  001890  6E1C               	movwf	___lwmod@divisor+1,c
  2353  001892  0E0A               	movlw	10
  2354  001894  6E1B               	movwf	___lwmod@divisor,c
  2355  001896  ECCE  F00F         	call	___lwmod	;wreg free
  2356  00189A  0E01               	movlw	low _LED_Number
  2357  00189C  2419               	addwf	?___lwmod,w,c
  2358  00189E  6EF6               	movwf	tblptrl,c
  2359  0018A0  0E10               	movlw	high _LED_Number
  2360  0018A2  201A               	addwfc	?___lwmod+1,w,c
  2361  0018A4  6EF7               	movwf	tblptrh,c
  2362  0018A6                     	if	0	;There are less than 3 active tblptr bytes
  2363  0018A6                     	endif
  2364  0018A6  0008               	tblrd		*
  2365  0018A8  CFF5 F01E          	movff	tablat,TM1640_Writer_Dates@Date
  2366  0018AC  0E00               	movlw	0
  2367  0018AE  ECAA  F011         	call	_TM1640_Writer_Dates
  2368  0018B2  0012               	return		;funcret
  2369  0018B4                     __end_of_TM1640_Show_integer:
  2370                           	opt stack 0
  2371                           tblptru	equ	0xFF8
  2372                           tblptrh	equ	0xFF7
  2373                           tblptrl	equ	0xFF6
  2374                           tablat	equ	0xFF5
  2375                           prodh	equ	0xFF4
  2376                           prodl	equ	0xFF3
  2377                           intcon	equ	0xFF2
  2378                           postinc0	equ	0xFEE
  2379                           wreg	equ	0xFE8
  2380                           indf2	equ	0xFDF
  2381                           postinc2	equ	0xFDE
  2382                           fsr2h	equ	0xFDA
  2383                           fsr2l	equ	0xFD9
  2384                           status	equ	0xFD8
  2385                           
  2386 ;; *************** function ___lwmod *****************
  2387 ;; Defined at:
  2388 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  2389 ;; Parameters:    Size  Location     Type
  2390 ;;  dividend        2   24[COMRAM] unsigned int 
  2391 ;;  divisor         2   26[COMRAM] unsigned int 
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;  counter         1   28[COMRAM] unsigned char 
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  2   24[COMRAM] unsigned int 
  2396 ;; Registers used:
  2397 ;;		wreg, status,2, status,0
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2403 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2404 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2406 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2407 ;;Total ram usage:        5 bytes
  2408 ;; Hardware stack levels used:    1
  2409 ;; Hardware stack levels required when called:    3
  2410 ;; This function calls:
  2411 ;;		Nothing
  2412 ;; This function is called by:
  2413 ;;		_TM1640_Show_integer
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           	psect	text16
  2418  001F9C                     __ptext16:
  2419                           	opt stack 0
  2420  001F9C                     ___lwmod:
  2421                           	opt stack 25
  2422                           
  2423                           ;incstack = 0
  2424  001F9C  501B               	movf	___lwmod@divisor,w,c
  2425  001F9E  101C               	iorwf	___lwmod@divisor+1,w,c
  2426  001FA0  B4D8               	btfsc	status,2,c
  2427  001FA2  D01D               	goto	l1021
  2428  001FA4  0E01               	movlw	1
  2429  001FA6  6E1D               	movwf	___lwmod@counter,c
  2430  001FA8  D005               	goto	l3108
  2431  001FAA                     l3106:
  2432  001FAA  90D8               	bcf	status,0,c
  2433  001FAC  361B               	rlcf	___lwmod@divisor,f,c
  2434  001FAE  361C               	rlcf	___lwmod@divisor+1,f,c
  2435  001FB0  2A1D               	incf	___lwmod@counter,f,c
  2436  001FB2  D000               	goto	l3108
  2437  001FB4                     l3108:
  2438  001FB4  BE1C               	btfsc	___lwmod@divisor+1,7,c
  2439  001FB6  D002               	goto	l3110
  2440  001FB8  D7F8               	goto	l3106
  2441  001FBA  D000               	goto	l3110
  2442  001FBC                     l3110:
  2443  001FBC  501B               	movf	___lwmod@divisor,w,c
  2444  001FBE  5C19               	subwf	___lwmod@dividend,w,c
  2445  001FC0  501C               	movf	___lwmod@divisor+1,w,c
  2446  001FC2  581A               	subwfb	___lwmod@dividend+1,w,c
  2447  001FC4  A0D8               	btfss	status,0,c
  2448  001FC6  D005               	goto	l3114
  2449  001FC8  501B               	movf	___lwmod@divisor,w,c
  2450  001FCA  5E19               	subwf	___lwmod@dividend,f,c
  2451  001FCC  501C               	movf	___lwmod@divisor+1,w,c
  2452  001FCE  5A1A               	subwfb	___lwmod@dividend+1,f,c
  2453  001FD0  D000               	goto	l3114
  2454  001FD2                     l3114:
  2455  001FD2  90D8               	bcf	status,0,c
  2456  001FD4  321C               	rrcf	___lwmod@divisor+1,f,c
  2457  001FD6  321B               	rrcf	___lwmod@divisor,f,c
  2458  001FD8  2E1D               	decfsz	___lwmod@counter,f,c
  2459  001FDA  D7F0               	goto	l3110
  2460  001FDC  D000               	goto	l1021
  2461  001FDE                     l1021:
  2462  001FDE  C019  F019         	movff	___lwmod@dividend,?___lwmod
  2463  001FE2  C01A  F01A         	movff	___lwmod@dividend+1,?___lwmod+1
  2464  001FE6  0012               	return		;funcret
  2465  001FE8                     __end_of___lwmod:
  2466                           	opt stack 0
  2467                           tblptru	equ	0xFF8
  2468                           tblptrh	equ	0xFF7
  2469                           tblptrl	equ	0xFF6
  2470                           tablat	equ	0xFF5
  2471                           prodh	equ	0xFF4
  2472                           prodl	equ	0xFF3
  2473                           intcon	equ	0xFF2
  2474                           postinc0	equ	0xFEE
  2475                           wreg	equ	0xFE8
  2476                           indf2	equ	0xFDF
  2477                           postinc2	equ	0xFDE
  2478                           fsr2h	equ	0xFDA
  2479                           fsr2l	equ	0xFD9
  2480                           status	equ	0xFD8
  2481                           
  2482 ;; *************** function ___lwdiv *****************
  2483 ;; Defined at:
  2484 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;  dividend        2   24[COMRAM] unsigned int 
  2487 ;;  divisor         2   26[COMRAM] unsigned int 
  2488 ;; Auto vars:     Size  Location     Type
  2489 ;;  quotient        2   29[COMRAM] unsigned int 
  2490 ;;  counter         1   28[COMRAM] unsigned char 
  2491 ;; Return value:  Size  Location     Type
  2492 ;;                  2   24[COMRAM] unsigned int 
  2493 ;; Registers used:
  2494 ;;		wreg, status,2, status,0
  2495 ;; Tracked objects:
  2496 ;;		On entry : 0/0
  2497 ;;		On exit  : 0/0
  2498 ;;		Unchanged: 0/0
  2499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2500 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2501 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2503 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2504 ;;Total ram usage:        7 bytes
  2505 ;; Hardware stack levels used:    1
  2506 ;; Hardware stack levels required when called:    3
  2507 ;; This function calls:
  2508 ;;		Nothing
  2509 ;; This function is called by:
  2510 ;;		_TM1640_Show_integer
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514                           	psect	text17
  2515  001EF2                     __ptext17:
  2516                           	opt stack 0
  2517  001EF2                     ___lwdiv:
  2518                           	opt stack 25
  2519                           
  2520                           ;incstack = 0
  2521  001EF2  0E00               	movlw	0
  2522  001EF4  6E1F               	movwf	___lwdiv@quotient+1,c
  2523  001EF6  0E00               	movlw	0
  2524  001EF8  6E1E               	movwf	___lwdiv@quotient,c
  2525  001EFA  501B               	movf	___lwdiv@divisor,w,c
  2526  001EFC  101C               	iorwf	___lwdiv@divisor+1,w,c
  2527  001EFE  B4D8               	btfsc	status,2,c
  2528  001F00  D021               	goto	l1011
  2529  001F02  0E01               	movlw	1
  2530  001F04  6E1D               	movwf	___lwdiv@counter,c
  2531  001F06  D005               	goto	l3088
  2532  001F08                     l3086:
  2533  001F08  90D8               	bcf	status,0,c
  2534  001F0A  361B               	rlcf	___lwdiv@divisor,f,c
  2535  001F0C  361C               	rlcf	___lwdiv@divisor+1,f,c
  2536  001F0E  2A1D               	incf	___lwdiv@counter,f,c
  2537  001F10  D000               	goto	l3088
  2538  001F12                     l3088:
  2539  001F12  BE1C               	btfsc	___lwdiv@divisor+1,7,c
  2540  001F14  D002               	goto	l3090
  2541  001F16  D7F8               	goto	l3086
  2542  001F18  D000               	goto	l3090
  2543  001F1A                     l3090:
  2544  001F1A  90D8               	bcf	status,0,c
  2545  001F1C  361E               	rlcf	___lwdiv@quotient,f,c
  2546  001F1E  361F               	rlcf	___lwdiv@quotient+1,f,c
  2547  001F20  501B               	movf	___lwdiv@divisor,w,c
  2548  001F22  5C19               	subwf	___lwdiv@dividend,w,c
  2549  001F24  501C               	movf	___lwdiv@divisor+1,w,c
  2550  001F26  581A               	subwfb	___lwdiv@dividend+1,w,c
  2551  001F28  A0D8               	btfss	status,0,c
  2552  001F2A  D006               	goto	l3098
  2553  001F2C  501B               	movf	___lwdiv@divisor,w,c
  2554  001F2E  5E19               	subwf	___lwdiv@dividend,f,c
  2555  001F30  501C               	movf	___lwdiv@divisor+1,w,c
  2556  001F32  5A1A               	subwfb	___lwdiv@dividend+1,f,c
  2557  001F34  801E               	bsf	___lwdiv@quotient,0,c
  2558  001F36  D000               	goto	l3098
  2559  001F38                     l3098:
  2560  001F38  90D8               	bcf	status,0,c
  2561  001F3A  321C               	rrcf	___lwdiv@divisor+1,f,c
  2562  001F3C  321B               	rrcf	___lwdiv@divisor,f,c
  2563  001F3E  2E1D               	decfsz	___lwdiv@counter,f,c
  2564  001F40  D7EC               	goto	l3090
  2565  001F42  D000               	goto	l1011
  2566  001F44                     l1011:
  2567  001F44  C01E  F019         	movff	___lwdiv@quotient,?___lwdiv
  2568  001F48  C01F  F01A         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2569  001F4C  0012               	return		;funcret
  2570  001F4E                     __end_of___lwdiv:
  2571                           	opt stack 0
  2572                           tblptru	equ	0xFF8
  2573                           tblptrh	equ	0xFF7
  2574                           tblptrl	equ	0xFF6
  2575                           tablat	equ	0xFF5
  2576                           prodh	equ	0xFF4
  2577                           prodl	equ	0xFF3
  2578                           intcon	equ	0xFF2
  2579                           postinc0	equ	0xFEE
  2580                           wreg	equ	0xFE8
  2581                           indf2	equ	0xFDF
  2582                           postinc2	equ	0xFDE
  2583                           fsr2h	equ	0xFDA
  2584                           fsr2l	equ	0xFD9
  2585                           status	equ	0xFD8
  2586                           
  2587 ;; *************** function _TM1640_Writer_Dates *****************
  2588 ;; Defined at:
  2589 ;;		line 66 in file "_01_USER/TM1640.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;  Addr            1    wreg     unsigned char 
  2592 ;;  Date            1   29[COMRAM] unsigned char 
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;  Addr            1   30[COMRAM] unsigned char 
  2595 ;; Return value:  Size  Location     Type
  2596 ;;		None               void
  2597 ;; Registers used:
  2598 ;;		wreg, status,2, status,0, cstack
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2604 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2605 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2607 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2608 ;;Total ram usage:        2 bytes
  2609 ;; Hardware stack levels used:    1
  2610 ;; Hardware stack levels required when called:    5
  2611 ;; This function calls:
  2612 ;;		_TM1640_Start
  2613 ;;		_TM1640_Stop
  2614 ;;		_TM1640_Writer_Byte
  2615 ;; This function is called by:
  2616 ;;		_TM1640_Show_integer
  2617 ;;		_TM1640_Show_Decimal
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621                           	psect	text18
  2622  002354                     __ptext18:
  2623                           	opt stack 0
  2624  002354                     _TM1640_Writer_Dates:
  2625                           	opt stack 23
  2626                           
  2627                           ;incstack = 0
  2628                           ;TM1640_Writer_Dates@Addr stored from wreg
  2629  002354  6E1F               	movwf	TM1640_Writer_Dates@Addr,c
  2630                           
  2631                           ;TM1640.c: 68: if((Addr >= 0) && (Addr <= 3))
  2632  002356  0E04               	movlw	4
  2633  002358  601F               	cpfslt	TM1640_Writer_Dates@Addr,c
  2634  00235A  0012               	return	
  2635                           
  2636                           ;TM1640.c: 69: {
  2637                           ;TM1640.c: 70: TM1640_Start();
  2638  00235C  EC98  F011         	call	_TM1640_Start	;wreg free
  2639                           
  2640                           ;TM1640.c: 71: TM1640_Writer_Byte(0xC0 + Addr);
  2641  002360  501F               	movf	TM1640_Writer_Dates@Addr,w,c
  2642  002362  0FC0               	addlw	192
  2643  002364  EC5E  F010         	call	_TM1640_Writer_Byte
  2644                           
  2645                           ;TM1640.c: 72: TM1640_Writer_Byte(Date);
  2646  002368  501E               	movf	TM1640_Writer_Dates@Date,w,c
  2647  00236A  EC5E  F010         	call	_TM1640_Writer_Byte
  2648                           
  2649                           ;TM1640.c: 73: TM1640_Stop();
  2650  00236E  EC86  F011         	call	_TM1640_Stop	;wreg free
  2651  002372  0012               	return	
  2652  002374  0012               	return		;funcret
  2653  002376                     __end_of_TM1640_Writer_Dates:
  2654                           	opt stack 0
  2655                           tblptru	equ	0xFF8
  2656                           tblptrh	equ	0xFF7
  2657                           tblptrl	equ	0xFF6
  2658                           tablat	equ	0xFF5
  2659                           prodh	equ	0xFF4
  2660                           prodl	equ	0xFF3
  2661                           intcon	equ	0xFF2
  2662                           postinc0	equ	0xFEE
  2663                           wreg	equ	0xFE8
  2664                           indf2	equ	0xFDF
  2665                           postinc2	equ	0xFDE
  2666                           fsr2h	equ	0xFDA
  2667                           fsr2l	equ	0xFD9
  2668                           status	equ	0xFD8
  2669                           
  2670 ;; *************** function _RS485_Init *****************
  2671 ;; Defined at:
  2672 ;;		line 47 in file "_01_USER/My_USART.c"
  2673 ;; Parameters:    Size  Location     Type
  2674 ;;		None
  2675 ;; Auto vars:     Size  Location     Type
  2676 ;;		None
  2677 ;; Return value:  Size  Location     Type
  2678 ;;		None               void
  2679 ;; Registers used:
  2680 ;;		wreg, status,2, status,0, cstack
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 0/0
  2684 ;;		Unchanged: 0/0
  2685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2690 ;;Total ram usage:        0 bytes
  2691 ;; Hardware stack levels used:    1
  2692 ;; Hardware stack levels required when called:    4
  2693 ;; This function calls:
  2694 ;;		_Open2USART
  2695 ;; This function is called by:
  2696 ;;		_main
  2697 ;; This function uses a non-reentrant model
  2698 ;;
  2699                           
  2700                           	psect	text19
  2701  002376                     __ptext19:
  2702                           	opt stack 0
  2703  002376                     _RS485_Init:
  2704                           	opt stack 26
  2705                           
  2706                           ;My_USART.c: 49: Open2USART( 0b01111111 &
  2707                           ;My_USART.c: 50: 0b11111111 &
  2708                           ;My_USART.c: 51: 0b11111110 &
  2709                           ;My_USART.c: 52: 0b11111101 &
  2710                           ;My_USART.c: 53: 0b11111111 &
  2711                           ;My_USART.c: 54: 0b11101111
  2712                           ;My_USART.c: 55: ,
  2713                           ;My_USART.c: 56: 12
  2714                           ;My_USART.c: 57: );
  2715                           
  2716                           ;incstack = 0
  2717  002376  0E00               	movlw	0
  2718  002378  6E1A               	movwf	Open2USART@spbrg+1,c
  2719  00237A  0E0C               	movlw	12
  2720  00237C  6E19               	movwf	Open2USART@spbrg,c
  2721  00237E  0E6C               	movlw	108
  2722  002380  EC53  F00E         	call	_Open2USART
  2723                           
  2724                           ;My_USART.c: 59: TRISGbits.TRISG1 = 1;
  2725  002384  8298               	bsf	3992,1,c	;volatile
  2726                           
  2727                           ;My_USART.c: 60: TRISGbits.TRISG2 = 0;
  2728  002386  9498               	bcf	3992,2,c	;volatile
  2729                           
  2730                           ;My_USART.c: 61: TRISGbits.TRISG3 = 0;
  2731  002388  9698               	bcf	3992,3,c	;volatile
  2732                           
  2733                           ;My_USART.c: 62: RG3 = 1;
  2734  00238A  8686               	bsf	3974,3,c	;volatile
  2735                           
  2736                           ;My_USART.c: 63: ANCON2 &= 0XF1;
  2737  00238C  0EF1               	movlw	241
  2738  00238E  010F               	movlb	15	; () banked
  2739  002390  1723               	andwf	35,f,b	;volatile
  2740                           
  2741                           ; BSR set to: 15
  2742  002392  0012               	return		;funcret
  2743  002394                     __end_of_RS485_Init:
  2744                           	opt stack 0
  2745                           tblptru	equ	0xFF8
  2746                           tblptrh	equ	0xFF7
  2747                           tblptrl	equ	0xFF6
  2748                           tablat	equ	0xFF5
  2749                           prodh	equ	0xFF4
  2750                           prodl	equ	0xFF3
  2751                           intcon	equ	0xFF2
  2752                           postinc0	equ	0xFEE
  2753                           wreg	equ	0xFE8
  2754                           indf2	equ	0xFDF
  2755                           postinc2	equ	0xFDE
  2756                           fsr2h	equ	0xFDA
  2757                           fsr2l	equ	0xFD9
  2758                           status	equ	0xFD8
  2759                           
  2760 ;; *************** function _Open2USART *****************
  2761 ;; Defined at:
  2762 ;;		line 118 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u2open.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;  config          1    wreg     unsigned char 
  2765 ;;  spbrg           2   24[COMRAM] unsigned int 
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;  config          1   26[COMRAM] unsigned char 
  2768 ;; Return value:  Size  Location     Type
  2769 ;;		None               void
  2770 ;; Registers used:
  2771 ;;		wreg, status,2
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2777 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2778 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2780 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2781 ;;Total ram usage:        3 bytes
  2782 ;; Hardware stack levels used:    1
  2783 ;; Hardware stack levels required when called:    3
  2784 ;; This function calls:
  2785 ;;		Nothing
  2786 ;; This function is called by:
  2787 ;;		_RS485_Init
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           	psect	text20
  2792  001CA6                     __ptext20:
  2793                           	opt stack 0
  2794  001CA6                     _Open2USART:
  2795                           	opt stack 26
  2796                           
  2797                           ; BSR set to: 15
  2798                           ;incstack = 0
  2799                           ;Open2USART@config stored from wreg
  2800  001CA6  6E1B               	movwf	Open2USART@config,c
  2801  001CA8  0E00               	movlw	0
  2802  001CAA  010F               	movlb	15	; () banked
  2803  001CAC  6F21               	movwf	33,b	;volatile
  2804  001CAE  0E00               	movlw	0
  2805  001CB0  010F               	movlb	15	; () banked
  2806  001CB2  6F22               	movwf	34,b	;volatile
  2807                           
  2808                           ; BSR set to: 15
  2809  001CB4  A01B               	btfss	Open2USART@config,0,c
  2810  001CB6  D003               	goto	l3182
  2811                           
  2812                           ; BSR set to: 15
  2813  001CB8  010F               	movlb	15	; () banked
  2814  001CBA  8921               	bsf	33,4,b	;volatile
  2815  001CBC  D000               	goto	l3182
  2816  001CBE                     l3182:
  2817                           
  2818                           ; BSR set to: 15
  2819  001CBE  A21B               	btfss	Open2USART@config,1,c
  2820  001CC0  D005               	goto	l3186
  2821                           
  2822                           ; BSR set to: 15
  2823  001CC2  010F               	movlb	15	; () banked
  2824  001CC4  8D21               	bsf	33,6,b	;volatile
  2825  001CC6  010F               	movlb	15	; () banked
  2826  001CC8  8D22               	bsf	34,6,b	;volatile
  2827  001CCA  D000               	goto	l3186
  2828  001CCC                     l3186:
  2829                           
  2830                           ; BSR set to: 15
  2831  001CCC  A41B               	btfss	Open2USART@config,2,c
  2832  001CCE  D003               	goto	l3190
  2833                           
  2834                           ; BSR set to: 15
  2835  001CD0  010F               	movlb	15	; () banked
  2836  001CD2  8F21               	bsf	33,7,b	;volatile
  2837  001CD4  D000               	goto	l3190
  2838  001CD6                     l3190:
  2839                           
  2840                           ; BSR set to: 15
  2841  001CD6  A61B               	btfss	Open2USART@config,3,c
  2842  001CD8  D003               	goto	l481
  2843                           
  2844                           ; BSR set to: 15
  2845  001CDA  010F               	movlb	15	; () banked
  2846  001CDC  8922               	bsf	34,4,b	;volatile
  2847  001CDE  D003               	goto	l3194
  2848  001CE0                     l481:
  2849                           
  2850                           ; BSR set to: 15
  2851  001CE0  010F               	movlb	15	; () banked
  2852  001CE2  8B22               	bsf	34,5,b	;volatile
  2853  001CE4  D000               	goto	l3194
  2854  001CE6                     l3194:
  2855                           
  2856                           ; BSR set to: 15
  2857  001CE6  A81B               	btfss	Open2USART@config,4,c
  2858  001CE8  D003               	goto	l483
  2859                           
  2860                           ; BSR set to: 15
  2861  001CEA  010F               	movlb	15	; () banked
  2862  001CEC  8521               	bsf	33,2,b	;volatile
  2863  001CEE  D003               	goto	l3198
  2864  001CF0                     l483:
  2865                           
  2866                           ; BSR set to: 15
  2867  001CF0  010F               	movlb	15	; () banked
  2868  001CF2  9521               	bcf	33,2,b	;volatile
  2869  001CF4  D000               	goto	l3198
  2870  001CF6                     l3198:
  2871                           
  2872                           ; BSR set to: 15
  2873  001CF6  AA1B               	btfss	Open2USART@config,5,c
  2874  001CF8  D003               	goto	l3202
  2875                           
  2876                           ; BSR set to: 15
  2877  001CFA  010F               	movlb	15	; () banked
  2878  001CFC  8722               	bsf	34,3,b	;volatile
  2879  001CFE  D000               	goto	l3202
  2880  001D00                     l3202:
  2881                           
  2882                           ; BSR set to: 15
  2883  001D00  AC1B               	btfss	Open2USART@config,6,c
  2884  001D02  D002               	goto	l486
  2885                           
  2886                           ; BSR set to: 15
  2887  001D04  8AA3               	bsf	4003,5,c	;volatile
  2888  001D06  D002               	goto	l3206
  2889  001D08                     l486:
  2890                           
  2891                           ; BSR set to: 15
  2892  001D08  9AA3               	bcf	4003,5,c	;volatile
  2893  001D0A  D000               	goto	l3206
  2894  001D0C                     l3206:
  2895                           
  2896                           ; BSR set to: 15
  2897  001D0C  AE1B               	btfss	Open2USART@config,7,c
  2898  001D0E  D002               	goto	l488
  2899                           
  2900                           ; BSR set to: 15
  2901  001D10  88A3               	bsf	4003,4,c	;volatile
  2902  001D12  D001               	goto	l489
  2903  001D14                     l488:
  2904                           
  2905                           ; BSR set to: 15
  2906  001D14  98A3               	bcf	4003,4,c	;volatile
  2907  001D16                     l489:
  2908                           
  2909                           ; BSR set to: 15
  2910  001D16  C019  FF1E         	movff	Open2USART@spbrg,3870	;volatile
  2911                           
  2912                           ; BSR set to: 15
  2913  001D1A  501A               	movf	Open2USART@spbrg+1,w,c
  2914  001D1C  010F               	movlb	15	; () banked
  2915  001D1E  6F1F               	movwf	31,b	;volatile
  2916                           
  2917                           ; BSR set to: 15
  2918  001D20  010F               	movlb	15	; () banked
  2919  001D22  8B21               	bsf	33,5,b	;volatile
  2920                           
  2921                           ; BSR set to: 15
  2922  001D24  010F               	movlb	15	; () banked
  2923  001D26  8F22               	bsf	34,7,b	;volatile
  2924                           
  2925                           ; BSR set to: 15
  2926  001D28  0012               	return		;funcret
  2927  001D2A                     __end_of_Open2USART:
  2928                           	opt stack 0
  2929                           tblptru	equ	0xFF8
  2930                           tblptrh	equ	0xFF7
  2931                           tblptrl	equ	0xFF6
  2932                           tablat	equ	0xFF5
  2933                           prodh	equ	0xFF4
  2934                           prodl	equ	0xFF3
  2935                           intcon	equ	0xFF2
  2936                           postinc0	equ	0xFEE
  2937                           wreg	equ	0xFE8
  2938                           indf2	equ	0xFDF
  2939                           postinc2	equ	0xFDE
  2940                           fsr2h	equ	0xFDA
  2941                           fsr2l	equ	0xFD9
  2942                           status	equ	0xFD8
  2943                           
  2944 ;; *************** function _Message_Manage *****************
  2945 ;; Defined at:
  2946 ;;		line 51 in file "_01_USER/Run.c"
  2947 ;; Parameters:    Size  Location     Type
  2948 ;;		None
  2949 ;; Auto vars:     Size  Location     Type
  2950 ;;		None
  2951 ;; Return value:  Size  Location     Type
  2952 ;;		None               void
  2953 ;; Registers used:
  2954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2964 ;;Total ram usage:        0 bytes
  2965 ;; Hardware stack levels used:    1
  2966 ;; Hardware stack levels required when called:    6
  2967 ;; This function calls:
  2968 ;;		_Key_Message_Manage
  2969 ;;		_RS485_Message_Manage
  2970 ;; This function is called by:
  2971 ;;		_main
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           	psect	text21
  2976  0023AE                     __ptext21:
  2977                           	opt stack 0
  2978  0023AE                     _Message_Manage:
  2979                           	opt stack 24
  2980                           
  2981                           ;Run.c: 53: Key_Message_Manage();
  2982                           
  2983                           ; BSR set to: 15
  2984                           ;incstack = 0
  2985  0023AE  ECDB  F00C         	call	_Key_Message_Manage	;wreg free
  2986                           
  2987                           ;Run.c: 54: RS485_Message_Manage(RS485_ReceiveBuff,10);
  2988  0023B2  0ED4               	movlw	low _RS485_ReceiveBuff
  2989  0023B4  6E33               	movwf	RS485_Message_Manage@DataBuff,c
  2990  0023B6  0E00               	movlw	high _RS485_ReceiveBuff
  2991  0023B8  6E34               	movwf	RS485_Message_Manage@DataBuff+1,c
  2992  0023BA  0E0A               	movlw	10
  2993  0023BC  6E35               	movwf	RS485_Message_Manage@date_lenth,c
  2994  0023BE  EC09  F008         	call	_RS485_Message_Manage	;wreg free
  2995  0023C2  0012               	return		;funcret
  2996  0023C4                     __end_of_Message_Manage:
  2997                           	opt stack 0
  2998                           tblptru	equ	0xFF8
  2999                           tblptrh	equ	0xFF7
  3000                           tblptrl	equ	0xFF6
  3001                           tablat	equ	0xFF5
  3002                           prodh	equ	0xFF4
  3003                           prodl	equ	0xFF3
  3004                           intcon	equ	0xFF2
  3005                           postinc0	equ	0xFEE
  3006                           wreg	equ	0xFE8
  3007                           indf2	equ	0xFDF
  3008                           postinc2	equ	0xFDE
  3009                           fsr2h	equ	0xFDA
  3010                           fsr2l	equ	0xFD9
  3011                           status	equ	0xFD8
  3012                           
  3013 ;; *************** function _RS485_Message_Manage *****************
  3014 ;; Defined at:
  3015 ;;		line 114 in file "_01_USER/My_USART.c"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;  DataBuff        2   50[COMRAM] PTR unsigned char 
  3018 ;;		 -> RS485_ReceiveBuff(10), 
  3019 ;;  date_lenth      1   52[COMRAM] unsigned char 
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;  from_dress      1    7[BANK0 ] unsigned char 
  3022 ;;  CRC_L           1    6[BANK0 ] unsigned char 
  3023 ;;  CRC_H           1    5[BANK0 ] unsigned char 
  3024 ;; Return value:  Size  Location     Type
  3025 ;;                  1    wreg      unsigned char 
  3026 ;; Registers used:
  3027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3028 ;; Tracked objects:
  3029 ;;		On entry : 0/0
  3030 ;;		On exit  : 0/0
  3031 ;;		Unchanged: 0/0
  3032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3033 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3034 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3035 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3036 ;;      Totals:         3       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3037 ;;Total ram usage:       11 bytes
  3038 ;; Hardware stack levels used:    1
  3039 ;; Hardware stack levels required when called:    5
  3040 ;; This function calls:
  3041 ;;		_CRC_Verify
  3042 ;; This function is called by:
  3043 ;;		_Message_Manage
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           	psect	text22
  3048  001012                     __ptext22:
  3049                           	opt stack 0
  3050  001012                     _RS485_Message_Manage:
  3051                           	opt stack 24
  3052                           
  3053                           ;My_USART.c: 116: unsigned char CRC_H,CRC_L,from_dress;
  3054                           ;My_USART.c: 117: if( RS485_Receive_Flag == 1 )
  3055                           
  3056                           ;incstack = 0
  3057  001012  0447               	decf	_RS485_Receive_Flag,w,c
  3058  001014  A4D8               	btfss	status,2,c
  3059  001016  0012               	return	
  3060                           
  3061                           ;My_USART.c: 118: {
  3062                           ;My_USART.c: 121: if( DataBuff [date_lenth-1] != 0xaa) { RS485_Receive_Flag = 0; return 
      +                          1;}
  3063  001018  0EFF               	movlw	255
  3064  00101A  0100               	movlb	0	; () banked
  3065  00101C  6FE8               	movwf	??_RS485_Message_Manage& (0+255),b
  3066  00101E  0EFF               	movlw	255
  3067  001020  0100               	movlb	0	; () banked
  3068  001022  6FE9               	movwf	(??_RS485_Message_Manage+1)& (0+255),b
  3069  001024  5035               	movf	RS485_Message_Manage@date_lenth,w,c
  3070  001026  0100               	movlb	0	; () banked
  3071  001028  6FEA               	movwf	(??_RS485_Message_Manage+2)& (0+255),b
  3072  00102A  6BEB               	clrf	(??_RS485_Message_Manage+3)& (0+255),b
  3073  00102C  0100               	movlb	0	; () banked
  3074  00102E  51E8               	movf	??_RS485_Message_Manage& (0+255),w,b
  3075  001030  0100               	movlb	0	; () banked
  3076  001032  27EA               	addwf	(??_RS485_Message_Manage+2)& (0+255),f,b
  3077  001034  0100               	movlb	0	; () banked
  3078  001036  51E9               	movf	(??_RS485_Message_Manage+1)& (0+255),w,b
  3079  001038  0100               	movlb	0	; () banked
  3080  00103A  23EB               	addwfc	(??_RS485_Message_Manage+3)& (0+255),f,b
  3081  00103C  0100               	movlb	0	; () banked
  3082  00103E  51EA               	movf	(??_RS485_Message_Manage+2)& (0+255),w,b
  3083  001040  2433               	addwf	RS485_Message_Manage@DataBuff,w,c
  3084  001042  6ED9               	movwf	fsr2l,c
  3085  001044  0100               	movlb	0	; () banked
  3086  001046  51EB               	movf	(??_RS485_Message_Manage+3)& (0+255),w,b
  3087  001048  2034               	addwfc	RS485_Message_Manage@DataBuff+1,w,c
  3088  00104A  6EDA               	movwf	fsr2h,c
  3089  00104C  0EAA               	movlw	170
  3090  00104E  18DE               	xorwf	postinc2,w,c
  3091  001050  B4D8               	btfsc	status,2,c
  3092  001052  D003               	goto	l3236
  3093                           
  3094                           ; BSR set to: 0
  3095  001054  0E00               	movlw	0
  3096  001056  6E47               	movwf	_RS485_Receive_Flag,c
  3097                           
  3098                           ; BSR set to: 0
  3099                           ;	Return value of _RS485_Message_Manage is never used
  3100  001058  0012               	return	
  3101  00105A                     l3236:
  3102                           
  3103                           ; BSR set to: 0
  3104                           ;My_USART.c: 124: CRC_H = DataBuff[1];
  3105  00105A  EE20 F001          	lfsr	2,1
  3106  00105E  5033               	movf	RS485_Message_Manage@DataBuff,w,c
  3107  001060  26D9               	addwf	fsr2l,f,c
  3108  001062  5034               	movf	RS485_Message_Manage@DataBuff+1,w,c
  3109  001064  22DA               	addwfc	fsr2h,f,c
  3110  001066  50DF               	movf	indf2,w,c
  3111  001068  0100               	movlb	0	; () banked
  3112  00106A  6FED               	movwf	RS485_Message_Manage@CRC_H& (0+255),b
  3113                           
  3114                           ; BSR set to: 0
  3115                           ;My_USART.c: 125: CRC_L = DataBuff[0];
  3116  00106C  C033  FFD9         	movff	RS485_Message_Manage@DataBuff,fsr2l
  3117  001070  C034  FFDA         	movff	RS485_Message_Manage@DataBuff+1,fsr2h
  3118  001074  50DF               	movf	indf2,w,c
  3119  001076  0100               	movlb	0	; () banked
  3120  001078  6FEE               	movwf	RS485_Message_Manage@CRC_L& (0+255),b
  3121                           
  3122                           ; BSR set to: 0
  3123                           ;My_USART.c: 126: CRC_Verify(DataBuff,10);
  3124  00107A  C033  F026         	movff	RS485_Message_Manage@DataBuff,CRC_Verify@DataBuff
  3125  00107E  C034  F027         	movff	RS485_Message_Manage@DataBuff+1,CRC_Verify@DataBuff+1
  3126  001082  0E0A               	movlw	10
  3127  001084  6E28               	movwf	CRC_Verify@date_lenth,c
  3128  001086  EC43  F00B         	call	_CRC_Verify	;wreg free
  3129                           
  3130                           ;My_USART.c: 127: if( DataBuff[1] != CRC_H ) { RS485_Receive_Flag = 0; return 2 ;}
  3131  00108A  EE20 F001          	lfsr	2,1
  3132  00108E  5033               	movf	RS485_Message_Manage@DataBuff,w,c
  3133  001090  26D9               	addwf	fsr2l,f,c
  3134  001092  5034               	movf	RS485_Message_Manage@DataBuff+1,w,c
  3135  001094  22DA               	addwfc	fsr2h,f,c
  3136  001096  0100               	movlb	0	; () banked
  3137  001098  51ED               	movf	RS485_Message_Manage@CRC_H& (0+255),w,b
  3138  00109A  18DE               	xorwf	postinc2,w,c
  3139  00109C  B4D8               	btfsc	status,2,c
  3140  00109E  D003               	goto	l3248
  3141                           
  3142                           ; BSR set to: 0
  3143  0010A0  0E00               	movlw	0
  3144  0010A2  6E47               	movwf	_RS485_Receive_Flag,c
  3145                           
  3146                           ; BSR set to: 0
  3147                           ;	Return value of _RS485_Message_Manage is never used
  3148  0010A4  0012               	return	
  3149  0010A6                     l3248:
  3150                           
  3151                           ; BSR set to: 0
  3152                           ;My_USART.c: 128: if( DataBuff[0] != CRC_L ) { RS485_Receive_Flag = 0; return 2 ;}
  3153  0010A6  C033  FFD9         	movff	RS485_Message_Manage@DataBuff,fsr2l
  3154  0010AA  C034  FFDA         	movff	RS485_Message_Manage@DataBuff+1,fsr2h
  3155  0010AE  0100               	movlb	0	; () banked
  3156  0010B0  51EE               	movf	RS485_Message_Manage@CRC_L& (0+255),w,b
  3157  0010B2  18DE               	xorwf	postinc2,w,c
  3158  0010B4  B4D8               	btfsc	status,2,c
  3159  0010B6  D003               	goto	l3254
  3160                           
  3161                           ; BSR set to: 0
  3162  0010B8  0E00               	movlw	0
  3163  0010BA  6E47               	movwf	_RS485_Receive_Flag,c
  3164                           
  3165                           ; BSR set to: 0
  3166                           ;	Return value of _RS485_Message_Manage is never used
  3167  0010BC  0012               	return	
  3168  0010BE                     l3254:
  3169                           
  3170                           ; BSR set to: 0
  3171                           ;My_USART.c: 131: if( ( DataBuff[date_lenth - 2] != 0x01 ) && ( DataBuff[date_lenth - 2]
      +                           != 0xff) ) { RS485_Receive_Flag = 0; return 3;}
  3172  0010BE  0EFE               	movlw	254
  3173  0010C0  0100               	movlb	0	; () banked
  3174  0010C2  6FE8               	movwf	??_RS485_Message_Manage& (0+255),b
  3175  0010C4  0EFF               	movlw	255
  3176  0010C6  0100               	movlb	0	; () banked
  3177  0010C8  6FE9               	movwf	(??_RS485_Message_Manage+1)& (0+255),b
  3178  0010CA  5035               	movf	RS485_Message_Manage@date_lenth,w,c
  3179  0010CC  0100               	movlb	0	; () banked
  3180  0010CE  6FEA               	movwf	(??_RS485_Message_Manage+2)& (0+255),b
  3181  0010D0  6BEB               	clrf	(??_RS485_Message_Manage+3)& (0+255),b
  3182  0010D2  0100               	movlb	0	; () banked
  3183  0010D4  51E8               	movf	??_RS485_Message_Manage& (0+255),w,b
  3184  0010D6  0100               	movlb	0	; () banked
  3185  0010D8  27EA               	addwf	(??_RS485_Message_Manage+2)& (0+255),f,b
  3186  0010DA  0100               	movlb	0	; () banked
  3187  0010DC  51E9               	movf	(??_RS485_Message_Manage+1)& (0+255),w,b
  3188  0010DE  0100               	movlb	0	; () banked
  3189  0010E0  23EB               	addwfc	(??_RS485_Message_Manage+3)& (0+255),f,b
  3190  0010E2  0100               	movlb	0	; () banked
  3191  0010E4  51EA               	movf	(??_RS485_Message_Manage+2)& (0+255),w,b
  3192  0010E6  2433               	addwf	RS485_Message_Manage@DataBuff,w,c
  3193  0010E8  6ED9               	movwf	fsr2l,c
  3194  0010EA  0100               	movlb	0	; () banked
  3195  0010EC  51EB               	movf	(??_RS485_Message_Manage+3)& (0+255),w,b
  3196  0010EE  2034               	addwfc	RS485_Message_Manage@DataBuff+1,w,c
  3197  0010F0  6EDA               	movwf	fsr2h,c
  3198  0010F2  04DE               	decf	postinc2,w,c
  3199  0010F4  B4D8               	btfsc	status,2,c
  3200  0010F6  D020               	goto	l3262
  3201                           
  3202                           ; BSR set to: 0
  3203  0010F8  0EFE               	movlw	254
  3204  0010FA  0100               	movlb	0	; () banked
  3205  0010FC  6FE8               	movwf	??_RS485_Message_Manage& (0+255),b
  3206  0010FE  0EFF               	movlw	255
  3207  001100  0100               	movlb	0	; () banked
  3208  001102  6FE9               	movwf	(??_RS485_Message_Manage+1)& (0+255),b
  3209  001104  5035               	movf	RS485_Message_Manage@date_lenth,w,c
  3210  001106  0100               	movlb	0	; () banked
  3211  001108  6FEA               	movwf	(??_RS485_Message_Manage+2)& (0+255),b
  3212  00110A  6BEB               	clrf	(??_RS485_Message_Manage+3)& (0+255),b
  3213  00110C  0100               	movlb	0	; () banked
  3214  00110E  51E8               	movf	??_RS485_Message_Manage& (0+255),w,b
  3215  001110  0100               	movlb	0	; () banked
  3216  001112  27EA               	addwf	(??_RS485_Message_Manage+2)& (0+255),f,b
  3217  001114  0100               	movlb	0	; () banked
  3218  001116  51E9               	movf	(??_RS485_Message_Manage+1)& (0+255),w,b
  3219  001118  0100               	movlb	0	; () banked
  3220  00111A  23EB               	addwfc	(??_RS485_Message_Manage+3)& (0+255),f,b
  3221  00111C  0100               	movlb	0	; () banked
  3222  00111E  51EA               	movf	(??_RS485_Message_Manage+2)& (0+255),w,b
  3223  001120  2433               	addwf	RS485_Message_Manage@DataBuff,w,c
  3224  001122  6ED9               	movwf	fsr2l,c
  3225  001124  0100               	movlb	0	; () banked
  3226  001126  51EB               	movf	(??_RS485_Message_Manage+3)& (0+255),w,b
  3227  001128  2034               	addwfc	RS485_Message_Manage@DataBuff+1,w,c
  3228  00112A  6EDA               	movwf	fsr2h,c
  3229  00112C  28DE               	incf	postinc2,w,c
  3230  00112E  B4D8               	btfsc	status,2,c
  3231  001130  D003               	goto	l3262
  3232                           
  3233                           ; BSR set to: 0
  3234  001132  0E00               	movlw	0
  3235  001134  6E47               	movwf	_RS485_Receive_Flag,c
  3236                           
  3237                           ; BSR set to: 0
  3238                           ;	Return value of _RS485_Message_Manage is never used
  3239  001136  0012               	return	
  3240  001138                     l3262:
  3241                           
  3242                           ; BSR set to: 0
  3243                           ;My_USART.c: 134: from_dress = DataBuff[date_lenth - 3];
  3244  001138  0EFD               	movlw	253
  3245  00113A  0100               	movlb	0	; () banked
  3246  00113C  6FE8               	movwf	??_RS485_Message_Manage& (0+255),b
  3247  00113E  0EFF               	movlw	255
  3248  001140  0100               	movlb	0	; () banked
  3249  001142  6FE9               	movwf	(??_RS485_Message_Manage+1)& (0+255),b
  3250  001144  5035               	movf	RS485_Message_Manage@date_lenth,w,c
  3251  001146  0100               	movlb	0	; () banked
  3252  001148  6FEA               	movwf	(??_RS485_Message_Manage+2)& (0+255),b
  3253  00114A  6BEB               	clrf	(??_RS485_Message_Manage+3)& (0+255),b
  3254  00114C  0100               	movlb	0	; () banked
  3255  00114E  51E8               	movf	??_RS485_Message_Manage& (0+255),w,b
  3256  001150  0100               	movlb	0	; () banked
  3257  001152  27EA               	addwf	(??_RS485_Message_Manage+2)& (0+255),f,b
  3258  001154  0100               	movlb	0	; () banked
  3259  001156  51E9               	movf	(??_RS485_Message_Manage+1)& (0+255),w,b
  3260  001158  0100               	movlb	0	; () banked
  3261  00115A  23EB               	addwfc	(??_RS485_Message_Manage+3)& (0+255),f,b
  3262  00115C  0100               	movlb	0	; () banked
  3263  00115E  51EA               	movf	(??_RS485_Message_Manage+2)& (0+255),w,b
  3264  001160  2433               	addwf	RS485_Message_Manage@DataBuff,w,c
  3265  001162  6ED9               	movwf	fsr2l,c
  3266  001164  0100               	movlb	0	; () banked
  3267  001166  51EB               	movf	(??_RS485_Message_Manage+3)& (0+255),w,b
  3268  001168  2034               	addwfc	RS485_Message_Manage@DataBuff+1,w,c
  3269  00116A  6EDA               	movwf	fsr2h,c
  3270  00116C  50DF               	movf	indf2,w,c
  3271  00116E  0100               	movlb	0	; () banked
  3272  001170  6FEF               	movwf	RS485_Message_Manage@from_dress& (0+255),b
  3273                           
  3274                           ; BSR set to: 0
  3275                           ;My_USART.c: 135: if( from_dress < 0x10 ) Handle_Msg[from_dress].Hardware_Type = Type_HA
      +                          NDLE;
  3276  001172  0E10               	movlw	16
  3277  001174  0100               	movlb	0	; () banked
  3278  001176  61EF               	cpfslt	RS485_Message_Manage@from_dress& (0+255),b
  3279  001178  D00F               	goto	l3268
  3280                           
  3281                           ; BSR set to: 0
  3282  00117A  0100               	movlb	0	; () banked
  3283  00117C  51EF               	movf	RS485_Message_Manage@from_dress& (0+255),w,b
  3284  00117E  0D07               	mullw	7
  3285  001180  0E05               	movlw	5
  3286  001182  26F3               	addwf	prodl,f,c
  3287  001184  0E00               	movlw	0
  3288  001186  22F4               	addwfc	prodh,f,c
  3289  001188  0E6A               	movlw	low _Handle_Msg
  3290  00118A  24F3               	addwf	prodl,w,c
  3291  00118C  6ED9               	movwf	fsr2l,c
  3292  00118E  0E00               	movlw	high _Handle_Msg
  3293  001190  20F4               	addwfc	prodh,w,c
  3294  001192  6EDA               	movwf	fsr2h,c
  3295  001194  0E00               	movlw	0
  3296  001196  D025               	goto	L2
  3297  001198                     l3268:
  3298                           
  3299                           ; BSR set to: 0
  3300                           ;My_USART.c: 136: else if( from_dress < 0x20 ) Handle_Msg[from_dress].Hardware_Type = Ty
      +                          pe_MASTER;
  3301  001198  0E20               	movlw	32
  3302  00119A  0100               	movlb	0	; () banked
  3303  00119C  61EF               	cpfslt	RS485_Message_Manage@from_dress& (0+255),b
  3304  00119E  D00F               	goto	l3272
  3305                           
  3306                           ; BSR set to: 0
  3307  0011A0  0100               	movlb	0	; () banked
  3308  0011A2  51EF               	movf	RS485_Message_Manage@from_dress& (0+255),w,b
  3309  0011A4  0D07               	mullw	7
  3310  0011A6  0E05               	movlw	5
  3311  0011A8  26F3               	addwf	prodl,f,c
  3312  0011AA  0E00               	movlw	0
  3313  0011AC  22F4               	addwfc	prodh,f,c
  3314  0011AE  0E6A               	movlw	low _Handle_Msg
  3315  0011B0  24F3               	addwf	prodl,w,c
  3316  0011B2  6ED9               	movwf	fsr2l,c
  3317  0011B4  0E00               	movlw	high _Handle_Msg
  3318  0011B6  20F4               	addwfc	prodh,w,c
  3319  0011B8  6EDA               	movwf	fsr2h,c
  3320  0011BA  0E01               	movlw	1
  3321  0011BC  D012               	goto	L2
  3322  0011BE                     l3272:
  3323                           
  3324                           ; BSR set to: 0
  3325                           ;My_USART.c: 137: else if( from_dress < 0x30 ) Handle_Msg[from_dress].Hardware_Type = Ty
      +                          pe_SENSOR;
  3326  0011BE  0E30               	movlw	48
  3327  0011C0  0100               	movlb	0	; () banked
  3328  0011C2  61EF               	cpfslt	RS485_Message_Manage@from_dress& (0+255),b
  3329  0011C4  D010               	goto	l3276
  3330                           
  3331                           ; BSR set to: 0
  3332  0011C6  0100               	movlb	0	; () banked
  3333  0011C8  51EF               	movf	RS485_Message_Manage@from_dress& (0+255),w,b
  3334  0011CA  0D07               	mullw	7
  3335  0011CC  0E05               	movlw	5
  3336  0011CE  26F3               	addwf	prodl,f,c
  3337  0011D0  0E00               	movlw	0
  3338  0011D2  22F4               	addwfc	prodh,f,c
  3339  0011D4  0E6A               	movlw	low _Handle_Msg
  3340  0011D6  24F3               	addwf	prodl,w,c
  3341  0011D8  6ED9               	movwf	fsr2l,c
  3342  0011DA  0E00               	movlw	high _Handle_Msg
  3343  0011DC  20F4               	addwfc	prodh,w,c
  3344  0011DE  6EDA               	movwf	fsr2h,c
  3345  0011E0  0E02               	movlw	2
  3346  0011E2                     L2:
  3347  0011E2  6EDF               	movwf	indf2,c
  3348                           
  3349                           ; BSR set to: 0
  3350                           
  3351                           ; BSR set to: 0
  3352  0011E4  D000               	goto	l3276
  3353  0011E6                     l3276:
  3354                           
  3355                           ; BSR set to: 0
  3356                           ;My_USART.c: 140: Handle_Msg[from_dress].Order = DataBuff[date_lenth - 4];
  3357  0011E6  0EFC               	movlw	252
  3358  0011E8  0100               	movlb	0	; () banked
  3359  0011EA  6FE8               	movwf	??_RS485_Message_Manage& (0+255),b
  3360  0011EC  0EFF               	movlw	255
  3361  0011EE  0100               	movlb	0	; () banked
  3362  0011F0  6FE9               	movwf	(??_RS485_Message_Manage+1)& (0+255),b
  3363  0011F2  5035               	movf	RS485_Message_Manage@date_lenth,w,c
  3364  0011F4  0100               	movlb	0	; () banked
  3365  0011F6  6FEA               	movwf	(??_RS485_Message_Manage+2)& (0+255),b
  3366  0011F8  6BEB               	clrf	(??_RS485_Message_Manage+3)& (0+255),b
  3367  0011FA  0100               	movlb	0	; () banked
  3368  0011FC  51E8               	movf	??_RS485_Message_Manage& (0+255),w,b
  3369  0011FE  0100               	movlb	0	; () banked
  3370  001200  27EA               	addwf	(??_RS485_Message_Manage+2)& (0+255),f,b
  3371  001202  0100               	movlb	0	; () banked
  3372  001204  51E9               	movf	(??_RS485_Message_Manage+1)& (0+255),w,b
  3373  001206  0100               	movlb	0	; () banked
  3374  001208  23EB               	addwfc	(??_RS485_Message_Manage+3)& (0+255),f,b
  3375  00120A  0100               	movlb	0	; () banked
  3376  00120C  51EA               	movf	(??_RS485_Message_Manage+2)& (0+255),w,b
  3377  00120E  2433               	addwf	RS485_Message_Manage@DataBuff,w,c
  3378  001210  6ED9               	movwf	fsr2l,c
  3379  001212  0100               	movlb	0	; () banked
  3380  001214  51EB               	movf	(??_RS485_Message_Manage+3)& (0+255),w,b
  3381  001216  2034               	addwfc	RS485_Message_Manage@DataBuff+1,w,c
  3382  001218  6EDA               	movwf	fsr2h,c
  3383  00121A  0100               	movlb	0	; () banked
  3384  00121C  51EF               	movf	RS485_Message_Manage@from_dress& (0+255),w,b
  3385  00121E  0D07               	mullw	7
  3386  001220  0E6A               	movlw	low _Handle_Msg
  3387  001222  24F3               	addwf	prodl,w,c
  3388  001224  6EE1               	movwf	fsr1l,c
  3389  001226  0E00               	movlw	high _Handle_Msg
  3390  001228  20F4               	addwfc	prodh,w,c
  3391  00122A  6EE2               	movwf	fsr1h,c
  3392  00122C  CFDF FFE7          	movff	indf2,indf1
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;My_USART.c: 141: Handle_Msg[from_dress].Parameter[3] = DataBuff[date_lenth -5];
  3396  001230  0EFB               	movlw	251
  3397  001232  0100               	movlb	0	; () banked
  3398  001234  6FE8               	movwf	??_RS485_Message_Manage& (0+255),b
  3399  001236  0EFF               	movlw	255
  3400  001238  0100               	movlb	0	; () banked
  3401  00123A  6FE9               	movwf	(??_RS485_Message_Manage+1)& (0+255),b
  3402  00123C  5035               	movf	RS485_Message_Manage@date_lenth,w,c
  3403  00123E  0100               	movlb	0	; () banked
  3404  001240  6FEA               	movwf	(??_RS485_Message_Manage+2)& (0+255),b
  3405  001242  6BEB               	clrf	(??_RS485_Message_Manage+3)& (0+255),b
  3406  001244  0100               	movlb	0	; () banked
  3407  001246  51E8               	movf	??_RS485_Message_Manage& (0+255),w,b
  3408  001248  0100               	movlb	0	; () banked
  3409  00124A  27EA               	addwf	(??_RS485_Message_Manage+2)& (0+255),f,b
  3410  00124C  0100               	movlb	0	; () banked
  3411  00124E  51E9               	movf	(??_RS485_Message_Manage+1)& (0+255),w,b
  3412  001250  0100               	movlb	0	; () banked
  3413  001252  23EB               	addwfc	(??_RS485_Message_Manage+3)& (0+255),f,b
  3414  001254  0100               	movlb	0	; () banked
  3415  001256  51EA               	movf	(??_RS485_Message_Manage+2)& (0+255),w,b
  3416  001258  2433               	addwf	RS485_Message_Manage@DataBuff,w,c
  3417  00125A  6ED9               	movwf	fsr2l,c
  3418  00125C  0100               	movlb	0	; () banked
  3419  00125E  51EB               	movf	(??_RS485_Message_Manage+3)& (0+255),w,b
  3420  001260  2034               	addwfc	RS485_Message_Manage@DataBuff+1,w,c
  3421  001262  6EDA               	movwf	fsr2h,c
  3422  001264  0100               	movlb	0	; () banked
  3423  001266  51EF               	movf	RS485_Message_Manage@from_dress& (0+255),w,b
  3424  001268  0D07               	mullw	7
  3425  00126A  0E04               	movlw	4
  3426  00126C  26F3               	addwf	prodl,f,c
  3427  00126E  0E00               	movlw	0
  3428  001270  22F4               	addwfc	prodh,f,c
  3429  001272  0E6A               	movlw	low _Handle_Msg
  3430  001274  24F3               	addwf	prodl,w,c
  3431  001276  6EE1               	movwf	fsr1l,c
  3432  001278  0E00               	movlw	high _Handle_Msg
  3433  00127A  20F4               	addwfc	prodh,w,c
  3434  00127C  6EE2               	movwf	fsr1h,c
  3435  00127E  CFDF FFE7          	movff	indf2,indf1
  3436                           
  3437                           ; BSR set to: 0
  3438                           ;My_USART.c: 142: Handle_Msg[from_dress].Parameter[2] = DataBuff[date_lenth -6];
  3439  001282  0EFA               	movlw	250
  3440  001284  0100               	movlb	0	; () banked
  3441  001286  6FE8               	movwf	??_RS485_Message_Manage& (0+255),b
  3442  001288  0EFF               	movlw	255
  3443  00128A  0100               	movlb	0	; () banked
  3444  00128C  6FE9               	movwf	(??_RS485_Message_Manage+1)& (0+255),b
  3445  00128E  5035               	movf	RS485_Message_Manage@date_lenth,w,c
  3446  001290  0100               	movlb	0	; () banked
  3447  001292  6FEA               	movwf	(??_RS485_Message_Manage+2)& (0+255),b
  3448  001294  6BEB               	clrf	(??_RS485_Message_Manage+3)& (0+255),b
  3449  001296  0100               	movlb	0	; () banked
  3450  001298  51E8               	movf	??_RS485_Message_Manage& (0+255),w,b
  3451  00129A  0100               	movlb	0	; () banked
  3452  00129C  27EA               	addwf	(??_RS485_Message_Manage+2)& (0+255),f,b
  3453  00129E  0100               	movlb	0	; () banked
  3454  0012A0  51E9               	movf	(??_RS485_Message_Manage+1)& (0+255),w,b
  3455  0012A2  0100               	movlb	0	; () banked
  3456  0012A4  23EB               	addwfc	(??_RS485_Message_Manage+3)& (0+255),f,b
  3457  0012A6  0100               	movlb	0	; () banked
  3458  0012A8  51EA               	movf	(??_RS485_Message_Manage+2)& (0+255),w,b
  3459  0012AA  2433               	addwf	RS485_Message_Manage@DataBuff,w,c
  3460  0012AC  6ED9               	movwf	fsr2l,c
  3461  0012AE  0100               	movlb	0	; () banked
  3462  0012B0  51EB               	movf	(??_RS485_Message_Manage+3)& (0+255),w,b
  3463  0012B2  2034               	addwfc	RS485_Message_Manage@DataBuff+1,w,c
  3464  0012B4  6EDA               	movwf	fsr2h,c
  3465  0012B6  0100               	movlb	0	; () banked
  3466  0012B8  51EF               	movf	RS485_Message_Manage@from_dress& (0+255),w,b
  3467  0012BA  0D07               	mullw	7
  3468  0012BC  0E03               	movlw	3
  3469  0012BE  26F3               	addwf	prodl,f,c
  3470  0012C0  0E00               	movlw	0
  3471  0012C2  22F4               	addwfc	prodh,f,c
  3472  0012C4  0E6A               	movlw	low _Handle_Msg
  3473  0012C6  24F3               	addwf	prodl,w,c
  3474  0012C8  6EE1               	movwf	fsr1l,c
  3475  0012CA  0E00               	movlw	high _Handle_Msg
  3476  0012CC  20F4               	addwfc	prodh,w,c
  3477  0012CE  6EE2               	movwf	fsr1h,c
  3478  0012D0  CFDF FFE7          	movff	indf2,indf1
  3479                           
  3480                           ; BSR set to: 0
  3481                           ;My_USART.c: 143: Handle_Msg[from_dress].Parameter[1] = DataBuff[date_lenth -7];
  3482  0012D4  0EF9               	movlw	249
  3483  0012D6  0100               	movlb	0	; () banked
  3484  0012D8  6FE8               	movwf	??_RS485_Message_Manage& (0+255),b
  3485  0012DA  0EFF               	movlw	255
  3486  0012DC  0100               	movlb	0	; () banked
  3487  0012DE  6FE9               	movwf	(??_RS485_Message_Manage+1)& (0+255),b
  3488  0012E0  5035               	movf	RS485_Message_Manage@date_lenth,w,c
  3489  0012E2  0100               	movlb	0	; () banked
  3490  0012E4  6FEA               	movwf	(??_RS485_Message_Manage+2)& (0+255),b
  3491  0012E6  6BEB               	clrf	(??_RS485_Message_Manage+3)& (0+255),b
  3492  0012E8  0100               	movlb	0	; () banked
  3493  0012EA  51E8               	movf	??_RS485_Message_Manage& (0+255),w,b
  3494  0012EC  0100               	movlb	0	; () banked
  3495  0012EE  27EA               	addwf	(??_RS485_Message_Manage+2)& (0+255),f,b
  3496  0012F0  0100               	movlb	0	; () banked
  3497  0012F2  51E9               	movf	(??_RS485_Message_Manage+1)& (0+255),w,b
  3498  0012F4  0100               	movlb	0	; () banked
  3499  0012F6  23EB               	addwfc	(??_RS485_Message_Manage+3)& (0+255),f,b
  3500  0012F8  0100               	movlb	0	; () banked
  3501  0012FA  51EA               	movf	(??_RS485_Message_Manage+2)& (0+255),w,b
  3502  0012FC  2433               	addwf	RS485_Message_Manage@DataBuff,w,c
  3503  0012FE  6ED9               	movwf	fsr2l,c
  3504  001300  0100               	movlb	0	; () banked
  3505  001302  51EB               	movf	(??_RS485_Message_Manage+3)& (0+255),w,b
  3506  001304  2034               	addwfc	RS485_Message_Manage@DataBuff+1,w,c
  3507  001306  6EDA               	movwf	fsr2h,c
  3508  001308  0100               	movlb	0	; () banked
  3509  00130A  51EF               	movf	RS485_Message_Manage@from_dress& (0+255),w,b
  3510  00130C  0D07               	mullw	7
  3511  00130E  0E02               	movlw	2
  3512  001310  26F3               	addwf	prodl,f,c
  3513  001312  0E00               	movlw	0
  3514  001314  22F4               	addwfc	prodh,f,c
  3515  001316  0E6A               	movlw	low _Handle_Msg
  3516  001318  24F3               	addwf	prodl,w,c
  3517  00131A  6EE1               	movwf	fsr1l,c
  3518  00131C  0E00               	movlw	high _Handle_Msg
  3519  00131E  20F4               	addwfc	prodh,w,c
  3520  001320  6EE2               	movwf	fsr1h,c
  3521  001322  CFDF FFE7          	movff	indf2,indf1
  3522                           
  3523                           ; BSR set to: 0
  3524                           ;My_USART.c: 144: Handle_Msg[from_dress].Parameter[0] = DataBuff[date_lenth -8];
  3525  001326  0EF8               	movlw	248
  3526  001328  0100               	movlb	0	; () banked
  3527  00132A  6FE8               	movwf	??_RS485_Message_Manage& (0+255),b
  3528  00132C  0EFF               	movlw	255
  3529  00132E  0100               	movlb	0	; () banked
  3530  001330  6FE9               	movwf	(??_RS485_Message_Manage+1)& (0+255),b
  3531  001332  5035               	movf	RS485_Message_Manage@date_lenth,w,c
  3532  001334  0100               	movlb	0	; () banked
  3533  001336  6FEA               	movwf	(??_RS485_Message_Manage+2)& (0+255),b
  3534  001338  6BEB               	clrf	(??_RS485_Message_Manage+3)& (0+255),b
  3535  00133A  0100               	movlb	0	; () banked
  3536  00133C  51E8               	movf	??_RS485_Message_Manage& (0+255),w,b
  3537  00133E  0100               	movlb	0	; () banked
  3538  001340  27EA               	addwf	(??_RS485_Message_Manage+2)& (0+255),f,b
  3539  001342  0100               	movlb	0	; () banked
  3540  001344  51E9               	movf	(??_RS485_Message_Manage+1)& (0+255),w,b
  3541  001346  0100               	movlb	0	; () banked
  3542  001348  23EB               	addwfc	(??_RS485_Message_Manage+3)& (0+255),f,b
  3543  00134A  0100               	movlb	0	; () banked
  3544  00134C  51EA               	movf	(??_RS485_Message_Manage+2)& (0+255),w,b
  3545  00134E  2433               	addwf	RS485_Message_Manage@DataBuff,w,c
  3546  001350  6ED9               	movwf	fsr2l,c
  3547  001352  0100               	movlb	0	; () banked
  3548  001354  51EB               	movf	(??_RS485_Message_Manage+3)& (0+255),w,b
  3549  001356  2034               	addwfc	RS485_Message_Manage@DataBuff+1,w,c
  3550  001358  6EDA               	movwf	fsr2h,c
  3551  00135A  0100               	movlb	0	; () banked
  3552  00135C  51EF               	movf	RS485_Message_Manage@from_dress& (0+255),w,b
  3553  00135E  0D07               	mullw	7
  3554  001360  0E01               	movlw	1
  3555  001362  26F3               	addwf	prodl,f,c
  3556  001364  0E00               	movlw	0
  3557  001366  22F4               	addwfc	prodh,f,c
  3558  001368  0E6A               	movlw	low _Handle_Msg
  3559  00136A  24F3               	addwf	prodl,w,c
  3560  00136C  6EE1               	movwf	fsr1l,c
  3561  00136E  0E00               	movlw	high _Handle_Msg
  3562  001370  20F4               	addwfc	prodh,w,c
  3563  001372  6EE2               	movwf	fsr1h,c
  3564  001374  CFDF FFE7          	movff	indf2,indf1
  3565                           
  3566                           ; BSR set to: 0
  3567                           ;My_USART.c: 147: Handle_Msg[from_dress].hand_info = 1;
  3568  001378  0100               	movlb	0	; () banked
  3569  00137A  51EF               	movf	RS485_Message_Manage@from_dress& (0+255),w,b
  3570  00137C  0D07               	mullw	7
  3571  00137E  0E06               	movlw	6
  3572  001380  26F3               	addwf	prodl,f,c
  3573  001382  0E00               	movlw	0
  3574  001384  22F4               	addwfc	prodh,f,c
  3575  001386  0E6A               	movlw	low _Handle_Msg
  3576  001388  24F3               	addwf	prodl,w,c
  3577  00138A  6ED9               	movwf	fsr2l,c
  3578  00138C  0E00               	movlw	high _Handle_Msg
  3579  00138E  20F4               	addwfc	prodh,w,c
  3580  001390  6EDA               	movwf	fsr2h,c
  3581  001392  0E01               	movlw	1
  3582  001394  6EDF               	movwf	indf2,c
  3583                           
  3584                           ; BSR set to: 0
  3585                           ;My_USART.c: 148: RS485_Receive_Flag = 0;
  3586  001396  0E00               	movlw	0
  3587  001398  6E47               	movwf	_RS485_Receive_Flag,c
  3588  00139A  0012               	return	
  3589                           
  3590                           ; BSR set to: 0
  3591  00139C  0012               	return		;funcret
  3592  00139E                     __end_of_RS485_Message_Manage:
  3593                           	opt stack 0
  3594                           tblptru	equ	0xFF8
  3595                           tblptrh	equ	0xFF7
  3596                           tblptrl	equ	0xFF6
  3597                           tablat	equ	0xFF5
  3598                           prodh	equ	0xFF4
  3599                           prodl	equ	0xFF3
  3600                           intcon	equ	0xFF2
  3601                           postinc0	equ	0xFEE
  3602                           wreg	equ	0xFE8
  3603                           indf1	equ	0xFE7
  3604                           fsr1h	equ	0xFE2
  3605                           fsr1l	equ	0xFE1
  3606                           indf2	equ	0xFDF
  3607                           postinc2	equ	0xFDE
  3608                           fsr2h	equ	0xFDA
  3609                           fsr2l	equ	0xFD9
  3610                           status	equ	0xFD8
  3611                           
  3612 ;; *************** function _CRC_Verify *****************
  3613 ;; Defined at:
  3614 ;;		line 163 in file "_01_USER/My_USART.c"
  3615 ;; Parameters:    Size  Location     Type
  3616 ;;  DataBuff        2   37[COMRAM] PTR unsigned char 
  3617 ;;		 -> RS485_ReceiveBuff(10), RS485_SendBuff(10), 
  3618 ;;  date_lenth      1   39[COMRAM] unsigned char 
  3619 ;; Auto vars:     Size  Location     Type
  3620 ;;  CRC_Value       4   45[COMRAM] unsigned long 
  3621 ;;  CRC_Byte        1   49[COMRAM] unsigned char 
  3622 ;; Return value:  Size  Location     Type
  3623 ;;		None               void
  3624 ;; Registers used:
  3625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3626 ;; Tracked objects:
  3627 ;;		On entry : 0/0
  3628 ;;		On exit  : 0/0
  3629 ;;		Unchanged: 0/0
  3630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3631 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3632 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3633 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3634 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3635 ;;Total ram usage:       13 bytes
  3636 ;; Hardware stack levels used:    1
  3637 ;; Hardware stack levels required when called:    4
  3638 ;; This function calls:
  3639 ;;		___lldiv
  3640 ;;		___llmod
  3641 ;; This function is called by:
  3642 ;;		_RS485_Send_Date
  3643 ;;		_RS485_Message_Manage
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647                           	psect	text23
  3648  001686                     __ptext23:
  3649                           	opt stack 0
  3650  001686                     _CRC_Verify:
  3651                           	opt stack 24
  3652                           
  3653                           ;My_USART.c: 165: unsigned long int CRC_Value = 0;
  3654                           
  3655                           ;incstack = 0
  3656  001686  0E00               	movlw	0
  3657  001688  6E2E               	movwf	CRC_Verify@CRC_Value,c
  3658  00168A  0E00               	movlw	0
  3659  00168C  6E2F               	movwf	CRC_Verify@CRC_Value+1,c
  3660  00168E  0E00               	movlw	0
  3661  001690  6E30               	movwf	CRC_Verify@CRC_Value+2,c
  3662  001692  0E00               	movlw	0
  3663  001694  6E31               	movwf	CRC_Verify@CRC_Value+3,c
  3664                           
  3665                           ;My_USART.c: 166: unsigned char CRC_Byte;
  3666                           ;My_USART.c: 168: for(CRC_Byte = 2; CRC_Byte < date_lenth ;CRC_Byte++)
  3667  001696  0E02               	movlw	2
  3668  001698  6E32               	movwf	CRC_Verify@CRC_Byte,c
  3669  00169A  D035               	goto	l2946
  3670  00169C                     l2942:
  3671                           
  3672                           ;My_USART.c: 169: CRC_Value = ( CRC_Value + DataBuff[CRC_Byte]*CRC_Byte ) % 0xffff;
  3673  00169C  5032               	movf	CRC_Verify@CRC_Byte,w,c
  3674  00169E  0D01               	mullw	1
  3675  0016A0  50F3               	movf	prodl,w,c
  3676  0016A2  2426               	addwf	CRC_Verify@DataBuff,w,c
  3677  0016A4  6ED9               	movwf	fsr2l,c
  3678  0016A6  50F4               	movf	prodh,w,c
  3679  0016A8  2027               	addwfc	CRC_Verify@DataBuff+1,w,c
  3680  0016AA  6EDA               	movwf	fsr2h,c
  3681  0016AC  50DF               	movf	indf2,w,c
  3682  0016AE  6E29               	movwf	??_CRC_Verify& (0+255),c
  3683  0016B0  5029               	movf	??_CRC_Verify,w,c
  3684  0016B2  0232               	mulwf	CRC_Verify@CRC_Byte,c
  3685  0016B4  CFF3 F02A          	movff	prodl,??_CRC_Verify+1
  3686  0016B8  CFF4 F02B          	movff	prodh,??_CRC_Verify+2
  3687  0016BC  0E00               	movlw	0
  3688  0016BE  BE2B               	btfsc	(??_CRC_Verify+2)& (0+255),7,c
  3689  0016C0  0EFF               	movlw	255
  3690  0016C2  6E2C               	movwf	(??_CRC_Verify+3)& (0+255),c
  3691  0016C4  6E2D               	movwf	(??_CRC_Verify+4)& (0+255),c
  3692  0016C6  502E               	movf	CRC_Verify@CRC_Value,w,c
  3693  0016C8  242A               	addwf	??_CRC_Verify+1,w,c
  3694  0016CA  6E19               	movwf	___llmod@dividend,c
  3695  0016CC  502F               	movf	CRC_Verify@CRC_Value+1,w,c
  3696  0016CE  202B               	addwfc	??_CRC_Verify+2,w,c
  3697  0016D0  6E1A               	movwf	___llmod@dividend+1,c
  3698  0016D2  5030               	movf	CRC_Verify@CRC_Value+2,w,c
  3699  0016D4  202C               	addwfc	??_CRC_Verify+3,w,c
  3700  0016D6  6E1B               	movwf	___llmod@dividend+2,c
  3701  0016D8  5031               	movf	CRC_Verify@CRC_Value+3,w,c
  3702  0016DA  202D               	addwfc	??_CRC_Verify+4,w,c
  3703  0016DC  6E1C               	movwf	___llmod@dividend+3,c
  3704  0016DE  0EFF               	movlw	255
  3705  0016E0  6E1D               	movwf	___llmod@divisor,c
  3706  0016E2  0EFF               	movlw	255
  3707  0016E4  6E1E               	movwf	___llmod@divisor+1,c
  3708  0016E6  0E00               	movlw	0
  3709  0016E8  6E1F               	movwf	___llmod@divisor+2,c
  3710  0016EA  0E00               	movlw	0
  3711  0016EC  6E20               	movwf	___llmod@divisor+3,c
  3712  0016EE  ECD3  F00E         	call	___llmod	;wreg free
  3713  0016F2  C019  F02E         	movff	?___llmod,CRC_Verify@CRC_Value
  3714  0016F6  C01A  F02F         	movff	?___llmod+1,CRC_Verify@CRC_Value+1
  3715  0016FA  C01B  F030         	movff	?___llmod+2,CRC_Verify@CRC_Value+2
  3716  0016FE  C01C  F031         	movff	?___llmod+3,CRC_Verify@CRC_Value+3
  3717  001702  2A32               	incf	CRC_Verify@CRC_Byte,f,c
  3718  001704  D000               	goto	l2946
  3719  001706                     l2946:
  3720  001706  5028               	movf	CRC_Verify@date_lenth,w,c
  3721  001708  5C32               	subwf	CRC_Verify@CRC_Byte,w,c
  3722  00170A  A0D8               	btfss	status,0,c
  3723  00170C  D7C7               	goto	l2942
  3724                           
  3725                           ;My_USART.c: 171: DataBuff[1] = CRC_Value/0xff;
  3726  00170E  EE20 F001          	lfsr	2,1
  3727  001712  5026               	movf	CRC_Verify@DataBuff,w,c
  3728  001714  26D9               	addwf	fsr2l,f,c
  3729  001716  5027               	movf	CRC_Verify@DataBuff+1,w,c
  3730  001718  22DA               	addwfc	fsr2h,f,c
  3731  00171A  C02E  F019         	movff	CRC_Verify@CRC_Value,___lldiv@dividend
  3732  00171E  C02F  F01A         	movff	CRC_Verify@CRC_Value+1,___lldiv@dividend+1
  3733  001722  C030  F01B         	movff	CRC_Verify@CRC_Value+2,___lldiv@dividend+2
  3734  001726  C031  F01C         	movff	CRC_Verify@CRC_Value+3,___lldiv@dividend+3
  3735  00172A  0EFF               	movlw	255
  3736  00172C  6E1D               	movwf	___lldiv@divisor,c
  3737  00172E  0E00               	movlw	0
  3738  001730  6E1E               	movwf	___lldiv@divisor+1,c
  3739  001732  0E00               	movlw	0
  3740  001734  6E1F               	movwf	___lldiv@divisor+2,c
  3741  001736  0E00               	movlw	0
  3742  001738  6E20               	movwf	___lldiv@divisor+3,c
  3743  00173A  EC0D  F00E         	call	___lldiv	;wreg free
  3744  00173E  5019               	movf	?___lldiv,w,c
  3745  001740  6EDF               	movwf	indf2,c
  3746                           
  3747                           ;My_USART.c: 172: DataBuff[0] = CRC_Value%0xff;
  3748  001742  C02E  F019         	movff	CRC_Verify@CRC_Value,___llmod@dividend
  3749  001746  C02F  F01A         	movff	CRC_Verify@CRC_Value+1,___llmod@dividend+1
  3750  00174A  C030  F01B         	movff	CRC_Verify@CRC_Value+2,___llmod@dividend+2
  3751  00174E  C031  F01C         	movff	CRC_Verify@CRC_Value+3,___llmod@dividend+3
  3752  001752  0EFF               	movlw	255
  3753  001754  6E1D               	movwf	___llmod@divisor,c
  3754  001756  0E00               	movlw	0
  3755  001758  6E1E               	movwf	___llmod@divisor+1,c
  3756  00175A  0E00               	movlw	0
  3757  00175C  6E1F               	movwf	___llmod@divisor+2,c
  3758  00175E  0E00               	movlw	0
  3759  001760  6E20               	movwf	___llmod@divisor+3,c
  3760  001762  ECD3  F00E         	call	___llmod	;wreg free
  3761  001766  5019               	movf	?___llmod,w,c
  3762  001768  C026  FFD9         	movff	CRC_Verify@DataBuff,fsr2l
  3763  00176C  C027  FFDA         	movff	CRC_Verify@DataBuff+1,fsr2h
  3764  001770  6EDF               	movwf	indf2,c
  3765                           
  3766                           ;My_USART.c: 174: if( DataBuff[1] == 0xff ) DataBuff[1] --;
  3767  001772  EE20 F001          	lfsr	2,1
  3768  001776  5026               	movf	CRC_Verify@DataBuff,w,c
  3769  001778  26D9               	addwf	fsr2l,f,c
  3770  00177A  5027               	movf	CRC_Verify@DataBuff+1,w,c
  3771  00177C  22DA               	addwfc	fsr2h,f,c
  3772  00177E  28DE               	incf	postinc2,w,c
  3773  001780  A4D8               	btfss	status,2,c
  3774  001782  D007               	goto	l225
  3775  001784  EE20 F001          	lfsr	2,1
  3776  001788  5026               	movf	CRC_Verify@DataBuff,w,c
  3777  00178A  26D9               	addwf	fsr2l,f,c
  3778  00178C  5027               	movf	CRC_Verify@DataBuff+1,w,c
  3779  00178E  22DA               	addwfc	fsr2h,f,c
  3780  001790  06DF               	decf	indf2,f,c
  3781  001792                     l225:
  3782                           
  3783                           ;My_USART.c: 175: if( DataBuff[0] == 0xff ) DataBuff[0] --;
  3784  001792  C026  FFD9         	movff	CRC_Verify@DataBuff,fsr2l
  3785  001796  C027  FFDA         	movff	CRC_Verify@DataBuff+1,fsr2h
  3786  00179A  28DE               	incf	postinc2,w,c
  3787  00179C  A4D8               	btfss	status,2,c
  3788  00179E  0012               	return	
  3789  0017A0  C026  FFD9         	movff	CRC_Verify@DataBuff,fsr2l
  3790  0017A4  C027  FFDA         	movff	CRC_Verify@DataBuff+1,fsr2h
  3791  0017A8  06DF               	decf	indf2,f,c
  3792  0017AA  0012               	return	
  3793  0017AC  0012               	return		;funcret
  3794  0017AE                     __end_of_CRC_Verify:
  3795                           	opt stack 0
  3796                           tblptru	equ	0xFF8
  3797                           tblptrh	equ	0xFF7
  3798                           tblptrl	equ	0xFF6
  3799                           tablat	equ	0xFF5
  3800                           prodh	equ	0xFF4
  3801                           prodl	equ	0xFF3
  3802                           intcon	equ	0xFF2
  3803                           postinc0	equ	0xFEE
  3804                           wreg	equ	0xFE8
  3805                           indf1	equ	0xFE7
  3806                           fsr1h	equ	0xFE2
  3807                           fsr1l	equ	0xFE1
  3808                           indf2	equ	0xFDF
  3809                           postinc2	equ	0xFDE
  3810                           fsr2h	equ	0xFDA
  3811                           fsr2l	equ	0xFD9
  3812                           status	equ	0xFD8
  3813                           
  3814 ;; *************** function ___llmod *****************
  3815 ;; Defined at:
  3816 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  3817 ;; Parameters:    Size  Location     Type
  3818 ;;  dividend        4   24[COMRAM] unsigned long 
  3819 ;;  divisor         4   28[COMRAM] unsigned long 
  3820 ;; Auto vars:     Size  Location     Type
  3821 ;;  counter         1   32[COMRAM] unsigned char 
  3822 ;; Return value:  Size  Location     Type
  3823 ;;                  4   24[COMRAM] unsigned long 
  3824 ;; Registers used:
  3825 ;;		wreg, status,2, status,0
  3826 ;; Tracked objects:
  3827 ;;		On entry : 0/0
  3828 ;;		On exit  : 0/0
  3829 ;;		Unchanged: 0/0
  3830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3831 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3832 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3834 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3835 ;;Total ram usage:        9 bytes
  3836 ;; Hardware stack levels used:    1
  3837 ;; Hardware stack levels required when called:    3
  3838 ;; This function calls:
  3839 ;;		Nothing
  3840 ;; This function is called by:
  3841 ;;		_CRC_Verify
  3842 ;; This function uses a non-reentrant model
  3843 ;;
  3844                           
  3845                           	psect	text24
  3846  001DA6                     __ptext24:
  3847                           	opt stack 0
  3848  001DA6                     ___llmod:
  3849                           	opt stack 24
  3850                           
  3851                           ;incstack = 0
  3852  001DA6  501D               	movf	___llmod@divisor,w,c
  3853  001DA8  101E               	iorwf	___llmod@divisor+1,w,c
  3854  001DAA  101F               	iorwf	___llmod@divisor+2,w,c
  3855  001DAC  1020               	iorwf	___llmod@divisor+3,w,c
  3856  001DAE  B4D8               	btfsc	status,2,c
  3857  001DB0  D029               	goto	l958
  3858  001DB2  0E01               	movlw	1
  3859  001DB4  6E21               	movwf	___llmod@counter,c
  3860  001DB6  D007               	goto	l2876
  3861  001DB8                     l2874:
  3862  001DB8  90D8               	bcf	status,0,c
  3863  001DBA  361D               	rlcf	___llmod@divisor,f,c
  3864  001DBC  361E               	rlcf	___llmod@divisor+1,f,c
  3865  001DBE  361F               	rlcf	___llmod@divisor+2,f,c
  3866  001DC0  3620               	rlcf	___llmod@divisor+3,f,c
  3867  001DC2  2A21               	incf	___llmod@counter,f,c
  3868  001DC4  D000               	goto	l2876
  3869  001DC6                     l2876:
  3870  001DC6  BE20               	btfsc	___llmod@divisor+3,7,c
  3871  001DC8  D002               	goto	l2878
  3872  001DCA  D7F6               	goto	l2874
  3873  001DCC  D000               	goto	l2878
  3874  001DCE                     l2878:
  3875  001DCE  501D               	movf	___llmod@divisor,w,c
  3876  001DD0  5C19               	subwf	___llmod@dividend,w,c
  3877  001DD2  501E               	movf	___llmod@divisor+1,w,c
  3878  001DD4  581A               	subwfb	___llmod@dividend+1,w,c
  3879  001DD6  501F               	movf	___llmod@divisor+2,w,c
  3880  001DD8  581B               	subwfb	___llmod@dividend+2,w,c
  3881  001DDA  5020               	movf	___llmod@divisor+3,w,c
  3882  001DDC  581C               	subwfb	___llmod@dividend+3,w,c
  3883  001DDE  A0D8               	btfss	status,0,c
  3884  001DE0  D009               	goto	l2882
  3885  001DE2  501D               	movf	___llmod@divisor,w,c
  3886  001DE4  5E19               	subwf	___llmod@dividend,f,c
  3887  001DE6  501E               	movf	___llmod@divisor+1,w,c
  3888  001DE8  5A1A               	subwfb	___llmod@dividend+1,f,c
  3889  001DEA  501F               	movf	___llmod@divisor+2,w,c
  3890  001DEC  5A1B               	subwfb	___llmod@dividend+2,f,c
  3891  001DEE  5020               	movf	___llmod@divisor+3,w,c
  3892  001DF0  5A1C               	subwfb	___llmod@dividend+3,f,c
  3893  001DF2  D000               	goto	l2882
  3894  001DF4                     l2882:
  3895  001DF4  90D8               	bcf	status,0,c
  3896  001DF6  3220               	rrcf	___llmod@divisor+3,f,c
  3897  001DF8  321F               	rrcf	___llmod@divisor+2,f,c
  3898  001DFA  321E               	rrcf	___llmod@divisor+1,f,c
  3899  001DFC  321D               	rrcf	___llmod@divisor,f,c
  3900  001DFE  2E21               	decfsz	___llmod@counter,f,c
  3901  001E00  D7E6               	goto	l2878
  3902  001E02  D000               	goto	l958
  3903  001E04                     l958:
  3904  001E04  C019  F019         	movff	___llmod@dividend,?___llmod
  3905  001E08  C01A  F01A         	movff	___llmod@dividend+1,?___llmod+1
  3906  001E0C  C01B  F01B         	movff	___llmod@dividend+2,?___llmod+2
  3907  001E10  C01C  F01C         	movff	___llmod@dividend+3,?___llmod+3
  3908  001E14  0012               	return		;funcret
  3909  001E16                     __end_of___llmod:
  3910                           	opt stack 0
  3911                           tblptru	equ	0xFF8
  3912                           tblptrh	equ	0xFF7
  3913                           tblptrl	equ	0xFF6
  3914                           tablat	equ	0xFF5
  3915                           prodh	equ	0xFF4
  3916                           prodl	equ	0xFF3
  3917                           intcon	equ	0xFF2
  3918                           postinc0	equ	0xFEE
  3919                           wreg	equ	0xFE8
  3920                           indf1	equ	0xFE7
  3921                           fsr1h	equ	0xFE2
  3922                           fsr1l	equ	0xFE1
  3923                           indf2	equ	0xFDF
  3924                           postinc2	equ	0xFDE
  3925                           fsr2h	equ	0xFDA
  3926                           fsr2l	equ	0xFD9
  3927                           status	equ	0xFD8
  3928                           
  3929 ;; *************** function ___lldiv *****************
  3930 ;; Defined at:
  3931 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  3932 ;; Parameters:    Size  Location     Type
  3933 ;;  dividend        4   24[COMRAM] unsigned long 
  3934 ;;  divisor         4   28[COMRAM] unsigned long 
  3935 ;; Auto vars:     Size  Location     Type
  3936 ;;  quotient        4   32[COMRAM] unsigned long 
  3937 ;;  counter         1   36[COMRAM] unsigned char 
  3938 ;; Return value:  Size  Location     Type
  3939 ;;                  4   24[COMRAM] unsigned long 
  3940 ;; Registers used:
  3941 ;;		wreg, status,2, status,0
  3942 ;; Tracked objects:
  3943 ;;		On entry : 0/0
  3944 ;;		On exit  : 0/0
  3945 ;;		Unchanged: 0/0
  3946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3947 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3948 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3950 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3951 ;;Total ram usage:       13 bytes
  3952 ;; Hardware stack levels used:    1
  3953 ;; Hardware stack levels required when called:    3
  3954 ;; This function calls:
  3955 ;;		Nothing
  3956 ;; This function is called by:
  3957 ;;		_CRC_Verify
  3958 ;; This function uses a non-reentrant model
  3959 ;;
  3960                           
  3961                           	psect	text25
  3962  001C1A                     __ptext25:
  3963                           	opt stack 0
  3964  001C1A                     ___lldiv:
  3965                           	opt stack 24
  3966                           
  3967                           ;incstack = 0
  3968  001C1A  0E00               	movlw	0
  3969  001C1C  6E21               	movwf	___lldiv@quotient,c
  3970  001C1E  0E00               	movlw	0
  3971  001C20  6E22               	movwf	___lldiv@quotient+1,c
  3972  001C22  0E00               	movlw	0
  3973  001C24  6E23               	movwf	___lldiv@quotient+2,c
  3974  001C26  0E00               	movlw	0
  3975  001C28  6E24               	movwf	___lldiv@quotient+3,c
  3976  001C2A  501D               	movf	___lldiv@divisor,w,c
  3977  001C2C  101E               	iorwf	___lldiv@divisor+1,w,c
  3978  001C2E  101F               	iorwf	___lldiv@divisor+2,w,c
  3979  001C30  1020               	iorwf	___lldiv@divisor+3,w,c
  3980  001C32  B4D8               	btfsc	status,2,c
  3981  001C34  D02F               	goto	l948
  3982  001C36  0E01               	movlw	1
  3983  001C38  6E25               	movwf	___lldiv@counter,c
  3984  001C3A  D007               	goto	l2856
  3985  001C3C                     l2854:
  3986  001C3C  90D8               	bcf	status,0,c
  3987  001C3E  361D               	rlcf	___lldiv@divisor,f,c
  3988  001C40  361E               	rlcf	___lldiv@divisor+1,f,c
  3989  001C42  361F               	rlcf	___lldiv@divisor+2,f,c
  3990  001C44  3620               	rlcf	___lldiv@divisor+3,f,c
  3991  001C46  2A25               	incf	___lldiv@counter,f,c
  3992  001C48  D000               	goto	l2856
  3993  001C4A                     l2856:
  3994  001C4A  BE20               	btfsc	___lldiv@divisor+3,7,c
  3995  001C4C  D002               	goto	l2858
  3996  001C4E  D7F6               	goto	l2854
  3997  001C50  D000               	goto	l2858
  3998  001C52                     l2858:
  3999  001C52  90D8               	bcf	status,0,c
  4000  001C54  3621               	rlcf	___lldiv@quotient,f,c
  4001  001C56  3622               	rlcf	___lldiv@quotient+1,f,c
  4002  001C58  3623               	rlcf	___lldiv@quotient+2,f,c
  4003  001C5A  3624               	rlcf	___lldiv@quotient+3,f,c
  4004  001C5C  501D               	movf	___lldiv@divisor,w,c
  4005  001C5E  5C19               	subwf	___lldiv@dividend,w,c
  4006  001C60  501E               	movf	___lldiv@divisor+1,w,c
  4007  001C62  581A               	subwfb	___lldiv@dividend+1,w,c
  4008  001C64  501F               	movf	___lldiv@divisor+2,w,c
  4009  001C66  581B               	subwfb	___lldiv@dividend+2,w,c
  4010  001C68  5020               	movf	___lldiv@divisor+3,w,c
  4011  001C6A  581C               	subwfb	___lldiv@dividend+3,w,c
  4012  001C6C  A0D8               	btfss	status,0,c
  4013  001C6E  D00A               	goto	l2866
  4014  001C70  501D               	movf	___lldiv@divisor,w,c
  4015  001C72  5E19               	subwf	___lldiv@dividend,f,c
  4016  001C74  501E               	movf	___lldiv@divisor+1,w,c
  4017  001C76  5A1A               	subwfb	___lldiv@dividend+1,f,c
  4018  001C78  501F               	movf	___lldiv@divisor+2,w,c
  4019  001C7A  5A1B               	subwfb	___lldiv@dividend+2,f,c
  4020  001C7C  5020               	movf	___lldiv@divisor+3,w,c
  4021  001C7E  5A1C               	subwfb	___lldiv@dividend+3,f,c
  4022  001C80  8021               	bsf	___lldiv@quotient,0,c
  4023  001C82  D000               	goto	l2866
  4024  001C84                     l2866:
  4025  001C84  90D8               	bcf	status,0,c
  4026  001C86  3220               	rrcf	___lldiv@divisor+3,f,c
  4027  001C88  321F               	rrcf	___lldiv@divisor+2,f,c
  4028  001C8A  321E               	rrcf	___lldiv@divisor+1,f,c
  4029  001C8C  321D               	rrcf	___lldiv@divisor,f,c
  4030  001C8E  2E25               	decfsz	___lldiv@counter,f,c
  4031  001C90  D7E0               	goto	l2858
  4032  001C92  D000               	goto	l948
  4033  001C94                     l948:
  4034  001C94  C021  F019         	movff	___lldiv@quotient,?___lldiv
  4035  001C98  C022  F01A         	movff	___lldiv@quotient+1,?___lldiv+1
  4036  001C9C  C023  F01B         	movff	___lldiv@quotient+2,?___lldiv+2
  4037  001CA0  C024  F01C         	movff	___lldiv@quotient+3,?___lldiv+3
  4038  001CA4  0012               	return		;funcret
  4039  001CA6                     __end_of___lldiv:
  4040                           	opt stack 0
  4041                           tblptru	equ	0xFF8
  4042                           tblptrh	equ	0xFF7
  4043                           tblptrl	equ	0xFF6
  4044                           tablat	equ	0xFF5
  4045                           prodh	equ	0xFF4
  4046                           prodl	equ	0xFF3
  4047                           intcon	equ	0xFF2
  4048                           postinc0	equ	0xFEE
  4049                           wreg	equ	0xFE8
  4050                           indf1	equ	0xFE7
  4051                           fsr1h	equ	0xFE2
  4052                           fsr1l	equ	0xFE1
  4053                           indf2	equ	0xFDF
  4054                           postinc2	equ	0xFDE
  4055                           fsr2h	equ	0xFDA
  4056                           fsr2l	equ	0xFD9
  4057                           status	equ	0xFD8
  4058                           
  4059 ;; *************** function _Key_Message_Manage *****************
  4060 ;; Defined at:
  4061 ;;		line 171 in file "_01_USER/Key.c"
  4062 ;; Parameters:    Size  Location     Type
  4063 ;;		None
  4064 ;; Auto vars:     Size  Location     Type
  4065 ;;		None
  4066 ;; Return value:  Size  Location     Type
  4067 ;;		None               void
  4068 ;; Registers used:
  4069 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4070 ;; Tracked objects:
  4071 ;;		On entry : 0/0
  4072 ;;		On exit  : 0/0
  4073 ;;		Unchanged: 0/0
  4074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4079 ;;Total ram usage:        0 bytes
  4080 ;; Hardware stack levels used:    1
  4081 ;; Hardware stack levels required when called:    4
  4082 ;; This function calls:
  4083 ;;		_Key_FSM_Read
  4084 ;;		_Key_FSM_Reset
  4085 ;;		___lbmod
  4086 ;; This function is called by:
  4087 ;;		_Message_Manage
  4088 ;; This function uses a non-reentrant model
  4089 ;;
  4090                           
  4091                           	psect	text26
  4092  0019B6                     __ptext26:
  4093                           	opt stack 0
  4094  0019B6                     _Key_Message_Manage:
  4095                           	opt stack 25
  4096                           
  4097                           ;Key.c: 173: Key_FSM_Read();
  4098                           
  4099                           ;incstack = 0
  4100  0019B6  ECCF  F009         	call	_Key_FSM_Read	;wreg free
  4101                           
  4102                           ;Key.c: 175: if ( Local_Key_User.key_group == ((0x01<<1)|(0x01<<3)) && Local_Key_User.ke
      +                          y_group_state == KEY_short )
  4103  0019BA  0E0A               	movlw	10
  4104  0019BC  0100               	movlb	0	; () banked
  4105  0019BE  19C3               	xorwf	(_Local_Key_User+1)& (0+255),w,b	;volatile
  4106  0019C0  A4D8               	btfss	status,2,c
  4107  0019C2  D00A               	goto	l3132
  4108                           
  4109                           ; BSR set to: 0
  4110  0019C4  0100               	movlb	0	; () banked
  4111  0019C6  05C4               	decf	(_Local_Key_User+2)& (0+255),w,b	;volatile
  4112  0019C8  A4D8               	btfss	status,2,c
  4113  0019CA  D006               	goto	l3132
  4114                           
  4115                           ; BSR set to: 0
  4116                           ;Key.c: 176: {
  4117                           ;Key.c: 177: Handle_Switch.Show_Send_Receive = ~Handle_Switch.Show_Send_Receive ;
  4118  0019CC  5039               	movf	_Handle_Switch+3,w,c
  4119  0019CE  0AFF               	xorlw	255
  4120  0019D0  6E39               	movwf	_Handle_Switch+3,c
  4121                           
  4122                           ; BSR set to: 0
  4123                           ;Key.c: 178: Key_FSM_Reset();
  4124  0019D2  EC1A  F010         	call	_Key_FSM_Reset	;wreg free
  4125  0019D6  D000               	goto	l3132
  4126  0019D8                     l3132:
  4127                           
  4128                           ;Key.c: 179: }
  4129                           ;Key.c: 182: if (Local_Key_User.key_state[5-1] == KEY_short) RS485_Num -- ;
  4130  0019D8  0100               	movlb	0	; () banked
  4131  0019DA  05D3               	decf	(_Local_Key_User+17)& (0+255),w,b	;volatile
  4132  0019DC  A4D8               	btfss	status,2,c
  4133  0019DE  D002               	goto	l3136
  4134                           
  4135                           ; BSR set to: 0
  4136  0019E0  0646               	decf	_RS485_Num,f,c
  4137  0019E2  D000               	goto	l3136
  4138  0019E4                     l3136:
  4139                           
  4140                           ; BSR set to: 0
  4141                           ;Key.c: 183: if (Local_Key_User.key_state[5-1] == KEY_hold) RS485_Num -- ;
  4142  0019E4  0E03               	movlw	3
  4143  0019E6  0100               	movlb	0	; () banked
  4144  0019E8  19D3               	xorwf	(_Local_Key_User+17)& (0+255),w,b	;volatile
  4145  0019EA  A4D8               	btfss	status,2,c
  4146  0019EC  D002               	goto	l3140
  4147                           
  4148                           ; BSR set to: 0
  4149  0019EE  0646               	decf	_RS485_Num,f,c
  4150  0019F0  D000               	goto	l3140
  4151  0019F2                     l3140:
  4152                           
  4153                           ; BSR set to: 0
  4154                           ;Key.c: 186: if (Local_Key_User.key_state[3-1] == KEY_short) RS485_Num ++ ;
  4155  0019F2  0100               	movlb	0	; () banked
  4156  0019F4  05D1               	decf	(_Local_Key_User+15)& (0+255),w,b	;volatile
  4157  0019F6  A4D8               	btfss	status,2,c
  4158  0019F8  D002               	goto	l3144
  4159                           
  4160                           ; BSR set to: 0
  4161  0019FA  2A46               	incf	_RS485_Num,f,c
  4162  0019FC  D000               	goto	l3144
  4163  0019FE                     l3144:
  4164                           
  4165                           ; BSR set to: 0
  4166                           ;Key.c: 187: if (Local_Key_User.key_state[3-1] == KEY_hold) RS485_Num ++ ;
  4167  0019FE  0E03               	movlw	3
  4168  001A00  0100               	movlb	0	; () banked
  4169  001A02  19D1               	xorwf	(_Local_Key_User+15)& (0+255),w,b	;volatile
  4170  001A04  A4D8               	btfss	status,2,c
  4171  001A06  D002               	goto	l3148
  4172                           
  4173                           ; BSR set to: 0
  4174  001A08  2A46               	incf	_RS485_Num,f,c
  4175  001A0A  D000               	goto	l3148
  4176  001A0C                     l3148:
  4177                           
  4178                           ; BSR set to: 0
  4179                           ;Key.c: 189: if( RS485_Num > 250 ) RS485_Num = 10 - 1;
  4180  001A0C  0EFA               	movlw	250
  4181  001A0E  6446               	cpfsgt	_RS485_Num,c
  4182  001A10  D002               	goto	l3152
  4183                           
  4184                           ; BSR set to: 0
  4185  001A12  0E09               	movlw	9
  4186  001A14  D005               	goto	L3
  4187  001A16                     l3152:
  4188                           
  4189                           ; BSR set to: 0
  4190                           ;Key.c: 190: else RS485_Num %= 10;
  4191  001A16  0E0A               	movlw	10
  4192  001A18  6E19               	movwf	___lbmod@divisor,c
  4193  001A1A  5046               	movf	_RS485_Num,w,c
  4194  001A1C  ECB6  F010         	call	___lbmod
  4195  001A20                     L3:
  4196  001A20  6E46               	movwf	_RS485_Num,c
  4197  001A22  D000               	goto	l3154
  4198  001A24                     l3154:
  4199                           
  4200                           ;Key.c: 193: if (Local_Key_User.key_state[4-1] == KEY_short) RS485_SendBuff[RS485_Num] +
      +                          + ;
  4201  001A24  0100               	movlb	0	; () banked
  4202  001A26  05D2               	decf	(_Local_Key_User+16)& (0+255),w,b	;volatile
  4203  001A28  A4D8               	btfss	status,2,c
  4204  001A2A  D00A               	goto	l3158
  4205                           
  4206                           ; BSR set to: 0
  4207  001A2C  5046               	movf	_RS485_Num,w,c
  4208  001A2E  0D01               	mullw	1
  4209  001A30  0EDE               	movlw	low _RS485_SendBuff
  4210  001A32  24F3               	addwf	prodl,w,c
  4211  001A34  6ED9               	movwf	fsr2l,c
  4212  001A36  0E00               	movlw	high _RS485_SendBuff
  4213  001A38  20F4               	addwfc	prodh,w,c
  4214  001A3A  6EDA               	movwf	fsr2h,c
  4215  001A3C  2ADF               	incf	indf2,f,c
  4216  001A3E  D000               	goto	l3158
  4217  001A40                     l3158:
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;Key.c: 194: if (Local_Key_User.key_state[4-1] == KEY_hold) RS485_SendBuff[RS485_Num] ++
      +                           ;
  4221  001A40  0E03               	movlw	3
  4222  001A42  0100               	movlb	0	; () banked
  4223  001A44  19D2               	xorwf	(_Local_Key_User+16)& (0+255),w,b	;volatile
  4224  001A46  A4D8               	btfss	status,2,c
  4225  001A48  D00A               	goto	l3162
  4226                           
  4227                           ; BSR set to: 0
  4228  001A4A  5046               	movf	_RS485_Num,w,c
  4229  001A4C  0D01               	mullw	1
  4230  001A4E  0EDE               	movlw	low _RS485_SendBuff
  4231  001A50  24F3               	addwf	prodl,w,c
  4232  001A52  6ED9               	movwf	fsr2l,c
  4233  001A54  0E00               	movlw	high _RS485_SendBuff
  4234  001A56  20F4               	addwfc	prodh,w,c
  4235  001A58  6EDA               	movwf	fsr2h,c
  4236  001A5A  2ADF               	incf	indf2,f,c
  4237  001A5C  D000               	goto	l3162
  4238  001A5E                     l3162:
  4239                           
  4240                           ; BSR set to: 0
  4241                           ;Key.c: 197: if (Local_Key_User.key_state[2-1] == KEY_short) RS485_SendBuff[RS485_Num] -
      +                          - ;
  4242  001A5E  0100               	movlb	0	; () banked
  4243  001A60  05D0               	decf	(_Local_Key_User+14)& (0+255),w,b	;volatile
  4244  001A62  A4D8               	btfss	status,2,c
  4245  001A64  D00A               	goto	l3166
  4246                           
  4247                           ; BSR set to: 0
  4248  001A66  5046               	movf	_RS485_Num,w,c
  4249  001A68  0D01               	mullw	1
  4250  001A6A  0EDE               	movlw	low _RS485_SendBuff
  4251  001A6C  24F3               	addwf	prodl,w,c
  4252  001A6E  6ED9               	movwf	fsr2l,c
  4253  001A70  0E00               	movlw	high _RS485_SendBuff
  4254  001A72  20F4               	addwfc	prodh,w,c
  4255  001A74  6EDA               	movwf	fsr2h,c
  4256  001A76  06DF               	decf	indf2,f,c
  4257  001A78  D000               	goto	l3166
  4258  001A7A                     l3166:
  4259                           
  4260                           ; BSR set to: 0
  4261                           ;Key.c: 198: if (Local_Key_User.key_state[2-1] == KEY_hold) RS485_SendBuff[RS485_Num] --
      +                           ;
  4262  001A7A  0E03               	movlw	3
  4263  001A7C  0100               	movlb	0	; () banked
  4264  001A7E  19D0               	xorwf	(_Local_Key_User+14)& (0+255),w,b	;volatile
  4265  001A80  A4D8               	btfss	status,2,c
  4266  001A82  D00A               	goto	l3170
  4267                           
  4268                           ; BSR set to: 0
  4269  001A84  5046               	movf	_RS485_Num,w,c
  4270  001A86  0D01               	mullw	1
  4271  001A88  0EDE               	movlw	low _RS485_SendBuff
  4272  001A8A  24F3               	addwf	prodl,w,c
  4273  001A8C  6ED9               	movwf	fsr2l,c
  4274  001A8E  0E00               	movlw	high _RS485_SendBuff
  4275  001A90  20F4               	addwfc	prodh,w,c
  4276  001A92  6EDA               	movwf	fsr2h,c
  4277  001A94  06DF               	decf	indf2,f,c
  4278  001A96  D000               	goto	l3170
  4279  001A98                     l3170:
  4280                           
  4281                           ; BSR set to: 0
  4282                           ;Key.c: 203: if (Local_Key_User.key_state[1-1] == KEY_short) Handle_Switch.Usart_OneDate
      +                           = 1 ;
  4283  001A98  0100               	movlb	0	; () banked
  4284  001A9A  05CF               	decf	(_Local_Key_User+13)& (0+255),w,b	;volatile
  4285  001A9C  A4D8               	btfss	status,2,c
  4286  001A9E  D003               	goto	l3174
  4287                           
  4288                           ; BSR set to: 0
  4289  001AA0  0E01               	movlw	1
  4290  001AA2  6E38               	movwf	_Handle_Switch+2,c
  4291  001AA4  D000               	goto	l3174
  4292  001AA6                     l3174:
  4293                           
  4294                           ; BSR set to: 0
  4295                           ;Key.c: 206: Key_FSM_Reset();
  4296  001AA6  EC1A  F010         	call	_Key_FSM_Reset	;wreg free
  4297  001AAA  0012               	return		;funcret
  4298  001AAC                     __end_of_Key_Message_Manage:
  4299                           	opt stack 0
  4300                           tblptru	equ	0xFF8
  4301                           tblptrh	equ	0xFF7
  4302                           tblptrl	equ	0xFF6
  4303                           tablat	equ	0xFF5
  4304                           prodh	equ	0xFF4
  4305                           prodl	equ	0xFF3
  4306                           intcon	equ	0xFF2
  4307                           postinc0	equ	0xFEE
  4308                           wreg	equ	0xFE8
  4309                           indf1	equ	0xFE7
  4310                           fsr1h	equ	0xFE2
  4311                           fsr1l	equ	0xFE1
  4312                           indf2	equ	0xFDF
  4313                           postinc2	equ	0xFDE
  4314                           fsr2h	equ	0xFDA
  4315                           fsr2l	equ	0xFD9
  4316                           status	equ	0xFD8
  4317                           
  4318 ;; *************** function ___lbmod *****************
  4319 ;; Defined at:
  4320 ;;		line 4 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbmod.c"
  4321 ;; Parameters:    Size  Location     Type
  4322 ;;  dividend        1    wreg     unsigned char 
  4323 ;;  divisor         1   24[COMRAM] unsigned char 
  4324 ;; Auto vars:     Size  Location     Type
  4325 ;;  dividend        1   25[COMRAM] unsigned char 
  4326 ;;  rem             1   27[COMRAM] unsigned char 
  4327 ;;  counter         1   26[COMRAM] unsigned char 
  4328 ;; Return value:  Size  Location     Type
  4329 ;;                  1    wreg      unsigned char 
  4330 ;; Registers used:
  4331 ;;		wreg, status,2, status,0
  4332 ;; Tracked objects:
  4333 ;;		On entry : 0/0
  4334 ;;		On exit  : 0/0
  4335 ;;		Unchanged: 0/0
  4336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4337 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4338 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4340 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4341 ;;Total ram usage:        4 bytes
  4342 ;; Hardware stack levels used:    1
  4343 ;; Hardware stack levels required when called:    3
  4344 ;; This function calls:
  4345 ;;		Nothing
  4346 ;; This function is called by:
  4347 ;;		_Key_Message_Manage
  4348 ;; This function uses a non-reentrant model
  4349 ;;
  4350                           
  4351                           	psect	text27
  4352  00216C                     __ptext27:
  4353                           	opt stack 0
  4354  00216C                     ___lbmod:
  4355                           	opt stack 25
  4356                           
  4357                           ;incstack = 0
  4358                           ;___lbmod@dividend stored from wreg
  4359  00216C  6E1A               	movwf	___lbmod@dividend,c
  4360  00216E  0E08               	movlw	8
  4361  002170  6E1B               	movwf	___lbmod@counter,c
  4362  002172  0E00               	movlw	0
  4363  002174  6E1C               	movwf	___lbmod@rem,c
  4364  002176  D000               	goto	l3066
  4365  002178                     l3066:
  4366  002178  90D8               	bcf	status,0,c
  4367  00217A  341A               	rlcf	___lbmod@dividend,w,c
  4368  00217C  341C               	rlcf	___lbmod@rem,w,c
  4369  00217E  6E1C               	movwf	___lbmod@rem,c
  4370  002180  90D8               	bcf	status,0,c
  4371  002182  361A               	rlcf	___lbmod@dividend,f,c
  4372  002184  5019               	movf	___lbmod@divisor,w,c
  4373  002186  5C1C               	subwf	___lbmod@rem,w,c
  4374  002188  A0D8               	btfss	status,0,c
  4375  00218A  D003               	goto	l3074
  4376  00218C  5019               	movf	___lbmod@divisor,w,c
  4377  00218E  5E1C               	subwf	___lbmod@rem,f,c
  4378  002190  D000               	goto	l3074
  4379  002192                     l3074:
  4380  002192  2E1B               	decfsz	___lbmod@counter,f,c
  4381  002194  D7F1               	goto	l3066
  4382  002196  D000               	goto	l3076
  4383  002198                     l3076:
  4384  002198  501C               	movf	___lbmod@rem,w,c
  4385  00219A  0012               	return	
  4386  00219C  0012               	return		;funcret
  4387  00219E                     __end_of___lbmod:
  4388                           	opt stack 0
  4389                           tblptru	equ	0xFF8
  4390                           tblptrh	equ	0xFF7
  4391                           tblptrl	equ	0xFF6
  4392                           tablat	equ	0xFF5
  4393                           prodh	equ	0xFF4
  4394                           prodl	equ	0xFF3
  4395                           intcon	equ	0xFF2
  4396                           postinc0	equ	0xFEE
  4397                           wreg	equ	0xFE8
  4398                           indf1	equ	0xFE7
  4399                           fsr1h	equ	0xFE2
  4400                           fsr1l	equ	0xFE1
  4401                           indf2	equ	0xFDF
  4402                           postinc2	equ	0xFDE
  4403                           fsr2h	equ	0xFDA
  4404                           fsr2l	equ	0xFD9
  4405                           status	equ	0xFD8
  4406                           
  4407 ;; *************** function _Key_FSM_Reset *****************
  4408 ;; Defined at:
  4409 ;;		line 151 in file "_01_USER/Key.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;		None
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;  t               1   24[COMRAM] unsigned char 
  4414 ;; Return value:  Size  Location     Type
  4415 ;;		None               void
  4416 ;; Registers used:
  4417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4418 ;; Tracked objects:
  4419 ;;		On entry : 0/0
  4420 ;;		On exit  : 0/0
  4421 ;;		Unchanged: 0/0
  4422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4424 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4426 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4427 ;;Total ram usage:        1 bytes
  4428 ;; Hardware stack levels used:    1
  4429 ;; Hardware stack levels required when called:    3
  4430 ;; This function calls:
  4431 ;;		Nothing
  4432 ;; This function is called by:
  4433 ;;		_Key_Message_Manage
  4434 ;; This function uses a non-reentrant model
  4435 ;;
  4436                           
  4437                           	psect	text28
  4438  002034                     __ptext28:
  4439                           	opt stack 0
  4440  002034                     _Key_FSM_Reset:
  4441                           	opt stack 25
  4442                           
  4443                           ;Key.c: 153: unsigned char t;
  4444                           ;Key.c: 154: Local_Key_User.key_BUS = 0x00;
  4445                           
  4446                           ;incstack = 0
  4447  002034  0E00               	movlw	0
  4448  002036  0100               	movlb	0	; () banked
  4449  002038  6FC2               	movwf	_Local_Key_User& (0+255),b	;volatile
  4450                           
  4451                           ;Key.c: 155: Local_Key_User.key_group = KEY_default;
  4452  00203A  0E00               	movlw	0
  4453  00203C  0100               	movlb	0	; () banked
  4454  00203E  6FC3               	movwf	(_Local_Key_User+1)& (0+255),b	;volatile
  4455                           
  4456                           ;Key.c: 156: t=4;
  4457  002040  0E04               	movlw	4
  4458  002042  6E19               	movwf	Key_FSM_Reset@t,c
  4459                           
  4460                           ;Key.c: 157: while(t--) Local_Key_User.key_count[t] = 0,
  4461  002044  D017               	goto	l2938
  4462  002046                     l2936:
  4463                           
  4464                           ;Key.c: 158: Local_Key_User.key_state[t] = KEY_default;
  4465  002046  5019               	movf	Key_FSM_Reset@t,w,c
  4466  002048  0D02               	mullw	2
  4467  00204A  0EC5               	movlw	low (_Local_Key_User+3)
  4468  00204C  24F3               	addwf	prodl,w,c
  4469  00204E  6ED9               	movwf	fsr2l,c
  4470  002050  0E00               	movlw	high (_Local_Key_User+3)
  4471  002052  20F4               	addwfc	prodh,w,c
  4472  002054  6EDA               	movwf	fsr2h,c
  4473  002056  0E00               	movlw	0
  4474  002058  6EDE               	movwf	postinc2,c
  4475  00205A  0E00               	movlw	0
  4476  00205C  6EDD               	movwf	postdec2,c
  4477  00205E  5019               	movf	Key_FSM_Reset@t,w,c
  4478  002060  0D01               	mullw	1
  4479  002062  0ECF               	movlw	low (_Local_Key_User+13)
  4480  002064  24F3               	addwf	prodl,w,c
  4481  002066  6ED9               	movwf	fsr2l,c
  4482  002068  0E00               	movlw	high (_Local_Key_User+13)
  4483  00206A  20F4               	addwfc	prodh,w,c
  4484  00206C  6EDA               	movwf	fsr2h,c
  4485  00206E  0E00               	movlw	0
  4486  002070  6EDF               	movwf	indf2,c
  4487  002072  D000               	goto	l2938
  4488  002074                     l2938:
  4489  002074  0619               	decf	Key_FSM_Reset@t,f,c
  4490  002076  2819               	incf	Key_FSM_Reset@t,w,c
  4491  002078  A4D8               	btfss	status,2,c
  4492  00207A  D7E5               	goto	l2936
  4493  00207C  0012               	return		;funcret
  4494  00207E                     __end_of_Key_FSM_Reset:
  4495                           	opt stack 0
  4496                           tblptru	equ	0xFF8
  4497                           tblptrh	equ	0xFF7
  4498                           tblptrl	equ	0xFF6
  4499                           tablat	equ	0xFF5
  4500                           prodh	equ	0xFF4
  4501                           prodl	equ	0xFF3
  4502                           intcon	equ	0xFF2
  4503                           postinc0	equ	0xFEE
  4504                           wreg	equ	0xFE8
  4505                           indf1	equ	0xFE7
  4506                           fsr1h	equ	0xFE2
  4507                           fsr1l	equ	0xFE1
  4508                           indf2	equ	0xFDF
  4509                           postinc2	equ	0xFDE
  4510                           postdec2	equ	0xFDD
  4511                           fsr2h	equ	0xFDA
  4512                           fsr2l	equ	0xFD9
  4513                           status	equ	0xFD8
  4514                           
  4515 ;; *************** function _Key_FSM_Read *****************
  4516 ;; Defined at:
  4517 ;;		line 101 in file "_01_USER/Key.c"
  4518 ;; Parameters:    Size  Location     Type
  4519 ;;		None
  4520 ;; Auto vars:     Size  Location     Type
  4521 ;;  key_num         1   29[COMRAM] unsigned char 
  4522 ;;  key_num_mate    1   28[COMRAM] unsigned char 
  4523 ;; Return value:  Size  Location     Type
  4524 ;;		None               void
  4525 ;; Registers used:
  4526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4527 ;; Tracked objects:
  4528 ;;		On entry : 0/0
  4529 ;;		On exit  : 0/0
  4530 ;;		Unchanged: 0/0
  4531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4533 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4534 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4535 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4536 ;;Total ram usage:        6 bytes
  4537 ;; Hardware stack levels used:    1
  4538 ;; Hardware stack levels required when called:    3
  4539 ;; This function calls:
  4540 ;;		Nothing
  4541 ;; This function is called by:
  4542 ;;		_Key_Message_Manage
  4543 ;; This function uses a non-reentrant model
  4544 ;;
  4545                           
  4546                           	psect	text29
  4547  00139E                     __ptext29:
  4548                           	opt stack 0
  4549  00139E                     _Key_FSM_Read:
  4550                           	opt stack 25
  4551                           
  4552                           ;Key.c: 103: unsigned char key_num = 5,key_num_mate;
  4553                           
  4554                           ;incstack = 0
  4555  00139E  0E05               	movlw	5
  4556  0013A0  6E1E               	movwf	Key_FSM_Read@key_num,c
  4557                           
  4558                           ;Key.c: 106: while(key_num--)
  4559  0013A2  D072               	goto	l2906
  4560  0013A4                     l2888:
  4561                           
  4562                           ;Key.c: 107: {
  4563                           ;Key.c: 109: if( Local_Key_FSM.key_BUS == 0x00 )
  4564  0013A4  0100               	movlb	0	; () banked
  4565  0013A6  51B0               	movf	_Local_Key_FSM& (0+255),w,b	;volatile
  4566  0013A8  A4D8               	btfss	status,2,c
  4567  0013AA  D04A               	goto	l2900
  4568                           
  4569                           ; BSR set to: 0
  4570                           ;Key.c: 110: {
  4571                           ;Key.c: 111: if( Local_Key_FSM.key_count[key_num] > 5 )
  4572  0013AC  501E               	movf	Key_FSM_Read@key_num,w,c
  4573  0013AE  0D02               	mullw	2
  4574  0013B0  0EB3               	movlw	low (_Local_Key_FSM+3)
  4575  0013B2  24F3               	addwf	prodl,w,c
  4576  0013B4  6ED9               	movwf	fsr2l,c
  4577  0013B6  0E00               	movlw	high (_Local_Key_FSM+3)
  4578  0013B8  20F4               	addwfc	prodh,w,c
  4579  0013BA  6EDA               	movwf	fsr2h,c
  4580  0013BC  0E01               	movlw	1
  4581  0013BE  50DB               	movf	plusw2,w,c
  4582  0013C0  E104               	bnz	u2840
  4583  0013C2  0E06               	movlw	6
  4584  0013C4  5CDE               	subwf	postinc2,w,c
  4585  0013C6  A0D8               	btfss	status,0,c
  4586  0013C8  D024               	goto	l2898
  4587  0013CA                     u2840:
  4588                           
  4589                           ; BSR set to: 0
  4590                           ;Key.c: 112: {
  4591                           ;Key.c: 113: if( Local_Key_FSM.key_count[key_num] > 60 )
  4592  0013CA  501E               	movf	Key_FSM_Read@key_num,w,c
  4593  0013CC  0D02               	mullw	2
  4594  0013CE  0EB3               	movlw	low (_Local_Key_FSM+3)
  4595  0013D0  24F3               	addwf	prodl,w,c
  4596  0013D2  6ED9               	movwf	fsr2l,c
  4597  0013D4  0E00               	movlw	high (_Local_Key_FSM+3)
  4598  0013D6  20F4               	addwfc	prodh,w,c
  4599  0013D8  6EDA               	movwf	fsr2h,c
  4600  0013DA  0E01               	movlw	1
  4601  0013DC  50DB               	movf	plusw2,w,c
  4602  0013DE  E104               	bnz	u2850
  4603  0013E0  0E3D               	movlw	61
  4604  0013E2  5CDE               	subwf	postinc2,w,c
  4605  0013E4  A0D8               	btfss	status,0,c
  4606  0013E6  D00A               	goto	l2896
  4607  0013E8                     u2850:
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;Key.c: 114: Local_Key_User.key_state[key_num] = KEY_long;
  4611  0013E8  501E               	movf	Key_FSM_Read@key_num,w,c
  4612  0013EA  0D01               	mullw	1
  4613  0013EC  0ECF               	movlw	low (_Local_Key_User+13)
  4614  0013EE  24F3               	addwf	prodl,w,c
  4615  0013F0  6ED9               	movwf	fsr2l,c
  4616  0013F2  0E00               	movlw	high (_Local_Key_User+13)
  4617  0013F4  20F4               	addwfc	prodh,w,c
  4618  0013F6  6EDA               	movwf	fsr2h,c
  4619  0013F8  0E05               	movlw	5
  4620  0013FA  D014               	goto	L4
  4621  0013FC                     l2896:
  4622                           
  4623                           ; BSR set to: 0
  4624                           ;Key.c: 115: else Local_Key_User.key_state[key_num] = KEY_short;
  4625  0013FC  501E               	movf	Key_FSM_Read@key_num,w,c
  4626  0013FE  0D01               	mullw	1
  4627  001400  0ECF               	movlw	low (_Local_Key_User+13)
  4628  001402  24F3               	addwf	prodl,w,c
  4629  001404  6ED9               	movwf	fsr2l,c
  4630  001406  0E00               	movlw	high (_Local_Key_User+13)
  4631  001408  20F4               	addwfc	prodh,w,c
  4632  00140A  6EDA               	movwf	fsr2h,c
  4633  00140C  0E01               	movlw	1
  4634  00140E  6EDF               	movwf	indf2,c
  4635                           
  4636                           ; BSR set to: 0
  4637                           ;Key.c: 116: }
  4638  001410  D00A               	goto	l131
  4639  001412                     l2898:
  4640                           
  4641                           ; BSR set to: 0
  4642                           ;Key.c: 117: else Local_Key_User.key_state[key_num] = KEY_default;
  4643  001412  501E               	movf	Key_FSM_Read@key_num,w,c
  4644  001414  0D01               	mullw	1
  4645  001416  0ECF               	movlw	low (_Local_Key_User+13)
  4646  001418  24F3               	addwf	prodl,w,c
  4647  00141A  6ED9               	movwf	fsr2l,c
  4648  00141C  0E00               	movlw	high (_Local_Key_User+13)
  4649  00141E  20F4               	addwfc	prodh,w,c
  4650  001420  6EDA               	movwf	fsr2h,c
  4651  001422  0E00               	movlw	0
  4652  001424                     L4:
  4653  001424  6EDF               	movwf	indf2,c
  4654  001426                     l131:
  4655                           
  4656                           ; BSR set to: 0
  4657                           ;Key.c: 118: Local_Key_FSM.key_count[key_num] = 0;
  4658  001426  501E               	movf	Key_FSM_Read@key_num,w,c
  4659  001428  0D02               	mullw	2
  4660  00142A  0EB3               	movlw	low (_Local_Key_FSM+3)
  4661  00142C  24F3               	addwf	prodl,w,c
  4662  00142E  6ED9               	movwf	fsr2l,c
  4663  001430  0E00               	movlw	high (_Local_Key_FSM+3)
  4664  001432  20F4               	addwfc	prodh,w,c
  4665  001434  6EDA               	movwf	fsr2h,c
  4666  001436  0E00               	movlw	0
  4667  001438  6EDE               	movwf	postinc2,c
  4668  00143A  0E00               	movlw	0
  4669  00143C  6EDD               	movwf	postdec2,c
  4670                           
  4671                           ;Key.c: 119: }
  4672  00143E  D024               	goto	l2906
  4673  001440                     l2900:
  4674                           
  4675                           ; BSR set to: 0
  4676                           ;Key.c: 121: else if( Local_Key_FSM.key_count[key_num] > 60 )
  4677  001440  501E               	movf	Key_FSM_Read@key_num,w,c
  4678  001442  0D02               	mullw	2
  4679  001444  0EB3               	movlw	low (_Local_Key_FSM+3)
  4680  001446  24F3               	addwf	prodl,w,c
  4681  001448  6ED9               	movwf	fsr2l,c
  4682  00144A  0E00               	movlw	high (_Local_Key_FSM+3)
  4683  00144C  20F4               	addwfc	prodh,w,c
  4684  00144E  6EDA               	movwf	fsr2h,c
  4685  001450  0E01               	movlw	1
  4686  001452  50DB               	movf	plusw2,w,c
  4687  001454  E104               	bnz	u2860
  4688  001456  0E3D               	movlw	61
  4689  001458  5CDE               	subwf	postinc2,w,c
  4690  00145A  A0D8               	btfss	status,0,c
  4691  00145C  D00A               	goto	l2904
  4692  00145E                     u2860:
  4693                           
  4694                           ; BSR set to: 0
  4695                           ;Key.c: 122: Local_Key_User.key_state[key_num] = KEY_hold;
  4696  00145E  501E               	movf	Key_FSM_Read@key_num,w,c
  4697  001460  0D01               	mullw	1
  4698  001462  0ECF               	movlw	low (_Local_Key_User+13)
  4699  001464  24F3               	addwf	prodl,w,c
  4700  001466  6ED9               	movwf	fsr2l,c
  4701  001468  0E00               	movlw	high (_Local_Key_User+13)
  4702  00146A  20F4               	addwfc	prodh,w,c
  4703  00146C  6EDA               	movwf	fsr2h,c
  4704  00146E  0E03               	movlw	3
  4705  001470  D009               	goto	L5
  4706  001472                     l2904:
  4707                           
  4708                           ; BSR set to: 0
  4709                           ;Key.c: 125: else Local_Key_User.key_state[key_num] = KEY_busy;
  4710  001472  501E               	movf	Key_FSM_Read@key_num,w,c
  4711  001474  0D01               	mullw	1
  4712  001476  0ECF               	movlw	low (_Local_Key_User+13)
  4713  001478  24F3               	addwf	prodl,w,c
  4714  00147A  6ED9               	movwf	fsr2l,c
  4715  00147C  0E00               	movlw	high (_Local_Key_User+13)
  4716  00147E  20F4               	addwfc	prodh,w,c
  4717  001480  6EDA               	movwf	fsr2h,c
  4718  001482  0E04               	movlw	4
  4719  001484                     L5:
  4720  001484  6EDF               	movwf	indf2,c
  4721                           
  4722                           ; BSR set to: 0
  4723                           
  4724                           ; BSR set to: 0
  4725  001486  D000               	goto	l2906
  4726  001488                     l2906:
  4727  001488  061E               	decf	Key_FSM_Read@key_num,f,c
  4728  00148A  281E               	incf	Key_FSM_Read@key_num,w,c
  4729  00148C  A4D8               	btfss	status,2,c
  4730  00148E  D78A               	goto	l2888
  4731                           
  4732                           ;Key.c: 126: }
  4733                           ;Key.c: 130: for( key_num = 0;key_num < 5 - 1; key_num ++)
  4734  001490  0E00               	movlw	0
  4735  001492  6E1E               	movwf	Key_FSM_Read@key_num,c
  4736  001494  0E03               	movlw	3
  4737  001496  641E               	cpfsgt	Key_FSM_Read@key_num,c
  4738  001498  D002               	goto	l2914
  4739  00149A  0012               	return	
  4740  00149C  0012               	return	
  4741  00149E                     l2914:
  4742                           
  4743                           ;Key.c: 131: for( key_num_mate = key_num+1;key_num_mate < 5 ; key_num_mate ++)
  4744  00149E  281E               	incf	Key_FSM_Read@key_num,w,c
  4745  0014A0  6E1D               	movwf	Key_FSM_Read@key_num_mate,c
  4746  0014A2  0E04               	movlw	4
  4747  0014A4  641D               	cpfsgt	Key_FSM_Read@key_num_mate,c
  4748  0014A6  D001               	goto	l2918
  4749  0014A8  D045               	goto	l2930
  4750  0014AA                     l2918:
  4751                           
  4752                           ;Key.c: 132: if( Local_Key_User.key_state[key_num] == Local_Key_User.key_state[key_num_m
      +                          ate] )
  4753  0014AA  501D               	movf	Key_FSM_Read@key_num_mate,w,c
  4754  0014AC  0D01               	mullw	1
  4755  0014AE  0ECF               	movlw	low (_Local_Key_User+13)
  4756  0014B0  24F3               	addwf	prodl,w,c
  4757  0014B2  6ED9               	movwf	fsr2l,c
  4758  0014B4  0E00               	movlw	high (_Local_Key_User+13)
  4759  0014B6  20F4               	addwfc	prodh,w,c
  4760  0014B8  6EDA               	movwf	fsr2h,c
  4761  0014BA  501E               	movf	Key_FSM_Read@key_num,w,c
  4762  0014BC  0D01               	mullw	1
  4763  0014BE  0ECF               	movlw	low (_Local_Key_User+13)
  4764  0014C0  24F3               	addwf	prodl,w,c
  4765  0014C2  6EE1               	movwf	fsr1l,c
  4766  0014C4  0E00               	movlw	high (_Local_Key_User+13)
  4767  0014C6  20F4               	addwfc	prodh,w,c
  4768  0014C8  6EE2               	movwf	fsr1h,c
  4769  0014CA  50DE               	movf	postinc2,w,c
  4770  0014CC  18E6               	xorwf	postinc1,w,c
  4771  0014CE  A4D8               	btfss	status,2,c
  4772  0014D0  D02F               	goto	l2926
  4773                           
  4774                           ;Key.c: 133: if(Local_Key_User.key_state[key_num] != KEY_default)
  4775  0014D2  501E               	movf	Key_FSM_Read@key_num,w,c
  4776  0014D4  0D01               	mullw	1
  4777  0014D6  0ECF               	movlw	low (_Local_Key_User+13)
  4778  0014D8  24F3               	addwf	prodl,w,c
  4779  0014DA  6ED9               	movwf	fsr2l,c
  4780  0014DC  0E00               	movlw	high (_Local_Key_User+13)
  4781  0014DE  20F4               	addwfc	prodh,w,c
  4782  0014E0  6EDA               	movwf	fsr2h,c
  4783  0014E2  50DF               	movf	indf2,w,c
  4784  0014E4  B4D8               	btfsc	status,2,c
  4785  0014E6  D024               	goto	l2926
  4786                           
  4787                           ;Key.c: 134: {
  4788                           ;Key.c: 135: Local_Key_User.key_group = (0x01 << key_num)|(0x01 << key_num_mate);
  4789  0014E8  C01D  F019         	movff	Key_FSM_Read@key_num_mate,??_Key_FSM_Read
  4790  0014EC  0E01               	movlw	1
  4791  0014EE  6E1A               	movwf	(??_Key_FSM_Read+1)& (0+255),c
  4792  0014F0  2A19               	incf	??_Key_FSM_Read,f,c
  4793  0014F2  D002               	goto	u2924
  4794  0014F4                     u2925:
  4795  0014F4  90D8               	bcf	status,0,c
  4796  0014F6  361A               	rlcf	??_Key_FSM_Read+1,f,c
  4797  0014F8                     u2924:
  4798  0014F8  2E19               	decfsz	??_Key_FSM_Read,f,c
  4799  0014FA  D7FC               	goto	u2925
  4800  0014FC  C01E  F01B         	movff	Key_FSM_Read@key_num,??_Key_FSM_Read+2
  4801  001500  0E01               	movlw	1
  4802  001502  6E1C               	movwf	(??_Key_FSM_Read+3)& (0+255),c
  4803  001504  2A1B               	incf	??_Key_FSM_Read+2,f,c
  4804  001506  D002               	goto	u2934
  4805  001508                     u2935:
  4806  001508  90D8               	bcf	status,0,c
  4807  00150A  361C               	rlcf	??_Key_FSM_Read+3,f,c
  4808  00150C                     u2934:
  4809  00150C  2E1B               	decfsz	??_Key_FSM_Read+2,f,c
  4810  00150E  D7FC               	goto	u2935
  4811  001510  501C               	movf	??_Key_FSM_Read+3,w,c
  4812  001512  101A               	iorwf	??_Key_FSM_Read+1,w,c
  4813  001514  0100               	movlb	0	; () banked
  4814  001516  6FC3               	movwf	(_Local_Key_User+1)& (0+255),b	;volatile
  4815                           
  4816                           ; BSR set to: 0
  4817                           ;Key.c: 136: Local_Key_User.key_group_state = Local_Key_User.key_state[key_num];
  4818  001518  501E               	movf	Key_FSM_Read@key_num,w,c
  4819  00151A  0D01               	mullw	1
  4820  00151C  0ECF               	movlw	low (_Local_Key_User+13)
  4821  00151E  24F3               	addwf	prodl,w,c
  4822  001520  6ED9               	movwf	fsr2l,c
  4823  001522  0E00               	movlw	high (_Local_Key_User+13)
  4824  001524  20F4               	addwfc	prodh,w,c
  4825  001526  6EDA               	movwf	fsr2h,c
  4826  001528  50DF               	movf	indf2,w,c
  4827  00152A  0100               	movlb	0	; () banked
  4828  00152C  6FC4               	movwf	(_Local_Key_User+2)& (0+255),b	;volatile
  4829                           
  4830                           ; BSR set to: 0
  4831  00152E  D000               	goto	l2926
  4832  001530                     l2926:
  4833  001530  2A1D               	incf	Key_FSM_Read@key_num_mate,f,c
  4834  001532  D7B7               	goto	L6
  4835  001534                     l2930:
  4836  001534  2A1E               	incf	Key_FSM_Read@key_num,f,c
  4837  001536  0E03               	movlw	3
  4838  001538  641E               	cpfsgt	Key_FSM_Read@key_num,c
  4839  00153A  D7B1               	goto	l2914
  4840  00153C  0012               	return	
  4841  00153E  0012               	return		;funcret
  4842  001540                     __end_of_Key_FSM_Read:
  4843                           	opt stack 0
  4844                           tblptru	equ	0xFF8
  4845                           tblptrh	equ	0xFF7
  4846                           tblptrl	equ	0xFF6
  4847                           tablat	equ	0xFF5
  4848                           prodh	equ	0xFF4
  4849                           prodl	equ	0xFF3
  4850                           intcon	equ	0xFF2
  4851                           postinc0	equ	0xFEE
  4852                           wreg	equ	0xFE8
  4853                           indf1	equ	0xFE7
  4854                           postinc1	equ	0xFE6
  4855                           fsr1h	equ	0xFE2
  4856                           fsr1l	equ	0xFE1
  4857                           indf2	equ	0xFDF
  4858                           postinc2	equ	0xFDE
  4859                           postdec2	equ	0xFDD
  4860                           plusw2	equ	0xFDB
  4861                           fsr2h	equ	0xFDA
  4862                           fsr2l	equ	0xFD9
  4863                           status	equ	0xFD8
  4864                           
  4865 ;; *************** function _Key_Init *****************
  4866 ;; Defined at:
  4867 ;;		line 42 in file "_01_USER/Key.c"
  4868 ;; Parameters:    Size  Location     Type
  4869 ;;		None
  4870 ;; Auto vars:     Size  Location     Type
  4871 ;;		None
  4872 ;; Return value:  Size  Location     Type
  4873 ;;		None               void
  4874 ;; Registers used:
  4875 ;;		wreg, status,2, status,0
  4876 ;; Tracked objects:
  4877 ;;		On entry : 0/0
  4878 ;;		On exit  : 0/0
  4879 ;;		Unchanged: 0/0
  4880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4885 ;;Total ram usage:        0 bytes
  4886 ;; Hardware stack levels used:    1
  4887 ;; Hardware stack levels required when called:    3
  4888 ;; This function calls:
  4889 ;;		Nothing
  4890 ;; This function is called by:
  4891 ;;		_main
  4892 ;; This function uses a non-reentrant model
  4893 ;;
  4894                           
  4895                           	psect	text30
  4896  002400                     __ptext30:
  4897                           	opt stack 0
  4898  002400                     _Key_Init:
  4899                           	opt stack 27
  4900                           
  4901                           ;Key.c: 44: TRISE |= 0x1e;
  4902                           
  4903                           ;incstack = 0
  4904  002400  0E1E               	movlw	30
  4905  002402  1296               	iorwf	3990,f,c	;volatile
  4906                           
  4907                           ;Key.c: 45: TRISD |= 0xc0;
  4908  002404  0EC0               	movlw	192
  4909  002406  1295               	iorwf	3989,f,c	;volatile
  4910  002408  0012               	return		;funcret
  4911  00240A                     __end_of_Key_Init:
  4912                           	opt stack 0
  4913                           tblptru	equ	0xFF8
  4914                           tblptrh	equ	0xFF7
  4915                           tblptrl	equ	0xFF6
  4916                           tablat	equ	0xFF5
  4917                           prodh	equ	0xFF4
  4918                           prodl	equ	0xFF3
  4919                           intcon	equ	0xFF2
  4920                           postinc0	equ	0xFEE
  4921                           wreg	equ	0xFE8
  4922                           indf1	equ	0xFE7
  4923                           postinc1	equ	0xFE6
  4924                           fsr1h	equ	0xFE2
  4925                           fsr1l	equ	0xFE1
  4926                           indf2	equ	0xFDF
  4927                           postinc2	equ	0xFDE
  4928                           postdec2	equ	0xFDD
  4929                           plusw2	equ	0xFDB
  4930                           fsr2h	equ	0xFDA
  4931                           fsr2l	equ	0xFD9
  4932                           status	equ	0xFD8
  4933                           
  4934 ;; *************** function _Init_TM1640 *****************
  4935 ;; Defined at:
  4936 ;;		line 119 in file "_01_USER/TM1640.c"
  4937 ;; Parameters:    Size  Location     Type
  4938 ;;		None
  4939 ;; Auto vars:     Size  Location     Type
  4940 ;;		None
  4941 ;; Return value:  Size  Location     Type
  4942 ;;		None               void
  4943 ;; Registers used:
  4944 ;;		wreg, status,2, status,0, cstack
  4945 ;; Tracked objects:
  4946 ;;		On entry : 0/0
  4947 ;;		On exit  : 0/0
  4948 ;;		Unchanged: 0/0
  4949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4954 ;;Total ram usage:        0 bytes
  4955 ;; Hardware stack levels used:    1
  4956 ;; Hardware stack levels required when called:    5
  4957 ;; This function calls:
  4958 ;;		_TM1640_Start
  4959 ;;		_TM1640_Stop
  4960 ;;		_TM1640_Writer_Byte
  4961 ;; This function is called by:
  4962 ;;		_main
  4963 ;; This function uses a non-reentrant model
  4964 ;;
  4965                           
  4966                           	psect	text31
  4967  00229C                     __ptext31:
  4968                           	opt stack 0
  4969  00229C                     _Init_TM1640:
  4970                           	opt stack 25
  4971                           
  4972                           ;TM1640.c: 121: TRISCbits.TRISC3 = 0;
  4973                           
  4974                           ;incstack = 0
  4975  00229C  9694               	bcf	3988,3,c	;volatile
  4976                           
  4977                           ;TM1640.c: 122: TRISCbits.TRISC4 = 0;
  4978  00229E  9894               	bcf	3988,4,c	;volatile
  4979                           
  4980                           ;TM1640.c: 123: TM1640_Stop();
  4981  0022A0  EC86  F011         	call	_TM1640_Stop	;wreg free
  4982                           
  4983                           ;TM1640.c: 125: TM1640_Start();
  4984  0022A4  EC98  F011         	call	_TM1640_Start	;wreg free
  4985                           
  4986                           ;TM1640.c: 126: TM1640_Writer_Byte(0x44);
  4987  0022A8  0E44               	movlw	68
  4988  0022AA  EC5E  F010         	call	_TM1640_Writer_Byte
  4989                           
  4990                           ;TM1640.c: 127: TM1640_Stop();
  4991  0022AE  EC86  F011         	call	_TM1640_Stop	;wreg free
  4992                           
  4993                           ;TM1640.c: 129: TM1640_Start();
  4994  0022B2  EC98  F011         	call	_TM1640_Start	;wreg free
  4995                           
  4996                           ;TM1640.c: 130: TM1640_Writer_Byte(0x8F);
  4997  0022B6  0E8F               	movlw	143
  4998  0022B8  EC5E  F010         	call	_TM1640_Writer_Byte
  4999                           
  5000                           ;TM1640.c: 131: TM1640_Stop();
  5001  0022BC  EC86  F011         	call	_TM1640_Stop	;wreg free
  5002  0022C0  0012               	return		;funcret
  5003  0022C2                     __end_of_Init_TM1640:
  5004                           	opt stack 0
  5005                           tblptru	equ	0xFF8
  5006                           tblptrh	equ	0xFF7
  5007                           tblptrl	equ	0xFF6
  5008                           tablat	equ	0xFF5
  5009                           prodh	equ	0xFF4
  5010                           prodl	equ	0xFF3
  5011                           intcon	equ	0xFF2
  5012                           postinc0	equ	0xFEE
  5013                           wreg	equ	0xFE8
  5014                           indf1	equ	0xFE7
  5015                           postinc1	equ	0xFE6
  5016                           fsr1h	equ	0xFE2
  5017                           fsr1l	equ	0xFE1
  5018                           indf2	equ	0xFDF
  5019                           postinc2	equ	0xFDE
  5020                           postdec2	equ	0xFDD
  5021                           plusw2	equ	0xFDB
  5022                           fsr2h	equ	0xFDA
  5023                           fsr2l	equ	0xFD9
  5024                           status	equ	0xFD8
  5025                           
  5026 ;; *************** function _TM1640_Writer_Byte *****************
  5027 ;; Defined at:
  5028 ;;		line 77 in file "_01_USER/TM1640.c"
  5029 ;; Parameters:    Size  Location     Type
  5030 ;;  Date            1    wreg     const unsigned char 
  5031 ;; Auto vars:     Size  Location     Type
  5032 ;;  Date            1   26[COMRAM] const unsigned char 
  5033 ;;  mask            1   27[COMRAM] unsigned char 
  5034 ;; Return value:  Size  Location     Type
  5035 ;;		None               void
  5036 ;; Registers used:
  5037 ;;		wreg, status,2, status,0, cstack
  5038 ;; Tracked objects:
  5039 ;;		On entry : 0/0
  5040 ;;		On exit  : 0/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5044 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5046 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5047 ;;Total ram usage:        2 bytes
  5048 ;; Hardware stack levels used:    1
  5049 ;; Hardware stack levels required when called:    4
  5050 ;; This function calls:
  5051 ;;		_TM1640_Delay
  5052 ;; This function is called by:
  5053 ;;		_TM1640_Writer_Dates
  5054 ;;		_Init_TM1640
  5055 ;;		_Open_Display
  5056 ;;		_Disable_Display
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           
  5060                           	psect	text32
  5061  0020BC                     __ptext32:
  5062                           	opt stack 0
  5063  0020BC                     _TM1640_Writer_Byte:
  5064                           	opt stack 23
  5065                           
  5066                           ;incstack = 0
  5067                           ;TM1640_Writer_Byte@Date stored from wreg
  5068  0020BC  6E1B               	movwf	TM1640_Writer_Byte@Date,c
  5069                           
  5070                           ;TM1640.c: 79: unsigned char mask;
  5071                           ;TM1640.c: 81: for(mask=0x01; mask; mask<<=1)
  5072  0020BE  0E01               	movlw	1
  5073  0020C0  6E1C               	movwf	TM1640_Writer_Byte@mask,c
  5074  0020C2  D017               	goto	l2810
  5075  0020C4                     l348:
  5076                           
  5077                           ;TM1640.c: 82: {
  5078                           ;TM1640.c: 83: RC3 = 0;
  5079  0020C4  9682               	bcf	3970,3,c	;volatile
  5080                           
  5081                           ;TM1640.c: 84: TM1640_Delay(1);
  5082  0020C6  0E01               	movlw	1
  5083  0020C8  ECCA  F011         	call	_TM1640_Delay
  5084                           
  5085                           ;TM1640.c: 85: if(mask & Date)
  5086  0020CC  501C               	movf	TM1640_Writer_Byte@mask,w,c
  5087  0020CE  141B               	andwf	TM1640_Writer_Byte@Date,w,c
  5088  0020D0  0900               	iorlw	0
  5089  0020D2  B4D8               	btfsc	status,2,c
  5090  0020D4  D002               	goto	l349
  5091                           
  5092                           ;TM1640.c: 86: RC4 = 1;
  5093  0020D6  8882               	bsf	3970,4,c	;volatile
  5094  0020D8  D002               	goto	l2804
  5095  0020DA                     l349:
  5096                           
  5097                           ;TM1640.c: 87: else
  5098                           ;TM1640.c: 88: RC4 = 0;
  5099  0020DA  9882               	bcf	3970,4,c	;volatile
  5100  0020DC  D000               	goto	l2804
  5101  0020DE                     l2804:
  5102                           
  5103                           ;TM1640.c: 89: TM1640_Delay(1);
  5104  0020DE  0E01               	movlw	1
  5105  0020E0  ECCA  F011         	call	_TM1640_Delay
  5106                           
  5107                           ;TM1640.c: 90: RC3 = 1;
  5108  0020E4  8682               	bsf	3970,3,c	;volatile
  5109                           
  5110                           ;TM1640.c: 91: TM1640_Delay(1);
  5111  0020E6  0E01               	movlw	1
  5112  0020E8  ECCA  F011         	call	_TM1640_Delay
  5113  0020EC  90D8               	bcf	status,0,c
  5114  0020EE  361C               	rlcf	TM1640_Writer_Byte@mask,f,c
  5115  0020F0  D000               	goto	l2810
  5116  0020F2                     l2810:
  5117  0020F2  501C               	movf	TM1640_Writer_Byte@mask,w,c
  5118  0020F4  A4D8               	btfss	status,2,c
  5119  0020F6  D7E6               	goto	l348
  5120  0020F8  0012               	return		;funcret
  5121  0020FA                     __end_of_TM1640_Writer_Byte:
  5122                           	opt stack 0
  5123                           tblptru	equ	0xFF8
  5124                           tblptrh	equ	0xFF7
  5125                           tblptrl	equ	0xFF6
  5126                           tablat	equ	0xFF5
  5127                           prodh	equ	0xFF4
  5128                           prodl	equ	0xFF3
  5129                           intcon	equ	0xFF2
  5130                           postinc0	equ	0xFEE
  5131                           wreg	equ	0xFE8
  5132                           indf1	equ	0xFE7
  5133                           postinc1	equ	0xFE6
  5134                           fsr1h	equ	0xFE2
  5135                           fsr1l	equ	0xFE1
  5136                           indf2	equ	0xFDF
  5137                           postinc2	equ	0xFDE
  5138                           postdec2	equ	0xFDD
  5139                           plusw2	equ	0xFDB
  5140                           fsr2h	equ	0xFDA
  5141                           fsr2l	equ	0xFD9
  5142                           status	equ	0xFD8
  5143                           
  5144 ;; *************** function _TM1640_Stop *****************
  5145 ;; Defined at:
  5146 ;;		line 32 in file "_01_USER/TM1640.c"
  5147 ;; Parameters:    Size  Location     Type
  5148 ;;		None
  5149 ;; Auto vars:     Size  Location     Type
  5150 ;;		None
  5151 ;; Return value:  Size  Location     Type
  5152 ;;		None               void
  5153 ;; Registers used:
  5154 ;;		wreg, status,2, status,0, cstack
  5155 ;; Tracked objects:
  5156 ;;		On entry : 0/0
  5157 ;;		On exit  : 0/0
  5158 ;;		Unchanged: 0/0
  5159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5164 ;;Total ram usage:        0 bytes
  5165 ;; Hardware stack levels used:    1
  5166 ;; Hardware stack levels required when called:    4
  5167 ;; This function calls:
  5168 ;;		_TM1640_Delay
  5169 ;; This function is called by:
  5170 ;;		_TM1640_Writer_Dates
  5171 ;;		_Init_TM1640
  5172 ;;		_Open_Display
  5173 ;;		_Disable_Display
  5174 ;; This function uses a non-reentrant model
  5175 ;;
  5176                           
  5177                           	psect	text33
  5178  00230C                     __ptext33:
  5179                           	opt stack 0
  5180  00230C                     _TM1640_Stop:
  5181                           	opt stack 23
  5182                           
  5183                           ;TM1640.c: 34: RC3 = 0;
  5184                           
  5185                           ;incstack = 0
  5186  00230C  9682               	bcf	3970,3,c	;volatile
  5187                           
  5188                           ;TM1640.c: 35: TM1640_Delay(1);
  5189  00230E  0E01               	movlw	1
  5190  002310  ECCA  F011         	call	_TM1640_Delay
  5191                           
  5192                           ;TM1640.c: 36: RC4 = 0;
  5193  002314  9882               	bcf	3970,4,c	;volatile
  5194                           
  5195                           ;TM1640.c: 37: TM1640_Delay(1);
  5196  002316  0E01               	movlw	1
  5197  002318  ECCA  F011         	call	_TM1640_Delay
  5198                           
  5199                           ;TM1640.c: 38: RC3 = 1;
  5200  00231C  8682               	bsf	3970,3,c	;volatile
  5201                           
  5202                           ;TM1640.c: 39: TM1640_Delay(1);
  5203  00231E  0E01               	movlw	1
  5204  002320  ECCA  F011         	call	_TM1640_Delay
  5205                           
  5206                           ;TM1640.c: 40: RC4 = 1;
  5207  002324  8882               	bsf	3970,4,c	;volatile
  5208                           
  5209                           ;TM1640.c: 41: TM1640_Delay(1);
  5210  002326  0E01               	movlw	1
  5211  002328  ECCA  F011         	call	_TM1640_Delay
  5212                           
  5213                           ;TM1640.c: 42: RC3 = 0;
  5214  00232C  9682               	bcf	3970,3,c	;volatile
  5215  00232E  0012               	return		;funcret
  5216  002330                     __end_of_TM1640_Stop:
  5217                           	opt stack 0
  5218                           tblptru	equ	0xFF8
  5219                           tblptrh	equ	0xFF7
  5220                           tblptrl	equ	0xFF6
  5221                           tablat	equ	0xFF5
  5222                           prodh	equ	0xFF4
  5223                           prodl	equ	0xFF3
  5224                           intcon	equ	0xFF2
  5225                           postinc0	equ	0xFEE
  5226                           wreg	equ	0xFE8
  5227                           indf1	equ	0xFE7
  5228                           postinc1	equ	0xFE6
  5229                           fsr1h	equ	0xFE2
  5230                           fsr1l	equ	0xFE1
  5231                           indf2	equ	0xFDF
  5232                           postinc2	equ	0xFDE
  5233                           postdec2	equ	0xFDD
  5234                           plusw2	equ	0xFDB
  5235                           fsr2h	equ	0xFDA
  5236                           fsr2l	equ	0xFD9
  5237                           status	equ	0xFD8
  5238                           
  5239 ;; *************** function _TM1640_Start *****************
  5240 ;; Defined at:
  5241 ;;		line 19 in file "_01_USER/TM1640.c"
  5242 ;; Parameters:    Size  Location     Type
  5243 ;;		None
  5244 ;; Auto vars:     Size  Location     Type
  5245 ;;		None
  5246 ;; Return value:  Size  Location     Type
  5247 ;;		None               void
  5248 ;; Registers used:
  5249 ;;		wreg, status,2, status,0, cstack
  5250 ;; Tracked objects:
  5251 ;;		On entry : 0/0
  5252 ;;		On exit  : 0/0
  5253 ;;		Unchanged: 0/0
  5254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5259 ;;Total ram usage:        0 bytes
  5260 ;; Hardware stack levels used:    1
  5261 ;; Hardware stack levels required when called:    4
  5262 ;; This function calls:
  5263 ;;		_TM1640_Delay
  5264 ;; This function is called by:
  5265 ;;		_TM1640_Writer_Dates
  5266 ;;		_Init_TM1640
  5267 ;;		_Open_Display
  5268 ;;		_Disable_Display
  5269 ;; This function uses a non-reentrant model
  5270 ;;
  5271                           
  5272                           	psect	text34
  5273  002330                     __ptext34:
  5274                           	opt stack 0
  5275  002330                     _TM1640_Start:
  5276                           	opt stack 23
  5277                           
  5278                           ;TM1640.c: 21: RC3 = 0;
  5279                           
  5280                           ;incstack = 0
  5281  002330  9682               	bcf	3970,3,c	;volatile
  5282                           
  5283                           ;TM1640.c: 22: TM1640_Delay(1);
  5284  002332  0E01               	movlw	1
  5285  002334  ECCA  F011         	call	_TM1640_Delay
  5286                           
  5287                           ;TM1640.c: 23: RC4 = 1;
  5288  002338  8882               	bsf	3970,4,c	;volatile
  5289                           
  5290                           ;TM1640.c: 24: TM1640_Delay(1);
  5291  00233A  0E01               	movlw	1
  5292  00233C  ECCA  F011         	call	_TM1640_Delay
  5293                           
  5294                           ;TM1640.c: 25: RC3 = 1;
  5295  002340  8682               	bsf	3970,3,c	;volatile
  5296                           
  5297                           ;TM1640.c: 26: TM1640_Delay(1);
  5298  002342  0E01               	movlw	1
  5299  002344  ECCA  F011         	call	_TM1640_Delay
  5300                           
  5301                           ;TM1640.c: 27: RC4 = 0;
  5302  002348  9882               	bcf	3970,4,c	;volatile
  5303                           
  5304                           ;TM1640.c: 28: TM1640_Delay(1);
  5305  00234A  0E01               	movlw	1
  5306  00234C  ECCA  F011         	call	_TM1640_Delay
  5307                           
  5308                           ;TM1640.c: 29: RC3 = 0;
  5309  002350  9682               	bcf	3970,3,c	;volatile
  5310  002352  0012               	return		;funcret
  5311  002354                     __end_of_TM1640_Start:
  5312                           	opt stack 0
  5313                           tblptru	equ	0xFF8
  5314                           tblptrh	equ	0xFF7
  5315                           tblptrl	equ	0xFF6
  5316                           tablat	equ	0xFF5
  5317                           prodh	equ	0xFF4
  5318                           prodl	equ	0xFF3
  5319                           intcon	equ	0xFF2
  5320                           postinc0	equ	0xFEE
  5321                           wreg	equ	0xFE8
  5322                           indf1	equ	0xFE7
  5323                           postinc1	equ	0xFE6
  5324                           fsr1h	equ	0xFE2
  5325                           fsr1l	equ	0xFE1
  5326                           indf2	equ	0xFDF
  5327                           postinc2	equ	0xFDE
  5328                           postdec2	equ	0xFDD
  5329                           plusw2	equ	0xFDB
  5330                           fsr2h	equ	0xFDA
  5331                           fsr2l	equ	0xFD9
  5332                           status	equ	0xFD8
  5333                           
  5334 ;; *************** function _TM1640_Delay *****************
  5335 ;; Defined at:
  5336 ;;		line 109 in file "_01_USER/TM1640.c"
  5337 ;; Parameters:    Size  Location     Type
  5338 ;;  Time            1    wreg     unsigned char 
  5339 ;; Auto vars:     Size  Location     Type
  5340 ;;  Time            1   24[COMRAM] unsigned char 
  5341 ;;  i               1   25[COMRAM] unsigned char 
  5342 ;; Return value:  Size  Location     Type
  5343 ;;		None               void
  5344 ;; Registers used:
  5345 ;;		wreg, status,2, status,0
  5346 ;; Tracked objects:
  5347 ;;		On entry : 0/0
  5348 ;;		On exit  : 0/0
  5349 ;;		Unchanged: 0/0
  5350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5352 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5354 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5355 ;;Total ram usage:        2 bytes
  5356 ;; Hardware stack levels used:    1
  5357 ;; Hardware stack levels required when called:    3
  5358 ;; This function calls:
  5359 ;;		Nothing
  5360 ;; This function is called by:
  5361 ;;		_TM1640_Start
  5362 ;;		_TM1640_Stop
  5363 ;;		_TM1640_Writer_Byte
  5364 ;; This function uses a non-reentrant model
  5365 ;;
  5366                           
  5367                           	psect	text35
  5368  002394                     __ptext35:
  5369                           	opt stack 0
  5370  002394                     _TM1640_Delay:
  5371                           	opt stack 23
  5372                           
  5373                           ;incstack = 0
  5374                           ;TM1640_Delay@Time stored from wreg
  5375  002394  6E19               	movwf	TM1640_Delay@Time,c
  5376  002396                     
  5377                           ;TM1640.c: 114: {
  5378                           ;TM1640.c: 115: for(i=0; i<10; ++i);
  5379  002396  0E00               	movlw	0
  5380  002398  6E1A               	movwf	TM1640_Delay@i,c
  5381  00239A  D002               	goto	l2770
  5382  00239C  D004               	goto	l363
  5383  00239E                     l2768:
  5384  00239E  2A1A               	incf	TM1640_Delay@i,f,c
  5385  0023A0                     l2770:
  5386  0023A0  0E09               	movlw	9
  5387  0023A2  641A               	cpfsgt	TM1640_Delay@i,c
  5388  0023A4  D7FC               	goto	l2768
  5389  0023A6                     l363:
  5390                           
  5391                           ;TM1640.c: 116: }while(--Time);
  5392  0023A6  2E19               	decfsz	TM1640_Delay@Time,f,c
  5393  0023A8  D7F6               	goto	l2762
  5394  0023AA  0012               	return	
  5395  0023AC  0012               	return		;funcret
  5396  0023AE                     __end_of_TM1640_Delay:
  5397                           	opt stack 0
  5398                           tblptru	equ	0xFF8
  5399                           tblptrh	equ	0xFF7
  5400                           tblptrl	equ	0xFF6
  5401                           tablat	equ	0xFF5
  5402                           prodh	equ	0xFF4
  5403                           prodl	equ	0xFF3
  5404                           intcon	equ	0xFF2
  5405                           postinc0	equ	0xFEE
  5406                           wreg	equ	0xFE8
  5407                           indf1	equ	0xFE7
  5408                           postinc1	equ	0xFE6
  5409                           fsr1h	equ	0xFE2
  5410                           fsr1l	equ	0xFE1
  5411                           indf2	equ	0xFDF
  5412                           postinc2	equ	0xFDE
  5413                           postdec2	equ	0xFDD
  5414                           plusw2	equ	0xFDB
  5415                           fsr2h	equ	0xFDA
  5416                           fsr2l	equ	0xFD9
  5417                           status	equ	0xFD8
  5418                           
  5419 ;; *************** function _GPIO_Config *****************
  5420 ;; Defined at:
  5421 ;;		line 38 in file "_01_USER/GPIO.c"
  5422 ;; Parameters:    Size  Location     Type
  5423 ;;		None
  5424 ;; Auto vars:     Size  Location     Type
  5425 ;;		None
  5426 ;; Return value:  Size  Location     Type
  5427 ;;		None               void
  5428 ;; Registers used:
  5429 ;;		wreg, status,2, status,0
  5430 ;; Tracked objects:
  5431 ;;		On entry : 0/0
  5432 ;;		On exit  : 0/0
  5433 ;;		Unchanged: 0/0
  5434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5439 ;;Total ram usage:        0 bytes
  5440 ;; Hardware stack levels used:    1
  5441 ;; Hardware stack levels required when called:    3
  5442 ;; This function calls:
  5443 ;;		Nothing
  5444 ;; This function is called by:
  5445 ;;		_main
  5446 ;; This function uses a non-reentrant model
  5447 ;;
  5448                           
  5449                           	psect	text36
  5450  0023F4                     __ptext36:
  5451                           	opt stack 0
  5452  0023F4                     _GPIO_Config:
  5453                           	opt stack 27
  5454                           
  5455                           ;GPIO.c: 41: TRISE &= 0x1f;
  5456                           
  5457                           ;incstack = 0
  5458  0023F4  0E1F               	movlw	31
  5459  0023F6  1696               	andwf	3990,f,c	;volatile
  5460                           
  5461                           ;GPIO.c: 43: RE5 = 1;
  5462  0023F8  8A84               	bsf	3972,5,c	;volatile
  5463                           
  5464                           ;GPIO.c: 44: RE6 = 1;
  5465  0023FA  8C84               	bsf	3972,6,c	;volatile
  5466                           
  5467                           ;GPIO.c: 45: RE7 = 1;
  5468  0023FC  8E84               	bsf	3972,7,c	;volatile
  5469  0023FE  0012               	return		;funcret
  5470  002400                     __end_of_GPIO_Config:
  5471                           	opt stack 0
  5472                           tblptru	equ	0xFF8
  5473                           tblptrh	equ	0xFF7
  5474                           tblptrl	equ	0xFF6
  5475                           tablat	equ	0xFF5
  5476                           prodh	equ	0xFF4
  5477                           prodl	equ	0xFF3
  5478                           intcon	equ	0xFF2
  5479                           postinc0	equ	0xFEE
  5480                           wreg	equ	0xFE8
  5481                           indf1	equ	0xFE7
  5482                           postinc1	equ	0xFE6
  5483                           fsr1h	equ	0xFE2
  5484                           fsr1l	equ	0xFE1
  5485                           indf2	equ	0xFDF
  5486                           postinc2	equ	0xFDE
  5487                           postdec2	equ	0xFDD
  5488                           plusw2	equ	0xFDB
  5489                           fsr2h	equ	0xFDA
  5490                           fsr2l	equ	0xFD9
  5491                           status	equ	0xFD8
  5492                           
  5493 ;; *************** function _ADC6_Init *****************
  5494 ;; Defined at:
  5495 ;;		line 37 in file "_01_USER/My_ADC.c"
  5496 ;; Parameters:    Size  Location     Type
  5497 ;;		None
  5498 ;; Auto vars:     Size  Location     Type
  5499 ;;		None
  5500 ;; Return value:  Size  Location     Type
  5501 ;;		None               void
  5502 ;; Registers used:
  5503 ;;		wreg, status,2, status,0, cstack
  5504 ;; Tracked objects:
  5505 ;;		On entry : 0/0
  5506 ;;		On exit  : 0/0
  5507 ;;		Unchanged: 0/0
  5508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5513 ;;Total ram usage:        0 bytes
  5514 ;; Hardware stack levels used:    1
  5515 ;; Hardware stack levels required when called:    4
  5516 ;; This function calls:
  5517 ;;		_OpenADC
  5518 ;; This function is called by:
  5519 ;;		_main
  5520 ;; This function uses a non-reentrant model
  5521 ;;
  5522                           
  5523                           	psect	text37
  5524  0023C4                     __ptext37:
  5525                           	opt stack 0
  5526  0023C4                     _ADC6_Init:
  5527                           	opt stack 26
  5528                           
  5529                           ;My_ADC.c: 40: OpenADC(0b11111111 &
  5530                           ;My_ADC.c: 41: 0b11110011 &
  5531                           ;My_ADC.c: 42: 0b10001111
  5532                           ;My_ADC.c: 43: ,
  5533                           ;My_ADC.c: 44: 0b10011011
  5534                           ;My_ADC.c: 45: ,
  5535                           ;My_ADC.c: 46: 0b00111111 &
  5536                           ;My_ADC.c: 47: 0b11111111 &
  5537                           ;My_ADC.c: 48: 0b11110111 &
  5538                           ;My_ADC.c: 49: 0b11111000
  5539                           ;My_ADC.c: 50: );
  5540                           
  5541                           ;incstack = 0
  5542  0023C4  0E9B               	movlw	155
  5543  0023C6  6E19               	movwf	OpenADC@config2,c
  5544  0023C8  0E30               	movlw	48
  5545  0023CA  6E1A               	movwf	OpenADC@config3,c
  5546  0023CC  0E83               	movlw	131
  5547  0023CE  ECA7  F00F         	call	_OpenADC
  5548                           
  5549                           ;My_ADC.c: 52: (PIE1bits.ADIE=0);
  5550  0023D2  9C9D               	bcf	3997,6,c	;volatile
  5551  0023D4  0012               	return		;funcret
  5552  0023D6                     __end_of_ADC6_Init:
  5553                           	opt stack 0
  5554                           tblptru	equ	0xFF8
  5555                           tblptrh	equ	0xFF7
  5556                           tblptrl	equ	0xFF6
  5557                           tablat	equ	0xFF5
  5558                           prodh	equ	0xFF4
  5559                           prodl	equ	0xFF3
  5560                           intcon	equ	0xFF2
  5561                           postinc0	equ	0xFEE
  5562                           wreg	equ	0xFE8
  5563                           indf1	equ	0xFE7
  5564                           postinc1	equ	0xFE6
  5565                           fsr1h	equ	0xFE2
  5566                           fsr1l	equ	0xFE1
  5567                           indf2	equ	0xFDF
  5568                           postinc2	equ	0xFDE
  5569                           postdec2	equ	0xFDD
  5570                           plusw2	equ	0xFDB
  5571                           fsr2h	equ	0xFDA
  5572                           fsr2l	equ	0xFD9
  5573                           status	equ	0xFD8
  5574                           
  5575 ;; *************** function _OpenADC *****************
  5576 ;; Defined at:
  5577 ;;		line 305 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  5578 ;; Parameters:    Size  Location     Type
  5579 ;;  config          1    wreg     unsigned char 
  5580 ;;  config2         1   24[COMRAM] unsigned char 
  5581 ;;  config3         1   25[COMRAM] unsigned char 
  5582 ;; Auto vars:     Size  Location     Type
  5583 ;;  config          1   28[COMRAM] unsigned char 
  5584 ;; Return value:  Size  Location     Type
  5585 ;;		None               void
  5586 ;; Registers used:
  5587 ;;		wreg, status,2, status,0
  5588 ;; Tracked objects:
  5589 ;;		On entry : 0/0
  5590 ;;		On exit  : 0/0
  5591 ;;		Unchanged: 0/0
  5592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5593 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5594 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5595 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5596 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5597 ;;Total ram usage:        5 bytes
  5598 ;; Hardware stack levels used:    1
  5599 ;; Hardware stack levels required when called:    3
  5600 ;; This function calls:
  5601 ;;		Nothing
  5602 ;; This function is called by:
  5603 ;;		_ADC6_Init
  5604 ;; This function uses a non-reentrant model
  5605 ;;
  5606                           
  5607                           	psect	text38
  5608  001F4E                     __ptext38:
  5609                           	opt stack 0
  5610  001F4E                     _OpenADC:
  5611                           	opt stack 26
  5612                           
  5613                           ;incstack = 0
  5614                           ;OpenADC@config stored from wreg
  5615  001F4E  6E1D               	movwf	OpenADC@config,c
  5616  001F50  0E00               	movlw	0
  5617  001F52  6EC2               	movwf	4034,c	;volatile
  5618  001F54  0E00               	movlw	0
  5619  001F56  6EC1               	movwf	4033,c	;volatile
  5620  001F58  0E00               	movlw	0
  5621  001F5A  6EC0               	movwf	4032,c	;volatile
  5622  001F5C  5019               	movf	OpenADC@config2,w,c
  5623  001F5E  0B7C               	andlw	124
  5624  001F60  6EC2               	movwf	4034,c	;volatile
  5625  001F62  C01A  FFC1         	movff	OpenADC@config3,4033	;volatile
  5626  001F66  C01D  F01B         	movff	OpenADC@config,??_OpenADC
  5627  001F6A  90D8               	bcf	status,0,c
  5628  001F6C  361B               	rlcf	??_OpenADC,f,c
  5629  001F6E  90D8               	bcf	status,0,c
  5630  001F70  361B               	rlcf	??_OpenADC,f,c
  5631  001F72  0E38               	movlw	56
  5632  001F74  161B               	andwf	??_OpenADC,f,c
  5633  001F76  C01D  F01C         	movff	OpenADC@config,??_OpenADC+1
  5634  001F7A  3A1C               	swapf	??_OpenADC+1,f,c
  5635  001F7C  0E0F               	movlw	15
  5636  001F7E  161C               	andwf	??_OpenADC+1,f,c
  5637  001F80  0E07               	movlw	7
  5638  001F82  161C               	andwf	??_OpenADC+1,f,c
  5639  001F84  501D               	movf	OpenADC@config,w,c
  5640  001F86  0B80               	andlw	128
  5641  001F88  101C               	iorwf	??_OpenADC+1,w,c
  5642  001F8A  101B               	iorwf	??_OpenADC,w,c
  5643  001F8C  6EC0               	movwf	4032,c	;volatile
  5644  001F8E  AE19               	btfss	OpenADC@config2,7,c
  5645  001F90  D003               	goto	l453
  5646  001F92  9C9E               	bcf	3998,6,c	;volatile
  5647  001F94  8C9D               	bsf	3997,6,c	;volatile
  5648  001F96  8CF2               	bsf	intcon,6,c	;volatile
  5649  001F98                     l453:
  5650  001F98  80C2               	bsf	4034,0,c	;volatile
  5651  001F9A  0012               	return		;funcret
  5652  001F9C                     __end_of_OpenADC:
  5653                           	opt stack 0
  5654                           tblptru	equ	0xFF8
  5655                           tblptrh	equ	0xFF7
  5656                           tblptrl	equ	0xFF6
  5657                           tablat	equ	0xFF5
  5658                           prodh	equ	0xFF4
  5659                           prodl	equ	0xFF3
  5660                           intcon	equ	0xFF2
  5661                           postinc0	equ	0xFEE
  5662                           wreg	equ	0xFE8
  5663                           indf1	equ	0xFE7
  5664                           postinc1	equ	0xFE6
  5665                           fsr1h	equ	0xFE2
  5666                           fsr1l	equ	0xFE1
  5667                           indf2	equ	0xFDF
  5668                           postinc2	equ	0xFDE
  5669                           postdec2	equ	0xFDD
  5670                           plusw2	equ	0xFDB
  5671                           fsr2h	equ	0xFDA
  5672                           fsr2l	equ	0xFD9
  5673                           status	equ	0xFD8
  5674                           
  5675 ;; *************** function _Sys_Cyc *****************
  5676 ;; Defined at:
  5677 ;;		line 100 in file "_01_USER/My_Timer.c"
  5678 ;; Parameters:    Size  Location     Type
  5679 ;;		None
  5680 ;; Auto vars:     Size  Location     Type
  5681 ;;  _temp           1   23[COMRAM] unsigned char 
  5682 ;; Return value:  Size  Location     Type
  5683 ;;		None               void
  5684 ;; Registers used:
  5685 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5686 ;; Tracked objects:
  5687 ;;		On entry : 0/0
  5688 ;;		On exit  : 0/0
  5689 ;;		Unchanged: 0/0
  5690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5692 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5693 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5694 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5695 ;;Total ram usage:       15 bytes
  5696 ;; Hardware stack levels used:    1
  5697 ;; Hardware stack levels required when called:    2
  5698 ;; This function calls:
  5699 ;;		_Key_FSM_Scan
  5700 ;;		_Pulse_1Khz
  5701 ;;		i2_SetTimer0
  5702 ;;		i2___llmod
  5703 ;; This function is called by:
  5704 ;;		Interrupt level 2
  5705 ;; This function uses a non-reentrant model
  5706 ;;
  5707                           
  5708                           	psect	intcode
  5709  000008                     __pintcode:
  5710                           	opt stack 0
  5711  000008                     _Sys_Cyc:
  5712                           	opt stack 23
  5713                           
  5714                           ;incstack = 0
  5715  000008  CFFA F00A          	movff	pclath,??_Sys_Cyc
  5716  00000C  CFFB F00B          	movff	pclatu,??_Sys_Cyc+1
  5717  000010  CFE9 F00C          	movff	fsr0l,??_Sys_Cyc+2
  5718  000014  CFEA F00D          	movff	fsr0h,??_Sys_Cyc+3
  5719  000018  CFE1 F00E          	movff	fsr1l,??_Sys_Cyc+4
  5720  00001C  CFE2 F00F          	movff	fsr1h,??_Sys_Cyc+5
  5721  000020  CFD9 F010          	movff	fsr2l,??_Sys_Cyc+6
  5722  000024  CFDA F011          	movff	fsr2h,??_Sys_Cyc+7
  5723  000028  CFF3 F012          	movff	prodl,??_Sys_Cyc+8
  5724  00002C  CFF4 F013          	movff	prodh,??_Sys_Cyc+9
  5725  000030  CFF6 F014          	movff	tblptrl,??_Sys_Cyc+10
  5726  000034  CFF7 F015          	movff	tblptrh,??_Sys_Cyc+11
  5727  000038  CFF8 F016          	movff	tblptru,??_Sys_Cyc+12
  5728  00003C  CFF5 F017          	movff	tablat,??_Sys_Cyc+13
  5729                           
  5730                           ;My_Timer.c: 102: static unsigned char _overturn_LED = 0;
  5731                           ;My_Timer.c: 103: static char _RS485_Receive_Byte;
  5732                           ;My_Timer.c: 104: static char _flag = 0;
  5733                           ;My_Timer.c: 105: unsigned char _temp;
  5734                           ;My_Timer.c: 108: if(TMR0IF && TMR0IE)
  5735  000040  B4F2               	btfsc	intcon,2,c	;volatile
  5736  000042  AAF2               	btfss	intcon,5,c	;volatile
  5737  000044  D04B               	goto	i2l2728
  5738                           
  5739                           ;My_Timer.c: 109: {
  5740                           ;My_Timer.c: 110: Timer_Cyc = (Timer_Cyc+1) % 100000000;
  5741  000046  0E01               	movlw	1
  5742  000048  243A               	addwf	_Timer_Cyc,w,c
  5743  00004A  6E01               	movwf	i2___llmod@dividend,c
  5744  00004C  0E00               	movlw	0
  5745  00004E  203B               	addwfc	_Timer_Cyc+1,w,c
  5746  000050  6E02               	movwf	i2___llmod@dividend+1,c
  5747  000052  0E00               	movlw	0
  5748  000054  203C               	addwfc	_Timer_Cyc+2,w,c
  5749  000056  6E03               	movwf	i2___llmod@dividend+2,c
  5750  000058  0E00               	movlw	0
  5751  00005A  203D               	addwfc	_Timer_Cyc+3,w,c
  5752  00005C  6E04               	movwf	i2___llmod@dividend+3,c
  5753  00005E  0E00               	movlw	0
  5754  000060  6E05               	movwf	i2___llmod@divisor,c
  5755  000062  0EE1               	movlw	225
  5756  000064  6E06               	movwf	i2___llmod@divisor+1,c
  5757  000066  0EF5               	movlw	245
  5758  000068  6E07               	movwf	i2___llmod@divisor+2,c
  5759  00006A  0E05               	movlw	5
  5760  00006C  6E08               	movwf	i2___llmod@divisor+3,c
  5761  00006E  EC0B  F00F         	call	i2___llmod	;wreg free
  5762  000072  C001  F03A         	movff	?i2___llmod,_Timer_Cyc
  5763  000076  C002  F03B         	movff	?i2___llmod+1,_Timer_Cyc+1
  5764  00007A  C003  F03C         	movff	?i2___llmod+2,_Timer_Cyc+2
  5765  00007E  C004  F03D         	movff	?i2___llmod+3,_Timer_Cyc+3
  5766                           
  5767                           ;My_Timer.c: 112: SetTimer0(78);
  5768  000082  0E00               	movlw	0
  5769  000084  6E02               	movwf	i2SetTimer0@_tmr+1,c
  5770  000086  0E4E               	movlw	78
  5771  000088  6E01               	movwf	i2SetTimer0@_tmr,c
  5772  00008A  ECE7  F010         	call	i2_SetTimer0	;wreg free
  5773                           
  5774                           ;My_Timer.c: 115: if( Timer_Cyc%30 == 0 )
  5775  00008E  C03A  F001         	movff	_Timer_Cyc,i2___llmod@dividend
  5776  000092  C03B  F002         	movff	_Timer_Cyc+1,i2___llmod@dividend+1
  5777  000096  C03C  F003         	movff	_Timer_Cyc+2,i2___llmod@dividend+2
  5778  00009A  C03D  F004         	movff	_Timer_Cyc+3,i2___llmod@dividend+3
  5779  00009E  0E1E               	movlw	30
  5780  0000A0  6E05               	movwf	i2___llmod@divisor,c
  5781  0000A2  0E00               	movlw	0
  5782  0000A4  6E06               	movwf	i2___llmod@divisor+1,c
  5783  0000A6  0E00               	movlw	0
  5784  0000A8  6E07               	movwf	i2___llmod@divisor+2,c
  5785  0000AA  0E00               	movlw	0
  5786  0000AC  6E08               	movwf	i2___llmod@divisor+3,c
  5787  0000AE  EC0B  F00F         	call	i2___llmod	;wreg free
  5788  0000B2  5001               	movf	?i2___llmod,w,c
  5789  0000B4  1002               	iorwf	?i2___llmod+1,w,c
  5790  0000B6  1003               	iorwf	?i2___llmod+2,w,c
  5791  0000B8  1004               	iorwf	?i2___llmod+3,w,c
  5792  0000BA  A4D8               	btfss	status,2,c
  5793  0000BC  D008               	goto	i2l2724
  5794                           
  5795                           ;My_Timer.c: 116: {
  5796                           ;My_Timer.c: 117: _overturn_LED = ~_overturn_LED;
  5797  0000BE  1E44               	comf	Sys_Cyc@_overturn_LED,f,c
  5798                           
  5799                           ;My_Timer.c: 118: if(_overturn_LED) PORTEbits.RE5=0;
  5800  0000C0  5044               	movf	Sys_Cyc@_overturn_LED,w,c
  5801  0000C2  B4D8               	btfsc	status,2,c
  5802  0000C4  D002               	goto	i2l293
  5803  0000C6  9A84               	bcf	3972,5,c	;volatile
  5804  0000C8  D002               	goto	i2l2724
  5805  0000CA                     i2l293:
  5806                           
  5807                           ;My_Timer.c: 119: else PORTEbits.RE5=1;
  5808  0000CA  8A84               	bsf	3972,5,c	;volatile
  5809  0000CC  D000               	goto	i2l2724
  5810  0000CE                     i2l2724:
  5811                           
  5812                           ;My_Timer.c: 120: }
  5813                           ;My_Timer.c: 123: if( Handle_Switch._1Khz )
  5814  0000CE  5036               	movf	_Handle_Switch,w,c
  5815  0000D0  A4D8               	btfss	status,2,c
  5816                           
  5817                           ;My_Timer.c: 124: Pulse_1Khz();
  5818  0000D2  EC61  F011         	call	_Pulse_1Khz	;wreg free
  5819                           
  5820                           ;My_Timer.c: 127: Key_FSM_Scan();
  5821  0000D6  ECF4  F00F         	call	_Key_FSM_Scan	;wreg free
  5822  0000DA  D000               	goto	i2l2728
  5823  0000DC                     i2l2728:
  5824                           
  5825                           ;My_Timer.c: 129: }
  5826                           ;My_Timer.c: 132: if( RC2IF )
  5827  0000DC  AAA4               	btfss	4004,5,c	;volatile
  5828  0000DE  D023               	goto	i2l301
  5829                           
  5830                           ;My_Timer.c: 133: {
  5831                           ;My_Timer.c: 134: _temp = RCREG2;
  5832  0000E0  CF1D F018          	movff	3869,Sys_Cyc@_temp	;volatile
  5833                           
  5834                           ;My_Timer.c: 135: if( RS485_Receive_Flag == 0 )
  5835  0000E4  5047               	movf	_RS485_Receive_Flag,w,c
  5836  0000E6  A4D8               	btfss	status,2,c
  5837  0000E8  D01E               	goto	i2l301
  5838                           
  5839                           ;My_Timer.c: 136: {
  5840                           ;My_Timer.c: 137: if( _temp == 0xff )
  5841  0000EA  2818               	incf	Sys_Cyc@_temp,w,c
  5842  0000EC  A4D8               	btfss	status,2,c
  5843  0000EE  D004               	goto	i2l298
  5844                           
  5845                           ;My_Timer.c: 138: {
  5846                           ;My_Timer.c: 139: _RS485_Receive_Byte = 10 ;
  5847  0000F0  0E0A               	movlw	10
  5848  0000F2  6E42               	movwf	Sys_Cyc@_RS485_Receive_Byte,c
  5849                           
  5850                           ;My_Timer.c: 140: _flag = 0;
  5851  0000F4  0E00               	movlw	0
  5852  0000F6  6E43               	movwf	Sys_Cyc@_flag,c
  5853  0000F8                     i2l298:
  5854                           
  5855                           ;My_Timer.c: 141: }
  5856                           ;My_Timer.c: 143: if ( _flag == 0 )
  5857  0000F8  5043               	movf	Sys_Cyc@_flag,w,c
  5858  0000FA  A4D8               	btfss	status,2,c
  5859  0000FC  D00C               	goto	i2l2742
  5860                           
  5861                           ;My_Timer.c: 144: {
  5862                           ;My_Timer.c: 145: _RS485_Receive_Byte -- ;
  5863  0000FE  0642               	decf	Sys_Cyc@_RS485_Receive_Byte,f,c
  5864                           
  5865                           ;My_Timer.c: 146: RS485_ReceiveBuff[ _RS485_Receive_Byte ] = _temp;
  5866  000100  5042               	movf	Sys_Cyc@_RS485_Receive_Byte,w,c
  5867  000102  0D01               	mullw	1
  5868  000104  0ED4               	movlw	low _RS485_ReceiveBuff
  5869  000106  24F3               	addwf	prodl,w,c
  5870  000108  6ED9               	movwf	fsr2l,c
  5871  00010A  0E00               	movlw	high _RS485_ReceiveBuff
  5872  00010C  20F4               	addwfc	prodh,w,c
  5873  00010E  6EDA               	movwf	fsr2h,c
  5874  000110  C018  FFDF         	movff	Sys_Cyc@_temp,indf2
  5875  000114  D000               	goto	i2l2742
  5876  000116                     i2l2742:
  5877                           
  5878                           ;My_Timer.c: 147: }
  5879                           ;My_Timer.c: 149: if( _RS485_Receive_Byte == 0 )
  5880  000116  5042               	movf	Sys_Cyc@_RS485_Receive_Byte,w,c
  5881  000118  A4D8               	btfss	status,2,c
  5882  00011A  D005               	goto	i2l301
  5883                           
  5884                           ;My_Timer.c: 150: {
  5885                           ;My_Timer.c: 151: RS485_Receive_Flag = 1 ;
  5886  00011C  0E01               	movlw	1
  5887  00011E  6E47               	movwf	_RS485_Receive_Flag,c
  5888                           
  5889                           ;My_Timer.c: 152: _flag = 1;
  5890  000120  0E01               	movlw	1
  5891  000122  6E43               	movwf	Sys_Cyc@_flag,c
  5892  000124  D000               	goto	i2l301
  5893  000126                     i2l301:
  5894  000126  C017  FFF5         	movff	??_Sys_Cyc+13,tablat
  5895  00012A  C016  FFF8         	movff	??_Sys_Cyc+12,tblptru
  5896  00012E  C015  FFF7         	movff	??_Sys_Cyc+11,tblptrh
  5897  000132  C014  FFF6         	movff	??_Sys_Cyc+10,tblptrl
  5898  000136  C013  FFF4         	movff	??_Sys_Cyc+9,prodh
  5899  00013A  C012  FFF3         	movff	??_Sys_Cyc+8,prodl
  5900  00013E  C011  FFDA         	movff	??_Sys_Cyc+7,fsr2h
  5901  000142  C010  FFD9         	movff	??_Sys_Cyc+6,fsr2l
  5902  000146  C00F  FFE2         	movff	??_Sys_Cyc+5,fsr1h
  5903  00014A  C00E  FFE1         	movff	??_Sys_Cyc+4,fsr1l
  5904  00014E  C00D  FFEA         	movff	??_Sys_Cyc+3,fsr0h
  5905  000152  C00C  FFE9         	movff	??_Sys_Cyc+2,fsr0l
  5906  000156  C00B  FFFB         	movff	??_Sys_Cyc+1,pclatu
  5907  00015A  C00A  FFFA         	movff	??_Sys_Cyc,pclath
  5908  00015E  0011               	retfie		f
  5909  000160                     __end_of_Sys_Cyc:
  5910                           	opt stack 0
  5911                           pclatu	equ	0xFFB
  5912                           pclath	equ	0xFFA
  5913                           tblptru	equ	0xFF8
  5914                           tblptrh	equ	0xFF7
  5915                           tblptrl	equ	0xFF6
  5916                           tablat	equ	0xFF5
  5917                           prodh	equ	0xFF4
  5918                           prodl	equ	0xFF3
  5919                           intcon	equ	0xFF2
  5920                           postinc0	equ	0xFEE
  5921                           fsr0h	equ	0xFEA
  5922                           fsr0l	equ	0xFE9
  5923                           wreg	equ	0xFE8
  5924                           indf1	equ	0xFE7
  5925                           postinc1	equ	0xFE6
  5926                           fsr1h	equ	0xFE2
  5927                           fsr1l	equ	0xFE1
  5928                           indf2	equ	0xFDF
  5929                           postinc2	equ	0xFDE
  5930                           postdec2	equ	0xFDD
  5931                           plusw2	equ	0xFDB
  5932                           fsr2h	equ	0xFDA
  5933                           fsr2l	equ	0xFD9
  5934                           status	equ	0xFD8
  5935                           
  5936 ;; *************** function i2___llmod *****************
  5937 ;; Defined at:
  5938 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  5939 ;; Parameters:    Size  Location     Type
  5940 ;;  dividend        4    0[COMRAM] unsigned long 
  5941 ;;  divisor         4    4[COMRAM] unsigned long 
  5942 ;; Auto vars:     Size  Location     Type
  5943 ;;  __llmod         1    8[COMRAM] unsigned char 
  5944 ;; Return value:  Size  Location     Type
  5945 ;;                  4    0[COMRAM] unsigned long 
  5946 ;; Registers used:
  5947 ;;		wreg, status,2, status,0
  5948 ;; Tracked objects:
  5949 ;;		On entry : 0/0
  5950 ;;		On exit  : 0/0
  5951 ;;		Unchanged: 0/0
  5952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5953 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5954 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5956 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5957 ;;Total ram usage:        9 bytes
  5958 ;; Hardware stack levels used:    1
  5959 ;; This function calls:
  5960 ;;		Nothing
  5961 ;; This function is called by:
  5962 ;;		_Sys_Cyc
  5963 ;; This function uses a non-reentrant model
  5964 ;;
  5965                           
  5966                           	psect	text40
  5967  001E16                     __ptext40:
  5968                           	opt stack 0
  5969  001E16                     i2___llmod:
  5970                           	opt stack 24
  5971                           
  5972                           ;incstack = 0
  5973  001E16  5005               	movf	i2___llmod@divisor,w,c
  5974  001E18  1006               	iorwf	i2___llmod@divisor+1,w,c
  5975  001E1A  1007               	iorwf	i2___llmod@divisor+2,w,c
  5976  001E1C  1008               	iorwf	i2___llmod@divisor+3,w,c
  5977  001E1E  B4D8               	btfsc	status,2,c
  5978  001E20  D029               	goto	i2l958
  5979  001E22  0E01               	movlw	1
  5980  001E24  6E09               	movwf	i2___llmod@counter,c
  5981  001E26  D007               	goto	i2l2682
  5982  001E28                     i2l2680:
  5983  001E28  90D8               	bcf	status,0,c
  5984  001E2A  3605               	rlcf	i2___llmod@divisor,f,c
  5985  001E2C  3606               	rlcf	i2___llmod@divisor+1,f,c
  5986  001E2E  3607               	rlcf	i2___llmod@divisor+2,f,c
  5987  001E30  3608               	rlcf	i2___llmod@divisor+3,f,c
  5988  001E32  2A09               	incf	i2___llmod@counter,f,c
  5989  001E34  D000               	goto	i2l2682
  5990  001E36                     i2l2682:
  5991  001E36  BE08               	btfsc	i2___llmod@divisor+3,7,c
  5992  001E38  D002               	goto	i2l2684
  5993  001E3A  D7F6               	goto	i2l2680
  5994  001E3C  D000               	goto	i2l2684
  5995  001E3E                     i2l2684:
  5996  001E3E  5005               	movf	i2___llmod@divisor,w,c
  5997  001E40  5C01               	subwf	i2___llmod@dividend,w,c
  5998  001E42  5006               	movf	i2___llmod@divisor+1,w,c
  5999  001E44  5802               	subwfb	i2___llmod@dividend+1,w,c
  6000  001E46  5007               	movf	i2___llmod@divisor+2,w,c
  6001  001E48  5803               	subwfb	i2___llmod@dividend+2,w,c
  6002  001E4A  5008               	movf	i2___llmod@divisor+3,w,c
  6003  001E4C  5804               	subwfb	i2___llmod@dividend+3,w,c
  6004  001E4E  A0D8               	btfss	status,0,c
  6005  001E50  D009               	goto	i2l2688
  6006  001E52  5005               	movf	i2___llmod@divisor,w,c
  6007  001E54  5E01               	subwf	i2___llmod@dividend,f,c
  6008  001E56  5006               	movf	i2___llmod@divisor+1,w,c
  6009  001E58  5A02               	subwfb	i2___llmod@dividend+1,f,c
  6010  001E5A  5007               	movf	i2___llmod@divisor+2,w,c
  6011  001E5C  5A03               	subwfb	i2___llmod@dividend+2,f,c
  6012  001E5E  5008               	movf	i2___llmod@divisor+3,w,c
  6013  001E60  5A04               	subwfb	i2___llmod@dividend+3,f,c
  6014  001E62  D000               	goto	i2l2688
  6015  001E64                     i2l2688:
  6016  001E64  90D8               	bcf	status,0,c
  6017  001E66  3208               	rrcf	i2___llmod@divisor+3,f,c
  6018  001E68  3207               	rrcf	i2___llmod@divisor+2,f,c
  6019  001E6A  3206               	rrcf	i2___llmod@divisor+1,f,c
  6020  001E6C  3205               	rrcf	i2___llmod@divisor,f,c
  6021  001E6E  2E09               	decfsz	i2___llmod@counter,f,c
  6022  001E70  D7E6               	goto	i2l2684
  6023  001E72  D000               	goto	i2l958
  6024  001E74                     i2l958:
  6025  001E74  C001  F001         	movff	i2___llmod@dividend,?i2___llmod
  6026  001E78  C002  F002         	movff	i2___llmod@dividend+1,?i2___llmod+1
  6027  001E7C  C003  F003         	movff	i2___llmod@dividend+2,?i2___llmod+2
  6028  001E80  C004  F004         	movff	i2___llmod@dividend+3,?i2___llmod+3
  6029  001E84  0012               	return		;funcret
  6030  001E86                     __end_ofi2___llmod:
  6031                           	opt stack 0
  6032                           pclatu	equ	0xFFB
  6033                           pclath	equ	0xFFA
  6034                           tblptru	equ	0xFF8
  6035                           tblptrh	equ	0xFF7
  6036                           tblptrl	equ	0xFF6
  6037                           tablat	equ	0xFF5
  6038                           prodh	equ	0xFF4
  6039                           prodl	equ	0xFF3
  6040                           intcon	equ	0xFF2
  6041                           postinc0	equ	0xFEE
  6042                           fsr0h	equ	0xFEA
  6043                           fsr0l	equ	0xFE9
  6044                           wreg	equ	0xFE8
  6045                           indf1	equ	0xFE7
  6046                           postinc1	equ	0xFE6
  6047                           fsr1h	equ	0xFE2
  6048                           fsr1l	equ	0xFE1
  6049                           indf2	equ	0xFDF
  6050                           postinc2	equ	0xFDE
  6051                           postdec2	equ	0xFDD
  6052                           plusw2	equ	0xFDB
  6053                           fsr2h	equ	0xFDA
  6054                           fsr2l	equ	0xFD9
  6055                           status	equ	0xFD8
  6056                           
  6057 ;; *************** function i2_SetTimer0 *****************
  6058 ;; Defined at:
  6059 ;;		line 81 in file "_01_USER/My_Timer.c"
  6060 ;; Parameters:    Size  Location     Type
  6061 ;;  _tmr            2    0[COMRAM] unsigned int 
  6062 ;; Auto vars:     Size  Location     Type
  6063 ;;		None
  6064 ;; Return value:  Size  Location     Type
  6065 ;;		None               void
  6066 ;; Registers used:
  6067 ;;		wreg, status,2, status,0
  6068 ;; Tracked objects:
  6069 ;;		On entry : 0/0
  6070 ;;		On exit  : 0/0
  6071 ;;		Unchanged: 0/0
  6072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6073 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6075 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6076 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6077 ;;Total ram usage:        4 bytes
  6078 ;; Hardware stack levels used:    1
  6079 ;; This function calls:
  6080 ;;		Nothing
  6081 ;; This function is called by:
  6082 ;;		_Sys_Cyc
  6083 ;; This function uses a non-reentrant model
  6084 ;;
  6085                           
  6086                           	psect	text41
  6087  0021CE                     __ptext41:
  6088                           	opt stack 0
  6089  0021CE                     i2_SetTimer0:
  6090                           	opt stack 24
  6091                           
  6092                           ;My_Timer.c: 83: if(_tmr > 0xffff) _tmr = 0xffff;
  6093                           
  6094                           ;incstack = 0
  6095  0021CE  D003               	goto	i2l2668
  6096  0021D0  6801               	setf	i2SetTimer0@_tmr,c
  6097  0021D2  6802               	setf	i2SetTimer0@_tmr+1,c
  6098  0021D4  D000               	goto	i2l2668
  6099  0021D6                     i2l2668:
  6100                           
  6101                           ;My_Timer.c: 84: _tmr=0xffff-_tmr;
  6102  0021D6  C001  F003         	movff	i2SetTimer0@_tmr,??i2_SetTimer0
  6103  0021DA  C002  F004         	movff	i2SetTimer0@_tmr+1,??i2_SetTimer0+1
  6104  0021DE  1E03               	comf	??i2_SetTimer0,f,c
  6105  0021E0  1E04               	comf	??i2_SetTimer0+1,f,c
  6106  0021E2  4A03               	infsnz	??i2_SetTimer0,f,c
  6107  0021E4  2A04               	incf	??i2_SetTimer0+1,f,c
  6108  0021E6  0EFF               	movlw	255
  6109  0021E8  2403               	addwf	??i2_SetTimer0,w,c
  6110  0021EA  6E01               	movwf	i2SetTimer0@_tmr,c
  6111  0021EC  0EFF               	movlw	255
  6112  0021EE  2004               	addwfc	??i2_SetTimer0+1,w,c
  6113  0021F0  6E02               	movwf	i2SetTimer0@_tmr+1,c
  6114                           
  6115                           ;My_Timer.c: 85: TMR0H = _tmr/256;
  6116  0021F2  5002               	movf	i2SetTimer0@_tmr+1,w,c
  6117  0021F4  6ED7               	movwf	4055,c	;volatile
  6118                           
  6119                           ;My_Timer.c: 86: TMR0L = _tmr%256;
  6120  0021F6  C001  FFD6         	movff	i2SetTimer0@_tmr,4054	;volatile
  6121                           
  6122                           ;My_Timer.c: 87: TMR0IF = 0;
  6123  0021FA  94F2               	bcf	intcon,2,c	;volatile
  6124  0021FC  0012               	return		;funcret
  6125  0021FE                     __end_ofi2_SetTimer0:
  6126                           	opt stack 0
  6127                           pclatu	equ	0xFFB
  6128                           pclath	equ	0xFFA
  6129                           tblptru	equ	0xFF8
  6130                           tblptrh	equ	0xFF7
  6131                           tblptrl	equ	0xFF6
  6132                           tablat	equ	0xFF5
  6133                           prodh	equ	0xFF4
  6134                           prodl	equ	0xFF3
  6135                           intcon	equ	0xFF2
  6136                           postinc0	equ	0xFEE
  6137                           fsr0h	equ	0xFEA
  6138                           fsr0l	equ	0xFE9
  6139                           wreg	equ	0xFE8
  6140                           indf1	equ	0xFE7
  6141                           postinc1	equ	0xFE6
  6142                           fsr1h	equ	0xFE2
  6143                           fsr1l	equ	0xFE1
  6144                           indf2	equ	0xFDF
  6145                           postinc2	equ	0xFDE
  6146                           postdec2	equ	0xFDD
  6147                           plusw2	equ	0xFDB
  6148                           fsr2h	equ	0xFDA
  6149                           fsr2l	equ	0xFD9
  6150                           status	equ	0xFD8
  6151                           
  6152 ;; *************** function _Pulse_1Khz *****************
  6153 ;; Defined at:
  6154 ;;		line 86 in file "_01_USER/My_Delay.c"
  6155 ;; Parameters:    Size  Location     Type
  6156 ;;		None
  6157 ;; Auto vars:     Size  Location     Type
  6158 ;;  _pulse          1    3[COMRAM] unsigned char 
  6159 ;; Return value:  Size  Location     Type
  6160 ;;		None               void
  6161 ;; Registers used:
  6162 ;;		wreg, status,2, status,0, cstack
  6163 ;; Tracked objects:
  6164 ;;		On entry : 0/0
  6165 ;;		On exit  : 0/0
  6166 ;;		Unchanged: 0/0
  6167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6169 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6171 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6172 ;;Total ram usage:        1 bytes
  6173 ;; Hardware stack levels used:    1
  6174 ;; Hardware stack levels required when called:    1
  6175 ;; This function calls:
  6176 ;;		_Delay_1Khz
  6177 ;; This function is called by:
  6178 ;;		_Sys_Cyc
  6179 ;; This function uses a non-reentrant model
  6180 ;;
  6181                           
  6182                           	psect	text42
  6183  0022C2                     __ptext42:
  6184                           	opt stack 0
  6185  0022C2                     _Pulse_1Khz:
  6186                           	opt stack 23
  6187                           
  6188                           ;My_Delay.c: 88: unsigned char _pulse = 10;
  6189                           
  6190                           ;incstack = 0
  6191  0022C2  0E0A               	movlw	10
  6192  0022C4  6E04               	movwf	Pulse_1Khz@_pulse,c
  6193                           
  6194                           ;My_Delay.c: 89: static unsigned char _overturn_1Khz = 0;
  6195                           ;My_Delay.c: 91: while( _pulse-- )
  6196  0022C6  D00B               	goto	i2l2640
  6197  0022C8                     i2l2632:
  6198                           
  6199                           ;My_Delay.c: 92: {
  6200                           ;My_Delay.c: 93: _overturn_1Khz =~ _overturn_1Khz;
  6201  0022C8  1E41               	comf	Pulse_1Khz@_overturn_1Khz,f,c
  6202                           
  6203                           ;My_Delay.c: 94: if(_overturn_1Khz) PORTEbits.RE7 = 1;
  6204  0022CA  5041               	movf	Pulse_1Khz@_overturn_1Khz,w,c
  6205  0022CC  B4D8               	btfsc	status,2,c
  6206  0022CE  D002               	goto	i2l58
  6207  0022D0  8E84               	bsf	3972,7,c	;volatile
  6208  0022D2  D002               	goto	i2l2638
  6209  0022D4                     i2l58:
  6210                           
  6211                           ;My_Delay.c: 95: else PORTEbits.RE7 = 0;
  6212  0022D4  9E84               	bcf	3972,7,c	;volatile
  6213  0022D6  D000               	goto	i2l2638
  6214  0022D8                     i2l2638:
  6215                           
  6216                           ;My_Delay.c: 96: Delay_1Khz();
  6217  0022D8  EC9A  F010         	call	_Delay_1Khz	;wreg free
  6218  0022DC  D000               	goto	i2l2640
  6219  0022DE                     i2l2640:
  6220  0022DE  0604               	decf	Pulse_1Khz@_pulse,f,c
  6221  0022E0  2804               	incf	Pulse_1Khz@_pulse,w,c
  6222  0022E2  A4D8               	btfss	status,2,c
  6223  0022E4  D7F1               	goto	i2l2632
  6224  0022E6  0012               	return		;funcret
  6225  0022E8                     __end_of_Pulse_1Khz:
  6226                           	opt stack 0
  6227                           pclatu	equ	0xFFB
  6228                           pclath	equ	0xFFA
  6229                           tblptru	equ	0xFF8
  6230                           tblptrh	equ	0xFF7
  6231                           tblptrl	equ	0xFF6
  6232                           tablat	equ	0xFF5
  6233                           prodh	equ	0xFF4
  6234                           prodl	equ	0xFF3
  6235                           intcon	equ	0xFF2
  6236                           postinc0	equ	0xFEE
  6237                           fsr0h	equ	0xFEA
  6238                           fsr0l	equ	0xFE9
  6239                           wreg	equ	0xFE8
  6240                           indf1	equ	0xFE7
  6241                           postinc1	equ	0xFE6
  6242                           fsr1h	equ	0xFE2
  6243                           fsr1l	equ	0xFE1
  6244                           indf2	equ	0xFDF
  6245                           postinc2	equ	0xFDE
  6246                           postdec2	equ	0xFDD
  6247                           plusw2	equ	0xFDB
  6248                           fsr2h	equ	0xFDA
  6249                           fsr2l	equ	0xFD9
  6250                           status	equ	0xFD8
  6251                           
  6252 ;; *************** function _Delay_1Khz *****************
  6253 ;; Defined at:
  6254 ;;		line 69 in file "_01_USER/My_Delay.c"
  6255 ;; Parameters:    Size  Location     Type
  6256 ;;		None
  6257 ;; Auto vars:     Size  Location     Type
  6258 ;;  c               1    2[COMRAM] unsigned char 
  6259 ;;  b               1    1[COMRAM] unsigned char 
  6260 ;;  a               1    0[COMRAM] unsigned char 
  6261 ;; Return value:  Size  Location     Type
  6262 ;;		None               void
  6263 ;; Registers used:
  6264 ;;		wreg, status,2, status,0
  6265 ;; Tracked objects:
  6266 ;;		On entry : 0/0
  6267 ;;		On exit  : 0/0
  6268 ;;		Unchanged: 0/0
  6269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6271 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6273 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6274 ;;Total ram usage:        3 bytes
  6275 ;; Hardware stack levels used:    1
  6276 ;; This function calls:
  6277 ;;		Nothing
  6278 ;; This function is called by:
  6279 ;;		_Pulse_1Khz
  6280 ;; This function uses a non-reentrant model
  6281 ;;
  6282                           
  6283                           	psect	text43
  6284  002134                     __ptext43:
  6285                           	opt stack 0
  6286  002134                     _Delay_1Khz:
  6287                           	opt stack 23
  6288                           
  6289                           ;My_Delay.c: 71: unsigned char a,b,c;
  6290                           ;My_Delay.c: 72: for(c=1;c>0;c--)
  6291                           
  6292                           ;incstack = 0
  6293  002134  0E01               	movlw	1
  6294  002136  6E03               	movwf	Delay_1Khz@c,c
  6295  002138  5003               	movf	Delay_1Khz@c,w,c
  6296  00213A  B4D8               	btfsc	status,2,c
  6297  00213C  0012               	return	
  6298  00213E  D001               	goto	i2l2320
  6299  002140  0012               	return	
  6300  002142                     i2l2320:
  6301                           
  6302                           ;My_Delay.c: 73: for(b=32;b>0;b--)
  6303  002142  0E20               	movlw	32
  6304  002144  6E02               	movwf	Delay_1Khz@b,c
  6305  002146  5002               	movf	Delay_1Khz@b,w,c
  6306  002148  B4D8               	btfsc	status,2,c
  6307  00214A  D00D               	goto	i2l2336
  6308  00214C  D001               	goto	i2l2324
  6309  00214E  D00B               	goto	i2l2336
  6310  002150                     i2l2324:
  6311                           
  6312                           ;My_Delay.c: 74: for(a=2;a>0;a--);
  6313  002150  0E02               	movlw	2
  6314  002152  6E01               	movwf	Delay_1Khz@a,c
  6315  002154  5001               	movf	Delay_1Khz@a,w,c
  6316  002156  B4D8               	btfsc	status,2,c
  6317  002158  D004               	goto	i2l2332
  6318  00215A  D001               	goto	i2l2328
  6319  00215C  D002               	goto	i2l2332
  6320  00215E                     i2l2328:
  6321  00215E  0601               	decf	Delay_1Khz@a,f,c
  6322  002160  D7F9               	goto	L7
  6323  002162                     i2l2332:
  6324  002162  0602               	decf	Delay_1Khz@b,f,c
  6325  002164  D7F0               	goto	L8
  6326  002166                     i2l2336:
  6327  002166  0603               	decf	Delay_1Khz@c,f,c
  6328  002168  D7E7               	goto	L9
  6329  00216A  0012               	return		;funcret
  6330  00216C                     __end_of_Delay_1Khz:
  6331                           	opt stack 0
  6332                           pclatu	equ	0xFFB
  6333                           pclath	equ	0xFFA
  6334                           tblptru	equ	0xFF8
  6335                           tblptrh	equ	0xFF7
  6336                           tblptrl	equ	0xFF6
  6337                           tablat	equ	0xFF5
  6338                           prodh	equ	0xFF4
  6339                           prodl	equ	0xFF3
  6340                           intcon	equ	0xFF2
  6341                           postinc0	equ	0xFEE
  6342                           fsr0h	equ	0xFEA
  6343                           fsr0l	equ	0xFE9
  6344                           wreg	equ	0xFE8
  6345                           indf1	equ	0xFE7
  6346                           postinc1	equ	0xFE6
  6347                           fsr1h	equ	0xFE2
  6348                           fsr1l	equ	0xFE1
  6349                           indf2	equ	0xFDF
  6350                           postinc2	equ	0xFDE
  6351                           postdec2	equ	0xFDD
  6352                           plusw2	equ	0xFDB
  6353                           fsr2h	equ	0xFDA
  6354                           fsr2l	equ	0xFD9
  6355                           status	equ	0xFD8
  6356                           
  6357 ;; *************** function _Key_FSM_Scan *****************
  6358 ;; Defined at:
  6359 ;;		line 80 in file "_01_USER/Key.c"
  6360 ;; Parameters:    Size  Location     Type
  6361 ;;		None
  6362 ;; Auto vars:     Size  Location     Type
  6363 ;;		None
  6364 ;; Return value:  Size  Location     Type
  6365 ;;		None               void
  6366 ;; Registers used:
  6367 ;;		wreg, status,2, status,0, cstack
  6368 ;; Tracked objects:
  6369 ;;		On entry : 0/0
  6370 ;;		On exit  : 0/0
  6371 ;;		Unchanged: 0/0
  6372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6377 ;;Total ram usage:        0 bytes
  6378 ;; Hardware stack levels used:    1
  6379 ;; Hardware stack levels required when called:    1
  6380 ;; This function calls:
  6381 ;;		_Key_Scan
  6382 ;; This function is called by:
  6383 ;;		_Sys_Cyc
  6384 ;; This function uses a non-reentrant model
  6385 ;;
  6386                           
  6387                           	psect	text44
  6388  001FE8                     __ptext44:
  6389                           	opt stack 0
  6390  001FE8                     _Key_FSM_Scan:
  6391                           	opt stack 23
  6392                           
  6393                           ;Key.c: 82: Key_Scan();
  6394                           
  6395                           ;incstack = 0
  6396  001FE8  EC7D  F010         	call	_Key_Scan	;wreg free
  6397                           
  6398                           ;Key.c: 83: if( Local_Key_FSM.key_BUS & 0x01 ) Local_Key_FSM.key_count[0]++;
  6399  001FEC  0100               	movlb	0	; () banked
  6400  001FEE  A1B0               	btfss	_Local_Key_FSM& (0+255),0,b	;volatile
  6401  001FF0  D004               	goto	i2l2648
  6402                           
  6403                           ; BSR set to: 0
  6404  001FF2  0100               	movlb	0	; () banked
  6405  001FF4  4BB3               	infsnz	(_Local_Key_FSM+3)& (0+255),f,b	;volatile
  6406  001FF6  2BB4               	incf	(_Local_Key_FSM+4)& (0+255),f,b	;volatile
  6407  001FF8  D000               	goto	i2l2648
  6408  001FFA                     i2l2648:
  6409                           
  6410                           ; BSR set to: 0
  6411                           ;Key.c: 84: if( Local_Key_FSM.key_BUS & 0x02 ) Local_Key_FSM.key_count[1]++;
  6412  001FFA  0100               	movlb	0	; () banked
  6413  001FFC  A3B0               	btfss	_Local_Key_FSM& (0+255),1,b	;volatile
  6414  001FFE  D004               	goto	i2l2652
  6415                           
  6416                           ; BSR set to: 0
  6417  002000  0100               	movlb	0	; () banked
  6418  002002  4BB5               	infsnz	(_Local_Key_FSM+5)& (0+255),f,b	;volatile
  6419  002004  2BB6               	incf	(_Local_Key_FSM+6)& (0+255),f,b	;volatile
  6420  002006  D000               	goto	i2l2652
  6421  002008                     i2l2652:
  6422                           
  6423                           ; BSR set to: 0
  6424                           ;Key.c: 85: if( Local_Key_FSM.key_BUS & 0x04 ) Local_Key_FSM.key_count[2]++;
  6425  002008  0100               	movlb	0	; () banked
  6426  00200A  A5B0               	btfss	_Local_Key_FSM& (0+255),2,b	;volatile
  6427  00200C  D004               	goto	i2l2656
  6428                           
  6429                           ; BSR set to: 0
  6430  00200E  0100               	movlb	0	; () banked
  6431  002010  4BB7               	infsnz	(_Local_Key_FSM+7)& (0+255),f,b	;volatile
  6432  002012  2BB8               	incf	(_Local_Key_FSM+8)& (0+255),f,b	;volatile
  6433  002014  D000               	goto	i2l2656
  6434  002016                     i2l2656:
  6435                           
  6436                           ; BSR set to: 0
  6437                           ;Key.c: 86: if( Local_Key_FSM.key_BUS & 0x08 ) Local_Key_FSM.key_count[3]++;
  6438  002016  0100               	movlb	0	; () banked
  6439  002018  A7B0               	btfss	_Local_Key_FSM& (0+255),3,b	;volatile
  6440  00201A  D004               	goto	i2l2660
  6441                           
  6442                           ; BSR set to: 0
  6443  00201C  0100               	movlb	0	; () banked
  6444  00201E  4BB9               	infsnz	(_Local_Key_FSM+9)& (0+255),f,b	;volatile
  6445  002020  2BBA               	incf	(_Local_Key_FSM+10)& (0+255),f,b	;volatile
  6446  002022  D000               	goto	i2l2660
  6447  002024                     i2l2660:
  6448                           
  6449                           ; BSR set to: 0
  6450                           ;Key.c: 87: if( Local_Key_FSM.key_BUS & 0x10 ) Local_Key_FSM.key_count[4]++;
  6451  002024  0100               	movlb	0	; () banked
  6452  002026  A9B0               	btfss	_Local_Key_FSM& (0+255),4,b	;volatile
  6453  002028  0012               	return	
  6454                           
  6455                           ; BSR set to: 0
  6456  00202A  0100               	movlb	0	; () banked
  6457  00202C  4BBB               	infsnz	(_Local_Key_FSM+11)& (0+255),f,b	;volatile
  6458  00202E  2BBC               	incf	(_Local_Key_FSM+12)& (0+255),f,b	;volatile
  6459  002030  0012               	return	
  6460                           
  6461                           ; BSR set to: 0
  6462                           
  6463                           ; BSR set to: 0
  6464  002032  0012               	return		;funcret
  6465  002034                     __end_of_Key_FSM_Scan:
  6466                           	opt stack 0
  6467                           pclatu	equ	0xFFB
  6468                           pclath	equ	0xFFA
  6469                           tblptru	equ	0xFF8
  6470                           tblptrh	equ	0xFF7
  6471                           tblptrl	equ	0xFF6
  6472                           tablat	equ	0xFF5
  6473                           prodh	equ	0xFF4
  6474                           prodl	equ	0xFF3
  6475                           intcon	equ	0xFF2
  6476                           postinc0	equ	0xFEE
  6477                           fsr0h	equ	0xFEA
  6478                           fsr0l	equ	0xFE9
  6479                           wreg	equ	0xFE8
  6480                           indf1	equ	0xFE7
  6481                           postinc1	equ	0xFE6
  6482                           fsr1h	equ	0xFE2
  6483                           fsr1l	equ	0xFE1
  6484                           indf2	equ	0xFDF
  6485                           postinc2	equ	0xFDE
  6486                           postdec2	equ	0xFDD
  6487                           plusw2	equ	0xFDB
  6488                           fsr2h	equ	0xFDA
  6489                           fsr2l	equ	0xFD9
  6490                           status	equ	0xFD8
  6491                           
  6492 ;; *************** function _Key_Scan *****************
  6493 ;; Defined at:
  6494 ;;		line 58 in file "_01_USER/Key.c"
  6495 ;; Parameters:    Size  Location     Type
  6496 ;;		None
  6497 ;; Auto vars:     Size  Location     Type
  6498 ;;		None
  6499 ;; Return value:  Size  Location     Type
  6500 ;;		None               void
  6501 ;; Registers used:
  6502 ;;		wreg, status,2, status,0
  6503 ;; Tracked objects:
  6504 ;;		On entry : 0/0
  6505 ;;		On exit  : 0/0
  6506 ;;		Unchanged: 0/0
  6507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6512 ;;Total ram usage:        0 bytes
  6513 ;; Hardware stack levels used:    1
  6514 ;; This function calls:
  6515 ;;		Nothing
  6516 ;; This function is called by:
  6517 ;;		_Key_FSM_Scan
  6518 ;; This function uses a non-reentrant model
  6519 ;;
  6520                           
  6521                           	psect	text45
  6522  0020FA                     __ptext45:
  6523                           	opt stack 0
  6524  0020FA                     _Key_Scan:
  6525                           	opt stack 23
  6526                           
  6527                           ;Key.c: 61: Local_Key_FSM.key_BUS = 0x00;
  6528                           
  6529                           ; BSR set to: 0
  6530                           ;incstack = 0
  6531  0020FA  0E00               	movlw	0
  6532  0020FC  0100               	movlb	0	; () banked
  6533  0020FE  6FB0               	movwf	_Local_Key_FSM& (0+255),b	;volatile
  6534                           
  6535                           ; BSR set to: 0
  6536                           ;Key.c: 63: if( RE3 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 0) ;
  6537  002100  B684               	btfsc	3972,3,c	;volatile
  6538  002102  D003               	goto	i2l2346
  6539                           
  6540                           ; BSR set to: 0
  6541  002104  0100               	movlb	0	; () banked
  6542  002106  81B0               	bsf	_Local_Key_FSM& (0+255),0,b	;volatile
  6543  002108  D000               	goto	i2l2346
  6544  00210A                     i2l2346:
  6545                           
  6546                           ; BSR set to: 0
  6547                           ;Key.c: 64: if( RE2 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 1) ;
  6548  00210A  B484               	btfsc	3972,2,c	;volatile
  6549  00210C  D003               	goto	i2l2350
  6550                           
  6551                           ; BSR set to: 0
  6552  00210E  0100               	movlb	0	; () banked
  6553  002110  83B0               	bsf	_Local_Key_FSM& (0+255),1,b	;volatile
  6554  002112  D000               	goto	i2l2350
  6555  002114                     i2l2350:
  6556                           
  6557                           ; BSR set to: 0
  6558                           ;Key.c: 65: if( RD6 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 2) ;
  6559  002114  BC83               	btfsc	3971,6,c	;volatile
  6560  002116  D003               	goto	i2l2354
  6561                           
  6562                           ; BSR set to: 0
  6563  002118  0100               	movlb	0	; () banked
  6564  00211A  85B0               	bsf	_Local_Key_FSM& (0+255),2,b	;volatile
  6565  00211C  D000               	goto	i2l2354
  6566  00211E                     i2l2354:
  6567                           
  6568                           ; BSR set to: 0
  6569                           ;Key.c: 66: if( RE4 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 3) ;
  6570  00211E  B884               	btfsc	3972,4,c	;volatile
  6571  002120  D003               	goto	i2l2358
  6572                           
  6573                           ; BSR set to: 0
  6574  002122  0100               	movlb	0	; () banked
  6575  002124  87B0               	bsf	_Local_Key_FSM& (0+255),3,b	;volatile
  6576  002126  D000               	goto	i2l2358
  6577  002128                     i2l2358:
  6578                           
  6579                           ; BSR set to: 0
  6580                           ;Key.c: 67: if( RD7 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 4) ;
  6581  002128  BE83               	btfsc	3971,7,c	;volatile
  6582  00212A  0012               	return	
  6583                           
  6584                           ; BSR set to: 0
  6585  00212C  0100               	movlb	0	; () banked
  6586  00212E  89B0               	bsf	_Local_Key_FSM& (0+255),4,b	;volatile
  6587  002130  0012               	return	
  6588                           
  6589                           ; BSR set to: 0
  6590                           
  6591                           ; BSR set to: 0
  6592  002132  0012               	return		;funcret
  6593  002134                     __end_of_Key_Scan:
  6594                           	opt stack 0
  6595                           pclatu	equ	0xFFB
  6596                           pclath	equ	0xFFA
  6597                           tblptru	equ	0xFF8
  6598                           tblptrh	equ	0xFF7
  6599                           tblptrl	equ	0xFF6
  6600                           tablat	equ	0xFF5
  6601                           prodh	equ	0xFF4
  6602                           prodl	equ	0xFF3
  6603                           intcon	equ	0xFF2
  6604                           postinc0	equ	0xFEE
  6605                           fsr0h	equ	0xFEA
  6606                           fsr0l	equ	0xFE9
  6607                           wreg	equ	0xFE8
  6608                           indf1	equ	0xFE7
  6609                           postinc1	equ	0xFE6
  6610                           fsr1h	equ	0xFE2
  6611                           fsr1l	equ	0xFE1
  6612                           indf2	equ	0xFDF
  6613                           postinc2	equ	0xFDE
  6614                           postdec2	equ	0xFDD
  6615                           plusw2	equ	0xFDB
  6616                           fsr2h	equ	0xFDA
  6617                           fsr2l	equ	0xFD9
  6618                           status	equ	0xFD8
  6619                           pclatu	equ	0xFFB
  6620                           pclath	equ	0xFFA
  6621                           tblptru	equ	0xFF8
  6622                           tblptrh	equ	0xFF7
  6623                           tblptrl	equ	0xFF6
  6624                           tablat	equ	0xFF5
  6625                           prodh	equ	0xFF4
  6626                           prodl	equ	0xFF3
  6627                           intcon	equ	0xFF2
  6628                           postinc0	equ	0xFEE
  6629                           fsr0h	equ	0xFEA
  6630                           fsr0l	equ	0xFE9
  6631                           wreg	equ	0xFE8
  6632                           indf1	equ	0xFE7
  6633                           postinc1	equ	0xFE6
  6634                           fsr1h	equ	0xFE2
  6635                           fsr1l	equ	0xFE1
  6636                           indf2	equ	0xFDF
  6637                           postinc2	equ	0xFDE
  6638                           postdec2	equ	0xFDD
  6639                           plusw2	equ	0xFDB
  6640                           fsr2h	equ	0xFDA
  6641                           fsr2l	equ	0xFD9
  6642                           status	equ	0xFD8
  6643                           
  6644                           	psect	rparam
  6645  0000                     pclatu	equ	0xFFB
  6646                           pclath	equ	0xFFA
  6647                           tblptru	equ	0xFF8
  6648                           tblptrh	equ	0xFF7
  6649                           tblptrl	equ	0xFF6
  6650                           tablat	equ	0xFF5
  6651                           prodh	equ	0xFF4
  6652                           prodl	equ	0xFF3
  6653                           intcon	equ	0xFF2
  6654                           postinc0	equ	0xFEE
  6655                           fsr0h	equ	0xFEA
  6656                           fsr0l	equ	0xFE9
  6657                           wreg	equ	0xFE8
  6658                           indf1	equ	0xFE7
  6659                           postinc1	equ	0xFE6
  6660                           fsr1h	equ	0xFE2
  6661                           fsr1l	equ	0xFE1
  6662                           indf2	equ	0xFDF
  6663                           postinc2	equ	0xFDE
  6664                           postdec2	equ	0xFDD
  6665                           plusw2	equ	0xFDB
  6666                           fsr2h	equ	0xFDA
  6667                           fsr2l	equ	0xFD9
  6668                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         154
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     53      71
    BANK0           160     15     151
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    CRC_Verify@DataBuff	PTR unsigned char  size(2) Largest target is 10
		 -> RS485_ReceiveBuff(BANK0[10]), RS485_SendBuff(BANK0[10]), 

    RS485_Message_Manage@DataBuff	PTR unsigned char  size(2) Largest target is 10
		 -> RS485_ReceiveBuff(BANK0[10]), 

    RS485_Send_Date@date_dress	PTR unsigned char  size(2) Largest target is 10
		 -> RS485_SendBuff(BANK0[10]), 


Critical Paths under _main in COMRAM

    _Timer0_Init->_SetTimer0
    _Run->_RS485_Send_Date
    _RS485_Send_Date->_CRC_Verify
    _Get_ADC6->___ftdiv
    ___lwtoft->___ftpack
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul
    _Result_Show->_TM1640_Show_integer
    _TM1640_Show_integer->_TM1640_Writer_Dates
    _TM1640_Show_integer->___lwdiv
    _TM1640_Writer_Dates->___lwmod
    _RS485_Init->_Open2USART
    _Message_Manage->_RS485_Message_Manage
    _RS485_Message_Manage->_CRC_Verify
    _CRC_Verify->___lldiv
    _Key_Message_Manage->_Key_FSM_Read
    _Init_TM1640->_TM1640_Writer_Byte
    _TM1640_Writer_Byte->_TM1640_Delay
    _TM1640_Stop->_TM1640_Delay
    _TM1640_Start->_TM1640_Delay
    _ADC6_Init->_OpenADC

Critical Paths under _Sys_Cyc in COMRAM

    _Sys_Cyc->i2___llmod
    _Pulse_1Khz->_Delay_1Khz

Critical Paths under _main in BANK0

    _Get_ADC6->___ftdiv
    _Message_Manage->_RS485_Message_Manage

Critical Paths under _Sys_Cyc in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Sys_Cyc in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Sys_Cyc in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Sys_Cyc in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Sys_Cyc in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Sys_Cyc in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Sys_Cyc in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Sys_Cyc in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Sys_Cyc in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Sys_Cyc in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Sys_Cyc in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Sys_Cyc in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Sys_Cyc in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Sys_Cyc in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Sys_Cyc in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Sys_Cyc in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   18737
                                             12 BANK0      3     3      0
                          _ADC6_Init
                        _GPIO_Config
                        _Init_TM1640
                           _Key_Init
                     _Message_Manage
                         _RS485_Init
                        _Result_Show
                                _Run
                        _Timer0_Init
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0     194
                          _SetTimer0
 ---------------------------------------------------------------------------------
 (2) _SetTimer0                                            4     2      2     194
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Run                                                  0     0      0   10179
                           _Get_ADC6
                    _RS485_Send_Date
 ---------------------------------------------------------------------------------
 (2) _RS485_Send_Date                                      4     1      3    2191
                                             50 COMRAM     3     0      3
                                              0 BANK0      1     1      0
                         _CRC_Verify
 ---------------------------------------------------------------------------------
 (2) _Get_ADC6                                             0     0      0    7988
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2104
                                             32 COMRAM     3     0      3
                            _ReadADC (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    2846
                                             35 COMRAM    15     9      6
                            _ReadADC (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3038
                                             50 COMRAM     3     3      0
                                              0 BANK0     12     6      6
                            _ReadADC (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2008
                                             24 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) _ReadADC                                              4     2      2       0
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Result_Show                                          1     1      0    3240
                                             33 COMRAM     1     1      0
                _TM1640_Show_integer
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     492
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _TM1640_Show_integer                                  2     0      2    2748
                                             31 COMRAM     2     0      2
                _TM1640_Writer_Dates
                            ___lwdiv
                            ___lwmod
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     752
                                             24 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     631
                                             24 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _TM1640_Writer_Dates                                  2     1      1    1009
                                             29 COMRAM     2     1      1
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _RS485_Init                                           0     0      0     375
                         _Open2USART
 ---------------------------------------------------------------------------------
 (2) _Open2USART                                           3     1      2     375
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Message_Manage                                       0     0      0    4034
                 _Key_Message_Manage
               _RS485_Message_Manage
 ---------------------------------------------------------------------------------
 (2) _RS485_Message_Manage                                11     8      3    2975
                                             50 COMRAM     3     0      3
                                              0 BANK0      8     8      0
                         _CRC_Verify
 ---------------------------------------------------------------------------------
 (3) _CRC_Verify                                          13    10      3    1689
                                             37 COMRAM    13    10      3
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     612
                                             24 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     371
                                             24 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _Key_Message_Manage                                   0     0      0    1059
                       _Key_FSM_Read
                      _Key_FSM_Reset
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) ___lbmod                                              4     3      1     297
                                             24 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (3) _Key_FSM_Reset                                        1     1      0      96
                                             24 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Key_FSM_Read                                         6     6      0     666
                                             24 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _Key_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_TM1640                                          0     0      0     396
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
 ---------------------------------------------------------------------------------
 (4) _TM1640_Writer_Byte                                   2     2      0     198
                                             26 COMRAM     2     2      0
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (4) _TM1640_Stop                                          0     0      0      99
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (4) _TM1640_Start                                         0     0      0      99
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (5) _TM1640_Delay                                         2     2      0      99
                                             24 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC6_Init                                            0     0      0     316
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     316
                                             24 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Sys_Cyc                                             15    15      0     563
                                              9 COMRAM    15    15      0
                       _Key_FSM_Scan
                         _Pulse_1Khz
                        i2_SetTimer0
                          i2___llmod
 ---------------------------------------------------------------------------------
 (7) i2___llmod                                            9     1      8     263
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) i2_SetTimer0                                          4     2      2      94
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _Pulse_1Khz                                           1     1      0     161
                                              3 COMRAM     1     1      0
                         _Delay_1Khz
 ---------------------------------------------------------------------------------
 (8) _Delay_1Khz                                           3     3      0     138
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (7) _Key_FSM_Scan                                         0     0      0       0
                           _Key_Scan
 ---------------------------------------------------------------------------------
 (8) _Key_Scan                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC6_Init
     _OpenADC
   _GPIO_Config
   _Init_TM1640
     _TM1640_Start
       _TM1640_Delay
     _TM1640_Stop
       _TM1640_Delay
     _TM1640_Writer_Byte
       _TM1640_Delay
   _Key_Init
   _Message_Manage
     _Key_Message_Manage
       _Key_FSM_Read
       _Key_FSM_Reset
       ___lbmod
     _RS485_Message_Manage
       _CRC_Verify
         ___lldiv
         ___llmod
   _RS485_Init
     _Open2USART
   _Result_Show
     _TM1640_Show_integer
       _TM1640_Writer_Dates
         _TM1640_Start
           _TM1640_Delay
         _TM1640_Stop
           _TM1640_Delay
         _TM1640_Writer_Byte
           _TM1640_Delay
         ___lwmod (ARG)
       ___lwdiv
       ___lwmod
       ___wmul (ARG)
     ___wmul
   _Run
     _Get_ADC6
       _BusyADC
       _ConvertADC
       _ReadADC
       ___ftdiv
         _ReadADC (ARG)
         ___ftmul (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___ftmul
         _ReadADC (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___lwtoft
         _ReadADC (ARG)
         ___ftpack (ARG)
     _RS485_Send_Date
       _CRC_Verify
         ___lldiv
         ___llmod
   _Timer0_Init
     _SetTimer0

 _Sys_Cyc (ROOT)
   _Key_FSM_Scan
     _Key_Scan
   _Pulse_1Khz
     _Delay_1Khz
   i2_SetTimer0
   i2___llmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      F      97       5       94.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     35      47       1       74.7%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      DE      12        0.0%
DATA                 0      0      DE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sun Jan 17 20:41:35 2016

                  ?_TM1640_Stop 0001    __size_of_TM1640_Writer_Dates 0022                   ?_TM1640_Delay 0001  
                Key_FSM_Reset@t 0019            CRC_Verify@date_lenth 0028             ___wmul@multiplicand 001B  
                   __CFG_BORV$3 000000                   ?_TM1640_Start 0001       RS485_Message_Manage@CRC_H 00ED  
     RS485_Message_Manage@CRC_L 00EE                    __CFG_CP0$OFF 000000                    __CFG_CP1$OFF 000000  
                  __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000                    __CFG_CP4$OFF 000000  
                  __CFG_CP5$OFF 000000                    __CFG_CP6$OFF 000000                    __CFG_CP7$OFF 000000  
                           l201 1BEC                             l202 1C04                             l131 1426  
                           l225 1792                             l193 1B9A                             l363 23A6  
                           l348 20C4                             l196 1BBA                             l453 1F98  
                           l349 20DA                             l481 1CE0                             l483 1CF0  
                           l812 1B48                             l486 1D08                             l488 1D14  
                           l489 1D16                             l948 1C94                             l876 164C  
                           l958 1E04                             _GIE 007F97                    __CFG_CPB$OFF 000000  
                           _RC3 007C13                             _RC4 007C14                             _RE2 007C22  
                           _RE3 007C23                             _RE4 007C24                             _RD6 007C1E  
                           _RE5 007C25                             _RD7 007C1F                             _RE6 007C26  
                           _RG3 007C33                             _RE7 007C27                    __CFG_CPD$OFF 000000  
                           _PSA 007EAB                             _Run 21FE                  ??_Key_FSM_Read 0019  
                ??_Key_FSM_Scan 0001                             prod 000FF3                             wreg 000FE8  
                  ?_GPIO_Config 0001                      _TXSTA2bits 000F21     __size_of_Key_Message_Manage 00F6  
          ?_TM1640_Show_integer 0020                     ?_RS485_Init 0001                    ___ftdiv@cntr 00EE  
                          ?_Run 0001                    ___ftdiv@sign 00F3                            l1011 1F44  
                          l1021 1FDE                            l3002 160A                            l3012 165E  
                          l3110 1FBC                            l3022 18DC                            l3202 1D00  
                          l3114 1FD2                            l3106 1FAA                            l3050 1960  
                          l3042 1938                            l3140 19F2                            l3132 19D8  
                          l3108 1FB4                            l3060 198E                            l3052 1966  
                          l3028 1904                            l3206 1D0C                            l3046 194A  
                          l3222 1BC4                            l3152 1A16                            l3144 19FE  
                          l3136 19E4                            l3056 1978                            l3074 2192  
                          l3066 2178                            l3170 1A98                            l3162 1A5E  
                          l3154 1A24                            l3090 1F1A                            l3226 1C0E  
                          l3076 2198                            l3148 1A0C                            l3236 105A  
                          l3174 1AA6                            l3166 1A7A                            l3158 1A40  
                          l3262 1138                            l3254 10BE                            l3190 1CD6  
                          l3182 1CBE                            l3086 1F08                            l3326 1E8C  
                          l3414 20AA                            l3272 11BE                            l3248 10A6  
                          l3088 1F12                            l2810 20F2                            l3194 1CE6  
                          l3186 1CCC                            l3098 1F38                            l2804 20DE  
                          l2900 1440                            l3276 11E6                            l3268 1198  
                          l2820 1ACC                            l3198 1CF6                            l2830 1B30  
                          l2822 1AD8                            l3294 21A6                            l2904 1472  
                          l2832 1B3C                            l2824 1AF8                            l2816 1ABC  
                          l3384 220A                            l2770 23A0                            l2762 2396  
                          l2930 1534                            l2914 149E                            l2906 1488  
                          l3396 1D6A                            l2844 1B62                            l2828 1B10  
                          l2926 1530                            l2918 14AA                            l2854 1C3C  
                          l2942 169C                            l2838 1B50                            l2768 239E  
                          l2936 2046                            l2856 1C4A                            l2938 2074  
                          l2866 1C84                            l2858 1C52                            l2882 1DF4  
                          l2874 1DB8                            l2946 1706                            l2876 1DC6  
                          l2878 1DCE                            l2982 15A8                            l2896 13FC  
                          l2888 13A4                            l2976 1574                            l2898 1412  
                          _T0CS 007EAD                            u3010 23EE                            _T0SE 007EAC  
                          u3021 1552                            u3041 1586                            u3071 18C4  
                          u3091 18EC                            _IPEN 007E87                            u2840 13CA  
                          u2850 13E8                            u2924 14F8                            u2860 145E  
                          u2925 14F4                            u2934 150C                            u2935 1508  
                          i2l58 22D4                   ??_Init_TM1640 001D                      _Delay_1Khz 2134  
                          _main 207E                    ___ftpack@arg 0019                    ___ftpack@exp 001C  
                          fsr0h 000FEA                            fsr1h 000FE2                            fsr0l 000FE9  
                          fsr2h 000FDA                            indf1 000FE7                            fsr1l 000FE1  
                          indf2 000FDF                            fsr2l 000FD9                            pclat 000FFA  
               ??_Key_FSM_Reset 0019                            prodh 000FF4                            prodl 000FF3  
                          start 0160                ?_RS485_Send_Date 0033                   __CFG_IESO$OFF 000000  
                 __CFG_FOSC$HS1 000000                   __CFG_MCLRE$ON 000000                    ___ftmul@cntr 0031  
                  ___param_bank 000010                    ___ftmul@sign 0032                 __end_of_BusyADC 23F4  
               __end_of_ReadADC 23E6                  ??_TM1640_Delay 0019                 __end_of_OpenADC 1F9C  
                    _Handle_Msg 006A                           ??_Run 0036                  ??_TM1640_Start 001B  
                 __CFG_RETEN$ON 000000                           ?_main 0001                 __end_of___lbmod 219E  
               __end_of_Sys_Cyc 0160                 __end_of___ftdiv 1686                 __end_of___lldiv 1CA6  
               __end_of___ftmul 19B6                 __end_of___llmod 1E16                           _T0PS0 007EA8  
                         _T0PS1 007EA9                           _T0PS2 007EAA                           _RC2IF 007D25  
               __end_of___lwdiv 1F4E                 __end_of___lwmod 1FE8                           i2l301 0126  
                         i2l293 00CA                           i2l298 00F8                           i2l958 1E74  
             __end_of_ADC6_Init 23D6                           _TMR0H 000FD7                           _TMR0L 000FD6  
                         _TRISD 000F95                           _TRISE 000F96           ??_TM1640_Show_integer 0022  
                 __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000                   __CFG_WRT2$OFF 000000  
                 __CFG_WRT3$OFF 000000                   __CFG_WRT4$OFF 000000                  __CFG_EBRT0$OFF 000000  
                 __CFG_WRT5$OFF 000000                  __CFG_EBRT1$OFF 000000                   __CFG_WRT6$OFF 000000  
                __CFG_EBRT2$OFF 000000                   __CFG_WRT7$OFF 000000                  __CFG_EBRT3$OFF 000000  
                __CFG_EBRT4$OFF 000000                  __CFG_FCMEN$OFF 000000                  __CFG_EBRT5$OFF 000000  
                __CFG_EBRT6$OFF 000000                  __CFG_EBRT7$OFF 000000                   __CFG_WRTB$OFF 000000  
                 __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000                  __CFG_EBRTB$OFF 000000  
           __size_of_CRC_Verify 0128                   ___ftpack@sign 001D                      _ConvertADC 240A  
                 _Local_Key_FSM 00B0                           tablat 000FF5                           plusw2 000FDB  
                         status 000FD8              _TM1640_Writer_Byte 20BC                __end_of_Get_ADC6 1EF2  
            __size_ofi2___llmod 0070                 __initialization 2250             __end_of_Init_TM1640 22C2  
           __size_of_RS485_Init 001E                    __end_of_main 20BC             ?_TM1640_Writer_Byte 0001  
              __end_of_Key_Init 240A             Key_FSM_Read@key_num 001E                __end_of_Key_Scan 2134  
                    _Open2USART 1CA6      Sys_Cyc@_RS485_Receive_Byte 0042                          ??_main 0036  
                 __activetblptr 000001   __size_of_RS485_Message_Manage 038C            ??_TM1640_Writer_Byte 001B  
                        _ADCON0 000FC2                          _ADCON1 000FC1                          _ADCON2 000FC0  
              ___llmod@dividend 0019                          _ADRESH 000FC4                          _ADRESL 000FC3  
                        _ANCON2 000F23                          _T08BIT 007EAE                __end_of___ftpack 1B72  
               __CFG_BBSIZ$BB2K 000000                          i2l2320 2142                          i2l2332 2162  
                        i2l2324 2150                          i2l2350 2114                          i2l2328 215E  
                        i2l2336 2166                          i2l2354 211E                          i2l2346 210A  
                        i2l2358 2128                          i2l2632 22C8                          i2l2640 22DE  
                        i2l2660 2024                          i2l2652 2008                          i2l2724 00CE  
                        i2l2638 22D8                          i2l2742 0116                          i2l2656 2016  
                        i2l2648 1FFA                          i2l2680 1E28                          i2l2728 00DC  
                        i2l2682 1E36                          i2l2668 21D6                          i2l2684 1E3E  
                        i2l2688 1E64                   SetTimer0@_tmr 0019                          _RCREG2 000F1D  
              __end_of___lwtoft 229C                          _RCSTA2 000F22                     ?_Delay_1Khz 0001  
                        _TMR0IE 007F95                          _TMR0IF 007F92                          _SPBRG2 000F1E  
                        _TMR0ON 007EAF                   TM1640_Delay@i 001A                       ??_BusyADC 0019  
                        _TXREG2 000F1C                       ??_ReadADC 001B                          _TXSTA2 000F21  
                 ??_Timer0_Init 001D                       ??_OpenADC 001B          TM1640_Writer_Byte@Date 001B  
                  Sys_Cyc@_flag 0043                  __CFG_XINST$OFF 000000            __end_of_Key_FSM_Read 1540  
          __end_of_Key_FSM_Scan 2034                    Sys_Cyc@_temp 0018          TM1640_Writer_Byte@mask 001C  
             _RS485_ReceiveBuff 00D4                          ___wmul 2228                  __CFG_STVREN$ON 000000  
                     ??___lbmod 001A                       ??_Sys_Cyc 000A                       ??___ftdiv 0033  
                     ??___lldiv 0021                       ??___ftmul 002A                       ??___llmod 0021  
          Sys_Cyc@_overturn_LED 0044                       ??___lwdiv 001D              __size_of_SetTimer0 0030  
                     ??___lwmod 001D                          clear_0 2256                          clear_1 2262  
                 ??_Result_Show 0022            __size_of_TM1640_Stop 0024           ___ftmul@f3_as_product 002E  
                    _Pulse_1Khz 22C2                  _Local_Key_User 00C2               __end_ofi2___llmod 1E86  
                  __mediumconst 0000                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8            __size_of_GPIO_Config 000C             _TM1640_Writer_Dates 2354  
                   ?_ConvertADC 0001            __end_of_TM1640_Delay 23AE                 ___lbmod@divisor 0019  
          __end_of_TM1640_Start 2354                      __accesstop 0060         __end_of__initialization 2268  
               ___lbmod@counter 001B                     _Init_TM1640 229C                    ?i2_SetTimer0 0001  
                 ___rparam_used 000001                      ___ftdiv@f1 00E8                      ___ftdiv@f2 00EB  
                    ___ftdiv@f3 00EF               i2___llmod@divisor 0005                    ??_CRC_Verify 0029  
              Pulse_1Khz@_pulse 0004               i2___llmod@counter 0009                      ___ftmul@f1 0024  
                    ___ftmul@f2 0027                  __pcstackCOMRAM 0001            ?_TM1640_Writer_Dates 001E  
           CRC_Verify@CRC_Value 002E             __end_of_Timer0_Init 230C                     ?_Open2USART 0019  
                    ___lwtoft@c 0021             __size_of_Delay_1Khz 0038                       ?_Get_ADC6 0001  
                  ??_RS485_Init 001C             __end_of_Result_Show 1DA6         __size_of_Message_Manage 0016  
            __end_of_CRC_Verify 17AE               __end_of_SetTimer0 21CE                      __pbssBANK0 0060  
                     ?_Key_Init 0001                       ?_Key_Scan 0001                     _ReceiveBuff 0060  
               __CFG_PLLCFG$OFF 000000         TM1640_Writer_Dates@Addr 001F              __end_of_LED_Number 1011  
       TM1640_Writer_Dates@Date 001E           ??_TM1640_Writer_Dates 001F                         ?___wmul 0019  
            __end_of_RS485_Init 2394             __size_of_ConvertADC 0004                       ?___ftpack 0019  
                     ?___lwtoft 0021      __end_of_Key_Message_Manage 1AAC                     ?_Pulse_1Khz 0001  
                    ??_Get_ADC6 0036                         _SPBRGH2 000F1F                       _ADC6_Buff 003E  
                     _ADC6_Init 23C4                      ??_Key_Init 0019                      ??_Key_Scan 0001  
         __size_of_Key_FSM_Read 01A2           __size_of_Key_FSM_Scan 004C             __size_of_Open2USART 0084  
                       _BusyADC 23E6                         _ReadADC 23D6                 __CFG_PWRTEN$OFF 000000  
                       _OpenADC 1F4E                         __Hparam 0000                     _Timer0_Init 22E8  
         __end_of_Key_FSM_Reset 207E                         __Lparam 0000                  _RS485_SendBuff 00DE  
                       ___lbmod 216C                         _Sys_Cyc 0008                         ___ftdiv 1540  
                       ___lldiv 1C1A                 __size_of___wmul 0028                         ___ftmul 18B4  
                       ___llmod 1DA6                         ___lwdiv 1EF2                         ___lwmod 1F9C  
                  __psmallconst 1000              _RS485_Receive_Flag 0047        __size_of_RS485_Send_Date 00A8  
   __end_of_TM1640_Show_integer 18B4                         __pcinit 2250                      ??___ftpack 001E  
                       __ramtop 1000                         __ptext0 207E                         __ptext1 22E8  
                       __ptext2 219E                         __ptext3 21FE                         __ptext4 1B72  
                       __ptext5 1E86                         __ptext6 2276                         __ptext7 18B4  
                       __ptext8 1540                         __ptext9 1AAC                     _Result_Show 1D2A  
                    ??___lwtoft 0024                    __size_of_Run 002A                Open2USART@config 001B  
         __size_of_TM1640_Delay 001A               __CFG_MSSPMSK$MSK7 000000                    _Key_FSM_Read 139E  
                  _Key_FSM_Scan 1FE8           __size_of_TM1640_Start 0024                      ?_ADC6_Init 0001  
                OpenADC@config2 0019                  OpenADC@config3 001A                         main@num 00F4  
          end_of_initialization 2268                    ??_Delay_1Khz 0001                       _RS485_Num 0046  
  __end_of_RS485_Message_Manage 139E                 ___lldiv@divisor 001D                 ___lldiv@counter 0025  
           __size_of_Pulse_1Khz 0026            __size_ofi2_SetTimer0 0030                         postdec2 000FDD  
                       postinc0 000FEE                         postinc1 000FE6                         postinc2 000FDE  
                  _TM1640_Delay 2394       RS485_Send_Date@date_dress 0033       RS485_Send_Date@date_lenth 0035  
                  _TM1640_Start 2330                       _PORTEbits 000F84                TM1640_Delay@Time 0019  
            __end_of_Delay_1Khz 216C                ___lbmod@dividend 001A                       _TRISCbits 000F94  
                     _TRISGbits 000F98                  _Message_Manage 23AE     __size_of_TM1640_Writer_Byte 003E  
                     i2___llmod 1E16               __CFG_SOSCSEL$HIGH 000000                    ??_ConvertADC 0019  
                   ___lbmod@rem 001C        Key_FSM_Read@key_num_mate 001D                    ?_Init_TM1640 0001  
                   ___ftdiv@exp 00F2              i2___llmod@dividend 0001                     ___ftmul@exp 002D  
                 ??_TM1640_Stop 001B                  __end_of___wmul 2250                    ??_Open2USART 001B  
            __end_of_ConvertADC 240E          __end_of_Message_Manage 23C4                   ??_GPIO_Config 0019  
           start_initialization 2250               ??_RS485_Send_Date 00E8                     __end_of_Run 2228  
                   ??_ADC6_Init 001E               __size_of_Get_ADC6 006C                      ?i2___llmod 0001  
RS485_Message_Manage@date_lenth 0035      TM1640_Show_integer@Numbers 0020                 ___llmod@divisor 001D  
             __size_of_Key_Init 000A               __size_of_Key_Scan 003A                 ___llmod@counter 0021  
                     _SetTimer0 219E              __end_of_Open2USART 1D2A                 i2SetTimer0@_tmr 0001  
                     _Timer_Cyc 003A                        ??___wmul 001D                   _Handle_Switch 0036  
           __end_of_TM1640_Stop 2330               __size_of___ftpack 00C6                    ??_Pulse_1Khz 0004  
               ?_Message_Manage 0001            _RS485_Message_Manage 1012                     __pbssCOMRAM 0036  
             __size_of___lwtoft 0026                   __pcstackBANK0 00E8              CRC_Verify@CRC_Byte 0032  
           __end_of_GPIO_Config 2400              _Key_Message_Manage 19B6                        ?_BusyADC 0001  
                      ?_ReadADC 0019     __end_of_TM1640_Writer_Dates 2376                      ?_SetTimer0 0019  
                      ?_OpenADC 0019  RS485_Message_Manage@from_dress 00EF                    ?_Timer0_Init 0001  
           ?_Key_Message_Manage 0001                ___lwdiv@dividend 0019               __CFG_CCP2MX$PORTC 000000  
            __end_of_Pulse_1Khz 22E8                       __pintcode 0008                        ?___lbmod 0019  
                      ?_Sys_Cyc 0001                        ?___ftdiv 00E8                        ?___lldiv 0019  
                      ?___ftmul 0024                        ?___llmod 0019                        ?___lwdiv 0019  
                      ?___lwmod 0019              CRC_Verify@DataBuff 0026                    ?_Result_Show 0001  
                   __smallconst 1000           ?_RS485_Message_Manage 0033            ??_Key_Message_Manage 001F  
                   _LED2_switch 0045                ___lwdiv@quotient 001E                     ??i2___llmod 0009  
               Open2USART@spbrg 0019                  ___wmul@product 001D                   OpenADC@config 001D  
                      _PIE1bits 000F9D                        _PIE3bits 000FA3            __size_of_Init_TM1640 0026  
                      _PIR1bits 000F9E                     _TM1640_Stop 230C                      _ADCON0bits 000FC2  
             ___wmul@multiplier 0019                        _Get_ADC6 1E86                     _GPIO_Config 23F4  
                   Delay_1Khz@a 0001                     Delay_1Khz@b 0002                     Delay_1Khz@c 0003  
  __size_of_TM1640_Show_integer 0106          __size_of_Key_FSM_Reset 004A    RS485_Message_Manage@DataBuff 0033  
                      _Key_Init 2400                        _Key_Scan 20FA                   ??i2_SetTimer0 0003  
                   ??_SetTimer0 001B                __size_of_BusyADC 000E                __size_of_ReadADC 0010  
                      __Hrparam 0000                __size_of_OpenADC 004E                        __Lrparam 0000  
                  __Lsmallconst 1000              __CFG_BOREN$SBORDIS 000000                 _RS485_Send_Date 1B72  
      Pulse_1Khz@_overturn_1Khz 0041                __size_of___lbmod 0032                __size_of_Sys_Cyc 0158  
              __size_of___ftdiv 0146                __size_of___lldiv 008C                __size_of___ftmul 0102  
              __size_of___llmod 0070                __size_of___lwdiv 005C                __size_of___lwmod 004C  
                      ___ftpack 1AAC          ??_RS485_Message_Manage 00E8                        ___lwtoft 2276  
    __end_of_TM1640_Writer_Byte 20FA                 ___lwdiv@divisor 001B                 ___lwdiv@counter 001D  
                      __ptext10 23D6                        __ptext11 240A                        __ptext20 1CA6  
                      __ptext12 23E6                        __ptext21 23AE                        __ptext13 1D2A  
                      __ptext30 2400                        __ptext22 1012                        __ptext14 2228  
                      __ptext31 229C                        __ptext23 1686                        __ptext15 17AE  
                      __ptext40 1E16                        __ptext32 20BC                        __ptext24 1DA6  
                      __ptext16 1F9C                        __ptext41 21CE                        __ptext33 230C  
                      __ptext25 1C1A                        __ptext17 1EF2                        __ptext42 22C2  
                      __ptext34 2330                        __ptext26 19B6                        __ptext18 2354  
                      __ptext43 2134                        __ptext35 2394                        __ptext27 216C  
                      __ptext19 2376                        __ptext44 1FE8                        __ptext36 23F4  
                      __ptext28 2034                        __ptext45 20FA                        __ptext37 23C4  
                      __ptext29 139E                        __ptext38 1F4E                   __size_of_main 003E  
           __CFG_RTCOSC$SOSCREF 000000                      _CRC_Verify 1686                   _Key_FSM_Reset 2034  
          __size_of_Timer0_Init 0024             __end_ofi2_SetTimer0 21FE                ??_Message_Manage 0036  
           __CFG_INTOSCSEL$HIGH 000000                      _LED_Number 1001              __CFG_WDTEN$SWDTDIS 000000  
                    _INTCONbits 000FF2            __size_of_Result_Show 007C                      _RS485_Init 2376  
                      intlevel2 0000                ___lwmod@dividend 0019                ___lldiv@dividend 0019  
                    _RCSTA2bits 000F22         __end_of_RS485_Send_Date 1C1A                  ?_Key_FSM_Reset 0001  
            __CFG_WDTPS$1048576 000000                ___lldiv@quotient 0021                 ___lwmod@divisor 001B  
               ___lwmod@counter 001D                   ?_Key_FSM_Read 0001                   ?_Key_FSM_Scan 0001  
           __CFG_BORPWR$ZPBORMV 000000              __size_of_ADC6_Init 0012                     i2_SetTimer0 21CE  
                   ?_CRC_Verify 0026             _TM1640_Show_integer 17AE  
