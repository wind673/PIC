

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Jan 23 15:30:34 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F67K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    55  0000                     
    56                           	psect	smallconst
    57  001000                     __psmallconst:
    58                           	opt stack 0
    59  001000  00                 	db	0
    60  001001                     _LED_Number:
    61                           	opt stack 0
    62  001001  3F                 	db	63
    63  001002  06                 	db	6
    64  001003  5B                 	db	91
    65  001004  4F                 	db	79
    66  001005  66                 	db	102
    67  001006  6D                 	db	109
    68  001007  7D                 	db	125
    69  001008  07                 	db	7
    70  001009  7F                 	db	127
    71  00100A  6F                 	db	111
    72  00100B  77                 	db	119
    73  00100C  7C                 	db	124
    74  00100D  39                 	db	57
    75  00100E  5E                 	db	94
    76  00100F  79                 	db	121
    77  001010  71                 	db	113
    78  001011                     __end_of_LED_Number:
    79                           	opt stack 0
    80  0000                     _ANCON2	set	3875
    81  0000                     _RCREG2	set	3869
    82  0000                     _RCSTA2	set	3874
    83  0000                     _RCSTA2bits	set	3874
    84  0000                     _SPBRG2	set	3870
    85  0000                     _SPBRGH2	set	3871
    86  0000                     _TXREG2	set	3868
    87  0000                     _TXSTA2	set	3873
    88  0000                     _TXSTA2bits	set	3873
    89  0000                     _ADCON0	set	4034
    90  0000                     _ADCON0bits	set	4034
    91  0000                     _ADCON1	set	4033
    92  0000                     _ADCON2	set	4032
    93  0000                     _ADRESH	set	4036
    94  0000                     _ADRESL	set	4035
    95  0000                     _INTCONbits	set	4082
    96  0000                     _PIE1bits	set	3997
    97  0000                     _PIE3bits	set	4003
    98  0000                     _PIR1bits	set	3998
    99  0000                     _PORTEbits	set	3972
   100  0000                     _TMR0H	set	4055
   101  0000                     _TMR0L	set	4054
   102  0000                     _TRISCbits	set	3988
   103  0000                     _TRISD	set	3989
   104  0000                     _TRISE	set	3990
   105  0000                     _TRISGbits	set	3992
   106  0000                     _GIE	set	32663
   107  0000                     _IPEN	set	32391
   108  0000                     _PSA	set	32427
   109  0000                     _RC2IF	set	32037
   110  0000                     _RC3	set	31763
   111  0000                     _RC4	set	31764
   112  0000                     _RD6	set	31774
   113  0000                     _RD7	set	31775
   114  0000                     _RE2	set	31778
   115  0000                     _RE3	set	31779
   116  0000                     _RE4	set	31780
   117  0000                     _RE5	set	31781
   118  0000                     _RE6	set	31782
   119  0000                     _RE7	set	31783
   120  0000                     _RG3	set	31795
   121  0000                     _T08BIT	set	32430
   122  0000                     _T0CS	set	32429
   123  0000                     _T0PS0	set	32424
   124  0000                     _T0PS1	set	32425
   125  0000                     _T0PS2	set	32426
   126  0000                     _T0SE	set	32428
   127  0000                     _TMR0IE	set	32661
   128  0000                     _TMR0IF	set	32658
   129  0000                     _TMR0ON	set	32431
   130                           
   131                           ; #config settings
   132  001011  00                 	db	0	; dummy byte at the end
   133  0000                     
   134                           	psect	cinit
   135  001E26                     __pcinit:
   136                           	opt stack 0
   137  001E26                     start_initialization:
   138                           	opt stack 0
   139  001E26                     __initialization:
   140                           	opt stack 0
   141                           
   142                           ; Clear objects allocated to BANK0 (66 bytes)
   143  001E26  EE00  F060         	lfsr	0,__pbssBANK0
   144  001E2A  0E42               	movlw	66
   145  001E2C                     clear_0:
   146  001E2C  6AEE               	clrf	postinc0,c
   147  001E2E  06E8               	decf	wreg,f,c
   148  001E30  E1FD               	bnz	clear_0
   149                           
   150                           ; Clear objects allocated to COMRAM (21 bytes)
   151  001E32  EE00  F033         	lfsr	0,__pbssCOMRAM
   152  001E36  0E15               	movlw	21
   153  001E38                     clear_1:
   154  001E38  6AEE               	clrf	postinc0,c
   155  001E3A  06E8               	decf	wreg,f,c
   156  001E3C  E1FD               	bnz	clear_1
   157  001E3E                     end_of_initialization:
   158                           	opt stack 0
   159  001E3E                     __end_of__initialization:
   160                           	opt stack 0
   161  001E3E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   162  001E40  6EF8               	movwf	tblptru,c
   163  001E42  0E10               	movlw	high __Lsmallconst
   164  001E44  6EF7               	movwf	tblptrh,c
   165  001E46  0100               	movlb	0
   166  001E48  EF60  F00E         	goto	_main	;jump to C main() function
   167                           tblptru	equ	0xFF8
   168                           tblptrh	equ	0xFF7
   169                           postinc0	equ	0xFEE
   170                           wreg	equ	0xFE8
   171                           
   172                           	psect	bssCOMRAM
   173  000033                     __pbssCOMRAM:
   174                           	opt stack 0
   175  000033                     _Handle_Switch:
   176                           	opt stack 0
   177  000033                     	ds	4
   178  000037                     _Timer_Cyc:
   179                           	opt stack 0
   180  000037                     	ds	4
   181  00003B                     _ADC6_Buff:
   182                           	opt stack 0
   183  00003B                     	ds	3
   184  00003E                     RS485_Receive_Date@RS485_LED:
   185                           	opt stack 0
   186  00003E                     	ds	1
   187  00003F                     Sys_Cyc@RS485_Timer:
   188                           	opt stack 0
   189  00003F                     	ds	1
   190  000040                     Sys_Cyc@_RS485_Receive_Num:
   191                           	opt stack 0
   192  000040                     	ds	1
   193  000041                     Sys_Cyc@_overturn_1Khz:
   194                           	opt stack 0
   195  000041                     	ds	1
   196  000042                     Sys_Cyc@_overturn_LED:
   197                           	opt stack 0
   198  000042                     	ds	1
   199  000043                     _LED2_switch:
   200                           	opt stack 0
   201  000043                     	ds	1
   202  000044                     _RS485_Num:
   203                           	opt stack 0
   204  000044                     	ds	1
   205  000045                     _RS485_Receive_Flag:
   206                           	opt stack 0
   207  000045                     	ds	1
   208  000046                     _Receive_Flag:
   209                           	opt stack 0
   210  000046                     	ds	1
   211  000047                     _g_Addr:
   212                           	opt stack 0
   213  000047                     	ds	1
   214                           tblptru	equ	0xFF8
   215                           tblptrh	equ	0xFF7
   216                           postinc0	equ	0xFEE
   217                           wreg	equ	0xFE8
   218                           
   219                           	psect	bssBANK0
   220  000060                     __pbssBANK0:
   221                           	opt stack 0
   222  000060                     _RS485_ReceiveBuff:
   223                           	opt stack 0
   224  000060                     	ds	10
   225  00006A                     _Local_Key_FSM:
   226                           	opt stack 0
   227  00006A                     	ds	18
   228  00007C                     _Local_Key_User:
   229                           	opt stack 0
   230  00007C                     	ds	18
   231  00008E                     _RS485_SendBuff:
   232                           	opt stack 0
   233  00008E                     	ds	10
   234  000098                     _ReceiveBuff:
   235                           	opt stack 0
   236  000098                     	ds	10
   237                           tblptru	equ	0xFF8
   238                           tblptrh	equ	0xFF7
   239                           postinc0	equ	0xFEE
   240                           wreg	equ	0xFE8
   241                           
   242                           	psect	cstackBANK0
   243  0000A2                     __pcstackBANK0:
   244                           	opt stack 0
   245  0000A2                     ?___ftdiv:
   246                           	opt stack 0
   247  0000A2                     ___ftdiv@f1:
   248                           	opt stack 0
   249                           
   250                           ; 3 bytes @ 0x0
   251  0000A2                     	ds	3
   252  0000A5                     ___ftdiv@f2:
   253                           	opt stack 0
   254                           
   255                           ; 3 bytes @ 0x3
   256  0000A5                     	ds	3
   257  0000A8                     ??___ftdiv:
   258                           
   259                           ; 0 bytes @ 0x6
   260  0000A8                     	ds	3
   261  0000AB                     ___ftdiv@cntr:
   262                           	opt stack 0
   263                           
   264                           ; 1 bytes @ 0x9
   265  0000AB                     	ds	1
   266  0000AC                     ___ftdiv@f3:
   267                           	opt stack 0
   268                           
   269                           ; 3 bytes @ 0xA
   270  0000AC                     	ds	3
   271  0000AF                     ___ftdiv@exp:
   272                           	opt stack 0
   273                           
   274                           ; 1 bytes @ 0xD
   275  0000AF                     	ds	1
   276  0000B0                     ___ftdiv@sign:
   277                           	opt stack 0
   278                           
   279                           ; 1 bytes @ 0xE
   280  0000B0                     	ds	1
   281  0000B1                     Run@i:
   282                           	opt stack 0
   283                           
   284                           ; 2 bytes @ 0xF
   285  0000B1                     	ds	2
   286  0000B3                     main@num:
   287                           	opt stack 0
   288                           
   289                           ; 3 bytes @ 0x11
   290  0000B3                     	ds	3
   291                           tblptru	equ	0xFF8
   292                           tblptrh	equ	0xFF7
   293                           postinc0	equ	0xFEE
   294                           wreg	equ	0xFE8
   295                           
   296                           	psect	cstackCOMRAM
   297  000001                     __pcstackCOMRAM:
   298                           	opt stack 0
   299  000001                     ??_Key_FSM_Read:
   300  000001                     ?___llmod:
   301                           	opt stack 0
   302  000001                     Delay_1Khz@a:
   303                           	opt stack 0
   304  000001                     Key_FSM_Reset@t:
   305                           	opt stack 0
   306  000001                     ___lbmod@divisor:
   307                           	opt stack 0
   308  000001                     i2SetTimer0@_tmr:
   309                           	opt stack 0
   310  000001                     ___llmod@dividend:
   311                           	opt stack 0
   312                           
   313                           ; 4 bytes @ 0x0
   314  000001                     	ds	1
   315  000002                     Delay_1Khz@b:
   316                           	opt stack 0
   317  000002                     ___lbmod@dividend:
   318                           	opt stack 0
   319                           
   320                           ; 1 bytes @ 0x1
   321  000002                     	ds	1
   322  000003                     ??i2_SetTimer0:
   323  000003                     Delay_1Khz@c:
   324                           	opt stack 0
   325  000003                     ___lbmod@counter:
   326                           	opt stack 0
   327                           
   328                           ; 1 bytes @ 0x2
   329  000003                     	ds	1
   330  000004                     ___lbmod@rem:
   331                           	opt stack 0
   332                           
   333                           ; 1 bytes @ 0x3
   334  000004                     	ds	1
   335  000005                     Key_FSM_Read@key_num_mate:
   336                           	opt stack 0
   337  000005                     ___llmod@divisor:
   338                           	opt stack 0
   339                           
   340                           ; 4 bytes @ 0x4
   341  000005                     	ds	1
   342  000006                     Key_FSM_Read@key_num:
   343                           	opt stack 0
   344                           
   345                           ; 1 bytes @ 0x5
   346  000006                     	ds	1
   347  000007                     
   348                           ; 0 bytes @ 0x6
   349  000007                     	ds	2
   350  000009                     ___llmod@counter:
   351                           	opt stack 0
   352                           
   353                           ; 1 bytes @ 0x8
   354  000009                     	ds	1
   355  00000A                     ??_Sys_Cyc:
   356                           
   357                           ; 0 bytes @ 0x9
   358  00000A                     	ds	14
   359  000018                     Sys_Cyc@_pulse:
   360                           	opt stack 0
   361                           
   362                           ; 1 bytes @ 0x17
   363  000018                     	ds	1
   364  000019                     ?_ReadADC:
   365                           	opt stack 0
   366  000019                     ?___wmul:
   367                           	opt stack 0
   368  000019                     ?___lwdiv:
   369                           	opt stack 0
   370  000019                     ?___lwmod:
   371                           	opt stack 0
   372  000019                     ?___ftpack:
   373                           	opt stack 0
   374  000019                     TM1640_Delay@Time:
   375                           	opt stack 0
   376  000019                     OpenADC@config2:
   377                           	opt stack 0
   378  000019                     SetTimer0@_tmr:
   379                           	opt stack 0
   380  000019                     Open2USART@spbrg:
   381                           	opt stack 0
   382  000019                     ___wmul@multiplier:
   383                           	opt stack 0
   384  000019                     ___lwdiv@dividend:
   385                           	opt stack 0
   386  000019                     ___lwmod@dividend:
   387                           	opt stack 0
   388  000019                     ___ftpack@arg:
   389                           	opt stack 0
   390                           
   391                           ; 3 bytes @ 0x18
   392  000019                     	ds	1
   393  00001A                     TM1640_Delay@i:
   394                           	opt stack 0
   395  00001A                     OpenADC@config3:
   396                           	opt stack 0
   397                           
   398                           ; 1 bytes @ 0x19
   399  00001A                     	ds	1
   400  00001B                     ??_SetTimer0:
   401  00001B                     ??_OpenADC:
   402  00001B                     ??_ReadADC:
   403  00001B                     TM1640_Writer_Byte@Date:
   404                           	opt stack 0
   405  00001B                     Open2USART@config:
   406                           	opt stack 0
   407  00001B                     ___wmul@multiplicand:
   408                           	opt stack 0
   409  00001B                     ___lwdiv@divisor:
   410                           	opt stack 0
   411  00001B                     ___lwmod@divisor:
   412                           	opt stack 0
   413                           
   414                           ; 2 bytes @ 0x1A
   415  00001B                     	ds	1
   416  00001C                     TM1640_Writer_Byte@mask:
   417                           	opt stack 0
   418  00001C                     ___ftpack@exp:
   419                           	opt stack 0
   420                           
   421                           ; 1 bytes @ 0x1B
   422  00001C                     	ds	1
   423  00001D                     OpenADC@config:
   424                           	opt stack 0
   425  00001D                     ___ftpack@sign:
   426                           	opt stack 0
   427  00001D                     ___lwdiv@counter:
   428                           	opt stack 0
   429  00001D                     ___lwmod@counter:
   430                           	opt stack 0
   431  00001D                     ___wmul@product:
   432                           	opt stack 0
   433                           
   434                           ; 2 bytes @ 0x1C
   435  00001D                     	ds	1
   436  00001E                     ??___ftpack:
   437  00001E                     TM1640_Writer_Dates@Date:
   438                           	opt stack 0
   439  00001E                     ___lwdiv@quotient:
   440                           	opt stack 0
   441                           
   442                           ; 2 bytes @ 0x1D
   443  00001E                     	ds	1
   444  00001F                     TM1640_Writer_Dates@Addr:
   445                           	opt stack 0
   446  00001F                     CRC_Verify@_pucBuf:
   447                           	opt stack 0
   448                           
   449                           ; 2 bytes @ 0x1E
   450  00001F                     	ds	1
   451  000020                     TM1640_Show_integer@Numbers:
   452                           	opt stack 0
   453                           
   454                           ; 2 bytes @ 0x1F
   455  000020                     	ds	1
   456  000021                     ?___lwtoft:
   457                           	opt stack 0
   458  000021                     CRC_Verify@_usLen:
   459                           	opt stack 0
   460  000021                     ___lwtoft@c:
   461                           	opt stack 0
   462                           
   463                           ; 2 bytes @ 0x20
   464  000021                     	ds	1
   465  000022                     ??_Show_Result:
   466  000022                     CRC_Verify@_ucHByte:
   467                           	opt stack 0
   468                           
   469                           ; 2 bytes @ 0x21
   470  000022                     	ds	2
   471  000024                     ?___ftmul:
   472                           	opt stack 0
   473  000024                     CRC_Verify@_ucLByte:
   474                           	opt stack 0
   475  000024                     ___ftmul@f1:
   476                           	opt stack 0
   477                           
   478                           ; 3 bytes @ 0x23
   479  000024                     	ds	2
   480  000026                     ??_CRC_Verify:
   481                           
   482                           ; 0 bytes @ 0x25
   483  000026                     	ds	1
   484  000027                     CRC_Verify@usCrc:
   485                           	opt stack 0
   486  000027                     ___ftmul@f2:
   487                           	opt stack 0
   488                           
   489                           ; 3 bytes @ 0x26
   490  000027                     	ds	2
   491  000029                     CRC_Verify@i:
   492                           	opt stack 0
   493                           
   494                           ; 1 bytes @ 0x28
   495  000029                     	ds	1
   496  00002A                     ??___ftmul:
   497  00002A                     RS485_Send_Date@date_dress:
   498                           	opt stack 0
   499  00002A                     RS485_Receive_Date@DataBuff:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0x29
   503  00002A                     	ds	2
   504  00002C                     RS485_Send_Date@date_lenth:
   505                           	opt stack 0
   506  00002C                     RS485_Receive_Date@_ucHByte:
   507                           	opt stack 0
   508                           
   509                           ; 1 bytes @ 0x2B
   510  00002C                     	ds	1
   511  00002D                     ??_RS485_Send_Date:
   512  00002D                     RS485_Receive_Date@_ucLByte:
   513                           	opt stack 0
   514  00002D                     ___ftmul@exp:
   515                           	opt stack 0
   516                           
   517                           ; 1 bytes @ 0x2C
   518  00002D                     	ds	1
   519  00002E                     RS485_Receive_Date@n:
   520                           	opt stack 0
   521  00002E                     ___ftmul@f3_as_product:
   522                           	opt stack 0
   523                           
   524                           ; 3 bytes @ 0x2D
   525  00002E                     	ds	1
   526  00002F                     RS485_Send_Date@i:
   527                           	opt stack 0
   528                           
   529                           ; 2 bytes @ 0x2E
   530  00002F                     	ds	2
   531  000031                     ___ftmul@cntr:
   532                           	opt stack 0
   533                           
   534                           ; 1 bytes @ 0x30
   535  000031                     	ds	1
   536  000032                     ___ftmul@sign:
   537                           	opt stack 0
   538                           
   539                           ; 1 bytes @ 0x31
   540  000032                     	ds	1
   541  000033                     tblptru	equ	0xFF8
   542                           tblptrh	equ	0xFF7
   543                           postinc0	equ	0xFEE
   544                           wreg	equ	0xFE8
   545                           
   546                           ; 0 bytes @ 0x32
   547 ;;
   548 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   549 ;;
   550 ;; *************** function _main *****************
   551 ;; Defined at:
   552 ;;		line 37 in file "_01_USER/main.c"
   553 ;; Parameters:    Size  Location     Type
   554 ;;		None
   555 ;; Auto vars:     Size  Location     Type
   556 ;;  num             3   17[BANK0 ] float 
   557 ;; Return value:  Size  Location     Type
   558 ;;                  2   18[None  ] int 
   559 ;; Registers used:
   560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   561 ;; Tracked objects:
   562 ;;		On entry : 0/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   567 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   569 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   570 ;;Total ram usage:        3 bytes
   571 ;; Hardware stack levels required when called:    8
   572 ;; This function calls:
   573 ;;		_ADC6_Init
   574 ;;		_GPIO_Config
   575 ;;		_Init_TM1640
   576 ;;		_Key_Init
   577 ;;		_RS485_Init
   578 ;;		_Run
   579 ;;		_Show_Result
   580 ;;		_Timer0_Init
   581 ;; This function is called by:
   582 ;;		Startup code after reset
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           	psect	text0
   587  001CC0                     __ptext0:
   588                           	opt stack 0
   589  001CC0                     _main:
   590                           	opt stack 23
   591                           
   592                           ;main.c: 40: float num = 0;
   593                           
   594                           ;incstack = 0
   595  001CC0  0E00               	movlw	0
   596  001CC2  0100               	movlb	0	; () banked
   597  001CC4  6FB3               	movwf	main@num& (0+255),b
   598  001CC6  0E00               	movlw	0
   599  001CC8  0100               	movlb	0	; () banked
   600  001CCA  6FB4               	movwf	(main@num+1)& (0+255),b
   601  001CCC  0E00               	movlw	0
   602  001CCE  0100               	movlb	0	; () banked
   603  001CD0  6FB5               	movwf	(main@num+2)& (0+255),b
   604                           
   605                           ; BSR set to: 0
   606                           ;main.c: 43: GPIO_Config();
   607  001CD2  ECC7  F00F         	call	_GPIO_Config	;wreg free
   608                           
   609                           ;main.c: 44: Key_Init();
   610  001CD6  ECCD  F00F         	call	_Key_Init	;wreg free
   611                           
   612                           ;main.c: 45: Timer0_Init();
   613  001CDA  EC4C  F00F         	call	_Timer0_Init	;wreg free
   614                           
   615                           ;main.c: 46: Init_TM1640();
   616  001CDE  EC39  F00F         	call	_Init_TM1640	;wreg free
   617                           
   618                           ;main.c: 47: ADC6_Init();
   619  001CE2  ECAF  F00F         	call	_ADC6_Init	;wreg free
   620                           
   621                           ;main.c: 48: RS485_Init();
   622  001CE6  EC93  F00F         	call	_RS485_Init	;wreg free
   623  001CEA  D000               	goto	l3188
   624  001CEC                     l3188:
   625                           
   626                           ;main.c: 52: {
   627                           ;main.c: 53: Run();
   628  001CEC  EC8D  F00B         	call	_Run	;wreg free
   629                           
   630                           ;main.c: 54: Show_Result();
   631  001CF0  EC5C  F00C         	call	_Show_Result	;wreg free
   632  001CF4  D7FB               	goto	l3188
   633                           
   634                           ;main.c: 55: }
   635                           ;main.c: 57: return 0;
   636                           ;	Return value of _main is never used
   637  001CF6  EFCA  F000         	goto	start
   638  001CFA                     __end_of_main:
   639                           	opt stack 0
   640                           tblptru	equ	0xFF8
   641                           tblptrh	equ	0xFF7
   642                           postinc0	equ	0xFEE
   643                           wreg	equ	0xFE8
   644                           
   645 ;; *************** function _Timer0_Init *****************
   646 ;; Defined at:
   647 ;;		line 41 in file "_01_USER/My_Timer.c"
   648 ;; Parameters:    Size  Location     Type
   649 ;;		None
   650 ;; Auto vars:     Size  Location     Type
   651 ;;		None
   652 ;; Return value:  Size  Location     Type
   653 ;;		None               void
   654 ;; Registers used:
   655 ;;		wreg, status,2, status,0, cstack
   656 ;; Tracked objects:
   657 ;;		On entry : 0/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   665 ;;Total ram usage:        0 bytes
   666 ;; Hardware stack levels used:    1
   667 ;; Hardware stack levels required when called:    4
   668 ;; This function calls:
   669 ;;		_SetTimer0
   670 ;; This function is called by:
   671 ;;		_main
   672 ;; This function uses a non-reentrant model
   673 ;;
   674                           
   675                           	psect	text1
   676  001E98                     __ptext1:
   677                           	opt stack 0
   678  001E98                     _Timer0_Init:
   679                           	opt stack 26
   680                           
   681                           ;My_Timer.c: 43: T08BIT = 0;
   682                           
   683                           ;incstack = 0
   684  001E98  9CD5               	bcf	4053,6,c	;volatile
   685                           
   686                           ;My_Timer.c: 44: T0CS = 0;
   687  001E9A  9AD5               	bcf	4053,5,c	;volatile
   688                           
   689                           ;My_Timer.c: 45: T0SE = 0;
   690  001E9C  98D5               	bcf	4053,4,c	;volatile
   691                           
   692                           ;My_Timer.c: 46: PSA = 0;
   693  001E9E  96D5               	bcf	4053,3,c	;volatile
   694                           
   695                           ;My_Timer.c: 47: T0PS2 = 1;
   696  001EA0  84D5               	bsf	4053,2,c	;volatile
   697                           
   698                           ;My_Timer.c: 48: T0PS1 = 1;
   699  001EA2  82D5               	bsf	4053,1,c	;volatile
   700                           
   701                           ;My_Timer.c: 49: T0PS0 = 1;
   702  001EA4  80D5               	bsf	4053,0,c	;volatile
   703                           
   704                           ;My_Timer.c: 63: SetTimer0(1);
   705  001EA6  0E00               	movlw	0
   706  001EA8  6E1A               	movwf	SetTimer0@_tmr+1,c
   707  001EAA  0E01               	movlw	1
   708  001EAC  6E19               	movwf	SetTimer0@_tmr,c
   709  001EAE  ECCF  F00E         	call	_SetTimer0	;wreg free
   710                           
   711                           ;My_Timer.c: 64: TMR0ON = 1;
   712  001EB2  8ED5               	bsf	4053,7,c	;volatile
   713                           
   714                           ;My_Timer.c: 65: TMR0IE = 1;
   715  001EB4  8AF2               	bsf	intcon,5,c	;volatile
   716                           
   717                           ;My_Timer.c: 66: IPEN = 0;GIE = 1;
   718  001EB6  9ED0               	bcf	4048,7,c	;volatile
   719  001EB8  8EF2               	bsf	intcon,7,c	;volatile
   720  001EBA  0012               	return		;funcret
   721  001EBC                     __end_of_Timer0_Init:
   722                           	opt stack 0
   723                           tblptru	equ	0xFF8
   724                           tblptrh	equ	0xFF7
   725                           intcon	equ	0xFF2
   726                           postinc0	equ	0xFEE
   727                           wreg	equ	0xFE8
   728                           
   729 ;; *************** function _SetTimer0 *****************
   730 ;; Defined at:
   731 ;;		line 79 in file "_01_USER/My_Timer.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;  _tmr            2   24[COMRAM] unsigned int 
   734 ;; Auto vars:     Size  Location     Type
   735 ;;		None
   736 ;; Return value:  Size  Location     Type
   737 ;;		None               void
   738 ;; Registers used:
   739 ;;		wreg, status,2, status,0
   740 ;; Tracked objects:
   741 ;;		On entry : 0/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   745 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   747 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   748 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   749 ;;Total ram usage:        4 bytes
   750 ;; Hardware stack levels used:    1
   751 ;; Hardware stack levels required when called:    3
   752 ;; This function calls:
   753 ;;		Nothing
   754 ;; This function is called by:
   755 ;;		_Timer0_Init
   756 ;; This function uses a non-reentrant model
   757 ;;
   758                           
   759                           	psect	text2
   760  001D9E                     __ptext2:
   761                           	opt stack 0
   762  001D9E                     _SetTimer0:
   763                           	opt stack 26
   764                           
   765                           ;My_Timer.c: 81: if(_tmr > 0xffff) _tmr = 0xffff;
   766                           
   767                           ;incstack = 0
   768  001D9E  D003               	goto	l3062
   769  001DA0  6819               	setf	SetTimer0@_tmr,c
   770  001DA2  681A               	setf	SetTimer0@_tmr+1,c
   771  001DA4  D000               	goto	l3062
   772  001DA6                     l3062:
   773                           
   774                           ;My_Timer.c: 82: _tmr=0xffff-_tmr;
   775  001DA6  C019  F01B         	movff	SetTimer0@_tmr,??_SetTimer0
   776  001DAA  C01A  F01C         	movff	SetTimer0@_tmr+1,??_SetTimer0+1
   777  001DAE  1E1B               	comf	??_SetTimer0,f,c
   778  001DB0  1E1C               	comf	??_SetTimer0+1,f,c
   779  001DB2  4A1B               	infsnz	??_SetTimer0,f,c
   780  001DB4  2A1C               	incf	??_SetTimer0+1,f,c
   781  001DB6  0EFF               	movlw	255
   782  001DB8  241B               	addwf	??_SetTimer0,w,c
   783  001DBA  6E19               	movwf	SetTimer0@_tmr,c
   784  001DBC  0EFF               	movlw	255
   785  001DBE  201C               	addwfc	??_SetTimer0+1,w,c
   786  001DC0  6E1A               	movwf	SetTimer0@_tmr+1,c
   787                           
   788                           ;My_Timer.c: 83: TMR0H = _tmr/256;
   789  001DC2  501A               	movf	SetTimer0@_tmr+1,w,c
   790  001DC4  6ED7               	movwf	4055,c	;volatile
   791                           
   792                           ;My_Timer.c: 84: TMR0L = _tmr%256;
   793  001DC6  C019  FFD6         	movff	SetTimer0@_tmr,4054	;volatile
   794                           
   795                           ;My_Timer.c: 85: TMR0IF = 0;
   796  001DCA  94F2               	bcf	intcon,2,c	;volatile
   797  001DCC  0012               	return		;funcret
   798  001DCE                     __end_of_SetTimer0:
   799                           	opt stack 0
   800                           tblptru	equ	0xFF8
   801                           tblptrh	equ	0xFF7
   802                           intcon	equ	0xFF2
   803                           postinc0	equ	0xFEE
   804                           wreg	equ	0xFE8
   805                           
   806 ;; *************** function _Show_Result *****************
   807 ;; Defined at:
   808 ;;		line 142 in file "_01_USER/Run.c"
   809 ;; Parameters:    Size  Location     Type
   810 ;;		None
   811 ;; Auto vars:     Size  Location     Type
   812 ;;  i               1    0        unsigned char 
   813 ;; Return value:  Size  Location     Type
   814 ;;		None               void
   815 ;; Registers used:
   816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   824 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   825 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   826 ;;Total ram usage:        1 bytes
   827 ;; Hardware stack levels used:    1
   828 ;; Hardware stack levels required when called:    7
   829 ;; This function calls:
   830 ;;		_TM1640_Show_integer
   831 ;;		___wmul
   832 ;; This function is called by:
   833 ;;		_main
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           	psect	text3
   838  0018B8                     __ptext3:
   839                           	opt stack 0
   840  0018B8                     _Show_Result:
   841                           	opt stack 23
   842                           
   843                           ;Run.c: 145: unsigned char i;
   844                           ;Run.c: 146: if( Handle_Switch.Show_Send_Receive )
   845                           
   846                           ;incstack = 0
   847  0018B8  5036               	movf	_Handle_Switch+3,w,c
   848  0018BA  B4D8               	btfsc	status,2,c
   849  0018BC  D01D               	goto	l418
   850                           
   851                           ;Run.c: 147: {
   852                           ;Run.c: 148: TM1640_Show_integer( RS485_SendBuff[RS485_Num] + (RS485_Num * 1000) );
   853  0018BE  C044  F019         	movff	_RS485_Num,___wmul@multiplier
   854  0018C2  6A1A               	clrf	___wmul@multiplier+1,c
   855  0018C4  0E03               	movlw	3
   856  0018C6  6E1C               	movwf	___wmul@multiplicand+1,c
   857  0018C8  0EE8               	movlw	232
   858  0018CA  6E1B               	movwf	___wmul@multiplicand,c
   859  0018CC  ECFF  F00E         	call	___wmul	;wreg free
   860  0018D0  5044               	movf	_RS485_Num,w,c
   861  0018D2  0D01               	mullw	1
   862  0018D4  0E8E               	movlw	low _RS485_SendBuff
   863  0018D6  24F3               	addwf	prodl,w,c
   864  0018D8  6ED9               	movwf	fsr2l,c
   865  0018DA  0E00               	movlw	high _RS485_SendBuff
   866  0018DC  20F4               	addwfc	prodh,w,c
   867  0018DE  6EDA               	movwf	fsr2h,c
   868  0018E0  50DF               	movf	indf2,w,c
   869  0018E2  6E22               	movwf	??_Show_Result& (0+255),c
   870  0018E4  5022               	movf	??_Show_Result,w,c
   871  0018E6  2419               	addwf	?___wmul,w,c
   872  0018E8  6E20               	movwf	TM1640_Show_integer@Numbers,c
   873  0018EA  0E00               	movlw	0
   874  0018EC  201A               	addwfc	?___wmul+1,w,c
   875  0018EE  6E21               	movwf	TM1640_Show_integer@Numbers+1,c
   876  0018F0  EC26  F00A         	call	_TM1640_Show_integer	;wreg free
   877                           
   878                           ;Run.c: 149: PORTEbits.RE7=0;
   879  0018F4  9E84               	bcf	3972,7,c	;volatile
   880                           
   881                           ;Run.c: 150: }
   882  0018F6  0012               	return	
   883  0018F8                     l418:
   884                           
   885                           ;Run.c: 152: else
   886                           ;Run.c: 153: {
   887                           ;Run.c: 154: PORTEbits.RE7=1;
   888  0018F8  8E84               	bsf	3972,7,c	;volatile
   889                           
   890                           ;Run.c: 155: TM1640_Show_integer( ReceiveBuff[RS485_Num] + (RS485_Num * 1000) );
   891  0018FA  C044  F019         	movff	_RS485_Num,___wmul@multiplier
   892  0018FE  6A1A               	clrf	___wmul@multiplier+1,c
   893  001900  0E03               	movlw	3
   894  001902  6E1C               	movwf	___wmul@multiplicand+1,c
   895  001904  0EE8               	movlw	232
   896  001906  6E1B               	movwf	___wmul@multiplicand,c
   897  001908  ECFF  F00E         	call	___wmul	;wreg free
   898  00190C  5044               	movf	_RS485_Num,w,c
   899  00190E  0D01               	mullw	1
   900  001910  0E98               	movlw	low _ReceiveBuff
   901  001912  24F3               	addwf	prodl,w,c
   902  001914  6ED9               	movwf	fsr2l,c
   903  001916  0E00               	movlw	high _ReceiveBuff
   904  001918  20F4               	addwfc	prodh,w,c
   905  00191A  6EDA               	movwf	fsr2h,c
   906  00191C  50DF               	movf	indf2,w,c
   907  00191E  6E22               	movwf	??_Show_Result& (0+255),c
   908  001920  5022               	movf	??_Show_Result,w,c
   909  001922  2419               	addwf	?___wmul,w,c
   910  001924  6E20               	movwf	TM1640_Show_integer@Numbers,c
   911  001926  0E00               	movlw	0
   912  001928  201A               	addwfc	?___wmul+1,w,c
   913  00192A  6E21               	movwf	TM1640_Show_integer@Numbers+1,c
   914  00192C  EC26  F00A         	call	_TM1640_Show_integer	;wreg free
   915  001930  0012               	return	
   916  001932  0012               	return		;funcret
   917  001934                     __end_of_Show_Result:
   918                           	opt stack 0
   919                           tblptru	equ	0xFF8
   920                           tblptrh	equ	0xFF7
   921                           prodh	equ	0xFF4
   922                           prodl	equ	0xFF3
   923                           intcon	equ	0xFF2
   924                           postinc0	equ	0xFEE
   925                           wreg	equ	0xFE8
   926                           indf2	equ	0xFDF
   927                           fsr2h	equ	0xFDA
   928                           fsr2l	equ	0xFD9
   929                           status	equ	0xFD8
   930                           
   931 ;; *************** function _TM1640_Show_integer *****************
   932 ;; Defined at:
   933 ;;		line 55 in file "_01_USER/TM1640.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;  Numbers         2   31[COMRAM] unsigned int 
   936 ;; Auto vars:     Size  Location     Type
   937 ;;		None
   938 ;; Return value:  Size  Location     Type
   939 ;;		None               void
   940 ;; Registers used:
   941 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   947 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   950 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   951 ;;Total ram usage:        2 bytes
   952 ;; Hardware stack levels used:    1
   953 ;; Hardware stack levels required when called:    6
   954 ;; This function calls:
   955 ;;		_TM1640_Writer_Dates
   956 ;;		___lwdiv
   957 ;;		___lwmod
   958 ;; This function is called by:
   959 ;;		_Show_Result
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963                           	psect	text4
   964  00144C                     __ptext4:
   965                           	opt stack 0
   966  00144C                     _TM1640_Show_integer:
   967                           	opt stack 23
   968                           
   969                           ;TM1640.c: 58: TM1640_Writer_Dates(3,LED_Number[Numbers%10]); Numbers/=10;
   970                           
   971                           ;incstack = 0
   972  00144C  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
   973  001450  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
   974  001454  0E00               	movlw	0
   975  001456  6E1C               	movwf	___lwmod@divisor+1,c
   976  001458  0E0A               	movlw	10
   977  00145A  6E1B               	movwf	___lwmod@divisor,c
   978  00145C  ECD0  F00D         	call	___lwmod	;wreg free
   979  001460  0E01               	movlw	low _LED_Number
   980  001462  2419               	addwf	?___lwmod,w,c
   981  001464  6EF6               	movwf	tblptrl,c
   982  001466  0E10               	movlw	high _LED_Number
   983  001468  201A               	addwfc	?___lwmod+1,w,c
   984  00146A  6EF7               	movwf	tblptrh,c
   985  00146C                     	if	0	;There are less than 3 active tblptr bytes
   986  00146C                     	endif
   987  00146C  0008               	tblrd		*
   988  00146E  CFF5 F01E          	movff	tablat,TM1640_Writer_Dates@Date
   989  001472  0E03               	movlw	3
   990  001474  EC82  F00F         	call	_TM1640_Writer_Dates
   991  001478  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
   992  00147C  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
   993  001480  0E00               	movlw	0
   994  001482  6E1C               	movwf	___lwdiv@divisor+1,c
   995  001484  0E0A               	movlw	10
   996  001486  6E1B               	movwf	___lwdiv@divisor,c
   997  001488  EC7B  F00D         	call	___lwdiv	;wreg free
   998  00148C  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
   999  001490  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1000                           
  1001                           ;TM1640.c: 59: TM1640_Writer_Dates(2,LED_Number[Numbers%10]); Numbers/=10;
  1002  001494  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1003  001498  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1004  00149C  0E00               	movlw	0
  1005  00149E  6E1C               	movwf	___lwmod@divisor+1,c
  1006  0014A0  0E0A               	movlw	10
  1007  0014A2  6E1B               	movwf	___lwmod@divisor,c
  1008  0014A4  ECD0  F00D         	call	___lwmod	;wreg free
  1009  0014A8  0E01               	movlw	low _LED_Number
  1010  0014AA  2419               	addwf	?___lwmod,w,c
  1011  0014AC  6EF6               	movwf	tblptrl,c
  1012  0014AE  0E10               	movlw	high _LED_Number
  1013  0014B0  201A               	addwfc	?___lwmod+1,w,c
  1014  0014B2  6EF7               	movwf	tblptrh,c
  1015  0014B4                     	if	0	;There are less than 3 active tblptr bytes
  1016  0014B4                     	endif
  1017  0014B4  0008               	tblrd		*
  1018  0014B6  CFF5 F01E          	movff	tablat,TM1640_Writer_Dates@Date
  1019  0014BA  0E02               	movlw	2
  1020  0014BC  EC82  F00F         	call	_TM1640_Writer_Dates
  1021  0014C0  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1022  0014C4  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1023  0014C8  0E00               	movlw	0
  1024  0014CA  6E1C               	movwf	___lwdiv@divisor+1,c
  1025  0014CC  0E0A               	movlw	10
  1026  0014CE  6E1B               	movwf	___lwdiv@divisor,c
  1027  0014D0  EC7B  F00D         	call	___lwdiv	;wreg free
  1028  0014D4  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1029  0014D8  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1030                           
  1031                           ;TM1640.c: 60: TM1640_Writer_Dates(1,LED_Number[Numbers%10]); Numbers/=10;
  1032  0014DC  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1033  0014E0  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1034  0014E4  0E00               	movlw	0
  1035  0014E6  6E1C               	movwf	___lwmod@divisor+1,c
  1036  0014E8  0E0A               	movlw	10
  1037  0014EA  6E1B               	movwf	___lwmod@divisor,c
  1038  0014EC  ECD0  F00D         	call	___lwmod	;wreg free
  1039  0014F0  0E01               	movlw	low _LED_Number
  1040  0014F2  2419               	addwf	?___lwmod,w,c
  1041  0014F4  6EF6               	movwf	tblptrl,c
  1042  0014F6  0E10               	movlw	high _LED_Number
  1043  0014F8  201A               	addwfc	?___lwmod+1,w,c
  1044  0014FA  6EF7               	movwf	tblptrh,c
  1045  0014FC                     	if	0	;There are less than 3 active tblptr bytes
  1046  0014FC                     	endif
  1047  0014FC  0008               	tblrd		*
  1048  0014FE  CFF5 F01E          	movff	tablat,TM1640_Writer_Dates@Date
  1049  001502  0E01               	movlw	1
  1050  001504  EC82  F00F         	call	_TM1640_Writer_Dates
  1051  001508  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1052  00150C  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1053  001510  0E00               	movlw	0
  1054  001512  6E1C               	movwf	___lwdiv@divisor+1,c
  1055  001514  0E0A               	movlw	10
  1056  001516  6E1B               	movwf	___lwdiv@divisor,c
  1057  001518  EC7B  F00D         	call	___lwdiv	;wreg free
  1058  00151C  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1059  001520  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1060                           
  1061                           ;TM1640.c: 61: TM1640_Writer_Dates(0,LED_Number[Numbers%10]);
  1062  001524  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1063  001528  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1064  00152C  0E00               	movlw	0
  1065  00152E  6E1C               	movwf	___lwmod@divisor+1,c
  1066  001530  0E0A               	movlw	10
  1067  001532  6E1B               	movwf	___lwmod@divisor,c
  1068  001534  ECD0  F00D         	call	___lwmod	;wreg free
  1069  001538  0E01               	movlw	low _LED_Number
  1070  00153A  2419               	addwf	?___lwmod,w,c
  1071  00153C  6EF6               	movwf	tblptrl,c
  1072  00153E  0E10               	movlw	high _LED_Number
  1073  001540  201A               	addwfc	?___lwmod+1,w,c
  1074  001542  6EF7               	movwf	tblptrh,c
  1075  001544                     	if	0	;There are less than 3 active tblptr bytes
  1076  001544                     	endif
  1077  001544  0008               	tblrd		*
  1078  001546  CFF5 F01E          	movff	tablat,TM1640_Writer_Dates@Date
  1079  00154A  0E00               	movlw	0
  1080  00154C  EC82  F00F         	call	_TM1640_Writer_Dates
  1081  001550  0012               	return		;funcret
  1082  001552                     __end_of_TM1640_Show_integer:
  1083                           	opt stack 0
  1084                           tblptru	equ	0xFF8
  1085                           tblptrh	equ	0xFF7
  1086                           tblptrl	equ	0xFF6
  1087                           tablat	equ	0xFF5
  1088                           prodh	equ	0xFF4
  1089                           prodl	equ	0xFF3
  1090                           intcon	equ	0xFF2
  1091                           postinc0	equ	0xFEE
  1092                           wreg	equ	0xFE8
  1093                           indf2	equ	0xFDF
  1094                           fsr2h	equ	0xFDA
  1095                           fsr2l	equ	0xFD9
  1096                           status	equ	0xFD8
  1097                           
  1098 ;; *************** function ___lwmod *****************
  1099 ;; Defined at:
  1100 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1101 ;; Parameters:    Size  Location     Type
  1102 ;;  dividend        2   24[COMRAM] unsigned int 
  1103 ;;  divisor         2   26[COMRAM] unsigned int 
  1104 ;; Auto vars:     Size  Location     Type
  1105 ;;  counter         1   28[COMRAM] unsigned char 
  1106 ;; Return value:  Size  Location     Type
  1107 ;;                  2   24[COMRAM] unsigned int 
  1108 ;; Registers used:
  1109 ;;		wreg, status,2, status,0
  1110 ;; Tracked objects:
  1111 ;;		On entry : 0/0
  1112 ;;		On exit  : 0/0
  1113 ;;		Unchanged: 0/0
  1114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1115 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1116 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1118 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1119 ;;Total ram usage:        5 bytes
  1120 ;; Hardware stack levels used:    1
  1121 ;; Hardware stack levels required when called:    3
  1122 ;; This function calls:
  1123 ;;		Nothing
  1124 ;; This function is called by:
  1125 ;;		_TM1640_Show_integer
  1126 ;; This function uses a non-reentrant model
  1127 ;;
  1128                           
  1129                           	psect	text5
  1130  001BA0                     __ptext5:
  1131                           	opt stack 0
  1132  001BA0                     ___lwmod:
  1133                           	opt stack 25
  1134                           
  1135                           ;incstack = 0
  1136  001BA0  501B               	movf	___lwmod@divisor,w,c
  1137  001BA2  101C               	iorwf	___lwmod@divisor+1,w,c
  1138  001BA4  B4D8               	btfsc	status,2,c
  1139  001BA6  D01D               	goto	l1015
  1140  001BA8  0E01               	movlw	1
  1141  001BAA  6E1D               	movwf	___lwmod@counter,c
  1142  001BAC  D005               	goto	l2956
  1143  001BAE                     l2954:
  1144  001BAE  90D8               	bcf	status,0,c
  1145  001BB0  361B               	rlcf	___lwmod@divisor,f,c
  1146  001BB2  361C               	rlcf	___lwmod@divisor+1,f,c
  1147  001BB4  2A1D               	incf	___lwmod@counter,f,c
  1148  001BB6  D000               	goto	l2956
  1149  001BB8                     l2956:
  1150  001BB8  BE1C               	btfsc	___lwmod@divisor+1,7,c
  1151  001BBA  D002               	goto	l2958
  1152  001BBC  D7F8               	goto	l2954
  1153  001BBE  D000               	goto	l2958
  1154  001BC0                     l2958:
  1155  001BC0  501B               	movf	___lwmod@divisor,w,c
  1156  001BC2  5C19               	subwf	___lwmod@dividend,w,c
  1157  001BC4  501C               	movf	___lwmod@divisor+1,w,c
  1158  001BC6  581A               	subwfb	___lwmod@dividend+1,w,c
  1159  001BC8  A0D8               	btfss	status,0,c
  1160  001BCA  D005               	goto	l2962
  1161  001BCC  501B               	movf	___lwmod@divisor,w,c
  1162  001BCE  5E19               	subwf	___lwmod@dividend,f,c
  1163  001BD0  501C               	movf	___lwmod@divisor+1,w,c
  1164  001BD2  5A1A               	subwfb	___lwmod@dividend+1,f,c
  1165  001BD4  D000               	goto	l2962
  1166  001BD6                     l2962:
  1167  001BD6  90D8               	bcf	status,0,c
  1168  001BD8  321C               	rrcf	___lwmod@divisor+1,f,c
  1169  001BDA  321B               	rrcf	___lwmod@divisor,f,c
  1170  001BDC  2E1D               	decfsz	___lwmod@counter,f,c
  1171  001BDE  D7F0               	goto	l2958
  1172  001BE0  D000               	goto	l1015
  1173  001BE2                     l1015:
  1174  001BE2  C019  F019         	movff	___lwmod@dividend,?___lwmod
  1175  001BE6  C01A  F01A         	movff	___lwmod@dividend+1,?___lwmod+1
  1176  001BEA  0012               	return		;funcret
  1177  001BEC                     __end_of___lwmod:
  1178                           	opt stack 0
  1179                           tblptru	equ	0xFF8
  1180                           tblptrh	equ	0xFF7
  1181                           tblptrl	equ	0xFF6
  1182                           tablat	equ	0xFF5
  1183                           prodh	equ	0xFF4
  1184                           prodl	equ	0xFF3
  1185                           intcon	equ	0xFF2
  1186                           postinc0	equ	0xFEE
  1187                           wreg	equ	0xFE8
  1188                           indf2	equ	0xFDF
  1189                           fsr2h	equ	0xFDA
  1190                           fsr2l	equ	0xFD9
  1191                           status	equ	0xFD8
  1192                           
  1193 ;; *************** function ___lwdiv *****************
  1194 ;; Defined at:
  1195 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;  dividend        2   24[COMRAM] unsigned int 
  1198 ;;  divisor         2   26[COMRAM] unsigned int 
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;  quotient        2   29[COMRAM] unsigned int 
  1201 ;;  counter         1   28[COMRAM] unsigned char 
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  2   24[COMRAM] unsigned int 
  1204 ;; Registers used:
  1205 ;;		wreg, status,2, status,0
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1211 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1212 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1214 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1215 ;;Total ram usage:        7 bytes
  1216 ;; Hardware stack levels used:    1
  1217 ;; Hardware stack levels required when called:    3
  1218 ;; This function calls:
  1219 ;;		Nothing
  1220 ;; This function is called by:
  1221 ;;		_TM1640_Show_integer
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225                           	psect	text6
  1226  001AF6                     __ptext6:
  1227                           	opt stack 0
  1228  001AF6                     ___lwdiv:
  1229                           	opt stack 25
  1230                           
  1231                           ;incstack = 0
  1232  001AF6  0E00               	movlw	0
  1233  001AF8  6E1F               	movwf	___lwdiv@quotient+1,c
  1234  001AFA  0E00               	movlw	0
  1235  001AFC  6E1E               	movwf	___lwdiv@quotient,c
  1236  001AFE  501B               	movf	___lwdiv@divisor,w,c
  1237  001B00  101C               	iorwf	___lwdiv@divisor+1,w,c
  1238  001B02  B4D8               	btfsc	status,2,c
  1239  001B04  D021               	goto	l1005
  1240  001B06  0E01               	movlw	1
  1241  001B08  6E1D               	movwf	___lwdiv@counter,c
  1242  001B0A  D005               	goto	l2936
  1243  001B0C                     l2934:
  1244  001B0C  90D8               	bcf	status,0,c
  1245  001B0E  361B               	rlcf	___lwdiv@divisor,f,c
  1246  001B10  361C               	rlcf	___lwdiv@divisor+1,f,c
  1247  001B12  2A1D               	incf	___lwdiv@counter,f,c
  1248  001B14  D000               	goto	l2936
  1249  001B16                     l2936:
  1250  001B16  BE1C               	btfsc	___lwdiv@divisor+1,7,c
  1251  001B18  D002               	goto	l2938
  1252  001B1A  D7F8               	goto	l2934
  1253  001B1C  D000               	goto	l2938
  1254  001B1E                     l2938:
  1255  001B1E  90D8               	bcf	status,0,c
  1256  001B20  361E               	rlcf	___lwdiv@quotient,f,c
  1257  001B22  361F               	rlcf	___lwdiv@quotient+1,f,c
  1258  001B24  501B               	movf	___lwdiv@divisor,w,c
  1259  001B26  5C19               	subwf	___lwdiv@dividend,w,c
  1260  001B28  501C               	movf	___lwdiv@divisor+1,w,c
  1261  001B2A  581A               	subwfb	___lwdiv@dividend+1,w,c
  1262  001B2C  A0D8               	btfss	status,0,c
  1263  001B2E  D006               	goto	l2946
  1264  001B30  501B               	movf	___lwdiv@divisor,w,c
  1265  001B32  5E19               	subwf	___lwdiv@dividend,f,c
  1266  001B34  501C               	movf	___lwdiv@divisor+1,w,c
  1267  001B36  5A1A               	subwfb	___lwdiv@dividend+1,f,c
  1268  001B38  801E               	bsf	___lwdiv@quotient,0,c
  1269  001B3A  D000               	goto	l2946
  1270  001B3C                     l2946:
  1271  001B3C  90D8               	bcf	status,0,c
  1272  001B3E  321C               	rrcf	___lwdiv@divisor+1,f,c
  1273  001B40  321B               	rrcf	___lwdiv@divisor,f,c
  1274  001B42  2E1D               	decfsz	___lwdiv@counter,f,c
  1275  001B44  D7EC               	goto	l2938
  1276  001B46  D000               	goto	l1005
  1277  001B48                     l1005:
  1278  001B48  C01E  F019         	movff	___lwdiv@quotient,?___lwdiv
  1279  001B4C  C01F  F01A         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1280  001B50  0012               	return		;funcret
  1281  001B52                     __end_of___lwdiv:
  1282                           	opt stack 0
  1283                           tblptru	equ	0xFF8
  1284                           tblptrh	equ	0xFF7
  1285                           tblptrl	equ	0xFF6
  1286                           tablat	equ	0xFF5
  1287                           prodh	equ	0xFF4
  1288                           prodl	equ	0xFF3
  1289                           intcon	equ	0xFF2
  1290                           postinc0	equ	0xFEE
  1291                           wreg	equ	0xFE8
  1292                           indf2	equ	0xFDF
  1293                           fsr2h	equ	0xFDA
  1294                           fsr2l	equ	0xFD9
  1295                           status	equ	0xFD8
  1296                           
  1297 ;; *************** function _TM1640_Writer_Dates *****************
  1298 ;; Defined at:
  1299 ;;		line 66 in file "_01_USER/TM1640.c"
  1300 ;; Parameters:    Size  Location     Type
  1301 ;;  Addr            1    wreg     unsigned char 
  1302 ;;  Date            1   29[COMRAM] unsigned char 
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;  Addr            1   30[COMRAM] unsigned char 
  1305 ;; Return value:  Size  Location     Type
  1306 ;;		None               void
  1307 ;; Registers used:
  1308 ;;		wreg, status,2, status,0, cstack
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1314 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1315 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1317 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1318 ;;Total ram usage:        2 bytes
  1319 ;; Hardware stack levels used:    1
  1320 ;; Hardware stack levels required when called:    5
  1321 ;; This function calls:
  1322 ;;		_TM1640_Start
  1323 ;;		_TM1640_Stop
  1324 ;;		_TM1640_Writer_Byte
  1325 ;; This function is called by:
  1326 ;;		_TM1640_Show_integer
  1327 ;;		_TM1640_Show_Decimal
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           
  1331                           	psect	text7
  1332  001F04                     __ptext7:
  1333                           	opt stack 0
  1334  001F04                     _TM1640_Writer_Dates:
  1335                           	opt stack 23
  1336                           
  1337                           ;incstack = 0
  1338                           ;TM1640_Writer_Dates@Addr stored from wreg
  1339  001F04  6E1F               	movwf	TM1640_Writer_Dates@Addr,c
  1340                           
  1341                           ;TM1640.c: 68: if((Addr >= 0) && (Addr <= 3))
  1342  001F06  0E04               	movlw	4
  1343  001F08  601F               	cpfslt	TM1640_Writer_Dates@Addr,c
  1344  001F0A  0012               	return	
  1345                           
  1346                           ;TM1640.c: 69: {
  1347                           ;TM1640.c: 70: TM1640_Start();
  1348  001F0C  EC70  F00F         	call	_TM1640_Start	;wreg free
  1349                           
  1350                           ;TM1640.c: 71: TM1640_Writer_Byte(0xC0 + Addr);
  1351  001F10  501F               	movf	TM1640_Writer_Dates@Addr,w,c
  1352  001F12  0FC0               	addlw	192
  1353  001F14  EC41  F00E         	call	_TM1640_Writer_Byte
  1354                           
  1355                           ;TM1640.c: 72: TM1640_Writer_Byte(Date);
  1356  001F18  501E               	movf	TM1640_Writer_Dates@Date,w,c
  1357  001F1A  EC41  F00E         	call	_TM1640_Writer_Byte
  1358                           
  1359                           ;TM1640.c: 73: TM1640_Stop();
  1360  001F1E  EC5E  F00F         	call	_TM1640_Stop	;wreg free
  1361  001F22  0012               	return	
  1362  001F24  0012               	return		;funcret
  1363  001F26                     __end_of_TM1640_Writer_Dates:
  1364                           	opt stack 0
  1365                           tblptru	equ	0xFF8
  1366                           tblptrh	equ	0xFF7
  1367                           tblptrl	equ	0xFF6
  1368                           tablat	equ	0xFF5
  1369                           prodh	equ	0xFF4
  1370                           prodl	equ	0xFF3
  1371                           intcon	equ	0xFF2
  1372                           postinc0	equ	0xFEE
  1373                           wreg	equ	0xFE8
  1374                           indf2	equ	0xFDF
  1375                           fsr2h	equ	0xFDA
  1376                           fsr2l	equ	0xFD9
  1377                           status	equ	0xFD8
  1378                           
  1379 ;; *************** function _Run *****************
  1380 ;; Defined at:
  1381 ;;		line 109 in file "_01_USER/Run.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;		None
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;  i               2   15[BANK0 ] int 
  1386 ;; Return value:  Size  Location     Type
  1387 ;;		None               void
  1388 ;; Registers used:
  1389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1396 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1398 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1399 ;;Total ram usage:        2 bytes
  1400 ;; Hardware stack levels used:    1
  1401 ;; Hardware stack levels required when called:    6
  1402 ;; This function calls:
  1403 ;;		_Get_ADC6
  1404 ;;		_RS485_Receive_Date
  1405 ;;		_RS485_Send_Date
  1406 ;; This function is called by:
  1407 ;;		_main
  1408 ;; This function uses a non-reentrant model
  1409 ;;
  1410                           
  1411                           	psect	text8
  1412  00171A                     __ptext8:
  1413                           	opt stack 0
  1414  00171A                     _Run:
  1415                           	opt stack 24
  1416                           
  1417                           ;Run.c: 111: int i;
  1418                           ;Run.c: 113: if( Handle_Switch.ADC6 ) Get_ADC6();
  1419                           
  1420                           ;incstack = 0
  1421  00171A  5034               	movf	_Handle_Switch+1,w,c
  1422  00171C  B4D8               	btfsc	status,2,c
  1423  00171E  D003               	goto	l3144
  1424  001720  EC45  F00D         	call	_Get_ADC6	;wreg free
  1425  001724  D000               	goto	l3144
  1426  001726                     l3144:
  1427                           
  1428                           ;Run.c: 116: if ( Handle_Switch.Usart_OneDate )
  1429  001726  5035               	movf	_Handle_Switch+2,w,c
  1430  001728  B4D8               	btfsc	status,2,c
  1431  00172A  D00B               	goto	l3150
  1432                           
  1433                           ;Run.c: 117: {
  1434                           ;Run.c: 118: Handle_Switch.Usart_OneDate = 0;
  1435  00172C  0E00               	movlw	0
  1436  00172E  6E35               	movwf	_Handle_Switch+2,c
  1437                           
  1438                           ;Run.c: 119: RS485_Send_Date(RS485_SendBuff,10);
  1439  001730  0E8E               	movlw	low _RS485_SendBuff
  1440  001732  6E2A               	movwf	RS485_Send_Date@date_dress,c
  1441  001734  0E00               	movlw	high _RS485_SendBuff
  1442  001736  6E2B               	movwf	RS485_Send_Date@date_dress+1,c
  1443  001738  0E0A               	movlw	10
  1444  00173A  6E2C               	movwf	RS485_Send_Date@date_lenth,c
  1445  00173C  EC9A  F00C         	call	_RS485_Send_Date	;wreg free
  1446  001740  D000               	goto	l3150
  1447  001742                     l3150:
  1448                           
  1449                           ;Run.c: 120: }
  1450                           ;Run.c: 121: RS485_Receive_Date(ReceiveBuff);
  1451  001742  0E98               	movlw	low _ReceiveBuff
  1452  001744  6E2A               	movwf	RS485_Receive_Date@DataBuff,c
  1453  001746  0E00               	movlw	high _ReceiveBuff
  1454  001748  6E2B               	movwf	RS485_Receive_Date@DataBuff+1,c
  1455  00174A  ECD6  F00B         	call	_RS485_Receive_Date	;wreg free
  1456                           
  1457                           ;Run.c: 123: if(Receive_Flag)
  1458  00174E  5046               	movf	_Receive_Flag,w,c
  1459  001750  B4D8               	btfsc	status,2,c
  1460  001752  0012               	return	
  1461                           
  1462                           ;Run.c: 124: {
  1463                           ;Run.c: 125: Receive_Flag = 0;
  1464  001754  0E00               	movlw	0
  1465  001756  6E46               	movwf	_Receive_Flag,c
  1466                           
  1467                           ;Run.c: 126: for(i = 0;i < 10;i++)
  1468  001758  0E00               	movlw	0
  1469  00175A  0100               	movlb	0	; () banked
  1470  00175C  6FB2               	movwf	(Run@i+1)& (0+255),b
  1471  00175E  0E00               	movlw	0
  1472  001760  6FB1               	movwf	Run@i& (0+255),b
  1473  001762                     l3156:
  1474                           
  1475                           ; BSR set to: 0
  1476  001762  0100               	movlb	0	; () banked
  1477  001764  BFB2               	btfsc	(Run@i+1)& (0+255),7,b
  1478  001766  D00A               	goto	l3160
  1479  001768  0100               	movlb	0	; () banked
  1480  00176A  51B2               	movf	(Run@i+1)& (0+255),w,b
  1481  00176C  E11E               	bnz	l415
  1482  00176E  0E0A               	movlw	10
  1483  001770  0100               	movlb	0	; () banked
  1484  001772  5DB1               	subwf	Run@i& (0+255),w,b
  1485  001774  B0D8               	btfsc	status,0,c
  1486  001776  0012               	return	
  1487  001778  D001               	goto	l3160
  1488                           
  1489                           ; BSR set to: 0
  1490  00177A  0012               	return	
  1491  00177C                     l3160:
  1492                           
  1493                           ; BSR set to: 0
  1494                           ;Run.c: 127: RS485_SendBuff[i] = ReceiveBuff[i];
  1495  00177C  0E98               	movlw	low _ReceiveBuff
  1496  00177E  0100               	movlb	0	; () banked
  1497  001780  25B1               	addwf	Run@i& (0+255),w,b
  1498  001782  6ED9               	movwf	fsr2l,c
  1499  001784  0E00               	movlw	high _ReceiveBuff
  1500  001786  0100               	movlb	0	; () banked
  1501  001788  21B2               	addwfc	(Run@i+1)& (0+255),w,b
  1502  00178A  6EDA               	movwf	fsr2h,c
  1503  00178C  0E8E               	movlw	low _RS485_SendBuff
  1504  00178E  0100               	movlb	0	; () banked
  1505  001790  25B1               	addwf	Run@i& (0+255),w,b
  1506  001792  6EE1               	movwf	fsr1l,c
  1507  001794  0E00               	movlw	high _RS485_SendBuff
  1508  001796  0100               	movlb	0	; () banked
  1509  001798  21B2               	addwfc	(Run@i+1)& (0+255),w,b
  1510  00179A  6EE2               	movwf	fsr1h,c
  1511  00179C  CFDF FFE7          	movff	indf2,indf1
  1512                           
  1513                           ; BSR set to: 0
  1514  0017A0  0100               	movlb	0	; () banked
  1515  0017A2  4BB1               	infsnz	Run@i& (0+255),f,b
  1516  0017A4  2BB2               	incf	(Run@i+1)& (0+255),f,b
  1517  0017A6  D7DD               	goto	l3156
  1518                           
  1519                           ; BSR set to: 0
  1520                           
  1521                           ; BSR set to: 0
  1522  0017A8  0012               	return	
  1523  0017AA                     l415:
  1524  0017AA  0012               	return		;funcret
  1525  0017AC                     __end_of_Run:
  1526                           	opt stack 0
  1527                           tblptru	equ	0xFF8
  1528                           tblptrh	equ	0xFF7
  1529                           tblptrl	equ	0xFF6
  1530                           tablat	equ	0xFF5
  1531                           prodh	equ	0xFF4
  1532                           prodl	equ	0xFF3
  1533                           intcon	equ	0xFF2
  1534                           postinc0	equ	0xFEE
  1535                           wreg	equ	0xFE8
  1536                           indf1	equ	0xFE7
  1537                           fsr1h	equ	0xFE2
  1538                           fsr1l	equ	0xFE1
  1539                           indf2	equ	0xFDF
  1540                           fsr2h	equ	0xFDA
  1541                           fsr2l	equ	0xFD9
  1542                           status	equ	0xFD8
  1543                           
  1544 ;; *************** function _RS485_Send_Date *****************
  1545 ;; Defined at:
  1546 ;;		line 75 in file "_01_USER/My_USART.c"
  1547 ;; Parameters:    Size  Location     Type
  1548 ;;  date_dress      2   41[COMRAM] PTR unsigned char 
  1549 ;;		 -> RS485_SendBuff(10), 
  1550 ;;  date_lenth      1   43[COMRAM] unsigned char 
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;  i               2   46[COMRAM] unsigned int 
  1553 ;; Return value:  Size  Location     Type
  1554 ;;		None               void
  1555 ;; Registers used:
  1556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1562 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1563 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1564 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1565 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1566 ;;Total ram usage:        7 bytes
  1567 ;; Hardware stack levels used:    1
  1568 ;; Hardware stack levels required when called:    5
  1569 ;; This function calls:
  1570 ;;		_CRC_Verify
  1571 ;; This function is called by:
  1572 ;;		_Run
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           	psect	text9
  1577  001934                     __ptext9:
  1578                           	opt stack 0
  1579  001934                     _RS485_Send_Date:
  1580                           	opt stack 24
  1581                           
  1582                           ;My_USART.c: 77: unsigned int i;
  1583                           ;My_USART.c: 78: while( (!TXSTA2bits.TRMT));
  1584                           
  1585                           ;incstack = 0
  1586  001934  D000               	goto	l160
  1587  001936                     l160:
  1588  001936  010F               	movlb	15	; () banked
  1589  001938  A321               	btfss	33,1,b	;volatile
  1590  00193A  D7FD               	goto	l160
  1591                           
  1592                           ; BSR set to: 15
  1593                           ;My_USART.c: 79: RG3 = 0;
  1594  00193C  9686               	bcf	3974,3,c	;volatile
  1595                           
  1596                           ; BSR set to: 15
  1597                           ;My_USART.c: 82: date_dress[0] = 0xaa;
  1598  00193E  C02A  FFD9         	movff	RS485_Send_Date@date_dress,fsr2l
  1599  001942  C02B  FFDA         	movff	RS485_Send_Date@date_dress+1,fsr2h
  1600  001946  0EAA               	movlw	170
  1601  001948  6EDF               	movwf	indf2,c
  1602                           
  1603                           ; BSR set to: 15
  1604                           ;My_USART.c: 85: CRC_Verify(date_dress,date_lenth - 2,&RS485_SendBuff[8],&RS485_SendBuff
      +                          [9]);
  1605  00194A  C02A  F01F         	movff	RS485_Send_Date@date_dress,CRC_Verify@_pucBuf
  1606  00194E  C02B  F020         	movff	RS485_Send_Date@date_dress+1,CRC_Verify@_pucBuf+1
  1607  001952  502C               	movf	RS485_Send_Date@date_lenth,w,c
  1608  001954  0FFE               	addlw	254
  1609  001956  6E21               	movwf	CRC_Verify@_usLen,c
  1610  001958  0E96               	movlw	low (_RS485_SendBuff+8)
  1611  00195A  6E22               	movwf	CRC_Verify@_ucHByte,c
  1612  00195C  0E00               	movlw	high (_RS485_SendBuff+8)
  1613  00195E  6E23               	movwf	CRC_Verify@_ucHByte+1,c
  1614  001960  0E97               	movlw	low (_RS485_SendBuff+9)
  1615  001962  6E24               	movwf	CRC_Verify@_ucLByte,c
  1616  001964  0E00               	movlw	high (_RS485_SendBuff+9)
  1617  001966  6E25               	movwf	CRC_Verify@_ucLByte+1,c
  1618  001968  EC0E  F00D         	call	_CRC_Verify	;wreg free
  1619                           
  1620                           ;My_USART.c: 88: for( i = 0; i < date_lenth ; i++ )
  1621  00196C  0E00               	movlw	0
  1622  00196E  6E30               	movwf	RS485_Send_Date@i+1,c
  1623  001970  0E00               	movlw	0
  1624  001972  6E2F               	movwf	RS485_Send_Date@i,c
  1625  001974  D010               	goto	l3022
  1626  001976                     l3018:
  1627                           
  1628                           ;My_USART.c: 89: {
  1629                           ;My_USART.c: 90: TXREG2 = date_dress[i];
  1630  001976  502F               	movf	RS485_Send_Date@i,w,c
  1631  001978  242A               	addwf	RS485_Send_Date@date_dress,w,c
  1632  00197A  6ED9               	movwf	fsr2l,c
  1633  00197C  5030               	movf	RS485_Send_Date@i+1,w,c
  1634  00197E  202B               	addwfc	RS485_Send_Date@date_dress+1,w,c
  1635  001980  6EDA               	movwf	fsr2h,c
  1636  001982  50DF               	movf	indf2,w,c
  1637  001984  010F               	movlb	15	; () banked
  1638  001986  6F1C               	movwf	28,b	;volatile
  1639                           
  1640                           ;My_USART.c: 91: while( (!TXSTA2bits.TRMT));
  1641  001988  D000               	goto	l165
  1642  00198A                     l165:
  1643                           
  1644                           ; BSR set to: 15
  1645  00198A  010F               	movlb	15	; () banked
  1646  00198C  A321               	btfss	33,1,b	;volatile
  1647  00198E  D7FD               	goto	l165
  1648                           
  1649                           ; BSR set to: 15
  1650                           
  1651                           ; BSR set to: 15
  1652  001990  4A2F               	infsnz	RS485_Send_Date@i,f,c
  1653  001992  2A30               	incf	RS485_Send_Date@i+1,f,c
  1654  001994  D000               	goto	l3022
  1655  001996                     l3022:
  1656  001996  502C               	movf	RS485_Send_Date@date_lenth,w,c
  1657  001998  6E2D               	movwf	??_RS485_Send_Date& (0+255),c
  1658  00199A  6A2E               	clrf	(??_RS485_Send_Date+1)& (0+255),c
  1659  00199C  502D               	movf	??_RS485_Send_Date,w,c
  1660  00199E  5C2F               	subwf	RS485_Send_Date@i,w,c
  1661  0019A0  502E               	movf	??_RS485_Send_Date+1,w,c
  1662  0019A2  5830               	subwfb	RS485_Send_Date@i+1,w,c
  1663  0019A4  A0D8               	btfss	status,0,c
  1664  0019A6  D7E7               	goto	l3018
  1665                           
  1666                           ;My_USART.c: 92: }
  1667                           ;My_USART.c: 94: RG3 = 1;
  1668  0019A8  8686               	bsf	3974,3,c	;volatile
  1669  0019AA  0012               	return		;funcret
  1670  0019AC                     __end_of_RS485_Send_Date:
  1671                           	opt stack 0
  1672                           tblptru	equ	0xFF8
  1673                           tblptrh	equ	0xFF7
  1674                           tblptrl	equ	0xFF6
  1675                           tablat	equ	0xFF5
  1676                           prodh	equ	0xFF4
  1677                           prodl	equ	0xFF3
  1678                           intcon	equ	0xFF2
  1679                           postinc0	equ	0xFEE
  1680                           wreg	equ	0xFE8
  1681                           indf1	equ	0xFE7
  1682                           fsr1h	equ	0xFE2
  1683                           fsr1l	equ	0xFE1
  1684                           indf2	equ	0xFDF
  1685                           fsr2h	equ	0xFDA
  1686                           fsr2l	equ	0xFD9
  1687                           status	equ	0xFD8
  1688                           
  1689 ;; *************** function _RS485_Receive_Date *****************
  1690 ;; Defined at:
  1691 ;;		line 106 in file "_01_USER/My_USART.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;  DataBuff        2   41[COMRAM] PTR unsigned char 
  1694 ;;		 -> ReceiveBuff(10), 
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;  n               2   45[COMRAM] unsigned int 
  1697 ;;  _ucLByte        1   44[COMRAM] unsigned char 
  1698 ;;  _ucHByte        1   43[COMRAM] unsigned char 
  1699 ;; Return value:  Size  Location     Type
  1700 ;;                  1    wreg      unsigned char 
  1701 ;; Registers used:
  1702 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1703 ;; Tracked objects:
  1704 ;;		On entry : 0/0
  1705 ;;		On exit  : 0/0
  1706 ;;		Unchanged: 0/0
  1707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1708 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1709 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1711 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1712 ;;Total ram usage:        6 bytes
  1713 ;; Hardware stack levels used:    1
  1714 ;; Hardware stack levels required when called:    5
  1715 ;; This function calls:
  1716 ;;		_CRC_Verify
  1717 ;; This function is called by:
  1718 ;;		_Run
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722                           	psect	text10
  1723  0017AC                     __ptext10:
  1724                           	opt stack 0
  1725  0017AC                     _RS485_Receive_Date:
  1726                           	opt stack 24
  1727                           
  1728                           ;My_USART.c: 108: unsigned n;
  1729                           ;My_USART.c: 109: unsigned char _ucHByte;
  1730                           ;My_USART.c: 110: unsigned char _ucLByte;
  1731                           ;My_USART.c: 111: static unsigned char RS485_LED = 0;
  1732                           ;My_USART.c: 113: if(RS485_Receive_Flag)
  1733                           
  1734                           ;incstack = 0
  1735  0017AC  5045               	movf	_RS485_Receive_Flag,w,c
  1736  0017AE  B4D8               	btfsc	status,2,c
  1737  0017B0  0012               	return	
  1738                           
  1739                           ;My_USART.c: 114: {
  1740                           ;My_USART.c: 115: RS485_Receive_Flag = 0;
  1741  0017B2  0E00               	movlw	0
  1742  0017B4  6E45               	movwf	_RS485_Receive_Flag,c
  1743                           
  1744                           ;My_USART.c: 116: if( RS485_ReceiveBuff[1] == g_Addr )
  1745  0017B6  5047               	movf	_g_Addr,w,c
  1746  0017B8  0100               	movlb	0	; () banked
  1747  0017BA  1961               	xorwf	(_RS485_ReceiveBuff+1)& (0+255),w,b
  1748  0017BC  A4D8               	btfss	status,2,c
  1749  0017BE  D028               	goto	l3050
  1750                           
  1751                           ; BSR set to: 0
  1752                           ;My_USART.c: 117: {
  1753                           ;My_USART.c: 118: for(n = 0; n<10 ; n++)
  1754  0017C0  0E00               	movlw	0
  1755  0017C2  6E2F               	movwf	RS485_Receive_Date@n+1,c
  1756  0017C4  0E00               	movlw	0
  1757  0017C6  6E2E               	movwf	RS485_Receive_Date@n,c
  1758  0017C8                     l3032:
  1759                           
  1760                           ; BSR set to: 0
  1761  0017C8  502F               	movf	RS485_Receive_Date@n+1,w,c
  1762  0017CA  E118               	bnz	l3042
  1763  0017CC  0E0A               	movlw	10
  1764  0017CE  5C2E               	subwf	RS485_Receive_Date@n,w,c
  1765  0017D0  B0D8               	btfsc	status,0,c
  1766  0017D2  D014               	goto	l3042
  1767  0017D4  D001               	goto	l3036
  1768                           
  1769                           ; BSR set to: 0
  1770  0017D6  D012               	goto	l3042
  1771  0017D8                     l3036:
  1772                           
  1773                           ;My_USART.c: 119: DataBuff[n] = RS485_ReceiveBuff[n];
  1774  0017D8  0E60               	movlw	low _RS485_ReceiveBuff
  1775  0017DA  242E               	addwf	RS485_Receive_Date@n,w,c
  1776  0017DC  6ED9               	movwf	fsr2l,c
  1777  0017DE  0E00               	movlw	high _RS485_ReceiveBuff
  1778  0017E0  202F               	addwfc	RS485_Receive_Date@n+1,w,c
  1779  0017E2  6EDA               	movwf	fsr2h,c
  1780  0017E4  502E               	movf	RS485_Receive_Date@n,w,c
  1781  0017E6  242A               	addwf	RS485_Receive_Date@DataBuff,w,c
  1782  0017E8  6EE1               	movwf	fsr1l,c
  1783  0017EA  502F               	movf	RS485_Receive_Date@n+1,w,c
  1784  0017EC  202B               	addwfc	RS485_Receive_Date@DataBuff+1,w,c
  1785  0017EE  6EE2               	movwf	fsr1h,c
  1786  0017F0  CFDF FFE7          	movff	indf2,indf1
  1787  0017F4  4A2E               	infsnz	RS485_Receive_Date@n,f,c
  1788  0017F6  2A2F               	incf	RS485_Receive_Date@n+1,f,c
  1789  0017F8  D7E7               	goto	l3032
  1790  0017FA  D000               	goto	l3042
  1791  0017FC                     l3042:
  1792                           
  1793                           ;My_USART.c: 120: if(RS485_LED) {PORTEbits.RE6=0;RS485_LED = 0;}
  1794  0017FC  503E               	movf	RS485_Receive_Date@RS485_LED,w,c
  1795  0017FE  B4D8               	btfsc	status,2,c
  1796  001800  D003               	goto	l178
  1797  001802  9C84               	bcf	3972,6,c	;volatile
  1798  001804  0E00               	movlw	0
  1799  001806  D002               	goto	L1
  1800  001808                     l178:
  1801                           
  1802                           ;My_USART.c: 121: else {PORTEbits.RE6=1;RS485_LED = 1;}
  1803  001808  8C84               	bsf	3972,6,c	;volatile
  1804  00180A  0E01               	movlw	1
  1805  00180C                     L1:
  1806  00180C  6E3E               	movwf	RS485_Receive_Date@RS485_LED,c
  1807  00180E  D000               	goto	l3050
  1808  001810                     l3050:
  1809                           
  1810                           ;My_USART.c: 122: }
  1811                           ;My_USART.c: 126: CRC_Verify(DataBuff,10-2,&_ucHByte,&_ucLByte);
  1812  001810  C02A  F01F         	movff	RS485_Receive_Date@DataBuff,CRC_Verify@_pucBuf
  1813  001814  C02B  F020         	movff	RS485_Receive_Date@DataBuff+1,CRC_Verify@_pucBuf+1
  1814  001818  0E08               	movlw	8
  1815  00181A  6E21               	movwf	CRC_Verify@_usLen,c
  1816  00181C  0E2C               	movlw	low RS485_Receive_Date@_ucHByte
  1817  00181E  6E22               	movwf	CRC_Verify@_ucHByte,c
  1818  001820  0E00               	movlw	high RS485_Receive_Date@_ucHByte
  1819  001822  6E23               	movwf	CRC_Verify@_ucHByte+1,c
  1820  001824  0E2D               	movlw	low RS485_Receive_Date@_ucLByte
  1821  001826  6E24               	movwf	CRC_Verify@_ucLByte,c
  1822  001828  0E00               	movlw	high RS485_Receive_Date@_ucLByte
  1823  00182A  6E25               	movwf	CRC_Verify@_ucLByte+1,c
  1824  00182C  EC0E  F00D         	call	_CRC_Verify	;wreg free
  1825                           
  1826                           ;My_USART.c: 133: else return 0;
  1827                           ;	Return value of _RS485_Receive_Date is never used
  1828                           
  1829                           ;My_USART.c: 131: }
  1830                           ;My_USART.c: 132: }
  1831                           
  1832                           ;My_USART.c: 129: {
  1833                           ;My_USART.c: 130: return 1;
  1834                           ;	Return value of _RS485_Receive_Date is never used
  1835  001830  0012               	return	
  1836  001832  0012               	return		;funcret
  1837  001834                     __end_of_RS485_Receive_Date:
  1838                           	opt stack 0
  1839                           tblptru	equ	0xFF8
  1840                           tblptrh	equ	0xFF7
  1841                           tblptrl	equ	0xFF6
  1842                           tablat	equ	0xFF5
  1843                           prodh	equ	0xFF4
  1844                           prodl	equ	0xFF3
  1845                           intcon	equ	0xFF2
  1846                           postinc0	equ	0xFEE
  1847                           wreg	equ	0xFE8
  1848                           indf1	equ	0xFE7
  1849                           fsr1h	equ	0xFE2
  1850                           fsr1l	equ	0xFE1
  1851                           indf2	equ	0xFDF
  1852                           fsr2h	equ	0xFDA
  1853                           fsr2l	equ	0xFD9
  1854                           status	equ	0xFD8
  1855                           
  1856 ;; *************** function _CRC_Verify *****************
  1857 ;; Defined at:
  1858 ;;		line 146 in file "_01_USER/My_USART.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;  _pucBuf         2   30[COMRAM] PTR unsigned char 
  1861 ;;		 -> ReceiveBuff(10), RS485_SendBuff(10), 
  1862 ;;  _usLen          1   32[COMRAM] unsigned char 
  1863 ;;  _ucHByte        2   33[COMRAM] PTR unsigned char 
  1864 ;;		 -> RS485_Receive_Date@_ucHByte(1), RS485_SendBuff(10), 
  1865 ;;  _ucLByte        2   35[COMRAM] PTR unsigned char 
  1866 ;;		 -> RS485_Receive_Date@_ucLByte(1), RS485_SendBuff(10), 
  1867 ;; Auto vars:     Size  Location     Type
  1868 ;;  usCrc           2   38[COMRAM] unsigned int 
  1869 ;;  i               1   40[COMRAM] unsigned char 
  1870 ;; Return value:  Size  Location     Type
  1871 ;;		None               void
  1872 ;; Registers used:
  1873 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1879 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1880 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1881 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1882 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1883 ;;Total ram usage:       11 bytes
  1884 ;; Hardware stack levels used:    1
  1885 ;; Hardware stack levels required when called:    4
  1886 ;; This function calls:
  1887 ;;		___wmul
  1888 ;; This function is called by:
  1889 ;;		_RS485_Send_Date
  1890 ;;		_RS485_Receive_Date
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894                           	psect	text11
  1895  001A1C                     __ptext11:
  1896                           	opt stack 0
  1897  001A1C                     _CRC_Verify:
  1898                           	opt stack 24
  1899                           
  1900                           ;My_USART.c: 148: char i = 0;
  1901                           
  1902                           ;incstack = 0
  1903  001A1C  0E00               	movlw	0
  1904  001A1E  6E29               	movwf	CRC_Verify@i,c
  1905                           
  1906                           ;My_USART.c: 149: unsigned int usCrc = 0;
  1907  001A20  0E00               	movlw	0
  1908  001A22  6E28               	movwf	CRC_Verify@usCrc+1,c
  1909  001A24  0E00               	movlw	0
  1910  001A26  6E27               	movwf	CRC_Verify@usCrc,c
  1911                           
  1912                           ;My_USART.c: 151: for(i = 0 ; i < _usLen ; i++)
  1913  001A28  0E00               	movlw	0
  1914  001A2A  6E29               	movwf	CRC_Verify@i,c
  1915  001A2C  D01D               	goto	l2814
  1916  001A2E                     l2810:
  1917                           
  1918                           ;My_USART.c: 152: usCrc = (usCrc+_pucBuf[i]*(i+1))%65536;
  1919  001A2E  0E01               	movlw	1
  1920  001A30  2429               	addwf	CRC_Verify@i,w,c
  1921  001A32  6E19               	movwf	___wmul@multiplier,c
  1922  001A34  6A1A               	clrf	___wmul@multiplier+1,c
  1923  001A36  0E00               	movlw	0
  1924  001A38  221A               	addwfc	___wmul@multiplier+1,f,c
  1925  001A3A  5029               	movf	CRC_Verify@i,w,c
  1926  001A3C  0D01               	mullw	1
  1927  001A3E  50F3               	movf	prodl,w,c
  1928  001A40  241F               	addwf	CRC_Verify@_pucBuf,w,c
  1929  001A42  6ED9               	movwf	fsr2l,c
  1930  001A44  50F4               	movf	prodh,w,c
  1931  001A46  2020               	addwfc	CRC_Verify@_pucBuf+1,w,c
  1932  001A48  6EDA               	movwf	fsr2h,c
  1933  001A4A  50DF               	movf	indf2,w,c
  1934  001A4C  6E26               	movwf	??_CRC_Verify& (0+255),c
  1935  001A4E  5026               	movf	??_CRC_Verify,w,c
  1936  001A50  6E1B               	movwf	___wmul@multiplicand,c
  1937  001A52  6A1C               	clrf	___wmul@multiplicand+1,c
  1938  001A54  ECFF  F00E         	call	___wmul	;wreg free
  1939  001A58  5027               	movf	CRC_Verify@usCrc,w,c
  1940  001A5A  2419               	addwf	?___wmul,w,c
  1941  001A5C  6E27               	movwf	CRC_Verify@usCrc,c
  1942  001A5E  5028               	movf	CRC_Verify@usCrc+1,w,c
  1943  001A60  201A               	addwfc	?___wmul+1,w,c
  1944  001A62  6E28               	movwf	CRC_Verify@usCrc+1,c
  1945  001A64  2A29               	incf	CRC_Verify@i,f,c
  1946  001A66  D000               	goto	l2814
  1947  001A68                     l2814:
  1948  001A68  5021               	movf	CRC_Verify@_usLen,w,c
  1949  001A6A  5C29               	subwf	CRC_Verify@i,w,c
  1950  001A6C  A0D8               	btfss	status,0,c
  1951  001A6E  D7DF               	goto	l2810
  1952                           
  1953                           ;My_USART.c: 154: *_ucHByte = usCrc / 256;
  1954  001A70  5028               	movf	CRC_Verify@usCrc+1,w,c
  1955  001A72  C022  FFD9         	movff	CRC_Verify@_ucHByte,fsr2l
  1956  001A76  C023  FFDA         	movff	CRC_Verify@_ucHByte+1,fsr2h
  1957  001A7A  6EDF               	movwf	indf2,c
  1958                           
  1959                           ;My_USART.c: 155: *_ucLByte = usCrc % 256;
  1960  001A7C  C024  FFD9         	movff	CRC_Verify@_ucLByte,fsr2l
  1961  001A80  C025  FFDA         	movff	CRC_Verify@_ucLByte+1,fsr2h
  1962  001A84  C027  FFDF         	movff	CRC_Verify@usCrc,indf2
  1963  001A88  0012               	return		;funcret
  1964  001A8A                     __end_of_CRC_Verify:
  1965                           	opt stack 0
  1966                           tblptru	equ	0xFF8
  1967                           tblptrh	equ	0xFF7
  1968                           tblptrl	equ	0xFF6
  1969                           tablat	equ	0xFF5
  1970                           prodh	equ	0xFF4
  1971                           prodl	equ	0xFF3
  1972                           intcon	equ	0xFF2
  1973                           postinc0	equ	0xFEE
  1974                           wreg	equ	0xFE8
  1975                           indf1	equ	0xFE7
  1976                           fsr1h	equ	0xFE2
  1977                           fsr1l	equ	0xFE1
  1978                           indf2	equ	0xFDF
  1979                           fsr2h	equ	0xFDA
  1980                           fsr2l	equ	0xFD9
  1981                           status	equ	0xFD8
  1982                           
  1983 ;; *************** function ___wmul *****************
  1984 ;; Defined at:
  1985 ;;		line 15 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  1986 ;; Parameters:    Size  Location     Type
  1987 ;;  multiplier      2   24[COMRAM] unsigned int 
  1988 ;;  multiplicand    2   26[COMRAM] unsigned int 
  1989 ;; Auto vars:     Size  Location     Type
  1990 ;;  product         2   28[COMRAM] unsigned int 
  1991 ;; Return value:  Size  Location     Type
  1992 ;;                  2   24[COMRAM] unsigned int 
  1993 ;; Registers used:
  1994 ;;		wreg, status,2, status,0, prodl, prodh
  1995 ;; Tracked objects:
  1996 ;;		On entry : 0/0
  1997 ;;		On exit  : 0/0
  1998 ;;		Unchanged: 0/0
  1999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2000 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2001 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2003 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2004 ;;Total ram usage:        6 bytes
  2005 ;; Hardware stack levels used:    1
  2006 ;; Hardware stack levels required when called:    3
  2007 ;; This function calls:
  2008 ;;		Nothing
  2009 ;; This function is called by:
  2010 ;;		_CRC_Verify
  2011 ;;		_Show_Result
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           	psect	text12
  2016  001DFE                     __ptext12:
  2017                           	opt stack 0
  2018  001DFE                     ___wmul:
  2019                           	opt stack 26
  2020                           
  2021                           ;incstack = 0
  2022  001DFE  5019               	movf	___wmul@multiplier,w,c
  2023  001E00  021B               	mulwf	___wmul@multiplicand,c
  2024  001E02  CFF3 F01D          	movff	prodl,___wmul@product
  2025  001E06  CFF4 F01E          	movff	prodh,___wmul@product+1
  2026  001E0A  5019               	movf	___wmul@multiplier,w,c
  2027  001E0C  021C               	mulwf	___wmul@multiplicand+1,c
  2028  001E0E  50F3               	movf	prodl,w,c
  2029  001E10  261E               	addwf	___wmul@product+1,f,c
  2030  001E12  501A               	movf	___wmul@multiplier+1,w,c
  2031  001E14  021B               	mulwf	___wmul@multiplicand,c
  2032  001E16  50F3               	movf	prodl,w,c
  2033  001E18  261E               	addwf	___wmul@product+1,f,c
  2034  001E1A  C01D  F019         	movff	___wmul@product,?___wmul
  2035  001E1E  C01E  F01A         	movff	___wmul@product+1,?___wmul+1
  2036  001E22  0012               	return	
  2037  001E24  0012               	return		;funcret
  2038  001E26                     __end_of___wmul:
  2039                           	opt stack 0
  2040                           tblptru	equ	0xFF8
  2041                           tblptrh	equ	0xFF7
  2042                           tblptrl	equ	0xFF6
  2043                           tablat	equ	0xFF5
  2044                           prodh	equ	0xFF4
  2045                           prodl	equ	0xFF3
  2046                           intcon	equ	0xFF2
  2047                           postinc0	equ	0xFEE
  2048                           wreg	equ	0xFE8
  2049                           indf1	equ	0xFE7
  2050                           fsr1h	equ	0xFE2
  2051                           fsr1l	equ	0xFE1
  2052                           indf2	equ	0xFDF
  2053                           fsr2h	equ	0xFDA
  2054                           fsr2l	equ	0xFD9
  2055                           status	equ	0xFD8
  2056                           
  2057 ;; *************** function _Get_ADC6 *****************
  2058 ;; Defined at:
  2059 ;;		line 67 in file "_01_USER/My_ADC.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;		None
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;		None
  2064 ;; Return value:  Size  Location     Type
  2065 ;;		None               void
  2066 ;; Registers used:
  2067 ;;		wreg, status,2, status,0, cstack
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2077 ;;Total ram usage:        0 bytes
  2078 ;; Hardware stack levels used:    1
  2079 ;; Hardware stack levels required when called:    5
  2080 ;; This function calls:
  2081 ;;		_BusyADC
  2082 ;;		_ConvertADC
  2083 ;;		_ReadADC
  2084 ;;		___ftdiv
  2085 ;;		___ftmul
  2086 ;;		___lwtoft
  2087 ;; This function is called by:
  2088 ;;		_Run
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           	psect	text13
  2093  001A8A                     __ptext13:
  2094                           	opt stack 0
  2095  001A8A                     _Get_ADC6:
  2096                           	opt stack 24
  2097                           
  2098                           ;My_ADC.c: 69: ConvertADC();
  2099                           
  2100                           ;incstack = 0
  2101  001A8A  ECD2  F00F         	call	_ConvertADC	;wreg free
  2102                           
  2103                           ;My_ADC.c: 70: while(BusyADC());
  2104  001A8E  D000               	goto	l3094
  2105  001A90                     l3094:
  2106  001A90  ECC0  F00F         	call	_BusyADC	;wreg free
  2107  001A94  0900               	iorlw	0
  2108  001A96  A4D8               	btfss	status,2,c
  2109  001A98  D7FB               	goto	l3094
  2110                           
  2111                           ;My_ADC.c: 71: ADC6_Buff =(unsigned int)ReadADC()*4.096f/4095.0f;
  2112  001A9A  0E12               	movlw	18
  2113  001A9C  6E27               	movwf	___ftmul@f2,c
  2114  001A9E  0E83               	movlw	131
  2115  001AA0  6E28               	movwf	___ftmul@f2+1,c
  2116  001AA2  0E40               	movlw	64
  2117  001AA4  6E29               	movwf	___ftmul@f2+2,c
  2118  001AA6  ECB8  F00F         	call	_ReadADC	;wreg free
  2119  001AAA  C019  F021         	movff	?_ReadADC,___lwtoft@c
  2120  001AAE  C01A  F022         	movff	?_ReadADC+1,___lwtoft@c+1
  2121  001AB2  EC26  F00F         	call	___lwtoft	;wreg free
  2122  001AB6  C021  F024         	movff	?___lwtoft,___ftmul@f1
  2123  001ABA  C022  F025         	movff	?___lwtoft+1,___ftmul@f1+1
  2124  001ABE  C023  F026         	movff	?___lwtoft+2,___ftmul@f1+2
  2125  001AC2  ECA9  F00A         	call	___ftmul	;wreg free
  2126  001AC6  C024  F0A2         	movff	?___ftmul,___ftdiv@f1
  2127  001ACA  C025  F0A3         	movff	?___ftmul+1,___ftdiv@f1+1
  2128  001ACE  C026  F0A4         	movff	?___ftmul+2,___ftdiv@f1+2
  2129  001AD2  0EF0               	movlw	240
  2130  001AD4  0100               	movlb	0	; () banked
  2131  001AD6  6FA5               	movwf	___ftdiv@f2& (0+255),b
  2132  001AD8  0E7F               	movlw	127
  2133  001ADA  0100               	movlb	0	; () banked
  2134  001ADC  6FA6               	movwf	(___ftdiv@f2+1)& (0+255),b
  2135  001ADE  0E45               	movlw	69
  2136  001AE0  0100               	movlb	0	; () banked
  2137  001AE2  6FA7               	movwf	(___ftdiv@f2+2)& (0+255),b
  2138  001AE4  ECDA  F008         	call	___ftdiv	;wreg free
  2139  001AE8  C0A2  F03B         	movff	?___ftdiv,_ADC6_Buff	;volatile
  2140  001AEC  C0A3  F03C         	movff	?___ftdiv+1,_ADC6_Buff+1	;volatile
  2141  001AF0  C0A4  F03D         	movff	?___ftdiv+2,_ADC6_Buff+2	;volatile
  2142  001AF4  0012               	return		;funcret
  2143  001AF6                     __end_of_Get_ADC6:
  2144                           	opt stack 0
  2145                           tblptru	equ	0xFF8
  2146                           tblptrh	equ	0xFF7
  2147                           tblptrl	equ	0xFF6
  2148                           tablat	equ	0xFF5
  2149                           prodh	equ	0xFF4
  2150                           prodl	equ	0xFF3
  2151                           intcon	equ	0xFF2
  2152                           postinc0	equ	0xFEE
  2153                           wreg	equ	0xFE8
  2154                           indf1	equ	0xFE7
  2155                           fsr1h	equ	0xFE2
  2156                           fsr1l	equ	0xFE1
  2157                           indf2	equ	0xFDF
  2158                           fsr2h	equ	0xFDA
  2159                           fsr2l	equ	0xFD9
  2160                           status	equ	0xFD8
  2161                           
  2162 ;; *************** function ___lwtoft *****************
  2163 ;; Defined at:
  2164 ;;		line 28 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;  c               2   32[COMRAM] unsigned int 
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;		None
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  3   32[COMRAM] float 
  2171 ;; Registers used:
  2172 ;;		wreg, status,2, status,0, cstack
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2178 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2181 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2182 ;;Total ram usage:        3 bytes
  2183 ;; Hardware stack levels used:    1
  2184 ;; Hardware stack levels required when called:    4
  2185 ;; This function calls:
  2186 ;;		___ftpack
  2187 ;; This function is called by:
  2188 ;;		_Get_ADC6
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192                           	psect	text14
  2193  001E4C                     __ptext14:
  2194                           	opt stack 0
  2195  001E4C                     ___lwtoft:
  2196                           	opt stack 24
  2197                           
  2198                           ;incstack = 0
  2199  001E4C  C021  F019         	movff	___lwtoft@c,___ftpack@arg
  2200  001E50  C022  F01A         	movff	___lwtoft@c+1,___ftpack@arg+1
  2201  001E54  6A1B               	clrf	___ftpack@arg+2,c
  2202  001E56  0E8E               	movlw	142
  2203  001E58  6E1C               	movwf	___ftpack@exp,c
  2204  001E5A  0E00               	movlw	0
  2205  001E5C  6E1D               	movwf	___ftpack@sign,c
  2206  001E5E  EC2A  F00B         	call	___ftpack	;wreg free
  2207  001E62  C019  F021         	movff	?___ftpack,?___lwtoft
  2208  001E66  C01A  F022         	movff	?___ftpack+1,?___lwtoft+1
  2209  001E6A  C01B  F023         	movff	?___ftpack+2,?___lwtoft+2
  2210  001E6E  0012               	return	
  2211  001E70  0012               	return		;funcret
  2212  001E72                     __end_of___lwtoft:
  2213                           	opt stack 0
  2214                           tblptru	equ	0xFF8
  2215                           tblptrh	equ	0xFF7
  2216                           tblptrl	equ	0xFF6
  2217                           tablat	equ	0xFF5
  2218                           prodh	equ	0xFF4
  2219                           prodl	equ	0xFF3
  2220                           intcon	equ	0xFF2
  2221                           postinc0	equ	0xFEE
  2222                           wreg	equ	0xFE8
  2223                           indf1	equ	0xFE7
  2224                           fsr1h	equ	0xFE2
  2225                           fsr1l	equ	0xFE1
  2226                           indf2	equ	0xFDF
  2227                           fsr2h	equ	0xFDA
  2228                           fsr2l	equ	0xFD9
  2229                           status	equ	0xFD8
  2230                           
  2231 ;; *************** function ___ftmul *****************
  2232 ;; Defined at:
  2233 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;  f1              3   35[COMRAM] float 
  2236 ;;  f2              3   38[COMRAM] float 
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;  f3_as_produc    3   45[COMRAM] unsigned um
  2239 ;;  sign            1   49[COMRAM] unsigned char 
  2240 ;;  cntr            1   48[COMRAM] unsigned char 
  2241 ;;  exp             1   44[COMRAM] unsigned char 
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  3   35[COMRAM] float 
  2244 ;; Registers used:
  2245 ;;		wreg, status,2, status,0, cstack
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2251 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2252 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2253 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2254 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2255 ;;Total ram usage:       15 bytes
  2256 ;; Hardware stack levels used:    1
  2257 ;; Hardware stack levels required when called:    4
  2258 ;; This function calls:
  2259 ;;		___ftpack
  2260 ;; This function is called by:
  2261 ;;		_Get_ADC6
  2262 ;;		_TM1640_Show_Decimal
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           
  2266                           	psect	text15
  2267  001552                     __ptext15:
  2268                           	opt stack 0
  2269  001552                     ___ftmul:
  2270                           	opt stack 24
  2271                           
  2272                           ;incstack = 0
  2273  001552  C026  F02A         	movff	___ftmul@f1+2,??___ftmul
  2274  001556  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  2275  001558  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  2276  00155A  3425               	rlcf	___ftmul@f1+1,w,c
  2277  00155C  362A               	rlcf	??___ftmul& (0+255),f,c
  2278  00155E  E301               	bnc	u2751
  2279  001560  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  2280  001562                     u2751:
  2281  001562  502A               	movf	??___ftmul,w,c
  2282  001564  6E2D               	movwf	___ftmul@exp,c
  2283  001566  502D               	movf	___ftmul@exp,w,c
  2284  001568  A4D8               	btfss	status,2,c
  2285  00156A  D007               	goto	l2886
  2286  00156C  0E00               	movlw	0
  2287  00156E  6E24               	movwf	?___ftmul,c
  2288  001570  0E00               	movlw	0
  2289  001572  6E25               	movwf	?___ftmul+1,c
  2290  001574  0E00               	movlw	0
  2291  001576  6E26               	movwf	?___ftmul+2,c
  2292  001578  0012               	return	
  2293  00157A                     l2886:
  2294  00157A  C029  F02A         	movff	___ftmul@f2+2,??___ftmul
  2295  00157E  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  2296  001580  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  2297  001582  3428               	rlcf	___ftmul@f2+1,w,c
  2298  001584  362A               	rlcf	??___ftmul& (0+255),f,c
  2299  001586  E301               	bnc	u2771
  2300  001588  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  2301  00158A                     u2771:
  2302  00158A  502A               	movf	??___ftmul,w,c
  2303  00158C  6E32               	movwf	___ftmul@sign,c
  2304  00158E  5032               	movf	___ftmul@sign,w,c
  2305  001590  A4D8               	btfss	status,2,c
  2306  001592  D007               	goto	l2892
  2307  001594  0E00               	movlw	0
  2308  001596  6E24               	movwf	?___ftmul,c
  2309  001598  0E00               	movlw	0
  2310  00159A  6E25               	movwf	?___ftmul+1,c
  2311  00159C  0E00               	movlw	0
  2312  00159E  6E26               	movwf	?___ftmul+2,c
  2313  0015A0  0012               	return	
  2314  0015A2                     l2892:
  2315  0015A2  5032               	movf	___ftmul@sign,w,c
  2316  0015A4  0F7B               	addlw	123
  2317  0015A6  262D               	addwf	___ftmul@exp,f,c
  2318  0015A8  C026  F032         	movff	___ftmul@f1+2,___ftmul@sign
  2319  0015AC  5029               	movf	___ftmul@f2+2,w,c
  2320  0015AE  1A32               	xorwf	___ftmul@sign,f,c
  2321  0015B0  0E80               	movlw	128
  2322  0015B2  1632               	andwf	___ftmul@sign,f,c
  2323  0015B4  8E25               	bsf	___ftmul@f1+1,7,c
  2324  0015B6  8E28               	bsf	___ftmul@f2+1,7,c
  2325  0015B8  0EFF               	movlw	255
  2326  0015BA  1627               	andwf	___ftmul@f2,f,c
  2327  0015BC  0EFF               	movlw	255
  2328  0015BE  1628               	andwf	___ftmul@f2+1,f,c
  2329  0015C0  0E00               	movlw	0
  2330  0015C2  1629               	andwf	___ftmul@f2+2,f,c
  2331  0015C4  0E00               	movlw	0
  2332  0015C6  6E2E               	movwf	___ftmul@f3_as_product,c
  2333  0015C8  0E00               	movlw	0
  2334  0015CA  6E2F               	movwf	___ftmul@f3_as_product+1,c
  2335  0015CC  0E00               	movlw	0
  2336  0015CE  6E30               	movwf	___ftmul@f3_as_product+2,c
  2337  0015D0  0E07               	movlw	7
  2338  0015D2  6E31               	movwf	___ftmul@cntr,c
  2339  0015D4  D000               	goto	l2906
  2340  0015D6                     l2906:
  2341  0015D6  A024               	btfss	___ftmul@f1,0,c
  2342  0015D8  D007               	goto	l2910
  2343  0015DA  5027               	movf	___ftmul@f2,w,c
  2344  0015DC  262E               	addwf	___ftmul@f3_as_product,f,c
  2345  0015DE  5028               	movf	___ftmul@f2+1,w,c
  2346  0015E0  222F               	addwfc	___ftmul@f3_as_product+1,f,c
  2347  0015E2  5029               	movf	___ftmul@f2+2,w,c
  2348  0015E4  2230               	addwfc	___ftmul@f3_as_product+2,f,c
  2349  0015E6  D000               	goto	l2910
  2350  0015E8                     l2910:
  2351  0015E8  90D8               	bcf	status,0,c
  2352  0015EA  3226               	rrcf	___ftmul@f1+2,f,c
  2353  0015EC  3225               	rrcf	___ftmul@f1+1,f,c
  2354  0015EE  3224               	rrcf	___ftmul@f1,f,c
  2355  0015F0  90D8               	bcf	status,0,c
  2356  0015F2  3627               	rlcf	___ftmul@f2,f,c
  2357  0015F4  3628               	rlcf	___ftmul@f2+1,f,c
  2358  0015F6  3629               	rlcf	___ftmul@f2+2,f,c
  2359  0015F8  2E31               	decfsz	___ftmul@cntr,f,c
  2360  0015FA  D7ED               	goto	l2906
  2361  0015FC  D000               	goto	l2914
  2362  0015FE                     l2914:
  2363  0015FE  0E09               	movlw	9
  2364  001600  6E31               	movwf	___ftmul@cntr,c
  2365  001602  D000               	goto	l2916
  2366  001604                     l2916:
  2367  001604  A024               	btfss	___ftmul@f1,0,c
  2368  001606  D007               	goto	l2920
  2369  001608  5027               	movf	___ftmul@f2,w,c
  2370  00160A  262E               	addwf	___ftmul@f3_as_product,f,c
  2371  00160C  5028               	movf	___ftmul@f2+1,w,c
  2372  00160E  222F               	addwfc	___ftmul@f3_as_product+1,f,c
  2373  001610  5029               	movf	___ftmul@f2+2,w,c
  2374  001612  2230               	addwfc	___ftmul@f3_as_product+2,f,c
  2375  001614  D000               	goto	l2920
  2376  001616                     l2920:
  2377  001616  90D8               	bcf	status,0,c
  2378  001618  3226               	rrcf	___ftmul@f1+2,f,c
  2379  00161A  3225               	rrcf	___ftmul@f1+1,f,c
  2380  00161C  3224               	rrcf	___ftmul@f1,f,c
  2381  00161E  90D8               	bcf	status,0,c
  2382  001620  3230               	rrcf	___ftmul@f3_as_product+2,f,c
  2383  001622  322F               	rrcf	___ftmul@f3_as_product+1,f,c
  2384  001624  322E               	rrcf	___ftmul@f3_as_product,f,c
  2385  001626  2E31               	decfsz	___ftmul@cntr,f,c
  2386  001628  D7ED               	goto	l2916
  2387  00162A  D000               	goto	l2924
  2388  00162C                     l2924:
  2389  00162C  C02E  F019         	movff	___ftmul@f3_as_product,___ftpack@arg
  2390  001630  C02F  F01A         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2391  001634  C030  F01B         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2392  001638  C02D  F01C         	movff	___ftmul@exp,___ftpack@exp
  2393  00163C  C032  F01D         	movff	___ftmul@sign,___ftpack@sign
  2394  001640  EC2A  F00B         	call	___ftpack	;wreg free
  2395  001644  C019  F024         	movff	?___ftpack,?___ftmul
  2396  001648  C01A  F025         	movff	?___ftpack+1,?___ftmul+1
  2397  00164C  C01B  F026         	movff	?___ftpack+2,?___ftmul+2
  2398  001650  0012               	return	
  2399  001652  0012               	return		;funcret
  2400  001654                     __end_of___ftmul:
  2401                           	opt stack 0
  2402                           tblptru	equ	0xFF8
  2403                           tblptrh	equ	0xFF7
  2404                           tblptrl	equ	0xFF6
  2405                           tablat	equ	0xFF5
  2406                           prodh	equ	0xFF4
  2407                           prodl	equ	0xFF3
  2408                           intcon	equ	0xFF2
  2409                           postinc0	equ	0xFEE
  2410                           wreg	equ	0xFE8
  2411                           indf1	equ	0xFE7
  2412                           fsr1h	equ	0xFE2
  2413                           fsr1l	equ	0xFE1
  2414                           indf2	equ	0xFDF
  2415                           fsr2h	equ	0xFDA
  2416                           fsr2l	equ	0xFD9
  2417                           status	equ	0xFD8
  2418                           
  2419 ;; *************** function ___ftdiv *****************
  2420 ;; Defined at:
  2421 ;;		line 54 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;  f1              3    0[BANK0 ] float 
  2424 ;;  f2              3    3[BANK0 ] float 
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;  f3              3   10[BANK0 ] float 
  2427 ;;  sign            1   14[BANK0 ] unsigned char 
  2428 ;;  exp             1   13[BANK0 ] unsigned char 
  2429 ;;  cntr            1    9[BANK0 ] unsigned char 
  2430 ;; Return value:  Size  Location     Type
  2431 ;;                  3    0[BANK0 ] float 
  2432 ;; Registers used:
  2433 ;;		wreg, status,2, status,0, cstack
  2434 ;; Tracked objects:
  2435 ;;		On entry : 0/0
  2436 ;;		On exit  : 0/0
  2437 ;;		Unchanged: 0/0
  2438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2439 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2440 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2441 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2442 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2443 ;;Total ram usage:       15 bytes
  2444 ;; Hardware stack levels used:    1
  2445 ;; Hardware stack levels required when called:    4
  2446 ;; This function calls:
  2447 ;;		___ftpack
  2448 ;; This function is called by:
  2449 ;;		_Get_ADC6
  2450 ;;		_TM1640_Show_Decimal
  2451 ;; This function uses a non-reentrant model
  2452 ;;
  2453                           
  2454                           	psect	text16
  2455  0011B4                     __ptext16:
  2456                           	opt stack 0
  2457  0011B4                     ___ftdiv:
  2458                           	opt stack 24
  2459                           
  2460                           ;incstack = 0
  2461  0011B4  C0A4  F0A8         	movff	___ftdiv@f1+2,??___ftdiv
  2462  0011B8  0100               	movlb	0	; () banked
  2463  0011BA  6BA9               	clrf	(??___ftdiv+1)& (0+255),b
  2464  0011BC  6BAA               	clrf	(??___ftdiv+2)& (0+255),b
  2465  0011BE  0100               	movlb	0	; () banked
  2466  0011C0  35A3               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  2467  0011C2  0100               	movlb	0	; () banked
  2468  0011C4  37A8               	rlcf	??___ftdiv& (0+255),f,b
  2469  0011C6  E301               	bnc	u2701
  2470  0011C8  81A9               	bsf	(??___ftdiv+1)& (0+255),0,b
  2471  0011CA                     u2701:
  2472  0011CA  0100               	movlb	0	; () banked
  2473  0011CC  51A8               	movf	??___ftdiv& (0+255),w,b
  2474  0011CE  0100               	movlb	0	; () banked
  2475  0011D0  6FAF               	movwf	___ftdiv@exp& (0+255),b
  2476  0011D2  0100               	movlb	0	; () banked
  2477  0011D4  51AF               	movf	___ftdiv@exp& (0+255),w,b
  2478  0011D6  A4D8               	btfss	status,2,c
  2479  0011D8  D00A               	goto	l2840
  2480                           
  2481                           ; BSR set to: 0
  2482  0011DA  0E00               	movlw	0
  2483  0011DC  0100               	movlb	0	; () banked
  2484  0011DE  6FA2               	movwf	?___ftdiv& (0+255),b
  2485  0011E0  0E00               	movlw	0
  2486  0011E2  0100               	movlb	0	; () banked
  2487  0011E4  6FA3               	movwf	(?___ftdiv+1)& (0+255),b
  2488  0011E6  0E00               	movlw	0
  2489  0011E8  0100               	movlb	0	; () banked
  2490  0011EA  6FA4               	movwf	(?___ftdiv+2)& (0+255),b
  2491                           
  2492                           ; BSR set to: 0
  2493  0011EC  0012               	return	
  2494  0011EE                     l2840:
  2495                           
  2496                           ; BSR set to: 0
  2497  0011EE  C0A7  F0A8         	movff	___ftdiv@f2+2,??___ftdiv
  2498  0011F2  0100               	movlb	0	; () banked
  2499  0011F4  6BA9               	clrf	(??___ftdiv+1)& (0+255),b
  2500  0011F6  6BAA               	clrf	(??___ftdiv+2)& (0+255),b
  2501  0011F8  0100               	movlb	0	; () banked
  2502  0011FA  35A6               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  2503  0011FC  0100               	movlb	0	; () banked
  2504  0011FE  37A8               	rlcf	??___ftdiv& (0+255),f,b
  2505  001200  E301               	bnc	u2721
  2506  001202  81A9               	bsf	(??___ftdiv+1)& (0+255),0,b
  2507  001204                     u2721:
  2508  001204  0100               	movlb	0	; () banked
  2509  001206  51A8               	movf	??___ftdiv& (0+255),w,b
  2510  001208  0100               	movlb	0	; () banked
  2511  00120A  6FB0               	movwf	___ftdiv@sign& (0+255),b
  2512  00120C  0100               	movlb	0	; () banked
  2513  00120E  51B0               	movf	___ftdiv@sign& (0+255),w,b
  2514  001210  A4D8               	btfss	status,2,c
  2515  001212  D00A               	goto	l2846
  2516                           
  2517                           ; BSR set to: 0
  2518  001214  0E00               	movlw	0
  2519  001216  0100               	movlb	0	; () banked
  2520  001218  6FA2               	movwf	?___ftdiv& (0+255),b
  2521  00121A  0E00               	movlw	0
  2522  00121C  0100               	movlb	0	; () banked
  2523  00121E  6FA3               	movwf	(?___ftdiv+1)& (0+255),b
  2524  001220  0E00               	movlw	0
  2525  001222  0100               	movlb	0	; () banked
  2526  001224  6FA4               	movwf	(?___ftdiv+2)& (0+255),b
  2527                           
  2528                           ; BSR set to: 0
  2529  001226  0012               	return	
  2530  001228                     l2846:
  2531                           
  2532                           ; BSR set to: 0
  2533  001228  0E00               	movlw	0
  2534  00122A  0100               	movlb	0	; () banked
  2535  00122C  6FAC               	movwf	___ftdiv@f3& (0+255),b
  2536  00122E  0E00               	movlw	0
  2537  001230  0100               	movlb	0	; () banked
  2538  001232  6FAD               	movwf	(___ftdiv@f3+1)& (0+255),b
  2539  001234  0E00               	movlw	0
  2540  001236  0100               	movlb	0	; () banked
  2541  001238  6FAE               	movwf	(___ftdiv@f3+2)& (0+255),b
  2542                           
  2543                           ; BSR set to: 0
  2544  00123A  0100               	movlb	0	; () banked
  2545  00123C  51B0               	movf	___ftdiv@sign& (0+255),w,b
  2546  00123E  0F89               	addlw	137
  2547  001240  0100               	movlb	0	; () banked
  2548  001242  5FAF               	subwf	___ftdiv@exp& (0+255),f,b
  2549                           
  2550                           ; BSR set to: 0
  2551  001244  C0A4  F0B0         	movff	___ftdiv@f1+2,___ftdiv@sign
  2552                           
  2553                           ; BSR set to: 0
  2554  001248  0100               	movlb	0	; () banked
  2555  00124A  51A7               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2556  00124C  0100               	movlb	0	; () banked
  2557  00124E  1BB0               	xorwf	___ftdiv@sign& (0+255),f,b
  2558                           
  2559                           ; BSR set to: 0
  2560  001250  0E80               	movlw	128
  2561  001252  0100               	movlb	0	; () banked
  2562  001254  17B0               	andwf	___ftdiv@sign& (0+255),f,b
  2563                           
  2564                           ; BSR set to: 0
  2565  001256  0100               	movlb	0	; () banked
  2566  001258  8FA3               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  2567                           
  2568                           ; BSR set to: 0
  2569  00125A  0EFF               	movlw	255
  2570  00125C  0100               	movlb	0	; () banked
  2571  00125E  17A2               	andwf	___ftdiv@f1& (0+255),f,b
  2572  001260  0EFF               	movlw	255
  2573  001262  0100               	movlb	0	; () banked
  2574  001264  17A3               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  2575  001266  0E00               	movlw	0
  2576  001268  0100               	movlb	0	; () banked
  2577  00126A  17A4               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  2578                           
  2579                           ; BSR set to: 0
  2580  00126C  0100               	movlb	0	; () banked
  2581  00126E  8FA6               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  2582                           
  2583                           ; BSR set to: 0
  2584  001270  0EFF               	movlw	255
  2585  001272  0100               	movlb	0	; () banked
  2586  001274  17A5               	andwf	___ftdiv@f2& (0+255),f,b
  2587  001276  0EFF               	movlw	255
  2588  001278  0100               	movlb	0	; () banked
  2589  00127A  17A6               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  2590  00127C  0E00               	movlw	0
  2591  00127E  0100               	movlb	0	; () banked
  2592  001280  17A7               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  2593                           
  2594                           ; BSR set to: 0
  2595  001282  0E18               	movlw	24
  2596  001284  0100               	movlb	0	; () banked
  2597  001286  6FAB               	movwf	___ftdiv@cntr& (0+255),b
  2598  001288  D000               	goto	l2866
  2599  00128A                     l2866:
  2600                           
  2601                           ; BSR set to: 0
  2602  00128A  0100               	movlb	0	; () banked
  2603  00128C  90D8               	bcf	status,0,c
  2604  00128E  37AC               	rlcf	___ftdiv@f3& (0+255),f,b
  2605  001290  37AD               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  2606  001292  37AE               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  2607                           
  2608                           ; BSR set to: 0
  2609  001294  0100               	movlb	0	; () banked
  2610  001296  51A5               	movf	___ftdiv@f2& (0+255),w,b
  2611  001298  0100               	movlb	0	; () banked
  2612  00129A  5DA2               	subwf	___ftdiv@f1& (0+255),w,b
  2613  00129C  0100               	movlb	0	; () banked
  2614  00129E  51A6               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2615  0012A0  0100               	movlb	0	; () banked
  2616  0012A2  59A3               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  2617  0012A4  0100               	movlb	0	; () banked
  2618  0012A6  51A7               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2619  0012A8  0100               	movlb	0	; () banked
  2620  0012AA  59A4               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  2621  0012AC  A0D8               	btfss	status,0,c
  2622  0012AE  D00E               	goto	l870
  2623                           
  2624                           ; BSR set to: 0
  2625  0012B0  0100               	movlb	0	; () banked
  2626  0012B2  51A5               	movf	___ftdiv@f2& (0+255),w,b
  2627  0012B4  0100               	movlb	0	; () banked
  2628  0012B6  5FA2               	subwf	___ftdiv@f1& (0+255),f,b
  2629  0012B8  0100               	movlb	0	; () banked
  2630  0012BA  51A6               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2631  0012BC  0100               	movlb	0	; () banked
  2632  0012BE  5BA3               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  2633  0012C0  0100               	movlb	0	; () banked
  2634  0012C2  51A7               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2635  0012C4  0100               	movlb	0	; () banked
  2636  0012C6  5BA4               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  2637                           
  2638                           ; BSR set to: 0
  2639  0012C8  0100               	movlb	0	; () banked
  2640  0012CA  81AC               	bsf	___ftdiv@f3& (0+255),0,b
  2641  0012CC                     l870:
  2642                           
  2643                           ; BSR set to: 0
  2644  0012CC  0100               	movlb	0	; () banked
  2645  0012CE  90D8               	bcf	status,0,c
  2646  0012D0  37A2               	rlcf	___ftdiv@f1& (0+255),f,b
  2647  0012D2  37A3               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  2648  0012D4  37A4               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  2649                           
  2650                           ; BSR set to: 0
  2651  0012D6  0100               	movlb	0	; () banked
  2652  0012D8  2FAB               	decfsz	___ftdiv@cntr& (0+255),f,b
  2653  0012DA  D7D7               	goto	l2866
  2654  0012DC  D000               	goto	l2876
  2655  0012DE                     l2876:
  2656                           
  2657                           ; BSR set to: 0
  2658  0012DE  C0AC  F019         	movff	___ftdiv@f3,___ftpack@arg
  2659  0012E2  C0AD  F01A         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2660  0012E6  C0AE  F01B         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2661  0012EA  C0AF  F01C         	movff	___ftdiv@exp,___ftpack@exp
  2662  0012EE  C0B0  F01D         	movff	___ftdiv@sign,___ftpack@sign
  2663  0012F2  EC2A  F00B         	call	___ftpack	;wreg free
  2664  0012F6  C019  F0A2         	movff	?___ftpack,?___ftdiv
  2665  0012FA  C01A  F0A3         	movff	?___ftpack+1,?___ftdiv+1
  2666  0012FE  C01B  F0A4         	movff	?___ftpack+2,?___ftdiv+2
  2667  001302  0012               	return	
  2668  001304  0012               	return		;funcret
  2669  001306                     __end_of___ftdiv:
  2670                           	opt stack 0
  2671                           tblptru	equ	0xFF8
  2672                           tblptrh	equ	0xFF7
  2673                           tblptrl	equ	0xFF6
  2674                           tablat	equ	0xFF5
  2675                           prodh	equ	0xFF4
  2676                           prodl	equ	0xFF3
  2677                           intcon	equ	0xFF2
  2678                           postinc0	equ	0xFEE
  2679                           wreg	equ	0xFE8
  2680                           indf1	equ	0xFE7
  2681                           fsr1h	equ	0xFE2
  2682                           fsr1l	equ	0xFE1
  2683                           indf2	equ	0xFDF
  2684                           fsr2h	equ	0xFDA
  2685                           fsr2l	equ	0xFD9
  2686                           status	equ	0xFD8
  2687                           
  2688 ;; *************** function ___ftpack *****************
  2689 ;; Defined at:
  2690 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;  arg             3   24[COMRAM] unsigned um
  2693 ;;  exp             1   27[COMRAM] unsigned char 
  2694 ;;  sign            1   28[COMRAM] unsigned char 
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;		None
  2697 ;; Return value:  Size  Location     Type
  2698 ;;                  3   24[COMRAM] float 
  2699 ;; Registers used:
  2700 ;;		wreg, status,2, status,0
  2701 ;; Tracked objects:
  2702 ;;		On entry : 0/0
  2703 ;;		On exit  : 0/0
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2706 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2708 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2709 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2710 ;;Total ram usage:        8 bytes
  2711 ;; Hardware stack levels used:    1
  2712 ;; Hardware stack levels required when called:    3
  2713 ;; This function calls:
  2714 ;;		Nothing
  2715 ;; This function is called by:
  2716 ;;		___ftdiv
  2717 ;;		___ftmul
  2718 ;;		___lwtoft
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           	psect	text17
  2723  001654                     __ptext17:
  2724                           	opt stack 0
  2725  001654                     ___ftpack:
  2726                           	opt stack 24
  2727                           
  2728                           ;incstack = 0
  2729  001654  501C               	movf	___ftpack@exp,w,c
  2730  001656  B4D8               	btfsc	status,2,c
  2731  001658  D005               	goto	l2776
  2732  00165A  5019               	movf	___ftpack@arg,w,c
  2733  00165C  101A               	iorwf	___ftpack@arg+1,w,c
  2734  00165E  101B               	iorwf	___ftpack@arg+2,w,c
  2735  001660  A4D8               	btfss	status,2,c
  2736  001662  D00E               	goto	l2782
  2737  001664                     l2776:
  2738  001664  0E00               	movlw	0
  2739  001666  6E19               	movwf	?___ftpack,c
  2740  001668  0E00               	movlw	0
  2741  00166A  6E1A               	movwf	?___ftpack+1,c
  2742  00166C  0E00               	movlw	0
  2743  00166E  6E1B               	movwf	?___ftpack+2,c
  2744  001670  0012               	return	
  2745  001672  D006               	goto	l2782
  2746  001674                     l2780:
  2747  001674  2A1C               	incf	___ftpack@exp,f,c
  2748  001676  90D8               	bcf	status,0,c
  2749  001678  321B               	rrcf	___ftpack@arg+2,f,c
  2750  00167A  321A               	rrcf	___ftpack@arg+1,f,c
  2751  00167C  3219               	rrcf	___ftpack@arg,f,c
  2752  00167E  D000               	goto	l2782
  2753  001680                     l2782:
  2754  001680  0E00               	movlw	0
  2755  001682  1419               	andwf	___ftpack@arg,w,c
  2756  001684  6E1E               	movwf	??___ftpack& (0+255),c
  2757  001686  0E00               	movlw	0
  2758  001688  141A               	andwf	___ftpack@arg+1,w,c
  2759  00168A  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  2760  00168C  0EFE               	movlw	254
  2761  00168E  141B               	andwf	___ftpack@arg+2,w,c
  2762  001690  6E20               	movwf	(??___ftpack+2)& (0+255),c
  2763  001692  501E               	movf	??___ftpack,w,c
  2764  001694  101F               	iorwf	??___ftpack+1,w,c
  2765  001696  1020               	iorwf	??___ftpack+2,w,c
  2766  001698  B4D8               	btfsc	status,2,c
  2767  00169A  D00E               	goto	l2788
  2768  00169C  D7EB               	goto	l2780
  2769  00169E  D00C               	goto	l2788
  2770  0016A0                     l2784:
  2771  0016A0  2A1C               	incf	___ftpack@exp,f,c
  2772  0016A2  0E01               	movlw	1
  2773  0016A4  2619               	addwf	___ftpack@arg,f,c
  2774  0016A6  0E00               	movlw	0
  2775  0016A8  221A               	addwfc	___ftpack@arg+1,f,c
  2776  0016AA  0E00               	movlw	0
  2777  0016AC  221B               	addwfc	___ftpack@arg+2,f,c
  2778  0016AE  90D8               	bcf	status,0,c
  2779  0016B0  321B               	rrcf	___ftpack@arg+2,f,c
  2780  0016B2  321A               	rrcf	___ftpack@arg+1,f,c
  2781  0016B4  3219               	rrcf	___ftpack@arg,f,c
  2782  0016B6  D000               	goto	l2788
  2783  0016B8                     l2788:
  2784  0016B8  0E00               	movlw	0
  2785  0016BA  1419               	andwf	___ftpack@arg,w,c
  2786  0016BC  6E1E               	movwf	??___ftpack& (0+255),c
  2787  0016BE  0E00               	movlw	0
  2788  0016C0  141A               	andwf	___ftpack@arg+1,w,c
  2789  0016C2  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  2790  0016C4  0EFF               	movlw	255
  2791  0016C6  141B               	andwf	___ftpack@arg+2,w,c
  2792  0016C8  6E20               	movwf	(??___ftpack+2)& (0+255),c
  2793  0016CA  501E               	movf	??___ftpack,w,c
  2794  0016CC  101F               	iorwf	??___ftpack+1,w,c
  2795  0016CE  1020               	iorwf	??___ftpack+2,w,c
  2796  0016D0  B4D8               	btfsc	status,2,c
  2797  0016D2  D008               	goto	l2792
  2798  0016D4  D7E5               	goto	l2784
  2799  0016D6  D006               	goto	l2792
  2800  0016D8                     l2790:
  2801  0016D8  061C               	decf	___ftpack@exp,f,c
  2802  0016DA  90D8               	bcf	status,0,c
  2803  0016DC  3619               	rlcf	___ftpack@arg,f,c
  2804  0016DE  361A               	rlcf	___ftpack@arg+1,f,c
  2805  0016E0  361B               	rlcf	___ftpack@arg+2,f,c
  2806  0016E2  D000               	goto	l2792
  2807  0016E4                     l2792:
  2808  0016E4  BE1A               	btfsc	___ftpack@arg+1,7,c
  2809  0016E6  D004               	goto	l806
  2810  0016E8  0E02               	movlw	2
  2811  0016EA  601C               	cpfslt	___ftpack@exp,c
  2812  0016EC  D7F5               	goto	l2790
  2813  0016EE  D000               	goto	l806
  2814  0016F0                     l806:
  2815  0016F0  B01C               	btfsc	___ftpack@exp,0,c
  2816  0016F2  D002               	goto	l2798
  2817  0016F4  9E1A               	bcf	___ftpack@arg+1,7,c
  2818  0016F6  D000               	goto	l2798
  2819  0016F8                     l2798:
  2820  0016F8  90D8               	bcf	status,0,c
  2821  0016FA  321C               	rrcf	___ftpack@exp,f,c
  2822  0016FC  501C               	movf	___ftpack@exp,w,c
  2823  0016FE  121B               	iorwf	___ftpack@arg+2,f,c
  2824  001700  501D               	movf	___ftpack@sign,w,c
  2825  001702  B4D8               	btfsc	status,2,c
  2826  001704  D002               	goto	l2804
  2827  001706  8E1B               	bsf	___ftpack@arg+2,7,c
  2828  001708  D000               	goto	l2804
  2829  00170A                     l2804:
  2830  00170A  C019  F019         	movff	___ftpack@arg,?___ftpack
  2831  00170E  C01A  F01A         	movff	___ftpack@arg+1,?___ftpack+1
  2832  001712  C01B  F01B         	movff	___ftpack@arg+2,?___ftpack+2
  2833  001716  0012               	return	
  2834  001718  0012               	return		;funcret
  2835  00171A                     __end_of___ftpack:
  2836                           	opt stack 0
  2837                           tblptru	equ	0xFF8
  2838                           tblptrh	equ	0xFF7
  2839                           tblptrl	equ	0xFF6
  2840                           tablat	equ	0xFF5
  2841                           prodh	equ	0xFF4
  2842                           prodl	equ	0xFF3
  2843                           intcon	equ	0xFF2
  2844                           postinc0	equ	0xFEE
  2845                           wreg	equ	0xFE8
  2846                           indf1	equ	0xFE7
  2847                           fsr1h	equ	0xFE2
  2848                           fsr1l	equ	0xFE1
  2849                           indf2	equ	0xFDF
  2850                           fsr2h	equ	0xFDA
  2851                           fsr2l	equ	0xFD9
  2852                           status	equ	0xFD8
  2853                           
  2854 ;; *************** function _ReadADC *****************
  2855 ;; Defined at:
  2856 ;;		line 24 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  2857 ;; Parameters:    Size  Location     Type
  2858 ;;		None
  2859 ;; Auto vars:     Size  Location     Type
  2860 ;;		None
  2861 ;; Return value:  Size  Location     Type
  2862 ;;                  2   24[COMRAM] int 
  2863 ;; Registers used:
  2864 ;;		wreg, status,2
  2865 ;; Tracked objects:
  2866 ;;		On entry : 0/0
  2867 ;;		On exit  : 0/0
  2868 ;;		Unchanged: 0/0
  2869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2870 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2872 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2873 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2874 ;;Total ram usage:        4 bytes
  2875 ;; Hardware stack levels used:    1
  2876 ;; Hardware stack levels required when called:    3
  2877 ;; This function calls:
  2878 ;;		Nothing
  2879 ;; This function is called by:
  2880 ;;		_Get_ADC6
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           	psect	text18
  2885  001F70                     __ptext18:
  2886                           	opt stack 0
  2887  001F70                     _ReadADC:
  2888                           	opt stack 25
  2889                           
  2890                           ;incstack = 0
  2891  001F70  50C4               	movf	4036,w,c	;volatile
  2892  001F72  6E1B               	movwf	??_ReadADC& (0+255),c
  2893  001F74  50C3               	movf	4035,w,c	;volatile
  2894  001F76  6E19               	movwf	?_ReadADC,c
  2895  001F78  C01B  F01A         	movff	??_ReadADC,?_ReadADC+1
  2896  001F7C  0012               	return	
  2897  001F7E  0012               	return		;funcret
  2898  001F80                     __end_of_ReadADC:
  2899                           	opt stack 0
  2900                           tblptru	equ	0xFF8
  2901                           tblptrh	equ	0xFF7
  2902                           tblptrl	equ	0xFF6
  2903                           tablat	equ	0xFF5
  2904                           prodh	equ	0xFF4
  2905                           prodl	equ	0xFF3
  2906                           intcon	equ	0xFF2
  2907                           postinc0	equ	0xFEE
  2908                           wreg	equ	0xFE8
  2909                           indf1	equ	0xFE7
  2910                           fsr1h	equ	0xFE2
  2911                           fsr1l	equ	0xFE1
  2912                           indf2	equ	0xFDF
  2913                           fsr2h	equ	0xFDA
  2914                           fsr2l	equ	0xFD9
  2915                           status	equ	0xFD8
  2916                           
  2917 ;; *************** function _ConvertADC *****************
  2918 ;; Defined at:
  2919 ;;		line 22 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;		None
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;		None
  2924 ;; Return value:  Size  Location     Type
  2925 ;;		None               void
  2926 ;; Registers used:
  2927 ;;		None
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2937 ;;Total ram usage:        0 bytes
  2938 ;; Hardware stack levels used:    1
  2939 ;; Hardware stack levels required when called:    3
  2940 ;; This function calls:
  2941 ;;		Nothing
  2942 ;; This function is called by:
  2943 ;;		_Get_ADC6
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947                           	psect	text19
  2948  001FA4                     __ptext19:
  2949                           	opt stack 0
  2950  001FA4                     _ConvertADC:
  2951                           	opt stack 25
  2952                           
  2953                           ;incstack = 0
  2954  001FA4  82C2               	bsf	4034,1,c	;volatile
  2955  001FA6  0012               	return		;funcret
  2956  001FA8                     __end_of_ConvertADC:
  2957                           	opt stack 0
  2958                           tblptru	equ	0xFF8
  2959                           tblptrh	equ	0xFF7
  2960                           tblptrl	equ	0xFF6
  2961                           tablat	equ	0xFF5
  2962                           prodh	equ	0xFF4
  2963                           prodl	equ	0xFF3
  2964                           intcon	equ	0xFF2
  2965                           postinc0	equ	0xFEE
  2966                           wreg	equ	0xFE8
  2967                           indf1	equ	0xFE7
  2968                           fsr1h	equ	0xFE2
  2969                           fsr1l	equ	0xFE1
  2970                           indf2	equ	0xFDF
  2971                           fsr2h	equ	0xFDA
  2972                           fsr2l	equ	0xFD9
  2973                           status	equ	0xFD8
  2974                           
  2975 ;; *************** function _BusyADC *****************
  2976 ;; Defined at:
  2977 ;;		line 26 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;		None
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;		None
  2982 ;; Return value:  Size  Location     Type
  2983 ;;                  1    wreg      unsigned char 
  2984 ;; Registers used:
  2985 ;;		wreg
  2986 ;; Tracked objects:
  2987 ;;		On entry : 0/0
  2988 ;;		On exit  : 0/0
  2989 ;;		Unchanged: 0/0
  2990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2995 ;;Total ram usage:        0 bytes
  2996 ;; Hardware stack levels used:    1
  2997 ;; Hardware stack levels required when called:    3
  2998 ;; This function calls:
  2999 ;;		Nothing
  3000 ;; This function is called by:
  3001 ;;		_Get_ADC6
  3002 ;; This function uses a non-reentrant model
  3003 ;;
  3004                           
  3005                           	psect	text20
  3006  001F80                     __ptext20:
  3007                           	opt stack 0
  3008  001F80                     _BusyADC:
  3009                           	opt stack 25
  3010                           
  3011                           ;incstack = 0
  3012  001F80  A2C2               	btfss	4034,1,c	;volatile
  3013  001F82  D002               	goto	u2690
  3014  001F84  0E01               	movlw	1
  3015  001F86  0012               	return	
  3016  001F88                     u2690:
  3017  001F88  0E00               	movlw	0
  3018  001F8A  0012               	return	
  3019  001F8C  0012               	return		;funcret
  3020  001F8E                     __end_of_BusyADC:
  3021                           	opt stack 0
  3022                           tblptru	equ	0xFF8
  3023                           tblptrh	equ	0xFF7
  3024                           tblptrl	equ	0xFF6
  3025                           tablat	equ	0xFF5
  3026                           prodh	equ	0xFF4
  3027                           prodl	equ	0xFF3
  3028                           intcon	equ	0xFF2
  3029                           postinc0	equ	0xFEE
  3030                           wreg	equ	0xFE8
  3031                           indf1	equ	0xFE7
  3032                           fsr1h	equ	0xFE2
  3033                           fsr1l	equ	0xFE1
  3034                           indf2	equ	0xFDF
  3035                           fsr2h	equ	0xFDA
  3036                           fsr2l	equ	0xFD9
  3037                           status	equ	0xFD8
  3038                           
  3039 ;; *************** function _RS485_Init *****************
  3040 ;; Defined at:
  3041 ;;		line 45 in file "_01_USER/My_USART.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;		None
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;		None
  3046 ;; Return value:  Size  Location     Type
  3047 ;;		None               void
  3048 ;; Registers used:
  3049 ;;		wreg, status,2, status,0, cstack
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3059 ;;Total ram usage:        0 bytes
  3060 ;; Hardware stack levels used:    1
  3061 ;; Hardware stack levels required when called:    4
  3062 ;; This function calls:
  3063 ;;		_Open2USART
  3064 ;; This function is called by:
  3065 ;;		_main
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           	psect	text21
  3070  001F26                     __ptext21:
  3071                           	opt stack 0
  3072  001F26                     _RS485_Init:
  3073                           	opt stack 26
  3074                           
  3075                           ;My_USART.c: 47: Open2USART( 0b01111111 &
  3076                           ;My_USART.c: 48: 0b11111111 &
  3077                           ;My_USART.c: 49: 0b11111110 &
  3078                           ;My_USART.c: 50: 0b11111101 &
  3079                           ;My_USART.c: 51: 0b11111111 &
  3080                           ;My_USART.c: 52: 0b11101111
  3081                           ;My_USART.c: 53: ,
  3082                           ;My_USART.c: 54: 12
  3083                           ;My_USART.c: 55: );
  3084                           
  3085                           ;incstack = 0
  3086  001F26  0E00               	movlw	0
  3087  001F28  6E1A               	movwf	Open2USART@spbrg+1,c
  3088  001F2A  0E0C               	movlw	12
  3089  001F2C  6E19               	movwf	Open2USART@spbrg,c
  3090  001F2E  0E6C               	movlw	108
  3091  001F30  EC1A  F00C         	call	_Open2USART
  3092                           
  3093                           ;My_USART.c: 57: TRISGbits.TRISG1 = 1;
  3094  001F34  8298               	bsf	3992,1,c	;volatile
  3095                           
  3096                           ;My_USART.c: 58: TRISGbits.TRISG2 = 0;
  3097  001F36  9498               	bcf	3992,2,c	;volatile
  3098                           
  3099                           ;My_USART.c: 59: TRISGbits.TRISG3 = 0;
  3100  001F38  9698               	bcf	3992,3,c	;volatile
  3101                           
  3102                           ;My_USART.c: 60: RG3 = 1;
  3103  001F3A  8686               	bsf	3974,3,c	;volatile
  3104                           
  3105                           ;My_USART.c: 61: ANCON2 &= 0XF1;
  3106  001F3C  0EF1               	movlw	241
  3107  001F3E  010F               	movlb	15	; () banked
  3108  001F40  1723               	andwf	35,f,b	;volatile
  3109                           
  3110                           ; BSR set to: 15
  3111  001F42  0012               	return		;funcret
  3112  001F44                     __end_of_RS485_Init:
  3113                           	opt stack 0
  3114                           tblptru	equ	0xFF8
  3115                           tblptrh	equ	0xFF7
  3116                           tblptrl	equ	0xFF6
  3117                           tablat	equ	0xFF5
  3118                           prodh	equ	0xFF4
  3119                           prodl	equ	0xFF3
  3120                           intcon	equ	0xFF2
  3121                           postinc0	equ	0xFEE
  3122                           wreg	equ	0xFE8
  3123                           indf1	equ	0xFE7
  3124                           fsr1h	equ	0xFE2
  3125                           fsr1l	equ	0xFE1
  3126                           indf2	equ	0xFDF
  3127                           fsr2h	equ	0xFDA
  3128                           fsr2l	equ	0xFD9
  3129                           status	equ	0xFD8
  3130                           
  3131 ;; *************** function _Open2USART *****************
  3132 ;; Defined at:
  3133 ;;		line 118 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u2open.c"
  3134 ;; Parameters:    Size  Location     Type
  3135 ;;  config          1    wreg     unsigned char 
  3136 ;;  spbrg           2   24[COMRAM] unsigned int 
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;  config          1   26[COMRAM] unsigned char 
  3139 ;; Return value:  Size  Location     Type
  3140 ;;		None               void
  3141 ;; Registers used:
  3142 ;;		wreg, status,2
  3143 ;; Tracked objects:
  3144 ;;		On entry : 0/0
  3145 ;;		On exit  : 0/0
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3148 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3149 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3151 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3152 ;;Total ram usage:        3 bytes
  3153 ;; Hardware stack levels used:    1
  3154 ;; Hardware stack levels required when called:    3
  3155 ;; This function calls:
  3156 ;;		Nothing
  3157 ;; This function is called by:
  3158 ;;		_RS485_Init
  3159 ;; This function uses a non-reentrant model
  3160 ;;
  3161                           
  3162                           	psect	text22
  3163  001834                     __ptext22:
  3164                           	opt stack 0
  3165  001834                     _Open2USART:
  3166                           	opt stack 26
  3167                           
  3168                           ; BSR set to: 15
  3169                           ;incstack = 0
  3170                           ;Open2USART@config stored from wreg
  3171  001834  6E1B               	movwf	Open2USART@config,c
  3172  001836  0E00               	movlw	0
  3173  001838  010F               	movlb	15	; () banked
  3174  00183A  6F21               	movwf	33,b	;volatile
  3175  00183C  0E00               	movlw	0
  3176  00183E  010F               	movlb	15	; () banked
  3177  001840  6F22               	movwf	34,b	;volatile
  3178                           
  3179                           ; BSR set to: 15
  3180  001842  A01B               	btfss	Open2USART@config,0,c
  3181  001844  D003               	goto	l2976
  3182                           
  3183                           ; BSR set to: 15
  3184  001846  010F               	movlb	15	; () banked
  3185  001848  8921               	bsf	33,4,b	;volatile
  3186  00184A  D000               	goto	l2976
  3187  00184C                     l2976:
  3188                           
  3189                           ; BSR set to: 15
  3190  00184C  A21B               	btfss	Open2USART@config,1,c
  3191  00184E  D005               	goto	l2980
  3192                           
  3193                           ; BSR set to: 15
  3194  001850  010F               	movlb	15	; () banked
  3195  001852  8D21               	bsf	33,6,b	;volatile
  3196  001854  010F               	movlb	15	; () banked
  3197  001856  8D22               	bsf	34,6,b	;volatile
  3198  001858  D000               	goto	l2980
  3199  00185A                     l2980:
  3200                           
  3201                           ; BSR set to: 15
  3202  00185A  A41B               	btfss	Open2USART@config,2,c
  3203  00185C  D003               	goto	l2984
  3204                           
  3205                           ; BSR set to: 15
  3206  00185E  010F               	movlb	15	; () banked
  3207  001860  8F21               	bsf	33,7,b	;volatile
  3208  001862  D000               	goto	l2984
  3209  001864                     l2984:
  3210                           
  3211                           ; BSR set to: 15
  3212  001864  A61B               	btfss	Open2USART@config,3,c
  3213  001866  D003               	goto	l475
  3214                           
  3215                           ; BSR set to: 15
  3216  001868  010F               	movlb	15	; () banked
  3217  00186A  8922               	bsf	34,4,b	;volatile
  3218  00186C  D003               	goto	l2988
  3219  00186E                     l475:
  3220                           
  3221                           ; BSR set to: 15
  3222  00186E  010F               	movlb	15	; () banked
  3223  001870  8B22               	bsf	34,5,b	;volatile
  3224  001872  D000               	goto	l2988
  3225  001874                     l2988:
  3226                           
  3227                           ; BSR set to: 15
  3228  001874  A81B               	btfss	Open2USART@config,4,c
  3229  001876  D003               	goto	l477
  3230                           
  3231                           ; BSR set to: 15
  3232  001878  010F               	movlb	15	; () banked
  3233  00187A  8521               	bsf	33,2,b	;volatile
  3234  00187C  D003               	goto	l2992
  3235  00187E                     l477:
  3236                           
  3237                           ; BSR set to: 15
  3238  00187E  010F               	movlb	15	; () banked
  3239  001880  9521               	bcf	33,2,b	;volatile
  3240  001882  D000               	goto	l2992
  3241  001884                     l2992:
  3242                           
  3243                           ; BSR set to: 15
  3244  001884  AA1B               	btfss	Open2USART@config,5,c
  3245  001886  D003               	goto	l2996
  3246                           
  3247                           ; BSR set to: 15
  3248  001888  010F               	movlb	15	; () banked
  3249  00188A  8722               	bsf	34,3,b	;volatile
  3250  00188C  D000               	goto	l2996
  3251  00188E                     l2996:
  3252                           
  3253                           ; BSR set to: 15
  3254  00188E  AC1B               	btfss	Open2USART@config,6,c
  3255  001890  D002               	goto	l480
  3256                           
  3257                           ; BSR set to: 15
  3258  001892  8AA3               	bsf	4003,5,c	;volatile
  3259  001894  D002               	goto	l3000
  3260  001896                     l480:
  3261                           
  3262                           ; BSR set to: 15
  3263  001896  9AA3               	bcf	4003,5,c	;volatile
  3264  001898  D000               	goto	l3000
  3265  00189A                     l3000:
  3266                           
  3267                           ; BSR set to: 15
  3268  00189A  AE1B               	btfss	Open2USART@config,7,c
  3269  00189C  D002               	goto	l482
  3270                           
  3271                           ; BSR set to: 15
  3272  00189E  88A3               	bsf	4003,4,c	;volatile
  3273  0018A0  D001               	goto	l483
  3274  0018A2                     l482:
  3275                           
  3276                           ; BSR set to: 15
  3277  0018A2  98A3               	bcf	4003,4,c	;volatile
  3278  0018A4                     l483:
  3279                           
  3280                           ; BSR set to: 15
  3281  0018A4  C019  FF1E         	movff	Open2USART@spbrg,3870	;volatile
  3282                           
  3283                           ; BSR set to: 15
  3284  0018A8  501A               	movf	Open2USART@spbrg+1,w,c
  3285  0018AA  010F               	movlb	15	; () banked
  3286  0018AC  6F1F               	movwf	31,b	;volatile
  3287                           
  3288                           ; BSR set to: 15
  3289  0018AE  010F               	movlb	15	; () banked
  3290  0018B0  8B21               	bsf	33,5,b	;volatile
  3291                           
  3292                           ; BSR set to: 15
  3293  0018B2  010F               	movlb	15	; () banked
  3294  0018B4  8F22               	bsf	34,7,b	;volatile
  3295                           
  3296                           ; BSR set to: 15
  3297  0018B6  0012               	return		;funcret
  3298  0018B8                     __end_of_Open2USART:
  3299                           	opt stack 0
  3300                           tblptru	equ	0xFF8
  3301                           tblptrh	equ	0xFF7
  3302                           tblptrl	equ	0xFF6
  3303                           tablat	equ	0xFF5
  3304                           prodh	equ	0xFF4
  3305                           prodl	equ	0xFF3
  3306                           intcon	equ	0xFF2
  3307                           postinc0	equ	0xFEE
  3308                           wreg	equ	0xFE8
  3309                           indf1	equ	0xFE7
  3310                           fsr1h	equ	0xFE2
  3311                           fsr1l	equ	0xFE1
  3312                           indf2	equ	0xFDF
  3313                           fsr2h	equ	0xFDA
  3314                           fsr2l	equ	0xFD9
  3315                           status	equ	0xFD8
  3316                           
  3317 ;; *************** function _Key_Init *****************
  3318 ;; Defined at:
  3319 ;;		line 39 in file "_01_USER/Key.c"
  3320 ;; Parameters:    Size  Location     Type
  3321 ;;		None
  3322 ;; Auto vars:     Size  Location     Type
  3323 ;;		None
  3324 ;; Return value:  Size  Location     Type
  3325 ;;		None               void
  3326 ;; Registers used:
  3327 ;;		wreg, status,2, status,0
  3328 ;; Tracked objects:
  3329 ;;		On entry : 0/0
  3330 ;;		On exit  : 0/0
  3331 ;;		Unchanged: 0/0
  3332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3337 ;;Total ram usage:        0 bytes
  3338 ;; Hardware stack levels used:    1
  3339 ;; Hardware stack levels required when called:    3
  3340 ;; This function calls:
  3341 ;;		Nothing
  3342 ;; This function is called by:
  3343 ;;		_main
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           
  3347                           	psect	text23
  3348  001F9A                     __ptext23:
  3349                           	opt stack 0
  3350  001F9A                     _Key_Init:
  3351                           	opt stack 27
  3352                           
  3353                           ;Key.c: 41: TRISE |= 0x1e;
  3354                           
  3355                           ; BSR set to: 15
  3356                           ;incstack = 0
  3357  001F9A  0E1E               	movlw	30
  3358  001F9C  1296               	iorwf	3990,f,c	;volatile
  3359                           
  3360                           ;Key.c: 42: TRISD |= 0xc0;
  3361  001F9E  0EC0               	movlw	192
  3362  001FA0  1295               	iorwf	3989,f,c	;volatile
  3363  001FA2  0012               	return		;funcret
  3364  001FA4                     __end_of_Key_Init:
  3365                           	opt stack 0
  3366                           tblptru	equ	0xFF8
  3367                           tblptrh	equ	0xFF7
  3368                           tblptrl	equ	0xFF6
  3369                           tablat	equ	0xFF5
  3370                           prodh	equ	0xFF4
  3371                           prodl	equ	0xFF3
  3372                           intcon	equ	0xFF2
  3373                           postinc0	equ	0xFEE
  3374                           wreg	equ	0xFE8
  3375                           indf1	equ	0xFE7
  3376                           fsr1h	equ	0xFE2
  3377                           fsr1l	equ	0xFE1
  3378                           indf2	equ	0xFDF
  3379                           fsr2h	equ	0xFDA
  3380                           fsr2l	equ	0xFD9
  3381                           status	equ	0xFD8
  3382                           
  3383 ;; *************** function _Init_TM1640 *****************
  3384 ;; Defined at:
  3385 ;;		line 119 in file "_01_USER/TM1640.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;		None
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;		None
  3390 ;; Return value:  Size  Location     Type
  3391 ;;		None               void
  3392 ;; Registers used:
  3393 ;;		wreg, status,2, status,0, cstack
  3394 ;; Tracked objects:
  3395 ;;		On entry : 0/0
  3396 ;;		On exit  : 0/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3403 ;;Total ram usage:        0 bytes
  3404 ;; Hardware stack levels used:    1
  3405 ;; Hardware stack levels required when called:    5
  3406 ;; This function calls:
  3407 ;;		_TM1640_Start
  3408 ;;		_TM1640_Stop
  3409 ;;		_TM1640_Writer_Byte
  3410 ;; This function is called by:
  3411 ;;		_main
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           	psect	text24
  3416  001E72                     __ptext24:
  3417                           	opt stack 0
  3418  001E72                     _Init_TM1640:
  3419                           	opt stack 25
  3420                           
  3421                           ;TM1640.c: 121: TRISCbits.TRISC3 = 0;
  3422                           
  3423                           ;incstack = 0
  3424  001E72  9694               	bcf	3988,3,c	;volatile
  3425                           
  3426                           ;TM1640.c: 122: TRISCbits.TRISC4 = 0;
  3427  001E74  9894               	bcf	3988,4,c	;volatile
  3428                           
  3429                           ;TM1640.c: 123: TM1640_Stop();
  3430  001E76  EC5E  F00F         	call	_TM1640_Stop	;wreg free
  3431                           
  3432                           ;TM1640.c: 125: TM1640_Start();
  3433  001E7A  EC70  F00F         	call	_TM1640_Start	;wreg free
  3434                           
  3435                           ;TM1640.c: 126: TM1640_Writer_Byte(0x44);
  3436  001E7E  0E44               	movlw	68
  3437  001E80  EC41  F00E         	call	_TM1640_Writer_Byte
  3438                           
  3439                           ;TM1640.c: 127: TM1640_Stop();
  3440  001E84  EC5E  F00F         	call	_TM1640_Stop	;wreg free
  3441                           
  3442                           ;TM1640.c: 129: TM1640_Start();
  3443  001E88  EC70  F00F         	call	_TM1640_Start	;wreg free
  3444                           
  3445                           ;TM1640.c: 130: TM1640_Writer_Byte(0x8F);
  3446  001E8C  0E8F               	movlw	143
  3447  001E8E  EC41  F00E         	call	_TM1640_Writer_Byte
  3448                           
  3449                           ;TM1640.c: 131: TM1640_Stop();
  3450  001E92  EC5E  F00F         	call	_TM1640_Stop	;wreg free
  3451  001E96  0012               	return		;funcret
  3452  001E98                     __end_of_Init_TM1640:
  3453                           	opt stack 0
  3454                           tblptru	equ	0xFF8
  3455                           tblptrh	equ	0xFF7
  3456                           tblptrl	equ	0xFF6
  3457                           tablat	equ	0xFF5
  3458                           prodh	equ	0xFF4
  3459                           prodl	equ	0xFF3
  3460                           intcon	equ	0xFF2
  3461                           postinc0	equ	0xFEE
  3462                           wreg	equ	0xFE8
  3463                           indf1	equ	0xFE7
  3464                           fsr1h	equ	0xFE2
  3465                           fsr1l	equ	0xFE1
  3466                           indf2	equ	0xFDF
  3467                           fsr2h	equ	0xFDA
  3468                           fsr2l	equ	0xFD9
  3469                           status	equ	0xFD8
  3470                           
  3471 ;; *************** function _TM1640_Writer_Byte *****************
  3472 ;; Defined at:
  3473 ;;		line 77 in file "_01_USER/TM1640.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;  Date            1    wreg     const unsigned char 
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;  Date            1   26[COMRAM] const unsigned char 
  3478 ;;  mask            1   27[COMRAM] unsigned char 
  3479 ;; Return value:  Size  Location     Type
  3480 ;;		None               void
  3481 ;; Registers used:
  3482 ;;		wreg, status,2, status,0, cstack
  3483 ;; Tracked objects:
  3484 ;;		On entry : 0/0
  3485 ;;		On exit  : 0/0
  3486 ;;		Unchanged: 0/0
  3487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3489 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3491 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3492 ;;Total ram usage:        2 bytes
  3493 ;; Hardware stack levels used:    1
  3494 ;; Hardware stack levels required when called:    4
  3495 ;; This function calls:
  3496 ;;		_TM1640_Delay
  3497 ;; This function is called by:
  3498 ;;		_TM1640_Writer_Dates
  3499 ;;		_Init_TM1640
  3500 ;;		_Open_Display
  3501 ;;		_Disable_Display
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504                           
  3505                           	psect	text25
  3506  001C82                     __ptext25:
  3507                           	opt stack 0
  3508  001C82                     _TM1640_Writer_Byte:
  3509                           	opt stack 23
  3510                           
  3511                           ;incstack = 0
  3512                           ;TM1640_Writer_Byte@Date stored from wreg
  3513  001C82  6E1B               	movwf	TM1640_Writer_Byte@Date,c
  3514                           
  3515                           ;TM1640.c: 79: unsigned char mask;
  3516                           ;TM1640.c: 81: for(mask=0x01; mask; mask<<=1)
  3517  001C84  0E01               	movlw	1
  3518  001C86  6E1C               	movwf	TM1640_Writer_Byte@mask,c
  3519  001C88  D017               	goto	l2764
  3520  001C8A                     l319:
  3521                           
  3522                           ;TM1640.c: 82: {
  3523                           ;TM1640.c: 83: RC3 = 0;
  3524  001C8A  9682               	bcf	3970,3,c	;volatile
  3525                           
  3526                           ;TM1640.c: 84: TM1640_Delay(1);
  3527  001C8C  0E01               	movlw	1
  3528  001C8E  ECA2  F00F         	call	_TM1640_Delay
  3529                           
  3530                           ;TM1640.c: 85: if(mask & Date)
  3531  001C92  501C               	movf	TM1640_Writer_Byte@mask,w,c
  3532  001C94  141B               	andwf	TM1640_Writer_Byte@Date,w,c
  3533  001C96  0900               	iorlw	0
  3534  001C98  B4D8               	btfsc	status,2,c
  3535  001C9A  D002               	goto	l320
  3536                           
  3537                           ;TM1640.c: 86: RC4 = 1;
  3538  001C9C  8882               	bsf	3970,4,c	;volatile
  3539  001C9E  D002               	goto	l2758
  3540  001CA0                     l320:
  3541                           
  3542                           ;TM1640.c: 87: else
  3543                           ;TM1640.c: 88: RC4 = 0;
  3544  001CA0  9882               	bcf	3970,4,c	;volatile
  3545  001CA2  D000               	goto	l2758
  3546  001CA4                     l2758:
  3547                           
  3548                           ;TM1640.c: 89: TM1640_Delay(1);
  3549  001CA4  0E01               	movlw	1
  3550  001CA6  ECA2  F00F         	call	_TM1640_Delay
  3551                           
  3552                           ;TM1640.c: 90: RC3 = 1;
  3553  001CAA  8682               	bsf	3970,3,c	;volatile
  3554                           
  3555                           ;TM1640.c: 91: TM1640_Delay(1);
  3556  001CAC  0E01               	movlw	1
  3557  001CAE  ECA2  F00F         	call	_TM1640_Delay
  3558  001CB2  90D8               	bcf	status,0,c
  3559  001CB4  361C               	rlcf	TM1640_Writer_Byte@mask,f,c
  3560  001CB6  D000               	goto	l2764
  3561  001CB8                     l2764:
  3562  001CB8  501C               	movf	TM1640_Writer_Byte@mask,w,c
  3563  001CBA  A4D8               	btfss	status,2,c
  3564  001CBC  D7E6               	goto	l319
  3565  001CBE  0012               	return		;funcret
  3566  001CC0                     __end_of_TM1640_Writer_Byte:
  3567                           	opt stack 0
  3568                           tblptru	equ	0xFF8
  3569                           tblptrh	equ	0xFF7
  3570                           tblptrl	equ	0xFF6
  3571                           tablat	equ	0xFF5
  3572                           prodh	equ	0xFF4
  3573                           prodl	equ	0xFF3
  3574                           intcon	equ	0xFF2
  3575                           postinc0	equ	0xFEE
  3576                           wreg	equ	0xFE8
  3577                           indf1	equ	0xFE7
  3578                           fsr1h	equ	0xFE2
  3579                           fsr1l	equ	0xFE1
  3580                           indf2	equ	0xFDF
  3581                           fsr2h	equ	0xFDA
  3582                           fsr2l	equ	0xFD9
  3583                           status	equ	0xFD8
  3584                           
  3585 ;; *************** function _TM1640_Stop *****************
  3586 ;; Defined at:
  3587 ;;		line 32 in file "_01_USER/TM1640.c"
  3588 ;; Parameters:    Size  Location     Type
  3589 ;;		None
  3590 ;; Auto vars:     Size  Location     Type
  3591 ;;		None
  3592 ;; Return value:  Size  Location     Type
  3593 ;;		None               void
  3594 ;; Registers used:
  3595 ;;		wreg, status,2, status,0, cstack
  3596 ;; Tracked objects:
  3597 ;;		On entry : 0/0
  3598 ;;		On exit  : 0/0
  3599 ;;		Unchanged: 0/0
  3600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3605 ;;Total ram usage:        0 bytes
  3606 ;; Hardware stack levels used:    1
  3607 ;; Hardware stack levels required when called:    4
  3608 ;; This function calls:
  3609 ;;		_TM1640_Delay
  3610 ;; This function is called by:
  3611 ;;		_TM1640_Writer_Dates
  3612 ;;		_Init_TM1640
  3613 ;;		_Open_Display
  3614 ;;		_Disable_Display
  3615 ;; This function uses a non-reentrant model
  3616 ;;
  3617                           
  3618                           	psect	text26
  3619  001EBC                     __ptext26:
  3620                           	opt stack 0
  3621  001EBC                     _TM1640_Stop:
  3622                           	opt stack 23
  3623                           
  3624                           ;TM1640.c: 34: RC3 = 0;
  3625                           
  3626                           ;incstack = 0
  3627  001EBC  9682               	bcf	3970,3,c	;volatile
  3628                           
  3629                           ;TM1640.c: 35: TM1640_Delay(1);
  3630  001EBE  0E01               	movlw	1
  3631  001EC0  ECA2  F00F         	call	_TM1640_Delay
  3632                           
  3633                           ;TM1640.c: 36: RC4 = 0;
  3634  001EC4  9882               	bcf	3970,4,c	;volatile
  3635                           
  3636                           ;TM1640.c: 37: TM1640_Delay(1);
  3637  001EC6  0E01               	movlw	1
  3638  001EC8  ECA2  F00F         	call	_TM1640_Delay
  3639                           
  3640                           ;TM1640.c: 38: RC3 = 1;
  3641  001ECC  8682               	bsf	3970,3,c	;volatile
  3642                           
  3643                           ;TM1640.c: 39: TM1640_Delay(1);
  3644  001ECE  0E01               	movlw	1
  3645  001ED0  ECA2  F00F         	call	_TM1640_Delay
  3646                           
  3647                           ;TM1640.c: 40: RC4 = 1;
  3648  001ED4  8882               	bsf	3970,4,c	;volatile
  3649                           
  3650                           ;TM1640.c: 41: TM1640_Delay(1);
  3651  001ED6  0E01               	movlw	1
  3652  001ED8  ECA2  F00F         	call	_TM1640_Delay
  3653                           
  3654                           ;TM1640.c: 42: RC3 = 0;
  3655  001EDC  9682               	bcf	3970,3,c	;volatile
  3656  001EDE  0012               	return		;funcret
  3657  001EE0                     __end_of_TM1640_Stop:
  3658                           	opt stack 0
  3659                           tblptru	equ	0xFF8
  3660                           tblptrh	equ	0xFF7
  3661                           tblptrl	equ	0xFF6
  3662                           tablat	equ	0xFF5
  3663                           prodh	equ	0xFF4
  3664                           prodl	equ	0xFF3
  3665                           intcon	equ	0xFF2
  3666                           postinc0	equ	0xFEE
  3667                           wreg	equ	0xFE8
  3668                           indf1	equ	0xFE7
  3669                           fsr1h	equ	0xFE2
  3670                           fsr1l	equ	0xFE1
  3671                           indf2	equ	0xFDF
  3672                           fsr2h	equ	0xFDA
  3673                           fsr2l	equ	0xFD9
  3674                           status	equ	0xFD8
  3675                           
  3676 ;; *************** function _TM1640_Start *****************
  3677 ;; Defined at:
  3678 ;;		line 19 in file "_01_USER/TM1640.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;		None
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;		None
  3683 ;; Return value:  Size  Location     Type
  3684 ;;		None               void
  3685 ;; Registers used:
  3686 ;;		wreg, status,2, status,0, cstack
  3687 ;; Tracked objects:
  3688 ;;		On entry : 0/0
  3689 ;;		On exit  : 0/0
  3690 ;;		Unchanged: 0/0
  3691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3696 ;;Total ram usage:        0 bytes
  3697 ;; Hardware stack levels used:    1
  3698 ;; Hardware stack levels required when called:    4
  3699 ;; This function calls:
  3700 ;;		_TM1640_Delay
  3701 ;; This function is called by:
  3702 ;;		_TM1640_Writer_Dates
  3703 ;;		_Init_TM1640
  3704 ;;		_Open_Display
  3705 ;;		_Disable_Display
  3706 ;; This function uses a non-reentrant model
  3707 ;;
  3708                           
  3709                           	psect	text27
  3710  001EE0                     __ptext27:
  3711                           	opt stack 0
  3712  001EE0                     _TM1640_Start:
  3713                           	opt stack 23
  3714                           
  3715                           ;TM1640.c: 21: RC3 = 0;
  3716                           
  3717                           ;incstack = 0
  3718  001EE0  9682               	bcf	3970,3,c	;volatile
  3719                           
  3720                           ;TM1640.c: 22: TM1640_Delay(1);
  3721  001EE2  0E01               	movlw	1
  3722  001EE4  ECA2  F00F         	call	_TM1640_Delay
  3723                           
  3724                           ;TM1640.c: 23: RC4 = 1;
  3725  001EE8  8882               	bsf	3970,4,c	;volatile
  3726                           
  3727                           ;TM1640.c: 24: TM1640_Delay(1);
  3728  001EEA  0E01               	movlw	1
  3729  001EEC  ECA2  F00F         	call	_TM1640_Delay
  3730                           
  3731                           ;TM1640.c: 25: RC3 = 1;
  3732  001EF0  8682               	bsf	3970,3,c	;volatile
  3733                           
  3734                           ;TM1640.c: 26: TM1640_Delay(1);
  3735  001EF2  0E01               	movlw	1
  3736  001EF4  ECA2  F00F         	call	_TM1640_Delay
  3737                           
  3738                           ;TM1640.c: 27: RC4 = 0;
  3739  001EF8  9882               	bcf	3970,4,c	;volatile
  3740                           
  3741                           ;TM1640.c: 28: TM1640_Delay(1);
  3742  001EFA  0E01               	movlw	1
  3743  001EFC  ECA2  F00F         	call	_TM1640_Delay
  3744                           
  3745                           ;TM1640.c: 29: RC3 = 0;
  3746  001F00  9682               	bcf	3970,3,c	;volatile
  3747  001F02  0012               	return		;funcret
  3748  001F04                     __end_of_TM1640_Start:
  3749                           	opt stack 0
  3750                           tblptru	equ	0xFF8
  3751                           tblptrh	equ	0xFF7
  3752                           tblptrl	equ	0xFF6
  3753                           tablat	equ	0xFF5
  3754                           prodh	equ	0xFF4
  3755                           prodl	equ	0xFF3
  3756                           intcon	equ	0xFF2
  3757                           postinc0	equ	0xFEE
  3758                           wreg	equ	0xFE8
  3759                           indf1	equ	0xFE7
  3760                           fsr1h	equ	0xFE2
  3761                           fsr1l	equ	0xFE1
  3762                           indf2	equ	0xFDF
  3763                           fsr2h	equ	0xFDA
  3764                           fsr2l	equ	0xFD9
  3765                           status	equ	0xFD8
  3766                           
  3767 ;; *************** function _TM1640_Delay *****************
  3768 ;; Defined at:
  3769 ;;		line 109 in file "_01_USER/TM1640.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;  Time            1    wreg     unsigned char 
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;  Time            1   24[COMRAM] unsigned char 
  3774 ;;  i               1   25[COMRAM] unsigned char 
  3775 ;; Return value:  Size  Location     Type
  3776 ;;		None               void
  3777 ;; Registers used:
  3778 ;;		wreg, status,2, status,0
  3779 ;; Tracked objects:
  3780 ;;		On entry : 0/0
  3781 ;;		On exit  : 0/0
  3782 ;;		Unchanged: 0/0
  3783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3785 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3787 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3788 ;;Total ram usage:        2 bytes
  3789 ;; Hardware stack levels used:    1
  3790 ;; Hardware stack levels required when called:    3
  3791 ;; This function calls:
  3792 ;;		Nothing
  3793 ;; This function is called by:
  3794 ;;		_TM1640_Start
  3795 ;;		_TM1640_Stop
  3796 ;;		_TM1640_Writer_Byte
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           
  3800                           	psect	text28
  3801  001F44                     __ptext28:
  3802                           	opt stack 0
  3803  001F44                     _TM1640_Delay:
  3804                           	opt stack 23
  3805                           
  3806                           ;incstack = 0
  3807                           ;TM1640_Delay@Time stored from wreg
  3808  001F44  6E19               	movwf	TM1640_Delay@Time,c
  3809  001F46                     
  3810                           ;TM1640.c: 114: {
  3811                           ;TM1640.c: 115: for(i=0; i<10; ++i);
  3812  001F46  0E00               	movlw	0
  3813  001F48  6E1A               	movwf	TM1640_Delay@i,c
  3814  001F4A  D002               	goto	l2724
  3815  001F4C  D004               	goto	l334
  3816  001F4E                     l2722:
  3817  001F4E  2A1A               	incf	TM1640_Delay@i,f,c
  3818  001F50                     l2724:
  3819  001F50  0E09               	movlw	9
  3820  001F52  641A               	cpfsgt	TM1640_Delay@i,c
  3821  001F54  D7FC               	goto	l2722
  3822  001F56                     l334:
  3823                           
  3824                           ;TM1640.c: 116: }while(--Time);
  3825  001F56  2E19               	decfsz	TM1640_Delay@Time,f,c
  3826  001F58  D7F6               	goto	l2716
  3827  001F5A  0012               	return	
  3828  001F5C  0012               	return		;funcret
  3829  001F5E                     __end_of_TM1640_Delay:
  3830                           	opt stack 0
  3831                           tblptru	equ	0xFF8
  3832                           tblptrh	equ	0xFF7
  3833                           tblptrl	equ	0xFF6
  3834                           tablat	equ	0xFF5
  3835                           prodh	equ	0xFF4
  3836                           prodl	equ	0xFF3
  3837                           intcon	equ	0xFF2
  3838                           postinc0	equ	0xFEE
  3839                           wreg	equ	0xFE8
  3840                           indf1	equ	0xFE7
  3841                           fsr1h	equ	0xFE2
  3842                           fsr1l	equ	0xFE1
  3843                           indf2	equ	0xFDF
  3844                           fsr2h	equ	0xFDA
  3845                           fsr2l	equ	0xFD9
  3846                           status	equ	0xFD8
  3847                           
  3848 ;; *************** function _GPIO_Config *****************
  3849 ;; Defined at:
  3850 ;;		line 38 in file "_01_USER/GPIO.c"
  3851 ;; Parameters:    Size  Location     Type
  3852 ;;		None
  3853 ;; Auto vars:     Size  Location     Type
  3854 ;;		None
  3855 ;; Return value:  Size  Location     Type
  3856 ;;		None               void
  3857 ;; Registers used:
  3858 ;;		wreg, status,2, status,0
  3859 ;; Tracked objects:
  3860 ;;		On entry : 0/0
  3861 ;;		On exit  : 0/0
  3862 ;;		Unchanged: 0/0
  3863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3868 ;;Total ram usage:        0 bytes
  3869 ;; Hardware stack levels used:    1
  3870 ;; Hardware stack levels required when called:    3
  3871 ;; This function calls:
  3872 ;;		Nothing
  3873 ;; This function is called by:
  3874 ;;		_main
  3875 ;; This function uses a non-reentrant model
  3876 ;;
  3877                           
  3878                           	psect	text29
  3879  001F8E                     __ptext29:
  3880                           	opt stack 0
  3881  001F8E                     _GPIO_Config:
  3882                           	opt stack 27
  3883                           
  3884                           ;GPIO.c: 41: TRISE &= 0x1f;
  3885                           
  3886                           ;incstack = 0
  3887  001F8E  0E1F               	movlw	31
  3888  001F90  1696               	andwf	3990,f,c	;volatile
  3889                           
  3890                           ;GPIO.c: 43: RE5 = 1;
  3891  001F92  8A84               	bsf	3972,5,c	;volatile
  3892                           
  3893                           ;GPIO.c: 44: RE6 = 1;
  3894  001F94  8C84               	bsf	3972,6,c	;volatile
  3895                           
  3896                           ;GPIO.c: 45: RE7 = 1;
  3897  001F96  8E84               	bsf	3972,7,c	;volatile
  3898  001F98  0012               	return		;funcret
  3899  001F9A                     __end_of_GPIO_Config:
  3900                           	opt stack 0
  3901                           tblptru	equ	0xFF8
  3902                           tblptrh	equ	0xFF7
  3903                           tblptrl	equ	0xFF6
  3904                           tablat	equ	0xFF5
  3905                           prodh	equ	0xFF4
  3906                           prodl	equ	0xFF3
  3907                           intcon	equ	0xFF2
  3908                           postinc0	equ	0xFEE
  3909                           wreg	equ	0xFE8
  3910                           indf1	equ	0xFE7
  3911                           fsr1h	equ	0xFE2
  3912                           fsr1l	equ	0xFE1
  3913                           indf2	equ	0xFDF
  3914                           fsr2h	equ	0xFDA
  3915                           fsr2l	equ	0xFD9
  3916                           status	equ	0xFD8
  3917                           
  3918 ;; *************** function _ADC6_Init *****************
  3919 ;; Defined at:
  3920 ;;		line 37 in file "_01_USER/My_ADC.c"
  3921 ;; Parameters:    Size  Location     Type
  3922 ;;		None
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;		None
  3925 ;; Return value:  Size  Location     Type
  3926 ;;		None               void
  3927 ;; Registers used:
  3928 ;;		wreg, status,2, status,0, cstack
  3929 ;; Tracked objects:
  3930 ;;		On entry : 0/0
  3931 ;;		On exit  : 0/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3938 ;;Total ram usage:        0 bytes
  3939 ;; Hardware stack levels used:    1
  3940 ;; Hardware stack levels required when called:    4
  3941 ;; This function calls:
  3942 ;;		_OpenADC
  3943 ;; This function is called by:
  3944 ;;		_main
  3945 ;; This function uses a non-reentrant model
  3946 ;;
  3947                           
  3948                           	psect	text30
  3949  001F5E                     __ptext30:
  3950                           	opt stack 0
  3951  001F5E                     _ADC6_Init:
  3952                           	opt stack 26
  3953                           
  3954                           ;My_ADC.c: 40: OpenADC(0b11111111 &
  3955                           ;My_ADC.c: 41: 0b11110011 &
  3956                           ;My_ADC.c: 42: 0b10001111
  3957                           ;My_ADC.c: 43: ,
  3958                           ;My_ADC.c: 44: 0b10011011
  3959                           ;My_ADC.c: 45: ,
  3960                           ;My_ADC.c: 46: 0b00111111 &
  3961                           ;My_ADC.c: 47: 0b11111111 &
  3962                           ;My_ADC.c: 48: 0b11110111 &
  3963                           ;My_ADC.c: 49: 0b11111000
  3964                           ;My_ADC.c: 50: );
  3965                           
  3966                           ;incstack = 0
  3967  001F5E  0E9B               	movlw	155
  3968  001F60  6E19               	movwf	OpenADC@config2,c
  3969  001F62  0E30               	movlw	48
  3970  001F64  6E1A               	movwf	OpenADC@config3,c
  3971  001F66  0E83               	movlw	131
  3972  001F68  ECA9  F00D         	call	_OpenADC
  3973                           
  3974                           ;My_ADC.c: 52: (PIE1bits.ADIE=0);
  3975  001F6C  9C9D               	bcf	3997,6,c	;volatile
  3976  001F6E  0012               	return		;funcret
  3977  001F70                     __end_of_ADC6_Init:
  3978                           	opt stack 0
  3979                           tblptru	equ	0xFF8
  3980                           tblptrh	equ	0xFF7
  3981                           tblptrl	equ	0xFF6
  3982                           tablat	equ	0xFF5
  3983                           prodh	equ	0xFF4
  3984                           prodl	equ	0xFF3
  3985                           intcon	equ	0xFF2
  3986                           postinc0	equ	0xFEE
  3987                           wreg	equ	0xFE8
  3988                           indf1	equ	0xFE7
  3989                           fsr1h	equ	0xFE2
  3990                           fsr1l	equ	0xFE1
  3991                           indf2	equ	0xFDF
  3992                           fsr2h	equ	0xFDA
  3993                           fsr2l	equ	0xFD9
  3994                           status	equ	0xFD8
  3995                           
  3996 ;; *************** function _OpenADC *****************
  3997 ;; Defined at:
  3998 ;;		line 305 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  3999 ;; Parameters:    Size  Location     Type
  4000 ;;  config          1    wreg     unsigned char 
  4001 ;;  config2         1   24[COMRAM] unsigned char 
  4002 ;;  config3         1   25[COMRAM] unsigned char 
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;  config          1   28[COMRAM] unsigned char 
  4005 ;; Return value:  Size  Location     Type
  4006 ;;		None               void
  4007 ;; Registers used:
  4008 ;;		wreg, status,2, status,0
  4009 ;; Tracked objects:
  4010 ;;		On entry : 0/0
  4011 ;;		On exit  : 0/0
  4012 ;;		Unchanged: 0/0
  4013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4014 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4015 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4016 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4017 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4018 ;;Total ram usage:        5 bytes
  4019 ;; Hardware stack levels used:    1
  4020 ;; Hardware stack levels required when called:    3
  4021 ;; This function calls:
  4022 ;;		Nothing
  4023 ;; This function is called by:
  4024 ;;		_ADC6_Init
  4025 ;; This function uses a non-reentrant model
  4026 ;;
  4027                           
  4028                           	psect	text31
  4029  001B52                     __ptext31:
  4030                           	opt stack 0
  4031  001B52                     _OpenADC:
  4032                           	opt stack 26
  4033                           
  4034                           ;incstack = 0
  4035                           ;OpenADC@config stored from wreg
  4036  001B52  6E1D               	movwf	OpenADC@config,c
  4037  001B54  0E00               	movlw	0
  4038  001B56  6EC2               	movwf	4034,c	;volatile
  4039  001B58  0E00               	movlw	0
  4040  001B5A  6EC1               	movwf	4033,c	;volatile
  4041  001B5C  0E00               	movlw	0
  4042  001B5E  6EC0               	movwf	4032,c	;volatile
  4043  001B60  5019               	movf	OpenADC@config2,w,c
  4044  001B62  0B7C               	andlw	124
  4045  001B64  6EC2               	movwf	4034,c	;volatile
  4046  001B66  C01A  FFC1         	movff	OpenADC@config3,4033	;volatile
  4047  001B6A  C01D  F01B         	movff	OpenADC@config,??_OpenADC
  4048  001B6E  90D8               	bcf	status,0,c
  4049  001B70  361B               	rlcf	??_OpenADC,f,c
  4050  001B72  90D8               	bcf	status,0,c
  4051  001B74  361B               	rlcf	??_OpenADC,f,c
  4052  001B76  0E38               	movlw	56
  4053  001B78  161B               	andwf	??_OpenADC,f,c
  4054  001B7A  C01D  F01C         	movff	OpenADC@config,??_OpenADC+1
  4055  001B7E  3A1C               	swapf	??_OpenADC+1,f,c
  4056  001B80  0E0F               	movlw	15
  4057  001B82  161C               	andwf	??_OpenADC+1,f,c
  4058  001B84  0E07               	movlw	7
  4059  001B86  161C               	andwf	??_OpenADC+1,f,c
  4060  001B88  501D               	movf	OpenADC@config,w,c
  4061  001B8A  0B80               	andlw	128
  4062  001B8C  101C               	iorwf	??_OpenADC+1,w,c
  4063  001B8E  101B               	iorwf	??_OpenADC,w,c
  4064  001B90  6EC0               	movwf	4032,c	;volatile
  4065  001B92  AE19               	btfss	OpenADC@config2,7,c
  4066  001B94  D003               	goto	l447
  4067  001B96  9C9E               	bcf	3998,6,c	;volatile
  4068  001B98  8C9D               	bsf	3997,6,c	;volatile
  4069  001B9A  8CF2               	bsf	intcon,6,c	;volatile
  4070  001B9C                     l447:
  4071  001B9C  80C2               	bsf	4034,0,c	;volatile
  4072  001B9E  0012               	return		;funcret
  4073  001BA0                     __end_of_OpenADC:
  4074                           	opt stack 0
  4075                           tblptru	equ	0xFF8
  4076                           tblptrh	equ	0xFF7
  4077                           tblptrl	equ	0xFF6
  4078                           tablat	equ	0xFF5
  4079                           prodh	equ	0xFF4
  4080                           prodl	equ	0xFF3
  4081                           intcon	equ	0xFF2
  4082                           postinc0	equ	0xFEE
  4083                           wreg	equ	0xFE8
  4084                           indf1	equ	0xFE7
  4085                           fsr1h	equ	0xFE2
  4086                           fsr1l	equ	0xFE1
  4087                           indf2	equ	0xFDF
  4088                           fsr2h	equ	0xFDA
  4089                           fsr2l	equ	0xFD9
  4090                           status	equ	0xFD8
  4091                           
  4092 ;; *************** function _Sys_Cyc *****************
  4093 ;; Defined at:
  4094 ;;		line 98 in file "_01_USER/My_Timer.c"
  4095 ;; Parameters:    Size  Location     Type
  4096 ;;		None
  4097 ;; Auto vars:     Size  Location     Type
  4098 ;;  _pulse          1   23[COMRAM] unsigned char 
  4099 ;; Return value:  Size  Location     Type
  4100 ;;		None               void
  4101 ;; Registers used:
  4102 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4109 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4110 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4111 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4112 ;;Total ram usage:       15 bytes
  4113 ;; Hardware stack levels used:    1
  4114 ;; Hardware stack levels required when called:    2
  4115 ;; This function calls:
  4116 ;;		_Delay_1Khz
  4117 ;;		_Key_FSM_Scan
  4118 ;;		_Manage_Message
  4119 ;;		___llmod
  4120 ;;		i2_SetTimer0
  4121 ;; This function is called by:
  4122 ;;		Interrupt level 2
  4123 ;; This function uses a non-reentrant model
  4124 ;;
  4125                           
  4126                           	psect	intcode
  4127  000008                     __pintcode:
  4128                           	opt stack 0
  4129  000008                     _Sys_Cyc:
  4130                           	opt stack 23
  4131                           
  4132                           ;incstack = 0
  4133  000008  CFFA F00A          	movff	pclath,??_Sys_Cyc
  4134  00000C  CFFB F00B          	movff	pclatu,??_Sys_Cyc+1
  4135  000010  CFE9 F00C          	movff	fsr0l,??_Sys_Cyc+2
  4136  000014  CFEA F00D          	movff	fsr0h,??_Sys_Cyc+3
  4137  000018  CFE1 F00E          	movff	fsr1l,??_Sys_Cyc+4
  4138  00001C  CFE2 F00F          	movff	fsr1h,??_Sys_Cyc+5
  4139  000020  CFD9 F010          	movff	fsr2l,??_Sys_Cyc+6
  4140  000024  CFDA F011          	movff	fsr2h,??_Sys_Cyc+7
  4141  000028  CFF3 F012          	movff	prodl,??_Sys_Cyc+8
  4142  00002C  CFF4 F013          	movff	prodh,??_Sys_Cyc+9
  4143  000030  CFF6 F014          	movff	tblptrl,??_Sys_Cyc+10
  4144  000034  CFF7 F015          	movff	tblptrh,??_Sys_Cyc+11
  4145  000038  CFF8 F016          	movff	tblptru,??_Sys_Cyc+12
  4146  00003C  CFF5 F017          	movff	tablat,??_Sys_Cyc+13
  4147                           
  4148                           ;My_Timer.c: 101: static unsigned char _overturn_1Khz = 0,_overturn_LED = 0;
  4149                           ;My_Timer.c: 102: unsigned char _pulse = 10;
  4150  000040  0E0A               	movlw	10
  4151  000042  6E18               	movwf	Sys_Cyc@_pulse,c
  4152                           
  4153                           ;My_Timer.c: 103: static char _RS485_Receive_Num = 0,RS485_Timer = 0;
  4154                           ;My_Timer.c: 106: if(TMR0IF && TMR0IE)
  4155  000044  B4F2               	btfsc	intcon,2,c	;volatile
  4156  000046  AAF2               	btfss	intcon,5,c	;volatile
  4157  000048  D064               	goto	i2l2682
  4158                           
  4159                           ;My_Timer.c: 107: {
  4160                           ;My_Timer.c: 108: Timer_Cyc = (Timer_Cyc+1) % 100000000;
  4161  00004A  0E01               	movlw	1
  4162  00004C  2437               	addwf	_Timer_Cyc,w,c
  4163  00004E  6E01               	movwf	___llmod@dividend,c
  4164  000050  0E00               	movlw	0
  4165  000052  2038               	addwfc	_Timer_Cyc+1,w,c
  4166  000054  6E02               	movwf	___llmod@dividend+1,c
  4167  000056  0E00               	movlw	0
  4168  000058  2039               	addwfc	_Timer_Cyc+2,w,c
  4169  00005A  6E03               	movwf	___llmod@dividend+2,c
  4170  00005C  0E00               	movlw	0
  4171  00005E  203A               	addwfc	_Timer_Cyc+3,w,c
  4172  000060  6E04               	movwf	___llmod@dividend+3,c
  4173  000062  0E00               	movlw	0
  4174  000064  6E05               	movwf	___llmod@divisor,c
  4175  000066  0EE1               	movlw	225
  4176  000068  6E06               	movwf	___llmod@divisor+1,c
  4177  00006A  0EF5               	movlw	245
  4178  00006C  6E07               	movwf	___llmod@divisor+2,c
  4179  00006E  0E05               	movlw	5
  4180  000070  6E08               	movwf	___llmod@divisor+3,c
  4181  000072  ECD6  F00C         	call	___llmod	;wreg free
  4182  000076  C001  F037         	movff	?___llmod,_Timer_Cyc
  4183  00007A  C002  F038         	movff	?___llmod+1,_Timer_Cyc+1
  4184  00007E  C003  F039         	movff	?___llmod+2,_Timer_Cyc+2
  4185  000082  C004  F03A         	movff	?___llmod+3,_Timer_Cyc+3
  4186                           
  4187                           ;My_Timer.c: 109: if(_RS485_Receive_Num == 0) RS485_Timer --;
  4188  000086  5040               	movf	Sys_Cyc@_RS485_Receive_Num,w,c
  4189  000088  A4D8               	btfss	status,2,c
  4190  00008A  D002               	goto	i2l2654
  4191  00008C  063F               	decf	Sys_Cyc@RS485_Timer,f,c
  4192  00008E  D000               	goto	i2l2654
  4193  000090                     i2l2654:
  4194                           
  4195                           ;My_Timer.c: 111: if( Handle_Switch._1Khz )
  4196  000090  5033               	movf	_Handle_Switch,w,c
  4197  000092  A4D8               	btfss	status,2,c
  4198  000094  D00D               	goto	i2l2666
  4199  000096  D012               	goto	i2l2668
  4200                           
  4201                           ;My_Timer.c: 112: {
  4202                           ;My_Timer.c: 113: while( _pulse-- )
  4203  000098  D00B               	goto	i2l2666
  4204  00009A                     i2l2658:
  4205                           
  4206                           ;My_Timer.c: 114: {
  4207                           ;My_Timer.c: 115: _overturn_1Khz =~ _overturn_1Khz;
  4208  00009A  1E41               	comf	Sys_Cyc@_overturn_1Khz,f,c
  4209                           
  4210                           ;My_Timer.c: 116: if(_overturn_1Khz) PORTEbits.RE7 = 1; else PORTEbits.RE7 = 0;
  4211  00009C  5041               	movf	Sys_Cyc@_overturn_1Khz,w,c
  4212  00009E  B4D8               	btfsc	status,2,c
  4213  0000A0  D002               	goto	i2l262
  4214  0000A2  8E84               	bsf	3972,7,c	;volatile
  4215  0000A4  D002               	goto	i2l2664
  4216  0000A6                     i2l262:
  4217  0000A6  9E84               	bcf	3972,7,c	;volatile
  4218  0000A8  D000               	goto	i2l2664
  4219  0000AA                     i2l2664:
  4220                           
  4221                           ;My_Timer.c: 117: Delay_1Khz();
  4222  0000AA  EC9A  F00E         	call	_Delay_1Khz	;wreg free
  4223  0000AE  D000               	goto	i2l2666
  4224  0000B0                     i2l2666:
  4225  0000B0  0618               	decf	Sys_Cyc@_pulse,f,c
  4226  0000B2  2818               	incf	Sys_Cyc@_pulse,w,c
  4227  0000B4  B4D8               	btfsc	status,2,c
  4228  0000B6  D002               	goto	i2l2668
  4229  0000B8  D7F0               	goto	i2l2658
  4230  0000BA  D000               	goto	i2l2668
  4231  0000BC                     i2l2668:
  4232                           
  4233                           ;My_Timer.c: 118: }
  4234                           ;My_Timer.c: 119: }
  4235                           ;My_Timer.c: 122: if( Timer_Cyc%30 == 0 )
  4236  0000BC  C037  F001         	movff	_Timer_Cyc,___llmod@dividend
  4237  0000C0  C038  F002         	movff	_Timer_Cyc+1,___llmod@dividend+1
  4238  0000C4  C039  F003         	movff	_Timer_Cyc+2,___llmod@dividend+2
  4239  0000C8  C03A  F004         	movff	_Timer_Cyc+3,___llmod@dividend+3
  4240  0000CC  0E1E               	movlw	30
  4241  0000CE  6E05               	movwf	___llmod@divisor,c
  4242  0000D0  0E00               	movlw	0
  4243  0000D2  6E06               	movwf	___llmod@divisor+1,c
  4244  0000D4  0E00               	movlw	0
  4245  0000D6  6E07               	movwf	___llmod@divisor+2,c
  4246  0000D8  0E00               	movlw	0
  4247  0000DA  6E08               	movwf	___llmod@divisor+3,c
  4248  0000DC  ECD6  F00C         	call	___llmod	;wreg free
  4249  0000E0  5001               	movf	?___llmod,w,c
  4250  0000E2  1002               	iorwf	?___llmod+1,w,c
  4251  0000E4  1003               	iorwf	?___llmod+2,w,c
  4252  0000E6  1004               	iorwf	?___llmod+3,w,c
  4253  0000E8  A4D8               	btfss	status,2,c
  4254  0000EA  D008               	goto	i2l2676
  4255                           
  4256                           ;My_Timer.c: 123: {
  4257                           ;My_Timer.c: 124: _overturn_LED = ~_overturn_LED;
  4258  0000EC  1E42               	comf	Sys_Cyc@_overturn_LED,f,c
  4259                           
  4260                           ;My_Timer.c: 125: if(_overturn_LED) PORTEbits.RE5=0;
  4261  0000EE  5042               	movf	Sys_Cyc@_overturn_LED,w,c
  4262  0000F0  B4D8               	btfsc	status,2,c
  4263  0000F2  D002               	goto	i2l266
  4264  0000F4  9A84               	bcf	3972,5,c	;volatile
  4265  0000F6  D002               	goto	i2l2676
  4266  0000F8                     i2l266:
  4267                           
  4268                           ;My_Timer.c: 126: else PORTEbits.RE5=1;
  4269  0000F8  8A84               	bsf	3972,5,c	;volatile
  4270  0000FA  D000               	goto	i2l2676
  4271  0000FC                     i2l2676:
  4272                           
  4273                           ;My_Timer.c: 127: }
  4274                           ;My_Timer.c: 130: Key_FSM_Scan();
  4275  0000FC  ECF6  F00D         	call	_Key_FSM_Scan	;wreg free
  4276                           
  4277                           ;My_Timer.c: 133: Manage_Message();
  4278  000100  EC83  F009         	call	_Manage_Message	;wreg free
  4279                           
  4280                           ;My_Timer.c: 135: SetTimer0(78);
  4281  000104  0E00               	movlw	0
  4282  000106  6E02               	movwf	i2SetTimer0@_tmr+1,c
  4283  000108  0E4E               	movlw	78
  4284  00010A  6E01               	movwf	i2SetTimer0@_tmr,c
  4285  00010C  ECE7  F00E         	call	i2_SetTimer0	;wreg free
  4286  000110  D000               	goto	i2l2682
  4287  000112                     i2l2682:
  4288                           
  4289                           ;My_Timer.c: 136: }
  4290                           ;My_Timer.c: 139: if( RC2IF )
  4291  000112  AAA4               	btfss	4004,5,c	;volatile
  4292  000114  D022               	goto	i2l272
  4293                           
  4294                           ;My_Timer.c: 140: {
  4295                           ;My_Timer.c: 141: if(RS485_Timer == 0 ) _RS485_Receive_Num = 0;
  4296  000116  503F               	movf	Sys_Cyc@RS485_Timer,w,c
  4297  000118  A4D8               	btfss	status,2,c
  4298  00011A  D003               	goto	i2l2688
  4299  00011C  0E00               	movlw	0
  4300  00011E  6E40               	movwf	Sys_Cyc@_RS485_Receive_Num,c
  4301  000120  D000               	goto	i2l2688
  4302  000122                     i2l2688:
  4303                           
  4304                           ;My_Timer.c: 143: RS485_ReceiveBuff[_RS485_Receive_Num] = RCREG2;
  4305  000122  5040               	movf	Sys_Cyc@_RS485_Receive_Num,w,c
  4306  000124  0D01               	mullw	1
  4307  000126  0E60               	movlw	low _RS485_ReceiveBuff
  4308  000128  24F3               	addwf	prodl,w,c
  4309  00012A  6ED9               	movwf	fsr2l,c
  4310  00012C  0E00               	movlw	high _RS485_ReceiveBuff
  4311  00012E  20F4               	addwfc	prodh,w,c
  4312  000130  6EDA               	movwf	fsr2h,c
  4313  000132  CF1D FFDF          	movff	3869,indf2	;volatile
  4314                           
  4315                           ;My_Timer.c: 145: if(RS485_ReceiveBuff[0] == 0xaa) _RS485_Receive_Num++,RS485_Timer = 2;
  4316  000136  0EAA               	movlw	170
  4317  000138  0100               	movlb	0	; () banked
  4318  00013A  1960               	xorwf	_RS485_ReceiveBuff& (0+255),w,b
  4319  00013C  A4D8               	btfss	status,2,c
  4320  00013E  D004               	goto	i2l2696
  4321                           
  4322                           ; BSR set to: 0
  4323  000140  2A40               	incf	Sys_Cyc@_RS485_Receive_Num,f,c
  4324                           
  4325                           ; BSR set to: 0
  4326  000142  0E02               	movlw	2
  4327  000144  6E3F               	movwf	Sys_Cyc@RS485_Timer,c
  4328  000146  D000               	goto	i2l2696
  4329  000148                     i2l2696:
  4330                           
  4331                           ; BSR set to: 0
  4332                           ;My_Timer.c: 147: if( _RS485_Receive_Num == 10 )
  4333  000148  0E0A               	movlw	10
  4334  00014A  1840               	xorwf	Sys_Cyc@_RS485_Receive_Num,w,c
  4335  00014C  A4D8               	btfss	status,2,c
  4336  00014E  D005               	goto	i2l272
  4337                           
  4338                           ; BSR set to: 0
  4339                           ;My_Timer.c: 148: {
  4340                           ;My_Timer.c: 149: RS485_Receive_Flag = 1 ;
  4341  000150  0E01               	movlw	1
  4342  000152  6E45               	movwf	_RS485_Receive_Flag,c
  4343                           
  4344                           ;My_Timer.c: 150: _RS485_Receive_Num = 0;
  4345  000154  0E00               	movlw	0
  4346  000156  6E40               	movwf	Sys_Cyc@_RS485_Receive_Num,c
  4347                           
  4348                           ; BSR set to: 0
  4349  000158  D000               	goto	i2l272
  4350  00015A                     i2l272:
  4351  00015A  C017  FFF5         	movff	??_Sys_Cyc+13,tablat
  4352  00015E  C016  FFF8         	movff	??_Sys_Cyc+12,tblptru
  4353  000162  C015  FFF7         	movff	??_Sys_Cyc+11,tblptrh
  4354  000166  C014  FFF6         	movff	??_Sys_Cyc+10,tblptrl
  4355  00016A  C013  FFF4         	movff	??_Sys_Cyc+9,prodh
  4356  00016E  C012  FFF3         	movff	??_Sys_Cyc+8,prodl
  4357  000172  C011  FFDA         	movff	??_Sys_Cyc+7,fsr2h
  4358  000176  C010  FFD9         	movff	??_Sys_Cyc+6,fsr2l
  4359  00017A  C00F  FFE2         	movff	??_Sys_Cyc+5,fsr1h
  4360  00017E  C00E  FFE1         	movff	??_Sys_Cyc+4,fsr1l
  4361  000182  C00D  FFEA         	movff	??_Sys_Cyc+3,fsr0h
  4362  000186  C00C  FFE9         	movff	??_Sys_Cyc+2,fsr0l
  4363  00018A  C00B  FFFB         	movff	??_Sys_Cyc+1,pclatu
  4364  00018E  C00A  FFFA         	movff	??_Sys_Cyc,pclath
  4365  000192  0011               	retfie		f
  4366  000194                     __end_of_Sys_Cyc:
  4367                           	opt stack 0
  4368                           pclatu	equ	0xFFB
  4369                           pclath	equ	0xFFA
  4370                           tblptru	equ	0xFF8
  4371                           tblptrh	equ	0xFF7
  4372                           tblptrl	equ	0xFF6
  4373                           tablat	equ	0xFF5
  4374                           prodh	equ	0xFF4
  4375                           prodl	equ	0xFF3
  4376                           intcon	equ	0xFF2
  4377                           postinc0	equ	0xFEE
  4378                           fsr0h	equ	0xFEA
  4379                           fsr0l	equ	0xFE9
  4380                           wreg	equ	0xFE8
  4381                           indf1	equ	0xFE7
  4382                           fsr1h	equ	0xFE2
  4383                           fsr1l	equ	0xFE1
  4384                           indf2	equ	0xFDF
  4385                           fsr2h	equ	0xFDA
  4386                           fsr2l	equ	0xFD9
  4387                           status	equ	0xFD8
  4388                           
  4389 ;; *************** function i2_SetTimer0 *****************
  4390 ;; Defined at:
  4391 ;;		line 79 in file "_01_USER/My_Timer.c"
  4392 ;; Parameters:    Size  Location     Type
  4393 ;;  _tmr            2    0[COMRAM] unsigned int 
  4394 ;; Auto vars:     Size  Location     Type
  4395 ;;		None
  4396 ;; Return value:  Size  Location     Type
  4397 ;;		None               void
  4398 ;; Registers used:
  4399 ;;		wreg, status,2, status,0
  4400 ;; Tracked objects:
  4401 ;;		On entry : 0/0
  4402 ;;		On exit  : 0/0
  4403 ;;		Unchanged: 0/0
  4404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4405 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4407 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4408 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4409 ;;Total ram usage:        4 bytes
  4410 ;; Hardware stack levels used:    1
  4411 ;; This function calls:
  4412 ;;		Nothing
  4413 ;; This function is called by:
  4414 ;;		_Sys_Cyc
  4415 ;; This function uses a non-reentrant model
  4416 ;;
  4417                           
  4418                           	psect	text33
  4419  001DCE                     __ptext33:
  4420                           	opt stack 0
  4421  001DCE                     i2_SetTimer0:
  4422                           	opt stack 24
  4423                           
  4424                           ;My_Timer.c: 81: if(_tmr > 0xffff) _tmr = 0xffff;
  4425                           
  4426                           ;incstack = 0
  4427  001DCE  D003               	goto	i2l2616
  4428  001DD0  6801               	setf	i2SetTimer0@_tmr,c
  4429  001DD2  6802               	setf	i2SetTimer0@_tmr+1,c
  4430  001DD4  D000               	goto	i2l2616
  4431  001DD6                     i2l2616:
  4432                           
  4433                           ;My_Timer.c: 82: _tmr=0xffff-_tmr;
  4434  001DD6  C001  F003         	movff	i2SetTimer0@_tmr,??i2_SetTimer0
  4435  001DDA  C002  F004         	movff	i2SetTimer0@_tmr+1,??i2_SetTimer0+1
  4436  001DDE  1E03               	comf	??i2_SetTimer0,f,c
  4437  001DE0  1E04               	comf	??i2_SetTimer0+1,f,c
  4438  001DE2  4A03               	infsnz	??i2_SetTimer0,f,c
  4439  001DE4  2A04               	incf	??i2_SetTimer0+1,f,c
  4440  001DE6  0EFF               	movlw	255
  4441  001DE8  2403               	addwf	??i2_SetTimer0,w,c
  4442  001DEA  6E01               	movwf	i2SetTimer0@_tmr,c
  4443  001DEC  0EFF               	movlw	255
  4444  001DEE  2004               	addwfc	??i2_SetTimer0+1,w,c
  4445  001DF0  6E02               	movwf	i2SetTimer0@_tmr+1,c
  4446                           
  4447                           ;My_Timer.c: 83: TMR0H = _tmr/256;
  4448  001DF2  5002               	movf	i2SetTimer0@_tmr+1,w,c
  4449  001DF4  6ED7               	movwf	4055,c	;volatile
  4450                           
  4451                           ;My_Timer.c: 84: TMR0L = _tmr%256;
  4452  001DF6  C001  FFD6         	movff	i2SetTimer0@_tmr,4054	;volatile
  4453                           
  4454                           ;My_Timer.c: 85: TMR0IF = 0;
  4455  001DFA  94F2               	bcf	intcon,2,c	;volatile
  4456  001DFC  0012               	return		;funcret
  4457  001DFE                     __end_ofi2_SetTimer0:
  4458                           	opt stack 0
  4459                           pclatu	equ	0xFFB
  4460                           pclath	equ	0xFFA
  4461                           tblptru	equ	0xFF8
  4462                           tblptrh	equ	0xFF7
  4463                           tblptrl	equ	0xFF6
  4464                           tablat	equ	0xFF5
  4465                           prodh	equ	0xFF4
  4466                           prodl	equ	0xFF3
  4467                           intcon	equ	0xFF2
  4468                           postinc0	equ	0xFEE
  4469                           fsr0h	equ	0xFEA
  4470                           fsr0l	equ	0xFE9
  4471                           wreg	equ	0xFE8
  4472                           indf1	equ	0xFE7
  4473                           fsr1h	equ	0xFE2
  4474                           fsr1l	equ	0xFE1
  4475                           indf2	equ	0xFDF
  4476                           fsr2h	equ	0xFDA
  4477                           fsr2l	equ	0xFD9
  4478                           status	equ	0xFD8
  4479                           
  4480 ;; *************** function ___llmod *****************
  4481 ;; Defined at:
  4482 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  4483 ;; Parameters:    Size  Location     Type
  4484 ;;  dividend        4    0[COMRAM] unsigned long 
  4485 ;;  divisor         4    4[COMRAM] unsigned long 
  4486 ;; Auto vars:     Size  Location     Type
  4487 ;;  counter         1    8[COMRAM] unsigned char 
  4488 ;; Return value:  Size  Location     Type
  4489 ;;                  4    0[COMRAM] unsigned long 
  4490 ;; Registers used:
  4491 ;;		wreg, status,2, status,0
  4492 ;; Tracked objects:
  4493 ;;		On entry : 0/0
  4494 ;;		On exit  : 0/0
  4495 ;;		Unchanged: 0/0
  4496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4497 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4498 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4500 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4501 ;;Total ram usage:        9 bytes
  4502 ;; Hardware stack levels used:    1
  4503 ;; This function calls:
  4504 ;;		Nothing
  4505 ;; This function is called by:
  4506 ;;		_Sys_Cyc
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           	psect	text34
  4511  0019AC                     __ptext34:
  4512                           	opt stack 0
  4513  0019AC                     ___llmod:
  4514                           	opt stack 24
  4515                           
  4516                           ;incstack = 0
  4517  0019AC  5005               	movf	___llmod@divisor,w,c
  4518  0019AE  1006               	iorwf	___llmod@divisor+1,w,c
  4519  0019B0  1007               	iorwf	___llmod@divisor+2,w,c
  4520  0019B2  1008               	iorwf	___llmod@divisor+3,w,c
  4521  0019B4  B4D8               	btfsc	status,2,c
  4522  0019B6  D029               	goto	i2l952
  4523  0019B8  0E01               	movlw	1
  4524  0019BA  6E09               	movwf	___llmod@counter,c
  4525  0019BC  D007               	goto	i2l2602
  4526  0019BE                     i2l2600:
  4527  0019BE  90D8               	bcf	status,0,c
  4528  0019C0  3605               	rlcf	___llmod@divisor,f,c
  4529  0019C2  3606               	rlcf	___llmod@divisor+1,f,c
  4530  0019C4  3607               	rlcf	___llmod@divisor+2,f,c
  4531  0019C6  3608               	rlcf	___llmod@divisor+3,f,c
  4532  0019C8  2A09               	incf	___llmod@counter,f,c
  4533  0019CA  D000               	goto	i2l2602
  4534  0019CC                     i2l2602:
  4535  0019CC  BE08               	btfsc	___llmod@divisor+3,7,c
  4536  0019CE  D002               	goto	i2l2604
  4537  0019D0  D7F6               	goto	i2l2600
  4538  0019D2  D000               	goto	i2l2604
  4539  0019D4                     i2l2604:
  4540  0019D4  5005               	movf	___llmod@divisor,w,c
  4541  0019D6  5C01               	subwf	___llmod@dividend,w,c
  4542  0019D8  5006               	movf	___llmod@divisor+1,w,c
  4543  0019DA  5802               	subwfb	___llmod@dividend+1,w,c
  4544  0019DC  5007               	movf	___llmod@divisor+2,w,c
  4545  0019DE  5803               	subwfb	___llmod@dividend+2,w,c
  4546  0019E0  5008               	movf	___llmod@divisor+3,w,c
  4547  0019E2  5804               	subwfb	___llmod@dividend+3,w,c
  4548  0019E4  A0D8               	btfss	status,0,c
  4549  0019E6  D009               	goto	i2l2608
  4550  0019E8  5005               	movf	___llmod@divisor,w,c
  4551  0019EA  5E01               	subwf	___llmod@dividend,f,c
  4552  0019EC  5006               	movf	___llmod@divisor+1,w,c
  4553  0019EE  5A02               	subwfb	___llmod@dividend+1,f,c
  4554  0019F0  5007               	movf	___llmod@divisor+2,w,c
  4555  0019F2  5A03               	subwfb	___llmod@dividend+2,f,c
  4556  0019F4  5008               	movf	___llmod@divisor+3,w,c
  4557  0019F6  5A04               	subwfb	___llmod@dividend+3,f,c
  4558  0019F8  D000               	goto	i2l2608
  4559  0019FA                     i2l2608:
  4560  0019FA  90D8               	bcf	status,0,c
  4561  0019FC  3208               	rrcf	___llmod@divisor+3,f,c
  4562  0019FE  3207               	rrcf	___llmod@divisor+2,f,c
  4563  001A00  3206               	rrcf	___llmod@divisor+1,f,c
  4564  001A02  3205               	rrcf	___llmod@divisor,f,c
  4565  001A04  2E09               	decfsz	___llmod@counter,f,c
  4566  001A06  D7E6               	goto	i2l2604
  4567  001A08  D000               	goto	i2l952
  4568  001A0A                     i2l952:
  4569  001A0A  C001  F001         	movff	___llmod@dividend,?___llmod
  4570  001A0E  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  4571  001A12  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  4572  001A16  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  4573  001A1A  0012               	return		;funcret
  4574  001A1C                     __end_of___llmod:
  4575                           	opt stack 0
  4576                           pclatu	equ	0xFFB
  4577                           pclath	equ	0xFFA
  4578                           tblptru	equ	0xFF8
  4579                           tblptrh	equ	0xFF7
  4580                           tblptrl	equ	0xFF6
  4581                           tablat	equ	0xFF5
  4582                           prodh	equ	0xFF4
  4583                           prodl	equ	0xFF3
  4584                           intcon	equ	0xFF2
  4585                           postinc0	equ	0xFEE
  4586                           fsr0h	equ	0xFEA
  4587                           fsr0l	equ	0xFE9
  4588                           wreg	equ	0xFE8
  4589                           indf1	equ	0xFE7
  4590                           fsr1h	equ	0xFE2
  4591                           fsr1l	equ	0xFE1
  4592                           indf2	equ	0xFDF
  4593                           fsr2h	equ	0xFDA
  4594                           fsr2l	equ	0xFD9
  4595                           status	equ	0xFD8
  4596                           
  4597 ;; *************** function _Manage_Message *****************
  4598 ;; Defined at:
  4599 ;;		line 50 in file "_01_USER/Run.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;		None
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;  i               1    0        unsigned char 
  4604 ;; Return value:  Size  Location     Type
  4605 ;;		None               void
  4606 ;; Registers used:
  4607 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4608 ;; Tracked objects:
  4609 ;;		On entry : 0/0
  4610 ;;		On exit  : 0/0
  4611 ;;		Unchanged: 0/0
  4612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4617 ;;Total ram usage:        0 bytes
  4618 ;; Hardware stack levels used:    1
  4619 ;; Hardware stack levels required when called:    1
  4620 ;; This function calls:
  4621 ;;		_Key_FSM_Read
  4622 ;;		_Key_FSM_Reset
  4623 ;;		___lbmod
  4624 ;; This function is called by:
  4625 ;;		_Sys_Cyc
  4626 ;; This function uses a non-reentrant model
  4627 ;;
  4628                           
  4629                           	psect	text35
  4630  001306                     __ptext35:
  4631                           	opt stack 0
  4632  001306                     _Manage_Message:
  4633                           	opt stack 23
  4634                           
  4635                           ;Run.c: 52: char i;
  4636                           ;Run.c: 53: Key_FSM_Read();
  4637                           
  4638                           ;incstack = 0
  4639  001306  EC09  F008         	call	_Key_FSM_Read	;wreg free
  4640                           
  4641                           ;Run.c: 55: if ( Local_Key_User.key_group == ((0x01<<1)|(0x01<<3)) && Local_Key_User.key
      +                          _group_state == KEY_short )
  4642  00130A  0E0A               	movlw	10
  4643  00130C  0100               	movlb	0	; () banked
  4644  00130E  197D               	xorwf	(_Local_Key_User+1)& (0+255),w,b	;volatile
  4645  001310  A4D8               	btfss	status,2,c
  4646  001312  D00C               	goto	i2l2528
  4647                           
  4648                           ; BSR set to: 0
  4649  001314  0100               	movlb	0	; () banked
  4650  001316  057E               	decf	(_Local_Key_User+2)& (0+255),w,b	;volatile
  4651  001318  A4D8               	btfss	status,2,c
  4652  00131A  D008               	goto	i2l2528
  4653                           
  4654                           ; BSR set to: 0
  4655                           ;Run.c: 56: {
  4656                           ;Run.c: 57: Handle_Switch.Show_Send_Receive = ~Handle_Switch.Show_Send_Receive ;
  4657  00131C  5036               	movf	_Handle_Switch+3,w,c
  4658  00131E  0AFF               	xorlw	255
  4659  001320  6E36               	movwf	_Handle_Switch+3,c
  4660                           
  4661                           ; BSR set to: 0
  4662                           ;Run.c: 58: Key_FSM_Reset(); Receive_Flag =1;
  4663  001322  EC1C  F00E         	call	_Key_FSM_Reset	;wreg free
  4664  001326  0E01               	movlw	1
  4665  001328  6E46               	movwf	_Receive_Flag,c
  4666  00132A  D000               	goto	i2l2528
  4667  00132C                     i2l2528:
  4668                           
  4669                           ;Run.c: 59: }
  4670                           ;Run.c: 62: if ( Local_Key_User.key_group == ((0x01<<0)|(0x01<<3)) && Local_Key_User.key
      +                          _group_state == KEY_short )
  4671  00132C  0E09               	movlw	9
  4672  00132E  0100               	movlb	0	; () banked
  4673  001330  197D               	xorwf	(_Local_Key_User+1)& (0+255),w,b	;volatile
  4674  001332  A4D8               	btfss	status,2,c
  4675  001334  D008               	goto	i2l2536
  4676                           
  4677                           ; BSR set to: 0
  4678  001336  0100               	movlb	0	; () banked
  4679  001338  057E               	decf	(_Local_Key_User+2)& (0+255),w,b	;volatile
  4680  00133A  A4D8               	btfss	status,2,c
  4681  00133C  D004               	goto	i2l2536
  4682                           
  4683                           ; BSR set to: 0
  4684                           ;Run.c: 63: { g_Addr++; Key_FSM_Reset();}
  4685  00133E  2A47               	incf	_g_Addr,f,c
  4686                           
  4687                           ; BSR set to: 0
  4688  001340  EC1C  F00E         	call	_Key_FSM_Reset	;wreg free
  4689  001344  D000               	goto	i2l2536
  4690  001346                     i2l2536:
  4691                           
  4692                           ;Run.c: 66: if ( Local_Key_User.key_group == ((0x01<<0)|(0x01<<1)) && Local_Key_User.key
      +                          _group_state == KEY_short )
  4693  001346  0E03               	movlw	3
  4694  001348  0100               	movlb	0	; () banked
  4695  00134A  197D               	xorwf	(_Local_Key_User+1)& (0+255),w,b	;volatile
  4696  00134C  A4D8               	btfss	status,2,c
  4697  00134E  D008               	goto	i2l2544
  4698                           
  4699                           ; BSR set to: 0
  4700  001350  0100               	movlb	0	; () banked
  4701  001352  057E               	decf	(_Local_Key_User+2)& (0+255),w,b	;volatile
  4702  001354  A4D8               	btfss	status,2,c
  4703  001356  D004               	goto	i2l2544
  4704                           
  4705                           ; BSR set to: 0
  4706                           ;Run.c: 67: { g_Addr--; Key_FSM_Reset();}
  4707  001358  0647               	decf	_g_Addr,f,c
  4708                           
  4709                           ; BSR set to: 0
  4710  00135A  EC1C  F00E         	call	_Key_FSM_Reset	;wreg free
  4711  00135E  D000               	goto	i2l2544
  4712  001360                     i2l2544:
  4713                           
  4714                           ;Run.c: 70: if (Local_Key_User.key_state[5-1] == KEY_short) RS485_Num ++ ;
  4715  001360  0100               	movlb	0	; () banked
  4716  001362  058D               	decf	(_Local_Key_User+17)& (0+255),w,b	;volatile
  4717  001364  A4D8               	btfss	status,2,c
  4718  001366  D002               	goto	i2l2548
  4719                           
  4720                           ; BSR set to: 0
  4721  001368  2A44               	incf	_RS485_Num,f,c
  4722  00136A  D000               	goto	i2l2548
  4723  00136C                     i2l2548:
  4724                           
  4725                           ; BSR set to: 0
  4726                           ;Run.c: 71: if (Local_Key_User.key_state[5-1] == KEY_hold) RS485_Num ++ ;
  4727  00136C  0E03               	movlw	3
  4728  00136E  0100               	movlb	0	; () banked
  4729  001370  198D               	xorwf	(_Local_Key_User+17)& (0+255),w,b	;volatile
  4730  001372  A4D8               	btfss	status,2,c
  4731  001374  D002               	goto	i2l2552
  4732                           
  4733                           ; BSR set to: 0
  4734  001376  2A44               	incf	_RS485_Num,f,c
  4735  001378  D000               	goto	i2l2552
  4736  00137A                     i2l2552:
  4737                           
  4738                           ; BSR set to: 0
  4739                           ;Run.c: 74: if (Local_Key_User.key_state[3-1] == KEY_short) RS485_Num -- ;
  4740  00137A  0100               	movlb	0	; () banked
  4741  00137C  058B               	decf	(_Local_Key_User+15)& (0+255),w,b	;volatile
  4742  00137E  A4D8               	btfss	status,2,c
  4743  001380  D002               	goto	i2l2556
  4744                           
  4745                           ; BSR set to: 0
  4746  001382  0644               	decf	_RS485_Num,f,c
  4747  001384  D000               	goto	i2l2556
  4748  001386                     i2l2556:
  4749                           
  4750                           ; BSR set to: 0
  4751                           ;Run.c: 75: if (Local_Key_User.key_state[3-1] == KEY_hold) RS485_Num -- ;
  4752  001386  0E03               	movlw	3
  4753  001388  0100               	movlb	0	; () banked
  4754  00138A  198B               	xorwf	(_Local_Key_User+15)& (0+255),w,b	;volatile
  4755  00138C  A4D8               	btfss	status,2,c
  4756  00138E  D002               	goto	i2l2560
  4757                           
  4758                           ; BSR set to: 0
  4759  001390  0644               	decf	_RS485_Num,f,c
  4760  001392  D000               	goto	i2l2560
  4761  001394                     i2l2560:
  4762                           
  4763                           ; BSR set to: 0
  4764                           ;Run.c: 77: if( RS485_Num > 250 ) RS485_Num = 10 - 1;
  4765  001394  0EFA               	movlw	250
  4766  001396  6444               	cpfsgt	_RS485_Num,c
  4767  001398  D002               	goto	i2l2564
  4768                           
  4769                           ; BSR set to: 0
  4770  00139A  0E09               	movlw	9
  4771  00139C  D005               	goto	L2
  4772  00139E                     i2l2564:
  4773                           
  4774                           ; BSR set to: 0
  4775                           ;Run.c: 78: else RS485_Num %= 10;
  4776  00139E  0E0A               	movlw	10
  4777  0013A0  6E01               	movwf	___lbmod@divisor,c
  4778  0013A2  5044               	movf	_RS485_Num,w,c
  4779  0013A4  ECB6  F00E         	call	___lbmod
  4780  0013A8                     L2:
  4781  0013A8  6E44               	movwf	_RS485_Num,c
  4782  0013AA  D000               	goto	i2l2566
  4783  0013AC                     i2l2566:
  4784                           
  4785                           ;Run.c: 81: if (Local_Key_User.key_state[4-1] == KEY_short) RS485_SendBuff[RS485_Num] ++
      +                           ;
  4786  0013AC  0100               	movlb	0	; () banked
  4787  0013AE  058C               	decf	(_Local_Key_User+16)& (0+255),w,b	;volatile
  4788  0013B0  A4D8               	btfss	status,2,c
  4789  0013B2  D00A               	goto	i2l2570
  4790                           
  4791                           ; BSR set to: 0
  4792  0013B4  5044               	movf	_RS485_Num,w,c
  4793  0013B6  0D01               	mullw	1
  4794  0013B8  0E8E               	movlw	low _RS485_SendBuff
  4795  0013BA  24F3               	addwf	prodl,w,c
  4796  0013BC  6ED9               	movwf	fsr2l,c
  4797  0013BE  0E00               	movlw	high _RS485_SendBuff
  4798  0013C0  20F4               	addwfc	prodh,w,c
  4799  0013C2  6EDA               	movwf	fsr2h,c
  4800  0013C4  2ADF               	incf	indf2,f,c
  4801  0013C6  D000               	goto	i2l2570
  4802  0013C8                     i2l2570:
  4803                           
  4804                           ; BSR set to: 0
  4805                           ;Run.c: 82: if (Local_Key_User.key_state[4-1] == KEY_hold) RS485_SendBuff[RS485_Num] ++ 
      +                          ;
  4806  0013C8  0E03               	movlw	3
  4807  0013CA  0100               	movlb	0	; () banked
  4808  0013CC  198C               	xorwf	(_Local_Key_User+16)& (0+255),w,b	;volatile
  4809  0013CE  A4D8               	btfss	status,2,c
  4810  0013D0  D00A               	goto	i2l2574
  4811                           
  4812                           ; BSR set to: 0
  4813  0013D2  5044               	movf	_RS485_Num,w,c
  4814  0013D4  0D01               	mullw	1
  4815  0013D6  0E8E               	movlw	low _RS485_SendBuff
  4816  0013D8  24F3               	addwf	prodl,w,c
  4817  0013DA  6ED9               	movwf	fsr2l,c
  4818  0013DC  0E00               	movlw	high _RS485_SendBuff
  4819  0013DE  20F4               	addwfc	prodh,w,c
  4820  0013E0  6EDA               	movwf	fsr2h,c
  4821  0013E2  2ADF               	incf	indf2,f,c
  4822  0013E4  D000               	goto	i2l2574
  4823  0013E6                     i2l2574:
  4824                           
  4825                           ; BSR set to: 0
  4826                           ;Run.c: 85: if (Local_Key_User.key_state[2-1] == KEY_short) RS485_SendBuff[RS485_Num] --
      +                           ;
  4827  0013E6  0100               	movlb	0	; () banked
  4828  0013E8  058A               	decf	(_Local_Key_User+14)& (0+255),w,b	;volatile
  4829  0013EA  A4D8               	btfss	status,2,c
  4830  0013EC  D00A               	goto	i2l2578
  4831                           
  4832                           ; BSR set to: 0
  4833  0013EE  5044               	movf	_RS485_Num,w,c
  4834  0013F0  0D01               	mullw	1
  4835  0013F2  0E8E               	movlw	low _RS485_SendBuff
  4836  0013F4  24F3               	addwf	prodl,w,c
  4837  0013F6  6ED9               	movwf	fsr2l,c
  4838  0013F8  0E00               	movlw	high _RS485_SendBuff
  4839  0013FA  20F4               	addwfc	prodh,w,c
  4840  0013FC  6EDA               	movwf	fsr2h,c
  4841  0013FE  06DF               	decf	indf2,f,c
  4842  001400  D000               	goto	i2l2578
  4843  001402                     i2l2578:
  4844                           
  4845                           ; BSR set to: 0
  4846                           ;Run.c: 86: if (Local_Key_User.key_state[2-1] == KEY_hold) RS485_SendBuff[RS485_Num] -- 
      +                          ;
  4847  001402  0E03               	movlw	3
  4848  001404  0100               	movlb	0	; () banked
  4849  001406  198A               	xorwf	(_Local_Key_User+14)& (0+255),w,b	;volatile
  4850  001408  A4D8               	btfss	status,2,c
  4851  00140A  D00A               	goto	i2l2582
  4852                           
  4853                           ; BSR set to: 0
  4854  00140C  5044               	movf	_RS485_Num,w,c
  4855  00140E  0D01               	mullw	1
  4856  001410  0E8E               	movlw	low _RS485_SendBuff
  4857  001412  24F3               	addwf	prodl,w,c
  4858  001414  6ED9               	movwf	fsr2l,c
  4859  001416  0E00               	movlw	high _RS485_SendBuff
  4860  001418  20F4               	addwfc	prodh,w,c
  4861  00141A  6EDA               	movwf	fsr2h,c
  4862  00141C  06DF               	decf	indf2,f,c
  4863  00141E  D000               	goto	i2l2582
  4864  001420                     i2l2582:
  4865                           
  4866                           ; BSR set to: 0
  4867                           ;Run.c: 91: if (Local_Key_User.key_state[1-1] == KEY_short) Handle_Switch.Usart_OneDate 
      +                          = 1 ;
  4868  001420  0100               	movlb	0	; () banked
  4869  001422  0589               	decf	(_Local_Key_User+13)& (0+255),w,b	;volatile
  4870  001424  A4D8               	btfss	status,2,c
  4871  001426  D003               	goto	i2l2586
  4872                           
  4873                           ; BSR set to: 0
  4874  001428  0E01               	movlw	1
  4875  00142A  6E35               	movwf	_Handle_Switch+2,c
  4876  00142C  D000               	goto	i2l2586
  4877  00142E                     i2l2586:
  4878                           
  4879                           ; BSR set to: 0
  4880                           ;Run.c: 93: if( g_Addr > 6 ) g_Addr = 4;
  4881  00142E  0E06               	movlw	6
  4882  001430  6447               	cpfsgt	_g_Addr,c
  4883  001432  D003               	goto	i2l2590
  4884                           
  4885                           ; BSR set to: 0
  4886  001434  0E04               	movlw	4
  4887  001436  6E47               	movwf	_g_Addr,c
  4888  001438  D000               	goto	i2l2590
  4889  00143A                     i2l2590:
  4890                           
  4891                           ; BSR set to: 0
  4892                           ;Run.c: 94: if( g_Addr < 4 ) g_Addr = 6;
  4893  00143A  0E04               	movlw	4
  4894  00143C  6047               	cpfslt	_g_Addr,c
  4895  00143E  D003               	goto	i2l2594
  4896                           
  4897                           ; BSR set to: 0
  4898  001440  0E06               	movlw	6
  4899  001442  6E47               	movwf	_g_Addr,c
  4900  001444  D000               	goto	i2l2594
  4901  001446                     i2l2594:
  4902                           
  4903                           ; BSR set to: 0
  4904                           ;Run.c: 96: Key_FSM_Reset();
  4905  001446  EC1C  F00E         	call	_Key_FSM_Reset	;wreg free
  4906  00144A  0012               	return		;funcret
  4907  00144C                     __end_of_Manage_Message:
  4908                           	opt stack 0
  4909                           pclatu	equ	0xFFB
  4910                           pclath	equ	0xFFA
  4911                           tblptru	equ	0xFF8
  4912                           tblptrh	equ	0xFF7
  4913                           tblptrl	equ	0xFF6
  4914                           tablat	equ	0xFF5
  4915                           prodh	equ	0xFF4
  4916                           prodl	equ	0xFF3
  4917                           intcon	equ	0xFF2
  4918                           postinc0	equ	0xFEE
  4919                           fsr0h	equ	0xFEA
  4920                           fsr0l	equ	0xFE9
  4921                           wreg	equ	0xFE8
  4922                           indf1	equ	0xFE7
  4923                           fsr1h	equ	0xFE2
  4924                           fsr1l	equ	0xFE1
  4925                           indf2	equ	0xFDF
  4926                           fsr2h	equ	0xFDA
  4927                           fsr2l	equ	0xFD9
  4928                           status	equ	0xFD8
  4929                           
  4930 ;; *************** function ___lbmod *****************
  4931 ;; Defined at:
  4932 ;;		line 4 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbmod.c"
  4933 ;; Parameters:    Size  Location     Type
  4934 ;;  dividend        1    wreg     unsigned char 
  4935 ;;  divisor         1    0[COMRAM] unsigned char 
  4936 ;; Auto vars:     Size  Location     Type
  4937 ;;  dividend        1    1[COMRAM] unsigned char 
  4938 ;;  rem             1    3[COMRAM] unsigned char 
  4939 ;;  counter         1    2[COMRAM] unsigned char 
  4940 ;; Return value:  Size  Location     Type
  4941 ;;                  1    wreg      unsigned char 
  4942 ;; Registers used:
  4943 ;;		wreg, status,2, status,0
  4944 ;; Tracked objects:
  4945 ;;		On entry : 0/0
  4946 ;;		On exit  : 0/0
  4947 ;;		Unchanged: 0/0
  4948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4949 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4950 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4952 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4953 ;;Total ram usage:        4 bytes
  4954 ;; Hardware stack levels used:    1
  4955 ;; This function calls:
  4956 ;;		Nothing
  4957 ;; This function is called by:
  4958 ;;		_Manage_Message
  4959 ;; This function uses a non-reentrant model
  4960 ;;
  4961                           
  4962                           	psect	text36
  4963  001D6C                     __ptext36:
  4964                           	opt stack 0
  4965  001D6C                     ___lbmod:
  4966                           	opt stack 23
  4967                           
  4968                           ;incstack = 0
  4969                           ;___lbmod@dividend stored from wreg
  4970  001D6C  6E02               	movwf	___lbmod@dividend,c
  4971  001D6E  0E08               	movlw	8
  4972  001D70  6E03               	movwf	___lbmod@counter,c
  4973  001D72  0E00               	movlw	0
  4974  001D74  6E04               	movwf	___lbmod@rem,c
  4975  001D76  D000               	goto	i2l2390
  4976  001D78                     i2l2390:
  4977  001D78  90D8               	bcf	status,0,c
  4978  001D7A  3402               	rlcf	___lbmod@dividend,w,c
  4979  001D7C  3404               	rlcf	___lbmod@rem,w,c
  4980  001D7E  6E04               	movwf	___lbmod@rem,c
  4981  001D80  90D8               	bcf	status,0,c
  4982  001D82  3602               	rlcf	___lbmod@dividend,f,c
  4983  001D84  5001               	movf	___lbmod@divisor,w,c
  4984  001D86  5C04               	subwf	___lbmod@rem,w,c
  4985  001D88  A0D8               	btfss	status,0,c
  4986  001D8A  D003               	goto	i2l2398
  4987  001D8C  5001               	movf	___lbmod@divisor,w,c
  4988  001D8E  5E04               	subwf	___lbmod@rem,f,c
  4989  001D90  D000               	goto	i2l2398
  4990  001D92                     i2l2398:
  4991  001D92  2E03               	decfsz	___lbmod@counter,f,c
  4992  001D94  D7F1               	goto	i2l2390
  4993  001D96  D000               	goto	i2l2400
  4994  001D98                     i2l2400:
  4995  001D98  5004               	movf	___lbmod@rem,w,c
  4996  001D9A  0012               	return	
  4997  001D9C  0012               	return		;funcret
  4998  001D9E                     __end_of___lbmod:
  4999                           	opt stack 0
  5000                           pclatu	equ	0xFFB
  5001                           pclath	equ	0xFFA
  5002                           tblptru	equ	0xFF8
  5003                           tblptrh	equ	0xFF7
  5004                           tblptrl	equ	0xFF6
  5005                           tablat	equ	0xFF5
  5006                           prodh	equ	0xFF4
  5007                           prodl	equ	0xFF3
  5008                           intcon	equ	0xFF2
  5009                           postinc0	equ	0xFEE
  5010                           fsr0h	equ	0xFEA
  5011                           fsr0l	equ	0xFE9
  5012                           wreg	equ	0xFE8
  5013                           indf1	equ	0xFE7
  5014                           fsr1h	equ	0xFE2
  5015                           fsr1l	equ	0xFE1
  5016                           indf2	equ	0xFDF
  5017                           fsr2h	equ	0xFDA
  5018                           fsr2l	equ	0xFD9
  5019                           status	equ	0xFD8
  5020                           
  5021 ;; *************** function _Key_FSM_Reset *****************
  5022 ;; Defined at:
  5023 ;;		line 148 in file "_01_USER/Key.c"
  5024 ;; Parameters:    Size  Location     Type
  5025 ;;		None
  5026 ;; Auto vars:     Size  Location     Type
  5027 ;;  t               1    0[COMRAM] unsigned char 
  5028 ;; Return value:  Size  Location     Type
  5029 ;;		None               void
  5030 ;; Registers used:
  5031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5032 ;; Tracked objects:
  5033 ;;		On entry : 0/0
  5034 ;;		On exit  : 0/0
  5035 ;;		Unchanged: 0/0
  5036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5038 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5040 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5041 ;;Total ram usage:        1 bytes
  5042 ;; Hardware stack levels used:    1
  5043 ;; This function calls:
  5044 ;;		Nothing
  5045 ;; This function is called by:
  5046 ;;		_Manage_Message
  5047 ;; This function uses a non-reentrant model
  5048 ;;
  5049                           
  5050                           	psect	text37
  5051  001C38                     __ptext37:
  5052                           	opt stack 0
  5053  001C38                     _Key_FSM_Reset:
  5054                           	opt stack 23
  5055                           
  5056                           ;Key.c: 150: unsigned char t;
  5057                           ;Key.c: 151: Local_Key_User.key_BUS = 0x00;
  5058                           
  5059                           ;incstack = 0
  5060  001C38  0E00               	movlw	0
  5061  001C3A  0100               	movlb	0	; () banked
  5062  001C3C  6F7C               	movwf	_Local_Key_User& (0+255),b	;volatile
  5063                           
  5064                           ;Key.c: 152: Local_Key_User.key_group = KEY_default;
  5065  001C3E  0E00               	movlw	0
  5066  001C40  0100               	movlb	0	; () banked
  5067  001C42  6F7D               	movwf	(_Local_Key_User+1)& (0+255),b	;volatile
  5068                           
  5069                           ;Key.c: 153: t=4;
  5070  001C44  0E04               	movlw	4
  5071  001C46  6E01               	movwf	Key_FSM_Reset@t,c
  5072                           
  5073                           ;Key.c: 154: while(t--) Local_Key_User.key_count[t] = 0,
  5074  001C48  D017               	goto	i2l2258
  5075  001C4A                     i2l2256:
  5076                           
  5077                           ;Key.c: 155: Local_Key_User.key_state[t] = KEY_default;
  5078  001C4A  5001               	movf	Key_FSM_Reset@t,w,c
  5079  001C4C  0D02               	mullw	2
  5080  001C4E  0E7F               	movlw	low (_Local_Key_User+3)
  5081  001C50  24F3               	addwf	prodl,w,c
  5082  001C52  6ED9               	movwf	fsr2l,c
  5083  001C54  0E00               	movlw	high (_Local_Key_User+3)
  5084  001C56  20F4               	addwfc	prodh,w,c
  5085  001C58  6EDA               	movwf	fsr2h,c
  5086  001C5A  0E00               	movlw	0
  5087  001C5C  6EDE               	movwf	postinc2,c
  5088  001C5E  0E00               	movlw	0
  5089  001C60  6EDD               	movwf	postdec2,c
  5090  001C62  5001               	movf	Key_FSM_Reset@t,w,c
  5091  001C64  0D01               	mullw	1
  5092  001C66  0E89               	movlw	low (_Local_Key_User+13)
  5093  001C68  24F3               	addwf	prodl,w,c
  5094  001C6A  6ED9               	movwf	fsr2l,c
  5095  001C6C  0E00               	movlw	high (_Local_Key_User+13)
  5096  001C6E  20F4               	addwfc	prodh,w,c
  5097  001C70  6EDA               	movwf	fsr2h,c
  5098  001C72  0E00               	movlw	0
  5099  001C74  6EDF               	movwf	indf2,c
  5100  001C76  D000               	goto	i2l2258
  5101  001C78                     i2l2258:
  5102  001C78  0601               	decf	Key_FSM_Reset@t,f,c
  5103  001C7A  2801               	incf	Key_FSM_Reset@t,w,c
  5104  001C7C  A4D8               	btfss	status,2,c
  5105  001C7E  D7E5               	goto	i2l2256
  5106  001C80  0012               	return		;funcret
  5107  001C82                     __end_of_Key_FSM_Reset:
  5108                           	opt stack 0
  5109                           pclatu	equ	0xFFB
  5110                           pclath	equ	0xFFA
  5111                           tblptru	equ	0xFF8
  5112                           tblptrh	equ	0xFF7
  5113                           tblptrl	equ	0xFF6
  5114                           tablat	equ	0xFF5
  5115                           prodh	equ	0xFF4
  5116                           prodl	equ	0xFF3
  5117                           intcon	equ	0xFF2
  5118                           postinc0	equ	0xFEE
  5119                           fsr0h	equ	0xFEA
  5120                           fsr0l	equ	0xFE9
  5121                           wreg	equ	0xFE8
  5122                           indf1	equ	0xFE7
  5123                           fsr1h	equ	0xFE2
  5124                           fsr1l	equ	0xFE1
  5125                           indf2	equ	0xFDF
  5126                           postinc2	equ	0xFDE
  5127                           postdec2	equ	0xFDD
  5128                           fsr2h	equ	0xFDA
  5129                           fsr2l	equ	0xFD9
  5130                           status	equ	0xFD8
  5131                           
  5132 ;; *************** function _Key_FSM_Read *****************
  5133 ;; Defined at:
  5134 ;;		line 98 in file "_01_USER/Key.c"
  5135 ;; Parameters:    Size  Location     Type
  5136 ;;		None
  5137 ;; Auto vars:     Size  Location     Type
  5138 ;;  key_num         1    5[COMRAM] unsigned char 
  5139 ;;  key_num_mate    1    4[COMRAM] unsigned char 
  5140 ;; Return value:  Size  Location     Type
  5141 ;;		None               void
  5142 ;; Registers used:
  5143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5144 ;; Tracked objects:
  5145 ;;		On entry : 0/0
  5146 ;;		On exit  : 0/0
  5147 ;;		Unchanged: 0/0
  5148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5150 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5151 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5152 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5153 ;;Total ram usage:        6 bytes
  5154 ;; Hardware stack levels used:    1
  5155 ;; This function calls:
  5156 ;;		Nothing
  5157 ;; This function is called by:
  5158 ;;		_Manage_Message
  5159 ;; This function uses a non-reentrant model
  5160 ;;
  5161                           
  5162                           	psect	text38
  5163  001012                     __ptext38:
  5164                           	opt stack 0
  5165  001012                     _Key_FSM_Read:
  5166                           	opt stack 23
  5167                           
  5168                           ;Key.c: 100: unsigned char key_num = 5,key_num_mate;
  5169                           
  5170                           ;incstack = 0
  5171  001012  0E05               	movlw	5
  5172  001014  6E06               	movwf	Key_FSM_Read@key_num,c
  5173                           
  5174                           ;Key.c: 103: while(key_num--)
  5175  001016  D072               	goto	i2l2226
  5176  001018                     i2l2208:
  5177                           
  5178                           ;Key.c: 104: {
  5179                           ;Key.c: 106: if( Local_Key_FSM.key_BUS == 0x00 )
  5180  001018  0100               	movlb	0	; () banked
  5181  00101A  516A               	movf	_Local_Key_FSM& (0+255),w,b	;volatile
  5182  00101C  A4D8               	btfss	status,2,c
  5183  00101E  D04A               	goto	i2l2220
  5184                           
  5185                           ; BSR set to: 0
  5186                           ;Key.c: 107: {
  5187                           ;Key.c: 108: if( Local_Key_FSM.key_count[key_num] > 5 )
  5188  001020  5006               	movf	Key_FSM_Read@key_num,w,c
  5189  001022  0D02               	mullw	2
  5190  001024  0E6D               	movlw	low (_Local_Key_FSM+3)
  5191  001026  24F3               	addwf	prodl,w,c
  5192  001028  6ED9               	movwf	fsr2l,c
  5193  00102A  0E00               	movlw	high (_Local_Key_FSM+3)
  5194  00102C  20F4               	addwfc	prodh,w,c
  5195  00102E  6EDA               	movwf	fsr2h,c
  5196  001030  0E01               	movlw	1
  5197  001032  50DB               	movf	plusw2,w,c
  5198  001034  E104               	bnz	i2u173_40
  5199  001036  0E06               	movlw	6
  5200  001038  5CDE               	subwf	postinc2,w,c
  5201  00103A  A0D8               	btfss	status,0,c
  5202  00103C  D024               	goto	i2l2218
  5203  00103E                     i2u173_40:
  5204                           
  5205                           ; BSR set to: 0
  5206                           ;Key.c: 109: {
  5207                           ;Key.c: 110: if( Local_Key_FSM.key_count[key_num] > 60 )
  5208  00103E  5006               	movf	Key_FSM_Read@key_num,w,c
  5209  001040  0D02               	mullw	2
  5210  001042  0E6D               	movlw	low (_Local_Key_FSM+3)
  5211  001044  24F3               	addwf	prodl,w,c
  5212  001046  6ED9               	movwf	fsr2l,c
  5213  001048  0E00               	movlw	high (_Local_Key_FSM+3)
  5214  00104A  20F4               	addwfc	prodh,w,c
  5215  00104C  6EDA               	movwf	fsr2h,c
  5216  00104E  0E01               	movlw	1
  5217  001050  50DB               	movf	plusw2,w,c
  5218  001052  E104               	bnz	i2u174_40
  5219  001054  0E3D               	movlw	61
  5220  001056  5CDE               	subwf	postinc2,w,c
  5221  001058  A0D8               	btfss	status,0,c
  5222  00105A  D00A               	goto	i2l2216
  5223  00105C                     i2u174_40:
  5224                           
  5225                           ; BSR set to: 0
  5226                           ;Key.c: 111: Local_Key_User.key_state[key_num] = KEY_long;
  5227  00105C  5006               	movf	Key_FSM_Read@key_num,w,c
  5228  00105E  0D01               	mullw	1
  5229  001060  0E89               	movlw	low (_Local_Key_User+13)
  5230  001062  24F3               	addwf	prodl,w,c
  5231  001064  6ED9               	movwf	fsr2l,c
  5232  001066  0E00               	movlw	high (_Local_Key_User+13)
  5233  001068  20F4               	addwfc	prodh,w,c
  5234  00106A  6EDA               	movwf	fsr2h,c
  5235  00106C  0E05               	movlw	5
  5236  00106E  D014               	goto	L3
  5237  001070                     i2l2216:
  5238                           
  5239                           ; BSR set to: 0
  5240                           ;Key.c: 112: else Local_Key_User.key_state[key_num] = KEY_short;
  5241  001070  5006               	movf	Key_FSM_Read@key_num,w,c
  5242  001072  0D01               	mullw	1
  5243  001074  0E89               	movlw	low (_Local_Key_User+13)
  5244  001076  24F3               	addwf	prodl,w,c
  5245  001078  6ED9               	movwf	fsr2l,c
  5246  00107A  0E00               	movlw	high (_Local_Key_User+13)
  5247  00107C  20F4               	addwfc	prodh,w,c
  5248  00107E  6EDA               	movwf	fsr2h,c
  5249  001080  0E01               	movlw	1
  5250  001082  6EDF               	movwf	indf2,c
  5251                           
  5252                           ; BSR set to: 0
  5253                           ;Key.c: 113: }
  5254  001084  D00A               	goto	i2l111
  5255  001086                     i2l2218:
  5256                           
  5257                           ; BSR set to: 0
  5258                           ;Key.c: 114: else Local_Key_User.key_state[key_num] = KEY_default;
  5259  001086  5006               	movf	Key_FSM_Read@key_num,w,c
  5260  001088  0D01               	mullw	1
  5261  00108A  0E89               	movlw	low (_Local_Key_User+13)
  5262  00108C  24F3               	addwf	prodl,w,c
  5263  00108E  6ED9               	movwf	fsr2l,c
  5264  001090  0E00               	movlw	high (_Local_Key_User+13)
  5265  001092  20F4               	addwfc	prodh,w,c
  5266  001094  6EDA               	movwf	fsr2h,c
  5267  001096  0E00               	movlw	0
  5268  001098                     L3:
  5269  001098  6EDF               	movwf	indf2,c
  5270  00109A                     i2l111:
  5271                           
  5272                           ; BSR set to: 0
  5273                           ;Key.c: 115: Local_Key_FSM.key_count[key_num] = 0;
  5274  00109A  5006               	movf	Key_FSM_Read@key_num,w,c
  5275  00109C  0D02               	mullw	2
  5276  00109E  0E6D               	movlw	low (_Local_Key_FSM+3)
  5277  0010A0  24F3               	addwf	prodl,w,c
  5278  0010A2  6ED9               	movwf	fsr2l,c
  5279  0010A4  0E00               	movlw	high (_Local_Key_FSM+3)
  5280  0010A6  20F4               	addwfc	prodh,w,c
  5281  0010A8  6EDA               	movwf	fsr2h,c
  5282  0010AA  0E00               	movlw	0
  5283  0010AC  6EDE               	movwf	postinc2,c
  5284  0010AE  0E00               	movlw	0
  5285  0010B0  6EDD               	movwf	postdec2,c
  5286                           
  5287                           ;Key.c: 116: }
  5288  0010B2  D024               	goto	i2l2226
  5289  0010B4                     i2l2220:
  5290                           
  5291                           ; BSR set to: 0
  5292                           ;Key.c: 118: else if( Local_Key_FSM.key_count[key_num] > 60 )
  5293  0010B4  5006               	movf	Key_FSM_Read@key_num,w,c
  5294  0010B6  0D02               	mullw	2
  5295  0010B8  0E6D               	movlw	low (_Local_Key_FSM+3)
  5296  0010BA  24F3               	addwf	prodl,w,c
  5297  0010BC  6ED9               	movwf	fsr2l,c
  5298  0010BE  0E00               	movlw	high (_Local_Key_FSM+3)
  5299  0010C0  20F4               	addwfc	prodh,w,c
  5300  0010C2  6EDA               	movwf	fsr2h,c
  5301  0010C4  0E01               	movlw	1
  5302  0010C6  50DB               	movf	plusw2,w,c
  5303  0010C8  E104               	bnz	i2u175_40
  5304  0010CA  0E3D               	movlw	61
  5305  0010CC  5CDE               	subwf	postinc2,w,c
  5306  0010CE  A0D8               	btfss	status,0,c
  5307  0010D0  D00A               	goto	i2l2224
  5308  0010D2                     i2u175_40:
  5309                           
  5310                           ; BSR set to: 0
  5311                           ;Key.c: 119: Local_Key_User.key_state[key_num] = KEY_hold;
  5312  0010D2  5006               	movf	Key_FSM_Read@key_num,w,c
  5313  0010D4  0D01               	mullw	1
  5314  0010D6  0E89               	movlw	low (_Local_Key_User+13)
  5315  0010D8  24F3               	addwf	prodl,w,c
  5316  0010DA  6ED9               	movwf	fsr2l,c
  5317  0010DC  0E00               	movlw	high (_Local_Key_User+13)
  5318  0010DE  20F4               	addwfc	prodh,w,c
  5319  0010E0  6EDA               	movwf	fsr2h,c
  5320  0010E2  0E03               	movlw	3
  5321  0010E4  D009               	goto	L4
  5322  0010E6                     i2l2224:
  5323                           
  5324                           ; BSR set to: 0
  5325                           ;Key.c: 122: else Local_Key_User.key_state[key_num] = KEY_busy;
  5326  0010E6  5006               	movf	Key_FSM_Read@key_num,w,c
  5327  0010E8  0D01               	mullw	1
  5328  0010EA  0E89               	movlw	low (_Local_Key_User+13)
  5329  0010EC  24F3               	addwf	prodl,w,c
  5330  0010EE  6ED9               	movwf	fsr2l,c
  5331  0010F0  0E00               	movlw	high (_Local_Key_User+13)
  5332  0010F2  20F4               	addwfc	prodh,w,c
  5333  0010F4  6EDA               	movwf	fsr2h,c
  5334  0010F6  0E04               	movlw	4
  5335  0010F8                     L4:
  5336  0010F8  6EDF               	movwf	indf2,c
  5337                           
  5338                           ; BSR set to: 0
  5339                           
  5340                           ; BSR set to: 0
  5341  0010FA  D000               	goto	i2l2226
  5342  0010FC                     i2l2226:
  5343  0010FC  0606               	decf	Key_FSM_Read@key_num,f,c
  5344  0010FE  2806               	incf	Key_FSM_Read@key_num,w,c
  5345  001100  A4D8               	btfss	status,2,c
  5346  001102  D78A               	goto	i2l2208
  5347                           
  5348                           ;Key.c: 123: }
  5349                           ;Key.c: 127: for( key_num = 0;key_num < 5 - 1; key_num ++)
  5350  001104  0E00               	movlw	0
  5351  001106  6E06               	movwf	Key_FSM_Read@key_num,c
  5352  001108  0E03               	movlw	3
  5353  00110A  6406               	cpfsgt	Key_FSM_Read@key_num,c
  5354  00110C  D002               	goto	i2l2234
  5355  00110E  0012               	return	
  5356  001110  0012               	return	
  5357  001112                     i2l2234:
  5358                           
  5359                           ;Key.c: 128: for( key_num_mate = key_num+1;key_num_mate < 5 ; key_num_mate ++)
  5360  001112  2806               	incf	Key_FSM_Read@key_num,w,c
  5361  001114  6E05               	movwf	Key_FSM_Read@key_num_mate,c
  5362  001116  0E04               	movlw	4
  5363  001118  6405               	cpfsgt	Key_FSM_Read@key_num_mate,c
  5364  00111A  D001               	goto	i2l2238
  5365  00111C  D045               	goto	i2l2250
  5366  00111E                     i2l2238:
  5367                           
  5368                           ;Key.c: 129: if( Local_Key_User.key_state[key_num] == Local_Key_User.key_state[key_num_m
      +                          ate] )
  5369  00111E  5005               	movf	Key_FSM_Read@key_num_mate,w,c
  5370  001120  0D01               	mullw	1
  5371  001122  0E89               	movlw	low (_Local_Key_User+13)
  5372  001124  24F3               	addwf	prodl,w,c
  5373  001126  6ED9               	movwf	fsr2l,c
  5374  001128  0E00               	movlw	high (_Local_Key_User+13)
  5375  00112A  20F4               	addwfc	prodh,w,c
  5376  00112C  6EDA               	movwf	fsr2h,c
  5377  00112E  5006               	movf	Key_FSM_Read@key_num,w,c
  5378  001130  0D01               	mullw	1
  5379  001132  0E89               	movlw	low (_Local_Key_User+13)
  5380  001134  24F3               	addwf	prodl,w,c
  5381  001136  6EE1               	movwf	fsr1l,c
  5382  001138  0E00               	movlw	high (_Local_Key_User+13)
  5383  00113A  20F4               	addwfc	prodh,w,c
  5384  00113C  6EE2               	movwf	fsr1h,c
  5385  00113E  50DE               	movf	postinc2,w,c
  5386  001140  18E6               	xorwf	postinc1,w,c
  5387  001142  A4D8               	btfss	status,2,c
  5388  001144  D02F               	goto	i2l2246
  5389                           
  5390                           ;Key.c: 130: if(Local_Key_User.key_state[key_num] != KEY_default)
  5391  001146  5006               	movf	Key_FSM_Read@key_num,w,c
  5392  001148  0D01               	mullw	1
  5393  00114A  0E89               	movlw	low (_Local_Key_User+13)
  5394  00114C  24F3               	addwf	prodl,w,c
  5395  00114E  6ED9               	movwf	fsr2l,c
  5396  001150  0E00               	movlw	high (_Local_Key_User+13)
  5397  001152  20F4               	addwfc	prodh,w,c
  5398  001154  6EDA               	movwf	fsr2h,c
  5399  001156  50DF               	movf	indf2,w,c
  5400  001158  B4D8               	btfsc	status,2,c
  5401  00115A  D024               	goto	i2l2246
  5402                           
  5403                           ;Key.c: 131: {
  5404                           ;Key.c: 132: Local_Key_User.key_group = (0x01 << key_num)|(0x01 << key_num_mate);
  5405  00115C  C005  F001         	movff	Key_FSM_Read@key_num_mate,??_Key_FSM_Read
  5406  001160  0E01               	movlw	1
  5407  001162  6E02               	movwf	(??_Key_FSM_Read+1)& (0+255),c
  5408  001164  2A01               	incf	??_Key_FSM_Read,f,c
  5409  001166  D002               	goto	i2u181_44
  5410  001168                     i2u181_45:
  5411  001168  90D8               	bcf	status,0,c
  5412  00116A  3602               	rlcf	??_Key_FSM_Read+1,f,c
  5413  00116C                     i2u181_44:
  5414  00116C  2E01               	decfsz	??_Key_FSM_Read,f,c
  5415  00116E  D7FC               	goto	i2u181_45
  5416  001170  C006  F003         	movff	Key_FSM_Read@key_num,??_Key_FSM_Read+2
  5417  001174  0E01               	movlw	1
  5418  001176  6E04               	movwf	(??_Key_FSM_Read+3)& (0+255),c
  5419  001178  2A03               	incf	??_Key_FSM_Read+2,f,c
  5420  00117A  D002               	goto	i2u182_44
  5421  00117C                     i2u182_45:
  5422  00117C  90D8               	bcf	status,0,c
  5423  00117E  3604               	rlcf	??_Key_FSM_Read+3,f,c
  5424  001180                     i2u182_44:
  5425  001180  2E03               	decfsz	??_Key_FSM_Read+2,f,c
  5426  001182  D7FC               	goto	i2u182_45
  5427  001184  5004               	movf	??_Key_FSM_Read+3,w,c
  5428  001186  1002               	iorwf	??_Key_FSM_Read+1,w,c
  5429  001188  0100               	movlb	0	; () banked
  5430  00118A  6F7D               	movwf	(_Local_Key_User+1)& (0+255),b	;volatile
  5431                           
  5432                           ; BSR set to: 0
  5433                           ;Key.c: 133: Local_Key_User.key_group_state = Local_Key_User.key_state[key_num];
  5434  00118C  5006               	movf	Key_FSM_Read@key_num,w,c
  5435  00118E  0D01               	mullw	1
  5436  001190  0E89               	movlw	low (_Local_Key_User+13)
  5437  001192  24F3               	addwf	prodl,w,c
  5438  001194  6ED9               	movwf	fsr2l,c
  5439  001196  0E00               	movlw	high (_Local_Key_User+13)
  5440  001198  20F4               	addwfc	prodh,w,c
  5441  00119A  6EDA               	movwf	fsr2h,c
  5442  00119C  50DF               	movf	indf2,w,c
  5443  00119E  0100               	movlb	0	; () banked
  5444  0011A0  6F7E               	movwf	(_Local_Key_User+2)& (0+255),b	;volatile
  5445                           
  5446                           ; BSR set to: 0
  5447  0011A2  D000               	goto	i2l2246
  5448  0011A4                     i2l2246:
  5449  0011A4  2A05               	incf	Key_FSM_Read@key_num_mate,f,c
  5450  0011A6  D7B7               	goto	L5
  5451  0011A8                     i2l2250:
  5452  0011A8  2A06               	incf	Key_FSM_Read@key_num,f,c
  5453  0011AA  0E03               	movlw	3
  5454  0011AC  6406               	cpfsgt	Key_FSM_Read@key_num,c
  5455  0011AE  D7B1               	goto	i2l2234
  5456  0011B0  0012               	return	
  5457  0011B2  0012               	return		;funcret
  5458  0011B4                     __end_of_Key_FSM_Read:
  5459                           	opt stack 0
  5460                           pclatu	equ	0xFFB
  5461                           pclath	equ	0xFFA
  5462                           tblptru	equ	0xFF8
  5463                           tblptrh	equ	0xFF7
  5464                           tblptrl	equ	0xFF6
  5465                           tablat	equ	0xFF5
  5466                           prodh	equ	0xFF4
  5467                           prodl	equ	0xFF3
  5468                           intcon	equ	0xFF2
  5469                           postinc0	equ	0xFEE
  5470                           fsr0h	equ	0xFEA
  5471                           fsr0l	equ	0xFE9
  5472                           wreg	equ	0xFE8
  5473                           indf1	equ	0xFE7
  5474                           postinc1	equ	0xFE6
  5475                           fsr1h	equ	0xFE2
  5476                           fsr1l	equ	0xFE1
  5477                           indf2	equ	0xFDF
  5478                           postinc2	equ	0xFDE
  5479                           postdec2	equ	0xFDD
  5480                           plusw2	equ	0xFDB
  5481                           fsr2h	equ	0xFDA
  5482                           fsr2l	equ	0xFD9
  5483                           status	equ	0xFD8
  5484                           
  5485 ;; *************** function _Key_FSM_Scan *****************
  5486 ;; Defined at:
  5487 ;;		line 77 in file "_01_USER/Key.c"
  5488 ;; Parameters:    Size  Location     Type
  5489 ;;		None
  5490 ;; Auto vars:     Size  Location     Type
  5491 ;;		None
  5492 ;; Return value:  Size  Location     Type
  5493 ;;		None               void
  5494 ;; Registers used:
  5495 ;;		wreg, status,2, status,0, cstack
  5496 ;; Tracked objects:
  5497 ;;		On entry : 0/0
  5498 ;;		On exit  : 0/0
  5499 ;;		Unchanged: 0/0
  5500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5505 ;;Total ram usage:        0 bytes
  5506 ;; Hardware stack levels used:    1
  5507 ;; Hardware stack levels required when called:    1
  5508 ;; This function calls:
  5509 ;;		_Key_Scan
  5510 ;; This function is called by:
  5511 ;;		_Sys_Cyc
  5512 ;; This function uses a non-reentrant model
  5513 ;;
  5514                           
  5515                           	psect	text39
  5516  001BEC                     __ptext39:
  5517                           	opt stack 0
  5518  001BEC                     _Key_FSM_Scan:
  5519                           	opt stack 23
  5520                           
  5521                           ;Key.c: 79: Key_Scan();
  5522                           
  5523                           ;incstack = 0
  5524  001BEC  EC7D  F00E         	call	_Key_Scan	;wreg free
  5525                           
  5526                           ;Key.c: 80: if( Local_Key_FSM.key_BUS & 0x01 ) Local_Key_FSM.key_count[0]++;
  5527  001BF0  0100               	movlb	0	; () banked
  5528  001BF2  A16A               	btfss	_Local_Key_FSM& (0+255),0,b	;volatile
  5529  001BF4  D004               	goto	i2l2500
  5530                           
  5531                           ; BSR set to: 0
  5532  001BF6  0100               	movlb	0	; () banked
  5533  001BF8  4B6D               	infsnz	(_Local_Key_FSM+3)& (0+255),f,b	;volatile
  5534  001BFA  2B6E               	incf	(_Local_Key_FSM+4)& (0+255),f,b	;volatile
  5535  001BFC  D000               	goto	i2l2500
  5536  001BFE                     i2l2500:
  5537                           
  5538                           ; BSR set to: 0
  5539                           ;Key.c: 81: if( Local_Key_FSM.key_BUS & 0x02 ) Local_Key_FSM.key_count[1]++;
  5540  001BFE  0100               	movlb	0	; () banked
  5541  001C00  A36A               	btfss	_Local_Key_FSM& (0+255),1,b	;volatile
  5542  001C02  D004               	goto	i2l2504
  5543                           
  5544                           ; BSR set to: 0
  5545  001C04  0100               	movlb	0	; () banked
  5546  001C06  4B6F               	infsnz	(_Local_Key_FSM+5)& (0+255),f,b	;volatile
  5547  001C08  2B70               	incf	(_Local_Key_FSM+6)& (0+255),f,b	;volatile
  5548  001C0A  D000               	goto	i2l2504
  5549  001C0C                     i2l2504:
  5550                           
  5551                           ; BSR set to: 0
  5552                           ;Key.c: 82: if( Local_Key_FSM.key_BUS & 0x04 ) Local_Key_FSM.key_count[2]++;
  5553  001C0C  0100               	movlb	0	; () banked
  5554  001C0E  A56A               	btfss	_Local_Key_FSM& (0+255),2,b	;volatile
  5555  001C10  D004               	goto	i2l2508
  5556                           
  5557                           ; BSR set to: 0
  5558  001C12  0100               	movlb	0	; () banked
  5559  001C14  4B71               	infsnz	(_Local_Key_FSM+7)& (0+255),f,b	;volatile
  5560  001C16  2B72               	incf	(_Local_Key_FSM+8)& (0+255),f,b	;volatile
  5561  001C18  D000               	goto	i2l2508
  5562  001C1A                     i2l2508:
  5563                           
  5564                           ; BSR set to: 0
  5565                           ;Key.c: 83: if( Local_Key_FSM.key_BUS & 0x08 ) Local_Key_FSM.key_count[3]++;
  5566  001C1A  0100               	movlb	0	; () banked
  5567  001C1C  A76A               	btfss	_Local_Key_FSM& (0+255),3,b	;volatile
  5568  001C1E  D004               	goto	i2l2512
  5569                           
  5570                           ; BSR set to: 0
  5571  001C20  0100               	movlb	0	; () banked
  5572  001C22  4B73               	infsnz	(_Local_Key_FSM+9)& (0+255),f,b	;volatile
  5573  001C24  2B74               	incf	(_Local_Key_FSM+10)& (0+255),f,b	;volatile
  5574  001C26  D000               	goto	i2l2512
  5575  001C28                     i2l2512:
  5576                           
  5577                           ; BSR set to: 0
  5578                           ;Key.c: 84: if( Local_Key_FSM.key_BUS & 0x10 ) Local_Key_FSM.key_count[4]++;
  5579  001C28  0100               	movlb	0	; () banked
  5580  001C2A  A96A               	btfss	_Local_Key_FSM& (0+255),4,b	;volatile
  5581  001C2C  0012               	return	
  5582                           
  5583                           ; BSR set to: 0
  5584  001C2E  0100               	movlb	0	; () banked
  5585  001C30  4B75               	infsnz	(_Local_Key_FSM+11)& (0+255),f,b	;volatile
  5586  001C32  2B76               	incf	(_Local_Key_FSM+12)& (0+255),f,b	;volatile
  5587  001C34  0012               	return	
  5588                           
  5589                           ; BSR set to: 0
  5590                           
  5591                           ; BSR set to: 0
  5592  001C36  0012               	return		;funcret
  5593  001C38                     __end_of_Key_FSM_Scan:
  5594                           	opt stack 0
  5595                           pclatu	equ	0xFFB
  5596                           pclath	equ	0xFFA
  5597                           tblptru	equ	0xFF8
  5598                           tblptrh	equ	0xFF7
  5599                           tblptrl	equ	0xFF6
  5600                           tablat	equ	0xFF5
  5601                           prodh	equ	0xFF4
  5602                           prodl	equ	0xFF3
  5603                           intcon	equ	0xFF2
  5604                           postinc0	equ	0xFEE
  5605                           fsr0h	equ	0xFEA
  5606                           fsr0l	equ	0xFE9
  5607                           wreg	equ	0xFE8
  5608                           indf1	equ	0xFE7
  5609                           postinc1	equ	0xFE6
  5610                           fsr1h	equ	0xFE2
  5611                           fsr1l	equ	0xFE1
  5612                           indf2	equ	0xFDF
  5613                           postinc2	equ	0xFDE
  5614                           postdec2	equ	0xFDD
  5615                           plusw2	equ	0xFDB
  5616                           fsr2h	equ	0xFDA
  5617                           fsr2l	equ	0xFD9
  5618                           status	equ	0xFD8
  5619                           
  5620 ;; *************** function _Key_Scan *****************
  5621 ;; Defined at:
  5622 ;;		line 55 in file "_01_USER/Key.c"
  5623 ;; Parameters:    Size  Location     Type
  5624 ;;		None
  5625 ;; Auto vars:     Size  Location     Type
  5626 ;;		None
  5627 ;; Return value:  Size  Location     Type
  5628 ;;		None               void
  5629 ;; Registers used:
  5630 ;;		wreg, status,2, status,0
  5631 ;; Tracked objects:
  5632 ;;		On entry : 0/0
  5633 ;;		On exit  : 0/0
  5634 ;;		Unchanged: 0/0
  5635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5640 ;;Total ram usage:        0 bytes
  5641 ;; Hardware stack levels used:    1
  5642 ;; This function calls:
  5643 ;;		Nothing
  5644 ;; This function is called by:
  5645 ;;		_Key_FSM_Scan
  5646 ;; This function uses a non-reentrant model
  5647 ;;
  5648                           
  5649                           	psect	text40
  5650  001CFA                     __ptext40:
  5651                           	opt stack 0
  5652  001CFA                     _Key_Scan:
  5653                           	opt stack 23
  5654                           
  5655                           ;Key.c: 58: Local_Key_FSM.key_BUS = 0x00;
  5656                           
  5657                           ; BSR set to: 0
  5658                           ;incstack = 0
  5659  001CFA  0E00               	movlw	0
  5660  001CFC  0100               	movlb	0	; () banked
  5661  001CFE  6F6A               	movwf	_Local_Key_FSM& (0+255),b	;volatile
  5662                           
  5663                           ; BSR set to: 0
  5664                           ;Key.c: 60: if( RE3 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 0) ;
  5665  001D00  B684               	btfsc	3972,3,c	;volatile
  5666  001D02  D003               	goto	i2l2190
  5667                           
  5668                           ; BSR set to: 0
  5669  001D04  0100               	movlb	0	; () banked
  5670  001D06  816A               	bsf	_Local_Key_FSM& (0+255),0,b	;volatile
  5671  001D08  D000               	goto	i2l2190
  5672  001D0A                     i2l2190:
  5673                           
  5674                           ; BSR set to: 0
  5675                           ;Key.c: 61: if( RE2 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 1) ;
  5676  001D0A  B484               	btfsc	3972,2,c	;volatile
  5677  001D0C  D003               	goto	i2l2194
  5678                           
  5679                           ; BSR set to: 0
  5680  001D0E  0100               	movlb	0	; () banked
  5681  001D10  836A               	bsf	_Local_Key_FSM& (0+255),1,b	;volatile
  5682  001D12  D000               	goto	i2l2194
  5683  001D14                     i2l2194:
  5684                           
  5685                           ; BSR set to: 0
  5686                           ;Key.c: 62: if( RD6 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 2) ;
  5687  001D14  BC83               	btfsc	3971,6,c	;volatile
  5688  001D16  D003               	goto	i2l2198
  5689                           
  5690                           ; BSR set to: 0
  5691  001D18  0100               	movlb	0	; () banked
  5692  001D1A  856A               	bsf	_Local_Key_FSM& (0+255),2,b	;volatile
  5693  001D1C  D000               	goto	i2l2198
  5694  001D1E                     i2l2198:
  5695                           
  5696                           ; BSR set to: 0
  5697                           ;Key.c: 63: if( RE4 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 3) ;
  5698  001D1E  B884               	btfsc	3972,4,c	;volatile
  5699  001D20  D003               	goto	i2l2202
  5700                           
  5701                           ; BSR set to: 0
  5702  001D22  0100               	movlb	0	; () banked
  5703  001D24  876A               	bsf	_Local_Key_FSM& (0+255),3,b	;volatile
  5704  001D26  D000               	goto	i2l2202
  5705  001D28                     i2l2202:
  5706                           
  5707                           ; BSR set to: 0
  5708                           ;Key.c: 64: if( RD7 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 4) ;
  5709  001D28  BE83               	btfsc	3971,7,c	;volatile
  5710  001D2A  0012               	return	
  5711                           
  5712                           ; BSR set to: 0
  5713  001D2C  0100               	movlb	0	; () banked
  5714  001D2E  896A               	bsf	_Local_Key_FSM& (0+255),4,b	;volatile
  5715  001D30  0012               	return	
  5716                           
  5717                           ; BSR set to: 0
  5718                           
  5719                           ; BSR set to: 0
  5720  001D32  0012               	return		;funcret
  5721  001D34                     __end_of_Key_Scan:
  5722                           	opt stack 0
  5723                           pclatu	equ	0xFFB
  5724                           pclath	equ	0xFFA
  5725                           tblptru	equ	0xFF8
  5726                           tblptrh	equ	0xFF7
  5727                           tblptrl	equ	0xFF6
  5728                           tablat	equ	0xFF5
  5729                           prodh	equ	0xFF4
  5730                           prodl	equ	0xFF3
  5731                           intcon	equ	0xFF2
  5732                           postinc0	equ	0xFEE
  5733                           fsr0h	equ	0xFEA
  5734                           fsr0l	equ	0xFE9
  5735                           wreg	equ	0xFE8
  5736                           indf1	equ	0xFE7
  5737                           postinc1	equ	0xFE6
  5738                           fsr1h	equ	0xFE2
  5739                           fsr1l	equ	0xFE1
  5740                           indf2	equ	0xFDF
  5741                           postinc2	equ	0xFDE
  5742                           postdec2	equ	0xFDD
  5743                           plusw2	equ	0xFDB
  5744                           fsr2h	equ	0xFDA
  5745                           fsr2l	equ	0xFD9
  5746                           status	equ	0xFD8
  5747                           
  5748 ;; *************** function _Delay_1Khz *****************
  5749 ;; Defined at:
  5750 ;;		line 75 in file "_01_USER/My_Delay.c"
  5751 ;; Parameters:    Size  Location     Type
  5752 ;;		None
  5753 ;; Auto vars:     Size  Location     Type
  5754 ;;  c               1    2[COMRAM] unsigned char 
  5755 ;;  b               1    1[COMRAM] unsigned char 
  5756 ;;  a               1    0[COMRAM] unsigned char 
  5757 ;; Return value:  Size  Location     Type
  5758 ;;		None               void
  5759 ;; Registers used:
  5760 ;;		wreg, status,2, status,0
  5761 ;; Tracked objects:
  5762 ;;		On entry : 0/0
  5763 ;;		On exit  : 0/0
  5764 ;;		Unchanged: 0/0
  5765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5767 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5769 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5770 ;;Total ram usage:        3 bytes
  5771 ;; Hardware stack levels used:    1
  5772 ;; This function calls:
  5773 ;;		Nothing
  5774 ;; This function is called by:
  5775 ;;		_Sys_Cyc
  5776 ;; This function uses a non-reentrant model
  5777 ;;
  5778                           
  5779                           	psect	text41
  5780  001D34                     __ptext41:
  5781                           	opt stack 0
  5782  001D34                     _Delay_1Khz:
  5783                           	opt stack 24
  5784                           
  5785                           ;My_Delay.c: 77: unsigned char a,b,c;
  5786                           ;My_Delay.c: 78: for(c=1;c>0;c--)
  5787                           
  5788                           ; BSR set to: 0
  5789                           ;incstack = 0
  5790  001D34  0E01               	movlw	1
  5791  001D36  6E03               	movwf	Delay_1Khz@c,c
  5792  001D38  5003               	movf	Delay_1Khz@c,w,c
  5793  001D3A  B4D8               	btfsc	status,2,c
  5794  001D3C  0012               	return	
  5795  001D3E  D001               	goto	i2l2474
  5796  001D40  0012               	return	
  5797  001D42                     i2l2474:
  5798                           
  5799                           ;My_Delay.c: 79: for(b=32;b>0;b--)
  5800  001D42  0E20               	movlw	32
  5801  001D44  6E02               	movwf	Delay_1Khz@b,c
  5802  001D46  5002               	movf	Delay_1Khz@b,w,c
  5803  001D48  B4D8               	btfsc	status,2,c
  5804  001D4A  D00D               	goto	i2l2490
  5805  001D4C  D001               	goto	i2l2478
  5806  001D4E  D00B               	goto	i2l2490
  5807  001D50                     i2l2478:
  5808                           
  5809                           ;My_Delay.c: 80: for(a=2;a>0;a--);
  5810  001D50  0E02               	movlw	2
  5811  001D52  6E01               	movwf	Delay_1Khz@a,c
  5812  001D54  5001               	movf	Delay_1Khz@a,w,c
  5813  001D56  B4D8               	btfsc	status,2,c
  5814  001D58  D004               	goto	i2l2486
  5815  001D5A  D001               	goto	i2l2482
  5816  001D5C  D002               	goto	i2l2486
  5817  001D5E                     i2l2482:
  5818  001D5E  0601               	decf	Delay_1Khz@a,f,c
  5819  001D60  D7F9               	goto	L6
  5820  001D62                     i2l2486:
  5821  001D62  0602               	decf	Delay_1Khz@b,f,c
  5822  001D64  D7F0               	goto	L7
  5823  001D66                     i2l2490:
  5824  001D66  0603               	decf	Delay_1Khz@c,f,c
  5825  001D68  D7E7               	goto	L8
  5826  001D6A  0012               	return		;funcret
  5827  001D6C                     __end_of_Delay_1Khz:
  5828                           	opt stack 0
  5829                           pclatu	equ	0xFFB
  5830                           pclath	equ	0xFFA
  5831                           tblptru	equ	0xFF8
  5832                           tblptrh	equ	0xFF7
  5833                           tblptrl	equ	0xFF6
  5834                           tablat	equ	0xFF5
  5835                           prodh	equ	0xFF4
  5836                           prodl	equ	0xFF3
  5837                           intcon	equ	0xFF2
  5838                           postinc0	equ	0xFEE
  5839                           fsr0h	equ	0xFEA
  5840                           fsr0l	equ	0xFE9
  5841                           wreg	equ	0xFE8
  5842                           indf1	equ	0xFE7
  5843                           postinc1	equ	0xFE6
  5844                           fsr1h	equ	0xFE2
  5845                           fsr1l	equ	0xFE1
  5846                           indf2	equ	0xFDF
  5847                           postinc2	equ	0xFDE
  5848                           postdec2	equ	0xFDD
  5849                           plusw2	equ	0xFDB
  5850                           fsr2h	equ	0xFDA
  5851                           fsr2l	equ	0xFD9
  5852                           status	equ	0xFD8
  5853                           pclatu	equ	0xFFB
  5854                           pclath	equ	0xFFA
  5855                           tblptru	equ	0xFF8
  5856                           tblptrh	equ	0xFF7
  5857                           tblptrl	equ	0xFF6
  5858                           tablat	equ	0xFF5
  5859                           prodh	equ	0xFF4
  5860                           prodl	equ	0xFF3
  5861                           intcon	equ	0xFF2
  5862                           postinc0	equ	0xFEE
  5863                           fsr0h	equ	0xFEA
  5864                           fsr0l	equ	0xFE9
  5865                           wreg	equ	0xFE8
  5866                           indf1	equ	0xFE7
  5867                           postinc1	equ	0xFE6
  5868                           fsr1h	equ	0xFE2
  5869                           fsr1l	equ	0xFE1
  5870                           indf2	equ	0xFDF
  5871                           postinc2	equ	0xFDE
  5872                           postdec2	equ	0xFDD
  5873                           plusw2	equ	0xFDB
  5874                           fsr2h	equ	0xFDA
  5875                           fsr2l	equ	0xFD9
  5876                           status	equ	0xFD8
  5877                           
  5878                           	psect	rparam
  5879  0000                     pclatu	equ	0xFFB
  5880                           pclath	equ	0xFFA
  5881                           tblptru	equ	0xFF8
  5882                           tblptrh	equ	0xFF7
  5883                           tblptrl	equ	0xFF6
  5884                           tablat	equ	0xFF5
  5885                           prodh	equ	0xFF4
  5886                           prodl	equ	0xFF3
  5887                           intcon	equ	0xFF2
  5888                           postinc0	equ	0xFEE
  5889                           fsr0h	equ	0xFEA
  5890                           fsr0l	equ	0xFE9
  5891                           wreg	equ	0xFE8
  5892                           indf1	equ	0xFE7
  5893                           postinc1	equ	0xFE6
  5894                           fsr1h	equ	0xFE2
  5895                           fsr1l	equ	0xFE1
  5896                           indf2	equ	0xFDF
  5897                           postinc2	equ	0xFDE
  5898                           postdec2	equ	0xFDD
  5899                           plusw2	equ	0xFDB
  5900                           fsr2h	equ	0xFDA
  5901                           fsr2l	equ	0xFD9
  5902                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         87
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     50      71
    BANK0           160     20      86
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    CRC_Verify@_ucLByte	PTR unsigned char  size(2) Largest target is 10
		 -> RS485_Receive_Date@_ucLByte(COMRAM[1]), RS485_SendBuff(BANK0[10]), 

    CRC_Verify@_ucHByte	PTR unsigned char  size(2) Largest target is 10
		 -> RS485_Receive_Date@_ucHByte(COMRAM[1]), RS485_SendBuff(BANK0[10]), 

    CRC_Verify@_pucBuf	PTR unsigned char  size(2) Largest target is 10
		 -> ReceiveBuff(BANK0[10]), RS485_SendBuff(BANK0[10]), 

    RS485_Receive_Date@DataBuff	PTR unsigned char  size(2) Largest target is 10
		 -> ReceiveBuff(BANK0[10]), 

    RS485_Send_Date@date_dress	PTR unsigned char  size(2) Largest target is 10
		 -> RS485_SendBuff(BANK0[10]), 


Critical Paths under _main in COMRAM

    _Timer0_Init->_SetTimer0
    _Show_Result->_TM1640_Show_integer
    _TM1640_Show_integer->_TM1640_Writer_Dates
    _TM1640_Show_integer->___lwdiv
    _TM1640_Writer_Dates->___lwmod
    _RS485_Send_Date->_CRC_Verify
    _RS485_Receive_Date->_CRC_Verify
    _CRC_Verify->___wmul
    _Get_ADC6->___ftmul
    ___lwtoft->___ftpack
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul
    _RS485_Init->_Open2USART
    _Init_TM1640->_TM1640_Writer_Byte
    _TM1640_Writer_Byte->_TM1640_Delay
    _TM1640_Stop->_TM1640_Delay
    _TM1640_Start->_TM1640_Delay
    _ADC6_Init->_OpenADC

Critical Paths under _Sys_Cyc in COMRAM

    _Sys_Cyc->___llmod
    _Manage_Message->_Key_FSM_Read

Critical Paths under _main in BANK0

    _main->_Run
    _Get_ADC6->___ftdiv

Critical Paths under _Sys_Cyc in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Sys_Cyc in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Sys_Cyc in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Sys_Cyc in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Sys_Cyc in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Sys_Cyc in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Sys_Cyc in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Sys_Cyc in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Sys_Cyc in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Sys_Cyc in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Sys_Cyc in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Sys_Cyc in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Sys_Cyc in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Sys_Cyc in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Sys_Cyc in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Sys_Cyc in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   16514
                                             17 BANK0      3     3      0
                          _ADC6_Init
                        _GPIO_Config
                        _Init_TM1640
                           _Key_Init
                         _RS485_Init
                                _Run
                        _Show_Result
                        _Timer0_Init
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0     194
                          _SetTimer0
 ---------------------------------------------------------------------------------
 (2) _SetTimer0                                            4     2      2     194
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Show_Result                                          2     2      0    3370
                                             33 COMRAM     1     1      0
                _TM1640_Show_integer
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _TM1640_Show_integer                                  2     0      2    2748
                                             31 COMRAM     2     0      2
                _TM1640_Writer_Dates
                            ___lwdiv
                            ___lwmod
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     752
                                             24 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     631
                                             24 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _TM1640_Writer_Dates                                  2     1      1    1009
                                             29 COMRAM     2     1      1
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Run                                                  2     2      0   11860
                                             15 BANK0      2     2      0
                           _Get_ADC6
                 _RS485_Receive_Date
                    _RS485_Send_Date
 ---------------------------------------------------------------------------------
 (2) _RS485_Send_Date                                      7     4      3    1820
                                             41 COMRAM     7     4      3
                         _CRC_Verify
 ---------------------------------------------------------------------------------
 (2) _RS485_Receive_Date                                   6     4      2    1922
                                             41 COMRAM     6     4      2
                         _CRC_Verify
 ---------------------------------------------------------------------------------
 (3) _CRC_Verify                                          11     4      7    1467
                                             30 COMRAM    11     4      7
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     622
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _Get_ADC6                                             0     0      0    7988
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2104
                                             32 COMRAM     3     0      3
                            _ReadADC (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    2846
                                             35 COMRAM    15     9      6
                            _ReadADC (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3038
                                              0 BANK0     15     9      6
                            _ReadADC (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2008
                                             24 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) _ReadADC                                              4     2      2       0
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RS485_Init                                           0     0      0     375
                         _Open2USART
 ---------------------------------------------------------------------------------
 (2) _Open2USART                                           3     1      2     375
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Key_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_TM1640                                          0     0      0     396
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
 ---------------------------------------------------------------------------------
 (4) _TM1640_Writer_Byte                                   2     2      0     198
                                             26 COMRAM     2     2      0
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (4) _TM1640_Stop                                          0     0      0      99
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (4) _TM1640_Start                                         0     0      0      99
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (5) _TM1640_Delay                                         2     2      0      99
                                             24 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC6_Init                                            0     0      0     316
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     316
                                             24 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Sys_Cyc                                             15    15      0    1372
                                              9 COMRAM    15    15      0
                         _Delay_1Khz
                       _Key_FSM_Scan
                     _Manage_Message
                            ___llmod
                        i2_SetTimer0
 ---------------------------------------------------------------------------------
 (7) i2_SetTimer0                                          4     2      2      94
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8     371
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) _Manage_Message                                       1     1      0     746
                       _Key_FSM_Read
                      _Key_FSM_Reset
                            ___lbmod
 ---------------------------------------------------------------------------------
 (8) ___lbmod                                              4     3      1     212
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (8) _Key_FSM_Reset                                        1     1      0      67
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _Key_FSM_Read                                         6     6      0     467
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (7) _Key_FSM_Scan                                         0     0      0       0
                           _Key_Scan
 ---------------------------------------------------------------------------------
 (8) _Key_Scan                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _Delay_1Khz                                           3     3      0     138
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC6_Init
     _OpenADC
   _GPIO_Config
   _Init_TM1640
     _TM1640_Start
       _TM1640_Delay
     _TM1640_Stop
       _TM1640_Delay
     _TM1640_Writer_Byte
       _TM1640_Delay
   _Key_Init
   _RS485_Init
     _Open2USART
   _Run
     _Get_ADC6
       _BusyADC
       _ConvertADC
       _ReadADC
       ___ftdiv
         _ReadADC (ARG)
         ___ftmul (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___ftmul
         _ReadADC (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___lwtoft
         _ReadADC (ARG)
         ___ftpack (ARG)
     _RS485_Receive_Date
       _CRC_Verify
         ___wmul
     _RS485_Send_Date
       _CRC_Verify
         ___wmul
   _Show_Result
     _TM1640_Show_integer
       _TM1640_Writer_Dates
         _TM1640_Start
           _TM1640_Delay
         _TM1640_Stop
           _TM1640_Delay
         _TM1640_Writer_Byte
           _TM1640_Delay
         ___lwmod (ARG)
       ___lwdiv
       ___lwmod
       ___wmul (ARG)
     ___wmul
   _Timer0_Init
     _SetTimer0

 _Sys_Cyc (ROOT)
   _Delay_1Khz
   _Key_FSM_Scan
     _Key_Scan
   _Manage_Message
     _Key_FSM_Read
     _Key_FSM_Reset
     ___lbmod
   ___llmod
   i2_SetTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     14      56       5       53.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     32      47       1       74.7%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9D      12        0.0%
DATA                 0      0      9D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Jan 23 15:30:34 2016

                ?_TM1640_Stop 0001  __size_of_TM1640_Writer_Dates 0022                 ?_TM1640_Delay 0001  
              Key_FSM_Reset@t 0001           ___wmul@multiplicand 001B                   __CFG_BORV$3 000000  
               ?_TM1640_Start 0001                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000                  __CFG_CP4$OFF 000000  
                __CFG_CP5$OFF 000000                  __CFG_CP6$OFF 000000                  __CFG_CP7$OFF 000000  
                         l320 1CA0                           l160 1936                           l165 198A  
                         l334 1F56                           l319 1C8A                           l415 17AA  
                         l178 1808                           l418 18F8                           l447 1B9C  
                         l480 1896                           l482 18A2                           l483 18A4  
                         l475 186E                           l477 187E                           l806 16F0  
                         l870 12CC                           _GIE 007F97                  __CFG_CPB$OFF 000000  
                         _RC3 007C13                           _RC4 007C14                           _RE2 007C22  
                         _RE3 007C23                           _RE4 007C24                           _RD6 007C1E  
                         _RE5 007C25                           _RD7 007C1F                           _RE6 007C26  
                         _RG3 007C33                           _RE7 007C27                  __CFG_CPD$OFF 000000  
                         _PSA 007EAB                           _Run 171A                ??_Key_FSM_Read 0001  
              ??_Key_FSM_Scan 0001                           prod 000FF3                   CRC_Verify@i 0029  
                         wreg 000FE8                  ?_GPIO_Config 0001                    _TXSTA2bits 000F21  
        ?_TM1640_Show_integer 0020                   ?_RS485_Init 0001                  ___ftdiv@cntr 00AB  
                        ?_Run 0001                  ___ftdiv@sign 00B0                          l1005 1B48  
                        l1015 1BE2                          l3000 189A                          l3022 1996  
                        l3032 17C8                          l3042 17FC                          l3050 1810  
                        l3018 1976                          l3036 17D8                          l3150 1742  
                        l3062 1DA6                          l3160 177C                          l3144 1726  
                        l3156 1762                          l3094 1A90                          l2722 1F4E  
                        l2810 1A2E                          l2724 1F50                          l2716 1F46  
                        l2804 170A                          l3188 1CEC                          l2910 15E8  
                        l2814 1A68                          l2840 11EE                          l2920 1616  
                        l2914 15FE                          l2906 15D6                          l2764 1CB8  
                        l2780 1674                          l2924 162C                          l2916 1604  
                        l2758 1CA4                          l2790 16D8                          l2782 1680  
                        l2846 1228                          l2934 1B0C                          l2792 16E4  
                        l2784 16A0                          l2776 1664                          l2936 1B16  
                        l2866 128A                          l2946 1B3C                          l2938 1B1E  
                        l2962 1BD6                          l2954 1BAE                          l2980 185A  
                        l2788 16B8                          l2876 12DE                          l2892 15A2  
                        l2956 1BB8                          l2798 16F8                          l2886 157A  
                        l2958 1BC0                          l2992 1884                          l2984 1864  
                        l2976 184C                          l2996 188E                          l2988 1874  
                        _T0CS 007EAD                          _T0SE 007EAC                          u2701 11CA  
                        _IPEN 007E87                          u2721 1204                          u2751 1562  
                        u2690 1F88                          u2771 158A                 ??_Init_TM1640 001D  
                  _Delay_1Khz 1D34                          Run@i 00B1                          _main 1CC0  
                ___ftpack@arg 0019                  ___ftpack@exp 001C                          fsr0h 000FEA  
                        fsr1h 000FE2                          fsr0l 000FE9                          fsr2h 000FDA  
                        indf1 000FE7                          fsr1l 000FE1                          indf2 000FDF  
                        fsr2l 000FD9                          pclat 000FFA               ??_Key_FSM_Reset 0001  
                        prodh 000FF4                          prodl 000FF3                          start 0194  
            ?_RS485_Send_Date 002A                 __CFG_IESO$OFF 000000                 __CFG_FOSC$HS1 000000  
               __CFG_MCLRE$ON 000000                  ___ftmul@cntr 0031                  ___param_bank 000010  
                ___ftmul@sign 0032               __end_of_BusyADC 1F8E               __end_of_ReadADC 1F80  
              ??_TM1640_Delay 0019               __end_of_OpenADC 1BA0                         ??_Run 0033  
              ??_TM1640_Start 001B                 __CFG_RETEN$ON 000000                         ?_main 0001  
             __end_of___lbmod 1D9E               __end_of_Sys_Cyc 0194               __end_of___ftdiv 1306  
             __end_of___ftmul 1654               __end_of___llmod 1A1C                         _T0PS0 007EA8  
                       _T0PS1 007EA9                         _T0PS2 007EAA                         _RC2IF 007D25  
             __end_of___lwdiv 1B52                         i2l111 109A               __end_of___lwmod 1BEC  
                       i2l262 00A6                         i2l272 015A                         i2l266 00F8  
                       i2l952 1A0A             __end_of_ADC6_Init 1F70                         _TMR0H 000FD7  
                       _TMR0L 000FD6                         _TRISD 000F95                         _TRISE 000F96  
       ??_TM1640_Show_integer 0022                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                 __CFG_WRT4$OFF 000000  
              __CFG_EBRT0$OFF 000000                 __CFG_WRT5$OFF 000000                __CFG_EBRT1$OFF 000000  
               __CFG_WRT6$OFF 000000                __CFG_EBRT2$OFF 000000                 __CFG_WRT7$OFF 000000  
              __CFG_EBRT3$OFF 000000                __CFG_EBRT4$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBRT5$OFF 000000                __CFG_EBRT6$OFF 000000                __CFG_EBRT7$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBRTB$OFF 000000           __size_of_CRC_Verify 006E                 ___ftpack@sign 001D  
                  _ConvertADC 1FA4                 _Local_Key_FSM 006A                         tablat 000FF5  
                       plusw2 000FDB                         status 000FD8    __end_of_RS485_Receive_Date 1834  
          _TM1640_Writer_Byte 1C82              __end_of_Get_ADC6 1AF6               __initialization 1E26  
         __end_of_Init_TM1640 1E98           __size_of_RS485_Init 001E                  __end_of_main 1CFA  
         ?_TM1640_Writer_Byte 0001              __end_of_Key_Init 1FA4           Key_FSM_Read@key_num 0006  
            __end_of_Key_Scan 1D34                    _Open2USART 1834                        ??_main 0033  
               __activetblptr 000001              ??_Manage_Message 0007          ??_TM1640_Writer_Byte 001B  
                      _ADCON0 000FC2                        _ADCON1 000FC1                        _ADCON2 000FC0  
            ___llmod@dividend 0001                        _ADRESH 000FC4                        _ADRESL 000FC3  
                      _ANCON2 000F23                        _T08BIT 007EAE              __end_of___ftpack 171A  
             __CFG_BBSIZ$BB2K 000000                        i2l2202 1D28                        i2l2220 10B4  
                      i2l2224 10E6                        i2l2216 1070                        i2l2208 1018  
                      i2l2400 1D98                        i2l2250 11A8                        i2l2234 1112  
                      i2l2218 1086                        i2l2226 10FC                        i2l2500 1BFE  
                      i2l2190 1D0A                        i2l2246 11A4                        i2l2238 111E  
                      i2l2512 1C28                        i2l2504 1C0C                        i2l2256 1C4A  
                      i2l2600 19BE                        i2l2194 1D14                        i2l2258 1C78  
                      i2l2602 19CC                        i2l2508 1C1A                        i2l2604 19D4  
                      i2l2198 1D1E                        i2l2390 1D78                        i2l2560 1394  
                      i2l2552 137A                        i2l2544 1360                        i2l2536 1346  
                      i2l2528 132C                        i2l2608 19FA                        i2l2616 1DD6  
                      i2l2482 1D5E                        i2l2490 1D66                        i2l2474 1D42  
                      i2l2570 13C8                        i2l2564 139E                        i2l2556 1386  
                      i2l2548 136C                        i2l2486 1D62                        i2l2478 1D50  
                      i2l2398 1D92                        i2l2590 143A                        i2l2582 1420  
                      i2l2574 13E6                        i2l2566 13AC                        i2l2654 0090  
                      i2l2664 00AA                        i2l2594 1446                        i2l2586 142E  
                      i2l2578 1402                        i2l2658 009A                        i2l2666 00B0  
                      i2l2682 0112                        i2l2676 00FC                        i2l2668 00BC  
                      i2l2696 0148                        i2l2688 0122                 SetTimer0@_tmr 0019  
                      _RCREG2 000F1D              __end_of___lwtoft 1E72                        _RCSTA2 000F22  
                 ?_Delay_1Khz 0001                        _TMR0IE 007F95                        _TMR0IF 007F92  
                      _SPBRG2 000F1E                        _TMR0ON 007EAF    RS485_Receive_Date@DataBuff 002A  
               TM1640_Delay@i 001A                     ??_BusyADC 0019                        _TXREG2 000F1C  
                   ??_ReadADC 001B                        _TXSTA2 000F21                 ??_Timer0_Init 001D  
                   ??_OpenADC 001B        TM1640_Writer_Byte@Date 001B                __CFG_XINST$OFF 000000  
        __end_of_Key_FSM_Read 11B4          __end_of_Key_FSM_Scan 1C38        TM1640_Writer_Byte@mask 001C  
                      _g_Addr 0047             _RS485_ReceiveBuff 0060                        ___wmul 1DFE  
              __CFG_STVREN$ON 000000                     ??___lbmod 0002                     ??_Sys_Cyc 000A  
                   ??___ftdiv 00A8                     ??___ftmul 002A                     ??___llmod 0009  
        Sys_Cyc@_overturn_LED 0042                     ??___lwdiv 001D            __size_of_SetTimer0 0030  
                   ??___lwmod 001D                        clear_0 1E2C                        clear_1 1E38  
        __size_of_TM1640_Stop 0024                 ??_Show_Result 0022         ___ftmul@f3_as_product 002E  
              _Local_Key_User 007C                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8          __size_of_GPIO_Config 000C  
         _TM1640_Writer_Dates 1F04                   ?_ConvertADC 0001          __end_of_TM1640_Delay 1F5E  
  RS485_Receive_Date@_ucHByte 002C               ___lbmod@divisor 0001          __end_of_TM1640_Start 1F04  
  RS485_Receive_Date@_ucLByte 002D                    __accesstop 0060       __end_of__initialization 1E3E  
             ___lbmod@counter 0003                   _Init_TM1640 1E72                  ?i2_SetTimer0 0001  
               ___rparam_used 000001                    ___ftdiv@f1 00A2                    ___ftdiv@f2 00A5  
                  ___ftdiv@f3 00AC                  ??_CRC_Verify 0026                    ___ftmul@f1 0024  
                  ___ftmul@f2 0027                __pcstackCOMRAM 0001          ?_TM1640_Writer_Dates 001E  
         __end_of_Timer0_Init 1EBC     Sys_Cyc@_RS485_Receive_Num 0040                   ?_Open2USART 0019  
                  ___lwtoft@c 0021           __size_of_Delay_1Khz 0038                     ?_Get_ADC6 0001  
                ??_RS485_Init 001C   RS485_Receive_Date@RS485_LED 003E           __end_of_Show_Result 1934  
          __end_of_CRC_Verify 1A8A             __end_of_SetTimer0 1DCE                    __pbssBANK0 0060  
                   ?_Key_Init 0001                     ?_Key_Scan 0001                   _ReceiveBuff 0098  
             __CFG_PLLCFG$OFF 000000       TM1640_Writer_Dates@Addr 001F            __end_of_LED_Number 1011  
     TM1640_Writer_Dates@Date 001E         ??_TM1640_Writer_Dates 001F                       ?___wmul 0019  
          __end_of_RS485_Init 1F44           __size_of_ConvertADC 0004                     ?___ftpack 0019  
                   ?___lwtoft 0021                    ??_Get_ADC6 0033                       _SPBRGH2 000F1F  
                   _ADC6_Buff 003B                     _ADC6_Init 1F5E                    ??_Key_Init 0019  
                  ??_Key_Scan 0001         __size_of_Key_FSM_Read 01A2         __size_of_Key_FSM_Scan 004C  
         __size_of_Open2USART 0084                       _BusyADC 1F80                       _ReadADC 1F70  
            RS485_Send_Date@i 002F               __CFG_PWRTEN$OFF 000000                       _OpenADC 1B52  
                     __Hparam 0000                   _Timer0_Init 1E98         __end_of_Key_FSM_Reset 1C82  
                     __Lparam 0000                 Sys_Cyc@_pulse 0018                _RS485_SendBuff 008E  
                     ___lbmod 1D6C                       _Sys_Cyc 0008                       ___ftdiv 11B4  
             __size_of___wmul 0028                       ___ftmul 1552                       ___llmod 19AC  
                     ___lwdiv 1AF6                       ___lwmod 1BA0                  __psmallconst 1000  
          _RS485_Receive_Date 17AC            _RS485_Receive_Flag 0045      __size_of_RS485_Send_Date 0078  
 __end_of_TM1640_Show_integer 1552                       __pcinit 1E26                    ??___ftpack 001E  
       Sys_Cyc@_overturn_1Khz 0041                       __ramtop 1000                       __ptext0 1CC0  
                     __ptext1 1E98                       __ptext2 1D9E                       __ptext3 18B8  
                     __ptext4 144C                       __ptext5 1BA0                       __ptext6 1AF6  
                     __ptext7 1F04                       __ptext8 171A                       __ptext9 1934  
                  ??___lwtoft 0024                   _Show_Result 18B8                  __size_of_Run 0092  
            Open2USART@config 001B           ?_RS485_Receive_Date 002A         __size_of_TM1640_Delay 001A  
           __CFG_MSSPMSK$MSK7 000000                  _Key_FSM_Read 1012                  _Key_FSM_Scan 1BEC  
       __size_of_TM1640_Start 0024                    ?_ADC6_Init 0001                OpenADC@config2 0019  
              OpenADC@config3 001A                       main@num 00B3          end_of_initialization 1E3E  
                ??_Delay_1Khz 0001                     _RS485_Num 0044          ??_RS485_Receive_Date 002C  
        __size_ofi2_SetTimer0 0030                       postdec2 000FDD                       postinc0 000FEE  
                     postinc1 000FE6                       postinc2 000FDE               CRC_Verify@usCrc 0027  
                _TM1640_Delay 1F44     RS485_Send_Date@date_dress 002A     RS485_Send_Date@date_lenth 002C  
                _TM1640_Start 1EE0                     _PORTEbits 000F84              TM1640_Delay@Time 0019  
          __end_of_Delay_1Khz 1D6C              ___lbmod@dividend 0002                     _TRISCbits 000F94  
                   _TRISGbits 000F98   __size_of_TM1640_Writer_Byte 003E             __CFG_SOSCSEL$HIGH 000000  
                ??_ConvertADC 0019                   ___lbmod@rem 0004      Key_FSM_Read@key_num_mate 0005  
                ?_Init_TM1640 0001                   ___ftdiv@exp 00AF                   ___ftmul@exp 002D  
               ??_TM1640_Stop 001B                __end_of___wmul 1E26                  ??_Open2USART 001B  
          __end_of_ConvertADC 1FA8                 ??_GPIO_Config 0019           start_initialization 1E26  
           ??_RS485_Send_Date 002D                   __end_of_Run 17AC                   ??_ADC6_Init 001E  
           __size_of_Get_ADC6 006C    TM1640_Show_integer@Numbers 0020       __size_of_Manage_Message 0146  
             ___llmod@divisor 0005             __size_of_Key_Init 000A             __size_of_Key_Scan 003A  
             ___llmod@counter 0009                     _SetTimer0 1D9E            __end_of_Open2USART 18B8  
             i2SetTimer0@_tmr 0001                     _Timer_Cyc 0037                      ??___wmul 001D  
               _Handle_Switch 0033           __end_of_TM1640_Stop 1EE0             __size_of___ftpack 00C6  
                 __pbssCOMRAM 0033             __size_of___lwtoft 0026                 __pcstackBANK0 00A2  
                _Receive_Flag 0046           __end_of_GPIO_Config 1F9A                      ?_BusyADC 0001  
                    ?_ReadADC 0019   __end_of_TM1640_Writer_Dates 1F26                    ?_SetTimer0 0019  
                    ?_OpenADC 0019                  ?_Timer0_Init 0001              ___lwdiv@dividend 0019  
           __CFG_CCP2MX$PORTC 000000                     __pintcode 0008                      ?___lbmod 0001  
                    ?_Sys_Cyc 0001                      ?___ftdiv 00A2                      ?___ftmul 0024  
                    ?___llmod 0001                      ?___lwdiv 0019                      ?___lwmod 0019  
                ?_Show_Result 0001                   __smallconst 1000                   _LED2_switch 0043  
            ___lwdiv@quotient 001E               Open2USART@spbrg 0019                ___wmul@product 001D  
               OpenADC@config 001D                      _PIE1bits 000F9D                      _PIE3bits 000FA3  
        __size_of_Init_TM1640 0026                      i2u173_40 103E                      i2u181_44 116C  
                    i2u181_45 1168                      i2u174_40 105C                      i2u182_44 1180  
                    i2u182_45 117C                      i2u175_40 10D2                      _PIR1bits 000F9E  
                 _TM1640_Stop 1EBC            CRC_Verify@_ucHByte 0022            CRC_Verify@_ucLByte 0024  
                  _ADCON0bits 000FC2             ___wmul@multiplier 0019                      _Get_ADC6 1A8A  
                 _GPIO_Config 1F8E                   Delay_1Khz@a 0001                   Delay_1Khz@b 0002  
                 Delay_1Khz@c 0003  __size_of_TM1640_Show_integer 0106        __size_of_Key_FSM_Reset 004A  
                    _Key_Init 1F9A                      _Key_Scan 1CFA                _Manage_Message 1306  
               ??i2_SetTimer0 0003                   ??_SetTimer0 001B              __size_of_BusyADC 000E  
            __size_of_ReadADC 0010                      __Hrparam 0000   __size_of_RS485_Receive_Date 0088  
            __size_of_OpenADC 004E                      __Lrparam 0000                  __Lsmallconst 1000  
          __CFG_BOREN$SBORDIS 000000               _RS485_Send_Date 1934              __size_of___lbmod 0032  
            __size_of_Sys_Cyc 018C              __size_of___ftdiv 0152              __size_of___ftmul 0102  
            __size_of___llmod 0070              __size_of___lwdiv 005C              __size_of___lwmod 004C  
                    ___ftpack 1654                      ___lwtoft 1E4C    __end_of_TM1640_Writer_Byte 1CC0  
             ___lwdiv@divisor 001B               ___lwdiv@counter 001D                      __ptext10 17AC  
                    __ptext11 1A1C                      __ptext20 1F80                      __ptext12 1DFE  
                    __ptext21 1F26                      __ptext13 1A8A                      __ptext30 1F5E  
                    __ptext22 1834                      __ptext14 1E4C                      __ptext31 1B52  
                    __ptext23 1F9A                      __ptext15 1552                      __ptext40 1CFA  
                    __ptext24 1E72                      __ptext16 11B4                      __ptext41 1D34  
                    __ptext33 1DCE                      __ptext25 1C82                      __ptext17 1654  
                    __ptext34 19AC                      __ptext26 1EBC                      __ptext18 1F70  
                    __ptext35 1306                      __ptext27 1EE0                      __ptext19 1FA4  
                    __ptext36 1D6C                      __ptext28 1F44                      __ptext37 1C38  
                    __ptext29 1F8E                      __ptext38 1012                      __ptext39 1BEC  
      __end_of_Manage_Message 144C                 __size_of_main 003A           __CFG_RTCOSC$SOSCREF 000000  
                  _CRC_Verify 1A1C                 _Key_FSM_Reset 1C38          __size_of_Timer0_Init 0024  
         __end_ofi2_SetTimer0 1DFE             CRC_Verify@_pucBuf 001F           __CFG_INTOSCSEL$HIGH 000000  
          Sys_Cyc@RS485_Timer 003F                    _LED_Number 1001            __CFG_WDTEN$SWDTDIS 000000  
                  _INTCONbits 000FF2          __size_of_Show_Result 007C                    _RS485_Init 1F26  
             ?_Manage_Message 0001                      intlevel2 0000              ___lwmod@dividend 0019  
                  _RCSTA2bits 000F22       __end_of_RS485_Send_Date 19AC                ?_Key_FSM_Reset 0001  
         RS485_Receive_Date@n 002E              CRC_Verify@_usLen 0021            __CFG_WDTPS$1048576 000000  
             ___lwmod@divisor 001B               ___lwmod@counter 001D                 ?_Key_FSM_Read 0001  
               ?_Key_FSM_Scan 0001           __CFG_BORPWR$ZPBORMV 000000            __size_of_ADC6_Init 0012  
                 i2_SetTimer0 1DCE                   ?_CRC_Verify 001F           _TM1640_Show_integer 144C  
