

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Jan 22 15:49:51 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F67K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    55  0000                     
    56                           	psect	smallconst
    57  001000                     __psmallconst:
    58                           	opt stack 0
    59  001000  00                 	db	0
    60  001001                     _LED_Number:
    61                           	opt stack 0
    62  001001  3F                 	db	63
    63  001002  06                 	db	6
    64  001003  5B                 	db	91
    65  001004  4F                 	db	79
    66  001005  66                 	db	102
    67  001006  6D                 	db	109
    68  001007  7D                 	db	125
    69  001008  07                 	db	7
    70  001009  7F                 	db	127
    71  00100A  6F                 	db	111
    72  00100B  77                 	db	119
    73  00100C  7C                 	db	124
    74  00100D  39                 	db	57
    75  00100E  5E                 	db	94
    76  00100F  79                 	db	121
    77  001010  71                 	db	113
    78  001011                     __end_of_LED_Number:
    79                           	opt stack 0
    80  0000                     _ANCON2	set	3875
    81  0000                     _RCREG2	set	3869
    82  0000                     _RCSTA2	set	3874
    83  0000                     _RCSTA2bits	set	3874
    84  0000                     _SPBRG2	set	3870
    85  0000                     _SPBRGH2	set	3871
    86  0000                     _TXREG2	set	3868
    87  0000                     _TXSTA2	set	3873
    88  0000                     _TXSTA2bits	set	3873
    89  0000                     _ADCON0	set	4034
    90  0000                     _ADCON0bits	set	4034
    91  0000                     _ADCON1	set	4033
    92  0000                     _ADCON2	set	4032
    93  0000                     _ADRESH	set	4036
    94  0000                     _ADRESL	set	4035
    95  0000                     _INTCONbits	set	4082
    96  0000                     _PIE1bits	set	3997
    97  0000                     _PIE3bits	set	4003
    98  0000                     _PIR1bits	set	3998
    99  0000                     _PORTEbits	set	3972
   100  0000                     _TMR0H	set	4055
   101  0000                     _TMR0L	set	4054
   102  0000                     _TRISCbits	set	3988
   103  0000                     _TRISD	set	3989
   104  0000                     _TRISE	set	3990
   105  0000                     _TRISGbits	set	3992
   106  0000                     _GIE	set	32663
   107  0000                     _IPEN	set	32391
   108  0000                     _PSA	set	32427
   109  0000                     _RC2IF	set	32037
   110  0000                     _RC3	set	31763
   111  0000                     _RC4	set	31764
   112  0000                     _RD6	set	31774
   113  0000                     _RD7	set	31775
   114  0000                     _RE2	set	31778
   115  0000                     _RE3	set	31779
   116  0000                     _RE4	set	31780
   117  0000                     _RE5	set	31781
   118  0000                     _RE6	set	31782
   119  0000                     _RE7	set	31783
   120  0000                     _RG3	set	31795
   121  0000                     _T08BIT	set	32430
   122  0000                     _T0CS	set	32429
   123  0000                     _T0PS0	set	32424
   124  0000                     _T0PS1	set	32425
   125  0000                     _T0PS2	set	32426
   126  0000                     _T0SE	set	32428
   127  0000                     _TMR0IE	set	32661
   128  0000                     _TMR0IF	set	32658
   129  0000                     _TMR0ON	set	32431
   130                           
   131                           ; #config settings
   132  001011  00                 	db	0	; dummy byte at the end
   133  0000                     
   134                           	psect	cinit
   135  001E3E                     __pcinit:
   136                           	opt stack 0
   137  001E3E                     start_initialization:
   138                           	opt stack 0
   139  001E3E                     __initialization:
   140                           	opt stack 0
   141                           
   142                           ; Clear objects allocated to BANK0 (66 bytes)
   143  001E3E  EE00  F060         	lfsr	0,__pbssBANK0
   144  001E42  0E42               	movlw	66
   145  001E44                     clear_0:
   146  001E44  6AEE               	clrf	postinc0,c
   147  001E46  06E8               	decf	wreg,f,c
   148  001E48  E1FD               	bnz	clear_0
   149                           
   150                           ; Clear objects allocated to COMRAM (21 bytes)
   151  001E4A  EE00  F033         	lfsr	0,__pbssCOMRAM
   152  001E4E  0E15               	movlw	21
   153  001E50                     clear_1:
   154  001E50  6AEE               	clrf	postinc0,c
   155  001E52  06E8               	decf	wreg,f,c
   156  001E54  E1FD               	bnz	clear_1
   157  001E56                     end_of_initialization:
   158                           	opt stack 0
   159  001E56                     __end_of__initialization:
   160                           	opt stack 0
   161  001E56  0E00               	movlw	low (__Lsmallconst shr (0+16))
   162  001E58  6EF8               	movwf	tblptru,c
   163  001E5A  0E10               	movlw	high __Lsmallconst
   164  001E5C  6EF7               	movwf	tblptrh,c
   165  001E5E  0100               	movlb	0
   166  001E60  EF6C  F00E         	goto	_main	;jump to C main() function
   167                           tblptru	equ	0xFF8
   168                           tblptrh	equ	0xFF7
   169                           postinc0	equ	0xFEE
   170                           wreg	equ	0xFE8
   171                           
   172                           	psect	bssCOMRAM
   173  000033                     __pbssCOMRAM:
   174                           	opt stack 0
   175  000033                     _Handle_Switch:
   176                           	opt stack 0
   177  000033                     	ds	4
   178  000037                     _Timer_Cyc:
   179                           	opt stack 0
   180  000037                     	ds	4
   181  00003B                     _ADC6_Buff:
   182                           	opt stack 0
   183  00003B                     	ds	3
   184  00003E                     Show_Result@RS485_LED:
   185                           	opt stack 0
   186  00003E                     	ds	1
   187  00003F                     Sys_Cyc@RS485_Timer:
   188                           	opt stack 0
   189  00003F                     	ds	1
   190  000040                     Sys_Cyc@_RS485_Receive_Num:
   191                           	opt stack 0
   192  000040                     	ds	1
   193  000041                     Sys_Cyc@_overturn_1Khz:
   194                           	opt stack 0
   195  000041                     	ds	1
   196  000042                     Sys_Cyc@_overturn_LED:
   197                           	opt stack 0
   198  000042                     	ds	1
   199  000043                     _LED2_switch:
   200                           	opt stack 0
   201  000043                     	ds	1
   202  000044                     _RS485_Num:
   203                           	opt stack 0
   204  000044                     	ds	1
   205  000045                     _RS485_Receive_Flag:
   206                           	opt stack 0
   207  000045                     	ds	1
   208  000046                     _Receive_Flag:
   209                           	opt stack 0
   210  000046                     	ds	1
   211  000047                     _g_Addr:
   212                           	opt stack 0
   213  000047                     	ds	1
   214                           tblptru	equ	0xFF8
   215                           tblptrh	equ	0xFF7
   216                           postinc0	equ	0xFEE
   217                           wreg	equ	0xFE8
   218                           
   219                           	psect	bssBANK0
   220  000060                     __pbssBANK0:
   221                           	opt stack 0
   222  000060                     _RS485_ReceiveBuff:
   223                           	opt stack 0
   224  000060                     	ds	10
   225  00006A                     _Local_Key_FSM:
   226                           	opt stack 0
   227  00006A                     	ds	18
   228  00007C                     _Local_Key_User:
   229                           	opt stack 0
   230  00007C                     	ds	18
   231  00008E                     _RS485_SendBuff:
   232                           	opt stack 0
   233  00008E                     	ds	10
   234  000098                     _ReceiveBuff:
   235                           	opt stack 0
   236  000098                     	ds	10
   237                           tblptru	equ	0xFF8
   238                           tblptrh	equ	0xFF7
   239                           postinc0	equ	0xFEE
   240                           wreg	equ	0xFE8
   241                           
   242                           	psect	cstackBANK0
   243  0000A2                     __pcstackBANK0:
   244                           	opt stack 0
   245  0000A2                     ?___ftdiv:
   246                           	opt stack 0
   247  0000A2                     ___ftdiv@f1:
   248                           	opt stack 0
   249                           
   250                           ; 3 bytes @ 0x0
   251  0000A2                     	ds	3
   252  0000A5                     ___ftdiv@f2:
   253                           	opt stack 0
   254                           
   255                           ; 3 bytes @ 0x3
   256  0000A5                     	ds	3
   257  0000A8                     ??___ftdiv:
   258                           
   259                           ; 0 bytes @ 0x6
   260  0000A8                     	ds	3
   261  0000AB                     ___ftdiv@cntr:
   262                           	opt stack 0
   263                           
   264                           ; 1 bytes @ 0x9
   265  0000AB                     	ds	1
   266  0000AC                     ___ftdiv@f3:
   267                           	opt stack 0
   268                           
   269                           ; 3 bytes @ 0xA
   270  0000AC                     	ds	3
   271  0000AF                     ___ftdiv@exp:
   272                           	opt stack 0
   273                           
   274                           ; 1 bytes @ 0xD
   275  0000AF                     	ds	1
   276  0000B0                     ___ftdiv@sign:
   277                           	opt stack 0
   278                           
   279                           ; 1 bytes @ 0xE
   280  0000B0                     	ds	1
   281  0000B1                     Run@i:
   282                           	opt stack 0
   283                           
   284                           ; 2 bytes @ 0xF
   285  0000B1                     	ds	2
   286  0000B3                     main@num:
   287                           	opt stack 0
   288                           
   289                           ; 3 bytes @ 0x11
   290  0000B3                     	ds	3
   291                           tblptru	equ	0xFF8
   292                           tblptrh	equ	0xFF7
   293                           postinc0	equ	0xFEE
   294                           wreg	equ	0xFE8
   295                           
   296                           	psect	cstackCOMRAM
   297  000001                     __pcstackCOMRAM:
   298                           	opt stack 0
   299  000001                     ??_Key_FSM_Read:
   300  000001                     ?___llmod:
   301                           	opt stack 0
   302  000001                     Delay_1Khz@a:
   303                           	opt stack 0
   304  000001                     Key_FSM_Reset@t:
   305                           	opt stack 0
   306  000001                     ___lbmod@divisor:
   307                           	opt stack 0
   308  000001                     i2SetTimer0@_tmr:
   309                           	opt stack 0
   310  000001                     ___llmod@dividend:
   311                           	opt stack 0
   312                           
   313                           ; 4 bytes @ 0x0
   314  000001                     	ds	1
   315  000002                     Delay_1Khz@b:
   316                           	opt stack 0
   317  000002                     ___lbmod@dividend:
   318                           	opt stack 0
   319                           
   320                           ; 1 bytes @ 0x1
   321  000002                     	ds	1
   322  000003                     ??i2_SetTimer0:
   323  000003                     Delay_1Khz@c:
   324                           	opt stack 0
   325  000003                     ___lbmod@counter:
   326                           	opt stack 0
   327                           
   328                           ; 1 bytes @ 0x2
   329  000003                     	ds	1
   330  000004                     ___lbmod@rem:
   331                           	opt stack 0
   332                           
   333                           ; 1 bytes @ 0x3
   334  000004                     	ds	1
   335  000005                     Key_FSM_Read@key_num_mate:
   336                           	opt stack 0
   337  000005                     ___llmod@divisor:
   338                           	opt stack 0
   339                           
   340                           ; 4 bytes @ 0x4
   341  000005                     	ds	1
   342  000006                     Key_FSM_Read@key_num:
   343                           	opt stack 0
   344                           
   345                           ; 1 bytes @ 0x5
   346  000006                     	ds	1
   347  000007                     
   348                           ; 0 bytes @ 0x6
   349  000007                     	ds	2
   350  000009                     ___llmod@counter:
   351                           	opt stack 0
   352                           
   353                           ; 1 bytes @ 0x8
   354  000009                     	ds	1
   355  00000A                     ??_Sys_Cyc:
   356                           
   357                           ; 0 bytes @ 0x9
   358  00000A                     	ds	14
   359  000018                     Sys_Cyc@_pulse:
   360                           	opt stack 0
   361                           
   362                           ; 1 bytes @ 0x17
   363  000018                     	ds	1
   364  000019                     ?_ReadADC:
   365                           	opt stack 0
   366  000019                     ?___wmul:
   367                           	opt stack 0
   368  000019                     ?___lwdiv:
   369                           	opt stack 0
   370  000019                     ?___lwmod:
   371                           	opt stack 0
   372  000019                     ?___ftpack:
   373                           	opt stack 0
   374  000019                     TM1640_Delay@Time:
   375                           	opt stack 0
   376  000019                     OpenADC@config2:
   377                           	opt stack 0
   378  000019                     SetTimer0@_tmr:
   379                           	opt stack 0
   380  000019                     Open2USART@spbrg:
   381                           	opt stack 0
   382  000019                     ___wmul@multiplier:
   383                           	opt stack 0
   384  000019                     ___lwdiv@dividend:
   385                           	opt stack 0
   386  000019                     ___lwmod@dividend:
   387                           	opt stack 0
   388  000019                     ___ftpack@arg:
   389                           	opt stack 0
   390                           
   391                           ; 3 bytes @ 0x18
   392  000019                     	ds	1
   393  00001A                     TM1640_Delay@i:
   394                           	opt stack 0
   395  00001A                     OpenADC@config3:
   396                           	opt stack 0
   397                           
   398                           ; 1 bytes @ 0x19
   399  00001A                     	ds	1
   400  00001B                     ??_SetTimer0:
   401  00001B                     ??_OpenADC:
   402  00001B                     ??_ReadADC:
   403  00001B                     TM1640_Writer_Byte@Date:
   404                           	opt stack 0
   405  00001B                     Open2USART@config:
   406                           	opt stack 0
   407  00001B                     ___wmul@multiplicand:
   408                           	opt stack 0
   409  00001B                     ___lwdiv@divisor:
   410                           	opt stack 0
   411  00001B                     ___lwmod@divisor:
   412                           	opt stack 0
   413                           
   414                           ; 2 bytes @ 0x1A
   415  00001B                     	ds	1
   416  00001C                     TM1640_Writer_Byte@mask:
   417                           	opt stack 0
   418  00001C                     ___ftpack@exp:
   419                           	opt stack 0
   420                           
   421                           ; 1 bytes @ 0x1B
   422  00001C                     	ds	1
   423  00001D                     OpenADC@config:
   424                           	opt stack 0
   425  00001D                     ___ftpack@sign:
   426                           	opt stack 0
   427  00001D                     ___lwdiv@counter:
   428                           	opt stack 0
   429  00001D                     ___lwmod@counter:
   430                           	opt stack 0
   431  00001D                     ___wmul@product:
   432                           	opt stack 0
   433                           
   434                           ; 2 bytes @ 0x1C
   435  00001D                     	ds	1
   436  00001E                     ??___ftpack:
   437  00001E                     TM1640_Writer_Dates@Date:
   438                           	opt stack 0
   439  00001E                     ___lwdiv@quotient:
   440                           	opt stack 0
   441                           
   442                           ; 2 bytes @ 0x1D
   443  00001E                     	ds	1
   444  00001F                     TM1640_Writer_Dates@Addr:
   445                           	opt stack 0
   446  00001F                     CRC_Verify@_pucBuf:
   447                           	opt stack 0
   448                           
   449                           ; 2 bytes @ 0x1E
   450  00001F                     	ds	1
   451  000020                     TM1640_Show_integer@Numbers:
   452                           	opt stack 0
   453                           
   454                           ; 2 bytes @ 0x1F
   455  000020                     	ds	1
   456  000021                     ?___lwtoft:
   457                           	opt stack 0
   458  000021                     CRC_Verify@_usLen:
   459                           	opt stack 0
   460  000021                     ___lwtoft@c:
   461                           	opt stack 0
   462                           
   463                           ; 2 bytes @ 0x20
   464  000021                     	ds	1
   465  000022                     ??_Show_Result:
   466  000022                     CRC_Verify@_ucHByte:
   467                           	opt stack 0
   468                           
   469                           ; 2 bytes @ 0x21
   470  000022                     	ds	2
   471  000024                     ?___ftmul:
   472                           	opt stack 0
   473  000024                     CRC_Verify@_ucLByte:
   474                           	opt stack 0
   475  000024                     ___ftmul@f1:
   476                           	opt stack 0
   477                           
   478                           ; 3 bytes @ 0x23
   479  000024                     	ds	2
   480  000026                     ??_CRC_Verify:
   481                           
   482                           ; 0 bytes @ 0x25
   483  000026                     	ds	1
   484  000027                     CRC_Verify@usCrc:
   485                           	opt stack 0
   486  000027                     ___ftmul@f2:
   487                           	opt stack 0
   488                           
   489                           ; 3 bytes @ 0x26
   490  000027                     	ds	2
   491  000029                     CRC_Verify@i:
   492                           	opt stack 0
   493                           
   494                           ; 1 bytes @ 0x28
   495  000029                     	ds	1
   496  00002A                     ??___ftmul:
   497  00002A                     RS485_Send_Date@date_dress:
   498                           	opt stack 0
   499  00002A                     RS485_Receive_Date@DataBuff:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0x29
   503  00002A                     	ds	2
   504  00002C                     RS485_Send_Date@date_lenth:
   505                           	opt stack 0
   506  00002C                     RS485_Receive_Date@_ucHByte:
   507                           	opt stack 0
   508                           
   509                           ; 1 bytes @ 0x2B
   510  00002C                     	ds	1
   511  00002D                     RS485_Receive_Date@_ucLByte:
   512                           	opt stack 0
   513  00002D                     ___ftmul@exp:
   514                           	opt stack 0
   515  00002D                     RS485_Send_Date@i:
   516                           	opt stack 0
   517                           
   518                           ; 2 bytes @ 0x2C
   519  00002D                     	ds	1
   520  00002E                     RS485_Receive_Date@n:
   521                           	opt stack 0
   522  00002E                     ___ftmul@f3_as_product:
   523                           	opt stack 0
   524                           
   525                           ; 3 bytes @ 0x2D
   526  00002E                     	ds	3
   527  000031                     ___ftmul@cntr:
   528                           	opt stack 0
   529                           
   530                           ; 1 bytes @ 0x30
   531  000031                     	ds	1
   532  000032                     ___ftmul@sign:
   533                           	opt stack 0
   534                           
   535                           ; 1 bytes @ 0x31
   536  000032                     	ds	1
   537  000033                     tblptru	equ	0xFF8
   538                           tblptrh	equ	0xFF7
   539                           postinc0	equ	0xFEE
   540                           wreg	equ	0xFE8
   541                           
   542                           ; 0 bytes @ 0x32
   543 ;;
   544 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   545 ;;
   546 ;; *************** function _main *****************
   547 ;; Defined at:
   548 ;;		line 37 in file "_01_USER/main.c"
   549 ;; Parameters:    Size  Location     Type
   550 ;;		None
   551 ;; Auto vars:     Size  Location     Type
   552 ;;  num             3   17[BANK0 ] float 
   553 ;; Return value:  Size  Location     Type
   554 ;;                  2   18[None  ] int 
   555 ;; Registers used:
   556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   557 ;; Tracked objects:
   558 ;;		On entry : 0/0
   559 ;;		On exit  : 0/0
   560 ;;		Unchanged: 0/0
   561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   563 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   565 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   566 ;;Total ram usage:        3 bytes
   567 ;; Hardware stack levels required when called:    8
   568 ;; This function calls:
   569 ;;		_ADC6_Init
   570 ;;		_GPIO_Config
   571 ;;		_Init_TM1640
   572 ;;		_Key_Init
   573 ;;		_RS485_Init
   574 ;;		_Run
   575 ;;		_Show_Result
   576 ;;		_Timer0_Init
   577 ;; This function is called by:
   578 ;;		Startup code after reset
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           	psect	text0
   583  001CD8                     __ptext0:
   584                           	opt stack 0
   585  001CD8                     _main:
   586                           	opt stack 23
   587                           
   588                           ;main.c: 40: float num = 0;
   589                           
   590                           ;incstack = 0
   591  001CD8  0E00               	movlw	0
   592  001CDA  0100               	movlb	0	; () banked
   593  001CDC  6FB3               	movwf	main@num& (0+255),b
   594  001CDE  0E00               	movlw	0
   595  001CE0  0100               	movlb	0	; () banked
   596  001CE2  6FB4               	movwf	(main@num+1)& (0+255),b
   597  001CE4  0E00               	movlw	0
   598  001CE6  0100               	movlb	0	; () banked
   599  001CE8  6FB5               	movwf	(main@num+2)& (0+255),b
   600                           
   601                           ; BSR set to: 0
   602                           ;main.c: 43: GPIO_Config();
   603  001CEA  ECD3  F00F         	call	_GPIO_Config	;wreg free
   604                           
   605                           ;main.c: 44: Key_Init();
   606  001CEE  ECD9  F00F         	call	_Key_Init	;wreg free
   607                           
   608                           ;main.c: 45: Timer0_Init();
   609  001CF2  EC58  F00F         	call	_Timer0_Init	;wreg free
   610                           
   611                           ;main.c: 46: Init_TM1640();
   612  001CF6  EC45  F00F         	call	_Init_TM1640	;wreg free
   613                           
   614                           ;main.c: 47: ADC6_Init();
   615  001CFA  ECBB  F00F         	call	_ADC6_Init	;wreg free
   616                           
   617                           ;main.c: 48: RS485_Init();
   618  001CFE  EC9F  F00F         	call	_RS485_Init	;wreg free
   619  001D02  D000               	goto	l3183
   620  001D04                     l3183:
   621                           
   622                           ;main.c: 52: {
   623                           ;main.c: 53: Run();
   624  001D04  EC85  F00B         	call	_Run	;wreg free
   625                           
   626                           ;main.c: 54: Show_Result();
   627  001D08  ECD3  F00B         	call	_Show_Result	;wreg free
   628  001D0C  D7FB               	goto	l3183
   629                           
   630                           ;main.c: 55: }
   631                           ;main.c: 57: return 0;
   632                           ;	Return value of _main is never used
   633  001D0E  EFCA  F000         	goto	start
   634  001D12                     __end_of_main:
   635                           	opt stack 0
   636                           tblptru	equ	0xFF8
   637                           tblptrh	equ	0xFF7
   638                           postinc0	equ	0xFEE
   639                           wreg	equ	0xFE8
   640                           
   641 ;; *************** function _Timer0_Init *****************
   642 ;; Defined at:
   643 ;;		line 41 in file "_01_USER/My_Timer.c"
   644 ;; Parameters:    Size  Location     Type
   645 ;;		None
   646 ;; Auto vars:     Size  Location     Type
   647 ;;		None
   648 ;; Return value:  Size  Location     Type
   649 ;;		None               void
   650 ;; Registers used:
   651 ;;		wreg, status,2, status,0, cstack
   652 ;; Tracked objects:
   653 ;;		On entry : 0/0
   654 ;;		On exit  : 0/0
   655 ;;		Unchanged: 0/0
   656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   661 ;;Total ram usage:        0 bytes
   662 ;; Hardware stack levels used:    1
   663 ;; Hardware stack levels required when called:    4
   664 ;; This function calls:
   665 ;;		_SetTimer0
   666 ;; This function is called by:
   667 ;;		_main
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671                           	psect	text1
   672  001EB0                     __ptext1:
   673                           	opt stack 0
   674  001EB0                     _Timer0_Init:
   675                           	opt stack 26
   676                           
   677                           ;My_Timer.c: 43: T08BIT = 0;
   678                           
   679                           ;incstack = 0
   680  001EB0  9CD5               	bcf	4053,6,c	;volatile
   681                           
   682                           ;My_Timer.c: 44: T0CS = 0;
   683  001EB2  9AD5               	bcf	4053,5,c	;volatile
   684                           
   685                           ;My_Timer.c: 45: T0SE = 0;
   686  001EB4  98D5               	bcf	4053,4,c	;volatile
   687                           
   688                           ;My_Timer.c: 46: PSA = 0;
   689  001EB6  96D5               	bcf	4053,3,c	;volatile
   690                           
   691                           ;My_Timer.c: 47: T0PS2 = 1;
   692  001EB8  84D5               	bsf	4053,2,c	;volatile
   693                           
   694                           ;My_Timer.c: 48: T0PS1 = 1;
   695  001EBA  82D5               	bsf	4053,1,c	;volatile
   696                           
   697                           ;My_Timer.c: 49: T0PS0 = 1;
   698  001EBC  80D5               	bsf	4053,0,c	;volatile
   699                           
   700                           ;My_Timer.c: 63: SetTimer0(1);
   701  001EBE  0E00               	movlw	0
   702  001EC0  6E1A               	movwf	SetTimer0@_tmr+1,c
   703  001EC2  0E01               	movlw	1
   704  001EC4  6E19               	movwf	SetTimer0@_tmr,c
   705  001EC6  ECDB  F00E         	call	_SetTimer0	;wreg free
   706                           
   707                           ;My_Timer.c: 64: TMR0ON = 1;
   708  001ECA  8ED5               	bsf	4053,7,c	;volatile
   709                           
   710                           ;My_Timer.c: 65: TMR0IE = 1;
   711  001ECC  8AF2               	bsf	intcon,5,c	;volatile
   712                           
   713                           ;My_Timer.c: 66: IPEN = 0;GIE = 1;
   714  001ECE  9ED0               	bcf	4048,7,c	;volatile
   715  001ED0  8EF2               	bsf	intcon,7,c	;volatile
   716  001ED2  0012               	return		;funcret
   717  001ED4                     __end_of_Timer0_Init:
   718                           	opt stack 0
   719                           tblptru	equ	0xFF8
   720                           tblptrh	equ	0xFF7
   721                           intcon	equ	0xFF2
   722                           postinc0	equ	0xFEE
   723                           wreg	equ	0xFE8
   724                           
   725 ;; *************** function _SetTimer0 *****************
   726 ;; Defined at:
   727 ;;		line 79 in file "_01_USER/My_Timer.c"
   728 ;; Parameters:    Size  Location     Type
   729 ;;  _tmr            2   24[COMRAM] unsigned int 
   730 ;; Auto vars:     Size  Location     Type
   731 ;;		None
   732 ;; Return value:  Size  Location     Type
   733 ;;		None               void
   734 ;; Registers used:
   735 ;;		wreg, status,2, status,0
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 0/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   741 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   743 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   744 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   745 ;;Total ram usage:        4 bytes
   746 ;; Hardware stack levels used:    1
   747 ;; Hardware stack levels required when called:    3
   748 ;; This function calls:
   749 ;;		Nothing
   750 ;; This function is called by:
   751 ;;		_Timer0_Init
   752 ;; This function uses a non-reentrant model
   753 ;;
   754                           
   755                           	psect	text2
   756  001DB6                     __ptext2:
   757                           	opt stack 0
   758  001DB6                     _SetTimer0:
   759                           	opt stack 26
   760                           
   761                           ;My_Timer.c: 81: if(_tmr > 0xffff) _tmr = 0xffff;
   762                           
   763                           ;incstack = 0
   764  001DB6  D003               	goto	l3043
   765  001DB8  6819               	setf	SetTimer0@_tmr,c
   766  001DBA  681A               	setf	SetTimer0@_tmr+1,c
   767  001DBC  D000               	goto	l3043
   768  001DBE                     l3043:
   769                           
   770                           ;My_Timer.c: 82: _tmr=0xffff-_tmr;
   771  001DBE  C019  F01B         	movff	SetTimer0@_tmr,??_SetTimer0
   772  001DC2  C01A  F01C         	movff	SetTimer0@_tmr+1,??_SetTimer0+1
   773  001DC6  1E1B               	comf	??_SetTimer0,f,c
   774  001DC8  1E1C               	comf	??_SetTimer0+1,f,c
   775  001DCA  4A1B               	infsnz	??_SetTimer0,f,c
   776  001DCC  2A1C               	incf	??_SetTimer0+1,f,c
   777  001DCE  0EFF               	movlw	255
   778  001DD0  241B               	addwf	??_SetTimer0,w,c
   779  001DD2  6E19               	movwf	SetTimer0@_tmr,c
   780  001DD4  0EFF               	movlw	255
   781  001DD6  201C               	addwfc	??_SetTimer0+1,w,c
   782  001DD8  6E1A               	movwf	SetTimer0@_tmr+1,c
   783                           
   784                           ;My_Timer.c: 83: TMR0H = _tmr/256;
   785  001DDA  501A               	movf	SetTimer0@_tmr+1,w,c
   786  001DDC  6ED7               	movwf	4055,c	;volatile
   787                           
   788                           ;My_Timer.c: 84: TMR0L = _tmr%256;
   789  001DDE  C019  FFD6         	movff	SetTimer0@_tmr,4054	;volatile
   790                           
   791                           ;My_Timer.c: 85: TMR0IF = 0;
   792  001DE2  94F2               	bcf	intcon,2,c	;volatile
   793  001DE4  0012               	return		;funcret
   794  001DE6                     __end_of_SetTimer0:
   795                           	opt stack 0
   796                           tblptru	equ	0xFF8
   797                           tblptrh	equ	0xFF7
   798                           intcon	equ	0xFF2
   799                           postinc0	equ	0xFEE
   800                           wreg	equ	0xFE8
   801                           
   802 ;; *************** function _Show_Result *****************
   803 ;; Defined at:
   804 ;;		line 143 in file "_01_USER/Run.c"
   805 ;; Parameters:    Size  Location     Type
   806 ;;		None
   807 ;; Auto vars:     Size  Location     Type
   808 ;;  i               1    0        unsigned char 
   809 ;; Return value:  Size  Location     Type
   810 ;;		None               void
   811 ;; Registers used:
   812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   820 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   821 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   822 ;;Total ram usage:        1 bytes
   823 ;; Hardware stack levels used:    1
   824 ;; Hardware stack levels required when called:    7
   825 ;; This function calls:
   826 ;;		_TM1640_Show_integer
   827 ;;		___wmul
   828 ;; This function is called by:
   829 ;;		_main
   830 ;; This function uses a non-reentrant model
   831 ;;
   832                           
   833                           	psect	text3
   834  0017A6                     __ptext3:
   835                           	opt stack 0
   836  0017A6                     _Show_Result:
   837                           	opt stack 23
   838                           
   839                           ;Run.c: 145: static unsigned char RS485_LED = 0;
   840                           ;Run.c: 146: unsigned char i;
   841                           ;Run.c: 147: if( Handle_Switch.Show_Send_Receive )
   842                           
   843                           ;incstack = 0
   844  0017A6  5036               	movf	_Handle_Switch+3,w,c
   845  0017A8  B4D8               	btfsc	status,2,c
   846  0017AA  D01D               	goto	l3155
   847                           
   848                           ;Run.c: 148: {
   849                           ;Run.c: 149: TM1640_Show_integer( RS485_SendBuff[RS485_Num] + (RS485_Num * 1000) );
   850  0017AC  C044  F019         	movff	_RS485_Num,___wmul@multiplier
   851  0017B0  6A1A               	clrf	___wmul@multiplier+1,c
   852  0017B2  0E03               	movlw	3
   853  0017B4  6E1C               	movwf	___wmul@multiplicand+1,c
   854  0017B6  0EE8               	movlw	232
   855  0017B8  6E1B               	movwf	___wmul@multiplicand,c
   856  0017BA  EC0B  F00F         	call	___wmul	;wreg free
   857  0017BE  5044               	movf	_RS485_Num,w,c
   858  0017C0  0D01               	mullw	1
   859  0017C2  0E8E               	movlw	low _RS485_SendBuff
   860  0017C4  24F3               	addwf	prodl,w,c
   861  0017C6  6ED9               	movwf	fsr2l,c
   862  0017C8  0E00               	movlw	high _RS485_SendBuff
   863  0017CA  20F4               	addwfc	prodh,w,c
   864  0017CC  6EDA               	movwf	fsr2h,c
   865  0017CE  50DF               	movf	indf2,w,c
   866  0017D0  6E22               	movwf	??_Show_Result& (0+255),c
   867  0017D2  5022               	movf	??_Show_Result,w,c
   868  0017D4  2419               	addwf	?___wmul,w,c
   869  0017D6  6E20               	movwf	TM1640_Show_integer@Numbers,c
   870  0017D8  0E00               	movlw	0
   871  0017DA  201A               	addwfc	?___wmul+1,w,c
   872  0017DC  6E21               	movwf	TM1640_Show_integer@Numbers+1,c
   873  0017DE  EC1E  F00A         	call	_TM1640_Show_integer	;wreg free
   874                           
   875                           ;Run.c: 150: PORTEbits.RE7=0;
   876  0017E2  9E84               	bcf	3972,7,c	;volatile
   877                           
   878                           ;Run.c: 151: }
   879  0017E4  0012               	return	
   880  0017E6                     l3155:
   881                           
   882                           ;Run.c: 153: else
   883                           ;Run.c: 154: {
   884                           ;Run.c: 155: if( ReceiveBuff[1] == g_Addr )
   885  0017E6  5047               	movf	_g_Addr,w,c
   886  0017E8  0100               	movlb	0	; () banked
   887  0017EA  1999               	xorwf	(_ReceiveBuff+1)& (0+255),w,b
   888  0017EC  A4D8               	btfss	status,2,c
   889  0017EE  0012               	return	
   890                           
   891                           ; BSR set to: 0
   892                           ;Run.c: 156: {
   893                           ;Run.c: 157: if(RS485_LED) {PORTEbits.RE6=0;RS485_LED = 0;}
   894  0017F0  503E               	movf	Show_Result@RS485_LED,w,c
   895  0017F2  B4D8               	btfsc	status,2,c
   896  0017F4  D003               	goto	l419
   897                           
   898                           ; BSR set to: 0
   899  0017F6  9C84               	bcf	3972,6,c	;volatile
   900                           
   901                           ; BSR set to: 0
   902  0017F8  0E00               	movlw	0
   903  0017FA  D002               	goto	L1
   904  0017FC                     l419:
   905                           
   906                           ; BSR set to: 0
   907                           ;Run.c: 158: else {PORTEbits.RE6=1;RS485_LED = 1;}
   908  0017FC  8C84               	bsf	3972,6,c	;volatile
   909                           
   910                           ; BSR set to: 0
   911  0017FE  0E01               	movlw	1
   912  001800                     L1:
   913  001800  6E3E               	movwf	Show_Result@RS485_LED,c
   914  001802  D000               	goto	l3165
   915  001804                     l3165:
   916                           
   917                           ; BSR set to: 0
   918                           ;Run.c: 160: TM1640_Show_integer( ReceiveBuff[RS485_Num] + (RS485_Num * 1000) );
   919  001804  C044  F019         	movff	_RS485_Num,___wmul@multiplier
   920  001808  6A1A               	clrf	___wmul@multiplier+1,c
   921  00180A  0E03               	movlw	3
   922  00180C  6E1C               	movwf	___wmul@multiplicand+1,c
   923  00180E  0EE8               	movlw	232
   924  001810  6E1B               	movwf	___wmul@multiplicand,c
   925  001812  EC0B  F00F         	call	___wmul	;wreg free
   926  001816  5044               	movf	_RS485_Num,w,c
   927  001818  0D01               	mullw	1
   928  00181A  0E98               	movlw	low _ReceiveBuff
   929  00181C  24F3               	addwf	prodl,w,c
   930  00181E  6ED9               	movwf	fsr2l,c
   931  001820  0E00               	movlw	high _ReceiveBuff
   932  001822  20F4               	addwfc	prodh,w,c
   933  001824  6EDA               	movwf	fsr2h,c
   934  001826  50DF               	movf	indf2,w,c
   935  001828  6E22               	movwf	??_Show_Result& (0+255),c
   936  00182A  5022               	movf	??_Show_Result,w,c
   937  00182C  2419               	addwf	?___wmul,w,c
   938  00182E  6E20               	movwf	TM1640_Show_integer@Numbers,c
   939  001830  0E00               	movlw	0
   940  001832  201A               	addwfc	?___wmul+1,w,c
   941  001834  6E21               	movwf	TM1640_Show_integer@Numbers+1,c
   942  001836  EC1E  F00A         	call	_TM1640_Show_integer	;wreg free
   943                           
   944                           ;Run.c: 161: PORTEbits.RE7=1;
   945  00183A  8E84               	bsf	3972,7,c	;volatile
   946  00183C  0012               	return	
   947  00183E  0012               	return		;funcret
   948  001840                     __end_of_Show_Result:
   949                           	opt stack 0
   950                           tblptru	equ	0xFF8
   951                           tblptrh	equ	0xFF7
   952                           prodh	equ	0xFF4
   953                           prodl	equ	0xFF3
   954                           intcon	equ	0xFF2
   955                           postinc0	equ	0xFEE
   956                           wreg	equ	0xFE8
   957                           indf2	equ	0xFDF
   958                           fsr2h	equ	0xFDA
   959                           fsr2l	equ	0xFD9
   960                           status	equ	0xFD8
   961                           
   962 ;; *************** function _TM1640_Show_integer *****************
   963 ;; Defined at:
   964 ;;		line 55 in file "_01_USER/TM1640.c"
   965 ;; Parameters:    Size  Location     Type
   966 ;;  Numbers         2   31[COMRAM] unsigned int 
   967 ;; Auto vars:     Size  Location     Type
   968 ;;		None
   969 ;; Return value:  Size  Location     Type
   970 ;;		None               void
   971 ;; Registers used:
   972 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   973 ;; Tracked objects:
   974 ;;		On entry : 0/0
   975 ;;		On exit  : 0/0
   976 ;;		Unchanged: 0/0
   977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   978 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   981 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   982 ;;Total ram usage:        2 bytes
   983 ;; Hardware stack levels used:    1
   984 ;; Hardware stack levels required when called:    6
   985 ;; This function calls:
   986 ;;		_TM1640_Writer_Dates
   987 ;;		___lwdiv
   988 ;;		___lwmod
   989 ;; This function is called by:
   990 ;;		_Show_Result
   991 ;; This function uses a non-reentrant model
   992 ;;
   993                           
   994                           	psect	text4
   995  00143C                     __ptext4:
   996                           	opt stack 0
   997  00143C                     _TM1640_Show_integer:
   998                           	opt stack 23
   999                           
  1000                           ;TM1640.c: 58: TM1640_Writer_Dates(3,LED_Number[Numbers%10]); Numbers/=10;
  1001                           
  1002                           ;incstack = 0
  1003  00143C  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1004  001440  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1005  001444  0E00               	movlw	0
  1006  001446  6E1C               	movwf	___lwmod@divisor+1,c
  1007  001448  0E0A               	movlw	10
  1008  00144A  6E1B               	movwf	___lwmod@divisor,c
  1009  00144C  ECDC  F00D         	call	___lwmod	;wreg free
  1010  001450  0E01               	movlw	low _LED_Number
  1011  001452  2419               	addwf	?___lwmod,w,c
  1012  001454  6EF6               	movwf	tblptrl,c
  1013  001456  0E10               	movlw	high _LED_Number
  1014  001458  201A               	addwfc	?___lwmod+1,w,c
  1015  00145A  6EF7               	movwf	tblptrh,c
  1016  00145C                     	if	0	;There are less than 3 active tblptr bytes
  1017  00145C                     	endif
  1018  00145C  0008               	tblrd		*
  1019  00145E  CFF5 F01E          	movff	tablat,TM1640_Writer_Dates@Date
  1020  001462  0E03               	movlw	3
  1021  001464  EC8E  F00F         	call	_TM1640_Writer_Dates
  1022  001468  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1023  00146C  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1024  001470  0E00               	movlw	0
  1025  001472  6E1C               	movwf	___lwdiv@divisor+1,c
  1026  001474  0E0A               	movlw	10
  1027  001476  6E1B               	movwf	___lwdiv@divisor,c
  1028  001478  EC87  F00D         	call	___lwdiv	;wreg free
  1029  00147C  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1030  001480  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1031                           
  1032                           ;TM1640.c: 59: TM1640_Writer_Dates(2,LED_Number[Numbers%10]); Numbers/=10;
  1033  001484  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1034  001488  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1035  00148C  0E00               	movlw	0
  1036  00148E  6E1C               	movwf	___lwmod@divisor+1,c
  1037  001490  0E0A               	movlw	10
  1038  001492  6E1B               	movwf	___lwmod@divisor,c
  1039  001494  ECDC  F00D         	call	___lwmod	;wreg free
  1040  001498  0E01               	movlw	low _LED_Number
  1041  00149A  2419               	addwf	?___lwmod,w,c
  1042  00149C  6EF6               	movwf	tblptrl,c
  1043  00149E  0E10               	movlw	high _LED_Number
  1044  0014A0  201A               	addwfc	?___lwmod+1,w,c
  1045  0014A2  6EF7               	movwf	tblptrh,c
  1046  0014A4                     	if	0	;There are less than 3 active tblptr bytes
  1047  0014A4                     	endif
  1048  0014A4  0008               	tblrd		*
  1049  0014A6  CFF5 F01E          	movff	tablat,TM1640_Writer_Dates@Date
  1050  0014AA  0E02               	movlw	2
  1051  0014AC  EC8E  F00F         	call	_TM1640_Writer_Dates
  1052  0014B0  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1053  0014B4  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1054  0014B8  0E00               	movlw	0
  1055  0014BA  6E1C               	movwf	___lwdiv@divisor+1,c
  1056  0014BC  0E0A               	movlw	10
  1057  0014BE  6E1B               	movwf	___lwdiv@divisor,c
  1058  0014C0  EC87  F00D         	call	___lwdiv	;wreg free
  1059  0014C4  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1060  0014C8  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1061                           
  1062                           ;TM1640.c: 60: TM1640_Writer_Dates(1,LED_Number[Numbers%10]); Numbers/=10;
  1063  0014CC  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1064  0014D0  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1065  0014D4  0E00               	movlw	0
  1066  0014D6  6E1C               	movwf	___lwmod@divisor+1,c
  1067  0014D8  0E0A               	movlw	10
  1068  0014DA  6E1B               	movwf	___lwmod@divisor,c
  1069  0014DC  ECDC  F00D         	call	___lwmod	;wreg free
  1070  0014E0  0E01               	movlw	low _LED_Number
  1071  0014E2  2419               	addwf	?___lwmod,w,c
  1072  0014E4  6EF6               	movwf	tblptrl,c
  1073  0014E6  0E10               	movlw	high _LED_Number
  1074  0014E8  201A               	addwfc	?___lwmod+1,w,c
  1075  0014EA  6EF7               	movwf	tblptrh,c
  1076  0014EC                     	if	0	;There are less than 3 active tblptr bytes
  1077  0014EC                     	endif
  1078  0014EC  0008               	tblrd		*
  1079  0014EE  CFF5 F01E          	movff	tablat,TM1640_Writer_Dates@Date
  1080  0014F2  0E01               	movlw	1
  1081  0014F4  EC8E  F00F         	call	_TM1640_Writer_Dates
  1082  0014F8  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1083  0014FC  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1084  001500  0E00               	movlw	0
  1085  001502  6E1C               	movwf	___lwdiv@divisor+1,c
  1086  001504  0E0A               	movlw	10
  1087  001506  6E1B               	movwf	___lwdiv@divisor,c
  1088  001508  EC87  F00D         	call	___lwdiv	;wreg free
  1089  00150C  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1090  001510  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1091                           
  1092                           ;TM1640.c: 61: TM1640_Writer_Dates(0,LED_Number[Numbers%10]);
  1093  001514  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1094  001518  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1095  00151C  0E00               	movlw	0
  1096  00151E  6E1C               	movwf	___lwmod@divisor+1,c
  1097  001520  0E0A               	movlw	10
  1098  001522  6E1B               	movwf	___lwmod@divisor,c
  1099  001524  ECDC  F00D         	call	___lwmod	;wreg free
  1100  001528  0E01               	movlw	low _LED_Number
  1101  00152A  2419               	addwf	?___lwmod,w,c
  1102  00152C  6EF6               	movwf	tblptrl,c
  1103  00152E  0E10               	movlw	high _LED_Number
  1104  001530  201A               	addwfc	?___lwmod+1,w,c
  1105  001532  6EF7               	movwf	tblptrh,c
  1106  001534                     	if	0	;There are less than 3 active tblptr bytes
  1107  001534                     	endif
  1108  001534  0008               	tblrd		*
  1109  001536  CFF5 F01E          	movff	tablat,TM1640_Writer_Dates@Date
  1110  00153A  0E00               	movlw	0
  1111  00153C  EC8E  F00F         	call	_TM1640_Writer_Dates
  1112  001540  0012               	return		;funcret
  1113  001542                     __end_of_TM1640_Show_integer:
  1114                           	opt stack 0
  1115                           tblptru	equ	0xFF8
  1116                           tblptrh	equ	0xFF7
  1117                           tblptrl	equ	0xFF6
  1118                           tablat	equ	0xFF5
  1119                           prodh	equ	0xFF4
  1120                           prodl	equ	0xFF3
  1121                           intcon	equ	0xFF2
  1122                           postinc0	equ	0xFEE
  1123                           wreg	equ	0xFE8
  1124                           indf2	equ	0xFDF
  1125                           fsr2h	equ	0xFDA
  1126                           fsr2l	equ	0xFD9
  1127                           status	equ	0xFD8
  1128                           
  1129 ;; *************** function ___lwmod *****************
  1130 ;; Defined at:
  1131 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;  dividend        2   24[COMRAM] unsigned int 
  1134 ;;  divisor         2   26[COMRAM] unsigned int 
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;  counter         1   28[COMRAM] unsigned char 
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  2   24[COMRAM] unsigned int 
  1139 ;; Registers used:
  1140 ;;		wreg, status,2, status,0
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1146 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1147 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1149 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1150 ;;Total ram usage:        5 bytes
  1151 ;; Hardware stack levels used:    1
  1152 ;; Hardware stack levels required when called:    3
  1153 ;; This function calls:
  1154 ;;		Nothing
  1155 ;; This function is called by:
  1156 ;;		_TM1640_Show_integer
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160                           	psect	text5
  1161  001BB8                     __ptext5:
  1162                           	opt stack 0
  1163  001BB8                     ___lwmod:
  1164                           	opt stack 25
  1165                           
  1166                           ;incstack = 0
  1167  001BB8  501B               	movf	___lwmod@divisor,w,c
  1168  001BBA  101C               	iorwf	___lwmod@divisor+1,w,c
  1169  001BBC  B4D8               	btfsc	status,2,c
  1170  001BBE  D01D               	goto	l1016
  1171  001BC0  0E01               	movlw	1
  1172  001BC2  6E1D               	movwf	___lwmod@counter,c
  1173  001BC4  D005               	goto	l2949
  1174  001BC6                     l2947:
  1175  001BC6  90D8               	bcf	status,0,c
  1176  001BC8  361B               	rlcf	___lwmod@divisor,f,c
  1177  001BCA  361C               	rlcf	___lwmod@divisor+1,f,c
  1178  001BCC  2A1D               	incf	___lwmod@counter,f,c
  1179  001BCE  D000               	goto	l2949
  1180  001BD0                     l2949:
  1181  001BD0  BE1C               	btfsc	___lwmod@divisor+1,7,c
  1182  001BD2  D002               	goto	l2951
  1183  001BD4  D7F8               	goto	l2947
  1184  001BD6  D000               	goto	l2951
  1185  001BD8                     l2951:
  1186  001BD8  501B               	movf	___lwmod@divisor,w,c
  1187  001BDA  5C19               	subwf	___lwmod@dividend,w,c
  1188  001BDC  501C               	movf	___lwmod@divisor+1,w,c
  1189  001BDE  581A               	subwfb	___lwmod@dividend+1,w,c
  1190  001BE0  A0D8               	btfss	status,0,c
  1191  001BE2  D005               	goto	l2955
  1192  001BE4  501B               	movf	___lwmod@divisor,w,c
  1193  001BE6  5E19               	subwf	___lwmod@dividend,f,c
  1194  001BE8  501C               	movf	___lwmod@divisor+1,w,c
  1195  001BEA  5A1A               	subwfb	___lwmod@dividend+1,f,c
  1196  001BEC  D000               	goto	l2955
  1197  001BEE                     l2955:
  1198  001BEE  90D8               	bcf	status,0,c
  1199  001BF0  321C               	rrcf	___lwmod@divisor+1,f,c
  1200  001BF2  321B               	rrcf	___lwmod@divisor,f,c
  1201  001BF4  2E1D               	decfsz	___lwmod@counter,f,c
  1202  001BF6  D7F0               	goto	l2951
  1203  001BF8  D000               	goto	l1016
  1204  001BFA                     l1016:
  1205  001BFA  C019  F019         	movff	___lwmod@dividend,?___lwmod
  1206  001BFE  C01A  F01A         	movff	___lwmod@dividend+1,?___lwmod+1
  1207  001C02  0012               	return		;funcret
  1208  001C04                     __end_of___lwmod:
  1209                           	opt stack 0
  1210                           tblptru	equ	0xFF8
  1211                           tblptrh	equ	0xFF7
  1212                           tblptrl	equ	0xFF6
  1213                           tablat	equ	0xFF5
  1214                           prodh	equ	0xFF4
  1215                           prodl	equ	0xFF3
  1216                           intcon	equ	0xFF2
  1217                           postinc0	equ	0xFEE
  1218                           wreg	equ	0xFE8
  1219                           indf2	equ	0xFDF
  1220                           fsr2h	equ	0xFDA
  1221                           fsr2l	equ	0xFD9
  1222                           status	equ	0xFD8
  1223                           
  1224 ;; *************** function ___lwdiv *****************
  1225 ;; Defined at:
  1226 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  1227 ;; Parameters:    Size  Location     Type
  1228 ;;  dividend        2   24[COMRAM] unsigned int 
  1229 ;;  divisor         2   26[COMRAM] unsigned int 
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;  quotient        2   29[COMRAM] unsigned int 
  1232 ;;  counter         1   28[COMRAM] unsigned char 
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  2   24[COMRAM] unsigned int 
  1235 ;; Registers used:
  1236 ;;		wreg, status,2, status,0
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1242 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1243 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1245 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1246 ;;Total ram usage:        7 bytes
  1247 ;; Hardware stack levels used:    1
  1248 ;; Hardware stack levels required when called:    3
  1249 ;; This function calls:
  1250 ;;		Nothing
  1251 ;; This function is called by:
  1252 ;;		_TM1640_Show_integer
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           	psect	text6
  1257  001B0E                     __ptext6:
  1258                           	opt stack 0
  1259  001B0E                     ___lwdiv:
  1260                           	opt stack 25
  1261                           
  1262                           ;incstack = 0
  1263  001B0E  0E00               	movlw	0
  1264  001B10  6E1F               	movwf	___lwdiv@quotient+1,c
  1265  001B12  0E00               	movlw	0
  1266  001B14  6E1E               	movwf	___lwdiv@quotient,c
  1267  001B16  501B               	movf	___lwdiv@divisor,w,c
  1268  001B18  101C               	iorwf	___lwdiv@divisor+1,w,c
  1269  001B1A  B4D8               	btfsc	status,2,c
  1270  001B1C  D021               	goto	l1006
  1271  001B1E  0E01               	movlw	1
  1272  001B20  6E1D               	movwf	___lwdiv@counter,c
  1273  001B22  D005               	goto	l2929
  1274  001B24                     l2927:
  1275  001B24  90D8               	bcf	status,0,c
  1276  001B26  361B               	rlcf	___lwdiv@divisor,f,c
  1277  001B28  361C               	rlcf	___lwdiv@divisor+1,f,c
  1278  001B2A  2A1D               	incf	___lwdiv@counter,f,c
  1279  001B2C  D000               	goto	l2929
  1280  001B2E                     l2929:
  1281  001B2E  BE1C               	btfsc	___lwdiv@divisor+1,7,c
  1282  001B30  D002               	goto	l2931
  1283  001B32  D7F8               	goto	l2927
  1284  001B34  D000               	goto	l2931
  1285  001B36                     l2931:
  1286  001B36  90D8               	bcf	status,0,c
  1287  001B38  361E               	rlcf	___lwdiv@quotient,f,c
  1288  001B3A  361F               	rlcf	___lwdiv@quotient+1,f,c
  1289  001B3C  501B               	movf	___lwdiv@divisor,w,c
  1290  001B3E  5C19               	subwf	___lwdiv@dividend,w,c
  1291  001B40  501C               	movf	___lwdiv@divisor+1,w,c
  1292  001B42  581A               	subwfb	___lwdiv@dividend+1,w,c
  1293  001B44  A0D8               	btfss	status,0,c
  1294  001B46  D006               	goto	l2939
  1295  001B48  501B               	movf	___lwdiv@divisor,w,c
  1296  001B4A  5E19               	subwf	___lwdiv@dividend,f,c
  1297  001B4C  501C               	movf	___lwdiv@divisor+1,w,c
  1298  001B4E  5A1A               	subwfb	___lwdiv@dividend+1,f,c
  1299  001B50  801E               	bsf	___lwdiv@quotient,0,c
  1300  001B52  D000               	goto	l2939
  1301  001B54                     l2939:
  1302  001B54  90D8               	bcf	status,0,c
  1303  001B56  321C               	rrcf	___lwdiv@divisor+1,f,c
  1304  001B58  321B               	rrcf	___lwdiv@divisor,f,c
  1305  001B5A  2E1D               	decfsz	___lwdiv@counter,f,c
  1306  001B5C  D7EC               	goto	l2931
  1307  001B5E  D000               	goto	l1006
  1308  001B60                     l1006:
  1309  001B60  C01E  F019         	movff	___lwdiv@quotient,?___lwdiv
  1310  001B64  C01F  F01A         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1311  001B68  0012               	return		;funcret
  1312  001B6A                     __end_of___lwdiv:
  1313                           	opt stack 0
  1314                           tblptru	equ	0xFF8
  1315                           tblptrh	equ	0xFF7
  1316                           tblptrl	equ	0xFF6
  1317                           tablat	equ	0xFF5
  1318                           prodh	equ	0xFF4
  1319                           prodl	equ	0xFF3
  1320                           intcon	equ	0xFF2
  1321                           postinc0	equ	0xFEE
  1322                           wreg	equ	0xFE8
  1323                           indf2	equ	0xFDF
  1324                           fsr2h	equ	0xFDA
  1325                           fsr2l	equ	0xFD9
  1326                           status	equ	0xFD8
  1327                           
  1328 ;; *************** function _TM1640_Writer_Dates *****************
  1329 ;; Defined at:
  1330 ;;		line 66 in file "_01_USER/TM1640.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;  Addr            1    wreg     unsigned char 
  1333 ;;  Date            1   29[COMRAM] unsigned char 
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;  Addr            1   30[COMRAM] unsigned char 
  1336 ;; Return value:  Size  Location     Type
  1337 ;;		None               void
  1338 ;; Registers used:
  1339 ;;		wreg, status,2, status,0, cstack
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1345 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1346 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1348 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1349 ;;Total ram usage:        2 bytes
  1350 ;; Hardware stack levels used:    1
  1351 ;; Hardware stack levels required when called:    5
  1352 ;; This function calls:
  1353 ;;		_TM1640_Start
  1354 ;;		_TM1640_Stop
  1355 ;;		_TM1640_Writer_Byte
  1356 ;; This function is called by:
  1357 ;;		_TM1640_Show_integer
  1358 ;;		_TM1640_Show_Decimal
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           	psect	text7
  1363  001F1C                     __ptext7:
  1364                           	opt stack 0
  1365  001F1C                     _TM1640_Writer_Dates:
  1366                           	opt stack 23
  1367                           
  1368                           ;incstack = 0
  1369                           ;TM1640_Writer_Dates@Addr stored from wreg
  1370  001F1C  6E1F               	movwf	TM1640_Writer_Dates@Addr,c
  1371                           
  1372                           ;TM1640.c: 68: if((Addr >= 0) && (Addr <= 3))
  1373  001F1E  0E04               	movlw	4
  1374  001F20  601F               	cpfslt	TM1640_Writer_Dates@Addr,c
  1375  001F22  0012               	return	
  1376                           
  1377                           ;TM1640.c: 69: {
  1378                           ;TM1640.c: 70: TM1640_Start();
  1379  001F24  EC7C  F00F         	call	_TM1640_Start	;wreg free
  1380                           
  1381                           ;TM1640.c: 71: TM1640_Writer_Byte(0xC0 + Addr);
  1382  001F28  501F               	movf	TM1640_Writer_Dates@Addr,w,c
  1383  001F2A  0FC0               	addlw	192
  1384  001F2C  EC4D  F00E         	call	_TM1640_Writer_Byte
  1385                           
  1386                           ;TM1640.c: 72: TM1640_Writer_Byte(Date);
  1387  001F30  501E               	movf	TM1640_Writer_Dates@Date,w,c
  1388  001F32  EC4D  F00E         	call	_TM1640_Writer_Byte
  1389                           
  1390                           ;TM1640.c: 73: TM1640_Stop();
  1391  001F36  EC6A  F00F         	call	_TM1640_Stop	;wreg free
  1392  001F3A  0012               	return	
  1393  001F3C  0012               	return		;funcret
  1394  001F3E                     __end_of_TM1640_Writer_Dates:
  1395                           	opt stack 0
  1396                           tblptru	equ	0xFF8
  1397                           tblptrh	equ	0xFF7
  1398                           tblptrl	equ	0xFF6
  1399                           tablat	equ	0xFF5
  1400                           prodh	equ	0xFF4
  1401                           prodl	equ	0xFF3
  1402                           intcon	equ	0xFF2
  1403                           postinc0	equ	0xFEE
  1404                           wreg	equ	0xFE8
  1405                           indf2	equ	0xFDF
  1406                           fsr2h	equ	0xFDA
  1407                           fsr2l	equ	0xFD9
  1408                           status	equ	0xFD8
  1409                           
  1410 ;; *************** function _Run *****************
  1411 ;; Defined at:
  1412 ;;		line 108 in file "_01_USER/Run.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;		None
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;  i               2   15[BANK0 ] int 
  1417 ;; Return value:  Size  Location     Type
  1418 ;;		None               void
  1419 ;; Registers used:
  1420 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1427 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1429 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1430 ;;Total ram usage:        2 bytes
  1431 ;; Hardware stack levels used:    1
  1432 ;; Hardware stack levels required when called:    6
  1433 ;; This function calls:
  1434 ;;		_Get_ADC6
  1435 ;;		_RS485_Receive_Date
  1436 ;;		_RS485_Send_Date
  1437 ;; This function is called by:
  1438 ;;		_main
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442                           	psect	text8
  1443  00170A                     __ptext8:
  1444                           	opt stack 0
  1445  00170A                     _Run:
  1446                           	opt stack 24
  1447                           
  1448                           ;Run.c: 110: int i;
  1449                           ;Run.c: 112: if( Handle_Switch.ADC6 ) Get_ADC6();
  1450                           
  1451                           ;incstack = 0
  1452  00170A  5034               	movf	_Handle_Switch+1,w,c
  1453  00170C  B4D8               	btfsc	status,2,c
  1454  00170E  D003               	goto	l3125
  1455  001710  EC1E  F00D         	call	_Get_ADC6	;wreg free
  1456  001714  D000               	goto	l3125
  1457  001716                     l3125:
  1458                           
  1459                           ;Run.c: 115: if ( Handle_Switch.Usart_OneDate )
  1460  001716  5035               	movf	_Handle_Switch+2,w,c
  1461  001718  B4D8               	btfsc	status,2,c
  1462  00171A  D00B               	goto	l3131
  1463                           
  1464                           ;Run.c: 116: {
  1465                           ;Run.c: 117: Handle_Switch.Usart_OneDate = 0;
  1466  00171C  0E00               	movlw	0
  1467  00171E  6E35               	movwf	_Handle_Switch+2,c
  1468                           
  1469                           ;Run.c: 118: RS485_Send_Date(RS485_SendBuff,10);
  1470  001720  0E8E               	movlw	low _RS485_SendBuff
  1471  001722  6E2A               	movwf	RS485_Send_Date@date_dress,c
  1472  001724  0E00               	movlw	high _RS485_SendBuff
  1473  001726  6E2B               	movwf	RS485_Send_Date@date_dress+1,c
  1474  001728  0E0A               	movlw	10
  1475  00172A  6E2C               	movwf	RS485_Send_Date@date_lenth,c
  1476  00172C  EC20  F00C         	call	_RS485_Send_Date	;wreg free
  1477  001730  D000               	goto	l3131
  1478  001732                     l3131:
  1479                           
  1480                           ;Run.c: 119: }
  1481                           ;Run.c: 120: RS485_Receive_Date(ReceiveBuff);
  1482  001732  0E98               	movlw	low _ReceiveBuff
  1483  001734  6E2A               	movwf	RS485_Receive_Date@DataBuff,c
  1484  001736  0E00               	movlw	high _ReceiveBuff
  1485  001738  6E2B               	movwf	RS485_Receive_Date@DataBuff+1,c
  1486  00173A  EC54  F00D         	call	_RS485_Receive_Date	;wreg free
  1487                           
  1488                           ;Run.c: 122: if(Receive_Flag)
  1489  00173E  5046               	movf	_Receive_Flag,w,c
  1490  001740  B4D8               	btfsc	status,2,c
  1491  001742  0012               	return	
  1492                           
  1493                           ;Run.c: 123: {
  1494                           ;Run.c: 124: if( ReceiveBuff[1] == g_Addr )
  1495  001744  5047               	movf	_g_Addr,w,c
  1496  001746  0100               	movlb	0	; () banked
  1497  001748  1999               	xorwf	(_ReceiveBuff+1)& (0+255),w,b
  1498  00174A  A4D8               	btfss	status,2,c
  1499  00174C  0012               	return	
  1500                           
  1501                           ; BSR set to: 0
  1502                           ;Run.c: 125: {
  1503                           ;Run.c: 126: Receive_Flag = 0;
  1504  00174E  0E00               	movlw	0
  1505  001750  6E46               	movwf	_Receive_Flag,c
  1506                           
  1507                           ;Run.c: 127: for(i = 0;i < 10;i++)
  1508  001752  0E00               	movlw	0
  1509  001754  0100               	movlb	0	; () banked
  1510  001756  6FB2               	movwf	(Run@i+1)& (0+255),b
  1511  001758  0E00               	movlw	0
  1512  00175A  6FB1               	movwf	Run@i& (0+255),b
  1513  00175C                     l3139:
  1514                           
  1515                           ; BSR set to: 0
  1516  00175C  0100               	movlb	0	; () banked
  1517  00175E  BFB2               	btfsc	(Run@i+1)& (0+255),7,b
  1518  001760  D00A               	goto	l3143
  1519  001762  0100               	movlb	0	; () banked
  1520  001764  51B2               	movf	(Run@i+1)& (0+255),w,b
  1521  001766  E11E               	bnz	l411
  1522  001768  0E0A               	movlw	10
  1523  00176A  0100               	movlb	0	; () banked
  1524  00176C  5DB1               	subwf	Run@i& (0+255),w,b
  1525  00176E  B0D8               	btfsc	status,0,c
  1526  001770  0012               	return	
  1527  001772  D001               	goto	l3143
  1528                           
  1529                           ; BSR set to: 0
  1530  001774  0012               	return	
  1531  001776                     l3143:
  1532                           
  1533                           ; BSR set to: 0
  1534                           ;Run.c: 128: RS485_SendBuff[i] = ReceiveBuff[i];
  1535  001776  0E98               	movlw	low _ReceiveBuff
  1536  001778  0100               	movlb	0	; () banked
  1537  00177A  25B1               	addwf	Run@i& (0+255),w,b
  1538  00177C  6ED9               	movwf	fsr2l,c
  1539  00177E  0E00               	movlw	high _ReceiveBuff
  1540  001780  0100               	movlb	0	; () banked
  1541  001782  21B2               	addwfc	(Run@i+1)& (0+255),w,b
  1542  001784  6EDA               	movwf	fsr2h,c
  1543  001786  0E8E               	movlw	low _RS485_SendBuff
  1544  001788  0100               	movlb	0	; () banked
  1545  00178A  25B1               	addwf	Run@i& (0+255),w,b
  1546  00178C  6EE1               	movwf	fsr1l,c
  1547  00178E  0E00               	movlw	high _RS485_SendBuff
  1548  001790  0100               	movlb	0	; () banked
  1549  001792  21B2               	addwfc	(Run@i+1)& (0+255),w,b
  1550  001794  6EE2               	movwf	fsr1h,c
  1551  001796  CFDF FFE7          	movff	indf2,indf1
  1552                           
  1553                           ; BSR set to: 0
  1554  00179A  0100               	movlb	0	; () banked
  1555  00179C  4BB1               	infsnz	Run@i& (0+255),f,b
  1556  00179E  2BB2               	incf	(Run@i+1)& (0+255),f,b
  1557  0017A0  D7DD               	goto	l3139
  1558                           
  1559                           ; BSR set to: 0
  1560                           
  1561                           ; BSR set to: 0
  1562                           
  1563                           ; BSR set to: 0
  1564  0017A2  0012               	return	
  1565  0017A4                     l411:
  1566  0017A4  0012               	return		;funcret
  1567  0017A6                     __end_of_Run:
  1568                           	opt stack 0
  1569                           tblptru	equ	0xFF8
  1570                           tblptrh	equ	0xFF7
  1571                           tblptrl	equ	0xFF6
  1572                           tablat	equ	0xFF5
  1573                           prodh	equ	0xFF4
  1574                           prodl	equ	0xFF3
  1575                           intcon	equ	0xFF2
  1576                           postinc0	equ	0xFEE
  1577                           wreg	equ	0xFE8
  1578                           indf1	equ	0xFE7
  1579                           fsr1h	equ	0xFE2
  1580                           fsr1l	equ	0xFE1
  1581                           indf2	equ	0xFDF
  1582                           fsr2h	equ	0xFDA
  1583                           fsr2l	equ	0xFD9
  1584                           status	equ	0xFD8
  1585                           
  1586 ;; *************** function _RS485_Send_Date *****************
  1587 ;; Defined at:
  1588 ;;		line 75 in file "_01_USER/My_USART.c"
  1589 ;; Parameters:    Size  Location     Type
  1590 ;;  date_dress      2   41[COMRAM] PTR unsigned char 
  1591 ;;		 -> RS485_SendBuff(10), 
  1592 ;;  date_lenth      1   43[COMRAM] unsigned char 
  1593 ;; Auto vars:     Size  Location     Type
  1594 ;;  i               2   44[COMRAM] unsigned int 
  1595 ;; Return value:  Size  Location     Type
  1596 ;;		None               void
  1597 ;; Registers used:
  1598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1599 ;; Tracked objects:
  1600 ;;		On entry : 0/0
  1601 ;;		On exit  : 0/0
  1602 ;;		Unchanged: 0/0
  1603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1604 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1605 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1607 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1608 ;;Total ram usage:        5 bytes
  1609 ;; Hardware stack levels used:    1
  1610 ;; Hardware stack levels required when called:    5
  1611 ;; This function calls:
  1612 ;;		_CRC_Verify
  1613 ;; This function is called by:
  1614 ;;		_Run
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           
  1618                           	psect	text9
  1619  001840                     __ptext9:
  1620                           	opt stack 0
  1621  001840                     _RS485_Send_Date:
  1622                           	opt stack 24
  1623                           
  1624                           ;My_USART.c: 77: unsigned int i;
  1625                           ;My_USART.c: 78: while( (!TXSTA2bits.TRMT));
  1626                           
  1627                           ;incstack = 0
  1628  001840  D000               	goto	l156
  1629  001842                     l156:
  1630  001842  010F               	movlb	15	; () banked
  1631  001844  A321               	btfss	33,1,b	;volatile
  1632  001846  D7FD               	goto	l156
  1633                           
  1634                           ; BSR set to: 15
  1635                           ;My_USART.c: 79: RG3 = 0;
  1636  001848  9686               	bcf	3974,3,c	;volatile
  1637                           
  1638                           ; BSR set to: 15
  1639                           ;My_USART.c: 82: RS485_SendBuff[0] = 0xaa;
  1640  00184A  0EAA               	movlw	170
  1641  00184C  0100               	movlb	0	; () banked
  1642  00184E  6F8E               	movwf	_RS485_SendBuff& (0+255),b
  1643                           
  1644                           ;My_USART.c: 85: for(i = 0; i < 10 -2;i++)
  1645  001850  0E00               	movlw	0
  1646  001852  6E2E               	movwf	RS485_Send_Date@i+1,c
  1647  001854  0E00               	movlw	0
  1648  001856  6E2D               	movwf	RS485_Send_Date@i,c
  1649  001858                     l3007:
  1650                           
  1651                           ; BSR set to: 0
  1652  001858  502E               	movf	RS485_Send_Date@i+1,w,c
  1653  00185A  E119               	bnz	l3017
  1654  00185C  0E08               	movlw	8
  1655  00185E  5C2D               	subwf	RS485_Send_Date@i,w,c
  1656  001860  B0D8               	btfsc	status,0,c
  1657  001862  D015               	goto	l3017
  1658  001864  D001               	goto	l3011
  1659                           
  1660                           ; BSR set to: 0
  1661  001866  D013               	goto	l3017
  1662  001868                     l3011:
  1663                           
  1664                           ;My_USART.c: 86: {
  1665                           ;My_USART.c: 87: TXREG2 = date_dress[date_lenth];
  1666  001868  502C               	movf	RS485_Send_Date@date_lenth,w,c
  1667  00186A  0D01               	mullw	1
  1668  00186C  50F3               	movf	prodl,w,c
  1669  00186E  242A               	addwf	RS485_Send_Date@date_dress,w,c
  1670  001870  6ED9               	movwf	fsr2l,c
  1671  001872  50F4               	movf	prodh,w,c
  1672  001874  202B               	addwfc	RS485_Send_Date@date_dress+1,w,c
  1673  001876  6EDA               	movwf	fsr2h,c
  1674  001878  50DF               	movf	indf2,w,c
  1675  00187A  010F               	movlb	15	; () banked
  1676  00187C  6F1C               	movwf	28,b	;volatile
  1677                           
  1678                           ;My_USART.c: 88: while( (!TXSTA2bits.TRMT));
  1679  00187E  D000               	goto	l161
  1680  001880                     l161:
  1681                           
  1682                           ; BSR set to: 15
  1683  001880  010F               	movlb	15	; () banked
  1684  001882  A321               	btfss	33,1,b	;volatile
  1685  001884  D7FD               	goto	l161
  1686                           
  1687                           ; BSR set to: 15
  1688                           
  1689                           ; BSR set to: 15
  1690  001886  4A2D               	infsnz	RS485_Send_Date@i,f,c
  1691  001888  2A2E               	incf	RS485_Send_Date@i+1,f,c
  1692  00188A  D7E6               	goto	l3007
  1693                           
  1694                           ; BSR set to: 15
  1695  00188C  D000               	goto	l3017
  1696  00188E                     l3017:
  1697                           
  1698                           ;My_USART.c: 89: }
  1699                           ;My_USART.c: 92: date_dress[10 - 1] = 0xaa;
  1700  00188E  EE20 F009          	lfsr	2,9
  1701  001892  502A               	movf	RS485_Send_Date@date_dress,w,c
  1702  001894  26D9               	addwf	fsr2l,f,c
  1703  001896  502B               	movf	RS485_Send_Date@date_dress+1,w,c
  1704  001898  22DA               	addwfc	fsr2h,f,c
  1705  00189A  0EAA               	movlw	170
  1706  00189C  6EDF               	movwf	indf2,c
  1707                           
  1708                           ;My_USART.c: 93: CRC_Verify(date_dress,10 - 2,&RS485_SendBuff[8],&RS485_SendBuff[9]);
  1709  00189E  C02A  F01F         	movff	RS485_Send_Date@date_dress,CRC_Verify@_pucBuf
  1710  0018A2  C02B  F020         	movff	RS485_Send_Date@date_dress+1,CRC_Verify@_pucBuf+1
  1711  0018A6  0E08               	movlw	8
  1712  0018A8  6E21               	movwf	CRC_Verify@_usLen,c
  1713  0018AA  0E96               	movlw	low (_RS485_SendBuff+8)
  1714  0018AC  6E22               	movwf	CRC_Verify@_ucHByte,c
  1715  0018AE  0E00               	movlw	high (_RS485_SendBuff+8)
  1716  0018B0  6E23               	movwf	CRC_Verify@_ucHByte+1,c
  1717  0018B2  0E97               	movlw	low (_RS485_SendBuff+9)
  1718  0018B4  6E24               	movwf	CRC_Verify@_ucLByte,c
  1719  0018B6  0E00               	movlw	high (_RS485_SendBuff+9)
  1720  0018B8  6E25               	movwf	CRC_Verify@_ucLByte+1,c
  1721  0018BA  ECE7  F00C         	call	_CRC_Verify	;wreg free
  1722                           
  1723                           ;My_USART.c: 95: TXREG2 = RS485_SendBuff[8];
  1724  0018BE  C096  FF1C         	movff	_RS485_SendBuff+8,3868	;volatile
  1725                           
  1726                           ;My_USART.c: 96: while( (!TXSTA2bits.TRMT));
  1727  0018C2  D000               	goto	l164
  1728  0018C4                     l164:
  1729  0018C4  010F               	movlb	15	; () banked
  1730  0018C6  A321               	btfss	33,1,b	;volatile
  1731  0018C8  D7FD               	goto	l164
  1732                           
  1733                           ; BSR set to: 15
  1734                           ;My_USART.c: 97: TXREG2 = RS485_SendBuff[9];
  1735  0018CA  C097  FF1C         	movff	_RS485_SendBuff+9,3868	;volatile
  1736                           
  1737                           ;My_USART.c: 98: while( (!TXSTA2bits.TRMT));
  1738  0018CE  D000               	goto	l167
  1739  0018D0                     l167:
  1740                           
  1741                           ; BSR set to: 15
  1742  0018D0  010F               	movlb	15	; () banked
  1743  0018D2  A321               	btfss	33,1,b	;volatile
  1744  0018D4  D7FD               	goto	l167
  1745                           
  1746                           ; BSR set to: 15
  1747                           ;My_USART.c: 100: RG3 = 1;
  1748  0018D6  8686               	bsf	3974,3,c	;volatile
  1749                           
  1750                           ; BSR set to: 15
  1751  0018D8  0012               	return		;funcret
  1752  0018DA                     __end_of_RS485_Send_Date:
  1753                           	opt stack 0
  1754                           tblptru	equ	0xFF8
  1755                           tblptrh	equ	0xFF7
  1756                           tblptrl	equ	0xFF6
  1757                           tablat	equ	0xFF5
  1758                           prodh	equ	0xFF4
  1759                           prodl	equ	0xFF3
  1760                           intcon	equ	0xFF2
  1761                           postinc0	equ	0xFEE
  1762                           wreg	equ	0xFE8
  1763                           indf1	equ	0xFE7
  1764                           fsr1h	equ	0xFE2
  1765                           fsr1l	equ	0xFE1
  1766                           indf2	equ	0xFDF
  1767                           fsr2h	equ	0xFDA
  1768                           fsr2l	equ	0xFD9
  1769                           status	equ	0xFD8
  1770                           
  1771 ;; *************** function _RS485_Receive_Date *****************
  1772 ;; Defined at:
  1773 ;;		line 112 in file "_01_USER/My_USART.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;  DataBuff        2   41[COMRAM] PTR unsigned char 
  1776 ;;		 -> ReceiveBuff(10), 
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;  n               2   45[COMRAM] unsigned int 
  1779 ;;  temp            2    0        unsigned int 
  1780 ;;  _ucLByte        1   44[COMRAM] unsigned char 
  1781 ;;  _ucHByte        1   43[COMRAM] unsigned char 
  1782 ;; Return value:  Size  Location     Type
  1783 ;;                  1    wreg      unsigned char 
  1784 ;; Registers used:
  1785 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1791 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1792 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1794 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1795 ;;Total ram usage:        6 bytes
  1796 ;; Hardware stack levels used:    1
  1797 ;; Hardware stack levels required when called:    5
  1798 ;; This function calls:
  1799 ;;		_CRC_Verify
  1800 ;; This function is called by:
  1801 ;;		_Run
  1802 ;; This function uses a non-reentrant model
  1803 ;;
  1804                           
  1805                           	psect	text10
  1806  001AA8                     __ptext10:
  1807                           	opt stack 0
  1808  001AA8                     _RS485_Receive_Date:
  1809                           	opt stack 24
  1810                           
  1811                           ;My_USART.c: 114: unsigned n = 10 - 1;
  1812                           
  1813                           ; BSR set to: 15
  1814                           ;incstack = 0
  1815  001AA8  0E00               	movlw	0
  1816  001AAA  6E2F               	movwf	RS485_Receive_Date@n+1,c
  1817  001AAC  0E09               	movlw	9
  1818  001AAE  6E2E               	movwf	RS485_Receive_Date@n,c
  1819                           
  1820                           ;My_USART.c: 115: unsigned int temp;
  1821                           ;My_USART.c: 116: unsigned char _ucHByte;
  1822                           ;My_USART.c: 117: unsigned char _ucLByte;
  1823                           ;My_USART.c: 118: if(RS485_Receive_Flag)
  1824  001AB0  5045               	movf	_RS485_Receive_Flag,w,c
  1825  001AB2  B4D8               	btfsc	status,2,c
  1826  001AB4  0012               	return	
  1827                           
  1828                           ;My_USART.c: 119: {
  1829                           ;My_USART.c: 120: RS485_Receive_Flag = 0;
  1830  001AB6  0E00               	movlw	0
  1831  001AB8  6E45               	movwf	_RS485_Receive_Flag,c
  1832                           
  1833                           ;My_USART.c: 121: while ( n --)
  1834  001ABA  D00F               	goto	l3029
  1835  001ABC                     l3027:
  1836                           
  1837                           ;My_USART.c: 122: DataBuff[n] = RS485_ReceiveBuff[n];
  1838  001ABC  0E60               	movlw	low _RS485_ReceiveBuff
  1839  001ABE  242E               	addwf	RS485_Receive_Date@n,w,c
  1840  001AC0  6ED9               	movwf	fsr2l,c
  1841  001AC2  0E00               	movlw	high _RS485_ReceiveBuff
  1842  001AC4  202F               	addwfc	RS485_Receive_Date@n+1,w,c
  1843  001AC6  6EDA               	movwf	fsr2h,c
  1844  001AC8  502E               	movf	RS485_Receive_Date@n,w,c
  1845  001ACA  242A               	addwf	RS485_Receive_Date@DataBuff,w,c
  1846  001ACC  6EE1               	movwf	fsr1l,c
  1847  001ACE  502F               	movf	RS485_Receive_Date@n+1,w,c
  1848  001AD0  202B               	addwfc	RS485_Receive_Date@DataBuff+1,w,c
  1849  001AD2  6EE2               	movwf	fsr1h,c
  1850  001AD4  CFDF FFE7          	movff	indf2,indf1
  1851  001AD8  D000               	goto	l3029
  1852  001ADA                     l3029:
  1853  001ADA  062E               	decf	RS485_Receive_Date@n,f,c
  1854  001ADC  A0D8               	btfss	status,0,c
  1855  001ADE  062F               	decf	RS485_Receive_Date@n+1,f,c
  1856  001AE0  282E               	incf	RS485_Receive_Date@n,w,c
  1857  001AE2  E1EC               	bnz	l3027
  1858  001AE4  282F               	incf	RS485_Receive_Date@n+1,w,c
  1859  001AE6  A4D8               	btfss	status,2,c
  1860  001AE8  D7E9               	goto	l3027
  1861                           
  1862                           ;My_USART.c: 123: CRC_Verify(DataBuff,10-2,&_ucHByte,&_ucLByte);
  1863  001AEA  C02A  F01F         	movff	RS485_Receive_Date@DataBuff,CRC_Verify@_pucBuf
  1864  001AEE  C02B  F020         	movff	RS485_Receive_Date@DataBuff+1,CRC_Verify@_pucBuf+1
  1865  001AF2  0E08               	movlw	8
  1866  001AF4  6E21               	movwf	CRC_Verify@_usLen,c
  1867  001AF6  0E2C               	movlw	low RS485_Receive_Date@_ucHByte
  1868  001AF8  6E22               	movwf	CRC_Verify@_ucHByte,c
  1869  001AFA  0E00               	movlw	high RS485_Receive_Date@_ucHByte
  1870  001AFC  6E23               	movwf	CRC_Verify@_ucHByte+1,c
  1871  001AFE  0E2D               	movlw	low RS485_Receive_Date@_ucLByte
  1872  001B00  6E24               	movwf	CRC_Verify@_ucLByte,c
  1873  001B02  0E00               	movlw	high RS485_Receive_Date@_ucLByte
  1874  001B04  6E25               	movwf	CRC_Verify@_ucLByte+1,c
  1875  001B06  ECE7  F00C         	call	_CRC_Verify	;wreg free
  1876                           
  1877                           ;My_USART.c: 131: else return 0;
  1878                           ;	Return value of _RS485_Receive_Date is never used
  1879                           
  1880                           ;My_USART.c: 129: }
  1881                           ;My_USART.c: 130: }
  1882                           
  1883                           ;My_USART.c: 126: {
  1884                           ;My_USART.c: 128: return 1;
  1885                           ;	Return value of _RS485_Receive_Date is never used
  1886  001B0A  0012               	return	
  1887  001B0C  0012               	return		;funcret
  1888  001B0E                     __end_of_RS485_Receive_Date:
  1889                           	opt stack 0
  1890                           tblptru	equ	0xFF8
  1891                           tblptrh	equ	0xFF7
  1892                           tblptrl	equ	0xFF6
  1893                           tablat	equ	0xFF5
  1894                           prodh	equ	0xFF4
  1895                           prodl	equ	0xFF3
  1896                           intcon	equ	0xFF2
  1897                           postinc0	equ	0xFEE
  1898                           wreg	equ	0xFE8
  1899                           indf1	equ	0xFE7
  1900                           fsr1h	equ	0xFE2
  1901                           fsr1l	equ	0xFE1
  1902                           indf2	equ	0xFDF
  1903                           fsr2h	equ	0xFDA
  1904                           fsr2l	equ	0xFD9
  1905                           status	equ	0xFD8
  1906                           
  1907 ;; *************** function _CRC_Verify *****************
  1908 ;; Defined at:
  1909 ;;		line 144 in file "_01_USER/My_USART.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;  _pucBuf         2   30[COMRAM] PTR unsigned char 
  1912 ;;		 -> ReceiveBuff(10), RS485_SendBuff(10), 
  1913 ;;  _usLen          1   32[COMRAM] unsigned char 
  1914 ;;  _ucHByte        2   33[COMRAM] PTR unsigned char 
  1915 ;;		 -> RS485_Receive_Date@_ucHByte(1), RS485_SendBuff(10), 
  1916 ;;  _ucLByte        2   35[COMRAM] PTR unsigned char 
  1917 ;;		 -> RS485_Receive_Date@_ucLByte(1), RS485_SendBuff(10), 
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;  usCrc           2   38[COMRAM] unsigned int 
  1920 ;;  i               1   40[COMRAM] unsigned char 
  1921 ;; Return value:  Size  Location     Type
  1922 ;;		None               void
  1923 ;; Registers used:
  1924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1925 ;; Tracked objects:
  1926 ;;		On entry : 0/0
  1927 ;;		On exit  : 0/0
  1928 ;;		Unchanged: 0/0
  1929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1930 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1931 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1932 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1933 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1934 ;;Total ram usage:       11 bytes
  1935 ;; Hardware stack levels used:    1
  1936 ;; Hardware stack levels required when called:    4
  1937 ;; This function calls:
  1938 ;;		___wmul
  1939 ;; This function is called by:
  1940 ;;		_RS485_Send_Date
  1941 ;;		_RS485_Receive_Date
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           	psect	text11
  1946  0019CE                     __ptext11:
  1947                           	opt stack 0
  1948  0019CE                     _CRC_Verify:
  1949                           	opt stack 24
  1950                           
  1951                           ;My_USART.c: 146: char i = 0;
  1952                           
  1953                           ;incstack = 0
  1954  0019CE  0E00               	movlw	0
  1955  0019D0  6E29               	movwf	CRC_Verify@i,c
  1956                           
  1957                           ;My_USART.c: 147: unsigned int usCrc = 0;
  1958  0019D2  0E00               	movlw	0
  1959  0019D4  6E28               	movwf	CRC_Verify@usCrc+1,c
  1960  0019D6  0E00               	movlw	0
  1961  0019D8  6E27               	movwf	CRC_Verify@usCrc,c
  1962                           
  1963                           ;My_USART.c: 149: for(i = 0 ; i < _usLen ; i++)
  1964  0019DA  0E00               	movlw	0
  1965  0019DC  6E29               	movwf	CRC_Verify@i,c
  1966  0019DE  D01D               	goto	l2807
  1967  0019E0                     l2803:
  1968                           
  1969                           ;My_USART.c: 150: usCrc = (usCrc+_pucBuf[i]*(i+1))%65536;
  1970  0019E0  0E01               	movlw	1
  1971  0019E2  2429               	addwf	CRC_Verify@i,w,c
  1972  0019E4  6E19               	movwf	___wmul@multiplier,c
  1973  0019E6  6A1A               	clrf	___wmul@multiplier+1,c
  1974  0019E8  0E00               	movlw	0
  1975  0019EA  221A               	addwfc	___wmul@multiplier+1,f,c
  1976  0019EC  5029               	movf	CRC_Verify@i,w,c
  1977  0019EE  0D01               	mullw	1
  1978  0019F0  50F3               	movf	prodl,w,c
  1979  0019F2  241F               	addwf	CRC_Verify@_pucBuf,w,c
  1980  0019F4  6ED9               	movwf	fsr2l,c
  1981  0019F6  50F4               	movf	prodh,w,c
  1982  0019F8  2020               	addwfc	CRC_Verify@_pucBuf+1,w,c
  1983  0019FA  6EDA               	movwf	fsr2h,c
  1984  0019FC  50DF               	movf	indf2,w,c
  1985  0019FE  6E26               	movwf	??_CRC_Verify& (0+255),c
  1986  001A00  5026               	movf	??_CRC_Verify,w,c
  1987  001A02  6E1B               	movwf	___wmul@multiplicand,c
  1988  001A04  6A1C               	clrf	___wmul@multiplicand+1,c
  1989  001A06  EC0B  F00F         	call	___wmul	;wreg free
  1990  001A0A  5027               	movf	CRC_Verify@usCrc,w,c
  1991  001A0C  2419               	addwf	?___wmul,w,c
  1992  001A0E  6E27               	movwf	CRC_Verify@usCrc,c
  1993  001A10  5028               	movf	CRC_Verify@usCrc+1,w,c
  1994  001A12  201A               	addwfc	?___wmul+1,w,c
  1995  001A14  6E28               	movwf	CRC_Verify@usCrc+1,c
  1996  001A16  2A29               	incf	CRC_Verify@i,f,c
  1997  001A18  D000               	goto	l2807
  1998  001A1A                     l2807:
  1999  001A1A  5021               	movf	CRC_Verify@_usLen,w,c
  2000  001A1C  5C29               	subwf	CRC_Verify@i,w,c
  2001  001A1E  A0D8               	btfss	status,0,c
  2002  001A20  D7DF               	goto	l2803
  2003                           
  2004                           ;My_USART.c: 152: *_ucHByte = usCrc / 256;
  2005  001A22  5028               	movf	CRC_Verify@usCrc+1,w,c
  2006  001A24  C022  FFD9         	movff	CRC_Verify@_ucHByte,fsr2l
  2007  001A28  C023  FFDA         	movff	CRC_Verify@_ucHByte+1,fsr2h
  2008  001A2C  6EDF               	movwf	indf2,c
  2009                           
  2010                           ;My_USART.c: 153: *_ucLByte = usCrc % 256;
  2011  001A2E  C024  FFD9         	movff	CRC_Verify@_ucLByte,fsr2l
  2012  001A32  C025  FFDA         	movff	CRC_Verify@_ucLByte+1,fsr2h
  2013  001A36  C027  FFDF         	movff	CRC_Verify@usCrc,indf2
  2014  001A3A  0012               	return		;funcret
  2015  001A3C                     __end_of_CRC_Verify:
  2016                           	opt stack 0
  2017                           tblptru	equ	0xFF8
  2018                           tblptrh	equ	0xFF7
  2019                           tblptrl	equ	0xFF6
  2020                           tablat	equ	0xFF5
  2021                           prodh	equ	0xFF4
  2022                           prodl	equ	0xFF3
  2023                           intcon	equ	0xFF2
  2024                           postinc0	equ	0xFEE
  2025                           wreg	equ	0xFE8
  2026                           indf1	equ	0xFE7
  2027                           fsr1h	equ	0xFE2
  2028                           fsr1l	equ	0xFE1
  2029                           indf2	equ	0xFDF
  2030                           fsr2h	equ	0xFDA
  2031                           fsr2l	equ	0xFD9
  2032                           status	equ	0xFD8
  2033                           
  2034 ;; *************** function ___wmul *****************
  2035 ;; Defined at:
  2036 ;;		line 15 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;  multiplier      2   24[COMRAM] unsigned int 
  2039 ;;  multiplicand    2   26[COMRAM] unsigned int 
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;  product         2   28[COMRAM] unsigned int 
  2042 ;; Return value:  Size  Location     Type
  2043 ;;                  2   24[COMRAM] unsigned int 
  2044 ;; Registers used:
  2045 ;;		wreg, status,2, status,0, prodl, prodh
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 0/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2051 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2052 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2054 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2055 ;;Total ram usage:        6 bytes
  2056 ;; Hardware stack levels used:    1
  2057 ;; Hardware stack levels required when called:    3
  2058 ;; This function calls:
  2059 ;;		Nothing
  2060 ;; This function is called by:
  2061 ;;		_CRC_Verify
  2062 ;;		_Show_Result
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066                           	psect	text12
  2067  001E16                     __ptext12:
  2068                           	opt stack 0
  2069  001E16                     ___wmul:
  2070                           	opt stack 26
  2071                           
  2072                           ;incstack = 0
  2073  001E16  5019               	movf	___wmul@multiplier,w,c
  2074  001E18  021B               	mulwf	___wmul@multiplicand,c
  2075  001E1A  CFF3 F01D          	movff	prodl,___wmul@product
  2076  001E1E  CFF4 F01E          	movff	prodh,___wmul@product+1
  2077  001E22  5019               	movf	___wmul@multiplier,w,c
  2078  001E24  021C               	mulwf	___wmul@multiplicand+1,c
  2079  001E26  50F3               	movf	prodl,w,c
  2080  001E28  261E               	addwf	___wmul@product+1,f,c
  2081  001E2A  501A               	movf	___wmul@multiplier+1,w,c
  2082  001E2C  021B               	mulwf	___wmul@multiplicand,c
  2083  001E2E  50F3               	movf	prodl,w,c
  2084  001E30  261E               	addwf	___wmul@product+1,f,c
  2085  001E32  C01D  F019         	movff	___wmul@product,?___wmul
  2086  001E36  C01E  F01A         	movff	___wmul@product+1,?___wmul+1
  2087  001E3A  0012               	return	
  2088  001E3C  0012               	return		;funcret
  2089  001E3E                     __end_of___wmul:
  2090                           	opt stack 0
  2091                           tblptru	equ	0xFF8
  2092                           tblptrh	equ	0xFF7
  2093                           tblptrl	equ	0xFF6
  2094                           tablat	equ	0xFF5
  2095                           prodh	equ	0xFF4
  2096                           prodl	equ	0xFF3
  2097                           intcon	equ	0xFF2
  2098                           postinc0	equ	0xFEE
  2099                           wreg	equ	0xFE8
  2100                           indf1	equ	0xFE7
  2101                           fsr1h	equ	0xFE2
  2102                           fsr1l	equ	0xFE1
  2103                           indf2	equ	0xFDF
  2104                           fsr2h	equ	0xFDA
  2105                           fsr2l	equ	0xFD9
  2106                           status	equ	0xFD8
  2107                           
  2108 ;; *************** function _Get_ADC6 *****************
  2109 ;; Defined at:
  2110 ;;		line 67 in file "_01_USER/My_ADC.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;		None
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;		None
  2115 ;; Return value:  Size  Location     Type
  2116 ;;		None               void
  2117 ;; Registers used:
  2118 ;;		wreg, status,2, status,0, cstack
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2128 ;;Total ram usage:        0 bytes
  2129 ;; Hardware stack levels used:    1
  2130 ;; Hardware stack levels required when called:    5
  2131 ;; This function calls:
  2132 ;;		_BusyADC
  2133 ;;		_ConvertADC
  2134 ;;		_ReadADC
  2135 ;;		___ftdiv
  2136 ;;		___ftmul
  2137 ;;		___lwtoft
  2138 ;; This function is called by:
  2139 ;;		_Run
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           	psect	text13
  2144  001A3C                     __ptext13:
  2145                           	opt stack 0
  2146  001A3C                     _Get_ADC6:
  2147                           	opt stack 24
  2148                           
  2149                           ;My_ADC.c: 69: ConvertADC();
  2150                           
  2151                           ;incstack = 0
  2152  001A3C  ECDE  F00F         	call	_ConvertADC	;wreg free
  2153                           
  2154                           ;My_ADC.c: 70: while(BusyADC());
  2155  001A40  D000               	goto	l3075
  2156  001A42                     l3075:
  2157  001A42  ECCC  F00F         	call	_BusyADC	;wreg free
  2158  001A46  0900               	iorlw	0
  2159  001A48  A4D8               	btfss	status,2,c
  2160  001A4A  D7FB               	goto	l3075
  2161                           
  2162                           ;My_ADC.c: 71: ADC6_Buff =(unsigned int)ReadADC()*4.096f/4095.0f;
  2163  001A4C  0E12               	movlw	18
  2164  001A4E  6E27               	movwf	___ftmul@f2,c
  2165  001A50  0E83               	movlw	131
  2166  001A52  6E28               	movwf	___ftmul@f2+1,c
  2167  001A54  0E40               	movlw	64
  2168  001A56  6E29               	movwf	___ftmul@f2+2,c
  2169  001A58  ECC4  F00F         	call	_ReadADC	;wreg free
  2170  001A5C  C019  F021         	movff	?_ReadADC,___lwtoft@c
  2171  001A60  C01A  F022         	movff	?_ReadADC+1,___lwtoft@c+1
  2172  001A64  EC32  F00F         	call	___lwtoft	;wreg free
  2173  001A68  C021  F024         	movff	?___lwtoft,___ftmul@f1
  2174  001A6C  C022  F025         	movff	?___lwtoft+1,___ftmul@f1+1
  2175  001A70  C023  F026         	movff	?___lwtoft+2,___ftmul@f1+2
  2176  001A74  ECA1  F00A         	call	___ftmul	;wreg free
  2177  001A78  C024  F0A2         	movff	?___ftmul,___ftdiv@f1
  2178  001A7C  C025  F0A3         	movff	?___ftmul+1,___ftdiv@f1+1
  2179  001A80  C026  F0A4         	movff	?___ftmul+2,___ftdiv@f1+2
  2180  001A84  0EF0               	movlw	240
  2181  001A86  0100               	movlb	0	; () banked
  2182  001A88  6FA5               	movwf	___ftdiv@f2& (0+255),b
  2183  001A8A  0E7F               	movlw	127
  2184  001A8C  0100               	movlb	0	; () banked
  2185  001A8E  6FA6               	movwf	(___ftdiv@f2+1)& (0+255),b
  2186  001A90  0E45               	movlw	69
  2187  001A92  0100               	movlb	0	; () banked
  2188  001A94  6FA7               	movwf	(___ftdiv@f2+2)& (0+255),b
  2189  001A96  ECDA  F008         	call	___ftdiv	;wreg free
  2190  001A9A  C0A2  F03B         	movff	?___ftdiv,_ADC6_Buff	;volatile
  2191  001A9E  C0A3  F03C         	movff	?___ftdiv+1,_ADC6_Buff+1	;volatile
  2192  001AA2  C0A4  F03D         	movff	?___ftdiv+2,_ADC6_Buff+2	;volatile
  2193  001AA6  0012               	return		;funcret
  2194  001AA8                     __end_of_Get_ADC6:
  2195                           	opt stack 0
  2196                           tblptru	equ	0xFF8
  2197                           tblptrh	equ	0xFF7
  2198                           tblptrl	equ	0xFF6
  2199                           tablat	equ	0xFF5
  2200                           prodh	equ	0xFF4
  2201                           prodl	equ	0xFF3
  2202                           intcon	equ	0xFF2
  2203                           postinc0	equ	0xFEE
  2204                           wreg	equ	0xFE8
  2205                           indf1	equ	0xFE7
  2206                           fsr1h	equ	0xFE2
  2207                           fsr1l	equ	0xFE1
  2208                           indf2	equ	0xFDF
  2209                           fsr2h	equ	0xFDA
  2210                           fsr2l	equ	0xFD9
  2211                           status	equ	0xFD8
  2212                           
  2213 ;; *************** function ___lwtoft *****************
  2214 ;; Defined at:
  2215 ;;		line 28 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  2216 ;; Parameters:    Size  Location     Type
  2217 ;;  c               2   32[COMRAM] unsigned int 
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;		None
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  3   32[COMRAM] float 
  2222 ;; Registers used:
  2223 ;;		wreg, status,2, status,0, cstack
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2229 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2232 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2233 ;;Total ram usage:        3 bytes
  2234 ;; Hardware stack levels used:    1
  2235 ;; Hardware stack levels required when called:    4
  2236 ;; This function calls:
  2237 ;;		___ftpack
  2238 ;; This function is called by:
  2239 ;;		_Get_ADC6
  2240 ;; This function uses a non-reentrant model
  2241 ;;
  2242                           
  2243                           	psect	text14
  2244  001E64                     __ptext14:
  2245                           	opt stack 0
  2246  001E64                     ___lwtoft:
  2247                           	opt stack 24
  2248                           
  2249                           ;incstack = 0
  2250  001E64  C021  F019         	movff	___lwtoft@c,___ftpack@arg
  2251  001E68  C022  F01A         	movff	___lwtoft@c+1,___ftpack@arg+1
  2252  001E6C  6A1B               	clrf	___ftpack@arg+2,c
  2253  001E6E  0E8E               	movlw	142
  2254  001E70  6E1C               	movwf	___ftpack@exp,c
  2255  001E72  0E00               	movlw	0
  2256  001E74  6E1D               	movwf	___ftpack@sign,c
  2257  001E76  EC22  F00B         	call	___ftpack	;wreg free
  2258  001E7A  C019  F021         	movff	?___ftpack,?___lwtoft
  2259  001E7E  C01A  F022         	movff	?___ftpack+1,?___lwtoft+1
  2260  001E82  C01B  F023         	movff	?___ftpack+2,?___lwtoft+2
  2261  001E86  0012               	return	
  2262  001E88  0012               	return		;funcret
  2263  001E8A                     __end_of___lwtoft:
  2264                           	opt stack 0
  2265                           tblptru	equ	0xFF8
  2266                           tblptrh	equ	0xFF7
  2267                           tblptrl	equ	0xFF6
  2268                           tablat	equ	0xFF5
  2269                           prodh	equ	0xFF4
  2270                           prodl	equ	0xFF3
  2271                           intcon	equ	0xFF2
  2272                           postinc0	equ	0xFEE
  2273                           wreg	equ	0xFE8
  2274                           indf1	equ	0xFE7
  2275                           fsr1h	equ	0xFE2
  2276                           fsr1l	equ	0xFE1
  2277                           indf2	equ	0xFDF
  2278                           fsr2h	equ	0xFDA
  2279                           fsr2l	equ	0xFD9
  2280                           status	equ	0xFD8
  2281                           
  2282 ;; *************** function ___ftmul *****************
  2283 ;; Defined at:
  2284 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;  f1              3   35[COMRAM] float 
  2287 ;;  f2              3   38[COMRAM] float 
  2288 ;; Auto vars:     Size  Location     Type
  2289 ;;  f3_as_produc    3   45[COMRAM] unsigned um
  2290 ;;  sign            1   49[COMRAM] unsigned char 
  2291 ;;  cntr            1   48[COMRAM] unsigned char 
  2292 ;;  exp             1   44[COMRAM] unsigned char 
  2293 ;; Return value:  Size  Location     Type
  2294 ;;                  3   35[COMRAM] float 
  2295 ;; Registers used:
  2296 ;;		wreg, status,2, status,0, cstack
  2297 ;; Tracked objects:
  2298 ;;		On entry : 0/0
  2299 ;;		On exit  : 0/0
  2300 ;;		Unchanged: 0/0
  2301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2302 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2303 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2304 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2305 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2306 ;;Total ram usage:       15 bytes
  2307 ;; Hardware stack levels used:    1
  2308 ;; Hardware stack levels required when called:    4
  2309 ;; This function calls:
  2310 ;;		___ftpack
  2311 ;; This function is called by:
  2312 ;;		_Get_ADC6
  2313 ;;		_TM1640_Show_Decimal
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           	psect	text15
  2318  001542                     __ptext15:
  2319                           	opt stack 0
  2320  001542                     ___ftmul:
  2321                           	opt stack 24
  2322                           
  2323                           ;incstack = 0
  2324  001542  C026  F02A         	movff	___ftmul@f1+2,??___ftmul
  2325  001546  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  2326  001548  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  2327  00154A  3425               	rlcf	___ftmul@f1+1,w,c
  2328  00154C  362A               	rlcf	??___ftmul& (0+255),f,c
  2329  00154E  E301               	bnc	u2771
  2330  001550  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  2331  001552                     u2771:
  2332  001552  502A               	movf	??___ftmul,w,c
  2333  001554  6E2D               	movwf	___ftmul@exp,c
  2334  001556  502D               	movf	___ftmul@exp,w,c
  2335  001558  A4D8               	btfss	status,2,c
  2336  00155A  D007               	goto	l2879
  2337  00155C  0E00               	movlw	0
  2338  00155E  6E24               	movwf	?___ftmul,c
  2339  001560  0E00               	movlw	0
  2340  001562  6E25               	movwf	?___ftmul+1,c
  2341  001564  0E00               	movlw	0
  2342  001566  6E26               	movwf	?___ftmul+2,c
  2343  001568  0012               	return	
  2344  00156A                     l2879:
  2345  00156A  C029  F02A         	movff	___ftmul@f2+2,??___ftmul
  2346  00156E  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  2347  001570  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  2348  001572  3428               	rlcf	___ftmul@f2+1,w,c
  2349  001574  362A               	rlcf	??___ftmul& (0+255),f,c
  2350  001576  E301               	bnc	u2791
  2351  001578  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  2352  00157A                     u2791:
  2353  00157A  502A               	movf	??___ftmul,w,c
  2354  00157C  6E32               	movwf	___ftmul@sign,c
  2355  00157E  5032               	movf	___ftmul@sign,w,c
  2356  001580  A4D8               	btfss	status,2,c
  2357  001582  D007               	goto	l2885
  2358  001584  0E00               	movlw	0
  2359  001586  6E24               	movwf	?___ftmul,c
  2360  001588  0E00               	movlw	0
  2361  00158A  6E25               	movwf	?___ftmul+1,c
  2362  00158C  0E00               	movlw	0
  2363  00158E  6E26               	movwf	?___ftmul+2,c
  2364  001590  0012               	return	
  2365  001592                     l2885:
  2366  001592  5032               	movf	___ftmul@sign,w,c
  2367  001594  0F7B               	addlw	123
  2368  001596  262D               	addwf	___ftmul@exp,f,c
  2369  001598  C026  F032         	movff	___ftmul@f1+2,___ftmul@sign
  2370  00159C  5029               	movf	___ftmul@f2+2,w,c
  2371  00159E  1A32               	xorwf	___ftmul@sign,f,c
  2372  0015A0  0E80               	movlw	128
  2373  0015A2  1632               	andwf	___ftmul@sign,f,c
  2374  0015A4  8E25               	bsf	___ftmul@f1+1,7,c
  2375  0015A6  8E28               	bsf	___ftmul@f2+1,7,c
  2376  0015A8  0EFF               	movlw	255
  2377  0015AA  1627               	andwf	___ftmul@f2,f,c
  2378  0015AC  0EFF               	movlw	255
  2379  0015AE  1628               	andwf	___ftmul@f2+1,f,c
  2380  0015B0  0E00               	movlw	0
  2381  0015B2  1629               	andwf	___ftmul@f2+2,f,c
  2382  0015B4  0E00               	movlw	0
  2383  0015B6  6E2E               	movwf	___ftmul@f3_as_product,c
  2384  0015B8  0E00               	movlw	0
  2385  0015BA  6E2F               	movwf	___ftmul@f3_as_product+1,c
  2386  0015BC  0E00               	movlw	0
  2387  0015BE  6E30               	movwf	___ftmul@f3_as_product+2,c
  2388  0015C0  0E07               	movlw	7
  2389  0015C2  6E31               	movwf	___ftmul@cntr,c
  2390  0015C4  D000               	goto	l2899
  2391  0015C6                     l2899:
  2392  0015C6  A024               	btfss	___ftmul@f1,0,c
  2393  0015C8  D007               	goto	l2903
  2394  0015CA  5027               	movf	___ftmul@f2,w,c
  2395  0015CC  262E               	addwf	___ftmul@f3_as_product,f,c
  2396  0015CE  5028               	movf	___ftmul@f2+1,w,c
  2397  0015D0  222F               	addwfc	___ftmul@f3_as_product+1,f,c
  2398  0015D2  5029               	movf	___ftmul@f2+2,w,c
  2399  0015D4  2230               	addwfc	___ftmul@f3_as_product+2,f,c
  2400  0015D6  D000               	goto	l2903
  2401  0015D8                     l2903:
  2402  0015D8  90D8               	bcf	status,0,c
  2403  0015DA  3226               	rrcf	___ftmul@f1+2,f,c
  2404  0015DC  3225               	rrcf	___ftmul@f1+1,f,c
  2405  0015DE  3224               	rrcf	___ftmul@f1,f,c
  2406  0015E0  90D8               	bcf	status,0,c
  2407  0015E2  3627               	rlcf	___ftmul@f2,f,c
  2408  0015E4  3628               	rlcf	___ftmul@f2+1,f,c
  2409  0015E6  3629               	rlcf	___ftmul@f2+2,f,c
  2410  0015E8  2E31               	decfsz	___ftmul@cntr,f,c
  2411  0015EA  D7ED               	goto	l2899
  2412  0015EC  D000               	goto	l2907
  2413  0015EE                     l2907:
  2414  0015EE  0E09               	movlw	9
  2415  0015F0  6E31               	movwf	___ftmul@cntr,c
  2416  0015F2  D000               	goto	l2909
  2417  0015F4                     l2909:
  2418  0015F4  A024               	btfss	___ftmul@f1,0,c
  2419  0015F6  D007               	goto	l2913
  2420  0015F8  5027               	movf	___ftmul@f2,w,c
  2421  0015FA  262E               	addwf	___ftmul@f3_as_product,f,c
  2422  0015FC  5028               	movf	___ftmul@f2+1,w,c
  2423  0015FE  222F               	addwfc	___ftmul@f3_as_product+1,f,c
  2424  001600  5029               	movf	___ftmul@f2+2,w,c
  2425  001602  2230               	addwfc	___ftmul@f3_as_product+2,f,c
  2426  001604  D000               	goto	l2913
  2427  001606                     l2913:
  2428  001606  90D8               	bcf	status,0,c
  2429  001608  3226               	rrcf	___ftmul@f1+2,f,c
  2430  00160A  3225               	rrcf	___ftmul@f1+1,f,c
  2431  00160C  3224               	rrcf	___ftmul@f1,f,c
  2432  00160E  90D8               	bcf	status,0,c
  2433  001610  3230               	rrcf	___ftmul@f3_as_product+2,f,c
  2434  001612  322F               	rrcf	___ftmul@f3_as_product+1,f,c
  2435  001614  322E               	rrcf	___ftmul@f3_as_product,f,c
  2436  001616  2E31               	decfsz	___ftmul@cntr,f,c
  2437  001618  D7ED               	goto	l2909
  2438  00161A  D000               	goto	l2917
  2439  00161C                     l2917:
  2440  00161C  C02E  F019         	movff	___ftmul@f3_as_product,___ftpack@arg
  2441  001620  C02F  F01A         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2442  001624  C030  F01B         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2443  001628  C02D  F01C         	movff	___ftmul@exp,___ftpack@exp
  2444  00162C  C032  F01D         	movff	___ftmul@sign,___ftpack@sign
  2445  001630  EC22  F00B         	call	___ftpack	;wreg free
  2446  001634  C019  F024         	movff	?___ftpack,?___ftmul
  2447  001638  C01A  F025         	movff	?___ftpack+1,?___ftmul+1
  2448  00163C  C01B  F026         	movff	?___ftpack+2,?___ftmul+2
  2449  001640  0012               	return	
  2450  001642  0012               	return		;funcret
  2451  001644                     __end_of___ftmul:
  2452                           	opt stack 0
  2453                           tblptru	equ	0xFF8
  2454                           tblptrh	equ	0xFF7
  2455                           tblptrl	equ	0xFF6
  2456                           tablat	equ	0xFF5
  2457                           prodh	equ	0xFF4
  2458                           prodl	equ	0xFF3
  2459                           intcon	equ	0xFF2
  2460                           postinc0	equ	0xFEE
  2461                           wreg	equ	0xFE8
  2462                           indf1	equ	0xFE7
  2463                           fsr1h	equ	0xFE2
  2464                           fsr1l	equ	0xFE1
  2465                           indf2	equ	0xFDF
  2466                           fsr2h	equ	0xFDA
  2467                           fsr2l	equ	0xFD9
  2468                           status	equ	0xFD8
  2469                           
  2470 ;; *************** function ___ftdiv *****************
  2471 ;; Defined at:
  2472 ;;		line 54 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;  f1              3    0[BANK0 ] float 
  2475 ;;  f2              3    3[BANK0 ] float 
  2476 ;; Auto vars:     Size  Location     Type
  2477 ;;  f3              3   10[BANK0 ] float 
  2478 ;;  sign            1   14[BANK0 ] unsigned char 
  2479 ;;  exp             1   13[BANK0 ] unsigned char 
  2480 ;;  cntr            1    9[BANK0 ] unsigned char 
  2481 ;; Return value:  Size  Location     Type
  2482 ;;                  3    0[BANK0 ] float 
  2483 ;; Registers used:
  2484 ;;		wreg, status,2, status,0, cstack
  2485 ;; Tracked objects:
  2486 ;;		On entry : 0/0
  2487 ;;		On exit  : 0/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2490 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2491 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2492 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2493 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2494 ;;Total ram usage:       15 bytes
  2495 ;; Hardware stack levels used:    1
  2496 ;; Hardware stack levels required when called:    4
  2497 ;; This function calls:
  2498 ;;		___ftpack
  2499 ;; This function is called by:
  2500 ;;		_Get_ADC6
  2501 ;;		_TM1640_Show_Decimal
  2502 ;; This function uses a non-reentrant model
  2503 ;;
  2504                           
  2505                           	psect	text16
  2506  0011B4                     __ptext16:
  2507                           	opt stack 0
  2508  0011B4                     ___ftdiv:
  2509                           	opt stack 24
  2510                           
  2511                           ;incstack = 0
  2512  0011B4  C0A4  F0A8         	movff	___ftdiv@f1+2,??___ftdiv
  2513  0011B8  0100               	movlb	0	; () banked
  2514  0011BA  6BA9               	clrf	(??___ftdiv+1)& (0+255),b
  2515  0011BC  6BAA               	clrf	(??___ftdiv+2)& (0+255),b
  2516  0011BE  0100               	movlb	0	; () banked
  2517  0011C0  35A3               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  2518  0011C2  0100               	movlb	0	; () banked
  2519  0011C4  37A8               	rlcf	??___ftdiv& (0+255),f,b
  2520  0011C6  E301               	bnc	u2721
  2521  0011C8  81A9               	bsf	(??___ftdiv+1)& (0+255),0,b
  2522  0011CA                     u2721:
  2523  0011CA  0100               	movlb	0	; () banked
  2524  0011CC  51A8               	movf	??___ftdiv& (0+255),w,b
  2525  0011CE  0100               	movlb	0	; () banked
  2526  0011D0  6FAF               	movwf	___ftdiv@exp& (0+255),b
  2527  0011D2  0100               	movlb	0	; () banked
  2528  0011D4  51AF               	movf	___ftdiv@exp& (0+255),w,b
  2529  0011D6  A4D8               	btfss	status,2,c
  2530  0011D8  D00A               	goto	l2833
  2531                           
  2532                           ; BSR set to: 0
  2533  0011DA  0E00               	movlw	0
  2534  0011DC  0100               	movlb	0	; () banked
  2535  0011DE  6FA2               	movwf	?___ftdiv& (0+255),b
  2536  0011E0  0E00               	movlw	0
  2537  0011E2  0100               	movlb	0	; () banked
  2538  0011E4  6FA3               	movwf	(?___ftdiv+1)& (0+255),b
  2539  0011E6  0E00               	movlw	0
  2540  0011E8  0100               	movlb	0	; () banked
  2541  0011EA  6FA4               	movwf	(?___ftdiv+2)& (0+255),b
  2542                           
  2543                           ; BSR set to: 0
  2544  0011EC  0012               	return	
  2545  0011EE                     l2833:
  2546                           
  2547                           ; BSR set to: 0
  2548  0011EE  C0A7  F0A8         	movff	___ftdiv@f2+2,??___ftdiv
  2549  0011F2  0100               	movlb	0	; () banked
  2550  0011F4  6BA9               	clrf	(??___ftdiv+1)& (0+255),b
  2551  0011F6  6BAA               	clrf	(??___ftdiv+2)& (0+255),b
  2552  0011F8  0100               	movlb	0	; () banked
  2553  0011FA  35A6               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  2554  0011FC  0100               	movlb	0	; () banked
  2555  0011FE  37A8               	rlcf	??___ftdiv& (0+255),f,b
  2556  001200  E301               	bnc	u2741
  2557  001202  81A9               	bsf	(??___ftdiv+1)& (0+255),0,b
  2558  001204                     u2741:
  2559  001204  0100               	movlb	0	; () banked
  2560  001206  51A8               	movf	??___ftdiv& (0+255),w,b
  2561  001208  0100               	movlb	0	; () banked
  2562  00120A  6FB0               	movwf	___ftdiv@sign& (0+255),b
  2563  00120C  0100               	movlb	0	; () banked
  2564  00120E  51B0               	movf	___ftdiv@sign& (0+255),w,b
  2565  001210  A4D8               	btfss	status,2,c
  2566  001212  D00A               	goto	l2839
  2567                           
  2568                           ; BSR set to: 0
  2569  001214  0E00               	movlw	0
  2570  001216  0100               	movlb	0	; () banked
  2571  001218  6FA2               	movwf	?___ftdiv& (0+255),b
  2572  00121A  0E00               	movlw	0
  2573  00121C  0100               	movlb	0	; () banked
  2574  00121E  6FA3               	movwf	(?___ftdiv+1)& (0+255),b
  2575  001220  0E00               	movlw	0
  2576  001222  0100               	movlb	0	; () banked
  2577  001224  6FA4               	movwf	(?___ftdiv+2)& (0+255),b
  2578                           
  2579                           ; BSR set to: 0
  2580  001226  0012               	return	
  2581  001228                     l2839:
  2582                           
  2583                           ; BSR set to: 0
  2584  001228  0E00               	movlw	0
  2585  00122A  0100               	movlb	0	; () banked
  2586  00122C  6FAC               	movwf	___ftdiv@f3& (0+255),b
  2587  00122E  0E00               	movlw	0
  2588  001230  0100               	movlb	0	; () banked
  2589  001232  6FAD               	movwf	(___ftdiv@f3+1)& (0+255),b
  2590  001234  0E00               	movlw	0
  2591  001236  0100               	movlb	0	; () banked
  2592  001238  6FAE               	movwf	(___ftdiv@f3+2)& (0+255),b
  2593                           
  2594                           ; BSR set to: 0
  2595  00123A  0100               	movlb	0	; () banked
  2596  00123C  51B0               	movf	___ftdiv@sign& (0+255),w,b
  2597  00123E  0F89               	addlw	137
  2598  001240  0100               	movlb	0	; () banked
  2599  001242  5FAF               	subwf	___ftdiv@exp& (0+255),f,b
  2600                           
  2601                           ; BSR set to: 0
  2602  001244  C0A4  F0B0         	movff	___ftdiv@f1+2,___ftdiv@sign
  2603                           
  2604                           ; BSR set to: 0
  2605  001248  0100               	movlb	0	; () banked
  2606  00124A  51A7               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2607  00124C  0100               	movlb	0	; () banked
  2608  00124E  1BB0               	xorwf	___ftdiv@sign& (0+255),f,b
  2609                           
  2610                           ; BSR set to: 0
  2611  001250  0E80               	movlw	128
  2612  001252  0100               	movlb	0	; () banked
  2613  001254  17B0               	andwf	___ftdiv@sign& (0+255),f,b
  2614                           
  2615                           ; BSR set to: 0
  2616  001256  0100               	movlb	0	; () banked
  2617  001258  8FA3               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  2618                           
  2619                           ; BSR set to: 0
  2620  00125A  0EFF               	movlw	255
  2621  00125C  0100               	movlb	0	; () banked
  2622  00125E  17A2               	andwf	___ftdiv@f1& (0+255),f,b
  2623  001260  0EFF               	movlw	255
  2624  001262  0100               	movlb	0	; () banked
  2625  001264  17A3               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  2626  001266  0E00               	movlw	0
  2627  001268  0100               	movlb	0	; () banked
  2628  00126A  17A4               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  2629                           
  2630                           ; BSR set to: 0
  2631  00126C  0100               	movlb	0	; () banked
  2632  00126E  8FA6               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  2633                           
  2634                           ; BSR set to: 0
  2635  001270  0EFF               	movlw	255
  2636  001272  0100               	movlb	0	; () banked
  2637  001274  17A5               	andwf	___ftdiv@f2& (0+255),f,b
  2638  001276  0EFF               	movlw	255
  2639  001278  0100               	movlb	0	; () banked
  2640  00127A  17A6               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  2641  00127C  0E00               	movlw	0
  2642  00127E  0100               	movlb	0	; () banked
  2643  001280  17A7               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  2644                           
  2645                           ; BSR set to: 0
  2646  001282  0E18               	movlw	24
  2647  001284  0100               	movlb	0	; () banked
  2648  001286  6FAB               	movwf	___ftdiv@cntr& (0+255),b
  2649  001288  D000               	goto	l2859
  2650  00128A                     l2859:
  2651                           
  2652                           ; BSR set to: 0
  2653  00128A  0100               	movlb	0	; () banked
  2654  00128C  90D8               	bcf	status,0,c
  2655  00128E  37AC               	rlcf	___ftdiv@f3& (0+255),f,b
  2656  001290  37AD               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  2657  001292  37AE               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  2658                           
  2659                           ; BSR set to: 0
  2660  001294  0100               	movlb	0	; () banked
  2661  001296  51A5               	movf	___ftdiv@f2& (0+255),w,b
  2662  001298  0100               	movlb	0	; () banked
  2663  00129A  5DA2               	subwf	___ftdiv@f1& (0+255),w,b
  2664  00129C  0100               	movlb	0	; () banked
  2665  00129E  51A6               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2666  0012A0  0100               	movlb	0	; () banked
  2667  0012A2  59A3               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  2668  0012A4  0100               	movlb	0	; () banked
  2669  0012A6  51A7               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2670  0012A8  0100               	movlb	0	; () banked
  2671  0012AA  59A4               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  2672  0012AC  A0D8               	btfss	status,0,c
  2673  0012AE  D00E               	goto	l871
  2674                           
  2675                           ; BSR set to: 0
  2676  0012B0  0100               	movlb	0	; () banked
  2677  0012B2  51A5               	movf	___ftdiv@f2& (0+255),w,b
  2678  0012B4  0100               	movlb	0	; () banked
  2679  0012B6  5FA2               	subwf	___ftdiv@f1& (0+255),f,b
  2680  0012B8  0100               	movlb	0	; () banked
  2681  0012BA  51A6               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2682  0012BC  0100               	movlb	0	; () banked
  2683  0012BE  5BA3               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  2684  0012C0  0100               	movlb	0	; () banked
  2685  0012C2  51A7               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2686  0012C4  0100               	movlb	0	; () banked
  2687  0012C6  5BA4               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  2688                           
  2689                           ; BSR set to: 0
  2690  0012C8  0100               	movlb	0	; () banked
  2691  0012CA  81AC               	bsf	___ftdiv@f3& (0+255),0,b
  2692  0012CC                     l871:
  2693                           
  2694                           ; BSR set to: 0
  2695  0012CC  0100               	movlb	0	; () banked
  2696  0012CE  90D8               	bcf	status,0,c
  2697  0012D0  37A2               	rlcf	___ftdiv@f1& (0+255),f,b
  2698  0012D2  37A3               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  2699  0012D4  37A4               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  2700                           
  2701                           ; BSR set to: 0
  2702  0012D6  0100               	movlb	0	; () banked
  2703  0012D8  2FAB               	decfsz	___ftdiv@cntr& (0+255),f,b
  2704  0012DA  D7D7               	goto	l2859
  2705  0012DC  D000               	goto	l2869
  2706  0012DE                     l2869:
  2707                           
  2708                           ; BSR set to: 0
  2709  0012DE  C0AC  F019         	movff	___ftdiv@f3,___ftpack@arg
  2710  0012E2  C0AD  F01A         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2711  0012E6  C0AE  F01B         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2712  0012EA  C0AF  F01C         	movff	___ftdiv@exp,___ftpack@exp
  2713  0012EE  C0B0  F01D         	movff	___ftdiv@sign,___ftpack@sign
  2714  0012F2  EC22  F00B         	call	___ftpack	;wreg free
  2715  0012F6  C019  F0A2         	movff	?___ftpack,?___ftdiv
  2716  0012FA  C01A  F0A3         	movff	?___ftpack+1,?___ftdiv+1
  2717  0012FE  C01B  F0A4         	movff	?___ftpack+2,?___ftdiv+2
  2718  001302  0012               	return	
  2719  001304  0012               	return		;funcret
  2720  001306                     __end_of___ftdiv:
  2721                           	opt stack 0
  2722                           tblptru	equ	0xFF8
  2723                           tblptrh	equ	0xFF7
  2724                           tblptrl	equ	0xFF6
  2725                           tablat	equ	0xFF5
  2726                           prodh	equ	0xFF4
  2727                           prodl	equ	0xFF3
  2728                           intcon	equ	0xFF2
  2729                           postinc0	equ	0xFEE
  2730                           wreg	equ	0xFE8
  2731                           indf1	equ	0xFE7
  2732                           fsr1h	equ	0xFE2
  2733                           fsr1l	equ	0xFE1
  2734                           indf2	equ	0xFDF
  2735                           fsr2h	equ	0xFDA
  2736                           fsr2l	equ	0xFD9
  2737                           status	equ	0xFD8
  2738                           
  2739 ;; *************** function ___ftpack *****************
  2740 ;; Defined at:
  2741 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;  arg             3   24[COMRAM] unsigned um
  2744 ;;  exp             1   27[COMRAM] unsigned char 
  2745 ;;  sign            1   28[COMRAM] unsigned char 
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;		None
  2748 ;; Return value:  Size  Location     Type
  2749 ;;                  3   24[COMRAM] float 
  2750 ;; Registers used:
  2751 ;;		wreg, status,2, status,0
  2752 ;; Tracked objects:
  2753 ;;		On entry : 0/0
  2754 ;;		On exit  : 0/0
  2755 ;;		Unchanged: 0/0
  2756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2757 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2759 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2760 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2761 ;;Total ram usage:        8 bytes
  2762 ;; Hardware stack levels used:    1
  2763 ;; Hardware stack levels required when called:    3
  2764 ;; This function calls:
  2765 ;;		Nothing
  2766 ;; This function is called by:
  2767 ;;		___ftdiv
  2768 ;;		___ftmul
  2769 ;;		___lwtoft
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           	psect	text17
  2774  001644                     __ptext17:
  2775                           	opt stack 0
  2776  001644                     ___ftpack:
  2777                           	opt stack 24
  2778                           
  2779                           ;incstack = 0
  2780  001644  501C               	movf	___ftpack@exp,w,c
  2781  001646  B4D8               	btfsc	status,2,c
  2782  001648  D005               	goto	l2769
  2783  00164A  5019               	movf	___ftpack@arg,w,c
  2784  00164C  101A               	iorwf	___ftpack@arg+1,w,c
  2785  00164E  101B               	iorwf	___ftpack@arg+2,w,c
  2786  001650  A4D8               	btfss	status,2,c
  2787  001652  D00E               	goto	l2775
  2788  001654                     l2769:
  2789  001654  0E00               	movlw	0
  2790  001656  6E19               	movwf	?___ftpack,c
  2791  001658  0E00               	movlw	0
  2792  00165A  6E1A               	movwf	?___ftpack+1,c
  2793  00165C  0E00               	movlw	0
  2794  00165E  6E1B               	movwf	?___ftpack+2,c
  2795  001660  0012               	return	
  2796  001662  D006               	goto	l2775
  2797  001664                     l2773:
  2798  001664  2A1C               	incf	___ftpack@exp,f,c
  2799  001666  90D8               	bcf	status,0,c
  2800  001668  321B               	rrcf	___ftpack@arg+2,f,c
  2801  00166A  321A               	rrcf	___ftpack@arg+1,f,c
  2802  00166C  3219               	rrcf	___ftpack@arg,f,c
  2803  00166E  D000               	goto	l2775
  2804  001670                     l2775:
  2805  001670  0E00               	movlw	0
  2806  001672  1419               	andwf	___ftpack@arg,w,c
  2807  001674  6E1E               	movwf	??___ftpack& (0+255),c
  2808  001676  0E00               	movlw	0
  2809  001678  141A               	andwf	___ftpack@arg+1,w,c
  2810  00167A  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  2811  00167C  0EFE               	movlw	254
  2812  00167E  141B               	andwf	___ftpack@arg+2,w,c
  2813  001680  6E20               	movwf	(??___ftpack+2)& (0+255),c
  2814  001682  501E               	movf	??___ftpack,w,c
  2815  001684  101F               	iorwf	??___ftpack+1,w,c
  2816  001686  1020               	iorwf	??___ftpack+2,w,c
  2817  001688  B4D8               	btfsc	status,2,c
  2818  00168A  D00E               	goto	l2781
  2819  00168C  D7EB               	goto	l2773
  2820  00168E  D00C               	goto	l2781
  2821  001690                     l2777:
  2822  001690  2A1C               	incf	___ftpack@exp,f,c
  2823  001692  0E01               	movlw	1
  2824  001694  2619               	addwf	___ftpack@arg,f,c
  2825  001696  0E00               	movlw	0
  2826  001698  221A               	addwfc	___ftpack@arg+1,f,c
  2827  00169A  0E00               	movlw	0
  2828  00169C  221B               	addwfc	___ftpack@arg+2,f,c
  2829  00169E  90D8               	bcf	status,0,c
  2830  0016A0  321B               	rrcf	___ftpack@arg+2,f,c
  2831  0016A2  321A               	rrcf	___ftpack@arg+1,f,c
  2832  0016A4  3219               	rrcf	___ftpack@arg,f,c
  2833  0016A6  D000               	goto	l2781
  2834  0016A8                     l2781:
  2835  0016A8  0E00               	movlw	0
  2836  0016AA  1419               	andwf	___ftpack@arg,w,c
  2837  0016AC  6E1E               	movwf	??___ftpack& (0+255),c
  2838  0016AE  0E00               	movlw	0
  2839  0016B0  141A               	andwf	___ftpack@arg+1,w,c
  2840  0016B2  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  2841  0016B4  0EFF               	movlw	255
  2842  0016B6  141B               	andwf	___ftpack@arg+2,w,c
  2843  0016B8  6E20               	movwf	(??___ftpack+2)& (0+255),c
  2844  0016BA  501E               	movf	??___ftpack,w,c
  2845  0016BC  101F               	iorwf	??___ftpack+1,w,c
  2846  0016BE  1020               	iorwf	??___ftpack+2,w,c
  2847  0016C0  B4D8               	btfsc	status,2,c
  2848  0016C2  D008               	goto	l2785
  2849  0016C4  D7E5               	goto	l2777
  2850  0016C6  D006               	goto	l2785
  2851  0016C8                     l2783:
  2852  0016C8  061C               	decf	___ftpack@exp,f,c
  2853  0016CA  90D8               	bcf	status,0,c
  2854  0016CC  3619               	rlcf	___ftpack@arg,f,c
  2855  0016CE  361A               	rlcf	___ftpack@arg+1,f,c
  2856  0016D0  361B               	rlcf	___ftpack@arg+2,f,c
  2857  0016D2  D000               	goto	l2785
  2858  0016D4                     l2785:
  2859  0016D4  BE1A               	btfsc	___ftpack@arg+1,7,c
  2860  0016D6  D004               	goto	l807
  2861  0016D8  0E02               	movlw	2
  2862  0016DA  601C               	cpfslt	___ftpack@exp,c
  2863  0016DC  D7F5               	goto	l2783
  2864  0016DE  D000               	goto	l807
  2865  0016E0                     l807:
  2866  0016E0  B01C               	btfsc	___ftpack@exp,0,c
  2867  0016E2  D002               	goto	l2791
  2868  0016E4  9E1A               	bcf	___ftpack@arg+1,7,c
  2869  0016E6  D000               	goto	l2791
  2870  0016E8                     l2791:
  2871  0016E8  90D8               	bcf	status,0,c
  2872  0016EA  321C               	rrcf	___ftpack@exp,f,c
  2873  0016EC  501C               	movf	___ftpack@exp,w,c
  2874  0016EE  121B               	iorwf	___ftpack@arg+2,f,c
  2875  0016F0  501D               	movf	___ftpack@sign,w,c
  2876  0016F2  B4D8               	btfsc	status,2,c
  2877  0016F4  D002               	goto	l2797
  2878  0016F6  8E1B               	bsf	___ftpack@arg+2,7,c
  2879  0016F8  D000               	goto	l2797
  2880  0016FA                     l2797:
  2881  0016FA  C019  F019         	movff	___ftpack@arg,?___ftpack
  2882  0016FE  C01A  F01A         	movff	___ftpack@arg+1,?___ftpack+1
  2883  001702  C01B  F01B         	movff	___ftpack@arg+2,?___ftpack+2
  2884  001706  0012               	return	
  2885  001708  0012               	return		;funcret
  2886  00170A                     __end_of___ftpack:
  2887                           	opt stack 0
  2888                           tblptru	equ	0xFF8
  2889                           tblptrh	equ	0xFF7
  2890                           tblptrl	equ	0xFF6
  2891                           tablat	equ	0xFF5
  2892                           prodh	equ	0xFF4
  2893                           prodl	equ	0xFF3
  2894                           intcon	equ	0xFF2
  2895                           postinc0	equ	0xFEE
  2896                           wreg	equ	0xFE8
  2897                           indf1	equ	0xFE7
  2898                           fsr1h	equ	0xFE2
  2899                           fsr1l	equ	0xFE1
  2900                           indf2	equ	0xFDF
  2901                           fsr2h	equ	0xFDA
  2902                           fsr2l	equ	0xFD9
  2903                           status	equ	0xFD8
  2904                           
  2905 ;; *************** function _ReadADC *****************
  2906 ;; Defined at:
  2907 ;;		line 24 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;		None
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;		None
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  2   24[COMRAM] int 
  2914 ;; Registers used:
  2915 ;;		wreg, status,2
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2921 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2923 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2924 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2925 ;;Total ram usage:        4 bytes
  2926 ;; Hardware stack levels used:    1
  2927 ;; Hardware stack levels required when called:    3
  2928 ;; This function calls:
  2929 ;;		Nothing
  2930 ;; This function is called by:
  2931 ;;		_Get_ADC6
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           	psect	text18
  2936  001F88                     __ptext18:
  2937                           	opt stack 0
  2938  001F88                     _ReadADC:
  2939                           	opt stack 25
  2940                           
  2941                           ;incstack = 0
  2942  001F88  50C4               	movf	4036,w,c	;volatile
  2943  001F8A  6E1B               	movwf	??_ReadADC& (0+255),c
  2944  001F8C  50C3               	movf	4035,w,c	;volatile
  2945  001F8E  6E19               	movwf	?_ReadADC,c
  2946  001F90  C01B  F01A         	movff	??_ReadADC,?_ReadADC+1
  2947  001F94  0012               	return	
  2948  001F96  0012               	return		;funcret
  2949  001F98                     __end_of_ReadADC:
  2950                           	opt stack 0
  2951                           tblptru	equ	0xFF8
  2952                           tblptrh	equ	0xFF7
  2953                           tblptrl	equ	0xFF6
  2954                           tablat	equ	0xFF5
  2955                           prodh	equ	0xFF4
  2956                           prodl	equ	0xFF3
  2957                           intcon	equ	0xFF2
  2958                           postinc0	equ	0xFEE
  2959                           wreg	equ	0xFE8
  2960                           indf1	equ	0xFE7
  2961                           fsr1h	equ	0xFE2
  2962                           fsr1l	equ	0xFE1
  2963                           indf2	equ	0xFDF
  2964                           fsr2h	equ	0xFDA
  2965                           fsr2l	equ	0xFD9
  2966                           status	equ	0xFD8
  2967                           
  2968 ;; *************** function _ConvertADC *****************
  2969 ;; Defined at:
  2970 ;;		line 22 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  2971 ;; Parameters:    Size  Location     Type
  2972 ;;		None
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;		None
  2975 ;; Return value:  Size  Location     Type
  2976 ;;		None               void
  2977 ;; Registers used:
  2978 ;;		None
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2988 ;;Total ram usage:        0 bytes
  2989 ;; Hardware stack levels used:    1
  2990 ;; Hardware stack levels required when called:    3
  2991 ;; This function calls:
  2992 ;;		Nothing
  2993 ;; This function is called by:
  2994 ;;		_Get_ADC6
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           	psect	text19
  2999  001FBC                     __ptext19:
  3000                           	opt stack 0
  3001  001FBC                     _ConvertADC:
  3002                           	opt stack 25
  3003                           
  3004                           ;incstack = 0
  3005  001FBC  82C2               	bsf	4034,1,c	;volatile
  3006  001FBE  0012               	return		;funcret
  3007  001FC0                     __end_of_ConvertADC:
  3008                           	opt stack 0
  3009                           tblptru	equ	0xFF8
  3010                           tblptrh	equ	0xFF7
  3011                           tblptrl	equ	0xFF6
  3012                           tablat	equ	0xFF5
  3013                           prodh	equ	0xFF4
  3014                           prodl	equ	0xFF3
  3015                           intcon	equ	0xFF2
  3016                           postinc0	equ	0xFEE
  3017                           wreg	equ	0xFE8
  3018                           indf1	equ	0xFE7
  3019                           fsr1h	equ	0xFE2
  3020                           fsr1l	equ	0xFE1
  3021                           indf2	equ	0xFDF
  3022                           fsr2h	equ	0xFDA
  3023                           fsr2l	equ	0xFD9
  3024                           status	equ	0xFD8
  3025                           
  3026 ;; *************** function _BusyADC *****************
  3027 ;; Defined at:
  3028 ;;		line 26 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;		None
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;		None
  3033 ;; Return value:  Size  Location     Type
  3034 ;;                  1    wreg      unsigned char 
  3035 ;; Registers used:
  3036 ;;		wreg
  3037 ;; Tracked objects:
  3038 ;;		On entry : 0/0
  3039 ;;		On exit  : 0/0
  3040 ;;		Unchanged: 0/0
  3041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3046 ;;Total ram usage:        0 bytes
  3047 ;; Hardware stack levels used:    1
  3048 ;; Hardware stack levels required when called:    3
  3049 ;; This function calls:
  3050 ;;		Nothing
  3051 ;; This function is called by:
  3052 ;;		_Get_ADC6
  3053 ;; This function uses a non-reentrant model
  3054 ;;
  3055                           
  3056                           	psect	text20
  3057  001F98                     __ptext20:
  3058                           	opt stack 0
  3059  001F98                     _BusyADC:
  3060                           	opt stack 25
  3061                           
  3062                           ;incstack = 0
  3063  001F98  A2C2               	btfss	4034,1,c	;volatile
  3064  001F9A  D002               	goto	u2710
  3065  001F9C  0E01               	movlw	1
  3066  001F9E  0012               	return	
  3067  001FA0                     u2710:
  3068  001FA0  0E00               	movlw	0
  3069  001FA2  0012               	return	
  3070  001FA4  0012               	return		;funcret
  3071  001FA6                     __end_of_BusyADC:
  3072                           	opt stack 0
  3073                           tblptru	equ	0xFF8
  3074                           tblptrh	equ	0xFF7
  3075                           tblptrl	equ	0xFF6
  3076                           tablat	equ	0xFF5
  3077                           prodh	equ	0xFF4
  3078                           prodl	equ	0xFF3
  3079                           intcon	equ	0xFF2
  3080                           postinc0	equ	0xFEE
  3081                           wreg	equ	0xFE8
  3082                           indf1	equ	0xFE7
  3083                           fsr1h	equ	0xFE2
  3084                           fsr1l	equ	0xFE1
  3085                           indf2	equ	0xFDF
  3086                           fsr2h	equ	0xFDA
  3087                           fsr2l	equ	0xFD9
  3088                           status	equ	0xFD8
  3089                           
  3090 ;; *************** function _RS485_Init *****************
  3091 ;; Defined at:
  3092 ;;		line 45 in file "_01_USER/My_USART.c"
  3093 ;; Parameters:    Size  Location     Type
  3094 ;;		None
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;		None
  3097 ;; Return value:  Size  Location     Type
  3098 ;;		None               void
  3099 ;; Registers used:
  3100 ;;		wreg, status,2, status,0, cstack
  3101 ;; Tracked objects:
  3102 ;;		On entry : 0/0
  3103 ;;		On exit  : 0/0
  3104 ;;		Unchanged: 0/0
  3105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3110 ;;Total ram usage:        0 bytes
  3111 ;; Hardware stack levels used:    1
  3112 ;; Hardware stack levels required when called:    4
  3113 ;; This function calls:
  3114 ;;		_Open2USART
  3115 ;; This function is called by:
  3116 ;;		_main
  3117 ;; This function uses a non-reentrant model
  3118 ;;
  3119                           
  3120                           	psect	text21
  3121  001F3E                     __ptext21:
  3122                           	opt stack 0
  3123  001F3E                     _RS485_Init:
  3124                           	opt stack 26
  3125                           
  3126                           ;My_USART.c: 47: Open2USART( 0b01111111 &
  3127                           ;My_USART.c: 48: 0b11111111 &
  3128                           ;My_USART.c: 49: 0b11111110 &
  3129                           ;My_USART.c: 50: 0b11111101 &
  3130                           ;My_USART.c: 51: 0b11111111 &
  3131                           ;My_USART.c: 52: 0b11101111
  3132                           ;My_USART.c: 53: ,
  3133                           ;My_USART.c: 54: 12
  3134                           ;My_USART.c: 55: );
  3135                           
  3136                           ;incstack = 0
  3137  001F3E  0E00               	movlw	0
  3138  001F40  6E1A               	movwf	Open2USART@spbrg+1,c
  3139  001F42  0E0C               	movlw	12
  3140  001F44  6E19               	movwf	Open2USART@spbrg,c
  3141  001F46  0E6C               	movlw	108
  3142  001F48  EC6D  F00C         	call	_Open2USART
  3143                           
  3144                           ;My_USART.c: 57: TRISGbits.TRISG1 = 1;
  3145  001F4C  8298               	bsf	3992,1,c	;volatile
  3146                           
  3147                           ;My_USART.c: 58: TRISGbits.TRISG2 = 0;
  3148  001F4E  9498               	bcf	3992,2,c	;volatile
  3149                           
  3150                           ;My_USART.c: 59: TRISGbits.TRISG3 = 0;
  3151  001F50  9698               	bcf	3992,3,c	;volatile
  3152                           
  3153                           ;My_USART.c: 60: RG3 = 1;
  3154  001F52  8686               	bsf	3974,3,c	;volatile
  3155                           
  3156                           ;My_USART.c: 61: ANCON2 &= 0XF1;
  3157  001F54  0EF1               	movlw	241
  3158  001F56  010F               	movlb	15	; () banked
  3159  001F58  1723               	andwf	35,f,b	;volatile
  3160                           
  3161                           ; BSR set to: 15
  3162  001F5A  0012               	return		;funcret
  3163  001F5C                     __end_of_RS485_Init:
  3164                           	opt stack 0
  3165                           tblptru	equ	0xFF8
  3166                           tblptrh	equ	0xFF7
  3167                           tblptrl	equ	0xFF6
  3168                           tablat	equ	0xFF5
  3169                           prodh	equ	0xFF4
  3170                           prodl	equ	0xFF3
  3171                           intcon	equ	0xFF2
  3172                           postinc0	equ	0xFEE
  3173                           wreg	equ	0xFE8
  3174                           indf1	equ	0xFE7
  3175                           fsr1h	equ	0xFE2
  3176                           fsr1l	equ	0xFE1
  3177                           indf2	equ	0xFDF
  3178                           fsr2h	equ	0xFDA
  3179                           fsr2l	equ	0xFD9
  3180                           status	equ	0xFD8
  3181                           
  3182 ;; *************** function _Open2USART *****************
  3183 ;; Defined at:
  3184 ;;		line 118 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u2open.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;  config          1    wreg     unsigned char 
  3187 ;;  spbrg           2   24[COMRAM] unsigned int 
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;  config          1   26[COMRAM] unsigned char 
  3190 ;; Return value:  Size  Location     Type
  3191 ;;		None               void
  3192 ;; Registers used:
  3193 ;;		wreg, status,2
  3194 ;; Tracked objects:
  3195 ;;		On entry : 0/0
  3196 ;;		On exit  : 0/0
  3197 ;;		Unchanged: 0/0
  3198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3199 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3200 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3202 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3203 ;;Total ram usage:        3 bytes
  3204 ;; Hardware stack levels used:    1
  3205 ;; Hardware stack levels required when called:    3
  3206 ;; This function calls:
  3207 ;;		Nothing
  3208 ;; This function is called by:
  3209 ;;		_RS485_Init
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212                           
  3213                           	psect	text22
  3214  0018DA                     __ptext22:
  3215                           	opt stack 0
  3216  0018DA                     _Open2USART:
  3217                           	opt stack 26
  3218                           
  3219                           ; BSR set to: 15
  3220                           ;incstack = 0
  3221                           ;Open2USART@config stored from wreg
  3222  0018DA  6E1B               	movwf	Open2USART@config,c
  3223  0018DC  0E00               	movlw	0
  3224  0018DE  010F               	movlb	15	; () banked
  3225  0018E0  6F21               	movwf	33,b	;volatile
  3226  0018E2  0E00               	movlw	0
  3227  0018E4  010F               	movlb	15	; () banked
  3228  0018E6  6F22               	movwf	34,b	;volatile
  3229                           
  3230                           ; BSR set to: 15
  3231  0018E8  A01B               	btfss	Open2USART@config,0,c
  3232  0018EA  D003               	goto	l2969
  3233                           
  3234                           ; BSR set to: 15
  3235  0018EC  010F               	movlb	15	; () banked
  3236  0018EE  8921               	bsf	33,4,b	;volatile
  3237  0018F0  D000               	goto	l2969
  3238  0018F2                     l2969:
  3239                           
  3240                           ; BSR set to: 15
  3241  0018F2  A21B               	btfss	Open2USART@config,1,c
  3242  0018F4  D005               	goto	l2973
  3243                           
  3244                           ; BSR set to: 15
  3245  0018F6  010F               	movlb	15	; () banked
  3246  0018F8  8D21               	bsf	33,6,b	;volatile
  3247  0018FA  010F               	movlb	15	; () banked
  3248  0018FC  8D22               	bsf	34,6,b	;volatile
  3249  0018FE  D000               	goto	l2973
  3250  001900                     l2973:
  3251                           
  3252                           ; BSR set to: 15
  3253  001900  A41B               	btfss	Open2USART@config,2,c
  3254  001902  D003               	goto	l2977
  3255                           
  3256                           ; BSR set to: 15
  3257  001904  010F               	movlb	15	; () banked
  3258  001906  8F21               	bsf	33,7,b	;volatile
  3259  001908  D000               	goto	l2977
  3260  00190A                     l2977:
  3261                           
  3262                           ; BSR set to: 15
  3263  00190A  A61B               	btfss	Open2USART@config,3,c
  3264  00190C  D003               	goto	l476
  3265                           
  3266                           ; BSR set to: 15
  3267  00190E  010F               	movlb	15	; () banked
  3268  001910  8922               	bsf	34,4,b	;volatile
  3269  001912  D003               	goto	l2981
  3270  001914                     l476:
  3271                           
  3272                           ; BSR set to: 15
  3273  001914  010F               	movlb	15	; () banked
  3274  001916  8B22               	bsf	34,5,b	;volatile
  3275  001918  D000               	goto	l2981
  3276  00191A                     l2981:
  3277                           
  3278                           ; BSR set to: 15
  3279  00191A  A81B               	btfss	Open2USART@config,4,c
  3280  00191C  D003               	goto	l478
  3281                           
  3282                           ; BSR set to: 15
  3283  00191E  010F               	movlb	15	; () banked
  3284  001920  8521               	bsf	33,2,b	;volatile
  3285  001922  D003               	goto	l2985
  3286  001924                     l478:
  3287                           
  3288                           ; BSR set to: 15
  3289  001924  010F               	movlb	15	; () banked
  3290  001926  9521               	bcf	33,2,b	;volatile
  3291  001928  D000               	goto	l2985
  3292  00192A                     l2985:
  3293                           
  3294                           ; BSR set to: 15
  3295  00192A  AA1B               	btfss	Open2USART@config,5,c
  3296  00192C  D003               	goto	l2989
  3297                           
  3298                           ; BSR set to: 15
  3299  00192E  010F               	movlb	15	; () banked
  3300  001930  8722               	bsf	34,3,b	;volatile
  3301  001932  D000               	goto	l2989
  3302  001934                     l2989:
  3303                           
  3304                           ; BSR set to: 15
  3305  001934  AC1B               	btfss	Open2USART@config,6,c
  3306  001936  D002               	goto	l481
  3307                           
  3308                           ; BSR set to: 15
  3309  001938  8AA3               	bsf	4003,5,c	;volatile
  3310  00193A  D002               	goto	l2993
  3311  00193C                     l481:
  3312                           
  3313                           ; BSR set to: 15
  3314  00193C  9AA3               	bcf	4003,5,c	;volatile
  3315  00193E  D000               	goto	l2993
  3316  001940                     l2993:
  3317                           
  3318                           ; BSR set to: 15
  3319  001940  AE1B               	btfss	Open2USART@config,7,c
  3320  001942  D002               	goto	l483
  3321                           
  3322                           ; BSR set to: 15
  3323  001944  88A3               	bsf	4003,4,c	;volatile
  3324  001946  D001               	goto	l484
  3325  001948                     l483:
  3326                           
  3327                           ; BSR set to: 15
  3328  001948  98A3               	bcf	4003,4,c	;volatile
  3329  00194A                     l484:
  3330                           
  3331                           ; BSR set to: 15
  3332  00194A  C019  FF1E         	movff	Open2USART@spbrg,3870	;volatile
  3333                           
  3334                           ; BSR set to: 15
  3335  00194E  501A               	movf	Open2USART@spbrg+1,w,c
  3336  001950  010F               	movlb	15	; () banked
  3337  001952  6F1F               	movwf	31,b	;volatile
  3338                           
  3339                           ; BSR set to: 15
  3340  001954  010F               	movlb	15	; () banked
  3341  001956  8B21               	bsf	33,5,b	;volatile
  3342                           
  3343                           ; BSR set to: 15
  3344  001958  010F               	movlb	15	; () banked
  3345  00195A  8F22               	bsf	34,7,b	;volatile
  3346                           
  3347                           ; BSR set to: 15
  3348  00195C  0012               	return		;funcret
  3349  00195E                     __end_of_Open2USART:
  3350                           	opt stack 0
  3351                           tblptru	equ	0xFF8
  3352                           tblptrh	equ	0xFF7
  3353                           tblptrl	equ	0xFF6
  3354                           tablat	equ	0xFF5
  3355                           prodh	equ	0xFF4
  3356                           prodl	equ	0xFF3
  3357                           intcon	equ	0xFF2
  3358                           postinc0	equ	0xFEE
  3359                           wreg	equ	0xFE8
  3360                           indf1	equ	0xFE7
  3361                           fsr1h	equ	0xFE2
  3362                           fsr1l	equ	0xFE1
  3363                           indf2	equ	0xFDF
  3364                           fsr2h	equ	0xFDA
  3365                           fsr2l	equ	0xFD9
  3366                           status	equ	0xFD8
  3367                           
  3368 ;; *************** function _Key_Init *****************
  3369 ;; Defined at:
  3370 ;;		line 39 in file "_01_USER/Key.c"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;		None
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;		None
  3375 ;; Return value:  Size  Location     Type
  3376 ;;		None               void
  3377 ;; Registers used:
  3378 ;;		wreg, status,2, status,0
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3388 ;;Total ram usage:        0 bytes
  3389 ;; Hardware stack levels used:    1
  3390 ;; Hardware stack levels required when called:    3
  3391 ;; This function calls:
  3392 ;;		Nothing
  3393 ;; This function is called by:
  3394 ;;		_main
  3395 ;; This function uses a non-reentrant model
  3396 ;;
  3397                           
  3398                           	psect	text23
  3399  001FB2                     __ptext23:
  3400                           	opt stack 0
  3401  001FB2                     _Key_Init:
  3402                           	opt stack 27
  3403                           
  3404                           ;Key.c: 41: TRISE |= 0x1e;
  3405                           
  3406                           ; BSR set to: 15
  3407                           ;incstack = 0
  3408  001FB2  0E1E               	movlw	30
  3409  001FB4  1296               	iorwf	3990,f,c	;volatile
  3410                           
  3411                           ;Key.c: 42: TRISD |= 0xc0;
  3412  001FB6  0EC0               	movlw	192
  3413  001FB8  1295               	iorwf	3989,f,c	;volatile
  3414  001FBA  0012               	return		;funcret
  3415  001FBC                     __end_of_Key_Init:
  3416                           	opt stack 0
  3417                           tblptru	equ	0xFF8
  3418                           tblptrh	equ	0xFF7
  3419                           tblptrl	equ	0xFF6
  3420                           tablat	equ	0xFF5
  3421                           prodh	equ	0xFF4
  3422                           prodl	equ	0xFF3
  3423                           intcon	equ	0xFF2
  3424                           postinc0	equ	0xFEE
  3425                           wreg	equ	0xFE8
  3426                           indf1	equ	0xFE7
  3427                           fsr1h	equ	0xFE2
  3428                           fsr1l	equ	0xFE1
  3429                           indf2	equ	0xFDF
  3430                           fsr2h	equ	0xFDA
  3431                           fsr2l	equ	0xFD9
  3432                           status	equ	0xFD8
  3433                           
  3434 ;; *************** function _Init_TM1640 *****************
  3435 ;; Defined at:
  3436 ;;		line 119 in file "_01_USER/TM1640.c"
  3437 ;; Parameters:    Size  Location     Type
  3438 ;;		None
  3439 ;; Auto vars:     Size  Location     Type
  3440 ;;		None
  3441 ;; Return value:  Size  Location     Type
  3442 ;;		None               void
  3443 ;; Registers used:
  3444 ;;		wreg, status,2, status,0, cstack
  3445 ;; Tracked objects:
  3446 ;;		On entry : 0/0
  3447 ;;		On exit  : 0/0
  3448 ;;		Unchanged: 0/0
  3449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3454 ;;Total ram usage:        0 bytes
  3455 ;; Hardware stack levels used:    1
  3456 ;; Hardware stack levels required when called:    5
  3457 ;; This function calls:
  3458 ;;		_TM1640_Start
  3459 ;;		_TM1640_Stop
  3460 ;;		_TM1640_Writer_Byte
  3461 ;; This function is called by:
  3462 ;;		_main
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466                           	psect	text24
  3467  001E8A                     __ptext24:
  3468                           	opt stack 0
  3469  001E8A                     _Init_TM1640:
  3470                           	opt stack 25
  3471                           
  3472                           ;TM1640.c: 121: TRISCbits.TRISC3 = 0;
  3473                           
  3474                           ;incstack = 0
  3475  001E8A  9694               	bcf	3988,3,c	;volatile
  3476                           
  3477                           ;TM1640.c: 122: TRISCbits.TRISC4 = 0;
  3478  001E8C  9894               	bcf	3988,4,c	;volatile
  3479                           
  3480                           ;TM1640.c: 123: TM1640_Stop();
  3481  001E8E  EC6A  F00F         	call	_TM1640_Stop	;wreg free
  3482                           
  3483                           ;TM1640.c: 125: TM1640_Start();
  3484  001E92  EC7C  F00F         	call	_TM1640_Start	;wreg free
  3485                           
  3486                           ;TM1640.c: 126: TM1640_Writer_Byte(0x44);
  3487  001E96  0E44               	movlw	68
  3488  001E98  EC4D  F00E         	call	_TM1640_Writer_Byte
  3489                           
  3490                           ;TM1640.c: 127: TM1640_Stop();
  3491  001E9C  EC6A  F00F         	call	_TM1640_Stop	;wreg free
  3492                           
  3493                           ;TM1640.c: 129: TM1640_Start();
  3494  001EA0  EC7C  F00F         	call	_TM1640_Start	;wreg free
  3495                           
  3496                           ;TM1640.c: 130: TM1640_Writer_Byte(0x8F);
  3497  001EA4  0E8F               	movlw	143
  3498  001EA6  EC4D  F00E         	call	_TM1640_Writer_Byte
  3499                           
  3500                           ;TM1640.c: 131: TM1640_Stop();
  3501  001EAA  EC6A  F00F         	call	_TM1640_Stop	;wreg free
  3502  001EAE  0012               	return		;funcret
  3503  001EB0                     __end_of_Init_TM1640:
  3504                           	opt stack 0
  3505                           tblptru	equ	0xFF8
  3506                           tblptrh	equ	0xFF7
  3507                           tblptrl	equ	0xFF6
  3508                           tablat	equ	0xFF5
  3509                           prodh	equ	0xFF4
  3510                           prodl	equ	0xFF3
  3511                           intcon	equ	0xFF2
  3512                           postinc0	equ	0xFEE
  3513                           wreg	equ	0xFE8
  3514                           indf1	equ	0xFE7
  3515                           fsr1h	equ	0xFE2
  3516                           fsr1l	equ	0xFE1
  3517                           indf2	equ	0xFDF
  3518                           fsr2h	equ	0xFDA
  3519                           fsr2l	equ	0xFD9
  3520                           status	equ	0xFD8
  3521                           
  3522 ;; *************** function _TM1640_Writer_Byte *****************
  3523 ;; Defined at:
  3524 ;;		line 77 in file "_01_USER/TM1640.c"
  3525 ;; Parameters:    Size  Location     Type
  3526 ;;  Date            1    wreg     const unsigned char 
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;  Date            1   26[COMRAM] const unsigned char 
  3529 ;;  mask            1   27[COMRAM] unsigned char 
  3530 ;; Return value:  Size  Location     Type
  3531 ;;		None               void
  3532 ;; Registers used:
  3533 ;;		wreg, status,2, status,0, cstack
  3534 ;; Tracked objects:
  3535 ;;		On entry : 0/0
  3536 ;;		On exit  : 0/0
  3537 ;;		Unchanged: 0/0
  3538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3540 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3542 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3543 ;;Total ram usage:        2 bytes
  3544 ;; Hardware stack levels used:    1
  3545 ;; Hardware stack levels required when called:    4
  3546 ;; This function calls:
  3547 ;;		_TM1640_Delay
  3548 ;; This function is called by:
  3549 ;;		_TM1640_Writer_Dates
  3550 ;;		_Init_TM1640
  3551 ;;		_Open_Display
  3552 ;;		_Disable_Display
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556                           	psect	text25
  3557  001C9A                     __ptext25:
  3558                           	opt stack 0
  3559  001C9A                     _TM1640_Writer_Byte:
  3560                           	opt stack 23
  3561                           
  3562                           ;incstack = 0
  3563                           ;TM1640_Writer_Byte@Date stored from wreg
  3564  001C9A  6E1B               	movwf	TM1640_Writer_Byte@Date,c
  3565                           
  3566                           ;TM1640.c: 79: unsigned char mask;
  3567                           ;TM1640.c: 81: for(mask=0x01; mask; mask<<=1)
  3568  001C9C  0E01               	movlw	1
  3569  001C9E  6E1C               	movwf	TM1640_Writer_Byte@mask,c
  3570  001CA0  D017               	goto	l2757
  3571  001CA2                     l316:
  3572                           
  3573                           ;TM1640.c: 82: {
  3574                           ;TM1640.c: 83: RC3 = 0;
  3575  001CA2  9682               	bcf	3970,3,c	;volatile
  3576                           
  3577                           ;TM1640.c: 84: TM1640_Delay(1);
  3578  001CA4  0E01               	movlw	1
  3579  001CA6  ECAE  F00F         	call	_TM1640_Delay
  3580                           
  3581                           ;TM1640.c: 85: if(mask & Date)
  3582  001CAA  501C               	movf	TM1640_Writer_Byte@mask,w,c
  3583  001CAC  141B               	andwf	TM1640_Writer_Byte@Date,w,c
  3584  001CAE  0900               	iorlw	0
  3585  001CB0  B4D8               	btfsc	status,2,c
  3586  001CB2  D002               	goto	l317
  3587                           
  3588                           ;TM1640.c: 86: RC4 = 1;
  3589  001CB4  8882               	bsf	3970,4,c	;volatile
  3590  001CB6  D002               	goto	l2751
  3591  001CB8                     l317:
  3592                           
  3593                           ;TM1640.c: 87: else
  3594                           ;TM1640.c: 88: RC4 = 0;
  3595  001CB8  9882               	bcf	3970,4,c	;volatile
  3596  001CBA  D000               	goto	l2751
  3597  001CBC                     l2751:
  3598                           
  3599                           ;TM1640.c: 89: TM1640_Delay(1);
  3600  001CBC  0E01               	movlw	1
  3601  001CBE  ECAE  F00F         	call	_TM1640_Delay
  3602                           
  3603                           ;TM1640.c: 90: RC3 = 1;
  3604  001CC2  8682               	bsf	3970,3,c	;volatile
  3605                           
  3606                           ;TM1640.c: 91: TM1640_Delay(1);
  3607  001CC4  0E01               	movlw	1
  3608  001CC6  ECAE  F00F         	call	_TM1640_Delay
  3609  001CCA  90D8               	bcf	status,0,c
  3610  001CCC  361C               	rlcf	TM1640_Writer_Byte@mask,f,c
  3611  001CCE  D000               	goto	l2757
  3612  001CD0                     l2757:
  3613  001CD0  501C               	movf	TM1640_Writer_Byte@mask,w,c
  3614  001CD2  A4D8               	btfss	status,2,c
  3615  001CD4  D7E6               	goto	l316
  3616  001CD6  0012               	return		;funcret
  3617  001CD8                     __end_of_TM1640_Writer_Byte:
  3618                           	opt stack 0
  3619                           tblptru	equ	0xFF8
  3620                           tblptrh	equ	0xFF7
  3621                           tblptrl	equ	0xFF6
  3622                           tablat	equ	0xFF5
  3623                           prodh	equ	0xFF4
  3624                           prodl	equ	0xFF3
  3625                           intcon	equ	0xFF2
  3626                           postinc0	equ	0xFEE
  3627                           wreg	equ	0xFE8
  3628                           indf1	equ	0xFE7
  3629                           fsr1h	equ	0xFE2
  3630                           fsr1l	equ	0xFE1
  3631                           indf2	equ	0xFDF
  3632                           fsr2h	equ	0xFDA
  3633                           fsr2l	equ	0xFD9
  3634                           status	equ	0xFD8
  3635                           
  3636 ;; *************** function _TM1640_Stop *****************
  3637 ;; Defined at:
  3638 ;;		line 32 in file "_01_USER/TM1640.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;		None
  3641 ;; Auto vars:     Size  Location     Type
  3642 ;;		None
  3643 ;; Return value:  Size  Location     Type
  3644 ;;		None               void
  3645 ;; Registers used:
  3646 ;;		wreg, status,2, status,0, cstack
  3647 ;; Tracked objects:
  3648 ;;		On entry : 0/0
  3649 ;;		On exit  : 0/0
  3650 ;;		Unchanged: 0/0
  3651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3656 ;;Total ram usage:        0 bytes
  3657 ;; Hardware stack levels used:    1
  3658 ;; Hardware stack levels required when called:    4
  3659 ;; This function calls:
  3660 ;;		_TM1640_Delay
  3661 ;; This function is called by:
  3662 ;;		_TM1640_Writer_Dates
  3663 ;;		_Init_TM1640
  3664 ;;		_Open_Display
  3665 ;;		_Disable_Display
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669                           	psect	text26
  3670  001ED4                     __ptext26:
  3671                           	opt stack 0
  3672  001ED4                     _TM1640_Stop:
  3673                           	opt stack 23
  3674                           
  3675                           ;TM1640.c: 34: RC3 = 0;
  3676                           
  3677                           ;incstack = 0
  3678  001ED4  9682               	bcf	3970,3,c	;volatile
  3679                           
  3680                           ;TM1640.c: 35: TM1640_Delay(1);
  3681  001ED6  0E01               	movlw	1
  3682  001ED8  ECAE  F00F         	call	_TM1640_Delay
  3683                           
  3684                           ;TM1640.c: 36: RC4 = 0;
  3685  001EDC  9882               	bcf	3970,4,c	;volatile
  3686                           
  3687                           ;TM1640.c: 37: TM1640_Delay(1);
  3688  001EDE  0E01               	movlw	1
  3689  001EE0  ECAE  F00F         	call	_TM1640_Delay
  3690                           
  3691                           ;TM1640.c: 38: RC3 = 1;
  3692  001EE4  8682               	bsf	3970,3,c	;volatile
  3693                           
  3694                           ;TM1640.c: 39: TM1640_Delay(1);
  3695  001EE6  0E01               	movlw	1
  3696  001EE8  ECAE  F00F         	call	_TM1640_Delay
  3697                           
  3698                           ;TM1640.c: 40: RC4 = 1;
  3699  001EEC  8882               	bsf	3970,4,c	;volatile
  3700                           
  3701                           ;TM1640.c: 41: TM1640_Delay(1);
  3702  001EEE  0E01               	movlw	1
  3703  001EF0  ECAE  F00F         	call	_TM1640_Delay
  3704                           
  3705                           ;TM1640.c: 42: RC3 = 0;
  3706  001EF4  9682               	bcf	3970,3,c	;volatile
  3707  001EF6  0012               	return		;funcret
  3708  001EF8                     __end_of_TM1640_Stop:
  3709                           	opt stack 0
  3710                           tblptru	equ	0xFF8
  3711                           tblptrh	equ	0xFF7
  3712                           tblptrl	equ	0xFF6
  3713                           tablat	equ	0xFF5
  3714                           prodh	equ	0xFF4
  3715                           prodl	equ	0xFF3
  3716                           intcon	equ	0xFF2
  3717                           postinc0	equ	0xFEE
  3718                           wreg	equ	0xFE8
  3719                           indf1	equ	0xFE7
  3720                           fsr1h	equ	0xFE2
  3721                           fsr1l	equ	0xFE1
  3722                           indf2	equ	0xFDF
  3723                           fsr2h	equ	0xFDA
  3724                           fsr2l	equ	0xFD9
  3725                           status	equ	0xFD8
  3726                           
  3727 ;; *************** function _TM1640_Start *****************
  3728 ;; Defined at:
  3729 ;;		line 19 in file "_01_USER/TM1640.c"
  3730 ;; Parameters:    Size  Location     Type
  3731 ;;		None
  3732 ;; Auto vars:     Size  Location     Type
  3733 ;;		None
  3734 ;; Return value:  Size  Location     Type
  3735 ;;		None               void
  3736 ;; Registers used:
  3737 ;;		wreg, status,2, status,0, cstack
  3738 ;; Tracked objects:
  3739 ;;		On entry : 0/0
  3740 ;;		On exit  : 0/0
  3741 ;;		Unchanged: 0/0
  3742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3747 ;;Total ram usage:        0 bytes
  3748 ;; Hardware stack levels used:    1
  3749 ;; Hardware stack levels required when called:    4
  3750 ;; This function calls:
  3751 ;;		_TM1640_Delay
  3752 ;; This function is called by:
  3753 ;;		_TM1640_Writer_Dates
  3754 ;;		_Init_TM1640
  3755 ;;		_Open_Display
  3756 ;;		_Disable_Display
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759                           
  3760                           	psect	text27
  3761  001EF8                     __ptext27:
  3762                           	opt stack 0
  3763  001EF8                     _TM1640_Start:
  3764                           	opt stack 23
  3765                           
  3766                           ;TM1640.c: 21: RC3 = 0;
  3767                           
  3768                           ;incstack = 0
  3769  001EF8  9682               	bcf	3970,3,c	;volatile
  3770                           
  3771                           ;TM1640.c: 22: TM1640_Delay(1);
  3772  001EFA  0E01               	movlw	1
  3773  001EFC  ECAE  F00F         	call	_TM1640_Delay
  3774                           
  3775                           ;TM1640.c: 23: RC4 = 1;
  3776  001F00  8882               	bsf	3970,4,c	;volatile
  3777                           
  3778                           ;TM1640.c: 24: TM1640_Delay(1);
  3779  001F02  0E01               	movlw	1
  3780  001F04  ECAE  F00F         	call	_TM1640_Delay
  3781                           
  3782                           ;TM1640.c: 25: RC3 = 1;
  3783  001F08  8682               	bsf	3970,3,c	;volatile
  3784                           
  3785                           ;TM1640.c: 26: TM1640_Delay(1);
  3786  001F0A  0E01               	movlw	1
  3787  001F0C  ECAE  F00F         	call	_TM1640_Delay
  3788                           
  3789                           ;TM1640.c: 27: RC4 = 0;
  3790  001F10  9882               	bcf	3970,4,c	;volatile
  3791                           
  3792                           ;TM1640.c: 28: TM1640_Delay(1);
  3793  001F12  0E01               	movlw	1
  3794  001F14  ECAE  F00F         	call	_TM1640_Delay
  3795                           
  3796                           ;TM1640.c: 29: RC3 = 0;
  3797  001F18  9682               	bcf	3970,3,c	;volatile
  3798  001F1A  0012               	return		;funcret
  3799  001F1C                     __end_of_TM1640_Start:
  3800                           	opt stack 0
  3801                           tblptru	equ	0xFF8
  3802                           tblptrh	equ	0xFF7
  3803                           tblptrl	equ	0xFF6
  3804                           tablat	equ	0xFF5
  3805                           prodh	equ	0xFF4
  3806                           prodl	equ	0xFF3
  3807                           intcon	equ	0xFF2
  3808                           postinc0	equ	0xFEE
  3809                           wreg	equ	0xFE8
  3810                           indf1	equ	0xFE7
  3811                           fsr1h	equ	0xFE2
  3812                           fsr1l	equ	0xFE1
  3813                           indf2	equ	0xFDF
  3814                           fsr2h	equ	0xFDA
  3815                           fsr2l	equ	0xFD9
  3816                           status	equ	0xFD8
  3817                           
  3818 ;; *************** function _TM1640_Delay *****************
  3819 ;; Defined at:
  3820 ;;		line 109 in file "_01_USER/TM1640.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;  Time            1    wreg     unsigned char 
  3823 ;; Auto vars:     Size  Location     Type
  3824 ;;  Time            1   24[COMRAM] unsigned char 
  3825 ;;  i               1   25[COMRAM] unsigned char 
  3826 ;; Return value:  Size  Location     Type
  3827 ;;		None               void
  3828 ;; Registers used:
  3829 ;;		wreg, status,2, status,0
  3830 ;; Tracked objects:
  3831 ;;		On entry : 0/0
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3836 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3838 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3839 ;;Total ram usage:        2 bytes
  3840 ;; Hardware stack levels used:    1
  3841 ;; Hardware stack levels required when called:    3
  3842 ;; This function calls:
  3843 ;;		Nothing
  3844 ;; This function is called by:
  3845 ;;		_TM1640_Start
  3846 ;;		_TM1640_Stop
  3847 ;;		_TM1640_Writer_Byte
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850                           
  3851                           	psect	text28
  3852  001F5C                     __ptext28:
  3853                           	opt stack 0
  3854  001F5C                     _TM1640_Delay:
  3855                           	opt stack 23
  3856                           
  3857                           ;incstack = 0
  3858                           ;TM1640_Delay@Time stored from wreg
  3859  001F5C  6E19               	movwf	TM1640_Delay@Time,c
  3860  001F5E                     
  3861                           ;TM1640.c: 114: {
  3862                           ;TM1640.c: 115: for(i=0; i<10; ++i);
  3863  001F5E  0E00               	movlw	0
  3864  001F60  6E1A               	movwf	TM1640_Delay@i,c
  3865  001F62  D002               	goto	l2717
  3866  001F64  D004               	goto	l331
  3867  001F66                     l2715:
  3868  001F66  2A1A               	incf	TM1640_Delay@i,f,c
  3869  001F68                     l2717:
  3870  001F68  0E09               	movlw	9
  3871  001F6A  641A               	cpfsgt	TM1640_Delay@i,c
  3872  001F6C  D7FC               	goto	l2715
  3873  001F6E                     l331:
  3874                           
  3875                           ;TM1640.c: 116: }while(--Time);
  3876  001F6E  2E19               	decfsz	TM1640_Delay@Time,f,c
  3877  001F70  D7F6               	goto	l2709
  3878  001F72  0012               	return	
  3879  001F74  0012               	return		;funcret
  3880  001F76                     __end_of_TM1640_Delay:
  3881                           	opt stack 0
  3882                           tblptru	equ	0xFF8
  3883                           tblptrh	equ	0xFF7
  3884                           tblptrl	equ	0xFF6
  3885                           tablat	equ	0xFF5
  3886                           prodh	equ	0xFF4
  3887                           prodl	equ	0xFF3
  3888                           intcon	equ	0xFF2
  3889                           postinc0	equ	0xFEE
  3890                           wreg	equ	0xFE8
  3891                           indf1	equ	0xFE7
  3892                           fsr1h	equ	0xFE2
  3893                           fsr1l	equ	0xFE1
  3894                           indf2	equ	0xFDF
  3895                           fsr2h	equ	0xFDA
  3896                           fsr2l	equ	0xFD9
  3897                           status	equ	0xFD8
  3898                           
  3899 ;; *************** function _GPIO_Config *****************
  3900 ;; Defined at:
  3901 ;;		line 38 in file "_01_USER/GPIO.c"
  3902 ;; Parameters:    Size  Location     Type
  3903 ;;		None
  3904 ;; Auto vars:     Size  Location     Type
  3905 ;;		None
  3906 ;; Return value:  Size  Location     Type
  3907 ;;		None               void
  3908 ;; Registers used:
  3909 ;;		wreg, status,2, status,0
  3910 ;; Tracked objects:
  3911 ;;		On entry : 0/0
  3912 ;;		On exit  : 0/0
  3913 ;;		Unchanged: 0/0
  3914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3919 ;;Total ram usage:        0 bytes
  3920 ;; Hardware stack levels used:    1
  3921 ;; Hardware stack levels required when called:    3
  3922 ;; This function calls:
  3923 ;;		Nothing
  3924 ;; This function is called by:
  3925 ;;		_main
  3926 ;; This function uses a non-reentrant model
  3927 ;;
  3928                           
  3929                           	psect	text29
  3930  001FA6                     __ptext29:
  3931                           	opt stack 0
  3932  001FA6                     _GPIO_Config:
  3933                           	opt stack 27
  3934                           
  3935                           ;GPIO.c: 41: TRISE &= 0x1f;
  3936                           
  3937                           ;incstack = 0
  3938  001FA6  0E1F               	movlw	31
  3939  001FA8  1696               	andwf	3990,f,c	;volatile
  3940                           
  3941                           ;GPIO.c: 43: RE5 = 1;
  3942  001FAA  8A84               	bsf	3972,5,c	;volatile
  3943                           
  3944                           ;GPIO.c: 44: RE6 = 1;
  3945  001FAC  8C84               	bsf	3972,6,c	;volatile
  3946                           
  3947                           ;GPIO.c: 45: RE7 = 1;
  3948  001FAE  8E84               	bsf	3972,7,c	;volatile
  3949  001FB0  0012               	return		;funcret
  3950  001FB2                     __end_of_GPIO_Config:
  3951                           	opt stack 0
  3952                           tblptru	equ	0xFF8
  3953                           tblptrh	equ	0xFF7
  3954                           tblptrl	equ	0xFF6
  3955                           tablat	equ	0xFF5
  3956                           prodh	equ	0xFF4
  3957                           prodl	equ	0xFF3
  3958                           intcon	equ	0xFF2
  3959                           postinc0	equ	0xFEE
  3960                           wreg	equ	0xFE8
  3961                           indf1	equ	0xFE7
  3962                           fsr1h	equ	0xFE2
  3963                           fsr1l	equ	0xFE1
  3964                           indf2	equ	0xFDF
  3965                           fsr2h	equ	0xFDA
  3966                           fsr2l	equ	0xFD9
  3967                           status	equ	0xFD8
  3968                           
  3969 ;; *************** function _ADC6_Init *****************
  3970 ;; Defined at:
  3971 ;;		line 37 in file "_01_USER/My_ADC.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;		None
  3974 ;; Auto vars:     Size  Location     Type
  3975 ;;		None
  3976 ;; Return value:  Size  Location     Type
  3977 ;;		None               void
  3978 ;; Registers used:
  3979 ;;		wreg, status,2, status,0, cstack
  3980 ;; Tracked objects:
  3981 ;;		On entry : 0/0
  3982 ;;		On exit  : 0/0
  3983 ;;		Unchanged: 0/0
  3984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3989 ;;Total ram usage:        0 bytes
  3990 ;; Hardware stack levels used:    1
  3991 ;; Hardware stack levels required when called:    4
  3992 ;; This function calls:
  3993 ;;		_OpenADC
  3994 ;; This function is called by:
  3995 ;;		_main
  3996 ;; This function uses a non-reentrant model
  3997 ;;
  3998                           
  3999                           	psect	text30
  4000  001F76                     __ptext30:
  4001                           	opt stack 0
  4002  001F76                     _ADC6_Init:
  4003                           	opt stack 26
  4004                           
  4005                           ;My_ADC.c: 40: OpenADC(0b11111111 &
  4006                           ;My_ADC.c: 41: 0b11110011 &
  4007                           ;My_ADC.c: 42: 0b10001111
  4008                           ;My_ADC.c: 43: ,
  4009                           ;My_ADC.c: 44: 0b10011011
  4010                           ;My_ADC.c: 45: ,
  4011                           ;My_ADC.c: 46: 0b00111111 &
  4012                           ;My_ADC.c: 47: 0b11111111 &
  4013                           ;My_ADC.c: 48: 0b11110111 &
  4014                           ;My_ADC.c: 49: 0b11111000
  4015                           ;My_ADC.c: 50: );
  4016                           
  4017                           ;incstack = 0
  4018  001F76  0E9B               	movlw	155
  4019  001F78  6E19               	movwf	OpenADC@config2,c
  4020  001F7A  0E30               	movlw	48
  4021  001F7C  6E1A               	movwf	OpenADC@config3,c
  4022  001F7E  0E83               	movlw	131
  4023  001F80  ECB5  F00D         	call	_OpenADC
  4024                           
  4025                           ;My_ADC.c: 52: (PIE1bits.ADIE=0);
  4026  001F84  9C9D               	bcf	3997,6,c	;volatile
  4027  001F86  0012               	return		;funcret
  4028  001F88                     __end_of_ADC6_Init:
  4029                           	opt stack 0
  4030                           tblptru	equ	0xFF8
  4031                           tblptrh	equ	0xFF7
  4032                           tblptrl	equ	0xFF6
  4033                           tablat	equ	0xFF5
  4034                           prodh	equ	0xFF4
  4035                           prodl	equ	0xFF3
  4036                           intcon	equ	0xFF2
  4037                           postinc0	equ	0xFEE
  4038                           wreg	equ	0xFE8
  4039                           indf1	equ	0xFE7
  4040                           fsr1h	equ	0xFE2
  4041                           fsr1l	equ	0xFE1
  4042                           indf2	equ	0xFDF
  4043                           fsr2h	equ	0xFDA
  4044                           fsr2l	equ	0xFD9
  4045                           status	equ	0xFD8
  4046                           
  4047 ;; *************** function _OpenADC *****************
  4048 ;; Defined at:
  4049 ;;		line 305 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;  config          1    wreg     unsigned char 
  4052 ;;  config2         1   24[COMRAM] unsigned char 
  4053 ;;  config3         1   25[COMRAM] unsigned char 
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;  config          1   28[COMRAM] unsigned char 
  4056 ;; Return value:  Size  Location     Type
  4057 ;;		None               void
  4058 ;; Registers used:
  4059 ;;		wreg, status,2, status,0
  4060 ;; Tracked objects:
  4061 ;;		On entry : 0/0
  4062 ;;		On exit  : 0/0
  4063 ;;		Unchanged: 0/0
  4064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4065 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4066 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4067 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4068 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4069 ;;Total ram usage:        5 bytes
  4070 ;; Hardware stack levels used:    1
  4071 ;; Hardware stack levels required when called:    3
  4072 ;; This function calls:
  4073 ;;		Nothing
  4074 ;; This function is called by:
  4075 ;;		_ADC6_Init
  4076 ;; This function uses a non-reentrant model
  4077 ;;
  4078                           
  4079                           	psect	text31
  4080  001B6A                     __ptext31:
  4081                           	opt stack 0
  4082  001B6A                     _OpenADC:
  4083                           	opt stack 26
  4084                           
  4085                           ;incstack = 0
  4086                           ;OpenADC@config stored from wreg
  4087  001B6A  6E1D               	movwf	OpenADC@config,c
  4088  001B6C  0E00               	movlw	0
  4089  001B6E  6EC2               	movwf	4034,c	;volatile
  4090  001B70  0E00               	movlw	0
  4091  001B72  6EC1               	movwf	4033,c	;volatile
  4092  001B74  0E00               	movlw	0
  4093  001B76  6EC0               	movwf	4032,c	;volatile
  4094  001B78  5019               	movf	OpenADC@config2,w,c
  4095  001B7A  0B7C               	andlw	124
  4096  001B7C  6EC2               	movwf	4034,c	;volatile
  4097  001B7E  C01A  FFC1         	movff	OpenADC@config3,4033	;volatile
  4098  001B82  C01D  F01B         	movff	OpenADC@config,??_OpenADC
  4099  001B86  90D8               	bcf	status,0,c
  4100  001B88  361B               	rlcf	??_OpenADC,f,c
  4101  001B8A  90D8               	bcf	status,0,c
  4102  001B8C  361B               	rlcf	??_OpenADC,f,c
  4103  001B8E  0E38               	movlw	56
  4104  001B90  161B               	andwf	??_OpenADC,f,c
  4105  001B92  C01D  F01C         	movff	OpenADC@config,??_OpenADC+1
  4106  001B96  3A1C               	swapf	??_OpenADC+1,f,c
  4107  001B98  0E0F               	movlw	15
  4108  001B9A  161C               	andwf	??_OpenADC+1,f,c
  4109  001B9C  0E07               	movlw	7
  4110  001B9E  161C               	andwf	??_OpenADC+1,f,c
  4111  001BA0  501D               	movf	OpenADC@config,w,c
  4112  001BA2  0B80               	andlw	128
  4113  001BA4  101C               	iorwf	??_OpenADC+1,w,c
  4114  001BA6  101B               	iorwf	??_OpenADC,w,c
  4115  001BA8  6EC0               	movwf	4032,c	;volatile
  4116  001BAA  AE19               	btfss	OpenADC@config2,7,c
  4117  001BAC  D003               	goto	l448
  4118  001BAE  9C9E               	bcf	3998,6,c	;volatile
  4119  001BB0  8C9D               	bsf	3997,6,c	;volatile
  4120  001BB2  8CF2               	bsf	intcon,6,c	;volatile
  4121  001BB4                     l448:
  4122  001BB4  80C2               	bsf	4034,0,c	;volatile
  4123  001BB6  0012               	return		;funcret
  4124  001BB8                     __end_of_OpenADC:
  4125                           	opt stack 0
  4126                           tblptru	equ	0xFF8
  4127                           tblptrh	equ	0xFF7
  4128                           tblptrl	equ	0xFF6
  4129                           tablat	equ	0xFF5
  4130                           prodh	equ	0xFF4
  4131                           prodl	equ	0xFF3
  4132                           intcon	equ	0xFF2
  4133                           postinc0	equ	0xFEE
  4134                           wreg	equ	0xFE8
  4135                           indf1	equ	0xFE7
  4136                           fsr1h	equ	0xFE2
  4137                           fsr1l	equ	0xFE1
  4138                           indf2	equ	0xFDF
  4139                           fsr2h	equ	0xFDA
  4140                           fsr2l	equ	0xFD9
  4141                           status	equ	0xFD8
  4142                           
  4143 ;; *************** function _Sys_Cyc *****************
  4144 ;; Defined at:
  4145 ;;		line 98 in file "_01_USER/My_Timer.c"
  4146 ;; Parameters:    Size  Location     Type
  4147 ;;		None
  4148 ;; Auto vars:     Size  Location     Type
  4149 ;;  _pulse          1   23[COMRAM] unsigned char 
  4150 ;; Return value:  Size  Location     Type
  4151 ;;		None               void
  4152 ;; Registers used:
  4153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4154 ;; Tracked objects:
  4155 ;;		On entry : 0/0
  4156 ;;		On exit  : 0/0
  4157 ;;		Unchanged: 0/0
  4158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4160 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4161 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4162 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4163 ;;Total ram usage:       15 bytes
  4164 ;; Hardware stack levels used:    1
  4165 ;; Hardware stack levels required when called:    2
  4166 ;; This function calls:
  4167 ;;		_Delay_1Khz
  4168 ;;		_Key_FSM_Scan
  4169 ;;		_Manage_Message
  4170 ;;		___llmod
  4171 ;;		i2_SetTimer0
  4172 ;; This function is called by:
  4173 ;;		Interrupt level 2
  4174 ;; This function uses a non-reentrant model
  4175 ;;
  4176                           
  4177                           	psect	intcode
  4178  000008                     __pintcode:
  4179                           	opt stack 0
  4180  000008                     _Sys_Cyc:
  4181                           	opt stack 23
  4182                           
  4183                           ;incstack = 0
  4184  000008  CFFA F00A          	movff	pclath,??_Sys_Cyc
  4185  00000C  CFFB F00B          	movff	pclatu,??_Sys_Cyc+1
  4186  000010  CFE9 F00C          	movff	fsr0l,??_Sys_Cyc+2
  4187  000014  CFEA F00D          	movff	fsr0h,??_Sys_Cyc+3
  4188  000018  CFE1 F00E          	movff	fsr1l,??_Sys_Cyc+4
  4189  00001C  CFE2 F00F          	movff	fsr1h,??_Sys_Cyc+5
  4190  000020  CFD9 F010          	movff	fsr2l,??_Sys_Cyc+6
  4191  000024  CFDA F011          	movff	fsr2h,??_Sys_Cyc+7
  4192  000028  CFF3 F012          	movff	prodl,??_Sys_Cyc+8
  4193  00002C  CFF4 F013          	movff	prodh,??_Sys_Cyc+9
  4194  000030  CFF6 F014          	movff	tblptrl,??_Sys_Cyc+10
  4195  000034  CFF7 F015          	movff	tblptrh,??_Sys_Cyc+11
  4196  000038  CFF8 F016          	movff	tblptru,??_Sys_Cyc+12
  4197  00003C  CFF5 F017          	movff	tablat,??_Sys_Cyc+13
  4198                           
  4199                           ;My_Timer.c: 101: static unsigned char _overturn_1Khz = 0,_overturn_LED = 0;
  4200                           ;My_Timer.c: 102: unsigned char _pulse = 10;
  4201  000040  0E0A               	movlw	10
  4202  000042  6E18               	movwf	Sys_Cyc@_pulse,c
  4203                           
  4204                           ;My_Timer.c: 103: static char _RS485_Receive_Num = 0,RS485_Timer = 0;
  4205                           ;My_Timer.c: 106: if(TMR0IF && TMR0IE)
  4206  000044  B4F2               	btfsc	intcon,2,c	;volatile
  4207  000046  AAF2               	btfss	intcon,5,c	;volatile
  4208  000048  D064               	goto	i2l2675
  4209                           
  4210                           ;My_Timer.c: 107: {
  4211                           ;My_Timer.c: 108: Timer_Cyc = (Timer_Cyc+1) % 100000000;
  4212  00004A  0E01               	movlw	1
  4213  00004C  2437               	addwf	_Timer_Cyc,w,c
  4214  00004E  6E01               	movwf	___llmod@dividend,c
  4215  000050  0E00               	movlw	0
  4216  000052  2038               	addwfc	_Timer_Cyc+1,w,c
  4217  000054  6E02               	movwf	___llmod@dividend+1,c
  4218  000056  0E00               	movlw	0
  4219  000058  2039               	addwfc	_Timer_Cyc+2,w,c
  4220  00005A  6E03               	movwf	___llmod@dividend+2,c
  4221  00005C  0E00               	movlw	0
  4222  00005E  203A               	addwfc	_Timer_Cyc+3,w,c
  4223  000060  6E04               	movwf	___llmod@dividend+3,c
  4224  000062  0E00               	movlw	0
  4225  000064  6E05               	movwf	___llmod@divisor,c
  4226  000066  0EE1               	movlw	225
  4227  000068  6E06               	movwf	___llmod@divisor+1,c
  4228  00006A  0EF5               	movlw	245
  4229  00006C  6E07               	movwf	___llmod@divisor+2,c
  4230  00006E  0E05               	movlw	5
  4231  000070  6E08               	movwf	___llmod@divisor+3,c
  4232  000072  ECAF  F00C         	call	___llmod	;wreg free
  4233  000076  C001  F037         	movff	?___llmod,_Timer_Cyc
  4234  00007A  C002  F038         	movff	?___llmod+1,_Timer_Cyc+1
  4235  00007E  C003  F039         	movff	?___llmod+2,_Timer_Cyc+2
  4236  000082  C004  F03A         	movff	?___llmod+3,_Timer_Cyc+3
  4237                           
  4238                           ;My_Timer.c: 109: if(_RS485_Receive_Num == 0) RS485_Timer --;
  4239  000086  5040               	movf	Sys_Cyc@_RS485_Receive_Num,w,c
  4240  000088  A4D8               	btfss	status,2,c
  4241  00008A  D002               	goto	i2l2647
  4242  00008C  063F               	decf	Sys_Cyc@RS485_Timer,f,c
  4243  00008E  D000               	goto	i2l2647
  4244  000090                     i2l2647:
  4245                           
  4246                           ;My_Timer.c: 111: if( Handle_Switch._1Khz )
  4247  000090  5033               	movf	_Handle_Switch,w,c
  4248  000092  A4D8               	btfss	status,2,c
  4249  000094  D00D               	goto	i2l2659
  4250  000096  D012               	goto	i2l2661
  4251                           
  4252                           ;My_Timer.c: 112: {
  4253                           ;My_Timer.c: 113: while( _pulse-- )
  4254  000098  D00B               	goto	i2l2659
  4255  00009A                     i2l2651:
  4256                           
  4257                           ;My_Timer.c: 114: {
  4258                           ;My_Timer.c: 115: _overturn_1Khz =~ _overturn_1Khz;
  4259  00009A  1E41               	comf	Sys_Cyc@_overturn_1Khz,f,c
  4260                           
  4261                           ;My_Timer.c: 116: if(_overturn_1Khz) PORTEbits.RE7 = 1; else PORTEbits.RE7 = 0;
  4262  00009C  5041               	movf	Sys_Cyc@_overturn_1Khz,w,c
  4263  00009E  B4D8               	btfsc	status,2,c
  4264  0000A0  D002               	goto	i2l259
  4265  0000A2  8E84               	bsf	3972,7,c	;volatile
  4266  0000A4  D002               	goto	i2l2657
  4267  0000A6                     i2l259:
  4268  0000A6  9E84               	bcf	3972,7,c	;volatile
  4269  0000A8  D000               	goto	i2l2657
  4270  0000AA                     i2l2657:
  4271                           
  4272                           ;My_Timer.c: 117: Delay_1Khz();
  4273  0000AA  ECA6  F00E         	call	_Delay_1Khz	;wreg free
  4274  0000AE  D000               	goto	i2l2659
  4275  0000B0                     i2l2659:
  4276  0000B0  0618               	decf	Sys_Cyc@_pulse,f,c
  4277  0000B2  2818               	incf	Sys_Cyc@_pulse,w,c
  4278  0000B4  B4D8               	btfsc	status,2,c
  4279  0000B6  D002               	goto	i2l2661
  4280  0000B8  D7F0               	goto	i2l2651
  4281  0000BA  D000               	goto	i2l2661
  4282  0000BC                     i2l2661:
  4283                           
  4284                           ;My_Timer.c: 118: }
  4285                           ;My_Timer.c: 119: }
  4286                           ;My_Timer.c: 122: if( Timer_Cyc%30 == 0 )
  4287  0000BC  C037  F001         	movff	_Timer_Cyc,___llmod@dividend
  4288  0000C0  C038  F002         	movff	_Timer_Cyc+1,___llmod@dividend+1
  4289  0000C4  C039  F003         	movff	_Timer_Cyc+2,___llmod@dividend+2
  4290  0000C8  C03A  F004         	movff	_Timer_Cyc+3,___llmod@dividend+3
  4291  0000CC  0E1E               	movlw	30
  4292  0000CE  6E05               	movwf	___llmod@divisor,c
  4293  0000D0  0E00               	movlw	0
  4294  0000D2  6E06               	movwf	___llmod@divisor+1,c
  4295  0000D4  0E00               	movlw	0
  4296  0000D6  6E07               	movwf	___llmod@divisor+2,c
  4297  0000D8  0E00               	movlw	0
  4298  0000DA  6E08               	movwf	___llmod@divisor+3,c
  4299  0000DC  ECAF  F00C         	call	___llmod	;wreg free
  4300  0000E0  5001               	movf	?___llmod,w,c
  4301  0000E2  1002               	iorwf	?___llmod+1,w,c
  4302  0000E4  1003               	iorwf	?___llmod+2,w,c
  4303  0000E6  1004               	iorwf	?___llmod+3,w,c
  4304  0000E8  A4D8               	btfss	status,2,c
  4305  0000EA  D008               	goto	i2l2669
  4306                           
  4307                           ;My_Timer.c: 123: {
  4308                           ;My_Timer.c: 124: _overturn_LED = ~_overturn_LED;
  4309  0000EC  1E42               	comf	Sys_Cyc@_overturn_LED,f,c
  4310                           
  4311                           ;My_Timer.c: 125: if(_overturn_LED) PORTEbits.RE5=0;
  4312  0000EE  5042               	movf	Sys_Cyc@_overturn_LED,w,c
  4313  0000F0  B4D8               	btfsc	status,2,c
  4314  0000F2  D002               	goto	i2l263
  4315  0000F4  9A84               	bcf	3972,5,c	;volatile
  4316  0000F6  D002               	goto	i2l2669
  4317  0000F8                     i2l263:
  4318                           
  4319                           ;My_Timer.c: 126: else PORTEbits.RE5=1;
  4320  0000F8  8A84               	bsf	3972,5,c	;volatile
  4321  0000FA  D000               	goto	i2l2669
  4322  0000FC                     i2l2669:
  4323                           
  4324                           ;My_Timer.c: 127: }
  4325                           ;My_Timer.c: 130: Key_FSM_Scan();
  4326  0000FC  EC02  F00E         	call	_Key_FSM_Scan	;wreg free
  4327                           
  4328                           ;My_Timer.c: 133: Manage_Message();
  4329  000100  EC83  F009         	call	_Manage_Message	;wreg free
  4330                           
  4331                           ;My_Timer.c: 135: SetTimer0(78);
  4332  000104  0E00               	movlw	0
  4333  000106  6E02               	movwf	i2SetTimer0@_tmr+1,c
  4334  000108  0E4E               	movlw	78
  4335  00010A  6E01               	movwf	i2SetTimer0@_tmr,c
  4336  00010C  ECF3  F00E         	call	i2_SetTimer0	;wreg free
  4337  000110  D000               	goto	i2l2675
  4338  000112                     i2l2675:
  4339                           
  4340                           ;My_Timer.c: 136: }
  4341                           ;My_Timer.c: 139: if( RC2IF )
  4342  000112  AAA4               	btfss	4004,5,c	;volatile
  4343  000114  D022               	goto	i2l269
  4344                           
  4345                           ;My_Timer.c: 140: {
  4346                           ;My_Timer.c: 141: if(RS485_Timer == 0 ) _RS485_Receive_Num = 0;
  4347  000116  503F               	movf	Sys_Cyc@RS485_Timer,w,c
  4348  000118  A4D8               	btfss	status,2,c
  4349  00011A  D003               	goto	i2l2681
  4350  00011C  0E00               	movlw	0
  4351  00011E  6E40               	movwf	Sys_Cyc@_RS485_Receive_Num,c
  4352  000120  D000               	goto	i2l2681
  4353  000122                     i2l2681:
  4354                           
  4355                           ;My_Timer.c: 143: RS485_ReceiveBuff[ _RS485_Receive_Num] = RCREG2;
  4356  000122  5040               	movf	Sys_Cyc@_RS485_Receive_Num,w,c
  4357  000124  0D01               	mullw	1
  4358  000126  0E60               	movlw	low _RS485_ReceiveBuff
  4359  000128  24F3               	addwf	prodl,w,c
  4360  00012A  6ED9               	movwf	fsr2l,c
  4361  00012C  0E00               	movlw	high _RS485_ReceiveBuff
  4362  00012E  20F4               	addwfc	prodh,w,c
  4363  000130  6EDA               	movwf	fsr2h,c
  4364  000132  CF1D FFDF          	movff	3869,indf2	;volatile
  4365                           
  4366                           ;My_Timer.c: 145: if(RS485_ReceiveBuff[0] == 0xaa) _RS485_Receive_Num++,RS485_Timer = 2;
  4367  000136  0EAA               	movlw	170
  4368  000138  0100               	movlb	0	; () banked
  4369  00013A  1960               	xorwf	_RS485_ReceiveBuff& (0+255),w,b
  4370  00013C  A4D8               	btfss	status,2,c
  4371  00013E  D004               	goto	i2l2689
  4372                           
  4373                           ; BSR set to: 0
  4374  000140  2A40               	incf	Sys_Cyc@_RS485_Receive_Num,f,c
  4375                           
  4376                           ; BSR set to: 0
  4377  000142  0E02               	movlw	2
  4378  000144  6E3F               	movwf	Sys_Cyc@RS485_Timer,c
  4379  000146  D000               	goto	i2l2689
  4380  000148                     i2l2689:
  4381                           
  4382                           ; BSR set to: 0
  4383                           ;My_Timer.c: 147: if( _RS485_Receive_Num == 10 )
  4384  000148  0E0A               	movlw	10
  4385  00014A  1840               	xorwf	Sys_Cyc@_RS485_Receive_Num,w,c
  4386  00014C  A4D8               	btfss	status,2,c
  4387  00014E  D005               	goto	i2l269
  4388                           
  4389                           ; BSR set to: 0
  4390                           ;My_Timer.c: 148: {
  4391                           ;My_Timer.c: 149: RS485_Receive_Flag = 1 ;
  4392  000150  0E01               	movlw	1
  4393  000152  6E45               	movwf	_RS485_Receive_Flag,c
  4394                           
  4395                           ;My_Timer.c: 150: _RS485_Receive_Num = 0;
  4396  000154  0E00               	movlw	0
  4397  000156  6E40               	movwf	Sys_Cyc@_RS485_Receive_Num,c
  4398                           
  4399                           ; BSR set to: 0
  4400  000158  D000               	goto	i2l269
  4401  00015A                     i2l269:
  4402  00015A  C017  FFF5         	movff	??_Sys_Cyc+13,tablat
  4403  00015E  C016  FFF8         	movff	??_Sys_Cyc+12,tblptru
  4404  000162  C015  FFF7         	movff	??_Sys_Cyc+11,tblptrh
  4405  000166  C014  FFF6         	movff	??_Sys_Cyc+10,tblptrl
  4406  00016A  C013  FFF4         	movff	??_Sys_Cyc+9,prodh
  4407  00016E  C012  FFF3         	movff	??_Sys_Cyc+8,prodl
  4408  000172  C011  FFDA         	movff	??_Sys_Cyc+7,fsr2h
  4409  000176  C010  FFD9         	movff	??_Sys_Cyc+6,fsr2l
  4410  00017A  C00F  FFE2         	movff	??_Sys_Cyc+5,fsr1h
  4411  00017E  C00E  FFE1         	movff	??_Sys_Cyc+4,fsr1l
  4412  000182  C00D  FFEA         	movff	??_Sys_Cyc+3,fsr0h
  4413  000186  C00C  FFE9         	movff	??_Sys_Cyc+2,fsr0l
  4414  00018A  C00B  FFFB         	movff	??_Sys_Cyc+1,pclatu
  4415  00018E  C00A  FFFA         	movff	??_Sys_Cyc,pclath
  4416  000192  0011               	retfie		f
  4417  000194                     __end_of_Sys_Cyc:
  4418                           	opt stack 0
  4419                           pclatu	equ	0xFFB
  4420                           pclath	equ	0xFFA
  4421                           tblptru	equ	0xFF8
  4422                           tblptrh	equ	0xFF7
  4423                           tblptrl	equ	0xFF6
  4424                           tablat	equ	0xFF5
  4425                           prodh	equ	0xFF4
  4426                           prodl	equ	0xFF3
  4427                           intcon	equ	0xFF2
  4428                           postinc0	equ	0xFEE
  4429                           fsr0h	equ	0xFEA
  4430                           fsr0l	equ	0xFE9
  4431                           wreg	equ	0xFE8
  4432                           indf1	equ	0xFE7
  4433                           fsr1h	equ	0xFE2
  4434                           fsr1l	equ	0xFE1
  4435                           indf2	equ	0xFDF
  4436                           fsr2h	equ	0xFDA
  4437                           fsr2l	equ	0xFD9
  4438                           status	equ	0xFD8
  4439                           
  4440 ;; *************** function i2_SetTimer0 *****************
  4441 ;; Defined at:
  4442 ;;		line 79 in file "_01_USER/My_Timer.c"
  4443 ;; Parameters:    Size  Location     Type
  4444 ;;  _tmr            2    0[COMRAM] unsigned int 
  4445 ;; Auto vars:     Size  Location     Type
  4446 ;;		None
  4447 ;; Return value:  Size  Location     Type
  4448 ;;		None               void
  4449 ;; Registers used:
  4450 ;;		wreg, status,2, status,0
  4451 ;; Tracked objects:
  4452 ;;		On entry : 0/0
  4453 ;;		On exit  : 0/0
  4454 ;;		Unchanged: 0/0
  4455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4456 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4458 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4459 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4460 ;;Total ram usage:        4 bytes
  4461 ;; Hardware stack levels used:    1
  4462 ;; This function calls:
  4463 ;;		Nothing
  4464 ;; This function is called by:
  4465 ;;		_Sys_Cyc
  4466 ;; This function uses a non-reentrant model
  4467 ;;
  4468                           
  4469                           	psect	text33
  4470  001DE6                     __ptext33:
  4471                           	opt stack 0
  4472  001DE6                     i2_SetTimer0:
  4473                           	opt stack 24
  4474                           
  4475                           ;My_Timer.c: 81: if(_tmr > 0xffff) _tmr = 0xffff;
  4476                           
  4477                           ;incstack = 0
  4478  001DE6  D003               	goto	i2l2609
  4479  001DE8  6801               	setf	i2SetTimer0@_tmr,c
  4480  001DEA  6802               	setf	i2SetTimer0@_tmr+1,c
  4481  001DEC  D000               	goto	i2l2609
  4482  001DEE                     i2l2609:
  4483                           
  4484                           ;My_Timer.c: 82: _tmr=0xffff-_tmr;
  4485  001DEE  C001  F003         	movff	i2SetTimer0@_tmr,??i2_SetTimer0
  4486  001DF2  C002  F004         	movff	i2SetTimer0@_tmr+1,??i2_SetTimer0+1
  4487  001DF6  1E03               	comf	??i2_SetTimer0,f,c
  4488  001DF8  1E04               	comf	??i2_SetTimer0+1,f,c
  4489  001DFA  4A03               	infsnz	??i2_SetTimer0,f,c
  4490  001DFC  2A04               	incf	??i2_SetTimer0+1,f,c
  4491  001DFE  0EFF               	movlw	255
  4492  001E00  2403               	addwf	??i2_SetTimer0,w,c
  4493  001E02  6E01               	movwf	i2SetTimer0@_tmr,c
  4494  001E04  0EFF               	movlw	255
  4495  001E06  2004               	addwfc	??i2_SetTimer0+1,w,c
  4496  001E08  6E02               	movwf	i2SetTimer0@_tmr+1,c
  4497                           
  4498                           ;My_Timer.c: 83: TMR0H = _tmr/256;
  4499  001E0A  5002               	movf	i2SetTimer0@_tmr+1,w,c
  4500  001E0C  6ED7               	movwf	4055,c	;volatile
  4501                           
  4502                           ;My_Timer.c: 84: TMR0L = _tmr%256;
  4503  001E0E  C001  FFD6         	movff	i2SetTimer0@_tmr,4054	;volatile
  4504                           
  4505                           ;My_Timer.c: 85: TMR0IF = 0;
  4506  001E12  94F2               	bcf	intcon,2,c	;volatile
  4507  001E14  0012               	return		;funcret
  4508  001E16                     __end_ofi2_SetTimer0:
  4509                           	opt stack 0
  4510                           pclatu	equ	0xFFB
  4511                           pclath	equ	0xFFA
  4512                           tblptru	equ	0xFF8
  4513                           tblptrh	equ	0xFF7
  4514                           tblptrl	equ	0xFF6
  4515                           tablat	equ	0xFF5
  4516                           prodh	equ	0xFF4
  4517                           prodl	equ	0xFF3
  4518                           intcon	equ	0xFF2
  4519                           postinc0	equ	0xFEE
  4520                           fsr0h	equ	0xFEA
  4521                           fsr0l	equ	0xFE9
  4522                           wreg	equ	0xFE8
  4523                           indf1	equ	0xFE7
  4524                           fsr1h	equ	0xFE2
  4525                           fsr1l	equ	0xFE1
  4526                           indf2	equ	0xFDF
  4527                           fsr2h	equ	0xFDA
  4528                           fsr2l	equ	0xFD9
  4529                           status	equ	0xFD8
  4530                           
  4531 ;; *************** function ___llmod *****************
  4532 ;; Defined at:
  4533 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  4534 ;; Parameters:    Size  Location     Type
  4535 ;;  dividend        4    0[COMRAM] unsigned long 
  4536 ;;  divisor         4    4[COMRAM] unsigned long 
  4537 ;; Auto vars:     Size  Location     Type
  4538 ;;  counter         1    8[COMRAM] unsigned char 
  4539 ;; Return value:  Size  Location     Type
  4540 ;;                  4    0[COMRAM] unsigned long 
  4541 ;; Registers used:
  4542 ;;		wreg, status,2, status,0
  4543 ;; Tracked objects:
  4544 ;;		On entry : 0/0
  4545 ;;		On exit  : 0/0
  4546 ;;		Unchanged: 0/0
  4547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4548 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4549 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4551 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4552 ;;Total ram usage:        9 bytes
  4553 ;; Hardware stack levels used:    1
  4554 ;; This function calls:
  4555 ;;		Nothing
  4556 ;; This function is called by:
  4557 ;;		_Sys_Cyc
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           	psect	text34
  4562  00195E                     __ptext34:
  4563                           	opt stack 0
  4564  00195E                     ___llmod:
  4565                           	opt stack 24
  4566                           
  4567                           ;incstack = 0
  4568  00195E  5005               	movf	___llmod@divisor,w,c
  4569  001960  1006               	iorwf	___llmod@divisor+1,w,c
  4570  001962  1007               	iorwf	___llmod@divisor+2,w,c
  4571  001964  1008               	iorwf	___llmod@divisor+3,w,c
  4572  001966  B4D8               	btfsc	status,2,c
  4573  001968  D029               	goto	i2l953
  4574  00196A  0E01               	movlw	1
  4575  00196C  6E09               	movwf	___llmod@counter,c
  4576  00196E  D007               	goto	i2l2595
  4577  001970                     i2l2593:
  4578  001970  90D8               	bcf	status,0,c
  4579  001972  3605               	rlcf	___llmod@divisor,f,c
  4580  001974  3606               	rlcf	___llmod@divisor+1,f,c
  4581  001976  3607               	rlcf	___llmod@divisor+2,f,c
  4582  001978  3608               	rlcf	___llmod@divisor+3,f,c
  4583  00197A  2A09               	incf	___llmod@counter,f,c
  4584  00197C  D000               	goto	i2l2595
  4585  00197E                     i2l2595:
  4586  00197E  BE08               	btfsc	___llmod@divisor+3,7,c
  4587  001980  D002               	goto	i2l2597
  4588  001982  D7F6               	goto	i2l2593
  4589  001984  D000               	goto	i2l2597
  4590  001986                     i2l2597:
  4591  001986  5005               	movf	___llmod@divisor,w,c
  4592  001988  5C01               	subwf	___llmod@dividend,w,c
  4593  00198A  5006               	movf	___llmod@divisor+1,w,c
  4594  00198C  5802               	subwfb	___llmod@dividend+1,w,c
  4595  00198E  5007               	movf	___llmod@divisor+2,w,c
  4596  001990  5803               	subwfb	___llmod@dividend+2,w,c
  4597  001992  5008               	movf	___llmod@divisor+3,w,c
  4598  001994  5804               	subwfb	___llmod@dividend+3,w,c
  4599  001996  A0D8               	btfss	status,0,c
  4600  001998  D009               	goto	i2l2601
  4601  00199A  5005               	movf	___llmod@divisor,w,c
  4602  00199C  5E01               	subwf	___llmod@dividend,f,c
  4603  00199E  5006               	movf	___llmod@divisor+1,w,c
  4604  0019A0  5A02               	subwfb	___llmod@dividend+1,f,c
  4605  0019A2  5007               	movf	___llmod@divisor+2,w,c
  4606  0019A4  5A03               	subwfb	___llmod@dividend+2,f,c
  4607  0019A6  5008               	movf	___llmod@divisor+3,w,c
  4608  0019A8  5A04               	subwfb	___llmod@dividend+3,f,c
  4609  0019AA  D000               	goto	i2l2601
  4610  0019AC                     i2l2601:
  4611  0019AC  90D8               	bcf	status,0,c
  4612  0019AE  3208               	rrcf	___llmod@divisor+3,f,c
  4613  0019B0  3207               	rrcf	___llmod@divisor+2,f,c
  4614  0019B2  3206               	rrcf	___llmod@divisor+1,f,c
  4615  0019B4  3205               	rrcf	___llmod@divisor,f,c
  4616  0019B6  2E09               	decfsz	___llmod@counter,f,c
  4617  0019B8  D7E6               	goto	i2l2597
  4618  0019BA  D000               	goto	i2l953
  4619  0019BC                     i2l953:
  4620  0019BC  C001  F001         	movff	___llmod@dividend,?___llmod
  4621  0019C0  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  4622  0019C4  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  4623  0019C8  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  4624  0019CC  0012               	return		;funcret
  4625  0019CE                     __end_of___llmod:
  4626                           	opt stack 0
  4627                           pclatu	equ	0xFFB
  4628                           pclath	equ	0xFFA
  4629                           tblptru	equ	0xFF8
  4630                           tblptrh	equ	0xFF7
  4631                           tblptrl	equ	0xFF6
  4632                           tablat	equ	0xFF5
  4633                           prodh	equ	0xFF4
  4634                           prodl	equ	0xFF3
  4635                           intcon	equ	0xFF2
  4636                           postinc0	equ	0xFEE
  4637                           fsr0h	equ	0xFEA
  4638                           fsr0l	equ	0xFE9
  4639                           wreg	equ	0xFE8
  4640                           indf1	equ	0xFE7
  4641                           fsr1h	equ	0xFE2
  4642                           fsr1l	equ	0xFE1
  4643                           indf2	equ	0xFDF
  4644                           fsr2h	equ	0xFDA
  4645                           fsr2l	equ	0xFD9
  4646                           status	equ	0xFD8
  4647                           
  4648 ;; *************** function _Manage_Message *****************
  4649 ;; Defined at:
  4650 ;;		line 50 in file "_01_USER/Run.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;		None
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;  i               1    0        unsigned char 
  4655 ;; Return value:  Size  Location     Type
  4656 ;;		None               void
  4657 ;; Registers used:
  4658 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4659 ;; Tracked objects:
  4660 ;;		On entry : 0/0
  4661 ;;		On exit  : 0/0
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4668 ;;Total ram usage:        0 bytes
  4669 ;; Hardware stack levels used:    1
  4670 ;; Hardware stack levels required when called:    1
  4671 ;; This function calls:
  4672 ;;		_Key_FSM_Read
  4673 ;;		_Key_FSM_Reset
  4674 ;;		___lbmod
  4675 ;; This function is called by:
  4676 ;;		_Sys_Cyc
  4677 ;; This function uses a non-reentrant model
  4678 ;;
  4679                           
  4680                           	psect	text35
  4681  001306                     __ptext35:
  4682                           	opt stack 0
  4683  001306                     _Manage_Message:
  4684                           	opt stack 23
  4685                           
  4686                           ;Run.c: 52: char i;
  4687                           ;Run.c: 53: Key_FSM_Read();
  4688                           
  4689                           ;incstack = 0
  4690  001306  EC09  F008         	call	_Key_FSM_Read	;wreg free
  4691                           
  4692                           ;Run.c: 55: if ( Local_Key_User.key_group == ((0x01<<1)|(0x01<<3)) && Local_Key_User.key
      +                          _group_state == KEY_short )
  4693  00130A  0E0A               	movlw	10
  4694  00130C  0100               	movlb	0	; () banked
  4695  00130E  197D               	xorwf	(_Local_Key_User+1)& (0+255),w,b	;volatile
  4696  001310  A4D8               	btfss	status,2,c
  4697  001312  D00C               	goto	i2l2527
  4698                           
  4699                           ; BSR set to: 0
  4700  001314  0100               	movlb	0	; () banked
  4701  001316  057E               	decf	(_Local_Key_User+2)& (0+255),w,b	;volatile
  4702  001318  A4D8               	btfss	status,2,c
  4703  00131A  D008               	goto	i2l2527
  4704                           
  4705                           ; BSR set to: 0
  4706                           ;Run.c: 56: {
  4707                           ;Run.c: 57: Handle_Switch.Show_Send_Receive = ~Handle_Switch.Show_Send_Receive ;
  4708  00131C  5036               	movf	_Handle_Switch+3,w,c
  4709  00131E  0AFF               	xorlw	255
  4710  001320  6E36               	movwf	_Handle_Switch+3,c
  4711                           
  4712                           ; BSR set to: 0
  4713                           ;Run.c: 58: Key_FSM_Reset(); Receive_Flag =1;
  4714  001322  EC28  F00E         	call	_Key_FSM_Reset	;wreg free
  4715  001326  0E01               	movlw	1
  4716  001328  6E46               	movwf	_Receive_Flag,c
  4717  00132A  D000               	goto	i2l2527
  4718  00132C                     i2l2527:
  4719                           
  4720                           ;Run.c: 59: }
  4721                           ;Run.c: 62: if ( Local_Key_User.key_group == ((0x01<<0)|(0x01<<3)) && Local_Key_User.key
      +                          _group_state == KEY_short )
  4722  00132C  0E09               	movlw	9
  4723  00132E  0100               	movlb	0	; () banked
  4724  001330  197D               	xorwf	(_Local_Key_User+1)& (0+255),w,b	;volatile
  4725  001332  A4D8               	btfss	status,2,c
  4726  001334  D008               	goto	i2l2535
  4727                           
  4728                           ; BSR set to: 0
  4729  001336  0100               	movlb	0	; () banked
  4730  001338  057E               	decf	(_Local_Key_User+2)& (0+255),w,b	;volatile
  4731  00133A  A4D8               	btfss	status,2,c
  4732  00133C  D004               	goto	i2l2535
  4733                           
  4734                           ; BSR set to: 0
  4735                           ;Run.c: 63: { g_Addr++; Key_FSM_Reset();}
  4736  00133E  2A47               	incf	_g_Addr,f,c
  4737                           
  4738                           ; BSR set to: 0
  4739  001340  EC28  F00E         	call	_Key_FSM_Reset	;wreg free
  4740  001344  D000               	goto	i2l2535
  4741  001346                     i2l2535:
  4742                           
  4743                           ;Run.c: 66: if ( Local_Key_User.key_group == ((0x01<<0)|(0x01<<1)) && Local_Key_User.key
      +                          _group_state == KEY_short )
  4744  001346  0E03               	movlw	3
  4745  001348  0100               	movlb	0	; () banked
  4746  00134A  197D               	xorwf	(_Local_Key_User+1)& (0+255),w,b	;volatile
  4747  00134C  A4D8               	btfss	status,2,c
  4748  00134E  D008               	goto	i2l2543
  4749                           
  4750                           ; BSR set to: 0
  4751  001350  0100               	movlb	0	; () banked
  4752  001352  057E               	decf	(_Local_Key_User+2)& (0+255),w,b	;volatile
  4753  001354  A4D8               	btfss	status,2,c
  4754  001356  D004               	goto	i2l2543
  4755                           
  4756                           ; BSR set to: 0
  4757                           ;Run.c: 67: { g_Addr--; Key_FSM_Reset();}
  4758  001358  0647               	decf	_g_Addr,f,c
  4759                           
  4760                           ; BSR set to: 0
  4761  00135A  EC28  F00E         	call	_Key_FSM_Reset	;wreg free
  4762  00135E  D000               	goto	i2l2543
  4763  001360                     i2l2543:
  4764                           
  4765                           ;Run.c: 70: if (Local_Key_User.key_state[5-1] == KEY_short) RS485_Num -- ;
  4766  001360  0100               	movlb	0	; () banked
  4767  001362  058D               	decf	(_Local_Key_User+17)& (0+255),w,b	;volatile
  4768  001364  A4D8               	btfss	status,2,c
  4769  001366  D002               	goto	i2l2547
  4770                           
  4771                           ; BSR set to: 0
  4772  001368  0644               	decf	_RS485_Num,f,c
  4773  00136A  D000               	goto	i2l2547
  4774  00136C                     i2l2547:
  4775                           
  4776                           ; BSR set to: 0
  4777                           ;Run.c: 71: if (Local_Key_User.key_state[5-1] == KEY_hold) RS485_Num -- ;
  4778  00136C  0E03               	movlw	3
  4779  00136E  0100               	movlb	0	; () banked
  4780  001370  198D               	xorwf	(_Local_Key_User+17)& (0+255),w,b	;volatile
  4781  001372  A4D8               	btfss	status,2,c
  4782  001374  D002               	goto	i2l2551
  4783                           
  4784                           ; BSR set to: 0
  4785  001376  0644               	decf	_RS485_Num,f,c
  4786  001378  D000               	goto	i2l2551
  4787  00137A                     i2l2551:
  4788                           
  4789                           ; BSR set to: 0
  4790                           ;Run.c: 74: if (Local_Key_User.key_state[3-1] == KEY_short) RS485_Num ++ ;
  4791  00137A  0100               	movlb	0	; () banked
  4792  00137C  058B               	decf	(_Local_Key_User+15)& (0+255),w,b	;volatile
  4793  00137E  A4D8               	btfss	status,2,c
  4794  001380  D002               	goto	i2l2555
  4795                           
  4796                           ; BSR set to: 0
  4797  001382  2A44               	incf	_RS485_Num,f,c
  4798  001384  D000               	goto	i2l2555
  4799  001386                     i2l2555:
  4800                           
  4801                           ; BSR set to: 0
  4802                           ;Run.c: 75: if (Local_Key_User.key_state[3-1] == KEY_hold) RS485_Num ++ ;
  4803  001386  0E03               	movlw	3
  4804  001388  0100               	movlb	0	; () banked
  4805  00138A  198B               	xorwf	(_Local_Key_User+15)& (0+255),w,b	;volatile
  4806  00138C  A4D8               	btfss	status,2,c
  4807  00138E  D002               	goto	i2l2559
  4808                           
  4809                           ; BSR set to: 0
  4810  001390  2A44               	incf	_RS485_Num,f,c
  4811  001392  D000               	goto	i2l2559
  4812  001394                     i2l2559:
  4813                           
  4814                           ; BSR set to: 0
  4815                           ;Run.c: 77: if( RS485_Num > 250 ) RS485_Num = 10 - 1;
  4816  001394  0EFA               	movlw	250
  4817  001396  6444               	cpfsgt	_RS485_Num,c
  4818  001398  D002               	goto	i2l2563
  4819                           
  4820                           ; BSR set to: 0
  4821  00139A  0E09               	movlw	9
  4822  00139C  D005               	goto	L2
  4823  00139E                     i2l2563:
  4824                           
  4825                           ; BSR set to: 0
  4826                           ;Run.c: 78: else RS485_Num %= 10;
  4827  00139E  0E0A               	movlw	10
  4828  0013A0  6E01               	movwf	___lbmod@divisor,c
  4829  0013A2  5044               	movf	_RS485_Num,w,c
  4830  0013A4  ECC2  F00E         	call	___lbmod
  4831  0013A8                     L2:
  4832  0013A8  6E44               	movwf	_RS485_Num,c
  4833  0013AA  D000               	goto	i2l2565
  4834  0013AC                     i2l2565:
  4835                           
  4836                           ;Run.c: 81: if (Local_Key_User.key_state[4-1] == KEY_short) RS485_SendBuff[RS485_Num] ++
      +                           ;
  4837  0013AC  0100               	movlb	0	; () banked
  4838  0013AE  058C               	decf	(_Local_Key_User+16)& (0+255),w,b	;volatile
  4839  0013B0  A4D8               	btfss	status,2,c
  4840  0013B2  D00A               	goto	i2l2569
  4841                           
  4842                           ; BSR set to: 0
  4843  0013B4  5044               	movf	_RS485_Num,w,c
  4844  0013B6  0D01               	mullw	1
  4845  0013B8  0E8E               	movlw	low _RS485_SendBuff
  4846  0013BA  24F3               	addwf	prodl,w,c
  4847  0013BC  6ED9               	movwf	fsr2l,c
  4848  0013BE  0E00               	movlw	high _RS485_SendBuff
  4849  0013C0  20F4               	addwfc	prodh,w,c
  4850  0013C2  6EDA               	movwf	fsr2h,c
  4851  0013C4  2ADF               	incf	indf2,f,c
  4852  0013C6  D000               	goto	i2l2569
  4853  0013C8                     i2l2569:
  4854                           
  4855                           ; BSR set to: 0
  4856                           ;Run.c: 82: if (Local_Key_User.key_state[4-1] == KEY_hold) RS485_SendBuff[RS485_Num] ++ 
      +                          ;
  4857  0013C8  0E03               	movlw	3
  4858  0013CA  0100               	movlb	0	; () banked
  4859  0013CC  198C               	xorwf	(_Local_Key_User+16)& (0+255),w,b	;volatile
  4860  0013CE  A4D8               	btfss	status,2,c
  4861  0013D0  D00A               	goto	i2l2573
  4862                           
  4863                           ; BSR set to: 0
  4864  0013D2  5044               	movf	_RS485_Num,w,c
  4865  0013D4  0D01               	mullw	1
  4866  0013D6  0E8E               	movlw	low _RS485_SendBuff
  4867  0013D8  24F3               	addwf	prodl,w,c
  4868  0013DA  6ED9               	movwf	fsr2l,c
  4869  0013DC  0E00               	movlw	high _RS485_SendBuff
  4870  0013DE  20F4               	addwfc	prodh,w,c
  4871  0013E0  6EDA               	movwf	fsr2h,c
  4872  0013E2  2ADF               	incf	indf2,f,c
  4873  0013E4  D000               	goto	i2l2573
  4874  0013E6                     i2l2573:
  4875                           
  4876                           ; BSR set to: 0
  4877                           ;Run.c: 85: if (Local_Key_User.key_state[2-1] == KEY_short) RS485_SendBuff[RS485_Num] --
      +                           ;
  4878  0013E6  0100               	movlb	0	; () banked
  4879  0013E8  058A               	decf	(_Local_Key_User+14)& (0+255),w,b	;volatile
  4880  0013EA  A4D8               	btfss	status,2,c
  4881  0013EC  D00A               	goto	i2l2577
  4882                           
  4883                           ; BSR set to: 0
  4884  0013EE  5044               	movf	_RS485_Num,w,c
  4885  0013F0  0D01               	mullw	1
  4886  0013F2  0E8E               	movlw	low _RS485_SendBuff
  4887  0013F4  24F3               	addwf	prodl,w,c
  4888  0013F6  6ED9               	movwf	fsr2l,c
  4889  0013F8  0E00               	movlw	high _RS485_SendBuff
  4890  0013FA  20F4               	addwfc	prodh,w,c
  4891  0013FC  6EDA               	movwf	fsr2h,c
  4892  0013FE  06DF               	decf	indf2,f,c
  4893  001400  D000               	goto	i2l2577
  4894  001402                     i2l2577:
  4895                           
  4896                           ; BSR set to: 0
  4897                           ;Run.c: 86: if (Local_Key_User.key_state[2-1] == KEY_hold) RS485_SendBuff[RS485_Num] -- 
      +                          ;
  4898  001402  0E03               	movlw	3
  4899  001404  0100               	movlb	0	; () banked
  4900  001406  198A               	xorwf	(_Local_Key_User+14)& (0+255),w,b	;volatile
  4901  001408  A4D8               	btfss	status,2,c
  4902  00140A  D00A               	goto	i2l2581
  4903                           
  4904                           ; BSR set to: 0
  4905  00140C  5044               	movf	_RS485_Num,w,c
  4906  00140E  0D01               	mullw	1
  4907  001410  0E8E               	movlw	low _RS485_SendBuff
  4908  001412  24F3               	addwf	prodl,w,c
  4909  001414  6ED9               	movwf	fsr2l,c
  4910  001416  0E00               	movlw	high _RS485_SendBuff
  4911  001418  20F4               	addwfc	prodh,w,c
  4912  00141A  6EDA               	movwf	fsr2h,c
  4913  00141C  06DF               	decf	indf2,f,c
  4914  00141E  D000               	goto	i2l2581
  4915  001420                     i2l2581:
  4916                           
  4917                           ; BSR set to: 0
  4918                           ;Run.c: 91: if (Local_Key_User.key_state[1-1] == KEY_short) Handle_Switch.Usart_OneDate 
      +                          = 1 ;
  4919  001420  0100               	movlb	0	; () banked
  4920  001422  0589               	decf	(_Local_Key_User+13)& (0+255),w,b	;volatile
  4921  001424  A4D8               	btfss	status,2,c
  4922  001426  D003               	goto	i2l2585
  4923                           
  4924                           ; BSR set to: 0
  4925  001428  0E01               	movlw	1
  4926  00142A  6E35               	movwf	_Handle_Switch+2,c
  4927  00142C  D000               	goto	i2l2585
  4928  00142E                     i2l2585:
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;Run.c: 93: g_Addr = g_Addr%4 + 4;
  4932  00142E  5047               	movf	_g_Addr,w,c
  4933  001430  0B03               	andlw	3
  4934  001432  0F04               	addlw	4
  4935  001434  6E47               	movwf	_g_Addr,c
  4936                           
  4937                           ; BSR set to: 0
  4938                           ;Run.c: 95: Key_FSM_Reset();
  4939  001436  EC28  F00E         	call	_Key_FSM_Reset	;wreg free
  4940  00143A  0012               	return		;funcret
  4941  00143C                     __end_of_Manage_Message:
  4942                           	opt stack 0
  4943                           pclatu	equ	0xFFB
  4944                           pclath	equ	0xFFA
  4945                           tblptru	equ	0xFF8
  4946                           tblptrh	equ	0xFF7
  4947                           tblptrl	equ	0xFF6
  4948                           tablat	equ	0xFF5
  4949                           prodh	equ	0xFF4
  4950                           prodl	equ	0xFF3
  4951                           intcon	equ	0xFF2
  4952                           postinc0	equ	0xFEE
  4953                           fsr0h	equ	0xFEA
  4954                           fsr0l	equ	0xFE9
  4955                           wreg	equ	0xFE8
  4956                           indf1	equ	0xFE7
  4957                           fsr1h	equ	0xFE2
  4958                           fsr1l	equ	0xFE1
  4959                           indf2	equ	0xFDF
  4960                           fsr2h	equ	0xFDA
  4961                           fsr2l	equ	0xFD9
  4962                           status	equ	0xFD8
  4963                           
  4964 ;; *************** function ___lbmod *****************
  4965 ;; Defined at:
  4966 ;;		line 4 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbmod.c"
  4967 ;; Parameters:    Size  Location     Type
  4968 ;;  dividend        1    wreg     unsigned char 
  4969 ;;  divisor         1    0[COMRAM] unsigned char 
  4970 ;; Auto vars:     Size  Location     Type
  4971 ;;  dividend        1    1[COMRAM] unsigned char 
  4972 ;;  rem             1    3[COMRAM] unsigned char 
  4973 ;;  counter         1    2[COMRAM] unsigned char 
  4974 ;; Return value:  Size  Location     Type
  4975 ;;                  1    wreg      unsigned char 
  4976 ;; Registers used:
  4977 ;;		wreg, status,2, status,0
  4978 ;; Tracked objects:
  4979 ;;		On entry : 0/0
  4980 ;;		On exit  : 0/0
  4981 ;;		Unchanged: 0/0
  4982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4983 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4984 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4986 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4987 ;;Total ram usage:        4 bytes
  4988 ;; Hardware stack levels used:    1
  4989 ;; This function calls:
  4990 ;;		Nothing
  4991 ;; This function is called by:
  4992 ;;		_Manage_Message
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996                           	psect	text36
  4997  001D84                     __ptext36:
  4998                           	opt stack 0
  4999  001D84                     ___lbmod:
  5000                           	opt stack 23
  5001                           
  5002                           ;incstack = 0
  5003                           ;___lbmod@dividend stored from wreg
  5004  001D84  6E02               	movwf	___lbmod@dividend,c
  5005  001D86  0E08               	movlw	8
  5006  001D88  6E03               	movwf	___lbmod@counter,c
  5007  001D8A  0E00               	movlw	0
  5008  001D8C  6E04               	movwf	___lbmod@rem,c
  5009  001D8E  D000               	goto	i2l2375
  5010  001D90                     i2l2375:
  5011  001D90  90D8               	bcf	status,0,c
  5012  001D92  3402               	rlcf	___lbmod@dividend,w,c
  5013  001D94  3404               	rlcf	___lbmod@rem,w,c
  5014  001D96  6E04               	movwf	___lbmod@rem,c
  5015  001D98  90D8               	bcf	status,0,c
  5016  001D9A  3602               	rlcf	___lbmod@dividend,f,c
  5017  001D9C  5001               	movf	___lbmod@divisor,w,c
  5018  001D9E  5C04               	subwf	___lbmod@rem,w,c
  5019  001DA0  A0D8               	btfss	status,0,c
  5020  001DA2  D003               	goto	i2l2383
  5021  001DA4  5001               	movf	___lbmod@divisor,w,c
  5022  001DA6  5E04               	subwf	___lbmod@rem,f,c
  5023  001DA8  D000               	goto	i2l2383
  5024  001DAA                     i2l2383:
  5025  001DAA  2E03               	decfsz	___lbmod@counter,f,c
  5026  001DAC  D7F1               	goto	i2l2375
  5027  001DAE  D000               	goto	i2l2385
  5028  001DB0                     i2l2385:
  5029  001DB0  5004               	movf	___lbmod@rem,w,c
  5030  001DB2  0012               	return	
  5031  001DB4  0012               	return		;funcret
  5032  001DB6                     __end_of___lbmod:
  5033                           	opt stack 0
  5034                           pclatu	equ	0xFFB
  5035                           pclath	equ	0xFFA
  5036                           tblptru	equ	0xFF8
  5037                           tblptrh	equ	0xFF7
  5038                           tblptrl	equ	0xFF6
  5039                           tablat	equ	0xFF5
  5040                           prodh	equ	0xFF4
  5041                           prodl	equ	0xFF3
  5042                           intcon	equ	0xFF2
  5043                           postinc0	equ	0xFEE
  5044                           fsr0h	equ	0xFEA
  5045                           fsr0l	equ	0xFE9
  5046                           wreg	equ	0xFE8
  5047                           indf1	equ	0xFE7
  5048                           fsr1h	equ	0xFE2
  5049                           fsr1l	equ	0xFE1
  5050                           indf2	equ	0xFDF
  5051                           fsr2h	equ	0xFDA
  5052                           fsr2l	equ	0xFD9
  5053                           status	equ	0xFD8
  5054                           
  5055 ;; *************** function _Key_FSM_Reset *****************
  5056 ;; Defined at:
  5057 ;;		line 148 in file "_01_USER/Key.c"
  5058 ;; Parameters:    Size  Location     Type
  5059 ;;		None
  5060 ;; Auto vars:     Size  Location     Type
  5061 ;;  t               1    0[COMRAM] unsigned char 
  5062 ;; Return value:  Size  Location     Type
  5063 ;;		None               void
  5064 ;; Registers used:
  5065 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5066 ;; Tracked objects:
  5067 ;;		On entry : 0/0
  5068 ;;		On exit  : 0/0
  5069 ;;		Unchanged: 0/0
  5070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5072 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5074 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5075 ;;Total ram usage:        1 bytes
  5076 ;; Hardware stack levels used:    1
  5077 ;; This function calls:
  5078 ;;		Nothing
  5079 ;; This function is called by:
  5080 ;;		_Manage_Message
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           
  5084                           	psect	text37
  5085  001C50                     __ptext37:
  5086                           	opt stack 0
  5087  001C50                     _Key_FSM_Reset:
  5088                           	opt stack 23
  5089                           
  5090                           ;Key.c: 150: unsigned char t;
  5091                           ;Key.c: 151: Local_Key_User.key_BUS = 0x00;
  5092                           
  5093                           ;incstack = 0
  5094  001C50  0E00               	movlw	0
  5095  001C52  0100               	movlb	0	; () banked
  5096  001C54  6F7C               	movwf	_Local_Key_User& (0+255),b	;volatile
  5097                           
  5098                           ;Key.c: 152: Local_Key_User.key_group = KEY_default;
  5099  001C56  0E00               	movlw	0
  5100  001C58  0100               	movlb	0	; () banked
  5101  001C5A  6F7D               	movwf	(_Local_Key_User+1)& (0+255),b	;volatile
  5102                           
  5103                           ;Key.c: 153: t=4;
  5104  001C5C  0E04               	movlw	4
  5105  001C5E  6E01               	movwf	Key_FSM_Reset@t,c
  5106                           
  5107                           ;Key.c: 154: while(t--) Local_Key_User.key_count[t] = 0,
  5108  001C60  D017               	goto	i2l2255
  5109  001C62                     i2l2253:
  5110                           
  5111                           ;Key.c: 155: Local_Key_User.key_state[t] = KEY_default;
  5112  001C62  5001               	movf	Key_FSM_Reset@t,w,c
  5113  001C64  0D02               	mullw	2
  5114  001C66  0E7F               	movlw	low (_Local_Key_User+3)
  5115  001C68  24F3               	addwf	prodl,w,c
  5116  001C6A  6ED9               	movwf	fsr2l,c
  5117  001C6C  0E00               	movlw	high (_Local_Key_User+3)
  5118  001C6E  20F4               	addwfc	prodh,w,c
  5119  001C70  6EDA               	movwf	fsr2h,c
  5120  001C72  0E00               	movlw	0
  5121  001C74  6EDE               	movwf	postinc2,c
  5122  001C76  0E00               	movlw	0
  5123  001C78  6EDD               	movwf	postdec2,c
  5124  001C7A  5001               	movf	Key_FSM_Reset@t,w,c
  5125  001C7C  0D01               	mullw	1
  5126  001C7E  0E89               	movlw	low (_Local_Key_User+13)
  5127  001C80  24F3               	addwf	prodl,w,c
  5128  001C82  6ED9               	movwf	fsr2l,c
  5129  001C84  0E00               	movlw	high (_Local_Key_User+13)
  5130  001C86  20F4               	addwfc	prodh,w,c
  5131  001C88  6EDA               	movwf	fsr2h,c
  5132  001C8A  0E00               	movlw	0
  5133  001C8C  6EDF               	movwf	indf2,c
  5134  001C8E  D000               	goto	i2l2255
  5135  001C90                     i2l2255:
  5136  001C90  0601               	decf	Key_FSM_Reset@t,f,c
  5137  001C92  2801               	incf	Key_FSM_Reset@t,w,c
  5138  001C94  A4D8               	btfss	status,2,c
  5139  001C96  D7E5               	goto	i2l2253
  5140  001C98  0012               	return		;funcret
  5141  001C9A                     __end_of_Key_FSM_Reset:
  5142                           	opt stack 0
  5143                           pclatu	equ	0xFFB
  5144                           pclath	equ	0xFFA
  5145                           tblptru	equ	0xFF8
  5146                           tblptrh	equ	0xFF7
  5147                           tblptrl	equ	0xFF6
  5148                           tablat	equ	0xFF5
  5149                           prodh	equ	0xFF4
  5150                           prodl	equ	0xFF3
  5151                           intcon	equ	0xFF2
  5152                           postinc0	equ	0xFEE
  5153                           fsr0h	equ	0xFEA
  5154                           fsr0l	equ	0xFE9
  5155                           wreg	equ	0xFE8
  5156                           indf1	equ	0xFE7
  5157                           fsr1h	equ	0xFE2
  5158                           fsr1l	equ	0xFE1
  5159                           indf2	equ	0xFDF
  5160                           postinc2	equ	0xFDE
  5161                           postdec2	equ	0xFDD
  5162                           fsr2h	equ	0xFDA
  5163                           fsr2l	equ	0xFD9
  5164                           status	equ	0xFD8
  5165                           
  5166 ;; *************** function _Key_FSM_Read *****************
  5167 ;; Defined at:
  5168 ;;		line 98 in file "_01_USER/Key.c"
  5169 ;; Parameters:    Size  Location     Type
  5170 ;;		None
  5171 ;; Auto vars:     Size  Location     Type
  5172 ;;  key_num         1    5[COMRAM] unsigned char 
  5173 ;;  key_num_mate    1    4[COMRAM] unsigned char 
  5174 ;; Return value:  Size  Location     Type
  5175 ;;		None               void
  5176 ;; Registers used:
  5177 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5178 ;; Tracked objects:
  5179 ;;		On entry : 0/0
  5180 ;;		On exit  : 0/0
  5181 ;;		Unchanged: 0/0
  5182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5184 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5185 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5186 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5187 ;;Total ram usage:        6 bytes
  5188 ;; Hardware stack levels used:    1
  5189 ;; This function calls:
  5190 ;;		Nothing
  5191 ;; This function is called by:
  5192 ;;		_Manage_Message
  5193 ;; This function uses a non-reentrant model
  5194 ;;
  5195                           
  5196                           	psect	text38
  5197  001012                     __ptext38:
  5198                           	opt stack 0
  5199  001012                     _Key_FSM_Read:
  5200                           	opt stack 23
  5201                           
  5202                           ;Key.c: 100: unsigned char key_num = 5,key_num_mate;
  5203                           
  5204                           ;incstack = 0
  5205  001012  0E05               	movlw	5
  5206  001014  6E06               	movwf	Key_FSM_Read@key_num,c
  5207                           
  5208                           ;Key.c: 103: while(key_num--)
  5209  001016  D072               	goto	i2l2223
  5210  001018                     i2l2205:
  5211                           
  5212                           ;Key.c: 104: {
  5213                           ;Key.c: 106: if( Local_Key_FSM.key_BUS == 0x00 )
  5214  001018  0100               	movlb	0	; () banked
  5215  00101A  516A               	movf	_Local_Key_FSM& (0+255),w,b	;volatile
  5216  00101C  A4D8               	btfss	status,2,c
  5217  00101E  D04A               	goto	i2l2217
  5218                           
  5219                           ; BSR set to: 0
  5220                           ;Key.c: 107: {
  5221                           ;Key.c: 108: if( Local_Key_FSM.key_count[key_num] > 5 )
  5222  001020  5006               	movf	Key_FSM_Read@key_num,w,c
  5223  001022  0D02               	mullw	2
  5224  001024  0E6D               	movlw	low (_Local_Key_FSM+3)
  5225  001026  24F3               	addwf	prodl,w,c
  5226  001028  6ED9               	movwf	fsr2l,c
  5227  00102A  0E00               	movlw	high (_Local_Key_FSM+3)
  5228  00102C  20F4               	addwfc	prodh,w,c
  5229  00102E  6EDA               	movwf	fsr2h,c
  5230  001030  0E01               	movlw	1
  5231  001032  50DB               	movf	plusw2,w,c
  5232  001034  E104               	bnz	i2u174_40
  5233  001036  0E06               	movlw	6
  5234  001038  5CDE               	subwf	postinc2,w,c
  5235  00103A  A0D8               	btfss	status,0,c
  5236  00103C  D024               	goto	i2l2215
  5237  00103E                     i2u174_40:
  5238                           
  5239                           ; BSR set to: 0
  5240                           ;Key.c: 109: {
  5241                           ;Key.c: 110: if( Local_Key_FSM.key_count[key_num] > 60 )
  5242  00103E  5006               	movf	Key_FSM_Read@key_num,w,c
  5243  001040  0D02               	mullw	2
  5244  001042  0E6D               	movlw	low (_Local_Key_FSM+3)
  5245  001044  24F3               	addwf	prodl,w,c
  5246  001046  6ED9               	movwf	fsr2l,c
  5247  001048  0E00               	movlw	high (_Local_Key_FSM+3)
  5248  00104A  20F4               	addwfc	prodh,w,c
  5249  00104C  6EDA               	movwf	fsr2h,c
  5250  00104E  0E01               	movlw	1
  5251  001050  50DB               	movf	plusw2,w,c
  5252  001052  E104               	bnz	i2u175_40
  5253  001054  0E3D               	movlw	61
  5254  001056  5CDE               	subwf	postinc2,w,c
  5255  001058  A0D8               	btfss	status,0,c
  5256  00105A  D00A               	goto	i2l2213
  5257  00105C                     i2u175_40:
  5258                           
  5259                           ; BSR set to: 0
  5260                           ;Key.c: 111: Local_Key_User.key_state[key_num] = KEY_long;
  5261  00105C  5006               	movf	Key_FSM_Read@key_num,w,c
  5262  00105E  0D01               	mullw	1
  5263  001060  0E89               	movlw	low (_Local_Key_User+13)
  5264  001062  24F3               	addwf	prodl,w,c
  5265  001064  6ED9               	movwf	fsr2l,c
  5266  001066  0E00               	movlw	high (_Local_Key_User+13)
  5267  001068  20F4               	addwfc	prodh,w,c
  5268  00106A  6EDA               	movwf	fsr2h,c
  5269  00106C  0E05               	movlw	5
  5270  00106E  D014               	goto	L3
  5271  001070                     i2l2213:
  5272                           
  5273                           ; BSR set to: 0
  5274                           ;Key.c: 112: else Local_Key_User.key_state[key_num] = KEY_short;
  5275  001070  5006               	movf	Key_FSM_Read@key_num,w,c
  5276  001072  0D01               	mullw	1
  5277  001074  0E89               	movlw	low (_Local_Key_User+13)
  5278  001076  24F3               	addwf	prodl,w,c
  5279  001078  6ED9               	movwf	fsr2l,c
  5280  00107A  0E00               	movlw	high (_Local_Key_User+13)
  5281  00107C  20F4               	addwfc	prodh,w,c
  5282  00107E  6EDA               	movwf	fsr2h,c
  5283  001080  0E01               	movlw	1
  5284  001082  6EDF               	movwf	indf2,c
  5285                           
  5286                           ; BSR set to: 0
  5287                           ;Key.c: 113: }
  5288  001084  D00A               	goto	i2l111
  5289  001086                     i2l2215:
  5290                           
  5291                           ; BSR set to: 0
  5292                           ;Key.c: 114: else Local_Key_User.key_state[key_num] = KEY_default;
  5293  001086  5006               	movf	Key_FSM_Read@key_num,w,c
  5294  001088  0D01               	mullw	1
  5295  00108A  0E89               	movlw	low (_Local_Key_User+13)
  5296  00108C  24F3               	addwf	prodl,w,c
  5297  00108E  6ED9               	movwf	fsr2l,c
  5298  001090  0E00               	movlw	high (_Local_Key_User+13)
  5299  001092  20F4               	addwfc	prodh,w,c
  5300  001094  6EDA               	movwf	fsr2h,c
  5301  001096  0E00               	movlw	0
  5302  001098                     L3:
  5303  001098  6EDF               	movwf	indf2,c
  5304  00109A                     i2l111:
  5305                           
  5306                           ; BSR set to: 0
  5307                           ;Key.c: 115: Local_Key_FSM.key_count[key_num] = 0;
  5308  00109A  5006               	movf	Key_FSM_Read@key_num,w,c
  5309  00109C  0D02               	mullw	2
  5310  00109E  0E6D               	movlw	low (_Local_Key_FSM+3)
  5311  0010A0  24F3               	addwf	prodl,w,c
  5312  0010A2  6ED9               	movwf	fsr2l,c
  5313  0010A4  0E00               	movlw	high (_Local_Key_FSM+3)
  5314  0010A6  20F4               	addwfc	prodh,w,c
  5315  0010A8  6EDA               	movwf	fsr2h,c
  5316  0010AA  0E00               	movlw	0
  5317  0010AC  6EDE               	movwf	postinc2,c
  5318  0010AE  0E00               	movlw	0
  5319  0010B0  6EDD               	movwf	postdec2,c
  5320                           
  5321                           ;Key.c: 116: }
  5322  0010B2  D024               	goto	i2l2223
  5323  0010B4                     i2l2217:
  5324                           
  5325                           ; BSR set to: 0
  5326                           ;Key.c: 118: else if( Local_Key_FSM.key_count[key_num] > 60 )
  5327  0010B4  5006               	movf	Key_FSM_Read@key_num,w,c
  5328  0010B6  0D02               	mullw	2
  5329  0010B8  0E6D               	movlw	low (_Local_Key_FSM+3)
  5330  0010BA  24F3               	addwf	prodl,w,c
  5331  0010BC  6ED9               	movwf	fsr2l,c
  5332  0010BE  0E00               	movlw	high (_Local_Key_FSM+3)
  5333  0010C0  20F4               	addwfc	prodh,w,c
  5334  0010C2  6EDA               	movwf	fsr2h,c
  5335  0010C4  0E01               	movlw	1
  5336  0010C6  50DB               	movf	plusw2,w,c
  5337  0010C8  E104               	bnz	i2u176_40
  5338  0010CA  0E3D               	movlw	61
  5339  0010CC  5CDE               	subwf	postinc2,w,c
  5340  0010CE  A0D8               	btfss	status,0,c
  5341  0010D0  D00A               	goto	i2l2221
  5342  0010D2                     i2u176_40:
  5343                           
  5344                           ; BSR set to: 0
  5345                           ;Key.c: 119: Local_Key_User.key_state[key_num] = KEY_hold;
  5346  0010D2  5006               	movf	Key_FSM_Read@key_num,w,c
  5347  0010D4  0D01               	mullw	1
  5348  0010D6  0E89               	movlw	low (_Local_Key_User+13)
  5349  0010D8  24F3               	addwf	prodl,w,c
  5350  0010DA  6ED9               	movwf	fsr2l,c
  5351  0010DC  0E00               	movlw	high (_Local_Key_User+13)
  5352  0010DE  20F4               	addwfc	prodh,w,c
  5353  0010E0  6EDA               	movwf	fsr2h,c
  5354  0010E2  0E03               	movlw	3
  5355  0010E4  D009               	goto	L4
  5356  0010E6                     i2l2221:
  5357                           
  5358                           ; BSR set to: 0
  5359                           ;Key.c: 122: else Local_Key_User.key_state[key_num] = KEY_busy;
  5360  0010E6  5006               	movf	Key_FSM_Read@key_num,w,c
  5361  0010E8  0D01               	mullw	1
  5362  0010EA  0E89               	movlw	low (_Local_Key_User+13)
  5363  0010EC  24F3               	addwf	prodl,w,c
  5364  0010EE  6ED9               	movwf	fsr2l,c
  5365  0010F0  0E00               	movlw	high (_Local_Key_User+13)
  5366  0010F2  20F4               	addwfc	prodh,w,c
  5367  0010F4  6EDA               	movwf	fsr2h,c
  5368  0010F6  0E04               	movlw	4
  5369  0010F8                     L4:
  5370  0010F8  6EDF               	movwf	indf2,c
  5371                           
  5372                           ; BSR set to: 0
  5373                           
  5374                           ; BSR set to: 0
  5375  0010FA  D000               	goto	i2l2223
  5376  0010FC                     i2l2223:
  5377  0010FC  0606               	decf	Key_FSM_Read@key_num,f,c
  5378  0010FE  2806               	incf	Key_FSM_Read@key_num,w,c
  5379  001100  A4D8               	btfss	status,2,c
  5380  001102  D78A               	goto	i2l2205
  5381                           
  5382                           ;Key.c: 123: }
  5383                           ;Key.c: 127: for( key_num = 0;key_num < 5 - 1; key_num ++)
  5384  001104  0E00               	movlw	0
  5385  001106  6E06               	movwf	Key_FSM_Read@key_num,c
  5386  001108  0E03               	movlw	3
  5387  00110A  6406               	cpfsgt	Key_FSM_Read@key_num,c
  5388  00110C  D002               	goto	i2l2231
  5389  00110E  0012               	return	
  5390  001110  0012               	return	
  5391  001112                     i2l2231:
  5392                           
  5393                           ;Key.c: 128: for( key_num_mate = key_num+1;key_num_mate < 5 ; key_num_mate ++)
  5394  001112  2806               	incf	Key_FSM_Read@key_num,w,c
  5395  001114  6E05               	movwf	Key_FSM_Read@key_num_mate,c
  5396  001116  0E04               	movlw	4
  5397  001118  6405               	cpfsgt	Key_FSM_Read@key_num_mate,c
  5398  00111A  D001               	goto	i2l2235
  5399  00111C  D045               	goto	i2l2247
  5400  00111E                     i2l2235:
  5401                           
  5402                           ;Key.c: 129: if( Local_Key_User.key_state[key_num] == Local_Key_User.key_state[key_num_m
      +                          ate] )
  5403  00111E  5005               	movf	Key_FSM_Read@key_num_mate,w,c
  5404  001120  0D01               	mullw	1
  5405  001122  0E89               	movlw	low (_Local_Key_User+13)
  5406  001124  24F3               	addwf	prodl,w,c
  5407  001126  6ED9               	movwf	fsr2l,c
  5408  001128  0E00               	movlw	high (_Local_Key_User+13)
  5409  00112A  20F4               	addwfc	prodh,w,c
  5410  00112C  6EDA               	movwf	fsr2h,c
  5411  00112E  5006               	movf	Key_FSM_Read@key_num,w,c
  5412  001130  0D01               	mullw	1
  5413  001132  0E89               	movlw	low (_Local_Key_User+13)
  5414  001134  24F3               	addwf	prodl,w,c
  5415  001136  6EE1               	movwf	fsr1l,c
  5416  001138  0E00               	movlw	high (_Local_Key_User+13)
  5417  00113A  20F4               	addwfc	prodh,w,c
  5418  00113C  6EE2               	movwf	fsr1h,c
  5419  00113E  50DE               	movf	postinc2,w,c
  5420  001140  18E6               	xorwf	postinc1,w,c
  5421  001142  A4D8               	btfss	status,2,c
  5422  001144  D02F               	goto	i2l2243
  5423                           
  5424                           ;Key.c: 130: if(Local_Key_User.key_state[key_num] != KEY_default)
  5425  001146  5006               	movf	Key_FSM_Read@key_num,w,c
  5426  001148  0D01               	mullw	1
  5427  00114A  0E89               	movlw	low (_Local_Key_User+13)
  5428  00114C  24F3               	addwf	prodl,w,c
  5429  00114E  6ED9               	movwf	fsr2l,c
  5430  001150  0E00               	movlw	high (_Local_Key_User+13)
  5431  001152  20F4               	addwfc	prodh,w,c
  5432  001154  6EDA               	movwf	fsr2h,c
  5433  001156  50DF               	movf	indf2,w,c
  5434  001158  B4D8               	btfsc	status,2,c
  5435  00115A  D024               	goto	i2l2243
  5436                           
  5437                           ;Key.c: 131: {
  5438                           ;Key.c: 132: Local_Key_User.key_group = (0x01 << key_num)|(0x01 << key_num_mate);
  5439  00115C  C005  F001         	movff	Key_FSM_Read@key_num_mate,??_Key_FSM_Read
  5440  001160  0E01               	movlw	1
  5441  001162  6E02               	movwf	(??_Key_FSM_Read+1)& (0+255),c
  5442  001164  2A01               	incf	??_Key_FSM_Read,f,c
  5443  001166  D002               	goto	i2u182_44
  5444  001168                     i2u182_45:
  5445  001168  90D8               	bcf	status,0,c
  5446  00116A  3602               	rlcf	??_Key_FSM_Read+1,f,c
  5447  00116C                     i2u182_44:
  5448  00116C  2E01               	decfsz	??_Key_FSM_Read,f,c
  5449  00116E  D7FC               	goto	i2u182_45
  5450  001170  C006  F003         	movff	Key_FSM_Read@key_num,??_Key_FSM_Read+2
  5451  001174  0E01               	movlw	1
  5452  001176  6E04               	movwf	(??_Key_FSM_Read+3)& (0+255),c
  5453  001178  2A03               	incf	??_Key_FSM_Read+2,f,c
  5454  00117A  D002               	goto	i2u183_44
  5455  00117C                     i2u183_45:
  5456  00117C  90D8               	bcf	status,0,c
  5457  00117E  3604               	rlcf	??_Key_FSM_Read+3,f,c
  5458  001180                     i2u183_44:
  5459  001180  2E03               	decfsz	??_Key_FSM_Read+2,f,c
  5460  001182  D7FC               	goto	i2u183_45
  5461  001184  5004               	movf	??_Key_FSM_Read+3,w,c
  5462  001186  1002               	iorwf	??_Key_FSM_Read+1,w,c
  5463  001188  0100               	movlb	0	; () banked
  5464  00118A  6F7D               	movwf	(_Local_Key_User+1)& (0+255),b	;volatile
  5465                           
  5466                           ; BSR set to: 0
  5467                           ;Key.c: 133: Local_Key_User.key_group_state = Local_Key_User.key_state[key_num];
  5468  00118C  5006               	movf	Key_FSM_Read@key_num,w,c
  5469  00118E  0D01               	mullw	1
  5470  001190  0E89               	movlw	low (_Local_Key_User+13)
  5471  001192  24F3               	addwf	prodl,w,c
  5472  001194  6ED9               	movwf	fsr2l,c
  5473  001196  0E00               	movlw	high (_Local_Key_User+13)
  5474  001198  20F4               	addwfc	prodh,w,c
  5475  00119A  6EDA               	movwf	fsr2h,c
  5476  00119C  50DF               	movf	indf2,w,c
  5477  00119E  0100               	movlb	0	; () banked
  5478  0011A0  6F7E               	movwf	(_Local_Key_User+2)& (0+255),b	;volatile
  5479                           
  5480                           ; BSR set to: 0
  5481  0011A2  D000               	goto	i2l2243
  5482  0011A4                     i2l2243:
  5483  0011A4  2A05               	incf	Key_FSM_Read@key_num_mate,f,c
  5484  0011A6  D7B7               	goto	L5
  5485  0011A8                     i2l2247:
  5486  0011A8  2A06               	incf	Key_FSM_Read@key_num,f,c
  5487  0011AA  0E03               	movlw	3
  5488  0011AC  6406               	cpfsgt	Key_FSM_Read@key_num,c
  5489  0011AE  D7B1               	goto	i2l2231
  5490  0011B0  0012               	return	
  5491  0011B2  0012               	return		;funcret
  5492  0011B4                     __end_of_Key_FSM_Read:
  5493                           	opt stack 0
  5494                           pclatu	equ	0xFFB
  5495                           pclath	equ	0xFFA
  5496                           tblptru	equ	0xFF8
  5497                           tblptrh	equ	0xFF7
  5498                           tblptrl	equ	0xFF6
  5499                           tablat	equ	0xFF5
  5500                           prodh	equ	0xFF4
  5501                           prodl	equ	0xFF3
  5502                           intcon	equ	0xFF2
  5503                           postinc0	equ	0xFEE
  5504                           fsr0h	equ	0xFEA
  5505                           fsr0l	equ	0xFE9
  5506                           wreg	equ	0xFE8
  5507                           indf1	equ	0xFE7
  5508                           postinc1	equ	0xFE6
  5509                           fsr1h	equ	0xFE2
  5510                           fsr1l	equ	0xFE1
  5511                           indf2	equ	0xFDF
  5512                           postinc2	equ	0xFDE
  5513                           postdec2	equ	0xFDD
  5514                           plusw2	equ	0xFDB
  5515                           fsr2h	equ	0xFDA
  5516                           fsr2l	equ	0xFD9
  5517                           status	equ	0xFD8
  5518                           
  5519 ;; *************** function _Key_FSM_Scan *****************
  5520 ;; Defined at:
  5521 ;;		line 77 in file "_01_USER/Key.c"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;		None
  5524 ;; Auto vars:     Size  Location     Type
  5525 ;;		None
  5526 ;; Return value:  Size  Location     Type
  5527 ;;		None               void
  5528 ;; Registers used:
  5529 ;;		wreg, status,2, status,0, cstack
  5530 ;; Tracked objects:
  5531 ;;		On entry : 0/0
  5532 ;;		On exit  : 0/0
  5533 ;;		Unchanged: 0/0
  5534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5539 ;;Total ram usage:        0 bytes
  5540 ;; Hardware stack levels used:    1
  5541 ;; Hardware stack levels required when called:    1
  5542 ;; This function calls:
  5543 ;;		_Key_Scan
  5544 ;; This function is called by:
  5545 ;;		_Sys_Cyc
  5546 ;; This function uses a non-reentrant model
  5547 ;;
  5548                           
  5549                           	psect	text39
  5550  001C04                     __ptext39:
  5551                           	opt stack 0
  5552  001C04                     _Key_FSM_Scan:
  5553                           	opt stack 23
  5554                           
  5555                           ;Key.c: 79: Key_Scan();
  5556                           
  5557                           ;incstack = 0
  5558  001C04  EC89  F00E         	call	_Key_Scan	;wreg free
  5559                           
  5560                           ;Key.c: 80: if( Local_Key_FSM.key_BUS & 0x01 ) Local_Key_FSM.key_count[0]++;
  5561  001C08  0100               	movlb	0	; () banked
  5562  001C0A  A16A               	btfss	_Local_Key_FSM& (0+255),0,b	;volatile
  5563  001C0C  D004               	goto	i2l2499
  5564                           
  5565                           ; BSR set to: 0
  5566  001C0E  0100               	movlb	0	; () banked
  5567  001C10  4B6D               	infsnz	(_Local_Key_FSM+3)& (0+255),f,b	;volatile
  5568  001C12  2B6E               	incf	(_Local_Key_FSM+4)& (0+255),f,b	;volatile
  5569  001C14  D000               	goto	i2l2499
  5570  001C16                     i2l2499:
  5571                           
  5572                           ; BSR set to: 0
  5573                           ;Key.c: 81: if( Local_Key_FSM.key_BUS & 0x02 ) Local_Key_FSM.key_count[1]++;
  5574  001C16  0100               	movlb	0	; () banked
  5575  001C18  A36A               	btfss	_Local_Key_FSM& (0+255),1,b	;volatile
  5576  001C1A  D004               	goto	i2l2503
  5577                           
  5578                           ; BSR set to: 0
  5579  001C1C  0100               	movlb	0	; () banked
  5580  001C1E  4B6F               	infsnz	(_Local_Key_FSM+5)& (0+255),f,b	;volatile
  5581  001C20  2B70               	incf	(_Local_Key_FSM+6)& (0+255),f,b	;volatile
  5582  001C22  D000               	goto	i2l2503
  5583  001C24                     i2l2503:
  5584                           
  5585                           ; BSR set to: 0
  5586                           ;Key.c: 82: if( Local_Key_FSM.key_BUS & 0x04 ) Local_Key_FSM.key_count[2]++;
  5587  001C24  0100               	movlb	0	; () banked
  5588  001C26  A56A               	btfss	_Local_Key_FSM& (0+255),2,b	;volatile
  5589  001C28  D004               	goto	i2l2507
  5590                           
  5591                           ; BSR set to: 0
  5592  001C2A  0100               	movlb	0	; () banked
  5593  001C2C  4B71               	infsnz	(_Local_Key_FSM+7)& (0+255),f,b	;volatile
  5594  001C2E  2B72               	incf	(_Local_Key_FSM+8)& (0+255),f,b	;volatile
  5595  001C30  D000               	goto	i2l2507
  5596  001C32                     i2l2507:
  5597                           
  5598                           ; BSR set to: 0
  5599                           ;Key.c: 83: if( Local_Key_FSM.key_BUS & 0x08 ) Local_Key_FSM.key_count[3]++;
  5600  001C32  0100               	movlb	0	; () banked
  5601  001C34  A76A               	btfss	_Local_Key_FSM& (0+255),3,b	;volatile
  5602  001C36  D004               	goto	i2l2511
  5603                           
  5604                           ; BSR set to: 0
  5605  001C38  0100               	movlb	0	; () banked
  5606  001C3A  4B73               	infsnz	(_Local_Key_FSM+9)& (0+255),f,b	;volatile
  5607  001C3C  2B74               	incf	(_Local_Key_FSM+10)& (0+255),f,b	;volatile
  5608  001C3E  D000               	goto	i2l2511
  5609  001C40                     i2l2511:
  5610                           
  5611                           ; BSR set to: 0
  5612                           ;Key.c: 84: if( Local_Key_FSM.key_BUS & 0x10 ) Local_Key_FSM.key_count[4]++;
  5613  001C40  0100               	movlb	0	; () banked
  5614  001C42  A96A               	btfss	_Local_Key_FSM& (0+255),4,b	;volatile
  5615  001C44  0012               	return	
  5616                           
  5617                           ; BSR set to: 0
  5618  001C46  0100               	movlb	0	; () banked
  5619  001C48  4B75               	infsnz	(_Local_Key_FSM+11)& (0+255),f,b	;volatile
  5620  001C4A  2B76               	incf	(_Local_Key_FSM+12)& (0+255),f,b	;volatile
  5621  001C4C  0012               	return	
  5622                           
  5623                           ; BSR set to: 0
  5624                           
  5625                           ; BSR set to: 0
  5626  001C4E  0012               	return		;funcret
  5627  001C50                     __end_of_Key_FSM_Scan:
  5628                           	opt stack 0
  5629                           pclatu	equ	0xFFB
  5630                           pclath	equ	0xFFA
  5631                           tblptru	equ	0xFF8
  5632                           tblptrh	equ	0xFF7
  5633                           tblptrl	equ	0xFF6
  5634                           tablat	equ	0xFF5
  5635                           prodh	equ	0xFF4
  5636                           prodl	equ	0xFF3
  5637                           intcon	equ	0xFF2
  5638                           postinc0	equ	0xFEE
  5639                           fsr0h	equ	0xFEA
  5640                           fsr0l	equ	0xFE9
  5641                           wreg	equ	0xFE8
  5642                           indf1	equ	0xFE7
  5643                           postinc1	equ	0xFE6
  5644                           fsr1h	equ	0xFE2
  5645                           fsr1l	equ	0xFE1
  5646                           indf2	equ	0xFDF
  5647                           postinc2	equ	0xFDE
  5648                           postdec2	equ	0xFDD
  5649                           plusw2	equ	0xFDB
  5650                           fsr2h	equ	0xFDA
  5651                           fsr2l	equ	0xFD9
  5652                           status	equ	0xFD8
  5653                           
  5654 ;; *************** function _Key_Scan *****************
  5655 ;; Defined at:
  5656 ;;		line 55 in file "_01_USER/Key.c"
  5657 ;; Parameters:    Size  Location     Type
  5658 ;;		None
  5659 ;; Auto vars:     Size  Location     Type
  5660 ;;		None
  5661 ;; Return value:  Size  Location     Type
  5662 ;;		None               void
  5663 ;; Registers used:
  5664 ;;		wreg, status,2, status,0
  5665 ;; Tracked objects:
  5666 ;;		On entry : 0/0
  5667 ;;		On exit  : 0/0
  5668 ;;		Unchanged: 0/0
  5669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5674 ;;Total ram usage:        0 bytes
  5675 ;; Hardware stack levels used:    1
  5676 ;; This function calls:
  5677 ;;		Nothing
  5678 ;; This function is called by:
  5679 ;;		_Key_FSM_Scan
  5680 ;; This function uses a non-reentrant model
  5681 ;;
  5682                           
  5683                           	psect	text40
  5684  001D12                     __ptext40:
  5685                           	opt stack 0
  5686  001D12                     _Key_Scan:
  5687                           	opt stack 23
  5688                           
  5689                           ;Key.c: 58: Local_Key_FSM.key_BUS = 0x00;
  5690                           
  5691                           ; BSR set to: 0
  5692                           ;incstack = 0
  5693  001D12  0E00               	movlw	0
  5694  001D14  0100               	movlb	0	; () banked
  5695  001D16  6F6A               	movwf	_Local_Key_FSM& (0+255),b	;volatile
  5696                           
  5697                           ; BSR set to: 0
  5698                           ;Key.c: 60: if( RE3 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 0) ;
  5699  001D18  B684               	btfsc	3972,3,c	;volatile
  5700  001D1A  D003               	goto	i2l2187
  5701                           
  5702                           ; BSR set to: 0
  5703  001D1C  0100               	movlb	0	; () banked
  5704  001D1E  816A               	bsf	_Local_Key_FSM& (0+255),0,b	;volatile
  5705  001D20  D000               	goto	i2l2187
  5706  001D22                     i2l2187:
  5707                           
  5708                           ; BSR set to: 0
  5709                           ;Key.c: 61: if( RE2 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 1) ;
  5710  001D22  B484               	btfsc	3972,2,c	;volatile
  5711  001D24  D003               	goto	i2l2191
  5712                           
  5713                           ; BSR set to: 0
  5714  001D26  0100               	movlb	0	; () banked
  5715  001D28  836A               	bsf	_Local_Key_FSM& (0+255),1,b	;volatile
  5716  001D2A  D000               	goto	i2l2191
  5717  001D2C                     i2l2191:
  5718                           
  5719                           ; BSR set to: 0
  5720                           ;Key.c: 62: if( RD6 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 2) ;
  5721  001D2C  BC83               	btfsc	3971,6,c	;volatile
  5722  001D2E  D003               	goto	i2l2195
  5723                           
  5724                           ; BSR set to: 0
  5725  001D30  0100               	movlb	0	; () banked
  5726  001D32  856A               	bsf	_Local_Key_FSM& (0+255),2,b	;volatile
  5727  001D34  D000               	goto	i2l2195
  5728  001D36                     i2l2195:
  5729                           
  5730                           ; BSR set to: 0
  5731                           ;Key.c: 63: if( RE4 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 3) ;
  5732  001D36  B884               	btfsc	3972,4,c	;volatile
  5733  001D38  D003               	goto	i2l2199
  5734                           
  5735                           ; BSR set to: 0
  5736  001D3A  0100               	movlb	0	; () banked
  5737  001D3C  876A               	bsf	_Local_Key_FSM& (0+255),3,b	;volatile
  5738  001D3E  D000               	goto	i2l2199
  5739  001D40                     i2l2199:
  5740                           
  5741                           ; BSR set to: 0
  5742                           ;Key.c: 64: if( RD7 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 4) ;
  5743  001D40  BE83               	btfsc	3971,7,c	;volatile
  5744  001D42  0012               	return	
  5745                           
  5746                           ; BSR set to: 0
  5747  001D44  0100               	movlb	0	; () banked
  5748  001D46  896A               	bsf	_Local_Key_FSM& (0+255),4,b	;volatile
  5749  001D48  0012               	return	
  5750                           
  5751                           ; BSR set to: 0
  5752                           
  5753                           ; BSR set to: 0
  5754  001D4A  0012               	return		;funcret
  5755  001D4C                     __end_of_Key_Scan:
  5756                           	opt stack 0
  5757                           pclatu	equ	0xFFB
  5758                           pclath	equ	0xFFA
  5759                           tblptru	equ	0xFF8
  5760                           tblptrh	equ	0xFF7
  5761                           tblptrl	equ	0xFF6
  5762                           tablat	equ	0xFF5
  5763                           prodh	equ	0xFF4
  5764                           prodl	equ	0xFF3
  5765                           intcon	equ	0xFF2
  5766                           postinc0	equ	0xFEE
  5767                           fsr0h	equ	0xFEA
  5768                           fsr0l	equ	0xFE9
  5769                           wreg	equ	0xFE8
  5770                           indf1	equ	0xFE7
  5771                           postinc1	equ	0xFE6
  5772                           fsr1h	equ	0xFE2
  5773                           fsr1l	equ	0xFE1
  5774                           indf2	equ	0xFDF
  5775                           postinc2	equ	0xFDE
  5776                           postdec2	equ	0xFDD
  5777                           plusw2	equ	0xFDB
  5778                           fsr2h	equ	0xFDA
  5779                           fsr2l	equ	0xFD9
  5780                           status	equ	0xFD8
  5781                           
  5782 ;; *************** function _Delay_1Khz *****************
  5783 ;; Defined at:
  5784 ;;		line 75 in file "_01_USER/My_Delay.c"
  5785 ;; Parameters:    Size  Location     Type
  5786 ;;		None
  5787 ;; Auto vars:     Size  Location     Type
  5788 ;;  c               1    2[COMRAM] unsigned char 
  5789 ;;  b               1    1[COMRAM] unsigned char 
  5790 ;;  a               1    0[COMRAM] unsigned char 
  5791 ;; Return value:  Size  Location     Type
  5792 ;;		None               void
  5793 ;; Registers used:
  5794 ;;		wreg, status,2, status,0
  5795 ;; Tracked objects:
  5796 ;;		On entry : 0/0
  5797 ;;		On exit  : 0/0
  5798 ;;		Unchanged: 0/0
  5799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5801 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5803 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5804 ;;Total ram usage:        3 bytes
  5805 ;; Hardware stack levels used:    1
  5806 ;; This function calls:
  5807 ;;		Nothing
  5808 ;; This function is called by:
  5809 ;;		_Sys_Cyc
  5810 ;; This function uses a non-reentrant model
  5811 ;;
  5812                           
  5813                           	psect	text41
  5814  001D4C                     __ptext41:
  5815                           	opt stack 0
  5816  001D4C                     _Delay_1Khz:
  5817                           	opt stack 24
  5818                           
  5819                           ;My_Delay.c: 77: unsigned char a,b,c;
  5820                           ;My_Delay.c: 78: for(c=1;c>0;c--)
  5821                           
  5822                           ; BSR set to: 0
  5823                           ;incstack = 0
  5824  001D4C  0E01               	movlw	1
  5825  001D4E  6E03               	movwf	Delay_1Khz@c,c
  5826  001D50  5003               	movf	Delay_1Khz@c,w,c
  5827  001D52  B4D8               	btfsc	status,2,c
  5828  001D54  0012               	return	
  5829  001D56  D001               	goto	i2l2473
  5830  001D58  0012               	return	
  5831  001D5A                     i2l2473:
  5832                           
  5833                           ;My_Delay.c: 79: for(b=32;b>0;b--)
  5834  001D5A  0E20               	movlw	32
  5835  001D5C  6E02               	movwf	Delay_1Khz@b,c
  5836  001D5E  5002               	movf	Delay_1Khz@b,w,c
  5837  001D60  B4D8               	btfsc	status,2,c
  5838  001D62  D00D               	goto	i2l2489
  5839  001D64  D001               	goto	i2l2477
  5840  001D66  D00B               	goto	i2l2489
  5841  001D68                     i2l2477:
  5842                           
  5843                           ;My_Delay.c: 80: for(a=2;a>0;a--);
  5844  001D68  0E02               	movlw	2
  5845  001D6A  6E01               	movwf	Delay_1Khz@a,c
  5846  001D6C  5001               	movf	Delay_1Khz@a,w,c
  5847  001D6E  B4D8               	btfsc	status,2,c
  5848  001D70  D004               	goto	i2l2485
  5849  001D72  D001               	goto	i2l2481
  5850  001D74  D002               	goto	i2l2485
  5851  001D76                     i2l2481:
  5852  001D76  0601               	decf	Delay_1Khz@a,f,c
  5853  001D78  D7F9               	goto	L6
  5854  001D7A                     i2l2485:
  5855  001D7A  0602               	decf	Delay_1Khz@b,f,c
  5856  001D7C  D7F0               	goto	L7
  5857  001D7E                     i2l2489:
  5858  001D7E  0603               	decf	Delay_1Khz@c,f,c
  5859  001D80  D7E7               	goto	L8
  5860  001D82  0012               	return		;funcret
  5861  001D84                     __end_of_Delay_1Khz:
  5862                           	opt stack 0
  5863                           pclatu	equ	0xFFB
  5864                           pclath	equ	0xFFA
  5865                           tblptru	equ	0xFF8
  5866                           tblptrh	equ	0xFF7
  5867                           tblptrl	equ	0xFF6
  5868                           tablat	equ	0xFF5
  5869                           prodh	equ	0xFF4
  5870                           prodl	equ	0xFF3
  5871                           intcon	equ	0xFF2
  5872                           postinc0	equ	0xFEE
  5873                           fsr0h	equ	0xFEA
  5874                           fsr0l	equ	0xFE9
  5875                           wreg	equ	0xFE8
  5876                           indf1	equ	0xFE7
  5877                           postinc1	equ	0xFE6
  5878                           fsr1h	equ	0xFE2
  5879                           fsr1l	equ	0xFE1
  5880                           indf2	equ	0xFDF
  5881                           postinc2	equ	0xFDE
  5882                           postdec2	equ	0xFDD
  5883                           plusw2	equ	0xFDB
  5884                           fsr2h	equ	0xFDA
  5885                           fsr2l	equ	0xFD9
  5886                           status	equ	0xFD8
  5887                           pclatu	equ	0xFFB
  5888                           pclath	equ	0xFFA
  5889                           tblptru	equ	0xFF8
  5890                           tblptrh	equ	0xFF7
  5891                           tblptrl	equ	0xFF6
  5892                           tablat	equ	0xFF5
  5893                           prodh	equ	0xFF4
  5894                           prodl	equ	0xFF3
  5895                           intcon	equ	0xFF2
  5896                           postinc0	equ	0xFEE
  5897                           fsr0h	equ	0xFEA
  5898                           fsr0l	equ	0xFE9
  5899                           wreg	equ	0xFE8
  5900                           indf1	equ	0xFE7
  5901                           postinc1	equ	0xFE6
  5902                           fsr1h	equ	0xFE2
  5903                           fsr1l	equ	0xFE1
  5904                           indf2	equ	0xFDF
  5905                           postinc2	equ	0xFDE
  5906                           postdec2	equ	0xFDD
  5907                           plusw2	equ	0xFDB
  5908                           fsr2h	equ	0xFDA
  5909                           fsr2l	equ	0xFD9
  5910                           status	equ	0xFD8
  5911                           
  5912                           	psect	rparam
  5913  0000                     pclatu	equ	0xFFB
  5914                           pclath	equ	0xFFA
  5915                           tblptru	equ	0xFF8
  5916                           tblptrh	equ	0xFF7
  5917                           tblptrl	equ	0xFF6
  5918                           tablat	equ	0xFF5
  5919                           prodh	equ	0xFF4
  5920                           prodl	equ	0xFF3
  5921                           intcon	equ	0xFF2
  5922                           postinc0	equ	0xFEE
  5923                           fsr0h	equ	0xFEA
  5924                           fsr0l	equ	0xFE9
  5925                           wreg	equ	0xFE8
  5926                           indf1	equ	0xFE7
  5927                           postinc1	equ	0xFE6
  5928                           fsr1h	equ	0xFE2
  5929                           fsr1l	equ	0xFE1
  5930                           indf2	equ	0xFDF
  5931                           postinc2	equ	0xFDE
  5932                           postdec2	equ	0xFDD
  5933                           plusw2	equ	0xFDB
  5934                           fsr2h	equ	0xFDA
  5935                           fsr2l	equ	0xFD9
  5936                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         87
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     50      71
    BANK0           160     20      86
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    CRC_Verify@_ucLByte	PTR unsigned char  size(2) Largest target is 10
		 -> RS485_Receive_Date@_ucLByte(COMRAM[1]), RS485_SendBuff(BANK0[10]), 

    CRC_Verify@_ucHByte	PTR unsigned char  size(2) Largest target is 10
		 -> RS485_Receive_Date@_ucHByte(COMRAM[1]), RS485_SendBuff(BANK0[10]), 

    CRC_Verify@_pucBuf	PTR unsigned char  size(2) Largest target is 10
		 -> ReceiveBuff(BANK0[10]), RS485_SendBuff(BANK0[10]), 

    RS485_Receive_Date@DataBuff	PTR unsigned char  size(2) Largest target is 10
		 -> ReceiveBuff(BANK0[10]), 

    RS485_Send_Date@date_dress	PTR unsigned char  size(2) Largest target is 10
		 -> RS485_SendBuff(BANK0[10]), 


Critical Paths under _main in COMRAM

    _Timer0_Init->_SetTimer0
    _Show_Result->_TM1640_Show_integer
    _TM1640_Show_integer->_TM1640_Writer_Dates
    _TM1640_Show_integer->___lwdiv
    _TM1640_Writer_Dates->___lwmod
    _RS485_Send_Date->_CRC_Verify
    _RS485_Receive_Date->_CRC_Verify
    _CRC_Verify->___wmul
    _Get_ADC6->___ftmul
    ___lwtoft->___ftpack
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul
    _RS485_Init->_Open2USART
    _Init_TM1640->_TM1640_Writer_Byte
    _TM1640_Writer_Byte->_TM1640_Delay
    _TM1640_Stop->_TM1640_Delay
    _TM1640_Start->_TM1640_Delay
    _ADC6_Init->_OpenADC

Critical Paths under _Sys_Cyc in COMRAM

    _Sys_Cyc->___llmod
    _Manage_Message->_Key_FSM_Read

Critical Paths under _main in BANK0

    _main->_Run
    _Get_ADC6->___ftdiv

Critical Paths under _Sys_Cyc in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Sys_Cyc in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Sys_Cyc in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Sys_Cyc in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Sys_Cyc in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Sys_Cyc in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Sys_Cyc in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Sys_Cyc in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Sys_Cyc in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Sys_Cyc in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Sys_Cyc in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Sys_Cyc in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Sys_Cyc in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Sys_Cyc in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Sys_Cyc in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Sys_Cyc in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   16449
                                             17 BANK0      3     3      0
                          _ADC6_Init
                        _GPIO_Config
                        _Init_TM1640
                           _Key_Init
                         _RS485_Init
                                _Run
                        _Show_Result
                        _Timer0_Init
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0     194
                          _SetTimer0
 ---------------------------------------------------------------------------------
 (2) _SetTimer0                                            4     2      2     194
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Show_Result                                          2     2      0    3370
                                             33 COMRAM     1     1      0
                _TM1640_Show_integer
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _TM1640_Show_integer                                  2     0      2    2748
                                             31 COMRAM     2     0      2
                _TM1640_Writer_Dates
                            ___lwdiv
                            ___lwmod
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     752
                                             24 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     631
                                             24 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _TM1640_Writer_Dates                                  2     1      1    1009
                                             29 COMRAM     2     1      1
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Run                                                  2     2      0   11795
                                             15 BANK0      2     2      0
                           _Get_ADC6
                 _RS485_Receive_Date
                    _RS485_Send_Date
 ---------------------------------------------------------------------------------
 (2) _RS485_Send_Date                                      5     2      3    1789
                                             41 COMRAM     5     2      3
                         _CRC_Verify
 ---------------------------------------------------------------------------------
 (2) _RS485_Receive_Date                                   8     6      2    1888
                                             41 COMRAM     6     4      2
                         _CRC_Verify
 ---------------------------------------------------------------------------------
 (3) _CRC_Verify                                          11     4      7    1467
                                             30 COMRAM    11     4      7
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     622
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _Get_ADC6                                             0     0      0    7988
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2104
                                             32 COMRAM     3     0      3
                            _ReadADC (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    2846
                                             35 COMRAM    15     9      6
                            _ReadADC (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3038
                                              0 BANK0     15     9      6
                            _ReadADC (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2008
                                             24 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) _ReadADC                                              4     2      2       0
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RS485_Init                                           0     0      0     375
                         _Open2USART
 ---------------------------------------------------------------------------------
 (2) _Open2USART                                           3     1      2     375
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Key_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_TM1640                                          0     0      0     396
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
 ---------------------------------------------------------------------------------
 (4) _TM1640_Writer_Byte                                   2     2      0     198
                                             26 COMRAM     2     2      0
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (4) _TM1640_Stop                                          0     0      0      99
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (4) _TM1640_Start                                         0     0      0      99
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (5) _TM1640_Delay                                         2     2      0      99
                                             24 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC6_Init                                            0     0      0     316
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     316
                                             24 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Sys_Cyc                                             15    15      0    1372
                                              9 COMRAM    15    15      0
                         _Delay_1Khz
                       _Key_FSM_Scan
                     _Manage_Message
                            ___llmod
                        i2_SetTimer0
 ---------------------------------------------------------------------------------
 (7) i2_SetTimer0                                          4     2      2      94
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8     371
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) _Manage_Message                                       1     1      0     746
                       _Key_FSM_Read
                      _Key_FSM_Reset
                            ___lbmod
 ---------------------------------------------------------------------------------
 (8) ___lbmod                                              4     3      1     212
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (8) _Key_FSM_Reset                                        1     1      0      67
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _Key_FSM_Read                                         6     6      0     467
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (7) _Key_FSM_Scan                                         0     0      0       0
                           _Key_Scan
 ---------------------------------------------------------------------------------
 (8) _Key_Scan                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _Delay_1Khz                                           3     3      0     138
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC6_Init
     _OpenADC
   _GPIO_Config
   _Init_TM1640
     _TM1640_Start
       _TM1640_Delay
     _TM1640_Stop
       _TM1640_Delay
     _TM1640_Writer_Byte
       _TM1640_Delay
   _Key_Init
   _RS485_Init
     _Open2USART
   _Run
     _Get_ADC6
       _BusyADC
       _ConvertADC
       _ReadADC
       ___ftdiv
         _ReadADC (ARG)
         ___ftmul (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___ftmul
         _ReadADC (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___lwtoft
         _ReadADC (ARG)
         ___ftpack (ARG)
     _RS485_Receive_Date
       _CRC_Verify
         ___wmul
     _RS485_Send_Date
       _CRC_Verify
         ___wmul
   _Show_Result
     _TM1640_Show_integer
       _TM1640_Writer_Dates
         _TM1640_Start
           _TM1640_Delay
         _TM1640_Stop
           _TM1640_Delay
         _TM1640_Writer_Byte
           _TM1640_Delay
         ___lwmod (ARG)
       ___lwdiv
       ___lwmod
       ___wmul (ARG)
     ___wmul
   _Timer0_Init
     _SetTimer0

 _Sys_Cyc (ROOT)
   _Delay_1Khz
   _Key_FSM_Scan
     _Key_Scan
   _Manage_Message
     _Key_FSM_Read
     _Key_FSM_Reset
     ___lbmod
   ___llmod
   i2_SetTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     14      56       5       53.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     32      47       1       74.7%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9D      12        0.0%
DATA                 0      0      9D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Jan 22 15:49:51 2016

                ?_TM1640_Stop 0001  __size_of_TM1640_Writer_Dates 0022                 ?_TM1640_Delay 0001  
              Key_FSM_Reset@t 0001           ___wmul@multiplicand 001B                   __CFG_BORV$3 000000  
               ?_TM1640_Start 0001                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000                  __CFG_CP4$OFF 000000  
                __CFG_CP5$OFF 000000                  __CFG_CP6$OFF 000000                  __CFG_CP7$OFF 000000  
                         l161 1880                           l331 1F6E                           l411 17A4  
                         l316 1CA2                           l164 18C4                           l156 1842  
                         l317 1CB8                           l167 18D0                           l419 17FC  
                         l448 1BB4                           l481 193C                           l483 1948  
                         l484 194A                           l476 1914                           l478 1924  
                         l807 16E0                           l871 12CC                           _GIE 007F97  
                __CFG_CPB$OFF 000000                           _RC3 007C13                           _RC4 007C14  
                         _RE2 007C22                           _RE3 007C23                           _RE4 007C24  
                         _RD6 007C1E                           _RE5 007C25                           _RD7 007C1F  
                         _RE6 007C26                           _RG3 007C33                           _RE7 007C27  
                __CFG_CPD$OFF 000000                           _PSA 007EAB                           _Run 170A  
              ??_Key_FSM_Read 0001                ??_Key_FSM_Scan 0001                           prod 000FF3  
                 CRC_Verify@i 0029                           wreg 000FE8                  ?_GPIO_Config 0001  
                  _TXSTA2bits 000F21          ?_TM1640_Show_integer 0020                   ?_RS485_Init 0001  
                ___ftdiv@cntr 00AB                          ?_Run 0001                  ___ftdiv@sign 00B0  
                        l1006 1B60                          l1016 1BFA                          l3011 1868  
                        l3007 1858                          l3017 188E                          l3027 1ABC  
                        l3131 1732                          l3043 1DBE                          l3029 1ADA  
                        l3125 1716                          l3143 1776                          l3075 1A42  
                        l3139 175C                          l3155 17E6                          l3165 1804  
                        l3183 1D04                          l2715 1F66                          l2803 19E0  
                        l2717 1F68                          l2709 1F5E                          l2751 1CBC  
                        l2903 15D8                          l2807 1A1A                          l2833 11EE  
                        l2913 1606                          l2907 15EE                          l2931 1B36  
                        l2757 1CD0                          l2781 16A8                          l2773 1664  
                        l2917 161C                          l2909 15F4                          l2791 16E8  
                        l2783 16C8                          l2775 1670                          l2839 1228  
                        l2927 1B24                          l2951 1BD8                          l2785 16D4  
                        l2777 1690                          l2769 1654                          l2929 1B2E  
                        l2859 128A                          l2939 1B54                          l2955 1BEE  
                        l2947 1BC6                          l2981 191A                          l2973 1900  
                        l2797 16FA                          l2869 12DE                          l2885 1592  
                        l2949 1BD0                          l2879 156A                          l2993 1940  
                        l2985 192A                          l2977 190A                          l2969 18F2  
                        l2899 15C6                          l2989 1934                          _T0CS 007EAD  
                        _T0SE 007EAC                          u2710 1FA0                          _IPEN 007E87  
                        u2721 11CA                          u2741 1204                          u2771 1552  
                        u2791 157A                 ??_Init_TM1640 001D                    _Delay_1Khz 1D4C  
                        Run@i 00B1                          _main 1CD8                  ___ftpack@arg 0019  
                ___ftpack@exp 001C                          fsr0h 000FEA                          fsr1h 000FE2  
                        fsr0l 000FE9                          fsr2h 000FDA                          indf1 000FE7  
                        fsr1l 000FE1                          indf2 000FDF                          fsr2l 000FD9  
                        pclat 000FFA               ??_Key_FSM_Reset 0001                          prodh 000FF4  
                        prodl 000FF3                          start 0194              ?_RS485_Send_Date 002A  
               __CFG_IESO$OFF 000000                 __CFG_FOSC$HS1 000000                 __CFG_MCLRE$ON 000000  
                ___ftmul@cntr 0031                  ___param_bank 000010                  ___ftmul@sign 0032  
             __end_of_BusyADC 1FA6               __end_of_ReadADC 1F98                ??_TM1640_Delay 0019  
             __end_of_OpenADC 1BB8                         ??_Run 0033                ??_TM1640_Start 001B  
               __CFG_RETEN$ON 000000                         ?_main 0001               __end_of___lbmod 1DB6  
             __end_of_Sys_Cyc 0194               __end_of___ftdiv 1306               __end_of___ftmul 1644  
             __end_of___llmod 19CE                         _T0PS0 007EA8                         _T0PS1 007EA9  
                       _T0PS2 007EAA                         _RC2IF 007D25               __end_of___lwdiv 1B6A  
                       i2l111 109A               __end_of___lwmod 1C04                         i2l263 00F8  
                       i2l259 00A6                         i2l269 015A                         i2l953 19BC  
           __end_of_ADC6_Init 1F88                         _TMR0H 000FD7                         _TMR0L 000FD6  
                       _TRISD 000F95                         _TRISE 000F96         ??_TM1640_Show_integer 0022  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                 __CFG_WRT4$OFF 000000                __CFG_EBRT0$OFF 000000  
               __CFG_WRT5$OFF 000000                __CFG_EBRT1$OFF 000000                 __CFG_WRT6$OFF 000000  
              __CFG_EBRT2$OFF 000000                 __CFG_WRT7$OFF 000000                __CFG_EBRT3$OFF 000000  
              __CFG_EBRT4$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBRT5$OFF 000000  
              __CFG_EBRT6$OFF 000000                __CFG_EBRT7$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBRTB$OFF 000000  
         __size_of_CRC_Verify 006E                 ___ftpack@sign 001D                    _ConvertADC 1FBC  
               _Local_Key_FSM 006A                         tablat 000FF5                         plusw2 000FDB  
                       status 000FD8    __end_of_RS485_Receive_Date 1B0E            _TM1640_Writer_Byte 1C9A  
            __end_of_Get_ADC6 1AA8               __initialization 1E3E           __end_of_Init_TM1640 1EB0  
         __size_of_RS485_Init 001E                  __end_of_main 1D12           ?_TM1640_Writer_Byte 0001  
            __end_of_Key_Init 1FBC           Key_FSM_Read@key_num 0006              __end_of_Key_Scan 1D4C  
                  _Open2USART 18DA                        ??_main 0033                 __activetblptr 000001  
            ??_Manage_Message 0007          ??_TM1640_Writer_Byte 001B                        _ADCON0 000FC2  
                      _ADCON1 000FC1                        _ADCON2 000FC0              ___llmod@dividend 0001  
                      _ADRESH 000FC4                        _ADRESL 000FC3                        _ANCON2 000F23  
                      _T08BIT 007EAE              __end_of___ftpack 170A               __CFG_BBSIZ$BB2K 000000  
                      i2l2221 10E6                        i2l2213 1070                        i2l2205 1018  
                      i2l2231 1112                        i2l2215 1086                        i2l2223 10FC  
                      i2l2217 10B4                        i2l2243 11A4                        i2l2235 111E  
                      i2l2253 1C62                        i2l2191 1D2C                        i2l2511 1C40  
                      i2l2503 1C24                        i2l2247 11A8                        i2l2255 1C90  
                      i2l2601 19AC                        i2l2195 1D36                        i2l2187 1D22  
                      i2l2507 1C32                        i2l2199 1D40                        i2l2383 1DAA  
                      i2l2375 1D90                        i2l2551 137A                        i2l2543 1360  
                      i2l2535 1346                        i2l2527 132C                        i2l2481 1D76  
                      i2l2473 1D5A                        i2l2385 1DB0                        i2l2609 1DEE  
                      i2l2563 139E                        i2l2555 1386                        i2l2547 136C  
                      i2l2651 009A                        i2l2485 1D7A                        i2l2477 1D68  
                      i2l2581 1420                        i2l2573 13E6                        i2l2565 13AC  
                      i2l2661 00BC                        i2l2559 1394                        i2l2647 0090  
                      i2l2489 1D7E                        i2l2585 142E                        i2l2577 1402  
                      i2l2569 13C8                        i2l2593 1970                        i2l2681 0122  
                      i2l2657 00AA                        i2l2499 1C16                        i2l2595 197E  
                      i2l2659 00B0                        i2l2675 0112                        i2l2597 1986  
                      i2l2669 00FC                        i2l2689 0148                 SetTimer0@_tmr 0019  
                      _RCREG2 000F1D              __end_of___lwtoft 1E8A                        _RCSTA2 000F22  
                 ?_Delay_1Khz 0001                        _TMR0IE 007F95                        _TMR0IF 007F92  
                      _SPBRG2 000F1E                        _TMR0ON 007EAF    RS485_Receive_Date@DataBuff 002A  
               TM1640_Delay@i 001A                     ??_BusyADC 0019                        _TXREG2 000F1C  
                   ??_ReadADC 001B                        _TXSTA2 000F21                 ??_Timer0_Init 001D  
                   ??_OpenADC 001B        TM1640_Writer_Byte@Date 001B                __CFG_XINST$OFF 000000  
        __end_of_Key_FSM_Read 11B4          __end_of_Key_FSM_Scan 1C50        TM1640_Writer_Byte@mask 001C  
                      _g_Addr 0047             _RS485_ReceiveBuff 0060                        ___wmul 1E16  
              __CFG_STVREN$ON 000000                     ??___lbmod 0002                     ??_Sys_Cyc 000A  
                   ??___ftdiv 00A8                     ??___ftmul 002A                     ??___llmod 0009  
        Sys_Cyc@_overturn_LED 0042                     ??___lwdiv 001D            __size_of_SetTimer0 0030  
                   ??___lwmod 001D                        clear_0 1E44                        clear_1 1E50  
        __size_of_TM1640_Stop 0024                 ??_Show_Result 0022         ___ftmul@f3_as_product 002E  
              _Local_Key_User 007C                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8          __size_of_GPIO_Config 000C  
         _TM1640_Writer_Dates 1F1C                   ?_ConvertADC 0001          __end_of_TM1640_Delay 1F76  
  RS485_Receive_Date@_ucHByte 002C               ___lbmod@divisor 0001          __end_of_TM1640_Start 1F1C  
  RS485_Receive_Date@_ucLByte 002D                    __accesstop 0060       __end_of__initialization 1E56  
             ___lbmod@counter 0003                   _Init_TM1640 1E8A                  ?i2_SetTimer0 0001  
               ___rparam_used 000001                    ___ftdiv@f1 00A2                    ___ftdiv@f2 00A5  
                  ___ftdiv@f3 00AC                  ??_CRC_Verify 0026                    ___ftmul@f1 0024  
                  ___ftmul@f2 0027                __pcstackCOMRAM 0001          ?_TM1640_Writer_Dates 001E  
         __end_of_Timer0_Init 1ED4     Sys_Cyc@_RS485_Receive_Num 0040                   ?_Open2USART 0019  
                  ___lwtoft@c 0021           __size_of_Delay_1Khz 0038                     ?_Get_ADC6 0001  
                ??_RS485_Init 001C           __end_of_Show_Result 1840            __end_of_CRC_Verify 1A3C  
           __end_of_SetTimer0 1DE6                    __pbssBANK0 0060                     ?_Key_Init 0001  
                   ?_Key_Scan 0001                   _ReceiveBuff 0098               __CFG_PLLCFG$OFF 000000  
     TM1640_Writer_Dates@Addr 001F            __end_of_LED_Number 1011       TM1640_Writer_Dates@Date 001E  
       ??_TM1640_Writer_Dates 001F                       ?___wmul 0019            __end_of_RS485_Init 1F5C  
         __size_of_ConvertADC 0004                     ?___ftpack 0019                     ?___lwtoft 0021  
                  ??_Get_ADC6 0033                       _SPBRGH2 000F1F                     _ADC6_Buff 003B  
                   _ADC6_Init 1F76                    ??_Key_Init 0019                    ??_Key_Scan 0001  
       __size_of_Key_FSM_Read 01A2         __size_of_Key_FSM_Scan 004C           __size_of_Open2USART 0084  
                     _BusyADC 1F98                       _ReadADC 1F88              RS485_Send_Date@i 002D  
             __CFG_PWRTEN$OFF 000000                       _OpenADC 1B6A                       __Hparam 0000  
                 _Timer0_Init 1EB0         __end_of_Key_FSM_Reset 1C9A                       __Lparam 0000  
               Sys_Cyc@_pulse 0018                _RS485_SendBuff 008E                       ___lbmod 1D84  
                     _Sys_Cyc 0008                       ___ftdiv 11B4               __size_of___wmul 0028  
                     ___ftmul 1542                       ___llmod 195E                       ___lwdiv 1B0E  
                     ___lwmod 1BB8                  __psmallconst 1000            _RS485_Receive_Date 1AA8  
          _RS485_Receive_Flag 0045      __size_of_RS485_Send_Date 009A   __end_of_TM1640_Show_integer 1542  
                     __pcinit 1E3E                    ??___ftpack 001E         Sys_Cyc@_overturn_1Khz 0041  
                     __ramtop 1000                       __ptext0 1CD8                       __ptext1 1EB0  
                     __ptext2 1DB6                       __ptext3 17A6                       __ptext4 143C  
                     __ptext5 1BB8                       __ptext6 1B0E                       __ptext7 1F1C  
                     __ptext8 170A                       __ptext9 1840                    ??___lwtoft 0024  
                 _Show_Result 17A6                  __size_of_Run 009C              Open2USART@config 001B  
         ?_RS485_Receive_Date 002A         __size_of_TM1640_Delay 001A             __CFG_MSSPMSK$MSK7 000000  
                _Key_FSM_Read 1012                  _Key_FSM_Scan 1C04         __size_of_TM1640_Start 0024  
                  ?_ADC6_Init 0001                OpenADC@config2 0019                OpenADC@config3 001A  
                     main@num 00B3          end_of_initialization 1E56                  ??_Delay_1Khz 0001  
                   _RS485_Num 0044          ??_RS485_Receive_Date 002C          __size_ofi2_SetTimer0 0030  
                     postdec2 000FDD                       postinc0 000FEE                       postinc1 000FE6  
                     postinc2 000FDE               CRC_Verify@usCrc 0027                  _TM1640_Delay 1F5C  
   RS485_Send_Date@date_dress 002A     RS485_Send_Date@date_lenth 002C                  _TM1640_Start 1EF8  
                   _PORTEbits 000F84              TM1640_Delay@Time 0019            __end_of_Delay_1Khz 1D84  
            ___lbmod@dividend 0002                     _TRISCbits 000F94                     _TRISGbits 000F98  
 __size_of_TM1640_Writer_Byte 003E             __CFG_SOSCSEL$HIGH 000000                  ??_ConvertADC 0019  
                 ___lbmod@rem 0004      Key_FSM_Read@key_num_mate 0005                  ?_Init_TM1640 0001  
                 ___ftdiv@exp 00AF                   ___ftmul@exp 002D                 ??_TM1640_Stop 001B  
              __end_of___wmul 1E3E                  ??_Open2USART 001B            __end_of_ConvertADC 1FC0  
               ??_GPIO_Config 0019           start_initialization 1E3E             ??_RS485_Send_Date 002D  
                 __end_of_Run 17A6                   ??_ADC6_Init 001E             __size_of_Get_ADC6 006C  
  TM1640_Show_integer@Numbers 0020       __size_of_Manage_Message 0136               ___llmod@divisor 0005  
           __size_of_Key_Init 000A             __size_of_Key_Scan 003A               ___llmod@counter 0009  
                   _SetTimer0 1DB6            __end_of_Open2USART 195E               i2SetTimer0@_tmr 0001  
                   _Timer_Cyc 0037                      ??___wmul 001D                 _Handle_Switch 0033  
         __end_of_TM1640_Stop 1EF8             __size_of___ftpack 00C6                   __pbssCOMRAM 0033  
           __size_of___lwtoft 0026                 __pcstackBANK0 00A2                  _Receive_Flag 0046  
         __end_of_GPIO_Config 1FB2                      ?_BusyADC 0001                      ?_ReadADC 0019  
 __end_of_TM1640_Writer_Dates 1F3E                    ?_SetTimer0 0019                      ?_OpenADC 0019  
                ?_Timer0_Init 0001              ___lwdiv@dividend 0019             __CFG_CCP2MX$PORTC 000000  
                   __pintcode 0008                      ?___lbmod 0001                      ?_Sys_Cyc 0001  
                    ?___ftdiv 00A2                      ?___ftmul 0024                      ?___llmod 0001  
                    ?___lwdiv 0019                      ?___lwmod 0019                  ?_Show_Result 0001  
                 __smallconst 1000                   _LED2_switch 0043              ___lwdiv@quotient 001E  
             Open2USART@spbrg 0019                ___wmul@product 001D                 OpenADC@config 001D  
                    _PIE1bits 000F9D                      _PIE3bits 000FA3          __size_of_Init_TM1640 0026  
                    i2u174_40 103E                      i2u182_44 116C                      i2u182_45 1168  
                    i2u175_40 105C                      i2u183_44 1180                      i2u183_45 117C  
                    i2u176_40 10D2                      _PIR1bits 000F9E                   _TM1640_Stop 1ED4  
          CRC_Verify@_ucHByte 0022            CRC_Verify@_ucLByte 0024                    _ADCON0bits 000FC2  
           ___wmul@multiplier 0019                      _Get_ADC6 1A3C                   _GPIO_Config 1FA6  
                 Delay_1Khz@a 0001                   Delay_1Khz@b 0002                   Delay_1Khz@c 0003  
__size_of_TM1640_Show_integer 0106        __size_of_Key_FSM_Reset 004A                      _Key_Init 1FB2  
                    _Key_Scan 1D12                _Manage_Message 1306                 ??i2_SetTimer0 0003  
                 ??_SetTimer0 001B              __size_of_BusyADC 000E              __size_of_ReadADC 0010  
                    __Hrparam 0000   __size_of_RS485_Receive_Date 0066              __size_of_OpenADC 004E  
                    __Lrparam 0000                  __Lsmallconst 1000            __CFG_BOREN$SBORDIS 000000  
             _RS485_Send_Date 1840              __size_of___lbmod 0032              __size_of_Sys_Cyc 018C  
            __size_of___ftdiv 0152              __size_of___ftmul 0102              __size_of___llmod 0070  
            __size_of___lwdiv 005C              __size_of___lwmod 004C                      ___ftpack 1644  
                    ___lwtoft 1E64    __end_of_TM1640_Writer_Byte 1CD8               ___lwdiv@divisor 001B  
             ___lwdiv@counter 001D                      __ptext10 1AA8                      __ptext11 19CE  
                    __ptext20 1F98                      __ptext12 1E16                      __ptext21 1F3E  
                    __ptext13 1A3C                      __ptext30 1F76                      __ptext22 18DA  
                    __ptext14 1E64                      __ptext31 1B6A                      __ptext23 1FB2  
                    __ptext15 1542                      __ptext40 1D12                      __ptext24 1E8A  
                    __ptext16 11B4                      __ptext41 1D4C                      __ptext33 1DE6  
                    __ptext25 1C9A                      __ptext17 1644                      __ptext34 195E  
                    __ptext26 1ED4                      __ptext18 1F88                      __ptext35 1306  
                    __ptext27 1EF8                      __ptext19 1FBC                      __ptext36 1D84  
                    __ptext28 1F5C                      __ptext37 1C50                      __ptext29 1FA6  
                    __ptext38 1012                      __ptext39 1C04        __end_of_Manage_Message 143C  
               __size_of_main 003A           __CFG_RTCOSC$SOSCREF 000000                    _CRC_Verify 19CE  
               _Key_FSM_Reset 1C50          __size_of_Timer0_Init 0024           __end_ofi2_SetTimer0 1E16  
           CRC_Verify@_pucBuf 001F           __CFG_INTOSCSEL$HIGH 000000            Sys_Cyc@RS485_Timer 003F  
                  _LED_Number 1001            __CFG_WDTEN$SWDTDIS 000000                    _INTCONbits 000FF2  
        __size_of_Show_Result 009A                    _RS485_Init 1F3E               ?_Manage_Message 0001  
                    intlevel2 0000          Show_Result@RS485_LED 003E              ___lwmod@dividend 0019  
                  _RCSTA2bits 000F22       __end_of_RS485_Send_Date 18DA                ?_Key_FSM_Reset 0001  
         RS485_Receive_Date@n 002E              CRC_Verify@_usLen 0021            __CFG_WDTPS$1048576 000000  
             ___lwmod@divisor 001B               ___lwmod@counter 001D                 ?_Key_FSM_Read 0001  
               ?_Key_FSM_Scan 0001           __CFG_BORPWR$ZPBORMV 000000            __size_of_ADC6_Init 0012  
                 i2_SetTimer0 1DE6                   ?_CRC_Verify 001F           _TM1640_Show_integer 143C  
