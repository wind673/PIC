

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Fri Jan 22 15:07:00 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F67K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    55  0000                     
    56                           	psect	smallconst
    57  001000                     __psmallconst:
    58                           	opt stack 0
    59  001000  00                 	db	0
    60  001001                     _LED_Number:
    61                           	opt stack 0
    62  001001  3F                 	db	63
    63  001002  06                 	db	6
    64  001003  5B                 	db	91
    65  001004  4F                 	db	79
    66  001005  66                 	db	102
    67  001006  6D                 	db	109
    68  001007  7D                 	db	125
    69  001008  07                 	db	7
    70  001009  7F                 	db	127
    71  00100A  6F                 	db	111
    72  00100B  77                 	db	119
    73  00100C  7C                 	db	124
    74  00100D  39                 	db	57
    75  00100E  5E                 	db	94
    76  00100F  79                 	db	121
    77  001010  71                 	db	113
    78  001011                     __end_of_LED_Number:
    79                           	opt stack 0
    80  0000                     _ANCON2	set	3875
    81  0000                     _RCREG2	set	3869
    82  0000                     _RCSTA2	set	3874
    83  0000                     _RCSTA2bits	set	3874
    84  0000                     _SPBRG2	set	3870
    85  0000                     _SPBRGH2	set	3871
    86  0000                     _TXREG2	set	3868
    87  0000                     _TXSTA2	set	3873
    88  0000                     _TXSTA2bits	set	3873
    89  0000                     _ADCON0	set	4034
    90  0000                     _ADCON0bits	set	4034
    91  0000                     _ADCON1	set	4033
    92  0000                     _ADCON2	set	4032
    93  0000                     _ADRESH	set	4036
    94  0000                     _ADRESL	set	4035
    95  0000                     _INTCONbits	set	4082
    96  0000                     _PIE1bits	set	3997
    97  0000                     _PIE3bits	set	4003
    98  0000                     _PIR1bits	set	3998
    99  0000                     _PORTEbits	set	3972
   100  0000                     _TMR0H	set	4055
   101  0000                     _TMR0L	set	4054
   102  0000                     _TRISCbits	set	3988
   103  0000                     _TRISD	set	3989
   104  0000                     _TRISE	set	3990
   105  0000                     _TRISGbits	set	3992
   106  0000                     _GIE	set	32663
   107  0000                     _IPEN	set	32391
   108  0000                     _PSA	set	32427
   109  0000                     _RC2IF	set	32037
   110  0000                     _RC3	set	31763
   111  0000                     _RC4	set	31764
   112  0000                     _RD6	set	31774
   113  0000                     _RD7	set	31775
   114  0000                     _RE2	set	31778
   115  0000                     _RE3	set	31779
   116  0000                     _RE4	set	31780
   117  0000                     _RE5	set	31781
   118  0000                     _RE6	set	31782
   119  0000                     _RE7	set	31783
   120  0000                     _RG3	set	31795
   121  0000                     _T08BIT	set	32430
   122  0000                     _T0CS	set	32429
   123  0000                     _T0PS0	set	32424
   124  0000                     _T0PS1	set	32425
   125  0000                     _T0PS2	set	32426
   126  0000                     _T0SE	set	32428
   127  0000                     _TMR0IE	set	32661
   128  0000                     _TMR0IF	set	32658
   129  0000                     _TMR0ON	set	32431
   130                           
   131                           ; #config settings
   132  001011  00                 	db	0	; dummy byte at the end
   133  0000                     
   134                           	psect	cinit
   135  001E10                     __pcinit:
   136                           	opt stack 0
   137  001E10                     start_initialization:
   138                           	opt stack 0
   139  001E10                     __initialization:
   140                           	opt stack 0
   141                           
   142                           ; Clear objects allocated to BANK0 (59 bytes)
   143  001E10  EE00  F060         	lfsr	0,__pbssBANK0
   144  001E14  0E3B               	movlw	59
   145  001E16                     clear_0:
   146  001E16  6AEE               	clrf	postinc0,c
   147  001E18  06E8               	decf	wreg,f,c
   148  001E1A  E1FD               	bnz	clear_0
   149                           
   150                           ; Clear objects allocated to COMRAM (27 bytes)
   151  001E1C  EE00  F02D         	lfsr	0,__pbssCOMRAM
   152  001E20  0E1B               	movlw	27
   153  001E22                     clear_1:
   154  001E22  6AEE               	clrf	postinc0,c
   155  001E24  06E8               	decf	wreg,f,c
   156  001E26  E1FD               	bnz	clear_1
   157  001E28                     end_of_initialization:
   158                           	opt stack 0
   159  001E28                     __end_of__initialization:
   160                           	opt stack 0
   161  001E28  0E00               	movlw	low (__Lsmallconst shr (0+16))
   162  001E2A  6EF8               	movwf	tblptru,c
   163  001E2C  0E10               	movlw	high __Lsmallconst
   164  001E2E  6EF7               	movwf	tblptrh,c
   165  001E30  0100               	movlb	0
   166  001E32  EF55  F00E         	goto	_main	;jump to C main() function
   167                           tblptru	equ	0xFF8
   168                           tblptrh	equ	0xFF7
   169                           postinc0	equ	0xFEE
   170                           wreg	equ	0xFE8
   171                           
   172                           	psect	bssCOMRAM
   173  00002D                     __pbssCOMRAM:
   174                           	opt stack 0
   175  00002D                     Show_Result@RS485_LED:
   176                           	opt stack 0
   177  00002D                     	ds	1
   178  00002E                     Sys_Cyc@RS485_Timer:
   179                           	opt stack 0
   180  00002E                     	ds	1
   181  00002F                     Sys_Cyc@_RS485_Receive_Num:
   182                           	opt stack 0
   183  00002F                     	ds	1
   184  000030                     Sys_Cyc@_overturn_1Khz:
   185                           	opt stack 0
   186  000030                     	ds	1
   187  000031                     Sys_Cyc@_overturn_LED:
   188                           	opt stack 0
   189  000031                     	ds	1
   190  000032                     _LED2_switch:
   191                           	opt stack 0
   192  000032                     	ds	1
   193  000033                     _RS485_Num:
   194                           	opt stack 0
   195  000033                     	ds	1
   196  000034                     _RS485_Receive_Flag:
   197                           	opt stack 0
   198  000034                     	ds	1
   199  000035                     _g_Addr:
   200                           	opt stack 0
   201  000035                     	ds	1
   202  000036                     _Local_Key_User:
   203                           	opt stack 0
   204  000036                     	ds	18
   205                           tblptru	equ	0xFF8
   206                           tblptrh	equ	0xFF7
   207                           postinc0	equ	0xFEE
   208                           wreg	equ	0xFE8
   209                           
   210                           	psect	bssBANK0
   211  000060                     __pbssBANK0:
   212                           	opt stack 0
   213  000060                     _RS485_ReceiveBuff:
   214                           	opt stack 0
   215  000060                     	ds	10
   216  00006A                     _Handle_Switch:
   217                           	opt stack 0
   218  00006A                     	ds	4
   219  00006E                     _Timer_Cyc:
   220                           	opt stack 0
   221  00006E                     	ds	4
   222  000072                     _ADC6_Buff:
   223                           	opt stack 0
   224  000072                     	ds	3
   225  000075                     _Local_Key_FSM:
   226                           	opt stack 0
   227  000075                     	ds	18
   228  000087                     _RS485_SendBuff:
   229                           	opt stack 0
   230  000087                     	ds	10
   231  000091                     _ReceiveBuff:
   232                           	opt stack 0
   233  000091                     	ds	10
   234                           tblptru	equ	0xFF8
   235                           tblptrh	equ	0xFF7
   236                           postinc0	equ	0xFEE
   237                           wreg	equ	0xFE8
   238                           
   239                           	psect	cstackBANK0
   240  00009B                     __pcstackBANK0:
   241                           	opt stack 0
   242  00009B                     RS485_Receive_Date@_ucHByte:
   243                           	opt stack 0
   244  00009B                     ___ftmul@exp:
   245                           	opt stack 0
   246  00009B                     RS485_Send_Date@i:
   247                           	opt stack 0
   248                           
   249                           ; 2 bytes @ 0x0
   250  00009B                     	ds	1
   251  00009C                     RS485_Receive_Date@_ucLByte:
   252                           	opt stack 0
   253  00009C                     ___ftmul@f3_as_product:
   254                           	opt stack 0
   255                           
   256                           ; 3 bytes @ 0x1
   257  00009C                     	ds	1
   258  00009D                     RS485_Receive_Date@n:
   259                           	opt stack 0
   260                           
   261                           ; 2 bytes @ 0x2
   262  00009D                     	ds	2
   263  00009F                     ___ftmul@cntr:
   264                           	opt stack 0
   265                           
   266                           ; 1 bytes @ 0x4
   267  00009F                     	ds	1
   268  0000A0                     ___ftmul@sign:
   269                           	opt stack 0
   270                           
   271                           ; 1 bytes @ 0x5
   272  0000A0                     	ds	1
   273  0000A1                     ?___ftdiv:
   274                           	opt stack 0
   275  0000A1                     ___ftdiv@f1:
   276                           	opt stack 0
   277                           
   278                           ; 3 bytes @ 0x6
   279  0000A1                     	ds	3
   280  0000A4                     ___ftdiv@f2:
   281                           	opt stack 0
   282                           
   283                           ; 3 bytes @ 0x9
   284  0000A4                     	ds	3
   285  0000A7                     ??___ftdiv:
   286                           
   287                           ; 0 bytes @ 0xC
   288  0000A7                     	ds	3
   289  0000AA                     ___ftdiv@cntr:
   290                           	opt stack 0
   291                           
   292                           ; 1 bytes @ 0xF
   293  0000AA                     	ds	1
   294  0000AB                     ___ftdiv@f3:
   295                           	opt stack 0
   296                           
   297                           ; 3 bytes @ 0x10
   298  0000AB                     	ds	3
   299  0000AE                     ___ftdiv@exp:
   300                           	opt stack 0
   301                           
   302                           ; 1 bytes @ 0x13
   303  0000AE                     	ds	1
   304  0000AF                     ___ftdiv@sign:
   305                           	opt stack 0
   306                           
   307                           ; 1 bytes @ 0x14
   308  0000AF                     	ds	1
   309  0000B0                     main@num:
   310                           	opt stack 0
   311                           
   312                           ; 3 bytes @ 0x15
   313  0000B0                     	ds	3
   314                           tblptru	equ	0xFF8
   315                           tblptrh	equ	0xFF7
   316                           postinc0	equ	0xFEE
   317                           wreg	equ	0xFE8
   318                           
   319                           	psect	cstackCOMRAM
   320  000001                     __pcstackCOMRAM:
   321                           	opt stack 0
   322  000001                     ??_Key_FSM_Read:
   323  000001                     ?___llmod:
   324                           	opt stack 0
   325  000001                     Delay_1Khz@a:
   326                           	opt stack 0
   327  000001                     Key_FSM_Reset@t:
   328                           	opt stack 0
   329  000001                     ___lbmod@divisor:
   330                           	opt stack 0
   331  000001                     i2SetTimer0@_tmr:
   332                           	opt stack 0
   333  000001                     ___llmod@dividend:
   334                           	opt stack 0
   335                           
   336                           ; 4 bytes @ 0x0
   337  000001                     	ds	1
   338  000002                     Delay_1Khz@b:
   339                           	opt stack 0
   340  000002                     ___lbmod@dividend:
   341                           	opt stack 0
   342                           
   343                           ; 1 bytes @ 0x1
   344  000002                     	ds	1
   345  000003                     ??i2_SetTimer0:
   346  000003                     Delay_1Khz@c:
   347                           	opt stack 0
   348  000003                     ___lbmod@counter:
   349                           	opt stack 0
   350                           
   351                           ; 1 bytes @ 0x2
   352  000003                     	ds	1
   353  000004                     ___lbmod@rem:
   354                           	opt stack 0
   355                           
   356                           ; 1 bytes @ 0x3
   357  000004                     	ds	1
   358  000005                     Key_FSM_Read@key_num_mate:
   359                           	opt stack 0
   360  000005                     ___llmod@divisor:
   361                           	opt stack 0
   362                           
   363                           ; 4 bytes @ 0x4
   364  000005                     	ds	1
   365  000006                     Key_FSM_Read@key_num:
   366                           	opt stack 0
   367                           
   368                           ; 1 bytes @ 0x5
   369  000006                     	ds	1
   370  000007                     Manage_Message@i:
   371                           	opt stack 0
   372                           
   373                           ; 1 bytes @ 0x6
   374  000007                     	ds	2
   375  000009                     ___llmod@counter:
   376                           	opt stack 0
   377                           
   378                           ; 1 bytes @ 0x8
   379  000009                     	ds	1
   380  00000A                     ??_Sys_Cyc:
   381                           
   382                           ; 0 bytes @ 0x9
   383  00000A                     	ds	14
   384  000018                     Sys_Cyc@_pulse:
   385                           	opt stack 0
   386                           
   387                           ; 1 bytes @ 0x17
   388  000018                     	ds	1
   389  000019                     ?_ReadADC:
   390                           	opt stack 0
   391  000019                     ?___wmul:
   392                           	opt stack 0
   393  000019                     ?___lwdiv:
   394                           	opt stack 0
   395  000019                     ?___lwmod:
   396                           	opt stack 0
   397  000019                     ?___ftpack:
   398                           	opt stack 0
   399  000019                     TM1640_Delay@Time:
   400                           	opt stack 0
   401  000019                     OpenADC@config2:
   402                           	opt stack 0
   403  000019                     SetTimer0@_tmr:
   404                           	opt stack 0
   405  000019                     Open2USART@spbrg:
   406                           	opt stack 0
   407  000019                     ___wmul@multiplier:
   408                           	opt stack 0
   409  000019                     ___lwdiv@dividend:
   410                           	opt stack 0
   411  000019                     ___lwmod@dividend:
   412                           	opt stack 0
   413  000019                     ___ftpack@arg:
   414                           	opt stack 0
   415                           
   416                           ; 3 bytes @ 0x18
   417  000019                     	ds	1
   418  00001A                     TM1640_Delay@i:
   419                           	opt stack 0
   420  00001A                     OpenADC@config3:
   421                           	opt stack 0
   422                           
   423                           ; 1 bytes @ 0x19
   424  00001A                     	ds	1
   425  00001B                     ??_SetTimer0:
   426  00001B                     ??_OpenADC:
   427  00001B                     ??_ReadADC:
   428  00001B                     TM1640_Writer_Byte@Date:
   429                           	opt stack 0
   430  00001B                     Open2USART@config:
   431                           	opt stack 0
   432  00001B                     ___wmul@multiplicand:
   433                           	opt stack 0
   434  00001B                     ___lwdiv@divisor:
   435                           	opt stack 0
   436  00001B                     ___lwmod@divisor:
   437                           	opt stack 0
   438                           
   439                           ; 2 bytes @ 0x1A
   440  00001B                     	ds	1
   441  00001C                     TM1640_Writer_Byte@mask:
   442                           	opt stack 0
   443  00001C                     ___ftpack@exp:
   444                           	opt stack 0
   445                           
   446                           ; 1 bytes @ 0x1B
   447  00001C                     	ds	1
   448  00001D                     OpenADC@config:
   449                           	opt stack 0
   450  00001D                     ___ftpack@sign:
   451                           	opt stack 0
   452  00001D                     ___lwdiv@counter:
   453                           	opt stack 0
   454  00001D                     ___lwmod@counter:
   455                           	opt stack 0
   456  00001D                     ___wmul@product:
   457                           	opt stack 0
   458                           
   459                           ; 2 bytes @ 0x1C
   460  00001D                     	ds	1
   461  00001E                     ??___ftpack:
   462  00001E                     TM1640_Writer_Dates@Date:
   463                           	opt stack 0
   464  00001E                     ___lwdiv@quotient:
   465                           	opt stack 0
   466                           
   467                           ; 2 bytes @ 0x1D
   468  00001E                     	ds	1
   469  00001F                     TM1640_Writer_Dates@Addr:
   470                           	opt stack 0
   471  00001F                     CRC_Verify@_pucBuf:
   472                           	opt stack 0
   473                           
   474                           ; 2 bytes @ 0x1E
   475  00001F                     	ds	1
   476  000020                     TM1640_Show_integer@Numbers:
   477                           	opt stack 0
   478                           
   479                           ; 2 bytes @ 0x1F
   480  000020                     	ds	1
   481  000021                     ?___lwtoft:
   482                           	opt stack 0
   483  000021                     CRC_Verify@_usLen:
   484                           	opt stack 0
   485  000021                     ___lwtoft@c:
   486                           	opt stack 0
   487                           
   488                           ; 2 bytes @ 0x20
   489  000021                     	ds	1
   490  000022                     ??_Show_Result:
   491  000022                     CRC_Verify@_ucHByte:
   492                           	opt stack 0
   493                           
   494                           ; 2 bytes @ 0x21
   495  000022                     	ds	2
   496  000024                     ?___ftmul:
   497                           	opt stack 0
   498  000024                     CRC_Verify@_ucLByte:
   499                           	opt stack 0
   500  000024                     ___ftmul@f1:
   501                           	opt stack 0
   502                           
   503                           ; 3 bytes @ 0x23
   504  000024                     	ds	2
   505  000026                     ??_CRC_Verify:
   506                           
   507                           ; 0 bytes @ 0x25
   508  000026                     	ds	1
   509  000027                     CRC_Verify@usCrc:
   510                           	opt stack 0
   511  000027                     ___ftmul@f2:
   512                           	opt stack 0
   513                           
   514                           ; 3 bytes @ 0x26
   515  000027                     	ds	2
   516  000029                     CRC_Verify@i:
   517                           	opt stack 0
   518                           
   519                           ; 1 bytes @ 0x28
   520  000029                     	ds	1
   521  00002A                     ??___ftmul:
   522  00002A                     RS485_Send_Date@date_dress:
   523                           	opt stack 0
   524  00002A                     RS485_Receive_Date@DataBuff:
   525                           	opt stack 0
   526                           
   527                           ; 2 bytes @ 0x29
   528  00002A                     	ds	2
   529  00002C                     RS485_Send_Date@date_lenth:
   530                           	opt stack 0
   531                           
   532                           ; 1 bytes @ 0x2B
   533  00002C                     	ds	1
   534  00002D                     tblptru	equ	0xFF8
   535                           tblptrh	equ	0xFF7
   536                           postinc0	equ	0xFEE
   537                           wreg	equ	0xFE8
   538                           
   539                           ; 0 bytes @ 0x2C
   540 ;;
   541 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   542 ;;
   543 ;; *************** function _main *****************
   544 ;; Defined at:
   545 ;;		line 37 in file "_01_USER/main.c"
   546 ;; Parameters:    Size  Location     Type
   547 ;;		None
   548 ;; Auto vars:     Size  Location     Type
   549 ;;  num             3   21[BANK0 ] float 
   550 ;; Return value:  Size  Location     Type
   551 ;;                  2   18[None  ] int 
   552 ;; Registers used:
   553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   554 ;; Tracked objects:
   555 ;;		On entry : 0/0
   556 ;;		On exit  : 0/0
   557 ;;		Unchanged: 0/0
   558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   560 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   562 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   563 ;;Total ram usage:        3 bytes
   564 ;; Hardware stack levels required when called:    8
   565 ;; This function calls:
   566 ;;		_ADC6_Init
   567 ;;		_GPIO_Config
   568 ;;		_Init_TM1640
   569 ;;		_Key_Init
   570 ;;		_RS485_Init
   571 ;;		_Run
   572 ;;		_Show_Result
   573 ;;		_Timer0_Init
   574 ;; This function is called by:
   575 ;;		Startup code after reset
   576 ;; This function uses a non-reentrant model
   577 ;;
   578                           
   579                           	psect	text0
   580  001CAA                     __ptext0:
   581                           	opt stack 0
   582  001CAA                     _main:
   583                           	opt stack 23
   584                           
   585                           ;main.c: 40: float num = 0;
   586                           
   587                           ;incstack = 0
   588  001CAA  0E00               	movlw	0
   589  001CAC  0100               	movlb	0	; () banked
   590  001CAE  6FB0               	movwf	main@num& (0+255),b
   591  001CB0  0E00               	movlw	0
   592  001CB2  0100               	movlb	0	; () banked
   593  001CB4  6FB1               	movwf	(main@num+1)& (0+255),b
   594  001CB6  0E00               	movlw	0
   595  001CB8  0100               	movlb	0	; () banked
   596  001CBA  6FB2               	movwf	(main@num+2)& (0+255),b
   597                           
   598                           ; BSR set to: 0
   599                           ;main.c: 43: GPIO_Config();
   600  001CBC  ECBC  F00F         	call	_GPIO_Config	;wreg free
   601                           
   602                           ;main.c: 44: Key_Init();
   603  001CC0  ECC2  F00F         	call	_Key_Init	;wreg free
   604                           
   605                           ;main.c: 45: Timer0_Init();
   606  001CC4  EC41  F00F         	call	_Timer0_Init	;wreg free
   607                           
   608                           ;main.c: 46: Init_TM1640();
   609  001CC8  EC2E  F00F         	call	_Init_TM1640	;wreg free
   610                           
   611                           ;main.c: 47: ADC6_Init();
   612  001CCC  ECA4  F00F         	call	_ADC6_Init	;wreg free
   613                           
   614                           ;main.c: 48: RS485_Init();
   615  001CD0  EC88  F00F         	call	_RS485_Init	;wreg free
   616  001CD4  D000               	goto	l3147
   617  001CD6                     l3147:
   618                           
   619                           ;main.c: 52: {
   620                           ;main.c: 53: Run();
   621  001CD6  EC37  F00E         	call	_Run	;wreg free
   622                           
   623                           ;main.c: 54: Show_Result();
   624  001CDA  ECE4  F00B         	call	_Show_Result	;wreg free
   625  001CDE  D7FB               	goto	l3147
   626                           
   627                           ;main.c: 55: }
   628                           ;main.c: 57: return 0;
   629                           ;	Return value of _main is never used
   630  001CE0  EFCF  F000         	goto	start
   631  001CE4                     __end_of_main:
   632                           	opt stack 0
   633                           tblptru	equ	0xFF8
   634                           tblptrh	equ	0xFF7
   635                           postinc0	equ	0xFEE
   636                           wreg	equ	0xFE8
   637                           
   638 ;; *************** function _Timer0_Init *****************
   639 ;; Defined at:
   640 ;;		line 41 in file "_01_USER/My_Timer.c"
   641 ;; Parameters:    Size  Location     Type
   642 ;;		None
   643 ;; Auto vars:     Size  Location     Type
   644 ;;		None
   645 ;; Return value:  Size  Location     Type
   646 ;;		None               void
   647 ;; Registers used:
   648 ;;		wreg, status,2, status,0, cstack
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   658 ;;Total ram usage:        0 bytes
   659 ;; Hardware stack levels used:    1
   660 ;; Hardware stack levels required when called:    4
   661 ;; This function calls:
   662 ;;		_SetTimer0
   663 ;; This function is called by:
   664 ;;		_main
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668                           	psect	text1
   669  001E82                     __ptext1:
   670                           	opt stack 0
   671  001E82                     _Timer0_Init:
   672                           	opt stack 26
   673                           
   674                           ;My_Timer.c: 43: T08BIT = 0;
   675                           
   676                           ;incstack = 0
   677  001E82  9CD5               	bcf	4053,6,c	;volatile
   678                           
   679                           ;My_Timer.c: 44: T0CS = 0;
   680  001E84  9AD5               	bcf	4053,5,c	;volatile
   681                           
   682                           ;My_Timer.c: 45: T0SE = 0;
   683  001E86  98D5               	bcf	4053,4,c	;volatile
   684                           
   685                           ;My_Timer.c: 46: PSA = 0;
   686  001E88  96D5               	bcf	4053,3,c	;volatile
   687                           
   688                           ;My_Timer.c: 47: T0PS2 = 1;
   689  001E8A  84D5               	bsf	4053,2,c	;volatile
   690                           
   691                           ;My_Timer.c: 48: T0PS1 = 1;
   692  001E8C  82D5               	bsf	4053,1,c	;volatile
   693                           
   694                           ;My_Timer.c: 49: T0PS0 = 1;
   695  001E8E  80D5               	bsf	4053,0,c	;volatile
   696                           
   697                           ;My_Timer.c: 63: SetTimer0(1);
   698  001E90  0E00               	movlw	0
   699  001E92  6E1A               	movwf	SetTimer0@_tmr+1,c
   700  001E94  0E01               	movlw	1
   701  001E96  6E19               	movwf	SetTimer0@_tmr,c
   702  001E98  ECC4  F00E         	call	_SetTimer0	;wreg free
   703                           
   704                           ;My_Timer.c: 64: TMR0ON = 1;
   705  001E9C  8ED5               	bsf	4053,7,c	;volatile
   706                           
   707                           ;My_Timer.c: 65: TMR0IE = 1;
   708  001E9E  8AF2               	bsf	intcon,5,c	;volatile
   709                           
   710                           ;My_Timer.c: 66: IPEN = 0;GIE = 1;
   711  001EA0  9ED0               	bcf	4048,7,c	;volatile
   712  001EA2  8EF2               	bsf	intcon,7,c	;volatile
   713  001EA4  0012               	return		;funcret
   714  001EA6                     __end_of_Timer0_Init:
   715                           	opt stack 0
   716                           tblptru	equ	0xFF8
   717                           tblptrh	equ	0xFF7
   718                           intcon	equ	0xFF2
   719                           postinc0	equ	0xFEE
   720                           wreg	equ	0xFE8
   721                           
   722 ;; *************** function _SetTimer0 *****************
   723 ;; Defined at:
   724 ;;		line 79 in file "_01_USER/My_Timer.c"
   725 ;; Parameters:    Size  Location     Type
   726 ;;  _tmr            2   24[COMRAM] unsigned int 
   727 ;; Auto vars:     Size  Location     Type
   728 ;;		None
   729 ;; Return value:  Size  Location     Type
   730 ;;		None               void
   731 ;; Registers used:
   732 ;;		wreg, status,2, status,0
   733 ;; Tracked objects:
   734 ;;		On entry : 0/0
   735 ;;		On exit  : 0/0
   736 ;;		Unchanged: 0/0
   737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   738 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   740 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   741 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   742 ;;Total ram usage:        4 bytes
   743 ;; Hardware stack levels used:    1
   744 ;; Hardware stack levels required when called:    3
   745 ;; This function calls:
   746 ;;		Nothing
   747 ;; This function is called by:
   748 ;;		_Timer0_Init
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           	psect	text2
   753  001D88                     __ptext2:
   754                           	opt stack 0
   755  001D88                     _SetTimer0:
   756                           	opt stack 26
   757                           
   758                           ;My_Timer.c: 81: if(_tmr > 0xffff) _tmr = 0xffff;
   759                           
   760                           ;incstack = 0
   761  001D88  D003               	goto	l3023
   762  001D8A  6819               	setf	SetTimer0@_tmr,c
   763  001D8C  681A               	setf	SetTimer0@_tmr+1,c
   764  001D8E  D000               	goto	l3023
   765  001D90                     l3023:
   766                           
   767                           ;My_Timer.c: 82: _tmr=0xffff-_tmr;
   768  001D90  C019  F01B         	movff	SetTimer0@_tmr,??_SetTimer0
   769  001D94  C01A  F01C         	movff	SetTimer0@_tmr+1,??_SetTimer0+1
   770  001D98  1E1B               	comf	??_SetTimer0,f,c
   771  001D9A  1E1C               	comf	??_SetTimer0+1,f,c
   772  001D9C  4A1B               	infsnz	??_SetTimer0,f,c
   773  001D9E  2A1C               	incf	??_SetTimer0+1,f,c
   774  001DA0  0EFF               	movlw	255
   775  001DA2  241B               	addwf	??_SetTimer0,w,c
   776  001DA4  6E19               	movwf	SetTimer0@_tmr,c
   777  001DA6  0EFF               	movlw	255
   778  001DA8  201C               	addwfc	??_SetTimer0+1,w,c
   779  001DAA  6E1A               	movwf	SetTimer0@_tmr+1,c
   780                           
   781                           ;My_Timer.c: 83: TMR0H = _tmr/256;
   782  001DAC  501A               	movf	SetTimer0@_tmr+1,w,c
   783  001DAE  6ED7               	movwf	4055,c	;volatile
   784                           
   785                           ;My_Timer.c: 84: TMR0L = _tmr%256;
   786  001DB0  C019  FFD6         	movff	SetTimer0@_tmr,4054	;volatile
   787                           
   788                           ;My_Timer.c: 85: TMR0IF = 0;
   789  001DB4  94F2               	bcf	intcon,2,c	;volatile
   790  001DB6  0012               	return		;funcret
   791  001DB8                     __end_of_SetTimer0:
   792                           	opt stack 0
   793                           tblptru	equ	0xFF8
   794                           tblptrh	equ	0xFF7
   795                           intcon	equ	0xFF2
   796                           postinc0	equ	0xFEE
   797                           wreg	equ	0xFE8
   798                           
   799 ;; *************** function _Show_Result *****************
   800 ;; Defined at:
   801 ;;		line 137 in file "_01_USER/Run.c"
   802 ;; Parameters:    Size  Location     Type
   803 ;;		None
   804 ;; Auto vars:     Size  Location     Type
   805 ;;		None
   806 ;; Return value:  Size  Location     Type
   807 ;;		None               void
   808 ;; Registers used:
   809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   810 ;; Tracked objects:
   811 ;;		On entry : 0/0
   812 ;;		On exit  : 0/0
   813 ;;		Unchanged: 0/0
   814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   817 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   818 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   819 ;;Total ram usage:        1 bytes
   820 ;; Hardware stack levels used:    1
   821 ;; Hardware stack levels required when called:    7
   822 ;; This function calls:
   823 ;;		_TM1640_Show_integer
   824 ;;		___wmul
   825 ;; This function is called by:
   826 ;;		_main
   827 ;; This function uses a non-reentrant model
   828 ;;
   829                           
   830                           	psect	text3
   831  0017C8                     __ptext3:
   832                           	opt stack 0
   833  0017C8                     _Show_Result:
   834                           	opt stack 23
   835                           
   836                           ;Run.c: 139: static unsigned char RS485_LED = 0;
   837                           ;Run.c: 141: if( Handle_Switch.Show_Send_Receive )
   838                           
   839                           ;incstack = 0
   840  0017C8  0100               	movlb	0	; () banked
   841  0017CA  516D               	movf	(_Handle_Switch+3)& (0+255),w,b
   842  0017CC  B4D8               	btfsc	status,2,c
   843  0017CE  D01D               	goto	l3119
   844                           
   845                           ; BSR set to: 0
   846                           ;Run.c: 142: {
   847                           ;Run.c: 143: TM1640_Show_integer( RS485_SendBuff[RS485_Num] + (RS485_Num * 1000) );
   848  0017D0  C033  F019         	movff	_RS485_Num,___wmul@multiplier
   849  0017D4  6A1A               	clrf	___wmul@multiplier+1,c
   850  0017D6  0E03               	movlw	3
   851  0017D8  6E1C               	movwf	___wmul@multiplicand+1,c
   852  0017DA  0EE8               	movlw	232
   853  0017DC  6E1B               	movwf	___wmul@multiplicand,c
   854  0017DE  ECF4  F00E         	call	___wmul	;wreg free
   855  0017E2  5033               	movf	_RS485_Num,w,c
   856  0017E4  0D01               	mullw	1
   857  0017E6  0E87               	movlw	low _RS485_SendBuff
   858  0017E8  24F3               	addwf	prodl,w,c
   859  0017EA  6ED9               	movwf	fsr2l,c
   860  0017EC  0E00               	movlw	high _RS485_SendBuff
   861  0017EE  20F4               	addwfc	prodh,w,c
   862  0017F0  6EDA               	movwf	fsr2h,c
   863  0017F2  50DF               	movf	indf2,w,c
   864  0017F4  6E22               	movwf	??_Show_Result& (0+255),c
   865  0017F6  5022               	movf	??_Show_Result,w,c
   866  0017F8  2419               	addwf	?___wmul,w,c
   867  0017FA  6E20               	movwf	TM1640_Show_integer@Numbers,c
   868  0017FC  0E00               	movlw	0
   869  0017FE  201A               	addwfc	?___wmul+1,w,c
   870  001800  6E21               	movwf	TM1640_Show_integer@Numbers+1,c
   871  001802  ECAD  F00A         	call	_TM1640_Show_integer	;wreg free
   872                           
   873                           ;Run.c: 144: PORTEbits.RE7=0;
   874  001806  9E84               	bcf	3972,7,c	;volatile
   875                           
   876                           ;Run.c: 145: }
   877  001808  0012               	return	
   878  00180A                     l3119:
   879                           
   880                           ;Run.c: 147: else
   881                           ;Run.c: 148: {
   882                           ;Run.c: 149: if( ReceiveBuff[1] == g_Addr )
   883  00180A  5035               	movf	_g_Addr,w,c
   884  00180C  0100               	movlb	0	; () banked
   885  00180E  1992               	xorwf	(_ReceiveBuff+1)& (0+255),w,b
   886  001810  A4D8               	btfss	status,2,c
   887  001812  0012               	return	
   888                           
   889                           ; BSR set to: 0
   890                           ;Run.c: 150: {
   891                           ;Run.c: 151: if(RS485_LED) {PORTEbits.RE6=0;RS485_LED = 0;}
   892  001814  502D               	movf	Show_Result@RS485_LED,w,c
   893  001816  B4D8               	btfsc	status,2,c
   894  001818  D003               	goto	l415
   895                           
   896                           ; BSR set to: 0
   897  00181A  9C84               	bcf	3972,6,c	;volatile
   898                           
   899                           ; BSR set to: 0
   900  00181C  0E00               	movlw	0
   901  00181E  D002               	goto	L1
   902  001820                     l415:
   903                           
   904                           ; BSR set to: 0
   905                           ;Run.c: 152: else {PORTEbits.RE6=1;RS485_LED = 1;}
   906  001820  8C84               	bsf	3972,6,c	;volatile
   907                           
   908                           ; BSR set to: 0
   909  001822  0E01               	movlw	1
   910  001824                     L1:
   911  001824  6E2D               	movwf	Show_Result@RS485_LED,c
   912  001826  D000               	goto	l3129
   913  001828                     l3129:
   914                           
   915                           ; BSR set to: 0
   916                           ;Run.c: 154: TM1640_Show_integer( ReceiveBuff[RS485_Num] + (RS485_Num * 1000) );
   917  001828  C033  F019         	movff	_RS485_Num,___wmul@multiplier
   918  00182C  6A1A               	clrf	___wmul@multiplier+1,c
   919  00182E  0E03               	movlw	3
   920  001830  6E1C               	movwf	___wmul@multiplicand+1,c
   921  001832  0EE8               	movlw	232
   922  001834  6E1B               	movwf	___wmul@multiplicand,c
   923  001836  ECF4  F00E         	call	___wmul	;wreg free
   924  00183A  5033               	movf	_RS485_Num,w,c
   925  00183C  0D01               	mullw	1
   926  00183E  0E91               	movlw	low _ReceiveBuff
   927  001840  24F3               	addwf	prodl,w,c
   928  001842  6ED9               	movwf	fsr2l,c
   929  001844  0E00               	movlw	high _ReceiveBuff
   930  001846  20F4               	addwfc	prodh,w,c
   931  001848  6EDA               	movwf	fsr2h,c
   932  00184A  50DF               	movf	indf2,w,c
   933  00184C  6E22               	movwf	??_Show_Result& (0+255),c
   934  00184E  5022               	movf	??_Show_Result,w,c
   935  001850  2419               	addwf	?___wmul,w,c
   936  001852  6E20               	movwf	TM1640_Show_integer@Numbers,c
   937  001854  0E00               	movlw	0
   938  001856  201A               	addwfc	?___wmul+1,w,c
   939  001858  6E21               	movwf	TM1640_Show_integer@Numbers+1,c
   940  00185A  ECAD  F00A         	call	_TM1640_Show_integer	;wreg free
   941                           
   942                           ;Run.c: 155: PORTEbits.RE7=1;
   943  00185E  8E84               	bsf	3972,7,c	;volatile
   944  001860  0012               	return	
   945  001862  0012               	return		;funcret
   946  001864                     __end_of_Show_Result:
   947                           	opt stack 0
   948                           tblptru	equ	0xFF8
   949                           tblptrh	equ	0xFF7
   950                           prodh	equ	0xFF4
   951                           prodl	equ	0xFF3
   952                           intcon	equ	0xFF2
   953                           postinc0	equ	0xFEE
   954                           wreg	equ	0xFE8
   955                           indf2	equ	0xFDF
   956                           fsr2h	equ	0xFDA
   957                           fsr2l	equ	0xFD9
   958                           status	equ	0xFD8
   959                           
   960 ;; *************** function _TM1640_Show_integer *****************
   961 ;; Defined at:
   962 ;;		line 55 in file "_01_USER/TM1640.c"
   963 ;; Parameters:    Size  Location     Type
   964 ;;  Numbers         2   31[COMRAM] unsigned int 
   965 ;; Auto vars:     Size  Location     Type
   966 ;;		None
   967 ;; Return value:  Size  Location     Type
   968 ;;		None               void
   969 ;; Registers used:
   970 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   971 ;; Tracked objects:
   972 ;;		On entry : 0/0
   973 ;;		On exit  : 0/0
   974 ;;		Unchanged: 0/0
   975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   976 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   979 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   980 ;;Total ram usage:        2 bytes
   981 ;; Hardware stack levels used:    1
   982 ;; Hardware stack levels required when called:    6
   983 ;; This function calls:
   984 ;;		_TM1640_Writer_Dates
   985 ;;		___lwdiv
   986 ;;		___lwmod
   987 ;; This function is called by:
   988 ;;		_Show_Result
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           	psect	text4
   993  00155A                     __ptext4:
   994                           	opt stack 0
   995  00155A                     _TM1640_Show_integer:
   996                           	opt stack 23
   997                           
   998                           ;TM1640.c: 58: TM1640_Writer_Dates(3,LED_Number[Numbers%10]); Numbers/=10;
   999                           
  1000                           ;incstack = 0
  1001  00155A  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1002  00155E  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1003  001562  0E00               	movlw	0
  1004  001564  6E1C               	movwf	___lwmod@divisor+1,c
  1005  001566  0E0A               	movlw	10
  1006  001568  6E1B               	movwf	___lwmod@divisor,c
  1007  00156A  ECA9  F00D         	call	___lwmod	;wreg free
  1008  00156E  0E01               	movlw	low _LED_Number
  1009  001570  2419               	addwf	?___lwmod,w,c
  1010  001572  6EF6               	movwf	tblptrl,c
  1011  001574  0E10               	movlw	high _LED_Number
  1012  001576  201A               	addwfc	?___lwmod+1,w,c
  1013  001578  6EF7               	movwf	tblptrh,c
  1014  00157A                     	if	0	;There are less than 3 active tblptr bytes
  1015  00157A                     	endif
  1016  00157A  0008               	tblrd		*
  1017  00157C  CFF5 F01E          	movff	tablat,TM1640_Writer_Dates@Date
  1018  001580  0E03               	movlw	3
  1019  001582  EC77  F00F         	call	_TM1640_Writer_Dates
  1020  001586  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1021  00158A  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1022  00158E  0E00               	movlw	0
  1023  001590  6E1C               	movwf	___lwdiv@divisor+1,c
  1024  001592  0E0A               	movlw	10
  1025  001594  6E1B               	movwf	___lwdiv@divisor,c
  1026  001596  EC54  F00D         	call	___lwdiv	;wreg free
  1027  00159A  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1028  00159E  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1029                           
  1030                           ;TM1640.c: 59: TM1640_Writer_Dates(2,LED_Number[Numbers%10]); Numbers/=10;
  1031  0015A2  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1032  0015A6  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1033  0015AA  0E00               	movlw	0
  1034  0015AC  6E1C               	movwf	___lwmod@divisor+1,c
  1035  0015AE  0E0A               	movlw	10
  1036  0015B0  6E1B               	movwf	___lwmod@divisor,c
  1037  0015B2  ECA9  F00D         	call	___lwmod	;wreg free
  1038  0015B6  0E01               	movlw	low _LED_Number
  1039  0015B8  2419               	addwf	?___lwmod,w,c
  1040  0015BA  6EF6               	movwf	tblptrl,c
  1041  0015BC  0E10               	movlw	high _LED_Number
  1042  0015BE  201A               	addwfc	?___lwmod+1,w,c
  1043  0015C0  6EF7               	movwf	tblptrh,c
  1044  0015C2                     	if	0	;There are less than 3 active tblptr bytes
  1045  0015C2                     	endif
  1046  0015C2  0008               	tblrd		*
  1047  0015C4  CFF5 F01E          	movff	tablat,TM1640_Writer_Dates@Date
  1048  0015C8  0E02               	movlw	2
  1049  0015CA  EC77  F00F         	call	_TM1640_Writer_Dates
  1050  0015CE  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1051  0015D2  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1052  0015D6  0E00               	movlw	0
  1053  0015D8  6E1C               	movwf	___lwdiv@divisor+1,c
  1054  0015DA  0E0A               	movlw	10
  1055  0015DC  6E1B               	movwf	___lwdiv@divisor,c
  1056  0015DE  EC54  F00D         	call	___lwdiv	;wreg free
  1057  0015E2  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1058  0015E6  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1059                           
  1060                           ;TM1640.c: 60: TM1640_Writer_Dates(1,LED_Number[Numbers%10]); Numbers/=10;
  1061  0015EA  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1062  0015EE  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1063  0015F2  0E00               	movlw	0
  1064  0015F4  6E1C               	movwf	___lwmod@divisor+1,c
  1065  0015F6  0E0A               	movlw	10
  1066  0015F8  6E1B               	movwf	___lwmod@divisor,c
  1067  0015FA  ECA9  F00D         	call	___lwmod	;wreg free
  1068  0015FE  0E01               	movlw	low _LED_Number
  1069  001600  2419               	addwf	?___lwmod,w,c
  1070  001602  6EF6               	movwf	tblptrl,c
  1071  001604  0E10               	movlw	high _LED_Number
  1072  001606  201A               	addwfc	?___lwmod+1,w,c
  1073  001608  6EF7               	movwf	tblptrh,c
  1074  00160A                     	if	0	;There are less than 3 active tblptr bytes
  1075  00160A                     	endif
  1076  00160A  0008               	tblrd		*
  1077  00160C  CFF5 F01E          	movff	tablat,TM1640_Writer_Dates@Date
  1078  001610  0E01               	movlw	1
  1079  001612  EC77  F00F         	call	_TM1640_Writer_Dates
  1080  001616  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1081  00161A  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1082  00161E  0E00               	movlw	0
  1083  001620  6E1C               	movwf	___lwdiv@divisor+1,c
  1084  001622  0E0A               	movlw	10
  1085  001624  6E1B               	movwf	___lwdiv@divisor,c
  1086  001626  EC54  F00D         	call	___lwdiv	;wreg free
  1087  00162A  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1088  00162E  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1089                           
  1090                           ;TM1640.c: 61: TM1640_Writer_Dates(0,LED_Number[Numbers%10]);
  1091  001632  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1092  001636  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1093  00163A  0E00               	movlw	0
  1094  00163C  6E1C               	movwf	___lwmod@divisor+1,c
  1095  00163E  0E0A               	movlw	10
  1096  001640  6E1B               	movwf	___lwmod@divisor,c
  1097  001642  ECA9  F00D         	call	___lwmod	;wreg free
  1098  001646  0E01               	movlw	low _LED_Number
  1099  001648  2419               	addwf	?___lwmod,w,c
  1100  00164A  6EF6               	movwf	tblptrl,c
  1101  00164C  0E10               	movlw	high _LED_Number
  1102  00164E  201A               	addwfc	?___lwmod+1,w,c
  1103  001650  6EF7               	movwf	tblptrh,c
  1104  001652                     	if	0	;There are less than 3 active tblptr bytes
  1105  001652                     	endif
  1106  001652  0008               	tblrd		*
  1107  001654  CFF5 F01E          	movff	tablat,TM1640_Writer_Dates@Date
  1108  001658  0E00               	movlw	0
  1109  00165A  EC77  F00F         	call	_TM1640_Writer_Dates
  1110  00165E  0012               	return		;funcret
  1111  001660                     __end_of_TM1640_Show_integer:
  1112                           	opt stack 0
  1113                           tblptru	equ	0xFF8
  1114                           tblptrh	equ	0xFF7
  1115                           tblptrl	equ	0xFF6
  1116                           tablat	equ	0xFF5
  1117                           prodh	equ	0xFF4
  1118                           prodl	equ	0xFF3
  1119                           intcon	equ	0xFF2
  1120                           postinc0	equ	0xFEE
  1121                           wreg	equ	0xFE8
  1122                           indf2	equ	0xFDF
  1123                           fsr2h	equ	0xFDA
  1124                           fsr2l	equ	0xFD9
  1125                           status	equ	0xFD8
  1126                           
  1127 ;; *************** function ___lwmod *****************
  1128 ;; Defined at:
  1129 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;  dividend        2   24[COMRAM] unsigned int 
  1132 ;;  divisor         2   26[COMRAM] unsigned int 
  1133 ;; Auto vars:     Size  Location     Type
  1134 ;;  counter         1   28[COMRAM] unsigned char 
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  2   24[COMRAM] unsigned int 
  1137 ;; Registers used:
  1138 ;;		wreg, status,2, status,0
  1139 ;; Tracked objects:
  1140 ;;		On entry : 0/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1144 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1145 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1147 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1148 ;;Total ram usage:        5 bytes
  1149 ;; Hardware stack levels used:    1
  1150 ;; Hardware stack levels required when called:    3
  1151 ;; This function calls:
  1152 ;;		Nothing
  1153 ;; This function is called by:
  1154 ;;		_TM1640_Show_integer
  1155 ;; This function uses a non-reentrant model
  1156 ;;
  1157                           
  1158                           	psect	text5
  1159  001B52                     __ptext5:
  1160                           	opt stack 0
  1161  001B52                     ___lwmod:
  1162                           	opt stack 25
  1163                           
  1164                           ;incstack = 0
  1165  001B52  501B               	movf	___lwmod@divisor,w,c
  1166  001B54  101C               	iorwf	___lwmod@divisor+1,w,c
  1167  001B56  B4D8               	btfsc	status,2,c
  1168  001B58  D01D               	goto	l1012
  1169  001B5A  0E01               	movlw	1
  1170  001B5C  6E1D               	movwf	___lwmod@counter,c
  1171  001B5E  D005               	goto	l2929
  1172  001B60                     l2927:
  1173  001B60  90D8               	bcf	status,0,c
  1174  001B62  361B               	rlcf	___lwmod@divisor,f,c
  1175  001B64  361C               	rlcf	___lwmod@divisor+1,f,c
  1176  001B66  2A1D               	incf	___lwmod@counter,f,c
  1177  001B68  D000               	goto	l2929
  1178  001B6A                     l2929:
  1179  001B6A  BE1C               	btfsc	___lwmod@divisor+1,7,c
  1180  001B6C  D002               	goto	l2931
  1181  001B6E  D7F8               	goto	l2927
  1182  001B70  D000               	goto	l2931
  1183  001B72                     l2931:
  1184  001B72  501B               	movf	___lwmod@divisor,w,c
  1185  001B74  5C19               	subwf	___lwmod@dividend,w,c
  1186  001B76  501C               	movf	___lwmod@divisor+1,w,c
  1187  001B78  581A               	subwfb	___lwmod@dividend+1,w,c
  1188  001B7A  A0D8               	btfss	status,0,c
  1189  001B7C  D005               	goto	l2935
  1190  001B7E  501B               	movf	___lwmod@divisor,w,c
  1191  001B80  5E19               	subwf	___lwmod@dividend,f,c
  1192  001B82  501C               	movf	___lwmod@divisor+1,w,c
  1193  001B84  5A1A               	subwfb	___lwmod@dividend+1,f,c
  1194  001B86  D000               	goto	l2935
  1195  001B88                     l2935:
  1196  001B88  90D8               	bcf	status,0,c
  1197  001B8A  321C               	rrcf	___lwmod@divisor+1,f,c
  1198  001B8C  321B               	rrcf	___lwmod@divisor,f,c
  1199  001B8E  2E1D               	decfsz	___lwmod@counter,f,c
  1200  001B90  D7F0               	goto	l2931
  1201  001B92  D000               	goto	l1012
  1202  001B94                     l1012:
  1203  001B94  C019  F019         	movff	___lwmod@dividend,?___lwmod
  1204  001B98  C01A  F01A         	movff	___lwmod@dividend+1,?___lwmod+1
  1205  001B9C  0012               	return		;funcret
  1206  001B9E                     __end_of___lwmod:
  1207                           	opt stack 0
  1208                           tblptru	equ	0xFF8
  1209                           tblptrh	equ	0xFF7
  1210                           tblptrl	equ	0xFF6
  1211                           tablat	equ	0xFF5
  1212                           prodh	equ	0xFF4
  1213                           prodl	equ	0xFF3
  1214                           intcon	equ	0xFF2
  1215                           postinc0	equ	0xFEE
  1216                           wreg	equ	0xFE8
  1217                           indf2	equ	0xFDF
  1218                           fsr2h	equ	0xFDA
  1219                           fsr2l	equ	0xFD9
  1220                           status	equ	0xFD8
  1221                           
  1222 ;; *************** function ___lwdiv *****************
  1223 ;; Defined at:
  1224 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;  dividend        2   24[COMRAM] unsigned int 
  1227 ;;  divisor         2   26[COMRAM] unsigned int 
  1228 ;; Auto vars:     Size  Location     Type
  1229 ;;  quotient        2   29[COMRAM] unsigned int 
  1230 ;;  counter         1   28[COMRAM] unsigned char 
  1231 ;; Return value:  Size  Location     Type
  1232 ;;                  2   24[COMRAM] unsigned int 
  1233 ;; Registers used:
  1234 ;;		wreg, status,2, status,0
  1235 ;; Tracked objects:
  1236 ;;		On entry : 0/0
  1237 ;;		On exit  : 0/0
  1238 ;;		Unchanged: 0/0
  1239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1240 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1241 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1243 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1244 ;;Total ram usage:        7 bytes
  1245 ;; Hardware stack levels used:    1
  1246 ;; Hardware stack levels required when called:    3
  1247 ;; This function calls:
  1248 ;;		Nothing
  1249 ;; This function is called by:
  1250 ;;		_TM1640_Show_integer
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253                           
  1254                           	psect	text6
  1255  001AA8                     __ptext6:
  1256                           	opt stack 0
  1257  001AA8                     ___lwdiv:
  1258                           	opt stack 25
  1259                           
  1260                           ;incstack = 0
  1261  001AA8  0E00               	movlw	0
  1262  001AAA  6E1F               	movwf	___lwdiv@quotient+1,c
  1263  001AAC  0E00               	movlw	0
  1264  001AAE  6E1E               	movwf	___lwdiv@quotient,c
  1265  001AB0  501B               	movf	___lwdiv@divisor,w,c
  1266  001AB2  101C               	iorwf	___lwdiv@divisor+1,w,c
  1267  001AB4  B4D8               	btfsc	status,2,c
  1268  001AB6  D021               	goto	l1002
  1269  001AB8  0E01               	movlw	1
  1270  001ABA  6E1D               	movwf	___lwdiv@counter,c
  1271  001ABC  D005               	goto	l2909
  1272  001ABE                     l2907:
  1273  001ABE  90D8               	bcf	status,0,c
  1274  001AC0  361B               	rlcf	___lwdiv@divisor,f,c
  1275  001AC2  361C               	rlcf	___lwdiv@divisor+1,f,c
  1276  001AC4  2A1D               	incf	___lwdiv@counter,f,c
  1277  001AC6  D000               	goto	l2909
  1278  001AC8                     l2909:
  1279  001AC8  BE1C               	btfsc	___lwdiv@divisor+1,7,c
  1280  001ACA  D002               	goto	l2911
  1281  001ACC  D7F8               	goto	l2907
  1282  001ACE  D000               	goto	l2911
  1283  001AD0                     l2911:
  1284  001AD0  90D8               	bcf	status,0,c
  1285  001AD2  361E               	rlcf	___lwdiv@quotient,f,c
  1286  001AD4  361F               	rlcf	___lwdiv@quotient+1,f,c
  1287  001AD6  501B               	movf	___lwdiv@divisor,w,c
  1288  001AD8  5C19               	subwf	___lwdiv@dividend,w,c
  1289  001ADA  501C               	movf	___lwdiv@divisor+1,w,c
  1290  001ADC  581A               	subwfb	___lwdiv@dividend+1,w,c
  1291  001ADE  A0D8               	btfss	status,0,c
  1292  001AE0  D006               	goto	l2919
  1293  001AE2  501B               	movf	___lwdiv@divisor,w,c
  1294  001AE4  5E19               	subwf	___lwdiv@dividend,f,c
  1295  001AE6  501C               	movf	___lwdiv@divisor+1,w,c
  1296  001AE8  5A1A               	subwfb	___lwdiv@dividend+1,f,c
  1297  001AEA  801E               	bsf	___lwdiv@quotient,0,c
  1298  001AEC  D000               	goto	l2919
  1299  001AEE                     l2919:
  1300  001AEE  90D8               	bcf	status,0,c
  1301  001AF0  321C               	rrcf	___lwdiv@divisor+1,f,c
  1302  001AF2  321B               	rrcf	___lwdiv@divisor,f,c
  1303  001AF4  2E1D               	decfsz	___lwdiv@counter,f,c
  1304  001AF6  D7EC               	goto	l2911
  1305  001AF8  D000               	goto	l1002
  1306  001AFA                     l1002:
  1307  001AFA  C01E  F019         	movff	___lwdiv@quotient,?___lwdiv
  1308  001AFE  C01F  F01A         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1309  001B02  0012               	return		;funcret
  1310  001B04                     __end_of___lwdiv:
  1311                           	opt stack 0
  1312                           tblptru	equ	0xFF8
  1313                           tblptrh	equ	0xFF7
  1314                           tblptrl	equ	0xFF6
  1315                           tablat	equ	0xFF5
  1316                           prodh	equ	0xFF4
  1317                           prodl	equ	0xFF3
  1318                           intcon	equ	0xFF2
  1319                           postinc0	equ	0xFEE
  1320                           wreg	equ	0xFE8
  1321                           indf2	equ	0xFDF
  1322                           fsr2h	equ	0xFDA
  1323                           fsr2l	equ	0xFD9
  1324                           status	equ	0xFD8
  1325                           
  1326 ;; *************** function _TM1640_Writer_Dates *****************
  1327 ;; Defined at:
  1328 ;;		line 66 in file "_01_USER/TM1640.c"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;  Addr            1    wreg     unsigned char 
  1331 ;;  Date            1   29[COMRAM] unsigned char 
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;  Addr            1   30[COMRAM] unsigned char 
  1334 ;; Return value:  Size  Location     Type
  1335 ;;		None               void
  1336 ;; Registers used:
  1337 ;;		wreg, status,2, status,0, cstack
  1338 ;; Tracked objects:
  1339 ;;		On entry : 0/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1343 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1344 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1346 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1347 ;;Total ram usage:        2 bytes
  1348 ;; Hardware stack levels used:    1
  1349 ;; Hardware stack levels required when called:    5
  1350 ;; This function calls:
  1351 ;;		_TM1640_Start
  1352 ;;		_TM1640_Stop
  1353 ;;		_TM1640_Writer_Byte
  1354 ;; This function is called by:
  1355 ;;		_TM1640_Show_integer
  1356 ;;		_TM1640_Show_Decimal
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360                           	psect	text7
  1361  001EEE                     __ptext7:
  1362                           	opt stack 0
  1363  001EEE                     _TM1640_Writer_Dates:
  1364                           	opt stack 23
  1365                           
  1366                           ;incstack = 0
  1367                           ;TM1640_Writer_Dates@Addr stored from wreg
  1368  001EEE  6E1F               	movwf	TM1640_Writer_Dates@Addr,c
  1369                           
  1370                           ;TM1640.c: 68: if((Addr >= 0) && (Addr <= 3))
  1371  001EF0  0E04               	movlw	4
  1372  001EF2  601F               	cpfslt	TM1640_Writer_Dates@Addr,c
  1373  001EF4  0012               	return	
  1374                           
  1375                           ;TM1640.c: 69: {
  1376                           ;TM1640.c: 70: TM1640_Start();
  1377  001EF6  EC65  F00F         	call	_TM1640_Start	;wreg free
  1378                           
  1379                           ;TM1640.c: 71: TM1640_Writer_Byte(0xC0 + Addr);
  1380  001EFA  501F               	movf	TM1640_Writer_Dates@Addr,w,c
  1381  001EFC  0FC0               	addlw	192
  1382  001EFE  EC18  F00E         	call	_TM1640_Writer_Byte
  1383                           
  1384                           ;TM1640.c: 72: TM1640_Writer_Byte(Date);
  1385  001F02  501E               	movf	TM1640_Writer_Dates@Date,w,c
  1386  001F04  EC18  F00E         	call	_TM1640_Writer_Byte
  1387                           
  1388                           ;TM1640.c: 73: TM1640_Stop();
  1389  001F08  EC53  F00F         	call	_TM1640_Stop	;wreg free
  1390  001F0C  0012               	return	
  1391  001F0E  0012               	return		;funcret
  1392  001F10                     __end_of_TM1640_Writer_Dates:
  1393                           	opt stack 0
  1394                           tblptru	equ	0xFF8
  1395                           tblptrh	equ	0xFF7
  1396                           tblptrl	equ	0xFF6
  1397                           tablat	equ	0xFF5
  1398                           prodh	equ	0xFF4
  1399                           prodl	equ	0xFF3
  1400                           intcon	equ	0xFF2
  1401                           postinc0	equ	0xFEE
  1402                           wreg	equ	0xFE8
  1403                           indf2	equ	0xFDF
  1404                           fsr2h	equ	0xFDA
  1405                           fsr2l	equ	0xFD9
  1406                           status	equ	0xFD8
  1407                           
  1408 ;; *************** function _Run *****************
  1409 ;; Defined at:
  1410 ;;		line 111 in file "_01_USER/Run.c"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;		None
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;		None
  1415 ;; Return value:  Size  Location     Type
  1416 ;;		None               void
  1417 ;; Registers used:
  1418 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1419 ;; Tracked objects:
  1420 ;;		On entry : 0/0
  1421 ;;		On exit  : 0/0
  1422 ;;		Unchanged: 0/0
  1423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1428 ;;Total ram usage:        0 bytes
  1429 ;; Hardware stack levels used:    1
  1430 ;; Hardware stack levels required when called:    6
  1431 ;; This function calls:
  1432 ;;		_Get_ADC6
  1433 ;;		_RS485_Receive_Date
  1434 ;;		_RS485_Send_Date
  1435 ;; This function is called by:
  1436 ;;		_main
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           	psect	text8
  1441  001C6E                     __ptext8:
  1442                           	opt stack 0
  1443  001C6E                     _Run:
  1444                           	opt stack 24
  1445                           
  1446                           ;Run.c: 114: if( Handle_Switch.ADC6 ) Get_ADC6();
  1447                           
  1448                           ;incstack = 0
  1449  001C6E  0100               	movlb	0	; () banked
  1450  001C70  516B               	movf	(_Handle_Switch+1)& (0+255),w,b
  1451  001C72  B4D8               	btfsc	status,2,c
  1452  001C74  D003               	goto	l3105
  1453                           
  1454                           ; BSR set to: 0
  1455  001C76  EC1E  F00D         	call	_Get_ADC6	;wreg free
  1456  001C7A  D000               	goto	l3105
  1457  001C7C                     l3105:
  1458                           
  1459                           ;Run.c: 117: if ( Handle_Switch.Usart_OneDate )
  1460  001C7C  0100               	movlb	0	; () banked
  1461  001C7E  516C               	movf	(_Handle_Switch+2)& (0+255),w,b
  1462  001C80  B4D8               	btfsc	status,2,c
  1463  001C82  D00C               	goto	l3111
  1464                           
  1465                           ; BSR set to: 0
  1466                           ;Run.c: 118: {
  1467                           ;Run.c: 119: Handle_Switch.Usart_OneDate = 0;
  1468  001C84  0E00               	movlw	0
  1469  001C86  0100               	movlb	0	; () banked
  1470  001C88  6F6C               	movwf	(_Handle_Switch+2)& (0+255),b
  1471                           
  1472                           ; BSR set to: 0
  1473                           ;Run.c: 120: RS485_Send_Date(RS485_SendBuff,10);
  1474  001C8A  0E87               	movlw	low _RS485_SendBuff
  1475  001C8C  6E2A               	movwf	RS485_Send_Date@date_dress,c
  1476  001C8E  0E00               	movlw	high _RS485_SendBuff
  1477  001C90  6E2B               	movwf	RS485_Send_Date@date_dress+1,c
  1478  001C92  0E0A               	movlw	10
  1479  001C94  6E2C               	movwf	RS485_Send_Date@date_lenth,c
  1480  001C96  EC93  F00B         	call	_RS485_Send_Date	;wreg free
  1481  001C9A  D000               	goto	l3111
  1482  001C9C                     l3111:
  1483                           
  1484                           ;Run.c: 121: }
  1485                           ;Run.c: 122: RS485_Receive_Date(ReceiveBuff);
  1486  001C9C  0E91               	movlw	low _ReceiveBuff
  1487  001C9E  6E2A               	movwf	RS485_Receive_Date@DataBuff,c
  1488  001CA0  0E00               	movlw	high _ReceiveBuff
  1489  001CA2  6E2B               	movwf	RS485_Receive_Date@DataBuff+1,c
  1490  001CA4  EC74  F00C         	call	_RS485_Receive_Date	;wreg free
  1491  001CA8  0012               	return		;funcret
  1492  001CAA                     __end_of_Run:
  1493                           	opt stack 0
  1494                           tblptru	equ	0xFF8
  1495                           tblptrh	equ	0xFF7
  1496                           tblptrl	equ	0xFF6
  1497                           tablat	equ	0xFF5
  1498                           prodh	equ	0xFF4
  1499                           prodl	equ	0xFF3
  1500                           intcon	equ	0xFF2
  1501                           postinc0	equ	0xFEE
  1502                           wreg	equ	0xFE8
  1503                           indf2	equ	0xFDF
  1504                           fsr2h	equ	0xFDA
  1505                           fsr2l	equ	0xFD9
  1506                           status	equ	0xFD8
  1507                           
  1508 ;; *************** function _RS485_Send_Date *****************
  1509 ;; Defined at:
  1510 ;;		line 75 in file "_01_USER/My_USART.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;  date_dress      2   41[COMRAM] PTR unsigned char 
  1513 ;;		 -> RS485_SendBuff(10), 
  1514 ;;  date_lenth      1   43[COMRAM] unsigned char 
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;  i               2    0[BANK0 ] unsigned int 
  1517 ;; Return value:  Size  Location     Type
  1518 ;;		None               void
  1519 ;; Registers used:
  1520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1526 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1527 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1529 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1530 ;;Total ram usage:        5 bytes
  1531 ;; Hardware stack levels used:    1
  1532 ;; Hardware stack levels required when called:    5
  1533 ;; This function calls:
  1534 ;;		_CRC_Verify
  1535 ;; This function is called by:
  1536 ;;		_Run
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           	psect	text9
  1541  001726                     __ptext9:
  1542                           	opt stack 0
  1543  001726                     _RS485_Send_Date:
  1544                           	opt stack 24
  1545                           
  1546                           ;My_USART.c: 77: unsigned int i;
  1547                           ;My_USART.c: 78: while( (!TXSTA2bits.TRMT));
  1548                           
  1549                           ;incstack = 0
  1550  001726  D000               	goto	l156
  1551  001728                     l156:
  1552  001728  010F               	movlb	15	; () banked
  1553  00172A  A321               	btfss	33,1,b	;volatile
  1554  00172C  D7FD               	goto	l156
  1555                           
  1556                           ; BSR set to: 15
  1557                           ;My_USART.c: 79: RG3 = 0;
  1558  00172E  9686               	bcf	3974,3,c	;volatile
  1559                           
  1560                           ; BSR set to: 15
  1561                           ;My_USART.c: 82: RS485_SendBuff[0] = 0xaa;
  1562  001730  0EAA               	movlw	170
  1563  001732  0100               	movlb	0	; () banked
  1564  001734  6F87               	movwf	_RS485_SendBuff& (0+255),b
  1565                           
  1566                           ;My_USART.c: 85: for(i = 0; i < 10 -2;i++)
  1567  001736  0E00               	movlw	0
  1568  001738  0100               	movlb	0	; () banked
  1569  00173A  6F9C               	movwf	(RS485_Send_Date@i+1)& (0+255),b
  1570  00173C  0E00               	movlw	0
  1571  00173E  6F9B               	movwf	RS485_Send_Date@i& (0+255),b
  1572  001740                     l2987:
  1573                           
  1574                           ; BSR set to: 0
  1575  001740  0100               	movlb	0	; () banked
  1576  001742  519C               	movf	(RS485_Send_Date@i+1)& (0+255),w,b
  1577  001744  E11B               	bnz	l2997
  1578  001746  0E08               	movlw	8
  1579  001748  0100               	movlb	0	; () banked
  1580  00174A  5D9B               	subwf	RS485_Send_Date@i& (0+255),w,b
  1581  00174C  B0D8               	btfsc	status,0,c
  1582  00174E  D016               	goto	l2997
  1583  001750  D001               	goto	l2991
  1584                           
  1585                           ; BSR set to: 0
  1586  001752  D014               	goto	l2997
  1587  001754                     l2991:
  1588                           
  1589                           ; BSR set to: 0
  1590                           ;My_USART.c: 86: {
  1591                           ;My_USART.c: 87: TXREG2 = date_dress[date_lenth];
  1592  001754  502C               	movf	RS485_Send_Date@date_lenth,w,c
  1593  001756  0D01               	mullw	1
  1594  001758  50F3               	movf	prodl,w,c
  1595  00175A  242A               	addwf	RS485_Send_Date@date_dress,w,c
  1596  00175C  6ED9               	movwf	fsr2l,c
  1597  00175E  50F4               	movf	prodh,w,c
  1598  001760  202B               	addwfc	RS485_Send_Date@date_dress+1,w,c
  1599  001762  6EDA               	movwf	fsr2h,c
  1600  001764  50DF               	movf	indf2,w,c
  1601  001766  010F               	movlb	15	; () banked
  1602  001768  6F1C               	movwf	28,b	;volatile
  1603                           
  1604                           ;My_USART.c: 88: while( (!TXSTA2bits.TRMT));
  1605  00176A  D000               	goto	l161
  1606  00176C                     l161:
  1607                           
  1608                           ; BSR set to: 15
  1609  00176C  010F               	movlb	15	; () banked
  1610  00176E  A321               	btfss	33,1,b	;volatile
  1611  001770  D7FD               	goto	l161
  1612                           
  1613                           ; BSR set to: 15
  1614                           
  1615                           ; BSR set to: 15
  1616  001772  0100               	movlb	0	; () banked
  1617  001774  4B9B               	infsnz	RS485_Send_Date@i& (0+255),f,b
  1618  001776  2B9C               	incf	(RS485_Send_Date@i+1)& (0+255),f,b
  1619  001778  D7E3               	goto	l2987
  1620                           
  1621                           ; BSR set to: 0
  1622  00177A  D000               	goto	l2997
  1623  00177C                     l2997:
  1624                           
  1625                           ; BSR set to: 0
  1626                           ;My_USART.c: 89: }
  1627                           ;My_USART.c: 92: date_dress[10 - 1] = 0xaa;
  1628  00177C  EE20 F009          	lfsr	2,9
  1629  001780  502A               	movf	RS485_Send_Date@date_dress,w,c
  1630  001782  26D9               	addwf	fsr2l,f,c
  1631  001784  502B               	movf	RS485_Send_Date@date_dress+1,w,c
  1632  001786  22DA               	addwfc	fsr2h,f,c
  1633  001788  0EAA               	movlw	170
  1634  00178A  6EDF               	movwf	indf2,c
  1635                           
  1636                           ; BSR set to: 0
  1637                           ;My_USART.c: 93: CRC_Verify(date_dress,10 - 2,&RS485_SendBuff[8],&RS485_SendBuff[9]);
  1638  00178C  C02A  F01F         	movff	RS485_Send_Date@date_dress,CRC_Verify@_pucBuf
  1639  001790  C02B  F020         	movff	RS485_Send_Date@date_dress+1,CRC_Verify@_pucBuf+1
  1640  001794  0E08               	movlw	8
  1641  001796  6E21               	movwf	CRC_Verify@_usLen,c
  1642  001798  0E8F               	movlw	low (_RS485_SendBuff+8)
  1643  00179A  6E22               	movwf	CRC_Verify@_ucHByte,c
  1644  00179C  0E00               	movlw	high (_RS485_SendBuff+8)
  1645  00179E  6E23               	movwf	CRC_Verify@_ucHByte+1,c
  1646  0017A0  0E90               	movlw	low (_RS485_SendBuff+9)
  1647  0017A2  6E24               	movwf	CRC_Verify@_ucLByte,c
  1648  0017A4  0E00               	movlw	high (_RS485_SendBuff+9)
  1649  0017A6  6E25               	movwf	CRC_Verify@_ucLByte+1,c
  1650  0017A8  ECE7  F00C         	call	_CRC_Verify	;wreg free
  1651                           
  1652                           ;My_USART.c: 95: TXREG2 = RS485_SendBuff[8];
  1653  0017AC  C08F  FF1C         	movff	_RS485_SendBuff+8,3868	;volatile
  1654                           
  1655                           ;My_USART.c: 96: while( (!TXSTA2bits.TRMT));
  1656  0017B0  D000               	goto	l164
  1657  0017B2                     l164:
  1658  0017B2  010F               	movlb	15	; () banked
  1659  0017B4  A321               	btfss	33,1,b	;volatile
  1660  0017B6  D7FD               	goto	l164
  1661                           
  1662                           ; BSR set to: 15
  1663                           ;My_USART.c: 97: TXREG2 = RS485_SendBuff[9];
  1664  0017B8  C090  FF1C         	movff	_RS485_SendBuff+9,3868	;volatile
  1665                           
  1666                           ;My_USART.c: 98: while( (!TXSTA2bits.TRMT));
  1667  0017BC  D000               	goto	l167
  1668  0017BE                     l167:
  1669                           
  1670                           ; BSR set to: 15
  1671  0017BE  010F               	movlb	15	; () banked
  1672  0017C0  A321               	btfss	33,1,b	;volatile
  1673  0017C2  D7FD               	goto	l167
  1674                           
  1675                           ; BSR set to: 15
  1676                           ;My_USART.c: 100: RG3 = 1;
  1677  0017C4  8686               	bsf	3974,3,c	;volatile
  1678                           
  1679                           ; BSR set to: 15
  1680  0017C6  0012               	return		;funcret
  1681  0017C8                     __end_of_RS485_Send_Date:
  1682                           	opt stack 0
  1683                           tblptru	equ	0xFF8
  1684                           tblptrh	equ	0xFF7
  1685                           tblptrl	equ	0xFF6
  1686                           tablat	equ	0xFF5
  1687                           prodh	equ	0xFF4
  1688                           prodl	equ	0xFF3
  1689                           intcon	equ	0xFF2
  1690                           postinc0	equ	0xFEE
  1691                           wreg	equ	0xFE8
  1692                           indf2	equ	0xFDF
  1693                           fsr2h	equ	0xFDA
  1694                           fsr2l	equ	0xFD9
  1695                           status	equ	0xFD8
  1696                           
  1697 ;; *************** function _RS485_Receive_Date *****************
  1698 ;; Defined at:
  1699 ;;		line 112 in file "_01_USER/My_USART.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;  DataBuff        2   41[COMRAM] PTR unsigned char 
  1702 ;;		 -> ReceiveBuff(10), 
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;  n               2    2[BANK0 ] unsigned int 
  1705 ;;  temp            2    0        unsigned int 
  1706 ;;  _ucLByte        1    1[BANK0 ] unsigned char 
  1707 ;;  _ucHByte        1    0[BANK0 ] unsigned char 
  1708 ;; Return value:  Size  Location     Type
  1709 ;;                  1    wreg      unsigned char 
  1710 ;; Registers used:
  1711 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1712 ;; Tracked objects:
  1713 ;;		On entry : 0/0
  1714 ;;		On exit  : 0/0
  1715 ;;		Unchanged: 0/0
  1716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1717 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1718 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1720 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1721 ;;Total ram usage:        6 bytes
  1722 ;; Hardware stack levels used:    1
  1723 ;; Hardware stack levels required when called:    5
  1724 ;; This function calls:
  1725 ;;		_CRC_Verify
  1726 ;; This function is called by:
  1727 ;;		_Run
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           	psect	text10
  1732  0018E8                     __ptext10:
  1733                           	opt stack 0
  1734  0018E8                     _RS485_Receive_Date:
  1735                           	opt stack 24
  1736                           
  1737                           ;My_USART.c: 114: unsigned n = 10 - 1;
  1738                           
  1739                           ; BSR set to: 15
  1740                           ;incstack = 0
  1741  0018E8  0E00               	movlw	0
  1742  0018EA  0100               	movlb	0	; () banked
  1743  0018EC  6F9E               	movwf	(RS485_Receive_Date@n+1)& (0+255),b
  1744  0018EE  0E09               	movlw	9
  1745  0018F0  6F9D               	movwf	RS485_Receive_Date@n& (0+255),b
  1746                           
  1747                           ;My_USART.c: 115: unsigned int temp;
  1748                           ;My_USART.c: 116: unsigned char _ucHByte;
  1749                           ;My_USART.c: 117: unsigned char _ucLByte;
  1750                           ;My_USART.c: 118: if(RS485_Receive_Flag)
  1751  0018F2  5034               	movf	_RS485_Receive_Flag,w,c
  1752  0018F4  B4D8               	btfsc	status,2,c
  1753  0018F6  0012               	return	
  1754                           
  1755                           ; BSR set to: 0
  1756                           ;My_USART.c: 119: {
  1757                           ;My_USART.c: 120: RS485_Receive_Flag = 0;
  1758  0018F8  0E00               	movlw	0
  1759  0018FA  6E34               	movwf	_RS485_Receive_Flag,c
  1760                           
  1761                           ;My_USART.c: 121: while ( n --)
  1762  0018FC  D013               	goto	l3009
  1763  0018FE                     l3007:
  1764                           
  1765                           ; BSR set to: 0
  1766                           ;My_USART.c: 122: DataBuff[n] = RS485_ReceiveBuff[n];
  1767  0018FE  0E60               	movlw	low _RS485_ReceiveBuff
  1768  001900  0100               	movlb	0	; () banked
  1769  001902  259D               	addwf	RS485_Receive_Date@n& (0+255),w,b
  1770  001904  6ED9               	movwf	fsr2l,c
  1771  001906  0E00               	movlw	high _RS485_ReceiveBuff
  1772  001908  0100               	movlb	0	; () banked
  1773  00190A  219E               	addwfc	(RS485_Receive_Date@n+1)& (0+255),w,b
  1774  00190C  6EDA               	movwf	fsr2h,c
  1775  00190E  0100               	movlb	0	; () banked
  1776  001910  519D               	movf	RS485_Receive_Date@n& (0+255),w,b
  1777  001912  242A               	addwf	RS485_Receive_Date@DataBuff,w,c
  1778  001914  6EE1               	movwf	fsr1l,c
  1779  001916  0100               	movlb	0	; () banked
  1780  001918  519E               	movf	(RS485_Receive_Date@n+1)& (0+255),w,b
  1781  00191A  202B               	addwfc	RS485_Receive_Date@DataBuff+1,w,c
  1782  00191C  6EE2               	movwf	fsr1h,c
  1783  00191E  CFDF FFE7          	movff	indf2,indf1
  1784  001922  D000               	goto	l3009
  1785  001924                     l3009:
  1786                           
  1787                           ; BSR set to: 0
  1788  001924  0100               	movlb	0	; () banked
  1789  001926  079D               	decf	RS485_Receive_Date@n& (0+255),f,b
  1790  001928  A0D8               	btfss	status,0,c
  1791  00192A  079E               	decf	(RS485_Receive_Date@n+1)& (0+255),f,b
  1792  00192C  0100               	movlb	0	; () banked
  1793  00192E  299D               	incf	RS485_Receive_Date@n& (0+255),w,b
  1794  001930  E1E6               	bnz	l3007
  1795  001932  0100               	movlb	0	; () banked
  1796  001934  299E               	incf	(RS485_Receive_Date@n+1)& (0+255),w,b
  1797  001936  A4D8               	btfss	status,2,c
  1798  001938  D7E2               	goto	l3007
  1799                           
  1800                           ; BSR set to: 0
  1801                           ;My_USART.c: 123: CRC_Verify(DataBuff,10-2,&_ucHByte,&_ucLByte);
  1802                           
  1803                           ; BSR set to: 0
  1804  00193A  C02A  F01F         	movff	RS485_Receive_Date@DataBuff,CRC_Verify@_pucBuf
  1805  00193E  C02B  F020         	movff	RS485_Receive_Date@DataBuff+1,CRC_Verify@_pucBuf+1
  1806  001942  0E08               	movlw	8
  1807  001944  6E21               	movwf	CRC_Verify@_usLen,c
  1808  001946  0E9B               	movlw	low RS485_Receive_Date@_ucHByte
  1809  001948  6E22               	movwf	CRC_Verify@_ucHByte,c
  1810  00194A  0E00               	movlw	high RS485_Receive_Date@_ucHByte
  1811  00194C  6E23               	movwf	CRC_Verify@_ucHByte+1,c
  1812  00194E  0E9C               	movlw	low RS485_Receive_Date@_ucLByte
  1813  001950  6E24               	movwf	CRC_Verify@_ucLByte,c
  1814  001952  0E00               	movlw	high RS485_Receive_Date@_ucLByte
  1815  001954  6E25               	movwf	CRC_Verify@_ucLByte+1,c
  1816  001956  ECE7  F00C         	call	_CRC_Verify	;wreg free
  1817                           
  1818                           ;My_USART.c: 131: else return 0;
  1819                           ;	Return value of _RS485_Receive_Date is never used
  1820                           
  1821                           ;My_USART.c: 129: }
  1822                           ;My_USART.c: 130: }
  1823                           
  1824                           ;My_USART.c: 126: {
  1825                           ;My_USART.c: 128: return 1;
  1826                           ;	Return value of _RS485_Receive_Date is never used
  1827  00195A  0012               	return	
  1828  00195C  0012               	return		;funcret
  1829  00195E                     __end_of_RS485_Receive_Date:
  1830                           	opt stack 0
  1831                           tblptru	equ	0xFF8
  1832                           tblptrh	equ	0xFF7
  1833                           tblptrl	equ	0xFF6
  1834                           tablat	equ	0xFF5
  1835                           prodh	equ	0xFF4
  1836                           prodl	equ	0xFF3
  1837                           intcon	equ	0xFF2
  1838                           postinc0	equ	0xFEE
  1839                           wreg	equ	0xFE8
  1840                           indf1	equ	0xFE7
  1841                           fsr1h	equ	0xFE2
  1842                           fsr1l	equ	0xFE1
  1843                           indf2	equ	0xFDF
  1844                           fsr2h	equ	0xFDA
  1845                           fsr2l	equ	0xFD9
  1846                           status	equ	0xFD8
  1847                           
  1848 ;; *************** function _CRC_Verify *****************
  1849 ;; Defined at:
  1850 ;;		line 144 in file "_01_USER/My_USART.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;  _pucBuf         2   30[COMRAM] PTR unsigned char 
  1853 ;;		 -> ReceiveBuff(10), RS485_SendBuff(10), 
  1854 ;;  _usLen          1   32[COMRAM] unsigned char 
  1855 ;;  _ucHByte        2   33[COMRAM] PTR unsigned char 
  1856 ;;		 -> RS485_Receive_Date@_ucHByte(1), RS485_SendBuff(10), 
  1857 ;;  _ucLByte        2   35[COMRAM] PTR unsigned char 
  1858 ;;		 -> RS485_Receive_Date@_ucLByte(1), RS485_SendBuff(10), 
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;  usCrc           2   38[COMRAM] unsigned int 
  1861 ;;  i               1   40[COMRAM] unsigned char 
  1862 ;; Return value:  Size  Location     Type
  1863 ;;		None               void
  1864 ;; Registers used:
  1865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1866 ;; Tracked objects:
  1867 ;;		On entry : 0/0
  1868 ;;		On exit  : 0/0
  1869 ;;		Unchanged: 0/0
  1870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1871 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1872 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1873 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1874 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1875 ;;Total ram usage:       11 bytes
  1876 ;; Hardware stack levels used:    1
  1877 ;; Hardware stack levels required when called:    4
  1878 ;; This function calls:
  1879 ;;		___wmul
  1880 ;; This function is called by:
  1881 ;;		_RS485_Send_Date
  1882 ;;		_RS485_Receive_Date
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           	psect	text11
  1887  0019CE                     __ptext11:
  1888                           	opt stack 0
  1889  0019CE                     _CRC_Verify:
  1890                           	opt stack 24
  1891                           
  1892                           ;My_USART.c: 146: char i = 0;
  1893                           
  1894                           ;incstack = 0
  1895  0019CE  0E00               	movlw	0
  1896  0019D0  6E29               	movwf	CRC_Verify@i,c
  1897                           
  1898                           ;My_USART.c: 147: unsigned int usCrc = 0;
  1899  0019D2  0E00               	movlw	0
  1900  0019D4  6E28               	movwf	CRC_Verify@usCrc+1,c
  1901  0019D6  0E00               	movlw	0
  1902  0019D8  6E27               	movwf	CRC_Verify@usCrc,c
  1903                           
  1904                           ;My_USART.c: 149: for(i = 0 ; i < _usLen ; i++)
  1905  0019DA  0E00               	movlw	0
  1906  0019DC  6E29               	movwf	CRC_Verify@i,c
  1907  0019DE  D01D               	goto	l2787
  1908  0019E0                     l2783:
  1909                           
  1910                           ;My_USART.c: 150: usCrc = (usCrc+_pucBuf[i]*(i+1))%65536;
  1911  0019E0  0E01               	movlw	1
  1912  0019E2  2429               	addwf	CRC_Verify@i,w,c
  1913  0019E4  6E19               	movwf	___wmul@multiplier,c
  1914  0019E6  6A1A               	clrf	___wmul@multiplier+1,c
  1915  0019E8  0E00               	movlw	0
  1916  0019EA  221A               	addwfc	___wmul@multiplier+1,f,c
  1917  0019EC  5029               	movf	CRC_Verify@i,w,c
  1918  0019EE  0D01               	mullw	1
  1919  0019F0  50F3               	movf	prodl,w,c
  1920  0019F2  241F               	addwf	CRC_Verify@_pucBuf,w,c
  1921  0019F4  6ED9               	movwf	fsr2l,c
  1922  0019F6  50F4               	movf	prodh,w,c
  1923  0019F8  2020               	addwfc	CRC_Verify@_pucBuf+1,w,c
  1924  0019FA  6EDA               	movwf	fsr2h,c
  1925  0019FC  50DF               	movf	indf2,w,c
  1926  0019FE  6E26               	movwf	??_CRC_Verify& (0+255),c
  1927  001A00  5026               	movf	??_CRC_Verify,w,c
  1928  001A02  6E1B               	movwf	___wmul@multiplicand,c
  1929  001A04  6A1C               	clrf	___wmul@multiplicand+1,c
  1930  001A06  ECF4  F00E         	call	___wmul	;wreg free
  1931  001A0A  5027               	movf	CRC_Verify@usCrc,w,c
  1932  001A0C  2419               	addwf	?___wmul,w,c
  1933  001A0E  6E27               	movwf	CRC_Verify@usCrc,c
  1934  001A10  5028               	movf	CRC_Verify@usCrc+1,w,c
  1935  001A12  201A               	addwfc	?___wmul+1,w,c
  1936  001A14  6E28               	movwf	CRC_Verify@usCrc+1,c
  1937  001A16  2A29               	incf	CRC_Verify@i,f,c
  1938  001A18  D000               	goto	l2787
  1939  001A1A                     l2787:
  1940  001A1A  5021               	movf	CRC_Verify@_usLen,w,c
  1941  001A1C  5C29               	subwf	CRC_Verify@i,w,c
  1942  001A1E  A0D8               	btfss	status,0,c
  1943  001A20  D7DF               	goto	l2783
  1944                           
  1945                           ;My_USART.c: 152: *_ucHByte = usCrc / 256;
  1946  001A22  5028               	movf	CRC_Verify@usCrc+1,w,c
  1947  001A24  C022  FFD9         	movff	CRC_Verify@_ucHByte,fsr2l
  1948  001A28  C023  FFDA         	movff	CRC_Verify@_ucHByte+1,fsr2h
  1949  001A2C  6EDF               	movwf	indf2,c
  1950                           
  1951                           ;My_USART.c: 153: *_ucLByte = usCrc % 256;
  1952  001A2E  C024  FFD9         	movff	CRC_Verify@_ucLByte,fsr2l
  1953  001A32  C025  FFDA         	movff	CRC_Verify@_ucLByte+1,fsr2h
  1954  001A36  C027  FFDF         	movff	CRC_Verify@usCrc,indf2
  1955  001A3A  0012               	return		;funcret
  1956  001A3C                     __end_of_CRC_Verify:
  1957                           	opt stack 0
  1958                           tblptru	equ	0xFF8
  1959                           tblptrh	equ	0xFF7
  1960                           tblptrl	equ	0xFF6
  1961                           tablat	equ	0xFF5
  1962                           prodh	equ	0xFF4
  1963                           prodl	equ	0xFF3
  1964                           intcon	equ	0xFF2
  1965                           postinc0	equ	0xFEE
  1966                           wreg	equ	0xFE8
  1967                           indf1	equ	0xFE7
  1968                           fsr1h	equ	0xFE2
  1969                           fsr1l	equ	0xFE1
  1970                           indf2	equ	0xFDF
  1971                           fsr2h	equ	0xFDA
  1972                           fsr2l	equ	0xFD9
  1973                           status	equ	0xFD8
  1974                           
  1975 ;; *************** function ___wmul *****************
  1976 ;; Defined at:
  1977 ;;		line 15 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;  multiplier      2   24[COMRAM] unsigned int 
  1980 ;;  multiplicand    2   26[COMRAM] unsigned int 
  1981 ;; Auto vars:     Size  Location     Type
  1982 ;;  product         2   28[COMRAM] unsigned int 
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  2   24[COMRAM] unsigned int 
  1985 ;; Registers used:
  1986 ;;		wreg, status,2, status,0, prodl, prodh
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1992 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1993 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1995 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1996 ;;Total ram usage:        6 bytes
  1997 ;; Hardware stack levels used:    1
  1998 ;; Hardware stack levels required when called:    3
  1999 ;; This function calls:
  2000 ;;		Nothing
  2001 ;; This function is called by:
  2002 ;;		_CRC_Verify
  2003 ;;		_Show_Result
  2004 ;; This function uses a non-reentrant model
  2005 ;;
  2006                           
  2007                           	psect	text12
  2008  001DE8                     __ptext12:
  2009                           	opt stack 0
  2010  001DE8                     ___wmul:
  2011                           	opt stack 26
  2012                           
  2013                           ;incstack = 0
  2014  001DE8  5019               	movf	___wmul@multiplier,w,c
  2015  001DEA  021B               	mulwf	___wmul@multiplicand,c
  2016  001DEC  CFF3 F01D          	movff	prodl,___wmul@product
  2017  001DF0  CFF4 F01E          	movff	prodh,___wmul@product+1
  2018  001DF4  5019               	movf	___wmul@multiplier,w,c
  2019  001DF6  021C               	mulwf	___wmul@multiplicand+1,c
  2020  001DF8  50F3               	movf	prodl,w,c
  2021  001DFA  261E               	addwf	___wmul@product+1,f,c
  2022  001DFC  501A               	movf	___wmul@multiplier+1,w,c
  2023  001DFE  021B               	mulwf	___wmul@multiplicand,c
  2024  001E00  50F3               	movf	prodl,w,c
  2025  001E02  261E               	addwf	___wmul@product+1,f,c
  2026  001E04  C01D  F019         	movff	___wmul@product,?___wmul
  2027  001E08  C01E  F01A         	movff	___wmul@product+1,?___wmul+1
  2028  001E0C  0012               	return	
  2029  001E0E  0012               	return		;funcret
  2030  001E10                     __end_of___wmul:
  2031                           	opt stack 0
  2032                           tblptru	equ	0xFF8
  2033                           tblptrh	equ	0xFF7
  2034                           tblptrl	equ	0xFF6
  2035                           tablat	equ	0xFF5
  2036                           prodh	equ	0xFF4
  2037                           prodl	equ	0xFF3
  2038                           intcon	equ	0xFF2
  2039                           postinc0	equ	0xFEE
  2040                           wreg	equ	0xFE8
  2041                           indf1	equ	0xFE7
  2042                           fsr1h	equ	0xFE2
  2043                           fsr1l	equ	0xFE1
  2044                           indf2	equ	0xFDF
  2045                           fsr2h	equ	0xFDA
  2046                           fsr2l	equ	0xFD9
  2047                           status	equ	0xFD8
  2048                           
  2049 ;; *************** function _Get_ADC6 *****************
  2050 ;; Defined at:
  2051 ;;		line 67 in file "_01_USER/My_ADC.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;		None
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;		None
  2056 ;; Return value:  Size  Location     Type
  2057 ;;		None               void
  2058 ;; Registers used:
  2059 ;;		wreg, status,2, status,0, cstack
  2060 ;; Tracked objects:
  2061 ;;		On entry : 0/0
  2062 ;;		On exit  : 0/0
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2069 ;;Total ram usage:        0 bytes
  2070 ;; Hardware stack levels used:    1
  2071 ;; Hardware stack levels required when called:    5
  2072 ;; This function calls:
  2073 ;;		_BusyADC
  2074 ;;		_ConvertADC
  2075 ;;		_ReadADC
  2076 ;;		___ftdiv
  2077 ;;		___ftmul
  2078 ;;		___lwtoft
  2079 ;; This function is called by:
  2080 ;;		_Run
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           	psect	text13
  2085  001A3C                     __ptext13:
  2086                           	opt stack 0
  2087  001A3C                     _Get_ADC6:
  2088                           	opt stack 24
  2089                           
  2090                           ;My_ADC.c: 69: ConvertADC();
  2091                           
  2092                           ;incstack = 0
  2093  001A3C  ECC7  F00F         	call	_ConvertADC	;wreg free
  2094                           
  2095                           ;My_ADC.c: 70: while(BusyADC());
  2096  001A40  D000               	goto	l3055
  2097  001A42                     l3055:
  2098  001A42  ECB5  F00F         	call	_BusyADC	;wreg free
  2099  001A46  0900               	iorlw	0
  2100  001A48  A4D8               	btfss	status,2,c
  2101  001A4A  D7FB               	goto	l3055
  2102                           
  2103                           ;My_ADC.c: 71: ADC6_Buff =(unsigned int)ReadADC()*4.096f/4095.0f;
  2104  001A4C  0E12               	movlw	18
  2105  001A4E  6E27               	movwf	___ftmul@f2,c
  2106  001A50  0E83               	movlw	131
  2107  001A52  6E28               	movwf	___ftmul@f2+1,c
  2108  001A54  0E40               	movlw	64
  2109  001A56  6E29               	movwf	___ftmul@f2+2,c
  2110  001A58  ECAD  F00F         	call	_ReadADC	;wreg free
  2111  001A5C  C019  F021         	movff	?_ReadADC,___lwtoft@c
  2112  001A60  C01A  F022         	movff	?_ReadADC+1,___lwtoft@c+1
  2113  001A64  EC1B  F00F         	call	___lwtoft	;wreg free
  2114  001A68  C021  F024         	movff	?___lwtoft,___ftmul@f1
  2115  001A6C  C022  F025         	movff	?___lwtoft+1,___ftmul@f1+1
  2116  001A70  C023  F026         	movff	?___lwtoft+2,___ftmul@f1+2
  2117  001A74  EC81  F009         	call	___ftmul	;wreg free
  2118  001A78  C024  F0A1         	movff	?___ftmul,___ftdiv@f1
  2119  001A7C  C025  F0A2         	movff	?___ftmul+1,___ftdiv@f1+1
  2120  001A80  C026  F0A3         	movff	?___ftmul+2,___ftdiv@f1+2
  2121  001A84  0EF0               	movlw	240
  2122  001A86  0100               	movlb	0	; () banked
  2123  001A88  6FA4               	movwf	___ftdiv@f2& (0+255),b
  2124  001A8A  0E7F               	movlw	127
  2125  001A8C  0100               	movlb	0	; () banked
  2126  001A8E  6FA5               	movwf	(___ftdiv@f2+1)& (0+255),b
  2127  001A90  0E45               	movlw	69
  2128  001A92  0100               	movlb	0	; () banked
  2129  001A94  6FA6               	movwf	(___ftdiv@f2+2)& (0+255),b
  2130  001A96  ECD8  F008         	call	___ftdiv	;wreg free
  2131  001A9A  C0A1  F072         	movff	?___ftdiv,_ADC6_Buff	;volatile
  2132  001A9E  C0A2  F073         	movff	?___ftdiv+1,_ADC6_Buff+1	;volatile
  2133  001AA2  C0A3  F074         	movff	?___ftdiv+2,_ADC6_Buff+2	;volatile
  2134  001AA6  0012               	return		;funcret
  2135  001AA8                     __end_of_Get_ADC6:
  2136                           	opt stack 0
  2137                           tblptru	equ	0xFF8
  2138                           tblptrh	equ	0xFF7
  2139                           tblptrl	equ	0xFF6
  2140                           tablat	equ	0xFF5
  2141                           prodh	equ	0xFF4
  2142                           prodl	equ	0xFF3
  2143                           intcon	equ	0xFF2
  2144                           postinc0	equ	0xFEE
  2145                           wreg	equ	0xFE8
  2146                           indf1	equ	0xFE7
  2147                           fsr1h	equ	0xFE2
  2148                           fsr1l	equ	0xFE1
  2149                           indf2	equ	0xFDF
  2150                           fsr2h	equ	0xFDA
  2151                           fsr2l	equ	0xFD9
  2152                           status	equ	0xFD8
  2153                           
  2154 ;; *************** function ___lwtoft *****************
  2155 ;; Defined at:
  2156 ;;		line 28 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;  c               2   32[COMRAM] unsigned int 
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;		None
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  3   32[COMRAM] float 
  2163 ;; Registers used:
  2164 ;;		wreg, status,2, status,0, cstack
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2170 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2173 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2174 ;;Total ram usage:        3 bytes
  2175 ;; Hardware stack levels used:    1
  2176 ;; Hardware stack levels required when called:    4
  2177 ;; This function calls:
  2178 ;;		___ftpack
  2179 ;; This function is called by:
  2180 ;;		_Get_ADC6
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184                           	psect	text14
  2185  001E36                     __ptext14:
  2186                           	opt stack 0
  2187  001E36                     ___lwtoft:
  2188                           	opt stack 24
  2189                           
  2190                           ;incstack = 0
  2191  001E36  C021  F019         	movff	___lwtoft@c,___ftpack@arg
  2192  001E3A  C022  F01A         	movff	___lwtoft@c+1,___ftpack@arg+1
  2193  001E3E  6A1B               	clrf	___ftpack@arg+2,c
  2194  001E40  0E8E               	movlw	142
  2195  001E42  6E1C               	movwf	___ftpack@exp,c
  2196  001E44  0E00               	movlw	0
  2197  001E46  6E1D               	movwf	___ftpack@sign,c
  2198  001E48  EC30  F00B         	call	___ftpack	;wreg free
  2199  001E4C  C019  F021         	movff	?___ftpack,?___lwtoft
  2200  001E50  C01A  F022         	movff	?___ftpack+1,?___lwtoft+1
  2201  001E54  C01B  F023         	movff	?___ftpack+2,?___lwtoft+2
  2202  001E58  0012               	return	
  2203  001E5A  0012               	return		;funcret
  2204  001E5C                     __end_of___lwtoft:
  2205                           	opt stack 0
  2206                           tblptru	equ	0xFF8
  2207                           tblptrh	equ	0xFF7
  2208                           tblptrl	equ	0xFF6
  2209                           tablat	equ	0xFF5
  2210                           prodh	equ	0xFF4
  2211                           prodl	equ	0xFF3
  2212                           intcon	equ	0xFF2
  2213                           postinc0	equ	0xFEE
  2214                           wreg	equ	0xFE8
  2215                           indf1	equ	0xFE7
  2216                           fsr1h	equ	0xFE2
  2217                           fsr1l	equ	0xFE1
  2218                           indf2	equ	0xFDF
  2219                           fsr2h	equ	0xFDA
  2220                           fsr2l	equ	0xFD9
  2221                           status	equ	0xFD8
  2222                           
  2223 ;; *************** function ___ftmul *****************
  2224 ;; Defined at:
  2225 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  2226 ;; Parameters:    Size  Location     Type
  2227 ;;  f1              3   35[COMRAM] float 
  2228 ;;  f2              3   38[COMRAM] float 
  2229 ;; Auto vars:     Size  Location     Type
  2230 ;;  f3_as_produc    3    1[BANK0 ] unsigned um
  2231 ;;  sign            1    5[BANK0 ] unsigned char 
  2232 ;;  cntr            1    4[BANK0 ] unsigned char 
  2233 ;;  exp             1    0[BANK0 ] unsigned char 
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  3   35[COMRAM] float 
  2236 ;; Registers used:
  2237 ;;		wreg, status,2, status,0, cstack
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2243 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2244 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2245 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2246 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2247 ;;Total ram usage:       15 bytes
  2248 ;; Hardware stack levels used:    1
  2249 ;; Hardware stack levels required when called:    4
  2250 ;; This function calls:
  2251 ;;		___ftpack
  2252 ;; This function is called by:
  2253 ;;		_Get_ADC6
  2254 ;;		_TM1640_Show_Decimal
  2255 ;; This function uses a non-reentrant model
  2256 ;;
  2257                           
  2258                           	psect	text15
  2259  001302                     __ptext15:
  2260                           	opt stack 0
  2261  001302                     ___ftmul:
  2262                           	opt stack 24
  2263                           
  2264                           ;incstack = 0
  2265  001302  C026  F02A         	movff	___ftmul@f1+2,??___ftmul
  2266  001306  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  2267  001308  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  2268  00130A  3425               	rlcf	___ftmul@f1+1,w,c
  2269  00130C  362A               	rlcf	??___ftmul& (0+255),f,c
  2270  00130E  E301               	bnc	u2731
  2271  001310  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  2272  001312                     u2731:
  2273  001312  502A               	movf	??___ftmul,w,c
  2274  001314  0100               	movlb	0	; () banked
  2275  001316  6F9B               	movwf	___ftmul@exp& (0+255),b
  2276  001318  0100               	movlb	0	; () banked
  2277  00131A  519B               	movf	___ftmul@exp& (0+255),w,b
  2278  00131C  A4D8               	btfss	status,2,c
  2279  00131E  D007               	goto	l2859
  2280                           
  2281                           ; BSR set to: 0
  2282  001320  0E00               	movlw	0
  2283  001322  6E24               	movwf	?___ftmul,c
  2284  001324  0E00               	movlw	0
  2285  001326  6E25               	movwf	?___ftmul+1,c
  2286  001328  0E00               	movlw	0
  2287  00132A  6E26               	movwf	?___ftmul+2,c
  2288                           
  2289                           ; BSR set to: 0
  2290  00132C  0012               	return	
  2291  00132E                     l2859:
  2292                           
  2293                           ; BSR set to: 0
  2294  00132E  C029  F02A         	movff	___ftmul@f2+2,??___ftmul
  2295  001332  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  2296  001334  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  2297  001336  3428               	rlcf	___ftmul@f2+1,w,c
  2298  001338  362A               	rlcf	??___ftmul& (0+255),f,c
  2299  00133A  E301               	bnc	u2751
  2300  00133C  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  2301  00133E                     u2751:
  2302  00133E  502A               	movf	??___ftmul,w,c
  2303  001340  0100               	movlb	0	; () banked
  2304  001342  6FA0               	movwf	___ftmul@sign& (0+255),b
  2305  001344  0100               	movlb	0	; () banked
  2306  001346  51A0               	movf	___ftmul@sign& (0+255),w,b
  2307  001348  A4D8               	btfss	status,2,c
  2308  00134A  D007               	goto	l2865
  2309                           
  2310                           ; BSR set to: 0
  2311  00134C  0E00               	movlw	0
  2312  00134E  6E24               	movwf	?___ftmul,c
  2313  001350  0E00               	movlw	0
  2314  001352  6E25               	movwf	?___ftmul+1,c
  2315  001354  0E00               	movlw	0
  2316  001356  6E26               	movwf	?___ftmul+2,c
  2317                           
  2318                           ; BSR set to: 0
  2319  001358  0012               	return	
  2320  00135A                     l2865:
  2321                           
  2322                           ; BSR set to: 0
  2323  00135A  0100               	movlb	0	; () banked
  2324  00135C  51A0               	movf	___ftmul@sign& (0+255),w,b
  2325  00135E  0F7B               	addlw	123
  2326  001360  0100               	movlb	0	; () banked
  2327  001362  279B               	addwf	___ftmul@exp& (0+255),f,b
  2328                           
  2329                           ; BSR set to: 0
  2330  001364  C026  F0A0         	movff	___ftmul@f1+2,___ftmul@sign
  2331  001368  5029               	movf	___ftmul@f2+2,w,c
  2332  00136A  0100               	movlb	0	; () banked
  2333  00136C  1BA0               	xorwf	___ftmul@sign& (0+255),f,b
  2334  00136E  0E80               	movlw	128
  2335  001370  0100               	movlb	0	; () banked
  2336  001372  17A0               	andwf	___ftmul@sign& (0+255),f,b
  2337                           
  2338                           ; BSR set to: 0
  2339  001374  8E25               	bsf	___ftmul@f1+1,7,c
  2340                           
  2341                           ; BSR set to: 0
  2342  001376  8E28               	bsf	___ftmul@f2+1,7,c
  2343                           
  2344                           ; BSR set to: 0
  2345  001378  0EFF               	movlw	255
  2346  00137A  1627               	andwf	___ftmul@f2,f,c
  2347  00137C  0EFF               	movlw	255
  2348  00137E  1628               	andwf	___ftmul@f2+1,f,c
  2349  001380  0E00               	movlw	0
  2350  001382  1629               	andwf	___ftmul@f2+2,f,c
  2351                           
  2352                           ; BSR set to: 0
  2353  001384  0E00               	movlw	0
  2354  001386  0100               	movlb	0	; () banked
  2355  001388  6F9C               	movwf	___ftmul@f3_as_product& (0+255),b
  2356  00138A  0E00               	movlw	0
  2357  00138C  0100               	movlb	0	; () banked
  2358  00138E  6F9D               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  2359  001390  0E00               	movlw	0
  2360  001392  0100               	movlb	0	; () banked
  2361  001394  6F9E               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  2362                           
  2363                           ; BSR set to: 0
  2364  001396  0E07               	movlw	7
  2365  001398  0100               	movlb	0	; () banked
  2366  00139A  6F9F               	movwf	___ftmul@cntr& (0+255),b
  2367  00139C  D000               	goto	l2879
  2368  00139E                     l2879:
  2369                           
  2370                           ; BSR set to: 0
  2371  00139E  A024               	btfss	___ftmul@f1,0,c
  2372  0013A0  D00A               	goto	l2883
  2373                           
  2374                           ; BSR set to: 0
  2375  0013A2  5027               	movf	___ftmul@f2,w,c
  2376  0013A4  0100               	movlb	0	; () banked
  2377  0013A6  279C               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2378  0013A8  5028               	movf	___ftmul@f2+1,w,c
  2379  0013AA  0100               	movlb	0	; () banked
  2380  0013AC  239D               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2381  0013AE  5029               	movf	___ftmul@f2+2,w,c
  2382  0013B0  0100               	movlb	0	; () banked
  2383  0013B2  239E               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2384  0013B4  D000               	goto	l2883
  2385  0013B6                     l2883:
  2386                           
  2387                           ; BSR set to: 0
  2388  0013B6  90D8               	bcf	status,0,c
  2389  0013B8  3226               	rrcf	___ftmul@f1+2,f,c
  2390  0013BA  3225               	rrcf	___ftmul@f1+1,f,c
  2391  0013BC  3224               	rrcf	___ftmul@f1,f,c
  2392  0013BE  90D8               	bcf	status,0,c
  2393  0013C0  3627               	rlcf	___ftmul@f2,f,c
  2394  0013C2  3628               	rlcf	___ftmul@f2+1,f,c
  2395  0013C4  3629               	rlcf	___ftmul@f2+2,f,c
  2396                           
  2397                           ; BSR set to: 0
  2398  0013C6  0100               	movlb	0	; () banked
  2399  0013C8  2F9F               	decfsz	___ftmul@cntr& (0+255),f,b
  2400  0013CA  D7E9               	goto	l2879
  2401  0013CC  D000               	goto	l2887
  2402  0013CE                     l2887:
  2403                           
  2404                           ; BSR set to: 0
  2405  0013CE  0E09               	movlw	9
  2406  0013D0  0100               	movlb	0	; () banked
  2407  0013D2  6F9F               	movwf	___ftmul@cntr& (0+255),b
  2408  0013D4  D000               	goto	l2889
  2409  0013D6                     l2889:
  2410                           
  2411                           ; BSR set to: 0
  2412  0013D6  A024               	btfss	___ftmul@f1,0,c
  2413  0013D8  D00A               	goto	l2893
  2414                           
  2415                           ; BSR set to: 0
  2416  0013DA  5027               	movf	___ftmul@f2,w,c
  2417  0013DC  0100               	movlb	0	; () banked
  2418  0013DE  279C               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2419  0013E0  5028               	movf	___ftmul@f2+1,w,c
  2420  0013E2  0100               	movlb	0	; () banked
  2421  0013E4  239D               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2422  0013E6  5029               	movf	___ftmul@f2+2,w,c
  2423  0013E8  0100               	movlb	0	; () banked
  2424  0013EA  239E               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2425  0013EC  D000               	goto	l2893
  2426  0013EE                     l2893:
  2427                           
  2428                           ; BSR set to: 0
  2429  0013EE  90D8               	bcf	status,0,c
  2430  0013F0  3226               	rrcf	___ftmul@f1+2,f,c
  2431  0013F2  3225               	rrcf	___ftmul@f1+1,f,c
  2432  0013F4  3224               	rrcf	___ftmul@f1,f,c
  2433  0013F6  0100               	movlb	0	; () banked
  2434  0013F8  90D8               	bcf	status,0,c
  2435  0013FA  339E               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  2436  0013FC  339D               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  2437  0013FE  339C               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  2438                           
  2439                           ; BSR set to: 0
  2440  001400  0100               	movlb	0	; () banked
  2441  001402  2F9F               	decfsz	___ftmul@cntr& (0+255),f,b
  2442  001404  D7E8               	goto	l2889
  2443  001406  D000               	goto	l2897
  2444  001408                     l2897:
  2445                           
  2446                           ; BSR set to: 0
  2447  001408  C09C  F019         	movff	___ftmul@f3_as_product,___ftpack@arg
  2448  00140C  C09D  F01A         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2449  001410  C09E  F01B         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2450  001414  C09B  F01C         	movff	___ftmul@exp,___ftpack@exp
  2451  001418  C0A0  F01D         	movff	___ftmul@sign,___ftpack@sign
  2452  00141C  EC30  F00B         	call	___ftpack	;wreg free
  2453  001420  C019  F024         	movff	?___ftpack,?___ftmul
  2454  001424  C01A  F025         	movff	?___ftpack+1,?___ftmul+1
  2455  001428  C01B  F026         	movff	?___ftpack+2,?___ftmul+2
  2456  00142C  0012               	return	
  2457  00142E  0012               	return		;funcret
  2458  001430                     __end_of___ftmul:
  2459                           	opt stack 0
  2460                           tblptru	equ	0xFF8
  2461                           tblptrh	equ	0xFF7
  2462                           tblptrl	equ	0xFF6
  2463                           tablat	equ	0xFF5
  2464                           prodh	equ	0xFF4
  2465                           prodl	equ	0xFF3
  2466                           intcon	equ	0xFF2
  2467                           postinc0	equ	0xFEE
  2468                           wreg	equ	0xFE8
  2469                           indf1	equ	0xFE7
  2470                           fsr1h	equ	0xFE2
  2471                           fsr1l	equ	0xFE1
  2472                           indf2	equ	0xFDF
  2473                           fsr2h	equ	0xFDA
  2474                           fsr2l	equ	0xFD9
  2475                           status	equ	0xFD8
  2476                           
  2477 ;; *************** function ___ftdiv *****************
  2478 ;; Defined at:
  2479 ;;		line 54 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;  f1              3    6[BANK0 ] float 
  2482 ;;  f2              3    9[BANK0 ] float 
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;  f3              3   16[BANK0 ] float 
  2485 ;;  sign            1   20[BANK0 ] unsigned char 
  2486 ;;  exp             1   19[BANK0 ] unsigned char 
  2487 ;;  cntr            1   15[BANK0 ] unsigned char 
  2488 ;; Return value:  Size  Location     Type
  2489 ;;                  3    6[BANK0 ] float 
  2490 ;; Registers used:
  2491 ;;		wreg, status,2, status,0, cstack
  2492 ;; Tracked objects:
  2493 ;;		On entry : 0/0
  2494 ;;		On exit  : 0/0
  2495 ;;		Unchanged: 0/0
  2496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2497 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2498 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2499 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2500 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2501 ;;Total ram usage:       15 bytes
  2502 ;; Hardware stack levels used:    1
  2503 ;; Hardware stack levels required when called:    4
  2504 ;; This function calls:
  2505 ;;		___ftpack
  2506 ;; This function is called by:
  2507 ;;		_Get_ADC6
  2508 ;;		_TM1640_Show_Decimal
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512                           	psect	text16
  2513  0011B0                     __ptext16:
  2514                           	opt stack 0
  2515  0011B0                     ___ftdiv:
  2516                           	opt stack 24
  2517                           
  2518                           ;incstack = 0
  2519  0011B0  C0A3  F0A7         	movff	___ftdiv@f1+2,??___ftdiv
  2520  0011B4  0100               	movlb	0	; () banked
  2521  0011B6  6BA8               	clrf	(??___ftdiv+1)& (0+255),b
  2522  0011B8  6BA9               	clrf	(??___ftdiv+2)& (0+255),b
  2523  0011BA  0100               	movlb	0	; () banked
  2524  0011BC  35A2               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  2525  0011BE  0100               	movlb	0	; () banked
  2526  0011C0  37A7               	rlcf	??___ftdiv& (0+255),f,b
  2527  0011C2  E301               	bnc	u2681
  2528  0011C4  81A8               	bsf	(??___ftdiv+1)& (0+255),0,b
  2529  0011C6                     u2681:
  2530  0011C6  0100               	movlb	0	; () banked
  2531  0011C8  51A7               	movf	??___ftdiv& (0+255),w,b
  2532  0011CA  0100               	movlb	0	; () banked
  2533  0011CC  6FAE               	movwf	___ftdiv@exp& (0+255),b
  2534  0011CE  0100               	movlb	0	; () banked
  2535  0011D0  51AE               	movf	___ftdiv@exp& (0+255),w,b
  2536  0011D2  A4D8               	btfss	status,2,c
  2537  0011D4  D00A               	goto	l2813
  2538                           
  2539                           ; BSR set to: 0
  2540  0011D6  0E00               	movlw	0
  2541  0011D8  0100               	movlb	0	; () banked
  2542  0011DA  6FA1               	movwf	?___ftdiv& (0+255),b
  2543  0011DC  0E00               	movlw	0
  2544  0011DE  0100               	movlb	0	; () banked
  2545  0011E0  6FA2               	movwf	(?___ftdiv+1)& (0+255),b
  2546  0011E2  0E00               	movlw	0
  2547  0011E4  0100               	movlb	0	; () banked
  2548  0011E6  6FA3               	movwf	(?___ftdiv+2)& (0+255),b
  2549                           
  2550                           ; BSR set to: 0
  2551  0011E8  0012               	return	
  2552  0011EA                     l2813:
  2553                           
  2554                           ; BSR set to: 0
  2555  0011EA  C0A6  F0A7         	movff	___ftdiv@f2+2,??___ftdiv
  2556  0011EE  0100               	movlb	0	; () banked
  2557  0011F0  6BA8               	clrf	(??___ftdiv+1)& (0+255),b
  2558  0011F2  6BA9               	clrf	(??___ftdiv+2)& (0+255),b
  2559  0011F4  0100               	movlb	0	; () banked
  2560  0011F6  35A5               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  2561  0011F8  0100               	movlb	0	; () banked
  2562  0011FA  37A7               	rlcf	??___ftdiv& (0+255),f,b
  2563  0011FC  E301               	bnc	u2701
  2564  0011FE  81A8               	bsf	(??___ftdiv+1)& (0+255),0,b
  2565  001200                     u2701:
  2566  001200  0100               	movlb	0	; () banked
  2567  001202  51A7               	movf	??___ftdiv& (0+255),w,b
  2568  001204  0100               	movlb	0	; () banked
  2569  001206  6FAF               	movwf	___ftdiv@sign& (0+255),b
  2570  001208  0100               	movlb	0	; () banked
  2571  00120A  51AF               	movf	___ftdiv@sign& (0+255),w,b
  2572  00120C  A4D8               	btfss	status,2,c
  2573  00120E  D00A               	goto	l2819
  2574                           
  2575                           ; BSR set to: 0
  2576  001210  0E00               	movlw	0
  2577  001212  0100               	movlb	0	; () banked
  2578  001214  6FA1               	movwf	?___ftdiv& (0+255),b
  2579  001216  0E00               	movlw	0
  2580  001218  0100               	movlb	0	; () banked
  2581  00121A  6FA2               	movwf	(?___ftdiv+1)& (0+255),b
  2582  00121C  0E00               	movlw	0
  2583  00121E  0100               	movlb	0	; () banked
  2584  001220  6FA3               	movwf	(?___ftdiv+2)& (0+255),b
  2585                           
  2586                           ; BSR set to: 0
  2587  001222  0012               	return	
  2588  001224                     l2819:
  2589                           
  2590                           ; BSR set to: 0
  2591  001224  0E00               	movlw	0
  2592  001226  0100               	movlb	0	; () banked
  2593  001228  6FAB               	movwf	___ftdiv@f3& (0+255),b
  2594  00122A  0E00               	movlw	0
  2595  00122C  0100               	movlb	0	; () banked
  2596  00122E  6FAC               	movwf	(___ftdiv@f3+1)& (0+255),b
  2597  001230  0E00               	movlw	0
  2598  001232  0100               	movlb	0	; () banked
  2599  001234  6FAD               	movwf	(___ftdiv@f3+2)& (0+255),b
  2600                           
  2601                           ; BSR set to: 0
  2602  001236  0100               	movlb	0	; () banked
  2603  001238  51AF               	movf	___ftdiv@sign& (0+255),w,b
  2604  00123A  0F89               	addlw	137
  2605  00123C  0100               	movlb	0	; () banked
  2606  00123E  5FAE               	subwf	___ftdiv@exp& (0+255),f,b
  2607                           
  2608                           ; BSR set to: 0
  2609  001240  C0A3  F0AF         	movff	___ftdiv@f1+2,___ftdiv@sign
  2610                           
  2611                           ; BSR set to: 0
  2612  001244  0100               	movlb	0	; () banked
  2613  001246  51A6               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2614  001248  0100               	movlb	0	; () banked
  2615  00124A  1BAF               	xorwf	___ftdiv@sign& (0+255),f,b
  2616                           
  2617                           ; BSR set to: 0
  2618  00124C  0E80               	movlw	128
  2619  00124E  0100               	movlb	0	; () banked
  2620  001250  17AF               	andwf	___ftdiv@sign& (0+255),f,b
  2621                           
  2622                           ; BSR set to: 0
  2623  001252  0100               	movlb	0	; () banked
  2624  001254  8FA2               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  2625                           
  2626                           ; BSR set to: 0
  2627  001256  0EFF               	movlw	255
  2628  001258  0100               	movlb	0	; () banked
  2629  00125A  17A1               	andwf	___ftdiv@f1& (0+255),f,b
  2630  00125C  0EFF               	movlw	255
  2631  00125E  0100               	movlb	0	; () banked
  2632  001260  17A2               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  2633  001262  0E00               	movlw	0
  2634  001264  0100               	movlb	0	; () banked
  2635  001266  17A3               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  2636                           
  2637                           ; BSR set to: 0
  2638  001268  0100               	movlb	0	; () banked
  2639  00126A  8FA5               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  2640                           
  2641                           ; BSR set to: 0
  2642  00126C  0EFF               	movlw	255
  2643  00126E  0100               	movlb	0	; () banked
  2644  001270  17A4               	andwf	___ftdiv@f2& (0+255),f,b
  2645  001272  0EFF               	movlw	255
  2646  001274  0100               	movlb	0	; () banked
  2647  001276  17A5               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  2648  001278  0E00               	movlw	0
  2649  00127A  0100               	movlb	0	; () banked
  2650  00127C  17A6               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  2651                           
  2652                           ; BSR set to: 0
  2653  00127E  0E18               	movlw	24
  2654  001280  0100               	movlb	0	; () banked
  2655  001282  6FAA               	movwf	___ftdiv@cntr& (0+255),b
  2656  001284  D000               	goto	l2839
  2657  001286                     l2839:
  2658                           
  2659                           ; BSR set to: 0
  2660  001286  0100               	movlb	0	; () banked
  2661  001288  90D8               	bcf	status,0,c
  2662  00128A  37AB               	rlcf	___ftdiv@f3& (0+255),f,b
  2663  00128C  37AC               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  2664  00128E  37AD               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  2665                           
  2666                           ; BSR set to: 0
  2667  001290  0100               	movlb	0	; () banked
  2668  001292  51A4               	movf	___ftdiv@f2& (0+255),w,b
  2669  001294  0100               	movlb	0	; () banked
  2670  001296  5DA1               	subwf	___ftdiv@f1& (0+255),w,b
  2671  001298  0100               	movlb	0	; () banked
  2672  00129A  51A5               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2673  00129C  0100               	movlb	0	; () banked
  2674  00129E  59A2               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  2675  0012A0  0100               	movlb	0	; () banked
  2676  0012A2  51A6               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2677  0012A4  0100               	movlb	0	; () banked
  2678  0012A6  59A3               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  2679  0012A8  A0D8               	btfss	status,0,c
  2680  0012AA  D00E               	goto	l867
  2681                           
  2682                           ; BSR set to: 0
  2683  0012AC  0100               	movlb	0	; () banked
  2684  0012AE  51A4               	movf	___ftdiv@f2& (0+255),w,b
  2685  0012B0  0100               	movlb	0	; () banked
  2686  0012B2  5FA1               	subwf	___ftdiv@f1& (0+255),f,b
  2687  0012B4  0100               	movlb	0	; () banked
  2688  0012B6  51A5               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2689  0012B8  0100               	movlb	0	; () banked
  2690  0012BA  5BA2               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  2691  0012BC  0100               	movlb	0	; () banked
  2692  0012BE  51A6               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2693  0012C0  0100               	movlb	0	; () banked
  2694  0012C2  5BA3               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  2695                           
  2696                           ; BSR set to: 0
  2697  0012C4  0100               	movlb	0	; () banked
  2698  0012C6  81AB               	bsf	___ftdiv@f3& (0+255),0,b
  2699  0012C8                     l867:
  2700                           
  2701                           ; BSR set to: 0
  2702  0012C8  0100               	movlb	0	; () banked
  2703  0012CA  90D8               	bcf	status,0,c
  2704  0012CC  37A1               	rlcf	___ftdiv@f1& (0+255),f,b
  2705  0012CE  37A2               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  2706  0012D0  37A3               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  2707                           
  2708                           ; BSR set to: 0
  2709  0012D2  0100               	movlb	0	; () banked
  2710  0012D4  2FAA               	decfsz	___ftdiv@cntr& (0+255),f,b
  2711  0012D6  D7D7               	goto	l2839
  2712  0012D8  D000               	goto	l2849
  2713  0012DA                     l2849:
  2714                           
  2715                           ; BSR set to: 0
  2716  0012DA  C0AB  F019         	movff	___ftdiv@f3,___ftpack@arg
  2717  0012DE  C0AC  F01A         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2718  0012E2  C0AD  F01B         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2719  0012E6  C0AE  F01C         	movff	___ftdiv@exp,___ftpack@exp
  2720  0012EA  C0AF  F01D         	movff	___ftdiv@sign,___ftpack@sign
  2721  0012EE  EC30  F00B         	call	___ftpack	;wreg free
  2722  0012F2  C019  F0A1         	movff	?___ftpack,?___ftdiv
  2723  0012F6  C01A  F0A2         	movff	?___ftpack+1,?___ftdiv+1
  2724  0012FA  C01B  F0A3         	movff	?___ftpack+2,?___ftdiv+2
  2725  0012FE  0012               	return	
  2726  001300  0012               	return		;funcret
  2727  001302                     __end_of___ftdiv:
  2728                           	opt stack 0
  2729                           tblptru	equ	0xFF8
  2730                           tblptrh	equ	0xFF7
  2731                           tblptrl	equ	0xFF6
  2732                           tablat	equ	0xFF5
  2733                           prodh	equ	0xFF4
  2734                           prodl	equ	0xFF3
  2735                           intcon	equ	0xFF2
  2736                           postinc0	equ	0xFEE
  2737                           wreg	equ	0xFE8
  2738                           indf1	equ	0xFE7
  2739                           fsr1h	equ	0xFE2
  2740                           fsr1l	equ	0xFE1
  2741                           indf2	equ	0xFDF
  2742                           fsr2h	equ	0xFDA
  2743                           fsr2l	equ	0xFD9
  2744                           status	equ	0xFD8
  2745                           
  2746 ;; *************** function ___ftpack *****************
  2747 ;; Defined at:
  2748 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;  arg             3   24[COMRAM] unsigned um
  2751 ;;  exp             1   27[COMRAM] unsigned char 
  2752 ;;  sign            1   28[COMRAM] unsigned char 
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;		None
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  3   24[COMRAM] float 
  2757 ;; Registers used:
  2758 ;;		wreg, status,2, status,0
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2764 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2766 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2767 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2768 ;;Total ram usage:        8 bytes
  2769 ;; Hardware stack levels used:    1
  2770 ;; Hardware stack levels required when called:    3
  2771 ;; This function calls:
  2772 ;;		Nothing
  2773 ;; This function is called by:
  2774 ;;		___ftdiv
  2775 ;;		___ftmul
  2776 ;;		___lwtoft
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           
  2780                           	psect	text17
  2781  001660                     __ptext17:
  2782                           	opt stack 0
  2783  001660                     ___ftpack:
  2784                           	opt stack 24
  2785                           
  2786                           ;incstack = 0
  2787  001660  501C               	movf	___ftpack@exp,w,c
  2788  001662  B4D8               	btfsc	status,2,c
  2789  001664  D005               	goto	l2749
  2790  001666  5019               	movf	___ftpack@arg,w,c
  2791  001668  101A               	iorwf	___ftpack@arg+1,w,c
  2792  00166A  101B               	iorwf	___ftpack@arg+2,w,c
  2793  00166C  A4D8               	btfss	status,2,c
  2794  00166E  D00E               	goto	l2755
  2795  001670                     l2749:
  2796  001670  0E00               	movlw	0
  2797  001672  6E19               	movwf	?___ftpack,c
  2798  001674  0E00               	movlw	0
  2799  001676  6E1A               	movwf	?___ftpack+1,c
  2800  001678  0E00               	movlw	0
  2801  00167A  6E1B               	movwf	?___ftpack+2,c
  2802  00167C  0012               	return	
  2803  00167E  D006               	goto	l2755
  2804  001680                     l2753:
  2805  001680  2A1C               	incf	___ftpack@exp,f,c
  2806  001682  90D8               	bcf	status,0,c
  2807  001684  321B               	rrcf	___ftpack@arg+2,f,c
  2808  001686  321A               	rrcf	___ftpack@arg+1,f,c
  2809  001688  3219               	rrcf	___ftpack@arg,f,c
  2810  00168A  D000               	goto	l2755
  2811  00168C                     l2755:
  2812  00168C  0E00               	movlw	0
  2813  00168E  1419               	andwf	___ftpack@arg,w,c
  2814  001690  6E1E               	movwf	??___ftpack& (0+255),c
  2815  001692  0E00               	movlw	0
  2816  001694  141A               	andwf	___ftpack@arg+1,w,c
  2817  001696  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  2818  001698  0EFE               	movlw	254
  2819  00169A  141B               	andwf	___ftpack@arg+2,w,c
  2820  00169C  6E20               	movwf	(??___ftpack+2)& (0+255),c
  2821  00169E  501E               	movf	??___ftpack,w,c
  2822  0016A0  101F               	iorwf	??___ftpack+1,w,c
  2823  0016A2  1020               	iorwf	??___ftpack+2,w,c
  2824  0016A4  B4D8               	btfsc	status,2,c
  2825  0016A6  D00E               	goto	l2761
  2826  0016A8  D7EB               	goto	l2753
  2827  0016AA  D00C               	goto	l2761
  2828  0016AC                     l2757:
  2829  0016AC  2A1C               	incf	___ftpack@exp,f,c
  2830  0016AE  0E01               	movlw	1
  2831  0016B0  2619               	addwf	___ftpack@arg,f,c
  2832  0016B2  0E00               	movlw	0
  2833  0016B4  221A               	addwfc	___ftpack@arg+1,f,c
  2834  0016B6  0E00               	movlw	0
  2835  0016B8  221B               	addwfc	___ftpack@arg+2,f,c
  2836  0016BA  90D8               	bcf	status,0,c
  2837  0016BC  321B               	rrcf	___ftpack@arg+2,f,c
  2838  0016BE  321A               	rrcf	___ftpack@arg+1,f,c
  2839  0016C0  3219               	rrcf	___ftpack@arg,f,c
  2840  0016C2  D000               	goto	l2761
  2841  0016C4                     l2761:
  2842  0016C4  0E00               	movlw	0
  2843  0016C6  1419               	andwf	___ftpack@arg,w,c
  2844  0016C8  6E1E               	movwf	??___ftpack& (0+255),c
  2845  0016CA  0E00               	movlw	0
  2846  0016CC  141A               	andwf	___ftpack@arg+1,w,c
  2847  0016CE  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  2848  0016D0  0EFF               	movlw	255
  2849  0016D2  141B               	andwf	___ftpack@arg+2,w,c
  2850  0016D4  6E20               	movwf	(??___ftpack+2)& (0+255),c
  2851  0016D6  501E               	movf	??___ftpack,w,c
  2852  0016D8  101F               	iorwf	??___ftpack+1,w,c
  2853  0016DA  1020               	iorwf	??___ftpack+2,w,c
  2854  0016DC  B4D8               	btfsc	status,2,c
  2855  0016DE  D008               	goto	l2765
  2856  0016E0  D7E5               	goto	l2757
  2857  0016E2  D006               	goto	l2765
  2858  0016E4                     l2763:
  2859  0016E4  061C               	decf	___ftpack@exp,f,c
  2860  0016E6  90D8               	bcf	status,0,c
  2861  0016E8  3619               	rlcf	___ftpack@arg,f,c
  2862  0016EA  361A               	rlcf	___ftpack@arg+1,f,c
  2863  0016EC  361B               	rlcf	___ftpack@arg+2,f,c
  2864  0016EE  D000               	goto	l2765
  2865  0016F0                     l2765:
  2866  0016F0  BE1A               	btfsc	___ftpack@arg+1,7,c
  2867  0016F2  D004               	goto	l803
  2868  0016F4  0E02               	movlw	2
  2869  0016F6  601C               	cpfslt	___ftpack@exp,c
  2870  0016F8  D7F5               	goto	l2763
  2871  0016FA  D000               	goto	l803
  2872  0016FC                     l803:
  2873  0016FC  B01C               	btfsc	___ftpack@exp,0,c
  2874  0016FE  D002               	goto	l2771
  2875  001700  9E1A               	bcf	___ftpack@arg+1,7,c
  2876  001702  D000               	goto	l2771
  2877  001704                     l2771:
  2878  001704  90D8               	bcf	status,0,c
  2879  001706  321C               	rrcf	___ftpack@exp,f,c
  2880  001708  501C               	movf	___ftpack@exp,w,c
  2881  00170A  121B               	iorwf	___ftpack@arg+2,f,c
  2882  00170C  501D               	movf	___ftpack@sign,w,c
  2883  00170E  B4D8               	btfsc	status,2,c
  2884  001710  D002               	goto	l2777
  2885  001712  8E1B               	bsf	___ftpack@arg+2,7,c
  2886  001714  D000               	goto	l2777
  2887  001716                     l2777:
  2888  001716  C019  F019         	movff	___ftpack@arg,?___ftpack
  2889  00171A  C01A  F01A         	movff	___ftpack@arg+1,?___ftpack+1
  2890  00171E  C01B  F01B         	movff	___ftpack@arg+2,?___ftpack+2
  2891  001722  0012               	return	
  2892  001724  0012               	return		;funcret
  2893  001726                     __end_of___ftpack:
  2894                           	opt stack 0
  2895                           tblptru	equ	0xFF8
  2896                           tblptrh	equ	0xFF7
  2897                           tblptrl	equ	0xFF6
  2898                           tablat	equ	0xFF5
  2899                           prodh	equ	0xFF4
  2900                           prodl	equ	0xFF3
  2901                           intcon	equ	0xFF2
  2902                           postinc0	equ	0xFEE
  2903                           wreg	equ	0xFE8
  2904                           indf1	equ	0xFE7
  2905                           fsr1h	equ	0xFE2
  2906                           fsr1l	equ	0xFE1
  2907                           indf2	equ	0xFDF
  2908                           fsr2h	equ	0xFDA
  2909                           fsr2l	equ	0xFD9
  2910                           status	equ	0xFD8
  2911                           
  2912 ;; *************** function _ReadADC *****************
  2913 ;; Defined at:
  2914 ;;		line 24 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;		None
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;		None
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  2   24[COMRAM] int 
  2921 ;; Registers used:
  2922 ;;		wreg, status,2
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2928 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2930 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2931 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2932 ;;Total ram usage:        4 bytes
  2933 ;; Hardware stack levels used:    1
  2934 ;; Hardware stack levels required when called:    3
  2935 ;; This function calls:
  2936 ;;		Nothing
  2937 ;; This function is called by:
  2938 ;;		_Get_ADC6
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942                           	psect	text18
  2943  001F5A                     __ptext18:
  2944                           	opt stack 0
  2945  001F5A                     _ReadADC:
  2946                           	opt stack 25
  2947                           
  2948                           ;incstack = 0
  2949  001F5A  50C4               	movf	4036,w,c	;volatile
  2950  001F5C  6E1B               	movwf	??_ReadADC& (0+255),c
  2951  001F5E  50C3               	movf	4035,w,c	;volatile
  2952  001F60  6E19               	movwf	?_ReadADC,c
  2953  001F62  C01B  F01A         	movff	??_ReadADC,?_ReadADC+1
  2954  001F66  0012               	return	
  2955  001F68  0012               	return		;funcret
  2956  001F6A                     __end_of_ReadADC:
  2957                           	opt stack 0
  2958                           tblptru	equ	0xFF8
  2959                           tblptrh	equ	0xFF7
  2960                           tblptrl	equ	0xFF6
  2961                           tablat	equ	0xFF5
  2962                           prodh	equ	0xFF4
  2963                           prodl	equ	0xFF3
  2964                           intcon	equ	0xFF2
  2965                           postinc0	equ	0xFEE
  2966                           wreg	equ	0xFE8
  2967                           indf1	equ	0xFE7
  2968                           fsr1h	equ	0xFE2
  2969                           fsr1l	equ	0xFE1
  2970                           indf2	equ	0xFDF
  2971                           fsr2h	equ	0xFDA
  2972                           fsr2l	equ	0xFD9
  2973                           status	equ	0xFD8
  2974                           
  2975 ;; *************** function _ConvertADC *****************
  2976 ;; Defined at:
  2977 ;;		line 22 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;		None
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;		None
  2982 ;; Return value:  Size  Location     Type
  2983 ;;		None               void
  2984 ;; Registers used:
  2985 ;;		None
  2986 ;; Tracked objects:
  2987 ;;		On entry : 0/0
  2988 ;;		On exit  : 0/0
  2989 ;;		Unchanged: 0/0
  2990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2995 ;;Total ram usage:        0 bytes
  2996 ;; Hardware stack levels used:    1
  2997 ;; Hardware stack levels required when called:    3
  2998 ;; This function calls:
  2999 ;;		Nothing
  3000 ;; This function is called by:
  3001 ;;		_Get_ADC6
  3002 ;; This function uses a non-reentrant model
  3003 ;;
  3004                           
  3005                           	psect	text19
  3006  001F8E                     __ptext19:
  3007                           	opt stack 0
  3008  001F8E                     _ConvertADC:
  3009                           	opt stack 25
  3010                           
  3011                           ;incstack = 0
  3012  001F8E  82C2               	bsf	4034,1,c	;volatile
  3013  001F90  0012               	return		;funcret
  3014  001F92                     __end_of_ConvertADC:
  3015                           	opt stack 0
  3016                           tblptru	equ	0xFF8
  3017                           tblptrh	equ	0xFF7
  3018                           tblptrl	equ	0xFF6
  3019                           tablat	equ	0xFF5
  3020                           prodh	equ	0xFF4
  3021                           prodl	equ	0xFF3
  3022                           intcon	equ	0xFF2
  3023                           postinc0	equ	0xFEE
  3024                           wreg	equ	0xFE8
  3025                           indf1	equ	0xFE7
  3026                           fsr1h	equ	0xFE2
  3027                           fsr1l	equ	0xFE1
  3028                           indf2	equ	0xFDF
  3029                           fsr2h	equ	0xFDA
  3030                           fsr2l	equ	0xFD9
  3031                           status	equ	0xFD8
  3032                           
  3033 ;; *************** function _BusyADC *****************
  3034 ;; Defined at:
  3035 ;;		line 26 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  3036 ;; Parameters:    Size  Location     Type
  3037 ;;		None
  3038 ;; Auto vars:     Size  Location     Type
  3039 ;;		None
  3040 ;; Return value:  Size  Location     Type
  3041 ;;                  1    wreg      unsigned char 
  3042 ;; Registers used:
  3043 ;;		wreg
  3044 ;; Tracked objects:
  3045 ;;		On entry : 0/0
  3046 ;;		On exit  : 0/0
  3047 ;;		Unchanged: 0/0
  3048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3053 ;;Total ram usage:        0 bytes
  3054 ;; Hardware stack levels used:    1
  3055 ;; Hardware stack levels required when called:    3
  3056 ;; This function calls:
  3057 ;;		Nothing
  3058 ;; This function is called by:
  3059 ;;		_Get_ADC6
  3060 ;; This function uses a non-reentrant model
  3061 ;;
  3062                           
  3063                           	psect	text20
  3064  001F6A                     __ptext20:
  3065                           	opt stack 0
  3066  001F6A                     _BusyADC:
  3067                           	opt stack 25
  3068                           
  3069                           ;incstack = 0
  3070  001F6A  A2C2               	btfss	4034,1,c	;volatile
  3071  001F6C  D002               	goto	u2670
  3072  001F6E  0E01               	movlw	1
  3073  001F70  0012               	return	
  3074  001F72                     u2670:
  3075  001F72  0E00               	movlw	0
  3076  001F74  0012               	return	
  3077  001F76  0012               	return		;funcret
  3078  001F78                     __end_of_BusyADC:
  3079                           	opt stack 0
  3080                           tblptru	equ	0xFF8
  3081                           tblptrh	equ	0xFF7
  3082                           tblptrl	equ	0xFF6
  3083                           tablat	equ	0xFF5
  3084                           prodh	equ	0xFF4
  3085                           prodl	equ	0xFF3
  3086                           intcon	equ	0xFF2
  3087                           postinc0	equ	0xFEE
  3088                           wreg	equ	0xFE8
  3089                           indf1	equ	0xFE7
  3090                           fsr1h	equ	0xFE2
  3091                           fsr1l	equ	0xFE1
  3092                           indf2	equ	0xFDF
  3093                           fsr2h	equ	0xFDA
  3094                           fsr2l	equ	0xFD9
  3095                           status	equ	0xFD8
  3096                           
  3097 ;; *************** function _RS485_Init *****************
  3098 ;; Defined at:
  3099 ;;		line 45 in file "_01_USER/My_USART.c"
  3100 ;; Parameters:    Size  Location     Type
  3101 ;;		None
  3102 ;; Auto vars:     Size  Location     Type
  3103 ;;		None
  3104 ;; Return value:  Size  Location     Type
  3105 ;;		None               void
  3106 ;; Registers used:
  3107 ;;		wreg, status,2, status,0, cstack
  3108 ;; Tracked objects:
  3109 ;;		On entry : 0/0
  3110 ;;		On exit  : 0/0
  3111 ;;		Unchanged: 0/0
  3112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3117 ;;Total ram usage:        0 bytes
  3118 ;; Hardware stack levels used:    1
  3119 ;; Hardware stack levels required when called:    4
  3120 ;; This function calls:
  3121 ;;		_Open2USART
  3122 ;; This function is called by:
  3123 ;;		_main
  3124 ;; This function uses a non-reentrant model
  3125 ;;
  3126                           
  3127                           	psect	text21
  3128  001F10                     __ptext21:
  3129                           	opt stack 0
  3130  001F10                     _RS485_Init:
  3131                           	opt stack 26
  3132                           
  3133                           ;My_USART.c: 47: Open2USART( 0b01111111 &
  3134                           ;My_USART.c: 48: 0b11111111 &
  3135                           ;My_USART.c: 49: 0b11111110 &
  3136                           ;My_USART.c: 50: 0b11111101 &
  3137                           ;My_USART.c: 51: 0b11111111 &
  3138                           ;My_USART.c: 52: 0b11101111
  3139                           ;My_USART.c: 53: ,
  3140                           ;My_USART.c: 54: 12
  3141                           ;My_USART.c: 55: );
  3142                           
  3143                           ;incstack = 0
  3144  001F10  0E00               	movlw	0
  3145  001F12  6E1A               	movwf	Open2USART@spbrg+1,c
  3146  001F14  0E0C               	movlw	12
  3147  001F16  6E19               	movwf	Open2USART@spbrg,c
  3148  001F18  0E6C               	movlw	108
  3149  001F1A  EC32  F00C         	call	_Open2USART
  3150                           
  3151                           ;My_USART.c: 57: TRISGbits.TRISG1 = 1;
  3152  001F1E  8298               	bsf	3992,1,c	;volatile
  3153                           
  3154                           ;My_USART.c: 58: TRISGbits.TRISG2 = 0;
  3155  001F20  9498               	bcf	3992,2,c	;volatile
  3156                           
  3157                           ;My_USART.c: 59: TRISGbits.TRISG3 = 0;
  3158  001F22  9698               	bcf	3992,3,c	;volatile
  3159                           
  3160                           ;My_USART.c: 60: RG3 = 1;
  3161  001F24  8686               	bsf	3974,3,c	;volatile
  3162                           
  3163                           ;My_USART.c: 61: ANCON2 &= 0XF1;
  3164  001F26  0EF1               	movlw	241
  3165  001F28  010F               	movlb	15	; () banked
  3166  001F2A  1723               	andwf	35,f,b	;volatile
  3167                           
  3168                           ; BSR set to: 15
  3169  001F2C  0012               	return		;funcret
  3170  001F2E                     __end_of_RS485_Init:
  3171                           	opt stack 0
  3172                           tblptru	equ	0xFF8
  3173                           tblptrh	equ	0xFF7
  3174                           tblptrl	equ	0xFF6
  3175                           tablat	equ	0xFF5
  3176                           prodh	equ	0xFF4
  3177                           prodl	equ	0xFF3
  3178                           intcon	equ	0xFF2
  3179                           postinc0	equ	0xFEE
  3180                           wreg	equ	0xFE8
  3181                           indf1	equ	0xFE7
  3182                           fsr1h	equ	0xFE2
  3183                           fsr1l	equ	0xFE1
  3184                           indf2	equ	0xFDF
  3185                           fsr2h	equ	0xFDA
  3186                           fsr2l	equ	0xFD9
  3187                           status	equ	0xFD8
  3188                           
  3189 ;; *************** function _Open2USART *****************
  3190 ;; Defined at:
  3191 ;;		line 118 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u2open.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;  config          1    wreg     unsigned char 
  3194 ;;  spbrg           2   24[COMRAM] unsigned int 
  3195 ;; Auto vars:     Size  Location     Type
  3196 ;;  config          1   26[COMRAM] unsigned char 
  3197 ;; Return value:  Size  Location     Type
  3198 ;;		None               void
  3199 ;; Registers used:
  3200 ;;		wreg, status,2
  3201 ;; Tracked objects:
  3202 ;;		On entry : 0/0
  3203 ;;		On exit  : 0/0
  3204 ;;		Unchanged: 0/0
  3205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3206 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3207 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3209 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3210 ;;Total ram usage:        3 bytes
  3211 ;; Hardware stack levels used:    1
  3212 ;; Hardware stack levels required when called:    3
  3213 ;; This function calls:
  3214 ;;		Nothing
  3215 ;; This function is called by:
  3216 ;;		_RS485_Init
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220                           	psect	text22
  3221  001864                     __ptext22:
  3222                           	opt stack 0
  3223  001864                     _Open2USART:
  3224                           	opt stack 26
  3225                           
  3226                           ; BSR set to: 15
  3227                           ;incstack = 0
  3228                           ;Open2USART@config stored from wreg
  3229  001864  6E1B               	movwf	Open2USART@config,c
  3230  001866  0E00               	movlw	0
  3231  001868  010F               	movlb	15	; () banked
  3232  00186A  6F21               	movwf	33,b	;volatile
  3233  00186C  0E00               	movlw	0
  3234  00186E  010F               	movlb	15	; () banked
  3235  001870  6F22               	movwf	34,b	;volatile
  3236                           
  3237                           ; BSR set to: 15
  3238  001872  A01B               	btfss	Open2USART@config,0,c
  3239  001874  D003               	goto	l2949
  3240                           
  3241                           ; BSR set to: 15
  3242  001876  010F               	movlb	15	; () banked
  3243  001878  8921               	bsf	33,4,b	;volatile
  3244  00187A  D000               	goto	l2949
  3245  00187C                     l2949:
  3246                           
  3247                           ; BSR set to: 15
  3248  00187C  A21B               	btfss	Open2USART@config,1,c
  3249  00187E  D005               	goto	l2953
  3250                           
  3251                           ; BSR set to: 15
  3252  001880  010F               	movlb	15	; () banked
  3253  001882  8D21               	bsf	33,6,b	;volatile
  3254  001884  010F               	movlb	15	; () banked
  3255  001886  8D22               	bsf	34,6,b	;volatile
  3256  001888  D000               	goto	l2953
  3257  00188A                     l2953:
  3258                           
  3259                           ; BSR set to: 15
  3260  00188A  A41B               	btfss	Open2USART@config,2,c
  3261  00188C  D003               	goto	l2957
  3262                           
  3263                           ; BSR set to: 15
  3264  00188E  010F               	movlb	15	; () banked
  3265  001890  8F21               	bsf	33,7,b	;volatile
  3266  001892  D000               	goto	l2957
  3267  001894                     l2957:
  3268                           
  3269                           ; BSR set to: 15
  3270  001894  A61B               	btfss	Open2USART@config,3,c
  3271  001896  D003               	goto	l472
  3272                           
  3273                           ; BSR set to: 15
  3274  001898  010F               	movlb	15	; () banked
  3275  00189A  8922               	bsf	34,4,b	;volatile
  3276  00189C  D003               	goto	l2961
  3277  00189E                     l472:
  3278                           
  3279                           ; BSR set to: 15
  3280  00189E  010F               	movlb	15	; () banked
  3281  0018A0  8B22               	bsf	34,5,b	;volatile
  3282  0018A2  D000               	goto	l2961
  3283  0018A4                     l2961:
  3284                           
  3285                           ; BSR set to: 15
  3286  0018A4  A81B               	btfss	Open2USART@config,4,c
  3287  0018A6  D003               	goto	l474
  3288                           
  3289                           ; BSR set to: 15
  3290  0018A8  010F               	movlb	15	; () banked
  3291  0018AA  8521               	bsf	33,2,b	;volatile
  3292  0018AC  D003               	goto	l2965
  3293  0018AE                     l474:
  3294                           
  3295                           ; BSR set to: 15
  3296  0018AE  010F               	movlb	15	; () banked
  3297  0018B0  9521               	bcf	33,2,b	;volatile
  3298  0018B2  D000               	goto	l2965
  3299  0018B4                     l2965:
  3300                           
  3301                           ; BSR set to: 15
  3302  0018B4  AA1B               	btfss	Open2USART@config,5,c
  3303  0018B6  D003               	goto	l2969
  3304                           
  3305                           ; BSR set to: 15
  3306  0018B8  010F               	movlb	15	; () banked
  3307  0018BA  8722               	bsf	34,3,b	;volatile
  3308  0018BC  D000               	goto	l2969
  3309  0018BE                     l2969:
  3310                           
  3311                           ; BSR set to: 15
  3312  0018BE  AC1B               	btfss	Open2USART@config,6,c
  3313  0018C0  D002               	goto	l477
  3314                           
  3315                           ; BSR set to: 15
  3316  0018C2  8AA3               	bsf	4003,5,c	;volatile
  3317  0018C4  D002               	goto	l2973
  3318  0018C6                     l477:
  3319                           
  3320                           ; BSR set to: 15
  3321  0018C6  9AA3               	bcf	4003,5,c	;volatile
  3322  0018C8  D000               	goto	l2973
  3323  0018CA                     l2973:
  3324                           
  3325                           ; BSR set to: 15
  3326  0018CA  AE1B               	btfss	Open2USART@config,7,c
  3327  0018CC  D002               	goto	l479
  3328                           
  3329                           ; BSR set to: 15
  3330  0018CE  88A3               	bsf	4003,4,c	;volatile
  3331  0018D0  D001               	goto	l480
  3332  0018D2                     l479:
  3333                           
  3334                           ; BSR set to: 15
  3335  0018D2  98A3               	bcf	4003,4,c	;volatile
  3336  0018D4                     l480:
  3337                           
  3338                           ; BSR set to: 15
  3339  0018D4  C019  FF1E         	movff	Open2USART@spbrg,3870	;volatile
  3340                           
  3341                           ; BSR set to: 15
  3342  0018D8  501A               	movf	Open2USART@spbrg+1,w,c
  3343  0018DA  010F               	movlb	15	; () banked
  3344  0018DC  6F1F               	movwf	31,b	;volatile
  3345                           
  3346                           ; BSR set to: 15
  3347  0018DE  010F               	movlb	15	; () banked
  3348  0018E0  8B21               	bsf	33,5,b	;volatile
  3349                           
  3350                           ; BSR set to: 15
  3351  0018E2  010F               	movlb	15	; () banked
  3352  0018E4  8F22               	bsf	34,7,b	;volatile
  3353                           
  3354                           ; BSR set to: 15
  3355  0018E6  0012               	return		;funcret
  3356  0018E8                     __end_of_Open2USART:
  3357                           	opt stack 0
  3358                           tblptru	equ	0xFF8
  3359                           tblptrh	equ	0xFF7
  3360                           tblptrl	equ	0xFF6
  3361                           tablat	equ	0xFF5
  3362                           prodh	equ	0xFF4
  3363                           prodl	equ	0xFF3
  3364                           intcon	equ	0xFF2
  3365                           postinc0	equ	0xFEE
  3366                           wreg	equ	0xFE8
  3367                           indf1	equ	0xFE7
  3368                           fsr1h	equ	0xFE2
  3369                           fsr1l	equ	0xFE1
  3370                           indf2	equ	0xFDF
  3371                           fsr2h	equ	0xFDA
  3372                           fsr2l	equ	0xFD9
  3373                           status	equ	0xFD8
  3374                           
  3375 ;; *************** function _Key_Init *****************
  3376 ;; Defined at:
  3377 ;;		line 39 in file "_01_USER/Key.c"
  3378 ;; Parameters:    Size  Location     Type
  3379 ;;		None
  3380 ;; Auto vars:     Size  Location     Type
  3381 ;;		None
  3382 ;; Return value:  Size  Location     Type
  3383 ;;		None               void
  3384 ;; Registers used:
  3385 ;;		wreg, status,2, status,0
  3386 ;; Tracked objects:
  3387 ;;		On entry : 0/0
  3388 ;;		On exit  : 0/0
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3395 ;;Total ram usage:        0 bytes
  3396 ;; Hardware stack levels used:    1
  3397 ;; Hardware stack levels required when called:    3
  3398 ;; This function calls:
  3399 ;;		Nothing
  3400 ;; This function is called by:
  3401 ;;		_main
  3402 ;; This function uses a non-reentrant model
  3403 ;;
  3404                           
  3405                           	psect	text23
  3406  001F84                     __ptext23:
  3407                           	opt stack 0
  3408  001F84                     _Key_Init:
  3409                           	opt stack 27
  3410                           
  3411                           ;Key.c: 41: TRISE |= 0x1e;
  3412                           
  3413                           ; BSR set to: 15
  3414                           ;incstack = 0
  3415  001F84  0E1E               	movlw	30
  3416  001F86  1296               	iorwf	3990,f,c	;volatile
  3417                           
  3418                           ;Key.c: 42: TRISD |= 0xc0;
  3419  001F88  0EC0               	movlw	192
  3420  001F8A  1295               	iorwf	3989,f,c	;volatile
  3421  001F8C  0012               	return		;funcret
  3422  001F8E                     __end_of_Key_Init:
  3423                           	opt stack 0
  3424                           tblptru	equ	0xFF8
  3425                           tblptrh	equ	0xFF7
  3426                           tblptrl	equ	0xFF6
  3427                           tablat	equ	0xFF5
  3428                           prodh	equ	0xFF4
  3429                           prodl	equ	0xFF3
  3430                           intcon	equ	0xFF2
  3431                           postinc0	equ	0xFEE
  3432                           wreg	equ	0xFE8
  3433                           indf1	equ	0xFE7
  3434                           fsr1h	equ	0xFE2
  3435                           fsr1l	equ	0xFE1
  3436                           indf2	equ	0xFDF
  3437                           fsr2h	equ	0xFDA
  3438                           fsr2l	equ	0xFD9
  3439                           status	equ	0xFD8
  3440                           
  3441 ;; *************** function _Init_TM1640 *****************
  3442 ;; Defined at:
  3443 ;;		line 119 in file "_01_USER/TM1640.c"
  3444 ;; Parameters:    Size  Location     Type
  3445 ;;		None
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;		None
  3448 ;; Return value:  Size  Location     Type
  3449 ;;		None               void
  3450 ;; Registers used:
  3451 ;;		wreg, status,2, status,0, cstack
  3452 ;; Tracked objects:
  3453 ;;		On entry : 0/0
  3454 ;;		On exit  : 0/0
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3461 ;;Total ram usage:        0 bytes
  3462 ;; Hardware stack levels used:    1
  3463 ;; Hardware stack levels required when called:    5
  3464 ;; This function calls:
  3465 ;;		_TM1640_Start
  3466 ;;		_TM1640_Stop
  3467 ;;		_TM1640_Writer_Byte
  3468 ;; This function is called by:
  3469 ;;		_main
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473                           	psect	text24
  3474  001E5C                     __ptext24:
  3475                           	opt stack 0
  3476  001E5C                     _Init_TM1640:
  3477                           	opt stack 25
  3478                           
  3479                           ;TM1640.c: 121: TRISCbits.TRISC3 = 0;
  3480                           
  3481                           ;incstack = 0
  3482  001E5C  9694               	bcf	3988,3,c	;volatile
  3483                           
  3484                           ;TM1640.c: 122: TRISCbits.TRISC4 = 0;
  3485  001E5E  9894               	bcf	3988,4,c	;volatile
  3486                           
  3487                           ;TM1640.c: 123: TM1640_Stop();
  3488  001E60  EC53  F00F         	call	_TM1640_Stop	;wreg free
  3489                           
  3490                           ;TM1640.c: 125: TM1640_Start();
  3491  001E64  EC65  F00F         	call	_TM1640_Start	;wreg free
  3492                           
  3493                           ;TM1640.c: 126: TM1640_Writer_Byte(0x44);
  3494  001E68  0E44               	movlw	68
  3495  001E6A  EC18  F00E         	call	_TM1640_Writer_Byte
  3496                           
  3497                           ;TM1640.c: 127: TM1640_Stop();
  3498  001E6E  EC53  F00F         	call	_TM1640_Stop	;wreg free
  3499                           
  3500                           ;TM1640.c: 129: TM1640_Start();
  3501  001E72  EC65  F00F         	call	_TM1640_Start	;wreg free
  3502                           
  3503                           ;TM1640.c: 130: TM1640_Writer_Byte(0x8F);
  3504  001E76  0E8F               	movlw	143
  3505  001E78  EC18  F00E         	call	_TM1640_Writer_Byte
  3506                           
  3507                           ;TM1640.c: 131: TM1640_Stop();
  3508  001E7C  EC53  F00F         	call	_TM1640_Stop	;wreg free
  3509  001E80  0012               	return		;funcret
  3510  001E82                     __end_of_Init_TM1640:
  3511                           	opt stack 0
  3512                           tblptru	equ	0xFF8
  3513                           tblptrh	equ	0xFF7
  3514                           tblptrl	equ	0xFF6
  3515                           tablat	equ	0xFF5
  3516                           prodh	equ	0xFF4
  3517                           prodl	equ	0xFF3
  3518                           intcon	equ	0xFF2
  3519                           postinc0	equ	0xFEE
  3520                           wreg	equ	0xFE8
  3521                           indf1	equ	0xFE7
  3522                           fsr1h	equ	0xFE2
  3523                           fsr1l	equ	0xFE1
  3524                           indf2	equ	0xFDF
  3525                           fsr2h	equ	0xFDA
  3526                           fsr2l	equ	0xFD9
  3527                           status	equ	0xFD8
  3528                           
  3529 ;; *************** function _TM1640_Writer_Byte *****************
  3530 ;; Defined at:
  3531 ;;		line 77 in file "_01_USER/TM1640.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;  Date            1    wreg     const unsigned char 
  3534 ;; Auto vars:     Size  Location     Type
  3535 ;;  Date            1   26[COMRAM] const unsigned char 
  3536 ;;  mask            1   27[COMRAM] unsigned char 
  3537 ;; Return value:  Size  Location     Type
  3538 ;;		None               void
  3539 ;; Registers used:
  3540 ;;		wreg, status,2, status,0, cstack
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3547 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3549 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3550 ;;Total ram usage:        2 bytes
  3551 ;; Hardware stack levels used:    1
  3552 ;; Hardware stack levels required when called:    4
  3553 ;; This function calls:
  3554 ;;		_TM1640_Delay
  3555 ;; This function is called by:
  3556 ;;		_TM1640_Writer_Dates
  3557 ;;		_Init_TM1640
  3558 ;;		_Open_Display
  3559 ;;		_Disable_Display
  3560 ;; This function uses a non-reentrant model
  3561 ;;
  3562                           
  3563                           	psect	text25
  3564  001C30                     __ptext25:
  3565                           	opt stack 0
  3566  001C30                     _TM1640_Writer_Byte:
  3567                           	opt stack 23
  3568                           
  3569                           ;incstack = 0
  3570                           ;TM1640_Writer_Byte@Date stored from wreg
  3571  001C30  6E1B               	movwf	TM1640_Writer_Byte@Date,c
  3572                           
  3573                           ;TM1640.c: 79: unsigned char mask;
  3574                           ;TM1640.c: 81: for(mask=0x01; mask; mask<<=1)
  3575  001C32  0E01               	movlw	1
  3576  001C34  6E1C               	movwf	TM1640_Writer_Byte@mask,c
  3577  001C36  D017               	goto	l2737
  3578  001C38                     l316:
  3579                           
  3580                           ;TM1640.c: 82: {
  3581                           ;TM1640.c: 83: RC3 = 0;
  3582  001C38  9682               	bcf	3970,3,c	;volatile
  3583                           
  3584                           ;TM1640.c: 84: TM1640_Delay(1);
  3585  001C3A  0E01               	movlw	1
  3586  001C3C  EC97  F00F         	call	_TM1640_Delay
  3587                           
  3588                           ;TM1640.c: 85: if(mask & Date)
  3589  001C40  501C               	movf	TM1640_Writer_Byte@mask,w,c
  3590  001C42  141B               	andwf	TM1640_Writer_Byte@Date,w,c
  3591  001C44  0900               	iorlw	0
  3592  001C46  B4D8               	btfsc	status,2,c
  3593  001C48  D002               	goto	l317
  3594                           
  3595                           ;TM1640.c: 86: RC4 = 1;
  3596  001C4A  8882               	bsf	3970,4,c	;volatile
  3597  001C4C  D002               	goto	l2731
  3598  001C4E                     l317:
  3599                           
  3600                           ;TM1640.c: 87: else
  3601                           ;TM1640.c: 88: RC4 = 0;
  3602  001C4E  9882               	bcf	3970,4,c	;volatile
  3603  001C50  D000               	goto	l2731
  3604  001C52                     l2731:
  3605                           
  3606                           ;TM1640.c: 89: TM1640_Delay(1);
  3607  001C52  0E01               	movlw	1
  3608  001C54  EC97  F00F         	call	_TM1640_Delay
  3609                           
  3610                           ;TM1640.c: 90: RC3 = 1;
  3611  001C58  8682               	bsf	3970,3,c	;volatile
  3612                           
  3613                           ;TM1640.c: 91: TM1640_Delay(1);
  3614  001C5A  0E01               	movlw	1
  3615  001C5C  EC97  F00F         	call	_TM1640_Delay
  3616  001C60  90D8               	bcf	status,0,c
  3617  001C62  361C               	rlcf	TM1640_Writer_Byte@mask,f,c
  3618  001C64  D000               	goto	l2737
  3619  001C66                     l2737:
  3620  001C66  501C               	movf	TM1640_Writer_Byte@mask,w,c
  3621  001C68  A4D8               	btfss	status,2,c
  3622  001C6A  D7E6               	goto	l316
  3623  001C6C  0012               	return		;funcret
  3624  001C6E                     __end_of_TM1640_Writer_Byte:
  3625                           	opt stack 0
  3626                           tblptru	equ	0xFF8
  3627                           tblptrh	equ	0xFF7
  3628                           tblptrl	equ	0xFF6
  3629                           tablat	equ	0xFF5
  3630                           prodh	equ	0xFF4
  3631                           prodl	equ	0xFF3
  3632                           intcon	equ	0xFF2
  3633                           postinc0	equ	0xFEE
  3634                           wreg	equ	0xFE8
  3635                           indf1	equ	0xFE7
  3636                           fsr1h	equ	0xFE2
  3637                           fsr1l	equ	0xFE1
  3638                           indf2	equ	0xFDF
  3639                           fsr2h	equ	0xFDA
  3640                           fsr2l	equ	0xFD9
  3641                           status	equ	0xFD8
  3642                           
  3643 ;; *************** function _TM1640_Stop *****************
  3644 ;; Defined at:
  3645 ;;		line 32 in file "_01_USER/TM1640.c"
  3646 ;; Parameters:    Size  Location     Type
  3647 ;;		None
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;		None
  3650 ;; Return value:  Size  Location     Type
  3651 ;;		None               void
  3652 ;; Registers used:
  3653 ;;		wreg, status,2, status,0, cstack
  3654 ;; Tracked objects:
  3655 ;;		On entry : 0/0
  3656 ;;		On exit  : 0/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3663 ;;Total ram usage:        0 bytes
  3664 ;; Hardware stack levels used:    1
  3665 ;; Hardware stack levels required when called:    4
  3666 ;; This function calls:
  3667 ;;		_TM1640_Delay
  3668 ;; This function is called by:
  3669 ;;		_TM1640_Writer_Dates
  3670 ;;		_Init_TM1640
  3671 ;;		_Open_Display
  3672 ;;		_Disable_Display
  3673 ;; This function uses a non-reentrant model
  3674 ;;
  3675                           
  3676                           	psect	text26
  3677  001EA6                     __ptext26:
  3678                           	opt stack 0
  3679  001EA6                     _TM1640_Stop:
  3680                           	opt stack 23
  3681                           
  3682                           ;TM1640.c: 34: RC3 = 0;
  3683                           
  3684                           ;incstack = 0
  3685  001EA6  9682               	bcf	3970,3,c	;volatile
  3686                           
  3687                           ;TM1640.c: 35: TM1640_Delay(1);
  3688  001EA8  0E01               	movlw	1
  3689  001EAA  EC97  F00F         	call	_TM1640_Delay
  3690                           
  3691                           ;TM1640.c: 36: RC4 = 0;
  3692  001EAE  9882               	bcf	3970,4,c	;volatile
  3693                           
  3694                           ;TM1640.c: 37: TM1640_Delay(1);
  3695  001EB0  0E01               	movlw	1
  3696  001EB2  EC97  F00F         	call	_TM1640_Delay
  3697                           
  3698                           ;TM1640.c: 38: RC3 = 1;
  3699  001EB6  8682               	bsf	3970,3,c	;volatile
  3700                           
  3701                           ;TM1640.c: 39: TM1640_Delay(1);
  3702  001EB8  0E01               	movlw	1
  3703  001EBA  EC97  F00F         	call	_TM1640_Delay
  3704                           
  3705                           ;TM1640.c: 40: RC4 = 1;
  3706  001EBE  8882               	bsf	3970,4,c	;volatile
  3707                           
  3708                           ;TM1640.c: 41: TM1640_Delay(1);
  3709  001EC0  0E01               	movlw	1
  3710  001EC2  EC97  F00F         	call	_TM1640_Delay
  3711                           
  3712                           ;TM1640.c: 42: RC3 = 0;
  3713  001EC6  9682               	bcf	3970,3,c	;volatile
  3714  001EC8  0012               	return		;funcret
  3715  001ECA                     __end_of_TM1640_Stop:
  3716                           	opt stack 0
  3717                           tblptru	equ	0xFF8
  3718                           tblptrh	equ	0xFF7
  3719                           tblptrl	equ	0xFF6
  3720                           tablat	equ	0xFF5
  3721                           prodh	equ	0xFF4
  3722                           prodl	equ	0xFF3
  3723                           intcon	equ	0xFF2
  3724                           postinc0	equ	0xFEE
  3725                           wreg	equ	0xFE8
  3726                           indf1	equ	0xFE7
  3727                           fsr1h	equ	0xFE2
  3728                           fsr1l	equ	0xFE1
  3729                           indf2	equ	0xFDF
  3730                           fsr2h	equ	0xFDA
  3731                           fsr2l	equ	0xFD9
  3732                           status	equ	0xFD8
  3733                           
  3734 ;; *************** function _TM1640_Start *****************
  3735 ;; Defined at:
  3736 ;;		line 19 in file "_01_USER/TM1640.c"
  3737 ;; Parameters:    Size  Location     Type
  3738 ;;		None
  3739 ;; Auto vars:     Size  Location     Type
  3740 ;;		None
  3741 ;; Return value:  Size  Location     Type
  3742 ;;		None               void
  3743 ;; Registers used:
  3744 ;;		wreg, status,2, status,0, cstack
  3745 ;; Tracked objects:
  3746 ;;		On entry : 0/0
  3747 ;;		On exit  : 0/0
  3748 ;;		Unchanged: 0/0
  3749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3754 ;;Total ram usage:        0 bytes
  3755 ;; Hardware stack levels used:    1
  3756 ;; Hardware stack levels required when called:    4
  3757 ;; This function calls:
  3758 ;;		_TM1640_Delay
  3759 ;; This function is called by:
  3760 ;;		_TM1640_Writer_Dates
  3761 ;;		_Init_TM1640
  3762 ;;		_Open_Display
  3763 ;;		_Disable_Display
  3764 ;; This function uses a non-reentrant model
  3765 ;;
  3766                           
  3767                           	psect	text27
  3768  001ECA                     __ptext27:
  3769                           	opt stack 0
  3770  001ECA                     _TM1640_Start:
  3771                           	opt stack 23
  3772                           
  3773                           ;TM1640.c: 21: RC3 = 0;
  3774                           
  3775                           ;incstack = 0
  3776  001ECA  9682               	bcf	3970,3,c	;volatile
  3777                           
  3778                           ;TM1640.c: 22: TM1640_Delay(1);
  3779  001ECC  0E01               	movlw	1
  3780  001ECE  EC97  F00F         	call	_TM1640_Delay
  3781                           
  3782                           ;TM1640.c: 23: RC4 = 1;
  3783  001ED2  8882               	bsf	3970,4,c	;volatile
  3784                           
  3785                           ;TM1640.c: 24: TM1640_Delay(1);
  3786  001ED4  0E01               	movlw	1
  3787  001ED6  EC97  F00F         	call	_TM1640_Delay
  3788                           
  3789                           ;TM1640.c: 25: RC3 = 1;
  3790  001EDA  8682               	bsf	3970,3,c	;volatile
  3791                           
  3792                           ;TM1640.c: 26: TM1640_Delay(1);
  3793  001EDC  0E01               	movlw	1
  3794  001EDE  EC97  F00F         	call	_TM1640_Delay
  3795                           
  3796                           ;TM1640.c: 27: RC4 = 0;
  3797  001EE2  9882               	bcf	3970,4,c	;volatile
  3798                           
  3799                           ;TM1640.c: 28: TM1640_Delay(1);
  3800  001EE4  0E01               	movlw	1
  3801  001EE6  EC97  F00F         	call	_TM1640_Delay
  3802                           
  3803                           ;TM1640.c: 29: RC3 = 0;
  3804  001EEA  9682               	bcf	3970,3,c	;volatile
  3805  001EEC  0012               	return		;funcret
  3806  001EEE                     __end_of_TM1640_Start:
  3807                           	opt stack 0
  3808                           tblptru	equ	0xFF8
  3809                           tblptrh	equ	0xFF7
  3810                           tblptrl	equ	0xFF6
  3811                           tablat	equ	0xFF5
  3812                           prodh	equ	0xFF4
  3813                           prodl	equ	0xFF3
  3814                           intcon	equ	0xFF2
  3815                           postinc0	equ	0xFEE
  3816                           wreg	equ	0xFE8
  3817                           indf1	equ	0xFE7
  3818                           fsr1h	equ	0xFE2
  3819                           fsr1l	equ	0xFE1
  3820                           indf2	equ	0xFDF
  3821                           fsr2h	equ	0xFDA
  3822                           fsr2l	equ	0xFD9
  3823                           status	equ	0xFD8
  3824                           
  3825 ;; *************** function _TM1640_Delay *****************
  3826 ;; Defined at:
  3827 ;;		line 109 in file "_01_USER/TM1640.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;  Time            1    wreg     unsigned char 
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;  Time            1   24[COMRAM] unsigned char 
  3832 ;;  i               1   25[COMRAM] unsigned char 
  3833 ;; Return value:  Size  Location     Type
  3834 ;;		None               void
  3835 ;; Registers used:
  3836 ;;		wreg, status,2, status,0
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3843 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3845 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3846 ;;Total ram usage:        2 bytes
  3847 ;; Hardware stack levels used:    1
  3848 ;; Hardware stack levels required when called:    3
  3849 ;; This function calls:
  3850 ;;		Nothing
  3851 ;; This function is called by:
  3852 ;;		_TM1640_Start
  3853 ;;		_TM1640_Stop
  3854 ;;		_TM1640_Writer_Byte
  3855 ;; This function uses a non-reentrant model
  3856 ;;
  3857                           
  3858                           	psect	text28
  3859  001F2E                     __ptext28:
  3860                           	opt stack 0
  3861  001F2E                     _TM1640_Delay:
  3862                           	opt stack 23
  3863                           
  3864                           ;incstack = 0
  3865                           ;TM1640_Delay@Time stored from wreg
  3866  001F2E  6E19               	movwf	TM1640_Delay@Time,c
  3867  001F30                     
  3868                           ;TM1640.c: 114: {
  3869                           ;TM1640.c: 115: for(i=0; i<10; ++i);
  3870  001F30  0E00               	movlw	0
  3871  001F32  6E1A               	movwf	TM1640_Delay@i,c
  3872  001F34  D002               	goto	l2697
  3873  001F36  D004               	goto	l331
  3874  001F38                     l2695:
  3875  001F38  2A1A               	incf	TM1640_Delay@i,f,c
  3876  001F3A                     l2697:
  3877  001F3A  0E09               	movlw	9
  3878  001F3C  641A               	cpfsgt	TM1640_Delay@i,c
  3879  001F3E  D7FC               	goto	l2695
  3880  001F40                     l331:
  3881                           
  3882                           ;TM1640.c: 116: }while(--Time);
  3883  001F40  2E19               	decfsz	TM1640_Delay@Time,f,c
  3884  001F42  D7F6               	goto	l2689
  3885  001F44  0012               	return	
  3886  001F46  0012               	return		;funcret
  3887  001F48                     __end_of_TM1640_Delay:
  3888                           	opt stack 0
  3889                           tblptru	equ	0xFF8
  3890                           tblptrh	equ	0xFF7
  3891                           tblptrl	equ	0xFF6
  3892                           tablat	equ	0xFF5
  3893                           prodh	equ	0xFF4
  3894                           prodl	equ	0xFF3
  3895                           intcon	equ	0xFF2
  3896                           postinc0	equ	0xFEE
  3897                           wreg	equ	0xFE8
  3898                           indf1	equ	0xFE7
  3899                           fsr1h	equ	0xFE2
  3900                           fsr1l	equ	0xFE1
  3901                           indf2	equ	0xFDF
  3902                           fsr2h	equ	0xFDA
  3903                           fsr2l	equ	0xFD9
  3904                           status	equ	0xFD8
  3905                           
  3906 ;; *************** function _GPIO_Config *****************
  3907 ;; Defined at:
  3908 ;;		line 38 in file "_01_USER/GPIO.c"
  3909 ;; Parameters:    Size  Location     Type
  3910 ;;		None
  3911 ;; Auto vars:     Size  Location     Type
  3912 ;;		None
  3913 ;; Return value:  Size  Location     Type
  3914 ;;		None               void
  3915 ;; Registers used:
  3916 ;;		wreg, status,2, status,0
  3917 ;; Tracked objects:
  3918 ;;		On entry : 0/0
  3919 ;;		On exit  : 0/0
  3920 ;;		Unchanged: 0/0
  3921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3926 ;;Total ram usage:        0 bytes
  3927 ;; Hardware stack levels used:    1
  3928 ;; Hardware stack levels required when called:    3
  3929 ;; This function calls:
  3930 ;;		Nothing
  3931 ;; This function is called by:
  3932 ;;		_main
  3933 ;; This function uses a non-reentrant model
  3934 ;;
  3935                           
  3936                           	psect	text29
  3937  001F78                     __ptext29:
  3938                           	opt stack 0
  3939  001F78                     _GPIO_Config:
  3940                           	opt stack 27
  3941                           
  3942                           ;GPIO.c: 41: TRISE &= 0x1f;
  3943                           
  3944                           ;incstack = 0
  3945  001F78  0E1F               	movlw	31
  3946  001F7A  1696               	andwf	3990,f,c	;volatile
  3947                           
  3948                           ;GPIO.c: 43: RE5 = 1;
  3949  001F7C  8A84               	bsf	3972,5,c	;volatile
  3950                           
  3951                           ;GPIO.c: 44: RE6 = 1;
  3952  001F7E  8C84               	bsf	3972,6,c	;volatile
  3953                           
  3954                           ;GPIO.c: 45: RE7 = 1;
  3955  001F80  8E84               	bsf	3972,7,c	;volatile
  3956  001F82  0012               	return		;funcret
  3957  001F84                     __end_of_GPIO_Config:
  3958                           	opt stack 0
  3959                           tblptru	equ	0xFF8
  3960                           tblptrh	equ	0xFF7
  3961                           tblptrl	equ	0xFF6
  3962                           tablat	equ	0xFF5
  3963                           prodh	equ	0xFF4
  3964                           prodl	equ	0xFF3
  3965                           intcon	equ	0xFF2
  3966                           postinc0	equ	0xFEE
  3967                           wreg	equ	0xFE8
  3968                           indf1	equ	0xFE7
  3969                           fsr1h	equ	0xFE2
  3970                           fsr1l	equ	0xFE1
  3971                           indf2	equ	0xFDF
  3972                           fsr2h	equ	0xFDA
  3973                           fsr2l	equ	0xFD9
  3974                           status	equ	0xFD8
  3975                           
  3976 ;; *************** function _ADC6_Init *****************
  3977 ;; Defined at:
  3978 ;;		line 37 in file "_01_USER/My_ADC.c"
  3979 ;; Parameters:    Size  Location     Type
  3980 ;;		None
  3981 ;; Auto vars:     Size  Location     Type
  3982 ;;		None
  3983 ;; Return value:  Size  Location     Type
  3984 ;;		None               void
  3985 ;; Registers used:
  3986 ;;		wreg, status,2, status,0, cstack
  3987 ;; Tracked objects:
  3988 ;;		On entry : 0/0
  3989 ;;		On exit  : 0/0
  3990 ;;		Unchanged: 0/0
  3991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3996 ;;Total ram usage:        0 bytes
  3997 ;; Hardware stack levels used:    1
  3998 ;; Hardware stack levels required when called:    4
  3999 ;; This function calls:
  4000 ;;		_OpenADC
  4001 ;; This function is called by:
  4002 ;;		_main
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006                           	psect	text30
  4007  001F48                     __ptext30:
  4008                           	opt stack 0
  4009  001F48                     _ADC6_Init:
  4010                           	opt stack 26
  4011                           
  4012                           ;My_ADC.c: 40: OpenADC(0b11111111 &
  4013                           ;My_ADC.c: 41: 0b11110011 &
  4014                           ;My_ADC.c: 42: 0b10001111
  4015                           ;My_ADC.c: 43: ,
  4016                           ;My_ADC.c: 44: 0b10011011
  4017                           ;My_ADC.c: 45: ,
  4018                           ;My_ADC.c: 46: 0b00111111 &
  4019                           ;My_ADC.c: 47: 0b11111111 &
  4020                           ;My_ADC.c: 48: 0b11110111 &
  4021                           ;My_ADC.c: 49: 0b11111000
  4022                           ;My_ADC.c: 50: );
  4023                           
  4024                           ;incstack = 0
  4025  001F48  0E9B               	movlw	155
  4026  001F4A  6E19               	movwf	OpenADC@config2,c
  4027  001F4C  0E30               	movlw	48
  4028  001F4E  6E1A               	movwf	OpenADC@config3,c
  4029  001F50  0E83               	movlw	131
  4030  001F52  EC82  F00D         	call	_OpenADC
  4031                           
  4032                           ;My_ADC.c: 52: (PIE1bits.ADIE=0);
  4033  001F56  9C9D               	bcf	3997,6,c	;volatile
  4034  001F58  0012               	return		;funcret
  4035  001F5A                     __end_of_ADC6_Init:
  4036                           	opt stack 0
  4037                           tblptru	equ	0xFF8
  4038                           tblptrh	equ	0xFF7
  4039                           tblptrl	equ	0xFF6
  4040                           tablat	equ	0xFF5
  4041                           prodh	equ	0xFF4
  4042                           prodl	equ	0xFF3
  4043                           intcon	equ	0xFF2
  4044                           postinc0	equ	0xFEE
  4045                           wreg	equ	0xFE8
  4046                           indf1	equ	0xFE7
  4047                           fsr1h	equ	0xFE2
  4048                           fsr1l	equ	0xFE1
  4049                           indf2	equ	0xFDF
  4050                           fsr2h	equ	0xFDA
  4051                           fsr2l	equ	0xFD9
  4052                           status	equ	0xFD8
  4053                           
  4054 ;; *************** function _OpenADC *****************
  4055 ;; Defined at:
  4056 ;;		line 305 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;  config          1    wreg     unsigned char 
  4059 ;;  config2         1   24[COMRAM] unsigned char 
  4060 ;;  config3         1   25[COMRAM] unsigned char 
  4061 ;; Auto vars:     Size  Location     Type
  4062 ;;  config          1   28[COMRAM] unsigned char 
  4063 ;; Return value:  Size  Location     Type
  4064 ;;		None               void
  4065 ;; Registers used:
  4066 ;;		wreg, status,2, status,0
  4067 ;; Tracked objects:
  4068 ;;		On entry : 0/0
  4069 ;;		On exit  : 0/0
  4070 ;;		Unchanged: 0/0
  4071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4072 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4073 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4074 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4075 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4076 ;;Total ram usage:        5 bytes
  4077 ;; Hardware stack levels used:    1
  4078 ;; Hardware stack levels required when called:    3
  4079 ;; This function calls:
  4080 ;;		Nothing
  4081 ;; This function is called by:
  4082 ;;		_ADC6_Init
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086                           	psect	text31
  4087  001B04                     __ptext31:
  4088                           	opt stack 0
  4089  001B04                     _OpenADC:
  4090                           	opt stack 26
  4091                           
  4092                           ;incstack = 0
  4093                           ;OpenADC@config stored from wreg
  4094  001B04  6E1D               	movwf	OpenADC@config,c
  4095  001B06  0E00               	movlw	0
  4096  001B08  6EC2               	movwf	4034,c	;volatile
  4097  001B0A  0E00               	movlw	0
  4098  001B0C  6EC1               	movwf	4033,c	;volatile
  4099  001B0E  0E00               	movlw	0
  4100  001B10  6EC0               	movwf	4032,c	;volatile
  4101  001B12  5019               	movf	OpenADC@config2,w,c
  4102  001B14  0B7C               	andlw	124
  4103  001B16  6EC2               	movwf	4034,c	;volatile
  4104  001B18  C01A  FFC1         	movff	OpenADC@config3,4033	;volatile
  4105  001B1C  C01D  F01B         	movff	OpenADC@config,??_OpenADC
  4106  001B20  90D8               	bcf	status,0,c
  4107  001B22  361B               	rlcf	??_OpenADC,f,c
  4108  001B24  90D8               	bcf	status,0,c
  4109  001B26  361B               	rlcf	??_OpenADC,f,c
  4110  001B28  0E38               	movlw	56
  4111  001B2A  161B               	andwf	??_OpenADC,f,c
  4112  001B2C  C01D  F01C         	movff	OpenADC@config,??_OpenADC+1
  4113  001B30  3A1C               	swapf	??_OpenADC+1,f,c
  4114  001B32  0E0F               	movlw	15
  4115  001B34  161C               	andwf	??_OpenADC+1,f,c
  4116  001B36  0E07               	movlw	7
  4117  001B38  161C               	andwf	??_OpenADC+1,f,c
  4118  001B3A  501D               	movf	OpenADC@config,w,c
  4119  001B3C  0B80               	andlw	128
  4120  001B3E  101C               	iorwf	??_OpenADC+1,w,c
  4121  001B40  101B               	iorwf	??_OpenADC,w,c
  4122  001B42  6EC0               	movwf	4032,c	;volatile
  4123  001B44  AE19               	btfss	OpenADC@config2,7,c
  4124  001B46  D003               	goto	l444
  4125  001B48  9C9E               	bcf	3998,6,c	;volatile
  4126  001B4A  8C9D               	bsf	3997,6,c	;volatile
  4127  001B4C  8CF2               	bsf	intcon,6,c	;volatile
  4128  001B4E                     l444:
  4129  001B4E  80C2               	bsf	4034,0,c	;volatile
  4130  001B50  0012               	return		;funcret
  4131  001B52                     __end_of_OpenADC:
  4132                           	opt stack 0
  4133                           tblptru	equ	0xFF8
  4134                           tblptrh	equ	0xFF7
  4135                           tblptrl	equ	0xFF6
  4136                           tablat	equ	0xFF5
  4137                           prodh	equ	0xFF4
  4138                           prodl	equ	0xFF3
  4139                           intcon	equ	0xFF2
  4140                           postinc0	equ	0xFEE
  4141                           wreg	equ	0xFE8
  4142                           indf1	equ	0xFE7
  4143                           fsr1h	equ	0xFE2
  4144                           fsr1l	equ	0xFE1
  4145                           indf2	equ	0xFDF
  4146                           fsr2h	equ	0xFDA
  4147                           fsr2l	equ	0xFD9
  4148                           status	equ	0xFD8
  4149                           
  4150 ;; *************** function _Sys_Cyc *****************
  4151 ;; Defined at:
  4152 ;;		line 98 in file "_01_USER/My_Timer.c"
  4153 ;; Parameters:    Size  Location     Type
  4154 ;;		None
  4155 ;; Auto vars:     Size  Location     Type
  4156 ;;  _pulse          1   23[COMRAM] unsigned char 
  4157 ;; Return value:  Size  Location     Type
  4158 ;;		None               void
  4159 ;; Registers used:
  4160 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4161 ;; Tracked objects:
  4162 ;;		On entry : 0/0
  4163 ;;		On exit  : 0/0
  4164 ;;		Unchanged: 0/0
  4165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4167 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4168 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4169 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4170 ;;Total ram usage:       15 bytes
  4171 ;; Hardware stack levels used:    1
  4172 ;; Hardware stack levels required when called:    2
  4173 ;; This function calls:
  4174 ;;		_Delay_1Khz
  4175 ;;		_Key_FSM_Scan
  4176 ;;		_Manage_Message
  4177 ;;		___llmod
  4178 ;;		i2_SetTimer0
  4179 ;; This function is called by:
  4180 ;;		Interrupt level 2
  4181 ;; This function uses a non-reentrant model
  4182 ;;
  4183                           
  4184                           	psect	intcode
  4185  000008                     __pintcode:
  4186                           	opt stack 0
  4187  000008                     _Sys_Cyc:
  4188                           	opt stack 23
  4189                           
  4190                           ;incstack = 0
  4191  000008  CFFA F00A          	movff	pclath,??_Sys_Cyc
  4192  00000C  CFFB F00B          	movff	pclatu,??_Sys_Cyc+1
  4193  000010  CFE9 F00C          	movff	fsr0l,??_Sys_Cyc+2
  4194  000014  CFEA F00D          	movff	fsr0h,??_Sys_Cyc+3
  4195  000018  CFE1 F00E          	movff	fsr1l,??_Sys_Cyc+4
  4196  00001C  CFE2 F00F          	movff	fsr1h,??_Sys_Cyc+5
  4197  000020  CFD9 F010          	movff	fsr2l,??_Sys_Cyc+6
  4198  000024  CFDA F011          	movff	fsr2h,??_Sys_Cyc+7
  4199  000028  CFF3 F012          	movff	prodl,??_Sys_Cyc+8
  4200  00002C  CFF4 F013          	movff	prodh,??_Sys_Cyc+9
  4201  000030  CFF6 F014          	movff	tblptrl,??_Sys_Cyc+10
  4202  000034  CFF7 F015          	movff	tblptrh,??_Sys_Cyc+11
  4203  000038  CFF8 F016          	movff	tblptru,??_Sys_Cyc+12
  4204  00003C  CFF5 F017          	movff	tablat,??_Sys_Cyc+13
  4205                           
  4206                           ;My_Timer.c: 101: static unsigned char _overturn_1Khz = 0,_overturn_LED = 0;
  4207                           ;My_Timer.c: 102: unsigned char _pulse = 10;
  4208  000040  0E0A               	movlw	10
  4209  000042  6E18               	movwf	Sys_Cyc@_pulse,c
  4210                           
  4211                           ;My_Timer.c: 103: static char _RS485_Receive_Num = 0,RS485_Timer = 0;
  4212                           ;My_Timer.c: 106: if(TMR0IF && TMR0IE)
  4213  000044  B4F2               	btfsc	intcon,2,c	;volatile
  4214  000046  AAF2               	btfss	intcon,5,c	;volatile
  4215  000048  D069               	goto	i2l2655
  4216                           
  4217                           ;My_Timer.c: 107: {
  4218                           ;My_Timer.c: 108: Timer_Cyc = (Timer_Cyc+1) % 100000000;
  4219  00004A  0E01               	movlw	1
  4220  00004C  0100               	movlb	0	; () banked
  4221  00004E  256E               	addwf	_Timer_Cyc& (0+255),w,b
  4222  000050  6E01               	movwf	___llmod@dividend,c
  4223  000052  0E00               	movlw	0
  4224  000054  0100               	movlb	0	; () banked
  4225  000056  216F               	addwfc	(_Timer_Cyc+1)& (0+255),w,b
  4226  000058  6E02               	movwf	___llmod@dividend+1,c
  4227  00005A  0E00               	movlw	0
  4228  00005C  0100               	movlb	0	; () banked
  4229  00005E  2170               	addwfc	(_Timer_Cyc+2)& (0+255),w,b
  4230  000060  6E03               	movwf	___llmod@dividend+2,c
  4231  000062  0E00               	movlw	0
  4232  000064  0100               	movlb	0	; () banked
  4233  000066  2171               	addwfc	(_Timer_Cyc+3)& (0+255),w,b
  4234  000068  6E04               	movwf	___llmod@dividend+3,c
  4235  00006A  0E00               	movlw	0
  4236  00006C  6E05               	movwf	___llmod@divisor,c
  4237  00006E  0EE1               	movlw	225
  4238  000070  6E06               	movwf	___llmod@divisor+1,c
  4239  000072  0EF5               	movlw	245
  4240  000074  6E07               	movwf	___llmod@divisor+2,c
  4241  000076  0E05               	movlw	5
  4242  000078  6E08               	movwf	___llmod@divisor+3,c
  4243  00007A  ECAF  F00C         	call	___llmod	;wreg free
  4244  00007E  C001  F06E         	movff	?___llmod,_Timer_Cyc
  4245  000082  C002  F06F         	movff	?___llmod+1,_Timer_Cyc+1
  4246  000086  C003  F070         	movff	?___llmod+2,_Timer_Cyc+2
  4247  00008A  C004  F071         	movff	?___llmod+3,_Timer_Cyc+3
  4248                           
  4249                           ;My_Timer.c: 109: if(_RS485_Receive_Num == 0) RS485_Timer --;
  4250  00008E  502F               	movf	Sys_Cyc@_RS485_Receive_Num,w,c
  4251  000090  A4D8               	btfss	status,2,c
  4252  000092  D002               	goto	i2l2627
  4253  000094  062E               	decf	Sys_Cyc@RS485_Timer,f,c
  4254  000096  D000               	goto	i2l2627
  4255  000098                     i2l2627:
  4256                           
  4257                           ;My_Timer.c: 111: if( Handle_Switch._1Khz )
  4258  000098  0100               	movlb	0	; () banked
  4259  00009A  516A               	movf	_Handle_Switch& (0+255),w,b
  4260  00009C  A4D8               	btfss	status,2,c
  4261  00009E  D00D               	goto	i2l2639
  4262  0000A0  D012               	goto	i2l2641
  4263                           
  4264                           ; BSR set to: 0
  4265                           ;My_Timer.c: 112: {
  4266                           ;My_Timer.c: 113: while( _pulse-- )
  4267  0000A2  D00B               	goto	i2l2639
  4268  0000A4                     i2l2631:
  4269                           
  4270                           ;My_Timer.c: 114: {
  4271                           ;My_Timer.c: 115: _overturn_1Khz =~ _overturn_1Khz;
  4272  0000A4  1E30               	comf	Sys_Cyc@_overturn_1Khz,f,c
  4273                           
  4274                           ;My_Timer.c: 116: if(_overturn_1Khz) PORTEbits.RE7 = 1; else PORTEbits.RE7 = 0;
  4275  0000A6  5030               	movf	Sys_Cyc@_overturn_1Khz,w,c
  4276  0000A8  B4D8               	btfsc	status,2,c
  4277  0000AA  D002               	goto	i2l259
  4278  0000AC  8E84               	bsf	3972,7,c	;volatile
  4279  0000AE  D002               	goto	i2l2637
  4280  0000B0                     i2l259:
  4281  0000B0  9E84               	bcf	3972,7,c	;volatile
  4282  0000B2  D000               	goto	i2l2637
  4283  0000B4                     i2l2637:
  4284                           
  4285                           ;My_Timer.c: 117: Delay_1Khz();
  4286  0000B4  EC8F  F00E         	call	_Delay_1Khz	;wreg free
  4287  0000B8  D000               	goto	i2l2639
  4288  0000BA                     i2l2639:
  4289  0000BA  0618               	decf	Sys_Cyc@_pulse,f,c
  4290  0000BC  2818               	incf	Sys_Cyc@_pulse,w,c
  4291  0000BE  B4D8               	btfsc	status,2,c
  4292  0000C0  D002               	goto	i2l2641
  4293  0000C2  D7F0               	goto	i2l2631
  4294  0000C4  D000               	goto	i2l2641
  4295  0000C6                     i2l2641:
  4296                           
  4297                           ;My_Timer.c: 118: }
  4298                           ;My_Timer.c: 119: }
  4299                           ;My_Timer.c: 122: if( Timer_Cyc%30 == 0 )
  4300  0000C6  C06E  F001         	movff	_Timer_Cyc,___llmod@dividend
  4301  0000CA  C06F  F002         	movff	_Timer_Cyc+1,___llmod@dividend+1
  4302  0000CE  C070  F003         	movff	_Timer_Cyc+2,___llmod@dividend+2
  4303  0000D2  C071  F004         	movff	_Timer_Cyc+3,___llmod@dividend+3
  4304  0000D6  0E1E               	movlw	30
  4305  0000D8  6E05               	movwf	___llmod@divisor,c
  4306  0000DA  0E00               	movlw	0
  4307  0000DC  6E06               	movwf	___llmod@divisor+1,c
  4308  0000DE  0E00               	movlw	0
  4309  0000E0  6E07               	movwf	___llmod@divisor+2,c
  4310  0000E2  0E00               	movlw	0
  4311  0000E4  6E08               	movwf	___llmod@divisor+3,c
  4312  0000E6  ECAF  F00C         	call	___llmod	;wreg free
  4313  0000EA  5001               	movf	?___llmod,w,c
  4314  0000EC  1002               	iorwf	?___llmod+1,w,c
  4315  0000EE  1003               	iorwf	?___llmod+2,w,c
  4316  0000F0  1004               	iorwf	?___llmod+3,w,c
  4317  0000F2  A4D8               	btfss	status,2,c
  4318  0000F4  D008               	goto	i2l2649
  4319                           
  4320                           ;My_Timer.c: 123: {
  4321                           ;My_Timer.c: 124: _overturn_LED = ~_overturn_LED;
  4322  0000F6  1E31               	comf	Sys_Cyc@_overturn_LED,f,c
  4323                           
  4324                           ;My_Timer.c: 125: if(_overturn_LED) PORTEbits.RE5=0;
  4325  0000F8  5031               	movf	Sys_Cyc@_overturn_LED,w,c
  4326  0000FA  B4D8               	btfsc	status,2,c
  4327  0000FC  D002               	goto	i2l263
  4328  0000FE  9A84               	bcf	3972,5,c	;volatile
  4329  000100  D002               	goto	i2l2649
  4330  000102                     i2l263:
  4331                           
  4332                           ;My_Timer.c: 126: else PORTEbits.RE5=1;
  4333  000102  8A84               	bsf	3972,5,c	;volatile
  4334  000104  D000               	goto	i2l2649
  4335  000106                     i2l2649:
  4336                           
  4337                           ;My_Timer.c: 127: }
  4338                           ;My_Timer.c: 130: Key_FSM_Scan();
  4339  000106  ECCF  F00D         	call	_Key_FSM_Scan	;wreg free
  4340                           
  4341                           ;My_Timer.c: 133: Manage_Message();
  4342  00010A  EC18  F00A         	call	_Manage_Message	;wreg free
  4343                           
  4344                           ;My_Timer.c: 135: SetTimer0(78);
  4345  00010E  0E00               	movlw	0
  4346  000110  6E02               	movwf	i2SetTimer0@_tmr+1,c
  4347  000112  0E4E               	movlw	78
  4348  000114  6E01               	movwf	i2SetTimer0@_tmr,c
  4349  000116  ECDC  F00E         	call	i2_SetTimer0	;wreg free
  4350  00011A  D000               	goto	i2l2655
  4351  00011C                     i2l2655:
  4352                           
  4353                           ;My_Timer.c: 136: }
  4354                           ;My_Timer.c: 139: if( RC2IF )
  4355  00011C  AAA4               	btfss	4004,5,c	;volatile
  4356  00011E  D022               	goto	i2l269
  4357                           
  4358                           ;My_Timer.c: 140: {
  4359                           ;My_Timer.c: 141: if(RS485_Timer == 0 ) _RS485_Receive_Num = 0;
  4360  000120  502E               	movf	Sys_Cyc@RS485_Timer,w,c
  4361  000122  A4D8               	btfss	status,2,c
  4362  000124  D003               	goto	i2l2661
  4363  000126  0E00               	movlw	0
  4364  000128  6E2F               	movwf	Sys_Cyc@_RS485_Receive_Num,c
  4365  00012A  D000               	goto	i2l2661
  4366  00012C                     i2l2661:
  4367                           
  4368                           ;My_Timer.c: 143: RS485_ReceiveBuff[ _RS485_Receive_Num] = RCREG2;
  4369  00012C  502F               	movf	Sys_Cyc@_RS485_Receive_Num,w,c
  4370  00012E  0D01               	mullw	1
  4371  000130  0E60               	movlw	low _RS485_ReceiveBuff
  4372  000132  24F3               	addwf	prodl,w,c
  4373  000134  6ED9               	movwf	fsr2l,c
  4374  000136  0E00               	movlw	high _RS485_ReceiveBuff
  4375  000138  20F4               	addwfc	prodh,w,c
  4376  00013A  6EDA               	movwf	fsr2h,c
  4377  00013C  CF1D FFDF          	movff	3869,indf2	;volatile
  4378                           
  4379                           ;My_Timer.c: 145: if(RS485_ReceiveBuff[0] == 0xaa) _RS485_Receive_Num++,RS485_Timer = 2;
  4380  000140  0EAA               	movlw	170
  4381  000142  0100               	movlb	0	; () banked
  4382  000144  1960               	xorwf	_RS485_ReceiveBuff& (0+255),w,b
  4383  000146  A4D8               	btfss	status,2,c
  4384  000148  D004               	goto	i2l2669
  4385                           
  4386                           ; BSR set to: 0
  4387  00014A  2A2F               	incf	Sys_Cyc@_RS485_Receive_Num,f,c
  4388                           
  4389                           ; BSR set to: 0
  4390  00014C  0E02               	movlw	2
  4391  00014E  6E2E               	movwf	Sys_Cyc@RS485_Timer,c
  4392  000150  D000               	goto	i2l2669
  4393  000152                     i2l2669:
  4394                           
  4395                           ; BSR set to: 0
  4396                           ;My_Timer.c: 147: if( _RS485_Receive_Num == 10 )
  4397  000152  0E0A               	movlw	10
  4398  000154  182F               	xorwf	Sys_Cyc@_RS485_Receive_Num,w,c
  4399  000156  A4D8               	btfss	status,2,c
  4400  000158  D005               	goto	i2l269
  4401                           
  4402                           ; BSR set to: 0
  4403                           ;My_Timer.c: 148: {
  4404                           ;My_Timer.c: 149: RS485_Receive_Flag = 1 ;
  4405  00015A  0E01               	movlw	1
  4406  00015C  6E34               	movwf	_RS485_Receive_Flag,c
  4407                           
  4408                           ;My_Timer.c: 150: _RS485_Receive_Num = 0;
  4409  00015E  0E00               	movlw	0
  4410  000160  6E2F               	movwf	Sys_Cyc@_RS485_Receive_Num,c
  4411                           
  4412                           ; BSR set to: 0
  4413  000162  D000               	goto	i2l269
  4414  000164                     i2l269:
  4415  000164  C017  FFF5         	movff	??_Sys_Cyc+13,tablat
  4416  000168  C016  FFF8         	movff	??_Sys_Cyc+12,tblptru
  4417  00016C  C015  FFF7         	movff	??_Sys_Cyc+11,tblptrh
  4418  000170  C014  FFF6         	movff	??_Sys_Cyc+10,tblptrl
  4419  000174  C013  FFF4         	movff	??_Sys_Cyc+9,prodh
  4420  000178  C012  FFF3         	movff	??_Sys_Cyc+8,prodl
  4421  00017C  C011  FFDA         	movff	??_Sys_Cyc+7,fsr2h
  4422  000180  C010  FFD9         	movff	??_Sys_Cyc+6,fsr2l
  4423  000184  C00F  FFE2         	movff	??_Sys_Cyc+5,fsr1h
  4424  000188  C00E  FFE1         	movff	??_Sys_Cyc+4,fsr1l
  4425  00018C  C00D  FFEA         	movff	??_Sys_Cyc+3,fsr0h
  4426  000190  C00C  FFE9         	movff	??_Sys_Cyc+2,fsr0l
  4427  000194  C00B  FFFB         	movff	??_Sys_Cyc+1,pclatu
  4428  000198  C00A  FFFA         	movff	??_Sys_Cyc,pclath
  4429  00019C  0011               	retfie		f
  4430  00019E                     __end_of_Sys_Cyc:
  4431                           	opt stack 0
  4432                           pclatu	equ	0xFFB
  4433                           pclath	equ	0xFFA
  4434                           tblptru	equ	0xFF8
  4435                           tblptrh	equ	0xFF7
  4436                           tblptrl	equ	0xFF6
  4437                           tablat	equ	0xFF5
  4438                           prodh	equ	0xFF4
  4439                           prodl	equ	0xFF3
  4440                           intcon	equ	0xFF2
  4441                           postinc0	equ	0xFEE
  4442                           fsr0h	equ	0xFEA
  4443                           fsr0l	equ	0xFE9
  4444                           wreg	equ	0xFE8
  4445                           indf1	equ	0xFE7
  4446                           fsr1h	equ	0xFE2
  4447                           fsr1l	equ	0xFE1
  4448                           indf2	equ	0xFDF
  4449                           fsr2h	equ	0xFDA
  4450                           fsr2l	equ	0xFD9
  4451                           status	equ	0xFD8
  4452                           
  4453 ;; *************** function i2_SetTimer0 *****************
  4454 ;; Defined at:
  4455 ;;		line 79 in file "_01_USER/My_Timer.c"
  4456 ;; Parameters:    Size  Location     Type
  4457 ;;  _tmr            2    0[COMRAM] unsigned int 
  4458 ;; Auto vars:     Size  Location     Type
  4459 ;;		None
  4460 ;; Return value:  Size  Location     Type
  4461 ;;		None               void
  4462 ;; Registers used:
  4463 ;;		wreg, status,2, status,0
  4464 ;; Tracked objects:
  4465 ;;		On entry : 0/0
  4466 ;;		On exit  : 0/0
  4467 ;;		Unchanged: 0/0
  4468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4469 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4471 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4472 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4473 ;;Total ram usage:        4 bytes
  4474 ;; Hardware stack levels used:    1
  4475 ;; This function calls:
  4476 ;;		Nothing
  4477 ;; This function is called by:
  4478 ;;		_Sys_Cyc
  4479 ;; This function uses a non-reentrant model
  4480 ;;
  4481                           
  4482                           	psect	text33
  4483  001DB8                     __ptext33:
  4484                           	opt stack 0
  4485  001DB8                     i2_SetTimer0:
  4486                           	opt stack 24
  4487                           
  4488                           ;My_Timer.c: 81: if(_tmr > 0xffff) _tmr = 0xffff;
  4489                           
  4490                           ;incstack = 0
  4491  001DB8  D003               	goto	i2l2589
  4492  001DBA  6801               	setf	i2SetTimer0@_tmr,c
  4493  001DBC  6802               	setf	i2SetTimer0@_tmr+1,c
  4494  001DBE  D000               	goto	i2l2589
  4495  001DC0                     i2l2589:
  4496                           
  4497                           ;My_Timer.c: 82: _tmr=0xffff-_tmr;
  4498  001DC0  C001  F003         	movff	i2SetTimer0@_tmr,??i2_SetTimer0
  4499  001DC4  C002  F004         	movff	i2SetTimer0@_tmr+1,??i2_SetTimer0+1
  4500  001DC8  1E03               	comf	??i2_SetTimer0,f,c
  4501  001DCA  1E04               	comf	??i2_SetTimer0+1,f,c
  4502  001DCC  4A03               	infsnz	??i2_SetTimer0,f,c
  4503  001DCE  2A04               	incf	??i2_SetTimer0+1,f,c
  4504  001DD0  0EFF               	movlw	255
  4505  001DD2  2403               	addwf	??i2_SetTimer0,w,c
  4506  001DD4  6E01               	movwf	i2SetTimer0@_tmr,c
  4507  001DD6  0EFF               	movlw	255
  4508  001DD8  2004               	addwfc	??i2_SetTimer0+1,w,c
  4509  001DDA  6E02               	movwf	i2SetTimer0@_tmr+1,c
  4510                           
  4511                           ;My_Timer.c: 83: TMR0H = _tmr/256;
  4512  001DDC  5002               	movf	i2SetTimer0@_tmr+1,w,c
  4513  001DDE  6ED7               	movwf	4055,c	;volatile
  4514                           
  4515                           ;My_Timer.c: 84: TMR0L = _tmr%256;
  4516  001DE0  C001  FFD6         	movff	i2SetTimer0@_tmr,4054	;volatile
  4517                           
  4518                           ;My_Timer.c: 85: TMR0IF = 0;
  4519  001DE4  94F2               	bcf	intcon,2,c	;volatile
  4520  001DE6  0012               	return		;funcret
  4521  001DE8                     __end_ofi2_SetTimer0:
  4522                           	opt stack 0
  4523                           pclatu	equ	0xFFB
  4524                           pclath	equ	0xFFA
  4525                           tblptru	equ	0xFF8
  4526                           tblptrh	equ	0xFF7
  4527                           tblptrl	equ	0xFF6
  4528                           tablat	equ	0xFF5
  4529                           prodh	equ	0xFF4
  4530                           prodl	equ	0xFF3
  4531                           intcon	equ	0xFF2
  4532                           postinc0	equ	0xFEE
  4533                           fsr0h	equ	0xFEA
  4534                           fsr0l	equ	0xFE9
  4535                           wreg	equ	0xFE8
  4536                           indf1	equ	0xFE7
  4537                           fsr1h	equ	0xFE2
  4538                           fsr1l	equ	0xFE1
  4539                           indf2	equ	0xFDF
  4540                           fsr2h	equ	0xFDA
  4541                           fsr2l	equ	0xFD9
  4542                           status	equ	0xFD8
  4543                           
  4544 ;; *************** function ___llmod *****************
  4545 ;; Defined at:
  4546 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  4547 ;; Parameters:    Size  Location     Type
  4548 ;;  dividend        4    0[COMRAM] unsigned long 
  4549 ;;  divisor         4    4[COMRAM] unsigned long 
  4550 ;; Auto vars:     Size  Location     Type
  4551 ;;  counter         1    8[COMRAM] unsigned char 
  4552 ;; Return value:  Size  Location     Type
  4553 ;;                  4    0[COMRAM] unsigned long 
  4554 ;; Registers used:
  4555 ;;		wreg, status,2, status,0
  4556 ;; Tracked objects:
  4557 ;;		On entry : 0/0
  4558 ;;		On exit  : 0/0
  4559 ;;		Unchanged: 0/0
  4560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4561 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4562 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4564 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4565 ;;Total ram usage:        9 bytes
  4566 ;; Hardware stack levels used:    1
  4567 ;; This function calls:
  4568 ;;		Nothing
  4569 ;; This function is called by:
  4570 ;;		_Sys_Cyc
  4571 ;; This function uses a non-reentrant model
  4572 ;;
  4573                           
  4574                           	psect	text34
  4575  00195E                     __ptext34:
  4576                           	opt stack 0
  4577  00195E                     ___llmod:
  4578                           	opt stack 24
  4579                           
  4580                           ;incstack = 0
  4581  00195E  5005               	movf	___llmod@divisor,w,c
  4582  001960  1006               	iorwf	___llmod@divisor+1,w,c
  4583  001962  1007               	iorwf	___llmod@divisor+2,w,c
  4584  001964  1008               	iorwf	___llmod@divisor+3,w,c
  4585  001966  B4D8               	btfsc	status,2,c
  4586  001968  D029               	goto	i2l949
  4587  00196A  0E01               	movlw	1
  4588  00196C  6E09               	movwf	___llmod@counter,c
  4589  00196E  D007               	goto	i2l2575
  4590  001970                     i2l2573:
  4591  001970  90D8               	bcf	status,0,c
  4592  001972  3605               	rlcf	___llmod@divisor,f,c
  4593  001974  3606               	rlcf	___llmod@divisor+1,f,c
  4594  001976  3607               	rlcf	___llmod@divisor+2,f,c
  4595  001978  3608               	rlcf	___llmod@divisor+3,f,c
  4596  00197A  2A09               	incf	___llmod@counter,f,c
  4597  00197C  D000               	goto	i2l2575
  4598  00197E                     i2l2575:
  4599  00197E  BE08               	btfsc	___llmod@divisor+3,7,c
  4600  001980  D002               	goto	i2l2577
  4601  001982  D7F6               	goto	i2l2573
  4602  001984  D000               	goto	i2l2577
  4603  001986                     i2l2577:
  4604  001986  5005               	movf	___llmod@divisor,w,c
  4605  001988  5C01               	subwf	___llmod@dividend,w,c
  4606  00198A  5006               	movf	___llmod@divisor+1,w,c
  4607  00198C  5802               	subwfb	___llmod@dividend+1,w,c
  4608  00198E  5007               	movf	___llmod@divisor+2,w,c
  4609  001990  5803               	subwfb	___llmod@dividend+2,w,c
  4610  001992  5008               	movf	___llmod@divisor+3,w,c
  4611  001994  5804               	subwfb	___llmod@dividend+3,w,c
  4612  001996  A0D8               	btfss	status,0,c
  4613  001998  D009               	goto	i2l2581
  4614  00199A  5005               	movf	___llmod@divisor,w,c
  4615  00199C  5E01               	subwf	___llmod@dividend,f,c
  4616  00199E  5006               	movf	___llmod@divisor+1,w,c
  4617  0019A0  5A02               	subwfb	___llmod@dividend+1,f,c
  4618  0019A2  5007               	movf	___llmod@divisor+2,w,c
  4619  0019A4  5A03               	subwfb	___llmod@dividend+2,f,c
  4620  0019A6  5008               	movf	___llmod@divisor+3,w,c
  4621  0019A8  5A04               	subwfb	___llmod@dividend+3,f,c
  4622  0019AA  D000               	goto	i2l2581
  4623  0019AC                     i2l2581:
  4624  0019AC  90D8               	bcf	status,0,c
  4625  0019AE  3208               	rrcf	___llmod@divisor+3,f,c
  4626  0019B0  3207               	rrcf	___llmod@divisor+2,f,c
  4627  0019B2  3206               	rrcf	___llmod@divisor+1,f,c
  4628  0019B4  3205               	rrcf	___llmod@divisor,f,c
  4629  0019B6  2E09               	decfsz	___llmod@counter,f,c
  4630  0019B8  D7E6               	goto	i2l2577
  4631  0019BA  D000               	goto	i2l949
  4632  0019BC                     i2l949:
  4633  0019BC  C001  F001         	movff	___llmod@dividend,?___llmod
  4634  0019C0  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  4635  0019C4  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  4636  0019C8  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  4637  0019CC  0012               	return		;funcret
  4638  0019CE                     __end_of___llmod:
  4639                           	opt stack 0
  4640                           pclatu	equ	0xFFB
  4641                           pclath	equ	0xFFA
  4642                           tblptru	equ	0xFF8
  4643                           tblptrh	equ	0xFF7
  4644                           tblptrl	equ	0xFF6
  4645                           tablat	equ	0xFF5
  4646                           prodh	equ	0xFF4
  4647                           prodl	equ	0xFF3
  4648                           intcon	equ	0xFF2
  4649                           postinc0	equ	0xFEE
  4650                           fsr0h	equ	0xFEA
  4651                           fsr0l	equ	0xFE9
  4652                           wreg	equ	0xFE8
  4653                           indf1	equ	0xFE7
  4654                           fsr1h	equ	0xFE2
  4655                           fsr1l	equ	0xFE1
  4656                           indf2	equ	0xFDF
  4657                           fsr2h	equ	0xFDA
  4658                           fsr2l	equ	0xFD9
  4659                           status	equ	0xFD8
  4660                           
  4661 ;; *************** function _Manage_Message *****************
  4662 ;; Defined at:
  4663 ;;		line 50 in file "_01_USER/Run.c"
  4664 ;; Parameters:    Size  Location     Type
  4665 ;;		None
  4666 ;; Auto vars:     Size  Location     Type
  4667 ;;  i               1    6[COMRAM] unsigned char 
  4668 ;; Return value:  Size  Location     Type
  4669 ;;		None               void
  4670 ;; Registers used:
  4671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4672 ;; Tracked objects:
  4673 ;;		On entry : 0/0
  4674 ;;		On exit  : 0/0
  4675 ;;		Unchanged: 0/0
  4676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4678 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4680 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4681 ;;Total ram usage:        1 bytes
  4682 ;; Hardware stack levels used:    1
  4683 ;; Hardware stack levels required when called:    1
  4684 ;; This function calls:
  4685 ;;		_Key_FSM_Read
  4686 ;;		_Key_FSM_Reset
  4687 ;;		___lbmod
  4688 ;; This function is called by:
  4689 ;;		_Sys_Cyc
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692                           
  4693                           	psect	text35
  4694  001430                     __ptext35:
  4695                           	opt stack 0
  4696  001430                     _Manage_Message:
  4697                           	opt stack 23
  4698                           
  4699                           ;Run.c: 52: char i;
  4700                           ;Run.c: 53: Key_FSM_Read();
  4701                           
  4702                           ;incstack = 0
  4703  001430  EC09  F008         	call	_Key_FSM_Read	;wreg free
  4704                           
  4705                           ;Run.c: 55: if ( Local_Key_User.key_group == ((0x01<<1)|(0x01<<3)) && Local_Key_User.key
      +                          _group_state == KEY_short )
  4706  001434  0E0A               	movlw	10
  4707  001436  1837               	xorwf	_Local_Key_User+1,w,c	;volatile
  4708  001438  A4D8               	btfss	status,2,c
  4709  00143A  D013               	goto	i2l2507
  4710  00143C  0438               	decf	_Local_Key_User+2,w,c	;volatile
  4711  00143E  A4D8               	btfss	status,2,c
  4712  001440  D010               	goto	i2l2507
  4713                           
  4714                           ;Run.c: 56: {
  4715                           ;Run.c: 57: for(i = 0;i < 10;i++)
  4716  001442  0E00               	movlw	0
  4717  001444  6E07               	movwf	Manage_Message@i,c
  4718  001446                     i2l2495:
  4719  001446  0E09               	movlw	9
  4720  001448  6407               	cpfsgt	Manage_Message@i,c
  4721  00144A  D001               	goto	i2l2499
  4722  00144C  D002               	goto	i2l2503
  4723  00144E                     i2l2499:
  4724  00144E  2A07               	incf	Manage_Message@i,f,c
  4725  001450  D7FA               	goto	i2l2495
  4726  001452                     i2l2503:
  4727                           
  4728                           ;Run.c: 60: Handle_Switch.Show_Send_Receive = ~Handle_Switch.Show_Send_Receive ;
  4729  001452  0100               	movlb	0	; () banked
  4730  001454  516D               	movf	(_Handle_Switch+3)& (0+255),w,b
  4731  001456  0AFF               	xorlw	255
  4732  001458  0100               	movlb	0	; () banked
  4733  00145A  6F6D               	movwf	(_Handle_Switch+3)& (0+255),b
  4734                           
  4735                           ; BSR set to: 0
  4736                           ;Run.c: 61: Key_FSM_Reset();
  4737  00145C  ECF5  F00D         	call	_Key_FSM_Reset	;wreg free
  4738  001460  D000               	goto	i2l2507
  4739  001462                     i2l2507:
  4740                           
  4741                           ;Run.c: 62: }
  4742                           ;Run.c: 65: if ( Local_Key_User.key_group == ((0x01<<0)|(0x01<<3)) && Local_Key_User.key
      +                          _group_state == KEY_short )
  4743  001462  0E09               	movlw	9
  4744  001464  1837               	xorwf	_Local_Key_User+1,w,c	;volatile
  4745  001466  A4D8               	btfss	status,2,c
  4746  001468  D007               	goto	i2l2515
  4747  00146A  0438               	decf	_Local_Key_User+2,w,c	;volatile
  4748  00146C  A4D8               	btfss	status,2,c
  4749  00146E  D004               	goto	i2l2515
  4750                           
  4751                           ;Run.c: 66: { g_Addr++; Key_FSM_Reset();}
  4752  001470  2A35               	incf	_g_Addr,f,c
  4753  001472  ECF5  F00D         	call	_Key_FSM_Reset	;wreg free
  4754  001476  D000               	goto	i2l2515
  4755  001478                     i2l2515:
  4756                           
  4757                           ;Run.c: 69: if ( Local_Key_User.key_group == ((0x01<<0)|(0x01<<1)) && Local_Key_User.key
      +                          _group_state == KEY_short )
  4758  001478  0E03               	movlw	3
  4759  00147A  1837               	xorwf	_Local_Key_User+1,w,c	;volatile
  4760  00147C  A4D8               	btfss	status,2,c
  4761  00147E  D007               	goto	i2l2523
  4762  001480  0438               	decf	_Local_Key_User+2,w,c	;volatile
  4763  001482  A4D8               	btfss	status,2,c
  4764  001484  D004               	goto	i2l2523
  4765                           
  4766                           ;Run.c: 70: { g_Addr--; Key_FSM_Reset();}
  4767  001486  0635               	decf	_g_Addr,f,c
  4768  001488  ECF5  F00D         	call	_Key_FSM_Reset	;wreg free
  4769  00148C  D000               	goto	i2l2523
  4770  00148E                     i2l2523:
  4771                           
  4772                           ;Run.c: 73: if (Local_Key_User.key_state[5-1] == KEY_short) RS485_Num -- ;
  4773  00148E  0447               	decf	_Local_Key_User+17,w,c	;volatile
  4774  001490  A4D8               	btfss	status,2,c
  4775  001492  D002               	goto	i2l2527
  4776  001494  0633               	decf	_RS485_Num,f,c
  4777  001496  D000               	goto	i2l2527
  4778  001498                     i2l2527:
  4779                           
  4780                           ;Run.c: 74: if (Local_Key_User.key_state[5-1] == KEY_hold) RS485_Num -- ;
  4781  001498  0E03               	movlw	3
  4782  00149A  1847               	xorwf	_Local_Key_User+17,w,c	;volatile
  4783  00149C  A4D8               	btfss	status,2,c
  4784  00149E  D002               	goto	i2l2531
  4785  0014A0  0633               	decf	_RS485_Num,f,c
  4786  0014A2  D000               	goto	i2l2531
  4787  0014A4                     i2l2531:
  4788                           
  4789                           ;Run.c: 77: if (Local_Key_User.key_state[3-1] == KEY_short) RS485_Num ++ ;
  4790  0014A4  0445               	decf	_Local_Key_User+15,w,c	;volatile
  4791  0014A6  A4D8               	btfss	status,2,c
  4792  0014A8  D002               	goto	i2l2535
  4793  0014AA  2A33               	incf	_RS485_Num,f,c
  4794  0014AC  D000               	goto	i2l2535
  4795  0014AE                     i2l2535:
  4796                           
  4797                           ;Run.c: 78: if (Local_Key_User.key_state[3-1] == KEY_hold) RS485_Num ++ ;
  4798  0014AE  0E03               	movlw	3
  4799  0014B0  1845               	xorwf	_Local_Key_User+15,w,c	;volatile
  4800  0014B2  A4D8               	btfss	status,2,c
  4801  0014B4  D002               	goto	i2l2539
  4802  0014B6  2A33               	incf	_RS485_Num,f,c
  4803  0014B8  D000               	goto	i2l2539
  4804  0014BA                     i2l2539:
  4805                           
  4806                           ;Run.c: 80: if( RS485_Num > 250 ) RS485_Num = 10 - 1;
  4807  0014BA  0EFA               	movlw	250
  4808  0014BC  6433               	cpfsgt	_RS485_Num,c
  4809  0014BE  D002               	goto	i2l2543
  4810  0014C0  0E09               	movlw	9
  4811  0014C2  D005               	goto	L2
  4812  0014C4                     i2l2543:
  4813                           
  4814                           ;Run.c: 81: else RS485_Num %= 10;
  4815  0014C4  0E0A               	movlw	10
  4816  0014C6  6E01               	movwf	___lbmod@divisor,c
  4817  0014C8  5033               	movf	_RS485_Num,w,c
  4818  0014CA  ECAB  F00E         	call	___lbmod
  4819  0014CE                     L2:
  4820  0014CE  6E33               	movwf	_RS485_Num,c
  4821  0014D0  D000               	goto	i2l2545
  4822  0014D2                     i2l2545:
  4823                           
  4824                           ;Run.c: 84: if (Local_Key_User.key_state[4-1] == KEY_short) RS485_SendBuff[RS485_Num] ++
      +                           ;
  4825  0014D2  0446               	decf	_Local_Key_User+16,w,c	;volatile
  4826  0014D4  A4D8               	btfss	status,2,c
  4827  0014D6  D00A               	goto	i2l2549
  4828  0014D8  5033               	movf	_RS485_Num,w,c
  4829  0014DA  0D01               	mullw	1
  4830  0014DC  0E87               	movlw	low _RS485_SendBuff
  4831  0014DE  24F3               	addwf	prodl,w,c
  4832  0014E0  6ED9               	movwf	fsr2l,c
  4833  0014E2  0E00               	movlw	high _RS485_SendBuff
  4834  0014E4  20F4               	addwfc	prodh,w,c
  4835  0014E6  6EDA               	movwf	fsr2h,c
  4836  0014E8  2ADF               	incf	indf2,f,c
  4837  0014EA  D000               	goto	i2l2549
  4838  0014EC                     i2l2549:
  4839                           
  4840                           ;Run.c: 85: if (Local_Key_User.key_state[4-1] == KEY_hold) RS485_SendBuff[RS485_Num] ++ 
      +                          ;
  4841  0014EC  0E03               	movlw	3
  4842  0014EE  1846               	xorwf	_Local_Key_User+16,w,c	;volatile
  4843  0014F0  A4D8               	btfss	status,2,c
  4844  0014F2  D00A               	goto	i2l2553
  4845  0014F4  5033               	movf	_RS485_Num,w,c
  4846  0014F6  0D01               	mullw	1
  4847  0014F8  0E87               	movlw	low _RS485_SendBuff
  4848  0014FA  24F3               	addwf	prodl,w,c
  4849  0014FC  6ED9               	movwf	fsr2l,c
  4850  0014FE  0E00               	movlw	high _RS485_SendBuff
  4851  001500  20F4               	addwfc	prodh,w,c
  4852  001502  6EDA               	movwf	fsr2h,c
  4853  001504  2ADF               	incf	indf2,f,c
  4854  001506  D000               	goto	i2l2553
  4855  001508                     i2l2553:
  4856                           
  4857                           ;Run.c: 88: if (Local_Key_User.key_state[2-1] == KEY_short) RS485_SendBuff[RS485_Num] --
      +                           ;
  4858  001508  0444               	decf	_Local_Key_User+14,w,c	;volatile
  4859  00150A  A4D8               	btfss	status,2,c
  4860  00150C  D00A               	goto	i2l2557
  4861  00150E  5033               	movf	_RS485_Num,w,c
  4862  001510  0D01               	mullw	1
  4863  001512  0E87               	movlw	low _RS485_SendBuff
  4864  001514  24F3               	addwf	prodl,w,c
  4865  001516  6ED9               	movwf	fsr2l,c
  4866  001518  0E00               	movlw	high _RS485_SendBuff
  4867  00151A  20F4               	addwfc	prodh,w,c
  4868  00151C  6EDA               	movwf	fsr2h,c
  4869  00151E  06DF               	decf	indf2,f,c
  4870  001520  D000               	goto	i2l2557
  4871  001522                     i2l2557:
  4872                           
  4873                           ;Run.c: 89: if (Local_Key_User.key_state[2-1] == KEY_hold) RS485_SendBuff[RS485_Num] -- 
      +                          ;
  4874  001522  0E03               	movlw	3
  4875  001524  1844               	xorwf	_Local_Key_User+14,w,c	;volatile
  4876  001526  A4D8               	btfss	status,2,c
  4877  001528  D00A               	goto	i2l2561
  4878  00152A  5033               	movf	_RS485_Num,w,c
  4879  00152C  0D01               	mullw	1
  4880  00152E  0E87               	movlw	low _RS485_SendBuff
  4881  001530  24F3               	addwf	prodl,w,c
  4882  001532  6ED9               	movwf	fsr2l,c
  4883  001534  0E00               	movlw	high _RS485_SendBuff
  4884  001536  20F4               	addwfc	prodh,w,c
  4885  001538  6EDA               	movwf	fsr2h,c
  4886  00153A  06DF               	decf	indf2,f,c
  4887  00153C  D000               	goto	i2l2561
  4888  00153E                     i2l2561:
  4889                           
  4890                           ;Run.c: 94: if (Local_Key_User.key_state[1-1] == KEY_short) Handle_Switch.Usart_OneDate 
      +                          = 1 ;
  4891  00153E  0443               	decf	_Local_Key_User+13,w,c	;volatile
  4892  001540  A4D8               	btfss	status,2,c
  4893  001542  D004               	goto	i2l2565
  4894  001544  0E01               	movlw	1
  4895  001546  0100               	movlb	0	; () banked
  4896  001548  6F6C               	movwf	(_Handle_Switch+2)& (0+255),b
  4897  00154A  D000               	goto	i2l2565
  4898  00154C                     i2l2565:
  4899                           
  4900                           ;Run.c: 96: g_Addr = g_Addr%4 + 4;
  4901  00154C  5035               	movf	_g_Addr,w,c
  4902  00154E  0B03               	andlw	3
  4903  001550  0F04               	addlw	4
  4904  001552  6E35               	movwf	_g_Addr,c
  4905                           
  4906                           ;Run.c: 98: Key_FSM_Reset();
  4907  001554  ECF5  F00D         	call	_Key_FSM_Reset	;wreg free
  4908  001558  0012               	return		;funcret
  4909  00155A                     __end_of_Manage_Message:
  4910                           	opt stack 0
  4911                           pclatu	equ	0xFFB
  4912                           pclath	equ	0xFFA
  4913                           tblptru	equ	0xFF8
  4914                           tblptrh	equ	0xFF7
  4915                           tblptrl	equ	0xFF6
  4916                           tablat	equ	0xFF5
  4917                           prodh	equ	0xFF4
  4918                           prodl	equ	0xFF3
  4919                           intcon	equ	0xFF2
  4920                           postinc0	equ	0xFEE
  4921                           fsr0h	equ	0xFEA
  4922                           fsr0l	equ	0xFE9
  4923                           wreg	equ	0xFE8
  4924                           indf1	equ	0xFE7
  4925                           fsr1h	equ	0xFE2
  4926                           fsr1l	equ	0xFE1
  4927                           indf2	equ	0xFDF
  4928                           fsr2h	equ	0xFDA
  4929                           fsr2l	equ	0xFD9
  4930                           status	equ	0xFD8
  4931                           
  4932 ;; *************** function ___lbmod *****************
  4933 ;; Defined at:
  4934 ;;		line 4 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbmod.c"
  4935 ;; Parameters:    Size  Location     Type
  4936 ;;  dividend        1    wreg     unsigned char 
  4937 ;;  divisor         1    0[COMRAM] unsigned char 
  4938 ;; Auto vars:     Size  Location     Type
  4939 ;;  dividend        1    1[COMRAM] unsigned char 
  4940 ;;  rem             1    3[COMRAM] unsigned char 
  4941 ;;  counter         1    2[COMRAM] unsigned char 
  4942 ;; Return value:  Size  Location     Type
  4943 ;;                  1    wreg      unsigned char 
  4944 ;; Registers used:
  4945 ;;		wreg, status,2, status,0
  4946 ;; Tracked objects:
  4947 ;;		On entry : 0/0
  4948 ;;		On exit  : 0/0
  4949 ;;		Unchanged: 0/0
  4950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4951 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4952 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4954 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4955 ;;Total ram usage:        4 bytes
  4956 ;; Hardware stack levels used:    1
  4957 ;; This function calls:
  4958 ;;		Nothing
  4959 ;; This function is called by:
  4960 ;;		_Manage_Message
  4961 ;; This function uses a non-reentrant model
  4962 ;;
  4963                           
  4964                           	psect	text36
  4965  001D56                     __ptext36:
  4966                           	opt stack 0
  4967  001D56                     ___lbmod:
  4968                           	opt stack 23
  4969                           
  4970                           ;incstack = 0
  4971                           ;___lbmod@dividend stored from wreg
  4972  001D56  6E02               	movwf	___lbmod@dividend,c
  4973  001D58  0E08               	movlw	8
  4974  001D5A  6E03               	movwf	___lbmod@counter,c
  4975  001D5C  0E00               	movlw	0
  4976  001D5E  6E04               	movwf	___lbmod@rem,c
  4977  001D60  D000               	goto	i2l2363
  4978  001D62                     i2l2363:
  4979  001D62  90D8               	bcf	status,0,c
  4980  001D64  3402               	rlcf	___lbmod@dividend,w,c
  4981  001D66  3404               	rlcf	___lbmod@rem,w,c
  4982  001D68  6E04               	movwf	___lbmod@rem,c
  4983  001D6A  90D8               	bcf	status,0,c
  4984  001D6C  3602               	rlcf	___lbmod@dividend,f,c
  4985  001D6E  5001               	movf	___lbmod@divisor,w,c
  4986  001D70  5C04               	subwf	___lbmod@rem,w,c
  4987  001D72  A0D8               	btfss	status,0,c
  4988  001D74  D003               	goto	i2l2371
  4989  001D76  5001               	movf	___lbmod@divisor,w,c
  4990  001D78  5E04               	subwf	___lbmod@rem,f,c
  4991  001D7A  D000               	goto	i2l2371
  4992  001D7C                     i2l2371:
  4993  001D7C  2E03               	decfsz	___lbmod@counter,f,c
  4994  001D7E  D7F1               	goto	i2l2363
  4995  001D80  D000               	goto	i2l2373
  4996  001D82                     i2l2373:
  4997  001D82  5004               	movf	___lbmod@rem,w,c
  4998  001D84  0012               	return	
  4999  001D86  0012               	return		;funcret
  5000  001D88                     __end_of___lbmod:
  5001                           	opt stack 0
  5002                           pclatu	equ	0xFFB
  5003                           pclath	equ	0xFFA
  5004                           tblptru	equ	0xFF8
  5005                           tblptrh	equ	0xFF7
  5006                           tblptrl	equ	0xFF6
  5007                           tablat	equ	0xFF5
  5008                           prodh	equ	0xFF4
  5009                           prodl	equ	0xFF3
  5010                           intcon	equ	0xFF2
  5011                           postinc0	equ	0xFEE
  5012                           fsr0h	equ	0xFEA
  5013                           fsr0l	equ	0xFE9
  5014                           wreg	equ	0xFE8
  5015                           indf1	equ	0xFE7
  5016                           fsr1h	equ	0xFE2
  5017                           fsr1l	equ	0xFE1
  5018                           indf2	equ	0xFDF
  5019                           fsr2h	equ	0xFDA
  5020                           fsr2l	equ	0xFD9
  5021                           status	equ	0xFD8
  5022                           
  5023 ;; *************** function _Key_FSM_Reset *****************
  5024 ;; Defined at:
  5025 ;;		line 148 in file "_01_USER/Key.c"
  5026 ;; Parameters:    Size  Location     Type
  5027 ;;		None
  5028 ;; Auto vars:     Size  Location     Type
  5029 ;;  t               1    0[COMRAM] unsigned char 
  5030 ;; Return value:  Size  Location     Type
  5031 ;;		None               void
  5032 ;; Registers used:
  5033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5034 ;; Tracked objects:
  5035 ;;		On entry : 0/0
  5036 ;;		On exit  : 0/0
  5037 ;;		Unchanged: 0/0
  5038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5040 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5042 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5043 ;;Total ram usage:        1 bytes
  5044 ;; Hardware stack levels used:    1
  5045 ;; This function calls:
  5046 ;;		Nothing
  5047 ;; This function is called by:
  5048 ;;		_Manage_Message
  5049 ;; This function uses a non-reentrant model
  5050 ;;
  5051                           
  5052                           	psect	text37
  5053  001BEA                     __ptext37:
  5054                           	opt stack 0
  5055  001BEA                     _Key_FSM_Reset:
  5056                           	opt stack 23
  5057                           
  5058                           ;Key.c: 150: unsigned char t;
  5059                           ;Key.c: 151: Local_Key_User.key_BUS = 0x00;
  5060                           
  5061                           ;incstack = 0
  5062  001BEA  0E00               	movlw	0
  5063  001BEC  6E36               	movwf	_Local_Key_User,c	;volatile
  5064                           
  5065                           ;Key.c: 152: Local_Key_User.key_group = KEY_default;
  5066  001BEE  0E00               	movlw	0
  5067  001BF0  6E37               	movwf	_Local_Key_User+1,c	;volatile
  5068                           
  5069                           ;Key.c: 153: t=4;
  5070  001BF2  0E04               	movlw	4
  5071  001BF4  6E01               	movwf	Key_FSM_Reset@t,c
  5072                           
  5073                           ;Key.c: 154: while(t--) Local_Key_User.key_count[t] = 0,
  5074  001BF6  D017               	goto	i2l2243
  5075  001BF8                     i2l2241:
  5076                           
  5077                           ;Key.c: 155: Local_Key_User.key_state[t] = KEY_default;
  5078  001BF8  5001               	movf	Key_FSM_Reset@t,w,c
  5079  001BFA  0D02               	mullw	2
  5080  001BFC  0E39               	movlw	low (_Local_Key_User+3)
  5081  001BFE  24F3               	addwf	prodl,w,c
  5082  001C00  6ED9               	movwf	fsr2l,c
  5083  001C02  0E00               	movlw	high (_Local_Key_User+3)
  5084  001C04  20F4               	addwfc	prodh,w,c
  5085  001C06  6EDA               	movwf	fsr2h,c
  5086  001C08  0E00               	movlw	0
  5087  001C0A  6EDE               	movwf	postinc2,c
  5088  001C0C  0E00               	movlw	0
  5089  001C0E  6EDD               	movwf	postdec2,c
  5090  001C10  5001               	movf	Key_FSM_Reset@t,w,c
  5091  001C12  0D01               	mullw	1
  5092  001C14  0E43               	movlw	low (_Local_Key_User+13)
  5093  001C16  24F3               	addwf	prodl,w,c
  5094  001C18  6ED9               	movwf	fsr2l,c
  5095  001C1A  0E00               	movlw	high (_Local_Key_User+13)
  5096  001C1C  20F4               	addwfc	prodh,w,c
  5097  001C1E  6EDA               	movwf	fsr2h,c
  5098  001C20  0E00               	movlw	0
  5099  001C22  6EDF               	movwf	indf2,c
  5100  001C24  D000               	goto	i2l2243
  5101  001C26                     i2l2243:
  5102  001C26  0601               	decf	Key_FSM_Reset@t,f,c
  5103  001C28  2801               	incf	Key_FSM_Reset@t,w,c
  5104  001C2A  A4D8               	btfss	status,2,c
  5105  001C2C  D7E5               	goto	i2l2241
  5106  001C2E  0012               	return		;funcret
  5107  001C30                     __end_of_Key_FSM_Reset:
  5108                           	opt stack 0
  5109                           pclatu	equ	0xFFB
  5110                           pclath	equ	0xFFA
  5111                           tblptru	equ	0xFF8
  5112                           tblptrh	equ	0xFF7
  5113                           tblptrl	equ	0xFF6
  5114                           tablat	equ	0xFF5
  5115                           prodh	equ	0xFF4
  5116                           prodl	equ	0xFF3
  5117                           intcon	equ	0xFF2
  5118                           postinc0	equ	0xFEE
  5119                           fsr0h	equ	0xFEA
  5120                           fsr0l	equ	0xFE9
  5121                           wreg	equ	0xFE8
  5122                           indf1	equ	0xFE7
  5123                           fsr1h	equ	0xFE2
  5124                           fsr1l	equ	0xFE1
  5125                           indf2	equ	0xFDF
  5126                           postinc2	equ	0xFDE
  5127                           postdec2	equ	0xFDD
  5128                           fsr2h	equ	0xFDA
  5129                           fsr2l	equ	0xFD9
  5130                           status	equ	0xFD8
  5131                           
  5132 ;; *************** function _Key_FSM_Read *****************
  5133 ;; Defined at:
  5134 ;;		line 98 in file "_01_USER/Key.c"
  5135 ;; Parameters:    Size  Location     Type
  5136 ;;		None
  5137 ;; Auto vars:     Size  Location     Type
  5138 ;;  key_num         1    5[COMRAM] unsigned char 
  5139 ;;  key_num_mate    1    4[COMRAM] unsigned char 
  5140 ;; Return value:  Size  Location     Type
  5141 ;;		None               void
  5142 ;; Registers used:
  5143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5144 ;; Tracked objects:
  5145 ;;		On entry : 0/0
  5146 ;;		On exit  : 0/0
  5147 ;;		Unchanged: 0/0
  5148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5150 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5151 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5152 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5153 ;;Total ram usage:        6 bytes
  5154 ;; Hardware stack levels used:    1
  5155 ;; This function calls:
  5156 ;;		Nothing
  5157 ;; This function is called by:
  5158 ;;		_Manage_Message
  5159 ;; This function uses a non-reentrant model
  5160 ;;
  5161                           
  5162                           	psect	text38
  5163  001012                     __ptext38:
  5164                           	opt stack 0
  5165  001012                     _Key_FSM_Read:
  5166                           	opt stack 23
  5167                           
  5168                           ;Key.c: 100: unsigned char key_num = 5,key_num_mate;
  5169                           
  5170                           ;incstack = 0
  5171  001012  0E05               	movlw	5
  5172  001014  6E06               	movwf	Key_FSM_Read@key_num,c
  5173                           
  5174                           ;Key.c: 103: while(key_num--)
  5175  001016  D072               	goto	i2l2211
  5176  001018                     i2l2193:
  5177                           
  5178                           ;Key.c: 104: {
  5179                           ;Key.c: 106: if( Local_Key_FSM.key_BUS == 0x00 )
  5180  001018  0100               	movlb	0	; () banked
  5181  00101A  5175               	movf	_Local_Key_FSM& (0+255),w,b	;volatile
  5182  00101C  A4D8               	btfss	status,2,c
  5183  00101E  D04A               	goto	i2l2205
  5184                           
  5185                           ; BSR set to: 0
  5186                           ;Key.c: 107: {
  5187                           ;Key.c: 108: if( Local_Key_FSM.key_count[key_num] > 5 )
  5188  001020  5006               	movf	Key_FSM_Read@key_num,w,c
  5189  001022  0D02               	mullw	2
  5190  001024  0E78               	movlw	low (_Local_Key_FSM+3)
  5191  001026  24F3               	addwf	prodl,w,c
  5192  001028  6ED9               	movwf	fsr2l,c
  5193  00102A  0E00               	movlw	high (_Local_Key_FSM+3)
  5194  00102C  20F4               	addwfc	prodh,w,c
  5195  00102E  6EDA               	movwf	fsr2h,c
  5196  001030  0E01               	movlw	1
  5197  001032  50DB               	movf	plusw2,w,c
  5198  001034  E104               	bnz	i2u172_40
  5199  001036  0E06               	movlw	6
  5200  001038  5CDE               	subwf	postinc2,w,c
  5201  00103A  A0D8               	btfss	status,0,c
  5202  00103C  D024               	goto	i2l2203
  5203  00103E                     i2u172_40:
  5204                           
  5205                           ; BSR set to: 0
  5206                           ;Key.c: 109: {
  5207                           ;Key.c: 110: if( Local_Key_FSM.key_count[key_num] > 60 )
  5208  00103E  5006               	movf	Key_FSM_Read@key_num,w,c
  5209  001040  0D02               	mullw	2
  5210  001042  0E78               	movlw	low (_Local_Key_FSM+3)
  5211  001044  24F3               	addwf	prodl,w,c
  5212  001046  6ED9               	movwf	fsr2l,c
  5213  001048  0E00               	movlw	high (_Local_Key_FSM+3)
  5214  00104A  20F4               	addwfc	prodh,w,c
  5215  00104C  6EDA               	movwf	fsr2h,c
  5216  00104E  0E01               	movlw	1
  5217  001050  50DB               	movf	plusw2,w,c
  5218  001052  E104               	bnz	i2u173_40
  5219  001054  0E3D               	movlw	61
  5220  001056  5CDE               	subwf	postinc2,w,c
  5221  001058  A0D8               	btfss	status,0,c
  5222  00105A  D00A               	goto	i2l2201
  5223  00105C                     i2u173_40:
  5224                           
  5225                           ; BSR set to: 0
  5226                           ;Key.c: 111: Local_Key_User.key_state[key_num] = KEY_long;
  5227  00105C  5006               	movf	Key_FSM_Read@key_num,w,c
  5228  00105E  0D01               	mullw	1
  5229  001060  0E43               	movlw	low (_Local_Key_User+13)
  5230  001062  24F3               	addwf	prodl,w,c
  5231  001064  6ED9               	movwf	fsr2l,c
  5232  001066  0E00               	movlw	high (_Local_Key_User+13)
  5233  001068  20F4               	addwfc	prodh,w,c
  5234  00106A  6EDA               	movwf	fsr2h,c
  5235  00106C  0E05               	movlw	5
  5236  00106E  D014               	goto	L3
  5237  001070                     i2l2201:
  5238                           
  5239                           ; BSR set to: 0
  5240                           ;Key.c: 112: else Local_Key_User.key_state[key_num] = KEY_short;
  5241  001070  5006               	movf	Key_FSM_Read@key_num,w,c
  5242  001072  0D01               	mullw	1
  5243  001074  0E43               	movlw	low (_Local_Key_User+13)
  5244  001076  24F3               	addwf	prodl,w,c
  5245  001078  6ED9               	movwf	fsr2l,c
  5246  00107A  0E00               	movlw	high (_Local_Key_User+13)
  5247  00107C  20F4               	addwfc	prodh,w,c
  5248  00107E  6EDA               	movwf	fsr2h,c
  5249  001080  0E01               	movlw	1
  5250  001082  6EDF               	movwf	indf2,c
  5251                           
  5252                           ; BSR set to: 0
  5253                           ;Key.c: 113: }
  5254  001084  D00A               	goto	i2l111
  5255  001086                     i2l2203:
  5256                           
  5257                           ; BSR set to: 0
  5258                           ;Key.c: 114: else Local_Key_User.key_state[key_num] = KEY_default;
  5259  001086  5006               	movf	Key_FSM_Read@key_num,w,c
  5260  001088  0D01               	mullw	1
  5261  00108A  0E43               	movlw	low (_Local_Key_User+13)
  5262  00108C  24F3               	addwf	prodl,w,c
  5263  00108E  6ED9               	movwf	fsr2l,c
  5264  001090  0E00               	movlw	high (_Local_Key_User+13)
  5265  001092  20F4               	addwfc	prodh,w,c
  5266  001094  6EDA               	movwf	fsr2h,c
  5267  001096  0E00               	movlw	0
  5268  001098                     L3:
  5269  001098  6EDF               	movwf	indf2,c
  5270  00109A                     i2l111:
  5271                           
  5272                           ; BSR set to: 0
  5273                           ;Key.c: 115: Local_Key_FSM.key_count[key_num] = 0;
  5274  00109A  5006               	movf	Key_FSM_Read@key_num,w,c
  5275  00109C  0D02               	mullw	2
  5276  00109E  0E78               	movlw	low (_Local_Key_FSM+3)
  5277  0010A0  24F3               	addwf	prodl,w,c
  5278  0010A2  6ED9               	movwf	fsr2l,c
  5279  0010A4  0E00               	movlw	high (_Local_Key_FSM+3)
  5280  0010A6  20F4               	addwfc	prodh,w,c
  5281  0010A8  6EDA               	movwf	fsr2h,c
  5282  0010AA  0E00               	movlw	0
  5283  0010AC  6EDE               	movwf	postinc2,c
  5284  0010AE  0E00               	movlw	0
  5285  0010B0  6EDD               	movwf	postdec2,c
  5286                           
  5287                           ;Key.c: 116: }
  5288  0010B2  D024               	goto	i2l2211
  5289  0010B4                     i2l2205:
  5290                           
  5291                           ; BSR set to: 0
  5292                           ;Key.c: 118: else if( Local_Key_FSM.key_count[key_num] > 60 )
  5293  0010B4  5006               	movf	Key_FSM_Read@key_num,w,c
  5294  0010B6  0D02               	mullw	2
  5295  0010B8  0E78               	movlw	low (_Local_Key_FSM+3)
  5296  0010BA  24F3               	addwf	prodl,w,c
  5297  0010BC  6ED9               	movwf	fsr2l,c
  5298  0010BE  0E00               	movlw	high (_Local_Key_FSM+3)
  5299  0010C0  20F4               	addwfc	prodh,w,c
  5300  0010C2  6EDA               	movwf	fsr2h,c
  5301  0010C4  0E01               	movlw	1
  5302  0010C6  50DB               	movf	plusw2,w,c
  5303  0010C8  E104               	bnz	i2u174_40
  5304  0010CA  0E3D               	movlw	61
  5305  0010CC  5CDE               	subwf	postinc2,w,c
  5306  0010CE  A0D8               	btfss	status,0,c
  5307  0010D0  D00A               	goto	i2l2209
  5308  0010D2                     i2u174_40:
  5309                           
  5310                           ; BSR set to: 0
  5311                           ;Key.c: 119: Local_Key_User.key_state[key_num] = KEY_hold;
  5312  0010D2  5006               	movf	Key_FSM_Read@key_num,w,c
  5313  0010D4  0D01               	mullw	1
  5314  0010D6  0E43               	movlw	low (_Local_Key_User+13)
  5315  0010D8  24F3               	addwf	prodl,w,c
  5316  0010DA  6ED9               	movwf	fsr2l,c
  5317  0010DC  0E00               	movlw	high (_Local_Key_User+13)
  5318  0010DE  20F4               	addwfc	prodh,w,c
  5319  0010E0  6EDA               	movwf	fsr2h,c
  5320  0010E2  0E03               	movlw	3
  5321  0010E4  D009               	goto	L4
  5322  0010E6                     i2l2209:
  5323                           
  5324                           ; BSR set to: 0
  5325                           ;Key.c: 122: else Local_Key_User.key_state[key_num] = KEY_busy;
  5326  0010E6  5006               	movf	Key_FSM_Read@key_num,w,c
  5327  0010E8  0D01               	mullw	1
  5328  0010EA  0E43               	movlw	low (_Local_Key_User+13)
  5329  0010EC  24F3               	addwf	prodl,w,c
  5330  0010EE  6ED9               	movwf	fsr2l,c
  5331  0010F0  0E00               	movlw	high (_Local_Key_User+13)
  5332  0010F2  20F4               	addwfc	prodh,w,c
  5333  0010F4  6EDA               	movwf	fsr2h,c
  5334  0010F6  0E04               	movlw	4
  5335  0010F8                     L4:
  5336  0010F8  6EDF               	movwf	indf2,c
  5337                           
  5338                           ; BSR set to: 0
  5339                           
  5340                           ; BSR set to: 0
  5341  0010FA  D000               	goto	i2l2211
  5342  0010FC                     i2l2211:
  5343  0010FC  0606               	decf	Key_FSM_Read@key_num,f,c
  5344  0010FE  2806               	incf	Key_FSM_Read@key_num,w,c
  5345  001100  A4D8               	btfss	status,2,c
  5346  001102  D78A               	goto	i2l2193
  5347                           
  5348                           ;Key.c: 123: }
  5349                           ;Key.c: 127: for( key_num = 0;key_num < 5 - 1; key_num ++)
  5350  001104  0E00               	movlw	0
  5351  001106  6E06               	movwf	Key_FSM_Read@key_num,c
  5352  001108  0E03               	movlw	3
  5353  00110A  6406               	cpfsgt	Key_FSM_Read@key_num,c
  5354  00110C  D002               	goto	i2l2219
  5355  00110E  0012               	return	
  5356  001110  0012               	return	
  5357  001112                     i2l2219:
  5358                           
  5359                           ;Key.c: 128: for( key_num_mate = key_num+1;key_num_mate < 5 ; key_num_mate ++)
  5360  001112  2806               	incf	Key_FSM_Read@key_num,w,c
  5361  001114  6E05               	movwf	Key_FSM_Read@key_num_mate,c
  5362  001116  0E04               	movlw	4
  5363  001118  6405               	cpfsgt	Key_FSM_Read@key_num_mate,c
  5364  00111A  D001               	goto	i2l2223
  5365  00111C  D043               	goto	i2l2235
  5366  00111E                     i2l2223:
  5367                           
  5368                           ;Key.c: 129: if( Local_Key_User.key_state[key_num] == Local_Key_User.key_state[key_num_m
      +                          ate] )
  5369  00111E  5005               	movf	Key_FSM_Read@key_num_mate,w,c
  5370  001120  0D01               	mullw	1
  5371  001122  0E43               	movlw	low (_Local_Key_User+13)
  5372  001124  24F3               	addwf	prodl,w,c
  5373  001126  6ED9               	movwf	fsr2l,c
  5374  001128  0E00               	movlw	high (_Local_Key_User+13)
  5375  00112A  20F4               	addwfc	prodh,w,c
  5376  00112C  6EDA               	movwf	fsr2h,c
  5377  00112E  5006               	movf	Key_FSM_Read@key_num,w,c
  5378  001130  0D01               	mullw	1
  5379  001132  0E43               	movlw	low (_Local_Key_User+13)
  5380  001134  24F3               	addwf	prodl,w,c
  5381  001136  6EE1               	movwf	fsr1l,c
  5382  001138  0E00               	movlw	high (_Local_Key_User+13)
  5383  00113A  20F4               	addwfc	prodh,w,c
  5384  00113C  6EE2               	movwf	fsr1h,c
  5385  00113E  50DE               	movf	postinc2,w,c
  5386  001140  18E6               	xorwf	postinc1,w,c
  5387  001142  A4D8               	btfss	status,2,c
  5388  001144  D02D               	goto	i2l2231
  5389                           
  5390                           ;Key.c: 130: if(Local_Key_User.key_state[key_num] != KEY_default)
  5391  001146  5006               	movf	Key_FSM_Read@key_num,w,c
  5392  001148  0D01               	mullw	1
  5393  00114A  0E43               	movlw	low (_Local_Key_User+13)
  5394  00114C  24F3               	addwf	prodl,w,c
  5395  00114E  6ED9               	movwf	fsr2l,c
  5396  001150  0E00               	movlw	high (_Local_Key_User+13)
  5397  001152  20F4               	addwfc	prodh,w,c
  5398  001154  6EDA               	movwf	fsr2h,c
  5399  001156  50DF               	movf	indf2,w,c
  5400  001158  B4D8               	btfsc	status,2,c
  5401  00115A  D022               	goto	i2l2231
  5402                           
  5403                           ;Key.c: 131: {
  5404                           ;Key.c: 132: Local_Key_User.key_group = (0x01 << key_num)|(0x01 << key_num_mate);
  5405  00115C  C005  F001         	movff	Key_FSM_Read@key_num_mate,??_Key_FSM_Read
  5406  001160  0E01               	movlw	1
  5407  001162  6E02               	movwf	(??_Key_FSM_Read+1)& (0+255),c
  5408  001164  2A01               	incf	??_Key_FSM_Read,f,c
  5409  001166  D002               	goto	i2u180_44
  5410  001168                     i2u180_45:
  5411  001168  90D8               	bcf	status,0,c
  5412  00116A  3602               	rlcf	??_Key_FSM_Read+1,f,c
  5413  00116C                     i2u180_44:
  5414  00116C  2E01               	decfsz	??_Key_FSM_Read,f,c
  5415  00116E  D7FC               	goto	i2u180_45
  5416  001170  C006  F003         	movff	Key_FSM_Read@key_num,??_Key_FSM_Read+2
  5417  001174  0E01               	movlw	1
  5418  001176  6E04               	movwf	(??_Key_FSM_Read+3)& (0+255),c
  5419  001178  2A03               	incf	??_Key_FSM_Read+2,f,c
  5420  00117A  D002               	goto	i2u181_44
  5421  00117C                     i2u181_45:
  5422  00117C  90D8               	bcf	status,0,c
  5423  00117E  3604               	rlcf	??_Key_FSM_Read+3,f,c
  5424  001180                     i2u181_44:
  5425  001180  2E03               	decfsz	??_Key_FSM_Read+2,f,c
  5426  001182  D7FC               	goto	i2u181_45
  5427  001184  5004               	movf	??_Key_FSM_Read+3,w,c
  5428  001186  1002               	iorwf	??_Key_FSM_Read+1,w,c
  5429  001188  6E37               	movwf	_Local_Key_User+1,c	;volatile
  5430                           
  5431                           ;Key.c: 133: Local_Key_User.key_group_state = Local_Key_User.key_state[key_num];
  5432  00118A  5006               	movf	Key_FSM_Read@key_num,w,c
  5433  00118C  0D01               	mullw	1
  5434  00118E  0E43               	movlw	low (_Local_Key_User+13)
  5435  001190  24F3               	addwf	prodl,w,c
  5436  001192  6ED9               	movwf	fsr2l,c
  5437  001194  0E00               	movlw	high (_Local_Key_User+13)
  5438  001196  20F4               	addwfc	prodh,w,c
  5439  001198  6EDA               	movwf	fsr2h,c
  5440  00119A  50DF               	movf	indf2,w,c
  5441  00119C  6E38               	movwf	_Local_Key_User+2,c	;volatile
  5442  00119E  D000               	goto	i2l2231
  5443  0011A0                     i2l2231:
  5444  0011A0  2A05               	incf	Key_FSM_Read@key_num_mate,f,c
  5445  0011A2  D7B9               	goto	L5
  5446  0011A4                     i2l2235:
  5447  0011A4  2A06               	incf	Key_FSM_Read@key_num,f,c
  5448  0011A6  0E03               	movlw	3
  5449  0011A8  6406               	cpfsgt	Key_FSM_Read@key_num,c
  5450  0011AA  D7B3               	goto	i2l2219
  5451  0011AC  0012               	return	
  5452  0011AE  0012               	return		;funcret
  5453  0011B0                     __end_of_Key_FSM_Read:
  5454                           	opt stack 0
  5455                           pclatu	equ	0xFFB
  5456                           pclath	equ	0xFFA
  5457                           tblptru	equ	0xFF8
  5458                           tblptrh	equ	0xFF7
  5459                           tblptrl	equ	0xFF6
  5460                           tablat	equ	0xFF5
  5461                           prodh	equ	0xFF4
  5462                           prodl	equ	0xFF3
  5463                           intcon	equ	0xFF2
  5464                           postinc0	equ	0xFEE
  5465                           fsr0h	equ	0xFEA
  5466                           fsr0l	equ	0xFE9
  5467                           wreg	equ	0xFE8
  5468                           indf1	equ	0xFE7
  5469                           postinc1	equ	0xFE6
  5470                           fsr1h	equ	0xFE2
  5471                           fsr1l	equ	0xFE1
  5472                           indf2	equ	0xFDF
  5473                           postinc2	equ	0xFDE
  5474                           postdec2	equ	0xFDD
  5475                           plusw2	equ	0xFDB
  5476                           fsr2h	equ	0xFDA
  5477                           fsr2l	equ	0xFD9
  5478                           status	equ	0xFD8
  5479                           
  5480 ;; *************** function _Key_FSM_Scan *****************
  5481 ;; Defined at:
  5482 ;;		line 77 in file "_01_USER/Key.c"
  5483 ;; Parameters:    Size  Location     Type
  5484 ;;		None
  5485 ;; Auto vars:     Size  Location     Type
  5486 ;;		None
  5487 ;; Return value:  Size  Location     Type
  5488 ;;		None               void
  5489 ;; Registers used:
  5490 ;;		wreg, status,2, status,0, cstack
  5491 ;; Tracked objects:
  5492 ;;		On entry : 0/0
  5493 ;;		On exit  : 0/0
  5494 ;;		Unchanged: 0/0
  5495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5500 ;;Total ram usage:        0 bytes
  5501 ;; Hardware stack levels used:    1
  5502 ;; Hardware stack levels required when called:    1
  5503 ;; This function calls:
  5504 ;;		_Key_Scan
  5505 ;; This function is called by:
  5506 ;;		_Sys_Cyc
  5507 ;; This function uses a non-reentrant model
  5508 ;;
  5509                           
  5510                           	psect	text39
  5511  001B9E                     __ptext39:
  5512                           	opt stack 0
  5513  001B9E                     _Key_FSM_Scan:
  5514                           	opt stack 23
  5515                           
  5516                           ;Key.c: 79: Key_Scan();
  5517                           
  5518                           ;incstack = 0
  5519  001B9E  EC72  F00E         	call	_Key_Scan	;wreg free
  5520                           
  5521                           ;Key.c: 80: if( Local_Key_FSM.key_BUS & 0x01 ) Local_Key_FSM.key_count[0]++;
  5522  001BA2  0100               	movlb	0	; () banked
  5523  001BA4  A175               	btfss	_Local_Key_FSM& (0+255),0,b	;volatile
  5524  001BA6  D004               	goto	i2l2471
  5525                           
  5526                           ; BSR set to: 0
  5527  001BA8  0100               	movlb	0	; () banked
  5528  001BAA  4B78               	infsnz	(_Local_Key_FSM+3)& (0+255),f,b	;volatile
  5529  001BAC  2B79               	incf	(_Local_Key_FSM+4)& (0+255),f,b	;volatile
  5530  001BAE  D000               	goto	i2l2471
  5531  001BB0                     i2l2471:
  5532                           
  5533                           ; BSR set to: 0
  5534                           ;Key.c: 81: if( Local_Key_FSM.key_BUS & 0x02 ) Local_Key_FSM.key_count[1]++;
  5535  001BB0  0100               	movlb	0	; () banked
  5536  001BB2  A375               	btfss	_Local_Key_FSM& (0+255),1,b	;volatile
  5537  001BB4  D004               	goto	i2l2475
  5538                           
  5539                           ; BSR set to: 0
  5540  001BB6  0100               	movlb	0	; () banked
  5541  001BB8  4B7A               	infsnz	(_Local_Key_FSM+5)& (0+255),f,b	;volatile
  5542  001BBA  2B7B               	incf	(_Local_Key_FSM+6)& (0+255),f,b	;volatile
  5543  001BBC  D000               	goto	i2l2475
  5544  001BBE                     i2l2475:
  5545                           
  5546                           ; BSR set to: 0
  5547                           ;Key.c: 82: if( Local_Key_FSM.key_BUS & 0x04 ) Local_Key_FSM.key_count[2]++;
  5548  001BBE  0100               	movlb	0	; () banked
  5549  001BC0  A575               	btfss	_Local_Key_FSM& (0+255),2,b	;volatile
  5550  001BC2  D004               	goto	i2l2479
  5551                           
  5552                           ; BSR set to: 0
  5553  001BC4  0100               	movlb	0	; () banked
  5554  001BC6  4B7C               	infsnz	(_Local_Key_FSM+7)& (0+255),f,b	;volatile
  5555  001BC8  2B7D               	incf	(_Local_Key_FSM+8)& (0+255),f,b	;volatile
  5556  001BCA  D000               	goto	i2l2479
  5557  001BCC                     i2l2479:
  5558                           
  5559                           ; BSR set to: 0
  5560                           ;Key.c: 83: if( Local_Key_FSM.key_BUS & 0x08 ) Local_Key_FSM.key_count[3]++;
  5561  001BCC  0100               	movlb	0	; () banked
  5562  001BCE  A775               	btfss	_Local_Key_FSM& (0+255),3,b	;volatile
  5563  001BD0  D004               	goto	i2l2483
  5564                           
  5565                           ; BSR set to: 0
  5566  001BD2  0100               	movlb	0	; () banked
  5567  001BD4  4B7E               	infsnz	(_Local_Key_FSM+9)& (0+255),f,b	;volatile
  5568  001BD6  2B7F               	incf	(_Local_Key_FSM+10)& (0+255),f,b	;volatile
  5569  001BD8  D000               	goto	i2l2483
  5570  001BDA                     i2l2483:
  5571                           
  5572                           ; BSR set to: 0
  5573                           ;Key.c: 84: if( Local_Key_FSM.key_BUS & 0x10 ) Local_Key_FSM.key_count[4]++;
  5574  001BDA  0100               	movlb	0	; () banked
  5575  001BDC  A975               	btfss	_Local_Key_FSM& (0+255),4,b	;volatile
  5576  001BDE  0012               	return	
  5577                           
  5578                           ; BSR set to: 0
  5579  001BE0  0100               	movlb	0	; () banked
  5580  001BE2  4B80               	infsnz	(_Local_Key_FSM+11)& (0+255),f,b	;volatile
  5581  001BE4  2B81               	incf	(_Local_Key_FSM+12)& (0+255),f,b	;volatile
  5582  001BE6  0012               	return	
  5583                           
  5584                           ; BSR set to: 0
  5585                           
  5586                           ; BSR set to: 0
  5587  001BE8  0012               	return		;funcret
  5588  001BEA                     __end_of_Key_FSM_Scan:
  5589                           	opt stack 0
  5590                           pclatu	equ	0xFFB
  5591                           pclath	equ	0xFFA
  5592                           tblptru	equ	0xFF8
  5593                           tblptrh	equ	0xFF7
  5594                           tblptrl	equ	0xFF6
  5595                           tablat	equ	0xFF5
  5596                           prodh	equ	0xFF4
  5597                           prodl	equ	0xFF3
  5598                           intcon	equ	0xFF2
  5599                           postinc0	equ	0xFEE
  5600                           fsr0h	equ	0xFEA
  5601                           fsr0l	equ	0xFE9
  5602                           wreg	equ	0xFE8
  5603                           indf1	equ	0xFE7
  5604                           postinc1	equ	0xFE6
  5605                           fsr1h	equ	0xFE2
  5606                           fsr1l	equ	0xFE1
  5607                           indf2	equ	0xFDF
  5608                           postinc2	equ	0xFDE
  5609                           postdec2	equ	0xFDD
  5610                           plusw2	equ	0xFDB
  5611                           fsr2h	equ	0xFDA
  5612                           fsr2l	equ	0xFD9
  5613                           status	equ	0xFD8
  5614                           
  5615 ;; *************** function _Key_Scan *****************
  5616 ;; Defined at:
  5617 ;;		line 55 in file "_01_USER/Key.c"
  5618 ;; Parameters:    Size  Location     Type
  5619 ;;		None
  5620 ;; Auto vars:     Size  Location     Type
  5621 ;;		None
  5622 ;; Return value:  Size  Location     Type
  5623 ;;		None               void
  5624 ;; Registers used:
  5625 ;;		wreg, status,2, status,0
  5626 ;; Tracked objects:
  5627 ;;		On entry : 0/0
  5628 ;;		On exit  : 0/0
  5629 ;;		Unchanged: 0/0
  5630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5635 ;;Total ram usage:        0 bytes
  5636 ;; Hardware stack levels used:    1
  5637 ;; This function calls:
  5638 ;;		Nothing
  5639 ;; This function is called by:
  5640 ;;		_Key_FSM_Scan
  5641 ;; This function uses a non-reentrant model
  5642 ;;
  5643                           
  5644                           	psect	text40
  5645  001CE4                     __ptext40:
  5646                           	opt stack 0
  5647  001CE4                     _Key_Scan:
  5648                           	opt stack 23
  5649                           
  5650                           ;Key.c: 58: Local_Key_FSM.key_BUS = 0x00;
  5651                           
  5652                           ; BSR set to: 0
  5653                           ;incstack = 0
  5654  001CE4  0E00               	movlw	0
  5655  001CE6  0100               	movlb	0	; () banked
  5656  001CE8  6F75               	movwf	_Local_Key_FSM& (0+255),b	;volatile
  5657                           
  5658                           ; BSR set to: 0
  5659                           ;Key.c: 60: if( RE3 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 0) ;
  5660  001CEA  B684               	btfsc	3972,3,c	;volatile
  5661  001CEC  D003               	goto	i2l2175
  5662                           
  5663                           ; BSR set to: 0
  5664  001CEE  0100               	movlb	0	; () banked
  5665  001CF0  8175               	bsf	_Local_Key_FSM& (0+255),0,b	;volatile
  5666  001CF2  D000               	goto	i2l2175
  5667  001CF4                     i2l2175:
  5668                           
  5669                           ; BSR set to: 0
  5670                           ;Key.c: 61: if( RE2 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 1) ;
  5671  001CF4  B484               	btfsc	3972,2,c	;volatile
  5672  001CF6  D003               	goto	i2l2179
  5673                           
  5674                           ; BSR set to: 0
  5675  001CF8  0100               	movlb	0	; () banked
  5676  001CFA  8375               	bsf	_Local_Key_FSM& (0+255),1,b	;volatile
  5677  001CFC  D000               	goto	i2l2179
  5678  001CFE                     i2l2179:
  5679                           
  5680                           ; BSR set to: 0
  5681                           ;Key.c: 62: if( RD6 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 2) ;
  5682  001CFE  BC83               	btfsc	3971,6,c	;volatile
  5683  001D00  D003               	goto	i2l2183
  5684                           
  5685                           ; BSR set to: 0
  5686  001D02  0100               	movlb	0	; () banked
  5687  001D04  8575               	bsf	_Local_Key_FSM& (0+255),2,b	;volatile
  5688  001D06  D000               	goto	i2l2183
  5689  001D08                     i2l2183:
  5690                           
  5691                           ; BSR set to: 0
  5692                           ;Key.c: 63: if( RE4 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 3) ;
  5693  001D08  B884               	btfsc	3972,4,c	;volatile
  5694  001D0A  D003               	goto	i2l2187
  5695                           
  5696                           ; BSR set to: 0
  5697  001D0C  0100               	movlb	0	; () banked
  5698  001D0E  8775               	bsf	_Local_Key_FSM& (0+255),3,b	;volatile
  5699  001D10  D000               	goto	i2l2187
  5700  001D12                     i2l2187:
  5701                           
  5702                           ; BSR set to: 0
  5703                           ;Key.c: 64: if( RD7 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 4) ;
  5704  001D12  BE83               	btfsc	3971,7,c	;volatile
  5705  001D14  0012               	return	
  5706                           
  5707                           ; BSR set to: 0
  5708  001D16  0100               	movlb	0	; () banked
  5709  001D18  8975               	bsf	_Local_Key_FSM& (0+255),4,b	;volatile
  5710  001D1A  0012               	return	
  5711                           
  5712                           ; BSR set to: 0
  5713                           
  5714                           ; BSR set to: 0
  5715  001D1C  0012               	return		;funcret
  5716  001D1E                     __end_of_Key_Scan:
  5717                           	opt stack 0
  5718                           pclatu	equ	0xFFB
  5719                           pclath	equ	0xFFA
  5720                           tblptru	equ	0xFF8
  5721                           tblptrh	equ	0xFF7
  5722                           tblptrl	equ	0xFF6
  5723                           tablat	equ	0xFF5
  5724                           prodh	equ	0xFF4
  5725                           prodl	equ	0xFF3
  5726                           intcon	equ	0xFF2
  5727                           postinc0	equ	0xFEE
  5728                           fsr0h	equ	0xFEA
  5729                           fsr0l	equ	0xFE9
  5730                           wreg	equ	0xFE8
  5731                           indf1	equ	0xFE7
  5732                           postinc1	equ	0xFE6
  5733                           fsr1h	equ	0xFE2
  5734                           fsr1l	equ	0xFE1
  5735                           indf2	equ	0xFDF
  5736                           postinc2	equ	0xFDE
  5737                           postdec2	equ	0xFDD
  5738                           plusw2	equ	0xFDB
  5739                           fsr2h	equ	0xFDA
  5740                           fsr2l	equ	0xFD9
  5741                           status	equ	0xFD8
  5742                           
  5743 ;; *************** function _Delay_1Khz *****************
  5744 ;; Defined at:
  5745 ;;		line 75 in file "_01_USER/My_Delay.c"
  5746 ;; Parameters:    Size  Location     Type
  5747 ;;		None
  5748 ;; Auto vars:     Size  Location     Type
  5749 ;;  c               1    2[COMRAM] unsigned char 
  5750 ;;  b               1    1[COMRAM] unsigned char 
  5751 ;;  a               1    0[COMRAM] unsigned char 
  5752 ;; Return value:  Size  Location     Type
  5753 ;;		None               void
  5754 ;; Registers used:
  5755 ;;		wreg, status,2, status,0
  5756 ;; Tracked objects:
  5757 ;;		On entry : 0/0
  5758 ;;		On exit  : 0/0
  5759 ;;		Unchanged: 0/0
  5760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5762 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5764 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5765 ;;Total ram usage:        3 bytes
  5766 ;; Hardware stack levels used:    1
  5767 ;; This function calls:
  5768 ;;		Nothing
  5769 ;; This function is called by:
  5770 ;;		_Sys_Cyc
  5771 ;; This function uses a non-reentrant model
  5772 ;;
  5773                           
  5774                           	psect	text41
  5775  001D1E                     __ptext41:
  5776                           	opt stack 0
  5777  001D1E                     _Delay_1Khz:
  5778                           	opt stack 24
  5779                           
  5780                           ;My_Delay.c: 77: unsigned char a,b,c;
  5781                           ;My_Delay.c: 78: for(c=1;c>0;c--)
  5782                           
  5783                           ; BSR set to: 0
  5784                           ;incstack = 0
  5785  001D1E  0E01               	movlw	1
  5786  001D20  6E03               	movwf	Delay_1Khz@c,c
  5787  001D22  5003               	movf	Delay_1Khz@c,w,c
  5788  001D24  B4D8               	btfsc	status,2,c
  5789  001D26  0012               	return	
  5790  001D28  D001               	goto	i2l2445
  5791  001D2A  0012               	return	
  5792  001D2C                     i2l2445:
  5793                           
  5794                           ;My_Delay.c: 79: for(b=32;b>0;b--)
  5795  001D2C  0E20               	movlw	32
  5796  001D2E  6E02               	movwf	Delay_1Khz@b,c
  5797  001D30  5002               	movf	Delay_1Khz@b,w,c
  5798  001D32  B4D8               	btfsc	status,2,c
  5799  001D34  D00D               	goto	i2l2461
  5800  001D36  D001               	goto	i2l2449
  5801  001D38  D00B               	goto	i2l2461
  5802  001D3A                     i2l2449:
  5803                           
  5804                           ;My_Delay.c: 80: for(a=2;a>0;a--);
  5805  001D3A  0E02               	movlw	2
  5806  001D3C  6E01               	movwf	Delay_1Khz@a,c
  5807  001D3E  5001               	movf	Delay_1Khz@a,w,c
  5808  001D40  B4D8               	btfsc	status,2,c
  5809  001D42  D004               	goto	i2l2457
  5810  001D44  D001               	goto	i2l2453
  5811  001D46  D002               	goto	i2l2457
  5812  001D48                     i2l2453:
  5813  001D48  0601               	decf	Delay_1Khz@a,f,c
  5814  001D4A  D7F9               	goto	L6
  5815  001D4C                     i2l2457:
  5816  001D4C  0602               	decf	Delay_1Khz@b,f,c
  5817  001D4E  D7F0               	goto	L7
  5818  001D50                     i2l2461:
  5819  001D50  0603               	decf	Delay_1Khz@c,f,c
  5820  001D52  D7E7               	goto	L8
  5821  001D54  0012               	return		;funcret
  5822  001D56                     __end_of_Delay_1Khz:
  5823                           	opt stack 0
  5824                           pclatu	equ	0xFFB
  5825                           pclath	equ	0xFFA
  5826                           tblptru	equ	0xFF8
  5827                           tblptrh	equ	0xFF7
  5828                           tblptrl	equ	0xFF6
  5829                           tablat	equ	0xFF5
  5830                           prodh	equ	0xFF4
  5831                           prodl	equ	0xFF3
  5832                           intcon	equ	0xFF2
  5833                           postinc0	equ	0xFEE
  5834                           fsr0h	equ	0xFEA
  5835                           fsr0l	equ	0xFE9
  5836                           wreg	equ	0xFE8
  5837                           indf1	equ	0xFE7
  5838                           postinc1	equ	0xFE6
  5839                           fsr1h	equ	0xFE2
  5840                           fsr1l	equ	0xFE1
  5841                           indf2	equ	0xFDF
  5842                           postinc2	equ	0xFDE
  5843                           postdec2	equ	0xFDD
  5844                           plusw2	equ	0xFDB
  5845                           fsr2h	equ	0xFDA
  5846                           fsr2l	equ	0xFD9
  5847                           status	equ	0xFD8
  5848                           pclatu	equ	0xFFB
  5849                           pclath	equ	0xFFA
  5850                           tblptru	equ	0xFF8
  5851                           tblptrh	equ	0xFF7
  5852                           tblptrl	equ	0xFF6
  5853                           tablat	equ	0xFF5
  5854                           prodh	equ	0xFF4
  5855                           prodl	equ	0xFF3
  5856                           intcon	equ	0xFF2
  5857                           postinc0	equ	0xFEE
  5858                           fsr0h	equ	0xFEA
  5859                           fsr0l	equ	0xFE9
  5860                           wreg	equ	0xFE8
  5861                           indf1	equ	0xFE7
  5862                           postinc1	equ	0xFE6
  5863                           fsr1h	equ	0xFE2
  5864                           fsr1l	equ	0xFE1
  5865                           indf2	equ	0xFDF
  5866                           postinc2	equ	0xFDE
  5867                           postdec2	equ	0xFDD
  5868                           plusw2	equ	0xFDB
  5869                           fsr2h	equ	0xFDA
  5870                           fsr2l	equ	0xFD9
  5871                           status	equ	0xFD8
  5872                           
  5873                           	psect	rparam
  5874  0000                     pclatu	equ	0xFFB
  5875                           pclath	equ	0xFFA
  5876                           tblptru	equ	0xFF8
  5877                           tblptrh	equ	0xFF7
  5878                           tblptrl	equ	0xFF6
  5879                           tablat	equ	0xFF5
  5880                           prodh	equ	0xFF4
  5881                           prodl	equ	0xFF3
  5882                           intcon	equ	0xFF2
  5883                           postinc0	equ	0xFEE
  5884                           fsr0h	equ	0xFEA
  5885                           fsr0l	equ	0xFE9
  5886                           wreg	equ	0xFE8
  5887                           indf1	equ	0xFE7
  5888                           postinc1	equ	0xFE6
  5889                           fsr1h	equ	0xFE2
  5890                           fsr1l	equ	0xFE1
  5891                           indf2	equ	0xFDF
  5892                           postinc2	equ	0xFDE
  5893                           postdec2	equ	0xFDD
  5894                           plusw2	equ	0xFDB
  5895                           fsr2h	equ	0xFDA
  5896                           fsr2l	equ	0xFD9
  5897                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         86
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      71
    BANK0           160     24      83
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    CRC_Verify@_ucLByte	PTR unsigned char  size(2) Largest target is 10
		 -> RS485_Receive_Date@_ucLByte(BANK0[1]), RS485_SendBuff(BANK0[10]), 

    CRC_Verify@_ucHByte	PTR unsigned char  size(2) Largest target is 10
		 -> RS485_Receive_Date@_ucHByte(BANK0[1]), RS485_SendBuff(BANK0[10]), 

    CRC_Verify@_pucBuf	PTR unsigned char  size(2) Largest target is 10
		 -> ReceiveBuff(BANK0[10]), RS485_SendBuff(BANK0[10]), 

    RS485_Receive_Date@DataBuff	PTR unsigned char  size(2) Largest target is 10
		 -> ReceiveBuff(BANK0[10]), 

    RS485_Send_Date@date_dress	PTR unsigned char  size(2) Largest target is 10
		 -> RS485_SendBuff(BANK0[10]), 


Critical Paths under _main in COMRAM

    _Timer0_Init->_SetTimer0
    _Show_Result->_TM1640_Show_integer
    _TM1640_Show_integer->_TM1640_Writer_Dates
    _TM1640_Show_integer->___lwdiv
    _TM1640_Writer_Dates->___lwmod
    _Run->_RS485_Send_Date
    _RS485_Send_Date->_CRC_Verify
    _RS485_Receive_Date->_CRC_Verify
    _CRC_Verify->___wmul
    _Get_ADC6->___ftmul
    ___lwtoft->___ftpack
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul
    _RS485_Init->_Open2USART
    _Init_TM1640->_TM1640_Writer_Byte
    _TM1640_Writer_Byte->_TM1640_Delay
    _TM1640_Stop->_TM1640_Delay
    _TM1640_Start->_TM1640_Delay
    _ADC6_Init->_OpenADC

Critical Paths under _Sys_Cyc in COMRAM

    _Sys_Cyc->___llmod
    _Manage_Message->_Key_FSM_Read

Critical Paths under _main in BANK0

    _Get_ADC6->___ftdiv
    ___ftdiv->___ftmul

Critical Paths under _Sys_Cyc in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Sys_Cyc in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Sys_Cyc in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Sys_Cyc in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Sys_Cyc in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Sys_Cyc in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Sys_Cyc in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Sys_Cyc in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Sys_Cyc in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Sys_Cyc in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Sys_Cyc in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Sys_Cyc in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Sys_Cyc in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Sys_Cyc in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Sys_Cyc in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Sys_Cyc in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   16319
                                             21 BANK0      3     3      0
                          _ADC6_Init
                        _GPIO_Config
                        _Init_TM1640
                           _Key_Init
                         _RS485_Init
                                _Run
                        _Show_Result
                        _Timer0_Init
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0     194
                          _SetTimer0
 ---------------------------------------------------------------------------------
 (2) _SetTimer0                                            4     2      2     194
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Show_Result                                          1     1      0    3370
                                             33 COMRAM     1     1      0
                _TM1640_Show_integer
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _TM1640_Show_integer                                  2     0      2    2748
                                             31 COMRAM     2     0      2
                _TM1640_Writer_Dates
                            ___lwdiv
                            ___lwmod
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     752
                                             24 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     631
                                             24 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _TM1640_Writer_Dates                                  2     1      1    1009
                                             29 COMRAM     2     1      1
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Run                                                  0     0      0   11665
                           _Get_ADC6
                 _RS485_Receive_Date
                    _RS485_Send_Date
 ---------------------------------------------------------------------------------
 (2) _RS485_Send_Date                                      5     2      3    1789
                                             41 COMRAM     3     0      3
                                              0 BANK0      2     2      0
                         _CRC_Verify
 ---------------------------------------------------------------------------------
 (2) _RS485_Receive_Date                                   8     6      2    1888
                                             41 COMRAM     2     0      2
                                              0 BANK0      4     4      0
                         _CRC_Verify
 ---------------------------------------------------------------------------------
 (3) _CRC_Verify                                          11     4      7    1467
                                             30 COMRAM    11     4      7
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     622
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _Get_ADC6                                             0     0      0    7988
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2104
                                             32 COMRAM     3     0      3
                            _ReadADC (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    2846
                                             35 COMRAM     9     3      6
                                              0 BANK0      6     6      0
                            _ReadADC (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3038
                                              6 BANK0     15     9      6
                            _ReadADC (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2008
                                             24 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) _ReadADC                                              4     2      2       0
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RS485_Init                                           0     0      0     375
                         _Open2USART
 ---------------------------------------------------------------------------------
 (2) _Open2USART                                           3     1      2     375
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Key_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_TM1640                                          0     0      0     396
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
 ---------------------------------------------------------------------------------
 (4) _TM1640_Writer_Byte                                   2     2      0     198
                                             26 COMRAM     2     2      0
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (4) _TM1640_Stop                                          0     0      0      99
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (4) _TM1640_Start                                         0     0      0      99
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (5) _TM1640_Delay                                         2     2      0      99
                                             24 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC6_Init                                            0     0      0     316
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     316
                                             24 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Sys_Cyc                                             15    15      0    1418
                                              9 COMRAM    15    15      0
                         _Delay_1Khz
                       _Key_FSM_Scan
                     _Manage_Message
                            ___llmod
                        i2_SetTimer0
 ---------------------------------------------------------------------------------
 (7) i2_SetTimer0                                          4     2      2      94
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8     371
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) _Manage_Message                                       1     1      0     792
                                              6 COMRAM     1     1      0
                       _Key_FSM_Read
                      _Key_FSM_Reset
                            ___lbmod
 ---------------------------------------------------------------------------------
 (8) ___lbmod                                              4     3      1     212
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (8) _Key_FSM_Reset                                        1     1      0      67
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _Key_FSM_Read                                         6     6      0     467
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (7) _Key_FSM_Scan                                         0     0      0       0
                           _Key_Scan
 ---------------------------------------------------------------------------------
 (8) _Key_Scan                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _Delay_1Khz                                           3     3      0     138
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC6_Init
     _OpenADC
   _GPIO_Config
   _Init_TM1640
     _TM1640_Start
       _TM1640_Delay
     _TM1640_Stop
       _TM1640_Delay
     _TM1640_Writer_Byte
       _TM1640_Delay
   _Key_Init
   _RS485_Init
     _Open2USART
   _Run
     _Get_ADC6
       _BusyADC
       _ConvertADC
       _ReadADC
       ___ftdiv
         _ReadADC (ARG)
         ___ftmul (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___ftmul
         _ReadADC (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___lwtoft
         _ReadADC (ARG)
         ___ftpack (ARG)
     _RS485_Receive_Date
       _CRC_Verify
         ___wmul
     _RS485_Send_Date
       _CRC_Verify
         ___wmul
   _Show_Result
     _TM1640_Show_integer
       _TM1640_Writer_Dates
         _TM1640_Start
           _TM1640_Delay
         _TM1640_Stop
           _TM1640_Delay
         _TM1640_Writer_Byte
           _TM1640_Delay
         ___lwmod (ARG)
       ___lwdiv
       ___lwmod
       ___wmul (ARG)
     ___wmul
   _Timer0_Init
     _SetTimer0

 _Sys_Cyc (ROOT)
   _Delay_1Khz
   _Key_FSM_Scan
     _Key_Scan
   _Manage_Message
     _Key_FSM_Read
     _Key_FSM_Reset
     ___lbmod
   ___llmod
   i2_SetTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     18      53       5       51.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      47       1       74.7%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9A      12        0.0%
DATA                 0      0      9A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Fri Jan 22 15:07:00 2016

                ?_TM1640_Stop 0001  __size_of_TM1640_Writer_Dates 0022                 ?_TM1640_Delay 0001  
              Key_FSM_Reset@t 0001           ___wmul@multiplicand 001B                   __CFG_BORV$3 000000  
               ?_TM1640_Start 0001                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000                  __CFG_CP4$OFF 000000  
                __CFG_CP5$OFF 000000                  __CFG_CP6$OFF 000000                  __CFG_CP7$OFF 000000  
                         l161 176C                           l331 1F40                           l316 1C38  
                         l164 17B2                           l156 1728                           l317 1C4E  
                         l167 17BE                           l415 1820                           l444 1B4E  
                         l480 18D4                           l472 189E                           l474 18AE  
                         l803 16FC                           l477 18C6                           l479 18D2  
                         l867 12C8                           _GIE 007F97                  __CFG_CPB$OFF 000000  
                         _RC3 007C13                           _RC4 007C14                           _RE2 007C22  
                         _RE3 007C23                           _RE4 007C24                           _RD6 007C1E  
                         _RE5 007C25                           _RD7 007C1F                           _RE6 007C26  
                         _RG3 007C33                           _RE7 007C27                  __CFG_CPD$OFF 000000  
                         _PSA 007EAB                           _Run 1C6E                ??_Key_FSM_Read 0001  
              ??_Key_FSM_Scan 0001                           prod 000FF3                   CRC_Verify@i 0029  
                         wreg 000FE8                  ?_GPIO_Config 0001                    _TXSTA2bits 000F21  
        ?_TM1640_Show_integer 0020                   ?_RS485_Init 0001                  ___ftdiv@cntr 00AA  
                        ?_Run 0001                  ___ftdiv@sign 00AF                          l1002 1AFA  
                        l1012 1B94                          l3007 18FE                          l3111 1C9C  
                        l3023 1D90                          l3009 1924                          l3105 1C7C  
                        l3055 1A42                          l3119 180A                          l3129 1828  
                        l3147 1CD6                          l2731 1C52                          l2813 11EA  
                        l2911 1AD0                          l2737 1C66                          l2761 16C4  
                        l2753 1680                          l2771 1704                          l2763 16E4  
                        l2755 168C                          l2819 1224                          l2907 1ABE  
                        l2931 1B72                          l2765 16F0                          l2757 16AC  
                        l2749 1670                          l2909 1AC8                          l2695 1F38  
                        l2839 1286                          l2783 19E0                          l2919 1AEE  
                        l2935 1B88                          l2927 1B60                          l2697 1F3A  
                        l2689 1F30                          l2961 18A4                          l2953 188A  
                        l2777 1716                          l2849 12DA                          l2865 135A  
                        l2929 1B6A                          l2883 13B6                          l2859 132E  
                        l2787 1A1A                          l2973 18CA                          l2965 18B4  
                        l2957 1894                          l2949 187C                          l2893 13EE  
                        l2887 13CE                          l2879 139E                          l2991 1754  
                        l2969 18BE                          l2897 1408                          l2889 13D6  
                        l2987 1740                          l2997 177C                          _T0CS 007EAD  
                        _T0SE 007EAC                          u2701 1200                          _IPEN 007E87  
                        u2731 1312                          u2670 1F72                          u2751 133E  
                        u2681 11C6                 ??_Init_TM1640 001D                    _Delay_1Khz 1D1E  
                        _main 1CAA                  ___ftpack@arg 0019                  ___ftpack@exp 001C  
                        fsr0h 000FEA                          fsr1h 000FE2                          fsr0l 000FE9  
                        fsr2h 000FDA                          indf1 000FE7                          fsr1l 000FE1  
                        indf2 000FDF                          fsr2l 000FD9                          pclat 000FFA  
             ??_Key_FSM_Reset 0001                          prodh 000FF4                          prodl 000FF3  
                        start 019E              ?_RS485_Send_Date 002A                 __CFG_IESO$OFF 000000  
               __CFG_FOSC$HS1 000000                 __CFG_MCLRE$ON 000000                  ___ftmul@cntr 009F  
                ___param_bank 000010                  ___ftmul@sign 00A0               __end_of_BusyADC 1F78  
             __end_of_ReadADC 1F6A                ??_TM1640_Delay 0019               __end_of_OpenADC 1B52  
                       ??_Run 002D                ??_TM1640_Start 001B                 __CFG_RETEN$ON 000000  
                       ?_main 0001               __end_of___lbmod 1D88               __end_of_Sys_Cyc 019E  
             __end_of___ftdiv 1302               __end_of___ftmul 1430               __end_of___llmod 19CE  
                       _T0PS0 007EA8                         _T0PS1 007EA9                         _T0PS2 007EAA  
                       _RC2IF 007D25               __end_of___lwdiv 1B04                         i2l111 109A  
             __end_of___lwmod 1B9E                         i2l263 0102                         i2l259 00B0  
                       i2l269 0164                         i2l949 19BC             __end_of_ADC6_Init 1F5A  
                       _TMR0H 000FD7                         _TMR0L 000FD6                         _TRISD 000F95  
                       _TRISE 000F96         ??_TM1640_Show_integer 0022                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
               __CFG_WRT4$OFF 000000                __CFG_EBRT0$OFF 000000                 __CFG_WRT5$OFF 000000  
              __CFG_EBRT1$OFF 000000                 __CFG_WRT6$OFF 000000                __CFG_EBRT2$OFF 000000  
               __CFG_WRT7$OFF 000000                __CFG_EBRT3$OFF 000000                __CFG_EBRT4$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBRT5$OFF 000000                __CFG_EBRT6$OFF 000000  
              __CFG_EBRT7$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBRTB$OFF 000000           __size_of_CRC_Verify 006E  
               ___ftpack@sign 001D                    _ConvertADC 1F8E                 _Local_Key_FSM 0075  
                       tablat 000FF5                         plusw2 000FDB                         status 000FD8  
  __end_of_RS485_Receive_Date 195E            _TM1640_Writer_Byte 1C30              __end_of_Get_ADC6 1AA8  
             __initialization 1E10           __end_of_Init_TM1640 1E82           __size_of_RS485_Init 001E  
                __end_of_main 1CE4           ?_TM1640_Writer_Byte 0001              __end_of_Key_Init 1F8E  
         Key_FSM_Read@key_num 0006              __end_of_Key_Scan 1D1E                    _Open2USART 1864  
                      ??_main 002D                 __activetblptr 000001              ??_Manage_Message 0007  
        ??_TM1640_Writer_Byte 001B                        _ADCON0 000FC2                        _ADCON1 000FC1  
                      _ADCON2 000FC0              ___llmod@dividend 0001                        _ADRESH 000FC4  
                      _ADRESL 000FC3                        _ANCON2 000F23                        _T08BIT 007EAE  
            __end_of___ftpack 1726               __CFG_BBSIZ$BB2K 000000                        i2l2201 1070  
                      i2l2203 1086                        i2l2211 10FC                        i2l2205 10B4  
                      i2l2231 11A0                        i2l2223 111E                        i2l2209 10E6  
                      i2l2241 1BF8                        i2l2235 11A4                        i2l2219 1112  
                      i2l2243 1C26                        i2l2183 1D08                        i2l2175 1CF4  
                      i2l2503 1452                        i2l2193 1018                        i2l2187 1D12  
                      i2l2179 1CFE                        i2l2371 1D7C                        i2l2363 1D62  
                      i2l2531 14A4                        i2l2523 148E                        i2l2515 1478  
                      i2l2507 1462                        i2l2453 1D48                        i2l2461 1D50  
                      i2l2445 1D2C                        i2l2373 1D82                        i2l2471 1BB0  
                      i2l2543 14C4                        i2l2535 14AE                        i2l2527 1498  
                      i2l2631 00A4                        i2l2457 1D4C                        i2l2449 1D3A  
                      i2l2561 153E                        i2l2553 1508                        i2l2545 14D2  
                      i2l2641 00C6                        i2l2483 1BDA                        i2l2475 1BBE  
                      i2l2539 14BA                        i2l2627 0098                        i2l2565 154C  
                      i2l2557 1522                        i2l2549 14EC                        i2l2581 19AC  
                      i2l2573 1970                        i2l2661 012C                        i2l2637 00B4  
                      i2l2479 1BCC                        i2l2495 1446                        i2l2575 197E  
                      i2l2639 00BA                        i2l2655 011C                        i2l2577 1986  
                      i2l2649 0106                        i2l2499 144E                        i2l2589 1DC0  
                      i2l2669 0152                 SetTimer0@_tmr 0019                        _RCREG2 000F1D  
            __end_of___lwtoft 1E5C                        _RCSTA2 000F22                   ?_Delay_1Khz 0001  
                      _TMR0IE 007F95                        _TMR0IF 007F92                        _SPBRG2 000F1E  
                      _TMR0ON 007EAF    RS485_Receive_Date@DataBuff 002A                 TM1640_Delay@i 001A  
                   ??_BusyADC 0019                        _TXREG2 000F1C                     ??_ReadADC 001B  
                      _TXSTA2 000F21                 ??_Timer0_Init 001D                     ??_OpenADC 001B  
      TM1640_Writer_Byte@Date 001B                __CFG_XINST$OFF 000000          __end_of_Key_FSM_Read 11B0  
        __end_of_Key_FSM_Scan 1BEA        TM1640_Writer_Byte@mask 001C                        _g_Addr 0035  
           _RS485_ReceiveBuff 0060                        ___wmul 1DE8                __CFG_STVREN$ON 000000  
                   ??___lbmod 0002                     ??_Sys_Cyc 000A                     ??___ftdiv 00A7  
                   ??___ftmul 002A                     ??___llmod 0009          Sys_Cyc@_overturn_LED 0031  
                   ??___lwdiv 001D            __size_of_SetTimer0 0030                     ??___lwmod 001D  
                      clear_0 1E16                        clear_1 1E22          __size_of_TM1640_Stop 0024  
             Manage_Message@i 0007                 ??_Show_Result 0022         ___ftmul@f3_as_product 009C  
              _Local_Key_User 0036                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8          __size_of_GPIO_Config 000C  
         _TM1640_Writer_Dates 1EEE                   ?_ConvertADC 0001          __end_of_TM1640_Delay 1F48  
  RS485_Receive_Date@_ucHByte 009B               ___lbmod@divisor 0001          __end_of_TM1640_Start 1EEE  
  RS485_Receive_Date@_ucLByte 009C                    __accesstop 0060       __end_of__initialization 1E28  
             ___lbmod@counter 0003                   _Init_TM1640 1E5C                  ?i2_SetTimer0 0001  
               ___rparam_used 000001                    ___ftdiv@f1 00A1                    ___ftdiv@f2 00A4  
                  ___ftdiv@f3 00AB                  ??_CRC_Verify 0026                    ___ftmul@f1 0024  
                  ___ftmul@f2 0027                __pcstackCOMRAM 0001          ?_TM1640_Writer_Dates 001E  
         __end_of_Timer0_Init 1EA6     Sys_Cyc@_RS485_Receive_Num 002F                   ?_Open2USART 0019  
                  ___lwtoft@c 0021           __size_of_Delay_1Khz 0038                     ?_Get_ADC6 0001  
                ??_RS485_Init 001C           __end_of_Show_Result 1864            __end_of_CRC_Verify 1A3C  
           __end_of_SetTimer0 1DB8                    __pbssBANK0 0060                     ?_Key_Init 0001  
                   ?_Key_Scan 0001                   _ReceiveBuff 0091               __CFG_PLLCFG$OFF 000000  
     TM1640_Writer_Dates@Addr 001F            __end_of_LED_Number 1011       TM1640_Writer_Dates@Date 001E  
       ??_TM1640_Writer_Dates 001F                       ?___wmul 0019            __end_of_RS485_Init 1F2E  
         __size_of_ConvertADC 0004                     ?___ftpack 0019                     ?___lwtoft 0021  
                  ??_Get_ADC6 002D                       _SPBRGH2 000F1F                     _ADC6_Buff 0072  
                   _ADC6_Init 1F48                    ??_Key_Init 0019                    ??_Key_Scan 0001  
       __size_of_Key_FSM_Read 019E         __size_of_Key_FSM_Scan 004C           __size_of_Open2USART 0084  
                     _BusyADC 1F6A                       _ReadADC 1F5A              RS485_Send_Date@i 009B  
             __CFG_PWRTEN$OFF 000000                       _OpenADC 1B04                       __Hparam 0000  
                 _Timer0_Init 1E82         __end_of_Key_FSM_Reset 1C30                       __Lparam 0000  
               Sys_Cyc@_pulse 0018                _RS485_SendBuff 0087                       ___lbmod 1D56  
                     _Sys_Cyc 0008                       ___ftdiv 11B0               __size_of___wmul 0028  
                     ___ftmul 1302                       ___llmod 195E                       ___lwdiv 1AA8  
                     ___lwmod 1B52                  __psmallconst 1000            _RS485_Receive_Date 18E8  
          _RS485_Receive_Flag 0034      __size_of_RS485_Send_Date 00A2   __end_of_TM1640_Show_integer 1660  
                     __pcinit 1E10                    ??___ftpack 001E         Sys_Cyc@_overturn_1Khz 0030  
                     __ramtop 1000                       __ptext0 1CAA                       __ptext1 1E82  
                     __ptext2 1D88                       __ptext3 17C8                       __ptext4 155A  
                     __ptext5 1B52                       __ptext6 1AA8                       __ptext7 1EEE  
                     __ptext8 1C6E                       __ptext9 1726                    ??___lwtoft 0024  
                 _Show_Result 17C8                  __size_of_Run 003C              Open2USART@config 001B  
         ?_RS485_Receive_Date 002A         __size_of_TM1640_Delay 001A             __CFG_MSSPMSK$MSK7 000000  
                _Key_FSM_Read 1012                  _Key_FSM_Scan 1B9E         __size_of_TM1640_Start 0024  
                  ?_ADC6_Init 0001                OpenADC@config2 0019                OpenADC@config3 001A  
                     main@num 00B0          end_of_initialization 1E28                  ??_Delay_1Khz 0001  
                   _RS485_Num 0033          ??_RS485_Receive_Date 002C          __size_ofi2_SetTimer0 0030  
                     postdec2 000FDD                       postinc0 000FEE                       postinc1 000FE6  
                     postinc2 000FDE               CRC_Verify@usCrc 0027                  _TM1640_Delay 1F2E  
   RS485_Send_Date@date_dress 002A     RS485_Send_Date@date_lenth 002C                  _TM1640_Start 1ECA  
                   _PORTEbits 000F84              TM1640_Delay@Time 0019            __end_of_Delay_1Khz 1D56  
            ___lbmod@dividend 0002                     _TRISCbits 000F94                     _TRISGbits 000F98  
 __size_of_TM1640_Writer_Byte 003E             __CFG_SOSCSEL$HIGH 000000                  ??_ConvertADC 0019  
                 ___lbmod@rem 0004      Key_FSM_Read@key_num_mate 0005                  ?_Init_TM1640 0001  
                 ___ftdiv@exp 00AE                   ___ftmul@exp 009B                 ??_TM1640_Stop 001B  
              __end_of___wmul 1E10                  ??_Open2USART 001B            __end_of_ConvertADC 1F92  
               ??_GPIO_Config 0019           start_initialization 1E10             ??_RS485_Send_Date 002D  
                 __end_of_Run 1CAA                   ??_ADC6_Init 001E             __size_of_Get_ADC6 006C  
  TM1640_Show_integer@Numbers 0020       __size_of_Manage_Message 012A               ___llmod@divisor 0005  
           __size_of_Key_Init 000A             __size_of_Key_Scan 003A               ___llmod@counter 0009  
                   _SetTimer0 1D88            __end_of_Open2USART 18E8               i2SetTimer0@_tmr 0001  
                   _Timer_Cyc 006E                      ??___wmul 001D                 _Handle_Switch 006A  
         __end_of_TM1640_Stop 1ECA             __size_of___ftpack 00C6                   __pbssCOMRAM 002D  
           __size_of___lwtoft 0026                 __pcstackBANK0 009B           __end_of_GPIO_Config 1F84  
                    ?_BusyADC 0001                      ?_ReadADC 0019   __end_of_TM1640_Writer_Dates 1F10  
                  ?_SetTimer0 0019                      ?_OpenADC 0019                  ?_Timer0_Init 0001  
            ___lwdiv@dividend 0019             __CFG_CCP2MX$PORTC 000000                     __pintcode 0008  
                    ?___lbmod 0001                      ?_Sys_Cyc 0001                      ?___ftdiv 00A1  
                    ?___ftmul 0024                      ?___llmod 0001                      ?___lwdiv 0019  
                    ?___lwmod 0019                  ?_Show_Result 0001                   __smallconst 1000  
                 _LED2_switch 0032              ___lwdiv@quotient 001E               Open2USART@spbrg 0019  
              ___wmul@product 001D                 OpenADC@config 001D                      _PIE1bits 000F9D  
                    _PIE3bits 000FA3          __size_of_Init_TM1640 0026                      i2u172_40 103E  
                    i2u180_44 116C                      i2u180_45 1168                      i2u173_40 105C  
                    i2u181_44 1180                      i2u181_45 117C                      i2u174_40 10D2  
                    _PIR1bits 000F9E                   _TM1640_Stop 1EA6            CRC_Verify@_ucHByte 0022  
          CRC_Verify@_ucLByte 0024                    _ADCON0bits 000FC2             ___wmul@multiplier 0019  
                    _Get_ADC6 1A3C                   _GPIO_Config 1F78                   Delay_1Khz@a 0001  
                 Delay_1Khz@b 0002                   Delay_1Khz@c 0003  __size_of_TM1640_Show_integer 0106  
      __size_of_Key_FSM_Reset 0046                      _Key_Init 1F84                      _Key_Scan 1CE4  
              _Manage_Message 1430                 ??i2_SetTimer0 0003                   ??_SetTimer0 001B  
            __size_of_BusyADC 000E              __size_of_ReadADC 0010                      __Hrparam 0000  
 __size_of_RS485_Receive_Date 0076              __size_of_OpenADC 004E                      __Lrparam 0000  
                __Lsmallconst 1000            __CFG_BOREN$SBORDIS 000000               _RS485_Send_Date 1726  
            __size_of___lbmod 0032              __size_of_Sys_Cyc 0196              __size_of___ftdiv 0152  
            __size_of___ftmul 012E              __size_of___llmod 0070              __size_of___lwdiv 005C  
            __size_of___lwmod 004C                      ___ftpack 1660                      ___lwtoft 1E36  
  __end_of_TM1640_Writer_Byte 1C6E               ___lwdiv@divisor 001B               ___lwdiv@counter 001D  
                    __ptext10 18E8                      __ptext11 19CE                      __ptext20 1F6A  
                    __ptext12 1DE8                      __ptext21 1F10                      __ptext13 1A3C  
                    __ptext30 1F48                      __ptext22 1864                      __ptext14 1E36  
                    __ptext31 1B04                      __ptext23 1F84                      __ptext15 1302  
                    __ptext40 1CE4                      __ptext24 1E5C                      __ptext16 11B0  
                    __ptext41 1D1E                      __ptext33 1DB8                      __ptext25 1C30  
                    __ptext17 1660                      __ptext34 195E                      __ptext26 1EA6  
                    __ptext18 1F5A                      __ptext35 1430                      __ptext27 1ECA  
                    __ptext19 1F8E                      __ptext36 1D56                      __ptext28 1F2E  
                    __ptext37 1BEA                      __ptext29 1F78                      __ptext38 1012  
                    __ptext39 1B9E        __end_of_Manage_Message 155A                 __size_of_main 003A  
         __CFG_RTCOSC$SOSCREF 000000                    _CRC_Verify 19CE                 _Key_FSM_Reset 1BEA  
        __size_of_Timer0_Init 0024           __end_ofi2_SetTimer0 1DE8             CRC_Verify@_pucBuf 001F  
         __CFG_INTOSCSEL$HIGH 000000            Sys_Cyc@RS485_Timer 002E                    _LED_Number 1001  
          __CFG_WDTEN$SWDTDIS 000000                    _INTCONbits 000FF2          __size_of_Show_Result 009C  
                  _RS485_Init 1F10               ?_Manage_Message 0001                      intlevel2 0000  
        Show_Result@RS485_LED 002D              ___lwmod@dividend 0019                    _RCSTA2bits 000F22  
     __end_of_RS485_Send_Date 17C8                ?_Key_FSM_Reset 0001           RS485_Receive_Date@n 009D  
            CRC_Verify@_usLen 0021            __CFG_WDTPS$1048576 000000               ___lwmod@divisor 001B  
             ___lwmod@counter 001D                 ?_Key_FSM_Read 0001                 ?_Key_FSM_Scan 0001  
         __CFG_BORPWR$ZPBORMV 000000            __size_of_ADC6_Init 0012                   i2_SetTimer0 1DB8  
                 ?_CRC_Verify 001F           _TM1640_Show_integer 155A  
