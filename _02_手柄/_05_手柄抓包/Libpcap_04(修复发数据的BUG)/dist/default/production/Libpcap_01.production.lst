

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Jan 19 15:46:26 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F67K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    54  0000                     
    55                           	psect	smallconst
    56  001000                     __psmallconst:
    57                           	opt stack 0
    58  001000  00                 	db	0
    59  001001                     _LED_Number:
    60                           	opt stack 0
    61  001001  3F                 	db	63
    62  001002  06                 	db	6
    63  001003  5B                 	db	91
    64  001004  4F                 	db	79
    65  001005  66                 	db	102
    66  001006  6D                 	db	109
    67  001007  7D                 	db	125
    68  001008  07                 	db	7
    69  001009  7F                 	db	127
    70  00100A  6F                 	db	111
    71  00100B  77                 	db	119
    72  00100C  7C                 	db	124
    73  00100D  39                 	db	57
    74  00100E  5E                 	db	94
    75  00100F  79                 	db	121
    76  001010  71                 	db	113
    77  001011                     __end_of_LED_Number:
    78                           	opt stack 0
    79  0000                     _ANCON2	set	3875
    80  0000                     _RCREG2	set	3869
    81  0000                     _RCSTA2	set	3874
    82  0000                     _RCSTA2bits	set	3874
    83  0000                     _SPBRG2	set	3870
    84  0000                     _SPBRGH2	set	3871
    85  0000                     _TXREG2	set	3868
    86  0000                     _TXSTA2	set	3873
    87  0000                     _TXSTA2bits	set	3873
    88  0000                     _ADCON0	set	4034
    89  0000                     _ADCON0bits	set	4034
    90  0000                     _ADCON1	set	4033
    91  0000                     _ADCON2	set	4032
    92  0000                     _ADRESH	set	4036
    93  0000                     _ADRESL	set	4035
    94  0000                     _INTCONbits	set	4082
    95  0000                     _PIE1bits	set	3997
    96  0000                     _PIE3bits	set	4003
    97  0000                     _PIR1bits	set	3998
    98  0000                     _PORTEbits	set	3972
    99  0000                     _TMR0H	set	4055
   100  0000                     _TMR0L	set	4054
   101  0000                     _TRISCbits	set	3988
   102  0000                     _TRISD	set	3989
   103  0000                     _TRISE	set	3990
   104  0000                     _TRISGbits	set	3992
   105  0000                     _GIE	set	32663
   106  0000                     _IPEN	set	32391
   107  0000                     _PSA	set	32427
   108  0000                     _RC2IF	set	32037
   109  0000                     _RC3	set	31763
   110  0000                     _RC4	set	31764
   111  0000                     _RD6	set	31774
   112  0000                     _RD7	set	31775
   113  0000                     _RE2	set	31778
   114  0000                     _RE3	set	31779
   115  0000                     _RE4	set	31780
   116  0000                     _RE5	set	31781
   117  0000                     _RE6	set	31782
   118  0000                     _RE7	set	31783
   119  0000                     _RG3	set	31795
   120  0000                     _T08BIT	set	32430
   121  0000                     _T0CS	set	32429
   122  0000                     _T0PS0	set	32424
   123  0000                     _T0PS1	set	32425
   124  0000                     _T0PS2	set	32426
   125  0000                     _T0SE	set	32428
   126  0000                     _TMR0IE	set	32661
   127  0000                     _TMR0IF	set	32658
   128  0000                     _TMR0ON	set	32431
   129                           
   130                           ; #config settings
   131  001011  00                 	db	0	; dummy byte at the end
   132  0000                     
   133                           	psect	cinit
   134  001D04                     __pcinit:
   135                           	opt stack 0
   136  001D04                     start_initialization:
   137                           	opt stack 0
   138  001D04                     __initialization:
   139                           	opt stack 0
   140                           
   141                           ; Clear objects allocated to BANK0 (66 bytes)
   142  001D04  EE00  F060         	lfsr	0,__pbssBANK0
   143  001D08  0E42               	movlw	66
   144  001D0A                     clear_0:
   145  001D0A  6AEE               	clrf	postinc0,c
   146  001D0C  06E8               	decf	wreg,f,c
   147  001D0E  E1FD               	bnz	clear_0
   148                           
   149                           ; Clear objects allocated to COMRAM (19 bytes)
   150  001D10  EE00  F033         	lfsr	0,__pbssCOMRAM
   151  001D14  0E13               	movlw	19
   152  001D16                     clear_1:
   153  001D16  6AEE               	clrf	postinc0,c
   154  001D18  06E8               	decf	wreg,f,c
   155  001D1A  E1FD               	bnz	clear_1
   156  001D1C                     end_of_initialization:
   157                           	opt stack 0
   158  001D1C                     __end_of__initialization:
   159                           	opt stack 0
   160  001D1C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   161  001D1E  6EF8               	movwf	tblptru,c
   162  001D20  0E10               	movlw	high __Lsmallconst
   163  001D22  6EF7               	movwf	tblptrh,c
   164  001D24  0100               	movlb	0
   165  001D26  EFBA  F00D         	goto	_main	;jump to C main() function
   166                           tblptru	equ	0xFF8
   167                           tblptrh	equ	0xFF7
   168                           postinc0	equ	0xFEE
   169                           wreg	equ	0xFE8
   170                           
   171                           	psect	bssCOMRAM
   172  000033                     __pbssCOMRAM:
   173                           	opt stack 0
   174  000033                     _Handle_Switch:
   175                           	opt stack 0
   176  000033                     	ds	4
   177  000037                     _Timer_Cyc:
   178                           	opt stack 0
   179  000037                     	ds	4
   180  00003B                     _ADC6_Buff:
   181                           	opt stack 0
   182  00003B                     	ds	3
   183  00003E                     Sys_Cyc@RS485_LED:
   184                           	opt stack 0
   185  00003E                     	ds	1
   186  00003F                     Sys_Cyc@RS485_Timer:
   187                           	opt stack 0
   188  00003F                     	ds	1
   189  000040                     Sys_Cyc@_RS485_Receive_Num:
   190                           	opt stack 0
   191  000040                     	ds	1
   192  000041                     Sys_Cyc@_overturn_1Khz:
   193                           	opt stack 0
   194  000041                     	ds	1
   195  000042                     Sys_Cyc@_overturn_LED:
   196                           	opt stack 0
   197  000042                     	ds	1
   198  000043                     _LED2_switch:
   199                           	opt stack 0
   200  000043                     	ds	1
   201  000044                     _RS485_Num:
   202                           	opt stack 0
   203  000044                     	ds	1
   204  000045                     _RS485_Receive_Flag:
   205                           	opt stack 0
   206  000045                     	ds	1
   207                           tblptru	equ	0xFF8
   208                           tblptrh	equ	0xFF7
   209                           postinc0	equ	0xFEE
   210                           wreg	equ	0xFE8
   211                           
   212                           	psect	bssBANK0
   213  000060                     __pbssBANK0:
   214                           	opt stack 0
   215  000060                     _ReceiveBuff:
   216                           	opt stack 0
   217  000060                     	ds	10
   218  00006A                     _Local_Key_FSM:
   219                           	opt stack 0
   220  00006A                     	ds	18
   221  00007C                     _Local_Key_User:
   222                           	opt stack 0
   223  00007C                     	ds	18
   224  00008E                     _RS485_ReceiveBuff:
   225                           	opt stack 0
   226  00008E                     	ds	10
   227  000098                     _RS485_SendBuff:
   228                           	opt stack 0
   229  000098                     	ds	10
   230                           tblptru	equ	0xFF8
   231                           tblptrh	equ	0xFF7
   232                           postinc0	equ	0xFEE
   233                           wreg	equ	0xFE8
   234                           
   235                           	psect	cstackBANK0
   236  0000A2                     __pcstackBANK0:
   237                           	opt stack 0
   238  0000A2                     ?___ftdiv:
   239                           	opt stack 0
   240  0000A2                     ___ftdiv@f1:
   241                           	opt stack 0
   242                           
   243                           ; 3 bytes @ 0x0
   244  0000A2                     	ds	3
   245  0000A5                     ___ftdiv@f2:
   246                           	opt stack 0
   247                           
   248                           ; 3 bytes @ 0x3
   249  0000A5                     	ds	3
   250  0000A8                     ??___ftdiv:
   251                           
   252                           ; 0 bytes @ 0x6
   253  0000A8                     	ds	3
   254  0000AB                     ___ftdiv@cntr:
   255                           	opt stack 0
   256                           
   257                           ; 1 bytes @ 0x9
   258  0000AB                     	ds	1
   259  0000AC                     ___ftdiv@f3:
   260                           	opt stack 0
   261                           
   262                           ; 3 bytes @ 0xA
   263  0000AC                     	ds	3
   264  0000AF                     ___ftdiv@exp:
   265                           	opt stack 0
   266                           
   267                           ; 1 bytes @ 0xD
   268  0000AF                     	ds	1
   269  0000B0                     ___ftdiv@sign:
   270                           	opt stack 0
   271                           
   272                           ; 1 bytes @ 0xE
   273  0000B0                     	ds	1
   274  0000B1                     main@num:
   275                           	opt stack 0
   276                           
   277                           ; 3 bytes @ 0xF
   278  0000B1                     	ds	3
   279                           tblptru	equ	0xFF8
   280                           tblptrh	equ	0xFF7
   281                           postinc0	equ	0xFEE
   282                           wreg	equ	0xFE8
   283                           
   284                           	psect	cstackCOMRAM
   285  000001                     __pcstackCOMRAM:
   286                           	opt stack 0
   287  000001                     ??_Key_FSM_Read:
   288  000001                     ?___llmod:
   289                           	opt stack 0
   290  000001                     Delay_1Khz@a:
   291                           	opt stack 0
   292  000001                     Key_FSM_Reset@t:
   293                           	opt stack 0
   294  000001                     ___lbmod@divisor:
   295                           	opt stack 0
   296  000001                     i2SetTimer0@_tmr:
   297                           	opt stack 0
   298  000001                     ___llmod@dividend:
   299                           	opt stack 0
   300                           
   301                           ; 4 bytes @ 0x0
   302  000001                     	ds	1
   303  000002                     Delay_1Khz@b:
   304                           	opt stack 0
   305  000002                     ___lbmod@dividend:
   306                           	opt stack 0
   307                           
   308                           ; 1 bytes @ 0x1
   309  000002                     	ds	1
   310  000003                     ??i2_SetTimer0:
   311  000003                     Delay_1Khz@c:
   312                           	opt stack 0
   313  000003                     ___lbmod@counter:
   314                           	opt stack 0
   315                           
   316                           ; 1 bytes @ 0x2
   317  000003                     	ds	1
   318  000004                     ___lbmod@rem:
   319                           	opt stack 0
   320                           
   321                           ; 1 bytes @ 0x3
   322  000004                     	ds	1
   323  000005                     Key_FSM_Read@key_num_mate:
   324                           	opt stack 0
   325  000005                     ___llmod@divisor:
   326                           	opt stack 0
   327                           
   328                           ; 4 bytes @ 0x4
   329  000005                     	ds	1
   330  000006                     Key_FSM_Read@key_num:
   331                           	opt stack 0
   332                           
   333                           ; 1 bytes @ 0x5
   334  000006                     	ds	1
   335  000007                     
   336                           ; 0 bytes @ 0x6
   337  000007                     	ds	2
   338  000009                     ___llmod@counter:
   339                           	opt stack 0
   340                           
   341                           ; 1 bytes @ 0x8
   342  000009                     	ds	1
   343  00000A                     ??_Sys_Cyc:
   344                           
   345                           ; 0 bytes @ 0x9
   346  00000A                     	ds	14
   347  000018                     Sys_Cyc@_pulse:
   348                           	opt stack 0
   349                           
   350                           ; 1 bytes @ 0x17
   351  000018                     	ds	1
   352  000019                     ?_ReadADC:
   353                           	opt stack 0
   354  000019                     ?___wmul:
   355                           	opt stack 0
   356  000019                     ?___lwdiv:
   357                           	opt stack 0
   358  000019                     ?___lwmod:
   359                           	opt stack 0
   360  000019                     ?___ftpack:
   361                           	opt stack 0
   362  000019                     TM1640_Delay@Time:
   363                           	opt stack 0
   364  000019                     OpenADC@config2:
   365                           	opt stack 0
   366  000019                     SetTimer0@_tmr:
   367                           	opt stack 0
   368  000019                     Open2USART@spbrg:
   369                           	opt stack 0
   370  000019                     ___wmul@multiplier:
   371                           	opt stack 0
   372  000019                     ___lwdiv@dividend:
   373                           	opt stack 0
   374  000019                     ___lwmod@dividend:
   375                           	opt stack 0
   376  000019                     ___ftpack@arg:
   377                           	opt stack 0
   378                           
   379                           ; 3 bytes @ 0x18
   380  000019                     	ds	1
   381  00001A                     TM1640_Delay@i:
   382                           	opt stack 0
   383  00001A                     OpenADC@config3:
   384                           	opt stack 0
   385                           
   386                           ; 1 bytes @ 0x19
   387  00001A                     	ds	1
   388  00001B                     ??_SetTimer0:
   389  00001B                     ??_OpenADC:
   390  00001B                     ??_ReadADC:
   391  00001B                     TM1640_Writer_Byte@Date:
   392                           	opt stack 0
   393  00001B                     Open2USART@config:
   394                           	opt stack 0
   395  00001B                     ___wmul@multiplicand:
   396                           	opt stack 0
   397  00001B                     ___lwdiv@divisor:
   398                           	opt stack 0
   399  00001B                     ___lwmod@divisor:
   400                           	opt stack 0
   401                           
   402                           ; 2 bytes @ 0x1A
   403  00001B                     	ds	1
   404  00001C                     TM1640_Writer_Byte@mask:
   405                           	opt stack 0
   406  00001C                     ___ftpack@exp:
   407                           	opt stack 0
   408                           
   409                           ; 1 bytes @ 0x1B
   410  00001C                     	ds	1
   411  00001D                     OpenADC@config:
   412                           	opt stack 0
   413  00001D                     ___ftpack@sign:
   414                           	opt stack 0
   415  00001D                     ___lwdiv@counter:
   416                           	opt stack 0
   417  00001D                     ___lwmod@counter:
   418                           	opt stack 0
   419  00001D                     ___wmul@product:
   420                           	opt stack 0
   421                           
   422                           ; 2 bytes @ 0x1C
   423  00001D                     	ds	1
   424  00001E                     ??___ftpack:
   425  00001E                     TM1640_Writer_Dates@Date:
   426                           	opt stack 0
   427  00001E                     ___lwdiv@quotient:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0x1D
   431  00001E                     	ds	1
   432  00001F                     TM1640_Writer_Dates@Addr:
   433                           	opt stack 0
   434  00001F                     CRC_Verify@_pucBuf:
   435                           	opt stack 0
   436                           
   437                           ; 2 bytes @ 0x1E
   438  00001F                     	ds	1
   439  000020                     TM1640_Show_integer@Numbers:
   440                           	opt stack 0
   441                           
   442                           ; 2 bytes @ 0x1F
   443  000020                     	ds	1
   444  000021                     ?___lwtoft:
   445                           	opt stack 0
   446  000021                     CRC_Verify@_usLen:
   447                           	opt stack 0
   448  000021                     ___lwtoft@c:
   449                           	opt stack 0
   450                           
   451                           ; 2 bytes @ 0x20
   452  000021                     	ds	1
   453  000022                     ??_Show_Result:
   454  000022                     CRC_Verify@_ucHByte:
   455                           	opt stack 0
   456                           
   457                           ; 2 bytes @ 0x21
   458  000022                     	ds	2
   459  000024                     ?___ftmul:
   460                           	opt stack 0
   461  000024                     CRC_Verify@_ucLByte:
   462                           	opt stack 0
   463  000024                     ___ftmul@f1:
   464                           	opt stack 0
   465                           
   466                           ; 3 bytes @ 0x23
   467  000024                     	ds	2
   468  000026                     ??_CRC_Verify:
   469                           
   470                           ; 0 bytes @ 0x25
   471  000026                     	ds	1
   472  000027                     CRC_Verify@usCrc:
   473                           	opt stack 0
   474  000027                     ___ftmul@f2:
   475                           	opt stack 0
   476                           
   477                           ; 3 bytes @ 0x26
   478  000027                     	ds	2
   479  000029                     CRC_Verify@i:
   480                           	opt stack 0
   481                           
   482                           ; 1 bytes @ 0x28
   483  000029                     	ds	1
   484  00002A                     ??___ftmul:
   485  00002A                     RS485_Send_Date@date_dress:
   486                           	opt stack 0
   487                           
   488                           ; 2 bytes @ 0x29
   489  00002A                     	ds	2
   490  00002C                     RS485_Send_Date@date_lenth:
   491                           	opt stack 0
   492                           
   493                           ; 1 bytes @ 0x2B
   494  00002C                     	ds	1
   495  00002D                     ___ftmul@exp:
   496                           	opt stack 0
   497  00002D                     RS485_Send_Date@i:
   498                           	opt stack 0
   499                           
   500                           ; 2 bytes @ 0x2C
   501  00002D                     	ds	1
   502  00002E                     ___ftmul@f3_as_product:
   503                           	opt stack 0
   504                           
   505                           ; 3 bytes @ 0x2D
   506  00002E                     	ds	3
   507  000031                     ___ftmul@cntr:
   508                           	opt stack 0
   509                           
   510                           ; 1 bytes @ 0x30
   511  000031                     	ds	1
   512  000032                     ___ftmul@sign:
   513                           	opt stack 0
   514                           
   515                           ; 1 bytes @ 0x31
   516  000032                     	ds	1
   517  000033                     tblptru	equ	0xFF8
   518                           tblptrh	equ	0xFF7
   519                           postinc0	equ	0xFEE
   520                           wreg	equ	0xFE8
   521                           
   522                           ; 0 bytes @ 0x32
   523 ;;
   524 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   525 ;;
   526 ;; *************** function _main *****************
   527 ;; Defined at:
   528 ;;		line 37 in file "_01_USER/main.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;		None
   531 ;; Auto vars:     Size  Location     Type
   532 ;;  num             3   15[BANK0 ] float 
   533 ;; Return value:  Size  Location     Type
   534 ;;                  2   18[None  ] int 
   535 ;; Registers used:
   536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   543 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   545 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   546 ;;Total ram usage:        3 bytes
   547 ;; Hardware stack levels required when called:    8
   548 ;; This function calls:
   549 ;;		_ADC6_Init
   550 ;;		_GPIO_Config
   551 ;;		_Init_TM1640
   552 ;;		_Key_Init
   553 ;;		_RS485_Init
   554 ;;		_Run
   555 ;;		_Show_Result
   556 ;;		_Timer0_Init
   557 ;; This function is called by:
   558 ;;		Startup code after reset
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           	psect	text0
   563  001B74                     __ptext0:
   564                           	opt stack 0
   565  001B74                     _main:
   566                           	opt stack 23
   567                           
   568                           ;main.c: 40: float num = 0;
   569                           
   570                           ;incstack = 0
   571  001B74  0E00               	movlw	0
   572  001B76  0100               	movlb	0	; () banked
   573  001B78  6FB1               	movwf	main@num& (0+255),b
   574  001B7A  0E00               	movlw	0
   575  001B7C  0100               	movlb	0	; () banked
   576  001B7E  6FB2               	movwf	(main@num+1)& (0+255),b
   577  001B80  0E00               	movlw	0
   578  001B82  0100               	movlb	0	; () banked
   579  001B84  6FB3               	movwf	(main@num+2)& (0+255),b
   580                           
   581                           ; BSR set to: 0
   582                           ;main.c: 43: GPIO_Config();
   583  001B86  EC36  F00F         	call	_GPIO_Config	;wreg free
   584                           
   585                           ;main.c: 44: Key_Init();
   586  001B8A  EC3C  F00F         	call	_Key_Init	;wreg free
   587                           
   588                           ;main.c: 45: Timer0_Init();
   589  001B8E  ECBB  F00E         	call	_Timer0_Init	;wreg free
   590                           
   591                           ;main.c: 46: Init_TM1640();
   592  001B92  ECA8  F00E         	call	_Init_TM1640	;wreg free
   593                           
   594                           ;main.c: 47: ADC6_Init();
   595  001B96  EC1E  F00F         	call	_ADC6_Init	;wreg free
   596                           
   597                           ;main.c: 48: RS485_Init();
   598  001B9A  EC02  F00F         	call	_RS485_Init	;wreg free
   599  001B9E  D000               	goto	l3014
   600  001BA0                     l3014:
   601                           
   602                           ;main.c: 52: {
   603                           ;main.c: 53: Run();
   604  001BA0  EC59  F00E         	call	_Run	;wreg free
   605                           
   606                           ;main.c: 54: Show_Result();
   607  001BA4  ECF2  F00B         	call	_Show_Result	;wreg free
   608  001BA8  D7FB               	goto	l3014
   609                           
   610                           ;main.c: 55: }
   611                           ;main.c: 57: return 0;
   612                           ;	Return value of _main is never used
   613  001BAA  EFD3  F000         	goto	start
   614  001BAE                     __end_of_main:
   615                           	opt stack 0
   616                           tblptru	equ	0xFF8
   617                           tblptrh	equ	0xFF7
   618                           postinc0	equ	0xFEE
   619                           wreg	equ	0xFE8
   620                           
   621 ;; *************** function _Timer0_Init *****************
   622 ;; Defined at:
   623 ;;		line 41 in file "_01_USER/My_Timer.c"
   624 ;; Parameters:    Size  Location     Type
   625 ;;		None
   626 ;; Auto vars:     Size  Location     Type
   627 ;;		None
   628 ;; Return value:  Size  Location     Type
   629 ;;		None               void
   630 ;; Registers used:
   631 ;;		wreg, status,2, status,0, cstack
   632 ;; Tracked objects:
   633 ;;		On entry : 0/0
   634 ;;		On exit  : 0/0
   635 ;;		Unchanged: 0/0
   636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   641 ;;Total ram usage:        0 bytes
   642 ;; Hardware stack levels used:    1
   643 ;; Hardware stack levels required when called:    4
   644 ;; This function calls:
   645 ;;		_SetTimer0
   646 ;; This function is called by:
   647 ;;		_main
   648 ;; This function uses a non-reentrant model
   649 ;;
   650                           
   651                           	psect	text1
   652  001D76                     __ptext1:
   653                           	opt stack 0
   654  001D76                     _Timer0_Init:
   655                           	opt stack 26
   656                           
   657                           ;My_Timer.c: 43: T08BIT = 0;
   658                           
   659                           ;incstack = 0
   660  001D76  9CD5               	bcf	4053,6,c	;volatile
   661                           
   662                           ;My_Timer.c: 44: T0CS = 0;
   663  001D78  9AD5               	bcf	4053,5,c	;volatile
   664                           
   665                           ;My_Timer.c: 45: T0SE = 0;
   666  001D7A  98D5               	bcf	4053,4,c	;volatile
   667                           
   668                           ;My_Timer.c: 46: PSA = 0;
   669  001D7C  96D5               	bcf	4053,3,c	;volatile
   670                           
   671                           ;My_Timer.c: 47: T0PS2 = 1;
   672  001D7E  84D5               	bsf	4053,2,c	;volatile
   673                           
   674                           ;My_Timer.c: 48: T0PS1 = 1;
   675  001D80  82D5               	bsf	4053,1,c	;volatile
   676                           
   677                           ;My_Timer.c: 49: T0PS0 = 1;
   678  001D82  80D5               	bsf	4053,0,c	;volatile
   679                           
   680                           ;My_Timer.c: 63: SetTimer0(1);
   681  001D84  0E00               	movlw	0
   682  001D86  6E1A               	movwf	SetTimer0@_tmr+1,c
   683  001D88  0E01               	movlw	1
   684  001D8A  6E19               	movwf	SetTimer0@_tmr,c
   685  001D8C  EC29  F00E         	call	_SetTimer0	;wreg free
   686                           
   687                           ;My_Timer.c: 64: TMR0ON = 1;
   688  001D90  8ED5               	bsf	4053,7,c	;volatile
   689                           
   690                           ;My_Timer.c: 65: TMR0IE = 1;
   691  001D92  8AF2               	bsf	intcon,5,c	;volatile
   692                           
   693                           ;My_Timer.c: 66: IPEN = 0;GIE = 1;
   694  001D94  9ED0               	bcf	4048,7,c	;volatile
   695  001D96  8EF2               	bsf	intcon,7,c	;volatile
   696  001D98  0012               	return		;funcret
   697  001D9A                     __end_of_Timer0_Init:
   698                           	opt stack 0
   699                           tblptru	equ	0xFF8
   700                           tblptrh	equ	0xFF7
   701                           intcon	equ	0xFF2
   702                           postinc0	equ	0xFEE
   703                           wreg	equ	0xFE8
   704                           
   705 ;; *************** function _SetTimer0 *****************
   706 ;; Defined at:
   707 ;;		line 79 in file "_01_USER/My_Timer.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;  _tmr            2   24[COMRAM] unsigned int 
   710 ;; Auto vars:     Size  Location     Type
   711 ;;		None
   712 ;; Return value:  Size  Location     Type
   713 ;;		None               void
   714 ;; Registers used:
   715 ;;		wreg, status,2, status,0
   716 ;; Tracked objects:
   717 ;;		On entry : 0/0
   718 ;;		On exit  : 0/0
   719 ;;		Unchanged: 0/0
   720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   721 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   723 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   724 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   725 ;;Total ram usage:        4 bytes
   726 ;; Hardware stack levels used:    1
   727 ;; Hardware stack levels required when called:    3
   728 ;; This function calls:
   729 ;;		Nothing
   730 ;; This function is called by:
   731 ;;		_Timer0_Init
   732 ;; This function uses a non-reentrant model
   733 ;;
   734                           
   735                           	psect	text2
   736  001C52                     __ptext2:
   737                           	opt stack 0
   738  001C52                     _SetTimer0:
   739                           	opt stack 26
   740                           
   741                           ;My_Timer.c: 81: if(_tmr > 0xffff) _tmr = 0xffff;
   742                           
   743                           ;incstack = 0
   744  001C52  D003               	goto	l2902
   745  001C54  6819               	setf	SetTimer0@_tmr,c
   746  001C56  681A               	setf	SetTimer0@_tmr+1,c
   747  001C58  D000               	goto	l2902
   748  001C5A                     l2902:
   749                           
   750                           ;My_Timer.c: 82: _tmr=0xffff-_tmr;
   751  001C5A  C019  F01B         	movff	SetTimer0@_tmr,??_SetTimer0
   752  001C5E  C01A  F01C         	movff	SetTimer0@_tmr+1,??_SetTimer0+1
   753  001C62  1E1B               	comf	??_SetTimer0,f,c
   754  001C64  1E1C               	comf	??_SetTimer0+1,f,c
   755  001C66  4A1B               	infsnz	??_SetTimer0,f,c
   756  001C68  2A1C               	incf	??_SetTimer0+1,f,c
   757  001C6A  0EFF               	movlw	255
   758  001C6C  241B               	addwf	??_SetTimer0,w,c
   759  001C6E  6E19               	movwf	SetTimer0@_tmr,c
   760  001C70  0EFF               	movlw	255
   761  001C72  201C               	addwfc	??_SetTimer0+1,w,c
   762  001C74  6E1A               	movwf	SetTimer0@_tmr+1,c
   763                           
   764                           ;My_Timer.c: 83: TMR0H = _tmr/256;
   765  001C76  501A               	movf	SetTimer0@_tmr+1,w,c
   766  001C78  6ED7               	movwf	4055,c	;volatile
   767                           
   768                           ;My_Timer.c: 84: TMR0L = _tmr%256;
   769  001C7A  C019  FFD6         	movff	SetTimer0@_tmr,4054	;volatile
   770                           
   771                           ;My_Timer.c: 85: TMR0IF = 0;
   772  001C7E  94F2               	bcf	intcon,2,c	;volatile
   773  001C80  0012               	return		;funcret
   774  001C82                     __end_of_SetTimer0:
   775                           	opt stack 0
   776                           tblptru	equ	0xFF8
   777                           tblptrh	equ	0xFF7
   778                           intcon	equ	0xFF2
   779                           postinc0	equ	0xFEE
   780                           wreg	equ	0xFE8
   781                           
   782 ;; *************** function _Show_Result *****************
   783 ;; Defined at:
   784 ;;		line 118 in file "_01_USER/Run.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;		None
   787 ;; Auto vars:     Size  Location     Type
   788 ;;		None
   789 ;; Return value:  Size  Location     Type
   790 ;;		None               void
   791 ;; Registers used:
   792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   800 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   801 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   802 ;;Total ram usage:        1 bytes
   803 ;; Hardware stack levels used:    1
   804 ;; Hardware stack levels required when called:    7
   805 ;; This function calls:
   806 ;;		_TM1640_Show_integer
   807 ;;		___wmul
   808 ;; This function is called by:
   809 ;;		_main
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           	psect	text3
   814  0017E4                     __ptext3:
   815                           	opt stack 0
   816  0017E4                     _Show_Result:
   817                           	opt stack 23
   818                           
   819                           ;Run.c: 120: if( Handle_Switch.Show_Send_Receive )
   820                           
   821                           ;incstack = 0
   822  0017E4  5036               	movf	_Handle_Switch+3,w,c
   823  0017E6  B4D8               	btfsc	status,2,c
   824  0017E8  D01D               	goto	l2996
   825                           
   826                           ;Run.c: 121: {
   827                           ;Run.c: 122: TM1640_Show_integer( RS485_SendBuff[RS485_Num] + (RS485_Num * 1000) );
   828  0017EA  C044  F019         	movff	_RS485_Num,___wmul@multiplier
   829  0017EE  6A1A               	clrf	___wmul@multiplier+1,c
   830  0017F0  0E03               	movlw	3
   831  0017F2  6E1C               	movwf	___wmul@multiplicand+1,c
   832  0017F4  0EE8               	movlw	232
   833  0017F6  6E1B               	movwf	___wmul@multiplicand,c
   834  0017F8  EC6E  F00E         	call	___wmul	;wreg free
   835  0017FC  5044               	movf	_RS485_Num,w,c
   836  0017FE  0D01               	mullw	1
   837  001800  0E98               	movlw	low _RS485_SendBuff
   838  001802  24F3               	addwf	prodl,w,c
   839  001804  6ED9               	movwf	fsr2l,c
   840  001806  0E00               	movlw	high _RS485_SendBuff
   841  001808  20F4               	addwfc	prodh,w,c
   842  00180A  6EDA               	movwf	fsr2h,c
   843  00180C  50DF               	movf	indf2,w,c
   844  00180E  6E22               	movwf	??_Show_Result& (0+255),c
   845  001810  5022               	movf	??_Show_Result,w,c
   846  001812  2419               	addwf	?___wmul,w,c
   847  001814  6E20               	movwf	TM1640_Show_integer@Numbers,c
   848  001816  0E00               	movlw	0
   849  001818  201A               	addwfc	?___wmul+1,w,c
   850  00181A  6E21               	movwf	TM1640_Show_integer@Numbers+1,c
   851  00181C  EC83  F009         	call	_TM1640_Show_integer	;wreg free
   852                           
   853                           ;Run.c: 123: PORTEbits.RE7=0;
   854  001820  9E84               	bcf	3972,7,c	;volatile
   855                           
   856                           ;Run.c: 124: }
   857  001822  0012               	return	
   858  001824                     l2996:
   859                           
   860                           ;Run.c: 126: else
   861                           ;Run.c: 127: {
   862                           ;Run.c: 128: TM1640_Show_integer( RS485_ReceiveBuff[RS485_Num] + (RS485_Num * 1000) );
   863  001824  C044  F019         	movff	_RS485_Num,___wmul@multiplier
   864  001828  6A1A               	clrf	___wmul@multiplier+1,c
   865  00182A  0E03               	movlw	3
   866  00182C  6E1C               	movwf	___wmul@multiplicand+1,c
   867  00182E  0EE8               	movlw	232
   868  001830  6E1B               	movwf	___wmul@multiplicand,c
   869  001832  EC6E  F00E         	call	___wmul	;wreg free
   870  001836  5044               	movf	_RS485_Num,w,c
   871  001838  0D01               	mullw	1
   872  00183A  0E8E               	movlw	low _RS485_ReceiveBuff
   873  00183C  24F3               	addwf	prodl,w,c
   874  00183E  6ED9               	movwf	fsr2l,c
   875  001840  0E00               	movlw	high _RS485_ReceiveBuff
   876  001842  20F4               	addwfc	prodh,w,c
   877  001844  6EDA               	movwf	fsr2h,c
   878  001846  50DF               	movf	indf2,w,c
   879  001848  6E22               	movwf	??_Show_Result& (0+255),c
   880  00184A  5022               	movf	??_Show_Result,w,c
   881  00184C  2419               	addwf	?___wmul,w,c
   882  00184E  6E20               	movwf	TM1640_Show_integer@Numbers,c
   883  001850  0E00               	movlw	0
   884  001852  201A               	addwfc	?___wmul+1,w,c
   885  001854  6E21               	movwf	TM1640_Show_integer@Numbers+1,c
   886  001856  EC83  F009         	call	_TM1640_Show_integer	;wreg free
   887                           
   888                           ;Run.c: 129: PORTEbits.RE7=1;
   889  00185A  8E84               	bsf	3972,7,c	;volatile
   890  00185C  0012               	return	
   891  00185E  0012               	return		;funcret
   892  001860                     __end_of_Show_Result:
   893                           	opt stack 0
   894                           tblptru	equ	0xFF8
   895                           tblptrh	equ	0xFF7
   896                           prodh	equ	0xFF4
   897                           prodl	equ	0xFF3
   898                           intcon	equ	0xFF2
   899                           postinc0	equ	0xFEE
   900                           wreg	equ	0xFE8
   901                           indf2	equ	0xFDF
   902                           fsr2h	equ	0xFDA
   903                           fsr2l	equ	0xFD9
   904                           status	equ	0xFD8
   905                           
   906 ;; *************** function _TM1640_Show_integer *****************
   907 ;; Defined at:
   908 ;;		line 55 in file "_01_USER/TM1640.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;  Numbers         2   31[COMRAM] unsigned int 
   911 ;; Auto vars:     Size  Location     Type
   912 ;;		None
   913 ;; Return value:  Size  Location     Type
   914 ;;		None               void
   915 ;; Registers used:
   916 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   917 ;; Tracked objects:
   918 ;;		On entry : 0/0
   919 ;;		On exit  : 0/0
   920 ;;		Unchanged: 0/0
   921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   922 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   925 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   926 ;;Total ram usage:        2 bytes
   927 ;; Hardware stack levels used:    1
   928 ;; Hardware stack levels required when called:    6
   929 ;; This function calls:
   930 ;;		_TM1640_Writer_Dates
   931 ;;		___lwdiv
   932 ;;		___lwmod
   933 ;; This function is called by:
   934 ;;		_Show_Result
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           	psect	text4
   939  001306                     __ptext4:
   940                           	opt stack 0
   941  001306                     _TM1640_Show_integer:
   942                           	opt stack 23
   943                           
   944                           ;TM1640.c: 58: TM1640_Writer_Dates(3,LED_Number[Numbers%10]); Numbers/=10;
   945                           
   946                           ;incstack = 0
   947  001306  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
   948  00130A  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
   949  00130E  0E00               	movlw	0
   950  001310  6E1C               	movwf	___lwmod@divisor+1,c
   951  001312  0E0A               	movlw	10
   952  001314  6E1B               	movwf	___lwmod@divisor,c
   953  001316  EC2A  F00D         	call	___lwmod	;wreg free
   954  00131A  0E01               	movlw	low _LED_Number
   955  00131C  2419               	addwf	?___lwmod,w,c
   956  00131E  6EF6               	movwf	tblptrl,c
   957  001320  0E10               	movlw	high _LED_Number
   958  001322  201A               	addwfc	?___lwmod+1,w,c
   959  001324  6EF7               	movwf	tblptrh,c
   960  001326                     	if	0	;There are less than 3 active tblptr bytes
   961  001326                     	endif
   962  001326  0008               	tblrd		*
   963  001328  CFF5 F01E          	movff	tablat,TM1640_Writer_Dates@Date
   964  00132C  0E03               	movlw	3
   965  00132E  ECF1  F00E         	call	_TM1640_Writer_Dates
   966  001332  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
   967  001336  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
   968  00133A  0E00               	movlw	0
   969  00133C  6E1C               	movwf	___lwdiv@divisor+1,c
   970  00133E  0E0A               	movlw	10
   971  001340  6E1B               	movwf	___lwdiv@divisor,c
   972  001342  ECD5  F00C         	call	___lwdiv	;wreg free
   973  001346  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
   974  00134A  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
   975                           
   976                           ;TM1640.c: 59: TM1640_Writer_Dates(2,LED_Number[Numbers%10]); Numbers/=10;
   977  00134E  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
   978  001352  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
   979  001356  0E00               	movlw	0
   980  001358  6E1C               	movwf	___lwmod@divisor+1,c
   981  00135A  0E0A               	movlw	10
   982  00135C  6E1B               	movwf	___lwmod@divisor,c
   983  00135E  EC2A  F00D         	call	___lwmod	;wreg free
   984  001362  0E01               	movlw	low _LED_Number
   985  001364  2419               	addwf	?___lwmod,w,c
   986  001366  6EF6               	movwf	tblptrl,c
   987  001368  0E10               	movlw	high _LED_Number
   988  00136A  201A               	addwfc	?___lwmod+1,w,c
   989  00136C  6EF7               	movwf	tblptrh,c
   990  00136E                     	if	0	;There are less than 3 active tblptr bytes
   991  00136E                     	endif
   992  00136E  0008               	tblrd		*
   993  001370  CFF5 F01E          	movff	tablat,TM1640_Writer_Dates@Date
   994  001374  0E02               	movlw	2
   995  001376  ECF1  F00E         	call	_TM1640_Writer_Dates
   996  00137A  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
   997  00137E  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
   998  001382  0E00               	movlw	0
   999  001384  6E1C               	movwf	___lwdiv@divisor+1,c
  1000  001386  0E0A               	movlw	10
  1001  001388  6E1B               	movwf	___lwdiv@divisor,c
  1002  00138A  ECD5  F00C         	call	___lwdiv	;wreg free
  1003  00138E  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1004  001392  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1005                           
  1006                           ;TM1640.c: 60: TM1640_Writer_Dates(1,LED_Number[Numbers%10]); Numbers/=10;
  1007  001396  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1008  00139A  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1009  00139E  0E00               	movlw	0
  1010  0013A0  6E1C               	movwf	___lwmod@divisor+1,c
  1011  0013A2  0E0A               	movlw	10
  1012  0013A4  6E1B               	movwf	___lwmod@divisor,c
  1013  0013A6  EC2A  F00D         	call	___lwmod	;wreg free
  1014  0013AA  0E01               	movlw	low _LED_Number
  1015  0013AC  2419               	addwf	?___lwmod,w,c
  1016  0013AE  6EF6               	movwf	tblptrl,c
  1017  0013B0  0E10               	movlw	high _LED_Number
  1018  0013B2  201A               	addwfc	?___lwmod+1,w,c
  1019  0013B4  6EF7               	movwf	tblptrh,c
  1020  0013B6                     	if	0	;There are less than 3 active tblptr bytes
  1021  0013B6                     	endif
  1022  0013B6  0008               	tblrd		*
  1023  0013B8  CFF5 F01E          	movff	tablat,TM1640_Writer_Dates@Date
  1024  0013BC  0E01               	movlw	1
  1025  0013BE  ECF1  F00E         	call	_TM1640_Writer_Dates
  1026  0013C2  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1027  0013C6  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1028  0013CA  0E00               	movlw	0
  1029  0013CC  6E1C               	movwf	___lwdiv@divisor+1,c
  1030  0013CE  0E0A               	movlw	10
  1031  0013D0  6E1B               	movwf	___lwdiv@divisor,c
  1032  0013D2  ECD5  F00C         	call	___lwdiv	;wreg free
  1033  0013D6  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1034  0013DA  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1035                           
  1036                           ;TM1640.c: 61: TM1640_Writer_Dates(0,LED_Number[Numbers%10]);
  1037  0013DE  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1038  0013E2  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1039  0013E6  0E00               	movlw	0
  1040  0013E8  6E1C               	movwf	___lwmod@divisor+1,c
  1041  0013EA  0E0A               	movlw	10
  1042  0013EC  6E1B               	movwf	___lwmod@divisor,c
  1043  0013EE  EC2A  F00D         	call	___lwmod	;wreg free
  1044  0013F2  0E01               	movlw	low _LED_Number
  1045  0013F4  2419               	addwf	?___lwmod,w,c
  1046  0013F6  6EF6               	movwf	tblptrl,c
  1047  0013F8  0E10               	movlw	high _LED_Number
  1048  0013FA  201A               	addwfc	?___lwmod+1,w,c
  1049  0013FC  6EF7               	movwf	tblptrh,c
  1050  0013FE                     	if	0	;There are less than 3 active tblptr bytes
  1051  0013FE                     	endif
  1052  0013FE  0008               	tblrd		*
  1053  001400  CFF5 F01E          	movff	tablat,TM1640_Writer_Dates@Date
  1054  001404  0E00               	movlw	0
  1055  001406  ECF1  F00E         	call	_TM1640_Writer_Dates
  1056  00140A  0012               	return		;funcret
  1057  00140C                     __end_of_TM1640_Show_integer:
  1058                           	opt stack 0
  1059                           tblptru	equ	0xFF8
  1060                           tblptrh	equ	0xFF7
  1061                           tblptrl	equ	0xFF6
  1062                           tablat	equ	0xFF5
  1063                           prodh	equ	0xFF4
  1064                           prodl	equ	0xFF3
  1065                           intcon	equ	0xFF2
  1066                           postinc0	equ	0xFEE
  1067                           wreg	equ	0xFE8
  1068                           indf2	equ	0xFDF
  1069                           fsr2h	equ	0xFDA
  1070                           fsr2l	equ	0xFD9
  1071                           status	equ	0xFD8
  1072                           
  1073 ;; *************** function ___lwmod *****************
  1074 ;; Defined at:
  1075 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;  dividend        2   24[COMRAM] unsigned int 
  1078 ;;  divisor         2   26[COMRAM] unsigned int 
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;  counter         1   28[COMRAM] unsigned char 
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  2   24[COMRAM] unsigned int 
  1083 ;; Registers used:
  1084 ;;		wreg, status,2, status,0
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1090 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1091 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1093 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1094 ;;Total ram usage:        5 bytes
  1095 ;; Hardware stack levels used:    1
  1096 ;; Hardware stack levels required when called:    3
  1097 ;; This function calls:
  1098 ;;		Nothing
  1099 ;; This function is called by:
  1100 ;;		_TM1640_Show_integer
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104                           	psect	text5
  1105  001A54                     __ptext5:
  1106                           	opt stack 0
  1107  001A54                     ___lwmod:
  1108                           	opt stack 25
  1109                           
  1110                           ;incstack = 0
  1111  001A54  501B               	movf	___lwmod@divisor,w,c
  1112  001A56  101C               	iorwf	___lwmod@divisor+1,w,c
  1113  001A58  B4D8               	btfsc	status,2,c
  1114  001A5A  D01D               	goto	l1003
  1115  001A5C  0E01               	movlw	1
  1116  001A5E  6E1D               	movwf	___lwmod@counter,c
  1117  001A60  D005               	goto	l2824
  1118  001A62                     l2822:
  1119  001A62  90D8               	bcf	status,0,c
  1120  001A64  361B               	rlcf	___lwmod@divisor,f,c
  1121  001A66  361C               	rlcf	___lwmod@divisor+1,f,c
  1122  001A68  2A1D               	incf	___lwmod@counter,f,c
  1123  001A6A  D000               	goto	l2824
  1124  001A6C                     l2824:
  1125  001A6C  BE1C               	btfsc	___lwmod@divisor+1,7,c
  1126  001A6E  D002               	goto	l2826
  1127  001A70  D7F8               	goto	l2822
  1128  001A72  D000               	goto	l2826
  1129  001A74                     l2826:
  1130  001A74  501B               	movf	___lwmod@divisor,w,c
  1131  001A76  5C19               	subwf	___lwmod@dividend,w,c
  1132  001A78  501C               	movf	___lwmod@divisor+1,w,c
  1133  001A7A  581A               	subwfb	___lwmod@dividend+1,w,c
  1134  001A7C  A0D8               	btfss	status,0,c
  1135  001A7E  D005               	goto	l2830
  1136  001A80  501B               	movf	___lwmod@divisor,w,c
  1137  001A82  5E19               	subwf	___lwmod@dividend,f,c
  1138  001A84  501C               	movf	___lwmod@divisor+1,w,c
  1139  001A86  5A1A               	subwfb	___lwmod@dividend+1,f,c
  1140  001A88  D000               	goto	l2830
  1141  001A8A                     l2830:
  1142  001A8A  90D8               	bcf	status,0,c
  1143  001A8C  321C               	rrcf	___lwmod@divisor+1,f,c
  1144  001A8E  321B               	rrcf	___lwmod@divisor,f,c
  1145  001A90  2E1D               	decfsz	___lwmod@counter,f,c
  1146  001A92  D7F0               	goto	l2826
  1147  001A94  D000               	goto	l1003
  1148  001A96                     l1003:
  1149  001A96  C019  F019         	movff	___lwmod@dividend,?___lwmod
  1150  001A9A  C01A  F01A         	movff	___lwmod@dividend+1,?___lwmod+1
  1151  001A9E  0012               	return		;funcret
  1152  001AA0                     __end_of___lwmod:
  1153                           	opt stack 0
  1154                           tblptru	equ	0xFF8
  1155                           tblptrh	equ	0xFF7
  1156                           tblptrl	equ	0xFF6
  1157                           tablat	equ	0xFF5
  1158                           prodh	equ	0xFF4
  1159                           prodl	equ	0xFF3
  1160                           intcon	equ	0xFF2
  1161                           postinc0	equ	0xFEE
  1162                           wreg	equ	0xFE8
  1163                           indf2	equ	0xFDF
  1164                           fsr2h	equ	0xFDA
  1165                           fsr2l	equ	0xFD9
  1166                           status	equ	0xFD8
  1167                           
  1168 ;; *************** function ___lwdiv *****************
  1169 ;; Defined at:
  1170 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;  dividend        2   24[COMRAM] unsigned int 
  1173 ;;  divisor         2   26[COMRAM] unsigned int 
  1174 ;; Auto vars:     Size  Location     Type
  1175 ;;  quotient        2   29[COMRAM] unsigned int 
  1176 ;;  counter         1   28[COMRAM] unsigned char 
  1177 ;; Return value:  Size  Location     Type
  1178 ;;                  2   24[COMRAM] unsigned int 
  1179 ;; Registers used:
  1180 ;;		wreg, status,2, status,0
  1181 ;; Tracked objects:
  1182 ;;		On entry : 0/0
  1183 ;;		On exit  : 0/0
  1184 ;;		Unchanged: 0/0
  1185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1186 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1187 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1189 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1190 ;;Total ram usage:        7 bytes
  1191 ;; Hardware stack levels used:    1
  1192 ;; Hardware stack levels required when called:    3
  1193 ;; This function calls:
  1194 ;;		Nothing
  1195 ;; This function is called by:
  1196 ;;		_TM1640_Show_integer
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           
  1200                           	psect	text6
  1201  0019AA                     __ptext6:
  1202                           	opt stack 0
  1203  0019AA                     ___lwdiv:
  1204                           	opt stack 25
  1205                           
  1206                           ;incstack = 0
  1207  0019AA  0E00               	movlw	0
  1208  0019AC  6E1F               	movwf	___lwdiv@quotient+1,c
  1209  0019AE  0E00               	movlw	0
  1210  0019B0  6E1E               	movwf	___lwdiv@quotient,c
  1211  0019B2  501B               	movf	___lwdiv@divisor,w,c
  1212  0019B4  101C               	iorwf	___lwdiv@divisor+1,w,c
  1213  0019B6  B4D8               	btfsc	status,2,c
  1214  0019B8  D021               	goto	l993
  1215  0019BA  0E01               	movlw	1
  1216  0019BC  6E1D               	movwf	___lwdiv@counter,c
  1217  0019BE  D005               	goto	l2804
  1218  0019C0                     l2802:
  1219  0019C0  90D8               	bcf	status,0,c
  1220  0019C2  361B               	rlcf	___lwdiv@divisor,f,c
  1221  0019C4  361C               	rlcf	___lwdiv@divisor+1,f,c
  1222  0019C6  2A1D               	incf	___lwdiv@counter,f,c
  1223  0019C8  D000               	goto	l2804
  1224  0019CA                     l2804:
  1225  0019CA  BE1C               	btfsc	___lwdiv@divisor+1,7,c
  1226  0019CC  D002               	goto	l2806
  1227  0019CE  D7F8               	goto	l2802
  1228  0019D0  D000               	goto	l2806
  1229  0019D2                     l2806:
  1230  0019D2  90D8               	bcf	status,0,c
  1231  0019D4  361E               	rlcf	___lwdiv@quotient,f,c
  1232  0019D6  361F               	rlcf	___lwdiv@quotient+1,f,c
  1233  0019D8  501B               	movf	___lwdiv@divisor,w,c
  1234  0019DA  5C19               	subwf	___lwdiv@dividend,w,c
  1235  0019DC  501C               	movf	___lwdiv@divisor+1,w,c
  1236  0019DE  581A               	subwfb	___lwdiv@dividend+1,w,c
  1237  0019E0  A0D8               	btfss	status,0,c
  1238  0019E2  D006               	goto	l2814
  1239  0019E4  501B               	movf	___lwdiv@divisor,w,c
  1240  0019E6  5E19               	subwf	___lwdiv@dividend,f,c
  1241  0019E8  501C               	movf	___lwdiv@divisor+1,w,c
  1242  0019EA  5A1A               	subwfb	___lwdiv@dividend+1,f,c
  1243  0019EC  801E               	bsf	___lwdiv@quotient,0,c
  1244  0019EE  D000               	goto	l2814
  1245  0019F0                     l2814:
  1246  0019F0  90D8               	bcf	status,0,c
  1247  0019F2  321C               	rrcf	___lwdiv@divisor+1,f,c
  1248  0019F4  321B               	rrcf	___lwdiv@divisor,f,c
  1249  0019F6  2E1D               	decfsz	___lwdiv@counter,f,c
  1250  0019F8  D7EC               	goto	l2806
  1251  0019FA  D000               	goto	l993
  1252  0019FC                     l993:
  1253  0019FC  C01E  F019         	movff	___lwdiv@quotient,?___lwdiv
  1254  001A00  C01F  F01A         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1255  001A04  0012               	return		;funcret
  1256  001A06                     __end_of___lwdiv:
  1257                           	opt stack 0
  1258                           tblptru	equ	0xFF8
  1259                           tblptrh	equ	0xFF7
  1260                           tblptrl	equ	0xFF6
  1261                           tablat	equ	0xFF5
  1262                           prodh	equ	0xFF4
  1263                           prodl	equ	0xFF3
  1264                           intcon	equ	0xFF2
  1265                           postinc0	equ	0xFEE
  1266                           wreg	equ	0xFE8
  1267                           indf2	equ	0xFDF
  1268                           fsr2h	equ	0xFDA
  1269                           fsr2l	equ	0xFD9
  1270                           status	equ	0xFD8
  1271                           
  1272 ;; *************** function _TM1640_Writer_Dates *****************
  1273 ;; Defined at:
  1274 ;;		line 66 in file "_01_USER/TM1640.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;  Addr            1    wreg     unsigned char 
  1277 ;;  Date            1   29[COMRAM] unsigned char 
  1278 ;; Auto vars:     Size  Location     Type
  1279 ;;  Addr            1   30[COMRAM] unsigned char 
  1280 ;; Return value:  Size  Location     Type
  1281 ;;		None               void
  1282 ;; Registers used:
  1283 ;;		wreg, status,2, status,0, cstack
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1289 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1290 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1292 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1293 ;;Total ram usage:        2 bytes
  1294 ;; Hardware stack levels used:    1
  1295 ;; Hardware stack levels required when called:    5
  1296 ;; This function calls:
  1297 ;;		_TM1640_Start
  1298 ;;		_TM1640_Stop
  1299 ;;		_TM1640_Writer_Byte
  1300 ;; This function is called by:
  1301 ;;		_TM1640_Show_integer
  1302 ;;		_TM1640_Show_Decimal
  1303 ;; This function uses a non-reentrant model
  1304 ;;
  1305                           
  1306                           	psect	text7
  1307  001DE2                     __ptext7:
  1308                           	opt stack 0
  1309  001DE2                     _TM1640_Writer_Dates:
  1310                           	opt stack 23
  1311                           
  1312                           ;incstack = 0
  1313                           ;TM1640_Writer_Dates@Addr stored from wreg
  1314  001DE2  6E1F               	movwf	TM1640_Writer_Dates@Addr,c
  1315                           
  1316                           ;TM1640.c: 68: if((Addr >= 0) && (Addr <= 3))
  1317  001DE4  0E04               	movlw	4
  1318  001DE6  601F               	cpfslt	TM1640_Writer_Dates@Addr,c
  1319  001DE8  0012               	return	
  1320                           
  1321                           ;TM1640.c: 69: {
  1322                           ;TM1640.c: 70: TM1640_Start();
  1323  001DEA  ECDF  F00E         	call	_TM1640_Start	;wreg free
  1324                           
  1325                           ;TM1640.c: 71: TM1640_Writer_Byte(0xC0 + Addr);
  1326  001DEE  501F               	movf	TM1640_Writer_Dates@Addr,w,c
  1327  001DF0  0FC0               	addlw	192
  1328  001DF2  EC9B  F00D         	call	_TM1640_Writer_Byte
  1329                           
  1330                           ;TM1640.c: 72: TM1640_Writer_Byte(Date);
  1331  001DF6  501E               	movf	TM1640_Writer_Dates@Date,w,c
  1332  001DF8  EC9B  F00D         	call	_TM1640_Writer_Byte
  1333                           
  1334                           ;TM1640.c: 73: TM1640_Stop();
  1335  001DFC  ECCD  F00E         	call	_TM1640_Stop	;wreg free
  1336  001E00  0012               	return	
  1337  001E02  0012               	return		;funcret
  1338  001E04                     __end_of_TM1640_Writer_Dates:
  1339                           	opt stack 0
  1340                           tblptru	equ	0xFF8
  1341                           tblptrh	equ	0xFF7
  1342                           tblptrl	equ	0xFF6
  1343                           tablat	equ	0xFF5
  1344                           prodh	equ	0xFF4
  1345                           prodl	equ	0xFF3
  1346                           intcon	equ	0xFF2
  1347                           postinc0	equ	0xFEE
  1348                           wreg	equ	0xFE8
  1349                           indf2	equ	0xFDF
  1350                           fsr2h	equ	0xFDA
  1351                           fsr2l	equ	0xFD9
  1352                           status	equ	0xFD8
  1353                           
  1354 ;; *************** function _Run *****************
  1355 ;; Defined at:
  1356 ;;		line 92 in file "_01_USER/Run.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;		None
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;		None
  1361 ;; Return value:  Size  Location     Type
  1362 ;;		None               void
  1363 ;; Registers used:
  1364 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1374 ;;Total ram usage:        0 bytes
  1375 ;; Hardware stack levels used:    1
  1376 ;; Hardware stack levels required when called:    6
  1377 ;; This function calls:
  1378 ;;		_Get_ADC6
  1379 ;;		_RS485_Send_Date
  1380 ;; This function is called by:
  1381 ;;		_main
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           	psect	text8
  1386  001CB2                     __ptext8:
  1387                           	opt stack 0
  1388  001CB2                     _Run:
  1389                           	opt stack 24
  1390                           
  1391                           ;Run.c: 95: if( Handle_Switch.ADC6 ) Get_ADC6();
  1392                           
  1393                           ;incstack = 0
  1394  001CB2  5034               	movf	_Handle_Switch+1,w,c
  1395  001CB4  B4D8               	btfsc	status,2,c
  1396  001CB6  D003               	goto	l2984
  1397  001CB8  EC9F  F00C         	call	_Get_ADC6	;wreg free
  1398  001CBC  D000               	goto	l2984
  1399  001CBE                     l2984:
  1400                           
  1401                           ;Run.c: 98: if ( Handle_Switch.Usart_OneDate )
  1402  001CBE  5035               	movf	_Handle_Switch+2,w,c
  1403  001CC0  B4D8               	btfsc	status,2,c
  1404  001CC2  0012               	return	
  1405                           
  1406                           ;Run.c: 99: {
  1407                           ;Run.c: 100: Handle_Switch.Usart_OneDate = 0;
  1408  001CC4  0E00               	movlw	0
  1409  001CC6  6E35               	movwf	_Handle_Switch+2,c
  1410                           
  1411                           ;Run.c: 101: RS485_Send_Date(RS485_SendBuff,10);
  1412  001CC8  0E98               	movlw	low _RS485_SendBuff
  1413  001CCA  6E2A               	movwf	RS485_Send_Date@date_dress,c
  1414  001CCC  0E00               	movlw	high _RS485_SendBuff
  1415  001CCE  6E2B               	movwf	RS485_Send_Date@date_dress+1,c
  1416  001CD0  0E0A               	movlw	10
  1417  001CD2  6E2C               	movwf	RS485_Send_Date@date_lenth,c
  1418  001CD4  EC63  F00B         	call	_RS485_Send_Date	;wreg free
  1419  001CD8  0012               	return	
  1420  001CDA  0012               	return		;funcret
  1421  001CDC                     __end_of_Run:
  1422                           	opt stack 0
  1423                           tblptru	equ	0xFF8
  1424                           tblptrh	equ	0xFF7
  1425                           tblptrl	equ	0xFF6
  1426                           tablat	equ	0xFF5
  1427                           prodh	equ	0xFF4
  1428                           prodl	equ	0xFF3
  1429                           intcon	equ	0xFF2
  1430                           postinc0	equ	0xFEE
  1431                           wreg	equ	0xFE8
  1432                           indf2	equ	0xFDF
  1433                           fsr2h	equ	0xFDA
  1434                           fsr2l	equ	0xFD9
  1435                           status	equ	0xFD8
  1436                           
  1437 ;; *************** function _RS485_Send_Date *****************
  1438 ;; Defined at:
  1439 ;;		line 74 in file "_01_USER/My_USART.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;  date_dress      2   41[COMRAM] PTR unsigned char 
  1442 ;;		 -> RS485_SendBuff(10), 
  1443 ;;  date_lenth      1   43[COMRAM] unsigned char 
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;  i               2   44[COMRAM] unsigned int 
  1446 ;; Return value:  Size  Location     Type
  1447 ;;		None               void
  1448 ;; Registers used:
  1449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1450 ;; Tracked objects:
  1451 ;;		On entry : 0/0
  1452 ;;		On exit  : 0/0
  1453 ;;		Unchanged: 0/0
  1454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1455 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1456 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1458 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1459 ;;Total ram usage:        5 bytes
  1460 ;; Hardware stack levels used:    1
  1461 ;; Hardware stack levels required when called:    5
  1462 ;; This function calls:
  1463 ;;		_CRC_Verify
  1464 ;; This function is called by:
  1465 ;;		_Run
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469                           	psect	text9
  1470  0016C6                     __ptext9:
  1471                           	opt stack 0
  1472  0016C6                     _RS485_Send_Date:
  1473                           	opt stack 24
  1474                           
  1475                           ;My_USART.c: 76: unsigned int i;
  1476                           ;My_USART.c: 77: while( (!TXSTA2bits.TRMT));
  1477                           
  1478                           ;incstack = 0
  1479  0016C6  D000               	goto	l156
  1480  0016C8                     l156:
  1481  0016C8  010F               	movlb	15	; () banked
  1482  0016CA  A321               	btfss	33,1,b	;volatile
  1483  0016CC  D7FD               	goto	l156
  1484                           
  1485                           ; BSR set to: 15
  1486                           ;My_USART.c: 78: RG3 = 0;
  1487  0016CE  9686               	bcf	3974,3,c	;volatile
  1488                           
  1489                           ; BSR set to: 15
  1490                           ;My_USART.c: 81: RS485_SendBuff[0] = 0xaa;
  1491  0016D0  0EAA               	movlw	170
  1492  0016D2  0100               	movlb	0	; () banked
  1493  0016D4  6F98               	movwf	_RS485_SendBuff& (0+255),b
  1494                           
  1495                           ;My_USART.c: 84: for(i = 0; i < 10 -2;i++)
  1496  0016D6  0E00               	movlw	0
  1497  0016D8  6E2E               	movwf	RS485_Send_Date@i+1,c
  1498  0016DA  0E00               	movlw	0
  1499  0016DC  6E2D               	movwf	RS485_Send_Date@i,c
  1500  0016DE                     l2882:
  1501                           
  1502                           ; BSR set to: 0
  1503  0016DE  502E               	movf	RS485_Send_Date@i+1,w,c
  1504  0016E0  E119               	bnz	l2892
  1505  0016E2  0E08               	movlw	8
  1506  0016E4  5C2D               	subwf	RS485_Send_Date@i,w,c
  1507  0016E6  B0D8               	btfsc	status,0,c
  1508  0016E8  D015               	goto	l2892
  1509  0016EA  D001               	goto	l2886
  1510                           
  1511                           ; BSR set to: 0
  1512  0016EC  D013               	goto	l2892
  1513  0016EE                     l2886:
  1514                           
  1515                           ;My_USART.c: 85: {
  1516                           ;My_USART.c: 86: TXREG2 = date_dress[date_lenth];
  1517  0016EE  502C               	movf	RS485_Send_Date@date_lenth,w,c
  1518  0016F0  0D01               	mullw	1
  1519  0016F2  50F3               	movf	prodl,w,c
  1520  0016F4  242A               	addwf	RS485_Send_Date@date_dress,w,c
  1521  0016F6  6ED9               	movwf	fsr2l,c
  1522  0016F8  50F4               	movf	prodh,w,c
  1523  0016FA  202B               	addwfc	RS485_Send_Date@date_dress+1,w,c
  1524  0016FC  6EDA               	movwf	fsr2h,c
  1525  0016FE  50DF               	movf	indf2,w,c
  1526  001700  010F               	movlb	15	; () banked
  1527  001702  6F1C               	movwf	28,b	;volatile
  1528                           
  1529                           ;My_USART.c: 87: while( (!TXSTA2bits.TRMT));
  1530  001704  D000               	goto	l161
  1531  001706                     l161:
  1532                           
  1533                           ; BSR set to: 15
  1534  001706  010F               	movlb	15	; () banked
  1535  001708  A321               	btfss	33,1,b	;volatile
  1536  00170A  D7FD               	goto	l161
  1537                           
  1538                           ; BSR set to: 15
  1539                           
  1540                           ; BSR set to: 15
  1541  00170C  4A2D               	infsnz	RS485_Send_Date@i,f,c
  1542  00170E  2A2E               	incf	RS485_Send_Date@i+1,f,c
  1543  001710  D7E6               	goto	l2882
  1544                           
  1545                           ; BSR set to: 15
  1546  001712  D000               	goto	l2892
  1547  001714                     l2892:
  1548                           
  1549                           ;My_USART.c: 88: }
  1550                           ;My_USART.c: 91: date_dress[10 - 1] = 0xaa;
  1551  001714  EE20 F009          	lfsr	2,9
  1552  001718  502A               	movf	RS485_Send_Date@date_dress,w,c
  1553  00171A  26D9               	addwf	fsr2l,f,c
  1554  00171C  502B               	movf	RS485_Send_Date@date_dress+1,w,c
  1555  00171E  22DA               	addwfc	fsr2h,f,c
  1556  001720  0EAA               	movlw	170
  1557  001722  6EDF               	movwf	indf2,c
  1558                           
  1559                           ;My_USART.c: 92: CRC_Verify(date_dress,10 - 2,&RS485_SendBuff[8],&RS485_SendBuff[9]);
  1560  001724  C02A  F01F         	movff	RS485_Send_Date@date_dress,CRC_Verify@_pucBuf
  1561  001728  C02B  F020         	movff	RS485_Send_Date@date_dress+1,CRC_Verify@_pucBuf+1
  1562  00172C  0E08               	movlw	8
  1563  00172E  6E21               	movwf	CRC_Verify@_usLen,c
  1564  001730  0EA0               	movlw	low (_RS485_SendBuff+8)
  1565  001732  6E22               	movwf	CRC_Verify@_ucHByte,c
  1566  001734  0E00               	movlw	high (_RS485_SendBuff+8)
  1567  001736  6E23               	movwf	CRC_Verify@_ucHByte+1,c
  1568  001738  0EA1               	movlw	low (_RS485_SendBuff+9)
  1569  00173A  6E24               	movwf	CRC_Verify@_ucLByte,c
  1570  00173C  0E00               	movlw	high (_RS485_SendBuff+9)
  1571  00173E  6E25               	movwf	CRC_Verify@_ucLByte+1,c
  1572  001740  EC68  F00C         	call	_CRC_Verify	;wreg free
  1573                           
  1574                           ;My_USART.c: 94: TXREG2 = RS485_SendBuff[8];
  1575  001744  C0A0  FF1C         	movff	_RS485_SendBuff+8,3868	;volatile
  1576                           
  1577                           ;My_USART.c: 95: while( (!TXSTA2bits.TRMT));
  1578  001748  D000               	goto	l164
  1579  00174A                     l164:
  1580  00174A  010F               	movlb	15	; () banked
  1581  00174C  A321               	btfss	33,1,b	;volatile
  1582  00174E  D7FD               	goto	l164
  1583                           
  1584                           ; BSR set to: 15
  1585                           ;My_USART.c: 96: TXREG2 = RS485_SendBuff[9];
  1586  001750  C0A1  FF1C         	movff	_RS485_SendBuff+9,3868	;volatile
  1587                           
  1588                           ;My_USART.c: 97: while( (!TXSTA2bits.TRMT));
  1589  001754  D000               	goto	l167
  1590  001756                     l167:
  1591                           
  1592                           ; BSR set to: 15
  1593  001756  010F               	movlb	15	; () banked
  1594  001758  A321               	btfss	33,1,b	;volatile
  1595  00175A  D7FD               	goto	l167
  1596                           
  1597                           ; BSR set to: 15
  1598                           ;My_USART.c: 99: RG3 = 1;
  1599  00175C  8686               	bsf	3974,3,c	;volatile
  1600                           
  1601                           ; BSR set to: 15
  1602  00175E  0012               	return		;funcret
  1603  001760                     __end_of_RS485_Send_Date:
  1604                           	opt stack 0
  1605                           tblptru	equ	0xFF8
  1606                           tblptrh	equ	0xFF7
  1607                           tblptrl	equ	0xFF6
  1608                           tablat	equ	0xFF5
  1609                           prodh	equ	0xFF4
  1610                           prodl	equ	0xFF3
  1611                           intcon	equ	0xFF2
  1612                           postinc0	equ	0xFEE
  1613                           wreg	equ	0xFE8
  1614                           indf2	equ	0xFDF
  1615                           fsr2h	equ	0xFDA
  1616                           fsr2l	equ	0xFD9
  1617                           status	equ	0xFD8
  1618                           
  1619 ;; *************** function _CRC_Verify *****************
  1620 ;; Defined at:
  1621 ;;		line 137 in file "_01_USER/My_USART.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  _pucBuf         2   30[COMRAM] PTR unsigned char 
  1624 ;;		 -> RS485_SendBuff(10), 
  1625 ;;  _usLen          1   32[COMRAM] unsigned char 
  1626 ;;  _ucHByte        2   33[COMRAM] PTR unsigned char 
  1627 ;;		 -> RS485_SendBuff(10), 
  1628 ;;  _ucLByte        2   35[COMRAM] PTR unsigned char 
  1629 ;;		 -> RS485_SendBuff(10), 
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;  usCrc           2   38[COMRAM] unsigned int 
  1632 ;;  i               1   40[COMRAM] unsigned char 
  1633 ;; Return value:  Size  Location     Type
  1634 ;;		None               void
  1635 ;; Registers used:
  1636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1637 ;; Tracked objects:
  1638 ;;		On entry : 0/0
  1639 ;;		On exit  : 0/0
  1640 ;;		Unchanged: 0/0
  1641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1642 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1643 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1644 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1645 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1646 ;;Total ram usage:       11 bytes
  1647 ;; Hardware stack levels used:    1
  1648 ;; Hardware stack levels required when called:    4
  1649 ;; This function calls:
  1650 ;;		___wmul
  1651 ;; This function is called by:
  1652 ;;		_RS485_Send_Date
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656                           	psect	text10
  1657  0018D0                     __ptext10:
  1658                           	opt stack 0
  1659  0018D0                     _CRC_Verify:
  1660                           	opt stack 24
  1661                           
  1662                           ;My_USART.c: 139: char i = 0;
  1663                           
  1664                           ; BSR set to: 15
  1665                           ;incstack = 0
  1666  0018D0  0E00               	movlw	0
  1667  0018D2  6E29               	movwf	CRC_Verify@i,c
  1668                           
  1669                           ;My_USART.c: 140: unsigned int usCrc = 0;
  1670  0018D4  0E00               	movlw	0
  1671  0018D6  6E28               	movwf	CRC_Verify@usCrc+1,c
  1672  0018D8  0E00               	movlw	0
  1673  0018DA  6E27               	movwf	CRC_Verify@usCrc,c
  1674                           
  1675                           ;My_USART.c: 142: for(i = 0 ; i < _usLen ; i++)
  1676  0018DC  0E00               	movlw	0
  1677  0018DE  6E29               	movwf	CRC_Verify@i,c
  1678  0018E0  D01D               	goto	l2682
  1679  0018E2                     l2678:
  1680                           
  1681                           ;My_USART.c: 143: usCrc = (usCrc+_pucBuf[i]*(i+1))%65536;
  1682  0018E2  0E01               	movlw	1
  1683  0018E4  2429               	addwf	CRC_Verify@i,w,c
  1684  0018E6  6E19               	movwf	___wmul@multiplier,c
  1685  0018E8  6A1A               	clrf	___wmul@multiplier+1,c
  1686  0018EA  0E00               	movlw	0
  1687  0018EC  221A               	addwfc	___wmul@multiplier+1,f,c
  1688  0018EE  5029               	movf	CRC_Verify@i,w,c
  1689  0018F0  0D01               	mullw	1
  1690  0018F2  50F3               	movf	prodl,w,c
  1691  0018F4  241F               	addwf	CRC_Verify@_pucBuf,w,c
  1692  0018F6  6ED9               	movwf	fsr2l,c
  1693  0018F8  50F4               	movf	prodh,w,c
  1694  0018FA  2020               	addwfc	CRC_Verify@_pucBuf+1,w,c
  1695  0018FC  6EDA               	movwf	fsr2h,c
  1696  0018FE  50DF               	movf	indf2,w,c
  1697  001900  6E26               	movwf	??_CRC_Verify& (0+255),c
  1698  001902  5026               	movf	??_CRC_Verify,w,c
  1699  001904  6E1B               	movwf	___wmul@multiplicand,c
  1700  001906  6A1C               	clrf	___wmul@multiplicand+1,c
  1701  001908  EC6E  F00E         	call	___wmul	;wreg free
  1702  00190C  5027               	movf	CRC_Verify@usCrc,w,c
  1703  00190E  2419               	addwf	?___wmul,w,c
  1704  001910  6E27               	movwf	CRC_Verify@usCrc,c
  1705  001912  5028               	movf	CRC_Verify@usCrc+1,w,c
  1706  001914  201A               	addwfc	?___wmul+1,w,c
  1707  001916  6E28               	movwf	CRC_Verify@usCrc+1,c
  1708  001918  2A29               	incf	CRC_Verify@i,f,c
  1709  00191A  D000               	goto	l2682
  1710  00191C                     l2682:
  1711  00191C  5021               	movf	CRC_Verify@_usLen,w,c
  1712  00191E  5C29               	subwf	CRC_Verify@i,w,c
  1713  001920  A0D8               	btfss	status,0,c
  1714  001922  D7DF               	goto	l2678
  1715                           
  1716                           ;My_USART.c: 145: *_ucHByte = usCrc / 256;
  1717  001924  5028               	movf	CRC_Verify@usCrc+1,w,c
  1718  001926  C022  FFD9         	movff	CRC_Verify@_ucHByte,fsr2l
  1719  00192A  C023  FFDA         	movff	CRC_Verify@_ucHByte+1,fsr2h
  1720  00192E  6EDF               	movwf	indf2,c
  1721                           
  1722                           ;My_USART.c: 146: *_ucLByte = usCrc % 256;
  1723  001930  C024  FFD9         	movff	CRC_Verify@_ucLByte,fsr2l
  1724  001934  C025  FFDA         	movff	CRC_Verify@_ucLByte+1,fsr2h
  1725  001938  C027  FFDF         	movff	CRC_Verify@usCrc,indf2
  1726  00193C  0012               	return		;funcret
  1727  00193E                     __end_of_CRC_Verify:
  1728                           	opt stack 0
  1729                           tblptru	equ	0xFF8
  1730                           tblptrh	equ	0xFF7
  1731                           tblptrl	equ	0xFF6
  1732                           tablat	equ	0xFF5
  1733                           prodh	equ	0xFF4
  1734                           prodl	equ	0xFF3
  1735                           intcon	equ	0xFF2
  1736                           postinc0	equ	0xFEE
  1737                           wreg	equ	0xFE8
  1738                           indf2	equ	0xFDF
  1739                           fsr2h	equ	0xFDA
  1740                           fsr2l	equ	0xFD9
  1741                           status	equ	0xFD8
  1742                           
  1743 ;; *************** function ___wmul *****************
  1744 ;; Defined at:
  1745 ;;		line 15 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  1746 ;; Parameters:    Size  Location     Type
  1747 ;;  multiplier      2   24[COMRAM] unsigned int 
  1748 ;;  multiplicand    2   26[COMRAM] unsigned int 
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;  product         2   28[COMRAM] unsigned int 
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  2   24[COMRAM] unsigned int 
  1753 ;; Registers used:
  1754 ;;		wreg, status,2, status,0, prodl, prodh
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1760 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1761 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1763 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1764 ;;Total ram usage:        6 bytes
  1765 ;; Hardware stack levels used:    1
  1766 ;; Hardware stack levels required when called:    3
  1767 ;; This function calls:
  1768 ;;		Nothing
  1769 ;; This function is called by:
  1770 ;;		_CRC_Verify
  1771 ;;		_Show_Result
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775                           	psect	text11
  1776  001CDC                     __ptext11:
  1777                           	opt stack 0
  1778  001CDC                     ___wmul:
  1779                           	opt stack 26
  1780                           
  1781                           ;incstack = 0
  1782  001CDC  5019               	movf	___wmul@multiplier,w,c
  1783  001CDE  021B               	mulwf	___wmul@multiplicand,c
  1784  001CE0  CFF3 F01D          	movff	prodl,___wmul@product
  1785  001CE4  CFF4 F01E          	movff	prodh,___wmul@product+1
  1786  001CE8  5019               	movf	___wmul@multiplier,w,c
  1787  001CEA  021C               	mulwf	___wmul@multiplicand+1,c
  1788  001CEC  50F3               	movf	prodl,w,c
  1789  001CEE  261E               	addwf	___wmul@product+1,f,c
  1790  001CF0  501A               	movf	___wmul@multiplier+1,w,c
  1791  001CF2  021B               	mulwf	___wmul@multiplicand,c
  1792  001CF4  50F3               	movf	prodl,w,c
  1793  001CF6  261E               	addwf	___wmul@product+1,f,c
  1794  001CF8  C01D  F019         	movff	___wmul@product,?___wmul
  1795  001CFC  C01E  F01A         	movff	___wmul@product+1,?___wmul+1
  1796  001D00  0012               	return	
  1797  001D02  0012               	return		;funcret
  1798  001D04                     __end_of___wmul:
  1799                           	opt stack 0
  1800                           tblptru	equ	0xFF8
  1801                           tblptrh	equ	0xFF7
  1802                           tblptrl	equ	0xFF6
  1803                           tablat	equ	0xFF5
  1804                           prodh	equ	0xFF4
  1805                           prodl	equ	0xFF3
  1806                           intcon	equ	0xFF2
  1807                           postinc0	equ	0xFEE
  1808                           wreg	equ	0xFE8
  1809                           indf2	equ	0xFDF
  1810                           fsr2h	equ	0xFDA
  1811                           fsr2l	equ	0xFD9
  1812                           status	equ	0xFD8
  1813                           
  1814 ;; *************** function _Get_ADC6 *****************
  1815 ;; Defined at:
  1816 ;;		line 67 in file "_01_USER/My_ADC.c"
  1817 ;; Parameters:    Size  Location     Type
  1818 ;;		None
  1819 ;; Auto vars:     Size  Location     Type
  1820 ;;		None
  1821 ;; Return value:  Size  Location     Type
  1822 ;;		None               void
  1823 ;; Registers used:
  1824 ;;		wreg, status,2, status,0, cstack
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1834 ;;Total ram usage:        0 bytes
  1835 ;; Hardware stack levels used:    1
  1836 ;; Hardware stack levels required when called:    5
  1837 ;; This function calls:
  1838 ;;		_BusyADC
  1839 ;;		_ConvertADC
  1840 ;;		_ReadADC
  1841 ;;		___ftdiv
  1842 ;;		___ftmul
  1843 ;;		___lwtoft
  1844 ;; This function is called by:
  1845 ;;		_Run
  1846 ;; This function uses a non-reentrant model
  1847 ;;
  1848                           
  1849                           	psect	text12
  1850  00193E                     __ptext12:
  1851                           	opt stack 0
  1852  00193E                     _Get_ADC6:
  1853                           	opt stack 24
  1854                           
  1855                           ;My_ADC.c: 69: ConvertADC();
  1856                           
  1857                           ;incstack = 0
  1858  00193E  EC41  F00F         	call	_ConvertADC	;wreg free
  1859                           
  1860                           ;My_ADC.c: 70: while(BusyADC());
  1861  001942  D000               	goto	l2934
  1862  001944                     l2934:
  1863  001944  EC2F  F00F         	call	_BusyADC	;wreg free
  1864  001948  0900               	iorlw	0
  1865  00194A  A4D8               	btfss	status,2,c
  1866  00194C  D7FB               	goto	l2934
  1867                           
  1868                           ;My_ADC.c: 71: ADC6_Buff =(unsigned int)ReadADC()*4.096f/4095.0f;
  1869  00194E  0E12               	movlw	18
  1870  001950  6E27               	movwf	___ftmul@f2,c
  1871  001952  0E83               	movlw	131
  1872  001954  6E28               	movwf	___ftmul@f2+1,c
  1873  001956  0E40               	movlw	64
  1874  001958  6E29               	movwf	___ftmul@f2+2,c
  1875  00195A  EC27  F00F         	call	_ReadADC	;wreg free
  1876  00195E  C019  F021         	movff	?_ReadADC,___lwtoft@c
  1877  001962  C01A  F022         	movff	?_ReadADC+1,___lwtoft@c+1
  1878  001966  EC95  F00E         	call	___lwtoft	;wreg free
  1879  00196A  C021  F024         	movff	?___lwtoft,___ftmul@f1
  1880  00196E  C022  F025         	movff	?___lwtoft+1,___ftmul@f1+1
  1881  001972  C023  F026         	movff	?___lwtoft+2,___ftmul@f1+2
  1882  001976  EC06  F00A         	call	___ftmul	;wreg free
  1883  00197A  C024  F0A2         	movff	?___ftmul,___ftdiv@f1
  1884  00197E  C025  F0A3         	movff	?___ftmul+1,___ftdiv@f1+1
  1885  001982  C026  F0A4         	movff	?___ftmul+2,___ftdiv@f1+2
  1886  001986  0EF0               	movlw	240
  1887  001988  0100               	movlb	0	; () banked
  1888  00198A  6FA5               	movwf	___ftdiv@f2& (0+255),b
  1889  00198C  0E7F               	movlw	127
  1890  00198E  0100               	movlb	0	; () banked
  1891  001990  6FA6               	movwf	(___ftdiv@f2+1)& (0+255),b
  1892  001992  0E45               	movlw	69
  1893  001994  0100               	movlb	0	; () banked
  1894  001996  6FA7               	movwf	(___ftdiv@f2+2)& (0+255),b
  1895  001998  ECDA  F008         	call	___ftdiv	;wreg free
  1896  00199C  C0A2  F03B         	movff	?___ftdiv,_ADC6_Buff	;volatile
  1897  0019A0  C0A3  F03C         	movff	?___ftdiv+1,_ADC6_Buff+1	;volatile
  1898  0019A4  C0A4  F03D         	movff	?___ftdiv+2,_ADC6_Buff+2	;volatile
  1899  0019A8  0012               	return		;funcret
  1900  0019AA                     __end_of_Get_ADC6:
  1901                           	opt stack 0
  1902                           tblptru	equ	0xFF8
  1903                           tblptrh	equ	0xFF7
  1904                           tblptrl	equ	0xFF6
  1905                           tablat	equ	0xFF5
  1906                           prodh	equ	0xFF4
  1907                           prodl	equ	0xFF3
  1908                           intcon	equ	0xFF2
  1909                           postinc0	equ	0xFEE
  1910                           wreg	equ	0xFE8
  1911                           indf2	equ	0xFDF
  1912                           fsr2h	equ	0xFDA
  1913                           fsr2l	equ	0xFD9
  1914                           status	equ	0xFD8
  1915                           
  1916 ;; *************** function ___lwtoft *****************
  1917 ;; Defined at:
  1918 ;;		line 28 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  1919 ;; Parameters:    Size  Location     Type
  1920 ;;  c               2   32[COMRAM] unsigned int 
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;		None
  1923 ;; Return value:  Size  Location     Type
  1924 ;;                  3   32[COMRAM] float 
  1925 ;; Registers used:
  1926 ;;		wreg, status,2, status,0, cstack
  1927 ;; Tracked objects:
  1928 ;;		On entry : 0/0
  1929 ;;		On exit  : 0/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1932 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1935 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1936 ;;Total ram usage:        3 bytes
  1937 ;; Hardware stack levels used:    1
  1938 ;; Hardware stack levels required when called:    4
  1939 ;; This function calls:
  1940 ;;		___ftpack
  1941 ;; This function is called by:
  1942 ;;		_Get_ADC6
  1943 ;; This function uses a non-reentrant model
  1944 ;;
  1945                           
  1946                           	psect	text13
  1947  001D2A                     __ptext13:
  1948                           	opt stack 0
  1949  001D2A                     ___lwtoft:
  1950                           	opt stack 24
  1951                           
  1952                           ;incstack = 0
  1953  001D2A  C021  F019         	movff	___lwtoft@c,___ftpack@arg
  1954  001D2E  C022  F01A         	movff	___lwtoft@c+1,___ftpack@arg+1
  1955  001D32  6A1B               	clrf	___ftpack@arg+2,c
  1956  001D34  0E8E               	movlw	142
  1957  001D36  6E1C               	movwf	___ftpack@exp,c
  1958  001D38  0E00               	movlw	0
  1959  001D3A  6E1D               	movwf	___ftpack@sign,c
  1960  001D3C  EC00  F00B         	call	___ftpack	;wreg free
  1961  001D40  C019  F021         	movff	?___ftpack,?___lwtoft
  1962  001D44  C01A  F022         	movff	?___ftpack+1,?___lwtoft+1
  1963  001D48  C01B  F023         	movff	?___ftpack+2,?___lwtoft+2
  1964  001D4C  0012               	return	
  1965  001D4E  0012               	return		;funcret
  1966  001D50                     __end_of___lwtoft:
  1967                           	opt stack 0
  1968                           tblptru	equ	0xFF8
  1969                           tblptrh	equ	0xFF7
  1970                           tblptrl	equ	0xFF6
  1971                           tablat	equ	0xFF5
  1972                           prodh	equ	0xFF4
  1973                           prodl	equ	0xFF3
  1974                           intcon	equ	0xFF2
  1975                           postinc0	equ	0xFEE
  1976                           wreg	equ	0xFE8
  1977                           indf2	equ	0xFDF
  1978                           fsr2h	equ	0xFDA
  1979                           fsr2l	equ	0xFD9
  1980                           status	equ	0xFD8
  1981                           
  1982 ;; *************** function ___ftmul *****************
  1983 ;; Defined at:
  1984 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  f1              3   35[COMRAM] float 
  1987 ;;  f2              3   38[COMRAM] float 
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;  f3_as_produc    3   45[COMRAM] unsigned um
  1990 ;;  sign            1   49[COMRAM] unsigned char 
  1991 ;;  cntr            1   48[COMRAM] unsigned char 
  1992 ;;  exp             1   44[COMRAM] unsigned char 
  1993 ;; Return value:  Size  Location     Type
  1994 ;;                  3   35[COMRAM] float 
  1995 ;; Registers used:
  1996 ;;		wreg, status,2, status,0, cstack
  1997 ;; Tracked objects:
  1998 ;;		On entry : 0/0
  1999 ;;		On exit  : 0/0
  2000 ;;		Unchanged: 0/0
  2001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2002 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2003 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2004 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2005 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2006 ;;Total ram usage:       15 bytes
  2007 ;; Hardware stack levels used:    1
  2008 ;; Hardware stack levels required when called:    4
  2009 ;; This function calls:
  2010 ;;		___ftpack
  2011 ;; This function is called by:
  2012 ;;		_Get_ADC6
  2013 ;;		_TM1640_Show_Decimal
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           	psect	text14
  2018  00140C                     __ptext14:
  2019                           	opt stack 0
  2020  00140C                     ___ftmul:
  2021                           	opt stack 24
  2022                           
  2023                           ;incstack = 0
  2024  00140C  C026  F02A         	movff	___ftmul@f1+2,??___ftmul
  2025  001410  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  2026  001412  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  2027  001414  3425               	rlcf	___ftmul@f1+1,w,c
  2028  001416  362A               	rlcf	??___ftmul& (0+255),f,c
  2029  001418  E301               	bnc	u2571
  2030  00141A  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  2031  00141C                     u2571:
  2032  00141C  502A               	movf	??___ftmul,w,c
  2033  00141E  6E2D               	movwf	___ftmul@exp,c
  2034  001420  502D               	movf	___ftmul@exp,w,c
  2035  001422  A4D8               	btfss	status,2,c
  2036  001424  D007               	goto	l2754
  2037  001426  0E00               	movlw	0
  2038  001428  6E24               	movwf	?___ftmul,c
  2039  00142A  0E00               	movlw	0
  2040  00142C  6E25               	movwf	?___ftmul+1,c
  2041  00142E  0E00               	movlw	0
  2042  001430  6E26               	movwf	?___ftmul+2,c
  2043  001432  0012               	return	
  2044  001434                     l2754:
  2045  001434  C029  F02A         	movff	___ftmul@f2+2,??___ftmul
  2046  001438  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  2047  00143A  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  2048  00143C  3428               	rlcf	___ftmul@f2+1,w,c
  2049  00143E  362A               	rlcf	??___ftmul& (0+255),f,c
  2050  001440  E301               	bnc	u2591
  2051  001442  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  2052  001444                     u2591:
  2053  001444  502A               	movf	??___ftmul,w,c
  2054  001446  6E32               	movwf	___ftmul@sign,c
  2055  001448  5032               	movf	___ftmul@sign,w,c
  2056  00144A  A4D8               	btfss	status,2,c
  2057  00144C  D007               	goto	l2760
  2058  00144E  0E00               	movlw	0
  2059  001450  6E24               	movwf	?___ftmul,c
  2060  001452  0E00               	movlw	0
  2061  001454  6E25               	movwf	?___ftmul+1,c
  2062  001456  0E00               	movlw	0
  2063  001458  6E26               	movwf	?___ftmul+2,c
  2064  00145A  0012               	return	
  2065  00145C                     l2760:
  2066  00145C  5032               	movf	___ftmul@sign,w,c
  2067  00145E  0F7B               	addlw	123
  2068  001460  262D               	addwf	___ftmul@exp,f,c
  2069  001462  C026  F032         	movff	___ftmul@f1+2,___ftmul@sign
  2070  001466  5029               	movf	___ftmul@f2+2,w,c
  2071  001468  1A32               	xorwf	___ftmul@sign,f,c
  2072  00146A  0E80               	movlw	128
  2073  00146C  1632               	andwf	___ftmul@sign,f,c
  2074  00146E  8E25               	bsf	___ftmul@f1+1,7,c
  2075  001470  8E28               	bsf	___ftmul@f2+1,7,c
  2076  001472  0EFF               	movlw	255
  2077  001474  1627               	andwf	___ftmul@f2,f,c
  2078  001476  0EFF               	movlw	255
  2079  001478  1628               	andwf	___ftmul@f2+1,f,c
  2080  00147A  0E00               	movlw	0
  2081  00147C  1629               	andwf	___ftmul@f2+2,f,c
  2082  00147E  0E00               	movlw	0
  2083  001480  6E2E               	movwf	___ftmul@f3_as_product,c
  2084  001482  0E00               	movlw	0
  2085  001484  6E2F               	movwf	___ftmul@f3_as_product+1,c
  2086  001486  0E00               	movlw	0
  2087  001488  6E30               	movwf	___ftmul@f3_as_product+2,c
  2088  00148A  0E07               	movlw	7
  2089  00148C  6E31               	movwf	___ftmul@cntr,c
  2090  00148E  D000               	goto	l2774
  2091  001490                     l2774:
  2092  001490  A024               	btfss	___ftmul@f1,0,c
  2093  001492  D007               	goto	l2778
  2094  001494  5027               	movf	___ftmul@f2,w,c
  2095  001496  262E               	addwf	___ftmul@f3_as_product,f,c
  2096  001498  5028               	movf	___ftmul@f2+1,w,c
  2097  00149A  222F               	addwfc	___ftmul@f3_as_product+1,f,c
  2098  00149C  5029               	movf	___ftmul@f2+2,w,c
  2099  00149E  2230               	addwfc	___ftmul@f3_as_product+2,f,c
  2100  0014A0  D000               	goto	l2778
  2101  0014A2                     l2778:
  2102  0014A2  90D8               	bcf	status,0,c
  2103  0014A4  3226               	rrcf	___ftmul@f1+2,f,c
  2104  0014A6  3225               	rrcf	___ftmul@f1+1,f,c
  2105  0014A8  3224               	rrcf	___ftmul@f1,f,c
  2106  0014AA  90D8               	bcf	status,0,c
  2107  0014AC  3627               	rlcf	___ftmul@f2,f,c
  2108  0014AE  3628               	rlcf	___ftmul@f2+1,f,c
  2109  0014B0  3629               	rlcf	___ftmul@f2+2,f,c
  2110  0014B2  2E31               	decfsz	___ftmul@cntr,f,c
  2111  0014B4  D7ED               	goto	l2774
  2112  0014B6  D000               	goto	l2782
  2113  0014B8                     l2782:
  2114  0014B8  0E09               	movlw	9
  2115  0014BA  6E31               	movwf	___ftmul@cntr,c
  2116  0014BC  D000               	goto	l2784
  2117  0014BE                     l2784:
  2118  0014BE  A024               	btfss	___ftmul@f1,0,c
  2119  0014C0  D007               	goto	l2788
  2120  0014C2  5027               	movf	___ftmul@f2,w,c
  2121  0014C4  262E               	addwf	___ftmul@f3_as_product,f,c
  2122  0014C6  5028               	movf	___ftmul@f2+1,w,c
  2123  0014C8  222F               	addwfc	___ftmul@f3_as_product+1,f,c
  2124  0014CA  5029               	movf	___ftmul@f2+2,w,c
  2125  0014CC  2230               	addwfc	___ftmul@f3_as_product+2,f,c
  2126  0014CE  D000               	goto	l2788
  2127  0014D0                     l2788:
  2128  0014D0  90D8               	bcf	status,0,c
  2129  0014D2  3226               	rrcf	___ftmul@f1+2,f,c
  2130  0014D4  3225               	rrcf	___ftmul@f1+1,f,c
  2131  0014D6  3224               	rrcf	___ftmul@f1,f,c
  2132  0014D8  90D8               	bcf	status,0,c
  2133  0014DA  3230               	rrcf	___ftmul@f3_as_product+2,f,c
  2134  0014DC  322F               	rrcf	___ftmul@f3_as_product+1,f,c
  2135  0014DE  322E               	rrcf	___ftmul@f3_as_product,f,c
  2136  0014E0  2E31               	decfsz	___ftmul@cntr,f,c
  2137  0014E2  D7ED               	goto	l2784
  2138  0014E4  D000               	goto	l2792
  2139  0014E6                     l2792:
  2140  0014E6  C02E  F019         	movff	___ftmul@f3_as_product,___ftpack@arg
  2141  0014EA  C02F  F01A         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2142  0014EE  C030  F01B         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2143  0014F2  C02D  F01C         	movff	___ftmul@exp,___ftpack@exp
  2144  0014F6  C032  F01D         	movff	___ftmul@sign,___ftpack@sign
  2145  0014FA  EC00  F00B         	call	___ftpack	;wreg free
  2146  0014FE  C019  F024         	movff	?___ftpack,?___ftmul
  2147  001502  C01A  F025         	movff	?___ftpack+1,?___ftmul+1
  2148  001506  C01B  F026         	movff	?___ftpack+2,?___ftmul+2
  2149  00150A  0012               	return	
  2150  00150C  0012               	return		;funcret
  2151  00150E                     __end_of___ftmul:
  2152                           	opt stack 0
  2153                           tblptru	equ	0xFF8
  2154                           tblptrh	equ	0xFF7
  2155                           tblptrl	equ	0xFF6
  2156                           tablat	equ	0xFF5
  2157                           prodh	equ	0xFF4
  2158                           prodl	equ	0xFF3
  2159                           intcon	equ	0xFF2
  2160                           postinc0	equ	0xFEE
  2161                           wreg	equ	0xFE8
  2162                           indf2	equ	0xFDF
  2163                           fsr2h	equ	0xFDA
  2164                           fsr2l	equ	0xFD9
  2165                           status	equ	0xFD8
  2166                           
  2167 ;; *************** function ___ftdiv *****************
  2168 ;; Defined at:
  2169 ;;		line 54 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;  f1              3    0[BANK0 ] float 
  2172 ;;  f2              3    3[BANK0 ] float 
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;  f3              3   10[BANK0 ] float 
  2175 ;;  sign            1   14[BANK0 ] unsigned char 
  2176 ;;  exp             1   13[BANK0 ] unsigned char 
  2177 ;;  cntr            1    9[BANK0 ] unsigned char 
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  3    0[BANK0 ] float 
  2180 ;; Registers used:
  2181 ;;		wreg, status,2, status,0, cstack
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2187 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2188 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2189 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2190 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2191 ;;Total ram usage:       15 bytes
  2192 ;; Hardware stack levels used:    1
  2193 ;; Hardware stack levels required when called:    4
  2194 ;; This function calls:
  2195 ;;		___ftpack
  2196 ;; This function is called by:
  2197 ;;		_Get_ADC6
  2198 ;;		_TM1640_Show_Decimal
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           	psect	text15
  2203  0011B4                     __ptext15:
  2204                           	opt stack 0
  2205  0011B4                     ___ftdiv:
  2206                           	opt stack 24
  2207                           
  2208                           ;incstack = 0
  2209  0011B4  C0A4  F0A8         	movff	___ftdiv@f1+2,??___ftdiv
  2210  0011B8  0100               	movlb	0	; () banked
  2211  0011BA  6BA9               	clrf	(??___ftdiv+1)& (0+255),b
  2212  0011BC  6BAA               	clrf	(??___ftdiv+2)& (0+255),b
  2213  0011BE  0100               	movlb	0	; () banked
  2214  0011C0  35A3               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  2215  0011C2  0100               	movlb	0	; () banked
  2216  0011C4  37A8               	rlcf	??___ftdiv& (0+255),f,b
  2217  0011C6  E301               	bnc	u2521
  2218  0011C8  81A9               	bsf	(??___ftdiv+1)& (0+255),0,b
  2219  0011CA                     u2521:
  2220  0011CA  0100               	movlb	0	; () banked
  2221  0011CC  51A8               	movf	??___ftdiv& (0+255),w,b
  2222  0011CE  0100               	movlb	0	; () banked
  2223  0011D0  6FAF               	movwf	___ftdiv@exp& (0+255),b
  2224  0011D2  0100               	movlb	0	; () banked
  2225  0011D4  51AF               	movf	___ftdiv@exp& (0+255),w,b
  2226  0011D6  A4D8               	btfss	status,2,c
  2227  0011D8  D00A               	goto	l2708
  2228                           
  2229                           ; BSR set to: 0
  2230  0011DA  0E00               	movlw	0
  2231  0011DC  0100               	movlb	0	; () banked
  2232  0011DE  6FA2               	movwf	?___ftdiv& (0+255),b
  2233  0011E0  0E00               	movlw	0
  2234  0011E2  0100               	movlb	0	; () banked
  2235  0011E4  6FA3               	movwf	(?___ftdiv+1)& (0+255),b
  2236  0011E6  0E00               	movlw	0
  2237  0011E8  0100               	movlb	0	; () banked
  2238  0011EA  6FA4               	movwf	(?___ftdiv+2)& (0+255),b
  2239                           
  2240                           ; BSR set to: 0
  2241  0011EC  0012               	return	
  2242  0011EE                     l2708:
  2243                           
  2244                           ; BSR set to: 0
  2245  0011EE  C0A7  F0A8         	movff	___ftdiv@f2+2,??___ftdiv
  2246  0011F2  0100               	movlb	0	; () banked
  2247  0011F4  6BA9               	clrf	(??___ftdiv+1)& (0+255),b
  2248  0011F6  6BAA               	clrf	(??___ftdiv+2)& (0+255),b
  2249  0011F8  0100               	movlb	0	; () banked
  2250  0011FA  35A6               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  2251  0011FC  0100               	movlb	0	; () banked
  2252  0011FE  37A8               	rlcf	??___ftdiv& (0+255),f,b
  2253  001200  E301               	bnc	u2541
  2254  001202  81A9               	bsf	(??___ftdiv+1)& (0+255),0,b
  2255  001204                     u2541:
  2256  001204  0100               	movlb	0	; () banked
  2257  001206  51A8               	movf	??___ftdiv& (0+255),w,b
  2258  001208  0100               	movlb	0	; () banked
  2259  00120A  6FB0               	movwf	___ftdiv@sign& (0+255),b
  2260  00120C  0100               	movlb	0	; () banked
  2261  00120E  51B0               	movf	___ftdiv@sign& (0+255),w,b
  2262  001210  A4D8               	btfss	status,2,c
  2263  001212  D00A               	goto	l2714
  2264                           
  2265                           ; BSR set to: 0
  2266  001214  0E00               	movlw	0
  2267  001216  0100               	movlb	0	; () banked
  2268  001218  6FA2               	movwf	?___ftdiv& (0+255),b
  2269  00121A  0E00               	movlw	0
  2270  00121C  0100               	movlb	0	; () banked
  2271  00121E  6FA3               	movwf	(?___ftdiv+1)& (0+255),b
  2272  001220  0E00               	movlw	0
  2273  001222  0100               	movlb	0	; () banked
  2274  001224  6FA4               	movwf	(?___ftdiv+2)& (0+255),b
  2275                           
  2276                           ; BSR set to: 0
  2277  001226  0012               	return	
  2278  001228                     l2714:
  2279                           
  2280                           ; BSR set to: 0
  2281  001228  0E00               	movlw	0
  2282  00122A  0100               	movlb	0	; () banked
  2283  00122C  6FAC               	movwf	___ftdiv@f3& (0+255),b
  2284  00122E  0E00               	movlw	0
  2285  001230  0100               	movlb	0	; () banked
  2286  001232  6FAD               	movwf	(___ftdiv@f3+1)& (0+255),b
  2287  001234  0E00               	movlw	0
  2288  001236  0100               	movlb	0	; () banked
  2289  001238  6FAE               	movwf	(___ftdiv@f3+2)& (0+255),b
  2290                           
  2291                           ; BSR set to: 0
  2292  00123A  0100               	movlb	0	; () banked
  2293  00123C  51B0               	movf	___ftdiv@sign& (0+255),w,b
  2294  00123E  0F89               	addlw	137
  2295  001240  0100               	movlb	0	; () banked
  2296  001242  5FAF               	subwf	___ftdiv@exp& (0+255),f,b
  2297                           
  2298                           ; BSR set to: 0
  2299  001244  C0A4  F0B0         	movff	___ftdiv@f1+2,___ftdiv@sign
  2300                           
  2301                           ; BSR set to: 0
  2302  001248  0100               	movlb	0	; () banked
  2303  00124A  51A7               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2304  00124C  0100               	movlb	0	; () banked
  2305  00124E  1BB0               	xorwf	___ftdiv@sign& (0+255),f,b
  2306                           
  2307                           ; BSR set to: 0
  2308  001250  0E80               	movlw	128
  2309  001252  0100               	movlb	0	; () banked
  2310  001254  17B0               	andwf	___ftdiv@sign& (0+255),f,b
  2311                           
  2312                           ; BSR set to: 0
  2313  001256  0100               	movlb	0	; () banked
  2314  001258  8FA3               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  2315                           
  2316                           ; BSR set to: 0
  2317  00125A  0EFF               	movlw	255
  2318  00125C  0100               	movlb	0	; () banked
  2319  00125E  17A2               	andwf	___ftdiv@f1& (0+255),f,b
  2320  001260  0EFF               	movlw	255
  2321  001262  0100               	movlb	0	; () banked
  2322  001264  17A3               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  2323  001266  0E00               	movlw	0
  2324  001268  0100               	movlb	0	; () banked
  2325  00126A  17A4               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  2326                           
  2327                           ; BSR set to: 0
  2328  00126C  0100               	movlb	0	; () banked
  2329  00126E  8FA6               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  2330                           
  2331                           ; BSR set to: 0
  2332  001270  0EFF               	movlw	255
  2333  001272  0100               	movlb	0	; () banked
  2334  001274  17A5               	andwf	___ftdiv@f2& (0+255),f,b
  2335  001276  0EFF               	movlw	255
  2336  001278  0100               	movlb	0	; () banked
  2337  00127A  17A6               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  2338  00127C  0E00               	movlw	0
  2339  00127E  0100               	movlb	0	; () banked
  2340  001280  17A7               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  2341                           
  2342                           ; BSR set to: 0
  2343  001282  0E18               	movlw	24
  2344  001284  0100               	movlb	0	; () banked
  2345  001286  6FAB               	movwf	___ftdiv@cntr& (0+255),b
  2346  001288  D000               	goto	l2734
  2347  00128A                     l2734:
  2348                           
  2349                           ; BSR set to: 0
  2350  00128A  0100               	movlb	0	; () banked
  2351  00128C  90D8               	bcf	status,0,c
  2352  00128E  37AC               	rlcf	___ftdiv@f3& (0+255),f,b
  2353  001290  37AD               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  2354  001292  37AE               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  2355                           
  2356                           ; BSR set to: 0
  2357  001294  0100               	movlb	0	; () banked
  2358  001296  51A5               	movf	___ftdiv@f2& (0+255),w,b
  2359  001298  0100               	movlb	0	; () banked
  2360  00129A  5DA2               	subwf	___ftdiv@f1& (0+255),w,b
  2361  00129C  0100               	movlb	0	; () banked
  2362  00129E  51A6               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2363  0012A0  0100               	movlb	0	; () banked
  2364  0012A2  59A3               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  2365  0012A4  0100               	movlb	0	; () banked
  2366  0012A6  51A7               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2367  0012A8  0100               	movlb	0	; () banked
  2368  0012AA  59A4               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  2369  0012AC  A0D8               	btfss	status,0,c
  2370  0012AE  D00E               	goto	l858
  2371                           
  2372                           ; BSR set to: 0
  2373  0012B0  0100               	movlb	0	; () banked
  2374  0012B2  51A5               	movf	___ftdiv@f2& (0+255),w,b
  2375  0012B4  0100               	movlb	0	; () banked
  2376  0012B6  5FA2               	subwf	___ftdiv@f1& (0+255),f,b
  2377  0012B8  0100               	movlb	0	; () banked
  2378  0012BA  51A6               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2379  0012BC  0100               	movlb	0	; () banked
  2380  0012BE  5BA3               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  2381  0012C0  0100               	movlb	0	; () banked
  2382  0012C2  51A7               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2383  0012C4  0100               	movlb	0	; () banked
  2384  0012C6  5BA4               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  2385                           
  2386                           ; BSR set to: 0
  2387  0012C8  0100               	movlb	0	; () banked
  2388  0012CA  81AC               	bsf	___ftdiv@f3& (0+255),0,b
  2389  0012CC                     l858:
  2390                           
  2391                           ; BSR set to: 0
  2392  0012CC  0100               	movlb	0	; () banked
  2393  0012CE  90D8               	bcf	status,0,c
  2394  0012D0  37A2               	rlcf	___ftdiv@f1& (0+255),f,b
  2395  0012D2  37A3               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  2396  0012D4  37A4               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  2397                           
  2398                           ; BSR set to: 0
  2399  0012D6  0100               	movlb	0	; () banked
  2400  0012D8  2FAB               	decfsz	___ftdiv@cntr& (0+255),f,b
  2401  0012DA  D7D7               	goto	l2734
  2402  0012DC  D000               	goto	l2744
  2403  0012DE                     l2744:
  2404                           
  2405                           ; BSR set to: 0
  2406  0012DE  C0AC  F019         	movff	___ftdiv@f3,___ftpack@arg
  2407  0012E2  C0AD  F01A         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2408  0012E6  C0AE  F01B         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2409  0012EA  C0AF  F01C         	movff	___ftdiv@exp,___ftpack@exp
  2410  0012EE  C0B0  F01D         	movff	___ftdiv@sign,___ftpack@sign
  2411  0012F2  EC00  F00B         	call	___ftpack	;wreg free
  2412  0012F6  C019  F0A2         	movff	?___ftpack,?___ftdiv
  2413  0012FA  C01A  F0A3         	movff	?___ftpack+1,?___ftdiv+1
  2414  0012FE  C01B  F0A4         	movff	?___ftpack+2,?___ftdiv+2
  2415  001302  0012               	return	
  2416  001304  0012               	return		;funcret
  2417  001306                     __end_of___ftdiv:
  2418                           	opt stack 0
  2419                           tblptru	equ	0xFF8
  2420                           tblptrh	equ	0xFF7
  2421                           tblptrl	equ	0xFF6
  2422                           tablat	equ	0xFF5
  2423                           prodh	equ	0xFF4
  2424                           prodl	equ	0xFF3
  2425                           intcon	equ	0xFF2
  2426                           postinc0	equ	0xFEE
  2427                           wreg	equ	0xFE8
  2428                           indf2	equ	0xFDF
  2429                           fsr2h	equ	0xFDA
  2430                           fsr2l	equ	0xFD9
  2431                           status	equ	0xFD8
  2432                           
  2433 ;; *************** function ___ftpack *****************
  2434 ;; Defined at:
  2435 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;  arg             3   24[COMRAM] unsigned um
  2438 ;;  exp             1   27[COMRAM] unsigned char 
  2439 ;;  sign            1   28[COMRAM] unsigned char 
  2440 ;; Auto vars:     Size  Location     Type
  2441 ;;		None
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  3   24[COMRAM] float 
  2444 ;; Registers used:
  2445 ;;		wreg, status,2, status,0
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2451 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2453 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2454 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2455 ;;Total ram usage:        8 bytes
  2456 ;; Hardware stack levels used:    1
  2457 ;; Hardware stack levels required when called:    3
  2458 ;; This function calls:
  2459 ;;		Nothing
  2460 ;; This function is called by:
  2461 ;;		___ftdiv
  2462 ;;		___ftmul
  2463 ;;		___lwtoft
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           	psect	text16
  2468  001600                     __ptext16:
  2469                           	opt stack 0
  2470  001600                     ___ftpack:
  2471                           	opt stack 24
  2472                           
  2473                           ;incstack = 0
  2474  001600  501C               	movf	___ftpack@exp,w,c
  2475  001602  B4D8               	btfsc	status,2,c
  2476  001604  D005               	goto	l2644
  2477  001606  5019               	movf	___ftpack@arg,w,c
  2478  001608  101A               	iorwf	___ftpack@arg+1,w,c
  2479  00160A  101B               	iorwf	___ftpack@arg+2,w,c
  2480  00160C  A4D8               	btfss	status,2,c
  2481  00160E  D00E               	goto	l2650
  2482  001610                     l2644:
  2483  001610  0E00               	movlw	0
  2484  001612  6E19               	movwf	?___ftpack,c
  2485  001614  0E00               	movlw	0
  2486  001616  6E1A               	movwf	?___ftpack+1,c
  2487  001618  0E00               	movlw	0
  2488  00161A  6E1B               	movwf	?___ftpack+2,c
  2489  00161C  0012               	return	
  2490  00161E  D006               	goto	l2650
  2491  001620                     l2648:
  2492  001620  2A1C               	incf	___ftpack@exp,f,c
  2493  001622  90D8               	bcf	status,0,c
  2494  001624  321B               	rrcf	___ftpack@arg+2,f,c
  2495  001626  321A               	rrcf	___ftpack@arg+1,f,c
  2496  001628  3219               	rrcf	___ftpack@arg,f,c
  2497  00162A  D000               	goto	l2650
  2498  00162C                     l2650:
  2499  00162C  0E00               	movlw	0
  2500  00162E  1419               	andwf	___ftpack@arg,w,c
  2501  001630  6E1E               	movwf	??___ftpack& (0+255),c
  2502  001632  0E00               	movlw	0
  2503  001634  141A               	andwf	___ftpack@arg+1,w,c
  2504  001636  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  2505  001638  0EFE               	movlw	254
  2506  00163A  141B               	andwf	___ftpack@arg+2,w,c
  2507  00163C  6E20               	movwf	(??___ftpack+2)& (0+255),c
  2508  00163E  501E               	movf	??___ftpack,w,c
  2509  001640  101F               	iorwf	??___ftpack+1,w,c
  2510  001642  1020               	iorwf	??___ftpack+2,w,c
  2511  001644  B4D8               	btfsc	status,2,c
  2512  001646  D00E               	goto	l2656
  2513  001648  D7EB               	goto	l2648
  2514  00164A  D00C               	goto	l2656
  2515  00164C                     l2652:
  2516  00164C  2A1C               	incf	___ftpack@exp,f,c
  2517  00164E  0E01               	movlw	1
  2518  001650  2619               	addwf	___ftpack@arg,f,c
  2519  001652  0E00               	movlw	0
  2520  001654  221A               	addwfc	___ftpack@arg+1,f,c
  2521  001656  0E00               	movlw	0
  2522  001658  221B               	addwfc	___ftpack@arg+2,f,c
  2523  00165A  90D8               	bcf	status,0,c
  2524  00165C  321B               	rrcf	___ftpack@arg+2,f,c
  2525  00165E  321A               	rrcf	___ftpack@arg+1,f,c
  2526  001660  3219               	rrcf	___ftpack@arg,f,c
  2527  001662  D000               	goto	l2656
  2528  001664                     l2656:
  2529  001664  0E00               	movlw	0
  2530  001666  1419               	andwf	___ftpack@arg,w,c
  2531  001668  6E1E               	movwf	??___ftpack& (0+255),c
  2532  00166A  0E00               	movlw	0
  2533  00166C  141A               	andwf	___ftpack@arg+1,w,c
  2534  00166E  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  2535  001670  0EFF               	movlw	255
  2536  001672  141B               	andwf	___ftpack@arg+2,w,c
  2537  001674  6E20               	movwf	(??___ftpack+2)& (0+255),c
  2538  001676  501E               	movf	??___ftpack,w,c
  2539  001678  101F               	iorwf	??___ftpack+1,w,c
  2540  00167A  1020               	iorwf	??___ftpack+2,w,c
  2541  00167C  B4D8               	btfsc	status,2,c
  2542  00167E  D008               	goto	l2660
  2543  001680  D7E5               	goto	l2652
  2544  001682  D006               	goto	l2660
  2545  001684                     l2658:
  2546  001684  061C               	decf	___ftpack@exp,f,c
  2547  001686  90D8               	bcf	status,0,c
  2548  001688  3619               	rlcf	___ftpack@arg,f,c
  2549  00168A  361A               	rlcf	___ftpack@arg+1,f,c
  2550  00168C  361B               	rlcf	___ftpack@arg+2,f,c
  2551  00168E  D000               	goto	l2660
  2552  001690                     l2660:
  2553  001690  BE1A               	btfsc	___ftpack@arg+1,7,c
  2554  001692  D004               	goto	l794
  2555  001694  0E02               	movlw	2
  2556  001696  601C               	cpfslt	___ftpack@exp,c
  2557  001698  D7F5               	goto	l2658
  2558  00169A  D000               	goto	l794
  2559  00169C                     l794:
  2560  00169C  B01C               	btfsc	___ftpack@exp,0,c
  2561  00169E  D002               	goto	l2666
  2562  0016A0  9E1A               	bcf	___ftpack@arg+1,7,c
  2563  0016A2  D000               	goto	l2666
  2564  0016A4                     l2666:
  2565  0016A4  90D8               	bcf	status,0,c
  2566  0016A6  321C               	rrcf	___ftpack@exp,f,c
  2567  0016A8  501C               	movf	___ftpack@exp,w,c
  2568  0016AA  121B               	iorwf	___ftpack@arg+2,f,c
  2569  0016AC  501D               	movf	___ftpack@sign,w,c
  2570  0016AE  B4D8               	btfsc	status,2,c
  2571  0016B0  D002               	goto	l2672
  2572  0016B2  8E1B               	bsf	___ftpack@arg+2,7,c
  2573  0016B4  D000               	goto	l2672
  2574  0016B6                     l2672:
  2575  0016B6  C019  F019         	movff	___ftpack@arg,?___ftpack
  2576  0016BA  C01A  F01A         	movff	___ftpack@arg+1,?___ftpack+1
  2577  0016BE  C01B  F01B         	movff	___ftpack@arg+2,?___ftpack+2
  2578  0016C2  0012               	return	
  2579  0016C4  0012               	return		;funcret
  2580  0016C6                     __end_of___ftpack:
  2581                           	opt stack 0
  2582                           tblptru	equ	0xFF8
  2583                           tblptrh	equ	0xFF7
  2584                           tblptrl	equ	0xFF6
  2585                           tablat	equ	0xFF5
  2586                           prodh	equ	0xFF4
  2587                           prodl	equ	0xFF3
  2588                           intcon	equ	0xFF2
  2589                           postinc0	equ	0xFEE
  2590                           wreg	equ	0xFE8
  2591                           indf2	equ	0xFDF
  2592                           fsr2h	equ	0xFDA
  2593                           fsr2l	equ	0xFD9
  2594                           status	equ	0xFD8
  2595                           
  2596 ;; *************** function _ReadADC *****************
  2597 ;; Defined at:
  2598 ;;		line 24 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  2599 ;; Parameters:    Size  Location     Type
  2600 ;;		None
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;		None
  2603 ;; Return value:  Size  Location     Type
  2604 ;;                  2   24[COMRAM] int 
  2605 ;; Registers used:
  2606 ;;		wreg, status,2
  2607 ;; Tracked objects:
  2608 ;;		On entry : 0/0
  2609 ;;		On exit  : 0/0
  2610 ;;		Unchanged: 0/0
  2611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2612 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2614 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2615 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2616 ;;Total ram usage:        4 bytes
  2617 ;; Hardware stack levels used:    1
  2618 ;; Hardware stack levels required when called:    3
  2619 ;; This function calls:
  2620 ;;		Nothing
  2621 ;; This function is called by:
  2622 ;;		_Get_ADC6
  2623 ;; This function uses a non-reentrant model
  2624 ;;
  2625                           
  2626                           	psect	text17
  2627  001E4E                     __ptext17:
  2628                           	opt stack 0
  2629  001E4E                     _ReadADC:
  2630                           	opt stack 25
  2631                           
  2632                           ;incstack = 0
  2633  001E4E  50C4               	movf	4036,w,c	;volatile
  2634  001E50  6E1B               	movwf	??_ReadADC& (0+255),c
  2635  001E52  50C3               	movf	4035,w,c	;volatile
  2636  001E54  6E19               	movwf	?_ReadADC,c
  2637  001E56  C01B  F01A         	movff	??_ReadADC,?_ReadADC+1
  2638  001E5A  0012               	return	
  2639  001E5C  0012               	return		;funcret
  2640  001E5E                     __end_of_ReadADC:
  2641                           	opt stack 0
  2642                           tblptru	equ	0xFF8
  2643                           tblptrh	equ	0xFF7
  2644                           tblptrl	equ	0xFF6
  2645                           tablat	equ	0xFF5
  2646                           prodh	equ	0xFF4
  2647                           prodl	equ	0xFF3
  2648                           intcon	equ	0xFF2
  2649                           postinc0	equ	0xFEE
  2650                           wreg	equ	0xFE8
  2651                           indf2	equ	0xFDF
  2652                           fsr2h	equ	0xFDA
  2653                           fsr2l	equ	0xFD9
  2654                           status	equ	0xFD8
  2655                           
  2656 ;; *************** function _ConvertADC *****************
  2657 ;; Defined at:
  2658 ;;		line 22 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;		None
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;		None
  2663 ;; Return value:  Size  Location     Type
  2664 ;;		None               void
  2665 ;; Registers used:
  2666 ;;		None
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/0
  2669 ;;		On exit  : 0/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2676 ;;Total ram usage:        0 bytes
  2677 ;; Hardware stack levels used:    1
  2678 ;; Hardware stack levels required when called:    3
  2679 ;; This function calls:
  2680 ;;		Nothing
  2681 ;; This function is called by:
  2682 ;;		_Get_ADC6
  2683 ;; This function uses a non-reentrant model
  2684 ;;
  2685                           
  2686                           	psect	text18
  2687  001E82                     __ptext18:
  2688                           	opt stack 0
  2689  001E82                     _ConvertADC:
  2690                           	opt stack 25
  2691                           
  2692                           ;incstack = 0
  2693  001E82  82C2               	bsf	4034,1,c	;volatile
  2694  001E84  0012               	return		;funcret
  2695  001E86                     __end_of_ConvertADC:
  2696                           	opt stack 0
  2697                           tblptru	equ	0xFF8
  2698                           tblptrh	equ	0xFF7
  2699                           tblptrl	equ	0xFF6
  2700                           tablat	equ	0xFF5
  2701                           prodh	equ	0xFF4
  2702                           prodl	equ	0xFF3
  2703                           intcon	equ	0xFF2
  2704                           postinc0	equ	0xFEE
  2705                           wreg	equ	0xFE8
  2706                           indf2	equ	0xFDF
  2707                           fsr2h	equ	0xFDA
  2708                           fsr2l	equ	0xFD9
  2709                           status	equ	0xFD8
  2710                           
  2711 ;; *************** function _BusyADC *****************
  2712 ;; Defined at:
  2713 ;;		line 26 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;		None
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;		None
  2718 ;; Return value:  Size  Location     Type
  2719 ;;                  1    wreg      unsigned char 
  2720 ;; Registers used:
  2721 ;;		wreg
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2731 ;;Total ram usage:        0 bytes
  2732 ;; Hardware stack levels used:    1
  2733 ;; Hardware stack levels required when called:    3
  2734 ;; This function calls:
  2735 ;;		Nothing
  2736 ;; This function is called by:
  2737 ;;		_Get_ADC6
  2738 ;; This function uses a non-reentrant model
  2739 ;;
  2740                           
  2741                           	psect	text19
  2742  001E5E                     __ptext19:
  2743                           	opt stack 0
  2744  001E5E                     _BusyADC:
  2745                           	opt stack 25
  2746                           
  2747                           ;incstack = 0
  2748  001E5E  A2C2               	btfss	4034,1,c	;volatile
  2749  001E60  D002               	goto	u2510
  2750  001E62  0E01               	movlw	1
  2751  001E64  0012               	return	
  2752  001E66                     u2510:
  2753  001E66  0E00               	movlw	0
  2754  001E68  0012               	return	
  2755  001E6A  0012               	return		;funcret
  2756  001E6C                     __end_of_BusyADC:
  2757                           	opt stack 0
  2758                           tblptru	equ	0xFF8
  2759                           tblptrh	equ	0xFF7
  2760                           tblptrl	equ	0xFF6
  2761                           tablat	equ	0xFF5
  2762                           prodh	equ	0xFF4
  2763                           prodl	equ	0xFF3
  2764                           intcon	equ	0xFF2
  2765                           postinc0	equ	0xFEE
  2766                           wreg	equ	0xFE8
  2767                           indf2	equ	0xFDF
  2768                           fsr2h	equ	0xFDA
  2769                           fsr2l	equ	0xFD9
  2770                           status	equ	0xFD8
  2771                           
  2772 ;; *************** function _RS485_Init *****************
  2773 ;; Defined at:
  2774 ;;		line 44 in file "_01_USER/My_USART.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;		None
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;		None
  2779 ;; Return value:  Size  Location     Type
  2780 ;;		None               void
  2781 ;; Registers used:
  2782 ;;		wreg, status,2, status,0, cstack
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2792 ;;Total ram usage:        0 bytes
  2793 ;; Hardware stack levels used:    1
  2794 ;; Hardware stack levels required when called:    4
  2795 ;; This function calls:
  2796 ;;		_Open2USART
  2797 ;; This function is called by:
  2798 ;;		_main
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           	psect	text20
  2803  001E04                     __ptext20:
  2804                           	opt stack 0
  2805  001E04                     _RS485_Init:
  2806                           	opt stack 26
  2807                           
  2808                           ;My_USART.c: 46: Open2USART( 0b01111111 &
  2809                           ;My_USART.c: 47: 0b11111111 &
  2810                           ;My_USART.c: 48: 0b11111110 &
  2811                           ;My_USART.c: 49: 0b11111101 &
  2812                           ;My_USART.c: 50: 0b11111111 &
  2813                           ;My_USART.c: 51: 0b11101111
  2814                           ;My_USART.c: 52: ,
  2815                           ;My_USART.c: 53: 12
  2816                           ;My_USART.c: 54: );
  2817                           
  2818                           ;incstack = 0
  2819  001E04  0E00               	movlw	0
  2820  001E06  6E1A               	movwf	Open2USART@spbrg+1,c
  2821  001E08  0E0C               	movlw	12
  2822  001E0A  6E19               	movwf	Open2USART@spbrg,c
  2823  001E0C  0E6C               	movlw	108
  2824  001E0E  ECB0  F00B         	call	_Open2USART
  2825                           
  2826                           ;My_USART.c: 56: TRISGbits.TRISG1 = 1;
  2827  001E12  8298               	bsf	3992,1,c	;volatile
  2828                           
  2829                           ;My_USART.c: 57: TRISGbits.TRISG2 = 0;
  2830  001E14  9498               	bcf	3992,2,c	;volatile
  2831                           
  2832                           ;My_USART.c: 58: TRISGbits.TRISG3 = 0;
  2833  001E16  9698               	bcf	3992,3,c	;volatile
  2834                           
  2835                           ;My_USART.c: 59: RG3 = 1;
  2836  001E18  8686               	bsf	3974,3,c	;volatile
  2837                           
  2838                           ;My_USART.c: 60: ANCON2 &= 0XF1;
  2839  001E1A  0EF1               	movlw	241
  2840  001E1C  010F               	movlb	15	; () banked
  2841  001E1E  1723               	andwf	35,f,b	;volatile
  2842                           
  2843                           ; BSR set to: 15
  2844  001E20  0012               	return		;funcret
  2845  001E22                     __end_of_RS485_Init:
  2846                           	opt stack 0
  2847                           tblptru	equ	0xFF8
  2848                           tblptrh	equ	0xFF7
  2849                           tblptrl	equ	0xFF6
  2850                           tablat	equ	0xFF5
  2851                           prodh	equ	0xFF4
  2852                           prodl	equ	0xFF3
  2853                           intcon	equ	0xFF2
  2854                           postinc0	equ	0xFEE
  2855                           wreg	equ	0xFE8
  2856                           indf2	equ	0xFDF
  2857                           fsr2h	equ	0xFDA
  2858                           fsr2l	equ	0xFD9
  2859                           status	equ	0xFD8
  2860                           
  2861 ;; *************** function _Open2USART *****************
  2862 ;; Defined at:
  2863 ;;		line 118 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u2open.c"
  2864 ;; Parameters:    Size  Location     Type
  2865 ;;  config          1    wreg     unsigned char 
  2866 ;;  spbrg           2   24[COMRAM] unsigned int 
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;  config          1   26[COMRAM] unsigned char 
  2869 ;; Return value:  Size  Location     Type
  2870 ;;		None               void
  2871 ;; Registers used:
  2872 ;;		wreg, status,2
  2873 ;; Tracked objects:
  2874 ;;		On entry : 0/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2878 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2879 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2881 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2882 ;;Total ram usage:        3 bytes
  2883 ;; Hardware stack levels used:    1
  2884 ;; Hardware stack levels required when called:    3
  2885 ;; This function calls:
  2886 ;;		Nothing
  2887 ;; This function is called by:
  2888 ;;		_RS485_Init
  2889 ;; This function uses a non-reentrant model
  2890 ;;
  2891                           
  2892                           	psect	text21
  2893  001760                     __ptext21:
  2894                           	opt stack 0
  2895  001760                     _Open2USART:
  2896                           	opt stack 26
  2897                           
  2898                           ; BSR set to: 15
  2899                           ;incstack = 0
  2900                           ;Open2USART@config stored from wreg
  2901  001760  6E1B               	movwf	Open2USART@config,c
  2902  001762  0E00               	movlw	0
  2903  001764  010F               	movlb	15	; () banked
  2904  001766  6F21               	movwf	33,b	;volatile
  2905  001768  0E00               	movlw	0
  2906  00176A  010F               	movlb	15	; () banked
  2907  00176C  6F22               	movwf	34,b	;volatile
  2908                           
  2909                           ; BSR set to: 15
  2910  00176E  A01B               	btfss	Open2USART@config,0,c
  2911  001770  D003               	goto	l2844
  2912                           
  2913                           ; BSR set to: 15
  2914  001772  010F               	movlb	15	; () banked
  2915  001774  8921               	bsf	33,4,b	;volatile
  2916  001776  D000               	goto	l2844
  2917  001778                     l2844:
  2918                           
  2919                           ; BSR set to: 15
  2920  001778  A21B               	btfss	Open2USART@config,1,c
  2921  00177A  D005               	goto	l2848
  2922                           
  2923                           ; BSR set to: 15
  2924  00177C  010F               	movlb	15	; () banked
  2925  00177E  8D21               	bsf	33,6,b	;volatile
  2926  001780  010F               	movlb	15	; () banked
  2927  001782  8D22               	bsf	34,6,b	;volatile
  2928  001784  D000               	goto	l2848
  2929  001786                     l2848:
  2930                           
  2931                           ; BSR set to: 15
  2932  001786  A41B               	btfss	Open2USART@config,2,c
  2933  001788  D003               	goto	l2852
  2934                           
  2935                           ; BSR set to: 15
  2936  00178A  010F               	movlb	15	; () banked
  2937  00178C  8F21               	bsf	33,7,b	;volatile
  2938  00178E  D000               	goto	l2852
  2939  001790                     l2852:
  2940                           
  2941                           ; BSR set to: 15
  2942  001790  A61B               	btfss	Open2USART@config,3,c
  2943  001792  D003               	goto	l463
  2944                           
  2945                           ; BSR set to: 15
  2946  001794  010F               	movlb	15	; () banked
  2947  001796  8922               	bsf	34,4,b	;volatile
  2948  001798  D003               	goto	l2856
  2949  00179A                     l463:
  2950                           
  2951                           ; BSR set to: 15
  2952  00179A  010F               	movlb	15	; () banked
  2953  00179C  8B22               	bsf	34,5,b	;volatile
  2954  00179E  D000               	goto	l2856
  2955  0017A0                     l2856:
  2956                           
  2957                           ; BSR set to: 15
  2958  0017A0  A81B               	btfss	Open2USART@config,4,c
  2959  0017A2  D003               	goto	l465
  2960                           
  2961                           ; BSR set to: 15
  2962  0017A4  010F               	movlb	15	; () banked
  2963  0017A6  8521               	bsf	33,2,b	;volatile
  2964  0017A8  D003               	goto	l2860
  2965  0017AA                     l465:
  2966                           
  2967                           ; BSR set to: 15
  2968  0017AA  010F               	movlb	15	; () banked
  2969  0017AC  9521               	bcf	33,2,b	;volatile
  2970  0017AE  D000               	goto	l2860
  2971  0017B0                     l2860:
  2972                           
  2973                           ; BSR set to: 15
  2974  0017B0  AA1B               	btfss	Open2USART@config,5,c
  2975  0017B2  D003               	goto	l2864
  2976                           
  2977                           ; BSR set to: 15
  2978  0017B4  010F               	movlb	15	; () banked
  2979  0017B6  8722               	bsf	34,3,b	;volatile
  2980  0017B8  D000               	goto	l2864
  2981  0017BA                     l2864:
  2982                           
  2983                           ; BSR set to: 15
  2984  0017BA  AC1B               	btfss	Open2USART@config,6,c
  2985  0017BC  D002               	goto	l468
  2986                           
  2987                           ; BSR set to: 15
  2988  0017BE  8AA3               	bsf	4003,5,c	;volatile
  2989  0017C0  D002               	goto	l2868
  2990  0017C2                     l468:
  2991                           
  2992                           ; BSR set to: 15
  2993  0017C2  9AA3               	bcf	4003,5,c	;volatile
  2994  0017C4  D000               	goto	l2868
  2995  0017C6                     l2868:
  2996                           
  2997                           ; BSR set to: 15
  2998  0017C6  AE1B               	btfss	Open2USART@config,7,c
  2999  0017C8  D002               	goto	l470
  3000                           
  3001                           ; BSR set to: 15
  3002  0017CA  88A3               	bsf	4003,4,c	;volatile
  3003  0017CC  D001               	goto	l471
  3004  0017CE                     l470:
  3005                           
  3006                           ; BSR set to: 15
  3007  0017CE  98A3               	bcf	4003,4,c	;volatile
  3008  0017D0                     l471:
  3009                           
  3010                           ; BSR set to: 15
  3011  0017D0  C019  FF1E         	movff	Open2USART@spbrg,3870	;volatile
  3012                           
  3013                           ; BSR set to: 15
  3014  0017D4  501A               	movf	Open2USART@spbrg+1,w,c
  3015  0017D6  010F               	movlb	15	; () banked
  3016  0017D8  6F1F               	movwf	31,b	;volatile
  3017                           
  3018                           ; BSR set to: 15
  3019  0017DA  010F               	movlb	15	; () banked
  3020  0017DC  8B21               	bsf	33,5,b	;volatile
  3021                           
  3022                           ; BSR set to: 15
  3023  0017DE  010F               	movlb	15	; () banked
  3024  0017E0  8F22               	bsf	34,7,b	;volatile
  3025                           
  3026                           ; BSR set to: 15
  3027  0017E2  0012               	return		;funcret
  3028  0017E4                     __end_of_Open2USART:
  3029                           	opt stack 0
  3030                           tblptru	equ	0xFF8
  3031                           tblptrh	equ	0xFF7
  3032                           tblptrl	equ	0xFF6
  3033                           tablat	equ	0xFF5
  3034                           prodh	equ	0xFF4
  3035                           prodl	equ	0xFF3
  3036                           intcon	equ	0xFF2
  3037                           postinc0	equ	0xFEE
  3038                           wreg	equ	0xFE8
  3039                           indf2	equ	0xFDF
  3040                           fsr2h	equ	0xFDA
  3041                           fsr2l	equ	0xFD9
  3042                           status	equ	0xFD8
  3043                           
  3044 ;; *************** function _Key_Init *****************
  3045 ;; Defined at:
  3046 ;;		line 39 in file "_01_USER/Key.c"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;		None
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;		None
  3051 ;; Return value:  Size  Location     Type
  3052 ;;		None               void
  3053 ;; Registers used:
  3054 ;;		wreg, status,2, status,0
  3055 ;; Tracked objects:
  3056 ;;		On entry : 0/0
  3057 ;;		On exit  : 0/0
  3058 ;;		Unchanged: 0/0
  3059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3064 ;;Total ram usage:        0 bytes
  3065 ;; Hardware stack levels used:    1
  3066 ;; Hardware stack levels required when called:    3
  3067 ;; This function calls:
  3068 ;;		Nothing
  3069 ;; This function is called by:
  3070 ;;		_main
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           
  3074                           	psect	text22
  3075  001E78                     __ptext22:
  3076                           	opt stack 0
  3077  001E78                     _Key_Init:
  3078                           	opt stack 27
  3079                           
  3080                           ;Key.c: 41: TRISE |= 0x1e;
  3081                           
  3082                           ; BSR set to: 15
  3083                           ;incstack = 0
  3084  001E78  0E1E               	movlw	30
  3085  001E7A  1296               	iorwf	3990,f,c	;volatile
  3086                           
  3087                           ;Key.c: 42: TRISD |= 0xc0;
  3088  001E7C  0EC0               	movlw	192
  3089  001E7E  1295               	iorwf	3989,f,c	;volatile
  3090  001E80  0012               	return		;funcret
  3091  001E82                     __end_of_Key_Init:
  3092                           	opt stack 0
  3093                           tblptru	equ	0xFF8
  3094                           tblptrh	equ	0xFF7
  3095                           tblptrl	equ	0xFF6
  3096                           tablat	equ	0xFF5
  3097                           prodh	equ	0xFF4
  3098                           prodl	equ	0xFF3
  3099                           intcon	equ	0xFF2
  3100                           postinc0	equ	0xFEE
  3101                           wreg	equ	0xFE8
  3102                           indf2	equ	0xFDF
  3103                           fsr2h	equ	0xFDA
  3104                           fsr2l	equ	0xFD9
  3105                           status	equ	0xFD8
  3106                           
  3107 ;; *************** function _Init_TM1640 *****************
  3108 ;; Defined at:
  3109 ;;		line 119 in file "_01_USER/TM1640.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;		None
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;		None
  3114 ;; Return value:  Size  Location     Type
  3115 ;;		None               void
  3116 ;; Registers used:
  3117 ;;		wreg, status,2, status,0, cstack
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3127 ;;Total ram usage:        0 bytes
  3128 ;; Hardware stack levels used:    1
  3129 ;; Hardware stack levels required when called:    5
  3130 ;; This function calls:
  3131 ;;		_TM1640_Start
  3132 ;;		_TM1640_Stop
  3133 ;;		_TM1640_Writer_Byte
  3134 ;; This function is called by:
  3135 ;;		_main
  3136 ;; This function uses a non-reentrant model
  3137 ;;
  3138                           
  3139                           	psect	text23
  3140  001D50                     __ptext23:
  3141                           	opt stack 0
  3142  001D50                     _Init_TM1640:
  3143                           	opt stack 25
  3144                           
  3145                           ;TM1640.c: 121: TRISCbits.TRISC3 = 0;
  3146                           
  3147                           ;incstack = 0
  3148  001D50  9694               	bcf	3988,3,c	;volatile
  3149                           
  3150                           ;TM1640.c: 122: TRISCbits.TRISC4 = 0;
  3151  001D52  9894               	bcf	3988,4,c	;volatile
  3152                           
  3153                           ;TM1640.c: 123: TM1640_Stop();
  3154  001D54  ECCD  F00E         	call	_TM1640_Stop	;wreg free
  3155                           
  3156                           ;TM1640.c: 125: TM1640_Start();
  3157  001D58  ECDF  F00E         	call	_TM1640_Start	;wreg free
  3158                           
  3159                           ;TM1640.c: 126: TM1640_Writer_Byte(0x44);
  3160  001D5C  0E44               	movlw	68
  3161  001D5E  EC9B  F00D         	call	_TM1640_Writer_Byte
  3162                           
  3163                           ;TM1640.c: 127: TM1640_Stop();
  3164  001D62  ECCD  F00E         	call	_TM1640_Stop	;wreg free
  3165                           
  3166                           ;TM1640.c: 129: TM1640_Start();
  3167  001D66  ECDF  F00E         	call	_TM1640_Start	;wreg free
  3168                           
  3169                           ;TM1640.c: 130: TM1640_Writer_Byte(0x8F);
  3170  001D6A  0E8F               	movlw	143
  3171  001D6C  EC9B  F00D         	call	_TM1640_Writer_Byte
  3172                           
  3173                           ;TM1640.c: 131: TM1640_Stop();
  3174  001D70  ECCD  F00E         	call	_TM1640_Stop	;wreg free
  3175  001D74  0012               	return		;funcret
  3176  001D76                     __end_of_Init_TM1640:
  3177                           	opt stack 0
  3178                           tblptru	equ	0xFF8
  3179                           tblptrh	equ	0xFF7
  3180                           tblptrl	equ	0xFF6
  3181                           tablat	equ	0xFF5
  3182                           prodh	equ	0xFF4
  3183                           prodl	equ	0xFF3
  3184                           intcon	equ	0xFF2
  3185                           postinc0	equ	0xFEE
  3186                           wreg	equ	0xFE8
  3187                           indf2	equ	0xFDF
  3188                           fsr2h	equ	0xFDA
  3189                           fsr2l	equ	0xFD9
  3190                           status	equ	0xFD8
  3191                           
  3192 ;; *************** function _TM1640_Writer_Byte *****************
  3193 ;; Defined at:
  3194 ;;		line 77 in file "_01_USER/TM1640.c"
  3195 ;; Parameters:    Size  Location     Type
  3196 ;;  Date            1    wreg     const unsigned char 
  3197 ;; Auto vars:     Size  Location     Type
  3198 ;;  Date            1   26[COMRAM] const unsigned char 
  3199 ;;  mask            1   27[COMRAM] unsigned char 
  3200 ;; Return value:  Size  Location     Type
  3201 ;;		None               void
  3202 ;; Registers used:
  3203 ;;		wreg, status,2, status,0, cstack
  3204 ;; Tracked objects:
  3205 ;;		On entry : 0/0
  3206 ;;		On exit  : 0/0
  3207 ;;		Unchanged: 0/0
  3208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3210 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3212 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3213 ;;Total ram usage:        2 bytes
  3214 ;; Hardware stack levels used:    1
  3215 ;; Hardware stack levels required when called:    4
  3216 ;; This function calls:
  3217 ;;		_TM1640_Delay
  3218 ;; This function is called by:
  3219 ;;		_TM1640_Writer_Dates
  3220 ;;		_Init_TM1640
  3221 ;;		_Open_Display
  3222 ;;		_Disable_Display
  3223 ;; This function uses a non-reentrant model
  3224 ;;
  3225                           
  3226                           	psect	text24
  3227  001B36                     __ptext24:
  3228                           	opt stack 0
  3229  001B36                     _TM1640_Writer_Byte:
  3230                           	opt stack 23
  3231                           
  3232                           ;incstack = 0
  3233                           ;TM1640_Writer_Byte@Date stored from wreg
  3234  001B36  6E1B               	movwf	TM1640_Writer_Byte@Date,c
  3235                           
  3236                           ;TM1640.c: 79: unsigned char mask;
  3237                           ;TM1640.c: 81: for(mask=0x01; mask; mask<<=1)
  3238  001B38  0E01               	movlw	1
  3239  001B3A  6E1C               	movwf	TM1640_Writer_Byte@mask,c
  3240  001B3C  D017               	goto	l2632
  3241  001B3E                     l318:
  3242                           
  3243                           ;TM1640.c: 82: {
  3244                           ;TM1640.c: 83: RC3 = 0;
  3245  001B3E  9682               	bcf	3970,3,c	;volatile
  3246                           
  3247                           ;TM1640.c: 84: TM1640_Delay(1);
  3248  001B40  0E01               	movlw	1
  3249  001B42  EC11  F00F         	call	_TM1640_Delay
  3250                           
  3251                           ;TM1640.c: 85: if(mask & Date)
  3252  001B46  501C               	movf	TM1640_Writer_Byte@mask,w,c
  3253  001B48  141B               	andwf	TM1640_Writer_Byte@Date,w,c
  3254  001B4A  0900               	iorlw	0
  3255  001B4C  B4D8               	btfsc	status,2,c
  3256  001B4E  D002               	goto	l319
  3257                           
  3258                           ;TM1640.c: 86: RC4 = 1;
  3259  001B50  8882               	bsf	3970,4,c	;volatile
  3260  001B52  D002               	goto	l2626
  3261  001B54                     l319:
  3262                           
  3263                           ;TM1640.c: 87: else
  3264                           ;TM1640.c: 88: RC4 = 0;
  3265  001B54  9882               	bcf	3970,4,c	;volatile
  3266  001B56  D000               	goto	l2626
  3267  001B58                     l2626:
  3268                           
  3269                           ;TM1640.c: 89: TM1640_Delay(1);
  3270  001B58  0E01               	movlw	1
  3271  001B5A  EC11  F00F         	call	_TM1640_Delay
  3272                           
  3273                           ;TM1640.c: 90: RC3 = 1;
  3274  001B5E  8682               	bsf	3970,3,c	;volatile
  3275                           
  3276                           ;TM1640.c: 91: TM1640_Delay(1);
  3277  001B60  0E01               	movlw	1
  3278  001B62  EC11  F00F         	call	_TM1640_Delay
  3279  001B66  90D8               	bcf	status,0,c
  3280  001B68  361C               	rlcf	TM1640_Writer_Byte@mask,f,c
  3281  001B6A  D000               	goto	l2632
  3282  001B6C                     l2632:
  3283  001B6C  501C               	movf	TM1640_Writer_Byte@mask,w,c
  3284  001B6E  A4D8               	btfss	status,2,c
  3285  001B70  D7E6               	goto	l318
  3286  001B72  0012               	return		;funcret
  3287  001B74                     __end_of_TM1640_Writer_Byte:
  3288                           	opt stack 0
  3289                           tblptru	equ	0xFF8
  3290                           tblptrh	equ	0xFF7
  3291                           tblptrl	equ	0xFF6
  3292                           tablat	equ	0xFF5
  3293                           prodh	equ	0xFF4
  3294                           prodl	equ	0xFF3
  3295                           intcon	equ	0xFF2
  3296                           postinc0	equ	0xFEE
  3297                           wreg	equ	0xFE8
  3298                           indf2	equ	0xFDF
  3299                           fsr2h	equ	0xFDA
  3300                           fsr2l	equ	0xFD9
  3301                           status	equ	0xFD8
  3302                           
  3303 ;; *************** function _TM1640_Stop *****************
  3304 ;; Defined at:
  3305 ;;		line 32 in file "_01_USER/TM1640.c"
  3306 ;; Parameters:    Size  Location     Type
  3307 ;;		None
  3308 ;; Auto vars:     Size  Location     Type
  3309 ;;		None
  3310 ;; Return value:  Size  Location     Type
  3311 ;;		None               void
  3312 ;; Registers used:
  3313 ;;		wreg, status,2, status,0, cstack
  3314 ;; Tracked objects:
  3315 ;;		On entry : 0/0
  3316 ;;		On exit  : 0/0
  3317 ;;		Unchanged: 0/0
  3318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3323 ;;Total ram usage:        0 bytes
  3324 ;; Hardware stack levels used:    1
  3325 ;; Hardware stack levels required when called:    4
  3326 ;; This function calls:
  3327 ;;		_TM1640_Delay
  3328 ;; This function is called by:
  3329 ;;		_TM1640_Writer_Dates
  3330 ;;		_Init_TM1640
  3331 ;;		_Open_Display
  3332 ;;		_Disable_Display
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           	psect	text25
  3337  001D9A                     __ptext25:
  3338                           	opt stack 0
  3339  001D9A                     _TM1640_Stop:
  3340                           	opt stack 23
  3341                           
  3342                           ;TM1640.c: 34: RC3 = 0;
  3343                           
  3344                           ;incstack = 0
  3345  001D9A  9682               	bcf	3970,3,c	;volatile
  3346                           
  3347                           ;TM1640.c: 35: TM1640_Delay(1);
  3348  001D9C  0E01               	movlw	1
  3349  001D9E  EC11  F00F         	call	_TM1640_Delay
  3350                           
  3351                           ;TM1640.c: 36: RC4 = 0;
  3352  001DA2  9882               	bcf	3970,4,c	;volatile
  3353                           
  3354                           ;TM1640.c: 37: TM1640_Delay(1);
  3355  001DA4  0E01               	movlw	1
  3356  001DA6  EC11  F00F         	call	_TM1640_Delay
  3357                           
  3358                           ;TM1640.c: 38: RC3 = 1;
  3359  001DAA  8682               	bsf	3970,3,c	;volatile
  3360                           
  3361                           ;TM1640.c: 39: TM1640_Delay(1);
  3362  001DAC  0E01               	movlw	1
  3363  001DAE  EC11  F00F         	call	_TM1640_Delay
  3364                           
  3365                           ;TM1640.c: 40: RC4 = 1;
  3366  001DB2  8882               	bsf	3970,4,c	;volatile
  3367                           
  3368                           ;TM1640.c: 41: TM1640_Delay(1);
  3369  001DB4  0E01               	movlw	1
  3370  001DB6  EC11  F00F         	call	_TM1640_Delay
  3371                           
  3372                           ;TM1640.c: 42: RC3 = 0;
  3373  001DBA  9682               	bcf	3970,3,c	;volatile
  3374  001DBC  0012               	return		;funcret
  3375  001DBE                     __end_of_TM1640_Stop:
  3376                           	opt stack 0
  3377                           tblptru	equ	0xFF8
  3378                           tblptrh	equ	0xFF7
  3379                           tblptrl	equ	0xFF6
  3380                           tablat	equ	0xFF5
  3381                           prodh	equ	0xFF4
  3382                           prodl	equ	0xFF3
  3383                           intcon	equ	0xFF2
  3384                           postinc0	equ	0xFEE
  3385                           wreg	equ	0xFE8
  3386                           indf2	equ	0xFDF
  3387                           fsr2h	equ	0xFDA
  3388                           fsr2l	equ	0xFD9
  3389                           status	equ	0xFD8
  3390                           
  3391 ;; *************** function _TM1640_Start *****************
  3392 ;; Defined at:
  3393 ;;		line 19 in file "_01_USER/TM1640.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;		None
  3396 ;; Auto vars:     Size  Location     Type
  3397 ;;		None
  3398 ;; Return value:  Size  Location     Type
  3399 ;;		None               void
  3400 ;; Registers used:
  3401 ;;		wreg, status,2, status,0, cstack
  3402 ;; Tracked objects:
  3403 ;;		On entry : 0/0
  3404 ;;		On exit  : 0/0
  3405 ;;		Unchanged: 0/0
  3406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3411 ;;Total ram usage:        0 bytes
  3412 ;; Hardware stack levels used:    1
  3413 ;; Hardware stack levels required when called:    4
  3414 ;; This function calls:
  3415 ;;		_TM1640_Delay
  3416 ;; This function is called by:
  3417 ;;		_TM1640_Writer_Dates
  3418 ;;		_Init_TM1640
  3419 ;;		_Open_Display
  3420 ;;		_Disable_Display
  3421 ;; This function uses a non-reentrant model
  3422 ;;
  3423                           
  3424                           	psect	text26
  3425  001DBE                     __ptext26:
  3426                           	opt stack 0
  3427  001DBE                     _TM1640_Start:
  3428                           	opt stack 23
  3429                           
  3430                           ;TM1640.c: 21: RC3 = 0;
  3431                           
  3432                           ;incstack = 0
  3433  001DBE  9682               	bcf	3970,3,c	;volatile
  3434                           
  3435                           ;TM1640.c: 22: TM1640_Delay(1);
  3436  001DC0  0E01               	movlw	1
  3437  001DC2  EC11  F00F         	call	_TM1640_Delay
  3438                           
  3439                           ;TM1640.c: 23: RC4 = 1;
  3440  001DC6  8882               	bsf	3970,4,c	;volatile
  3441                           
  3442                           ;TM1640.c: 24: TM1640_Delay(1);
  3443  001DC8  0E01               	movlw	1
  3444  001DCA  EC11  F00F         	call	_TM1640_Delay
  3445                           
  3446                           ;TM1640.c: 25: RC3 = 1;
  3447  001DCE  8682               	bsf	3970,3,c	;volatile
  3448                           
  3449                           ;TM1640.c: 26: TM1640_Delay(1);
  3450  001DD0  0E01               	movlw	1
  3451  001DD2  EC11  F00F         	call	_TM1640_Delay
  3452                           
  3453                           ;TM1640.c: 27: RC4 = 0;
  3454  001DD6  9882               	bcf	3970,4,c	;volatile
  3455                           
  3456                           ;TM1640.c: 28: TM1640_Delay(1);
  3457  001DD8  0E01               	movlw	1
  3458  001DDA  EC11  F00F         	call	_TM1640_Delay
  3459                           
  3460                           ;TM1640.c: 29: RC3 = 0;
  3461  001DDE  9682               	bcf	3970,3,c	;volatile
  3462  001DE0  0012               	return		;funcret
  3463  001DE2                     __end_of_TM1640_Start:
  3464                           	opt stack 0
  3465                           tblptru	equ	0xFF8
  3466                           tblptrh	equ	0xFF7
  3467                           tblptrl	equ	0xFF6
  3468                           tablat	equ	0xFF5
  3469                           prodh	equ	0xFF4
  3470                           prodl	equ	0xFF3
  3471                           intcon	equ	0xFF2
  3472                           postinc0	equ	0xFEE
  3473                           wreg	equ	0xFE8
  3474                           indf2	equ	0xFDF
  3475                           fsr2h	equ	0xFDA
  3476                           fsr2l	equ	0xFD9
  3477                           status	equ	0xFD8
  3478                           
  3479 ;; *************** function _TM1640_Delay *****************
  3480 ;; Defined at:
  3481 ;;		line 109 in file "_01_USER/TM1640.c"
  3482 ;; Parameters:    Size  Location     Type
  3483 ;;  Time            1    wreg     unsigned char 
  3484 ;; Auto vars:     Size  Location     Type
  3485 ;;  Time            1   24[COMRAM] unsigned char 
  3486 ;;  i               1   25[COMRAM] unsigned char 
  3487 ;; Return value:  Size  Location     Type
  3488 ;;		None               void
  3489 ;; Registers used:
  3490 ;;		wreg, status,2, status,0
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3497 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3499 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3500 ;;Total ram usage:        2 bytes
  3501 ;; Hardware stack levels used:    1
  3502 ;; Hardware stack levels required when called:    3
  3503 ;; This function calls:
  3504 ;;		Nothing
  3505 ;; This function is called by:
  3506 ;;		_TM1640_Start
  3507 ;;		_TM1640_Stop
  3508 ;;		_TM1640_Writer_Byte
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512                           	psect	text27
  3513  001E22                     __ptext27:
  3514                           	opt stack 0
  3515  001E22                     _TM1640_Delay:
  3516                           	opt stack 23
  3517                           
  3518                           ;incstack = 0
  3519                           ;TM1640_Delay@Time stored from wreg
  3520  001E22  6E19               	movwf	TM1640_Delay@Time,c
  3521  001E24                     
  3522                           ;TM1640.c: 114: {
  3523                           ;TM1640.c: 115: for(i=0; i<10; ++i);
  3524  001E24  0E00               	movlw	0
  3525  001E26  6E1A               	movwf	TM1640_Delay@i,c
  3526  001E28  D002               	goto	l2592
  3527  001E2A  D004               	goto	l333
  3528  001E2C                     l2590:
  3529  001E2C  2A1A               	incf	TM1640_Delay@i,f,c
  3530  001E2E                     l2592:
  3531  001E2E  0E09               	movlw	9
  3532  001E30  641A               	cpfsgt	TM1640_Delay@i,c
  3533  001E32  D7FC               	goto	l2590
  3534  001E34                     l333:
  3535                           
  3536                           ;TM1640.c: 116: }while(--Time);
  3537  001E34  2E19               	decfsz	TM1640_Delay@Time,f,c
  3538  001E36  D7F6               	goto	l2584
  3539  001E38  0012               	return	
  3540  001E3A  0012               	return		;funcret
  3541  001E3C                     __end_of_TM1640_Delay:
  3542                           	opt stack 0
  3543                           tblptru	equ	0xFF8
  3544                           tblptrh	equ	0xFF7
  3545                           tblptrl	equ	0xFF6
  3546                           tablat	equ	0xFF5
  3547                           prodh	equ	0xFF4
  3548                           prodl	equ	0xFF3
  3549                           intcon	equ	0xFF2
  3550                           postinc0	equ	0xFEE
  3551                           wreg	equ	0xFE8
  3552                           indf2	equ	0xFDF
  3553                           fsr2h	equ	0xFDA
  3554                           fsr2l	equ	0xFD9
  3555                           status	equ	0xFD8
  3556                           
  3557 ;; *************** function _GPIO_Config *****************
  3558 ;; Defined at:
  3559 ;;		line 38 in file "_01_USER/GPIO.c"
  3560 ;; Parameters:    Size  Location     Type
  3561 ;;		None
  3562 ;; Auto vars:     Size  Location     Type
  3563 ;;		None
  3564 ;; Return value:  Size  Location     Type
  3565 ;;		None               void
  3566 ;; Registers used:
  3567 ;;		wreg, status,2, status,0
  3568 ;; Tracked objects:
  3569 ;;		On entry : 0/0
  3570 ;;		On exit  : 0/0
  3571 ;;		Unchanged: 0/0
  3572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3577 ;;Total ram usage:        0 bytes
  3578 ;; Hardware stack levels used:    1
  3579 ;; Hardware stack levels required when called:    3
  3580 ;; This function calls:
  3581 ;;		Nothing
  3582 ;; This function is called by:
  3583 ;;		_main
  3584 ;; This function uses a non-reentrant model
  3585 ;;
  3586                           
  3587                           	psect	text28
  3588  001E6C                     __ptext28:
  3589                           	opt stack 0
  3590  001E6C                     _GPIO_Config:
  3591                           	opt stack 27
  3592                           
  3593                           ;GPIO.c: 41: TRISE &= 0x1f;
  3594                           
  3595                           ;incstack = 0
  3596  001E6C  0E1F               	movlw	31
  3597  001E6E  1696               	andwf	3990,f,c	;volatile
  3598                           
  3599                           ;GPIO.c: 43: RE5 = 1;
  3600  001E70  8A84               	bsf	3972,5,c	;volatile
  3601                           
  3602                           ;GPIO.c: 44: RE6 = 1;
  3603  001E72  8C84               	bsf	3972,6,c	;volatile
  3604                           
  3605                           ;GPIO.c: 45: RE7 = 1;
  3606  001E74  8E84               	bsf	3972,7,c	;volatile
  3607  001E76  0012               	return		;funcret
  3608  001E78                     __end_of_GPIO_Config:
  3609                           	opt stack 0
  3610                           tblptru	equ	0xFF8
  3611                           tblptrh	equ	0xFF7
  3612                           tblptrl	equ	0xFF6
  3613                           tablat	equ	0xFF5
  3614                           prodh	equ	0xFF4
  3615                           prodl	equ	0xFF3
  3616                           intcon	equ	0xFF2
  3617                           postinc0	equ	0xFEE
  3618                           wreg	equ	0xFE8
  3619                           indf2	equ	0xFDF
  3620                           fsr2h	equ	0xFDA
  3621                           fsr2l	equ	0xFD9
  3622                           status	equ	0xFD8
  3623                           
  3624 ;; *************** function _ADC6_Init *****************
  3625 ;; Defined at:
  3626 ;;		line 37 in file "_01_USER/My_ADC.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;		None
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;		None
  3631 ;; Return value:  Size  Location     Type
  3632 ;;		None               void
  3633 ;; Registers used:
  3634 ;;		wreg, status,2, status,0, cstack
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3644 ;;Total ram usage:        0 bytes
  3645 ;; Hardware stack levels used:    1
  3646 ;; Hardware stack levels required when called:    4
  3647 ;; This function calls:
  3648 ;;		_OpenADC
  3649 ;; This function is called by:
  3650 ;;		_main
  3651 ;; This function uses a non-reentrant model
  3652 ;;
  3653                           
  3654                           	psect	text29
  3655  001E3C                     __ptext29:
  3656                           	opt stack 0
  3657  001E3C                     _ADC6_Init:
  3658                           	opt stack 26
  3659                           
  3660                           ;My_ADC.c: 40: OpenADC(0b11111111 &
  3661                           ;My_ADC.c: 41: 0b11110011 &
  3662                           ;My_ADC.c: 42: 0b10001111
  3663                           ;My_ADC.c: 43: ,
  3664                           ;My_ADC.c: 44: 0b10011011
  3665                           ;My_ADC.c: 45: ,
  3666                           ;My_ADC.c: 46: 0b00111111 &
  3667                           ;My_ADC.c: 47: 0b11111111 &
  3668                           ;My_ADC.c: 48: 0b11110111 &
  3669                           ;My_ADC.c: 49: 0b11111000
  3670                           ;My_ADC.c: 50: );
  3671                           
  3672                           ;incstack = 0
  3673  001E3C  0E9B               	movlw	155
  3674  001E3E  6E19               	movwf	OpenADC@config2,c
  3675  001E40  0E30               	movlw	48
  3676  001E42  6E1A               	movwf	OpenADC@config3,c
  3677  001E44  0E83               	movlw	131
  3678  001E46  EC03  F00D         	call	_OpenADC
  3679                           
  3680                           ;My_ADC.c: 52: (PIE1bits.ADIE=0);
  3681  001E4A  9C9D               	bcf	3997,6,c	;volatile
  3682  001E4C  0012               	return		;funcret
  3683  001E4E                     __end_of_ADC6_Init:
  3684                           	opt stack 0
  3685                           tblptru	equ	0xFF8
  3686                           tblptrh	equ	0xFF7
  3687                           tblptrl	equ	0xFF6
  3688                           tablat	equ	0xFF5
  3689                           prodh	equ	0xFF4
  3690                           prodl	equ	0xFF3
  3691                           intcon	equ	0xFF2
  3692                           postinc0	equ	0xFEE
  3693                           wreg	equ	0xFE8
  3694                           indf2	equ	0xFDF
  3695                           fsr2h	equ	0xFDA
  3696                           fsr2l	equ	0xFD9
  3697                           status	equ	0xFD8
  3698                           
  3699 ;; *************** function _OpenADC *****************
  3700 ;; Defined at:
  3701 ;;		line 305 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  3702 ;; Parameters:    Size  Location     Type
  3703 ;;  config          1    wreg     unsigned char 
  3704 ;;  config2         1   24[COMRAM] unsigned char 
  3705 ;;  config3         1   25[COMRAM] unsigned char 
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;  config          1   28[COMRAM] unsigned char 
  3708 ;; Return value:  Size  Location     Type
  3709 ;;		None               void
  3710 ;; Registers used:
  3711 ;;		wreg, status,2, status,0
  3712 ;; Tracked objects:
  3713 ;;		On entry : 0/0
  3714 ;;		On exit  : 0/0
  3715 ;;		Unchanged: 0/0
  3716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3717 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3718 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3719 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3720 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3721 ;;Total ram usage:        5 bytes
  3722 ;; Hardware stack levels used:    1
  3723 ;; Hardware stack levels required when called:    3
  3724 ;; This function calls:
  3725 ;;		Nothing
  3726 ;; This function is called by:
  3727 ;;		_ADC6_Init
  3728 ;; This function uses a non-reentrant model
  3729 ;;
  3730                           
  3731                           	psect	text30
  3732  001A06                     __ptext30:
  3733                           	opt stack 0
  3734  001A06                     _OpenADC:
  3735                           	opt stack 26
  3736                           
  3737                           ;incstack = 0
  3738                           ;OpenADC@config stored from wreg
  3739  001A06  6E1D               	movwf	OpenADC@config,c
  3740  001A08  0E00               	movlw	0
  3741  001A0A  6EC2               	movwf	4034,c	;volatile
  3742  001A0C  0E00               	movlw	0
  3743  001A0E  6EC1               	movwf	4033,c	;volatile
  3744  001A10  0E00               	movlw	0
  3745  001A12  6EC0               	movwf	4032,c	;volatile
  3746  001A14  5019               	movf	OpenADC@config2,w,c
  3747  001A16  0B7C               	andlw	124
  3748  001A18  6EC2               	movwf	4034,c	;volatile
  3749  001A1A  C01A  FFC1         	movff	OpenADC@config3,4033	;volatile
  3750  001A1E  C01D  F01B         	movff	OpenADC@config,??_OpenADC
  3751  001A22  90D8               	bcf	status,0,c
  3752  001A24  361B               	rlcf	??_OpenADC,f,c
  3753  001A26  90D8               	bcf	status,0,c
  3754  001A28  361B               	rlcf	??_OpenADC,f,c
  3755  001A2A  0E38               	movlw	56
  3756  001A2C  161B               	andwf	??_OpenADC,f,c
  3757  001A2E  C01D  F01C         	movff	OpenADC@config,??_OpenADC+1
  3758  001A32  3A1C               	swapf	??_OpenADC+1,f,c
  3759  001A34  0E0F               	movlw	15
  3760  001A36  161C               	andwf	??_OpenADC+1,f,c
  3761  001A38  0E07               	movlw	7
  3762  001A3A  161C               	andwf	??_OpenADC+1,f,c
  3763  001A3C  501D               	movf	OpenADC@config,w,c
  3764  001A3E  0B80               	andlw	128
  3765  001A40  101C               	iorwf	??_OpenADC+1,w,c
  3766  001A42  101B               	iorwf	??_OpenADC,w,c
  3767  001A44  6EC0               	movwf	4032,c	;volatile
  3768  001A46  AE19               	btfss	OpenADC@config2,7,c
  3769  001A48  D003               	goto	l435
  3770  001A4A  9C9E               	bcf	3998,6,c	;volatile
  3771  001A4C  8C9D               	bsf	3997,6,c	;volatile
  3772  001A4E  8CF2               	bsf	intcon,6,c	;volatile
  3773  001A50                     l435:
  3774  001A50  80C2               	bsf	4034,0,c	;volatile
  3775  001A52  0012               	return		;funcret
  3776  001A54                     __end_of_OpenADC:
  3777                           	opt stack 0
  3778                           tblptru	equ	0xFF8
  3779                           tblptrh	equ	0xFF7
  3780                           tblptrl	equ	0xFF6
  3781                           tablat	equ	0xFF5
  3782                           prodh	equ	0xFF4
  3783                           prodl	equ	0xFF3
  3784                           intcon	equ	0xFF2
  3785                           postinc0	equ	0xFEE
  3786                           wreg	equ	0xFE8
  3787                           indf2	equ	0xFDF
  3788                           fsr2h	equ	0xFDA
  3789                           fsr2l	equ	0xFD9
  3790                           status	equ	0xFD8
  3791                           
  3792 ;; *************** function _Sys_Cyc *****************
  3793 ;; Defined at:
  3794 ;;		line 98 in file "_01_USER/My_Timer.c"
  3795 ;; Parameters:    Size  Location     Type
  3796 ;;		None
  3797 ;; Auto vars:     Size  Location     Type
  3798 ;;  _pulse          1   23[COMRAM] unsigned char 
  3799 ;; Return value:  Size  Location     Type
  3800 ;;		None               void
  3801 ;; Registers used:
  3802 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3809 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3810 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3811 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3812 ;;Total ram usage:       15 bytes
  3813 ;; Hardware stack levels used:    1
  3814 ;; Hardware stack levels required when called:    2
  3815 ;; This function calls:
  3816 ;;		_Delay_1Khz
  3817 ;;		_Key_FSM_Scan
  3818 ;;		_Manage_Message
  3819 ;;		___llmod
  3820 ;;		i2_SetTimer0
  3821 ;; This function is called by:
  3822 ;;		Interrupt level 2
  3823 ;; This function uses a non-reentrant model
  3824 ;;
  3825                           
  3826                           	psect	intcode
  3827  000008                     __pintcode:
  3828                           	opt stack 0
  3829  000008                     _Sys_Cyc:
  3830                           	opt stack 23
  3831                           
  3832                           ;incstack = 0
  3833  000008  CFFA F00A          	movff	pclath,??_Sys_Cyc
  3834  00000C  CFFB F00B          	movff	pclatu,??_Sys_Cyc+1
  3835  000010  CFE9 F00C          	movff	fsr0l,??_Sys_Cyc+2
  3836  000014  CFEA F00D          	movff	fsr0h,??_Sys_Cyc+3
  3837  000018  CFE1 F00E          	movff	fsr1l,??_Sys_Cyc+4
  3838  00001C  CFE2 F00F          	movff	fsr1h,??_Sys_Cyc+5
  3839  000020  CFD9 F010          	movff	fsr2l,??_Sys_Cyc+6
  3840  000024  CFDA F011          	movff	fsr2h,??_Sys_Cyc+7
  3841  000028  CFF3 F012          	movff	prodl,??_Sys_Cyc+8
  3842  00002C  CFF4 F013          	movff	prodh,??_Sys_Cyc+9
  3843  000030  CFF6 F014          	movff	tblptrl,??_Sys_Cyc+10
  3844  000034  CFF7 F015          	movff	tblptrh,??_Sys_Cyc+11
  3845  000038  CFF8 F016          	movff	tblptru,??_Sys_Cyc+12
  3846  00003C  CFF5 F017          	movff	tablat,??_Sys_Cyc+13
  3847                           
  3848                           ;My_Timer.c: 101: static unsigned char _overturn_1Khz = 0,_overturn_LED = 0;
  3849                           ;My_Timer.c: 102: unsigned char _pulse = 10;
  3850  000040  0E0A               	movlw	10
  3851  000042  6E18               	movwf	Sys_Cyc@_pulse,c
  3852                           
  3853                           ;My_Timer.c: 103: static char _RS485_Receive_Num = 0,RS485_Timer = 0,RS485_LED = 0;
  3854                           ;My_Timer.c: 106: if(TMR0IF && TMR0IE)
  3855  000044  B4F2               	btfsc	intcon,2,c	;volatile
  3856  000046  AAF2               	btfss	intcon,5,c	;volatile
  3857  000048  D064               	goto	i2l2544
  3858                           
  3859                           ;My_Timer.c: 107: {
  3860                           ;My_Timer.c: 108: Timer_Cyc = (Timer_Cyc+1) % 100000000;
  3861  00004A  0E01               	movlw	1
  3862  00004C  2437               	addwf	_Timer_Cyc,w,c
  3863  00004E  6E01               	movwf	___llmod@dividend,c
  3864  000050  0E00               	movlw	0
  3865  000052  2038               	addwfc	_Timer_Cyc+1,w,c
  3866  000054  6E02               	movwf	___llmod@dividend+1,c
  3867  000056  0E00               	movlw	0
  3868  000058  2039               	addwfc	_Timer_Cyc+2,w,c
  3869  00005A  6E03               	movwf	___llmod@dividend+2,c
  3870  00005C  0E00               	movlw	0
  3871  00005E  203A               	addwfc	_Timer_Cyc+3,w,c
  3872  000060  6E04               	movwf	___llmod@dividend+3,c
  3873  000062  0E00               	movlw	0
  3874  000064  6E05               	movwf	___llmod@divisor,c
  3875  000066  0EE1               	movlw	225
  3876  000068  6E06               	movwf	___llmod@divisor+1,c
  3877  00006A  0EF5               	movlw	245
  3878  00006C  6E07               	movwf	___llmod@divisor+2,c
  3879  00006E  0E05               	movlw	5
  3880  000070  6E08               	movwf	___llmod@divisor+3,c
  3881  000072  EC30  F00C         	call	___llmod	;wreg free
  3882  000076  C001  F037         	movff	?___llmod,_Timer_Cyc
  3883  00007A  C002  F038         	movff	?___llmod+1,_Timer_Cyc+1
  3884  00007E  C003  F039         	movff	?___llmod+2,_Timer_Cyc+2
  3885  000082  C004  F03A         	movff	?___llmod+3,_Timer_Cyc+3
  3886                           
  3887                           ;My_Timer.c: 109: if(_RS485_Receive_Num == 0) RS485_Timer --;
  3888  000086  5040               	movf	Sys_Cyc@_RS485_Receive_Num,w,c
  3889  000088  A4D8               	btfss	status,2,c
  3890  00008A  D002               	goto	i2l2516
  3891  00008C  063F               	decf	Sys_Cyc@RS485_Timer,f,c
  3892  00008E  D000               	goto	i2l2516
  3893  000090                     i2l2516:
  3894                           
  3895                           ;My_Timer.c: 111: if( Handle_Switch._1Khz )
  3896  000090  5033               	movf	_Handle_Switch,w,c
  3897  000092  A4D8               	btfss	status,2,c
  3898  000094  D00D               	goto	i2l2528
  3899  000096  D012               	goto	i2l2530
  3900                           
  3901                           ;My_Timer.c: 112: {
  3902                           ;My_Timer.c: 113: while( _pulse-- )
  3903  000098  D00B               	goto	i2l2528
  3904  00009A                     i2l2520:
  3905                           
  3906                           ;My_Timer.c: 114: {
  3907                           ;My_Timer.c: 115: _overturn_1Khz =~ _overturn_1Khz;
  3908  00009A  1E41               	comf	Sys_Cyc@_overturn_1Khz,f,c
  3909                           
  3910                           ;My_Timer.c: 116: if(_overturn_1Khz) PORTEbits.RE7 = 1; else PORTEbits.RE7 = 0;
  3911  00009C  5041               	movf	Sys_Cyc@_overturn_1Khz,w,c
  3912  00009E  B4D8               	btfsc	status,2,c
  3913  0000A0  D002               	goto	i2l259
  3914  0000A2  8E84               	bsf	3972,7,c	;volatile
  3915  0000A4  D002               	goto	i2l2526
  3916  0000A6                     i2l259:
  3917  0000A6  9E84               	bcf	3972,7,c	;volatile
  3918  0000A8  D000               	goto	i2l2526
  3919  0000AA                     i2l2526:
  3920                           
  3921                           ;My_Timer.c: 117: Delay_1Khz();
  3922  0000AA  ECF4  F00D         	call	_Delay_1Khz	;wreg free
  3923  0000AE  D000               	goto	i2l2528
  3924  0000B0                     i2l2528:
  3925  0000B0  0618               	decf	Sys_Cyc@_pulse,f,c
  3926  0000B2  2818               	incf	Sys_Cyc@_pulse,w,c
  3927  0000B4  B4D8               	btfsc	status,2,c
  3928  0000B6  D002               	goto	i2l2530
  3929  0000B8  D7F0               	goto	i2l2520
  3930  0000BA  D000               	goto	i2l2530
  3931  0000BC                     i2l2530:
  3932                           
  3933                           ;My_Timer.c: 118: }
  3934                           ;My_Timer.c: 119: }
  3935                           ;My_Timer.c: 122: if( Timer_Cyc%30 == 0 )
  3936  0000BC  C037  F001         	movff	_Timer_Cyc,___llmod@dividend
  3937  0000C0  C038  F002         	movff	_Timer_Cyc+1,___llmod@dividend+1
  3938  0000C4  C039  F003         	movff	_Timer_Cyc+2,___llmod@dividend+2
  3939  0000C8  C03A  F004         	movff	_Timer_Cyc+3,___llmod@dividend+3
  3940  0000CC  0E1E               	movlw	30
  3941  0000CE  6E05               	movwf	___llmod@divisor,c
  3942  0000D0  0E00               	movlw	0
  3943  0000D2  6E06               	movwf	___llmod@divisor+1,c
  3944  0000D4  0E00               	movlw	0
  3945  0000D6  6E07               	movwf	___llmod@divisor+2,c
  3946  0000D8  0E00               	movlw	0
  3947  0000DA  6E08               	movwf	___llmod@divisor+3,c
  3948  0000DC  EC30  F00C         	call	___llmod	;wreg free
  3949  0000E0  5001               	movf	?___llmod,w,c
  3950  0000E2  1002               	iorwf	?___llmod+1,w,c
  3951  0000E4  1003               	iorwf	?___llmod+2,w,c
  3952  0000E6  1004               	iorwf	?___llmod+3,w,c
  3953  0000E8  A4D8               	btfss	status,2,c
  3954  0000EA  D008               	goto	i2l2538
  3955                           
  3956                           ;My_Timer.c: 123: {
  3957                           ;My_Timer.c: 124: _overturn_LED = ~_overturn_LED;
  3958  0000EC  1E42               	comf	Sys_Cyc@_overturn_LED,f,c
  3959                           
  3960                           ;My_Timer.c: 125: if(_overturn_LED) PORTEbits.RE5=0;
  3961  0000EE  5042               	movf	Sys_Cyc@_overturn_LED,w,c
  3962  0000F0  B4D8               	btfsc	status,2,c
  3963  0000F2  D002               	goto	i2l263
  3964  0000F4  9A84               	bcf	3972,5,c	;volatile
  3965  0000F6  D002               	goto	i2l2538
  3966  0000F8                     i2l263:
  3967                           
  3968                           ;My_Timer.c: 126: else PORTEbits.RE5=1;
  3969  0000F8  8A84               	bsf	3972,5,c	;volatile
  3970  0000FA  D000               	goto	i2l2538
  3971  0000FC                     i2l2538:
  3972                           
  3973                           ;My_Timer.c: 127: }
  3974                           ;My_Timer.c: 130: Key_FSM_Scan();
  3975  0000FC  EC50  F00D         	call	_Key_FSM_Scan	;wreg free
  3976                           
  3977                           ;My_Timer.c: 133: Manage_Message();
  3978  000100  EC87  F00A         	call	_Manage_Message	;wreg free
  3979                           
  3980                           ;My_Timer.c: 135: SetTimer0(78);
  3981  000104  0E00               	movlw	0
  3982  000106  6E02               	movwf	i2SetTimer0@_tmr+1,c
  3983  000108  0E4E               	movlw	78
  3984  00010A  6E01               	movwf	i2SetTimer0@_tmr,c
  3985  00010C  EC41  F00E         	call	i2_SetTimer0	;wreg free
  3986  000110  D000               	goto	i2l2544
  3987  000112                     i2l2544:
  3988                           
  3989                           ;My_Timer.c: 136: }
  3990                           ;My_Timer.c: 139: if( RC2IF )
  3991  000112  AAA4               	btfss	4004,5,c	;volatile
  3992  000114  D02B               	goto	i2l271
  3993                           
  3994                           ;My_Timer.c: 140: {
  3995                           ;My_Timer.c: 141: if(RS485_Timer == 0 ) _RS485_Receive_Num = 0;
  3996  000116  503F               	movf	Sys_Cyc@RS485_Timer,w,c
  3997  000118  A4D8               	btfss	status,2,c
  3998  00011A  D003               	goto	i2l2550
  3999  00011C  0E00               	movlw	0
  4000  00011E  6E40               	movwf	Sys_Cyc@_RS485_Receive_Num,c
  4001  000120  D000               	goto	i2l2550
  4002  000122                     i2l2550:
  4003                           
  4004                           ;My_Timer.c: 143: RS485_ReceiveBuff[ _RS485_Receive_Num] = RCREG2;
  4005  000122  5040               	movf	Sys_Cyc@_RS485_Receive_Num,w,c
  4006  000124  0D01               	mullw	1
  4007  000126  0E8E               	movlw	low _RS485_ReceiveBuff
  4008  000128  24F3               	addwf	prodl,w,c
  4009  00012A  6ED9               	movwf	fsr2l,c
  4010  00012C  0E00               	movlw	high _RS485_ReceiveBuff
  4011  00012E  20F4               	addwfc	prodh,w,c
  4012  000130  6EDA               	movwf	fsr2h,c
  4013  000132  CF1D FFDF          	movff	3869,indf2	;volatile
  4014                           
  4015                           ;My_Timer.c: 145: if(RS485_ReceiveBuff[0] == 0xaa) _RS485_Receive_Num++,RS485_Timer = 2;
  4016  000136  0EAA               	movlw	170
  4017  000138  0100               	movlb	0	; () banked
  4018  00013A  198E               	xorwf	_RS485_ReceiveBuff& (0+255),w,b
  4019  00013C  A4D8               	btfss	status,2,c
  4020  00013E  D004               	goto	i2l2558
  4021                           
  4022                           ; BSR set to: 0
  4023  000140  2A40               	incf	Sys_Cyc@_RS485_Receive_Num,f,c
  4024                           
  4025                           ; BSR set to: 0
  4026  000142  0E02               	movlw	2
  4027  000144  6E3F               	movwf	Sys_Cyc@RS485_Timer,c
  4028  000146  D000               	goto	i2l2558
  4029  000148                     i2l2558:
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;My_Timer.c: 147: if( _RS485_Receive_Num == 10 )
  4033  000148  0E0A               	movlw	10
  4034  00014A  1840               	xorwf	Sys_Cyc@_RS485_Receive_Num,w,c
  4035  00014C  A4D8               	btfss	status,2,c
  4036  00014E  D00E               	goto	i2l271
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;My_Timer.c: 148: {
  4040                           ;My_Timer.c: 149: RS485_Receive_Flag = 1 ;
  4041  000150  0E01               	movlw	1
  4042  000152  6E45               	movwf	_RS485_Receive_Flag,c
  4043                           
  4044                           ;My_Timer.c: 150: _RS485_Receive_Num = 0;
  4045  000154  0E00               	movlw	0
  4046  000156  6E40               	movwf	Sys_Cyc@_RS485_Receive_Num,c
  4047                           
  4048                           ;My_Timer.c: 151: if(RS485_LED) {PORTEbits.RE6=0;RS485_LED = 0;}
  4049  000158  503E               	movf	Sys_Cyc@RS485_LED,w,c
  4050  00015A  B4D8               	btfsc	status,2,c
  4051  00015C  D003               	goto	i2l269
  4052                           
  4053                           ; BSR set to: 0
  4054  00015E  9C84               	bcf	3972,6,c	;volatile
  4055                           
  4056                           ; BSR set to: 0
  4057  000160  0E00               	movlw	0
  4058  000162  D002               	goto	L1
  4059  000164                     i2l269:
  4060                           
  4061                           ; BSR set to: 0
  4062                           ;My_Timer.c: 152: else {PORTEbits.RE6=1;RS485_LED = 1;}
  4063  000164  8C84               	bsf	3972,6,c	;volatile
  4064                           
  4065                           ; BSR set to: 0
  4066  000166  0E01               	movlw	1
  4067  000168                     L1:
  4068  000168  6E3E               	movwf	Sys_Cyc@RS485_LED,c
  4069                           
  4070                           ; BSR set to: 0
  4071                           
  4072                           ; BSR set to: 0
  4073  00016A  D000               	goto	i2l271
  4074  00016C                     i2l271:
  4075  00016C  C017  FFF5         	movff	??_Sys_Cyc+13,tablat
  4076  000170  C016  FFF8         	movff	??_Sys_Cyc+12,tblptru
  4077  000174  C015  FFF7         	movff	??_Sys_Cyc+11,tblptrh
  4078  000178  C014  FFF6         	movff	??_Sys_Cyc+10,tblptrl
  4079  00017C  C013  FFF4         	movff	??_Sys_Cyc+9,prodh
  4080  000180  C012  FFF3         	movff	??_Sys_Cyc+8,prodl
  4081  000184  C011  FFDA         	movff	??_Sys_Cyc+7,fsr2h
  4082  000188  C010  FFD9         	movff	??_Sys_Cyc+6,fsr2l
  4083  00018C  C00F  FFE2         	movff	??_Sys_Cyc+5,fsr1h
  4084  000190  C00E  FFE1         	movff	??_Sys_Cyc+4,fsr1l
  4085  000194  C00D  FFEA         	movff	??_Sys_Cyc+3,fsr0h
  4086  000198  C00C  FFE9         	movff	??_Sys_Cyc+2,fsr0l
  4087  00019C  C00B  FFFB         	movff	??_Sys_Cyc+1,pclatu
  4088  0001A0  C00A  FFFA         	movff	??_Sys_Cyc,pclath
  4089  0001A4  0011               	retfie		f
  4090  0001A6                     __end_of_Sys_Cyc:
  4091                           	opt stack 0
  4092                           pclatu	equ	0xFFB
  4093                           pclath	equ	0xFFA
  4094                           tblptru	equ	0xFF8
  4095                           tblptrh	equ	0xFF7
  4096                           tblptrl	equ	0xFF6
  4097                           tablat	equ	0xFF5
  4098                           prodh	equ	0xFF4
  4099                           prodl	equ	0xFF3
  4100                           intcon	equ	0xFF2
  4101                           postinc0	equ	0xFEE
  4102                           fsr0h	equ	0xFEA
  4103                           fsr0l	equ	0xFE9
  4104                           wreg	equ	0xFE8
  4105                           fsr1h	equ	0xFE2
  4106                           fsr1l	equ	0xFE1
  4107                           indf2	equ	0xFDF
  4108                           fsr2h	equ	0xFDA
  4109                           fsr2l	equ	0xFD9
  4110                           status	equ	0xFD8
  4111                           
  4112 ;; *************** function i2_SetTimer0 *****************
  4113 ;; Defined at:
  4114 ;;		line 79 in file "_01_USER/My_Timer.c"
  4115 ;; Parameters:    Size  Location     Type
  4116 ;;  _tmr            2    0[COMRAM] unsigned int 
  4117 ;; Auto vars:     Size  Location     Type
  4118 ;;		None
  4119 ;; Return value:  Size  Location     Type
  4120 ;;		None               void
  4121 ;; Registers used:
  4122 ;;		wreg, status,2, status,0
  4123 ;; Tracked objects:
  4124 ;;		On entry : 0/0
  4125 ;;		On exit  : 0/0
  4126 ;;		Unchanged: 0/0
  4127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4128 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4130 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4131 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4132 ;;Total ram usage:        4 bytes
  4133 ;; Hardware stack levels used:    1
  4134 ;; This function calls:
  4135 ;;		Nothing
  4136 ;; This function is called by:
  4137 ;;		_Sys_Cyc
  4138 ;; This function uses a non-reentrant model
  4139 ;;
  4140                           
  4141                           	psect	text32
  4142  001C82                     __ptext32:
  4143                           	opt stack 0
  4144  001C82                     i2_SetTimer0:
  4145                           	opt stack 24
  4146                           
  4147                           ;My_Timer.c: 81: if(_tmr > 0xffff) _tmr = 0xffff;
  4148                           
  4149                           ;incstack = 0
  4150  001C82  D003               	goto	i2l2478
  4151  001C84  6801               	setf	i2SetTimer0@_tmr,c
  4152  001C86  6802               	setf	i2SetTimer0@_tmr+1,c
  4153  001C88  D000               	goto	i2l2478
  4154  001C8A                     i2l2478:
  4155                           
  4156                           ;My_Timer.c: 82: _tmr=0xffff-_tmr;
  4157  001C8A  C001  F003         	movff	i2SetTimer0@_tmr,??i2_SetTimer0
  4158  001C8E  C002  F004         	movff	i2SetTimer0@_tmr+1,??i2_SetTimer0+1
  4159  001C92  1E03               	comf	??i2_SetTimer0,f,c
  4160  001C94  1E04               	comf	??i2_SetTimer0+1,f,c
  4161  001C96  4A03               	infsnz	??i2_SetTimer0,f,c
  4162  001C98  2A04               	incf	??i2_SetTimer0+1,f,c
  4163  001C9A  0EFF               	movlw	255
  4164  001C9C  2403               	addwf	??i2_SetTimer0,w,c
  4165  001C9E  6E01               	movwf	i2SetTimer0@_tmr,c
  4166  001CA0  0EFF               	movlw	255
  4167  001CA2  2004               	addwfc	??i2_SetTimer0+1,w,c
  4168  001CA4  6E02               	movwf	i2SetTimer0@_tmr+1,c
  4169                           
  4170                           ;My_Timer.c: 83: TMR0H = _tmr/256;
  4171  001CA6  5002               	movf	i2SetTimer0@_tmr+1,w,c
  4172  001CA8  6ED7               	movwf	4055,c	;volatile
  4173                           
  4174                           ;My_Timer.c: 84: TMR0L = _tmr%256;
  4175  001CAA  C001  FFD6         	movff	i2SetTimer0@_tmr,4054	;volatile
  4176                           
  4177                           ;My_Timer.c: 85: TMR0IF = 0;
  4178  001CAE  94F2               	bcf	intcon,2,c	;volatile
  4179  001CB0  0012               	return		;funcret
  4180  001CB2                     __end_ofi2_SetTimer0:
  4181                           	opt stack 0
  4182                           pclatu	equ	0xFFB
  4183                           pclath	equ	0xFFA
  4184                           tblptru	equ	0xFF8
  4185                           tblptrh	equ	0xFF7
  4186                           tblptrl	equ	0xFF6
  4187                           tablat	equ	0xFF5
  4188                           prodh	equ	0xFF4
  4189                           prodl	equ	0xFF3
  4190                           intcon	equ	0xFF2
  4191                           postinc0	equ	0xFEE
  4192                           fsr0h	equ	0xFEA
  4193                           fsr0l	equ	0xFE9
  4194                           wreg	equ	0xFE8
  4195                           fsr1h	equ	0xFE2
  4196                           fsr1l	equ	0xFE1
  4197                           indf2	equ	0xFDF
  4198                           fsr2h	equ	0xFDA
  4199                           fsr2l	equ	0xFD9
  4200                           status	equ	0xFD8
  4201                           
  4202 ;; *************** function ___llmod *****************
  4203 ;; Defined at:
  4204 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  4205 ;; Parameters:    Size  Location     Type
  4206 ;;  dividend        4    0[COMRAM] unsigned long 
  4207 ;;  divisor         4    4[COMRAM] unsigned long 
  4208 ;; Auto vars:     Size  Location     Type
  4209 ;;  counter         1    8[COMRAM] unsigned char 
  4210 ;; Return value:  Size  Location     Type
  4211 ;;                  4    0[COMRAM] unsigned long 
  4212 ;; Registers used:
  4213 ;;		wreg, status,2, status,0
  4214 ;; Tracked objects:
  4215 ;;		On entry : 0/0
  4216 ;;		On exit  : 0/0
  4217 ;;		Unchanged: 0/0
  4218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4219 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4220 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4222 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4223 ;;Total ram usage:        9 bytes
  4224 ;; Hardware stack levels used:    1
  4225 ;; This function calls:
  4226 ;;		Nothing
  4227 ;; This function is called by:
  4228 ;;		_Sys_Cyc
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           
  4232                           	psect	text33
  4233  001860                     __ptext33:
  4234                           	opt stack 0
  4235  001860                     ___llmod:
  4236                           	opt stack 24
  4237                           
  4238                           ;incstack = 0
  4239  001860  5005               	movf	___llmod@divisor,w,c
  4240  001862  1006               	iorwf	___llmod@divisor+1,w,c
  4241  001864  1007               	iorwf	___llmod@divisor+2,w,c
  4242  001866  1008               	iorwf	___llmod@divisor+3,w,c
  4243  001868  B4D8               	btfsc	status,2,c
  4244  00186A  D029               	goto	i2l940
  4245  00186C  0E01               	movlw	1
  4246  00186E  6E09               	movwf	___llmod@counter,c
  4247  001870  D007               	goto	i2l2464
  4248  001872                     i2l2462:
  4249  001872  90D8               	bcf	status,0,c
  4250  001874  3605               	rlcf	___llmod@divisor,f,c
  4251  001876  3606               	rlcf	___llmod@divisor+1,f,c
  4252  001878  3607               	rlcf	___llmod@divisor+2,f,c
  4253  00187A  3608               	rlcf	___llmod@divisor+3,f,c
  4254  00187C  2A09               	incf	___llmod@counter,f,c
  4255  00187E  D000               	goto	i2l2464
  4256  001880                     i2l2464:
  4257  001880  BE08               	btfsc	___llmod@divisor+3,7,c
  4258  001882  D002               	goto	i2l2466
  4259  001884  D7F6               	goto	i2l2462
  4260  001886  D000               	goto	i2l2466
  4261  001888                     i2l2466:
  4262  001888  5005               	movf	___llmod@divisor,w,c
  4263  00188A  5C01               	subwf	___llmod@dividend,w,c
  4264  00188C  5006               	movf	___llmod@divisor+1,w,c
  4265  00188E  5802               	subwfb	___llmod@dividend+1,w,c
  4266  001890  5007               	movf	___llmod@divisor+2,w,c
  4267  001892  5803               	subwfb	___llmod@dividend+2,w,c
  4268  001894  5008               	movf	___llmod@divisor+3,w,c
  4269  001896  5804               	subwfb	___llmod@dividend+3,w,c
  4270  001898  A0D8               	btfss	status,0,c
  4271  00189A  D009               	goto	i2l2470
  4272  00189C  5005               	movf	___llmod@divisor,w,c
  4273  00189E  5E01               	subwf	___llmod@dividend,f,c
  4274  0018A0  5006               	movf	___llmod@divisor+1,w,c
  4275  0018A2  5A02               	subwfb	___llmod@dividend+1,f,c
  4276  0018A4  5007               	movf	___llmod@divisor+2,w,c
  4277  0018A6  5A03               	subwfb	___llmod@dividend+2,f,c
  4278  0018A8  5008               	movf	___llmod@divisor+3,w,c
  4279  0018AA  5A04               	subwfb	___llmod@dividend+3,f,c
  4280  0018AC  D000               	goto	i2l2470
  4281  0018AE                     i2l2470:
  4282  0018AE  90D8               	bcf	status,0,c
  4283  0018B0  3208               	rrcf	___llmod@divisor+3,f,c
  4284  0018B2  3207               	rrcf	___llmod@divisor+2,f,c
  4285  0018B4  3206               	rrcf	___llmod@divisor+1,f,c
  4286  0018B6  3205               	rrcf	___llmod@divisor,f,c
  4287  0018B8  2E09               	decfsz	___llmod@counter,f,c
  4288  0018BA  D7E6               	goto	i2l2466
  4289  0018BC  D000               	goto	i2l940
  4290  0018BE                     i2l940:
  4291  0018BE  C001  F001         	movff	___llmod@dividend,?___llmod
  4292  0018C2  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  4293  0018C6  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  4294  0018CA  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  4295  0018CE  0012               	return		;funcret
  4296  0018D0                     __end_of___llmod:
  4297                           	opt stack 0
  4298                           pclatu	equ	0xFFB
  4299                           pclath	equ	0xFFA
  4300                           tblptru	equ	0xFF8
  4301                           tblptrh	equ	0xFF7
  4302                           tblptrl	equ	0xFF6
  4303                           tablat	equ	0xFF5
  4304                           prodh	equ	0xFF4
  4305                           prodl	equ	0xFF3
  4306                           intcon	equ	0xFF2
  4307                           postinc0	equ	0xFEE
  4308                           fsr0h	equ	0xFEA
  4309                           fsr0l	equ	0xFE9
  4310                           wreg	equ	0xFE8
  4311                           fsr1h	equ	0xFE2
  4312                           fsr1l	equ	0xFE1
  4313                           indf2	equ	0xFDF
  4314                           fsr2h	equ	0xFDA
  4315                           fsr2l	equ	0xFD9
  4316                           status	equ	0xFD8
  4317                           
  4318 ;; *************** function _Manage_Message *****************
  4319 ;; Defined at:
  4320 ;;		line 49 in file "_01_USER/Run.c"
  4321 ;; Parameters:    Size  Location     Type
  4322 ;;		None
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;		None
  4325 ;; Return value:  Size  Location     Type
  4326 ;;		None               void
  4327 ;; Registers used:
  4328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4329 ;; Tracked objects:
  4330 ;;		On entry : 0/0
  4331 ;;		On exit  : 0/0
  4332 ;;		Unchanged: 0/0
  4333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4338 ;;Total ram usage:        0 bytes
  4339 ;; Hardware stack levels used:    1
  4340 ;; Hardware stack levels required when called:    1
  4341 ;; This function calls:
  4342 ;;		_Key_FSM_Read
  4343 ;;		_Key_FSM_Reset
  4344 ;;		___lbmod
  4345 ;; This function is called by:
  4346 ;;		_Sys_Cyc
  4347 ;; This function uses a non-reentrant model
  4348 ;;
  4349                           
  4350                           	psect	text34
  4351  00150E                     __ptext34:
  4352                           	opt stack 0
  4353  00150E                     _Manage_Message:
  4354                           	opt stack 23
  4355                           
  4356                           ;Run.c: 51: Key_FSM_Read();
  4357                           
  4358                           ;incstack = 0
  4359  00150E  EC09  F008         	call	_Key_FSM_Read	;wreg free
  4360                           
  4361                           ;Run.c: 53: if (Local_Key_User.key_state[5-1] == KEY_short) RS485_Num -- ;
  4362  001512  0100               	movlb	0	; () banked
  4363  001514  058D               	decf	(_Local_Key_User+17)& (0+255),w,b	;volatile
  4364  001516  A4D8               	btfss	status,2,c
  4365  001518  D002               	goto	i2l2412
  4366                           
  4367                           ; BSR set to: 0
  4368  00151A  0644               	decf	_RS485_Num,f,c
  4369  00151C  D000               	goto	i2l2412
  4370  00151E                     i2l2412:
  4371                           
  4372                           ; BSR set to: 0
  4373                           ;Run.c: 54: if (Local_Key_User.key_state[5-1] == KEY_hold) RS485_Num -- ;
  4374  00151E  0E03               	movlw	3
  4375  001520  0100               	movlb	0	; () banked
  4376  001522  198D               	xorwf	(_Local_Key_User+17)& (0+255),w,b	;volatile
  4377  001524  A4D8               	btfss	status,2,c
  4378  001526  D002               	goto	i2l2416
  4379                           
  4380                           ; BSR set to: 0
  4381  001528  0644               	decf	_RS485_Num,f,c
  4382  00152A  D000               	goto	i2l2416
  4383  00152C                     i2l2416:
  4384                           
  4385                           ; BSR set to: 0
  4386                           ;Run.c: 57: if (Local_Key_User.key_state[3-1] == KEY_short) RS485_Num ++ ;
  4387  00152C  0100               	movlb	0	; () banked
  4388  00152E  058B               	decf	(_Local_Key_User+15)& (0+255),w,b	;volatile
  4389  001530  A4D8               	btfss	status,2,c
  4390  001532  D002               	goto	i2l2420
  4391                           
  4392                           ; BSR set to: 0
  4393  001534  2A44               	incf	_RS485_Num,f,c
  4394  001536  D000               	goto	i2l2420
  4395  001538                     i2l2420:
  4396                           
  4397                           ; BSR set to: 0
  4398                           ;Run.c: 58: if (Local_Key_User.key_state[3-1] == KEY_hold) RS485_Num ++ ;
  4399  001538  0E03               	movlw	3
  4400  00153A  0100               	movlb	0	; () banked
  4401  00153C  198B               	xorwf	(_Local_Key_User+15)& (0+255),w,b	;volatile
  4402  00153E  A4D8               	btfss	status,2,c
  4403  001540  D002               	goto	i2l2424
  4404                           
  4405                           ; BSR set to: 0
  4406  001542  2A44               	incf	_RS485_Num,f,c
  4407  001544  D000               	goto	i2l2424
  4408  001546                     i2l2424:
  4409                           
  4410                           ; BSR set to: 0
  4411                           ;Run.c: 60: if( RS485_Num > 250 ) RS485_Num = 10 - 1;
  4412  001546  0EFA               	movlw	250
  4413  001548  6444               	cpfsgt	_RS485_Num,c
  4414  00154A  D002               	goto	i2l2428
  4415                           
  4416                           ; BSR set to: 0
  4417  00154C  0E09               	movlw	9
  4418  00154E  D005               	goto	L2
  4419  001550                     i2l2428:
  4420                           
  4421                           ; BSR set to: 0
  4422                           ;Run.c: 61: else RS485_Num %= 10;
  4423  001550  0E0A               	movlw	10
  4424  001552  6E01               	movwf	___lbmod@divisor,c
  4425  001554  5044               	movf	_RS485_Num,w,c
  4426  001556  EC10  F00E         	call	___lbmod
  4427  00155A                     L2:
  4428  00155A  6E44               	movwf	_RS485_Num,c
  4429  00155C  D000               	goto	i2l2430
  4430  00155E                     i2l2430:
  4431                           
  4432                           ;Run.c: 64: if (Local_Key_User.key_state[4-1] == KEY_short) RS485_SendBuff[RS485_Num] ++
      +                           ;
  4433  00155E  0100               	movlb	0	; () banked
  4434  001560  058C               	decf	(_Local_Key_User+16)& (0+255),w,b	;volatile
  4435  001562  A4D8               	btfss	status,2,c
  4436  001564  D00A               	goto	i2l2434
  4437                           
  4438                           ; BSR set to: 0
  4439  001566  5044               	movf	_RS485_Num,w,c
  4440  001568  0D01               	mullw	1
  4441  00156A  0E98               	movlw	low _RS485_SendBuff
  4442  00156C  24F3               	addwf	prodl,w,c
  4443  00156E  6ED9               	movwf	fsr2l,c
  4444  001570  0E00               	movlw	high _RS485_SendBuff
  4445  001572  20F4               	addwfc	prodh,w,c
  4446  001574  6EDA               	movwf	fsr2h,c
  4447  001576  2ADF               	incf	indf2,f,c
  4448  001578  D000               	goto	i2l2434
  4449  00157A                     i2l2434:
  4450                           
  4451                           ; BSR set to: 0
  4452                           ;Run.c: 65: if (Local_Key_User.key_state[4-1] == KEY_hold) RS485_SendBuff[RS485_Num] ++ 
      +                          ;
  4453  00157A  0E03               	movlw	3
  4454  00157C  0100               	movlb	0	; () banked
  4455  00157E  198C               	xorwf	(_Local_Key_User+16)& (0+255),w,b	;volatile
  4456  001580  A4D8               	btfss	status,2,c
  4457  001582  D00A               	goto	i2l2438
  4458                           
  4459                           ; BSR set to: 0
  4460  001584  5044               	movf	_RS485_Num,w,c
  4461  001586  0D01               	mullw	1
  4462  001588  0E98               	movlw	low _RS485_SendBuff
  4463  00158A  24F3               	addwf	prodl,w,c
  4464  00158C  6ED9               	movwf	fsr2l,c
  4465  00158E  0E00               	movlw	high _RS485_SendBuff
  4466  001590  20F4               	addwfc	prodh,w,c
  4467  001592  6EDA               	movwf	fsr2h,c
  4468  001594  2ADF               	incf	indf2,f,c
  4469  001596  D000               	goto	i2l2438
  4470  001598                     i2l2438:
  4471                           
  4472                           ; BSR set to: 0
  4473                           ;Run.c: 68: if (Local_Key_User.key_state[2-1] == KEY_short) RS485_SendBuff[RS485_Num] --
      +                           ;
  4474  001598  0100               	movlb	0	; () banked
  4475  00159A  058A               	decf	(_Local_Key_User+14)& (0+255),w,b	;volatile
  4476  00159C  A4D8               	btfss	status,2,c
  4477  00159E  D00A               	goto	i2l2442
  4478                           
  4479                           ; BSR set to: 0
  4480  0015A0  5044               	movf	_RS485_Num,w,c
  4481  0015A2  0D01               	mullw	1
  4482  0015A4  0E98               	movlw	low _RS485_SendBuff
  4483  0015A6  24F3               	addwf	prodl,w,c
  4484  0015A8  6ED9               	movwf	fsr2l,c
  4485  0015AA  0E00               	movlw	high _RS485_SendBuff
  4486  0015AC  20F4               	addwfc	prodh,w,c
  4487  0015AE  6EDA               	movwf	fsr2h,c
  4488  0015B0  06DF               	decf	indf2,f,c
  4489  0015B2  D000               	goto	i2l2442
  4490  0015B4                     i2l2442:
  4491                           
  4492                           ; BSR set to: 0
  4493                           ;Run.c: 69: if (Local_Key_User.key_state[2-1] == KEY_hold) RS485_SendBuff[RS485_Num] -- 
      +                          ;
  4494  0015B4  0E03               	movlw	3
  4495  0015B6  0100               	movlb	0	; () banked
  4496  0015B8  198A               	xorwf	(_Local_Key_User+14)& (0+255),w,b	;volatile
  4497  0015BA  A4D8               	btfss	status,2,c
  4498  0015BC  D00A               	goto	i2l2446
  4499                           
  4500                           ; BSR set to: 0
  4501  0015BE  5044               	movf	_RS485_Num,w,c
  4502  0015C0  0D01               	mullw	1
  4503  0015C2  0E98               	movlw	low _RS485_SendBuff
  4504  0015C4  24F3               	addwf	prodl,w,c
  4505  0015C6  6ED9               	movwf	fsr2l,c
  4506  0015C8  0E00               	movlw	high _RS485_SendBuff
  4507  0015CA  20F4               	addwfc	prodh,w,c
  4508  0015CC  6EDA               	movwf	fsr2h,c
  4509  0015CE  06DF               	decf	indf2,f,c
  4510  0015D0  D000               	goto	i2l2446
  4511  0015D2                     i2l2446:
  4512                           
  4513                           ; BSR set to: 0
  4514                           ;Run.c: 74: if (Local_Key_User.key_state[1-1] == KEY_short) Handle_Switch.Usart_OneDate 
      +                          = 1 ;
  4515  0015D2  0100               	movlb	0	; () banked
  4516  0015D4  0589               	decf	(_Local_Key_User+13)& (0+255),w,b	;volatile
  4517  0015D6  A4D8               	btfss	status,2,c
  4518  0015D8  D003               	goto	i2l2450
  4519                           
  4520                           ; BSR set to: 0
  4521  0015DA  0E01               	movlw	1
  4522  0015DC  6E35               	movwf	_Handle_Switch+2,c
  4523  0015DE  D000               	goto	i2l2450
  4524  0015E0                     i2l2450:
  4525                           
  4526                           ; BSR set to: 0
  4527                           ;Run.c: 77: if ( Local_Key_User.key_group == ((0x01<<1)|(0x01<<3)) && Local_Key_User.key
      +                          _group_state == KEY_short ) Handle_Switch.Show_Send_Receive = ~Handle_Switch.Show_Send_R
      +                          eceive ;
  4528  0015E0  0E0A               	movlw	10
  4529  0015E2  0100               	movlb	0	; () banked
  4530  0015E4  197D               	xorwf	(_Local_Key_User+1)& (0+255),w,b	;volatile
  4531  0015E6  A4D8               	btfss	status,2,c
  4532  0015E8  D008               	goto	i2l2456
  4533                           
  4534                           ; BSR set to: 0
  4535  0015EA  0100               	movlb	0	; () banked
  4536  0015EC  057E               	decf	(_Local_Key_User+2)& (0+255),w,b	;volatile
  4537  0015EE  A4D8               	btfss	status,2,c
  4538  0015F0  D004               	goto	i2l2456
  4539                           
  4540                           ; BSR set to: 0
  4541  0015F2  5036               	movf	_Handle_Switch+3,w,c
  4542  0015F4  0AFF               	xorlw	255
  4543  0015F6  6E36               	movwf	_Handle_Switch+3,c
  4544  0015F8  D000               	goto	i2l2456
  4545  0015FA                     i2l2456:
  4546                           
  4547                           ; BSR set to: 0
  4548                           ;Run.c: 79: Key_FSM_Reset();
  4549  0015FA  EC76  F00D         	call	_Key_FSM_Reset	;wreg free
  4550  0015FE  0012               	return		;funcret
  4551  001600                     __end_of_Manage_Message:
  4552                           	opt stack 0
  4553                           pclatu	equ	0xFFB
  4554                           pclath	equ	0xFFA
  4555                           tblptru	equ	0xFF8
  4556                           tblptrh	equ	0xFF7
  4557                           tblptrl	equ	0xFF6
  4558                           tablat	equ	0xFF5
  4559                           prodh	equ	0xFF4
  4560                           prodl	equ	0xFF3
  4561                           intcon	equ	0xFF2
  4562                           postinc0	equ	0xFEE
  4563                           fsr0h	equ	0xFEA
  4564                           fsr0l	equ	0xFE9
  4565                           wreg	equ	0xFE8
  4566                           fsr1h	equ	0xFE2
  4567                           fsr1l	equ	0xFE1
  4568                           indf2	equ	0xFDF
  4569                           fsr2h	equ	0xFDA
  4570                           fsr2l	equ	0xFD9
  4571                           status	equ	0xFD8
  4572                           
  4573 ;; *************** function ___lbmod *****************
  4574 ;; Defined at:
  4575 ;;		line 4 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbmod.c"
  4576 ;; Parameters:    Size  Location     Type
  4577 ;;  dividend        1    wreg     unsigned char 
  4578 ;;  divisor         1    0[COMRAM] unsigned char 
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;  dividend        1    1[COMRAM] unsigned char 
  4581 ;;  rem             1    3[COMRAM] unsigned char 
  4582 ;;  counter         1    2[COMRAM] unsigned char 
  4583 ;; Return value:  Size  Location     Type
  4584 ;;                  1    wreg      unsigned char 
  4585 ;; Registers used:
  4586 ;;		wreg, status,2, status,0
  4587 ;; Tracked objects:
  4588 ;;		On entry : 0/0
  4589 ;;		On exit  : 0/0
  4590 ;;		Unchanged: 0/0
  4591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4592 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4593 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4595 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4596 ;;Total ram usage:        4 bytes
  4597 ;; Hardware stack levels used:    1
  4598 ;; This function calls:
  4599 ;;		Nothing
  4600 ;; This function is called by:
  4601 ;;		_Manage_Message
  4602 ;; This function uses a non-reentrant model
  4603 ;;
  4604                           
  4605                           	psect	text35
  4606  001C20                     __ptext35:
  4607                           	opt stack 0
  4608  001C20                     ___lbmod:
  4609                           	opt stack 23
  4610                           
  4611                           ;incstack = 0
  4612                           ;___lbmod@dividend stored from wreg
  4613  001C20  6E02               	movwf	___lbmod@dividend,c
  4614  001C22  0E08               	movlw	8
  4615  001C24  6E03               	movwf	___lbmod@counter,c
  4616  001C26  0E00               	movlw	0
  4617  001C28  6E04               	movwf	___lbmod@rem,c
  4618  001C2A  D000               	goto	i2l2294
  4619  001C2C                     i2l2294:
  4620  001C2C  90D8               	bcf	status,0,c
  4621  001C2E  3402               	rlcf	___lbmod@dividend,w,c
  4622  001C30  3404               	rlcf	___lbmod@rem,w,c
  4623  001C32  6E04               	movwf	___lbmod@rem,c
  4624  001C34  90D8               	bcf	status,0,c
  4625  001C36  3602               	rlcf	___lbmod@dividend,f,c
  4626  001C38  5001               	movf	___lbmod@divisor,w,c
  4627  001C3A  5C04               	subwf	___lbmod@rem,w,c
  4628  001C3C  A0D8               	btfss	status,0,c
  4629  001C3E  D003               	goto	i2l2302
  4630  001C40  5001               	movf	___lbmod@divisor,w,c
  4631  001C42  5E04               	subwf	___lbmod@rem,f,c
  4632  001C44  D000               	goto	i2l2302
  4633  001C46                     i2l2302:
  4634  001C46  2E03               	decfsz	___lbmod@counter,f,c
  4635  001C48  D7F1               	goto	i2l2294
  4636  001C4A  D000               	goto	i2l2304
  4637  001C4C                     i2l2304:
  4638  001C4C  5004               	movf	___lbmod@rem,w,c
  4639  001C4E  0012               	return	
  4640  001C50  0012               	return		;funcret
  4641  001C52                     __end_of___lbmod:
  4642                           	opt stack 0
  4643                           pclatu	equ	0xFFB
  4644                           pclath	equ	0xFFA
  4645                           tblptru	equ	0xFF8
  4646                           tblptrh	equ	0xFF7
  4647                           tblptrl	equ	0xFF6
  4648                           tablat	equ	0xFF5
  4649                           prodh	equ	0xFF4
  4650                           prodl	equ	0xFF3
  4651                           intcon	equ	0xFF2
  4652                           postinc0	equ	0xFEE
  4653                           fsr0h	equ	0xFEA
  4654                           fsr0l	equ	0xFE9
  4655                           wreg	equ	0xFE8
  4656                           fsr1h	equ	0xFE2
  4657                           fsr1l	equ	0xFE1
  4658                           indf2	equ	0xFDF
  4659                           fsr2h	equ	0xFDA
  4660                           fsr2l	equ	0xFD9
  4661                           status	equ	0xFD8
  4662                           
  4663 ;; *************** function _Key_FSM_Reset *****************
  4664 ;; Defined at:
  4665 ;;		line 148 in file "_01_USER/Key.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;		None
  4668 ;; Auto vars:     Size  Location     Type
  4669 ;;  t               1    0[COMRAM] unsigned char 
  4670 ;; Return value:  Size  Location     Type
  4671 ;;		None               void
  4672 ;; Registers used:
  4673 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4674 ;; Tracked objects:
  4675 ;;		On entry : 0/0
  4676 ;;		On exit  : 0/0
  4677 ;;		Unchanged: 0/0
  4678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4680 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4682 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4683 ;;Total ram usage:        1 bytes
  4684 ;; Hardware stack levels used:    1
  4685 ;; This function calls:
  4686 ;;		Nothing
  4687 ;; This function is called by:
  4688 ;;		_Manage_Message
  4689 ;; This function uses a non-reentrant model
  4690 ;;
  4691                           
  4692                           	psect	text36
  4693  001AEC                     __ptext36:
  4694                           	opt stack 0
  4695  001AEC                     _Key_FSM_Reset:
  4696                           	opt stack 23
  4697                           
  4698                           ;Key.c: 150: unsigned char t;
  4699                           ;Key.c: 151: Local_Key_User.key_BUS = 0x00;
  4700                           
  4701                           ;incstack = 0
  4702  001AEC  0E00               	movlw	0
  4703  001AEE  0100               	movlb	0	; () banked
  4704  001AF0  6F7C               	movwf	_Local_Key_User& (0+255),b	;volatile
  4705                           
  4706                           ;Key.c: 152: Local_Key_User.key_group = KEY_default;
  4707  001AF2  0E00               	movlw	0
  4708  001AF4  0100               	movlb	0	; () banked
  4709  001AF6  6F7D               	movwf	(_Local_Key_User+1)& (0+255),b	;volatile
  4710                           
  4711                           ;Key.c: 153: t=4;
  4712  001AF8  0E04               	movlw	4
  4713  001AFA  6E01               	movwf	Key_FSM_Reset@t,c
  4714                           
  4715                           ;Key.c: 154: while(t--) Local_Key_User.key_count[t] = 0,
  4716  001AFC  D017               	goto	i2l2190
  4717  001AFE                     i2l2188:
  4718                           
  4719                           ;Key.c: 155: Local_Key_User.key_state[t] = KEY_default;
  4720  001AFE  5001               	movf	Key_FSM_Reset@t,w,c
  4721  001B00  0D02               	mullw	2
  4722  001B02  0E7F               	movlw	low (_Local_Key_User+3)
  4723  001B04  24F3               	addwf	prodl,w,c
  4724  001B06  6ED9               	movwf	fsr2l,c
  4725  001B08  0E00               	movlw	high (_Local_Key_User+3)
  4726  001B0A  20F4               	addwfc	prodh,w,c
  4727  001B0C  6EDA               	movwf	fsr2h,c
  4728  001B0E  0E00               	movlw	0
  4729  001B10  6EDE               	movwf	postinc2,c
  4730  001B12  0E00               	movlw	0
  4731  001B14  6EDD               	movwf	postdec2,c
  4732  001B16  5001               	movf	Key_FSM_Reset@t,w,c
  4733  001B18  0D01               	mullw	1
  4734  001B1A  0E89               	movlw	low (_Local_Key_User+13)
  4735  001B1C  24F3               	addwf	prodl,w,c
  4736  001B1E  6ED9               	movwf	fsr2l,c
  4737  001B20  0E00               	movlw	high (_Local_Key_User+13)
  4738  001B22  20F4               	addwfc	prodh,w,c
  4739  001B24  6EDA               	movwf	fsr2h,c
  4740  001B26  0E00               	movlw	0
  4741  001B28  6EDF               	movwf	indf2,c
  4742  001B2A  D000               	goto	i2l2190
  4743  001B2C                     i2l2190:
  4744  001B2C  0601               	decf	Key_FSM_Reset@t,f,c
  4745  001B2E  2801               	incf	Key_FSM_Reset@t,w,c
  4746  001B30  A4D8               	btfss	status,2,c
  4747  001B32  D7E5               	goto	i2l2188
  4748  001B34  0012               	return		;funcret
  4749  001B36                     __end_of_Key_FSM_Reset:
  4750                           	opt stack 0
  4751                           pclatu	equ	0xFFB
  4752                           pclath	equ	0xFFA
  4753                           tblptru	equ	0xFF8
  4754                           tblptrh	equ	0xFF7
  4755                           tblptrl	equ	0xFF6
  4756                           tablat	equ	0xFF5
  4757                           prodh	equ	0xFF4
  4758                           prodl	equ	0xFF3
  4759                           intcon	equ	0xFF2
  4760                           postinc0	equ	0xFEE
  4761                           fsr0h	equ	0xFEA
  4762                           fsr0l	equ	0xFE9
  4763                           wreg	equ	0xFE8
  4764                           fsr1h	equ	0xFE2
  4765                           fsr1l	equ	0xFE1
  4766                           indf2	equ	0xFDF
  4767                           postinc2	equ	0xFDE
  4768                           postdec2	equ	0xFDD
  4769                           fsr2h	equ	0xFDA
  4770                           fsr2l	equ	0xFD9
  4771                           status	equ	0xFD8
  4772                           
  4773 ;; *************** function _Key_FSM_Read *****************
  4774 ;; Defined at:
  4775 ;;		line 98 in file "_01_USER/Key.c"
  4776 ;; Parameters:    Size  Location     Type
  4777 ;;		None
  4778 ;; Auto vars:     Size  Location     Type
  4779 ;;  key_num         1    5[COMRAM] unsigned char 
  4780 ;;  key_num_mate    1    4[COMRAM] unsigned char 
  4781 ;; Return value:  Size  Location     Type
  4782 ;;		None               void
  4783 ;; Registers used:
  4784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4785 ;; Tracked objects:
  4786 ;;		On entry : 0/0
  4787 ;;		On exit  : 0/0
  4788 ;;		Unchanged: 0/0
  4789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4791 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4792 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4793 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4794 ;;Total ram usage:        6 bytes
  4795 ;; Hardware stack levels used:    1
  4796 ;; This function calls:
  4797 ;;		Nothing
  4798 ;; This function is called by:
  4799 ;;		_Manage_Message
  4800 ;; This function uses a non-reentrant model
  4801 ;;
  4802                           
  4803                           	psect	text37
  4804  001012                     __ptext37:
  4805                           	opt stack 0
  4806  001012                     _Key_FSM_Read:
  4807                           	opt stack 23
  4808                           
  4809                           ;Key.c: 100: unsigned char key_num = 5,key_num_mate;
  4810                           
  4811                           ;incstack = 0
  4812  001012  0E05               	movlw	5
  4813  001014  6E06               	movwf	Key_FSM_Read@key_num,c
  4814                           
  4815                           ;Key.c: 103: while(key_num--)
  4816  001016  D072               	goto	i2l2158
  4817  001018                     i2l2140:
  4818                           
  4819                           ;Key.c: 104: {
  4820                           ;Key.c: 106: if( Local_Key_FSM.key_BUS == 0x00 )
  4821  001018  0100               	movlb	0	; () banked
  4822  00101A  516A               	movf	_Local_Key_FSM& (0+255),w,b	;volatile
  4823  00101C  A4D8               	btfss	status,2,c
  4824  00101E  D04A               	goto	i2l2152
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;Key.c: 107: {
  4828                           ;Key.c: 108: if( Local_Key_FSM.key_count[key_num] > 5 )
  4829  001020  5006               	movf	Key_FSM_Read@key_num,w,c
  4830  001022  0D02               	mullw	2
  4831  001024  0E6D               	movlw	low (_Local_Key_FSM+3)
  4832  001026  24F3               	addwf	prodl,w,c
  4833  001028  6ED9               	movwf	fsr2l,c
  4834  00102A  0E00               	movlw	high (_Local_Key_FSM+3)
  4835  00102C  20F4               	addwfc	prodh,w,c
  4836  00102E  6EDA               	movwf	fsr2h,c
  4837  001030  0E01               	movlw	1
  4838  001032  50DB               	movf	plusw2,w,c
  4839  001034  E104               	bnz	i2u165_40
  4840  001036  0E06               	movlw	6
  4841  001038  5CDE               	subwf	postinc2,w,c
  4842  00103A  A0D8               	btfss	status,0,c
  4843  00103C  D024               	goto	i2l2150
  4844  00103E                     i2u165_40:
  4845                           
  4846                           ; BSR set to: 0
  4847                           ;Key.c: 109: {
  4848                           ;Key.c: 110: if( Local_Key_FSM.key_count[key_num] > 60 )
  4849  00103E  5006               	movf	Key_FSM_Read@key_num,w,c
  4850  001040  0D02               	mullw	2
  4851  001042  0E6D               	movlw	low (_Local_Key_FSM+3)
  4852  001044  24F3               	addwf	prodl,w,c
  4853  001046  6ED9               	movwf	fsr2l,c
  4854  001048  0E00               	movlw	high (_Local_Key_FSM+3)
  4855  00104A  20F4               	addwfc	prodh,w,c
  4856  00104C  6EDA               	movwf	fsr2h,c
  4857  00104E  0E01               	movlw	1
  4858  001050  50DB               	movf	plusw2,w,c
  4859  001052  E104               	bnz	i2u166_40
  4860  001054  0E3D               	movlw	61
  4861  001056  5CDE               	subwf	postinc2,w,c
  4862  001058  A0D8               	btfss	status,0,c
  4863  00105A  D00A               	goto	i2l2148
  4864  00105C                     i2u166_40:
  4865                           
  4866                           ; BSR set to: 0
  4867                           ;Key.c: 111: Local_Key_User.key_state[key_num] = KEY_long;
  4868  00105C  5006               	movf	Key_FSM_Read@key_num,w,c
  4869  00105E  0D01               	mullw	1
  4870  001060  0E89               	movlw	low (_Local_Key_User+13)
  4871  001062  24F3               	addwf	prodl,w,c
  4872  001064  6ED9               	movwf	fsr2l,c
  4873  001066  0E00               	movlw	high (_Local_Key_User+13)
  4874  001068  20F4               	addwfc	prodh,w,c
  4875  00106A  6EDA               	movwf	fsr2h,c
  4876  00106C  0E05               	movlw	5
  4877  00106E  D014               	goto	L3
  4878  001070                     i2l2148:
  4879                           
  4880                           ; BSR set to: 0
  4881                           ;Key.c: 112: else Local_Key_User.key_state[key_num] = KEY_short;
  4882  001070  5006               	movf	Key_FSM_Read@key_num,w,c
  4883  001072  0D01               	mullw	1
  4884  001074  0E89               	movlw	low (_Local_Key_User+13)
  4885  001076  24F3               	addwf	prodl,w,c
  4886  001078  6ED9               	movwf	fsr2l,c
  4887  00107A  0E00               	movlw	high (_Local_Key_User+13)
  4888  00107C  20F4               	addwfc	prodh,w,c
  4889  00107E  6EDA               	movwf	fsr2h,c
  4890  001080  0E01               	movlw	1
  4891  001082  6EDF               	movwf	indf2,c
  4892                           
  4893                           ; BSR set to: 0
  4894                           ;Key.c: 113: }
  4895  001084  D00A               	goto	i2l111
  4896  001086                     i2l2150:
  4897                           
  4898                           ; BSR set to: 0
  4899                           ;Key.c: 114: else Local_Key_User.key_state[key_num] = KEY_default;
  4900  001086  5006               	movf	Key_FSM_Read@key_num,w,c
  4901  001088  0D01               	mullw	1
  4902  00108A  0E89               	movlw	low (_Local_Key_User+13)
  4903  00108C  24F3               	addwf	prodl,w,c
  4904  00108E  6ED9               	movwf	fsr2l,c
  4905  001090  0E00               	movlw	high (_Local_Key_User+13)
  4906  001092  20F4               	addwfc	prodh,w,c
  4907  001094  6EDA               	movwf	fsr2h,c
  4908  001096  0E00               	movlw	0
  4909  001098                     L3:
  4910  001098  6EDF               	movwf	indf2,c
  4911  00109A                     i2l111:
  4912                           
  4913                           ; BSR set to: 0
  4914                           ;Key.c: 115: Local_Key_FSM.key_count[key_num] = 0;
  4915  00109A  5006               	movf	Key_FSM_Read@key_num,w,c
  4916  00109C  0D02               	mullw	2
  4917  00109E  0E6D               	movlw	low (_Local_Key_FSM+3)
  4918  0010A0  24F3               	addwf	prodl,w,c
  4919  0010A2  6ED9               	movwf	fsr2l,c
  4920  0010A4  0E00               	movlw	high (_Local_Key_FSM+3)
  4921  0010A6  20F4               	addwfc	prodh,w,c
  4922  0010A8  6EDA               	movwf	fsr2h,c
  4923  0010AA  0E00               	movlw	0
  4924  0010AC  6EDE               	movwf	postinc2,c
  4925  0010AE  0E00               	movlw	0
  4926  0010B0  6EDD               	movwf	postdec2,c
  4927                           
  4928                           ;Key.c: 116: }
  4929  0010B2  D024               	goto	i2l2158
  4930  0010B4                     i2l2152:
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;Key.c: 118: else if( Local_Key_FSM.key_count[key_num] > 60 )
  4934  0010B4  5006               	movf	Key_FSM_Read@key_num,w,c
  4935  0010B6  0D02               	mullw	2
  4936  0010B8  0E6D               	movlw	low (_Local_Key_FSM+3)
  4937  0010BA  24F3               	addwf	prodl,w,c
  4938  0010BC  6ED9               	movwf	fsr2l,c
  4939  0010BE  0E00               	movlw	high (_Local_Key_FSM+3)
  4940  0010C0  20F4               	addwfc	prodh,w,c
  4941  0010C2  6EDA               	movwf	fsr2h,c
  4942  0010C4  0E01               	movlw	1
  4943  0010C6  50DB               	movf	plusw2,w,c
  4944  0010C8  E104               	bnz	i2u167_40
  4945  0010CA  0E3D               	movlw	61
  4946  0010CC  5CDE               	subwf	postinc2,w,c
  4947  0010CE  A0D8               	btfss	status,0,c
  4948  0010D0  D00A               	goto	i2l2156
  4949  0010D2                     i2u167_40:
  4950                           
  4951                           ; BSR set to: 0
  4952                           ;Key.c: 119: Local_Key_User.key_state[key_num] = KEY_hold;
  4953  0010D2  5006               	movf	Key_FSM_Read@key_num,w,c
  4954  0010D4  0D01               	mullw	1
  4955  0010D6  0E89               	movlw	low (_Local_Key_User+13)
  4956  0010D8  24F3               	addwf	prodl,w,c
  4957  0010DA  6ED9               	movwf	fsr2l,c
  4958  0010DC  0E00               	movlw	high (_Local_Key_User+13)
  4959  0010DE  20F4               	addwfc	prodh,w,c
  4960  0010E0  6EDA               	movwf	fsr2h,c
  4961  0010E2  0E03               	movlw	3
  4962  0010E4  D009               	goto	L4
  4963  0010E6                     i2l2156:
  4964                           
  4965                           ; BSR set to: 0
  4966                           ;Key.c: 122: else Local_Key_User.key_state[key_num] = KEY_busy;
  4967  0010E6  5006               	movf	Key_FSM_Read@key_num,w,c
  4968  0010E8  0D01               	mullw	1
  4969  0010EA  0E89               	movlw	low (_Local_Key_User+13)
  4970  0010EC  24F3               	addwf	prodl,w,c
  4971  0010EE  6ED9               	movwf	fsr2l,c
  4972  0010F0  0E00               	movlw	high (_Local_Key_User+13)
  4973  0010F2  20F4               	addwfc	prodh,w,c
  4974  0010F4  6EDA               	movwf	fsr2h,c
  4975  0010F6  0E04               	movlw	4
  4976  0010F8                     L4:
  4977  0010F8  6EDF               	movwf	indf2,c
  4978                           
  4979                           ; BSR set to: 0
  4980                           
  4981                           ; BSR set to: 0
  4982  0010FA  D000               	goto	i2l2158
  4983  0010FC                     i2l2158:
  4984  0010FC  0606               	decf	Key_FSM_Read@key_num,f,c
  4985  0010FE  2806               	incf	Key_FSM_Read@key_num,w,c
  4986  001100  A4D8               	btfss	status,2,c
  4987  001102  D78A               	goto	i2l2140
  4988                           
  4989                           ;Key.c: 123: }
  4990                           ;Key.c: 127: for( key_num = 0;key_num < 5 - 1; key_num ++)
  4991  001104  0E00               	movlw	0
  4992  001106  6E06               	movwf	Key_FSM_Read@key_num,c
  4993  001108  0E03               	movlw	3
  4994  00110A  6406               	cpfsgt	Key_FSM_Read@key_num,c
  4995  00110C  D002               	goto	i2l2166
  4996  00110E  0012               	return	
  4997  001110  0012               	return	
  4998  001112                     i2l2166:
  4999                           
  5000                           ;Key.c: 128: for( key_num_mate = key_num+1;key_num_mate < 5 ; key_num_mate ++)
  5001  001112  2806               	incf	Key_FSM_Read@key_num,w,c
  5002  001114  6E05               	movwf	Key_FSM_Read@key_num_mate,c
  5003  001116  0E04               	movlw	4
  5004  001118  6405               	cpfsgt	Key_FSM_Read@key_num_mate,c
  5005  00111A  D001               	goto	i2l2170
  5006  00111C  D045               	goto	i2l2182
  5007  00111E                     i2l2170:
  5008                           
  5009                           ;Key.c: 129: if( Local_Key_User.key_state[key_num] == Local_Key_User.key_state[key_num_m
      +                          ate] )
  5010  00111E  5005               	movf	Key_FSM_Read@key_num_mate,w,c
  5011  001120  0D01               	mullw	1
  5012  001122  0E89               	movlw	low (_Local_Key_User+13)
  5013  001124  24F3               	addwf	prodl,w,c
  5014  001126  6ED9               	movwf	fsr2l,c
  5015  001128  0E00               	movlw	high (_Local_Key_User+13)
  5016  00112A  20F4               	addwfc	prodh,w,c
  5017  00112C  6EDA               	movwf	fsr2h,c
  5018  00112E  5006               	movf	Key_FSM_Read@key_num,w,c
  5019  001130  0D01               	mullw	1
  5020  001132  0E89               	movlw	low (_Local_Key_User+13)
  5021  001134  24F3               	addwf	prodl,w,c
  5022  001136  6EE1               	movwf	fsr1l,c
  5023  001138  0E00               	movlw	high (_Local_Key_User+13)
  5024  00113A  20F4               	addwfc	prodh,w,c
  5025  00113C  6EE2               	movwf	fsr1h,c
  5026  00113E  50DE               	movf	postinc2,w,c
  5027  001140  18E6               	xorwf	postinc1,w,c
  5028  001142  A4D8               	btfss	status,2,c
  5029  001144  D02F               	goto	i2l2178
  5030                           
  5031                           ;Key.c: 130: if(Local_Key_User.key_state[key_num] != KEY_default)
  5032  001146  5006               	movf	Key_FSM_Read@key_num,w,c
  5033  001148  0D01               	mullw	1
  5034  00114A  0E89               	movlw	low (_Local_Key_User+13)
  5035  00114C  24F3               	addwf	prodl,w,c
  5036  00114E  6ED9               	movwf	fsr2l,c
  5037  001150  0E00               	movlw	high (_Local_Key_User+13)
  5038  001152  20F4               	addwfc	prodh,w,c
  5039  001154  6EDA               	movwf	fsr2h,c
  5040  001156  50DF               	movf	indf2,w,c
  5041  001158  B4D8               	btfsc	status,2,c
  5042  00115A  D024               	goto	i2l2178
  5043                           
  5044                           ;Key.c: 131: {
  5045                           ;Key.c: 132: Local_Key_User.key_group = (0x01 << key_num)|(0x01 << key_num_mate);
  5046  00115C  C005  F001         	movff	Key_FSM_Read@key_num_mate,??_Key_FSM_Read
  5047  001160  0E01               	movlw	1
  5048  001162  6E02               	movwf	(??_Key_FSM_Read+1)& (0+255),c
  5049  001164  2A01               	incf	??_Key_FSM_Read,f,c
  5050  001166  D002               	goto	i2u173_44
  5051  001168                     i2u173_45:
  5052  001168  90D8               	bcf	status,0,c
  5053  00116A  3602               	rlcf	??_Key_FSM_Read+1,f,c
  5054  00116C                     i2u173_44:
  5055  00116C  2E01               	decfsz	??_Key_FSM_Read,f,c
  5056  00116E  D7FC               	goto	i2u173_45
  5057  001170  C006  F003         	movff	Key_FSM_Read@key_num,??_Key_FSM_Read+2
  5058  001174  0E01               	movlw	1
  5059  001176  6E04               	movwf	(??_Key_FSM_Read+3)& (0+255),c
  5060  001178  2A03               	incf	??_Key_FSM_Read+2,f,c
  5061  00117A  D002               	goto	i2u174_44
  5062  00117C                     i2u174_45:
  5063  00117C  90D8               	bcf	status,0,c
  5064  00117E  3604               	rlcf	??_Key_FSM_Read+3,f,c
  5065  001180                     i2u174_44:
  5066  001180  2E03               	decfsz	??_Key_FSM_Read+2,f,c
  5067  001182  D7FC               	goto	i2u174_45
  5068  001184  5004               	movf	??_Key_FSM_Read+3,w,c
  5069  001186  1002               	iorwf	??_Key_FSM_Read+1,w,c
  5070  001188  0100               	movlb	0	; () banked
  5071  00118A  6F7D               	movwf	(_Local_Key_User+1)& (0+255),b	;volatile
  5072                           
  5073                           ; BSR set to: 0
  5074                           ;Key.c: 133: Local_Key_User.key_group_state = Local_Key_User.key_state[key_num];
  5075  00118C  5006               	movf	Key_FSM_Read@key_num,w,c
  5076  00118E  0D01               	mullw	1
  5077  001190  0E89               	movlw	low (_Local_Key_User+13)
  5078  001192  24F3               	addwf	prodl,w,c
  5079  001194  6ED9               	movwf	fsr2l,c
  5080  001196  0E00               	movlw	high (_Local_Key_User+13)
  5081  001198  20F4               	addwfc	prodh,w,c
  5082  00119A  6EDA               	movwf	fsr2h,c
  5083  00119C  50DF               	movf	indf2,w,c
  5084  00119E  0100               	movlb	0	; () banked
  5085  0011A0  6F7E               	movwf	(_Local_Key_User+2)& (0+255),b	;volatile
  5086                           
  5087                           ; BSR set to: 0
  5088  0011A2  D000               	goto	i2l2178
  5089  0011A4                     i2l2178:
  5090  0011A4  2A05               	incf	Key_FSM_Read@key_num_mate,f,c
  5091  0011A6  D7B7               	goto	L5
  5092  0011A8                     i2l2182:
  5093  0011A8  2A06               	incf	Key_FSM_Read@key_num,f,c
  5094  0011AA  0E03               	movlw	3
  5095  0011AC  6406               	cpfsgt	Key_FSM_Read@key_num,c
  5096  0011AE  D7B1               	goto	i2l2166
  5097  0011B0  0012               	return	
  5098  0011B2  0012               	return		;funcret
  5099  0011B4                     __end_of_Key_FSM_Read:
  5100                           	opt stack 0
  5101                           pclatu	equ	0xFFB
  5102                           pclath	equ	0xFFA
  5103                           tblptru	equ	0xFF8
  5104                           tblptrh	equ	0xFF7
  5105                           tblptrl	equ	0xFF6
  5106                           tablat	equ	0xFF5
  5107                           prodh	equ	0xFF4
  5108                           prodl	equ	0xFF3
  5109                           intcon	equ	0xFF2
  5110                           postinc0	equ	0xFEE
  5111                           fsr0h	equ	0xFEA
  5112                           fsr0l	equ	0xFE9
  5113                           wreg	equ	0xFE8
  5114                           postinc1	equ	0xFE6
  5115                           fsr1h	equ	0xFE2
  5116                           fsr1l	equ	0xFE1
  5117                           indf2	equ	0xFDF
  5118                           postinc2	equ	0xFDE
  5119                           postdec2	equ	0xFDD
  5120                           plusw2	equ	0xFDB
  5121                           fsr2h	equ	0xFDA
  5122                           fsr2l	equ	0xFD9
  5123                           status	equ	0xFD8
  5124                           
  5125 ;; *************** function _Key_FSM_Scan *****************
  5126 ;; Defined at:
  5127 ;;		line 77 in file "_01_USER/Key.c"
  5128 ;; Parameters:    Size  Location     Type
  5129 ;;		None
  5130 ;; Auto vars:     Size  Location     Type
  5131 ;;		None
  5132 ;; Return value:  Size  Location     Type
  5133 ;;		None               void
  5134 ;; Registers used:
  5135 ;;		wreg, status,2, status,0, cstack
  5136 ;; Tracked objects:
  5137 ;;		On entry : 0/0
  5138 ;;		On exit  : 0/0
  5139 ;;		Unchanged: 0/0
  5140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5145 ;;Total ram usage:        0 bytes
  5146 ;; Hardware stack levels used:    1
  5147 ;; Hardware stack levels required when called:    1
  5148 ;; This function calls:
  5149 ;;		_Key_Scan
  5150 ;; This function is called by:
  5151 ;;		_Sys_Cyc
  5152 ;; This function uses a non-reentrant model
  5153 ;;
  5154                           
  5155                           	psect	text38
  5156  001AA0                     __ptext38:
  5157                           	opt stack 0
  5158  001AA0                     _Key_FSM_Scan:
  5159                           	opt stack 23
  5160                           
  5161                           ;Key.c: 79: Key_Scan();
  5162                           
  5163                           ;incstack = 0
  5164  001AA0  ECD7  F00D         	call	_Key_Scan	;wreg free
  5165                           
  5166                           ;Key.c: 80: if( Local_Key_FSM.key_BUS & 0x01 ) Local_Key_FSM.key_count[0]++;
  5167  001AA4  0100               	movlb	0	; () banked
  5168  001AA6  A16A               	btfss	_Local_Key_FSM& (0+255),0,b	;volatile
  5169  001AA8  D004               	goto	i2l2390
  5170                           
  5171                           ; BSR set to: 0
  5172  001AAA  0100               	movlb	0	; () banked
  5173  001AAC  4B6D               	infsnz	(_Local_Key_FSM+3)& (0+255),f,b	;volatile
  5174  001AAE  2B6E               	incf	(_Local_Key_FSM+4)& (0+255),f,b	;volatile
  5175  001AB0  D000               	goto	i2l2390
  5176  001AB2                     i2l2390:
  5177                           
  5178                           ; BSR set to: 0
  5179                           ;Key.c: 81: if( Local_Key_FSM.key_BUS & 0x02 ) Local_Key_FSM.key_count[1]++;
  5180  001AB2  0100               	movlb	0	; () banked
  5181  001AB4  A36A               	btfss	_Local_Key_FSM& (0+255),1,b	;volatile
  5182  001AB6  D004               	goto	i2l2394
  5183                           
  5184                           ; BSR set to: 0
  5185  001AB8  0100               	movlb	0	; () banked
  5186  001ABA  4B6F               	infsnz	(_Local_Key_FSM+5)& (0+255),f,b	;volatile
  5187  001ABC  2B70               	incf	(_Local_Key_FSM+6)& (0+255),f,b	;volatile
  5188  001ABE  D000               	goto	i2l2394
  5189  001AC0                     i2l2394:
  5190                           
  5191                           ; BSR set to: 0
  5192                           ;Key.c: 82: if( Local_Key_FSM.key_BUS & 0x04 ) Local_Key_FSM.key_count[2]++;
  5193  001AC0  0100               	movlb	0	; () banked
  5194  001AC2  A56A               	btfss	_Local_Key_FSM& (0+255),2,b	;volatile
  5195  001AC4  D004               	goto	i2l2398
  5196                           
  5197                           ; BSR set to: 0
  5198  001AC6  0100               	movlb	0	; () banked
  5199  001AC8  4B71               	infsnz	(_Local_Key_FSM+7)& (0+255),f,b	;volatile
  5200  001ACA  2B72               	incf	(_Local_Key_FSM+8)& (0+255),f,b	;volatile
  5201  001ACC  D000               	goto	i2l2398
  5202  001ACE                     i2l2398:
  5203                           
  5204                           ; BSR set to: 0
  5205                           ;Key.c: 83: if( Local_Key_FSM.key_BUS & 0x08 ) Local_Key_FSM.key_count[3]++;
  5206  001ACE  0100               	movlb	0	; () banked
  5207  001AD0  A76A               	btfss	_Local_Key_FSM& (0+255),3,b	;volatile
  5208  001AD2  D004               	goto	i2l2402
  5209                           
  5210                           ; BSR set to: 0
  5211  001AD4  0100               	movlb	0	; () banked
  5212  001AD6  4B73               	infsnz	(_Local_Key_FSM+9)& (0+255),f,b	;volatile
  5213  001AD8  2B74               	incf	(_Local_Key_FSM+10)& (0+255),f,b	;volatile
  5214  001ADA  D000               	goto	i2l2402
  5215  001ADC                     i2l2402:
  5216                           
  5217                           ; BSR set to: 0
  5218                           ;Key.c: 84: if( Local_Key_FSM.key_BUS & 0x10 ) Local_Key_FSM.key_count[4]++;
  5219  001ADC  0100               	movlb	0	; () banked
  5220  001ADE  A96A               	btfss	_Local_Key_FSM& (0+255),4,b	;volatile
  5221  001AE0  0012               	return	
  5222                           
  5223                           ; BSR set to: 0
  5224  001AE2  0100               	movlb	0	; () banked
  5225  001AE4  4B75               	infsnz	(_Local_Key_FSM+11)& (0+255),f,b	;volatile
  5226  001AE6  2B76               	incf	(_Local_Key_FSM+12)& (0+255),f,b	;volatile
  5227  001AE8  0012               	return	
  5228                           
  5229                           ; BSR set to: 0
  5230                           
  5231                           ; BSR set to: 0
  5232  001AEA  0012               	return		;funcret
  5233  001AEC                     __end_of_Key_FSM_Scan:
  5234                           	opt stack 0
  5235                           pclatu	equ	0xFFB
  5236                           pclath	equ	0xFFA
  5237                           tblptru	equ	0xFF8
  5238                           tblptrh	equ	0xFF7
  5239                           tblptrl	equ	0xFF6
  5240                           tablat	equ	0xFF5
  5241                           prodh	equ	0xFF4
  5242                           prodl	equ	0xFF3
  5243                           intcon	equ	0xFF2
  5244                           postinc0	equ	0xFEE
  5245                           fsr0h	equ	0xFEA
  5246                           fsr0l	equ	0xFE9
  5247                           wreg	equ	0xFE8
  5248                           postinc1	equ	0xFE6
  5249                           fsr1h	equ	0xFE2
  5250                           fsr1l	equ	0xFE1
  5251                           indf2	equ	0xFDF
  5252                           postinc2	equ	0xFDE
  5253                           postdec2	equ	0xFDD
  5254                           plusw2	equ	0xFDB
  5255                           fsr2h	equ	0xFDA
  5256                           fsr2l	equ	0xFD9
  5257                           status	equ	0xFD8
  5258                           
  5259 ;; *************** function _Key_Scan *****************
  5260 ;; Defined at:
  5261 ;;		line 55 in file "_01_USER/Key.c"
  5262 ;; Parameters:    Size  Location     Type
  5263 ;;		None
  5264 ;; Auto vars:     Size  Location     Type
  5265 ;;		None
  5266 ;; Return value:  Size  Location     Type
  5267 ;;		None               void
  5268 ;; Registers used:
  5269 ;;		wreg, status,2, status,0
  5270 ;; Tracked objects:
  5271 ;;		On entry : 0/0
  5272 ;;		On exit  : 0/0
  5273 ;;		Unchanged: 0/0
  5274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5279 ;;Total ram usage:        0 bytes
  5280 ;; Hardware stack levels used:    1
  5281 ;; This function calls:
  5282 ;;		Nothing
  5283 ;; This function is called by:
  5284 ;;		_Key_FSM_Scan
  5285 ;; This function uses a non-reentrant model
  5286 ;;
  5287                           
  5288                           	psect	text39
  5289  001BAE                     __ptext39:
  5290                           	opt stack 0
  5291  001BAE                     _Key_Scan:
  5292                           	opt stack 23
  5293                           
  5294                           ;Key.c: 58: Local_Key_FSM.key_BUS = 0x00;
  5295                           
  5296                           ; BSR set to: 0
  5297                           ;incstack = 0
  5298  001BAE  0E00               	movlw	0
  5299  001BB0  0100               	movlb	0	; () banked
  5300  001BB2  6F6A               	movwf	_Local_Key_FSM& (0+255),b	;volatile
  5301                           
  5302                           ; BSR set to: 0
  5303                           ;Key.c: 60: if( RE3 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 0) ;
  5304  001BB4  B684               	btfsc	3972,3,c	;volatile
  5305  001BB6  D003               	goto	i2l2122
  5306                           
  5307                           ; BSR set to: 0
  5308  001BB8  0100               	movlb	0	; () banked
  5309  001BBA  816A               	bsf	_Local_Key_FSM& (0+255),0,b	;volatile
  5310  001BBC  D000               	goto	i2l2122
  5311  001BBE                     i2l2122:
  5312                           
  5313                           ; BSR set to: 0
  5314                           ;Key.c: 61: if( RE2 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 1) ;
  5315  001BBE  B484               	btfsc	3972,2,c	;volatile
  5316  001BC0  D003               	goto	i2l2126
  5317                           
  5318                           ; BSR set to: 0
  5319  001BC2  0100               	movlb	0	; () banked
  5320  001BC4  836A               	bsf	_Local_Key_FSM& (0+255),1,b	;volatile
  5321  001BC6  D000               	goto	i2l2126
  5322  001BC8                     i2l2126:
  5323                           
  5324                           ; BSR set to: 0
  5325                           ;Key.c: 62: if( RD6 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 2) ;
  5326  001BC8  BC83               	btfsc	3971,6,c	;volatile
  5327  001BCA  D003               	goto	i2l2130
  5328                           
  5329                           ; BSR set to: 0
  5330  001BCC  0100               	movlb	0	; () banked
  5331  001BCE  856A               	bsf	_Local_Key_FSM& (0+255),2,b	;volatile
  5332  001BD0  D000               	goto	i2l2130
  5333  001BD2                     i2l2130:
  5334                           
  5335                           ; BSR set to: 0
  5336                           ;Key.c: 63: if( RE4 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 3) ;
  5337  001BD2  B884               	btfsc	3972,4,c	;volatile
  5338  001BD4  D003               	goto	i2l2134
  5339                           
  5340                           ; BSR set to: 0
  5341  001BD6  0100               	movlb	0	; () banked
  5342  001BD8  876A               	bsf	_Local_Key_FSM& (0+255),3,b	;volatile
  5343  001BDA  D000               	goto	i2l2134
  5344  001BDC                     i2l2134:
  5345                           
  5346                           ; BSR set to: 0
  5347                           ;Key.c: 64: if( RD7 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 4) ;
  5348  001BDC  BE83               	btfsc	3971,7,c	;volatile
  5349  001BDE  0012               	return	
  5350                           
  5351                           ; BSR set to: 0
  5352  001BE0  0100               	movlb	0	; () banked
  5353  001BE2  896A               	bsf	_Local_Key_FSM& (0+255),4,b	;volatile
  5354  001BE4  0012               	return	
  5355                           
  5356                           ; BSR set to: 0
  5357                           
  5358                           ; BSR set to: 0
  5359  001BE6  0012               	return		;funcret
  5360  001BE8                     __end_of_Key_Scan:
  5361                           	opt stack 0
  5362                           pclatu	equ	0xFFB
  5363                           pclath	equ	0xFFA
  5364                           tblptru	equ	0xFF8
  5365                           tblptrh	equ	0xFF7
  5366                           tblptrl	equ	0xFF6
  5367                           tablat	equ	0xFF5
  5368                           prodh	equ	0xFF4
  5369                           prodl	equ	0xFF3
  5370                           intcon	equ	0xFF2
  5371                           postinc0	equ	0xFEE
  5372                           fsr0h	equ	0xFEA
  5373                           fsr0l	equ	0xFE9
  5374                           wreg	equ	0xFE8
  5375                           postinc1	equ	0xFE6
  5376                           fsr1h	equ	0xFE2
  5377                           fsr1l	equ	0xFE1
  5378                           indf2	equ	0xFDF
  5379                           postinc2	equ	0xFDE
  5380                           postdec2	equ	0xFDD
  5381                           plusw2	equ	0xFDB
  5382                           fsr2h	equ	0xFDA
  5383                           fsr2l	equ	0xFD9
  5384                           status	equ	0xFD8
  5385                           
  5386 ;; *************** function _Delay_1Khz *****************
  5387 ;; Defined at:
  5388 ;;		line 75 in file "_01_USER/My_Delay.c"
  5389 ;; Parameters:    Size  Location     Type
  5390 ;;		None
  5391 ;; Auto vars:     Size  Location     Type
  5392 ;;  c               1    2[COMRAM] unsigned char 
  5393 ;;  b               1    1[COMRAM] unsigned char 
  5394 ;;  a               1    0[COMRAM] unsigned char 
  5395 ;; Return value:  Size  Location     Type
  5396 ;;		None               void
  5397 ;; Registers used:
  5398 ;;		wreg, status,2, status,0
  5399 ;; Tracked objects:
  5400 ;;		On entry : 0/0
  5401 ;;		On exit  : 0/0
  5402 ;;		Unchanged: 0/0
  5403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5405 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5407 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5408 ;;Total ram usage:        3 bytes
  5409 ;; Hardware stack levels used:    1
  5410 ;; This function calls:
  5411 ;;		Nothing
  5412 ;; This function is called by:
  5413 ;;		_Sys_Cyc
  5414 ;; This function uses a non-reentrant model
  5415 ;;
  5416                           
  5417                           	psect	text40
  5418  001BE8                     __ptext40:
  5419                           	opt stack 0
  5420  001BE8                     _Delay_1Khz:
  5421                           	opt stack 24
  5422                           
  5423                           ;My_Delay.c: 77: unsigned char a,b,c;
  5424                           ;My_Delay.c: 78: for(c=1;c>0;c--)
  5425                           
  5426                           ; BSR set to: 0
  5427                           ;incstack = 0
  5428  001BE8  0E01               	movlw	1
  5429  001BEA  6E03               	movwf	Delay_1Khz@c,c
  5430  001BEC  5003               	movf	Delay_1Khz@c,w,c
  5431  001BEE  B4D8               	btfsc	status,2,c
  5432  001BF0  0012               	return	
  5433  001BF2  D001               	goto	i2l2364
  5434  001BF4  0012               	return	
  5435  001BF6                     i2l2364:
  5436                           
  5437                           ;My_Delay.c: 79: for(b=32;b>0;b--)
  5438  001BF6  0E20               	movlw	32
  5439  001BF8  6E02               	movwf	Delay_1Khz@b,c
  5440  001BFA  5002               	movf	Delay_1Khz@b,w,c
  5441  001BFC  B4D8               	btfsc	status,2,c
  5442  001BFE  D00D               	goto	i2l2380
  5443  001C00  D001               	goto	i2l2368
  5444  001C02  D00B               	goto	i2l2380
  5445  001C04                     i2l2368:
  5446                           
  5447                           ;My_Delay.c: 80: for(a=2;a>0;a--);
  5448  001C04  0E02               	movlw	2
  5449  001C06  6E01               	movwf	Delay_1Khz@a,c
  5450  001C08  5001               	movf	Delay_1Khz@a,w,c
  5451  001C0A  B4D8               	btfsc	status,2,c
  5452  001C0C  D004               	goto	i2l2376
  5453  001C0E  D001               	goto	i2l2372
  5454  001C10  D002               	goto	i2l2376
  5455  001C12                     i2l2372:
  5456  001C12  0601               	decf	Delay_1Khz@a,f,c
  5457  001C14  D7F9               	goto	L6
  5458  001C16                     i2l2376:
  5459  001C16  0602               	decf	Delay_1Khz@b,f,c
  5460  001C18  D7F0               	goto	L7
  5461  001C1A                     i2l2380:
  5462  001C1A  0603               	decf	Delay_1Khz@c,f,c
  5463  001C1C  D7E7               	goto	L8
  5464  001C1E  0012               	return		;funcret
  5465  001C20                     __end_of_Delay_1Khz:
  5466                           	opt stack 0
  5467                           pclatu	equ	0xFFB
  5468                           pclath	equ	0xFFA
  5469                           tblptru	equ	0xFF8
  5470                           tblptrh	equ	0xFF7
  5471                           tblptrl	equ	0xFF6
  5472                           tablat	equ	0xFF5
  5473                           prodh	equ	0xFF4
  5474                           prodl	equ	0xFF3
  5475                           intcon	equ	0xFF2
  5476                           postinc0	equ	0xFEE
  5477                           fsr0h	equ	0xFEA
  5478                           fsr0l	equ	0xFE9
  5479                           wreg	equ	0xFE8
  5480                           postinc1	equ	0xFE6
  5481                           fsr1h	equ	0xFE2
  5482                           fsr1l	equ	0xFE1
  5483                           indf2	equ	0xFDF
  5484                           postinc2	equ	0xFDE
  5485                           postdec2	equ	0xFDD
  5486                           plusw2	equ	0xFDB
  5487                           fsr2h	equ	0xFDA
  5488                           fsr2l	equ	0xFD9
  5489                           status	equ	0xFD8
  5490                           pclatu	equ	0xFFB
  5491                           pclath	equ	0xFFA
  5492                           tblptru	equ	0xFF8
  5493                           tblptrh	equ	0xFF7
  5494                           tblptrl	equ	0xFF6
  5495                           tablat	equ	0xFF5
  5496                           prodh	equ	0xFF4
  5497                           prodl	equ	0xFF3
  5498                           intcon	equ	0xFF2
  5499                           postinc0	equ	0xFEE
  5500                           fsr0h	equ	0xFEA
  5501                           fsr0l	equ	0xFE9
  5502                           wreg	equ	0xFE8
  5503                           postinc1	equ	0xFE6
  5504                           fsr1h	equ	0xFE2
  5505                           fsr1l	equ	0xFE1
  5506                           indf2	equ	0xFDF
  5507                           postinc2	equ	0xFDE
  5508                           postdec2	equ	0xFDD
  5509                           plusw2	equ	0xFDB
  5510                           fsr2h	equ	0xFDA
  5511                           fsr2l	equ	0xFD9
  5512                           status	equ	0xFD8
  5513                           
  5514                           	psect	rparam
  5515  0000                     pclatu	equ	0xFFB
  5516                           pclath	equ	0xFFA
  5517                           tblptru	equ	0xFF8
  5518                           tblptrh	equ	0xFF7
  5519                           tblptrl	equ	0xFF6
  5520                           tablat	equ	0xFF5
  5521                           prodh	equ	0xFF4
  5522                           prodl	equ	0xFF3
  5523                           intcon	equ	0xFF2
  5524                           postinc0	equ	0xFEE
  5525                           fsr0h	equ	0xFEA
  5526                           fsr0l	equ	0xFE9
  5527                           wreg	equ	0xFE8
  5528                           postinc1	equ	0xFE6
  5529                           fsr1h	equ	0xFE2
  5530                           fsr1l	equ	0xFE1
  5531                           indf2	equ	0xFDF
  5532                           postinc2	equ	0xFDE
  5533                           postdec2	equ	0xFDD
  5534                           plusw2	equ	0xFDB
  5535                           fsr2h	equ	0xFDA
  5536                           fsr2l	equ	0xFD9
  5537                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         85
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     50      69
    BANK0           160     18      84
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    CRC_Verify@_ucLByte	PTR unsigned char  size(2) Largest target is 10
		 -> RS485_SendBuff(BANK0[10]), 

    CRC_Verify@_ucHByte	PTR unsigned char  size(2) Largest target is 10
		 -> RS485_SendBuff(BANK0[10]), 

    CRC_Verify@_pucBuf	PTR unsigned char  size(2) Largest target is 10
		 -> RS485_SendBuff(BANK0[10]), 

    RS485_Send_Date@date_dress	PTR unsigned char  size(2) Largest target is 10
		 -> RS485_SendBuff(BANK0[10]), 


Critical Paths under _main in COMRAM

    _Timer0_Init->_SetTimer0
    _Show_Result->_TM1640_Show_integer
    _TM1640_Show_integer->_TM1640_Writer_Dates
    _TM1640_Show_integer->___lwdiv
    _TM1640_Writer_Dates->___lwmod
    _RS485_Send_Date->_CRC_Verify
    _CRC_Verify->___wmul
    _Get_ADC6->___ftmul
    ___lwtoft->___ftpack
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul
    _RS485_Init->_Open2USART
    _Init_TM1640->_TM1640_Writer_Byte
    _TM1640_Writer_Byte->_TM1640_Delay
    _TM1640_Stop->_TM1640_Delay
    _TM1640_Start->_TM1640_Delay
    _ADC6_Init->_OpenADC

Critical Paths under _Sys_Cyc in COMRAM

    _Sys_Cyc->___llmod
    _Manage_Message->_Key_FSM_Read

Critical Paths under _main in BANK0

    _Get_ADC6->___ftdiv

Critical Paths under _Sys_Cyc in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Sys_Cyc in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Sys_Cyc in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Sys_Cyc in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Sys_Cyc in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Sys_Cyc in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Sys_Cyc in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Sys_Cyc in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Sys_Cyc in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Sys_Cyc in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Sys_Cyc in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Sys_Cyc in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Sys_Cyc in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Sys_Cyc in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Sys_Cyc in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Sys_Cyc in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   14171
                                             15 BANK0      3     3      0
                          _ADC6_Init
                        _GPIO_Config
                        _Init_TM1640
                           _Key_Init
                         _RS485_Init
                                _Run
                        _Show_Result
                        _Timer0_Init
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0     194
                          _SetTimer0
 ---------------------------------------------------------------------------------
 (2) _SetTimer0                                            4     2      2     194
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Show_Result                                          1     1      0    3370
                                             33 COMRAM     1     1      0
                _TM1640_Show_integer
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _TM1640_Show_integer                                  2     0      2    2748
                                             31 COMRAM     2     0      2
                _TM1640_Writer_Dates
                            ___lwdiv
                            ___lwmod
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     752
                                             24 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     631
                                             24 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _TM1640_Writer_Dates                                  2     1      1    1009
                                             29 COMRAM     2     1      1
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Run                                                  0     0      0    9517
                           _Get_ADC6
                    _RS485_Send_Date
 ---------------------------------------------------------------------------------
 (2) _RS485_Send_Date                                      5     2      3    1529
                                             41 COMRAM     5     2      3
                         _CRC_Verify
 ---------------------------------------------------------------------------------
 (3) _CRC_Verify                                          11     4      7    1207
                                             30 COMRAM    11     4      7
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     622
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _Get_ADC6                                             0     0      0    7988
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2104
                                             32 COMRAM     3     0      3
                            _ReadADC (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    2846
                                             35 COMRAM    15     9      6
                            _ReadADC (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3038
                                              0 BANK0     15     9      6
                            _ReadADC (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2008
                                             24 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) _ReadADC                                              4     2      2       0
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RS485_Init                                           0     0      0     375
                         _Open2USART
 ---------------------------------------------------------------------------------
 (2) _Open2USART                                           3     1      2     375
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Key_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_TM1640                                          0     0      0     396
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
 ---------------------------------------------------------------------------------
 (4) _TM1640_Writer_Byte                                   2     2      0     198
                                             26 COMRAM     2     2      0
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (4) _TM1640_Stop                                          0     0      0      99
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (4) _TM1640_Start                                         0     0      0      99
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (5) _TM1640_Delay                                         2     2      0      99
                                             24 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC6_Init                                            0     0      0     316
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     316
                                             24 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Sys_Cyc                                             15    15      0    1372
                                              9 COMRAM    15    15      0
                         _Delay_1Khz
                       _Key_FSM_Scan
                     _Manage_Message
                            ___llmod
                        i2_SetTimer0
 ---------------------------------------------------------------------------------
 (7) i2_SetTimer0                                          4     2      2      94
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8     371
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) _Manage_Message                                       0     0      0     746
                       _Key_FSM_Read
                      _Key_FSM_Reset
                            ___lbmod
 ---------------------------------------------------------------------------------
 (8) ___lbmod                                              4     3      1     212
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (8) _Key_FSM_Reset                                        1     1      0      67
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _Key_FSM_Read                                         6     6      0     467
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (7) _Key_FSM_Scan                                         0     0      0       0
                           _Key_Scan
 ---------------------------------------------------------------------------------
 (8) _Key_Scan                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _Delay_1Khz                                           3     3      0     138
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC6_Init
     _OpenADC
   _GPIO_Config
   _Init_TM1640
     _TM1640_Start
       _TM1640_Delay
     _TM1640_Stop
       _TM1640_Delay
     _TM1640_Writer_Byte
       _TM1640_Delay
   _Key_Init
   _RS485_Init
     _Open2USART
   _Run
     _Get_ADC6
       _BusyADC
       _ConvertADC
       _ReadADC
       ___ftdiv
         _ReadADC (ARG)
         ___ftmul (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___ftmul
         _ReadADC (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___lwtoft
         _ReadADC (ARG)
         ___ftpack (ARG)
     _RS485_Send_Date
       _CRC_Verify
         ___wmul
   _Show_Result
     _TM1640_Show_integer
       _TM1640_Writer_Dates
         _TM1640_Start
           _TM1640_Delay
         _TM1640_Stop
           _TM1640_Delay
         _TM1640_Writer_Byte
           _TM1640_Delay
         ___lwmod (ARG)
       ___lwdiv
       ___lwmod
       ___wmul (ARG)
     ___wmul
   _Timer0_Init
     _SetTimer0

 _Sys_Cyc (ROOT)
   _Delay_1Khz
   _Key_FSM_Scan
     _Key_Scan
   _Manage_Message
     _Key_FSM_Read
     _Key_FSM_Reset
     ___lbmod
   ___llmod
   i2_SetTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     12      54       5       52.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     32      45       1       72.6%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      99      12        0.0%
DATA                 0      0      99       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Jan 19 15:46:26 2016

                ?_TM1640_Stop 0001  __size_of_TM1640_Writer_Dates 0022                 ?_TM1640_Delay 0001  
              Key_FSM_Reset@t 0001           ___wmul@multiplicand 001B                   __CFG_BORV$3 000000  
               ?_TM1640_Start 0001                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000                  __CFG_CP4$OFF 000000  
                __CFG_CP5$OFF 000000                  __CFG_CP6$OFF 000000                  __CFG_CP7$OFF 000000  
                         l161 1706                           l164 174A                           l156 16C8  
                         l333 1E34                           l318 1B3E                           l319 1B54  
                         l167 1756                           l435 1A50                           l470 17CE  
                         l471 17D0                           l463 179A                           l465 17AA  
                         l468 17C2                           l794 169C                           l858 12CC  
                         l993 19FC                           _GIE 007F97                  __CFG_CPB$OFF 000000  
                         _RC3 007C13                           _RC4 007C14                           _RE2 007C22  
                         _RE3 007C23                           _RE4 007C24                           _RD6 007C1E  
                         _RE5 007C25                           _RD7 007C1F                           _RE6 007C26  
                         _RG3 007C33                           _RE7 007C27                  __CFG_CPD$OFF 000000  
                         _PSA 007EAB                           _Run 1CB2                ??_Key_FSM_Read 0001  
              ??_Key_FSM_Scan 0001                           prod 000FF3                   CRC_Verify@i 0029  
                         wreg 000FE8                  ?_GPIO_Config 0001                    _TXSTA2bits 000F21  
        ?_TM1640_Show_integer 0020                   ?_RS485_Init 0001                  ___ftdiv@cntr 00AB  
                        ?_Run 0001                  ___ftdiv@sign 00B0                          l1003 1A96  
                        l3014 1BA0                          l2632 1B6C                          l2626 1B58  
                        l2650 162C                          l2714 1228                          l2802 19C0  
                        l2660 1690                          l2652 164C                          l2644 1610  
                        l2708 11EE                          l2804 19CA                          l2590 1E2C  
                        l2734 128A                          l2814 19F0                          l2806 19D2  
                        l2830 1A8A                          l2822 1A62                          l2902 1C5A  
                        l2592 1E2E                          l2584 1E24                          l2672 16B6  
                        l2656 1664                          l2648 1620                          l2744 12DE  
                        l2760 145C                          l2824 1A6C                          l2666 16A4  
                        l2658 1684                          l2754 1434                          l2682 191C  
                        l2826 1A74                          l2860 17B0                          l2852 1790  
                        l2844 1778                          l2782 14B8                          l2774 1490  
                        l2934 1944                          l2678 18E2                          l2864 17BA  
                        l2856 17A0                          l2848 1786                          l2792 14E6  
                        l2784 14BE                          l2778 14A2                          l2882 16DE  
                        l2868 17C6                          l2788 14D0                          l2892 1714  
                        l2886 16EE                          l2984 1CBE                          l2996 1824  
                        _T0CS 007EAD                          _T0SE 007EAC                          u2510 1E66  
                        u2521 11CA                          u2541 1204                          _IPEN 007E87  
                        u2571 141C                          u2591 1444                 ??_Init_TM1640 001D  
                  _Delay_1Khz 1BE8                          _main 1B74                  ___ftpack@arg 0019  
                ___ftpack@exp 001C                          fsr0h 000FEA                          fsr1h 000FE2  
                        fsr0l 000FE9                          fsr2h 000FDA                          fsr1l 000FE1  
                        indf2 000FDF                          fsr2l 000FD9                          pclat 000FFA  
             ??_Key_FSM_Reset 0001                          prodh 000FF4                          prodl 000FF3  
                        start 01A6              ?_RS485_Send_Date 002A                 __CFG_IESO$OFF 000000  
               __CFG_FOSC$HS1 000000                 __CFG_MCLRE$ON 000000                  ___ftmul@cntr 0031  
                ___param_bank 000010                  ___ftmul@sign 0032               __end_of_BusyADC 1E6C  
             __end_of_ReadADC 1E5E                ??_TM1640_Delay 0019               __end_of_OpenADC 1A54  
                       ??_Run 0033                ??_TM1640_Start 001B                 __CFG_RETEN$ON 000000  
                       ?_main 0001               __end_of___lbmod 1C52               __end_of_Sys_Cyc 01A6  
             __end_of___ftdiv 1306               __end_of___ftmul 150E               __end_of___llmod 18D0  
                       _T0PS0 007EA8                         _T0PS1 007EA9                         _T0PS2 007EAA  
                       _RC2IF 007D25               __end_of___lwdiv 1A06                         i2l111 109A  
             __end_of___lwmod 1AA0                         i2l271 016C                         i2l263 00F8  
                       i2l259 00A6                         i2l269 0164                         i2l940 18BE  
           __end_of_ADC6_Init 1E4E                         _TMR0H 000FD7                         _TMR0L 000FD6  
                       _TRISD 000F95                         _TRISE 000F96         ??_TM1640_Show_integer 0022  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                 __CFG_WRT4$OFF 000000                __CFG_EBRT0$OFF 000000  
               __CFG_WRT5$OFF 000000                __CFG_EBRT1$OFF 000000                 __CFG_WRT6$OFF 000000  
              __CFG_EBRT2$OFF 000000                 __CFG_WRT7$OFF 000000                __CFG_EBRT3$OFF 000000  
              __CFG_EBRT4$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBRT5$OFF 000000  
              __CFG_EBRT6$OFF 000000                __CFG_EBRT7$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBRTB$OFF 000000  
         __size_of_CRC_Verify 006E                 ___ftpack@sign 001D                    _ConvertADC 1E82  
               _Local_Key_FSM 006A                         tablat 000FF5                         plusw2 000FDB  
                       status 000FD8            _TM1640_Writer_Byte 1B36              __end_of_Get_ADC6 19AA  
             __initialization 1D04           __end_of_Init_TM1640 1D76           __size_of_RS485_Init 001E  
                __end_of_main 1BAE           ?_TM1640_Writer_Byte 0001              __end_of_Key_Init 1E82  
         Key_FSM_Read@key_num 0006              __end_of_Key_Scan 1BE8                    _Open2USART 1760  
                      ??_main 0033                 __activetblptr 000001              ??_Manage_Message 0007  
        ??_TM1640_Writer_Byte 001B                        _ADCON0 000FC2                        _ADCON1 000FC1  
                      _ADCON2 000FC0              ___llmod@dividend 0001                        _ADRESH 000FC4  
                      _ADRESL 000FC3                        _ANCON2 000F23                        _T08BIT 007EAE  
            __end_of___ftpack 16C6               __CFG_BBSIZ$BB2K 000000                        i2l2130 1BD2  
                      i2l2122 1BBE                        i2l2140 1018                        i2l2134 1BDC  
                      i2l2126 1BC8                        i2l2150 1086                        i2l2302 1C46  
                      i2l2152 10B4                        i2l2304 1C4C                        i2l2402 1ADC  
                      i2l2170 111E                        i2l2156 10E6                        i2l2148 1070  
                      i2l2420 1538                        i2l2412 151E                        i2l2182 11A8  
                      i2l2166 1112                        i2l2158 10FC                        i2l2190 1B2C  
                      i2l2430 155E                        i2l2424 1546                        i2l2416 152C  
                      i2l2520 009A                        i2l2178 11A4                        i2l2450 15E0  
                      i2l2442 15B4                        i2l2434 157A                        i2l2530 00BC  
                      i2l2372 1C12                        i2l2380 1C1A                        i2l2364 1BF6  
                      i2l2188 1AFE                        i2l2428 1550                        i2l2516 0090  
                      i2l2390 1AB2                        i2l2294 1C2C                        i2l2446 15D2  
                      i2l2438 1598                        i2l2470 18AE                        i2l2462 1872  
                      i2l2550 0122                        i2l2526 00AA                        i2l2376 1C16  
                      i2l2368 1C04                        i2l2456 15FA                        i2l2464 1880  
                      i2l2528 00B0                        i2l2544 0112                        i2l2394 1AC0  
                      i2l2466 1888                        i2l2538 00FC                        i2l2398 1ACE  
                      i2l2478 1C8A                        i2l2558 0148                 SetTimer0@_tmr 0019  
                      _RCREG2 000F1D              __end_of___lwtoft 1D50                        _RCSTA2 000F22  
                 ?_Delay_1Khz 0001                        _TMR0IE 007F95                        _TMR0IF 007F92  
                      _SPBRG2 000F1E                        _TMR0ON 007EAF                 TM1640_Delay@i 001A  
                   ??_BusyADC 0019                        _TXREG2 000F1C                     ??_ReadADC 001B  
                      _TXSTA2 000F21                 ??_Timer0_Init 001D                     ??_OpenADC 001B  
      TM1640_Writer_Byte@Date 001B                __CFG_XINST$OFF 000000          __end_of_Key_FSM_Read 11B4  
        __end_of_Key_FSM_Scan 1AEC        TM1640_Writer_Byte@mask 001C             _RS485_ReceiveBuff 008E  
                      ___wmul 1CDC                __CFG_STVREN$ON 000000                     ??___lbmod 0002  
                   ??_Sys_Cyc 000A                     ??___ftdiv 00A8                     ??___ftmul 002A  
                   ??___llmod 0009          Sys_Cyc@_overturn_LED 0042                     ??___lwdiv 001D  
          __size_of_SetTimer0 0030                     ??___lwmod 001D                        clear_0 1D0A  
                      clear_1 1D16          __size_of_TM1640_Stop 0024                 ??_Show_Result 0022  
       ___ftmul@f3_as_product 002E                _Local_Key_User 007C                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
        __size_of_GPIO_Config 000C           _TM1640_Writer_Dates 1DE2                   ?_ConvertADC 0001  
        __end_of_TM1640_Delay 1E3C               ___lbmod@divisor 0001          __end_of_TM1640_Start 1DE2  
                  __accesstop 0060       __end_of__initialization 1D1C               ___lbmod@counter 0003  
                 _Init_TM1640 1D50                  ?i2_SetTimer0 0001                 ___rparam_used 000001  
                  ___ftdiv@f1 00A2                    ___ftdiv@f2 00A5                    ___ftdiv@f3 00AC  
                ??_CRC_Verify 0026                    ___ftmul@f1 0024                    ___ftmul@f2 0027  
              __pcstackCOMRAM 0001          ?_TM1640_Writer_Dates 001E           __end_of_Timer0_Init 1D9A  
   Sys_Cyc@_RS485_Receive_Num 0040                   ?_Open2USART 0019                    ___lwtoft@c 0021  
         __size_of_Delay_1Khz 0038                     ?_Get_ADC6 0001                  ??_RS485_Init 001C  
         __end_of_Show_Result 1860            __end_of_CRC_Verify 193E             __end_of_SetTimer0 1C82  
                  __pbssBANK0 0060                     ?_Key_Init 0001                     ?_Key_Scan 0001  
                 _ReceiveBuff 0060               __CFG_PLLCFG$OFF 000000       TM1640_Writer_Dates@Addr 001F  
          __end_of_LED_Number 1011       TM1640_Writer_Dates@Date 001E         ??_TM1640_Writer_Dates 001F  
                     ?___wmul 0019            __end_of_RS485_Init 1E22           __size_of_ConvertADC 0004  
                   ?___ftpack 0019                     ?___lwtoft 0021                    ??_Get_ADC6 0033  
                     _SPBRGH2 000F1F                     _ADC6_Buff 003B                     _ADC6_Init 1E3C  
                  ??_Key_Init 0019                    ??_Key_Scan 0001         __size_of_Key_FSM_Read 01A2  
       __size_of_Key_FSM_Scan 004C           __size_of_Open2USART 0084                       _BusyADC 1E5E  
                     _ReadADC 1E4E              RS485_Send_Date@i 002D               __CFG_PWRTEN$OFF 000000  
                     _OpenADC 1A06                       __Hparam 0000                   _Timer0_Init 1D76  
       __end_of_Key_FSM_Reset 1B36                       __Lparam 0000                 Sys_Cyc@_pulse 0018  
              _RS485_SendBuff 0098                       ___lbmod 1C20                       _Sys_Cyc 0008  
                     ___ftdiv 11B4               __size_of___wmul 0028                       ___ftmul 140C  
                     ___llmod 1860                       ___lwdiv 19AA                       ___lwmod 1A54  
                __psmallconst 1000            _RS485_Receive_Flag 0045      __size_of_RS485_Send_Date 009A  
 __end_of_TM1640_Show_integer 140C                       __pcinit 1D04                    ??___ftpack 001E  
       Sys_Cyc@_overturn_1Khz 0041                       __ramtop 1000                       __ptext0 1B74  
                     __ptext1 1D76                       __ptext2 1C52                       __ptext3 17E4  
                     __ptext4 1306                       __ptext5 1A54                       __ptext6 19AA  
                     __ptext7 1DE2                       __ptext8 1CB2                       __ptext9 16C6  
                  ??___lwtoft 0024                   _Show_Result 17E4                  __size_of_Run 002A  
            Open2USART@config 001B         __size_of_TM1640_Delay 001A             __CFG_MSSPMSK$MSK7 000000  
                _Key_FSM_Read 1012                  _Key_FSM_Scan 1AA0         __size_of_TM1640_Start 0024  
                  ?_ADC6_Init 0001                OpenADC@config2 0019                OpenADC@config3 001A  
                     main@num 00B1          end_of_initialization 1D1C                  ??_Delay_1Khz 0001  
                   _RS485_Num 0044          __size_ofi2_SetTimer0 0030                       postdec2 000FDD  
                     postinc0 000FEE                       postinc1 000FE6                       postinc2 000FDE  
             CRC_Verify@usCrc 0027                  _TM1640_Delay 1E22     RS485_Send_Date@date_dress 002A  
   RS485_Send_Date@date_lenth 002C                  _TM1640_Start 1DBE                     _PORTEbits 000F84  
            TM1640_Delay@Time 0019            __end_of_Delay_1Khz 1C20              ___lbmod@dividend 0002  
                   _TRISCbits 000F94                     _TRISGbits 000F98   __size_of_TM1640_Writer_Byte 003E  
           __CFG_SOSCSEL$HIGH 000000                  ??_ConvertADC 0019                   ___lbmod@rem 0004  
    Key_FSM_Read@key_num_mate 0005                  ?_Init_TM1640 0001                   ___ftdiv@exp 00AF  
                 ___ftmul@exp 002D                 ??_TM1640_Stop 001B                __end_of___wmul 1D04  
                ??_Open2USART 001B            __end_of_ConvertADC 1E86                 ??_GPIO_Config 0019  
         start_initialization 1D04             ??_RS485_Send_Date 002D                   __end_of_Run 1CDC  
                 ??_ADC6_Init 001E             __size_of_Get_ADC6 006C    TM1640_Show_integer@Numbers 0020  
     __size_of_Manage_Message 00F2               ___llmod@divisor 0005             __size_of_Key_Init 000A  
           __size_of_Key_Scan 003A               ___llmod@counter 0009                     _SetTimer0 1C52  
          __end_of_Open2USART 17E4               i2SetTimer0@_tmr 0001                     _Timer_Cyc 0037  
                    ??___wmul 001D                 _Handle_Switch 0033           __end_of_TM1640_Stop 1DBE  
           __size_of___ftpack 00C6                   __pbssCOMRAM 0033             __size_of___lwtoft 0026  
               __pcstackBANK0 00A2           __end_of_GPIO_Config 1E78                      ?_BusyADC 0001  
                    ?_ReadADC 0019   __end_of_TM1640_Writer_Dates 1E04                    ?_SetTimer0 0019  
                    ?_OpenADC 0019                  ?_Timer0_Init 0001              ___lwdiv@dividend 0019  
           __CFG_CCP2MX$PORTC 000000                     __pintcode 0008                      ?___lbmod 0001  
                    ?_Sys_Cyc 0001                      ?___ftdiv 00A2                      ?___ftmul 0024  
                    ?___llmod 0001                      ?___lwdiv 0019                      ?___lwmod 0019  
                ?_Show_Result 0001                   __smallconst 1000                   _LED2_switch 0043  
            ___lwdiv@quotient 001E               Open2USART@spbrg 0019                ___wmul@product 001D  
               OpenADC@config 001D                      _PIE1bits 000F9D                      _PIE3bits 000FA3  
        __size_of_Init_TM1640 0026                      i2u165_40 103E                      i2u173_44 116C  
                    i2u173_45 1168                      i2u166_40 105C                      i2u174_44 1180  
                    i2u174_45 117C                      i2u167_40 10D2                      _PIR1bits 000F9E  
                 _TM1640_Stop 1D9A            CRC_Verify@_ucHByte 0022            CRC_Verify@_ucLByte 0024  
                  _ADCON0bits 000FC2             ___wmul@multiplier 0019                      _Get_ADC6 193E  
                 _GPIO_Config 1E6C                   Delay_1Khz@a 0001                   Delay_1Khz@b 0002  
                 Delay_1Khz@c 0003  __size_of_TM1640_Show_integer 0106        __size_of_Key_FSM_Reset 004A  
                    _Key_Init 1E78                      _Key_Scan 1BAE                _Manage_Message 150E  
               ??i2_SetTimer0 0003                   ??_SetTimer0 001B              __size_of_BusyADC 000E  
            __size_of_ReadADC 0010                      __Hrparam 0000              __size_of_OpenADC 004E  
                    __Lrparam 0000                  __Lsmallconst 1000            __CFG_BOREN$SBORDIS 000000  
             _RS485_Send_Date 16C6              __size_of___lbmod 0032              __size_of_Sys_Cyc 019E  
            __size_of___ftdiv 0152              __size_of___ftmul 0102              __size_of___llmod 0070  
            __size_of___lwdiv 005C              __size_of___lwmod 004C                      ___ftpack 1600  
                    ___lwtoft 1D2A    __end_of_TM1640_Writer_Byte 1B74               ___lwdiv@divisor 001B  
             ___lwdiv@counter 001D                      __ptext10 18D0                      __ptext11 1CDC  
                    __ptext20 1E04                      __ptext12 193E                      __ptext21 1760  
                    __ptext13 1D2A                      __ptext30 1A06                      __ptext22 1E78  
                    __ptext14 140C                      __ptext23 1D50                      __ptext15 11B4  
                    __ptext40 1BE8                      __ptext32 1C82                      __ptext24 1B36  
                    __ptext16 1600                      __ptext33 1860                      __ptext25 1D9A  
                    __ptext17 1E4E                      __ptext34 150E                      __ptext26 1DBE  
                    __ptext18 1E82                      __ptext35 1C20                      __ptext27 1E22  
                    __ptext19 1E5E                      __ptext36 1AEC                      __ptext28 1E6C  
                    __ptext37 1012                      __ptext29 1E3C                      __ptext38 1AA0  
                    __ptext39 1BAE        __end_of_Manage_Message 1600                 __size_of_main 003A  
         __CFG_RTCOSC$SOSCREF 000000                    _CRC_Verify 18D0                 _Key_FSM_Reset 1AEC  
        __size_of_Timer0_Init 0024           __end_ofi2_SetTimer0 1CB2             CRC_Verify@_pucBuf 001F  
         __CFG_INTOSCSEL$HIGH 000000            Sys_Cyc@RS485_Timer 003F                    _LED_Number 1001  
          __CFG_WDTEN$SWDTDIS 000000                    _INTCONbits 000FF2          __size_of_Show_Result 007C  
                  _RS485_Init 1E04               ?_Manage_Message 0001                      intlevel2 0000  
            ___lwmod@dividend 0019                    _RCSTA2bits 000F22       __end_of_RS485_Send_Date 1760  
              ?_Key_FSM_Reset 0001              CRC_Verify@_usLen 0021            __CFG_WDTPS$1048576 000000  
             ___lwmod@divisor 001B               ___lwmod@counter 001D                 ?_Key_FSM_Read 0001  
               ?_Key_FSM_Scan 0001              Sys_Cyc@RS485_LED 003E           __CFG_BORPWR$ZPBORMV 000000  
          __size_of_ADC6_Init 0012                   i2_SetTimer0 1C82                   ?_CRC_Verify 001F  
         _TM1640_Show_integer 1306  
