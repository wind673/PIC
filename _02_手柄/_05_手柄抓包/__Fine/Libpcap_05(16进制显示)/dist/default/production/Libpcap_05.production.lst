

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Jan 23 15:55:18 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F67K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    53  0000                     
    54                           	psect	smallconst
    55  001000                     __psmallconst:
    56                           	opt stack 0
    57  001000  00                 	db	0
    58  001001                     _LED_Number:
    59                           	opt stack 0
    60  001001  3F                 	db	63
    61  001002  06                 	db	6
    62  001003  5B                 	db	91
    63  001004  4F                 	db	79
    64  001005  66                 	db	102
    65  001006  6D                 	db	109
    66  001007  7D                 	db	125
    67  001008  07                 	db	7
    68  001009  7F                 	db	127
    69  00100A  6F                 	db	111
    70  00100B  77                 	db	119
    71  00100C  7C                 	db	124
    72  00100D  39                 	db	57
    73  00100E  5E                 	db	94
    74  00100F  79                 	db	121
    75  001010  71                 	db	113
    76  001011                     __end_of_LED_Number:
    77                           	opt stack 0
    78  0000                     _ANCON2	set	3875
    79  0000                     _RCREG2	set	3869
    80  0000                     _RCSTA2	set	3874
    81  0000                     _RCSTA2bits	set	3874
    82  0000                     _SPBRG2	set	3870
    83  0000                     _SPBRGH2	set	3871
    84  0000                     _TXREG2	set	3868
    85  0000                     _TXSTA2	set	3873
    86  0000                     _TXSTA2bits	set	3873
    87  0000                     _ADCON0	set	4034
    88  0000                     _ADCON0bits	set	4034
    89  0000                     _ADCON1	set	4033
    90  0000                     _ADCON2	set	4032
    91  0000                     _ADRESH	set	4036
    92  0000                     _ADRESL	set	4035
    93  0000                     _INTCONbits	set	4082
    94  0000                     _PIE1bits	set	3997
    95  0000                     _PIE3bits	set	4003
    96  0000                     _PIR1bits	set	3998
    97  0000                     _PORTEbits	set	3972
    98  0000                     _TMR0H	set	4055
    99  0000                     _TMR0L	set	4054
   100  0000                     _TRISCbits	set	3988
   101  0000                     _TRISD	set	3989
   102  0000                     _TRISE	set	3990
   103  0000                     _TRISGbits	set	3992
   104  0000                     _GIE	set	32663
   105  0000                     _IPEN	set	32391
   106  0000                     _PSA	set	32427
   107  0000                     _RC2IF	set	32037
   108  0000                     _RC3	set	31763
   109  0000                     _RC4	set	31764
   110  0000                     _RD6	set	31774
   111  0000                     _RD7	set	31775
   112  0000                     _RE2	set	31778
   113  0000                     _RE3	set	31779
   114  0000                     _RE4	set	31780
   115  0000                     _RE5	set	31781
   116  0000                     _RE6	set	31782
   117  0000                     _RE7	set	31783
   118  0000                     _RG3	set	31795
   119  0000                     _T08BIT	set	32430
   120  0000                     _T0CS	set	32429
   121  0000                     _T0PS0	set	32424
   122  0000                     _T0PS1	set	32425
   123  0000                     _T0PS2	set	32426
   124  0000                     _T0SE	set	32428
   125  0000                     _TMR0IE	set	32661
   126  0000                     _TMR0IF	set	32658
   127  0000                     _TMR0ON	set	32431
   128                           
   129                           ; #config settings
   130  001011  00                 	db	0	; dummy byte at the end
   131  0000                     
   132                           	psect	cinit
   133  001D40                     __pcinit:
   134                           	opt stack 0
   135  001D40                     start_initialization:
   136                           	opt stack 0
   137  001D40                     __initialization:
   138                           	opt stack 0
   139                           
   140                           ; Clear objects allocated to BANK0 (66 bytes)
   141  001D40  EE00  F060         	lfsr	0,__pbssBANK0
   142  001D44  0E42               	movlw	66
   143  001D46                     clear_0:
   144  001D46  6AEE               	clrf	postinc0,c
   145  001D48  06E8               	decf	wreg,f,c
   146  001D4A  E1FD               	bnz	clear_0
   147                           
   148                           ; Clear objects allocated to COMRAM (21 bytes)
   149  001D4C  EE00  F033         	lfsr	0,__pbssCOMRAM
   150  001D50  0E15               	movlw	21
   151  001D52                     clear_1:
   152  001D52  6AEE               	clrf	postinc0,c
   153  001D54  06E8               	decf	wreg,f,c
   154  001D56  E1FD               	bnz	clear_1
   155  001D58                     end_of_initialization:
   156                           	opt stack 0
   157  001D58                     __end_of__initialization:
   158                           	opt stack 0
   159  001D58  0E00               	movlw	low (__Lsmallconst shr (0+16))
   160  001D5A  6EF8               	movwf	tblptru,c
   161  001D5C  0E10               	movlw	high __Lsmallconst
   162  001D5E  6EF7               	movwf	tblptrh,c
   163  001D60  0100               	movlb	0
   164  001D62  EFED  F00D         	goto	_main	;jump to C main() function
   165                           tblptru	equ	0xFF8
   166                           tblptrh	equ	0xFF7
   167                           postinc0	equ	0xFEE
   168                           wreg	equ	0xFE8
   169                           
   170                           	psect	bssCOMRAM
   171  000033                     __pbssCOMRAM:
   172                           	opt stack 0
   173  000033                     _Handle_Switch:
   174                           	opt stack 0
   175  000033                     	ds	4
   176  000037                     _Timer_Cyc:
   177                           	opt stack 0
   178  000037                     	ds	4
   179  00003B                     _ADC6_Buff:
   180                           	opt stack 0
   181  00003B                     	ds	3
   182  00003E                     RS485_Receive_Date@RS485_LED:
   183                           	opt stack 0
   184  00003E                     	ds	1
   185  00003F                     Sys_Cyc@RS485_Timer:
   186                           	opt stack 0
   187  00003F                     	ds	1
   188  000040                     Sys_Cyc@_RS485_Receive_Num:
   189                           	opt stack 0
   190  000040                     	ds	1
   191  000041                     Sys_Cyc@_overturn_1Khz:
   192                           	opt stack 0
   193  000041                     	ds	1
   194  000042                     Sys_Cyc@_overturn_LED:
   195                           	opt stack 0
   196  000042                     	ds	1
   197  000043                     _LED2_switch:
   198                           	opt stack 0
   199  000043                     	ds	1
   200  000044                     _RS485_Num:
   201                           	opt stack 0
   202  000044                     	ds	1
   203  000045                     _RS485_Receive_Flag:
   204                           	opt stack 0
   205  000045                     	ds	1
   206  000046                     _Receive_Flag:
   207                           	opt stack 0
   208  000046                     	ds	1
   209  000047                     _g_Addr:
   210                           	opt stack 0
   211  000047                     	ds	1
   212                           tblptru	equ	0xFF8
   213                           tblptrh	equ	0xFF7
   214                           postinc0	equ	0xFEE
   215                           wreg	equ	0xFE8
   216                           
   217                           	psect	bssBANK0
   218  000060                     __pbssBANK0:
   219                           	opt stack 0
   220  000060                     _RS485_ReceiveBuff:
   221                           	opt stack 0
   222  000060                     	ds	10
   223  00006A                     _Local_Key_FSM:
   224                           	opt stack 0
   225  00006A                     	ds	18
   226  00007C                     _Local_Key_User:
   227                           	opt stack 0
   228  00007C                     	ds	18
   229  00008E                     _RS485_SendBuff:
   230                           	opt stack 0
   231  00008E                     	ds	10
   232  000098                     _ReceiveBuff:
   233                           	opt stack 0
   234  000098                     	ds	10
   235                           tblptru	equ	0xFF8
   236                           tblptrh	equ	0xFF7
   237                           postinc0	equ	0xFEE
   238                           wreg	equ	0xFE8
   239                           
   240                           	psect	cstackBANK0
   241  0000A2                     __pcstackBANK0:
   242                           	opt stack 0
   243  0000A2                     ?___ftdiv:
   244                           	opt stack 0
   245  0000A2                     ___ftdiv@f1:
   246                           	opt stack 0
   247                           
   248                           ; 3 bytes @ 0x0
   249  0000A2                     	ds	3
   250  0000A5                     ___ftdiv@f2:
   251                           	opt stack 0
   252                           
   253                           ; 3 bytes @ 0x3
   254  0000A5                     	ds	3
   255  0000A8                     ??___ftdiv:
   256                           
   257                           ; 0 bytes @ 0x6
   258  0000A8                     	ds	3
   259  0000AB                     ___ftdiv@cntr:
   260                           	opt stack 0
   261                           
   262                           ; 1 bytes @ 0x9
   263  0000AB                     	ds	1
   264  0000AC                     ___ftdiv@f3:
   265                           	opt stack 0
   266                           
   267                           ; 3 bytes @ 0xA
   268  0000AC                     	ds	3
   269  0000AF                     ___ftdiv@exp:
   270                           	opt stack 0
   271                           
   272                           ; 1 bytes @ 0xD
   273  0000AF                     	ds	1
   274  0000B0                     ___ftdiv@sign:
   275                           	opt stack 0
   276                           
   277                           ; 1 bytes @ 0xE
   278  0000B0                     	ds	1
   279  0000B1                     Run@i:
   280                           	opt stack 0
   281                           
   282                           ; 2 bytes @ 0xF
   283  0000B1                     	ds	2
   284  0000B3                     main@num:
   285                           	opt stack 0
   286                           
   287                           ; 3 bytes @ 0x11
   288  0000B3                     	ds	3
   289                           tblptru	equ	0xFF8
   290                           tblptrh	equ	0xFF7
   291                           postinc0	equ	0xFEE
   292                           wreg	equ	0xFE8
   293                           
   294                           	psect	cstackCOMRAM
   295  000001                     __pcstackCOMRAM:
   296                           	opt stack 0
   297  000001                     ??_Key_FSM_Read:
   298  000001                     ?___llmod:
   299                           	opt stack 0
   300  000001                     Delay_1Khz@a:
   301                           	opt stack 0
   302  000001                     Key_FSM_Reset@t:
   303                           	opt stack 0
   304  000001                     ___lbmod@divisor:
   305                           	opt stack 0
   306  000001                     i2SetTimer0@_tmr:
   307                           	opt stack 0
   308  000001                     ___llmod@dividend:
   309                           	opt stack 0
   310                           
   311                           ; 4 bytes @ 0x0
   312  000001                     	ds	1
   313  000002                     Delay_1Khz@b:
   314                           	opt stack 0
   315  000002                     ___lbmod@dividend:
   316                           	opt stack 0
   317                           
   318                           ; 1 bytes @ 0x1
   319  000002                     	ds	1
   320  000003                     ??i2_SetTimer0:
   321  000003                     Delay_1Khz@c:
   322                           	opt stack 0
   323  000003                     ___lbmod@counter:
   324                           	opt stack 0
   325                           
   326                           ; 1 bytes @ 0x2
   327  000003                     	ds	1
   328  000004                     ___lbmod@rem:
   329                           	opt stack 0
   330                           
   331                           ; 1 bytes @ 0x3
   332  000004                     	ds	1
   333  000005                     Key_FSM_Read@key_num_mate:
   334                           	opt stack 0
   335  000005                     ___llmod@divisor:
   336                           	opt stack 0
   337                           
   338                           ; 4 bytes @ 0x4
   339  000005                     	ds	1
   340  000006                     Key_FSM_Read@key_num:
   341                           	opt stack 0
   342                           
   343                           ; 1 bytes @ 0x5
   344  000006                     	ds	1
   345  000007                     
   346                           ; 0 bytes @ 0x6
   347  000007                     	ds	2
   348  000009                     ___llmod@counter:
   349                           	opt stack 0
   350                           
   351                           ; 1 bytes @ 0x8
   352  000009                     	ds	1
   353  00000A                     ??_Sys_Cyc:
   354                           
   355                           ; 0 bytes @ 0x9
   356  00000A                     	ds	14
   357  000018                     Sys_Cyc@_pulse:
   358                           	opt stack 0
   359                           
   360                           ; 1 bytes @ 0x17
   361  000018                     	ds	1
   362  000019                     ?_ReadADC:
   363                           	opt stack 0
   364  000019                     ?___wmul:
   365                           	opt stack 0
   366  000019                     ?___ftpack:
   367                           	opt stack 0
   368  000019                     TM1640_Delay@Time:
   369                           	opt stack 0
   370  000019                     OpenADC@config2:
   371                           	opt stack 0
   372  000019                     SetTimer0@_tmr:
   373                           	opt stack 0
   374  000019                     Open2USART@spbrg:
   375                           	opt stack 0
   376  000019                     ___wmul@multiplier:
   377                           	opt stack 0
   378  000019                     ___ftpack@arg:
   379                           	opt stack 0
   380                           
   381                           ; 3 bytes @ 0x18
   382  000019                     	ds	1
   383  00001A                     TM1640_Delay@i:
   384                           	opt stack 0
   385  00001A                     OpenADC@config3:
   386                           	opt stack 0
   387                           
   388                           ; 1 bytes @ 0x19
   389  00001A                     	ds	1
   390  00001B                     ??_SetTimer0:
   391  00001B                     ??_OpenADC:
   392  00001B                     ??_ReadADC:
   393  00001B                     TM1640_Writer_Byte@Date:
   394                           	opt stack 0
   395  00001B                     Open2USART@config:
   396                           	opt stack 0
   397  00001B                     ___wmul@multiplicand:
   398                           	opt stack 0
   399                           
   400                           ; 2 bytes @ 0x1A
   401  00001B                     	ds	1
   402  00001C                     TM1640_Writer_Byte@mask:
   403                           	opt stack 0
   404  00001C                     ___ftpack@exp:
   405                           	opt stack 0
   406                           
   407                           ; 1 bytes @ 0x1B
   408  00001C                     	ds	1
   409  00001D                     TM1640_Writer_Dates@Date:
   410                           	opt stack 0
   411  00001D                     OpenADC@config:
   412                           	opt stack 0
   413  00001D                     ___ftpack@sign:
   414                           	opt stack 0
   415  00001D                     ___wmul@product:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x1C
   419  00001D                     	ds	1
   420  00001E                     ??___ftpack:
   421  00001E                     TM1640_Writer_Dates@Addr:
   422                           	opt stack 0
   423                           
   424                           ; 1 bytes @ 0x1D
   425  00001E                     	ds	1
   426  00001F                     CRC_Verify@_pucBuf:
   427                           	opt stack 0
   428  00001F                     TM1640_Show_Hex@Numbers:
   429                           	opt stack 0
   430                           
   431                           ; 2 bytes @ 0x1E
   432  00001F                     	ds	2
   433  000021                     ??_TM1640_Show_Hex:
   434  000021                     ?___lwtoft:
   435                           	opt stack 0
   436  000021                     CRC_Verify@_usLen:
   437                           	opt stack 0
   438  000021                     ___lwtoft@c:
   439                           	opt stack 0
   440                           
   441                           ; 2 bytes @ 0x20
   442  000021                     	ds	1
   443  000022                     CRC_Verify@_ucHByte:
   444                           	opt stack 0
   445                           
   446                           ; 2 bytes @ 0x21
   447  000022                     	ds	1
   448  000023                     ??_Show_Result:
   449                           
   450                           ; 0 bytes @ 0x22
   451  000023                     	ds	1
   452  000024                     ?___ftmul:
   453                           	opt stack 0
   454  000024                     CRC_Verify@_ucLByte:
   455                           	opt stack 0
   456  000024                     ___ftmul@f1:
   457                           	opt stack 0
   458                           
   459                           ; 3 bytes @ 0x23
   460  000024                     	ds	2
   461  000026                     ??_CRC_Verify:
   462                           
   463                           ; 0 bytes @ 0x25
   464  000026                     	ds	1
   465  000027                     CRC_Verify@usCrc:
   466                           	opt stack 0
   467  000027                     ___ftmul@f2:
   468                           	opt stack 0
   469                           
   470                           ; 3 bytes @ 0x26
   471  000027                     	ds	2
   472  000029                     CRC_Verify@i:
   473                           	opt stack 0
   474                           
   475                           ; 1 bytes @ 0x28
   476  000029                     	ds	1
   477  00002A                     ??___ftmul:
   478  00002A                     RS485_Send_Date@date_dress:
   479                           	opt stack 0
   480  00002A                     RS485_Receive_Date@DataBuff:
   481                           	opt stack 0
   482                           
   483                           ; 2 bytes @ 0x29
   484  00002A                     	ds	2
   485  00002C                     RS485_Send_Date@date_lenth:
   486                           	opt stack 0
   487  00002C                     RS485_Receive_Date@_ucHByte:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0x2B
   491  00002C                     	ds	1
   492  00002D                     ??_RS485_Send_Date:
   493  00002D                     RS485_Receive_Date@_ucLByte:
   494                           	opt stack 0
   495  00002D                     ___ftmul@exp:
   496                           	opt stack 0
   497                           
   498                           ; 1 bytes @ 0x2C
   499  00002D                     	ds	1
   500  00002E                     RS485_Receive_Date@n:
   501                           	opt stack 0
   502  00002E                     ___ftmul@f3_as_product:
   503                           	opt stack 0
   504                           
   505                           ; 3 bytes @ 0x2D
   506  00002E                     	ds	1
   507  00002F                     RS485_Send_Date@i:
   508                           	opt stack 0
   509                           
   510                           ; 2 bytes @ 0x2E
   511  00002F                     	ds	2
   512  000031                     ___ftmul@cntr:
   513                           	opt stack 0
   514                           
   515                           ; 1 bytes @ 0x30
   516  000031                     	ds	1
   517  000032                     ___ftmul@sign:
   518                           	opt stack 0
   519                           
   520                           ; 1 bytes @ 0x31
   521  000032                     	ds	1
   522  000033                     tblptru	equ	0xFF8
   523                           tblptrh	equ	0xFF7
   524                           postinc0	equ	0xFEE
   525                           wreg	equ	0xFE8
   526                           
   527                           ; 0 bytes @ 0x32
   528 ;;
   529 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   530 ;;
   531 ;; *************** function _main *****************
   532 ;; Defined at:
   533 ;;		line 37 in file "_01_USER/main.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;		None
   536 ;; Auto vars:     Size  Location     Type
   537 ;;  num             3   17[BANK0 ] float 
   538 ;; Return value:  Size  Location     Type
   539 ;;                  2   18[None  ] int 
   540 ;; Registers used:
   541 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   542 ;; Tracked objects:
   543 ;;		On entry : 0/0
   544 ;;		On exit  : 0/0
   545 ;;		Unchanged: 0/0
   546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   548 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   550 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   551 ;;Total ram usage:        3 bytes
   552 ;; Hardware stack levels required when called:    8
   553 ;; This function calls:
   554 ;;		_ADC6_Init
   555 ;;		_GPIO_Config
   556 ;;		_Init_TM1640
   557 ;;		_Key_Init
   558 ;;		_RS485_Init
   559 ;;		_Run
   560 ;;		_Show_Result
   561 ;;		_Timer0_Init
   562 ;; This function is called by:
   563 ;;		Startup code after reset
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567                           	psect	text0
   568  001BDA                     __ptext0:
   569                           	opt stack 0
   570  001BDA                     _main:
   571                           	opt stack 23
   572                           
   573                           ;main.c: 40: float num = 0;
   574                           
   575                           ;incstack = 0
   576  001BDA  0E00               	movlw	0
   577  001BDC  0100               	movlb	0	; () banked
   578  001BDE  6FB3               	movwf	main@num& (0+255),b
   579  001BE0  0E00               	movlw	0
   580  001BE2  0100               	movlb	0	; () banked
   581  001BE4  6FB4               	movwf	(main@num+1)& (0+255),b
   582  001BE6  0E00               	movlw	0
   583  001BE8  0100               	movlb	0	; () banked
   584  001BEA  6FB5               	movwf	(main@num+2)& (0+255),b
   585                           
   586                           ; BSR set to: 0
   587                           ;main.c: 43: GPIO_Config();
   588  001BEC  EC54  F00F         	call	_GPIO_Config	;wreg free
   589                           
   590                           ;main.c: 44: Key_Init();
   591  001BF0  EC5A  F00F         	call	_Key_Init	;wreg free
   592                           
   593                           ;main.c: 45: Timer0_Init();
   594  001BF4  ECD9  F00E         	call	_Timer0_Init	;wreg free
   595                           
   596                           ;main.c: 46: Init_TM1640();
   597  001BF8  ECC6  F00E         	call	_Init_TM1640	;wreg free
   598                           
   599                           ;main.c: 47: ADC6_Init();
   600  001BFC  EC3C  F00F         	call	_ADC6_Init	;wreg free
   601                           
   602                           ;main.c: 48: RS485_Init();
   603  001C00  EC20  F00F         	call	_RS485_Init	;wreg free
   604  001C04  D000               	goto	l3081
   605  001C06                     l3081:
   606                           
   607                           ;main.c: 52: {
   608                           ;main.c: 53: Run();
   609  001C06  EC6E  F00B         	call	_Run	;wreg free
   610                           
   611                           ;main.c: 54: Show_Result();
   612  001C0A  EC3D  F00C         	call	_Show_Result	;wreg free
   613  001C0E  D7FB               	goto	l3081
   614                           
   615                           ;main.c: 55: }
   616                           ;main.c: 57: return 0;
   617                           ;	Return value of _main is never used
   618  001C10  EFCA  F000         	goto	start
   619  001C14                     __end_of_main:
   620                           	opt stack 0
   621                           tblptru	equ	0xFF8
   622                           tblptrh	equ	0xFF7
   623                           postinc0	equ	0xFEE
   624                           wreg	equ	0xFE8
   625                           
   626 ;; *************** function _Timer0_Init *****************
   627 ;; Defined at:
   628 ;;		line 41 in file "_01_USER/My_Timer.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;		None
   631 ;; Auto vars:     Size  Location     Type
   632 ;;		None
   633 ;; Return value:  Size  Location     Type
   634 ;;		None               void
   635 ;; Registers used:
   636 ;;		wreg, status,2, status,0, cstack
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   646 ;;Total ram usage:        0 bytes
   647 ;; Hardware stack levels used:    1
   648 ;; Hardware stack levels required when called:    4
   649 ;; This function calls:
   650 ;;		_SetTimer0
   651 ;; This function is called by:
   652 ;;		_main
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656                           	psect	text1
   657  001DB2                     __ptext1:
   658                           	opt stack 0
   659  001DB2                     _Timer0_Init:
   660                           	opt stack 26
   661                           
   662                           ;My_Timer.c: 43: T08BIT = 0;
   663                           
   664                           ;incstack = 0
   665  001DB2  9CD5               	bcf	4053,6,c	;volatile
   666                           
   667                           ;My_Timer.c: 44: T0CS = 0;
   668  001DB4  9AD5               	bcf	4053,5,c	;volatile
   669                           
   670                           ;My_Timer.c: 45: T0SE = 0;
   671  001DB6  98D5               	bcf	4053,4,c	;volatile
   672                           
   673                           ;My_Timer.c: 46: PSA = 0;
   674  001DB8  96D5               	bcf	4053,3,c	;volatile
   675                           
   676                           ;My_Timer.c: 47: T0PS2 = 1;
   677  001DBA  84D5               	bsf	4053,2,c	;volatile
   678                           
   679                           ;My_Timer.c: 48: T0PS1 = 1;
   680  001DBC  82D5               	bsf	4053,1,c	;volatile
   681                           
   682                           ;My_Timer.c: 49: T0PS0 = 1;
   683  001DBE  80D5               	bsf	4053,0,c	;volatile
   684                           
   685                           ;My_Timer.c: 63: SetTimer0(1);
   686  001DC0  0E00               	movlw	0
   687  001DC2  6E1A               	movwf	SetTimer0@_tmr+1,c
   688  001DC4  0E01               	movlw	1
   689  001DC6  6E19               	movwf	SetTimer0@_tmr,c
   690  001DC8  EC5C  F00E         	call	_SetTimer0	;wreg free
   691                           
   692                           ;My_Timer.c: 64: TMR0ON = 1;
   693  001DCC  8ED5               	bsf	4053,7,c	;volatile
   694                           
   695                           ;My_Timer.c: 65: TMR0IE = 1;
   696  001DCE  8AF2               	bsf	intcon,5,c	;volatile
   697                           
   698                           ;My_Timer.c: 66: IPEN = 0;GIE = 1;
   699  001DD0  9ED0               	bcf	4048,7,c	;volatile
   700  001DD2  8EF2               	bsf	intcon,7,c	;volatile
   701  001DD4  0012               	return		;funcret
   702  001DD6                     __end_of_Timer0_Init:
   703                           	opt stack 0
   704                           tblptru	equ	0xFF8
   705                           tblptrh	equ	0xFF7
   706                           intcon	equ	0xFF2
   707                           postinc0	equ	0xFEE
   708                           wreg	equ	0xFE8
   709                           
   710 ;; *************** function _SetTimer0 *****************
   711 ;; Defined at:
   712 ;;		line 79 in file "_01_USER/My_Timer.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;  _tmr            2   24[COMRAM] unsigned int 
   715 ;; Auto vars:     Size  Location     Type
   716 ;;		None
   717 ;; Return value:  Size  Location     Type
   718 ;;		None               void
   719 ;; Registers used:
   720 ;;		wreg, status,2, status,0
   721 ;; Tracked objects:
   722 ;;		On entry : 0/0
   723 ;;		On exit  : 0/0
   724 ;;		Unchanged: 0/0
   725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   726 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   728 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   729 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   730 ;;Total ram usage:        4 bytes
   731 ;; Hardware stack levels used:    1
   732 ;; Hardware stack levels required when called:    3
   733 ;; This function calls:
   734 ;;		Nothing
   735 ;; This function is called by:
   736 ;;		_Timer0_Init
   737 ;; This function uses a non-reentrant model
   738 ;;
   739                           
   740                           	psect	text2
   741  001CB8                     __ptext2:
   742                           	opt stack 0
   743  001CB8                     _SetTimer0:
   744                           	opt stack 26
   745                           
   746                           ;My_Timer.c: 81: if(_tmr > 0xffff) _tmr = 0xffff;
   747                           
   748                           ;incstack = 0
   749  001CB8  D003               	goto	l2955
   750  001CBA  6819               	setf	SetTimer0@_tmr,c
   751  001CBC  681A               	setf	SetTimer0@_tmr+1,c
   752  001CBE  D000               	goto	l2955
   753  001CC0                     l2955:
   754                           
   755                           ;My_Timer.c: 82: _tmr=0xffff-_tmr;
   756  001CC0  C019  F01B         	movff	SetTimer0@_tmr,??_SetTimer0
   757  001CC4  C01A  F01C         	movff	SetTimer0@_tmr+1,??_SetTimer0+1
   758  001CC8  1E1B               	comf	??_SetTimer0,f,c
   759  001CCA  1E1C               	comf	??_SetTimer0+1,f,c
   760  001CCC  4A1B               	infsnz	??_SetTimer0,f,c
   761  001CCE  2A1C               	incf	??_SetTimer0+1,f,c
   762  001CD0  0EFF               	movlw	255
   763  001CD2  241B               	addwf	??_SetTimer0,w,c
   764  001CD4  6E19               	movwf	SetTimer0@_tmr,c
   765  001CD6  0EFF               	movlw	255
   766  001CD8  201C               	addwfc	??_SetTimer0+1,w,c
   767  001CDA  6E1A               	movwf	SetTimer0@_tmr+1,c
   768                           
   769                           ;My_Timer.c: 83: TMR0H = _tmr/256;
   770  001CDC  501A               	movf	SetTimer0@_tmr+1,w,c
   771  001CDE  6ED7               	movwf	4055,c	;volatile
   772                           
   773                           ;My_Timer.c: 84: TMR0L = _tmr%256;
   774  001CE0  C019  FFD6         	movff	SetTimer0@_tmr,4054	;volatile
   775                           
   776                           ;My_Timer.c: 85: TMR0IF = 0;
   777  001CE4  94F2               	bcf	intcon,2,c	;volatile
   778  001CE6  0012               	return		;funcret
   779  001CE8                     __end_of_SetTimer0:
   780                           	opt stack 0
   781                           tblptru	equ	0xFF8
   782                           tblptrh	equ	0xFF7
   783                           intcon	equ	0xFF2
   784                           postinc0	equ	0xFEE
   785                           wreg	equ	0xFE8
   786                           
   787 ;; *************** function _Show_Result *****************
   788 ;; Defined at:
   789 ;;		line 142 in file "_01_USER/Run.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;		None
   792 ;; Auto vars:     Size  Location     Type
   793 ;;  i               1    0        unsigned char 
   794 ;; Return value:  Size  Location     Type
   795 ;;		None               void
   796 ;; Registers used:
   797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   805 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   806 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   807 ;;Total ram usage:        3 bytes
   808 ;; Hardware stack levels used:    1
   809 ;; Hardware stack levels required when called:    7
   810 ;; This function calls:
   811 ;;		_TM1640_Show_Hex
   812 ;; This function is called by:
   813 ;;		_main
   814 ;; This function uses a non-reentrant model
   815 ;;
   816                           
   817                           	psect	text3
   818  00187A                     __ptext3:
   819                           	opt stack 0
   820  00187A                     _Show_Result:
   821                           	opt stack 23
   822                           
   823                           ;Run.c: 145: unsigned char i;
   824                           ;Run.c: 146: if( Handle_Switch.Show_Send_Receive )
   825                           
   826                           ;incstack = 0
   827  00187A  5036               	movf	_Handle_Switch+3,w,c
   828  00187C  B4D8               	btfsc	status,2,c
   829  00187E  D01D               	goto	l421
   830                           
   831                           ;Run.c: 147: {
   832                           ;Run.c: 148: TM1640_Show_Hex( RS485_SendBuff[RS485_Num] + (RS485_Num * 0x1000) );
   833  001880  5044               	movf	_RS485_Num,w,c
   834  001882  6E23               	movwf	??_Show_Result& (0+255),c
   835  001884  6A24               	clrf	(??_Show_Result+1)& (0+255),c
   836  001886  0E0C               	movlw	12
   837  001888                     u2975:
   838  001888  90D8               	bcf	status,0,c
   839  00188A  3623               	rlcf	??_Show_Result,f,c
   840  00188C  3624               	rlcf	??_Show_Result+1,f,c
   841  00188E  2EE8               	decfsz	wreg,f,c
   842  001890  D7FB               	goto	u2975
   843  001892  5044               	movf	_RS485_Num,w,c
   844  001894  0D01               	mullw	1
   845  001896  0E8E               	movlw	low _RS485_SendBuff
   846  001898  24F3               	addwf	prodl,w,c
   847  00189A  6ED9               	movwf	fsr2l,c
   848  00189C  0E00               	movlw	high _RS485_SendBuff
   849  00189E  20F4               	addwfc	prodh,w,c
   850  0018A0  6EDA               	movwf	fsr2h,c
   851  0018A2  50DF               	movf	indf2,w,c
   852  0018A4  6E25               	movwf	(??_Show_Result+2)& (0+255),c
   853  0018A6  5025               	movf	??_Show_Result+2,w,c
   854  0018A8  2423               	addwf	??_Show_Result,w,c
   855  0018AA  6E1F               	movwf	TM1640_Show_Hex@Numbers,c
   856  0018AC  0E00               	movlw	0
   857  0018AE  2024               	addwfc	??_Show_Result+1,w,c
   858  0018B0  6E20               	movwf	TM1640_Show_Hex@Numbers+1,c
   859  0018B2  ECA7  F00A         	call	_TM1640_Show_Hex	;wreg free
   860                           
   861                           ;Run.c: 149: PORTEbits.RE7=0;
   862  0018B6  9E84               	bcf	3972,7,c	;volatile
   863                           
   864                           ;Run.c: 150: }
   865  0018B8  0012               	return	
   866  0018BA                     l421:
   867                           
   868                           ;Run.c: 152: else
   869                           ;Run.c: 153: {
   870                           ;Run.c: 154: PORTEbits.RE7=1;
   871  0018BA  8E84               	bsf	3972,7,c	;volatile
   872                           
   873                           ;Run.c: 155: TM1640_Show_Hex( ReceiveBuff[RS485_Num] + (RS485_Num * 0x1000) );
   874  0018BC  5044               	movf	_RS485_Num,w,c
   875  0018BE  6E23               	movwf	??_Show_Result& (0+255),c
   876  0018C0  6A24               	clrf	(??_Show_Result+1)& (0+255),c
   877  0018C2  0E0C               	movlw	12
   878  0018C4                     u2985:
   879  0018C4  90D8               	bcf	status,0,c
   880  0018C6  3623               	rlcf	??_Show_Result,f,c
   881  0018C8  3624               	rlcf	??_Show_Result+1,f,c
   882  0018CA  2EE8               	decfsz	wreg,f,c
   883  0018CC  D7FB               	goto	u2985
   884  0018CE  5044               	movf	_RS485_Num,w,c
   885  0018D0  0D01               	mullw	1
   886  0018D2  0E98               	movlw	low _ReceiveBuff
   887  0018D4  24F3               	addwf	prodl,w,c
   888  0018D6  6ED9               	movwf	fsr2l,c
   889  0018D8  0E00               	movlw	high _ReceiveBuff
   890  0018DA  20F4               	addwfc	prodh,w,c
   891  0018DC  6EDA               	movwf	fsr2h,c
   892  0018DE  50DF               	movf	indf2,w,c
   893  0018E0  6E25               	movwf	(??_Show_Result+2)& (0+255),c
   894  0018E2  5025               	movf	??_Show_Result+2,w,c
   895  0018E4  2423               	addwf	??_Show_Result,w,c
   896  0018E6  6E1F               	movwf	TM1640_Show_Hex@Numbers,c
   897  0018E8  0E00               	movlw	0
   898  0018EA  2024               	addwfc	??_Show_Result+1,w,c
   899  0018EC  6E20               	movwf	TM1640_Show_Hex@Numbers+1,c
   900  0018EE  ECA7  F00A         	call	_TM1640_Show_Hex	;wreg free
   901  0018F2  0012               	return	
   902  0018F4  0012               	return		;funcret
   903  0018F6                     __end_of_Show_Result:
   904                           	opt stack 0
   905                           tblptru	equ	0xFF8
   906                           tblptrh	equ	0xFF7
   907                           prodh	equ	0xFF4
   908                           prodl	equ	0xFF3
   909                           intcon	equ	0xFF2
   910                           postinc0	equ	0xFEE
   911                           wreg	equ	0xFE8
   912                           indf2	equ	0xFDF
   913                           fsr2h	equ	0xFDA
   914                           fsr2l	equ	0xFD9
   915                           status	equ	0xFD8
   916                           
   917 ;; *************** function _TM1640_Show_Hex *****************
   918 ;; Defined at:
   919 ;;		line 65 in file "_01_USER/TM1640.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;  Numbers         2   30[COMRAM] unsigned int 
   922 ;; Auto vars:     Size  Location     Type
   923 ;;		None
   924 ;; Return value:  Size  Location     Type
   925 ;;		None               void
   926 ;; Registers used:
   927 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   933 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   935 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   936 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   937 ;;Total ram usage:        4 bytes
   938 ;; Hardware stack levels used:    1
   939 ;; Hardware stack levels required when called:    6
   940 ;; This function calls:
   941 ;;		_TM1640_Writer_Dates
   942 ;; This function is called by:
   943 ;;		_Show_Result
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           	psect	text4
   948  00154E                     __ptext4:
   949                           	opt stack 0
   950  00154E                     _TM1640_Show_Hex:
   951                           	opt stack 23
   952                           
   953                           ;TM1640.c: 68: TM1640_Writer_Dates(3,LED_Number[Numbers%16]); Numbers/=16;
   954                           
   955                           ;incstack = 0
   956  00154E  0E0F               	movlw	15
   957  001550  141F               	andwf	TM1640_Show_Hex@Numbers,w,c
   958  001552  6E21               	movwf	??_TM1640_Show_Hex& (0+255),c
   959  001554  0E00               	movlw	0
   960  001556  1420               	andwf	TM1640_Show_Hex@Numbers+1,w,c
   961  001558  6E22               	movwf	(??_TM1640_Show_Hex+1)& (0+255),c
   962  00155A  0E01               	movlw	low _LED_Number
   963  00155C  2421               	addwf	??_TM1640_Show_Hex,w,c
   964  00155E  6EF6               	movwf	tblptrl,c
   965  001560  0E10               	movlw	high _LED_Number
   966  001562  2022               	addwfc	??_TM1640_Show_Hex+1,w,c
   967  001564  6EF7               	movwf	tblptrh,c
   968  001566                     	if	0	;There are less than 3 active tblptr bytes
   969  001566                     	endif
   970  001566  0008               	tblrd		*
   971  001568  CFF5 F01D          	movff	tablat,TM1640_Writer_Dates@Date
   972  00156C  0E03               	movlw	3
   973  00156E  EC0F  F00F         	call	_TM1640_Writer_Dates
   974  001572  3A1F               	swapf	TM1640_Show_Hex@Numbers,f,c
   975  001574  3A20               	swapf	TM1640_Show_Hex@Numbers+1,f,c
   976  001576  0E0F               	movlw	15
   977  001578  161F               	andwf	TM1640_Show_Hex@Numbers,f,c
   978  00157A  5020               	movf	TM1640_Show_Hex@Numbers+1,w,c
   979  00157C  0BF0               	andlw	240
   980  00157E  121F               	iorwf	TM1640_Show_Hex@Numbers,f,c
   981  001580  0E0F               	movlw	15
   982  001582  1620               	andwf	TM1640_Show_Hex@Numbers+1,f,c
   983                           
   984                           ;TM1640.c: 69: TM1640_Writer_Dates(2,LED_Number[Numbers%16]); Numbers/=16;
   985  001584  0E0F               	movlw	15
   986  001586  141F               	andwf	TM1640_Show_Hex@Numbers,w,c
   987  001588  6E21               	movwf	??_TM1640_Show_Hex& (0+255),c
   988  00158A  0E00               	movlw	0
   989  00158C  1420               	andwf	TM1640_Show_Hex@Numbers+1,w,c
   990  00158E  6E22               	movwf	(??_TM1640_Show_Hex+1)& (0+255),c
   991  001590  0E01               	movlw	low _LED_Number
   992  001592  2421               	addwf	??_TM1640_Show_Hex,w,c
   993  001594  6EF6               	movwf	tblptrl,c
   994  001596  0E10               	movlw	high _LED_Number
   995  001598  2022               	addwfc	??_TM1640_Show_Hex+1,w,c
   996  00159A  6EF7               	movwf	tblptrh,c
   997  00159C                     	if	0	;There are less than 3 active tblptr bytes
   998  00159C                     	endif
   999  00159C  0008               	tblrd		*
  1000  00159E  CFF5 F01D          	movff	tablat,TM1640_Writer_Dates@Date
  1001  0015A2  0E02               	movlw	2
  1002  0015A4  EC0F  F00F         	call	_TM1640_Writer_Dates
  1003  0015A8  3A1F               	swapf	TM1640_Show_Hex@Numbers,f,c
  1004  0015AA  3A20               	swapf	TM1640_Show_Hex@Numbers+1,f,c
  1005  0015AC  0E0F               	movlw	15
  1006  0015AE  161F               	andwf	TM1640_Show_Hex@Numbers,f,c
  1007  0015B0  5020               	movf	TM1640_Show_Hex@Numbers+1,w,c
  1008  0015B2  0BF0               	andlw	240
  1009  0015B4  121F               	iorwf	TM1640_Show_Hex@Numbers,f,c
  1010  0015B6  0E0F               	movlw	15
  1011  0015B8  1620               	andwf	TM1640_Show_Hex@Numbers+1,f,c
  1012                           
  1013                           ;TM1640.c: 70: TM1640_Writer_Dates(1,LED_Number[Numbers%16]); Numbers/=16;
  1014  0015BA  0E0F               	movlw	15
  1015  0015BC  141F               	andwf	TM1640_Show_Hex@Numbers,w,c
  1016  0015BE  6E21               	movwf	??_TM1640_Show_Hex& (0+255),c
  1017  0015C0  0E00               	movlw	0
  1018  0015C2  1420               	andwf	TM1640_Show_Hex@Numbers+1,w,c
  1019  0015C4  6E22               	movwf	(??_TM1640_Show_Hex+1)& (0+255),c
  1020  0015C6  0E01               	movlw	low _LED_Number
  1021  0015C8  2421               	addwf	??_TM1640_Show_Hex,w,c
  1022  0015CA  6EF6               	movwf	tblptrl,c
  1023  0015CC  0E10               	movlw	high _LED_Number
  1024  0015CE  2022               	addwfc	??_TM1640_Show_Hex+1,w,c
  1025  0015D0  6EF7               	movwf	tblptrh,c
  1026  0015D2                     	if	0	;There are less than 3 active tblptr bytes
  1027  0015D2                     	endif
  1028  0015D2  0008               	tblrd		*
  1029  0015D4  CFF5 F01D          	movff	tablat,TM1640_Writer_Dates@Date
  1030  0015D8  0E01               	movlw	1
  1031  0015DA  EC0F  F00F         	call	_TM1640_Writer_Dates
  1032  0015DE  3A1F               	swapf	TM1640_Show_Hex@Numbers,f,c
  1033  0015E0  3A20               	swapf	TM1640_Show_Hex@Numbers+1,f,c
  1034  0015E2  0E0F               	movlw	15
  1035  0015E4  161F               	andwf	TM1640_Show_Hex@Numbers,f,c
  1036  0015E6  5020               	movf	TM1640_Show_Hex@Numbers+1,w,c
  1037  0015E8  0BF0               	andlw	240
  1038  0015EA  121F               	iorwf	TM1640_Show_Hex@Numbers,f,c
  1039  0015EC  0E0F               	movlw	15
  1040  0015EE  1620               	andwf	TM1640_Show_Hex@Numbers+1,f,c
  1041                           
  1042                           ;TM1640.c: 71: TM1640_Writer_Dates(0,LED_Number[Numbers%16]);
  1043  0015F0  0E0F               	movlw	15
  1044  0015F2  141F               	andwf	TM1640_Show_Hex@Numbers,w,c
  1045  0015F4  6E21               	movwf	??_TM1640_Show_Hex& (0+255),c
  1046  0015F6  0E00               	movlw	0
  1047  0015F8  1420               	andwf	TM1640_Show_Hex@Numbers+1,w,c
  1048  0015FA  6E22               	movwf	(??_TM1640_Show_Hex+1)& (0+255),c
  1049  0015FC  0E01               	movlw	low _LED_Number
  1050  0015FE  2421               	addwf	??_TM1640_Show_Hex,w,c
  1051  001600  6EF6               	movwf	tblptrl,c
  1052  001602  0E10               	movlw	high _LED_Number
  1053  001604  2022               	addwfc	??_TM1640_Show_Hex+1,w,c
  1054  001606  6EF7               	movwf	tblptrh,c
  1055  001608                     	if	0	;There are less than 3 active tblptr bytes
  1056  001608                     	endif
  1057  001608  0008               	tblrd		*
  1058  00160A  CFF5 F01D          	movff	tablat,TM1640_Writer_Dates@Date
  1059  00160E  0E00               	movlw	0
  1060  001610  EC0F  F00F         	call	_TM1640_Writer_Dates
  1061  001614  0012               	return		;funcret
  1062  001616                     __end_of_TM1640_Show_Hex:
  1063                           	opt stack 0
  1064                           tblptru	equ	0xFF8
  1065                           tblptrh	equ	0xFF7
  1066                           tblptrl	equ	0xFF6
  1067                           tablat	equ	0xFF5
  1068                           prodh	equ	0xFF4
  1069                           prodl	equ	0xFF3
  1070                           intcon	equ	0xFF2
  1071                           postinc0	equ	0xFEE
  1072                           wreg	equ	0xFE8
  1073                           indf2	equ	0xFDF
  1074                           fsr2h	equ	0xFDA
  1075                           fsr2l	equ	0xFD9
  1076                           status	equ	0xFD8
  1077                           
  1078 ;; *************** function _TM1640_Writer_Dates *****************
  1079 ;; Defined at:
  1080 ;;		line 75 in file "_01_USER/TM1640.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;  Addr            1    wreg     unsigned char 
  1083 ;;  Date            1   28[COMRAM] unsigned char 
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;  Addr            1   29[COMRAM] unsigned char 
  1086 ;; Return value:  Size  Location     Type
  1087 ;;		None               void
  1088 ;; Registers used:
  1089 ;;		wreg, status,2, status,0, cstack
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1095 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1096 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1098 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1099 ;;Total ram usage:        2 bytes
  1100 ;; Hardware stack levels used:    1
  1101 ;; Hardware stack levels required when called:    5
  1102 ;; This function calls:
  1103 ;;		_TM1640_Start
  1104 ;;		_TM1640_Stop
  1105 ;;		_TM1640_Writer_Byte
  1106 ;; This function is called by:
  1107 ;;		_TM1640_Show_Hex
  1108 ;;		_TM1640_Show_Decimal
  1109 ;;		_TM1640_Show_integer
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           	psect	text5
  1114  001E1E                     __ptext5:
  1115                           	opt stack 0
  1116  001E1E                     _TM1640_Writer_Dates:
  1117                           	opt stack 23
  1118                           
  1119                           ;incstack = 0
  1120                           ;TM1640_Writer_Dates@Addr stored from wreg
  1121  001E1E  6E1E               	movwf	TM1640_Writer_Dates@Addr,c
  1122                           
  1123                           ;TM1640.c: 77: if((Addr >= 0) && (Addr <= 3))
  1124  001E20  0E04               	movlw	4
  1125  001E22  601E               	cpfslt	TM1640_Writer_Dates@Addr,c
  1126  001E24  0012               	return	
  1127                           
  1128                           ;TM1640.c: 78: {
  1129                           ;TM1640.c: 79: TM1640_Start();
  1130  001E26  ECFD  F00E         	call	_TM1640_Start	;wreg free
  1131                           
  1132                           ;TM1640.c: 80: TM1640_Writer_Byte(0xC0 + Addr);
  1133  001E2A  501E               	movf	TM1640_Writer_Dates@Addr,w,c
  1134  001E2C  0FC0               	addlw	192
  1135  001E2E  ECCE  F00D         	call	_TM1640_Writer_Byte
  1136                           
  1137                           ;TM1640.c: 81: TM1640_Writer_Byte(Date);
  1138  001E32  501D               	movf	TM1640_Writer_Dates@Date,w,c
  1139  001E34  ECCE  F00D         	call	_TM1640_Writer_Byte
  1140                           
  1141                           ;TM1640.c: 82: TM1640_Stop();
  1142  001E38  ECEB  F00E         	call	_TM1640_Stop	;wreg free
  1143  001E3C  0012               	return	
  1144  001E3E  0012               	return		;funcret
  1145  001E40                     __end_of_TM1640_Writer_Dates:
  1146                           	opt stack 0
  1147                           tblptru	equ	0xFF8
  1148                           tblptrh	equ	0xFF7
  1149                           tblptrl	equ	0xFF6
  1150                           tablat	equ	0xFF5
  1151                           prodh	equ	0xFF4
  1152                           prodl	equ	0xFF3
  1153                           intcon	equ	0xFF2
  1154                           postinc0	equ	0xFEE
  1155                           wreg	equ	0xFE8
  1156                           indf2	equ	0xFDF
  1157                           fsr2h	equ	0xFDA
  1158                           fsr2l	equ	0xFD9
  1159                           status	equ	0xFD8
  1160                           
  1161 ;; *************** function _Run *****************
  1162 ;; Defined at:
  1163 ;;		line 109 in file "_01_USER/Run.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;		None
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;  i               2   15[BANK0 ] int 
  1168 ;; Return value:  Size  Location     Type
  1169 ;;		None               void
  1170 ;; Registers used:
  1171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1172 ;; Tracked objects:
  1173 ;;		On entry : 0/0
  1174 ;;		On exit  : 0/0
  1175 ;;		Unchanged: 0/0
  1176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1178 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1180 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1181 ;;Total ram usage:        2 bytes
  1182 ;; Hardware stack levels used:    1
  1183 ;; Hardware stack levels required when called:    6
  1184 ;; This function calls:
  1185 ;;		_Get_ADC6
  1186 ;;		_RS485_Receive_Date
  1187 ;;		_RS485_Send_Date
  1188 ;; This function is called by:
  1189 ;;		_main
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           	psect	text6
  1194  0016DC                     __ptext6:
  1195                           	opt stack 0
  1196  0016DC                     _Run:
  1197                           	opt stack 24
  1198                           
  1199                           ;Run.c: 111: int i;
  1200                           ;Run.c: 113: if( Handle_Switch.ADC6 ) Get_ADC6();
  1201                           
  1202                           ;incstack = 0
  1203  0016DC  5034               	movf	_Handle_Switch+1,w,c
  1204  0016DE  B4D8               	btfsc	status,2,c
  1205  0016E0  D003               	goto	l3037
  1206  0016E2  EC26  F00D         	call	_Get_ADC6	;wreg free
  1207  0016E6  D000               	goto	l3037
  1208  0016E8                     l3037:
  1209                           
  1210                           ;Run.c: 116: if ( Handle_Switch.Usart_OneDate )
  1211  0016E8  5035               	movf	_Handle_Switch+2,w,c
  1212  0016EA  B4D8               	btfsc	status,2,c
  1213  0016EC  D00B               	goto	l3043
  1214                           
  1215                           ;Run.c: 117: {
  1216                           ;Run.c: 118: Handle_Switch.Usart_OneDate = 0;
  1217  0016EE  0E00               	movlw	0
  1218  0016F0  6E35               	movwf	_Handle_Switch+2,c
  1219                           
  1220                           ;Run.c: 119: RS485_Send_Date(RS485_SendBuff,10);
  1221  0016F2  0E8E               	movlw	low _RS485_SendBuff
  1222  0016F4  6E2A               	movwf	RS485_Send_Date@date_dress,c
  1223  0016F6  0E00               	movlw	high _RS485_SendBuff
  1224  0016F8  6E2B               	movwf	RS485_Send_Date@date_dress+1,c
  1225  0016FA  0E0A               	movlw	10
  1226  0016FC  6E2C               	movwf	RS485_Send_Date@date_lenth,c
  1227  0016FE  EC7B  F00C         	call	_RS485_Send_Date	;wreg free
  1228  001702  D000               	goto	l3043
  1229  001704                     l3043:
  1230                           
  1231                           ;Run.c: 120: }
  1232                           ;Run.c: 121: RS485_Receive_Date(ReceiveBuff);
  1233  001704  0E98               	movlw	low _ReceiveBuff
  1234  001706  6E2A               	movwf	RS485_Receive_Date@DataBuff,c
  1235  001708  0E00               	movlw	high _ReceiveBuff
  1236  00170A  6E2B               	movwf	RS485_Receive_Date@DataBuff+1,c
  1237  00170C  ECB7  F00B         	call	_RS485_Receive_Date	;wreg free
  1238                           
  1239                           ;Run.c: 123: if(Receive_Flag)
  1240  001710  5046               	movf	_Receive_Flag,w,c
  1241  001712  B4D8               	btfsc	status,2,c
  1242  001714  0012               	return	
  1243                           
  1244                           ;Run.c: 124: {
  1245                           ;Run.c: 125: Receive_Flag = 0;
  1246  001716  0E00               	movlw	0
  1247  001718  6E46               	movwf	_Receive_Flag,c
  1248                           
  1249                           ;Run.c: 126: for(i = 0;i < 10;i++)
  1250  00171A  0E00               	movlw	0
  1251  00171C  0100               	movlb	0	; () banked
  1252  00171E  6FB2               	movwf	(Run@i+1)& (0+255),b
  1253  001720  0E00               	movlw	0
  1254  001722  6FB1               	movwf	Run@i& (0+255),b
  1255  001724                     l3049:
  1256                           
  1257                           ; BSR set to: 0
  1258  001724  0100               	movlb	0	; () banked
  1259  001726  BFB2               	btfsc	(Run@i+1)& (0+255),7,b
  1260  001728  D00A               	goto	l3053
  1261  00172A  0100               	movlb	0	; () banked
  1262  00172C  51B2               	movf	(Run@i+1)& (0+255),w,b
  1263  00172E  E11E               	bnz	l418
  1264  001730  0E0A               	movlw	10
  1265  001732  0100               	movlb	0	; () banked
  1266  001734  5DB1               	subwf	Run@i& (0+255),w,b
  1267  001736  B0D8               	btfsc	status,0,c
  1268  001738  0012               	return	
  1269  00173A  D001               	goto	l3053
  1270                           
  1271                           ; BSR set to: 0
  1272  00173C  0012               	return	
  1273  00173E                     l3053:
  1274                           
  1275                           ; BSR set to: 0
  1276                           ;Run.c: 127: RS485_SendBuff[i] = ReceiveBuff[i];
  1277  00173E  0E98               	movlw	low _ReceiveBuff
  1278  001740  0100               	movlb	0	; () banked
  1279  001742  25B1               	addwf	Run@i& (0+255),w,b
  1280  001744  6ED9               	movwf	fsr2l,c
  1281  001746  0E00               	movlw	high _ReceiveBuff
  1282  001748  0100               	movlb	0	; () banked
  1283  00174A  21B2               	addwfc	(Run@i+1)& (0+255),w,b
  1284  00174C  6EDA               	movwf	fsr2h,c
  1285  00174E  0E8E               	movlw	low _RS485_SendBuff
  1286  001750  0100               	movlb	0	; () banked
  1287  001752  25B1               	addwf	Run@i& (0+255),w,b
  1288  001754  6EE1               	movwf	fsr1l,c
  1289  001756  0E00               	movlw	high _RS485_SendBuff
  1290  001758  0100               	movlb	0	; () banked
  1291  00175A  21B2               	addwfc	(Run@i+1)& (0+255),w,b
  1292  00175C  6EE2               	movwf	fsr1h,c
  1293  00175E  CFDF FFE7          	movff	indf2,indf1
  1294                           
  1295                           ; BSR set to: 0
  1296  001762  0100               	movlb	0	; () banked
  1297  001764  4BB1               	infsnz	Run@i& (0+255),f,b
  1298  001766  2BB2               	incf	(Run@i+1)& (0+255),f,b
  1299  001768  D7DD               	goto	l3049
  1300                           
  1301                           ; BSR set to: 0
  1302                           
  1303                           ; BSR set to: 0
  1304  00176A  0012               	return	
  1305  00176C                     l418:
  1306  00176C  0012               	return		;funcret
  1307  00176E                     __end_of_Run:
  1308                           	opt stack 0
  1309                           tblptru	equ	0xFF8
  1310                           tblptrh	equ	0xFF7
  1311                           tblptrl	equ	0xFF6
  1312                           tablat	equ	0xFF5
  1313                           prodh	equ	0xFF4
  1314                           prodl	equ	0xFF3
  1315                           intcon	equ	0xFF2
  1316                           postinc0	equ	0xFEE
  1317                           wreg	equ	0xFE8
  1318                           indf1	equ	0xFE7
  1319                           fsr1h	equ	0xFE2
  1320                           fsr1l	equ	0xFE1
  1321                           indf2	equ	0xFDF
  1322                           fsr2h	equ	0xFDA
  1323                           fsr2l	equ	0xFD9
  1324                           status	equ	0xFD8
  1325                           
  1326 ;; *************** function _RS485_Send_Date *****************
  1327 ;; Defined at:
  1328 ;;		line 75 in file "_01_USER/My_USART.c"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;  date_dress      2   41[COMRAM] PTR unsigned char 
  1331 ;;		 -> RS485_SendBuff(10), 
  1332 ;;  date_lenth      1   43[COMRAM] unsigned char 
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;  i               2   46[COMRAM] unsigned int 
  1335 ;; Return value:  Size  Location     Type
  1336 ;;		None               void
  1337 ;; Registers used:
  1338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1344 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1345 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1346 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1347 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1348 ;;Total ram usage:        7 bytes
  1349 ;; Hardware stack levels used:    1
  1350 ;; Hardware stack levels required when called:    5
  1351 ;; This function calls:
  1352 ;;		_CRC_Verify
  1353 ;; This function is called by:
  1354 ;;		_Run
  1355 ;; This function uses a non-reentrant model
  1356 ;;
  1357                           
  1358                           	psect	text7
  1359  0018F6                     __ptext7:
  1360                           	opt stack 0
  1361  0018F6                     _RS485_Send_Date:
  1362                           	opt stack 24
  1363                           
  1364                           ;My_USART.c: 77: unsigned int i;
  1365                           ;My_USART.c: 78: while( (!TXSTA2bits.TRMT));
  1366                           
  1367                           ;incstack = 0
  1368  0018F6  D000               	goto	l160
  1369  0018F8                     l160:
  1370  0018F8  010F               	movlb	15	; () banked
  1371  0018FA  A321               	btfss	33,1,b	;volatile
  1372  0018FC  D7FD               	goto	l160
  1373                           
  1374                           ; BSR set to: 15
  1375                           ;My_USART.c: 79: RG3 = 0;
  1376  0018FE  9686               	bcf	3974,3,c	;volatile
  1377                           
  1378                           ; BSR set to: 15
  1379                           ;My_USART.c: 82: date_dress[0] = 0xaa;
  1380  001900  C02A  FFD9         	movff	RS485_Send_Date@date_dress,fsr2l
  1381  001904  C02B  FFDA         	movff	RS485_Send_Date@date_dress+1,fsr2h
  1382  001908  0EAA               	movlw	170
  1383  00190A  6EDF               	movwf	indf2,c
  1384                           
  1385                           ; BSR set to: 15
  1386                           ;My_USART.c: 85: CRC_Verify(date_dress,date_lenth - 2,&RS485_SendBuff[8],&RS485_SendBuff
      +                          [9]);
  1387  00190C  C02A  F01F         	movff	RS485_Send_Date@date_dress,CRC_Verify@_pucBuf
  1388  001910  C02B  F020         	movff	RS485_Send_Date@date_dress+1,CRC_Verify@_pucBuf+1
  1389  001914  502C               	movf	RS485_Send_Date@date_lenth,w,c
  1390  001916  0FFE               	addlw	254
  1391  001918  6E21               	movwf	CRC_Verify@_usLen,c
  1392  00191A  0E96               	movlw	low (_RS485_SendBuff+8)
  1393  00191C  6E22               	movwf	CRC_Verify@_ucHByte,c
  1394  00191E  0E00               	movlw	high (_RS485_SendBuff+8)
  1395  001920  6E23               	movwf	CRC_Verify@_ucHByte+1,c
  1396  001922  0E97               	movlw	low (_RS485_SendBuff+9)
  1397  001924  6E24               	movwf	CRC_Verify@_ucLByte,c
  1398  001926  0E00               	movlw	high (_RS485_SendBuff+9)
  1399  001928  6E25               	movwf	CRC_Verify@_ucLByte+1,c
  1400  00192A  ECEF  F00C         	call	_CRC_Verify	;wreg free
  1401                           
  1402                           ;My_USART.c: 88: for( i = 0; i < date_lenth ; i++ )
  1403  00192E  0E00               	movlw	0
  1404  001930  6E30               	movwf	RS485_Send_Date@i+1,c
  1405  001932  0E00               	movlw	0
  1406  001934  6E2F               	movwf	RS485_Send_Date@i,c
  1407  001936  D010               	goto	l2915
  1408  001938                     l2911:
  1409                           
  1410                           ;My_USART.c: 89: {
  1411                           ;My_USART.c: 90: TXREG2 = date_dress[i];
  1412  001938  502F               	movf	RS485_Send_Date@i,w,c
  1413  00193A  242A               	addwf	RS485_Send_Date@date_dress,w,c
  1414  00193C  6ED9               	movwf	fsr2l,c
  1415  00193E  5030               	movf	RS485_Send_Date@i+1,w,c
  1416  001940  202B               	addwfc	RS485_Send_Date@date_dress+1,w,c
  1417  001942  6EDA               	movwf	fsr2h,c
  1418  001944  50DF               	movf	indf2,w,c
  1419  001946  010F               	movlb	15	; () banked
  1420  001948  6F1C               	movwf	28,b	;volatile
  1421                           
  1422                           ;My_USART.c: 91: while( (!TXSTA2bits.TRMT));
  1423  00194A  D000               	goto	l165
  1424  00194C                     l165:
  1425                           
  1426                           ; BSR set to: 15
  1427  00194C  010F               	movlb	15	; () banked
  1428  00194E  A321               	btfss	33,1,b	;volatile
  1429  001950  D7FD               	goto	l165
  1430                           
  1431                           ; BSR set to: 15
  1432                           
  1433                           ; BSR set to: 15
  1434  001952  4A2F               	infsnz	RS485_Send_Date@i,f,c
  1435  001954  2A30               	incf	RS485_Send_Date@i+1,f,c
  1436  001956  D000               	goto	l2915
  1437  001958                     l2915:
  1438  001958  502C               	movf	RS485_Send_Date@date_lenth,w,c
  1439  00195A  6E2D               	movwf	??_RS485_Send_Date& (0+255),c
  1440  00195C  6A2E               	clrf	(??_RS485_Send_Date+1)& (0+255),c
  1441  00195E  502D               	movf	??_RS485_Send_Date,w,c
  1442  001960  5C2F               	subwf	RS485_Send_Date@i,w,c
  1443  001962  502E               	movf	??_RS485_Send_Date+1,w,c
  1444  001964  5830               	subwfb	RS485_Send_Date@i+1,w,c
  1445  001966  A0D8               	btfss	status,0,c
  1446  001968  D7E7               	goto	l2911
  1447                           
  1448                           ;My_USART.c: 92: }
  1449                           ;My_USART.c: 94: RG3 = 1;
  1450  00196A  8686               	bsf	3974,3,c	;volatile
  1451  00196C  0012               	return		;funcret
  1452  00196E                     __end_of_RS485_Send_Date:
  1453                           	opt stack 0
  1454                           tblptru	equ	0xFF8
  1455                           tblptrh	equ	0xFF7
  1456                           tblptrl	equ	0xFF6
  1457                           tablat	equ	0xFF5
  1458                           prodh	equ	0xFF4
  1459                           prodl	equ	0xFF3
  1460                           intcon	equ	0xFF2
  1461                           postinc0	equ	0xFEE
  1462                           wreg	equ	0xFE8
  1463                           indf1	equ	0xFE7
  1464                           fsr1h	equ	0xFE2
  1465                           fsr1l	equ	0xFE1
  1466                           indf2	equ	0xFDF
  1467                           fsr2h	equ	0xFDA
  1468                           fsr2l	equ	0xFD9
  1469                           status	equ	0xFD8
  1470                           
  1471 ;; *************** function _RS485_Receive_Date *****************
  1472 ;; Defined at:
  1473 ;;		line 106 in file "_01_USER/My_USART.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;  DataBuff        2   41[COMRAM] PTR unsigned char 
  1476 ;;		 -> ReceiveBuff(10), 
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;  n               2   45[COMRAM] unsigned int 
  1479 ;;  _ucLByte        1   44[COMRAM] unsigned char 
  1480 ;;  _ucHByte        1   43[COMRAM] unsigned char 
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      unsigned char 
  1483 ;; Registers used:
  1484 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1490 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1491 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1493 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1494 ;;Total ram usage:        6 bytes
  1495 ;; Hardware stack levels used:    1
  1496 ;; Hardware stack levels required when called:    5
  1497 ;; This function calls:
  1498 ;;		_CRC_Verify
  1499 ;; This function is called by:
  1500 ;;		_Run
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           	psect	text8
  1505  00176E                     __ptext8:
  1506                           	opt stack 0
  1507  00176E                     _RS485_Receive_Date:
  1508                           	opt stack 24
  1509                           
  1510                           ;My_USART.c: 108: unsigned n;
  1511                           ;My_USART.c: 109: unsigned char _ucHByte;
  1512                           ;My_USART.c: 110: unsigned char _ucLByte;
  1513                           ;My_USART.c: 111: static unsigned char RS485_LED = 0;
  1514                           ;My_USART.c: 113: if(RS485_Receive_Flag)
  1515                           
  1516                           ;incstack = 0
  1517  00176E  5045               	movf	_RS485_Receive_Flag,w,c
  1518  001770  B4D8               	btfsc	status,2,c
  1519  001772  0012               	return	
  1520                           
  1521                           ;My_USART.c: 114: {
  1522                           ;My_USART.c: 115: RS485_Receive_Flag = 0;
  1523  001774  0E00               	movlw	0
  1524  001776  6E45               	movwf	_RS485_Receive_Flag,c
  1525                           
  1526                           ;My_USART.c: 116: if( RS485_ReceiveBuff[1] == g_Addr )
  1527  001778  5047               	movf	_g_Addr,w,c
  1528  00177A  0100               	movlb	0	; () banked
  1529  00177C  1961               	xorwf	(_RS485_ReceiveBuff+1)& (0+255),w,b
  1530  00177E  A4D8               	btfss	status,2,c
  1531  001780  D028               	goto	l2943
  1532                           
  1533                           ; BSR set to: 0
  1534                           ;My_USART.c: 117: {
  1535                           ;My_USART.c: 118: for(n = 0; n<10 ; n++)
  1536  001782  0E00               	movlw	0
  1537  001784  6E2F               	movwf	RS485_Receive_Date@n+1,c
  1538  001786  0E00               	movlw	0
  1539  001788  6E2E               	movwf	RS485_Receive_Date@n,c
  1540  00178A                     l2925:
  1541                           
  1542                           ; BSR set to: 0
  1543  00178A  502F               	movf	RS485_Receive_Date@n+1,w,c
  1544  00178C  E118               	bnz	l2935
  1545  00178E  0E0A               	movlw	10
  1546  001790  5C2E               	subwf	RS485_Receive_Date@n,w,c
  1547  001792  B0D8               	btfsc	status,0,c
  1548  001794  D014               	goto	l2935
  1549  001796  D001               	goto	l2929
  1550                           
  1551                           ; BSR set to: 0
  1552  001798  D012               	goto	l2935
  1553  00179A                     l2929:
  1554                           
  1555                           ;My_USART.c: 119: DataBuff[n] = RS485_ReceiveBuff[n];
  1556  00179A  0E60               	movlw	low _RS485_ReceiveBuff
  1557  00179C  242E               	addwf	RS485_Receive_Date@n,w,c
  1558  00179E  6ED9               	movwf	fsr2l,c
  1559  0017A0  0E00               	movlw	high _RS485_ReceiveBuff
  1560  0017A2  202F               	addwfc	RS485_Receive_Date@n+1,w,c
  1561  0017A4  6EDA               	movwf	fsr2h,c
  1562  0017A6  502E               	movf	RS485_Receive_Date@n,w,c
  1563  0017A8  242A               	addwf	RS485_Receive_Date@DataBuff,w,c
  1564  0017AA  6EE1               	movwf	fsr1l,c
  1565  0017AC  502F               	movf	RS485_Receive_Date@n+1,w,c
  1566  0017AE  202B               	addwfc	RS485_Receive_Date@DataBuff+1,w,c
  1567  0017B0  6EE2               	movwf	fsr1h,c
  1568  0017B2  CFDF FFE7          	movff	indf2,indf1
  1569  0017B6  4A2E               	infsnz	RS485_Receive_Date@n,f,c
  1570  0017B8  2A2F               	incf	RS485_Receive_Date@n+1,f,c
  1571  0017BA  D7E7               	goto	l2925
  1572  0017BC  D000               	goto	l2935
  1573  0017BE                     l2935:
  1574                           
  1575                           ;My_USART.c: 120: if(RS485_LED) {PORTEbits.RE6=0;RS485_LED = 0;}
  1576  0017BE  503E               	movf	RS485_Receive_Date@RS485_LED,w,c
  1577  0017C0  B4D8               	btfsc	status,2,c
  1578  0017C2  D003               	goto	l178
  1579  0017C4  9C84               	bcf	3972,6,c	;volatile
  1580  0017C6  0E00               	movlw	0
  1581  0017C8  D002               	goto	L1
  1582  0017CA                     l178:
  1583                           
  1584                           ;My_USART.c: 121: else {PORTEbits.RE6=1;RS485_LED = 1;}
  1585  0017CA  8C84               	bsf	3972,6,c	;volatile
  1586  0017CC  0E01               	movlw	1
  1587  0017CE                     L1:
  1588  0017CE  6E3E               	movwf	RS485_Receive_Date@RS485_LED,c
  1589  0017D0  D000               	goto	l2943
  1590  0017D2                     l2943:
  1591                           
  1592                           ;My_USART.c: 122: }
  1593                           ;My_USART.c: 126: CRC_Verify(DataBuff,10-2,&_ucHByte,&_ucLByte);
  1594  0017D2  C02A  F01F         	movff	RS485_Receive_Date@DataBuff,CRC_Verify@_pucBuf
  1595  0017D6  C02B  F020         	movff	RS485_Receive_Date@DataBuff+1,CRC_Verify@_pucBuf+1
  1596  0017DA  0E08               	movlw	8
  1597  0017DC  6E21               	movwf	CRC_Verify@_usLen,c
  1598  0017DE  0E2C               	movlw	low RS485_Receive_Date@_ucHByte
  1599  0017E0  6E22               	movwf	CRC_Verify@_ucHByte,c
  1600  0017E2  0E00               	movlw	high RS485_Receive_Date@_ucHByte
  1601  0017E4  6E23               	movwf	CRC_Verify@_ucHByte+1,c
  1602  0017E6  0E2D               	movlw	low RS485_Receive_Date@_ucLByte
  1603  0017E8  6E24               	movwf	CRC_Verify@_ucLByte,c
  1604  0017EA  0E00               	movlw	high RS485_Receive_Date@_ucLByte
  1605  0017EC  6E25               	movwf	CRC_Verify@_ucLByte+1,c
  1606  0017EE  ECEF  F00C         	call	_CRC_Verify	;wreg free
  1607                           
  1608                           ;My_USART.c: 133: else return 0;
  1609                           ;	Return value of _RS485_Receive_Date is never used
  1610                           
  1611                           ;My_USART.c: 131: }
  1612                           ;My_USART.c: 132: }
  1613                           
  1614                           ;My_USART.c: 129: {
  1615                           ;My_USART.c: 130: return 1;
  1616                           ;	Return value of _RS485_Receive_Date is never used
  1617  0017F2  0012               	return	
  1618  0017F4  0012               	return		;funcret
  1619  0017F6                     __end_of_RS485_Receive_Date:
  1620                           	opt stack 0
  1621                           tblptru	equ	0xFF8
  1622                           tblptrh	equ	0xFF7
  1623                           tblptrl	equ	0xFF6
  1624                           tablat	equ	0xFF5
  1625                           prodh	equ	0xFF4
  1626                           prodl	equ	0xFF3
  1627                           intcon	equ	0xFF2
  1628                           postinc0	equ	0xFEE
  1629                           wreg	equ	0xFE8
  1630                           indf1	equ	0xFE7
  1631                           fsr1h	equ	0xFE2
  1632                           fsr1l	equ	0xFE1
  1633                           indf2	equ	0xFDF
  1634                           fsr2h	equ	0xFDA
  1635                           fsr2l	equ	0xFD9
  1636                           status	equ	0xFD8
  1637                           
  1638 ;; *************** function _CRC_Verify *****************
  1639 ;; Defined at:
  1640 ;;		line 146 in file "_01_USER/My_USART.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;  _pucBuf         2   30[COMRAM] PTR unsigned char 
  1643 ;;		 -> ReceiveBuff(10), RS485_SendBuff(10), 
  1644 ;;  _usLen          1   32[COMRAM] unsigned char 
  1645 ;;  _ucHByte        2   33[COMRAM] PTR unsigned char 
  1646 ;;		 -> RS485_Receive_Date@_ucHByte(1), RS485_SendBuff(10), 
  1647 ;;  _ucLByte        2   35[COMRAM] PTR unsigned char 
  1648 ;;		 -> RS485_Receive_Date@_ucLByte(1), RS485_SendBuff(10), 
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;  usCrc           2   38[COMRAM] unsigned int 
  1651 ;;  i               1   40[COMRAM] unsigned char 
  1652 ;; Return value:  Size  Location     Type
  1653 ;;		None               void
  1654 ;; Registers used:
  1655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1661 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1662 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1663 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1664 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1665 ;;Total ram usage:       11 bytes
  1666 ;; Hardware stack levels used:    1
  1667 ;; Hardware stack levels required when called:    4
  1668 ;; This function calls:
  1669 ;;		___wmul
  1670 ;; This function is called by:
  1671 ;;		_RS485_Send_Date
  1672 ;;		_RS485_Receive_Date
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           	psect	text9
  1677  0019DE                     __ptext9:
  1678                           	opt stack 0
  1679  0019DE                     _CRC_Verify:
  1680                           	opt stack 24
  1681                           
  1682                           ;My_USART.c: 148: char i = 0;
  1683                           
  1684                           ;incstack = 0
  1685  0019DE  0E00               	movlw	0
  1686  0019E0  6E29               	movwf	CRC_Verify@i,c
  1687                           
  1688                           ;My_USART.c: 149: unsigned int usCrc = 0;
  1689  0019E2  0E00               	movlw	0
  1690  0019E4  6E28               	movwf	CRC_Verify@usCrc+1,c
  1691  0019E6  0E00               	movlw	0
  1692  0019E8  6E27               	movwf	CRC_Verify@usCrc,c
  1693                           
  1694                           ;My_USART.c: 151: for(i = 0 ; i < _usLen ; i++)
  1695  0019EA  0E00               	movlw	0
  1696  0019EC  6E29               	movwf	CRC_Verify@i,c
  1697  0019EE  D01D               	goto	l2745
  1698  0019F0                     l2741:
  1699                           
  1700                           ;My_USART.c: 152: usCrc = (usCrc+_pucBuf[i]*(i+1))%65536;
  1701  0019F0  0E01               	movlw	1
  1702  0019F2  2429               	addwf	CRC_Verify@i,w,c
  1703  0019F4  6E19               	movwf	___wmul@multiplier,c
  1704  0019F6  6A1A               	clrf	___wmul@multiplier+1,c
  1705  0019F8  0E00               	movlw	0
  1706  0019FA  221A               	addwfc	___wmul@multiplier+1,f,c
  1707  0019FC  5029               	movf	CRC_Verify@i,w,c
  1708  0019FE  0D01               	mullw	1
  1709  001A00  50F3               	movf	prodl,w,c
  1710  001A02  241F               	addwf	CRC_Verify@_pucBuf,w,c
  1711  001A04  6ED9               	movwf	fsr2l,c
  1712  001A06  50F4               	movf	prodh,w,c
  1713  001A08  2020               	addwfc	CRC_Verify@_pucBuf+1,w,c
  1714  001A0A  6EDA               	movwf	fsr2h,c
  1715  001A0C  50DF               	movf	indf2,w,c
  1716  001A0E  6E26               	movwf	??_CRC_Verify& (0+255),c
  1717  001A10  5026               	movf	??_CRC_Verify,w,c
  1718  001A12  6E1B               	movwf	___wmul@multiplicand,c
  1719  001A14  6A1C               	clrf	___wmul@multiplicand+1,c
  1720  001A16  EC8C  F00E         	call	___wmul	;wreg free
  1721  001A1A  5027               	movf	CRC_Verify@usCrc,w,c
  1722  001A1C  2419               	addwf	?___wmul,w,c
  1723  001A1E  6E27               	movwf	CRC_Verify@usCrc,c
  1724  001A20  5028               	movf	CRC_Verify@usCrc+1,w,c
  1725  001A22  201A               	addwfc	?___wmul+1,w,c
  1726  001A24  6E28               	movwf	CRC_Verify@usCrc+1,c
  1727  001A26  2A29               	incf	CRC_Verify@i,f,c
  1728  001A28  D000               	goto	l2745
  1729  001A2A                     l2745:
  1730  001A2A  5021               	movf	CRC_Verify@_usLen,w,c
  1731  001A2C  5C29               	subwf	CRC_Verify@i,w,c
  1732  001A2E  A0D8               	btfss	status,0,c
  1733  001A30  D7DF               	goto	l2741
  1734                           
  1735                           ;My_USART.c: 154: *_ucHByte = usCrc / 256;
  1736  001A32  5028               	movf	CRC_Verify@usCrc+1,w,c
  1737  001A34  C022  FFD9         	movff	CRC_Verify@_ucHByte,fsr2l
  1738  001A38  C023  FFDA         	movff	CRC_Verify@_ucHByte+1,fsr2h
  1739  001A3C  6EDF               	movwf	indf2,c
  1740                           
  1741                           ;My_USART.c: 155: *_ucLByte = usCrc % 256;
  1742  001A3E  C024  FFD9         	movff	CRC_Verify@_ucLByte,fsr2l
  1743  001A42  C025  FFDA         	movff	CRC_Verify@_ucLByte+1,fsr2h
  1744  001A46  C027  FFDF         	movff	CRC_Verify@usCrc,indf2
  1745  001A4A  0012               	return		;funcret
  1746  001A4C                     __end_of_CRC_Verify:
  1747                           	opt stack 0
  1748                           tblptru	equ	0xFF8
  1749                           tblptrh	equ	0xFF7
  1750                           tblptrl	equ	0xFF6
  1751                           tablat	equ	0xFF5
  1752                           prodh	equ	0xFF4
  1753                           prodl	equ	0xFF3
  1754                           intcon	equ	0xFF2
  1755                           postinc0	equ	0xFEE
  1756                           wreg	equ	0xFE8
  1757                           indf1	equ	0xFE7
  1758                           fsr1h	equ	0xFE2
  1759                           fsr1l	equ	0xFE1
  1760                           indf2	equ	0xFDF
  1761                           fsr2h	equ	0xFDA
  1762                           fsr2l	equ	0xFD9
  1763                           status	equ	0xFD8
  1764                           
  1765 ;; *************** function ___wmul *****************
  1766 ;; Defined at:
  1767 ;;		line 15 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;  multiplier      2   24[COMRAM] unsigned int 
  1770 ;;  multiplicand    2   26[COMRAM] unsigned int 
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;  product         2   28[COMRAM] unsigned int 
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  2   24[COMRAM] unsigned int 
  1775 ;; Registers used:
  1776 ;;		wreg, status,2, status,0, prodl, prodh
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1782 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1783 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1785 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1786 ;;Total ram usage:        6 bytes
  1787 ;; Hardware stack levels used:    1
  1788 ;; Hardware stack levels required when called:    3
  1789 ;; This function calls:
  1790 ;;		Nothing
  1791 ;; This function is called by:
  1792 ;;		_CRC_Verify
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           	psect	text10
  1797  001D18                     __ptext10:
  1798                           	opt stack 0
  1799  001D18                     ___wmul:
  1800                           	opt stack 24
  1801                           
  1802                           ;incstack = 0
  1803  001D18  5019               	movf	___wmul@multiplier,w,c
  1804  001D1A  021B               	mulwf	___wmul@multiplicand,c
  1805  001D1C  CFF3 F01D          	movff	prodl,___wmul@product
  1806  001D20  CFF4 F01E          	movff	prodh,___wmul@product+1
  1807  001D24  5019               	movf	___wmul@multiplier,w,c
  1808  001D26  021C               	mulwf	___wmul@multiplicand+1,c
  1809  001D28  50F3               	movf	prodl,w,c
  1810  001D2A  261E               	addwf	___wmul@product+1,f,c
  1811  001D2C  501A               	movf	___wmul@multiplier+1,w,c
  1812  001D2E  021B               	mulwf	___wmul@multiplicand,c
  1813  001D30  50F3               	movf	prodl,w,c
  1814  001D32  261E               	addwf	___wmul@product+1,f,c
  1815  001D34  C01D  F019         	movff	___wmul@product,?___wmul
  1816  001D38  C01E  F01A         	movff	___wmul@product+1,?___wmul+1
  1817  001D3C  0012               	return	
  1818  001D3E  0012               	return		;funcret
  1819  001D40                     __end_of___wmul:
  1820                           	opt stack 0
  1821                           tblptru	equ	0xFF8
  1822                           tblptrh	equ	0xFF7
  1823                           tblptrl	equ	0xFF6
  1824                           tablat	equ	0xFF5
  1825                           prodh	equ	0xFF4
  1826                           prodl	equ	0xFF3
  1827                           intcon	equ	0xFF2
  1828                           postinc0	equ	0xFEE
  1829                           wreg	equ	0xFE8
  1830                           indf1	equ	0xFE7
  1831                           fsr1h	equ	0xFE2
  1832                           fsr1l	equ	0xFE1
  1833                           indf2	equ	0xFDF
  1834                           fsr2h	equ	0xFDA
  1835                           fsr2l	equ	0xFD9
  1836                           status	equ	0xFD8
  1837                           
  1838 ;; *************** function _Get_ADC6 *****************
  1839 ;; Defined at:
  1840 ;;		line 67 in file "_01_USER/My_ADC.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;		None
  1843 ;; Auto vars:     Size  Location     Type
  1844 ;;		None
  1845 ;; Return value:  Size  Location     Type
  1846 ;;		None               void
  1847 ;; Registers used:
  1848 ;;		wreg, status,2, status,0, cstack
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1858 ;;Total ram usage:        0 bytes
  1859 ;; Hardware stack levels used:    1
  1860 ;; Hardware stack levels required when called:    5
  1861 ;; This function calls:
  1862 ;;		_BusyADC
  1863 ;;		_ConvertADC
  1864 ;;		_ReadADC
  1865 ;;		___ftdiv
  1866 ;;		___ftmul
  1867 ;;		___lwtoft
  1868 ;; This function is called by:
  1869 ;;		_Run
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           	psect	text11
  1874  001A4C                     __ptext11:
  1875                           	opt stack 0
  1876  001A4C                     _Get_ADC6:
  1877                           	opt stack 24
  1878                           
  1879                           ;My_ADC.c: 69: ConvertADC();
  1880                           
  1881                           ;incstack = 0
  1882  001A4C  EC5F  F00F         	call	_ConvertADC	;wreg free
  1883                           
  1884                           ;My_ADC.c: 70: while(BusyADC());
  1885  001A50  D000               	goto	l2987
  1886  001A52                     l2987:
  1887  001A52  EC4D  F00F         	call	_BusyADC	;wreg free
  1888  001A56  0900               	iorlw	0
  1889  001A58  A4D8               	btfss	status,2,c
  1890  001A5A  D7FB               	goto	l2987
  1891                           
  1892                           ;My_ADC.c: 71: ADC6_Buff =(unsigned int)ReadADC()*4.096f/4095.0f;
  1893  001A5C  0E12               	movlw	18
  1894  001A5E  6E27               	movwf	___ftmul@f2,c
  1895  001A60  0E83               	movlw	131
  1896  001A62  6E28               	movwf	___ftmul@f2+1,c
  1897  001A64  0E40               	movlw	64
  1898  001A66  6E29               	movwf	___ftmul@f2+2,c
  1899  001A68  EC45  F00F         	call	_ReadADC	;wreg free
  1900  001A6C  C019  F021         	movff	?_ReadADC,___lwtoft@c
  1901  001A70  C01A  F022         	movff	?_ReadADC+1,___lwtoft@c+1
  1902  001A74  ECB3  F00E         	call	___lwtoft	;wreg free
  1903  001A78  C021  F024         	movff	?___lwtoft,___ftmul@f1
  1904  001A7C  C022  F025         	movff	?___lwtoft+1,___ftmul@f1+1
  1905  001A80  C023  F026         	movff	?___lwtoft+2,___ftmul@f1+2
  1906  001A84  EC26  F00A         	call	___ftmul	;wreg free
  1907  001A88  C024  F0A2         	movff	?___ftmul,___ftdiv@f1
  1908  001A8C  C025  F0A3         	movff	?___ftmul+1,___ftdiv@f1+1
  1909  001A90  C026  F0A4         	movff	?___ftmul+2,___ftdiv@f1+2
  1910  001A94  0EF0               	movlw	240
  1911  001A96  0100               	movlb	0	; () banked
  1912  001A98  6FA5               	movwf	___ftdiv@f2& (0+255),b
  1913  001A9A  0E7F               	movlw	127
  1914  001A9C  0100               	movlb	0	; () banked
  1915  001A9E  6FA6               	movwf	(___ftdiv@f2+1)& (0+255),b
  1916  001AA0  0E45               	movlw	69
  1917  001AA2  0100               	movlb	0	; () banked
  1918  001AA4  6FA7               	movwf	(___ftdiv@f2+2)& (0+255),b
  1919  001AA6  ECDA  F008         	call	___ftdiv	;wreg free
  1920  001AAA  C0A2  F03B         	movff	?___ftdiv,_ADC6_Buff	;volatile
  1921  001AAE  C0A3  F03C         	movff	?___ftdiv+1,_ADC6_Buff+1	;volatile
  1922  001AB2  C0A4  F03D         	movff	?___ftdiv+2,_ADC6_Buff+2	;volatile
  1923  001AB6  0012               	return		;funcret
  1924  001AB8                     __end_of_Get_ADC6:
  1925                           	opt stack 0
  1926                           tblptru	equ	0xFF8
  1927                           tblptrh	equ	0xFF7
  1928                           tblptrl	equ	0xFF6
  1929                           tablat	equ	0xFF5
  1930                           prodh	equ	0xFF4
  1931                           prodl	equ	0xFF3
  1932                           intcon	equ	0xFF2
  1933                           postinc0	equ	0xFEE
  1934                           wreg	equ	0xFE8
  1935                           indf1	equ	0xFE7
  1936                           fsr1h	equ	0xFE2
  1937                           fsr1l	equ	0xFE1
  1938                           indf2	equ	0xFDF
  1939                           fsr2h	equ	0xFDA
  1940                           fsr2l	equ	0xFD9
  1941                           status	equ	0xFD8
  1942                           
  1943 ;; *************** function ___lwtoft *****************
  1944 ;; Defined at:
  1945 ;;		line 28 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;  c               2   32[COMRAM] unsigned int 
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;		None
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  3   32[COMRAM] float 
  1952 ;; Registers used:
  1953 ;;		wreg, status,2, status,0, cstack
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1959 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1962 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1963 ;;Total ram usage:        3 bytes
  1964 ;; Hardware stack levels used:    1
  1965 ;; Hardware stack levels required when called:    4
  1966 ;; This function calls:
  1967 ;;		___ftpack
  1968 ;; This function is called by:
  1969 ;;		_Get_ADC6
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           	psect	text12
  1974  001D66                     __ptext12:
  1975                           	opt stack 0
  1976  001D66                     ___lwtoft:
  1977                           	opt stack 24
  1978                           
  1979                           ;incstack = 0
  1980  001D66  C021  F019         	movff	___lwtoft@c,___ftpack@arg
  1981  001D6A  C022  F01A         	movff	___lwtoft@c+1,___ftpack@arg+1
  1982  001D6E  6A1B               	clrf	___ftpack@arg+2,c
  1983  001D70  0E8E               	movlw	142
  1984  001D72  6E1C               	movwf	___ftpack@exp,c
  1985  001D74  0E00               	movlw	0
  1986  001D76  6E1D               	movwf	___ftpack@sign,c
  1987  001D78  EC0B  F00B         	call	___ftpack	;wreg free
  1988  001D7C  C019  F021         	movff	?___ftpack,?___lwtoft
  1989  001D80  C01A  F022         	movff	?___ftpack+1,?___lwtoft+1
  1990  001D84  C01B  F023         	movff	?___ftpack+2,?___lwtoft+2
  1991  001D88  0012               	return	
  1992  001D8A  0012               	return		;funcret
  1993  001D8C                     __end_of___lwtoft:
  1994                           	opt stack 0
  1995                           tblptru	equ	0xFF8
  1996                           tblptrh	equ	0xFF7
  1997                           tblptrl	equ	0xFF6
  1998                           tablat	equ	0xFF5
  1999                           prodh	equ	0xFF4
  2000                           prodl	equ	0xFF3
  2001                           intcon	equ	0xFF2
  2002                           postinc0	equ	0xFEE
  2003                           wreg	equ	0xFE8
  2004                           indf1	equ	0xFE7
  2005                           fsr1h	equ	0xFE2
  2006                           fsr1l	equ	0xFE1
  2007                           indf2	equ	0xFDF
  2008                           fsr2h	equ	0xFDA
  2009                           fsr2l	equ	0xFD9
  2010                           status	equ	0xFD8
  2011                           
  2012 ;; *************** function ___ftmul *****************
  2013 ;; Defined at:
  2014 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;  f1              3   35[COMRAM] float 
  2017 ;;  f2              3   38[COMRAM] float 
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;  f3_as_produc    3   45[COMRAM] unsigned um
  2020 ;;  sign            1   49[COMRAM] unsigned char 
  2021 ;;  cntr            1   48[COMRAM] unsigned char 
  2022 ;;  exp             1   44[COMRAM] unsigned char 
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  3   35[COMRAM] float 
  2025 ;; Registers used:
  2026 ;;		wreg, status,2, status,0, cstack
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2032 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2033 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2034 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2035 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2036 ;;Total ram usage:       15 bytes
  2037 ;; Hardware stack levels used:    1
  2038 ;; Hardware stack levels required when called:    4
  2039 ;; This function calls:
  2040 ;;		___ftpack
  2041 ;; This function is called by:
  2042 ;;		_Get_ADC6
  2043 ;;		_TM1640_Show_Decimal
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           	psect	text13
  2048  00144C                     __ptext13:
  2049                           	opt stack 0
  2050  00144C                     ___ftmul:
  2051                           	opt stack 24
  2052                           
  2053                           ;incstack = 0
  2054  00144C  C026  F02A         	movff	___ftmul@f1+2,??___ftmul
  2055  001450  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  2056  001452  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  2057  001454  3425               	rlcf	___ftmul@f1+1,w,c
  2058  001456  362A               	rlcf	??___ftmul& (0+255),f,c
  2059  001458  E301               	bnc	u2671
  2060  00145A  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  2061  00145C                     u2671:
  2062  00145C  502A               	movf	??___ftmul,w,c
  2063  00145E  6E2D               	movwf	___ftmul@exp,c
  2064  001460  502D               	movf	___ftmul@exp,w,c
  2065  001462  A4D8               	btfss	status,2,c
  2066  001464  D007               	goto	l2817
  2067  001466  0E00               	movlw	0
  2068  001468  6E24               	movwf	?___ftmul,c
  2069  00146A  0E00               	movlw	0
  2070  00146C  6E25               	movwf	?___ftmul+1,c
  2071  00146E  0E00               	movlw	0
  2072  001470  6E26               	movwf	?___ftmul+2,c
  2073  001472  0012               	return	
  2074  001474                     l2817:
  2075  001474  C029  F02A         	movff	___ftmul@f2+2,??___ftmul
  2076  001478  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  2077  00147A  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  2078  00147C  3428               	rlcf	___ftmul@f2+1,w,c
  2079  00147E  362A               	rlcf	??___ftmul& (0+255),f,c
  2080  001480  E301               	bnc	u2691
  2081  001482  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  2082  001484                     u2691:
  2083  001484  502A               	movf	??___ftmul,w,c
  2084  001486  6E32               	movwf	___ftmul@sign,c
  2085  001488  5032               	movf	___ftmul@sign,w,c
  2086  00148A  A4D8               	btfss	status,2,c
  2087  00148C  D007               	goto	l2823
  2088  00148E  0E00               	movlw	0
  2089  001490  6E24               	movwf	?___ftmul,c
  2090  001492  0E00               	movlw	0
  2091  001494  6E25               	movwf	?___ftmul+1,c
  2092  001496  0E00               	movlw	0
  2093  001498  6E26               	movwf	?___ftmul+2,c
  2094  00149A  0012               	return	
  2095  00149C                     l2823:
  2096  00149C  5032               	movf	___ftmul@sign,w,c
  2097  00149E  0F7B               	addlw	123
  2098  0014A0  262D               	addwf	___ftmul@exp,f,c
  2099  0014A2  C026  F032         	movff	___ftmul@f1+2,___ftmul@sign
  2100  0014A6  5029               	movf	___ftmul@f2+2,w,c
  2101  0014A8  1A32               	xorwf	___ftmul@sign,f,c
  2102  0014AA  0E80               	movlw	128
  2103  0014AC  1632               	andwf	___ftmul@sign,f,c
  2104  0014AE  8E25               	bsf	___ftmul@f1+1,7,c
  2105  0014B0  8E28               	bsf	___ftmul@f2+1,7,c
  2106  0014B2  0EFF               	movlw	255
  2107  0014B4  1627               	andwf	___ftmul@f2,f,c
  2108  0014B6  0EFF               	movlw	255
  2109  0014B8  1628               	andwf	___ftmul@f2+1,f,c
  2110  0014BA  0E00               	movlw	0
  2111  0014BC  1629               	andwf	___ftmul@f2+2,f,c
  2112  0014BE  0E00               	movlw	0
  2113  0014C0  6E2E               	movwf	___ftmul@f3_as_product,c
  2114  0014C2  0E00               	movlw	0
  2115  0014C4  6E2F               	movwf	___ftmul@f3_as_product+1,c
  2116  0014C6  0E00               	movlw	0
  2117  0014C8  6E30               	movwf	___ftmul@f3_as_product+2,c
  2118  0014CA  0E07               	movlw	7
  2119  0014CC  6E31               	movwf	___ftmul@cntr,c
  2120  0014CE  D000               	goto	l2837
  2121  0014D0                     l2837:
  2122  0014D0  A024               	btfss	___ftmul@f1,0,c
  2123  0014D2  D007               	goto	l2841
  2124  0014D4  5027               	movf	___ftmul@f2,w,c
  2125  0014D6  262E               	addwf	___ftmul@f3_as_product,f,c
  2126  0014D8  5028               	movf	___ftmul@f2+1,w,c
  2127  0014DA  222F               	addwfc	___ftmul@f3_as_product+1,f,c
  2128  0014DC  5029               	movf	___ftmul@f2+2,w,c
  2129  0014DE  2230               	addwfc	___ftmul@f3_as_product+2,f,c
  2130  0014E0  D000               	goto	l2841
  2131  0014E2                     l2841:
  2132  0014E2  90D8               	bcf	status,0,c
  2133  0014E4  3226               	rrcf	___ftmul@f1+2,f,c
  2134  0014E6  3225               	rrcf	___ftmul@f1+1,f,c
  2135  0014E8  3224               	rrcf	___ftmul@f1,f,c
  2136  0014EA  90D8               	bcf	status,0,c
  2137  0014EC  3627               	rlcf	___ftmul@f2,f,c
  2138  0014EE  3628               	rlcf	___ftmul@f2+1,f,c
  2139  0014F0  3629               	rlcf	___ftmul@f2+2,f,c
  2140  0014F2  2E31               	decfsz	___ftmul@cntr,f,c
  2141  0014F4  D7ED               	goto	l2837
  2142  0014F6  D000               	goto	l2845
  2143  0014F8                     l2845:
  2144  0014F8  0E09               	movlw	9
  2145  0014FA  6E31               	movwf	___ftmul@cntr,c
  2146  0014FC  D000               	goto	l2847
  2147  0014FE                     l2847:
  2148  0014FE  A024               	btfss	___ftmul@f1,0,c
  2149  001500  D007               	goto	l2851
  2150  001502  5027               	movf	___ftmul@f2,w,c
  2151  001504  262E               	addwf	___ftmul@f3_as_product,f,c
  2152  001506  5028               	movf	___ftmul@f2+1,w,c
  2153  001508  222F               	addwfc	___ftmul@f3_as_product+1,f,c
  2154  00150A  5029               	movf	___ftmul@f2+2,w,c
  2155  00150C  2230               	addwfc	___ftmul@f3_as_product+2,f,c
  2156  00150E  D000               	goto	l2851
  2157  001510                     l2851:
  2158  001510  90D8               	bcf	status,0,c
  2159  001512  3226               	rrcf	___ftmul@f1+2,f,c
  2160  001514  3225               	rrcf	___ftmul@f1+1,f,c
  2161  001516  3224               	rrcf	___ftmul@f1,f,c
  2162  001518  90D8               	bcf	status,0,c
  2163  00151A  3230               	rrcf	___ftmul@f3_as_product+2,f,c
  2164  00151C  322F               	rrcf	___ftmul@f3_as_product+1,f,c
  2165  00151E  322E               	rrcf	___ftmul@f3_as_product,f,c
  2166  001520  2E31               	decfsz	___ftmul@cntr,f,c
  2167  001522  D7ED               	goto	l2847
  2168  001524  D000               	goto	l2855
  2169  001526                     l2855:
  2170  001526  C02E  F019         	movff	___ftmul@f3_as_product,___ftpack@arg
  2171  00152A  C02F  F01A         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2172  00152E  C030  F01B         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2173  001532  C02D  F01C         	movff	___ftmul@exp,___ftpack@exp
  2174  001536  C032  F01D         	movff	___ftmul@sign,___ftpack@sign
  2175  00153A  EC0B  F00B         	call	___ftpack	;wreg free
  2176  00153E  C019  F024         	movff	?___ftpack,?___ftmul
  2177  001542  C01A  F025         	movff	?___ftpack+1,?___ftmul+1
  2178  001546  C01B  F026         	movff	?___ftpack+2,?___ftmul+2
  2179  00154A  0012               	return	
  2180  00154C  0012               	return		;funcret
  2181  00154E                     __end_of___ftmul:
  2182                           	opt stack 0
  2183                           tblptru	equ	0xFF8
  2184                           tblptrh	equ	0xFF7
  2185                           tblptrl	equ	0xFF6
  2186                           tablat	equ	0xFF5
  2187                           prodh	equ	0xFF4
  2188                           prodl	equ	0xFF3
  2189                           intcon	equ	0xFF2
  2190                           postinc0	equ	0xFEE
  2191                           wreg	equ	0xFE8
  2192                           indf1	equ	0xFE7
  2193                           fsr1h	equ	0xFE2
  2194                           fsr1l	equ	0xFE1
  2195                           indf2	equ	0xFDF
  2196                           fsr2h	equ	0xFDA
  2197                           fsr2l	equ	0xFD9
  2198                           status	equ	0xFD8
  2199                           
  2200 ;; *************** function ___ftdiv *****************
  2201 ;; Defined at:
  2202 ;;		line 54 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;  f1              3    0[BANK0 ] float 
  2205 ;;  f2              3    3[BANK0 ] float 
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;  f3              3   10[BANK0 ] float 
  2208 ;;  sign            1   14[BANK0 ] unsigned char 
  2209 ;;  exp             1   13[BANK0 ] unsigned char 
  2210 ;;  cntr            1    9[BANK0 ] unsigned char 
  2211 ;; Return value:  Size  Location     Type
  2212 ;;                  3    0[BANK0 ] float 
  2213 ;; Registers used:
  2214 ;;		wreg, status,2, status,0, cstack
  2215 ;; Tracked objects:
  2216 ;;		On entry : 0/0
  2217 ;;		On exit  : 0/0
  2218 ;;		Unchanged: 0/0
  2219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2220 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2221 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2222 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2223 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2224 ;;Total ram usage:       15 bytes
  2225 ;; Hardware stack levels used:    1
  2226 ;; Hardware stack levels required when called:    4
  2227 ;; This function calls:
  2228 ;;		___ftpack
  2229 ;; This function is called by:
  2230 ;;		_Get_ADC6
  2231 ;;		_TM1640_Show_Decimal
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234                           
  2235                           	psect	text14
  2236  0011B4                     __ptext14:
  2237                           	opt stack 0
  2238  0011B4                     ___ftdiv:
  2239                           	opt stack 24
  2240                           
  2241                           ;incstack = 0
  2242  0011B4  C0A4  F0A8         	movff	___ftdiv@f1+2,??___ftdiv
  2243  0011B8  0100               	movlb	0	; () banked
  2244  0011BA  6BA9               	clrf	(??___ftdiv+1)& (0+255),b
  2245  0011BC  6BAA               	clrf	(??___ftdiv+2)& (0+255),b
  2246  0011BE  0100               	movlb	0	; () banked
  2247  0011C0  35A3               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  2248  0011C2  0100               	movlb	0	; () banked
  2249  0011C4  37A8               	rlcf	??___ftdiv& (0+255),f,b
  2250  0011C6  E301               	bnc	u2621
  2251  0011C8  81A9               	bsf	(??___ftdiv+1)& (0+255),0,b
  2252  0011CA                     u2621:
  2253  0011CA  0100               	movlb	0	; () banked
  2254  0011CC  51A8               	movf	??___ftdiv& (0+255),w,b
  2255  0011CE  0100               	movlb	0	; () banked
  2256  0011D0  6FAF               	movwf	___ftdiv@exp& (0+255),b
  2257  0011D2  0100               	movlb	0	; () banked
  2258  0011D4  51AF               	movf	___ftdiv@exp& (0+255),w,b
  2259  0011D6  A4D8               	btfss	status,2,c
  2260  0011D8  D00A               	goto	l2771
  2261                           
  2262                           ; BSR set to: 0
  2263  0011DA  0E00               	movlw	0
  2264  0011DC  0100               	movlb	0	; () banked
  2265  0011DE  6FA2               	movwf	?___ftdiv& (0+255),b
  2266  0011E0  0E00               	movlw	0
  2267  0011E2  0100               	movlb	0	; () banked
  2268  0011E4  6FA3               	movwf	(?___ftdiv+1)& (0+255),b
  2269  0011E6  0E00               	movlw	0
  2270  0011E8  0100               	movlb	0	; () banked
  2271  0011EA  6FA4               	movwf	(?___ftdiv+2)& (0+255),b
  2272                           
  2273                           ; BSR set to: 0
  2274  0011EC  0012               	return	
  2275  0011EE                     l2771:
  2276                           
  2277                           ; BSR set to: 0
  2278  0011EE  C0A7  F0A8         	movff	___ftdiv@f2+2,??___ftdiv
  2279  0011F2  0100               	movlb	0	; () banked
  2280  0011F4  6BA9               	clrf	(??___ftdiv+1)& (0+255),b
  2281  0011F6  6BAA               	clrf	(??___ftdiv+2)& (0+255),b
  2282  0011F8  0100               	movlb	0	; () banked
  2283  0011FA  35A6               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  2284  0011FC  0100               	movlb	0	; () banked
  2285  0011FE  37A8               	rlcf	??___ftdiv& (0+255),f,b
  2286  001200  E301               	bnc	u2641
  2287  001202  81A9               	bsf	(??___ftdiv+1)& (0+255),0,b
  2288  001204                     u2641:
  2289  001204  0100               	movlb	0	; () banked
  2290  001206  51A8               	movf	??___ftdiv& (0+255),w,b
  2291  001208  0100               	movlb	0	; () banked
  2292  00120A  6FB0               	movwf	___ftdiv@sign& (0+255),b
  2293  00120C  0100               	movlb	0	; () banked
  2294  00120E  51B0               	movf	___ftdiv@sign& (0+255),w,b
  2295  001210  A4D8               	btfss	status,2,c
  2296  001212  D00A               	goto	l2777
  2297                           
  2298                           ; BSR set to: 0
  2299  001214  0E00               	movlw	0
  2300  001216  0100               	movlb	0	; () banked
  2301  001218  6FA2               	movwf	?___ftdiv& (0+255),b
  2302  00121A  0E00               	movlw	0
  2303  00121C  0100               	movlb	0	; () banked
  2304  00121E  6FA3               	movwf	(?___ftdiv+1)& (0+255),b
  2305  001220  0E00               	movlw	0
  2306  001222  0100               	movlb	0	; () banked
  2307  001224  6FA4               	movwf	(?___ftdiv+2)& (0+255),b
  2308                           
  2309                           ; BSR set to: 0
  2310  001226  0012               	return	
  2311  001228                     l2777:
  2312                           
  2313                           ; BSR set to: 0
  2314  001228  0E00               	movlw	0
  2315  00122A  0100               	movlb	0	; () banked
  2316  00122C  6FAC               	movwf	___ftdiv@f3& (0+255),b
  2317  00122E  0E00               	movlw	0
  2318  001230  0100               	movlb	0	; () banked
  2319  001232  6FAD               	movwf	(___ftdiv@f3+1)& (0+255),b
  2320  001234  0E00               	movlw	0
  2321  001236  0100               	movlb	0	; () banked
  2322  001238  6FAE               	movwf	(___ftdiv@f3+2)& (0+255),b
  2323                           
  2324                           ; BSR set to: 0
  2325  00123A  0100               	movlb	0	; () banked
  2326  00123C  51B0               	movf	___ftdiv@sign& (0+255),w,b
  2327  00123E  0F89               	addlw	137
  2328  001240  0100               	movlb	0	; () banked
  2329  001242  5FAF               	subwf	___ftdiv@exp& (0+255),f,b
  2330                           
  2331                           ; BSR set to: 0
  2332  001244  C0A4  F0B0         	movff	___ftdiv@f1+2,___ftdiv@sign
  2333                           
  2334                           ; BSR set to: 0
  2335  001248  0100               	movlb	0	; () banked
  2336  00124A  51A7               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2337  00124C  0100               	movlb	0	; () banked
  2338  00124E  1BB0               	xorwf	___ftdiv@sign& (0+255),f,b
  2339                           
  2340                           ; BSR set to: 0
  2341  001250  0E80               	movlw	128
  2342  001252  0100               	movlb	0	; () banked
  2343  001254  17B0               	andwf	___ftdiv@sign& (0+255),f,b
  2344                           
  2345                           ; BSR set to: 0
  2346  001256  0100               	movlb	0	; () banked
  2347  001258  8FA3               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  2348                           
  2349                           ; BSR set to: 0
  2350  00125A  0EFF               	movlw	255
  2351  00125C  0100               	movlb	0	; () banked
  2352  00125E  17A2               	andwf	___ftdiv@f1& (0+255),f,b
  2353  001260  0EFF               	movlw	255
  2354  001262  0100               	movlb	0	; () banked
  2355  001264  17A3               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  2356  001266  0E00               	movlw	0
  2357  001268  0100               	movlb	0	; () banked
  2358  00126A  17A4               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  2359                           
  2360                           ; BSR set to: 0
  2361  00126C  0100               	movlb	0	; () banked
  2362  00126E  8FA6               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  2363                           
  2364                           ; BSR set to: 0
  2365  001270  0EFF               	movlw	255
  2366  001272  0100               	movlb	0	; () banked
  2367  001274  17A5               	andwf	___ftdiv@f2& (0+255),f,b
  2368  001276  0EFF               	movlw	255
  2369  001278  0100               	movlb	0	; () banked
  2370  00127A  17A6               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  2371  00127C  0E00               	movlw	0
  2372  00127E  0100               	movlb	0	; () banked
  2373  001280  17A7               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  2374                           
  2375                           ; BSR set to: 0
  2376  001282  0E18               	movlw	24
  2377  001284  0100               	movlb	0	; () banked
  2378  001286  6FAB               	movwf	___ftdiv@cntr& (0+255),b
  2379  001288  D000               	goto	l2797
  2380  00128A                     l2797:
  2381                           
  2382                           ; BSR set to: 0
  2383  00128A  0100               	movlb	0	; () banked
  2384  00128C  90D8               	bcf	status,0,c
  2385  00128E  37AC               	rlcf	___ftdiv@f3& (0+255),f,b
  2386  001290  37AD               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  2387  001292  37AE               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  2388                           
  2389                           ; BSR set to: 0
  2390  001294  0100               	movlb	0	; () banked
  2391  001296  51A5               	movf	___ftdiv@f2& (0+255),w,b
  2392  001298  0100               	movlb	0	; () banked
  2393  00129A  5DA2               	subwf	___ftdiv@f1& (0+255),w,b
  2394  00129C  0100               	movlb	0	; () banked
  2395  00129E  51A6               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2396  0012A0  0100               	movlb	0	; () banked
  2397  0012A2  59A3               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  2398  0012A4  0100               	movlb	0	; () banked
  2399  0012A6  51A7               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2400  0012A8  0100               	movlb	0	; () banked
  2401  0012AA  59A4               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  2402  0012AC  A0D8               	btfss	status,0,c
  2403  0012AE  D00E               	goto	l873
  2404                           
  2405                           ; BSR set to: 0
  2406  0012B0  0100               	movlb	0	; () banked
  2407  0012B2  51A5               	movf	___ftdiv@f2& (0+255),w,b
  2408  0012B4  0100               	movlb	0	; () banked
  2409  0012B6  5FA2               	subwf	___ftdiv@f1& (0+255),f,b
  2410  0012B8  0100               	movlb	0	; () banked
  2411  0012BA  51A6               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2412  0012BC  0100               	movlb	0	; () banked
  2413  0012BE  5BA3               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  2414  0012C0  0100               	movlb	0	; () banked
  2415  0012C2  51A7               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2416  0012C4  0100               	movlb	0	; () banked
  2417  0012C6  5BA4               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  2418                           
  2419                           ; BSR set to: 0
  2420  0012C8  0100               	movlb	0	; () banked
  2421  0012CA  81AC               	bsf	___ftdiv@f3& (0+255),0,b
  2422  0012CC                     l873:
  2423                           
  2424                           ; BSR set to: 0
  2425  0012CC  0100               	movlb	0	; () banked
  2426  0012CE  90D8               	bcf	status,0,c
  2427  0012D0  37A2               	rlcf	___ftdiv@f1& (0+255),f,b
  2428  0012D2  37A3               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  2429  0012D4  37A4               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  2430                           
  2431                           ; BSR set to: 0
  2432  0012D6  0100               	movlb	0	; () banked
  2433  0012D8  2FAB               	decfsz	___ftdiv@cntr& (0+255),f,b
  2434  0012DA  D7D7               	goto	l2797
  2435  0012DC  D000               	goto	l2807
  2436  0012DE                     l2807:
  2437                           
  2438                           ; BSR set to: 0
  2439  0012DE  C0AC  F019         	movff	___ftdiv@f3,___ftpack@arg
  2440  0012E2  C0AD  F01A         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2441  0012E6  C0AE  F01B         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2442  0012EA  C0AF  F01C         	movff	___ftdiv@exp,___ftpack@exp
  2443  0012EE  C0B0  F01D         	movff	___ftdiv@sign,___ftpack@sign
  2444  0012F2  EC0B  F00B         	call	___ftpack	;wreg free
  2445  0012F6  C019  F0A2         	movff	?___ftpack,?___ftdiv
  2446  0012FA  C01A  F0A3         	movff	?___ftpack+1,?___ftdiv+1
  2447  0012FE  C01B  F0A4         	movff	?___ftpack+2,?___ftdiv+2
  2448  001302  0012               	return	
  2449  001304  0012               	return		;funcret
  2450  001306                     __end_of___ftdiv:
  2451                           	opt stack 0
  2452                           tblptru	equ	0xFF8
  2453                           tblptrh	equ	0xFF7
  2454                           tblptrl	equ	0xFF6
  2455                           tablat	equ	0xFF5
  2456                           prodh	equ	0xFF4
  2457                           prodl	equ	0xFF3
  2458                           intcon	equ	0xFF2
  2459                           postinc0	equ	0xFEE
  2460                           wreg	equ	0xFE8
  2461                           indf1	equ	0xFE7
  2462                           fsr1h	equ	0xFE2
  2463                           fsr1l	equ	0xFE1
  2464                           indf2	equ	0xFDF
  2465                           fsr2h	equ	0xFDA
  2466                           fsr2l	equ	0xFD9
  2467                           status	equ	0xFD8
  2468                           
  2469 ;; *************** function ___ftpack *****************
  2470 ;; Defined at:
  2471 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;  arg             3   24[COMRAM] unsigned um
  2474 ;;  exp             1   27[COMRAM] unsigned char 
  2475 ;;  sign            1   28[COMRAM] unsigned char 
  2476 ;; Auto vars:     Size  Location     Type
  2477 ;;		None
  2478 ;; Return value:  Size  Location     Type
  2479 ;;                  3   24[COMRAM] float 
  2480 ;; Registers used:
  2481 ;;		wreg, status,2, status,0
  2482 ;; Tracked objects:
  2483 ;;		On entry : 0/0
  2484 ;;		On exit  : 0/0
  2485 ;;		Unchanged: 0/0
  2486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2487 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2489 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2490 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2491 ;;Total ram usage:        8 bytes
  2492 ;; Hardware stack levels used:    1
  2493 ;; Hardware stack levels required when called:    3
  2494 ;; This function calls:
  2495 ;;		Nothing
  2496 ;; This function is called by:
  2497 ;;		___ftdiv
  2498 ;;		___ftmul
  2499 ;;		___lwtoft
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           	psect	text15
  2504  001616                     __ptext15:
  2505                           	opt stack 0
  2506  001616                     ___ftpack:
  2507                           	opt stack 24
  2508                           
  2509                           ;incstack = 0
  2510  001616  501C               	movf	___ftpack@exp,w,c
  2511  001618  B4D8               	btfsc	status,2,c
  2512  00161A  D005               	goto	l2707
  2513  00161C  5019               	movf	___ftpack@arg,w,c
  2514  00161E  101A               	iorwf	___ftpack@arg+1,w,c
  2515  001620  101B               	iorwf	___ftpack@arg+2,w,c
  2516  001622  A4D8               	btfss	status,2,c
  2517  001624  D00E               	goto	l2713
  2518  001626                     l2707:
  2519  001626  0E00               	movlw	0
  2520  001628  6E19               	movwf	?___ftpack,c
  2521  00162A  0E00               	movlw	0
  2522  00162C  6E1A               	movwf	?___ftpack+1,c
  2523  00162E  0E00               	movlw	0
  2524  001630  6E1B               	movwf	?___ftpack+2,c
  2525  001632  0012               	return	
  2526  001634  D006               	goto	l2713
  2527  001636                     l2711:
  2528  001636  2A1C               	incf	___ftpack@exp,f,c
  2529  001638  90D8               	bcf	status,0,c
  2530  00163A  321B               	rrcf	___ftpack@arg+2,f,c
  2531  00163C  321A               	rrcf	___ftpack@arg+1,f,c
  2532  00163E  3219               	rrcf	___ftpack@arg,f,c
  2533  001640  D000               	goto	l2713
  2534  001642                     l2713:
  2535  001642  0E00               	movlw	0
  2536  001644  1419               	andwf	___ftpack@arg,w,c
  2537  001646  6E1E               	movwf	??___ftpack& (0+255),c
  2538  001648  0E00               	movlw	0
  2539  00164A  141A               	andwf	___ftpack@arg+1,w,c
  2540  00164C  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  2541  00164E  0EFE               	movlw	254
  2542  001650  141B               	andwf	___ftpack@arg+2,w,c
  2543  001652  6E20               	movwf	(??___ftpack+2)& (0+255),c
  2544  001654  501E               	movf	??___ftpack,w,c
  2545  001656  101F               	iorwf	??___ftpack+1,w,c
  2546  001658  1020               	iorwf	??___ftpack+2,w,c
  2547  00165A  B4D8               	btfsc	status,2,c
  2548  00165C  D00E               	goto	l2719
  2549  00165E  D7EB               	goto	l2711
  2550  001660  D00C               	goto	l2719
  2551  001662                     l2715:
  2552  001662  2A1C               	incf	___ftpack@exp,f,c
  2553  001664  0E01               	movlw	1
  2554  001666  2619               	addwf	___ftpack@arg,f,c
  2555  001668  0E00               	movlw	0
  2556  00166A  221A               	addwfc	___ftpack@arg+1,f,c
  2557  00166C  0E00               	movlw	0
  2558  00166E  221B               	addwfc	___ftpack@arg+2,f,c
  2559  001670  90D8               	bcf	status,0,c
  2560  001672  321B               	rrcf	___ftpack@arg+2,f,c
  2561  001674  321A               	rrcf	___ftpack@arg+1,f,c
  2562  001676  3219               	rrcf	___ftpack@arg,f,c
  2563  001678  D000               	goto	l2719
  2564  00167A                     l2719:
  2565  00167A  0E00               	movlw	0
  2566  00167C  1419               	andwf	___ftpack@arg,w,c
  2567  00167E  6E1E               	movwf	??___ftpack& (0+255),c
  2568  001680  0E00               	movlw	0
  2569  001682  141A               	andwf	___ftpack@arg+1,w,c
  2570  001684  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  2571  001686  0EFF               	movlw	255
  2572  001688  141B               	andwf	___ftpack@arg+2,w,c
  2573  00168A  6E20               	movwf	(??___ftpack+2)& (0+255),c
  2574  00168C  501E               	movf	??___ftpack,w,c
  2575  00168E  101F               	iorwf	??___ftpack+1,w,c
  2576  001690  1020               	iorwf	??___ftpack+2,w,c
  2577  001692  B4D8               	btfsc	status,2,c
  2578  001694  D008               	goto	l2723
  2579  001696  D7E5               	goto	l2715
  2580  001698  D006               	goto	l2723
  2581  00169A                     l2721:
  2582  00169A  061C               	decf	___ftpack@exp,f,c
  2583  00169C  90D8               	bcf	status,0,c
  2584  00169E  3619               	rlcf	___ftpack@arg,f,c
  2585  0016A0  361A               	rlcf	___ftpack@arg+1,f,c
  2586  0016A2  361B               	rlcf	___ftpack@arg+2,f,c
  2587  0016A4  D000               	goto	l2723
  2588  0016A6                     l2723:
  2589  0016A6  BE1A               	btfsc	___ftpack@arg+1,7,c
  2590  0016A8  D004               	goto	l809
  2591  0016AA  0E02               	movlw	2
  2592  0016AC  601C               	cpfslt	___ftpack@exp,c
  2593  0016AE  D7F5               	goto	l2721
  2594  0016B0  D000               	goto	l809
  2595  0016B2                     l809:
  2596  0016B2  B01C               	btfsc	___ftpack@exp,0,c
  2597  0016B4  D002               	goto	l2729
  2598  0016B6  9E1A               	bcf	___ftpack@arg+1,7,c
  2599  0016B8  D000               	goto	l2729
  2600  0016BA                     l2729:
  2601  0016BA  90D8               	bcf	status,0,c
  2602  0016BC  321C               	rrcf	___ftpack@exp,f,c
  2603  0016BE  501C               	movf	___ftpack@exp,w,c
  2604  0016C0  121B               	iorwf	___ftpack@arg+2,f,c
  2605  0016C2  501D               	movf	___ftpack@sign,w,c
  2606  0016C4  B4D8               	btfsc	status,2,c
  2607  0016C6  D002               	goto	l2735
  2608  0016C8  8E1B               	bsf	___ftpack@arg+2,7,c
  2609  0016CA  D000               	goto	l2735
  2610  0016CC                     l2735:
  2611  0016CC  C019  F019         	movff	___ftpack@arg,?___ftpack
  2612  0016D0  C01A  F01A         	movff	___ftpack@arg+1,?___ftpack+1
  2613  0016D4  C01B  F01B         	movff	___ftpack@arg+2,?___ftpack+2
  2614  0016D8  0012               	return	
  2615  0016DA  0012               	return		;funcret
  2616  0016DC                     __end_of___ftpack:
  2617                           	opt stack 0
  2618                           tblptru	equ	0xFF8
  2619                           tblptrh	equ	0xFF7
  2620                           tblptrl	equ	0xFF6
  2621                           tablat	equ	0xFF5
  2622                           prodh	equ	0xFF4
  2623                           prodl	equ	0xFF3
  2624                           intcon	equ	0xFF2
  2625                           postinc0	equ	0xFEE
  2626                           wreg	equ	0xFE8
  2627                           indf1	equ	0xFE7
  2628                           fsr1h	equ	0xFE2
  2629                           fsr1l	equ	0xFE1
  2630                           indf2	equ	0xFDF
  2631                           fsr2h	equ	0xFDA
  2632                           fsr2l	equ	0xFD9
  2633                           status	equ	0xFD8
  2634                           
  2635 ;; *************** function _ReadADC *****************
  2636 ;; Defined at:
  2637 ;;		line 24 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;		None
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;		None
  2642 ;; Return value:  Size  Location     Type
  2643 ;;                  2   24[COMRAM] int 
  2644 ;; Registers used:
  2645 ;;		wreg, status,2
  2646 ;; Tracked objects:
  2647 ;;		On entry : 0/0
  2648 ;;		On exit  : 0/0
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2651 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2653 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2654 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2655 ;;Total ram usage:        4 bytes
  2656 ;; Hardware stack levels used:    1
  2657 ;; Hardware stack levels required when called:    3
  2658 ;; This function calls:
  2659 ;;		Nothing
  2660 ;; This function is called by:
  2661 ;;		_Get_ADC6
  2662 ;; This function uses a non-reentrant model
  2663 ;;
  2664                           
  2665                           	psect	text16
  2666  001E8A                     __ptext16:
  2667                           	opt stack 0
  2668  001E8A                     _ReadADC:
  2669                           	opt stack 25
  2670                           
  2671                           ;incstack = 0
  2672  001E8A  50C4               	movf	4036,w,c	;volatile
  2673  001E8C  6E1B               	movwf	??_ReadADC& (0+255),c
  2674  001E8E  50C3               	movf	4035,w,c	;volatile
  2675  001E90  6E19               	movwf	?_ReadADC,c
  2676  001E92  C01B  F01A         	movff	??_ReadADC,?_ReadADC+1
  2677  001E96  0012               	return	
  2678  001E98  0012               	return		;funcret
  2679  001E9A                     __end_of_ReadADC:
  2680                           	opt stack 0
  2681                           tblptru	equ	0xFF8
  2682                           tblptrh	equ	0xFF7
  2683                           tblptrl	equ	0xFF6
  2684                           tablat	equ	0xFF5
  2685                           prodh	equ	0xFF4
  2686                           prodl	equ	0xFF3
  2687                           intcon	equ	0xFF2
  2688                           postinc0	equ	0xFEE
  2689                           wreg	equ	0xFE8
  2690                           indf1	equ	0xFE7
  2691                           fsr1h	equ	0xFE2
  2692                           fsr1l	equ	0xFE1
  2693                           indf2	equ	0xFDF
  2694                           fsr2h	equ	0xFDA
  2695                           fsr2l	equ	0xFD9
  2696                           status	equ	0xFD8
  2697                           
  2698 ;; *************** function _ConvertADC *****************
  2699 ;; Defined at:
  2700 ;;		line 22 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;		None
  2703 ;; Auto vars:     Size  Location     Type
  2704 ;;		None
  2705 ;; Return value:  Size  Location     Type
  2706 ;;		None               void
  2707 ;; Registers used:
  2708 ;;		None
  2709 ;; Tracked objects:
  2710 ;;		On entry : 0/0
  2711 ;;		On exit  : 0/0
  2712 ;;		Unchanged: 0/0
  2713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2718 ;;Total ram usage:        0 bytes
  2719 ;; Hardware stack levels used:    1
  2720 ;; Hardware stack levels required when called:    3
  2721 ;; This function calls:
  2722 ;;		Nothing
  2723 ;; This function is called by:
  2724 ;;		_Get_ADC6
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728                           	psect	text17
  2729  001EBE                     __ptext17:
  2730                           	opt stack 0
  2731  001EBE                     _ConvertADC:
  2732                           	opt stack 25
  2733                           
  2734                           ;incstack = 0
  2735  001EBE  82C2               	bsf	4034,1,c	;volatile
  2736  001EC0  0012               	return		;funcret
  2737  001EC2                     __end_of_ConvertADC:
  2738                           	opt stack 0
  2739                           tblptru	equ	0xFF8
  2740                           tblptrh	equ	0xFF7
  2741                           tblptrl	equ	0xFF6
  2742                           tablat	equ	0xFF5
  2743                           prodh	equ	0xFF4
  2744                           prodl	equ	0xFF3
  2745                           intcon	equ	0xFF2
  2746                           postinc0	equ	0xFEE
  2747                           wreg	equ	0xFE8
  2748                           indf1	equ	0xFE7
  2749                           fsr1h	equ	0xFE2
  2750                           fsr1l	equ	0xFE1
  2751                           indf2	equ	0xFDF
  2752                           fsr2h	equ	0xFDA
  2753                           fsr2l	equ	0xFD9
  2754                           status	equ	0xFD8
  2755                           
  2756 ;; *************** function _BusyADC *****************
  2757 ;; Defined at:
  2758 ;;		line 26 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  2759 ;; Parameters:    Size  Location     Type
  2760 ;;		None
  2761 ;; Auto vars:     Size  Location     Type
  2762 ;;		None
  2763 ;; Return value:  Size  Location     Type
  2764 ;;                  1    wreg      unsigned char 
  2765 ;; Registers used:
  2766 ;;		wreg
  2767 ;; Tracked objects:
  2768 ;;		On entry : 0/0
  2769 ;;		On exit  : 0/0
  2770 ;;		Unchanged: 0/0
  2771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2776 ;;Total ram usage:        0 bytes
  2777 ;; Hardware stack levels used:    1
  2778 ;; Hardware stack levels required when called:    3
  2779 ;; This function calls:
  2780 ;;		Nothing
  2781 ;; This function is called by:
  2782 ;;		_Get_ADC6
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           
  2786                           	psect	text18
  2787  001E9A                     __ptext18:
  2788                           	opt stack 0
  2789  001E9A                     _BusyADC:
  2790                           	opt stack 25
  2791                           
  2792                           ;incstack = 0
  2793  001E9A  A2C2               	btfss	4034,1,c	;volatile
  2794  001E9C  D002               	goto	u2610
  2795  001E9E  0E01               	movlw	1
  2796  001EA0  0012               	return	
  2797  001EA2                     u2610:
  2798  001EA2  0E00               	movlw	0
  2799  001EA4  0012               	return	
  2800  001EA6  0012               	return		;funcret
  2801  001EA8                     __end_of_BusyADC:
  2802                           	opt stack 0
  2803                           tblptru	equ	0xFF8
  2804                           tblptrh	equ	0xFF7
  2805                           tblptrl	equ	0xFF6
  2806                           tablat	equ	0xFF5
  2807                           prodh	equ	0xFF4
  2808                           prodl	equ	0xFF3
  2809                           intcon	equ	0xFF2
  2810                           postinc0	equ	0xFEE
  2811                           wreg	equ	0xFE8
  2812                           indf1	equ	0xFE7
  2813                           fsr1h	equ	0xFE2
  2814                           fsr1l	equ	0xFE1
  2815                           indf2	equ	0xFDF
  2816                           fsr2h	equ	0xFDA
  2817                           fsr2l	equ	0xFD9
  2818                           status	equ	0xFD8
  2819                           
  2820 ;; *************** function _RS485_Init *****************
  2821 ;; Defined at:
  2822 ;;		line 45 in file "_01_USER/My_USART.c"
  2823 ;; Parameters:    Size  Location     Type
  2824 ;;		None
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;		None
  2827 ;; Return value:  Size  Location     Type
  2828 ;;		None               void
  2829 ;; Registers used:
  2830 ;;		wreg, status,2, status,0, cstack
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2840 ;;Total ram usage:        0 bytes
  2841 ;; Hardware stack levels used:    1
  2842 ;; Hardware stack levels required when called:    4
  2843 ;; This function calls:
  2844 ;;		_Open2USART
  2845 ;; This function is called by:
  2846 ;;		_main
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850                           	psect	text19
  2851  001E40                     __ptext19:
  2852                           	opt stack 0
  2853  001E40                     _RS485_Init:
  2854                           	opt stack 26
  2855                           
  2856                           ;My_USART.c: 47: Open2USART( 0b01111111 &
  2857                           ;My_USART.c: 48: 0b11111111 &
  2858                           ;My_USART.c: 49: 0b11111110 &
  2859                           ;My_USART.c: 50: 0b11111101 &
  2860                           ;My_USART.c: 51: 0b11111111 &
  2861                           ;My_USART.c: 52: 0b11101111
  2862                           ;My_USART.c: 53: ,
  2863                           ;My_USART.c: 54: 12
  2864                           ;My_USART.c: 55: );
  2865                           
  2866                           ;incstack = 0
  2867  001E40  0E00               	movlw	0
  2868  001E42  6E1A               	movwf	Open2USART@spbrg+1,c
  2869  001E44  0E0C               	movlw	12
  2870  001E46  6E19               	movwf	Open2USART@spbrg,c
  2871  001E48  0E6C               	movlw	108
  2872  001E4A  ECFB  F00B         	call	_Open2USART
  2873                           
  2874                           ;My_USART.c: 57: TRISGbits.TRISG1 = 1;
  2875  001E4E  8298               	bsf	3992,1,c	;volatile
  2876                           
  2877                           ;My_USART.c: 58: TRISGbits.TRISG2 = 0;
  2878  001E50  9498               	bcf	3992,2,c	;volatile
  2879                           
  2880                           ;My_USART.c: 59: TRISGbits.TRISG3 = 0;
  2881  001E52  9698               	bcf	3992,3,c	;volatile
  2882                           
  2883                           ;My_USART.c: 60: RG3 = 1;
  2884  001E54  8686               	bsf	3974,3,c	;volatile
  2885                           
  2886                           ;My_USART.c: 61: ANCON2 &= 0XF1;
  2887  001E56  0EF1               	movlw	241
  2888  001E58  010F               	movlb	15	; () banked
  2889  001E5A  1723               	andwf	35,f,b	;volatile
  2890                           
  2891                           ; BSR set to: 15
  2892  001E5C  0012               	return		;funcret
  2893  001E5E                     __end_of_RS485_Init:
  2894                           	opt stack 0
  2895                           tblptru	equ	0xFF8
  2896                           tblptrh	equ	0xFF7
  2897                           tblptrl	equ	0xFF6
  2898                           tablat	equ	0xFF5
  2899                           prodh	equ	0xFF4
  2900                           prodl	equ	0xFF3
  2901                           intcon	equ	0xFF2
  2902                           postinc0	equ	0xFEE
  2903                           wreg	equ	0xFE8
  2904                           indf1	equ	0xFE7
  2905                           fsr1h	equ	0xFE2
  2906                           fsr1l	equ	0xFE1
  2907                           indf2	equ	0xFDF
  2908                           fsr2h	equ	0xFDA
  2909                           fsr2l	equ	0xFD9
  2910                           status	equ	0xFD8
  2911                           
  2912 ;; *************** function _Open2USART *****************
  2913 ;; Defined at:
  2914 ;;		line 118 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u2open.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;  config          1    wreg     unsigned char 
  2917 ;;  spbrg           2   24[COMRAM] unsigned int 
  2918 ;; Auto vars:     Size  Location     Type
  2919 ;;  config          1   26[COMRAM] unsigned char 
  2920 ;; Return value:  Size  Location     Type
  2921 ;;		None               void
  2922 ;; Registers used:
  2923 ;;		wreg, status,2
  2924 ;; Tracked objects:
  2925 ;;		On entry : 0/0
  2926 ;;		On exit  : 0/0
  2927 ;;		Unchanged: 0/0
  2928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2929 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2930 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2932 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2933 ;;Total ram usage:        3 bytes
  2934 ;; Hardware stack levels used:    1
  2935 ;; Hardware stack levels required when called:    3
  2936 ;; This function calls:
  2937 ;;		Nothing
  2938 ;; This function is called by:
  2939 ;;		_RS485_Init
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943                           	psect	text20
  2944  0017F6                     __ptext20:
  2945                           	opt stack 0
  2946  0017F6                     _Open2USART:
  2947                           	opt stack 26
  2948                           
  2949                           ; BSR set to: 15
  2950                           ;incstack = 0
  2951                           ;Open2USART@config stored from wreg
  2952  0017F6  6E1B               	movwf	Open2USART@config,c
  2953  0017F8  0E00               	movlw	0
  2954  0017FA  010F               	movlb	15	; () banked
  2955  0017FC  6F21               	movwf	33,b	;volatile
  2956  0017FE  0E00               	movlw	0
  2957  001800  010F               	movlb	15	; () banked
  2958  001802  6F22               	movwf	34,b	;volatile
  2959                           
  2960                           ; BSR set to: 15
  2961  001804  A01B               	btfss	Open2USART@config,0,c
  2962  001806  D003               	goto	l2869
  2963                           
  2964                           ; BSR set to: 15
  2965  001808  010F               	movlb	15	; () banked
  2966  00180A  8921               	bsf	33,4,b	;volatile
  2967  00180C  D000               	goto	l2869
  2968  00180E                     l2869:
  2969                           
  2970                           ; BSR set to: 15
  2971  00180E  A21B               	btfss	Open2USART@config,1,c
  2972  001810  D005               	goto	l2873
  2973                           
  2974                           ; BSR set to: 15
  2975  001812  010F               	movlb	15	; () banked
  2976  001814  8D21               	bsf	33,6,b	;volatile
  2977  001816  010F               	movlb	15	; () banked
  2978  001818  8D22               	bsf	34,6,b	;volatile
  2979  00181A  D000               	goto	l2873
  2980  00181C                     l2873:
  2981                           
  2982                           ; BSR set to: 15
  2983  00181C  A41B               	btfss	Open2USART@config,2,c
  2984  00181E  D003               	goto	l2877
  2985                           
  2986                           ; BSR set to: 15
  2987  001820  010F               	movlb	15	; () banked
  2988  001822  8F21               	bsf	33,7,b	;volatile
  2989  001824  D000               	goto	l2877
  2990  001826                     l2877:
  2991                           
  2992                           ; BSR set to: 15
  2993  001826  A61B               	btfss	Open2USART@config,3,c
  2994  001828  D003               	goto	l478
  2995                           
  2996                           ; BSR set to: 15
  2997  00182A  010F               	movlb	15	; () banked
  2998  00182C  8922               	bsf	34,4,b	;volatile
  2999  00182E  D003               	goto	l2881
  3000  001830                     l478:
  3001                           
  3002                           ; BSR set to: 15
  3003  001830  010F               	movlb	15	; () banked
  3004  001832  8B22               	bsf	34,5,b	;volatile
  3005  001834  D000               	goto	l2881
  3006  001836                     l2881:
  3007                           
  3008                           ; BSR set to: 15
  3009  001836  A81B               	btfss	Open2USART@config,4,c
  3010  001838  D003               	goto	l480
  3011                           
  3012                           ; BSR set to: 15
  3013  00183A  010F               	movlb	15	; () banked
  3014  00183C  8521               	bsf	33,2,b	;volatile
  3015  00183E  D003               	goto	l2885
  3016  001840                     l480:
  3017                           
  3018                           ; BSR set to: 15
  3019  001840  010F               	movlb	15	; () banked
  3020  001842  9521               	bcf	33,2,b	;volatile
  3021  001844  D000               	goto	l2885
  3022  001846                     l2885:
  3023                           
  3024                           ; BSR set to: 15
  3025  001846  AA1B               	btfss	Open2USART@config,5,c
  3026  001848  D003               	goto	l2889
  3027                           
  3028                           ; BSR set to: 15
  3029  00184A  010F               	movlb	15	; () banked
  3030  00184C  8722               	bsf	34,3,b	;volatile
  3031  00184E  D000               	goto	l2889
  3032  001850                     l2889:
  3033                           
  3034                           ; BSR set to: 15
  3035  001850  AC1B               	btfss	Open2USART@config,6,c
  3036  001852  D002               	goto	l483
  3037                           
  3038                           ; BSR set to: 15
  3039  001854  8AA3               	bsf	4003,5,c	;volatile
  3040  001856  D002               	goto	l2893
  3041  001858                     l483:
  3042                           
  3043                           ; BSR set to: 15
  3044  001858  9AA3               	bcf	4003,5,c	;volatile
  3045  00185A  D000               	goto	l2893
  3046  00185C                     l2893:
  3047                           
  3048                           ; BSR set to: 15
  3049  00185C  AE1B               	btfss	Open2USART@config,7,c
  3050  00185E  D002               	goto	l485
  3051                           
  3052                           ; BSR set to: 15
  3053  001860  88A3               	bsf	4003,4,c	;volatile
  3054  001862  D001               	goto	l486
  3055  001864                     l485:
  3056                           
  3057                           ; BSR set to: 15
  3058  001864  98A3               	bcf	4003,4,c	;volatile
  3059  001866                     l486:
  3060                           
  3061                           ; BSR set to: 15
  3062  001866  C019  FF1E         	movff	Open2USART@spbrg,3870	;volatile
  3063                           
  3064                           ; BSR set to: 15
  3065  00186A  501A               	movf	Open2USART@spbrg+1,w,c
  3066  00186C  010F               	movlb	15	; () banked
  3067  00186E  6F1F               	movwf	31,b	;volatile
  3068                           
  3069                           ; BSR set to: 15
  3070  001870  010F               	movlb	15	; () banked
  3071  001872  8B21               	bsf	33,5,b	;volatile
  3072                           
  3073                           ; BSR set to: 15
  3074  001874  010F               	movlb	15	; () banked
  3075  001876  8F22               	bsf	34,7,b	;volatile
  3076                           
  3077                           ; BSR set to: 15
  3078  001878  0012               	return		;funcret
  3079  00187A                     __end_of_Open2USART:
  3080                           	opt stack 0
  3081                           tblptru	equ	0xFF8
  3082                           tblptrh	equ	0xFF7
  3083                           tblptrl	equ	0xFF6
  3084                           tablat	equ	0xFF5
  3085                           prodh	equ	0xFF4
  3086                           prodl	equ	0xFF3
  3087                           intcon	equ	0xFF2
  3088                           postinc0	equ	0xFEE
  3089                           wreg	equ	0xFE8
  3090                           indf1	equ	0xFE7
  3091                           fsr1h	equ	0xFE2
  3092                           fsr1l	equ	0xFE1
  3093                           indf2	equ	0xFDF
  3094                           fsr2h	equ	0xFDA
  3095                           fsr2l	equ	0xFD9
  3096                           status	equ	0xFD8
  3097                           
  3098 ;; *************** function _Key_Init *****************
  3099 ;; Defined at:
  3100 ;;		line 39 in file "_01_USER/Key.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;		None
  3103 ;; Auto vars:     Size  Location     Type
  3104 ;;		None
  3105 ;; Return value:  Size  Location     Type
  3106 ;;		None               void
  3107 ;; Registers used:
  3108 ;;		wreg, status,2, status,0
  3109 ;; Tracked objects:
  3110 ;;		On entry : 0/0
  3111 ;;		On exit  : 0/0
  3112 ;;		Unchanged: 0/0
  3113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3118 ;;Total ram usage:        0 bytes
  3119 ;; Hardware stack levels used:    1
  3120 ;; Hardware stack levels required when called:    3
  3121 ;; This function calls:
  3122 ;;		Nothing
  3123 ;; This function is called by:
  3124 ;;		_main
  3125 ;; This function uses a non-reentrant model
  3126 ;;
  3127                           
  3128                           	psect	text21
  3129  001EB4                     __ptext21:
  3130                           	opt stack 0
  3131  001EB4                     _Key_Init:
  3132                           	opt stack 27
  3133                           
  3134                           ;Key.c: 41: TRISE |= 0x1e;
  3135                           
  3136                           ; BSR set to: 15
  3137                           ;incstack = 0
  3138  001EB4  0E1E               	movlw	30
  3139  001EB6  1296               	iorwf	3990,f,c	;volatile
  3140                           
  3141                           ;Key.c: 42: TRISD |= 0xc0;
  3142  001EB8  0EC0               	movlw	192
  3143  001EBA  1295               	iorwf	3989,f,c	;volatile
  3144  001EBC  0012               	return		;funcret
  3145  001EBE                     __end_of_Key_Init:
  3146                           	opt stack 0
  3147                           tblptru	equ	0xFF8
  3148                           tblptrh	equ	0xFF7
  3149                           tblptrl	equ	0xFF6
  3150                           tablat	equ	0xFF5
  3151                           prodh	equ	0xFF4
  3152                           prodl	equ	0xFF3
  3153                           intcon	equ	0xFF2
  3154                           postinc0	equ	0xFEE
  3155                           wreg	equ	0xFE8
  3156                           indf1	equ	0xFE7
  3157                           fsr1h	equ	0xFE2
  3158                           fsr1l	equ	0xFE1
  3159                           indf2	equ	0xFDF
  3160                           fsr2h	equ	0xFDA
  3161                           fsr2l	equ	0xFD9
  3162                           status	equ	0xFD8
  3163                           
  3164 ;; *************** function _Init_TM1640 *****************
  3165 ;; Defined at:
  3166 ;;		line 128 in file "_01_USER/TM1640.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;		None
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;		None
  3171 ;; Return value:  Size  Location     Type
  3172 ;;		None               void
  3173 ;; Registers used:
  3174 ;;		wreg, status,2, status,0, cstack
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3184 ;;Total ram usage:        0 bytes
  3185 ;; Hardware stack levels used:    1
  3186 ;; Hardware stack levels required when called:    5
  3187 ;; This function calls:
  3188 ;;		_TM1640_Start
  3189 ;;		_TM1640_Stop
  3190 ;;		_TM1640_Writer_Byte
  3191 ;; This function is called by:
  3192 ;;		_main
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195                           
  3196                           	psect	text22
  3197  001D8C                     __ptext22:
  3198                           	opt stack 0
  3199  001D8C                     _Init_TM1640:
  3200                           	opt stack 25
  3201                           
  3202                           ;TM1640.c: 130: TRISCbits.TRISC3 = 0;
  3203                           
  3204                           ;incstack = 0
  3205  001D8C  9694               	bcf	3988,3,c	;volatile
  3206                           
  3207                           ;TM1640.c: 131: TRISCbits.TRISC4 = 0;
  3208  001D8E  9894               	bcf	3988,4,c	;volatile
  3209                           
  3210                           ;TM1640.c: 132: TM1640_Stop();
  3211  001D90  ECEB  F00E         	call	_TM1640_Stop	;wreg free
  3212                           
  3213                           ;TM1640.c: 134: TM1640_Start();
  3214  001D94  ECFD  F00E         	call	_TM1640_Start	;wreg free
  3215                           
  3216                           ;TM1640.c: 135: TM1640_Writer_Byte(0x44);
  3217  001D98  0E44               	movlw	68
  3218  001D9A  ECCE  F00D         	call	_TM1640_Writer_Byte
  3219                           
  3220                           ;TM1640.c: 136: TM1640_Stop();
  3221  001D9E  ECEB  F00E         	call	_TM1640_Stop	;wreg free
  3222                           
  3223                           ;TM1640.c: 138: TM1640_Start();
  3224  001DA2  ECFD  F00E         	call	_TM1640_Start	;wreg free
  3225                           
  3226                           ;TM1640.c: 139: TM1640_Writer_Byte(0x8F);
  3227  001DA6  0E8F               	movlw	143
  3228  001DA8  ECCE  F00D         	call	_TM1640_Writer_Byte
  3229                           
  3230                           ;TM1640.c: 140: TM1640_Stop();
  3231  001DAC  ECEB  F00E         	call	_TM1640_Stop	;wreg free
  3232  001DB0  0012               	return		;funcret
  3233  001DB2                     __end_of_Init_TM1640:
  3234                           	opt stack 0
  3235                           tblptru	equ	0xFF8
  3236                           tblptrh	equ	0xFF7
  3237                           tblptrl	equ	0xFF6
  3238                           tablat	equ	0xFF5
  3239                           prodh	equ	0xFF4
  3240                           prodl	equ	0xFF3
  3241                           intcon	equ	0xFF2
  3242                           postinc0	equ	0xFEE
  3243                           wreg	equ	0xFE8
  3244                           indf1	equ	0xFE7
  3245                           fsr1h	equ	0xFE2
  3246                           fsr1l	equ	0xFE1
  3247                           indf2	equ	0xFDF
  3248                           fsr2h	equ	0xFDA
  3249                           fsr2l	equ	0xFD9
  3250                           status	equ	0xFD8
  3251                           
  3252 ;; *************** function _TM1640_Writer_Byte *****************
  3253 ;; Defined at:
  3254 ;;		line 86 in file "_01_USER/TM1640.c"
  3255 ;; Parameters:    Size  Location     Type
  3256 ;;  Date            1    wreg     const unsigned char 
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;  Date            1   26[COMRAM] const unsigned char 
  3259 ;;  mask            1   27[COMRAM] unsigned char 
  3260 ;; Return value:  Size  Location     Type
  3261 ;;		None               void
  3262 ;; Registers used:
  3263 ;;		wreg, status,2, status,0, cstack
  3264 ;; Tracked objects:
  3265 ;;		On entry : 0/0
  3266 ;;		On exit  : 0/0
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3270 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3272 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3273 ;;Total ram usage:        2 bytes
  3274 ;; Hardware stack levels used:    1
  3275 ;; Hardware stack levels required when called:    4
  3276 ;; This function calls:
  3277 ;;		_TM1640_Delay
  3278 ;; This function is called by:
  3279 ;;		_TM1640_Writer_Dates
  3280 ;;		_Init_TM1640
  3281 ;;		_Open_Display
  3282 ;;		_Disable_Display
  3283 ;; This function uses a non-reentrant model
  3284 ;;
  3285                           
  3286                           	psect	text23
  3287  001B9C                     __ptext23:
  3288                           	opt stack 0
  3289  001B9C                     _TM1640_Writer_Byte:
  3290                           	opt stack 23
  3291                           
  3292                           ;incstack = 0
  3293                           ;TM1640_Writer_Byte@Date stored from wreg
  3294  001B9C  6E1B               	movwf	TM1640_Writer_Byte@Date,c
  3295                           
  3296                           ;TM1640.c: 88: unsigned char mask;
  3297                           ;TM1640.c: 90: for(mask=0x01; mask; mask<<=1)
  3298  001B9E  0E01               	movlw	1
  3299  001BA0  6E1C               	movwf	TM1640_Writer_Byte@mask,c
  3300  001BA2  D017               	goto	l2695
  3301  001BA4                     l322:
  3302                           
  3303                           ;TM1640.c: 91: {
  3304                           ;TM1640.c: 92: RC3 = 0;
  3305  001BA4  9682               	bcf	3970,3,c	;volatile
  3306                           
  3307                           ;TM1640.c: 93: TM1640_Delay(1);
  3308  001BA6  0E01               	movlw	1
  3309  001BA8  EC2F  F00F         	call	_TM1640_Delay
  3310                           
  3311                           ;TM1640.c: 94: if(mask & Date)
  3312  001BAC  501C               	movf	TM1640_Writer_Byte@mask,w,c
  3313  001BAE  141B               	andwf	TM1640_Writer_Byte@Date,w,c
  3314  001BB0  0900               	iorlw	0
  3315  001BB2  B4D8               	btfsc	status,2,c
  3316  001BB4  D002               	goto	l323
  3317                           
  3318                           ;TM1640.c: 95: RC4 = 1;
  3319  001BB6  8882               	bsf	3970,4,c	;volatile
  3320  001BB8  D002               	goto	l2689
  3321  001BBA                     l323:
  3322                           
  3323                           ;TM1640.c: 96: else
  3324                           ;TM1640.c: 97: RC4 = 0;
  3325  001BBA  9882               	bcf	3970,4,c	;volatile
  3326  001BBC  D000               	goto	l2689
  3327  001BBE                     l2689:
  3328                           
  3329                           ;TM1640.c: 98: TM1640_Delay(1);
  3330  001BBE  0E01               	movlw	1
  3331  001BC0  EC2F  F00F         	call	_TM1640_Delay
  3332                           
  3333                           ;TM1640.c: 99: RC3 = 1;
  3334  001BC4  8682               	bsf	3970,3,c	;volatile
  3335                           
  3336                           ;TM1640.c: 100: TM1640_Delay(1);
  3337  001BC6  0E01               	movlw	1
  3338  001BC8  EC2F  F00F         	call	_TM1640_Delay
  3339  001BCC  90D8               	bcf	status,0,c
  3340  001BCE  361C               	rlcf	TM1640_Writer_Byte@mask,f,c
  3341  001BD0  D000               	goto	l2695
  3342  001BD2                     l2695:
  3343  001BD2  501C               	movf	TM1640_Writer_Byte@mask,w,c
  3344  001BD4  A4D8               	btfss	status,2,c
  3345  001BD6  D7E6               	goto	l322
  3346  001BD8  0012               	return		;funcret
  3347  001BDA                     __end_of_TM1640_Writer_Byte:
  3348                           	opt stack 0
  3349                           tblptru	equ	0xFF8
  3350                           tblptrh	equ	0xFF7
  3351                           tblptrl	equ	0xFF6
  3352                           tablat	equ	0xFF5
  3353                           prodh	equ	0xFF4
  3354                           prodl	equ	0xFF3
  3355                           intcon	equ	0xFF2
  3356                           postinc0	equ	0xFEE
  3357                           wreg	equ	0xFE8
  3358                           indf1	equ	0xFE7
  3359                           fsr1h	equ	0xFE2
  3360                           fsr1l	equ	0xFE1
  3361                           indf2	equ	0xFDF
  3362                           fsr2h	equ	0xFDA
  3363                           fsr2l	equ	0xFD9
  3364                           status	equ	0xFD8
  3365                           
  3366 ;; *************** function _TM1640_Stop *****************
  3367 ;; Defined at:
  3368 ;;		line 32 in file "_01_USER/TM1640.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;		None
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;		None
  3373 ;; Return value:  Size  Location     Type
  3374 ;;		None               void
  3375 ;; Registers used:
  3376 ;;		wreg, status,2, status,0, cstack
  3377 ;; Tracked objects:
  3378 ;;		On entry : 0/0
  3379 ;;		On exit  : 0/0
  3380 ;;		Unchanged: 0/0
  3381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3386 ;;Total ram usage:        0 bytes
  3387 ;; Hardware stack levels used:    1
  3388 ;; Hardware stack levels required when called:    4
  3389 ;; This function calls:
  3390 ;;		_TM1640_Delay
  3391 ;; This function is called by:
  3392 ;;		_TM1640_Writer_Dates
  3393 ;;		_Init_TM1640
  3394 ;;		_Open_Display
  3395 ;;		_Disable_Display
  3396 ;; This function uses a non-reentrant model
  3397 ;;
  3398                           
  3399                           	psect	text24
  3400  001DD6                     __ptext24:
  3401                           	opt stack 0
  3402  001DD6                     _TM1640_Stop:
  3403                           	opt stack 23
  3404                           
  3405                           ;TM1640.c: 34: RC3 = 0;
  3406                           
  3407                           ;incstack = 0
  3408  001DD6  9682               	bcf	3970,3,c	;volatile
  3409                           
  3410                           ;TM1640.c: 35: TM1640_Delay(1);
  3411  001DD8  0E01               	movlw	1
  3412  001DDA  EC2F  F00F         	call	_TM1640_Delay
  3413                           
  3414                           ;TM1640.c: 36: RC4 = 0;
  3415  001DDE  9882               	bcf	3970,4,c	;volatile
  3416                           
  3417                           ;TM1640.c: 37: TM1640_Delay(1);
  3418  001DE0  0E01               	movlw	1
  3419  001DE2  EC2F  F00F         	call	_TM1640_Delay
  3420                           
  3421                           ;TM1640.c: 38: RC3 = 1;
  3422  001DE6  8682               	bsf	3970,3,c	;volatile
  3423                           
  3424                           ;TM1640.c: 39: TM1640_Delay(1);
  3425  001DE8  0E01               	movlw	1
  3426  001DEA  EC2F  F00F         	call	_TM1640_Delay
  3427                           
  3428                           ;TM1640.c: 40: RC4 = 1;
  3429  001DEE  8882               	bsf	3970,4,c	;volatile
  3430                           
  3431                           ;TM1640.c: 41: TM1640_Delay(1);
  3432  001DF0  0E01               	movlw	1
  3433  001DF2  EC2F  F00F         	call	_TM1640_Delay
  3434                           
  3435                           ;TM1640.c: 42: RC3 = 0;
  3436  001DF6  9682               	bcf	3970,3,c	;volatile
  3437  001DF8  0012               	return		;funcret
  3438  001DFA                     __end_of_TM1640_Stop:
  3439                           	opt stack 0
  3440                           tblptru	equ	0xFF8
  3441                           tblptrh	equ	0xFF7
  3442                           tblptrl	equ	0xFF6
  3443                           tablat	equ	0xFF5
  3444                           prodh	equ	0xFF4
  3445                           prodl	equ	0xFF3
  3446                           intcon	equ	0xFF2
  3447                           postinc0	equ	0xFEE
  3448                           wreg	equ	0xFE8
  3449                           indf1	equ	0xFE7
  3450                           fsr1h	equ	0xFE2
  3451                           fsr1l	equ	0xFE1
  3452                           indf2	equ	0xFDF
  3453                           fsr2h	equ	0xFDA
  3454                           fsr2l	equ	0xFD9
  3455                           status	equ	0xFD8
  3456                           
  3457 ;; *************** function _TM1640_Start *****************
  3458 ;; Defined at:
  3459 ;;		line 19 in file "_01_USER/TM1640.c"
  3460 ;; Parameters:    Size  Location     Type
  3461 ;;		None
  3462 ;; Auto vars:     Size  Location     Type
  3463 ;;		None
  3464 ;; Return value:  Size  Location     Type
  3465 ;;		None               void
  3466 ;; Registers used:
  3467 ;;		wreg, status,2, status,0, cstack
  3468 ;; Tracked objects:
  3469 ;;		On entry : 0/0
  3470 ;;		On exit  : 0/0
  3471 ;;		Unchanged: 0/0
  3472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3477 ;;Total ram usage:        0 bytes
  3478 ;; Hardware stack levels used:    1
  3479 ;; Hardware stack levels required when called:    4
  3480 ;; This function calls:
  3481 ;;		_TM1640_Delay
  3482 ;; This function is called by:
  3483 ;;		_TM1640_Writer_Dates
  3484 ;;		_Init_TM1640
  3485 ;;		_Open_Display
  3486 ;;		_Disable_Display
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490                           	psect	text25
  3491  001DFA                     __ptext25:
  3492                           	opt stack 0
  3493  001DFA                     _TM1640_Start:
  3494                           	opt stack 23
  3495                           
  3496                           ;TM1640.c: 21: RC3 = 0;
  3497                           
  3498                           ;incstack = 0
  3499  001DFA  9682               	bcf	3970,3,c	;volatile
  3500                           
  3501                           ;TM1640.c: 22: TM1640_Delay(1);
  3502  001DFC  0E01               	movlw	1
  3503  001DFE  EC2F  F00F         	call	_TM1640_Delay
  3504                           
  3505                           ;TM1640.c: 23: RC4 = 1;
  3506  001E02  8882               	bsf	3970,4,c	;volatile
  3507                           
  3508                           ;TM1640.c: 24: TM1640_Delay(1);
  3509  001E04  0E01               	movlw	1
  3510  001E06  EC2F  F00F         	call	_TM1640_Delay
  3511                           
  3512                           ;TM1640.c: 25: RC3 = 1;
  3513  001E0A  8682               	bsf	3970,3,c	;volatile
  3514                           
  3515                           ;TM1640.c: 26: TM1640_Delay(1);
  3516  001E0C  0E01               	movlw	1
  3517  001E0E  EC2F  F00F         	call	_TM1640_Delay
  3518                           
  3519                           ;TM1640.c: 27: RC4 = 0;
  3520  001E12  9882               	bcf	3970,4,c	;volatile
  3521                           
  3522                           ;TM1640.c: 28: TM1640_Delay(1);
  3523  001E14  0E01               	movlw	1
  3524  001E16  EC2F  F00F         	call	_TM1640_Delay
  3525                           
  3526                           ;TM1640.c: 29: RC3 = 0;
  3527  001E1A  9682               	bcf	3970,3,c	;volatile
  3528  001E1C  0012               	return		;funcret
  3529  001E1E                     __end_of_TM1640_Start:
  3530                           	opt stack 0
  3531                           tblptru	equ	0xFF8
  3532                           tblptrh	equ	0xFF7
  3533                           tblptrl	equ	0xFF6
  3534                           tablat	equ	0xFF5
  3535                           prodh	equ	0xFF4
  3536                           prodl	equ	0xFF3
  3537                           intcon	equ	0xFF2
  3538                           postinc0	equ	0xFEE
  3539                           wreg	equ	0xFE8
  3540                           indf1	equ	0xFE7
  3541                           fsr1h	equ	0xFE2
  3542                           fsr1l	equ	0xFE1
  3543                           indf2	equ	0xFDF
  3544                           fsr2h	equ	0xFDA
  3545                           fsr2l	equ	0xFD9
  3546                           status	equ	0xFD8
  3547                           
  3548 ;; *************** function _TM1640_Delay *****************
  3549 ;; Defined at:
  3550 ;;		line 118 in file "_01_USER/TM1640.c"
  3551 ;; Parameters:    Size  Location     Type
  3552 ;;  Time            1    wreg     unsigned char 
  3553 ;; Auto vars:     Size  Location     Type
  3554 ;;  Time            1   24[COMRAM] unsigned char 
  3555 ;;  i               1   25[COMRAM] unsigned char 
  3556 ;; Return value:  Size  Location     Type
  3557 ;;		None               void
  3558 ;; Registers used:
  3559 ;;		wreg, status,2, status,0
  3560 ;; Tracked objects:
  3561 ;;		On entry : 0/0
  3562 ;;		On exit  : 0/0
  3563 ;;		Unchanged: 0/0
  3564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3566 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3568 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3569 ;;Total ram usage:        2 bytes
  3570 ;; Hardware stack levels used:    1
  3571 ;; Hardware stack levels required when called:    3
  3572 ;; This function calls:
  3573 ;;		Nothing
  3574 ;; This function is called by:
  3575 ;;		_TM1640_Start
  3576 ;;		_TM1640_Stop
  3577 ;;		_TM1640_Writer_Byte
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581                           	psect	text26
  3582  001E5E                     __ptext26:
  3583                           	opt stack 0
  3584  001E5E                     _TM1640_Delay:
  3585                           	opt stack 23
  3586                           
  3587                           ;incstack = 0
  3588                           ;TM1640_Delay@Time stored from wreg
  3589  001E5E  6E19               	movwf	TM1640_Delay@Time,c
  3590  001E60                     
  3591                           ;TM1640.c: 123: {
  3592                           ;TM1640.c: 124: for(i=0; i<10; ++i);
  3593  001E60  0E00               	movlw	0
  3594  001E62  6E1A               	movwf	TM1640_Delay@i,c
  3595  001E64  D002               	goto	l2655
  3596  001E66  D004               	goto	l337
  3597  001E68                     l2653:
  3598  001E68  2A1A               	incf	TM1640_Delay@i,f,c
  3599  001E6A                     l2655:
  3600  001E6A  0E09               	movlw	9
  3601  001E6C  641A               	cpfsgt	TM1640_Delay@i,c
  3602  001E6E  D7FC               	goto	l2653
  3603  001E70                     l337:
  3604                           
  3605                           ;TM1640.c: 125: }while(--Time);
  3606  001E70  2E19               	decfsz	TM1640_Delay@Time,f,c
  3607  001E72  D7F6               	goto	l2647
  3608  001E74  0012               	return	
  3609  001E76  0012               	return		;funcret
  3610  001E78                     __end_of_TM1640_Delay:
  3611                           	opt stack 0
  3612                           tblptru	equ	0xFF8
  3613                           tblptrh	equ	0xFF7
  3614                           tblptrl	equ	0xFF6
  3615                           tablat	equ	0xFF5
  3616                           prodh	equ	0xFF4
  3617                           prodl	equ	0xFF3
  3618                           intcon	equ	0xFF2
  3619                           postinc0	equ	0xFEE
  3620                           wreg	equ	0xFE8
  3621                           indf1	equ	0xFE7
  3622                           fsr1h	equ	0xFE2
  3623                           fsr1l	equ	0xFE1
  3624                           indf2	equ	0xFDF
  3625                           fsr2h	equ	0xFDA
  3626                           fsr2l	equ	0xFD9
  3627                           status	equ	0xFD8
  3628                           
  3629 ;; *************** function _GPIO_Config *****************
  3630 ;; Defined at:
  3631 ;;		line 38 in file "_01_USER/GPIO.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;		None
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;		None
  3636 ;; Return value:  Size  Location     Type
  3637 ;;		None               void
  3638 ;; Registers used:
  3639 ;;		wreg, status,2, status,0
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3649 ;;Total ram usage:        0 bytes
  3650 ;; Hardware stack levels used:    1
  3651 ;; Hardware stack levels required when called:    3
  3652 ;; This function calls:
  3653 ;;		Nothing
  3654 ;; This function is called by:
  3655 ;;		_main
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           	psect	text27
  3660  001EA8                     __ptext27:
  3661                           	opt stack 0
  3662  001EA8                     _GPIO_Config:
  3663                           	opt stack 27
  3664                           
  3665                           ;GPIO.c: 41: TRISE &= 0x1f;
  3666                           
  3667                           ;incstack = 0
  3668  001EA8  0E1F               	movlw	31
  3669  001EAA  1696               	andwf	3990,f,c	;volatile
  3670                           
  3671                           ;GPIO.c: 43: RE5 = 1;
  3672  001EAC  8A84               	bsf	3972,5,c	;volatile
  3673                           
  3674                           ;GPIO.c: 44: RE6 = 1;
  3675  001EAE  8C84               	bsf	3972,6,c	;volatile
  3676                           
  3677                           ;GPIO.c: 45: RE7 = 1;
  3678  001EB0  8E84               	bsf	3972,7,c	;volatile
  3679  001EB2  0012               	return		;funcret
  3680  001EB4                     __end_of_GPIO_Config:
  3681                           	opt stack 0
  3682                           tblptru	equ	0xFF8
  3683                           tblptrh	equ	0xFF7
  3684                           tblptrl	equ	0xFF6
  3685                           tablat	equ	0xFF5
  3686                           prodh	equ	0xFF4
  3687                           prodl	equ	0xFF3
  3688                           intcon	equ	0xFF2
  3689                           postinc0	equ	0xFEE
  3690                           wreg	equ	0xFE8
  3691                           indf1	equ	0xFE7
  3692                           fsr1h	equ	0xFE2
  3693                           fsr1l	equ	0xFE1
  3694                           indf2	equ	0xFDF
  3695                           fsr2h	equ	0xFDA
  3696                           fsr2l	equ	0xFD9
  3697                           status	equ	0xFD8
  3698                           
  3699 ;; *************** function _ADC6_Init *****************
  3700 ;; Defined at:
  3701 ;;		line 37 in file "_01_USER/My_ADC.c"
  3702 ;; Parameters:    Size  Location     Type
  3703 ;;		None
  3704 ;; Auto vars:     Size  Location     Type
  3705 ;;		None
  3706 ;; Return value:  Size  Location     Type
  3707 ;;		None               void
  3708 ;; Registers used:
  3709 ;;		wreg, status,2, status,0, cstack
  3710 ;; Tracked objects:
  3711 ;;		On entry : 0/0
  3712 ;;		On exit  : 0/0
  3713 ;;		Unchanged: 0/0
  3714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3719 ;;Total ram usage:        0 bytes
  3720 ;; Hardware stack levels used:    1
  3721 ;; Hardware stack levels required when called:    4
  3722 ;; This function calls:
  3723 ;;		_OpenADC
  3724 ;; This function is called by:
  3725 ;;		_main
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729                           	psect	text28
  3730  001E78                     __ptext28:
  3731                           	opt stack 0
  3732  001E78                     _ADC6_Init:
  3733                           	opt stack 26
  3734                           
  3735                           ;My_ADC.c: 40: OpenADC(0b11111111 &
  3736                           ;My_ADC.c: 41: 0b11110011 &
  3737                           ;My_ADC.c: 42: 0b10001111
  3738                           ;My_ADC.c: 43: ,
  3739                           ;My_ADC.c: 44: 0b10011011
  3740                           ;My_ADC.c: 45: ,
  3741                           ;My_ADC.c: 46: 0b00111111 &
  3742                           ;My_ADC.c: 47: 0b11111111 &
  3743                           ;My_ADC.c: 48: 0b11110111 &
  3744                           ;My_ADC.c: 49: 0b11111000
  3745                           ;My_ADC.c: 50: );
  3746                           
  3747                           ;incstack = 0
  3748  001E78  0E9B               	movlw	155
  3749  001E7A  6E19               	movwf	OpenADC@config2,c
  3750  001E7C  0E30               	movlw	48
  3751  001E7E  6E1A               	movwf	OpenADC@config3,c
  3752  001E80  0E83               	movlw	131
  3753  001E82  EC5C  F00D         	call	_OpenADC
  3754                           
  3755                           ;My_ADC.c: 52: (PIE1bits.ADIE=0);
  3756  001E86  9C9D               	bcf	3997,6,c	;volatile
  3757  001E88  0012               	return		;funcret
  3758  001E8A                     __end_of_ADC6_Init:
  3759                           	opt stack 0
  3760                           tblptru	equ	0xFF8
  3761                           tblptrh	equ	0xFF7
  3762                           tblptrl	equ	0xFF6
  3763                           tablat	equ	0xFF5
  3764                           prodh	equ	0xFF4
  3765                           prodl	equ	0xFF3
  3766                           intcon	equ	0xFF2
  3767                           postinc0	equ	0xFEE
  3768                           wreg	equ	0xFE8
  3769                           indf1	equ	0xFE7
  3770                           fsr1h	equ	0xFE2
  3771                           fsr1l	equ	0xFE1
  3772                           indf2	equ	0xFDF
  3773                           fsr2h	equ	0xFDA
  3774                           fsr2l	equ	0xFD9
  3775                           status	equ	0xFD8
  3776                           
  3777 ;; *************** function _OpenADC *****************
  3778 ;; Defined at:
  3779 ;;		line 305 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;  config          1    wreg     unsigned char 
  3782 ;;  config2         1   24[COMRAM] unsigned char 
  3783 ;;  config3         1   25[COMRAM] unsigned char 
  3784 ;; Auto vars:     Size  Location     Type
  3785 ;;  config          1   28[COMRAM] unsigned char 
  3786 ;; Return value:  Size  Location     Type
  3787 ;;		None               void
  3788 ;; Registers used:
  3789 ;;		wreg, status,2, status,0
  3790 ;; Tracked objects:
  3791 ;;		On entry : 0/0
  3792 ;;		On exit  : 0/0
  3793 ;;		Unchanged: 0/0
  3794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3795 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3796 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3797 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3798 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3799 ;;Total ram usage:        5 bytes
  3800 ;; Hardware stack levels used:    1
  3801 ;; Hardware stack levels required when called:    3
  3802 ;; This function calls:
  3803 ;;		Nothing
  3804 ;; This function is called by:
  3805 ;;		_ADC6_Init
  3806 ;; This function uses a non-reentrant model
  3807 ;;
  3808                           
  3809                           	psect	text29
  3810  001AB8                     __ptext29:
  3811                           	opt stack 0
  3812  001AB8                     _OpenADC:
  3813                           	opt stack 26
  3814                           
  3815                           ;incstack = 0
  3816                           ;OpenADC@config stored from wreg
  3817  001AB8  6E1D               	movwf	OpenADC@config,c
  3818  001ABA  0E00               	movlw	0
  3819  001ABC  6EC2               	movwf	4034,c	;volatile
  3820  001ABE  0E00               	movlw	0
  3821  001AC0  6EC1               	movwf	4033,c	;volatile
  3822  001AC2  0E00               	movlw	0
  3823  001AC4  6EC0               	movwf	4032,c	;volatile
  3824  001AC6  5019               	movf	OpenADC@config2,w,c
  3825  001AC8  0B7C               	andlw	124
  3826  001ACA  6EC2               	movwf	4034,c	;volatile
  3827  001ACC  C01A  FFC1         	movff	OpenADC@config3,4033	;volatile
  3828  001AD0  C01D  F01B         	movff	OpenADC@config,??_OpenADC
  3829  001AD4  90D8               	bcf	status,0,c
  3830  001AD6  361B               	rlcf	??_OpenADC,f,c
  3831  001AD8  90D8               	bcf	status,0,c
  3832  001ADA  361B               	rlcf	??_OpenADC,f,c
  3833  001ADC  0E38               	movlw	56
  3834  001ADE  161B               	andwf	??_OpenADC,f,c
  3835  001AE0  C01D  F01C         	movff	OpenADC@config,??_OpenADC+1
  3836  001AE4  3A1C               	swapf	??_OpenADC+1,f,c
  3837  001AE6  0E0F               	movlw	15
  3838  001AE8  161C               	andwf	??_OpenADC+1,f,c
  3839  001AEA  0E07               	movlw	7
  3840  001AEC  161C               	andwf	??_OpenADC+1,f,c
  3841  001AEE  501D               	movf	OpenADC@config,w,c
  3842  001AF0  0B80               	andlw	128
  3843  001AF2  101C               	iorwf	??_OpenADC+1,w,c
  3844  001AF4  101B               	iorwf	??_OpenADC,w,c
  3845  001AF6  6EC0               	movwf	4032,c	;volatile
  3846  001AF8  AE19               	btfss	OpenADC@config2,7,c
  3847  001AFA  D003               	goto	l450
  3848  001AFC  9C9E               	bcf	3998,6,c	;volatile
  3849  001AFE  8C9D               	bsf	3997,6,c	;volatile
  3850  001B00  8CF2               	bsf	intcon,6,c	;volatile
  3851  001B02                     l450:
  3852  001B02  80C2               	bsf	4034,0,c	;volatile
  3853  001B04  0012               	return		;funcret
  3854  001B06                     __end_of_OpenADC:
  3855                           	opt stack 0
  3856                           tblptru	equ	0xFF8
  3857                           tblptrh	equ	0xFF7
  3858                           tblptrl	equ	0xFF6
  3859                           tablat	equ	0xFF5
  3860                           prodh	equ	0xFF4
  3861                           prodl	equ	0xFF3
  3862                           intcon	equ	0xFF2
  3863                           postinc0	equ	0xFEE
  3864                           wreg	equ	0xFE8
  3865                           indf1	equ	0xFE7
  3866                           fsr1h	equ	0xFE2
  3867                           fsr1l	equ	0xFE1
  3868                           indf2	equ	0xFDF
  3869                           fsr2h	equ	0xFDA
  3870                           fsr2l	equ	0xFD9
  3871                           status	equ	0xFD8
  3872                           
  3873 ;; *************** function _Sys_Cyc *****************
  3874 ;; Defined at:
  3875 ;;		line 98 in file "_01_USER/My_Timer.c"
  3876 ;; Parameters:    Size  Location     Type
  3877 ;;		None
  3878 ;; Auto vars:     Size  Location     Type
  3879 ;;  _pulse          1   23[COMRAM] unsigned char 
  3880 ;; Return value:  Size  Location     Type
  3881 ;;		None               void
  3882 ;; Registers used:
  3883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3884 ;; Tracked objects:
  3885 ;;		On entry : 0/0
  3886 ;;		On exit  : 0/0
  3887 ;;		Unchanged: 0/0
  3888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3890 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3891 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3892 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3893 ;;Total ram usage:       15 bytes
  3894 ;; Hardware stack levels used:    1
  3895 ;; Hardware stack levels required when called:    2
  3896 ;; This function calls:
  3897 ;;		_Delay_1Khz
  3898 ;;		_Key_FSM_Scan
  3899 ;;		_Manage_Message
  3900 ;;		___llmod
  3901 ;;		i2_SetTimer0
  3902 ;; This function is called by:
  3903 ;;		Interrupt level 2
  3904 ;; This function uses a non-reentrant model
  3905 ;;
  3906                           
  3907                           	psect	intcode
  3908  000008                     __pintcode:
  3909                           	opt stack 0
  3910  000008                     _Sys_Cyc:
  3911                           	opt stack 23
  3912                           
  3913                           ;incstack = 0
  3914  000008  CFFA F00A          	movff	pclath,??_Sys_Cyc
  3915  00000C  CFFB F00B          	movff	pclatu,??_Sys_Cyc+1
  3916  000010  CFE9 F00C          	movff	fsr0l,??_Sys_Cyc+2
  3917  000014  CFEA F00D          	movff	fsr0h,??_Sys_Cyc+3
  3918  000018  CFE1 F00E          	movff	fsr1l,??_Sys_Cyc+4
  3919  00001C  CFE2 F00F          	movff	fsr1h,??_Sys_Cyc+5
  3920  000020  CFD9 F010          	movff	fsr2l,??_Sys_Cyc+6
  3921  000024  CFDA F011          	movff	fsr2h,??_Sys_Cyc+7
  3922  000028  CFF3 F012          	movff	prodl,??_Sys_Cyc+8
  3923  00002C  CFF4 F013          	movff	prodh,??_Sys_Cyc+9
  3924  000030  CFF6 F014          	movff	tblptrl,??_Sys_Cyc+10
  3925  000034  CFF7 F015          	movff	tblptrh,??_Sys_Cyc+11
  3926  000038  CFF8 F016          	movff	tblptru,??_Sys_Cyc+12
  3927  00003C  CFF5 F017          	movff	tablat,??_Sys_Cyc+13
  3928                           
  3929                           ;My_Timer.c: 101: static unsigned char _overturn_1Khz = 0,_overturn_LED = 0;
  3930                           ;My_Timer.c: 102: unsigned char _pulse = 10;
  3931  000040  0E0A               	movlw	10
  3932  000042  6E18               	movwf	Sys_Cyc@_pulse,c
  3933                           
  3934                           ;My_Timer.c: 103: static char _RS485_Receive_Num = 0,RS485_Timer = 0;
  3935                           ;My_Timer.c: 106: if(TMR0IF && TMR0IE)
  3936  000044  B4F2               	btfsc	intcon,2,c	;volatile
  3937  000046  AAF2               	btfss	intcon,5,c	;volatile
  3938  000048  D064               	goto	i2l2611
  3939                           
  3940                           ;My_Timer.c: 107: {
  3941                           ;My_Timer.c: 108: Timer_Cyc = (Timer_Cyc+1) % 100000000;
  3942  00004A  0E01               	movlw	1
  3943  00004C  2437               	addwf	_Timer_Cyc,w,c
  3944  00004E  6E01               	movwf	___llmod@dividend,c
  3945  000050  0E00               	movlw	0
  3946  000052  2038               	addwfc	_Timer_Cyc+1,w,c
  3947  000054  6E02               	movwf	___llmod@dividend+1,c
  3948  000056  0E00               	movlw	0
  3949  000058  2039               	addwfc	_Timer_Cyc+2,w,c
  3950  00005A  6E03               	movwf	___llmod@dividend+2,c
  3951  00005C  0E00               	movlw	0
  3952  00005E  203A               	addwfc	_Timer_Cyc+3,w,c
  3953  000060  6E04               	movwf	___llmod@dividend+3,c
  3954  000062  0E00               	movlw	0
  3955  000064  6E05               	movwf	___llmod@divisor,c
  3956  000066  0EE1               	movlw	225
  3957  000068  6E06               	movwf	___llmod@divisor+1,c
  3958  00006A  0EF5               	movlw	245
  3959  00006C  6E07               	movwf	___llmod@divisor+2,c
  3960  00006E  0E05               	movlw	5
  3961  000070  6E08               	movwf	___llmod@divisor+3,c
  3962  000072  ECB7  F00C         	call	___llmod	;wreg free
  3963  000076  C001  F037         	movff	?___llmod,_Timer_Cyc
  3964  00007A  C002  F038         	movff	?___llmod+1,_Timer_Cyc+1
  3965  00007E  C003  F039         	movff	?___llmod+2,_Timer_Cyc+2
  3966  000082  C004  F03A         	movff	?___llmod+3,_Timer_Cyc+3
  3967                           
  3968                           ;My_Timer.c: 109: if(_RS485_Receive_Num == 0) RS485_Timer --;
  3969  000086  5040               	movf	Sys_Cyc@_RS485_Receive_Num,w,c
  3970  000088  A4D8               	btfss	status,2,c
  3971  00008A  D002               	goto	i2l2583
  3972  00008C  063F               	decf	Sys_Cyc@RS485_Timer,f,c
  3973  00008E  D000               	goto	i2l2583
  3974  000090                     i2l2583:
  3975                           
  3976                           ;My_Timer.c: 111: if( Handle_Switch._1Khz )
  3977  000090  5033               	movf	_Handle_Switch,w,c
  3978  000092  A4D8               	btfss	status,2,c
  3979  000094  D00D               	goto	i2l2595
  3980  000096  D012               	goto	i2l2597
  3981                           
  3982                           ;My_Timer.c: 112: {
  3983                           ;My_Timer.c: 113: while( _pulse-- )
  3984  000098  D00B               	goto	i2l2595
  3985  00009A                     i2l2587:
  3986                           
  3987                           ;My_Timer.c: 114: {
  3988                           ;My_Timer.c: 115: _overturn_1Khz =~ _overturn_1Khz;
  3989  00009A  1E41               	comf	Sys_Cyc@_overturn_1Khz,f,c
  3990                           
  3991                           ;My_Timer.c: 116: if(_overturn_1Khz) PORTEbits.RE7 = 1; else PORTEbits.RE7 = 0;
  3992  00009C  5041               	movf	Sys_Cyc@_overturn_1Khz,w,c
  3993  00009E  B4D8               	btfsc	status,2,c
  3994  0000A0  D002               	goto	i2l262
  3995  0000A2  8E84               	bsf	3972,7,c	;volatile
  3996  0000A4  D002               	goto	i2l2593
  3997  0000A6                     i2l262:
  3998  0000A6  9E84               	bcf	3972,7,c	;volatile
  3999  0000A8  D000               	goto	i2l2593
  4000  0000AA                     i2l2593:
  4001                           
  4002                           ;My_Timer.c: 117: Delay_1Khz();
  4003  0000AA  EC27  F00E         	call	_Delay_1Khz	;wreg free
  4004  0000AE  D000               	goto	i2l2595
  4005  0000B0                     i2l2595:
  4006  0000B0  0618               	decf	Sys_Cyc@_pulse,f,c
  4007  0000B2  2818               	incf	Sys_Cyc@_pulse,w,c
  4008  0000B4  B4D8               	btfsc	status,2,c
  4009  0000B6  D002               	goto	i2l2597
  4010  0000B8  D7F0               	goto	i2l2587
  4011  0000BA  D000               	goto	i2l2597
  4012  0000BC                     i2l2597:
  4013                           
  4014                           ;My_Timer.c: 118: }
  4015                           ;My_Timer.c: 119: }
  4016                           ;My_Timer.c: 122: if( Timer_Cyc%30 == 0 )
  4017  0000BC  C037  F001         	movff	_Timer_Cyc,___llmod@dividend
  4018  0000C0  C038  F002         	movff	_Timer_Cyc+1,___llmod@dividend+1
  4019  0000C4  C039  F003         	movff	_Timer_Cyc+2,___llmod@dividend+2
  4020  0000C8  C03A  F004         	movff	_Timer_Cyc+3,___llmod@dividend+3
  4021  0000CC  0E1E               	movlw	30
  4022  0000CE  6E05               	movwf	___llmod@divisor,c
  4023  0000D0  0E00               	movlw	0
  4024  0000D2  6E06               	movwf	___llmod@divisor+1,c
  4025  0000D4  0E00               	movlw	0
  4026  0000D6  6E07               	movwf	___llmod@divisor+2,c
  4027  0000D8  0E00               	movlw	0
  4028  0000DA  6E08               	movwf	___llmod@divisor+3,c
  4029  0000DC  ECB7  F00C         	call	___llmod	;wreg free
  4030  0000E0  5001               	movf	?___llmod,w,c
  4031  0000E2  1002               	iorwf	?___llmod+1,w,c
  4032  0000E4  1003               	iorwf	?___llmod+2,w,c
  4033  0000E6  1004               	iorwf	?___llmod+3,w,c
  4034  0000E8  A4D8               	btfss	status,2,c
  4035  0000EA  D008               	goto	i2l2605
  4036                           
  4037                           ;My_Timer.c: 123: {
  4038                           ;My_Timer.c: 124: _overturn_LED = ~_overturn_LED;
  4039  0000EC  1E42               	comf	Sys_Cyc@_overturn_LED,f,c
  4040                           
  4041                           ;My_Timer.c: 125: if(_overturn_LED) PORTEbits.RE5=0;
  4042  0000EE  5042               	movf	Sys_Cyc@_overturn_LED,w,c
  4043  0000F0  B4D8               	btfsc	status,2,c
  4044  0000F2  D002               	goto	i2l266
  4045  0000F4  9A84               	bcf	3972,5,c	;volatile
  4046  0000F6  D002               	goto	i2l2605
  4047  0000F8                     i2l266:
  4048                           
  4049                           ;My_Timer.c: 126: else PORTEbits.RE5=1;
  4050  0000F8  8A84               	bsf	3972,5,c	;volatile
  4051  0000FA  D000               	goto	i2l2605
  4052  0000FC                     i2l2605:
  4053                           
  4054                           ;My_Timer.c: 127: }
  4055                           ;My_Timer.c: 130: Key_FSM_Scan();
  4056  0000FC  EC83  F00D         	call	_Key_FSM_Scan	;wreg free
  4057                           
  4058                           ;My_Timer.c: 133: Manage_Message();
  4059  000100  EC83  F009         	call	_Manage_Message	;wreg free
  4060                           
  4061                           ;My_Timer.c: 135: SetTimer0(78);
  4062  000104  0E00               	movlw	0
  4063  000106  6E02               	movwf	i2SetTimer0@_tmr+1,c
  4064  000108  0E4E               	movlw	78
  4065  00010A  6E01               	movwf	i2SetTimer0@_tmr,c
  4066  00010C  EC74  F00E         	call	i2_SetTimer0	;wreg free
  4067  000110  D000               	goto	i2l2611
  4068  000112                     i2l2611:
  4069                           
  4070                           ;My_Timer.c: 136: }
  4071                           ;My_Timer.c: 139: if( RC2IF )
  4072  000112  AAA4               	btfss	4004,5,c	;volatile
  4073  000114  D022               	goto	i2l272
  4074                           
  4075                           ;My_Timer.c: 140: {
  4076                           ;My_Timer.c: 141: if(RS485_Timer == 0 ) _RS485_Receive_Num = 0;
  4077  000116  503F               	movf	Sys_Cyc@RS485_Timer,w,c
  4078  000118  A4D8               	btfss	status,2,c
  4079  00011A  D003               	goto	i2l2617
  4080  00011C  0E00               	movlw	0
  4081  00011E  6E40               	movwf	Sys_Cyc@_RS485_Receive_Num,c
  4082  000120  D000               	goto	i2l2617
  4083  000122                     i2l2617:
  4084                           
  4085                           ;My_Timer.c: 143: RS485_ReceiveBuff[_RS485_Receive_Num] = RCREG2;
  4086  000122  5040               	movf	Sys_Cyc@_RS485_Receive_Num,w,c
  4087  000124  0D01               	mullw	1
  4088  000126  0E60               	movlw	low _RS485_ReceiveBuff
  4089  000128  24F3               	addwf	prodl,w,c
  4090  00012A  6ED9               	movwf	fsr2l,c
  4091  00012C  0E00               	movlw	high _RS485_ReceiveBuff
  4092  00012E  20F4               	addwfc	prodh,w,c
  4093  000130  6EDA               	movwf	fsr2h,c
  4094  000132  CF1D FFDF          	movff	3869,indf2	;volatile
  4095                           
  4096                           ;My_Timer.c: 145: if(RS485_ReceiveBuff[0] == 0xaa) _RS485_Receive_Num++,RS485_Timer = 2;
  4097  000136  0EAA               	movlw	170
  4098  000138  0100               	movlb	0	; () banked
  4099  00013A  1960               	xorwf	_RS485_ReceiveBuff& (0+255),w,b
  4100  00013C  A4D8               	btfss	status,2,c
  4101  00013E  D004               	goto	i2l2625
  4102                           
  4103                           ; BSR set to: 0
  4104  000140  2A40               	incf	Sys_Cyc@_RS485_Receive_Num,f,c
  4105                           
  4106                           ; BSR set to: 0
  4107  000142  0E02               	movlw	2
  4108  000144  6E3F               	movwf	Sys_Cyc@RS485_Timer,c
  4109  000146  D000               	goto	i2l2625
  4110  000148                     i2l2625:
  4111                           
  4112                           ; BSR set to: 0
  4113                           ;My_Timer.c: 147: if( _RS485_Receive_Num == 10 )
  4114  000148  0E0A               	movlw	10
  4115  00014A  1840               	xorwf	Sys_Cyc@_RS485_Receive_Num,w,c
  4116  00014C  A4D8               	btfss	status,2,c
  4117  00014E  D005               	goto	i2l272
  4118                           
  4119                           ; BSR set to: 0
  4120                           ;My_Timer.c: 148: {
  4121                           ;My_Timer.c: 149: RS485_Receive_Flag = 1 ;
  4122  000150  0E01               	movlw	1
  4123  000152  6E45               	movwf	_RS485_Receive_Flag,c
  4124                           
  4125                           ;My_Timer.c: 150: _RS485_Receive_Num = 0;
  4126  000154  0E00               	movlw	0
  4127  000156  6E40               	movwf	Sys_Cyc@_RS485_Receive_Num,c
  4128                           
  4129                           ; BSR set to: 0
  4130  000158  D000               	goto	i2l272
  4131  00015A                     i2l272:
  4132  00015A  C017  FFF5         	movff	??_Sys_Cyc+13,tablat
  4133  00015E  C016  FFF8         	movff	??_Sys_Cyc+12,tblptru
  4134  000162  C015  FFF7         	movff	??_Sys_Cyc+11,tblptrh
  4135  000166  C014  FFF6         	movff	??_Sys_Cyc+10,tblptrl
  4136  00016A  C013  FFF4         	movff	??_Sys_Cyc+9,prodh
  4137  00016E  C012  FFF3         	movff	??_Sys_Cyc+8,prodl
  4138  000172  C011  FFDA         	movff	??_Sys_Cyc+7,fsr2h
  4139  000176  C010  FFD9         	movff	??_Sys_Cyc+6,fsr2l
  4140  00017A  C00F  FFE2         	movff	??_Sys_Cyc+5,fsr1h
  4141  00017E  C00E  FFE1         	movff	??_Sys_Cyc+4,fsr1l
  4142  000182  C00D  FFEA         	movff	??_Sys_Cyc+3,fsr0h
  4143  000186  C00C  FFE9         	movff	??_Sys_Cyc+2,fsr0l
  4144  00018A  C00B  FFFB         	movff	??_Sys_Cyc+1,pclatu
  4145  00018E  C00A  FFFA         	movff	??_Sys_Cyc,pclath
  4146  000192  0011               	retfie		f
  4147  000194                     __end_of_Sys_Cyc:
  4148                           	opt stack 0
  4149                           pclatu	equ	0xFFB
  4150                           pclath	equ	0xFFA
  4151                           tblptru	equ	0xFF8
  4152                           tblptrh	equ	0xFF7
  4153                           tblptrl	equ	0xFF6
  4154                           tablat	equ	0xFF5
  4155                           prodh	equ	0xFF4
  4156                           prodl	equ	0xFF3
  4157                           intcon	equ	0xFF2
  4158                           postinc0	equ	0xFEE
  4159                           fsr0h	equ	0xFEA
  4160                           fsr0l	equ	0xFE9
  4161                           wreg	equ	0xFE8
  4162                           indf1	equ	0xFE7
  4163                           fsr1h	equ	0xFE2
  4164                           fsr1l	equ	0xFE1
  4165                           indf2	equ	0xFDF
  4166                           fsr2h	equ	0xFDA
  4167                           fsr2l	equ	0xFD9
  4168                           status	equ	0xFD8
  4169                           
  4170 ;; *************** function i2_SetTimer0 *****************
  4171 ;; Defined at:
  4172 ;;		line 79 in file "_01_USER/My_Timer.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;  _tmr            2    0[COMRAM] unsigned int 
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;		None
  4177 ;; Return value:  Size  Location     Type
  4178 ;;		None               void
  4179 ;; Registers used:
  4180 ;;		wreg, status,2, status,0
  4181 ;; Tracked objects:
  4182 ;;		On entry : 0/0
  4183 ;;		On exit  : 0/0
  4184 ;;		Unchanged: 0/0
  4185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4186 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4188 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4189 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4190 ;;Total ram usage:        4 bytes
  4191 ;; Hardware stack levels used:    1
  4192 ;; This function calls:
  4193 ;;		Nothing
  4194 ;; This function is called by:
  4195 ;;		_Sys_Cyc
  4196 ;; This function uses a non-reentrant model
  4197 ;;
  4198                           
  4199                           	psect	text31
  4200  001CE8                     __ptext31:
  4201                           	opt stack 0
  4202  001CE8                     i2_SetTimer0:
  4203                           	opt stack 24
  4204                           
  4205                           ;My_Timer.c: 81: if(_tmr > 0xffff) _tmr = 0xffff;
  4206                           
  4207                           ;incstack = 0
  4208  001CE8  D003               	goto	i2l2545
  4209  001CEA  6801               	setf	i2SetTimer0@_tmr,c
  4210  001CEC  6802               	setf	i2SetTimer0@_tmr+1,c
  4211  001CEE  D000               	goto	i2l2545
  4212  001CF0                     i2l2545:
  4213                           
  4214                           ;My_Timer.c: 82: _tmr=0xffff-_tmr;
  4215  001CF0  C001  F003         	movff	i2SetTimer0@_tmr,??i2_SetTimer0
  4216  001CF4  C002  F004         	movff	i2SetTimer0@_tmr+1,??i2_SetTimer0+1
  4217  001CF8  1E03               	comf	??i2_SetTimer0,f,c
  4218  001CFA  1E04               	comf	??i2_SetTimer0+1,f,c
  4219  001CFC  4A03               	infsnz	??i2_SetTimer0,f,c
  4220  001CFE  2A04               	incf	??i2_SetTimer0+1,f,c
  4221  001D00  0EFF               	movlw	255
  4222  001D02  2403               	addwf	??i2_SetTimer0,w,c
  4223  001D04  6E01               	movwf	i2SetTimer0@_tmr,c
  4224  001D06  0EFF               	movlw	255
  4225  001D08  2004               	addwfc	??i2_SetTimer0+1,w,c
  4226  001D0A  6E02               	movwf	i2SetTimer0@_tmr+1,c
  4227                           
  4228                           ;My_Timer.c: 83: TMR0H = _tmr/256;
  4229  001D0C  5002               	movf	i2SetTimer0@_tmr+1,w,c
  4230  001D0E  6ED7               	movwf	4055,c	;volatile
  4231                           
  4232                           ;My_Timer.c: 84: TMR0L = _tmr%256;
  4233  001D10  C001  FFD6         	movff	i2SetTimer0@_tmr,4054	;volatile
  4234                           
  4235                           ;My_Timer.c: 85: TMR0IF = 0;
  4236  001D14  94F2               	bcf	intcon,2,c	;volatile
  4237  001D16  0012               	return		;funcret
  4238  001D18                     __end_ofi2_SetTimer0:
  4239                           	opt stack 0
  4240                           pclatu	equ	0xFFB
  4241                           pclath	equ	0xFFA
  4242                           tblptru	equ	0xFF8
  4243                           tblptrh	equ	0xFF7
  4244                           tblptrl	equ	0xFF6
  4245                           tablat	equ	0xFF5
  4246                           prodh	equ	0xFF4
  4247                           prodl	equ	0xFF3
  4248                           intcon	equ	0xFF2
  4249                           postinc0	equ	0xFEE
  4250                           fsr0h	equ	0xFEA
  4251                           fsr0l	equ	0xFE9
  4252                           wreg	equ	0xFE8
  4253                           indf1	equ	0xFE7
  4254                           fsr1h	equ	0xFE2
  4255                           fsr1l	equ	0xFE1
  4256                           indf2	equ	0xFDF
  4257                           fsr2h	equ	0xFDA
  4258                           fsr2l	equ	0xFD9
  4259                           status	equ	0xFD8
  4260                           
  4261 ;; *************** function ___llmod *****************
  4262 ;; Defined at:
  4263 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  4264 ;; Parameters:    Size  Location     Type
  4265 ;;  dividend        4    0[COMRAM] unsigned long 
  4266 ;;  divisor         4    4[COMRAM] unsigned long 
  4267 ;; Auto vars:     Size  Location     Type
  4268 ;;  counter         1    8[COMRAM] unsigned char 
  4269 ;; Return value:  Size  Location     Type
  4270 ;;                  4    0[COMRAM] unsigned long 
  4271 ;; Registers used:
  4272 ;;		wreg, status,2, status,0
  4273 ;; Tracked objects:
  4274 ;;		On entry : 0/0
  4275 ;;		On exit  : 0/0
  4276 ;;		Unchanged: 0/0
  4277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4278 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4279 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4281 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4282 ;;Total ram usage:        9 bytes
  4283 ;; Hardware stack levels used:    1
  4284 ;; This function calls:
  4285 ;;		Nothing
  4286 ;; This function is called by:
  4287 ;;		_Sys_Cyc
  4288 ;; This function uses a non-reentrant model
  4289 ;;
  4290                           
  4291                           	psect	text32
  4292  00196E                     __ptext32:
  4293                           	opt stack 0
  4294  00196E                     ___llmod:
  4295                           	opt stack 24
  4296                           
  4297                           ;incstack = 0
  4298  00196E  5005               	movf	___llmod@divisor,w,c
  4299  001970  1006               	iorwf	___llmod@divisor+1,w,c
  4300  001972  1007               	iorwf	___llmod@divisor+2,w,c
  4301  001974  1008               	iorwf	___llmod@divisor+3,w,c
  4302  001976  B4D8               	btfsc	status,2,c
  4303  001978  D029               	goto	i2l955
  4304  00197A  0E01               	movlw	1
  4305  00197C  6E09               	movwf	___llmod@counter,c
  4306  00197E  D007               	goto	i2l2531
  4307  001980                     i2l2529:
  4308  001980  90D8               	bcf	status,0,c
  4309  001982  3605               	rlcf	___llmod@divisor,f,c
  4310  001984  3606               	rlcf	___llmod@divisor+1,f,c
  4311  001986  3607               	rlcf	___llmod@divisor+2,f,c
  4312  001988  3608               	rlcf	___llmod@divisor+3,f,c
  4313  00198A  2A09               	incf	___llmod@counter,f,c
  4314  00198C  D000               	goto	i2l2531
  4315  00198E                     i2l2531:
  4316  00198E  BE08               	btfsc	___llmod@divisor+3,7,c
  4317  001990  D002               	goto	i2l2533
  4318  001992  D7F6               	goto	i2l2529
  4319  001994  D000               	goto	i2l2533
  4320  001996                     i2l2533:
  4321  001996  5005               	movf	___llmod@divisor,w,c
  4322  001998  5C01               	subwf	___llmod@dividend,w,c
  4323  00199A  5006               	movf	___llmod@divisor+1,w,c
  4324  00199C  5802               	subwfb	___llmod@dividend+1,w,c
  4325  00199E  5007               	movf	___llmod@divisor+2,w,c
  4326  0019A0  5803               	subwfb	___llmod@dividend+2,w,c
  4327  0019A2  5008               	movf	___llmod@divisor+3,w,c
  4328  0019A4  5804               	subwfb	___llmod@dividend+3,w,c
  4329  0019A6  A0D8               	btfss	status,0,c
  4330  0019A8  D009               	goto	i2l2537
  4331  0019AA  5005               	movf	___llmod@divisor,w,c
  4332  0019AC  5E01               	subwf	___llmod@dividend,f,c
  4333  0019AE  5006               	movf	___llmod@divisor+1,w,c
  4334  0019B0  5A02               	subwfb	___llmod@dividend+1,f,c
  4335  0019B2  5007               	movf	___llmod@divisor+2,w,c
  4336  0019B4  5A03               	subwfb	___llmod@dividend+2,f,c
  4337  0019B6  5008               	movf	___llmod@divisor+3,w,c
  4338  0019B8  5A04               	subwfb	___llmod@dividend+3,f,c
  4339  0019BA  D000               	goto	i2l2537
  4340  0019BC                     i2l2537:
  4341  0019BC  90D8               	bcf	status,0,c
  4342  0019BE  3208               	rrcf	___llmod@divisor+3,f,c
  4343  0019C0  3207               	rrcf	___llmod@divisor+2,f,c
  4344  0019C2  3206               	rrcf	___llmod@divisor+1,f,c
  4345  0019C4  3205               	rrcf	___llmod@divisor,f,c
  4346  0019C6  2E09               	decfsz	___llmod@counter,f,c
  4347  0019C8  D7E6               	goto	i2l2533
  4348  0019CA  D000               	goto	i2l955
  4349  0019CC                     i2l955:
  4350  0019CC  C001  F001         	movff	___llmod@dividend,?___llmod
  4351  0019D0  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  4352  0019D4  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  4353  0019D8  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  4354  0019DC  0012               	return		;funcret
  4355  0019DE                     __end_of___llmod:
  4356                           	opt stack 0
  4357                           pclatu	equ	0xFFB
  4358                           pclath	equ	0xFFA
  4359                           tblptru	equ	0xFF8
  4360                           tblptrh	equ	0xFF7
  4361                           tblptrl	equ	0xFF6
  4362                           tablat	equ	0xFF5
  4363                           prodh	equ	0xFF4
  4364                           prodl	equ	0xFF3
  4365                           intcon	equ	0xFF2
  4366                           postinc0	equ	0xFEE
  4367                           fsr0h	equ	0xFEA
  4368                           fsr0l	equ	0xFE9
  4369                           wreg	equ	0xFE8
  4370                           indf1	equ	0xFE7
  4371                           fsr1h	equ	0xFE2
  4372                           fsr1l	equ	0xFE1
  4373                           indf2	equ	0xFDF
  4374                           fsr2h	equ	0xFDA
  4375                           fsr2l	equ	0xFD9
  4376                           status	equ	0xFD8
  4377                           
  4378 ;; *************** function _Manage_Message *****************
  4379 ;; Defined at:
  4380 ;;		line 50 in file "_01_USER/Run.c"
  4381 ;; Parameters:    Size  Location     Type
  4382 ;;		None
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;  i               1    0        unsigned char 
  4385 ;; Return value:  Size  Location     Type
  4386 ;;		None               void
  4387 ;; Registers used:
  4388 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4398 ;;Total ram usage:        0 bytes
  4399 ;; Hardware stack levels used:    1
  4400 ;; Hardware stack levels required when called:    1
  4401 ;; This function calls:
  4402 ;;		_Key_FSM_Read
  4403 ;;		_Key_FSM_Reset
  4404 ;;		___lbmod
  4405 ;; This function is called by:
  4406 ;;		_Sys_Cyc
  4407 ;; This function uses a non-reentrant model
  4408 ;;
  4409                           
  4410                           	psect	text33
  4411  001306                     __ptext33:
  4412                           	opt stack 0
  4413  001306                     _Manage_Message:
  4414                           	opt stack 23
  4415                           
  4416                           ;Run.c: 52: char i;
  4417                           ;Run.c: 53: Key_FSM_Read();
  4418                           
  4419                           ;incstack = 0
  4420  001306  EC09  F008         	call	_Key_FSM_Read	;wreg free
  4421                           
  4422                           ;Run.c: 55: if ( Local_Key_User.key_group == ((0x01<<1)|(0x01<<3)) && Local_Key_User.key
      +                          _group_state == KEY_short )
  4423  00130A  0E0A               	movlw	10
  4424  00130C  0100               	movlb	0	; () banked
  4425  00130E  197D               	xorwf	(_Local_Key_User+1)& (0+255),w,b	;volatile
  4426  001310  A4D8               	btfss	status,2,c
  4427  001312  D00C               	goto	i2l2457
  4428                           
  4429                           ; BSR set to: 0
  4430  001314  0100               	movlb	0	; () banked
  4431  001316  057E               	decf	(_Local_Key_User+2)& (0+255),w,b	;volatile
  4432  001318  A4D8               	btfss	status,2,c
  4433  00131A  D008               	goto	i2l2457
  4434                           
  4435                           ; BSR set to: 0
  4436                           ;Run.c: 56: {
  4437                           ;Run.c: 57: Handle_Switch.Show_Send_Receive = ~Handle_Switch.Show_Send_Receive ;
  4438  00131C  5036               	movf	_Handle_Switch+3,w,c
  4439  00131E  0AFF               	xorlw	255
  4440  001320  6E36               	movwf	_Handle_Switch+3,c
  4441                           
  4442                           ; BSR set to: 0
  4443                           ;Run.c: 58: Key_FSM_Reset(); Receive_Flag =1;
  4444  001322  ECA9  F00D         	call	_Key_FSM_Reset	;wreg free
  4445  001326  0E01               	movlw	1
  4446  001328  6E46               	movwf	_Receive_Flag,c
  4447  00132A  D000               	goto	i2l2457
  4448  00132C                     i2l2457:
  4449                           
  4450                           ;Run.c: 59: }
  4451                           ;Run.c: 62: if ( Local_Key_User.key_group == ((0x01<<0)|(0x01<<3)) && Local_Key_User.key
      +                          _group_state == KEY_short )
  4452  00132C  0E09               	movlw	9
  4453  00132E  0100               	movlb	0	; () banked
  4454  001330  197D               	xorwf	(_Local_Key_User+1)& (0+255),w,b	;volatile
  4455  001332  A4D8               	btfss	status,2,c
  4456  001334  D008               	goto	i2l2465
  4457                           
  4458                           ; BSR set to: 0
  4459  001336  0100               	movlb	0	; () banked
  4460  001338  057E               	decf	(_Local_Key_User+2)& (0+255),w,b	;volatile
  4461  00133A  A4D8               	btfss	status,2,c
  4462  00133C  D004               	goto	i2l2465
  4463                           
  4464                           ; BSR set to: 0
  4465                           ;Run.c: 63: { g_Addr++; Key_FSM_Reset();}
  4466  00133E  2A47               	incf	_g_Addr,f,c
  4467                           
  4468                           ; BSR set to: 0
  4469  001340  ECA9  F00D         	call	_Key_FSM_Reset	;wreg free
  4470  001344  D000               	goto	i2l2465
  4471  001346                     i2l2465:
  4472                           
  4473                           ;Run.c: 66: if ( Local_Key_User.key_group == ((0x01<<0)|(0x01<<1)) && Local_Key_User.key
      +                          _group_state == KEY_short )
  4474  001346  0E03               	movlw	3
  4475  001348  0100               	movlb	0	; () banked
  4476  00134A  197D               	xorwf	(_Local_Key_User+1)& (0+255),w,b	;volatile
  4477  00134C  A4D8               	btfss	status,2,c
  4478  00134E  D008               	goto	i2l2473
  4479                           
  4480                           ; BSR set to: 0
  4481  001350  0100               	movlb	0	; () banked
  4482  001352  057E               	decf	(_Local_Key_User+2)& (0+255),w,b	;volatile
  4483  001354  A4D8               	btfss	status,2,c
  4484  001356  D004               	goto	i2l2473
  4485                           
  4486                           ; BSR set to: 0
  4487                           ;Run.c: 67: { g_Addr--; Key_FSM_Reset();}
  4488  001358  0647               	decf	_g_Addr,f,c
  4489                           
  4490                           ; BSR set to: 0
  4491  00135A  ECA9  F00D         	call	_Key_FSM_Reset	;wreg free
  4492  00135E  D000               	goto	i2l2473
  4493  001360                     i2l2473:
  4494                           
  4495                           ;Run.c: 70: if (Local_Key_User.key_state[5-1] == KEY_short) RS485_Num ++ ;
  4496  001360  0100               	movlb	0	; () banked
  4497  001362  058D               	decf	(_Local_Key_User+17)& (0+255),w,b	;volatile
  4498  001364  A4D8               	btfss	status,2,c
  4499  001366  D002               	goto	i2l2477
  4500                           
  4501                           ; BSR set to: 0
  4502  001368  2A44               	incf	_RS485_Num,f,c
  4503  00136A  D000               	goto	i2l2477
  4504  00136C                     i2l2477:
  4505                           
  4506                           ; BSR set to: 0
  4507                           ;Run.c: 71: if (Local_Key_User.key_state[5-1] == KEY_hold) RS485_Num ++ ;
  4508  00136C  0E03               	movlw	3
  4509  00136E  0100               	movlb	0	; () banked
  4510  001370  198D               	xorwf	(_Local_Key_User+17)& (0+255),w,b	;volatile
  4511  001372  A4D8               	btfss	status,2,c
  4512  001374  D002               	goto	i2l2481
  4513                           
  4514                           ; BSR set to: 0
  4515  001376  2A44               	incf	_RS485_Num,f,c
  4516  001378  D000               	goto	i2l2481
  4517  00137A                     i2l2481:
  4518                           
  4519                           ; BSR set to: 0
  4520                           ;Run.c: 74: if (Local_Key_User.key_state[3-1] == KEY_short) RS485_Num -- ;
  4521  00137A  0100               	movlb	0	; () banked
  4522  00137C  058B               	decf	(_Local_Key_User+15)& (0+255),w,b	;volatile
  4523  00137E  A4D8               	btfss	status,2,c
  4524  001380  D002               	goto	i2l2485
  4525                           
  4526                           ; BSR set to: 0
  4527  001382  0644               	decf	_RS485_Num,f,c
  4528  001384  D000               	goto	i2l2485
  4529  001386                     i2l2485:
  4530                           
  4531                           ; BSR set to: 0
  4532                           ;Run.c: 75: if (Local_Key_User.key_state[3-1] == KEY_hold) RS485_Num -- ;
  4533  001386  0E03               	movlw	3
  4534  001388  0100               	movlb	0	; () banked
  4535  00138A  198B               	xorwf	(_Local_Key_User+15)& (0+255),w,b	;volatile
  4536  00138C  A4D8               	btfss	status,2,c
  4537  00138E  D002               	goto	i2l2489
  4538                           
  4539                           ; BSR set to: 0
  4540  001390  0644               	decf	_RS485_Num,f,c
  4541  001392  D000               	goto	i2l2489
  4542  001394                     i2l2489:
  4543                           
  4544                           ; BSR set to: 0
  4545                           ;Run.c: 77: if( RS485_Num > 250 ) RS485_Num = 10 - 1;
  4546  001394  0EFA               	movlw	250
  4547  001396  6444               	cpfsgt	_RS485_Num,c
  4548  001398  D002               	goto	i2l2493
  4549                           
  4550                           ; BSR set to: 0
  4551  00139A  0E09               	movlw	9
  4552  00139C  D005               	goto	L2
  4553  00139E                     i2l2493:
  4554                           
  4555                           ; BSR set to: 0
  4556                           ;Run.c: 78: else RS485_Num %= 10;
  4557  00139E  0E0A               	movlw	10
  4558  0013A0  6E01               	movwf	___lbmod@divisor,c
  4559  0013A2  5044               	movf	_RS485_Num,w,c
  4560  0013A4  EC43  F00E         	call	___lbmod
  4561  0013A8                     L2:
  4562  0013A8  6E44               	movwf	_RS485_Num,c
  4563  0013AA  D000               	goto	i2l2495
  4564  0013AC                     i2l2495:
  4565                           
  4566                           ;Run.c: 81: if (Local_Key_User.key_state[4-1] == KEY_short) RS485_SendBuff[RS485_Num] ++
      +                           ;
  4567  0013AC  0100               	movlb	0	; () banked
  4568  0013AE  058C               	decf	(_Local_Key_User+16)& (0+255),w,b	;volatile
  4569  0013B0  A4D8               	btfss	status,2,c
  4570  0013B2  D00A               	goto	i2l2499
  4571                           
  4572                           ; BSR set to: 0
  4573  0013B4  5044               	movf	_RS485_Num,w,c
  4574  0013B6  0D01               	mullw	1
  4575  0013B8  0E8E               	movlw	low _RS485_SendBuff
  4576  0013BA  24F3               	addwf	prodl,w,c
  4577  0013BC  6ED9               	movwf	fsr2l,c
  4578  0013BE  0E00               	movlw	high _RS485_SendBuff
  4579  0013C0  20F4               	addwfc	prodh,w,c
  4580  0013C2  6EDA               	movwf	fsr2h,c
  4581  0013C4  2ADF               	incf	indf2,f,c
  4582  0013C6  D000               	goto	i2l2499
  4583  0013C8                     i2l2499:
  4584                           
  4585                           ; BSR set to: 0
  4586                           ;Run.c: 82: if (Local_Key_User.key_state[4-1] == KEY_hold) RS485_SendBuff[RS485_Num] ++ 
      +                          ;
  4587  0013C8  0E03               	movlw	3
  4588  0013CA  0100               	movlb	0	; () banked
  4589  0013CC  198C               	xorwf	(_Local_Key_User+16)& (0+255),w,b	;volatile
  4590  0013CE  A4D8               	btfss	status,2,c
  4591  0013D0  D00A               	goto	i2l2503
  4592                           
  4593                           ; BSR set to: 0
  4594  0013D2  5044               	movf	_RS485_Num,w,c
  4595  0013D4  0D01               	mullw	1
  4596  0013D6  0E8E               	movlw	low _RS485_SendBuff
  4597  0013D8  24F3               	addwf	prodl,w,c
  4598  0013DA  6ED9               	movwf	fsr2l,c
  4599  0013DC  0E00               	movlw	high _RS485_SendBuff
  4600  0013DE  20F4               	addwfc	prodh,w,c
  4601  0013E0  6EDA               	movwf	fsr2h,c
  4602  0013E2  2ADF               	incf	indf2,f,c
  4603  0013E4  D000               	goto	i2l2503
  4604  0013E6                     i2l2503:
  4605                           
  4606                           ; BSR set to: 0
  4607                           ;Run.c: 85: if (Local_Key_User.key_state[2-1] == KEY_short) RS485_SendBuff[RS485_Num] --
      +                           ;
  4608  0013E6  0100               	movlb	0	; () banked
  4609  0013E8  058A               	decf	(_Local_Key_User+14)& (0+255),w,b	;volatile
  4610  0013EA  A4D8               	btfss	status,2,c
  4611  0013EC  D00A               	goto	i2l2507
  4612                           
  4613                           ; BSR set to: 0
  4614  0013EE  5044               	movf	_RS485_Num,w,c
  4615  0013F0  0D01               	mullw	1
  4616  0013F2  0E8E               	movlw	low _RS485_SendBuff
  4617  0013F4  24F3               	addwf	prodl,w,c
  4618  0013F6  6ED9               	movwf	fsr2l,c
  4619  0013F8  0E00               	movlw	high _RS485_SendBuff
  4620  0013FA  20F4               	addwfc	prodh,w,c
  4621  0013FC  6EDA               	movwf	fsr2h,c
  4622  0013FE  06DF               	decf	indf2,f,c
  4623  001400  D000               	goto	i2l2507
  4624  001402                     i2l2507:
  4625                           
  4626                           ; BSR set to: 0
  4627                           ;Run.c: 86: if (Local_Key_User.key_state[2-1] == KEY_hold) RS485_SendBuff[RS485_Num] -- 
      +                          ;
  4628  001402  0E03               	movlw	3
  4629  001404  0100               	movlb	0	; () banked
  4630  001406  198A               	xorwf	(_Local_Key_User+14)& (0+255),w,b	;volatile
  4631  001408  A4D8               	btfss	status,2,c
  4632  00140A  D00A               	goto	i2l2511
  4633                           
  4634                           ; BSR set to: 0
  4635  00140C  5044               	movf	_RS485_Num,w,c
  4636  00140E  0D01               	mullw	1
  4637  001410  0E8E               	movlw	low _RS485_SendBuff
  4638  001412  24F3               	addwf	prodl,w,c
  4639  001414  6ED9               	movwf	fsr2l,c
  4640  001416  0E00               	movlw	high _RS485_SendBuff
  4641  001418  20F4               	addwfc	prodh,w,c
  4642  00141A  6EDA               	movwf	fsr2h,c
  4643  00141C  06DF               	decf	indf2,f,c
  4644  00141E  D000               	goto	i2l2511
  4645  001420                     i2l2511:
  4646                           
  4647                           ; BSR set to: 0
  4648                           ;Run.c: 91: if (Local_Key_User.key_state[1-1] == KEY_short) Handle_Switch.Usart_OneDate 
      +                          = 1 ;
  4649  001420  0100               	movlb	0	; () banked
  4650  001422  0589               	decf	(_Local_Key_User+13)& (0+255),w,b	;volatile
  4651  001424  A4D8               	btfss	status,2,c
  4652  001426  D003               	goto	i2l2515
  4653                           
  4654                           ; BSR set to: 0
  4655  001428  0E01               	movlw	1
  4656  00142A  6E35               	movwf	_Handle_Switch+2,c
  4657  00142C  D000               	goto	i2l2515
  4658  00142E                     i2l2515:
  4659                           
  4660                           ; BSR set to: 0
  4661                           ;Run.c: 93: if( g_Addr > 6 ) g_Addr = 4;
  4662  00142E  0E06               	movlw	6
  4663  001430  6447               	cpfsgt	_g_Addr,c
  4664  001432  D003               	goto	i2l2519
  4665                           
  4666                           ; BSR set to: 0
  4667  001434  0E04               	movlw	4
  4668  001436  6E47               	movwf	_g_Addr,c
  4669  001438  D000               	goto	i2l2519
  4670  00143A                     i2l2519:
  4671                           
  4672                           ; BSR set to: 0
  4673                           ;Run.c: 94: if( g_Addr < 4 ) g_Addr = 6;
  4674  00143A  0E04               	movlw	4
  4675  00143C  6047               	cpfslt	_g_Addr,c
  4676  00143E  D003               	goto	i2l2523
  4677                           
  4678                           ; BSR set to: 0
  4679  001440  0E06               	movlw	6
  4680  001442  6E47               	movwf	_g_Addr,c
  4681  001444  D000               	goto	i2l2523
  4682  001446                     i2l2523:
  4683                           
  4684                           ; BSR set to: 0
  4685                           ;Run.c: 96: Key_FSM_Reset();
  4686  001446  ECA9  F00D         	call	_Key_FSM_Reset	;wreg free
  4687  00144A  0012               	return		;funcret
  4688  00144C                     __end_of_Manage_Message:
  4689                           	opt stack 0
  4690                           pclatu	equ	0xFFB
  4691                           pclath	equ	0xFFA
  4692                           tblptru	equ	0xFF8
  4693                           tblptrh	equ	0xFF7
  4694                           tblptrl	equ	0xFF6
  4695                           tablat	equ	0xFF5
  4696                           prodh	equ	0xFF4
  4697                           prodl	equ	0xFF3
  4698                           intcon	equ	0xFF2
  4699                           postinc0	equ	0xFEE
  4700                           fsr0h	equ	0xFEA
  4701                           fsr0l	equ	0xFE9
  4702                           wreg	equ	0xFE8
  4703                           indf1	equ	0xFE7
  4704                           fsr1h	equ	0xFE2
  4705                           fsr1l	equ	0xFE1
  4706                           indf2	equ	0xFDF
  4707                           fsr2h	equ	0xFDA
  4708                           fsr2l	equ	0xFD9
  4709                           status	equ	0xFD8
  4710                           
  4711 ;; *************** function ___lbmod *****************
  4712 ;; Defined at:
  4713 ;;		line 4 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbmod.c"
  4714 ;; Parameters:    Size  Location     Type
  4715 ;;  dividend        1    wreg     unsigned char 
  4716 ;;  divisor         1    0[COMRAM] unsigned char 
  4717 ;; Auto vars:     Size  Location     Type
  4718 ;;  dividend        1    1[COMRAM] unsigned char 
  4719 ;;  rem             1    3[COMRAM] unsigned char 
  4720 ;;  counter         1    2[COMRAM] unsigned char 
  4721 ;; Return value:  Size  Location     Type
  4722 ;;                  1    wreg      unsigned char 
  4723 ;; Registers used:
  4724 ;;		wreg, status,2, status,0
  4725 ;; Tracked objects:
  4726 ;;		On entry : 0/0
  4727 ;;		On exit  : 0/0
  4728 ;;		Unchanged: 0/0
  4729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4730 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4731 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4733 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4734 ;;Total ram usage:        4 bytes
  4735 ;; Hardware stack levels used:    1
  4736 ;; This function calls:
  4737 ;;		Nothing
  4738 ;; This function is called by:
  4739 ;;		_Manage_Message
  4740 ;; This function uses a non-reentrant model
  4741 ;;
  4742                           
  4743                           	psect	text34
  4744  001C86                     __ptext34:
  4745                           	opt stack 0
  4746  001C86                     ___lbmod:
  4747                           	opt stack 23
  4748                           
  4749                           ;incstack = 0
  4750                           ;___lbmod@dividend stored from wreg
  4751  001C86  6E02               	movwf	___lbmod@dividend,c
  4752  001C88  0E08               	movlw	8
  4753  001C8A  6E03               	movwf	___lbmod@counter,c
  4754  001C8C  0E00               	movlw	0
  4755  001C8E  6E04               	movwf	___lbmod@rem,c
  4756  001C90  D000               	goto	i2l2319
  4757  001C92                     i2l2319:
  4758  001C92  90D8               	bcf	status,0,c
  4759  001C94  3402               	rlcf	___lbmod@dividend,w,c
  4760  001C96  3404               	rlcf	___lbmod@rem,w,c
  4761  001C98  6E04               	movwf	___lbmod@rem,c
  4762  001C9A  90D8               	bcf	status,0,c
  4763  001C9C  3602               	rlcf	___lbmod@dividend,f,c
  4764  001C9E  5001               	movf	___lbmod@divisor,w,c
  4765  001CA0  5C04               	subwf	___lbmod@rem,w,c
  4766  001CA2  A0D8               	btfss	status,0,c
  4767  001CA4  D003               	goto	i2l2327
  4768  001CA6  5001               	movf	___lbmod@divisor,w,c
  4769  001CA8  5E04               	subwf	___lbmod@rem,f,c
  4770  001CAA  D000               	goto	i2l2327
  4771  001CAC                     i2l2327:
  4772  001CAC  2E03               	decfsz	___lbmod@counter,f,c
  4773  001CAE  D7F1               	goto	i2l2319
  4774  001CB0  D000               	goto	i2l2329
  4775  001CB2                     i2l2329:
  4776  001CB2  5004               	movf	___lbmod@rem,w,c
  4777  001CB4  0012               	return	
  4778  001CB6  0012               	return		;funcret
  4779  001CB8                     __end_of___lbmod:
  4780                           	opt stack 0
  4781                           pclatu	equ	0xFFB
  4782                           pclath	equ	0xFFA
  4783                           tblptru	equ	0xFF8
  4784                           tblptrh	equ	0xFF7
  4785                           tblptrl	equ	0xFF6
  4786                           tablat	equ	0xFF5
  4787                           prodh	equ	0xFF4
  4788                           prodl	equ	0xFF3
  4789                           intcon	equ	0xFF2
  4790                           postinc0	equ	0xFEE
  4791                           fsr0h	equ	0xFEA
  4792                           fsr0l	equ	0xFE9
  4793                           wreg	equ	0xFE8
  4794                           indf1	equ	0xFE7
  4795                           fsr1h	equ	0xFE2
  4796                           fsr1l	equ	0xFE1
  4797                           indf2	equ	0xFDF
  4798                           fsr2h	equ	0xFDA
  4799                           fsr2l	equ	0xFD9
  4800                           status	equ	0xFD8
  4801                           
  4802 ;; *************** function _Key_FSM_Reset *****************
  4803 ;; Defined at:
  4804 ;;		line 148 in file "_01_USER/Key.c"
  4805 ;; Parameters:    Size  Location     Type
  4806 ;;		None
  4807 ;; Auto vars:     Size  Location     Type
  4808 ;;  t               1    0[COMRAM] unsigned char 
  4809 ;; Return value:  Size  Location     Type
  4810 ;;		None               void
  4811 ;; Registers used:
  4812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4813 ;; Tracked objects:
  4814 ;;		On entry : 0/0
  4815 ;;		On exit  : 0/0
  4816 ;;		Unchanged: 0/0
  4817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4819 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4821 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4822 ;;Total ram usage:        1 bytes
  4823 ;; Hardware stack levels used:    1
  4824 ;; This function calls:
  4825 ;;		Nothing
  4826 ;; This function is called by:
  4827 ;;		_Manage_Message
  4828 ;; This function uses a non-reentrant model
  4829 ;;
  4830                           
  4831                           	psect	text35
  4832  001B52                     __ptext35:
  4833                           	opt stack 0
  4834  001B52                     _Key_FSM_Reset:
  4835                           	opt stack 23
  4836                           
  4837                           ;Key.c: 150: unsigned char t;
  4838                           ;Key.c: 151: Local_Key_User.key_BUS = 0x00;
  4839                           
  4840                           ;incstack = 0
  4841  001B52  0E00               	movlw	0
  4842  001B54  0100               	movlb	0	; () banked
  4843  001B56  6F7C               	movwf	_Local_Key_User& (0+255),b	;volatile
  4844                           
  4845                           ;Key.c: 152: Local_Key_User.key_group = KEY_default;
  4846  001B58  0E00               	movlw	0
  4847  001B5A  0100               	movlb	0	; () banked
  4848  001B5C  6F7D               	movwf	(_Local_Key_User+1)& (0+255),b	;volatile
  4849                           
  4850                           ;Key.c: 153: t=4;
  4851  001B5E  0E04               	movlw	4
  4852  001B60  6E01               	movwf	Key_FSM_Reset@t,c
  4853                           
  4854                           ;Key.c: 154: while(t--) Local_Key_User.key_count[t] = 0,
  4855  001B62  D017               	goto	i2l2187
  4856  001B64                     i2l2185:
  4857                           
  4858                           ;Key.c: 155: Local_Key_User.key_state[t] = KEY_default;
  4859  001B64  5001               	movf	Key_FSM_Reset@t,w,c
  4860  001B66  0D02               	mullw	2
  4861  001B68  0E7F               	movlw	low (_Local_Key_User+3)
  4862  001B6A  24F3               	addwf	prodl,w,c
  4863  001B6C  6ED9               	movwf	fsr2l,c
  4864  001B6E  0E00               	movlw	high (_Local_Key_User+3)
  4865  001B70  20F4               	addwfc	prodh,w,c
  4866  001B72  6EDA               	movwf	fsr2h,c
  4867  001B74  0E00               	movlw	0
  4868  001B76  6EDE               	movwf	postinc2,c
  4869  001B78  0E00               	movlw	0
  4870  001B7A  6EDD               	movwf	postdec2,c
  4871  001B7C  5001               	movf	Key_FSM_Reset@t,w,c
  4872  001B7E  0D01               	mullw	1
  4873  001B80  0E89               	movlw	low (_Local_Key_User+13)
  4874  001B82  24F3               	addwf	prodl,w,c
  4875  001B84  6ED9               	movwf	fsr2l,c
  4876  001B86  0E00               	movlw	high (_Local_Key_User+13)
  4877  001B88  20F4               	addwfc	prodh,w,c
  4878  001B8A  6EDA               	movwf	fsr2h,c
  4879  001B8C  0E00               	movlw	0
  4880  001B8E  6EDF               	movwf	indf2,c
  4881  001B90  D000               	goto	i2l2187
  4882  001B92                     i2l2187:
  4883  001B92  0601               	decf	Key_FSM_Reset@t,f,c
  4884  001B94  2801               	incf	Key_FSM_Reset@t,w,c
  4885  001B96  A4D8               	btfss	status,2,c
  4886  001B98  D7E5               	goto	i2l2185
  4887  001B9A  0012               	return		;funcret
  4888  001B9C                     __end_of_Key_FSM_Reset:
  4889                           	opt stack 0
  4890                           pclatu	equ	0xFFB
  4891                           pclath	equ	0xFFA
  4892                           tblptru	equ	0xFF8
  4893                           tblptrh	equ	0xFF7
  4894                           tblptrl	equ	0xFF6
  4895                           tablat	equ	0xFF5
  4896                           prodh	equ	0xFF4
  4897                           prodl	equ	0xFF3
  4898                           intcon	equ	0xFF2
  4899                           postinc0	equ	0xFEE
  4900                           fsr0h	equ	0xFEA
  4901                           fsr0l	equ	0xFE9
  4902                           wreg	equ	0xFE8
  4903                           indf1	equ	0xFE7
  4904                           fsr1h	equ	0xFE2
  4905                           fsr1l	equ	0xFE1
  4906                           indf2	equ	0xFDF
  4907                           postinc2	equ	0xFDE
  4908                           postdec2	equ	0xFDD
  4909                           fsr2h	equ	0xFDA
  4910                           fsr2l	equ	0xFD9
  4911                           status	equ	0xFD8
  4912                           
  4913 ;; *************** function _Key_FSM_Read *****************
  4914 ;; Defined at:
  4915 ;;		line 98 in file "_01_USER/Key.c"
  4916 ;; Parameters:    Size  Location     Type
  4917 ;;		None
  4918 ;; Auto vars:     Size  Location     Type
  4919 ;;  key_num         1    5[COMRAM] unsigned char 
  4920 ;;  key_num_mate    1    4[COMRAM] unsigned char 
  4921 ;; Return value:  Size  Location     Type
  4922 ;;		None               void
  4923 ;; Registers used:
  4924 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4925 ;; Tracked objects:
  4926 ;;		On entry : 0/0
  4927 ;;		On exit  : 0/0
  4928 ;;		Unchanged: 0/0
  4929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4931 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4932 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4933 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4934 ;;Total ram usage:        6 bytes
  4935 ;; Hardware stack levels used:    1
  4936 ;; This function calls:
  4937 ;;		Nothing
  4938 ;; This function is called by:
  4939 ;;		_Manage_Message
  4940 ;; This function uses a non-reentrant model
  4941 ;;
  4942                           
  4943                           	psect	text36
  4944  001012                     __ptext36:
  4945                           	opt stack 0
  4946  001012                     _Key_FSM_Read:
  4947                           	opt stack 23
  4948                           
  4949                           ;Key.c: 100: unsigned char key_num = 5,key_num_mate;
  4950                           
  4951                           ;incstack = 0
  4952  001012  0E05               	movlw	5
  4953  001014  6E06               	movwf	Key_FSM_Read@key_num,c
  4954                           
  4955                           ;Key.c: 103: while(key_num--)
  4956  001016  D072               	goto	i2l2155
  4957  001018                     i2l2137:
  4958                           
  4959                           ;Key.c: 104: {
  4960                           ;Key.c: 106: if( Local_Key_FSM.key_BUS == 0x00 )
  4961  001018  0100               	movlb	0	; () banked
  4962  00101A  516A               	movf	_Local_Key_FSM& (0+255),w,b	;volatile
  4963  00101C  A4D8               	btfss	status,2,c
  4964  00101E  D04A               	goto	i2l2149
  4965                           
  4966                           ; BSR set to: 0
  4967                           ;Key.c: 107: {
  4968                           ;Key.c: 108: if( Local_Key_FSM.key_count[key_num] > 5 )
  4969  001020  5006               	movf	Key_FSM_Read@key_num,w,c
  4970  001022  0D02               	mullw	2
  4971  001024  0E6D               	movlw	low (_Local_Key_FSM+3)
  4972  001026  24F3               	addwf	prodl,w,c
  4973  001028  6ED9               	movwf	fsr2l,c
  4974  00102A  0E00               	movlw	high (_Local_Key_FSM+3)
  4975  00102C  20F4               	addwfc	prodh,w,c
  4976  00102E  6EDA               	movwf	fsr2h,c
  4977  001030  0E01               	movlw	1
  4978  001032  50DB               	movf	plusw2,w,c
  4979  001034  E104               	bnz	i2u163_40
  4980  001036  0E06               	movlw	6
  4981  001038  5CDE               	subwf	postinc2,w,c
  4982  00103A  A0D8               	btfss	status,0,c
  4983  00103C  D024               	goto	i2l2147
  4984  00103E                     i2u163_40:
  4985                           
  4986                           ; BSR set to: 0
  4987                           ;Key.c: 109: {
  4988                           ;Key.c: 110: if( Local_Key_FSM.key_count[key_num] > 60 )
  4989  00103E  5006               	movf	Key_FSM_Read@key_num,w,c
  4990  001040  0D02               	mullw	2
  4991  001042  0E6D               	movlw	low (_Local_Key_FSM+3)
  4992  001044  24F3               	addwf	prodl,w,c
  4993  001046  6ED9               	movwf	fsr2l,c
  4994  001048  0E00               	movlw	high (_Local_Key_FSM+3)
  4995  00104A  20F4               	addwfc	prodh,w,c
  4996  00104C  6EDA               	movwf	fsr2h,c
  4997  00104E  0E01               	movlw	1
  4998  001050  50DB               	movf	plusw2,w,c
  4999  001052  E104               	bnz	i2u164_40
  5000  001054  0E3D               	movlw	61
  5001  001056  5CDE               	subwf	postinc2,w,c
  5002  001058  A0D8               	btfss	status,0,c
  5003  00105A  D00A               	goto	i2l2145
  5004  00105C                     i2u164_40:
  5005                           
  5006                           ; BSR set to: 0
  5007                           ;Key.c: 111: Local_Key_User.key_state[key_num] = KEY_long;
  5008  00105C  5006               	movf	Key_FSM_Read@key_num,w,c
  5009  00105E  0D01               	mullw	1
  5010  001060  0E89               	movlw	low (_Local_Key_User+13)
  5011  001062  24F3               	addwf	prodl,w,c
  5012  001064  6ED9               	movwf	fsr2l,c
  5013  001066  0E00               	movlw	high (_Local_Key_User+13)
  5014  001068  20F4               	addwfc	prodh,w,c
  5015  00106A  6EDA               	movwf	fsr2h,c
  5016  00106C  0E05               	movlw	5
  5017  00106E  D014               	goto	L3
  5018  001070                     i2l2145:
  5019                           
  5020                           ; BSR set to: 0
  5021                           ;Key.c: 112: else Local_Key_User.key_state[key_num] = KEY_short;
  5022  001070  5006               	movf	Key_FSM_Read@key_num,w,c
  5023  001072  0D01               	mullw	1
  5024  001074  0E89               	movlw	low (_Local_Key_User+13)
  5025  001076  24F3               	addwf	prodl,w,c
  5026  001078  6ED9               	movwf	fsr2l,c
  5027  00107A  0E00               	movlw	high (_Local_Key_User+13)
  5028  00107C  20F4               	addwfc	prodh,w,c
  5029  00107E  6EDA               	movwf	fsr2h,c
  5030  001080  0E01               	movlw	1
  5031  001082  6EDF               	movwf	indf2,c
  5032                           
  5033                           ; BSR set to: 0
  5034                           ;Key.c: 113: }
  5035  001084  D00A               	goto	i2l111
  5036  001086                     i2l2147:
  5037                           
  5038                           ; BSR set to: 0
  5039                           ;Key.c: 114: else Local_Key_User.key_state[key_num] = KEY_default;
  5040  001086  5006               	movf	Key_FSM_Read@key_num,w,c
  5041  001088  0D01               	mullw	1
  5042  00108A  0E89               	movlw	low (_Local_Key_User+13)
  5043  00108C  24F3               	addwf	prodl,w,c
  5044  00108E  6ED9               	movwf	fsr2l,c
  5045  001090  0E00               	movlw	high (_Local_Key_User+13)
  5046  001092  20F4               	addwfc	prodh,w,c
  5047  001094  6EDA               	movwf	fsr2h,c
  5048  001096  0E00               	movlw	0
  5049  001098                     L3:
  5050  001098  6EDF               	movwf	indf2,c
  5051  00109A                     i2l111:
  5052                           
  5053                           ; BSR set to: 0
  5054                           ;Key.c: 115: Local_Key_FSM.key_count[key_num] = 0;
  5055  00109A  5006               	movf	Key_FSM_Read@key_num,w,c
  5056  00109C  0D02               	mullw	2
  5057  00109E  0E6D               	movlw	low (_Local_Key_FSM+3)
  5058  0010A0  24F3               	addwf	prodl,w,c
  5059  0010A2  6ED9               	movwf	fsr2l,c
  5060  0010A4  0E00               	movlw	high (_Local_Key_FSM+3)
  5061  0010A6  20F4               	addwfc	prodh,w,c
  5062  0010A8  6EDA               	movwf	fsr2h,c
  5063  0010AA  0E00               	movlw	0
  5064  0010AC  6EDE               	movwf	postinc2,c
  5065  0010AE  0E00               	movlw	0
  5066  0010B0  6EDD               	movwf	postdec2,c
  5067                           
  5068                           ;Key.c: 116: }
  5069  0010B2  D024               	goto	i2l2155
  5070  0010B4                     i2l2149:
  5071                           
  5072                           ; BSR set to: 0
  5073                           ;Key.c: 118: else if( Local_Key_FSM.key_count[key_num] > 60 )
  5074  0010B4  5006               	movf	Key_FSM_Read@key_num,w,c
  5075  0010B6  0D02               	mullw	2
  5076  0010B8  0E6D               	movlw	low (_Local_Key_FSM+3)
  5077  0010BA  24F3               	addwf	prodl,w,c
  5078  0010BC  6ED9               	movwf	fsr2l,c
  5079  0010BE  0E00               	movlw	high (_Local_Key_FSM+3)
  5080  0010C0  20F4               	addwfc	prodh,w,c
  5081  0010C2  6EDA               	movwf	fsr2h,c
  5082  0010C4  0E01               	movlw	1
  5083  0010C6  50DB               	movf	plusw2,w,c
  5084  0010C8  E104               	bnz	i2u165_40
  5085  0010CA  0E3D               	movlw	61
  5086  0010CC  5CDE               	subwf	postinc2,w,c
  5087  0010CE  A0D8               	btfss	status,0,c
  5088  0010D0  D00A               	goto	i2l2153
  5089  0010D2                     i2u165_40:
  5090                           
  5091                           ; BSR set to: 0
  5092                           ;Key.c: 119: Local_Key_User.key_state[key_num] = KEY_hold;
  5093  0010D2  5006               	movf	Key_FSM_Read@key_num,w,c
  5094  0010D4  0D01               	mullw	1
  5095  0010D6  0E89               	movlw	low (_Local_Key_User+13)
  5096  0010D8  24F3               	addwf	prodl,w,c
  5097  0010DA  6ED9               	movwf	fsr2l,c
  5098  0010DC  0E00               	movlw	high (_Local_Key_User+13)
  5099  0010DE  20F4               	addwfc	prodh,w,c
  5100  0010E0  6EDA               	movwf	fsr2h,c
  5101  0010E2  0E03               	movlw	3
  5102  0010E4  D009               	goto	L4
  5103  0010E6                     i2l2153:
  5104                           
  5105                           ; BSR set to: 0
  5106                           ;Key.c: 122: else Local_Key_User.key_state[key_num] = KEY_busy;
  5107  0010E6  5006               	movf	Key_FSM_Read@key_num,w,c
  5108  0010E8  0D01               	mullw	1
  5109  0010EA  0E89               	movlw	low (_Local_Key_User+13)
  5110  0010EC  24F3               	addwf	prodl,w,c
  5111  0010EE  6ED9               	movwf	fsr2l,c
  5112  0010F0  0E00               	movlw	high (_Local_Key_User+13)
  5113  0010F2  20F4               	addwfc	prodh,w,c
  5114  0010F4  6EDA               	movwf	fsr2h,c
  5115  0010F6  0E04               	movlw	4
  5116  0010F8                     L4:
  5117  0010F8  6EDF               	movwf	indf2,c
  5118                           
  5119                           ; BSR set to: 0
  5120                           
  5121                           ; BSR set to: 0
  5122  0010FA  D000               	goto	i2l2155
  5123  0010FC                     i2l2155:
  5124  0010FC  0606               	decf	Key_FSM_Read@key_num,f,c
  5125  0010FE  2806               	incf	Key_FSM_Read@key_num,w,c
  5126  001100  A4D8               	btfss	status,2,c
  5127  001102  D78A               	goto	i2l2137
  5128                           
  5129                           ;Key.c: 123: }
  5130                           ;Key.c: 127: for( key_num = 0;key_num < 5 - 1; key_num ++)
  5131  001104  0E00               	movlw	0
  5132  001106  6E06               	movwf	Key_FSM_Read@key_num,c
  5133  001108  0E03               	movlw	3
  5134  00110A  6406               	cpfsgt	Key_FSM_Read@key_num,c
  5135  00110C  D002               	goto	i2l2163
  5136  00110E  0012               	return	
  5137  001110  0012               	return	
  5138  001112                     i2l2163:
  5139                           
  5140                           ;Key.c: 128: for( key_num_mate = key_num+1;key_num_mate < 5 ; key_num_mate ++)
  5141  001112  2806               	incf	Key_FSM_Read@key_num,w,c
  5142  001114  6E05               	movwf	Key_FSM_Read@key_num_mate,c
  5143  001116  0E04               	movlw	4
  5144  001118  6405               	cpfsgt	Key_FSM_Read@key_num_mate,c
  5145  00111A  D001               	goto	i2l2167
  5146  00111C  D045               	goto	i2l2179
  5147  00111E                     i2l2167:
  5148                           
  5149                           ;Key.c: 129: if( Local_Key_User.key_state[key_num] == Local_Key_User.key_state[key_num_m
      +                          ate] )
  5150  00111E  5005               	movf	Key_FSM_Read@key_num_mate,w,c
  5151  001120  0D01               	mullw	1
  5152  001122  0E89               	movlw	low (_Local_Key_User+13)
  5153  001124  24F3               	addwf	prodl,w,c
  5154  001126  6ED9               	movwf	fsr2l,c
  5155  001128  0E00               	movlw	high (_Local_Key_User+13)
  5156  00112A  20F4               	addwfc	prodh,w,c
  5157  00112C  6EDA               	movwf	fsr2h,c
  5158  00112E  5006               	movf	Key_FSM_Read@key_num,w,c
  5159  001130  0D01               	mullw	1
  5160  001132  0E89               	movlw	low (_Local_Key_User+13)
  5161  001134  24F3               	addwf	prodl,w,c
  5162  001136  6EE1               	movwf	fsr1l,c
  5163  001138  0E00               	movlw	high (_Local_Key_User+13)
  5164  00113A  20F4               	addwfc	prodh,w,c
  5165  00113C  6EE2               	movwf	fsr1h,c
  5166  00113E  50DE               	movf	postinc2,w,c
  5167  001140  18E6               	xorwf	postinc1,w,c
  5168  001142  A4D8               	btfss	status,2,c
  5169  001144  D02F               	goto	i2l2175
  5170                           
  5171                           ;Key.c: 130: if(Local_Key_User.key_state[key_num] != KEY_default)
  5172  001146  5006               	movf	Key_FSM_Read@key_num,w,c
  5173  001148  0D01               	mullw	1
  5174  00114A  0E89               	movlw	low (_Local_Key_User+13)
  5175  00114C  24F3               	addwf	prodl,w,c
  5176  00114E  6ED9               	movwf	fsr2l,c
  5177  001150  0E00               	movlw	high (_Local_Key_User+13)
  5178  001152  20F4               	addwfc	prodh,w,c
  5179  001154  6EDA               	movwf	fsr2h,c
  5180  001156  50DF               	movf	indf2,w,c
  5181  001158  B4D8               	btfsc	status,2,c
  5182  00115A  D024               	goto	i2l2175
  5183                           
  5184                           ;Key.c: 131: {
  5185                           ;Key.c: 132: Local_Key_User.key_group = (0x01 << key_num)|(0x01 << key_num_mate);
  5186  00115C  C005  F001         	movff	Key_FSM_Read@key_num_mate,??_Key_FSM_Read
  5187  001160  0E01               	movlw	1
  5188  001162  6E02               	movwf	(??_Key_FSM_Read+1)& (0+255),c
  5189  001164  2A01               	incf	??_Key_FSM_Read,f,c
  5190  001166  D002               	goto	i2u171_44
  5191  001168                     i2u171_45:
  5192  001168  90D8               	bcf	status,0,c
  5193  00116A  3602               	rlcf	??_Key_FSM_Read+1,f,c
  5194  00116C                     i2u171_44:
  5195  00116C  2E01               	decfsz	??_Key_FSM_Read,f,c
  5196  00116E  D7FC               	goto	i2u171_45
  5197  001170  C006  F003         	movff	Key_FSM_Read@key_num,??_Key_FSM_Read+2
  5198  001174  0E01               	movlw	1
  5199  001176  6E04               	movwf	(??_Key_FSM_Read+3)& (0+255),c
  5200  001178  2A03               	incf	??_Key_FSM_Read+2,f,c
  5201  00117A  D002               	goto	i2u172_44
  5202  00117C                     i2u172_45:
  5203  00117C  90D8               	bcf	status,0,c
  5204  00117E  3604               	rlcf	??_Key_FSM_Read+3,f,c
  5205  001180                     i2u172_44:
  5206  001180  2E03               	decfsz	??_Key_FSM_Read+2,f,c
  5207  001182  D7FC               	goto	i2u172_45
  5208  001184  5004               	movf	??_Key_FSM_Read+3,w,c
  5209  001186  1002               	iorwf	??_Key_FSM_Read+1,w,c
  5210  001188  0100               	movlb	0	; () banked
  5211  00118A  6F7D               	movwf	(_Local_Key_User+1)& (0+255),b	;volatile
  5212                           
  5213                           ; BSR set to: 0
  5214                           ;Key.c: 133: Local_Key_User.key_group_state = Local_Key_User.key_state[key_num];
  5215  00118C  5006               	movf	Key_FSM_Read@key_num,w,c
  5216  00118E  0D01               	mullw	1
  5217  001190  0E89               	movlw	low (_Local_Key_User+13)
  5218  001192  24F3               	addwf	prodl,w,c
  5219  001194  6ED9               	movwf	fsr2l,c
  5220  001196  0E00               	movlw	high (_Local_Key_User+13)
  5221  001198  20F4               	addwfc	prodh,w,c
  5222  00119A  6EDA               	movwf	fsr2h,c
  5223  00119C  50DF               	movf	indf2,w,c
  5224  00119E  0100               	movlb	0	; () banked
  5225  0011A0  6F7E               	movwf	(_Local_Key_User+2)& (0+255),b	;volatile
  5226                           
  5227                           ; BSR set to: 0
  5228  0011A2  D000               	goto	i2l2175
  5229  0011A4                     i2l2175:
  5230  0011A4  2A05               	incf	Key_FSM_Read@key_num_mate,f,c
  5231  0011A6  D7B7               	goto	L5
  5232  0011A8                     i2l2179:
  5233  0011A8  2A06               	incf	Key_FSM_Read@key_num,f,c
  5234  0011AA  0E03               	movlw	3
  5235  0011AC  6406               	cpfsgt	Key_FSM_Read@key_num,c
  5236  0011AE  D7B1               	goto	i2l2163
  5237  0011B0  0012               	return	
  5238  0011B2  0012               	return		;funcret
  5239  0011B4                     __end_of_Key_FSM_Read:
  5240                           	opt stack 0
  5241                           pclatu	equ	0xFFB
  5242                           pclath	equ	0xFFA
  5243                           tblptru	equ	0xFF8
  5244                           tblptrh	equ	0xFF7
  5245                           tblptrl	equ	0xFF6
  5246                           tablat	equ	0xFF5
  5247                           prodh	equ	0xFF4
  5248                           prodl	equ	0xFF3
  5249                           intcon	equ	0xFF2
  5250                           postinc0	equ	0xFEE
  5251                           fsr0h	equ	0xFEA
  5252                           fsr0l	equ	0xFE9
  5253                           wreg	equ	0xFE8
  5254                           indf1	equ	0xFE7
  5255                           postinc1	equ	0xFE6
  5256                           fsr1h	equ	0xFE2
  5257                           fsr1l	equ	0xFE1
  5258                           indf2	equ	0xFDF
  5259                           postinc2	equ	0xFDE
  5260                           postdec2	equ	0xFDD
  5261                           plusw2	equ	0xFDB
  5262                           fsr2h	equ	0xFDA
  5263                           fsr2l	equ	0xFD9
  5264                           status	equ	0xFD8
  5265                           
  5266 ;; *************** function _Key_FSM_Scan *****************
  5267 ;; Defined at:
  5268 ;;		line 77 in file "_01_USER/Key.c"
  5269 ;; Parameters:    Size  Location     Type
  5270 ;;		None
  5271 ;; Auto vars:     Size  Location     Type
  5272 ;;		None
  5273 ;; Return value:  Size  Location     Type
  5274 ;;		None               void
  5275 ;; Registers used:
  5276 ;;		wreg, status,2, status,0, cstack
  5277 ;; Tracked objects:
  5278 ;;		On entry : 0/0
  5279 ;;		On exit  : 0/0
  5280 ;;		Unchanged: 0/0
  5281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5286 ;;Total ram usage:        0 bytes
  5287 ;; Hardware stack levels used:    1
  5288 ;; Hardware stack levels required when called:    1
  5289 ;; This function calls:
  5290 ;;		_Key_Scan
  5291 ;; This function is called by:
  5292 ;;		_Sys_Cyc
  5293 ;; This function uses a non-reentrant model
  5294 ;;
  5295                           
  5296                           	psect	text37
  5297  001B06                     __ptext37:
  5298                           	opt stack 0
  5299  001B06                     _Key_FSM_Scan:
  5300                           	opt stack 23
  5301                           
  5302                           ;Key.c: 79: Key_Scan();
  5303                           
  5304                           ;incstack = 0
  5305  001B06  EC0A  F00E         	call	_Key_Scan	;wreg free
  5306                           
  5307                           ;Key.c: 80: if( Local_Key_FSM.key_BUS & 0x01 ) Local_Key_FSM.key_count[0]++;
  5308  001B0A  0100               	movlb	0	; () banked
  5309  001B0C  A16A               	btfss	_Local_Key_FSM& (0+255),0,b	;volatile
  5310  001B0E  D004               	goto	i2l2429
  5311                           
  5312                           ; BSR set to: 0
  5313  001B10  0100               	movlb	0	; () banked
  5314  001B12  4B6D               	infsnz	(_Local_Key_FSM+3)& (0+255),f,b	;volatile
  5315  001B14  2B6E               	incf	(_Local_Key_FSM+4)& (0+255),f,b	;volatile
  5316  001B16  D000               	goto	i2l2429
  5317  001B18                     i2l2429:
  5318                           
  5319                           ; BSR set to: 0
  5320                           ;Key.c: 81: if( Local_Key_FSM.key_BUS & 0x02 ) Local_Key_FSM.key_count[1]++;
  5321  001B18  0100               	movlb	0	; () banked
  5322  001B1A  A36A               	btfss	_Local_Key_FSM& (0+255),1,b	;volatile
  5323  001B1C  D004               	goto	i2l2433
  5324                           
  5325                           ; BSR set to: 0
  5326  001B1E  0100               	movlb	0	; () banked
  5327  001B20  4B6F               	infsnz	(_Local_Key_FSM+5)& (0+255),f,b	;volatile
  5328  001B22  2B70               	incf	(_Local_Key_FSM+6)& (0+255),f,b	;volatile
  5329  001B24  D000               	goto	i2l2433
  5330  001B26                     i2l2433:
  5331                           
  5332                           ; BSR set to: 0
  5333                           ;Key.c: 82: if( Local_Key_FSM.key_BUS & 0x04 ) Local_Key_FSM.key_count[2]++;
  5334  001B26  0100               	movlb	0	; () banked
  5335  001B28  A56A               	btfss	_Local_Key_FSM& (0+255),2,b	;volatile
  5336  001B2A  D004               	goto	i2l2437
  5337                           
  5338                           ; BSR set to: 0
  5339  001B2C  0100               	movlb	0	; () banked
  5340  001B2E  4B71               	infsnz	(_Local_Key_FSM+7)& (0+255),f,b	;volatile
  5341  001B30  2B72               	incf	(_Local_Key_FSM+8)& (0+255),f,b	;volatile
  5342  001B32  D000               	goto	i2l2437
  5343  001B34                     i2l2437:
  5344                           
  5345                           ; BSR set to: 0
  5346                           ;Key.c: 83: if( Local_Key_FSM.key_BUS & 0x08 ) Local_Key_FSM.key_count[3]++;
  5347  001B34  0100               	movlb	0	; () banked
  5348  001B36  A76A               	btfss	_Local_Key_FSM& (0+255),3,b	;volatile
  5349  001B38  D004               	goto	i2l2441
  5350                           
  5351                           ; BSR set to: 0
  5352  001B3A  0100               	movlb	0	; () banked
  5353  001B3C  4B73               	infsnz	(_Local_Key_FSM+9)& (0+255),f,b	;volatile
  5354  001B3E  2B74               	incf	(_Local_Key_FSM+10)& (0+255),f,b	;volatile
  5355  001B40  D000               	goto	i2l2441
  5356  001B42                     i2l2441:
  5357                           
  5358                           ; BSR set to: 0
  5359                           ;Key.c: 84: if( Local_Key_FSM.key_BUS & 0x10 ) Local_Key_FSM.key_count[4]++;
  5360  001B42  0100               	movlb	0	; () banked
  5361  001B44  A96A               	btfss	_Local_Key_FSM& (0+255),4,b	;volatile
  5362  001B46  0012               	return	
  5363                           
  5364                           ; BSR set to: 0
  5365  001B48  0100               	movlb	0	; () banked
  5366  001B4A  4B75               	infsnz	(_Local_Key_FSM+11)& (0+255),f,b	;volatile
  5367  001B4C  2B76               	incf	(_Local_Key_FSM+12)& (0+255),f,b	;volatile
  5368  001B4E  0012               	return	
  5369                           
  5370                           ; BSR set to: 0
  5371                           
  5372                           ; BSR set to: 0
  5373  001B50  0012               	return		;funcret
  5374  001B52                     __end_of_Key_FSM_Scan:
  5375                           	opt stack 0
  5376                           pclatu	equ	0xFFB
  5377                           pclath	equ	0xFFA
  5378                           tblptru	equ	0xFF8
  5379                           tblptrh	equ	0xFF7
  5380                           tblptrl	equ	0xFF6
  5381                           tablat	equ	0xFF5
  5382                           prodh	equ	0xFF4
  5383                           prodl	equ	0xFF3
  5384                           intcon	equ	0xFF2
  5385                           postinc0	equ	0xFEE
  5386                           fsr0h	equ	0xFEA
  5387                           fsr0l	equ	0xFE9
  5388                           wreg	equ	0xFE8
  5389                           indf1	equ	0xFE7
  5390                           postinc1	equ	0xFE6
  5391                           fsr1h	equ	0xFE2
  5392                           fsr1l	equ	0xFE1
  5393                           indf2	equ	0xFDF
  5394                           postinc2	equ	0xFDE
  5395                           postdec2	equ	0xFDD
  5396                           plusw2	equ	0xFDB
  5397                           fsr2h	equ	0xFDA
  5398                           fsr2l	equ	0xFD9
  5399                           status	equ	0xFD8
  5400                           
  5401 ;; *************** function _Key_Scan *****************
  5402 ;; Defined at:
  5403 ;;		line 55 in file "_01_USER/Key.c"
  5404 ;; Parameters:    Size  Location     Type
  5405 ;;		None
  5406 ;; Auto vars:     Size  Location     Type
  5407 ;;		None
  5408 ;; Return value:  Size  Location     Type
  5409 ;;		None               void
  5410 ;; Registers used:
  5411 ;;		wreg, status,2, status,0
  5412 ;; Tracked objects:
  5413 ;;		On entry : 0/0
  5414 ;;		On exit  : 0/0
  5415 ;;		Unchanged: 0/0
  5416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5421 ;;Total ram usage:        0 bytes
  5422 ;; Hardware stack levels used:    1
  5423 ;; This function calls:
  5424 ;;		Nothing
  5425 ;; This function is called by:
  5426 ;;		_Key_FSM_Scan
  5427 ;; This function uses a non-reentrant model
  5428 ;;
  5429                           
  5430                           	psect	text38
  5431  001C14                     __ptext38:
  5432                           	opt stack 0
  5433  001C14                     _Key_Scan:
  5434                           	opt stack 23
  5435                           
  5436                           ;Key.c: 58: Local_Key_FSM.key_BUS = 0x00;
  5437                           
  5438                           ; BSR set to: 0
  5439                           ;incstack = 0
  5440  001C14  0E00               	movlw	0
  5441  001C16  0100               	movlb	0	; () banked
  5442  001C18  6F6A               	movwf	_Local_Key_FSM& (0+255),b	;volatile
  5443                           
  5444                           ; BSR set to: 0
  5445                           ;Key.c: 60: if( RE3 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 0) ;
  5446  001C1A  B684               	btfsc	3972,3,c	;volatile
  5447  001C1C  D003               	goto	i2l2119
  5448                           
  5449                           ; BSR set to: 0
  5450  001C1E  0100               	movlb	0	; () banked
  5451  001C20  816A               	bsf	_Local_Key_FSM& (0+255),0,b	;volatile
  5452  001C22  D000               	goto	i2l2119
  5453  001C24                     i2l2119:
  5454                           
  5455                           ; BSR set to: 0
  5456                           ;Key.c: 61: if( RE2 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 1) ;
  5457  001C24  B484               	btfsc	3972,2,c	;volatile
  5458  001C26  D003               	goto	i2l2123
  5459                           
  5460                           ; BSR set to: 0
  5461  001C28  0100               	movlb	0	; () banked
  5462  001C2A  836A               	bsf	_Local_Key_FSM& (0+255),1,b	;volatile
  5463  001C2C  D000               	goto	i2l2123
  5464  001C2E                     i2l2123:
  5465                           
  5466                           ; BSR set to: 0
  5467                           ;Key.c: 62: if( RD6 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 2) ;
  5468  001C2E  BC83               	btfsc	3971,6,c	;volatile
  5469  001C30  D003               	goto	i2l2127
  5470                           
  5471                           ; BSR set to: 0
  5472  001C32  0100               	movlb	0	; () banked
  5473  001C34  856A               	bsf	_Local_Key_FSM& (0+255),2,b	;volatile
  5474  001C36  D000               	goto	i2l2127
  5475  001C38                     i2l2127:
  5476                           
  5477                           ; BSR set to: 0
  5478                           ;Key.c: 63: if( RE4 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 3) ;
  5479  001C38  B884               	btfsc	3972,4,c	;volatile
  5480  001C3A  D003               	goto	i2l2131
  5481                           
  5482                           ; BSR set to: 0
  5483  001C3C  0100               	movlb	0	; () banked
  5484  001C3E  876A               	bsf	_Local_Key_FSM& (0+255),3,b	;volatile
  5485  001C40  D000               	goto	i2l2131
  5486  001C42                     i2l2131:
  5487                           
  5488                           ; BSR set to: 0
  5489                           ;Key.c: 64: if( RD7 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 4) ;
  5490  001C42  BE83               	btfsc	3971,7,c	;volatile
  5491  001C44  0012               	return	
  5492                           
  5493                           ; BSR set to: 0
  5494  001C46  0100               	movlb	0	; () banked
  5495  001C48  896A               	bsf	_Local_Key_FSM& (0+255),4,b	;volatile
  5496  001C4A  0012               	return	
  5497                           
  5498                           ; BSR set to: 0
  5499                           
  5500                           ; BSR set to: 0
  5501  001C4C  0012               	return		;funcret
  5502  001C4E                     __end_of_Key_Scan:
  5503                           	opt stack 0
  5504                           pclatu	equ	0xFFB
  5505                           pclath	equ	0xFFA
  5506                           tblptru	equ	0xFF8
  5507                           tblptrh	equ	0xFF7
  5508                           tblptrl	equ	0xFF6
  5509                           tablat	equ	0xFF5
  5510                           prodh	equ	0xFF4
  5511                           prodl	equ	0xFF3
  5512                           intcon	equ	0xFF2
  5513                           postinc0	equ	0xFEE
  5514                           fsr0h	equ	0xFEA
  5515                           fsr0l	equ	0xFE9
  5516                           wreg	equ	0xFE8
  5517                           indf1	equ	0xFE7
  5518                           postinc1	equ	0xFE6
  5519                           fsr1h	equ	0xFE2
  5520                           fsr1l	equ	0xFE1
  5521                           indf2	equ	0xFDF
  5522                           postinc2	equ	0xFDE
  5523                           postdec2	equ	0xFDD
  5524                           plusw2	equ	0xFDB
  5525                           fsr2h	equ	0xFDA
  5526                           fsr2l	equ	0xFD9
  5527                           status	equ	0xFD8
  5528                           
  5529 ;; *************** function _Delay_1Khz *****************
  5530 ;; Defined at:
  5531 ;;		line 75 in file "_01_USER/My_Delay.c"
  5532 ;; Parameters:    Size  Location     Type
  5533 ;;		None
  5534 ;; Auto vars:     Size  Location     Type
  5535 ;;  c               1    2[COMRAM] unsigned char 
  5536 ;;  b               1    1[COMRAM] unsigned char 
  5537 ;;  a               1    0[COMRAM] unsigned char 
  5538 ;; Return value:  Size  Location     Type
  5539 ;;		None               void
  5540 ;; Registers used:
  5541 ;;		wreg, status,2, status,0
  5542 ;; Tracked objects:
  5543 ;;		On entry : 0/0
  5544 ;;		On exit  : 0/0
  5545 ;;		Unchanged: 0/0
  5546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5548 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5550 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5551 ;;Total ram usage:        3 bytes
  5552 ;; Hardware stack levels used:    1
  5553 ;; This function calls:
  5554 ;;		Nothing
  5555 ;; This function is called by:
  5556 ;;		_Sys_Cyc
  5557 ;; This function uses a non-reentrant model
  5558 ;;
  5559                           
  5560                           	psect	text39
  5561  001C4E                     __ptext39:
  5562                           	opt stack 0
  5563  001C4E                     _Delay_1Khz:
  5564                           	opt stack 24
  5565                           
  5566                           ;My_Delay.c: 77: unsigned char a,b,c;
  5567                           ;My_Delay.c: 78: for(c=1;c>0;c--)
  5568                           
  5569                           ; BSR set to: 0
  5570                           ;incstack = 0
  5571  001C4E  0E01               	movlw	1
  5572  001C50  6E03               	movwf	Delay_1Khz@c,c
  5573  001C52  5003               	movf	Delay_1Khz@c,w,c
  5574  001C54  B4D8               	btfsc	status,2,c
  5575  001C56  0012               	return	
  5576  001C58  D001               	goto	i2l2403
  5577  001C5A  0012               	return	
  5578  001C5C                     i2l2403:
  5579                           
  5580                           ;My_Delay.c: 79: for(b=32;b>0;b--)
  5581  001C5C  0E20               	movlw	32
  5582  001C5E  6E02               	movwf	Delay_1Khz@b,c
  5583  001C60  5002               	movf	Delay_1Khz@b,w,c
  5584  001C62  B4D8               	btfsc	status,2,c
  5585  001C64  D00D               	goto	i2l2419
  5586  001C66  D001               	goto	i2l2407
  5587  001C68  D00B               	goto	i2l2419
  5588  001C6A                     i2l2407:
  5589                           
  5590                           ;My_Delay.c: 80: for(a=2;a>0;a--);
  5591  001C6A  0E02               	movlw	2
  5592  001C6C  6E01               	movwf	Delay_1Khz@a,c
  5593  001C6E  5001               	movf	Delay_1Khz@a,w,c
  5594  001C70  B4D8               	btfsc	status,2,c
  5595  001C72  D004               	goto	i2l2415
  5596  001C74  D001               	goto	i2l2411
  5597  001C76  D002               	goto	i2l2415
  5598  001C78                     i2l2411:
  5599  001C78  0601               	decf	Delay_1Khz@a,f,c
  5600  001C7A  D7F9               	goto	L6
  5601  001C7C                     i2l2415:
  5602  001C7C  0602               	decf	Delay_1Khz@b,f,c
  5603  001C7E  D7F0               	goto	L7
  5604  001C80                     i2l2419:
  5605  001C80  0603               	decf	Delay_1Khz@c,f,c
  5606  001C82  D7E7               	goto	L8
  5607  001C84  0012               	return		;funcret
  5608  001C86                     __end_of_Delay_1Khz:
  5609                           	opt stack 0
  5610                           pclatu	equ	0xFFB
  5611                           pclath	equ	0xFFA
  5612                           tblptru	equ	0xFF8
  5613                           tblptrh	equ	0xFF7
  5614                           tblptrl	equ	0xFF6
  5615                           tablat	equ	0xFF5
  5616                           prodh	equ	0xFF4
  5617                           prodl	equ	0xFF3
  5618                           intcon	equ	0xFF2
  5619                           postinc0	equ	0xFEE
  5620                           fsr0h	equ	0xFEA
  5621                           fsr0l	equ	0xFE9
  5622                           wreg	equ	0xFE8
  5623                           indf1	equ	0xFE7
  5624                           postinc1	equ	0xFE6
  5625                           fsr1h	equ	0xFE2
  5626                           fsr1l	equ	0xFE1
  5627                           indf2	equ	0xFDF
  5628                           postinc2	equ	0xFDE
  5629                           postdec2	equ	0xFDD
  5630                           plusw2	equ	0xFDB
  5631                           fsr2h	equ	0xFDA
  5632                           fsr2l	equ	0xFD9
  5633                           status	equ	0xFD8
  5634                           pclatu	equ	0xFFB
  5635                           pclath	equ	0xFFA
  5636                           tblptru	equ	0xFF8
  5637                           tblptrh	equ	0xFF7
  5638                           tblptrl	equ	0xFF6
  5639                           tablat	equ	0xFF5
  5640                           prodh	equ	0xFF4
  5641                           prodl	equ	0xFF3
  5642                           intcon	equ	0xFF2
  5643                           postinc0	equ	0xFEE
  5644                           fsr0h	equ	0xFEA
  5645                           fsr0l	equ	0xFE9
  5646                           wreg	equ	0xFE8
  5647                           indf1	equ	0xFE7
  5648                           postinc1	equ	0xFE6
  5649                           fsr1h	equ	0xFE2
  5650                           fsr1l	equ	0xFE1
  5651                           indf2	equ	0xFDF
  5652                           postinc2	equ	0xFDE
  5653                           postdec2	equ	0xFDD
  5654                           plusw2	equ	0xFDB
  5655                           fsr2h	equ	0xFDA
  5656                           fsr2l	equ	0xFD9
  5657                           status	equ	0xFD8
  5658                           
  5659                           	psect	rparam
  5660  0000                     pclatu	equ	0xFFB
  5661                           pclath	equ	0xFFA
  5662                           tblptru	equ	0xFF8
  5663                           tblptrh	equ	0xFF7
  5664                           tblptrl	equ	0xFF6
  5665                           tablat	equ	0xFF5
  5666                           prodh	equ	0xFF4
  5667                           prodl	equ	0xFF3
  5668                           intcon	equ	0xFF2
  5669                           postinc0	equ	0xFEE
  5670                           fsr0h	equ	0xFEA
  5671                           fsr0l	equ	0xFE9
  5672                           wreg	equ	0xFE8
  5673                           indf1	equ	0xFE7
  5674                           postinc1	equ	0xFE6
  5675                           fsr1h	equ	0xFE2
  5676                           fsr1l	equ	0xFE1
  5677                           indf2	equ	0xFDF
  5678                           postinc2	equ	0xFDE
  5679                           postdec2	equ	0xFDD
  5680                           plusw2	equ	0xFDB
  5681                           fsr2h	equ	0xFDA
  5682                           fsr2l	equ	0xFD9
  5683                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         87
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     50      71
    BANK0           160     20      86
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    CRC_Verify@_ucLByte	PTR unsigned char  size(2) Largest target is 10
		 -> RS485_Receive_Date@_ucLByte(COMRAM[1]), RS485_SendBuff(BANK0[10]), 

    CRC_Verify@_ucHByte	PTR unsigned char  size(2) Largest target is 10
		 -> RS485_Receive_Date@_ucHByte(COMRAM[1]), RS485_SendBuff(BANK0[10]), 

    CRC_Verify@_pucBuf	PTR unsigned char  size(2) Largest target is 10
		 -> ReceiveBuff(BANK0[10]), RS485_SendBuff(BANK0[10]), 

    RS485_Receive_Date@DataBuff	PTR unsigned char  size(2) Largest target is 10
		 -> ReceiveBuff(BANK0[10]), 

    RS485_Send_Date@date_dress	PTR unsigned char  size(2) Largest target is 10
		 -> RS485_SendBuff(BANK0[10]), 


Critical Paths under _main in COMRAM

    _Timer0_Init->_SetTimer0
    _Show_Result->_TM1640_Show_Hex
    _TM1640_Show_Hex->_TM1640_Writer_Dates
    _TM1640_Writer_Dates->_TM1640_Writer_Byte
    _RS485_Send_Date->_CRC_Verify
    _RS485_Receive_Date->_CRC_Verify
    _CRC_Verify->___wmul
    _Get_ADC6->___ftmul
    ___lwtoft->___ftpack
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul
    _RS485_Init->_Open2USART
    _Init_TM1640->_TM1640_Writer_Byte
    _TM1640_Writer_Byte->_TM1640_Delay
    _TM1640_Stop->_TM1640_Delay
    _TM1640_Start->_TM1640_Delay
    _ADC6_Init->_OpenADC

Critical Paths under _Sys_Cyc in COMRAM

    _Sys_Cyc->___llmod
    _Manage_Message->_Key_FSM_Read

Critical Paths under _main in BANK0

    _main->_Run
    _Get_ADC6->___ftdiv

Critical Paths under _Sys_Cyc in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Sys_Cyc in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Sys_Cyc in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Sys_Cyc in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Sys_Cyc in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Sys_Cyc in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Sys_Cyc in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Sys_Cyc in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Sys_Cyc in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Sys_Cyc in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Sys_Cyc in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Sys_Cyc in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Sys_Cyc in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Sys_Cyc in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Sys_Cyc in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Sys_Cyc in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   14156
                                             17 BANK0      3     3      0
                          _ADC6_Init
                        _GPIO_Config
                        _Init_TM1640
                           _Key_Init
                         _RS485_Init
                                _Run
                        _Show_Result
                        _Timer0_Init
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0     194
                          _SetTimer0
 ---------------------------------------------------------------------------------
 (2) _SetTimer0                                            4     2      2     194
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Show_Result                                          4     4      0    1532
                                             34 COMRAM     3     3      0
                    _TM1640_Show_Hex
 ---------------------------------------------------------------------------------
 (2) _TM1640_Show_Hex                                      4     2      2    1532
                                             30 COMRAM     4     2      2
                _TM1640_Writer_Dates
 ---------------------------------------------------------------------------------
 (3) _TM1640_Writer_Dates                                  2     1      1    1269
                                             28 COMRAM     2     1      1
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
 ---------------------------------------------------------------------------------
 (1) _Run                                                  2     2      0   11340
                                             15 BANK0      2     2      0
                           _Get_ADC6
                 _RS485_Receive_Date
                    _RS485_Send_Date
 ---------------------------------------------------------------------------------
 (2) _RS485_Send_Date                                      7     4      3    1560
                                             41 COMRAM     7     4      3
                         _CRC_Verify
 ---------------------------------------------------------------------------------
 (2) _RS485_Receive_Date                                   6     4      2    1662
                                             41 COMRAM     6     4      2
                         _CRC_Verify
 ---------------------------------------------------------------------------------
 (3) _CRC_Verify                                          11     4      7    1207
                                             30 COMRAM    11     4      7
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     362
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _Get_ADC6                                             0     0      0    7988
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2104
                                             32 COMRAM     3     0      3
                            _ReadADC (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    2846
                                             35 COMRAM    15     9      6
                            _ReadADC (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3038
                                              0 BANK0     15     9      6
                            _ReadADC (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2008
                                             24 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) _ReadADC                                              4     2      2       0
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RS485_Init                                           0     0      0     375
                         _Open2USART
 ---------------------------------------------------------------------------------
 (2) _Open2USART                                           3     1      2     375
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Key_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_TM1640                                          0     0      0     396
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
 ---------------------------------------------------------------------------------
 (4) _TM1640_Writer_Byte                                   2     2      0     198
                                             26 COMRAM     2     2      0
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (4) _TM1640_Stop                                          0     0      0      99
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (4) _TM1640_Start                                         0     0      0      99
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (5) _TM1640_Delay                                         2     2      0      99
                                             24 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC6_Init                                            0     0      0     316
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     316
                                             24 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Sys_Cyc                                             15    15      0    1372
                                              9 COMRAM    15    15      0
                         _Delay_1Khz
                       _Key_FSM_Scan
                     _Manage_Message
                            ___llmod
                        i2_SetTimer0
 ---------------------------------------------------------------------------------
 (7) i2_SetTimer0                                          4     2      2      94
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8     371
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) _Manage_Message                                       1     1      0     746
                       _Key_FSM_Read
                      _Key_FSM_Reset
                            ___lbmod
 ---------------------------------------------------------------------------------
 (8) ___lbmod                                              4     3      1     212
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (8) _Key_FSM_Reset                                        1     1      0      67
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _Key_FSM_Read                                         6     6      0     467
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (7) _Key_FSM_Scan                                         0     0      0       0
                           _Key_Scan
 ---------------------------------------------------------------------------------
 (8) _Key_Scan                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _Delay_1Khz                                           3     3      0     138
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC6_Init
     _OpenADC
   _GPIO_Config
   _Init_TM1640
     _TM1640_Start
       _TM1640_Delay
     _TM1640_Stop
       _TM1640_Delay
     _TM1640_Writer_Byte
       _TM1640_Delay
   _Key_Init
   _RS485_Init
     _Open2USART
   _Run
     _Get_ADC6
       _BusyADC
       _ConvertADC
       _ReadADC
       ___ftdiv
         _ReadADC (ARG)
         ___ftmul (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___ftmul
         _ReadADC (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___lwtoft
         _ReadADC (ARG)
         ___ftpack (ARG)
     _RS485_Receive_Date
       _CRC_Verify
         ___wmul
     _RS485_Send_Date
       _CRC_Verify
         ___wmul
   _Show_Result
     _TM1640_Show_Hex
       _TM1640_Writer_Dates
         _TM1640_Start
           _TM1640_Delay
         _TM1640_Stop
           _TM1640_Delay
         _TM1640_Writer_Byte
           _TM1640_Delay
   _Timer0_Init
     _SetTimer0

 _Sys_Cyc (ROOT)
   _Delay_1Khz
   _Key_FSM_Scan
     _Key_Scan
   _Manage_Message
     _Key_FSM_Read
     _Key_FSM_Reset
     ___lbmod
   ___llmod
   i2_SetTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     14      56       5       53.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     32      47       1       74.7%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9D      12        0.0%
DATA                 0      0      9D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Jan 23 15:55:18 2016

                ?_TM1640_Stop 0001  __size_of_TM1640_Writer_Dates 0022                 ?_TM1640_Delay 0001  
              Key_FSM_Reset@t 0001           ___wmul@multiplicand 001B                   __CFG_BORV$3 000000  
               ?_TM1640_Start 0001                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000                  __CFG_CP4$OFF 000000  
                __CFG_CP5$OFF 000000                  __CFG_CP6$OFF 000000                  __CFG_CP7$OFF 000000  
                         l160 18F8                           l322 1BA4                           l323 1BBA  
                         l165 194C                           l421 18BA                           l337 1E70  
                         l450 1B02                           l178 17CA                           l418 176C  
                         l480 1840                           l483 1858                           l485 1864  
                         l486 1866                           l478 1830                           l809 16B2  
                         l873 12CC                           _GIE 007F97                  __CFG_CPB$OFF 000000  
                         _RC3 007C13                           _RC4 007C14                           _RE2 007C22  
                         _RE3 007C23                           _RE4 007C24                           _RD6 007C1E  
                         _RE5 007C25                           _RD7 007C1F                           _RE6 007C26  
                         _RG3 007C33                           _RE7 007C27                  __CFG_CPD$OFF 000000  
                         _PSA 007EAB                           _Run 16DC                ??_Key_FSM_Read 0001  
              ??_Key_FSM_Scan 0001                           prod 000FF3                   CRC_Verify@i 0029  
                         wreg 000FE8                  ?_GPIO_Config 0001                    _TXSTA2bits 000F21  
                 ?_RS485_Init 0001                  ___ftdiv@cntr 00AB                          ?_Run 0001  
                ___ftdiv@sign 00B0                          l3043 1704                          l3053 173E  
                        l3037 16E8                          l3049 1724                          l3081 1C06  
                        l2711 1636                          l2721 169A                          l2713 1642  
                        l2723 16A6                          l2715 1662                          l2707 1626  
                        l2653 1E68                          l2741 19F0                          l2655 1E6A  
                        l2647 1E60                          l2735 16CC                          l2719 167A  
                        l2807 12DE                          l2823 149C                          l2911 1938  
                        l2729 16BA                          l2841 14E2                          l2817 1474  
                        l2745 1A2A                          l2771 11EE                          l2851 1510  
                        l2915 1958                          l2845 14F8                          l2837 14D0  
                        l2925 178A                          l2695 1BD2                          l2855 1526  
                        l2847 14FE                          l2935 17BE                          l2943 17D2  
                        l2689 1BBE                          l2881 1836                          l2873 181C  
                        l2777 1228                          l2929 179A                          l2955 1CC0  
                        l2893 185C                          l2885 1846                          l2877 1826  
                        l2869 180E                          l2797 128A                          l2889 1850  
                        l2987 1A52                          _T0CS 007EAD                          _T0SE 007EAC  
                        u2610 1EA2                          u2621 11CA                          _IPEN 007E87  
                        u2641 1204                          u2671 145C                          u2691 1484  
                        u2975 1888                          u2985 18C4                 ??_Init_TM1640 001D  
                  _Delay_1Khz 1C4E                          Run@i 00B1                          _main 1BDA  
                ___ftpack@arg 0019                  ___ftpack@exp 001C                          fsr0h 000FEA  
                        fsr1h 000FE2                          fsr0l 000FE9                          fsr2h 000FDA  
                        indf1 000FE7                          fsr1l 000FE1                          indf2 000FDF  
                        fsr2l 000FD9                          pclat 000FFA               ??_Key_FSM_Reset 0001  
                        prodh 000FF4                          prodl 000FF3                          start 0194  
            ?_RS485_Send_Date 002A                 __CFG_IESO$OFF 000000                 __CFG_FOSC$HS1 000000  
               __CFG_MCLRE$ON 000000                  ___ftmul@cntr 0031                  ___param_bank 000010  
                ___ftmul@sign 0032               __end_of_BusyADC 1EA8               __end_of_ReadADC 1E9A  
              ??_TM1640_Delay 0019               __end_of_OpenADC 1B06                         ??_Run 0033  
              ??_TM1640_Start 001B                 __CFG_RETEN$ON 000000                         ?_main 0001  
             __end_of___lbmod 1CB8               __end_of_Sys_Cyc 0194               __end_of___ftdiv 1306  
             __end_of___ftmul 154E               __end_of___llmod 19DE                         _T0PS0 007EA8  
                       _T0PS1 007EA9                         _T0PS2 007EAA                         _RC2IF 007D25  
                       i2l111 109A                         i2l262 00A6                         i2l272 015A  
                       i2l266 00F8                         i2l955 19CC             __end_of_ADC6_Init 1E8A  
                       _TMR0H 000FD7                         _TMR0L 000FD6                         _TRISD 000F95  
                       _TRISE 000F96                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                 __CFG_WRT4$OFF 000000  
              __CFG_EBRT0$OFF 000000                 __CFG_WRT5$OFF 000000                __CFG_EBRT1$OFF 000000  
               __CFG_WRT6$OFF 000000                __CFG_EBRT2$OFF 000000                 __CFG_WRT7$OFF 000000  
              __CFG_EBRT3$OFF 000000                __CFG_EBRT4$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBRT5$OFF 000000                __CFG_EBRT6$OFF 000000                __CFG_EBRT7$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBRTB$OFF 000000           __size_of_CRC_Verify 006E                 ___ftpack@sign 001D  
                  _ConvertADC 1EBE                 _Local_Key_FSM 006A                         tablat 000FF5  
                       plusw2 000FDB                         status 000FD8    __end_of_RS485_Receive_Date 17F6  
          _TM1640_Writer_Byte 1B9C              __end_of_Get_ADC6 1AB8              ?_TM1640_Show_Hex 001F  
             __initialization 1D40           __end_of_Init_TM1640 1DB2           __size_of_RS485_Init 001E  
                __end_of_main 1C14           ?_TM1640_Writer_Byte 0001              __end_of_Key_Init 1EBE  
         Key_FSM_Read@key_num 0006              __end_of_Key_Scan 1C4E                    _Open2USART 17F6  
                      ??_main 0033                 __activetblptr 000001              ??_Manage_Message 0007  
        ??_TM1640_Writer_Byte 001B                        _ADCON0 000FC2                        _ADCON1 000FC1  
                      _ADCON2 000FC0              ___llmod@dividend 0001                        _ADRESH 000FC4  
                      _ADRESL 000FC3                        _ANCON2 000F23                        _T08BIT 007EAE  
            __end_of___ftpack 16DC               __CFG_BBSIZ$BB2K 000000                        i2l2131 1C42  
                      i2l2123 1C2E                        i2l2127 1C38                        i2l2119 1C24  
                      i2l2153 10E6                        i2l2145 1070                        i2l2137 1018  
                      i2l2411 1C78                        i2l2403 1C5C                        i2l2163 1112  
                      i2l2147 1086                        i2l2155 10FC                        i2l2149 10B4  
                      i2l2415 1C7C                        i2l2407 1C6A                        i2l2175 11A4  
                      i2l2167 111E                        i2l2327 1CAC                        i2l2319 1C92  
                      i2l2511 1420                        i2l2503 13E6                        i2l2441 1B42  
                      i2l2433 1B26                        i2l2185 1B64                        i2l2329 1CB2  
                      i2l2419 1C80                        i2l2179 11A8                        i2l2187 1B92  
                      i2l2523 1446                        i2l2515 142E                        i2l2507 1402  
                      i2l2531 198E                        i2l2611 0112                        i2l2437 1B34  
                      i2l2429 1B18                        i2l2533 1996                        i2l2605 00FC  
                      i2l2519 143A                        i2l2481 137A                        i2l2473 1360  
                      i2l2465 1346                        i2l2457 132C                        i2l2537 19BC  
                      i2l2529 1980                        i2l2545 1CF0                        i2l2625 0148  
                      i2l2617 0122                        i2l2493 139E                        i2l2485 1386  
                      i2l2477 136C                        i2l2495 13AC                        i2l2583 0090  
                      i2l2489 1394                        i2l2593 00AA                        i2l2499 13C8  
                      i2l2587 009A                        i2l2595 00B0                        i2l2597 00BC  
               SetTimer0@_tmr 0019                        _RCREG2 000F1D              __end_of___lwtoft 1D8C  
                      _RCSTA2 000F22                   ?_Delay_1Khz 0001                        _TMR0IE 007F95  
                      _TMR0IF 007F92                        _SPBRG2 000F1E                        _TMR0ON 007EAF  
  RS485_Receive_Date@DataBuff 002A                 TM1640_Delay@i 001A                     ??_BusyADC 0019  
                      _TXREG2 000F1C                     ??_ReadADC 001B                        _TXSTA2 000F21  
               ??_Timer0_Init 001D                     ??_OpenADC 001B        TM1640_Writer_Byte@Date 001B  
              __CFG_XINST$OFF 000000          __end_of_Key_FSM_Read 11B4          __end_of_Key_FSM_Scan 1B52  
      TM1640_Writer_Byte@mask 001C                        _g_Addr 0047             _RS485_ReceiveBuff 0060  
                      ___wmul 1D18                __CFG_STVREN$ON 000000                     ??___lbmod 0002  
                   ??_Sys_Cyc 000A                     ??___ftdiv 00A8                     ??___ftmul 002A  
                   ??___llmod 0009          Sys_Cyc@_overturn_LED 0042            __size_of_SetTimer0 0030  
                      clear_0 1D46                        clear_1 1D52          __size_of_TM1640_Stop 0024  
               ??_Show_Result 0023         ___ftmul@f3_as_product 002E                _Local_Key_User 007C  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8          __size_of_GPIO_Config 000C           _TM1640_Writer_Dates 1E1E  
                 ?_ConvertADC 0001          __end_of_TM1640_Delay 1E78    RS485_Receive_Date@_ucHByte 002C  
             ___lbmod@divisor 0001          __end_of_TM1640_Start 1E1E    RS485_Receive_Date@_ucLByte 002D  
                  __accesstop 0060       __end_of__initialization 1D58               ___lbmod@counter 0003  
                 _Init_TM1640 1D8C                  ?i2_SetTimer0 0001                 ___rparam_used 000001  
                  ___ftdiv@f1 00A2                    ___ftdiv@f2 00A5                    ___ftdiv@f3 00AC  
                ??_CRC_Verify 0026                    ___ftmul@f1 0024                    ___ftmul@f2 0027  
              __pcstackCOMRAM 0001          ?_TM1640_Writer_Dates 001D           __end_of_Timer0_Init 1DD6  
   Sys_Cyc@_RS485_Receive_Num 0040                   ?_Open2USART 0019                    ___lwtoft@c 0021  
         __size_of_Delay_1Khz 0038                     ?_Get_ADC6 0001                  ??_RS485_Init 001C  
 RS485_Receive_Date@RS485_LED 003E           __end_of_Show_Result 18F6            __end_of_CRC_Verify 1A4C  
           __end_of_SetTimer0 1CE8                    __pbssBANK0 0060                     ?_Key_Init 0001  
                   ?_Key_Scan 0001                   _ReceiveBuff 0098               __CFG_PLLCFG$OFF 000000  
     TM1640_Writer_Dates@Addr 001E            __end_of_LED_Number 1011       TM1640_Writer_Dates@Date 001D  
       ??_TM1640_Writer_Dates 001E                       ?___wmul 0019            __end_of_RS485_Init 1E5E  
         __size_of_ConvertADC 0004                     ?___ftpack 0019                     ?___lwtoft 0021  
                  ??_Get_ADC6 0033                       _SPBRGH2 000F1F                     _ADC6_Buff 003B  
                   _ADC6_Init 1E78                    ??_Key_Init 0019                    ??_Key_Scan 0001  
       __size_of_Key_FSM_Read 01A2         __size_of_Key_FSM_Scan 004C           __size_of_Open2USART 0084  
                     _BusyADC 1E9A                       _ReadADC 1E8A              RS485_Send_Date@i 002F  
             __CFG_PWRTEN$OFF 000000                       _OpenADC 1AB8                       __Hparam 0000  
                 _Timer0_Init 1DB2         __end_of_Key_FSM_Reset 1B9C                       __Lparam 0000  
               Sys_Cyc@_pulse 0018                _RS485_SendBuff 008E                       ___lbmod 1C86  
                     _Sys_Cyc 0008                       ___ftdiv 11B4               __size_of___wmul 0028  
                     ___ftmul 144C                       ___llmod 196E                  __psmallconst 1000  
          _RS485_Receive_Date 176E            _RS485_Receive_Flag 0045      __size_of_RS485_Send_Date 0078  
                     __pcinit 1D40                    ??___ftpack 001E         Sys_Cyc@_overturn_1Khz 0041  
                     __ramtop 1000                       __ptext0 1BDA                       __ptext1 1DB2  
                     __ptext2 1CB8                       __ptext3 187A                       __ptext4 154E  
                     __ptext5 1E1E                       __ptext6 16DC                       __ptext7 18F6  
                     __ptext8 176E                       __ptext9 19DE                    ??___lwtoft 0024  
                 _Show_Result 187A                  __size_of_Run 0092              Open2USART@config 001B  
         ?_RS485_Receive_Date 002A         __size_of_TM1640_Delay 001A             __CFG_MSSPMSK$MSK7 000000  
                _Key_FSM_Read 1012                  _Key_FSM_Scan 1B06         __size_of_TM1640_Start 0024  
                  ?_ADC6_Init 0001                OpenADC@config2 0019                OpenADC@config3 001A  
                     main@num 00B3          end_of_initialization 1D58                  ??_Delay_1Khz 0001  
                   _RS485_Num 0044          ??_RS485_Receive_Date 002C          __size_ofi2_SetTimer0 0030  
                     postdec2 000FDD                       postinc0 000FEE                       postinc1 000FE6  
                     postinc2 000FDE               CRC_Verify@usCrc 0027      __size_of_TM1640_Show_Hex 00C8  
                _TM1640_Delay 1E5E     RS485_Send_Date@date_dress 002A     RS485_Send_Date@date_lenth 002C  
                _TM1640_Start 1DFA                     _PORTEbits 000F84              TM1640_Delay@Time 0019  
          __end_of_Delay_1Khz 1C86              ___lbmod@dividend 0002                     _TRISCbits 000F94  
                   _TRISGbits 000F98   __size_of_TM1640_Writer_Byte 003E             __CFG_SOSCSEL$HIGH 000000  
                ??_ConvertADC 0019                   ___lbmod@rem 0004      Key_FSM_Read@key_num_mate 0005  
                ?_Init_TM1640 0001                   ___ftdiv@exp 00AF                   ___ftmul@exp 002D  
               ??_TM1640_Stop 001B                __end_of___wmul 1D40                  ??_Open2USART 001B  
          __end_of_ConvertADC 1EC2                 ??_GPIO_Config 0019           start_initialization 1D40  
           ??_RS485_Send_Date 002D        TM1640_Show_Hex@Numbers 001F                   __end_of_Run 176E  
                 ??_ADC6_Init 001E             __size_of_Get_ADC6 006C       __size_of_Manage_Message 0146  
             ___llmod@divisor 0005             __size_of_Key_Init 000A             __size_of_Key_Scan 003A  
             ___llmod@counter 0009                     _SetTimer0 1CB8            __end_of_Open2USART 187A  
             i2SetTimer0@_tmr 0001                     _Timer_Cyc 0037                      ??___wmul 001D  
               _Handle_Switch 0033           __end_of_TM1640_Stop 1DFA             __size_of___ftpack 00C6  
           ??_TM1640_Show_Hex 0021                   __pbssCOMRAM 0033             __size_of___lwtoft 0026  
               __pcstackBANK0 00A2                  _Receive_Flag 0046           __end_of_GPIO_Config 1EB4  
                    ?_BusyADC 0001                      ?_ReadADC 0019   __end_of_TM1640_Writer_Dates 1E40  
                  ?_SetTimer0 0019                      ?_OpenADC 0019                  ?_Timer0_Init 0001  
           __CFG_CCP2MX$PORTC 000000                     __pintcode 0008                      ?___lbmod 0001  
                    ?_Sys_Cyc 0001                      ?___ftdiv 00A2                      ?___ftmul 0024  
                    ?___llmod 0001                  ?_Show_Result 0001                   __smallconst 1000  
                 _LED2_switch 0043               Open2USART@spbrg 0019                ___wmul@product 001D  
               OpenADC@config 001D                      _PIE1bits 000F9D                      _PIE3bits 000FA3  
        __size_of_Init_TM1640 0026                      i2u163_40 103E                      i2u171_44 116C  
                    i2u171_45 1168                      i2u164_40 105C                      i2u172_44 1180  
                    i2u172_45 117C                      i2u165_40 10D2                      _PIR1bits 000F9E  
                 _TM1640_Stop 1DD6            CRC_Verify@_ucHByte 0022            CRC_Verify@_ucLByte 0024  
                  _ADCON0bits 000FC2             ___wmul@multiplier 0019                      _Get_ADC6 1A4C  
                 _GPIO_Config 1EA8                   Delay_1Khz@a 0001                   Delay_1Khz@b 0002  
                 Delay_1Khz@c 0003        __size_of_Key_FSM_Reset 004A                      _Key_Init 1EB4  
                    _Key_Scan 1C14                _Manage_Message 1306                 ??i2_SetTimer0 0003  
                 ??_SetTimer0 001B              __size_of_BusyADC 000E              __size_of_ReadADC 0010  
                    __Hrparam 0000   __size_of_RS485_Receive_Date 0088              __size_of_OpenADC 004E  
                    __Lrparam 0000                  __Lsmallconst 1000            __CFG_BOREN$SBORDIS 000000  
             _RS485_Send_Date 18F6              __size_of___lbmod 0032              __size_of_Sys_Cyc 018C  
            __size_of___ftdiv 0152              __size_of___ftmul 0102              __size_of___llmod 0070  
                    ___ftpack 1616                      ___lwtoft 1D66    __end_of_TM1640_Writer_Byte 1BDA  
                    __ptext10 1D18                      __ptext11 1A4C                      __ptext20 17F6  
                    __ptext12 1D66                      __ptext21 1EB4                      __ptext13 144C  
                    __ptext22 1D8C                      __ptext14 11B4                      __ptext31 1CE8  
                    __ptext23 1B9C                      __ptext15 1616                      __ptext32 196E  
                    __ptext24 1DD6                      __ptext16 1E8A                      __ptext33 1306  
                    __ptext25 1DFA                      __ptext17 1EBE                      __ptext34 1C86  
                    __ptext26 1E5E                      __ptext18 1E9A                      __ptext35 1B52  
                    __ptext27 1EA8                      __ptext19 1E40                      __ptext36 1012  
                    __ptext28 1E78                      __ptext37 1B06                      __ptext29 1AB8  
                    __ptext38 1C14                      __ptext39 1C4E        __end_of_Manage_Message 144C  
               __size_of_main 003A           __CFG_RTCOSC$SOSCREF 000000                    _CRC_Verify 19DE  
               _Key_FSM_Reset 1B52          __size_of_Timer0_Init 0024               _TM1640_Show_Hex 154E  
         __end_ofi2_SetTimer0 1D18             CRC_Verify@_pucBuf 001F           __CFG_INTOSCSEL$HIGH 000000  
          Sys_Cyc@RS485_Timer 003F                    _LED_Number 1001            __CFG_WDTEN$SWDTDIS 000000  
                  _INTCONbits 000FF2          __size_of_Show_Result 007C                    _RS485_Init 1E40  
             ?_Manage_Message 0001                      intlevel2 0000                    _RCSTA2bits 000F22  
     __end_of_RS485_Send_Date 196E                ?_Key_FSM_Reset 0001           RS485_Receive_Date@n 002E  
            CRC_Verify@_usLen 0021            __CFG_WDTPS$1048576 000000                 ?_Key_FSM_Read 0001  
               ?_Key_FSM_Scan 0001           __CFG_BORPWR$ZPBORMV 000000       __end_of_TM1640_Show_Hex 1616  
          __size_of_ADC6_Init 0012                   i2_SetTimer0 1CE8                   ?_CRC_Verify 001F  
