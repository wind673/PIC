

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Jan 23 16:24:50 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F67K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    55  0000                     
    56                           	psect	smallconst
    57  001000                     __psmallconst:
    58                           	opt stack 0
    59  001000  00                 	db	0
    60  001001                     _LED_Number:
    61                           	opt stack 0
    62  001001  3F                 	db	63
    63  001002  06                 	db	6
    64  001003  5B                 	db	91
    65  001004  4F                 	db	79
    66  001005  66                 	db	102
    67  001006  6D                 	db	109
    68  001007  7D                 	db	125
    69  001008  07                 	db	7
    70  001009  7F                 	db	127
    71  00100A  6F                 	db	111
    72  00100B  77                 	db	119
    73  00100C  7C                 	db	124
    74  00100D  39                 	db	57
    75  00100E  5E                 	db	94
    76  00100F  79                 	db	121
    77  001010  71                 	db	113
    78  001011                     __end_of_LED_Number:
    79                           	opt stack 0
    80  0000                     _ANCON2	set	3875
    81  0000                     _RCREG2	set	3869
    82  0000                     _RCSTA2	set	3874
    83  0000                     _RCSTA2bits	set	3874
    84  0000                     _SPBRG2	set	3870
    85  0000                     _SPBRGH2	set	3871
    86  0000                     _TXREG2	set	3868
    87  0000                     _TXSTA2	set	3873
    88  0000                     _TXSTA2bits	set	3873
    89  0000                     _ADCON0	set	4034
    90  0000                     _ADCON0bits	set	4034
    91  0000                     _ADCON1	set	4033
    92  0000                     _ADCON2	set	4032
    93  0000                     _ADRESH	set	4036
    94  0000                     _ADRESL	set	4035
    95  0000                     _INTCONbits	set	4082
    96  0000                     _PIE1bits	set	3997
    97  0000                     _PIE3bits	set	4003
    98  0000                     _PIR1bits	set	3998
    99  0000                     _PORTEbits	set	3972
   100  0000                     _TMR0H	set	4055
   101  0000                     _TMR0L	set	4054
   102  0000                     _TRISCbits	set	3988
   103  0000                     _TRISD	set	3989
   104  0000                     _TRISE	set	3990
   105  0000                     _TRISGbits	set	3992
   106  0000                     _GIE	set	32663
   107  0000                     _IPEN	set	32391
   108  0000                     _PSA	set	32427
   109  0000                     _RC2IF	set	32037
   110  0000                     _RC3	set	31763
   111  0000                     _RC4	set	31764
   112  0000                     _RD6	set	31774
   113  0000                     _RD7	set	31775
   114  0000                     _RE2	set	31778
   115  0000                     _RE3	set	31779
   116  0000                     _RE4	set	31780
   117  0000                     _RE5	set	31781
   118  0000                     _RE6	set	31782
   119  0000                     _RE7	set	31783
   120  0000                     _RG3	set	31795
   121  0000                     _T08BIT	set	32430
   122  0000                     _T0CS	set	32429
   123  0000                     _T0PS0	set	32424
   124  0000                     _T0PS1	set	32425
   125  0000                     _T0PS2	set	32426
   126  0000                     _T0SE	set	32428
   127  0000                     _TMR0IE	set	32661
   128  0000                     _TMR0IF	set	32658
   129  0000                     _TMR0ON	set	32431
   130                           
   131                           ; #config settings
   132  001011  00                 	db	0	; dummy byte at the end
   133  0000                     
   134                           	psect	cinit
   135  001DFA                     __pcinit:
   136                           	opt stack 0
   137  001DFA                     start_initialization:
   138                           	opt stack 0
   139  001DFA                     __initialization:
   140                           	opt stack 0
   141                           
   142                           ; Clear objects allocated to BANK0 (66 bytes)
   143  001DFA  EE00  F060         	lfsr	0,__pbssBANK0
   144  001DFE  0E42               	movlw	66
   145  001E00                     clear_0:
   146  001E00  6AEE               	clrf	postinc0,c
   147  001E02  06E8               	decf	wreg,f,c
   148  001E04  E1FD               	bnz	clear_0
   149                           
   150                           ; Clear objects allocated to COMRAM (21 bytes)
   151  001E06  EE00  F033         	lfsr	0,__pbssCOMRAM
   152  001E0A  0E15               	movlw	21
   153  001E0C                     clear_1:
   154  001E0C  6AEE               	clrf	postinc0,c
   155  001E0E  06E8               	decf	wreg,f,c
   156  001E10  E1FD               	bnz	clear_1
   157  001E12                     end_of_initialization:
   158                           	opt stack 0
   159  001E12                     __end_of__initialization:
   160                           	opt stack 0
   161  001E12  0E00               	movlw	low (__Lsmallconst shr (0+16))
   162  001E14  6EF8               	movwf	tblptru,c
   163  001E16  0E10               	movlw	high __Lsmallconst
   164  001E18  6EF7               	movwf	tblptrh,c
   165  001E1A  0100               	movlb	0
   166  001E1C  EF6E  F00B         	goto	_main	;jump to C main() function
   167                           tblptru	equ	0xFF8
   168                           tblptrh	equ	0xFF7
   169                           postinc0	equ	0xFEE
   170                           wreg	equ	0xFE8
   171                           
   172                           	psect	bssCOMRAM
   173  000033                     __pbssCOMRAM:
   174                           	opt stack 0
   175  000033                     _Handle_Switch:
   176                           	opt stack 0
   177  000033                     	ds	4
   178  000037                     _Timer_Cyc:
   179                           	opt stack 0
   180  000037                     	ds	4
   181  00003B                     _ADC6_Buff:
   182                           	opt stack 0
   183  00003B                     	ds	3
   184  00003E                     RS485_Receive_Date@RS485_LED:
   185                           	opt stack 0
   186  00003E                     	ds	1
   187  00003F                     Sys_Cyc@RS485_Timer:
   188                           	opt stack 0
   189  00003F                     	ds	1
   190  000040                     Sys_Cyc@_RS485_Receive_Num:
   191                           	opt stack 0
   192  000040                     	ds	1
   193  000041                     Sys_Cyc@_overturn_1Khz:
   194                           	opt stack 0
   195  000041                     	ds	1
   196  000042                     Sys_Cyc@_overturn_LED:
   197                           	opt stack 0
   198  000042                     	ds	1
   199  000043                     _LED2_switch:
   200                           	opt stack 0
   201  000043                     	ds	1
   202  000044                     _RS485_Num:
   203                           	opt stack 0
   204  000044                     	ds	1
   205  000045                     _RS485_Receive_Flag:
   206                           	opt stack 0
   207  000045                     	ds	1
   208  000046                     _Receive_Flag:
   209                           	opt stack 0
   210  000046                     	ds	1
   211  000047                     _g_Addr:
   212                           	opt stack 0
   213  000047                     	ds	1
   214                           tblptru	equ	0xFF8
   215                           tblptrh	equ	0xFF7
   216                           postinc0	equ	0xFEE
   217                           wreg	equ	0xFE8
   218                           
   219                           	psect	bssBANK0
   220  000060                     __pbssBANK0:
   221                           	opt stack 0
   222  000060                     _RS485_ReceiveBuff:
   223                           	opt stack 0
   224  000060                     	ds	10
   225  00006A                     _Local_Key_FSM:
   226                           	opt stack 0
   227  00006A                     	ds	18
   228  00007C                     _Local_Key_User:
   229                           	opt stack 0
   230  00007C                     	ds	18
   231  00008E                     _RS485_SendBuff:
   232                           	opt stack 0
   233  00008E                     	ds	10
   234  000098                     _ReceiveBuff:
   235                           	opt stack 0
   236  000098                     	ds	10
   237                           tblptru	equ	0xFF8
   238                           tblptrh	equ	0xFF7
   239                           postinc0	equ	0xFEE
   240                           wreg	equ	0xFE8
   241                           
   242                           	psect	cstackBANK0
   243  0000A2                     __pcstackBANK0:
   244                           	opt stack 0
   245  0000A2                     ?___ftdiv:
   246                           	opt stack 0
   247  0000A2                     ___ftdiv@f1:
   248                           	opt stack 0
   249                           
   250                           ; 3 bytes @ 0x0
   251  0000A2                     	ds	3
   252  0000A5                     ___ftdiv@f2:
   253                           	opt stack 0
   254                           
   255                           ; 3 bytes @ 0x3
   256  0000A5                     	ds	3
   257  0000A8                     ??___ftdiv:
   258                           
   259                           ; 0 bytes @ 0x6
   260  0000A8                     	ds	3
   261  0000AB                     ___ftdiv@cntr:
   262                           	opt stack 0
   263                           
   264                           ; 1 bytes @ 0x9
   265  0000AB                     	ds	1
   266  0000AC                     ___ftdiv@f3:
   267                           	opt stack 0
   268                           
   269                           ; 3 bytes @ 0xA
   270  0000AC                     	ds	3
   271  0000AF                     ___ftdiv@exp:
   272                           	opt stack 0
   273                           
   274                           ; 1 bytes @ 0xD
   275  0000AF                     	ds	1
   276  0000B0                     ___ftdiv@sign:
   277                           	opt stack 0
   278                           
   279                           ; 1 bytes @ 0xE
   280  0000B0                     	ds	1
   281  0000B1                     Run@i:
   282                           	opt stack 0
   283                           
   284                           ; 2 bytes @ 0xF
   285  0000B1                     	ds	2
   286  0000B3                     main@num:
   287                           	opt stack 0
   288                           
   289                           ; 3 bytes @ 0x11
   290  0000B3                     	ds	3
   291                           tblptru	equ	0xFF8
   292                           tblptrh	equ	0xFF7
   293                           postinc0	equ	0xFEE
   294                           wreg	equ	0xFE8
   295                           
   296                           	psect	cstackCOMRAM
   297  000001                     __pcstackCOMRAM:
   298                           	opt stack 0
   299  000001                     ??_Key_FSM_Read:
   300  000001                     ?___llmod:
   301                           	opt stack 0
   302  000001                     Delay_1Khz@a:
   303                           	opt stack 0
   304  000001                     Key_FSM_Reset@t:
   305                           	opt stack 0
   306  000001                     ___lbmod@divisor:
   307                           	opt stack 0
   308  000001                     i2SetTimer0@_tmr:
   309                           	opt stack 0
   310  000001                     ___llmod@dividend:
   311                           	opt stack 0
   312                           
   313                           ; 4 bytes @ 0x0
   314  000001                     	ds	1
   315  000002                     Delay_1Khz@b:
   316                           	opt stack 0
   317  000002                     ___lbmod@dividend:
   318                           	opt stack 0
   319                           
   320                           ; 1 bytes @ 0x1
   321  000002                     	ds	1
   322  000003                     ??i2_SetTimer0:
   323  000003                     Delay_1Khz@c:
   324                           	opt stack 0
   325  000003                     ___lbmod@counter:
   326                           	opt stack 0
   327                           
   328                           ; 1 bytes @ 0x2
   329  000003                     	ds	1
   330  000004                     ___lbmod@rem:
   331                           	opt stack 0
   332                           
   333                           ; 1 bytes @ 0x3
   334  000004                     	ds	1
   335  000005                     Key_FSM_Read@key_num_mate:
   336                           	opt stack 0
   337  000005                     ___llmod@divisor:
   338                           	opt stack 0
   339                           
   340                           ; 4 bytes @ 0x4
   341  000005                     	ds	1
   342  000006                     Key_FSM_Read@key_num:
   343                           	opt stack 0
   344                           
   345                           ; 1 bytes @ 0x5
   346  000006                     	ds	1
   347  000007                     
   348                           ; 0 bytes @ 0x6
   349  000007                     	ds	2
   350  000009                     ___llmod@counter:
   351                           	opt stack 0
   352                           
   353                           ; 1 bytes @ 0x8
   354  000009                     	ds	1
   355  00000A                     ??_Sys_Cyc:
   356                           
   357                           ; 0 bytes @ 0x9
   358  00000A                     	ds	14
   359  000018                     Sys_Cyc@_pulse:
   360                           	opt stack 0
   361                           
   362                           ; 1 bytes @ 0x17
   363  000018                     	ds	1
   364  000019                     ?_ReadADC:
   365                           	opt stack 0
   366  000019                     ?___wmul:
   367                           	opt stack 0
   368  000019                     ?___ftpack:
   369                           	opt stack 0
   370  000019                     delay1ms@a:
   371                           	opt stack 0
   372  000019                     TM1640_Delay@Time:
   373                           	opt stack 0
   374  000019                     OpenADC@config2:
   375                           	opt stack 0
   376  000019                     SetTimer0@_tmr:
   377                           	opt stack 0
   378  000019                     Open2USART@spbrg:
   379                           	opt stack 0
   380  000019                     ___wmul@multiplier:
   381                           	opt stack 0
   382  000019                     ___ftpack@arg:
   383                           	opt stack 0
   384                           
   385                           ; 3 bytes @ 0x18
   386  000019                     	ds	1
   387  00001A                     delay1ms@b:
   388                           	opt stack 0
   389  00001A                     TM1640_Delay@i:
   390                           	opt stack 0
   391  00001A                     OpenADC@config3:
   392                           	opt stack 0
   393                           
   394                           ; 1 bytes @ 0x19
   395  00001A                     	ds	1
   396  00001B                     ??_SetTimer0:
   397  00001B                     ??_OpenADC:
   398  00001B                     ??_ReadADC:
   399  00001B                     delay1ms@c:
   400                           	opt stack 0
   401  00001B                     TM1640_Writer_Byte@Date:
   402                           	opt stack 0
   403  00001B                     Open2USART@config:
   404                           	opt stack 0
   405  00001B                     ___wmul@multiplicand:
   406                           	opt stack 0
   407                           
   408                           ; 2 bytes @ 0x1A
   409  00001B                     	ds	1
   410  00001C                     TM1640_Writer_Byte@mask:
   411                           	opt stack 0
   412  00001C                     ___ftpack@exp:
   413                           	opt stack 0
   414  00001C                     delay_ms@_ms:
   415                           	opt stack 0
   416                           
   417                           ; 2 bytes @ 0x1B
   418  00001C                     	ds	1
   419  00001D                     TM1640_Writer_Dates@Date:
   420                           	opt stack 0
   421  00001D                     OpenADC@config:
   422                           	opt stack 0
   423  00001D                     ___ftpack@sign:
   424                           	opt stack 0
   425  00001D                     ___wmul@product:
   426                           	opt stack 0
   427                           
   428                           ; 2 bytes @ 0x1C
   429  00001D                     	ds	1
   430  00001E                     ??___ftpack:
   431  00001E                     TM1640_Writer_Dates@Addr:
   432                           	opt stack 0
   433                           
   434                           ; 1 bytes @ 0x1D
   435  00001E                     	ds	1
   436  00001F                     CRC_Verify@_pucBuf:
   437                           	opt stack 0
   438  00001F                     TM1640_Show_Hex@Numbers:
   439                           	opt stack 0
   440                           
   441                           ; 2 bytes @ 0x1E
   442  00001F                     	ds	2
   443  000021                     ??_TM1640_Show_Hex:
   444  000021                     ?___lwtoft:
   445                           	opt stack 0
   446  000021                     CRC_Verify@_usLen:
   447                           	opt stack 0
   448  000021                     ___lwtoft@c:
   449                           	opt stack 0
   450                           
   451                           ; 2 bytes @ 0x20
   452  000021                     	ds	1
   453  000022                     CRC_Verify@_ucHByte:
   454                           	opt stack 0
   455                           
   456                           ; 2 bytes @ 0x21
   457  000022                     	ds	1
   458  000023                     ??_Show_Result:
   459                           
   460                           ; 0 bytes @ 0x22
   461  000023                     	ds	1
   462  000024                     ?___ftmul:
   463                           	opt stack 0
   464  000024                     CRC_Verify@_ucLByte:
   465                           	opt stack 0
   466  000024                     ___ftmul@f1:
   467                           	opt stack 0
   468                           
   469                           ; 3 bytes @ 0x23
   470  000024                     	ds	2
   471  000026                     ??_CRC_Verify:
   472                           
   473                           ; 0 bytes @ 0x25
   474  000026                     	ds	1
   475  000027                     CRC_Verify@usCrc:
   476                           	opt stack 0
   477  000027                     ___ftmul@f2:
   478                           	opt stack 0
   479                           
   480                           ; 3 bytes @ 0x26
   481  000027                     	ds	2
   482  000029                     CRC_Verify@i:
   483                           	opt stack 0
   484                           
   485                           ; 1 bytes @ 0x28
   486  000029                     	ds	1
   487  00002A                     ??___ftmul:
   488  00002A                     RS485_Send_Date@date_dress:
   489                           	opt stack 0
   490  00002A                     RS485_Receive_Date@DataBuff:
   491                           	opt stack 0
   492                           
   493                           ; 2 bytes @ 0x29
   494  00002A                     	ds	2
   495  00002C                     RS485_Send_Date@date_lenth:
   496                           	opt stack 0
   497  00002C                     RS485_Receive_Date@_ucHByte:
   498                           	opt stack 0
   499                           
   500                           ; 1 bytes @ 0x2B
   501  00002C                     	ds	1
   502  00002D                     ??_RS485_Send_Date:
   503  00002D                     RS485_Receive_Date@_ucLByte:
   504                           	opt stack 0
   505  00002D                     ___ftmul@exp:
   506                           	opt stack 0
   507                           
   508                           ; 1 bytes @ 0x2C
   509  00002D                     	ds	1
   510  00002E                     RS485_Receive_Date@n:
   511                           	opt stack 0
   512  00002E                     ___ftmul@f3_as_product:
   513                           	opt stack 0
   514                           
   515                           ; 3 bytes @ 0x2D
   516  00002E                     	ds	1
   517  00002F                     RS485_Send_Date@i:
   518                           	opt stack 0
   519                           
   520                           ; 2 bytes @ 0x2E
   521  00002F                     	ds	2
   522  000031                     ___ftmul@cntr:
   523                           	opt stack 0
   524                           
   525                           ; 1 bytes @ 0x30
   526  000031                     	ds	1
   527  000032                     ___ftmul@sign:
   528                           	opt stack 0
   529                           
   530                           ; 1 bytes @ 0x31
   531  000032                     	ds	1
   532  000033                     tblptru	equ	0xFF8
   533                           tblptrh	equ	0xFF7
   534                           postinc0	equ	0xFEE
   535                           wreg	equ	0xFE8
   536                           
   537                           ; 0 bytes @ 0x32
   538 ;;
   539 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   540 ;;
   541 ;; *************** function _main *****************
   542 ;; Defined at:
   543 ;;		line 37 in file "_01_USER/main.c"
   544 ;; Parameters:    Size  Location     Type
   545 ;;		None
   546 ;; Auto vars:     Size  Location     Type
   547 ;;  num             3   17[BANK0 ] float 
   548 ;; Return value:  Size  Location     Type
   549 ;;                  2   22[None  ] int 
   550 ;; Registers used:
   551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   552 ;; Tracked objects:
   553 ;;		On entry : 0/0
   554 ;;		On exit  : 0/0
   555 ;;		Unchanged: 0/0
   556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   558 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   560 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   561 ;;Total ram usage:        3 bytes
   562 ;; Hardware stack levels required when called:    8
   563 ;; This function calls:
   564 ;;		_ADC6_Init
   565 ;;		_GPIO_Config
   566 ;;		_Init_TM1640
   567 ;;		_Key_Init
   568 ;;		_RS485_Init
   569 ;;		_Run
   570 ;;		_Show_Result
   571 ;;		_TM1640_Show_Hex
   572 ;;		_Timer0_Init
   573 ;;		_delay_ms
   574 ;; This function is called by:
   575 ;;		Startup code after reset
   576 ;; This function uses a non-reentrant model
   577 ;;
   578                           
   579                           	psect	text0
   580  0016DC                     __ptext0:
   581                           	opt stack 0
   582  0016DC                     _main:
   583                           	opt stack 23
   584                           
   585                           ;main.c: 40: float num = 0;
   586                           
   587                           ;incstack = 0
   588  0016DC  0E00               	movlw	0
   589  0016DE  0100               	movlb	0	; () banked
   590  0016E0  6FB3               	movwf	main@num& (0+255),b
   591  0016E2  0E00               	movlw	0
   592  0016E4  0100               	movlb	0	; () banked
   593  0016E6  6FB4               	movwf	(main@num+1)& (0+255),b
   594  0016E8  0E00               	movlw	0
   595  0016EA  0100               	movlb	0	; () banked
   596  0016EC  6FB5               	movwf	(main@num+2)& (0+255),b
   597                           
   598                           ; BSR set to: 0
   599                           ;main.c: 43: GPIO_Config();
   600  0016EE  ECBE  F00F         	call	_GPIO_Config	;wreg free
   601                           
   602                           ;main.c: 44: Key_Init();
   603  0016F2  ECC4  F00F         	call	_Key_Init	;wreg free
   604                           
   605                           ;main.c: 45: Timer0_Init();
   606  0016F6  EC36  F00F         	call	_Timer0_Init	;wreg free
   607                           
   608                           ;main.c: 46: Init_TM1640();
   609  0016FA  EC23  F00F         	call	_Init_TM1640	;wreg free
   610                           
   611                           ;main.c: 47: ADC6_Init();
   612  0016FE  ECA6  F00F         	call	_ADC6_Init	;wreg free
   613                           
   614                           ;main.c: 48: RS485_Init();
   615  001702  EC7D  F00F         	call	_RS485_Init	;wreg free
   616                           
   617                           ;main.c: 50: delay_ms(100);
   618  001706  0E00               	movlw	0
   619  001708  6E1D               	movwf	delay_ms@_ms+1,c
   620  00170A  0E64               	movlw	100
   621  00170C  6E1C               	movwf	delay_ms@_ms,c
   622  00170E  EC8C  F00F         	call	_delay_ms	;wreg free
   623                           
   624                           ;main.c: 51: TM1640_Show_Hex( 0x0000 );
   625  001712  0E00               	movlw	0
   626  001714  6E20               	movwf	TM1640_Show_Hex@Numbers+1,c
   627  001716  0E00               	movlw	0
   628  001718  6E1F               	movwf	TM1640_Show_Hex@Numbers,c
   629  00171A  ECA7  F00A         	call	_TM1640_Show_Hex	;wreg free
   630                           
   631                           ;main.c: 52: delay_ms(100);
   632  00171E  0E00               	movlw	0
   633  001720  6E1D               	movwf	delay_ms@_ms+1,c
   634  001722  0E64               	movlw	100
   635  001724  6E1C               	movwf	delay_ms@_ms,c
   636  001726  EC8C  F00F         	call	_delay_ms	;wreg free
   637                           
   638                           ;main.c: 53: TM1640_Show_Hex( 0x3333 );
   639  00172A  0E33               	movlw	51
   640  00172C  6E20               	movwf	TM1640_Show_Hex@Numbers+1,c
   641  00172E  0E33               	movlw	51
   642  001730  6E1F               	movwf	TM1640_Show_Hex@Numbers,c
   643  001732  ECA7  F00A         	call	_TM1640_Show_Hex	;wreg free
   644                           
   645                           ;main.c: 54: delay_ms(100);
   646  001736  0E00               	movlw	0
   647  001738  6E1D               	movwf	delay_ms@_ms+1,c
   648  00173A  0E64               	movlw	100
   649  00173C  6E1C               	movwf	delay_ms@_ms,c
   650  00173E  EC8C  F00F         	call	_delay_ms	;wreg free
   651                           
   652                           ;main.c: 55: TM1640_Show_Hex( 0x6666 );
   653  001742  0E66               	movlw	102
   654  001744  6E20               	movwf	TM1640_Show_Hex@Numbers+1,c
   655  001746  0E66               	movlw	102
   656  001748  6E1F               	movwf	TM1640_Show_Hex@Numbers,c
   657  00174A  ECA7  F00A         	call	_TM1640_Show_Hex	;wreg free
   658                           
   659                           ;main.c: 56: delay_ms(100);
   660  00174E  0E00               	movlw	0
   661  001750  6E1D               	movwf	delay_ms@_ms+1,c
   662  001752  0E64               	movlw	100
   663  001754  6E1C               	movwf	delay_ms@_ms,c
   664  001756  EC8C  F00F         	call	_delay_ms	;wreg free
   665                           
   666                           ;main.c: 57: TM1640_Show_Hex( 0xffff );
   667  00175A  0EFF               	movlw	255
   668  00175C  6E20               	movwf	TM1640_Show_Hex@Numbers+1,c
   669  00175E  681F               	setf	TM1640_Show_Hex@Numbers,c
   670  001760  ECA7  F00A         	call	_TM1640_Show_Hex	;wreg free
   671                           
   672                           ;main.c: 58: delay_ms(100);
   673  001764  0E00               	movlw	0
   674  001766  6E1D               	movwf	delay_ms@_ms+1,c
   675  001768  0E64               	movlw	100
   676  00176A  6E1C               	movwf	delay_ms@_ms,c
   677  00176C  EC8C  F00F         	call	_delay_ms	;wreg free
   678                           
   679                           ;main.c: 59: TM1640_Show_Hex( 0x8888 );
   680  001770  0E88               	movlw	136
   681  001772  6E20               	movwf	TM1640_Show_Hex@Numbers+1,c
   682  001774  0E88               	movlw	136
   683  001776  6E1F               	movwf	TM1640_Show_Hex@Numbers,c
   684  001778  ECA7  F00A         	call	_TM1640_Show_Hex	;wreg free
   685                           
   686                           ;main.c: 60: delay_ms(100);
   687  00177C  0E00               	movlw	0
   688  00177E  6E1D               	movwf	delay_ms@_ms+1,c
   689  001780  0E64               	movlw	100
   690  001782  6E1C               	movwf	delay_ms@_ms,c
   691  001784  EC8C  F00F         	call	_delay_ms	;wreg free
   692  001788  D000               	goto	l3187
   693  00178A                     l3187:
   694                           
   695                           ;main.c: 63: {
   696                           ;main.c: 64: Run();
   697  00178A  ECCC  F00B         	call	_Run	;wreg free
   698                           
   699                           ;main.c: 65: Show_Result();
   700  00178E  EC9B  F00C         	call	_Show_Result	;wreg free
   701  001792  D7FB               	goto	l3187
   702                           
   703                           ;main.c: 66: }
   704                           ;main.c: 68: return 0;
   705                           ;	Return value of _main is never used
   706  001794  EFCA  F000         	goto	start
   707  001798                     __end_of_main:
   708                           	opt stack 0
   709                           tblptru	equ	0xFF8
   710                           tblptrh	equ	0xFF7
   711                           postinc0	equ	0xFEE
   712                           wreg	equ	0xFE8
   713                           
   714 ;; *************** function _delay_ms *****************
   715 ;; Defined at:
   716 ;;		line 35 in file "_01_USER/My_Delay.c"
   717 ;; Parameters:    Size  Location     Type
   718 ;;  _ms             2   27[COMRAM] unsigned int 
   719 ;; Auto vars:     Size  Location     Type
   720 ;;		None
   721 ;; Return value:  Size  Location     Type
   722 ;;		None               void
   723 ;; Registers used:
   724 ;;		wreg, status,2, status,0, cstack
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   730 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   733 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   734 ;;Total ram usage:        2 bytes
   735 ;; Hardware stack levels used:    1
   736 ;; Hardware stack levels required when called:    4
   737 ;; This function calls:
   738 ;;		_delay1ms
   739 ;; This function is called by:
   740 ;;		_main
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           
   744                           	psect	text1
   745  001F18                     __ptext1:
   746                           	opt stack 0
   747  001F18                     _delay_ms:
   748                           	opt stack 26
   749                           
   750                           ;My_Delay.c: 37: while(_ms--) delay1ms();
   751                           
   752                           ;incstack = 0
   753  001F18  D003               	goto	l3115
   754  001F1A                     l3113:
   755  001F1A  EC68  F00E         	call	_delay1ms	;wreg free
   756  001F1E  D000               	goto	l3115
   757  001F20                     l3115:
   758  001F20  061C               	decf	delay_ms@_ms,f,c
   759  001F22  A0D8               	btfss	status,0,c
   760  001F24  061D               	decf	delay_ms@_ms+1,f,c
   761  001F26  281C               	incf	delay_ms@_ms,w,c
   762  001F28  E1F8               	bnz	l3113
   763  001F2A  281D               	incf	delay_ms@_ms+1,w,c
   764  001F2C  A4D8               	btfss	status,2,c
   765  001F2E  D7F5               	goto	l3113
   766  001F30  0012               	return		;funcret
   767  001F32                     __end_of_delay_ms:
   768                           	opt stack 0
   769                           tblptru	equ	0xFF8
   770                           tblptrh	equ	0xFF7
   771                           postinc0	equ	0xFEE
   772                           wreg	equ	0xFE8
   773                           status	equ	0xFD8
   774                           
   775 ;; *************** function _delay1ms *****************
   776 ;; Defined at:
   777 ;;		line 58 in file "_01_USER/My_Delay.c"
   778 ;; Parameters:    Size  Location     Type
   779 ;;		None
   780 ;; Auto vars:     Size  Location     Type
   781 ;;  c               1   26[COMRAM] unsigned char 
   782 ;;  b               1   25[COMRAM] unsigned char 
   783 ;;  a               1   24[COMRAM] unsigned char 
   784 ;; Return value:  Size  Location     Type
   785 ;;		None               void
   786 ;; Registers used:
   787 ;;		wreg, status,2, status,0
   788 ;; Tracked objects:
   789 ;;		On entry : 0/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   794 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   796 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   797 ;;Total ram usage:        3 bytes
   798 ;; Hardware stack levels used:    1
   799 ;; Hardware stack levels required when called:    3
   800 ;; This function calls:
   801 ;;		Nothing
   802 ;; This function is called by:
   803 ;;		_delay_ms
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807                           	psect	text2
   808  001CD0                     __ptext2:
   809                           	opt stack 0
   810  001CD0                     _delay1ms:
   811                           	opt stack 26
   812                           
   813                           ;My_Delay.c: 60: unsigned char a,b,c;
   814                           ;My_Delay.c: 61: for(c=1;c>0;c--)
   815                           
   816                           ;incstack = 0
   817  001CD0  0E01               	movlw	1
   818  001CD2  6E1B               	movwf	delay1ms@c,c
   819  001CD4  501B               	movf	delay1ms@c,w,c
   820  001CD6  B4D8               	btfsc	status,2,c
   821  001CD8  0012               	return	
   822  001CDA  D001               	goto	l2931
   823  001CDC  0012               	return	
   824  001CDE                     l2931:
   825                           
   826                           ;My_Delay.c: 62: for(b=94;b>0;b--)
   827  001CDE  0E5E               	movlw	94
   828  001CE0  6E1A               	movwf	delay1ms@b,c
   829  001CE2  501A               	movf	delay1ms@b,w,c
   830  001CE4  B4D8               	btfsc	status,2,c
   831  001CE6  D00D               	goto	l2947
   832  001CE8  D001               	goto	l2935
   833  001CEA  D00B               	goto	l2947
   834  001CEC                     l2935:
   835                           
   836                           ;My_Delay.c: 63: for(a=2;a>0;a--);
   837  001CEC  0E02               	movlw	2
   838  001CEE  6E19               	movwf	delay1ms@a,c
   839  001CF0  5019               	movf	delay1ms@a,w,c
   840  001CF2  B4D8               	btfsc	status,2,c
   841  001CF4  D004               	goto	l2943
   842  001CF6  D001               	goto	l2939
   843  001CF8  D002               	goto	l2943
   844  001CFA                     l2939:
   845  001CFA  0619               	decf	delay1ms@a,f,c
   846  001CFC  D7F9               	goto	L1
   847  001CFE                     l2943:
   848  001CFE  061A               	decf	delay1ms@b,f,c
   849  001D00  D7F0               	goto	L2
   850  001D02                     l2947:
   851  001D02  061B               	decf	delay1ms@c,f,c
   852  001D04  D7E7               	goto	L3
   853  001D06  0012               	return		;funcret
   854  001D08                     __end_of_delay1ms:
   855                           	opt stack 0
   856                           tblptru	equ	0xFF8
   857                           tblptrh	equ	0xFF7
   858                           postinc0	equ	0xFEE
   859                           wreg	equ	0xFE8
   860                           status	equ	0xFD8
   861                           
   862 ;; *************** function _Timer0_Init *****************
   863 ;; Defined at:
   864 ;;		line 41 in file "_01_USER/My_Timer.c"
   865 ;; Parameters:    Size  Location     Type
   866 ;;		None
   867 ;; Auto vars:     Size  Location     Type
   868 ;;		None
   869 ;; Return value:  Size  Location     Type
   870 ;;		None               void
   871 ;; Registers used:
   872 ;;		wreg, status,2, status,0, cstack
   873 ;; Tracked objects:
   874 ;;		On entry : 0/0
   875 ;;		On exit  : 0/0
   876 ;;		Unchanged: 0/0
   877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   882 ;;Total ram usage:        0 bytes
   883 ;; Hardware stack levels used:    1
   884 ;; Hardware stack levels required when called:    4
   885 ;; This function calls:
   886 ;;		_SetTimer0
   887 ;; This function is called by:
   888 ;;		_main
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           	psect	text3
   893  001E6C                     __ptext3:
   894                           	opt stack 0
   895  001E6C                     _Timer0_Init:
   896                           	opt stack 26
   897                           
   898                           ;My_Timer.c: 43: T08BIT = 0;
   899                           
   900                           ;incstack = 0
   901  001E6C  9CD5               	bcf	4053,6,c	;volatile
   902                           
   903                           ;My_Timer.c: 44: T0CS = 0;
   904  001E6E  9AD5               	bcf	4053,5,c	;volatile
   905                           
   906                           ;My_Timer.c: 45: T0SE = 0;
   907  001E70  98D5               	bcf	4053,4,c	;volatile
   908                           
   909                           ;My_Timer.c: 46: PSA = 0;
   910  001E72  96D5               	bcf	4053,3,c	;volatile
   911                           
   912                           ;My_Timer.c: 47: T0PS2 = 1;
   913  001E74  84D5               	bsf	4053,2,c	;volatile
   914                           
   915                           ;My_Timer.c: 48: T0PS1 = 1;
   916  001E76  82D5               	bsf	4053,1,c	;volatile
   917                           
   918                           ;My_Timer.c: 49: T0PS0 = 1;
   919  001E78  80D5               	bsf	4053,0,c	;volatile
   920                           
   921                           ;My_Timer.c: 63: SetTimer0(1);
   922  001E7A  0E00               	movlw	0
   923  001E7C  6E1A               	movwf	SetTimer0@_tmr+1,c
   924  001E7E  0E01               	movlw	1
   925  001E80  6E19               	movwf	SetTimer0@_tmr,c
   926  001E82  ECB9  F00E         	call	_SetTimer0	;wreg free
   927                           
   928                           ;My_Timer.c: 64: TMR0ON = 1;
   929  001E86  8ED5               	bsf	4053,7,c	;volatile
   930                           
   931                           ;My_Timer.c: 65: TMR0IE = 1;
   932  001E88  8AF2               	bsf	intcon,5,c	;volatile
   933                           
   934                           ;My_Timer.c: 66: IPEN = 0;GIE = 1;
   935  001E8A  9ED0               	bcf	4048,7,c	;volatile
   936  001E8C  8EF2               	bsf	intcon,7,c	;volatile
   937  001E8E  0012               	return		;funcret
   938  001E90                     __end_of_Timer0_Init:
   939                           	opt stack 0
   940                           tblptru	equ	0xFF8
   941                           tblptrh	equ	0xFF7
   942                           intcon	equ	0xFF2
   943                           postinc0	equ	0xFEE
   944                           wreg	equ	0xFE8
   945                           status	equ	0xFD8
   946                           
   947 ;; *************** function _SetTimer0 *****************
   948 ;; Defined at:
   949 ;;		line 79 in file "_01_USER/My_Timer.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;  _tmr            2   24[COMRAM] unsigned int 
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;		None               void
   956 ;; Registers used:
   957 ;;		wreg, status,2, status,0
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   963 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   965 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   966 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   967 ;;Total ram usage:        4 bytes
   968 ;; Hardware stack levels used:    1
   969 ;; Hardware stack levels required when called:    3
   970 ;; This function calls:
   971 ;;		Nothing
   972 ;; This function is called by:
   973 ;;		_Timer0_Init
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           	psect	text4
   978  001D72                     __ptext4:
   979                           	opt stack 0
   980  001D72                     _SetTimer0:
   981                           	opt stack 26
   982                           
   983                           ;My_Timer.c: 81: if(_tmr > 0xffff) _tmr = 0xffff;
   984                           
   985                           ;incstack = 0
   986  001D72  D003               	goto	l3043
   987  001D74  6819               	setf	SetTimer0@_tmr,c
   988  001D76  681A               	setf	SetTimer0@_tmr+1,c
   989  001D78  D000               	goto	l3043
   990  001D7A                     l3043:
   991                           
   992                           ;My_Timer.c: 82: _tmr=0xffff-_tmr;
   993  001D7A  C019  F01B         	movff	SetTimer0@_tmr,??_SetTimer0
   994  001D7E  C01A  F01C         	movff	SetTimer0@_tmr+1,??_SetTimer0+1
   995  001D82  1E1B               	comf	??_SetTimer0,f,c
   996  001D84  1E1C               	comf	??_SetTimer0+1,f,c
   997  001D86  4A1B               	infsnz	??_SetTimer0,f,c
   998  001D88  2A1C               	incf	??_SetTimer0+1,f,c
   999  001D8A  0EFF               	movlw	255
  1000  001D8C  241B               	addwf	??_SetTimer0,w,c
  1001  001D8E  6E19               	movwf	SetTimer0@_tmr,c
  1002  001D90  0EFF               	movlw	255
  1003  001D92  201C               	addwfc	??_SetTimer0+1,w,c
  1004  001D94  6E1A               	movwf	SetTimer0@_tmr+1,c
  1005                           
  1006                           ;My_Timer.c: 83: TMR0H = _tmr/256;
  1007  001D96  501A               	movf	SetTimer0@_tmr+1,w,c
  1008  001D98  6ED7               	movwf	4055,c	;volatile
  1009                           
  1010                           ;My_Timer.c: 84: TMR0L = _tmr%256;
  1011  001D9A  C019  FFD6         	movff	SetTimer0@_tmr,4054	;volatile
  1012                           
  1013                           ;My_Timer.c: 85: TMR0IF = 0;
  1014  001D9E  94F2               	bcf	intcon,2,c	;volatile
  1015  001DA0  0012               	return		;funcret
  1016  001DA2                     __end_of_SetTimer0:
  1017                           	opt stack 0
  1018                           tblptru	equ	0xFF8
  1019                           tblptrh	equ	0xFF7
  1020                           intcon	equ	0xFF2
  1021                           postinc0	equ	0xFEE
  1022                           wreg	equ	0xFE8
  1023                           status	equ	0xFD8
  1024                           
  1025 ;; *************** function _Show_Result *****************
  1026 ;; Defined at:
  1027 ;;		line 142 in file "_01_USER/Run.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;		None
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;  i               1    0        unsigned char 
  1032 ;; Return value:  Size  Location     Type
  1033 ;;		None               void
  1034 ;; Registers used:
  1035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1036 ;; Tracked objects:
  1037 ;;		On entry : 0/0
  1038 ;;		On exit  : 0/0
  1039 ;;		Unchanged: 0/0
  1040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1043 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1044 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1045 ;;Total ram usage:        3 bytes
  1046 ;; Hardware stack levels used:    1
  1047 ;; Hardware stack levels required when called:    7
  1048 ;; This function calls:
  1049 ;;		_TM1640_Show_Hex
  1050 ;; This function is called by:
  1051 ;;		_main
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           
  1055                           	psect	text5
  1056  001936                     __ptext5:
  1057                           	opt stack 0
  1058  001936                     _Show_Result:
  1059                           	opt stack 23
  1060                           
  1061                           ;Run.c: 145: unsigned char i;
  1062                           ;Run.c: 146: if( Handle_Switch.Show_Send_Receive )
  1063                           
  1064                           ;incstack = 0
  1065  001936  5036               	movf	_Handle_Switch+3,w,c
  1066  001938  B4D8               	btfsc	status,2,c
  1067  00193A  D01D               	goto	l425
  1068                           
  1069                           ;Run.c: 147: {
  1070                           ;Run.c: 148: TM1640_Show_Hex( RS485_SendBuff[RS485_Num] + (RS485_Num * 0x1000) );
  1071  00193C  5044               	movf	_RS485_Num,w,c
  1072  00193E  6E23               	movwf	??_Show_Result& (0+255),c
  1073  001940  6A24               	clrf	(??_Show_Result+1)& (0+255),c
  1074  001942  0E0C               	movlw	12
  1075  001944                     u3055:
  1076  001944  90D8               	bcf	status,0,c
  1077  001946  3623               	rlcf	??_Show_Result,f,c
  1078  001948  3624               	rlcf	??_Show_Result+1,f,c
  1079  00194A  2EE8               	decfsz	wreg,f,c
  1080  00194C  D7FB               	goto	u3055
  1081  00194E  5044               	movf	_RS485_Num,w,c
  1082  001950  0D01               	mullw	1
  1083  001952  0E8E               	movlw	low _RS485_SendBuff
  1084  001954  24F3               	addwf	prodl,w,c
  1085  001956  6ED9               	movwf	fsr2l,c
  1086  001958  0E00               	movlw	high _RS485_SendBuff
  1087  00195A  20F4               	addwfc	prodh,w,c
  1088  00195C  6EDA               	movwf	fsr2h,c
  1089  00195E  50DF               	movf	indf2,w,c
  1090  001960  6E25               	movwf	(??_Show_Result+2)& (0+255),c
  1091  001962  5025               	movf	??_Show_Result+2,w,c
  1092  001964  2423               	addwf	??_Show_Result,w,c
  1093  001966  6E1F               	movwf	TM1640_Show_Hex@Numbers,c
  1094  001968  0E00               	movlw	0
  1095  00196A  2024               	addwfc	??_Show_Result+1,w,c
  1096  00196C  6E20               	movwf	TM1640_Show_Hex@Numbers+1,c
  1097  00196E  ECA7  F00A         	call	_TM1640_Show_Hex	;wreg free
  1098                           
  1099                           ;Run.c: 149: PORTEbits.RE7=0;
  1100  001972  9E84               	bcf	3972,7,c	;volatile
  1101                           
  1102                           ;Run.c: 150: }
  1103  001974  0012               	return	
  1104  001976                     l425:
  1105                           
  1106                           ;Run.c: 152: else
  1107                           ;Run.c: 153: {
  1108                           ;Run.c: 154: PORTEbits.RE7=1;
  1109  001976  8E84               	bsf	3972,7,c	;volatile
  1110                           
  1111                           ;Run.c: 155: TM1640_Show_Hex( ReceiveBuff[RS485_Num] + (RS485_Num * 0x1000) );
  1112  001978  5044               	movf	_RS485_Num,w,c
  1113  00197A  6E23               	movwf	??_Show_Result& (0+255),c
  1114  00197C  6A24               	clrf	(??_Show_Result+1)& (0+255),c
  1115  00197E  0E0C               	movlw	12
  1116  001980                     u3065:
  1117  001980  90D8               	bcf	status,0,c
  1118  001982  3623               	rlcf	??_Show_Result,f,c
  1119  001984  3624               	rlcf	??_Show_Result+1,f,c
  1120  001986  2EE8               	decfsz	wreg,f,c
  1121  001988  D7FB               	goto	u3065
  1122  00198A  5044               	movf	_RS485_Num,w,c
  1123  00198C  0D01               	mullw	1
  1124  00198E  0E98               	movlw	low _ReceiveBuff
  1125  001990  24F3               	addwf	prodl,w,c
  1126  001992  6ED9               	movwf	fsr2l,c
  1127  001994  0E00               	movlw	high _ReceiveBuff
  1128  001996  20F4               	addwfc	prodh,w,c
  1129  001998  6EDA               	movwf	fsr2h,c
  1130  00199A  50DF               	movf	indf2,w,c
  1131  00199C  6E25               	movwf	(??_Show_Result+2)& (0+255),c
  1132  00199E  5025               	movf	??_Show_Result+2,w,c
  1133  0019A0  2423               	addwf	??_Show_Result,w,c
  1134  0019A2  6E1F               	movwf	TM1640_Show_Hex@Numbers,c
  1135  0019A4  0E00               	movlw	0
  1136  0019A6  2024               	addwfc	??_Show_Result+1,w,c
  1137  0019A8  6E20               	movwf	TM1640_Show_Hex@Numbers+1,c
  1138  0019AA  ECA7  F00A         	call	_TM1640_Show_Hex	;wreg free
  1139  0019AE  0012               	return	
  1140  0019B0  0012               	return		;funcret
  1141  0019B2                     __end_of_Show_Result:
  1142                           	opt stack 0
  1143                           tblptru	equ	0xFF8
  1144                           tblptrh	equ	0xFF7
  1145                           prodh	equ	0xFF4
  1146                           prodl	equ	0xFF3
  1147                           intcon	equ	0xFF2
  1148                           postinc0	equ	0xFEE
  1149                           wreg	equ	0xFE8
  1150                           indf2	equ	0xFDF
  1151                           fsr2h	equ	0xFDA
  1152                           fsr2l	equ	0xFD9
  1153                           status	equ	0xFD8
  1154                           
  1155 ;; *************** function _TM1640_Show_Hex *****************
  1156 ;; Defined at:
  1157 ;;		line 65 in file "_01_USER/TM1640.c"
  1158 ;; Parameters:    Size  Location     Type
  1159 ;;  Numbers         2   30[COMRAM] unsigned int 
  1160 ;; Auto vars:     Size  Location     Type
  1161 ;;		None
  1162 ;; Return value:  Size  Location     Type
  1163 ;;		None               void
  1164 ;; Registers used:
  1165 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1166 ;; Tracked objects:
  1167 ;;		On entry : 0/0
  1168 ;;		On exit  : 0/0
  1169 ;;		Unchanged: 0/0
  1170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1171 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1173 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1174 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1175 ;;Total ram usage:        4 bytes
  1176 ;; Hardware stack levels used:    1
  1177 ;; Hardware stack levels required when called:    6
  1178 ;; This function calls:
  1179 ;;		_TM1640_Writer_Dates
  1180 ;; This function is called by:
  1181 ;;		_main
  1182 ;;		_Show_Result
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           	psect	text6
  1187  00154E                     __ptext6:
  1188                           	opt stack 0
  1189  00154E                     _TM1640_Show_Hex:
  1190                           	opt stack 24
  1191                           
  1192                           ;TM1640.c: 68: TM1640_Writer_Dates(3,LED_Number[Numbers%16]); Numbers/=16;
  1193                           
  1194                           ;incstack = 0
  1195  00154E  0E0F               	movlw	15
  1196  001550  141F               	andwf	TM1640_Show_Hex@Numbers,w,c
  1197  001552  6E21               	movwf	??_TM1640_Show_Hex& (0+255),c
  1198  001554  0E00               	movlw	0
  1199  001556  1420               	andwf	TM1640_Show_Hex@Numbers+1,w,c
  1200  001558  6E22               	movwf	(??_TM1640_Show_Hex+1)& (0+255),c
  1201  00155A  0E01               	movlw	low _LED_Number
  1202  00155C  2421               	addwf	??_TM1640_Show_Hex,w,c
  1203  00155E  6EF6               	movwf	tblptrl,c
  1204  001560  0E10               	movlw	high _LED_Number
  1205  001562  2022               	addwfc	??_TM1640_Show_Hex+1,w,c
  1206  001564  6EF7               	movwf	tblptrh,c
  1207  001566                     	if	0	;There are less than 3 active tblptr bytes
  1208  001566                     	endif
  1209  001566  0008               	tblrd		*
  1210  001568  CFF5 F01D          	movff	tablat,TM1640_Writer_Dates@Date
  1211  00156C  0E03               	movlw	3
  1212  00156E  EC6C  F00F         	call	_TM1640_Writer_Dates
  1213  001572  3A1F               	swapf	TM1640_Show_Hex@Numbers,f,c
  1214  001574  3A20               	swapf	TM1640_Show_Hex@Numbers+1,f,c
  1215  001576  0E0F               	movlw	15
  1216  001578  161F               	andwf	TM1640_Show_Hex@Numbers,f,c
  1217  00157A  5020               	movf	TM1640_Show_Hex@Numbers+1,w,c
  1218  00157C  0BF0               	andlw	240
  1219  00157E  121F               	iorwf	TM1640_Show_Hex@Numbers,f,c
  1220  001580  0E0F               	movlw	15
  1221  001582  1620               	andwf	TM1640_Show_Hex@Numbers+1,f,c
  1222                           
  1223                           ;TM1640.c: 69: TM1640_Writer_Dates(2,LED_Number[Numbers%16]); Numbers/=16;
  1224  001584  0E0F               	movlw	15
  1225  001586  141F               	andwf	TM1640_Show_Hex@Numbers,w,c
  1226  001588  6E21               	movwf	??_TM1640_Show_Hex& (0+255),c
  1227  00158A  0E00               	movlw	0
  1228  00158C  1420               	andwf	TM1640_Show_Hex@Numbers+1,w,c
  1229  00158E  6E22               	movwf	(??_TM1640_Show_Hex+1)& (0+255),c
  1230  001590  0E01               	movlw	low _LED_Number
  1231  001592  2421               	addwf	??_TM1640_Show_Hex,w,c
  1232  001594  6EF6               	movwf	tblptrl,c
  1233  001596  0E10               	movlw	high _LED_Number
  1234  001598  2022               	addwfc	??_TM1640_Show_Hex+1,w,c
  1235  00159A  6EF7               	movwf	tblptrh,c
  1236  00159C                     	if	0	;There are less than 3 active tblptr bytes
  1237  00159C                     	endif
  1238  00159C  0008               	tblrd		*
  1239  00159E  CFF5 F01D          	movff	tablat,TM1640_Writer_Dates@Date
  1240  0015A2  0E02               	movlw	2
  1241  0015A4  EC6C  F00F         	call	_TM1640_Writer_Dates
  1242  0015A8  3A1F               	swapf	TM1640_Show_Hex@Numbers,f,c
  1243  0015AA  3A20               	swapf	TM1640_Show_Hex@Numbers+1,f,c
  1244  0015AC  0E0F               	movlw	15
  1245  0015AE  161F               	andwf	TM1640_Show_Hex@Numbers,f,c
  1246  0015B0  5020               	movf	TM1640_Show_Hex@Numbers+1,w,c
  1247  0015B2  0BF0               	andlw	240
  1248  0015B4  121F               	iorwf	TM1640_Show_Hex@Numbers,f,c
  1249  0015B6  0E0F               	movlw	15
  1250  0015B8  1620               	andwf	TM1640_Show_Hex@Numbers+1,f,c
  1251                           
  1252                           ;TM1640.c: 70: TM1640_Writer_Dates(1,LED_Number[Numbers%16]); Numbers/=16;
  1253  0015BA  0E0F               	movlw	15
  1254  0015BC  141F               	andwf	TM1640_Show_Hex@Numbers,w,c
  1255  0015BE  6E21               	movwf	??_TM1640_Show_Hex& (0+255),c
  1256  0015C0  0E00               	movlw	0
  1257  0015C2  1420               	andwf	TM1640_Show_Hex@Numbers+1,w,c
  1258  0015C4  6E22               	movwf	(??_TM1640_Show_Hex+1)& (0+255),c
  1259  0015C6  0E01               	movlw	low _LED_Number
  1260  0015C8  2421               	addwf	??_TM1640_Show_Hex,w,c
  1261  0015CA  6EF6               	movwf	tblptrl,c
  1262  0015CC  0E10               	movlw	high _LED_Number
  1263  0015CE  2022               	addwfc	??_TM1640_Show_Hex+1,w,c
  1264  0015D0  6EF7               	movwf	tblptrh,c
  1265  0015D2                     	if	0	;There are less than 3 active tblptr bytes
  1266  0015D2                     	endif
  1267  0015D2  0008               	tblrd		*
  1268  0015D4  CFF5 F01D          	movff	tablat,TM1640_Writer_Dates@Date
  1269  0015D8  0E01               	movlw	1
  1270  0015DA  EC6C  F00F         	call	_TM1640_Writer_Dates
  1271  0015DE  3A1F               	swapf	TM1640_Show_Hex@Numbers,f,c
  1272  0015E0  3A20               	swapf	TM1640_Show_Hex@Numbers+1,f,c
  1273  0015E2  0E0F               	movlw	15
  1274  0015E4  161F               	andwf	TM1640_Show_Hex@Numbers,f,c
  1275  0015E6  5020               	movf	TM1640_Show_Hex@Numbers+1,w,c
  1276  0015E8  0BF0               	andlw	240
  1277  0015EA  121F               	iorwf	TM1640_Show_Hex@Numbers,f,c
  1278  0015EC  0E0F               	movlw	15
  1279  0015EE  1620               	andwf	TM1640_Show_Hex@Numbers+1,f,c
  1280                           
  1281                           ;TM1640.c: 71: TM1640_Writer_Dates(0,LED_Number[Numbers%16]);
  1282  0015F0  0E0F               	movlw	15
  1283  0015F2  141F               	andwf	TM1640_Show_Hex@Numbers,w,c
  1284  0015F4  6E21               	movwf	??_TM1640_Show_Hex& (0+255),c
  1285  0015F6  0E00               	movlw	0
  1286  0015F8  1420               	andwf	TM1640_Show_Hex@Numbers+1,w,c
  1287  0015FA  6E22               	movwf	(??_TM1640_Show_Hex+1)& (0+255),c
  1288  0015FC  0E01               	movlw	low _LED_Number
  1289  0015FE  2421               	addwf	??_TM1640_Show_Hex,w,c
  1290  001600  6EF6               	movwf	tblptrl,c
  1291  001602  0E10               	movlw	high _LED_Number
  1292  001604  2022               	addwfc	??_TM1640_Show_Hex+1,w,c
  1293  001606  6EF7               	movwf	tblptrh,c
  1294  001608                     	if	0	;There are less than 3 active tblptr bytes
  1295  001608                     	endif
  1296  001608  0008               	tblrd		*
  1297  00160A  CFF5 F01D          	movff	tablat,TM1640_Writer_Dates@Date
  1298  00160E  0E00               	movlw	0
  1299  001610  EC6C  F00F         	call	_TM1640_Writer_Dates
  1300  001614  0012               	return		;funcret
  1301  001616                     __end_of_TM1640_Show_Hex:
  1302                           	opt stack 0
  1303                           tblptru	equ	0xFF8
  1304                           tblptrh	equ	0xFF7
  1305                           tblptrl	equ	0xFF6
  1306                           tablat	equ	0xFF5
  1307                           prodh	equ	0xFF4
  1308                           prodl	equ	0xFF3
  1309                           intcon	equ	0xFF2
  1310                           postinc0	equ	0xFEE
  1311                           wreg	equ	0xFE8
  1312                           indf2	equ	0xFDF
  1313                           fsr2h	equ	0xFDA
  1314                           fsr2l	equ	0xFD9
  1315                           status	equ	0xFD8
  1316                           
  1317 ;; *************** function _TM1640_Writer_Dates *****************
  1318 ;; Defined at:
  1319 ;;		line 75 in file "_01_USER/TM1640.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;  Addr            1    wreg     unsigned char 
  1322 ;;  Date            1   28[COMRAM] unsigned char 
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;  Addr            1   29[COMRAM] unsigned char 
  1325 ;; Return value:  Size  Location     Type
  1326 ;;		None               void
  1327 ;; Registers used:
  1328 ;;		wreg, status,2, status,0, cstack
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1334 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1335 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1337 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1338 ;;Total ram usage:        2 bytes
  1339 ;; Hardware stack levels used:    1
  1340 ;; Hardware stack levels required when called:    5
  1341 ;; This function calls:
  1342 ;;		_TM1640_Start
  1343 ;;		_TM1640_Stop
  1344 ;;		_TM1640_Writer_Byte
  1345 ;; This function is called by:
  1346 ;;		_TM1640_Show_Hex
  1347 ;;		_TM1640_Show_Decimal
  1348 ;;		_TM1640_Show_integer
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           	psect	text7
  1353  001ED8                     __ptext7:
  1354                           	opt stack 0
  1355  001ED8                     _TM1640_Writer_Dates:
  1356                           	opt stack 24
  1357                           
  1358                           ;incstack = 0
  1359                           ;TM1640_Writer_Dates@Addr stored from wreg
  1360  001ED8  6E1E               	movwf	TM1640_Writer_Dates@Addr,c
  1361                           
  1362                           ;TM1640.c: 77: if((Addr >= 0) && (Addr <= 3))
  1363  001EDA  0E04               	movlw	4
  1364  001EDC  601E               	cpfslt	TM1640_Writer_Dates@Addr,c
  1365  001EDE  0012               	return	
  1366                           
  1367                           ;TM1640.c: 78: {
  1368                           ;TM1640.c: 79: TM1640_Start();
  1369  001EE0  EC5A  F00F         	call	_TM1640_Start	;wreg free
  1370                           
  1371                           ;TM1640.c: 80: TM1640_Writer_Byte(0xC0 + Addr);
  1372  001EE4  501E               	movf	TM1640_Writer_Dates@Addr,w,c
  1373  001EE6  0FC0               	addlw	192
  1374  001EE8  EC2C  F00E         	call	_TM1640_Writer_Byte
  1375                           
  1376                           ;TM1640.c: 81: TM1640_Writer_Byte(Date);
  1377  001EEC  501D               	movf	TM1640_Writer_Dates@Date,w,c
  1378  001EEE  EC2C  F00E         	call	_TM1640_Writer_Byte
  1379                           
  1380                           ;TM1640.c: 82: TM1640_Stop();
  1381  001EF2  EC48  F00F         	call	_TM1640_Stop	;wreg free
  1382  001EF6  0012               	return	
  1383  001EF8  0012               	return		;funcret
  1384  001EFA                     __end_of_TM1640_Writer_Dates:
  1385                           	opt stack 0
  1386                           tblptru	equ	0xFF8
  1387                           tblptrh	equ	0xFF7
  1388                           tblptrl	equ	0xFF6
  1389                           tablat	equ	0xFF5
  1390                           prodh	equ	0xFF4
  1391                           prodl	equ	0xFF3
  1392                           intcon	equ	0xFF2
  1393                           postinc0	equ	0xFEE
  1394                           wreg	equ	0xFE8
  1395                           indf2	equ	0xFDF
  1396                           fsr2h	equ	0xFDA
  1397                           fsr2l	equ	0xFD9
  1398                           status	equ	0xFD8
  1399                           
  1400 ;; *************** function _Run *****************
  1401 ;; Defined at:
  1402 ;;		line 109 in file "_01_USER/Run.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;		None
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;  i               2   15[BANK0 ] int 
  1407 ;; Return value:  Size  Location     Type
  1408 ;;		None               void
  1409 ;; Registers used:
  1410 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1417 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1419 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1420 ;;Total ram usage:        2 bytes
  1421 ;; Hardware stack levels used:    1
  1422 ;; Hardware stack levels required when called:    6
  1423 ;; This function calls:
  1424 ;;		_Get_ADC6
  1425 ;;		_RS485_Receive_Date
  1426 ;;		_RS485_Send_Date
  1427 ;; This function is called by:
  1428 ;;		_main
  1429 ;; This function uses a non-reentrant model
  1430 ;;
  1431                           
  1432                           	psect	text8
  1433  001798                     __ptext8:
  1434                           	opt stack 0
  1435  001798                     _Run:
  1436                           	opt stack 24
  1437                           
  1438                           ;Run.c: 111: int i;
  1439                           ;Run.c: 113: if( Handle_Switch.ADC6 ) Get_ADC6();
  1440                           
  1441                           ;incstack = 0
  1442  001798  5034               	movf	_Handle_Switch+1,w,c
  1443  00179A  B4D8               	btfsc	status,2,c
  1444  00179C  D003               	goto	l3121
  1445  00179E  EC84  F00D         	call	_Get_ADC6	;wreg free
  1446  0017A2  D000               	goto	l3121
  1447  0017A4                     l3121:
  1448                           
  1449                           ;Run.c: 116: if ( Handle_Switch.Usart_OneDate )
  1450  0017A4  5035               	movf	_Handle_Switch+2,w,c
  1451  0017A6  B4D8               	btfsc	status,2,c
  1452  0017A8  D00B               	goto	l3127
  1453                           
  1454                           ;Run.c: 117: {
  1455                           ;Run.c: 118: Handle_Switch.Usart_OneDate = 0;
  1456  0017AA  0E00               	movlw	0
  1457  0017AC  6E35               	movwf	_Handle_Switch+2,c
  1458                           
  1459                           ;Run.c: 119: RS485_Send_Date(RS485_SendBuff,10);
  1460  0017AE  0E8E               	movlw	low _RS485_SendBuff
  1461  0017B0  6E2A               	movwf	RS485_Send_Date@date_dress,c
  1462  0017B2  0E00               	movlw	high _RS485_SendBuff
  1463  0017B4  6E2B               	movwf	RS485_Send_Date@date_dress+1,c
  1464  0017B6  0E0A               	movlw	10
  1465  0017B8  6E2C               	movwf	RS485_Send_Date@date_lenth,c
  1466  0017BA  ECD9  F00C         	call	_RS485_Send_Date	;wreg free
  1467  0017BE  D000               	goto	l3127
  1468  0017C0                     l3127:
  1469                           
  1470                           ;Run.c: 120: }
  1471                           ;Run.c: 121: RS485_Receive_Date(ReceiveBuff);
  1472  0017C0  0E98               	movlw	low _ReceiveBuff
  1473  0017C2  6E2A               	movwf	RS485_Receive_Date@DataBuff,c
  1474  0017C4  0E00               	movlw	high _ReceiveBuff
  1475  0017C6  6E2B               	movwf	RS485_Receive_Date@DataBuff+1,c
  1476  0017C8  EC15  F00C         	call	_RS485_Receive_Date	;wreg free
  1477                           
  1478                           ;Run.c: 123: if(Receive_Flag)
  1479  0017CC  5046               	movf	_Receive_Flag,w,c
  1480  0017CE  B4D8               	btfsc	status,2,c
  1481  0017D0  0012               	return	
  1482                           
  1483                           ;Run.c: 124: {
  1484                           ;Run.c: 125: Receive_Flag = 0;
  1485  0017D2  0E00               	movlw	0
  1486  0017D4  6E46               	movwf	_Receive_Flag,c
  1487                           
  1488                           ;Run.c: 126: for(i = 0;i < 10;i++)
  1489  0017D6  0E00               	movlw	0
  1490  0017D8  0100               	movlb	0	; () banked
  1491  0017DA  6FB2               	movwf	(Run@i+1)& (0+255),b
  1492  0017DC  0E00               	movlw	0
  1493  0017DE  6FB1               	movwf	Run@i& (0+255),b
  1494  0017E0                     l3133:
  1495                           
  1496                           ; BSR set to: 0
  1497  0017E0  0100               	movlb	0	; () banked
  1498  0017E2  BFB2               	btfsc	(Run@i+1)& (0+255),7,b
  1499  0017E4  D00A               	goto	l3137
  1500  0017E6  0100               	movlb	0	; () banked
  1501  0017E8  51B2               	movf	(Run@i+1)& (0+255),w,b
  1502  0017EA  E11E               	bnz	l422
  1503  0017EC  0E0A               	movlw	10
  1504  0017EE  0100               	movlb	0	; () banked
  1505  0017F0  5DB1               	subwf	Run@i& (0+255),w,b
  1506  0017F2  B0D8               	btfsc	status,0,c
  1507  0017F4  0012               	return	
  1508  0017F6  D001               	goto	l3137
  1509                           
  1510                           ; BSR set to: 0
  1511  0017F8  0012               	return	
  1512  0017FA                     l3137:
  1513                           
  1514                           ; BSR set to: 0
  1515                           ;Run.c: 127: RS485_SendBuff[i] = ReceiveBuff[i];
  1516  0017FA  0E98               	movlw	low _ReceiveBuff
  1517  0017FC  0100               	movlb	0	; () banked
  1518  0017FE  25B1               	addwf	Run@i& (0+255),w,b
  1519  001800  6ED9               	movwf	fsr2l,c
  1520  001802  0E00               	movlw	high _ReceiveBuff
  1521  001804  0100               	movlb	0	; () banked
  1522  001806  21B2               	addwfc	(Run@i+1)& (0+255),w,b
  1523  001808  6EDA               	movwf	fsr2h,c
  1524  00180A  0E8E               	movlw	low _RS485_SendBuff
  1525  00180C  0100               	movlb	0	; () banked
  1526  00180E  25B1               	addwf	Run@i& (0+255),w,b
  1527  001810  6EE1               	movwf	fsr1l,c
  1528  001812  0E00               	movlw	high _RS485_SendBuff
  1529  001814  0100               	movlb	0	; () banked
  1530  001816  21B2               	addwfc	(Run@i+1)& (0+255),w,b
  1531  001818  6EE2               	movwf	fsr1h,c
  1532  00181A  CFDF FFE7          	movff	indf2,indf1
  1533                           
  1534                           ; BSR set to: 0
  1535  00181E  0100               	movlb	0	; () banked
  1536  001820  4BB1               	infsnz	Run@i& (0+255),f,b
  1537  001822  2BB2               	incf	(Run@i+1)& (0+255),f,b
  1538  001824  D7DD               	goto	l3133
  1539                           
  1540                           ; BSR set to: 0
  1541                           
  1542                           ; BSR set to: 0
  1543  001826  0012               	return	
  1544  001828                     l422:
  1545  001828  0012               	return		;funcret
  1546  00182A                     __end_of_Run:
  1547                           	opt stack 0
  1548                           tblptru	equ	0xFF8
  1549                           tblptrh	equ	0xFF7
  1550                           tblptrl	equ	0xFF6
  1551                           tablat	equ	0xFF5
  1552                           prodh	equ	0xFF4
  1553                           prodl	equ	0xFF3
  1554                           intcon	equ	0xFF2
  1555                           postinc0	equ	0xFEE
  1556                           wreg	equ	0xFE8
  1557                           indf1	equ	0xFE7
  1558                           fsr1h	equ	0xFE2
  1559                           fsr1l	equ	0xFE1
  1560                           indf2	equ	0xFDF
  1561                           fsr2h	equ	0xFDA
  1562                           fsr2l	equ	0xFD9
  1563                           status	equ	0xFD8
  1564                           
  1565 ;; *************** function _RS485_Send_Date *****************
  1566 ;; Defined at:
  1567 ;;		line 75 in file "_01_USER/My_USART.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;  date_dress      2   41[COMRAM] PTR unsigned char 
  1570 ;;		 -> RS485_SendBuff(10), 
  1571 ;;  date_lenth      1   43[COMRAM] unsigned char 
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;  i               2   46[COMRAM] unsigned int 
  1574 ;; Return value:  Size  Location     Type
  1575 ;;		None               void
  1576 ;; Registers used:
  1577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1583 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1584 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1585 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1586 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1587 ;;Total ram usage:        7 bytes
  1588 ;; Hardware stack levels used:    1
  1589 ;; Hardware stack levels required when called:    5
  1590 ;; This function calls:
  1591 ;;		_CRC_Verify
  1592 ;; This function is called by:
  1593 ;;		_Run
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           	psect	text9
  1598  0019B2                     __ptext9:
  1599                           	opt stack 0
  1600  0019B2                     _RS485_Send_Date:
  1601                           	opt stack 24
  1602                           
  1603                           ;My_USART.c: 77: unsigned int i;
  1604                           ;My_USART.c: 78: while( (!TXSTA2bits.TRMT));
  1605                           
  1606                           ;incstack = 0
  1607  0019B2  D000               	goto	l164
  1608  0019B4                     l164:
  1609  0019B4  010F               	movlb	15	; () banked
  1610  0019B6  A321               	btfss	33,1,b	;volatile
  1611  0019B8  D7FD               	goto	l164
  1612                           
  1613                           ; BSR set to: 15
  1614                           ;My_USART.c: 79: RG3 = 0;
  1615  0019BA  9686               	bcf	3974,3,c	;volatile
  1616                           
  1617                           ; BSR set to: 15
  1618                           ;My_USART.c: 82: date_dress[0] = 0xaa;
  1619  0019BC  C02A  FFD9         	movff	RS485_Send_Date@date_dress,fsr2l
  1620  0019C0  C02B  FFDA         	movff	RS485_Send_Date@date_dress+1,fsr2h
  1621  0019C4  0EAA               	movlw	170
  1622  0019C6  6EDF               	movwf	indf2,c
  1623                           
  1624                           ; BSR set to: 15
  1625                           ;My_USART.c: 85: CRC_Verify(date_dress,date_lenth - 2,&RS485_SendBuff[8],&RS485_SendBuff
      +                          [9]);
  1626  0019C8  C02A  F01F         	movff	RS485_Send_Date@date_dress,CRC_Verify@_pucBuf
  1627  0019CC  C02B  F020         	movff	RS485_Send_Date@date_dress+1,CRC_Verify@_pucBuf+1
  1628  0019D0  502C               	movf	RS485_Send_Date@date_lenth,w,c
  1629  0019D2  0FFE               	addlw	254
  1630  0019D4  6E21               	movwf	CRC_Verify@_usLen,c
  1631  0019D6  0E96               	movlw	low (_RS485_SendBuff+8)
  1632  0019D8  6E22               	movwf	CRC_Verify@_ucHByte,c
  1633  0019DA  0E00               	movlw	high (_RS485_SendBuff+8)
  1634  0019DC  6E23               	movwf	CRC_Verify@_ucHByte+1,c
  1635  0019DE  0E97               	movlw	low (_RS485_SendBuff+9)
  1636  0019E0  6E24               	movwf	CRC_Verify@_ucLByte,c
  1637  0019E2  0E00               	movlw	high (_RS485_SendBuff+9)
  1638  0019E4  6E25               	movwf	CRC_Verify@_ucLByte+1,c
  1639  0019E6  EC4D  F00D         	call	_CRC_Verify	;wreg free
  1640                           
  1641                           ;My_USART.c: 88: for( i = 0; i < date_lenth ; i++ )
  1642  0019EA  0E00               	movlw	0
  1643  0019EC  6E30               	movwf	RS485_Send_Date@i+1,c
  1644  0019EE  0E00               	movlw	0
  1645  0019F0  6E2F               	movwf	RS485_Send_Date@i,c
  1646  0019F2  D010               	goto	l3003
  1647  0019F4                     l2999:
  1648                           
  1649                           ;My_USART.c: 89: {
  1650                           ;My_USART.c: 90: TXREG2 = date_dress[i];
  1651  0019F4  502F               	movf	RS485_Send_Date@i,w,c
  1652  0019F6  242A               	addwf	RS485_Send_Date@date_dress,w,c
  1653  0019F8  6ED9               	movwf	fsr2l,c
  1654  0019FA  5030               	movf	RS485_Send_Date@i+1,w,c
  1655  0019FC  202B               	addwfc	RS485_Send_Date@date_dress+1,w,c
  1656  0019FE  6EDA               	movwf	fsr2h,c
  1657  001A00  50DF               	movf	indf2,w,c
  1658  001A02  010F               	movlb	15	; () banked
  1659  001A04  6F1C               	movwf	28,b	;volatile
  1660                           
  1661                           ;My_USART.c: 91: while( (!TXSTA2bits.TRMT));
  1662  001A06  D000               	goto	l169
  1663  001A08                     l169:
  1664                           
  1665                           ; BSR set to: 15
  1666  001A08  010F               	movlb	15	; () banked
  1667  001A0A  A321               	btfss	33,1,b	;volatile
  1668  001A0C  D7FD               	goto	l169
  1669                           
  1670                           ; BSR set to: 15
  1671                           
  1672                           ; BSR set to: 15
  1673  001A0E  4A2F               	infsnz	RS485_Send_Date@i,f,c
  1674  001A10  2A30               	incf	RS485_Send_Date@i+1,f,c
  1675  001A12  D000               	goto	l3003
  1676  001A14                     l3003:
  1677  001A14  502C               	movf	RS485_Send_Date@date_lenth,w,c
  1678  001A16  6E2D               	movwf	??_RS485_Send_Date& (0+255),c
  1679  001A18  6A2E               	clrf	(??_RS485_Send_Date+1)& (0+255),c
  1680  001A1A  502D               	movf	??_RS485_Send_Date,w,c
  1681  001A1C  5C2F               	subwf	RS485_Send_Date@i,w,c
  1682  001A1E  502E               	movf	??_RS485_Send_Date+1,w,c
  1683  001A20  5830               	subwfb	RS485_Send_Date@i+1,w,c
  1684  001A22  A0D8               	btfss	status,0,c
  1685  001A24  D7E7               	goto	l2999
  1686                           
  1687                           ;My_USART.c: 92: }
  1688                           ;My_USART.c: 94: RG3 = 1;
  1689  001A26  8686               	bsf	3974,3,c	;volatile
  1690  001A28  0012               	return		;funcret
  1691  001A2A                     __end_of_RS485_Send_Date:
  1692                           	opt stack 0
  1693                           tblptru	equ	0xFF8
  1694                           tblptrh	equ	0xFF7
  1695                           tblptrl	equ	0xFF6
  1696                           tablat	equ	0xFF5
  1697                           prodh	equ	0xFF4
  1698                           prodl	equ	0xFF3
  1699                           intcon	equ	0xFF2
  1700                           postinc0	equ	0xFEE
  1701                           wreg	equ	0xFE8
  1702                           indf1	equ	0xFE7
  1703                           fsr1h	equ	0xFE2
  1704                           fsr1l	equ	0xFE1
  1705                           indf2	equ	0xFDF
  1706                           fsr2h	equ	0xFDA
  1707                           fsr2l	equ	0xFD9
  1708                           status	equ	0xFD8
  1709                           
  1710 ;; *************** function _RS485_Receive_Date *****************
  1711 ;; Defined at:
  1712 ;;		line 106 in file "_01_USER/My_USART.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;  DataBuff        2   41[COMRAM] PTR unsigned char 
  1715 ;;		 -> ReceiveBuff(10), 
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;  n               2   45[COMRAM] unsigned int 
  1718 ;;  _ucLByte        1   44[COMRAM] unsigned char 
  1719 ;;  _ucHByte        1   43[COMRAM] unsigned char 
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  1    wreg      unsigned char 
  1722 ;; Registers used:
  1723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1729 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1730 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1732 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1733 ;;Total ram usage:        6 bytes
  1734 ;; Hardware stack levels used:    1
  1735 ;; Hardware stack levels required when called:    5
  1736 ;; This function calls:
  1737 ;;		_CRC_Verify
  1738 ;; This function is called by:
  1739 ;;		_Run
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           	psect	text10
  1744  00182A                     __ptext10:
  1745                           	opt stack 0
  1746  00182A                     _RS485_Receive_Date:
  1747                           	opt stack 24
  1748                           
  1749                           ;My_USART.c: 108: unsigned n;
  1750                           ;My_USART.c: 109: unsigned char _ucHByte;
  1751                           ;My_USART.c: 110: unsigned char _ucLByte;
  1752                           ;My_USART.c: 111: static unsigned char RS485_LED = 0;
  1753                           ;My_USART.c: 113: if(RS485_Receive_Flag)
  1754                           
  1755                           ;incstack = 0
  1756  00182A  5045               	movf	_RS485_Receive_Flag,w,c
  1757  00182C  B4D8               	btfsc	status,2,c
  1758  00182E  0012               	return	
  1759                           
  1760                           ;My_USART.c: 114: {
  1761                           ;My_USART.c: 115: RS485_Receive_Flag = 0;
  1762  001830  0E00               	movlw	0
  1763  001832  6E45               	movwf	_RS485_Receive_Flag,c
  1764                           
  1765                           ;My_USART.c: 116: if( RS485_ReceiveBuff[1] == g_Addr )
  1766  001834  5047               	movf	_g_Addr,w,c
  1767  001836  0100               	movlb	0	; () banked
  1768  001838  1961               	xorwf	(_RS485_ReceiveBuff+1)& (0+255),w,b
  1769  00183A  A4D8               	btfss	status,2,c
  1770  00183C  D028               	goto	l3031
  1771                           
  1772                           ; BSR set to: 0
  1773                           ;My_USART.c: 117: {
  1774                           ;My_USART.c: 118: for(n = 0; n<10 ; n++)
  1775  00183E  0E00               	movlw	0
  1776  001840  6E2F               	movwf	RS485_Receive_Date@n+1,c
  1777  001842  0E00               	movlw	0
  1778  001844  6E2E               	movwf	RS485_Receive_Date@n,c
  1779  001846                     l3013:
  1780                           
  1781                           ; BSR set to: 0
  1782  001846  502F               	movf	RS485_Receive_Date@n+1,w,c
  1783  001848  E118               	bnz	l3023
  1784  00184A  0E0A               	movlw	10
  1785  00184C  5C2E               	subwf	RS485_Receive_Date@n,w,c
  1786  00184E  B0D8               	btfsc	status,0,c
  1787  001850  D014               	goto	l3023
  1788  001852  D001               	goto	l3017
  1789                           
  1790                           ; BSR set to: 0
  1791  001854  D012               	goto	l3023
  1792  001856                     l3017:
  1793                           
  1794                           ;My_USART.c: 119: DataBuff[n] = RS485_ReceiveBuff[n];
  1795  001856  0E60               	movlw	low _RS485_ReceiveBuff
  1796  001858  242E               	addwf	RS485_Receive_Date@n,w,c
  1797  00185A  6ED9               	movwf	fsr2l,c
  1798  00185C  0E00               	movlw	high _RS485_ReceiveBuff
  1799  00185E  202F               	addwfc	RS485_Receive_Date@n+1,w,c
  1800  001860  6EDA               	movwf	fsr2h,c
  1801  001862  502E               	movf	RS485_Receive_Date@n,w,c
  1802  001864  242A               	addwf	RS485_Receive_Date@DataBuff,w,c
  1803  001866  6EE1               	movwf	fsr1l,c
  1804  001868  502F               	movf	RS485_Receive_Date@n+1,w,c
  1805  00186A  202B               	addwfc	RS485_Receive_Date@DataBuff+1,w,c
  1806  00186C  6EE2               	movwf	fsr1h,c
  1807  00186E  CFDF FFE7          	movff	indf2,indf1
  1808  001872  4A2E               	infsnz	RS485_Receive_Date@n,f,c
  1809  001874  2A2F               	incf	RS485_Receive_Date@n+1,f,c
  1810  001876  D7E7               	goto	l3013
  1811  001878  D000               	goto	l3023
  1812  00187A                     l3023:
  1813                           
  1814                           ;My_USART.c: 120: if(RS485_LED) {PORTEbits.RE6=0;RS485_LED = 0;}
  1815  00187A  503E               	movf	RS485_Receive_Date@RS485_LED,w,c
  1816  00187C  B4D8               	btfsc	status,2,c
  1817  00187E  D003               	goto	l182
  1818  001880  9C84               	bcf	3972,6,c	;volatile
  1819  001882  0E00               	movlw	0
  1820  001884  D002               	goto	L4
  1821  001886                     l182:
  1822                           
  1823                           ;My_USART.c: 121: else {PORTEbits.RE6=1;RS485_LED = 1;}
  1824  001886  8C84               	bsf	3972,6,c	;volatile
  1825  001888  0E01               	movlw	1
  1826  00188A                     L4:
  1827  00188A  6E3E               	movwf	RS485_Receive_Date@RS485_LED,c
  1828  00188C  D000               	goto	l3031
  1829  00188E                     l3031:
  1830                           
  1831                           ;My_USART.c: 122: }
  1832                           ;My_USART.c: 126: CRC_Verify(DataBuff,10-2,&_ucHByte,&_ucLByte);
  1833  00188E  C02A  F01F         	movff	RS485_Receive_Date@DataBuff,CRC_Verify@_pucBuf
  1834  001892  C02B  F020         	movff	RS485_Receive_Date@DataBuff+1,CRC_Verify@_pucBuf+1
  1835  001896  0E08               	movlw	8
  1836  001898  6E21               	movwf	CRC_Verify@_usLen,c
  1837  00189A  0E2C               	movlw	low RS485_Receive_Date@_ucHByte
  1838  00189C  6E22               	movwf	CRC_Verify@_ucHByte,c
  1839  00189E  0E00               	movlw	high RS485_Receive_Date@_ucHByte
  1840  0018A0  6E23               	movwf	CRC_Verify@_ucHByte+1,c
  1841  0018A2  0E2D               	movlw	low RS485_Receive_Date@_ucLByte
  1842  0018A4  6E24               	movwf	CRC_Verify@_ucLByte,c
  1843  0018A6  0E00               	movlw	high RS485_Receive_Date@_ucLByte
  1844  0018A8  6E25               	movwf	CRC_Verify@_ucLByte+1,c
  1845  0018AA  EC4D  F00D         	call	_CRC_Verify	;wreg free
  1846                           
  1847                           ;My_USART.c: 133: else return 0;
  1848                           ;	Return value of _RS485_Receive_Date is never used
  1849                           
  1850                           ;My_USART.c: 131: }
  1851                           ;My_USART.c: 132: }
  1852                           
  1853                           ;My_USART.c: 129: {
  1854                           ;My_USART.c: 130: return 1;
  1855                           ;	Return value of _RS485_Receive_Date is never used
  1856  0018AE  0012               	return	
  1857  0018B0  0012               	return		;funcret
  1858  0018B2                     __end_of_RS485_Receive_Date:
  1859                           	opt stack 0
  1860                           tblptru	equ	0xFF8
  1861                           tblptrh	equ	0xFF7
  1862                           tblptrl	equ	0xFF6
  1863                           tablat	equ	0xFF5
  1864                           prodh	equ	0xFF4
  1865                           prodl	equ	0xFF3
  1866                           intcon	equ	0xFF2
  1867                           postinc0	equ	0xFEE
  1868                           wreg	equ	0xFE8
  1869                           indf1	equ	0xFE7
  1870                           fsr1h	equ	0xFE2
  1871                           fsr1l	equ	0xFE1
  1872                           indf2	equ	0xFDF
  1873                           fsr2h	equ	0xFDA
  1874                           fsr2l	equ	0xFD9
  1875                           status	equ	0xFD8
  1876                           
  1877 ;; *************** function _CRC_Verify *****************
  1878 ;; Defined at:
  1879 ;;		line 146 in file "_01_USER/My_USART.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;  _pucBuf         2   30[COMRAM] PTR unsigned char 
  1882 ;;		 -> ReceiveBuff(10), RS485_SendBuff(10), 
  1883 ;;  _usLen          1   32[COMRAM] unsigned char 
  1884 ;;  _ucHByte        2   33[COMRAM] PTR unsigned char 
  1885 ;;		 -> RS485_Receive_Date@_ucHByte(1), RS485_SendBuff(10), 
  1886 ;;  _ucLByte        2   35[COMRAM] PTR unsigned char 
  1887 ;;		 -> RS485_Receive_Date@_ucLByte(1), RS485_SendBuff(10), 
  1888 ;; Auto vars:     Size  Location     Type
  1889 ;;  usCrc           2   38[COMRAM] unsigned int 
  1890 ;;  i               1   40[COMRAM] unsigned char 
  1891 ;; Return value:  Size  Location     Type
  1892 ;;		None               void
  1893 ;; Registers used:
  1894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1900 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1901 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1902 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1903 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1904 ;;Total ram usage:       11 bytes
  1905 ;; Hardware stack levels used:    1
  1906 ;; Hardware stack levels required when called:    4
  1907 ;; This function calls:
  1908 ;;		___wmul
  1909 ;; This function is called by:
  1910 ;;		_RS485_Send_Date
  1911 ;;		_RS485_Receive_Date
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915                           	psect	text11
  1916  001A9A                     __ptext11:
  1917                           	opt stack 0
  1918  001A9A                     _CRC_Verify:
  1919                           	opt stack 24
  1920                           
  1921                           ;My_USART.c: 148: char i = 0;
  1922                           
  1923                           ;incstack = 0
  1924  001A9A  0E00               	movlw	0
  1925  001A9C  6E29               	movwf	CRC_Verify@i,c
  1926                           
  1927                           ;My_USART.c: 149: unsigned int usCrc = 0;
  1928  001A9E  0E00               	movlw	0
  1929  001AA0  6E28               	movwf	CRC_Verify@usCrc+1,c
  1930  001AA2  0E00               	movlw	0
  1931  001AA4  6E27               	movwf	CRC_Verify@usCrc,c
  1932                           
  1933                           ;My_USART.c: 151: for(i = 0 ; i < _usLen ; i++)
  1934  001AA6  0E00               	movlw	0
  1935  001AA8  6E29               	movwf	CRC_Verify@i,c
  1936  001AAA  D01D               	goto	l2799
  1937  001AAC                     l2795:
  1938                           
  1939                           ;My_USART.c: 152: usCrc = (usCrc+_pucBuf[i]*(i+1))%65536;
  1940  001AAC  0E01               	movlw	1
  1941  001AAE  2429               	addwf	CRC_Verify@i,w,c
  1942  001AB0  6E19               	movwf	___wmul@multiplier,c
  1943  001AB2  6A1A               	clrf	___wmul@multiplier+1,c
  1944  001AB4  0E00               	movlw	0
  1945  001AB6  221A               	addwfc	___wmul@multiplier+1,f,c
  1946  001AB8  5029               	movf	CRC_Verify@i,w,c
  1947  001ABA  0D01               	mullw	1
  1948  001ABC  50F3               	movf	prodl,w,c
  1949  001ABE  241F               	addwf	CRC_Verify@_pucBuf,w,c
  1950  001AC0  6ED9               	movwf	fsr2l,c
  1951  001AC2  50F4               	movf	prodh,w,c
  1952  001AC4  2020               	addwfc	CRC_Verify@_pucBuf+1,w,c
  1953  001AC6  6EDA               	movwf	fsr2h,c
  1954  001AC8  50DF               	movf	indf2,w,c
  1955  001ACA  6E26               	movwf	??_CRC_Verify& (0+255),c
  1956  001ACC  5026               	movf	??_CRC_Verify,w,c
  1957  001ACE  6E1B               	movwf	___wmul@multiplicand,c
  1958  001AD0  6A1C               	clrf	___wmul@multiplicand+1,c
  1959  001AD2  ECE9  F00E         	call	___wmul	;wreg free
  1960  001AD6  5027               	movf	CRC_Verify@usCrc,w,c
  1961  001AD8  2419               	addwf	?___wmul,w,c
  1962  001ADA  6E27               	movwf	CRC_Verify@usCrc,c
  1963  001ADC  5028               	movf	CRC_Verify@usCrc+1,w,c
  1964  001ADE  201A               	addwfc	?___wmul+1,w,c
  1965  001AE0  6E28               	movwf	CRC_Verify@usCrc+1,c
  1966  001AE2  2A29               	incf	CRC_Verify@i,f,c
  1967  001AE4  D000               	goto	l2799
  1968  001AE6                     l2799:
  1969  001AE6  5021               	movf	CRC_Verify@_usLen,w,c
  1970  001AE8  5C29               	subwf	CRC_Verify@i,w,c
  1971  001AEA  A0D8               	btfss	status,0,c
  1972  001AEC  D7DF               	goto	l2795
  1973                           
  1974                           ;My_USART.c: 154: *_ucHByte = usCrc / 256;
  1975  001AEE  5028               	movf	CRC_Verify@usCrc+1,w,c
  1976  001AF0  C022  FFD9         	movff	CRC_Verify@_ucHByte,fsr2l
  1977  001AF4  C023  FFDA         	movff	CRC_Verify@_ucHByte+1,fsr2h
  1978  001AF8  6EDF               	movwf	indf2,c
  1979                           
  1980                           ;My_USART.c: 155: *_ucLByte = usCrc % 256;
  1981  001AFA  C024  FFD9         	movff	CRC_Verify@_ucLByte,fsr2l
  1982  001AFE  C025  FFDA         	movff	CRC_Verify@_ucLByte+1,fsr2h
  1983  001B02  C027  FFDF         	movff	CRC_Verify@usCrc,indf2
  1984  001B06  0012               	return		;funcret
  1985  001B08                     __end_of_CRC_Verify:
  1986                           	opt stack 0
  1987                           tblptru	equ	0xFF8
  1988                           tblptrh	equ	0xFF7
  1989                           tblptrl	equ	0xFF6
  1990                           tablat	equ	0xFF5
  1991                           prodh	equ	0xFF4
  1992                           prodl	equ	0xFF3
  1993                           intcon	equ	0xFF2
  1994                           postinc0	equ	0xFEE
  1995                           wreg	equ	0xFE8
  1996                           indf1	equ	0xFE7
  1997                           fsr1h	equ	0xFE2
  1998                           fsr1l	equ	0xFE1
  1999                           indf2	equ	0xFDF
  2000                           fsr2h	equ	0xFDA
  2001                           fsr2l	equ	0xFD9
  2002                           status	equ	0xFD8
  2003                           
  2004 ;; *************** function ___wmul *****************
  2005 ;; Defined at:
  2006 ;;		line 15 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;  multiplier      2   24[COMRAM] unsigned int 
  2009 ;;  multiplicand    2   26[COMRAM] unsigned int 
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;  product         2   28[COMRAM] unsigned int 
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  2   24[COMRAM] unsigned int 
  2014 ;; Registers used:
  2015 ;;		wreg, status,2, status,0, prodl, prodh
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2021 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2022 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2024 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2025 ;;Total ram usage:        6 bytes
  2026 ;; Hardware stack levels used:    1
  2027 ;; Hardware stack levels required when called:    3
  2028 ;; This function calls:
  2029 ;;		Nothing
  2030 ;; This function is called by:
  2031 ;;		_CRC_Verify
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           	psect	text12
  2036  001DD2                     __ptext12:
  2037                           	opt stack 0
  2038  001DD2                     ___wmul:
  2039                           	opt stack 24
  2040                           
  2041                           ;incstack = 0
  2042  001DD2  5019               	movf	___wmul@multiplier,w,c
  2043  001DD4  021B               	mulwf	___wmul@multiplicand,c
  2044  001DD6  CFF3 F01D          	movff	prodl,___wmul@product
  2045  001DDA  CFF4 F01E          	movff	prodh,___wmul@product+1
  2046  001DDE  5019               	movf	___wmul@multiplier,w,c
  2047  001DE0  021C               	mulwf	___wmul@multiplicand+1,c
  2048  001DE2  50F3               	movf	prodl,w,c
  2049  001DE4  261E               	addwf	___wmul@product+1,f,c
  2050  001DE6  501A               	movf	___wmul@multiplier+1,w,c
  2051  001DE8  021B               	mulwf	___wmul@multiplicand,c
  2052  001DEA  50F3               	movf	prodl,w,c
  2053  001DEC  261E               	addwf	___wmul@product+1,f,c
  2054  001DEE  C01D  F019         	movff	___wmul@product,?___wmul
  2055  001DF2  C01E  F01A         	movff	___wmul@product+1,?___wmul+1
  2056  001DF6  0012               	return	
  2057  001DF8  0012               	return		;funcret
  2058  001DFA                     __end_of___wmul:
  2059                           	opt stack 0
  2060                           tblptru	equ	0xFF8
  2061                           tblptrh	equ	0xFF7
  2062                           tblptrl	equ	0xFF6
  2063                           tablat	equ	0xFF5
  2064                           prodh	equ	0xFF4
  2065                           prodl	equ	0xFF3
  2066                           intcon	equ	0xFF2
  2067                           postinc0	equ	0xFEE
  2068                           wreg	equ	0xFE8
  2069                           indf1	equ	0xFE7
  2070                           fsr1h	equ	0xFE2
  2071                           fsr1l	equ	0xFE1
  2072                           indf2	equ	0xFDF
  2073                           fsr2h	equ	0xFDA
  2074                           fsr2l	equ	0xFD9
  2075                           status	equ	0xFD8
  2076                           
  2077 ;; *************** function _Get_ADC6 *****************
  2078 ;; Defined at:
  2079 ;;		line 67 in file "_01_USER/My_ADC.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;		None
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;		None
  2084 ;; Return value:  Size  Location     Type
  2085 ;;		None               void
  2086 ;; Registers used:
  2087 ;;		wreg, status,2, status,0, cstack
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2097 ;;Total ram usage:        0 bytes
  2098 ;; Hardware stack levels used:    1
  2099 ;; Hardware stack levels required when called:    5
  2100 ;; This function calls:
  2101 ;;		_BusyADC
  2102 ;;		_ConvertADC
  2103 ;;		_ReadADC
  2104 ;;		___ftdiv
  2105 ;;		___ftmul
  2106 ;;		___lwtoft
  2107 ;; This function is called by:
  2108 ;;		_Run
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112                           	psect	text13
  2113  001B08                     __ptext13:
  2114                           	opt stack 0
  2115  001B08                     _Get_ADC6:
  2116                           	opt stack 24
  2117                           
  2118                           ;My_ADC.c: 69: ConvertADC();
  2119                           
  2120                           ;incstack = 0
  2121  001B08  ECC9  F00F         	call	_ConvertADC	;wreg free
  2122                           
  2123                           ;My_ADC.c: 70: while(BusyADC());
  2124  001B0C  D000               	goto	l3065
  2125  001B0E                     l3065:
  2126  001B0E  ECB7  F00F         	call	_BusyADC	;wreg free
  2127  001B12  0900               	iorlw	0
  2128  001B14  A4D8               	btfss	status,2,c
  2129  001B16  D7FB               	goto	l3065
  2130                           
  2131                           ;My_ADC.c: 71: ADC6_Buff =(unsigned int)ReadADC()*4.096f/4095.0f;
  2132  001B18  0E12               	movlw	18
  2133  001B1A  6E27               	movwf	___ftmul@f2,c
  2134  001B1C  0E83               	movlw	131
  2135  001B1E  6E28               	movwf	___ftmul@f2+1,c
  2136  001B20  0E40               	movlw	64
  2137  001B22  6E29               	movwf	___ftmul@f2+2,c
  2138  001B24  ECAF  F00F         	call	_ReadADC	;wreg free
  2139  001B28  C019  F021         	movff	?_ReadADC,___lwtoft@c
  2140  001B2C  C01A  F022         	movff	?_ReadADC+1,___lwtoft@c+1
  2141  001B30  EC10  F00F         	call	___lwtoft	;wreg free
  2142  001B34  C021  F024         	movff	?___lwtoft,___ftmul@f1
  2143  001B38  C022  F025         	movff	?___lwtoft+1,___ftmul@f1+1
  2144  001B3C  C023  F026         	movff	?___lwtoft+2,___ftmul@f1+2
  2145  001B40  EC26  F00A         	call	___ftmul	;wreg free
  2146  001B44  C024  F0A2         	movff	?___ftmul,___ftdiv@f1
  2147  001B48  C025  F0A3         	movff	?___ftmul+1,___ftdiv@f1+1
  2148  001B4C  C026  F0A4         	movff	?___ftmul+2,___ftdiv@f1+2
  2149  001B50  0EF0               	movlw	240
  2150  001B52  0100               	movlb	0	; () banked
  2151  001B54  6FA5               	movwf	___ftdiv@f2& (0+255),b
  2152  001B56  0E7F               	movlw	127
  2153  001B58  0100               	movlb	0	; () banked
  2154  001B5A  6FA6               	movwf	(___ftdiv@f2+1)& (0+255),b
  2155  001B5C  0E45               	movlw	69
  2156  001B5E  0100               	movlb	0	; () banked
  2157  001B60  6FA7               	movwf	(___ftdiv@f2+2)& (0+255),b
  2158  001B62  ECDA  F008         	call	___ftdiv	;wreg free
  2159  001B66  C0A2  F03B         	movff	?___ftdiv,_ADC6_Buff	;volatile
  2160  001B6A  C0A3  F03C         	movff	?___ftdiv+1,_ADC6_Buff+1	;volatile
  2161  001B6E  C0A4  F03D         	movff	?___ftdiv+2,_ADC6_Buff+2	;volatile
  2162  001B72  0012               	return		;funcret
  2163  001B74                     __end_of_Get_ADC6:
  2164                           	opt stack 0
  2165                           tblptru	equ	0xFF8
  2166                           tblptrh	equ	0xFF7
  2167                           tblptrl	equ	0xFF6
  2168                           tablat	equ	0xFF5
  2169                           prodh	equ	0xFF4
  2170                           prodl	equ	0xFF3
  2171                           intcon	equ	0xFF2
  2172                           postinc0	equ	0xFEE
  2173                           wreg	equ	0xFE8
  2174                           indf1	equ	0xFE7
  2175                           fsr1h	equ	0xFE2
  2176                           fsr1l	equ	0xFE1
  2177                           indf2	equ	0xFDF
  2178                           fsr2h	equ	0xFDA
  2179                           fsr2l	equ	0xFD9
  2180                           status	equ	0xFD8
  2181                           
  2182 ;; *************** function ___lwtoft *****************
  2183 ;; Defined at:
  2184 ;;		line 28 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;  c               2   32[COMRAM] unsigned int 
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;		None
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  3   32[COMRAM] float 
  2191 ;; Registers used:
  2192 ;;		wreg, status,2, status,0, cstack
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2198 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2201 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2202 ;;Total ram usage:        3 bytes
  2203 ;; Hardware stack levels used:    1
  2204 ;; Hardware stack levels required when called:    4
  2205 ;; This function calls:
  2206 ;;		___ftpack
  2207 ;; This function is called by:
  2208 ;;		_Get_ADC6
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           	psect	text14
  2213  001E20                     __ptext14:
  2214                           	opt stack 0
  2215  001E20                     ___lwtoft:
  2216                           	opt stack 24
  2217                           
  2218                           ;incstack = 0
  2219  001E20  C021  F019         	movff	___lwtoft@c,___ftpack@arg
  2220  001E24  C022  F01A         	movff	___lwtoft@c+1,___ftpack@arg+1
  2221  001E28  6A1B               	clrf	___ftpack@arg+2,c
  2222  001E2A  0E8E               	movlw	142
  2223  001E2C  6E1C               	movwf	___ftpack@exp,c
  2224  001E2E  0E00               	movlw	0
  2225  001E30  6E1D               	movwf	___ftpack@sign,c
  2226  001E32  EC0B  F00B         	call	___ftpack	;wreg free
  2227  001E36  C019  F021         	movff	?___ftpack,?___lwtoft
  2228  001E3A  C01A  F022         	movff	?___ftpack+1,?___lwtoft+1
  2229  001E3E  C01B  F023         	movff	?___ftpack+2,?___lwtoft+2
  2230  001E42  0012               	return	
  2231  001E44  0012               	return		;funcret
  2232  001E46                     __end_of___lwtoft:
  2233                           	opt stack 0
  2234                           tblptru	equ	0xFF8
  2235                           tblptrh	equ	0xFF7
  2236                           tblptrl	equ	0xFF6
  2237                           tablat	equ	0xFF5
  2238                           prodh	equ	0xFF4
  2239                           prodl	equ	0xFF3
  2240                           intcon	equ	0xFF2
  2241                           postinc0	equ	0xFEE
  2242                           wreg	equ	0xFE8
  2243                           indf1	equ	0xFE7
  2244                           fsr1h	equ	0xFE2
  2245                           fsr1l	equ	0xFE1
  2246                           indf2	equ	0xFDF
  2247                           fsr2h	equ	0xFDA
  2248                           fsr2l	equ	0xFD9
  2249                           status	equ	0xFD8
  2250                           
  2251 ;; *************** function ___ftmul *****************
  2252 ;; Defined at:
  2253 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;  f1              3   35[COMRAM] float 
  2256 ;;  f2              3   38[COMRAM] float 
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;  f3_as_produc    3   45[COMRAM] unsigned um
  2259 ;;  sign            1   49[COMRAM] unsigned char 
  2260 ;;  cntr            1   48[COMRAM] unsigned char 
  2261 ;;  exp             1   44[COMRAM] unsigned char 
  2262 ;; Return value:  Size  Location     Type
  2263 ;;                  3   35[COMRAM] float 
  2264 ;; Registers used:
  2265 ;;		wreg, status,2, status,0, cstack
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2271 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2272 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2273 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2274 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2275 ;;Total ram usage:       15 bytes
  2276 ;; Hardware stack levels used:    1
  2277 ;; Hardware stack levels required when called:    4
  2278 ;; This function calls:
  2279 ;;		___ftpack
  2280 ;; This function is called by:
  2281 ;;		_Get_ADC6
  2282 ;;		_TM1640_Show_Decimal
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           	psect	text15
  2287  00144C                     __ptext15:
  2288                           	opt stack 0
  2289  00144C                     ___ftmul:
  2290                           	opt stack 24
  2291                           
  2292                           ;incstack = 0
  2293  00144C  C026  F02A         	movff	___ftmul@f1+2,??___ftmul
  2294  001450  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  2295  001452  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  2296  001454  3425               	rlcf	___ftmul@f1+1,w,c
  2297  001456  362A               	rlcf	??___ftmul& (0+255),f,c
  2298  001458  E301               	bnc	u2681
  2299  00145A  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  2300  00145C                     u2681:
  2301  00145C  502A               	movf	??___ftmul,w,c
  2302  00145E  6E2D               	movwf	___ftmul@exp,c
  2303  001460  502D               	movf	___ftmul@exp,w,c
  2304  001462  A4D8               	btfss	status,2,c
  2305  001464  D007               	goto	l2871
  2306  001466  0E00               	movlw	0
  2307  001468  6E24               	movwf	?___ftmul,c
  2308  00146A  0E00               	movlw	0
  2309  00146C  6E25               	movwf	?___ftmul+1,c
  2310  00146E  0E00               	movlw	0
  2311  001470  6E26               	movwf	?___ftmul+2,c
  2312  001472  0012               	return	
  2313  001474                     l2871:
  2314  001474  C029  F02A         	movff	___ftmul@f2+2,??___ftmul
  2315  001478  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  2316  00147A  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  2317  00147C  3428               	rlcf	___ftmul@f2+1,w,c
  2318  00147E  362A               	rlcf	??___ftmul& (0+255),f,c
  2319  001480  E301               	bnc	u2701
  2320  001482  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  2321  001484                     u2701:
  2322  001484  502A               	movf	??___ftmul,w,c
  2323  001486  6E32               	movwf	___ftmul@sign,c
  2324  001488  5032               	movf	___ftmul@sign,w,c
  2325  00148A  A4D8               	btfss	status,2,c
  2326  00148C  D007               	goto	l2877
  2327  00148E  0E00               	movlw	0
  2328  001490  6E24               	movwf	?___ftmul,c
  2329  001492  0E00               	movlw	0
  2330  001494  6E25               	movwf	?___ftmul+1,c
  2331  001496  0E00               	movlw	0
  2332  001498  6E26               	movwf	?___ftmul+2,c
  2333  00149A  0012               	return	
  2334  00149C                     l2877:
  2335  00149C  5032               	movf	___ftmul@sign,w,c
  2336  00149E  0F7B               	addlw	123
  2337  0014A0  262D               	addwf	___ftmul@exp,f,c
  2338  0014A2  C026  F032         	movff	___ftmul@f1+2,___ftmul@sign
  2339  0014A6  5029               	movf	___ftmul@f2+2,w,c
  2340  0014A8  1A32               	xorwf	___ftmul@sign,f,c
  2341  0014AA  0E80               	movlw	128
  2342  0014AC  1632               	andwf	___ftmul@sign,f,c
  2343  0014AE  8E25               	bsf	___ftmul@f1+1,7,c
  2344  0014B0  8E28               	bsf	___ftmul@f2+1,7,c
  2345  0014B2  0EFF               	movlw	255
  2346  0014B4  1627               	andwf	___ftmul@f2,f,c
  2347  0014B6  0EFF               	movlw	255
  2348  0014B8  1628               	andwf	___ftmul@f2+1,f,c
  2349  0014BA  0E00               	movlw	0
  2350  0014BC  1629               	andwf	___ftmul@f2+2,f,c
  2351  0014BE  0E00               	movlw	0
  2352  0014C0  6E2E               	movwf	___ftmul@f3_as_product,c
  2353  0014C2  0E00               	movlw	0
  2354  0014C4  6E2F               	movwf	___ftmul@f3_as_product+1,c
  2355  0014C6  0E00               	movlw	0
  2356  0014C8  6E30               	movwf	___ftmul@f3_as_product+2,c
  2357  0014CA  0E07               	movlw	7
  2358  0014CC  6E31               	movwf	___ftmul@cntr,c
  2359  0014CE  D000               	goto	l2891
  2360  0014D0                     l2891:
  2361  0014D0  A024               	btfss	___ftmul@f1,0,c
  2362  0014D2  D007               	goto	l2895
  2363  0014D4  5027               	movf	___ftmul@f2,w,c
  2364  0014D6  262E               	addwf	___ftmul@f3_as_product,f,c
  2365  0014D8  5028               	movf	___ftmul@f2+1,w,c
  2366  0014DA  222F               	addwfc	___ftmul@f3_as_product+1,f,c
  2367  0014DC  5029               	movf	___ftmul@f2+2,w,c
  2368  0014DE  2230               	addwfc	___ftmul@f3_as_product+2,f,c
  2369  0014E0  D000               	goto	l2895
  2370  0014E2                     l2895:
  2371  0014E2  90D8               	bcf	status,0,c
  2372  0014E4  3226               	rrcf	___ftmul@f1+2,f,c
  2373  0014E6  3225               	rrcf	___ftmul@f1+1,f,c
  2374  0014E8  3224               	rrcf	___ftmul@f1,f,c
  2375  0014EA  90D8               	bcf	status,0,c
  2376  0014EC  3627               	rlcf	___ftmul@f2,f,c
  2377  0014EE  3628               	rlcf	___ftmul@f2+1,f,c
  2378  0014F0  3629               	rlcf	___ftmul@f2+2,f,c
  2379  0014F2  2E31               	decfsz	___ftmul@cntr,f,c
  2380  0014F4  D7ED               	goto	l2891
  2381  0014F6  D000               	goto	l2899
  2382  0014F8                     l2899:
  2383  0014F8  0E09               	movlw	9
  2384  0014FA  6E31               	movwf	___ftmul@cntr,c
  2385  0014FC  D000               	goto	l2901
  2386  0014FE                     l2901:
  2387  0014FE  A024               	btfss	___ftmul@f1,0,c
  2388  001500  D007               	goto	l2905
  2389  001502  5027               	movf	___ftmul@f2,w,c
  2390  001504  262E               	addwf	___ftmul@f3_as_product,f,c
  2391  001506  5028               	movf	___ftmul@f2+1,w,c
  2392  001508  222F               	addwfc	___ftmul@f3_as_product+1,f,c
  2393  00150A  5029               	movf	___ftmul@f2+2,w,c
  2394  00150C  2230               	addwfc	___ftmul@f3_as_product+2,f,c
  2395  00150E  D000               	goto	l2905
  2396  001510                     l2905:
  2397  001510  90D8               	bcf	status,0,c
  2398  001512  3226               	rrcf	___ftmul@f1+2,f,c
  2399  001514  3225               	rrcf	___ftmul@f1+1,f,c
  2400  001516  3224               	rrcf	___ftmul@f1,f,c
  2401  001518  90D8               	bcf	status,0,c
  2402  00151A  3230               	rrcf	___ftmul@f3_as_product+2,f,c
  2403  00151C  322F               	rrcf	___ftmul@f3_as_product+1,f,c
  2404  00151E  322E               	rrcf	___ftmul@f3_as_product,f,c
  2405  001520  2E31               	decfsz	___ftmul@cntr,f,c
  2406  001522  D7ED               	goto	l2901
  2407  001524  D000               	goto	l2909
  2408  001526                     l2909:
  2409  001526  C02E  F019         	movff	___ftmul@f3_as_product,___ftpack@arg
  2410  00152A  C02F  F01A         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2411  00152E  C030  F01B         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2412  001532  C02D  F01C         	movff	___ftmul@exp,___ftpack@exp
  2413  001536  C032  F01D         	movff	___ftmul@sign,___ftpack@sign
  2414  00153A  EC0B  F00B         	call	___ftpack	;wreg free
  2415  00153E  C019  F024         	movff	?___ftpack,?___ftmul
  2416  001542  C01A  F025         	movff	?___ftpack+1,?___ftmul+1
  2417  001546  C01B  F026         	movff	?___ftpack+2,?___ftmul+2
  2418  00154A  0012               	return	
  2419  00154C  0012               	return		;funcret
  2420  00154E                     __end_of___ftmul:
  2421                           	opt stack 0
  2422                           tblptru	equ	0xFF8
  2423                           tblptrh	equ	0xFF7
  2424                           tblptrl	equ	0xFF6
  2425                           tablat	equ	0xFF5
  2426                           prodh	equ	0xFF4
  2427                           prodl	equ	0xFF3
  2428                           intcon	equ	0xFF2
  2429                           postinc0	equ	0xFEE
  2430                           wreg	equ	0xFE8
  2431                           indf1	equ	0xFE7
  2432                           fsr1h	equ	0xFE2
  2433                           fsr1l	equ	0xFE1
  2434                           indf2	equ	0xFDF
  2435                           fsr2h	equ	0xFDA
  2436                           fsr2l	equ	0xFD9
  2437                           status	equ	0xFD8
  2438                           
  2439 ;; *************** function ___ftdiv *****************
  2440 ;; Defined at:
  2441 ;;		line 54 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;  f1              3    0[BANK0 ] float 
  2444 ;;  f2              3    3[BANK0 ] float 
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;  f3              3   10[BANK0 ] float 
  2447 ;;  sign            1   14[BANK0 ] unsigned char 
  2448 ;;  exp             1   13[BANK0 ] unsigned char 
  2449 ;;  cntr            1    9[BANK0 ] unsigned char 
  2450 ;; Return value:  Size  Location     Type
  2451 ;;                  3    0[BANK0 ] float 
  2452 ;; Registers used:
  2453 ;;		wreg, status,2, status,0, cstack
  2454 ;; Tracked objects:
  2455 ;;		On entry : 0/0
  2456 ;;		On exit  : 0/0
  2457 ;;		Unchanged: 0/0
  2458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2459 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2460 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2461 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2462 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2463 ;;Total ram usage:       15 bytes
  2464 ;; Hardware stack levels used:    1
  2465 ;; Hardware stack levels required when called:    4
  2466 ;; This function calls:
  2467 ;;		___ftpack
  2468 ;; This function is called by:
  2469 ;;		_Get_ADC6
  2470 ;;		_TM1640_Show_Decimal
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474                           	psect	text16
  2475  0011B4                     __ptext16:
  2476                           	opt stack 0
  2477  0011B4                     ___ftdiv:
  2478                           	opt stack 24
  2479                           
  2480                           ;incstack = 0
  2481  0011B4  C0A4  F0A8         	movff	___ftdiv@f1+2,??___ftdiv
  2482  0011B8  0100               	movlb	0	; () banked
  2483  0011BA  6BA9               	clrf	(??___ftdiv+1)& (0+255),b
  2484  0011BC  6BAA               	clrf	(??___ftdiv+2)& (0+255),b
  2485  0011BE  0100               	movlb	0	; () banked
  2486  0011C0  35A3               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  2487  0011C2  0100               	movlb	0	; () banked
  2488  0011C4  37A8               	rlcf	??___ftdiv& (0+255),f,b
  2489  0011C6  E301               	bnc	u2631
  2490  0011C8  81A9               	bsf	(??___ftdiv+1)& (0+255),0,b
  2491  0011CA                     u2631:
  2492  0011CA  0100               	movlb	0	; () banked
  2493  0011CC  51A8               	movf	??___ftdiv& (0+255),w,b
  2494  0011CE  0100               	movlb	0	; () banked
  2495  0011D0  6FAF               	movwf	___ftdiv@exp& (0+255),b
  2496  0011D2  0100               	movlb	0	; () banked
  2497  0011D4  51AF               	movf	___ftdiv@exp& (0+255),w,b
  2498  0011D6  A4D8               	btfss	status,2,c
  2499  0011D8  D00A               	goto	l2825
  2500                           
  2501                           ; BSR set to: 0
  2502  0011DA  0E00               	movlw	0
  2503  0011DC  0100               	movlb	0	; () banked
  2504  0011DE  6FA2               	movwf	?___ftdiv& (0+255),b
  2505  0011E0  0E00               	movlw	0
  2506  0011E2  0100               	movlb	0	; () banked
  2507  0011E4  6FA3               	movwf	(?___ftdiv+1)& (0+255),b
  2508  0011E6  0E00               	movlw	0
  2509  0011E8  0100               	movlb	0	; () banked
  2510  0011EA  6FA4               	movwf	(?___ftdiv+2)& (0+255),b
  2511                           
  2512                           ; BSR set to: 0
  2513  0011EC  0012               	return	
  2514  0011EE                     l2825:
  2515                           
  2516                           ; BSR set to: 0
  2517  0011EE  C0A7  F0A8         	movff	___ftdiv@f2+2,??___ftdiv
  2518  0011F2  0100               	movlb	0	; () banked
  2519  0011F4  6BA9               	clrf	(??___ftdiv+1)& (0+255),b
  2520  0011F6  6BAA               	clrf	(??___ftdiv+2)& (0+255),b
  2521  0011F8  0100               	movlb	0	; () banked
  2522  0011FA  35A6               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  2523  0011FC  0100               	movlb	0	; () banked
  2524  0011FE  37A8               	rlcf	??___ftdiv& (0+255),f,b
  2525  001200  E301               	bnc	u2651
  2526  001202  81A9               	bsf	(??___ftdiv+1)& (0+255),0,b
  2527  001204                     u2651:
  2528  001204  0100               	movlb	0	; () banked
  2529  001206  51A8               	movf	??___ftdiv& (0+255),w,b
  2530  001208  0100               	movlb	0	; () banked
  2531  00120A  6FB0               	movwf	___ftdiv@sign& (0+255),b
  2532  00120C  0100               	movlb	0	; () banked
  2533  00120E  51B0               	movf	___ftdiv@sign& (0+255),w,b
  2534  001210  A4D8               	btfss	status,2,c
  2535  001212  D00A               	goto	l2831
  2536                           
  2537                           ; BSR set to: 0
  2538  001214  0E00               	movlw	0
  2539  001216  0100               	movlb	0	; () banked
  2540  001218  6FA2               	movwf	?___ftdiv& (0+255),b
  2541  00121A  0E00               	movlw	0
  2542  00121C  0100               	movlb	0	; () banked
  2543  00121E  6FA3               	movwf	(?___ftdiv+1)& (0+255),b
  2544  001220  0E00               	movlw	0
  2545  001222  0100               	movlb	0	; () banked
  2546  001224  6FA4               	movwf	(?___ftdiv+2)& (0+255),b
  2547                           
  2548                           ; BSR set to: 0
  2549  001226  0012               	return	
  2550  001228                     l2831:
  2551                           
  2552                           ; BSR set to: 0
  2553  001228  0E00               	movlw	0
  2554  00122A  0100               	movlb	0	; () banked
  2555  00122C  6FAC               	movwf	___ftdiv@f3& (0+255),b
  2556  00122E  0E00               	movlw	0
  2557  001230  0100               	movlb	0	; () banked
  2558  001232  6FAD               	movwf	(___ftdiv@f3+1)& (0+255),b
  2559  001234  0E00               	movlw	0
  2560  001236  0100               	movlb	0	; () banked
  2561  001238  6FAE               	movwf	(___ftdiv@f3+2)& (0+255),b
  2562                           
  2563                           ; BSR set to: 0
  2564  00123A  0100               	movlb	0	; () banked
  2565  00123C  51B0               	movf	___ftdiv@sign& (0+255),w,b
  2566  00123E  0F89               	addlw	137
  2567  001240  0100               	movlb	0	; () banked
  2568  001242  5FAF               	subwf	___ftdiv@exp& (0+255),f,b
  2569                           
  2570                           ; BSR set to: 0
  2571  001244  C0A4  F0B0         	movff	___ftdiv@f1+2,___ftdiv@sign
  2572                           
  2573                           ; BSR set to: 0
  2574  001248  0100               	movlb	0	; () banked
  2575  00124A  51A7               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2576  00124C  0100               	movlb	0	; () banked
  2577  00124E  1BB0               	xorwf	___ftdiv@sign& (0+255),f,b
  2578                           
  2579                           ; BSR set to: 0
  2580  001250  0E80               	movlw	128
  2581  001252  0100               	movlb	0	; () banked
  2582  001254  17B0               	andwf	___ftdiv@sign& (0+255),f,b
  2583                           
  2584                           ; BSR set to: 0
  2585  001256  0100               	movlb	0	; () banked
  2586  001258  8FA3               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  2587                           
  2588                           ; BSR set to: 0
  2589  00125A  0EFF               	movlw	255
  2590  00125C  0100               	movlb	0	; () banked
  2591  00125E  17A2               	andwf	___ftdiv@f1& (0+255),f,b
  2592  001260  0EFF               	movlw	255
  2593  001262  0100               	movlb	0	; () banked
  2594  001264  17A3               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  2595  001266  0E00               	movlw	0
  2596  001268  0100               	movlb	0	; () banked
  2597  00126A  17A4               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  2598                           
  2599                           ; BSR set to: 0
  2600  00126C  0100               	movlb	0	; () banked
  2601  00126E  8FA6               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  2602                           
  2603                           ; BSR set to: 0
  2604  001270  0EFF               	movlw	255
  2605  001272  0100               	movlb	0	; () banked
  2606  001274  17A5               	andwf	___ftdiv@f2& (0+255),f,b
  2607  001276  0EFF               	movlw	255
  2608  001278  0100               	movlb	0	; () banked
  2609  00127A  17A6               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  2610  00127C  0E00               	movlw	0
  2611  00127E  0100               	movlb	0	; () banked
  2612  001280  17A7               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  2613                           
  2614                           ; BSR set to: 0
  2615  001282  0E18               	movlw	24
  2616  001284  0100               	movlb	0	; () banked
  2617  001286  6FAB               	movwf	___ftdiv@cntr& (0+255),b
  2618  001288  D000               	goto	l2851
  2619  00128A                     l2851:
  2620                           
  2621                           ; BSR set to: 0
  2622  00128A  0100               	movlb	0	; () banked
  2623  00128C  90D8               	bcf	status,0,c
  2624  00128E  37AC               	rlcf	___ftdiv@f3& (0+255),f,b
  2625  001290  37AD               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  2626  001292  37AE               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  2627                           
  2628                           ; BSR set to: 0
  2629  001294  0100               	movlb	0	; () banked
  2630  001296  51A5               	movf	___ftdiv@f2& (0+255),w,b
  2631  001298  0100               	movlb	0	; () banked
  2632  00129A  5DA2               	subwf	___ftdiv@f1& (0+255),w,b
  2633  00129C  0100               	movlb	0	; () banked
  2634  00129E  51A6               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2635  0012A0  0100               	movlb	0	; () banked
  2636  0012A2  59A3               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  2637  0012A4  0100               	movlb	0	; () banked
  2638  0012A6  51A7               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2639  0012A8  0100               	movlb	0	; () banked
  2640  0012AA  59A4               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  2641  0012AC  A0D8               	btfss	status,0,c
  2642  0012AE  D00E               	goto	l877
  2643                           
  2644                           ; BSR set to: 0
  2645  0012B0  0100               	movlb	0	; () banked
  2646  0012B2  51A5               	movf	___ftdiv@f2& (0+255),w,b
  2647  0012B4  0100               	movlb	0	; () banked
  2648  0012B6  5FA2               	subwf	___ftdiv@f1& (0+255),f,b
  2649  0012B8  0100               	movlb	0	; () banked
  2650  0012BA  51A6               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2651  0012BC  0100               	movlb	0	; () banked
  2652  0012BE  5BA3               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  2653  0012C0  0100               	movlb	0	; () banked
  2654  0012C2  51A7               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2655  0012C4  0100               	movlb	0	; () banked
  2656  0012C6  5BA4               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  2657                           
  2658                           ; BSR set to: 0
  2659  0012C8  0100               	movlb	0	; () banked
  2660  0012CA  81AC               	bsf	___ftdiv@f3& (0+255),0,b
  2661  0012CC                     l877:
  2662                           
  2663                           ; BSR set to: 0
  2664  0012CC  0100               	movlb	0	; () banked
  2665  0012CE  90D8               	bcf	status,0,c
  2666  0012D0  37A2               	rlcf	___ftdiv@f1& (0+255),f,b
  2667  0012D2  37A3               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  2668  0012D4  37A4               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  2669                           
  2670                           ; BSR set to: 0
  2671  0012D6  0100               	movlb	0	; () banked
  2672  0012D8  2FAB               	decfsz	___ftdiv@cntr& (0+255),f,b
  2673  0012DA  D7D7               	goto	l2851
  2674  0012DC  D000               	goto	l2861
  2675  0012DE                     l2861:
  2676                           
  2677                           ; BSR set to: 0
  2678  0012DE  C0AC  F019         	movff	___ftdiv@f3,___ftpack@arg
  2679  0012E2  C0AD  F01A         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2680  0012E6  C0AE  F01B         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2681  0012EA  C0AF  F01C         	movff	___ftdiv@exp,___ftpack@exp
  2682  0012EE  C0B0  F01D         	movff	___ftdiv@sign,___ftpack@sign
  2683  0012F2  EC0B  F00B         	call	___ftpack	;wreg free
  2684  0012F6  C019  F0A2         	movff	?___ftpack,?___ftdiv
  2685  0012FA  C01A  F0A3         	movff	?___ftpack+1,?___ftdiv+1
  2686  0012FE  C01B  F0A4         	movff	?___ftpack+2,?___ftdiv+2
  2687  001302  0012               	return	
  2688  001304  0012               	return		;funcret
  2689  001306                     __end_of___ftdiv:
  2690                           	opt stack 0
  2691                           tblptru	equ	0xFF8
  2692                           tblptrh	equ	0xFF7
  2693                           tblptrl	equ	0xFF6
  2694                           tablat	equ	0xFF5
  2695                           prodh	equ	0xFF4
  2696                           prodl	equ	0xFF3
  2697                           intcon	equ	0xFF2
  2698                           postinc0	equ	0xFEE
  2699                           wreg	equ	0xFE8
  2700                           indf1	equ	0xFE7
  2701                           fsr1h	equ	0xFE2
  2702                           fsr1l	equ	0xFE1
  2703                           indf2	equ	0xFDF
  2704                           fsr2h	equ	0xFDA
  2705                           fsr2l	equ	0xFD9
  2706                           status	equ	0xFD8
  2707                           
  2708 ;; *************** function ___ftpack *****************
  2709 ;; Defined at:
  2710 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;  arg             3   24[COMRAM] unsigned um
  2713 ;;  exp             1   27[COMRAM] unsigned char 
  2714 ;;  sign            1   28[COMRAM] unsigned char 
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;		None
  2717 ;; Return value:  Size  Location     Type
  2718 ;;                  3   24[COMRAM] float 
  2719 ;; Registers used:
  2720 ;;		wreg, status,2, status,0
  2721 ;; Tracked objects:
  2722 ;;		On entry : 0/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2726 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2728 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2729 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2730 ;;Total ram usage:        8 bytes
  2731 ;; Hardware stack levels used:    1
  2732 ;; Hardware stack levels required when called:    3
  2733 ;; This function calls:
  2734 ;;		Nothing
  2735 ;; This function is called by:
  2736 ;;		___ftdiv
  2737 ;;		___ftmul
  2738 ;;		___lwtoft
  2739 ;; This function uses a non-reentrant model
  2740 ;;
  2741                           
  2742                           	psect	text17
  2743  001616                     __ptext17:
  2744                           	opt stack 0
  2745  001616                     ___ftpack:
  2746                           	opt stack 24
  2747                           
  2748                           ;incstack = 0
  2749  001616  501C               	movf	___ftpack@exp,w,c
  2750  001618  B4D8               	btfsc	status,2,c
  2751  00161A  D005               	goto	l2761
  2752  00161C  5019               	movf	___ftpack@arg,w,c
  2753  00161E  101A               	iorwf	___ftpack@arg+1,w,c
  2754  001620  101B               	iorwf	___ftpack@arg+2,w,c
  2755  001622  A4D8               	btfss	status,2,c
  2756  001624  D00E               	goto	l2767
  2757  001626                     l2761:
  2758  001626  0E00               	movlw	0
  2759  001628  6E19               	movwf	?___ftpack,c
  2760  00162A  0E00               	movlw	0
  2761  00162C  6E1A               	movwf	?___ftpack+1,c
  2762  00162E  0E00               	movlw	0
  2763  001630  6E1B               	movwf	?___ftpack+2,c
  2764  001632  0012               	return	
  2765  001634  D006               	goto	l2767
  2766  001636                     l2765:
  2767  001636  2A1C               	incf	___ftpack@exp,f,c
  2768  001638  90D8               	bcf	status,0,c
  2769  00163A  321B               	rrcf	___ftpack@arg+2,f,c
  2770  00163C  321A               	rrcf	___ftpack@arg+1,f,c
  2771  00163E  3219               	rrcf	___ftpack@arg,f,c
  2772  001640  D000               	goto	l2767
  2773  001642                     l2767:
  2774  001642  0E00               	movlw	0
  2775  001644  1419               	andwf	___ftpack@arg,w,c
  2776  001646  6E1E               	movwf	??___ftpack& (0+255),c
  2777  001648  0E00               	movlw	0
  2778  00164A  141A               	andwf	___ftpack@arg+1,w,c
  2779  00164C  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  2780  00164E  0EFE               	movlw	254
  2781  001650  141B               	andwf	___ftpack@arg+2,w,c
  2782  001652  6E20               	movwf	(??___ftpack+2)& (0+255),c
  2783  001654  501E               	movf	??___ftpack,w,c
  2784  001656  101F               	iorwf	??___ftpack+1,w,c
  2785  001658  1020               	iorwf	??___ftpack+2,w,c
  2786  00165A  B4D8               	btfsc	status,2,c
  2787  00165C  D00E               	goto	l2773
  2788  00165E  D7EB               	goto	l2765
  2789  001660  D00C               	goto	l2773
  2790  001662                     l2769:
  2791  001662  2A1C               	incf	___ftpack@exp,f,c
  2792  001664  0E01               	movlw	1
  2793  001666  2619               	addwf	___ftpack@arg,f,c
  2794  001668  0E00               	movlw	0
  2795  00166A  221A               	addwfc	___ftpack@arg+1,f,c
  2796  00166C  0E00               	movlw	0
  2797  00166E  221B               	addwfc	___ftpack@arg+2,f,c
  2798  001670  90D8               	bcf	status,0,c
  2799  001672  321B               	rrcf	___ftpack@arg+2,f,c
  2800  001674  321A               	rrcf	___ftpack@arg+1,f,c
  2801  001676  3219               	rrcf	___ftpack@arg,f,c
  2802  001678  D000               	goto	l2773
  2803  00167A                     l2773:
  2804  00167A  0E00               	movlw	0
  2805  00167C  1419               	andwf	___ftpack@arg,w,c
  2806  00167E  6E1E               	movwf	??___ftpack& (0+255),c
  2807  001680  0E00               	movlw	0
  2808  001682  141A               	andwf	___ftpack@arg+1,w,c
  2809  001684  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  2810  001686  0EFF               	movlw	255
  2811  001688  141B               	andwf	___ftpack@arg+2,w,c
  2812  00168A  6E20               	movwf	(??___ftpack+2)& (0+255),c
  2813  00168C  501E               	movf	??___ftpack,w,c
  2814  00168E  101F               	iorwf	??___ftpack+1,w,c
  2815  001690  1020               	iorwf	??___ftpack+2,w,c
  2816  001692  B4D8               	btfsc	status,2,c
  2817  001694  D008               	goto	l2777
  2818  001696  D7E5               	goto	l2769
  2819  001698  D006               	goto	l2777
  2820  00169A                     l2775:
  2821  00169A  061C               	decf	___ftpack@exp,f,c
  2822  00169C  90D8               	bcf	status,0,c
  2823  00169E  3619               	rlcf	___ftpack@arg,f,c
  2824  0016A0  361A               	rlcf	___ftpack@arg+1,f,c
  2825  0016A2  361B               	rlcf	___ftpack@arg+2,f,c
  2826  0016A4  D000               	goto	l2777
  2827  0016A6                     l2777:
  2828  0016A6  BE1A               	btfsc	___ftpack@arg+1,7,c
  2829  0016A8  D004               	goto	l813
  2830  0016AA  0E02               	movlw	2
  2831  0016AC  601C               	cpfslt	___ftpack@exp,c
  2832  0016AE  D7F5               	goto	l2775
  2833  0016B0  D000               	goto	l813
  2834  0016B2                     l813:
  2835  0016B2  B01C               	btfsc	___ftpack@exp,0,c
  2836  0016B4  D002               	goto	l2783
  2837  0016B6  9E1A               	bcf	___ftpack@arg+1,7,c
  2838  0016B8  D000               	goto	l2783
  2839  0016BA                     l2783:
  2840  0016BA  90D8               	bcf	status,0,c
  2841  0016BC  321C               	rrcf	___ftpack@exp,f,c
  2842  0016BE  501C               	movf	___ftpack@exp,w,c
  2843  0016C0  121B               	iorwf	___ftpack@arg+2,f,c
  2844  0016C2  501D               	movf	___ftpack@sign,w,c
  2845  0016C4  B4D8               	btfsc	status,2,c
  2846  0016C6  D002               	goto	l2789
  2847  0016C8  8E1B               	bsf	___ftpack@arg+2,7,c
  2848  0016CA  D000               	goto	l2789
  2849  0016CC                     l2789:
  2850  0016CC  C019  F019         	movff	___ftpack@arg,?___ftpack
  2851  0016D0  C01A  F01A         	movff	___ftpack@arg+1,?___ftpack+1
  2852  0016D4  C01B  F01B         	movff	___ftpack@arg+2,?___ftpack+2
  2853  0016D8  0012               	return	
  2854  0016DA  0012               	return		;funcret
  2855  0016DC                     __end_of___ftpack:
  2856                           	opt stack 0
  2857                           tblptru	equ	0xFF8
  2858                           tblptrh	equ	0xFF7
  2859                           tblptrl	equ	0xFF6
  2860                           tablat	equ	0xFF5
  2861                           prodh	equ	0xFF4
  2862                           prodl	equ	0xFF3
  2863                           intcon	equ	0xFF2
  2864                           postinc0	equ	0xFEE
  2865                           wreg	equ	0xFE8
  2866                           indf1	equ	0xFE7
  2867                           fsr1h	equ	0xFE2
  2868                           fsr1l	equ	0xFE1
  2869                           indf2	equ	0xFDF
  2870                           fsr2h	equ	0xFDA
  2871                           fsr2l	equ	0xFD9
  2872                           status	equ	0xFD8
  2873                           
  2874 ;; *************** function _ReadADC *****************
  2875 ;; Defined at:
  2876 ;;		line 24 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  2877 ;; Parameters:    Size  Location     Type
  2878 ;;		None
  2879 ;; Auto vars:     Size  Location     Type
  2880 ;;		None
  2881 ;; Return value:  Size  Location     Type
  2882 ;;                  2   24[COMRAM] int 
  2883 ;; Registers used:
  2884 ;;		wreg, status,2
  2885 ;; Tracked objects:
  2886 ;;		On entry : 0/0
  2887 ;;		On exit  : 0/0
  2888 ;;		Unchanged: 0/0
  2889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2892 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2893 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2894 ;;Total ram usage:        4 bytes
  2895 ;; Hardware stack levels used:    1
  2896 ;; Hardware stack levels required when called:    3
  2897 ;; This function calls:
  2898 ;;		Nothing
  2899 ;; This function is called by:
  2900 ;;		_Get_ADC6
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           	psect	text18
  2905  001F5E                     __ptext18:
  2906                           	opt stack 0
  2907  001F5E                     _ReadADC:
  2908                           	opt stack 25
  2909                           
  2910                           ;incstack = 0
  2911  001F5E  50C4               	movf	4036,w,c	;volatile
  2912  001F60  6E1B               	movwf	??_ReadADC& (0+255),c
  2913  001F62  50C3               	movf	4035,w,c	;volatile
  2914  001F64  6E19               	movwf	?_ReadADC,c
  2915  001F66  C01B  F01A         	movff	??_ReadADC,?_ReadADC+1
  2916  001F6A  0012               	return	
  2917  001F6C  0012               	return		;funcret
  2918  001F6E                     __end_of_ReadADC:
  2919                           	opt stack 0
  2920                           tblptru	equ	0xFF8
  2921                           tblptrh	equ	0xFF7
  2922                           tblptrl	equ	0xFF6
  2923                           tablat	equ	0xFF5
  2924                           prodh	equ	0xFF4
  2925                           prodl	equ	0xFF3
  2926                           intcon	equ	0xFF2
  2927                           postinc0	equ	0xFEE
  2928                           wreg	equ	0xFE8
  2929                           indf1	equ	0xFE7
  2930                           fsr1h	equ	0xFE2
  2931                           fsr1l	equ	0xFE1
  2932                           indf2	equ	0xFDF
  2933                           fsr2h	equ	0xFDA
  2934                           fsr2l	equ	0xFD9
  2935                           status	equ	0xFD8
  2936                           
  2937 ;; *************** function _ConvertADC *****************
  2938 ;; Defined at:
  2939 ;;		line 22 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;		None
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;		None
  2944 ;; Return value:  Size  Location     Type
  2945 ;;		None               void
  2946 ;; Registers used:
  2947 ;;		None
  2948 ;; Tracked objects:
  2949 ;;		On entry : 0/0
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2957 ;;Total ram usage:        0 bytes
  2958 ;; Hardware stack levels used:    1
  2959 ;; Hardware stack levels required when called:    3
  2960 ;; This function calls:
  2961 ;;		Nothing
  2962 ;; This function is called by:
  2963 ;;		_Get_ADC6
  2964 ;; This function uses a non-reentrant model
  2965 ;;
  2966                           
  2967                           	psect	text19
  2968  001F92                     __ptext19:
  2969                           	opt stack 0
  2970  001F92                     _ConvertADC:
  2971                           	opt stack 25
  2972                           
  2973                           ;incstack = 0
  2974  001F92  82C2               	bsf	4034,1,c	;volatile
  2975  001F94  0012               	return		;funcret
  2976  001F96                     __end_of_ConvertADC:
  2977                           	opt stack 0
  2978                           tblptru	equ	0xFF8
  2979                           tblptrh	equ	0xFF7
  2980                           tblptrl	equ	0xFF6
  2981                           tablat	equ	0xFF5
  2982                           prodh	equ	0xFF4
  2983                           prodl	equ	0xFF3
  2984                           intcon	equ	0xFF2
  2985                           postinc0	equ	0xFEE
  2986                           wreg	equ	0xFE8
  2987                           indf1	equ	0xFE7
  2988                           fsr1h	equ	0xFE2
  2989                           fsr1l	equ	0xFE1
  2990                           indf2	equ	0xFDF
  2991                           fsr2h	equ	0xFDA
  2992                           fsr2l	equ	0xFD9
  2993                           status	equ	0xFD8
  2994                           
  2995 ;; *************** function _BusyADC *****************
  2996 ;; Defined at:
  2997 ;;		line 26 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;		None
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;		None
  3002 ;; Return value:  Size  Location     Type
  3003 ;;                  1    wreg      unsigned char 
  3004 ;; Registers used:
  3005 ;;		wreg
  3006 ;; Tracked objects:
  3007 ;;		On entry : 0/0
  3008 ;;		On exit  : 0/0
  3009 ;;		Unchanged: 0/0
  3010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3015 ;;Total ram usage:        0 bytes
  3016 ;; Hardware stack levels used:    1
  3017 ;; Hardware stack levels required when called:    3
  3018 ;; This function calls:
  3019 ;;		Nothing
  3020 ;; This function is called by:
  3021 ;;		_Get_ADC6
  3022 ;; This function uses a non-reentrant model
  3023 ;;
  3024                           
  3025                           	psect	text20
  3026  001F6E                     __ptext20:
  3027                           	opt stack 0
  3028  001F6E                     _BusyADC:
  3029                           	opt stack 25
  3030                           
  3031                           ;incstack = 0
  3032  001F6E  A2C2               	btfss	4034,1,c	;volatile
  3033  001F70  D002               	goto	u2620
  3034  001F72  0E01               	movlw	1
  3035  001F74  0012               	return	
  3036  001F76                     u2620:
  3037  001F76  0E00               	movlw	0
  3038  001F78  0012               	return	
  3039  001F7A  0012               	return		;funcret
  3040  001F7C                     __end_of_BusyADC:
  3041                           	opt stack 0
  3042                           tblptru	equ	0xFF8
  3043                           tblptrh	equ	0xFF7
  3044                           tblptrl	equ	0xFF6
  3045                           tablat	equ	0xFF5
  3046                           prodh	equ	0xFF4
  3047                           prodl	equ	0xFF3
  3048                           intcon	equ	0xFF2
  3049                           postinc0	equ	0xFEE
  3050                           wreg	equ	0xFE8
  3051                           indf1	equ	0xFE7
  3052                           fsr1h	equ	0xFE2
  3053                           fsr1l	equ	0xFE1
  3054                           indf2	equ	0xFDF
  3055                           fsr2h	equ	0xFDA
  3056                           fsr2l	equ	0xFD9
  3057                           status	equ	0xFD8
  3058                           
  3059 ;; *************** function _RS485_Init *****************
  3060 ;; Defined at:
  3061 ;;		line 45 in file "_01_USER/My_USART.c"
  3062 ;; Parameters:    Size  Location     Type
  3063 ;;		None
  3064 ;; Auto vars:     Size  Location     Type
  3065 ;;		None
  3066 ;; Return value:  Size  Location     Type
  3067 ;;		None               void
  3068 ;; Registers used:
  3069 ;;		wreg, status,2, status,0, cstack
  3070 ;; Tracked objects:
  3071 ;;		On entry : 0/0
  3072 ;;		On exit  : 0/0
  3073 ;;		Unchanged: 0/0
  3074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3079 ;;Total ram usage:        0 bytes
  3080 ;; Hardware stack levels used:    1
  3081 ;; Hardware stack levels required when called:    4
  3082 ;; This function calls:
  3083 ;;		_Open2USART
  3084 ;; This function is called by:
  3085 ;;		_main
  3086 ;; This function uses a non-reentrant model
  3087 ;;
  3088                           
  3089                           	psect	text21
  3090  001EFA                     __ptext21:
  3091                           	opt stack 0
  3092  001EFA                     _RS485_Init:
  3093                           	opt stack 26
  3094                           
  3095                           ;My_USART.c: 47: Open2USART( 0b01111111 &
  3096                           ;My_USART.c: 48: 0b11111111 &
  3097                           ;My_USART.c: 49: 0b11111110 &
  3098                           ;My_USART.c: 50: 0b11111101 &
  3099                           ;My_USART.c: 51: 0b11111111 &
  3100                           ;My_USART.c: 52: 0b11101111
  3101                           ;My_USART.c: 53: ,
  3102                           ;My_USART.c: 54: 12
  3103                           ;My_USART.c: 55: );
  3104                           
  3105                           ;incstack = 0
  3106  001EFA  0E00               	movlw	0
  3107  001EFC  6E1A               	movwf	Open2USART@spbrg+1,c
  3108  001EFE  0E0C               	movlw	12
  3109  001F00  6E19               	movwf	Open2USART@spbrg,c
  3110  001F02  0E6C               	movlw	108
  3111  001F04  EC59  F00C         	call	_Open2USART
  3112                           
  3113                           ;My_USART.c: 57: TRISGbits.TRISG1 = 1;
  3114  001F08  8298               	bsf	3992,1,c	;volatile
  3115                           
  3116                           ;My_USART.c: 58: TRISGbits.TRISG2 = 0;
  3117  001F0A  9498               	bcf	3992,2,c	;volatile
  3118                           
  3119                           ;My_USART.c: 59: TRISGbits.TRISG3 = 0;
  3120  001F0C  9698               	bcf	3992,3,c	;volatile
  3121                           
  3122                           ;My_USART.c: 60: RG3 = 1;
  3123  001F0E  8686               	bsf	3974,3,c	;volatile
  3124                           
  3125                           ;My_USART.c: 61: ANCON2 &= 0XF1;
  3126  001F10  0EF1               	movlw	241
  3127  001F12  010F               	movlb	15	; () banked
  3128  001F14  1723               	andwf	35,f,b	;volatile
  3129                           
  3130                           ; BSR set to: 15
  3131  001F16  0012               	return		;funcret
  3132  001F18                     __end_of_RS485_Init:
  3133                           	opt stack 0
  3134                           tblptru	equ	0xFF8
  3135                           tblptrh	equ	0xFF7
  3136                           tblptrl	equ	0xFF6
  3137                           tablat	equ	0xFF5
  3138                           prodh	equ	0xFF4
  3139                           prodl	equ	0xFF3
  3140                           intcon	equ	0xFF2
  3141                           postinc0	equ	0xFEE
  3142                           wreg	equ	0xFE8
  3143                           indf1	equ	0xFE7
  3144                           fsr1h	equ	0xFE2
  3145                           fsr1l	equ	0xFE1
  3146                           indf2	equ	0xFDF
  3147                           fsr2h	equ	0xFDA
  3148                           fsr2l	equ	0xFD9
  3149                           status	equ	0xFD8
  3150                           
  3151 ;; *************** function _Open2USART *****************
  3152 ;; Defined at:
  3153 ;;		line 118 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u2open.c"
  3154 ;; Parameters:    Size  Location     Type
  3155 ;;  config          1    wreg     unsigned char 
  3156 ;;  spbrg           2   24[COMRAM] unsigned int 
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;  config          1   26[COMRAM] unsigned char 
  3159 ;; Return value:  Size  Location     Type
  3160 ;;		None               void
  3161 ;; Registers used:
  3162 ;;		wreg, status,2
  3163 ;; Tracked objects:
  3164 ;;		On entry : 0/0
  3165 ;;		On exit  : 0/0
  3166 ;;		Unchanged: 0/0
  3167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3168 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3169 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3171 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3172 ;;Total ram usage:        3 bytes
  3173 ;; Hardware stack levels used:    1
  3174 ;; Hardware stack levels required when called:    3
  3175 ;; This function calls:
  3176 ;;		Nothing
  3177 ;; This function is called by:
  3178 ;;		_RS485_Init
  3179 ;; This function uses a non-reentrant model
  3180 ;;
  3181                           
  3182                           	psect	text22
  3183  0018B2                     __ptext22:
  3184                           	opt stack 0
  3185  0018B2                     _Open2USART:
  3186                           	opt stack 26
  3187                           
  3188                           ; BSR set to: 15
  3189                           ;incstack = 0
  3190                           ;Open2USART@config stored from wreg
  3191  0018B2  6E1B               	movwf	Open2USART@config,c
  3192  0018B4  0E00               	movlw	0
  3193  0018B6  010F               	movlb	15	; () banked
  3194  0018B8  6F21               	movwf	33,b	;volatile
  3195  0018BA  0E00               	movlw	0
  3196  0018BC  010F               	movlb	15	; () banked
  3197  0018BE  6F22               	movwf	34,b	;volatile
  3198                           
  3199                           ; BSR set to: 15
  3200  0018C0  A01B               	btfss	Open2USART@config,0,c
  3201  0018C2  D003               	goto	l2957
  3202                           
  3203                           ; BSR set to: 15
  3204  0018C4  010F               	movlb	15	; () banked
  3205  0018C6  8921               	bsf	33,4,b	;volatile
  3206  0018C8  D000               	goto	l2957
  3207  0018CA                     l2957:
  3208                           
  3209                           ; BSR set to: 15
  3210  0018CA  A21B               	btfss	Open2USART@config,1,c
  3211  0018CC  D005               	goto	l2961
  3212                           
  3213                           ; BSR set to: 15
  3214  0018CE  010F               	movlb	15	; () banked
  3215  0018D0  8D21               	bsf	33,6,b	;volatile
  3216  0018D2  010F               	movlb	15	; () banked
  3217  0018D4  8D22               	bsf	34,6,b	;volatile
  3218  0018D6  D000               	goto	l2961
  3219  0018D8                     l2961:
  3220                           
  3221                           ; BSR set to: 15
  3222  0018D8  A41B               	btfss	Open2USART@config,2,c
  3223  0018DA  D003               	goto	l2965
  3224                           
  3225                           ; BSR set to: 15
  3226  0018DC  010F               	movlb	15	; () banked
  3227  0018DE  8F21               	bsf	33,7,b	;volatile
  3228  0018E0  D000               	goto	l2965
  3229  0018E2                     l2965:
  3230                           
  3231                           ; BSR set to: 15
  3232  0018E2  A61B               	btfss	Open2USART@config,3,c
  3233  0018E4  D003               	goto	l482
  3234                           
  3235                           ; BSR set to: 15
  3236  0018E6  010F               	movlb	15	; () banked
  3237  0018E8  8922               	bsf	34,4,b	;volatile
  3238  0018EA  D003               	goto	l2969
  3239  0018EC                     l482:
  3240                           
  3241                           ; BSR set to: 15
  3242  0018EC  010F               	movlb	15	; () banked
  3243  0018EE  8B22               	bsf	34,5,b	;volatile
  3244  0018F0  D000               	goto	l2969
  3245  0018F2                     l2969:
  3246                           
  3247                           ; BSR set to: 15
  3248  0018F2  A81B               	btfss	Open2USART@config,4,c
  3249  0018F4  D003               	goto	l484
  3250                           
  3251                           ; BSR set to: 15
  3252  0018F6  010F               	movlb	15	; () banked
  3253  0018F8  8521               	bsf	33,2,b	;volatile
  3254  0018FA  D003               	goto	l2973
  3255  0018FC                     l484:
  3256                           
  3257                           ; BSR set to: 15
  3258  0018FC  010F               	movlb	15	; () banked
  3259  0018FE  9521               	bcf	33,2,b	;volatile
  3260  001900  D000               	goto	l2973
  3261  001902                     l2973:
  3262                           
  3263                           ; BSR set to: 15
  3264  001902  AA1B               	btfss	Open2USART@config,5,c
  3265  001904  D003               	goto	l2977
  3266                           
  3267                           ; BSR set to: 15
  3268  001906  010F               	movlb	15	; () banked
  3269  001908  8722               	bsf	34,3,b	;volatile
  3270  00190A  D000               	goto	l2977
  3271  00190C                     l2977:
  3272                           
  3273                           ; BSR set to: 15
  3274  00190C  AC1B               	btfss	Open2USART@config,6,c
  3275  00190E  D002               	goto	l487
  3276                           
  3277                           ; BSR set to: 15
  3278  001910  8AA3               	bsf	4003,5,c	;volatile
  3279  001912  D002               	goto	l2981
  3280  001914                     l487:
  3281                           
  3282                           ; BSR set to: 15
  3283  001914  9AA3               	bcf	4003,5,c	;volatile
  3284  001916  D000               	goto	l2981
  3285  001918                     l2981:
  3286                           
  3287                           ; BSR set to: 15
  3288  001918  AE1B               	btfss	Open2USART@config,7,c
  3289  00191A  D002               	goto	l489
  3290                           
  3291                           ; BSR set to: 15
  3292  00191C  88A3               	bsf	4003,4,c	;volatile
  3293  00191E  D001               	goto	l490
  3294  001920                     l489:
  3295                           
  3296                           ; BSR set to: 15
  3297  001920  98A3               	bcf	4003,4,c	;volatile
  3298  001922                     l490:
  3299                           
  3300                           ; BSR set to: 15
  3301  001922  C019  FF1E         	movff	Open2USART@spbrg,3870	;volatile
  3302                           
  3303                           ; BSR set to: 15
  3304  001926  501A               	movf	Open2USART@spbrg+1,w,c
  3305  001928  010F               	movlb	15	; () banked
  3306  00192A  6F1F               	movwf	31,b	;volatile
  3307                           
  3308                           ; BSR set to: 15
  3309  00192C  010F               	movlb	15	; () banked
  3310  00192E  8B21               	bsf	33,5,b	;volatile
  3311                           
  3312                           ; BSR set to: 15
  3313  001930  010F               	movlb	15	; () banked
  3314  001932  8F22               	bsf	34,7,b	;volatile
  3315                           
  3316                           ; BSR set to: 15
  3317  001934  0012               	return		;funcret
  3318  001936                     __end_of_Open2USART:
  3319                           	opt stack 0
  3320                           tblptru	equ	0xFF8
  3321                           tblptrh	equ	0xFF7
  3322                           tblptrl	equ	0xFF6
  3323                           tablat	equ	0xFF5
  3324                           prodh	equ	0xFF4
  3325                           prodl	equ	0xFF3
  3326                           intcon	equ	0xFF2
  3327                           postinc0	equ	0xFEE
  3328                           wreg	equ	0xFE8
  3329                           indf1	equ	0xFE7
  3330                           fsr1h	equ	0xFE2
  3331                           fsr1l	equ	0xFE1
  3332                           indf2	equ	0xFDF
  3333                           fsr2h	equ	0xFDA
  3334                           fsr2l	equ	0xFD9
  3335                           status	equ	0xFD8
  3336                           
  3337 ;; *************** function _Key_Init *****************
  3338 ;; Defined at:
  3339 ;;		line 39 in file "_01_USER/Key.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;		None
  3342 ;; Auto vars:     Size  Location     Type
  3343 ;;		None
  3344 ;; Return value:  Size  Location     Type
  3345 ;;		None               void
  3346 ;; Registers used:
  3347 ;;		wreg, status,2, status,0
  3348 ;; Tracked objects:
  3349 ;;		On entry : 0/0
  3350 ;;		On exit  : 0/0
  3351 ;;		Unchanged: 0/0
  3352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3357 ;;Total ram usage:        0 bytes
  3358 ;; Hardware stack levels used:    1
  3359 ;; Hardware stack levels required when called:    3
  3360 ;; This function calls:
  3361 ;;		Nothing
  3362 ;; This function is called by:
  3363 ;;		_main
  3364 ;; This function uses a non-reentrant model
  3365 ;;
  3366                           
  3367                           	psect	text23
  3368  001F88                     __ptext23:
  3369                           	opt stack 0
  3370  001F88                     _Key_Init:
  3371                           	opt stack 27
  3372                           
  3373                           ;Key.c: 41: TRISE |= 0x1e;
  3374                           
  3375                           ; BSR set to: 15
  3376                           ;incstack = 0
  3377  001F88  0E1E               	movlw	30
  3378  001F8A  1296               	iorwf	3990,f,c	;volatile
  3379                           
  3380                           ;Key.c: 42: TRISD |= 0xc0;
  3381  001F8C  0EC0               	movlw	192
  3382  001F8E  1295               	iorwf	3989,f,c	;volatile
  3383  001F90  0012               	return		;funcret
  3384  001F92                     __end_of_Key_Init:
  3385                           	opt stack 0
  3386                           tblptru	equ	0xFF8
  3387                           tblptrh	equ	0xFF7
  3388                           tblptrl	equ	0xFF6
  3389                           tablat	equ	0xFF5
  3390                           prodh	equ	0xFF4
  3391                           prodl	equ	0xFF3
  3392                           intcon	equ	0xFF2
  3393                           postinc0	equ	0xFEE
  3394                           wreg	equ	0xFE8
  3395                           indf1	equ	0xFE7
  3396                           fsr1h	equ	0xFE2
  3397                           fsr1l	equ	0xFE1
  3398                           indf2	equ	0xFDF
  3399                           fsr2h	equ	0xFDA
  3400                           fsr2l	equ	0xFD9
  3401                           status	equ	0xFD8
  3402                           
  3403 ;; *************** function _Init_TM1640 *****************
  3404 ;; Defined at:
  3405 ;;		line 128 in file "_01_USER/TM1640.c"
  3406 ;; Parameters:    Size  Location     Type
  3407 ;;		None
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;		None
  3410 ;; Return value:  Size  Location     Type
  3411 ;;		None               void
  3412 ;; Registers used:
  3413 ;;		wreg, status,2, status,0, cstack
  3414 ;; Tracked objects:
  3415 ;;		On entry : 0/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3423 ;;Total ram usage:        0 bytes
  3424 ;; Hardware stack levels used:    1
  3425 ;; Hardware stack levels required when called:    5
  3426 ;; This function calls:
  3427 ;;		_TM1640_Start
  3428 ;;		_TM1640_Stop
  3429 ;;		_TM1640_Writer_Byte
  3430 ;; This function is called by:
  3431 ;;		_main
  3432 ;; This function uses a non-reentrant model
  3433 ;;
  3434                           
  3435                           	psect	text24
  3436  001E46                     __ptext24:
  3437                           	opt stack 0
  3438  001E46                     _Init_TM1640:
  3439                           	opt stack 25
  3440                           
  3441                           ;TM1640.c: 130: TRISCbits.TRISC3 = 0;
  3442                           
  3443                           ;incstack = 0
  3444  001E46  9694               	bcf	3988,3,c	;volatile
  3445                           
  3446                           ;TM1640.c: 131: TRISCbits.TRISC4 = 0;
  3447  001E48  9894               	bcf	3988,4,c	;volatile
  3448                           
  3449                           ;TM1640.c: 132: TM1640_Stop();
  3450  001E4A  EC48  F00F         	call	_TM1640_Stop	;wreg free
  3451                           
  3452                           ;TM1640.c: 134: TM1640_Start();
  3453  001E4E  EC5A  F00F         	call	_TM1640_Start	;wreg free
  3454                           
  3455                           ;TM1640.c: 135: TM1640_Writer_Byte(0x44);
  3456  001E52  0E44               	movlw	68
  3457  001E54  EC2C  F00E         	call	_TM1640_Writer_Byte
  3458                           
  3459                           ;TM1640.c: 136: TM1640_Stop();
  3460  001E58  EC48  F00F         	call	_TM1640_Stop	;wreg free
  3461                           
  3462                           ;TM1640.c: 138: TM1640_Start();
  3463  001E5C  EC5A  F00F         	call	_TM1640_Start	;wreg free
  3464                           
  3465                           ;TM1640.c: 139: TM1640_Writer_Byte(0x8F);
  3466  001E60  0E8F               	movlw	143
  3467  001E62  EC2C  F00E         	call	_TM1640_Writer_Byte
  3468                           
  3469                           ;TM1640.c: 140: TM1640_Stop();
  3470  001E66  EC48  F00F         	call	_TM1640_Stop	;wreg free
  3471  001E6A  0012               	return		;funcret
  3472  001E6C                     __end_of_Init_TM1640:
  3473                           	opt stack 0
  3474                           tblptru	equ	0xFF8
  3475                           tblptrh	equ	0xFF7
  3476                           tblptrl	equ	0xFF6
  3477                           tablat	equ	0xFF5
  3478                           prodh	equ	0xFF4
  3479                           prodl	equ	0xFF3
  3480                           intcon	equ	0xFF2
  3481                           postinc0	equ	0xFEE
  3482                           wreg	equ	0xFE8
  3483                           indf1	equ	0xFE7
  3484                           fsr1h	equ	0xFE2
  3485                           fsr1l	equ	0xFE1
  3486                           indf2	equ	0xFDF
  3487                           fsr2h	equ	0xFDA
  3488                           fsr2l	equ	0xFD9
  3489                           status	equ	0xFD8
  3490                           
  3491 ;; *************** function _TM1640_Writer_Byte *****************
  3492 ;; Defined at:
  3493 ;;		line 86 in file "_01_USER/TM1640.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;  Date            1    wreg     const unsigned char 
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;  Date            1   26[COMRAM] const unsigned char 
  3498 ;;  mask            1   27[COMRAM] unsigned char 
  3499 ;; Return value:  Size  Location     Type
  3500 ;;		None               void
  3501 ;; Registers used:
  3502 ;;		wreg, status,2, status,0, cstack
  3503 ;; Tracked objects:
  3504 ;;		On entry : 0/0
  3505 ;;		On exit  : 0/0
  3506 ;;		Unchanged: 0/0
  3507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3509 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3511 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3512 ;;Total ram usage:        2 bytes
  3513 ;; Hardware stack levels used:    1
  3514 ;; Hardware stack levels required when called:    4
  3515 ;; This function calls:
  3516 ;;		_TM1640_Delay
  3517 ;; This function is called by:
  3518 ;;		_TM1640_Writer_Dates
  3519 ;;		_Init_TM1640
  3520 ;;		_Open_Display
  3521 ;;		_Disable_Display
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524                           
  3525                           	psect	text25
  3526  001C58                     __ptext25:
  3527                           	opt stack 0
  3528  001C58                     _TM1640_Writer_Byte:
  3529                           	opt stack 24
  3530                           
  3531                           ;incstack = 0
  3532                           ;TM1640_Writer_Byte@Date stored from wreg
  3533  001C58  6E1B               	movwf	TM1640_Writer_Byte@Date,c
  3534                           
  3535                           ;TM1640.c: 88: unsigned char mask;
  3536                           ;TM1640.c: 90: for(mask=0x01; mask; mask<<=1)
  3537  001C5A  0E01               	movlw	1
  3538  001C5C  6E1C               	movwf	TM1640_Writer_Byte@mask,c
  3539  001C5E  D017               	goto	l2749
  3540  001C60                     l326:
  3541                           
  3542                           ;TM1640.c: 91: {
  3543                           ;TM1640.c: 92: RC3 = 0;
  3544  001C60  9682               	bcf	3970,3,c	;volatile
  3545                           
  3546                           ;TM1640.c: 93: TM1640_Delay(1);
  3547  001C62  0E01               	movlw	1
  3548  001C64  EC99  F00F         	call	_TM1640_Delay
  3549                           
  3550                           ;TM1640.c: 94: if(mask & Date)
  3551  001C68  501C               	movf	TM1640_Writer_Byte@mask,w,c
  3552  001C6A  141B               	andwf	TM1640_Writer_Byte@Date,w,c
  3553  001C6C  0900               	iorlw	0
  3554  001C6E  B4D8               	btfsc	status,2,c
  3555  001C70  D002               	goto	l327
  3556                           
  3557                           ;TM1640.c: 95: RC4 = 1;
  3558  001C72  8882               	bsf	3970,4,c	;volatile
  3559  001C74  D002               	goto	l2743
  3560  001C76                     l327:
  3561                           
  3562                           ;TM1640.c: 96: else
  3563                           ;TM1640.c: 97: RC4 = 0;
  3564  001C76  9882               	bcf	3970,4,c	;volatile
  3565  001C78  D000               	goto	l2743
  3566  001C7A                     l2743:
  3567                           
  3568                           ;TM1640.c: 98: TM1640_Delay(1);
  3569  001C7A  0E01               	movlw	1
  3570  001C7C  EC99  F00F         	call	_TM1640_Delay
  3571                           
  3572                           ;TM1640.c: 99: RC3 = 1;
  3573  001C80  8682               	bsf	3970,3,c	;volatile
  3574                           
  3575                           ;TM1640.c: 100: TM1640_Delay(1);
  3576  001C82  0E01               	movlw	1
  3577  001C84  EC99  F00F         	call	_TM1640_Delay
  3578  001C88  90D8               	bcf	status,0,c
  3579  001C8A  361C               	rlcf	TM1640_Writer_Byte@mask,f,c
  3580  001C8C  D000               	goto	l2749
  3581  001C8E                     l2749:
  3582  001C8E  501C               	movf	TM1640_Writer_Byte@mask,w,c
  3583  001C90  A4D8               	btfss	status,2,c
  3584  001C92  D7E6               	goto	l326
  3585  001C94  0012               	return		;funcret
  3586  001C96                     __end_of_TM1640_Writer_Byte:
  3587                           	opt stack 0
  3588                           tblptru	equ	0xFF8
  3589                           tblptrh	equ	0xFF7
  3590                           tblptrl	equ	0xFF6
  3591                           tablat	equ	0xFF5
  3592                           prodh	equ	0xFF4
  3593                           prodl	equ	0xFF3
  3594                           intcon	equ	0xFF2
  3595                           postinc0	equ	0xFEE
  3596                           wreg	equ	0xFE8
  3597                           indf1	equ	0xFE7
  3598                           fsr1h	equ	0xFE2
  3599                           fsr1l	equ	0xFE1
  3600                           indf2	equ	0xFDF
  3601                           fsr2h	equ	0xFDA
  3602                           fsr2l	equ	0xFD9
  3603                           status	equ	0xFD8
  3604                           
  3605 ;; *************** function _TM1640_Stop *****************
  3606 ;; Defined at:
  3607 ;;		line 32 in file "_01_USER/TM1640.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;		None
  3610 ;; Auto vars:     Size  Location     Type
  3611 ;;		None
  3612 ;; Return value:  Size  Location     Type
  3613 ;;		None               void
  3614 ;; Registers used:
  3615 ;;		wreg, status,2, status,0, cstack
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3625 ;;Total ram usage:        0 bytes
  3626 ;; Hardware stack levels used:    1
  3627 ;; Hardware stack levels required when called:    4
  3628 ;; This function calls:
  3629 ;;		_TM1640_Delay
  3630 ;; This function is called by:
  3631 ;;		_TM1640_Writer_Dates
  3632 ;;		_Init_TM1640
  3633 ;;		_Open_Display
  3634 ;;		_Disable_Display
  3635 ;; This function uses a non-reentrant model
  3636 ;;
  3637                           
  3638                           	psect	text26
  3639  001E90                     __ptext26:
  3640                           	opt stack 0
  3641  001E90                     _TM1640_Stop:
  3642                           	opt stack 24
  3643                           
  3644                           ;TM1640.c: 34: RC3 = 0;
  3645                           
  3646                           ;incstack = 0
  3647  001E90  9682               	bcf	3970,3,c	;volatile
  3648                           
  3649                           ;TM1640.c: 35: TM1640_Delay(1);
  3650  001E92  0E01               	movlw	1
  3651  001E94  EC99  F00F         	call	_TM1640_Delay
  3652                           
  3653                           ;TM1640.c: 36: RC4 = 0;
  3654  001E98  9882               	bcf	3970,4,c	;volatile
  3655                           
  3656                           ;TM1640.c: 37: TM1640_Delay(1);
  3657  001E9A  0E01               	movlw	1
  3658  001E9C  EC99  F00F         	call	_TM1640_Delay
  3659                           
  3660                           ;TM1640.c: 38: RC3 = 1;
  3661  001EA0  8682               	bsf	3970,3,c	;volatile
  3662                           
  3663                           ;TM1640.c: 39: TM1640_Delay(1);
  3664  001EA2  0E01               	movlw	1
  3665  001EA4  EC99  F00F         	call	_TM1640_Delay
  3666                           
  3667                           ;TM1640.c: 40: RC4 = 1;
  3668  001EA8  8882               	bsf	3970,4,c	;volatile
  3669                           
  3670                           ;TM1640.c: 41: TM1640_Delay(1);
  3671  001EAA  0E01               	movlw	1
  3672  001EAC  EC99  F00F         	call	_TM1640_Delay
  3673                           
  3674                           ;TM1640.c: 42: RC3 = 0;
  3675  001EB0  9682               	bcf	3970,3,c	;volatile
  3676  001EB2  0012               	return		;funcret
  3677  001EB4                     __end_of_TM1640_Stop:
  3678                           	opt stack 0
  3679                           tblptru	equ	0xFF8
  3680                           tblptrh	equ	0xFF7
  3681                           tblptrl	equ	0xFF6
  3682                           tablat	equ	0xFF5
  3683                           prodh	equ	0xFF4
  3684                           prodl	equ	0xFF3
  3685                           intcon	equ	0xFF2
  3686                           postinc0	equ	0xFEE
  3687                           wreg	equ	0xFE8
  3688                           indf1	equ	0xFE7
  3689                           fsr1h	equ	0xFE2
  3690                           fsr1l	equ	0xFE1
  3691                           indf2	equ	0xFDF
  3692                           fsr2h	equ	0xFDA
  3693                           fsr2l	equ	0xFD9
  3694                           status	equ	0xFD8
  3695                           
  3696 ;; *************** function _TM1640_Start *****************
  3697 ;; Defined at:
  3698 ;;		line 19 in file "_01_USER/TM1640.c"
  3699 ;; Parameters:    Size  Location     Type
  3700 ;;		None
  3701 ;; Auto vars:     Size  Location     Type
  3702 ;;		None
  3703 ;; Return value:  Size  Location     Type
  3704 ;;		None               void
  3705 ;; Registers used:
  3706 ;;		wreg, status,2, status,0, cstack
  3707 ;; Tracked objects:
  3708 ;;		On entry : 0/0
  3709 ;;		On exit  : 0/0
  3710 ;;		Unchanged: 0/0
  3711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3716 ;;Total ram usage:        0 bytes
  3717 ;; Hardware stack levels used:    1
  3718 ;; Hardware stack levels required when called:    4
  3719 ;; This function calls:
  3720 ;;		_TM1640_Delay
  3721 ;; This function is called by:
  3722 ;;		_TM1640_Writer_Dates
  3723 ;;		_Init_TM1640
  3724 ;;		_Open_Display
  3725 ;;		_Disable_Display
  3726 ;; This function uses a non-reentrant model
  3727 ;;
  3728                           
  3729                           	psect	text27
  3730  001EB4                     __ptext27:
  3731                           	opt stack 0
  3732  001EB4                     _TM1640_Start:
  3733                           	opt stack 24
  3734                           
  3735                           ;TM1640.c: 21: RC3 = 0;
  3736                           
  3737                           ;incstack = 0
  3738  001EB4  9682               	bcf	3970,3,c	;volatile
  3739                           
  3740                           ;TM1640.c: 22: TM1640_Delay(1);
  3741  001EB6  0E01               	movlw	1
  3742  001EB8  EC99  F00F         	call	_TM1640_Delay
  3743                           
  3744                           ;TM1640.c: 23: RC4 = 1;
  3745  001EBC  8882               	bsf	3970,4,c	;volatile
  3746                           
  3747                           ;TM1640.c: 24: TM1640_Delay(1);
  3748  001EBE  0E01               	movlw	1
  3749  001EC0  EC99  F00F         	call	_TM1640_Delay
  3750                           
  3751                           ;TM1640.c: 25: RC3 = 1;
  3752  001EC4  8682               	bsf	3970,3,c	;volatile
  3753                           
  3754                           ;TM1640.c: 26: TM1640_Delay(1);
  3755  001EC6  0E01               	movlw	1
  3756  001EC8  EC99  F00F         	call	_TM1640_Delay
  3757                           
  3758                           ;TM1640.c: 27: RC4 = 0;
  3759  001ECC  9882               	bcf	3970,4,c	;volatile
  3760                           
  3761                           ;TM1640.c: 28: TM1640_Delay(1);
  3762  001ECE  0E01               	movlw	1
  3763  001ED0  EC99  F00F         	call	_TM1640_Delay
  3764                           
  3765                           ;TM1640.c: 29: RC3 = 0;
  3766  001ED4  9682               	bcf	3970,3,c	;volatile
  3767  001ED6  0012               	return		;funcret
  3768  001ED8                     __end_of_TM1640_Start:
  3769                           	opt stack 0
  3770                           tblptru	equ	0xFF8
  3771                           tblptrh	equ	0xFF7
  3772                           tblptrl	equ	0xFF6
  3773                           tablat	equ	0xFF5
  3774                           prodh	equ	0xFF4
  3775                           prodl	equ	0xFF3
  3776                           intcon	equ	0xFF2
  3777                           postinc0	equ	0xFEE
  3778                           wreg	equ	0xFE8
  3779                           indf1	equ	0xFE7
  3780                           fsr1h	equ	0xFE2
  3781                           fsr1l	equ	0xFE1
  3782                           indf2	equ	0xFDF
  3783                           fsr2h	equ	0xFDA
  3784                           fsr2l	equ	0xFD9
  3785                           status	equ	0xFD8
  3786                           
  3787 ;; *************** function _TM1640_Delay *****************
  3788 ;; Defined at:
  3789 ;;		line 118 in file "_01_USER/TM1640.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;  Time            1    wreg     unsigned char 
  3792 ;; Auto vars:     Size  Location     Type
  3793 ;;  Time            1   24[COMRAM] unsigned char 
  3794 ;;  i               1   25[COMRAM] unsigned char 
  3795 ;; Return value:  Size  Location     Type
  3796 ;;		None               void
  3797 ;; Registers used:
  3798 ;;		wreg, status,2, status,0
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3805 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3807 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3808 ;;Total ram usage:        2 bytes
  3809 ;; Hardware stack levels used:    1
  3810 ;; Hardware stack levels required when called:    3
  3811 ;; This function calls:
  3812 ;;		Nothing
  3813 ;; This function is called by:
  3814 ;;		_TM1640_Start
  3815 ;;		_TM1640_Stop
  3816 ;;		_TM1640_Writer_Byte
  3817 ;; This function uses a non-reentrant model
  3818 ;;
  3819                           
  3820                           	psect	text28
  3821  001F32                     __ptext28:
  3822                           	opt stack 0
  3823  001F32                     _TM1640_Delay:
  3824                           	opt stack 24
  3825                           
  3826                           ;incstack = 0
  3827                           ;TM1640_Delay@Time stored from wreg
  3828  001F32  6E19               	movwf	TM1640_Delay@Time,c
  3829  001F34                     
  3830                           ;TM1640.c: 123: {
  3831                           ;TM1640.c: 124: for(i=0; i<10; ++i);
  3832  001F34  0E00               	movlw	0
  3833  001F36  6E1A               	movwf	TM1640_Delay@i,c
  3834  001F38  D002               	goto	l2709
  3835  001F3A  D004               	goto	l341
  3836  001F3C                     l2707:
  3837  001F3C  2A1A               	incf	TM1640_Delay@i,f,c
  3838  001F3E                     l2709:
  3839  001F3E  0E09               	movlw	9
  3840  001F40  641A               	cpfsgt	TM1640_Delay@i,c
  3841  001F42  D7FC               	goto	l2707
  3842  001F44                     l341:
  3843                           
  3844                           ;TM1640.c: 125: }while(--Time);
  3845  001F44  2E19               	decfsz	TM1640_Delay@Time,f,c
  3846  001F46  D7F6               	goto	l2701
  3847  001F48  0012               	return	
  3848  001F4A  0012               	return		;funcret
  3849  001F4C                     __end_of_TM1640_Delay:
  3850                           	opt stack 0
  3851                           tblptru	equ	0xFF8
  3852                           tblptrh	equ	0xFF7
  3853                           tblptrl	equ	0xFF6
  3854                           tablat	equ	0xFF5
  3855                           prodh	equ	0xFF4
  3856                           prodl	equ	0xFF3
  3857                           intcon	equ	0xFF2
  3858                           postinc0	equ	0xFEE
  3859                           wreg	equ	0xFE8
  3860                           indf1	equ	0xFE7
  3861                           fsr1h	equ	0xFE2
  3862                           fsr1l	equ	0xFE1
  3863                           indf2	equ	0xFDF
  3864                           fsr2h	equ	0xFDA
  3865                           fsr2l	equ	0xFD9
  3866                           status	equ	0xFD8
  3867                           
  3868 ;; *************** function _GPIO_Config *****************
  3869 ;; Defined at:
  3870 ;;		line 38 in file "_01_USER/GPIO.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;		None
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;		None
  3875 ;; Return value:  Size  Location     Type
  3876 ;;		None               void
  3877 ;; Registers used:
  3878 ;;		wreg, status,2, status,0
  3879 ;; Tracked objects:
  3880 ;;		On entry : 0/0
  3881 ;;		On exit  : 0/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3888 ;;Total ram usage:        0 bytes
  3889 ;; Hardware stack levels used:    1
  3890 ;; Hardware stack levels required when called:    3
  3891 ;; This function calls:
  3892 ;;		Nothing
  3893 ;; This function is called by:
  3894 ;;		_main
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           	psect	text29
  3899  001F7C                     __ptext29:
  3900                           	opt stack 0
  3901  001F7C                     _GPIO_Config:
  3902                           	opt stack 27
  3903                           
  3904                           ;GPIO.c: 41: TRISE &= 0x1f;
  3905                           
  3906                           ;incstack = 0
  3907  001F7C  0E1F               	movlw	31
  3908  001F7E  1696               	andwf	3990,f,c	;volatile
  3909                           
  3910                           ;GPIO.c: 43: RE5 = 1;
  3911  001F80  8A84               	bsf	3972,5,c	;volatile
  3912                           
  3913                           ;GPIO.c: 44: RE6 = 1;
  3914  001F82  8C84               	bsf	3972,6,c	;volatile
  3915                           
  3916                           ;GPIO.c: 45: RE7 = 1;
  3917  001F84  8E84               	bsf	3972,7,c	;volatile
  3918  001F86  0012               	return		;funcret
  3919  001F88                     __end_of_GPIO_Config:
  3920                           	opt stack 0
  3921                           tblptru	equ	0xFF8
  3922                           tblptrh	equ	0xFF7
  3923                           tblptrl	equ	0xFF6
  3924                           tablat	equ	0xFF5
  3925                           prodh	equ	0xFF4
  3926                           prodl	equ	0xFF3
  3927                           intcon	equ	0xFF2
  3928                           postinc0	equ	0xFEE
  3929                           wreg	equ	0xFE8
  3930                           indf1	equ	0xFE7
  3931                           fsr1h	equ	0xFE2
  3932                           fsr1l	equ	0xFE1
  3933                           indf2	equ	0xFDF
  3934                           fsr2h	equ	0xFDA
  3935                           fsr2l	equ	0xFD9
  3936                           status	equ	0xFD8
  3937                           
  3938 ;; *************** function _ADC6_Init *****************
  3939 ;; Defined at:
  3940 ;;		line 37 in file "_01_USER/My_ADC.c"
  3941 ;; Parameters:    Size  Location     Type
  3942 ;;		None
  3943 ;; Auto vars:     Size  Location     Type
  3944 ;;		None
  3945 ;; Return value:  Size  Location     Type
  3946 ;;		None               void
  3947 ;; Registers used:
  3948 ;;		wreg, status,2, status,0, cstack
  3949 ;; Tracked objects:
  3950 ;;		On entry : 0/0
  3951 ;;		On exit  : 0/0
  3952 ;;		Unchanged: 0/0
  3953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3958 ;;Total ram usage:        0 bytes
  3959 ;; Hardware stack levels used:    1
  3960 ;; Hardware stack levels required when called:    4
  3961 ;; This function calls:
  3962 ;;		_OpenADC
  3963 ;; This function is called by:
  3964 ;;		_main
  3965 ;; This function uses a non-reentrant model
  3966 ;;
  3967                           
  3968                           	psect	text30
  3969  001F4C                     __ptext30:
  3970                           	opt stack 0
  3971  001F4C                     _ADC6_Init:
  3972                           	opt stack 26
  3973                           
  3974                           ;My_ADC.c: 40: OpenADC(0b11111111 &
  3975                           ;My_ADC.c: 41: 0b11110011 &
  3976                           ;My_ADC.c: 42: 0b10001111
  3977                           ;My_ADC.c: 43: ,
  3978                           ;My_ADC.c: 44: 0b10011011
  3979                           ;My_ADC.c: 45: ,
  3980                           ;My_ADC.c: 46: 0b00111111 &
  3981                           ;My_ADC.c: 47: 0b11111111 &
  3982                           ;My_ADC.c: 48: 0b11110111 &
  3983                           ;My_ADC.c: 49: 0b11111000
  3984                           ;My_ADC.c: 50: );
  3985                           
  3986                           ;incstack = 0
  3987  001F4C  0E9B               	movlw	155
  3988  001F4E  6E19               	movwf	OpenADC@config2,c
  3989  001F50  0E30               	movlw	48
  3990  001F52  6E1A               	movwf	OpenADC@config3,c
  3991  001F54  0E83               	movlw	131
  3992  001F56  ECBA  F00D         	call	_OpenADC
  3993                           
  3994                           ;My_ADC.c: 52: (PIE1bits.ADIE=0);
  3995  001F5A  9C9D               	bcf	3997,6,c	;volatile
  3996  001F5C  0012               	return		;funcret
  3997  001F5E                     __end_of_ADC6_Init:
  3998                           	opt stack 0
  3999                           tblptru	equ	0xFF8
  4000                           tblptrh	equ	0xFF7
  4001                           tblptrl	equ	0xFF6
  4002                           tablat	equ	0xFF5
  4003                           prodh	equ	0xFF4
  4004                           prodl	equ	0xFF3
  4005                           intcon	equ	0xFF2
  4006                           postinc0	equ	0xFEE
  4007                           wreg	equ	0xFE8
  4008                           indf1	equ	0xFE7
  4009                           fsr1h	equ	0xFE2
  4010                           fsr1l	equ	0xFE1
  4011                           indf2	equ	0xFDF
  4012                           fsr2h	equ	0xFDA
  4013                           fsr2l	equ	0xFD9
  4014                           status	equ	0xFD8
  4015                           
  4016 ;; *************** function _OpenADC *****************
  4017 ;; Defined at:
  4018 ;;		line 305 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;  config          1    wreg     unsigned char 
  4021 ;;  config2         1   24[COMRAM] unsigned char 
  4022 ;;  config3         1   25[COMRAM] unsigned char 
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;  config          1   28[COMRAM] unsigned char 
  4025 ;; Return value:  Size  Location     Type
  4026 ;;		None               void
  4027 ;; Registers used:
  4028 ;;		wreg, status,2, status,0
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4034 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4035 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4036 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4037 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4038 ;;Total ram usage:        5 bytes
  4039 ;; Hardware stack levels used:    1
  4040 ;; Hardware stack levels required when called:    3
  4041 ;; This function calls:
  4042 ;;		Nothing
  4043 ;; This function is called by:
  4044 ;;		_ADC6_Init
  4045 ;; This function uses a non-reentrant model
  4046 ;;
  4047                           
  4048                           	psect	text31
  4049  001B74                     __ptext31:
  4050                           	opt stack 0
  4051  001B74                     _OpenADC:
  4052                           	opt stack 26
  4053                           
  4054                           ;incstack = 0
  4055                           ;OpenADC@config stored from wreg
  4056  001B74  6E1D               	movwf	OpenADC@config,c
  4057  001B76  0E00               	movlw	0
  4058  001B78  6EC2               	movwf	4034,c	;volatile
  4059  001B7A  0E00               	movlw	0
  4060  001B7C  6EC1               	movwf	4033,c	;volatile
  4061  001B7E  0E00               	movlw	0
  4062  001B80  6EC0               	movwf	4032,c	;volatile
  4063  001B82  5019               	movf	OpenADC@config2,w,c
  4064  001B84  0B7C               	andlw	124
  4065  001B86  6EC2               	movwf	4034,c	;volatile
  4066  001B88  C01A  FFC1         	movff	OpenADC@config3,4033	;volatile
  4067  001B8C  C01D  F01B         	movff	OpenADC@config,??_OpenADC
  4068  001B90  90D8               	bcf	status,0,c
  4069  001B92  361B               	rlcf	??_OpenADC,f,c
  4070  001B94  90D8               	bcf	status,0,c
  4071  001B96  361B               	rlcf	??_OpenADC,f,c
  4072  001B98  0E38               	movlw	56
  4073  001B9A  161B               	andwf	??_OpenADC,f,c
  4074  001B9C  C01D  F01C         	movff	OpenADC@config,??_OpenADC+1
  4075  001BA0  3A1C               	swapf	??_OpenADC+1,f,c
  4076  001BA2  0E0F               	movlw	15
  4077  001BA4  161C               	andwf	??_OpenADC+1,f,c
  4078  001BA6  0E07               	movlw	7
  4079  001BA8  161C               	andwf	??_OpenADC+1,f,c
  4080  001BAA  501D               	movf	OpenADC@config,w,c
  4081  001BAC  0B80               	andlw	128
  4082  001BAE  101C               	iorwf	??_OpenADC+1,w,c
  4083  001BB0  101B               	iorwf	??_OpenADC,w,c
  4084  001BB2  6EC0               	movwf	4032,c	;volatile
  4085  001BB4  AE19               	btfss	OpenADC@config2,7,c
  4086  001BB6  D003               	goto	l454
  4087  001BB8  9C9E               	bcf	3998,6,c	;volatile
  4088  001BBA  8C9D               	bsf	3997,6,c	;volatile
  4089  001BBC  8CF2               	bsf	intcon,6,c	;volatile
  4090  001BBE                     l454:
  4091  001BBE  80C2               	bsf	4034,0,c	;volatile
  4092  001BC0  0012               	return		;funcret
  4093  001BC2                     __end_of_OpenADC:
  4094                           	opt stack 0
  4095                           tblptru	equ	0xFF8
  4096                           tblptrh	equ	0xFF7
  4097                           tblptrl	equ	0xFF6
  4098                           tablat	equ	0xFF5
  4099                           prodh	equ	0xFF4
  4100                           prodl	equ	0xFF3
  4101                           intcon	equ	0xFF2
  4102                           postinc0	equ	0xFEE
  4103                           wreg	equ	0xFE8
  4104                           indf1	equ	0xFE7
  4105                           fsr1h	equ	0xFE2
  4106                           fsr1l	equ	0xFE1
  4107                           indf2	equ	0xFDF
  4108                           fsr2h	equ	0xFDA
  4109                           fsr2l	equ	0xFD9
  4110                           status	equ	0xFD8
  4111                           
  4112 ;; *************** function _Sys_Cyc *****************
  4113 ;; Defined at:
  4114 ;;		line 98 in file "_01_USER/My_Timer.c"
  4115 ;; Parameters:    Size  Location     Type
  4116 ;;		None
  4117 ;; Auto vars:     Size  Location     Type
  4118 ;;  _pulse          1   23[COMRAM] unsigned char 
  4119 ;; Return value:  Size  Location     Type
  4120 ;;		None               void
  4121 ;; Registers used:
  4122 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4123 ;; Tracked objects:
  4124 ;;		On entry : 0/0
  4125 ;;		On exit  : 0/0
  4126 ;;		Unchanged: 0/0
  4127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4129 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4130 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4131 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4132 ;;Total ram usage:       15 bytes
  4133 ;; Hardware stack levels used:    1
  4134 ;; Hardware stack levels required when called:    2
  4135 ;; This function calls:
  4136 ;;		_Delay_1Khz
  4137 ;;		_Key_FSM_Scan
  4138 ;;		_Manage_Message
  4139 ;;		___llmod
  4140 ;;		i2_SetTimer0
  4141 ;; This function is called by:
  4142 ;;		Interrupt level 2
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           
  4146                           	psect	intcode
  4147  000008                     __pintcode:
  4148                           	opt stack 0
  4149  000008                     _Sys_Cyc:
  4150                           	opt stack 23
  4151                           
  4152                           ;incstack = 0
  4153  000008  CFFA F00A          	movff	pclath,??_Sys_Cyc
  4154  00000C  CFFB F00B          	movff	pclatu,??_Sys_Cyc+1
  4155  000010  CFE9 F00C          	movff	fsr0l,??_Sys_Cyc+2
  4156  000014  CFEA F00D          	movff	fsr0h,??_Sys_Cyc+3
  4157  000018  CFE1 F00E          	movff	fsr1l,??_Sys_Cyc+4
  4158  00001C  CFE2 F00F          	movff	fsr1h,??_Sys_Cyc+5
  4159  000020  CFD9 F010          	movff	fsr2l,??_Sys_Cyc+6
  4160  000024  CFDA F011          	movff	fsr2h,??_Sys_Cyc+7
  4161  000028  CFF3 F012          	movff	prodl,??_Sys_Cyc+8
  4162  00002C  CFF4 F013          	movff	prodh,??_Sys_Cyc+9
  4163  000030  CFF6 F014          	movff	tblptrl,??_Sys_Cyc+10
  4164  000034  CFF7 F015          	movff	tblptrh,??_Sys_Cyc+11
  4165  000038  CFF8 F016          	movff	tblptru,??_Sys_Cyc+12
  4166  00003C  CFF5 F017          	movff	tablat,??_Sys_Cyc+13
  4167                           
  4168                           ;My_Timer.c: 101: static unsigned char _overturn_1Khz = 0,_overturn_LED = 0;
  4169                           ;My_Timer.c: 102: unsigned char _pulse = 10;
  4170  000040  0E0A               	movlw	10
  4171  000042  6E18               	movwf	Sys_Cyc@_pulse,c
  4172                           
  4173                           ;My_Timer.c: 103: static char _RS485_Receive_Num = 0,RS485_Timer = 0;
  4174                           ;My_Timer.c: 106: if(TMR0IF && TMR0IE)
  4175  000044  B4F2               	btfsc	intcon,2,c	;volatile
  4176  000046  AAF2               	btfss	intcon,5,c	;volatile
  4177  000048  D064               	goto	i2l2665
  4178                           
  4179                           ;My_Timer.c: 107: {
  4180                           ;My_Timer.c: 108: Timer_Cyc = (Timer_Cyc+1) % 100000000;
  4181  00004A  0E01               	movlw	1
  4182  00004C  2437               	addwf	_Timer_Cyc,w,c
  4183  00004E  6E01               	movwf	___llmod@dividend,c
  4184  000050  0E00               	movlw	0
  4185  000052  2038               	addwfc	_Timer_Cyc+1,w,c
  4186  000054  6E02               	movwf	___llmod@dividend+1,c
  4187  000056  0E00               	movlw	0
  4188  000058  2039               	addwfc	_Timer_Cyc+2,w,c
  4189  00005A  6E03               	movwf	___llmod@dividend+2,c
  4190  00005C  0E00               	movlw	0
  4191  00005E  203A               	addwfc	_Timer_Cyc+3,w,c
  4192  000060  6E04               	movwf	___llmod@dividend+3,c
  4193  000062  0E00               	movlw	0
  4194  000064  6E05               	movwf	___llmod@divisor,c
  4195  000066  0EE1               	movlw	225
  4196  000068  6E06               	movwf	___llmod@divisor+1,c
  4197  00006A  0EF5               	movlw	245
  4198  00006C  6E07               	movwf	___llmod@divisor+2,c
  4199  00006E  0E05               	movlw	5
  4200  000070  6E08               	movwf	___llmod@divisor+3,c
  4201  000072  EC15  F00D         	call	___llmod	;wreg free
  4202  000076  C001  F037         	movff	?___llmod,_Timer_Cyc
  4203  00007A  C002  F038         	movff	?___llmod+1,_Timer_Cyc+1
  4204  00007E  C003  F039         	movff	?___llmod+2,_Timer_Cyc+2
  4205  000082  C004  F03A         	movff	?___llmod+3,_Timer_Cyc+3
  4206                           
  4207                           ;My_Timer.c: 109: if(_RS485_Receive_Num == 0) RS485_Timer --;
  4208  000086  5040               	movf	Sys_Cyc@_RS485_Receive_Num,w,c
  4209  000088  A4D8               	btfss	status,2,c
  4210  00008A  D002               	goto	i2l2637
  4211  00008C  063F               	decf	Sys_Cyc@RS485_Timer,f,c
  4212  00008E  D000               	goto	i2l2637
  4213  000090                     i2l2637:
  4214                           
  4215                           ;My_Timer.c: 111: if( Handle_Switch._1Khz )
  4216  000090  5033               	movf	_Handle_Switch,w,c
  4217  000092  A4D8               	btfss	status,2,c
  4218  000094  D00D               	goto	i2l2649
  4219  000096  D012               	goto	i2l2651
  4220                           
  4221                           ;My_Timer.c: 112: {
  4222                           ;My_Timer.c: 113: while( _pulse-- )
  4223  000098  D00B               	goto	i2l2649
  4224  00009A                     i2l2641:
  4225                           
  4226                           ;My_Timer.c: 114: {
  4227                           ;My_Timer.c: 115: _overturn_1Khz =~ _overturn_1Khz;
  4228  00009A  1E41               	comf	Sys_Cyc@_overturn_1Khz,f,c
  4229                           
  4230                           ;My_Timer.c: 116: if(_overturn_1Khz) PORTEbits.RE7 = 1; else PORTEbits.RE7 = 0;
  4231  00009C  5041               	movf	Sys_Cyc@_overturn_1Khz,w,c
  4232  00009E  B4D8               	btfsc	status,2,c
  4233  0000A0  D002               	goto	i2l266
  4234  0000A2  8E84               	bsf	3972,7,c	;volatile
  4235  0000A4  D002               	goto	i2l2647
  4236  0000A6                     i2l266:
  4237  0000A6  9E84               	bcf	3972,7,c	;volatile
  4238  0000A8  D000               	goto	i2l2647
  4239  0000AA                     i2l2647:
  4240                           
  4241                           ;My_Timer.c: 117: Delay_1Khz();
  4242  0000AA  EC84  F00E         	call	_Delay_1Khz	;wreg free
  4243  0000AE  D000               	goto	i2l2649
  4244  0000B0                     i2l2649:
  4245  0000B0  0618               	decf	Sys_Cyc@_pulse,f,c
  4246  0000B2  2818               	incf	Sys_Cyc@_pulse,w,c
  4247  0000B4  B4D8               	btfsc	status,2,c
  4248  0000B6  D002               	goto	i2l2651
  4249  0000B8  D7F0               	goto	i2l2641
  4250  0000BA  D000               	goto	i2l2651
  4251  0000BC                     i2l2651:
  4252                           
  4253                           ;My_Timer.c: 118: }
  4254                           ;My_Timer.c: 119: }
  4255                           ;My_Timer.c: 122: if( Timer_Cyc%30 == 0 )
  4256  0000BC  C037  F001         	movff	_Timer_Cyc,___llmod@dividend
  4257  0000C0  C038  F002         	movff	_Timer_Cyc+1,___llmod@dividend+1
  4258  0000C4  C039  F003         	movff	_Timer_Cyc+2,___llmod@dividend+2
  4259  0000C8  C03A  F004         	movff	_Timer_Cyc+3,___llmod@dividend+3
  4260  0000CC  0E1E               	movlw	30
  4261  0000CE  6E05               	movwf	___llmod@divisor,c
  4262  0000D0  0E00               	movlw	0
  4263  0000D2  6E06               	movwf	___llmod@divisor+1,c
  4264  0000D4  0E00               	movlw	0
  4265  0000D6  6E07               	movwf	___llmod@divisor+2,c
  4266  0000D8  0E00               	movlw	0
  4267  0000DA  6E08               	movwf	___llmod@divisor+3,c
  4268  0000DC  EC15  F00D         	call	___llmod	;wreg free
  4269  0000E0  5001               	movf	?___llmod,w,c
  4270  0000E2  1002               	iorwf	?___llmod+1,w,c
  4271  0000E4  1003               	iorwf	?___llmod+2,w,c
  4272  0000E6  1004               	iorwf	?___llmod+3,w,c
  4273  0000E8  A4D8               	btfss	status,2,c
  4274  0000EA  D008               	goto	i2l2659
  4275                           
  4276                           ;My_Timer.c: 123: {
  4277                           ;My_Timer.c: 124: _overturn_LED = ~_overturn_LED;
  4278  0000EC  1E42               	comf	Sys_Cyc@_overturn_LED,f,c
  4279                           
  4280                           ;My_Timer.c: 125: if(_overturn_LED) PORTEbits.RE5=0;
  4281  0000EE  5042               	movf	Sys_Cyc@_overturn_LED,w,c
  4282  0000F0  B4D8               	btfsc	status,2,c
  4283  0000F2  D002               	goto	i2l270
  4284  0000F4  9A84               	bcf	3972,5,c	;volatile
  4285  0000F6  D002               	goto	i2l2659
  4286  0000F8                     i2l270:
  4287                           
  4288                           ;My_Timer.c: 126: else PORTEbits.RE5=1;
  4289  0000F8  8A84               	bsf	3972,5,c	;volatile
  4290  0000FA  D000               	goto	i2l2659
  4291  0000FC                     i2l2659:
  4292                           
  4293                           ;My_Timer.c: 127: }
  4294                           ;My_Timer.c: 130: Key_FSM_Scan();
  4295  0000FC  ECE1  F00D         	call	_Key_FSM_Scan	;wreg free
  4296                           
  4297                           ;My_Timer.c: 133: Manage_Message();
  4298  000100  EC83  F009         	call	_Manage_Message	;wreg free
  4299                           
  4300                           ;My_Timer.c: 135: SetTimer0(78);
  4301  000104  0E00               	movlw	0
  4302  000106  6E02               	movwf	i2SetTimer0@_tmr+1,c
  4303  000108  0E4E               	movlw	78
  4304  00010A  6E01               	movwf	i2SetTimer0@_tmr,c
  4305  00010C  ECD1  F00E         	call	i2_SetTimer0	;wreg free
  4306  000110  D000               	goto	i2l2665
  4307  000112                     i2l2665:
  4308                           
  4309                           ;My_Timer.c: 136: }
  4310                           ;My_Timer.c: 139: if( RC2IF )
  4311  000112  AAA4               	btfss	4004,5,c	;volatile
  4312  000114  D022               	goto	i2l276
  4313                           
  4314                           ;My_Timer.c: 140: {
  4315                           ;My_Timer.c: 141: if(RS485_Timer == 0 ) _RS485_Receive_Num = 0;
  4316  000116  503F               	movf	Sys_Cyc@RS485_Timer,w,c
  4317  000118  A4D8               	btfss	status,2,c
  4318  00011A  D003               	goto	i2l2671
  4319  00011C  0E00               	movlw	0
  4320  00011E  6E40               	movwf	Sys_Cyc@_RS485_Receive_Num,c
  4321  000120  D000               	goto	i2l2671
  4322  000122                     i2l2671:
  4323                           
  4324                           ;My_Timer.c: 143: RS485_ReceiveBuff[_RS485_Receive_Num] = RCREG2;
  4325  000122  5040               	movf	Sys_Cyc@_RS485_Receive_Num,w,c
  4326  000124  0D01               	mullw	1
  4327  000126  0E60               	movlw	low _RS485_ReceiveBuff
  4328  000128  24F3               	addwf	prodl,w,c
  4329  00012A  6ED9               	movwf	fsr2l,c
  4330  00012C  0E00               	movlw	high _RS485_ReceiveBuff
  4331  00012E  20F4               	addwfc	prodh,w,c
  4332  000130  6EDA               	movwf	fsr2h,c
  4333  000132  CF1D FFDF          	movff	3869,indf2	;volatile
  4334                           
  4335                           ;My_Timer.c: 145: if(RS485_ReceiveBuff[0] == 0xaa) _RS485_Receive_Num++,RS485_Timer = 2;
  4336  000136  0EAA               	movlw	170
  4337  000138  0100               	movlb	0	; () banked
  4338  00013A  1960               	xorwf	_RS485_ReceiveBuff& (0+255),w,b
  4339  00013C  A4D8               	btfss	status,2,c
  4340  00013E  D004               	goto	i2l2679
  4341                           
  4342                           ; BSR set to: 0
  4343  000140  2A40               	incf	Sys_Cyc@_RS485_Receive_Num,f,c
  4344                           
  4345                           ; BSR set to: 0
  4346  000142  0E02               	movlw	2
  4347  000144  6E3F               	movwf	Sys_Cyc@RS485_Timer,c
  4348  000146  D000               	goto	i2l2679
  4349  000148                     i2l2679:
  4350                           
  4351                           ; BSR set to: 0
  4352                           ;My_Timer.c: 147: if( _RS485_Receive_Num == 10 )
  4353  000148  0E0A               	movlw	10
  4354  00014A  1840               	xorwf	Sys_Cyc@_RS485_Receive_Num,w,c
  4355  00014C  A4D8               	btfss	status,2,c
  4356  00014E  D005               	goto	i2l276
  4357                           
  4358                           ; BSR set to: 0
  4359                           ;My_Timer.c: 148: {
  4360                           ;My_Timer.c: 149: RS485_Receive_Flag = 1 ;
  4361  000150  0E01               	movlw	1
  4362  000152  6E45               	movwf	_RS485_Receive_Flag,c
  4363                           
  4364                           ;My_Timer.c: 150: _RS485_Receive_Num = 0;
  4365  000154  0E00               	movlw	0
  4366  000156  6E40               	movwf	Sys_Cyc@_RS485_Receive_Num,c
  4367                           
  4368                           ; BSR set to: 0
  4369  000158  D000               	goto	i2l276
  4370  00015A                     i2l276:
  4371  00015A  C017  FFF5         	movff	??_Sys_Cyc+13,tablat
  4372  00015E  C016  FFF8         	movff	??_Sys_Cyc+12,tblptru
  4373  000162  C015  FFF7         	movff	??_Sys_Cyc+11,tblptrh
  4374  000166  C014  FFF6         	movff	??_Sys_Cyc+10,tblptrl
  4375  00016A  C013  FFF4         	movff	??_Sys_Cyc+9,prodh
  4376  00016E  C012  FFF3         	movff	??_Sys_Cyc+8,prodl
  4377  000172  C011  FFDA         	movff	??_Sys_Cyc+7,fsr2h
  4378  000176  C010  FFD9         	movff	??_Sys_Cyc+6,fsr2l
  4379  00017A  C00F  FFE2         	movff	??_Sys_Cyc+5,fsr1h
  4380  00017E  C00E  FFE1         	movff	??_Sys_Cyc+4,fsr1l
  4381  000182  C00D  FFEA         	movff	??_Sys_Cyc+3,fsr0h
  4382  000186  C00C  FFE9         	movff	??_Sys_Cyc+2,fsr0l
  4383  00018A  C00B  FFFB         	movff	??_Sys_Cyc+1,pclatu
  4384  00018E  C00A  FFFA         	movff	??_Sys_Cyc,pclath
  4385  000192  0011               	retfie		f
  4386  000194                     __end_of_Sys_Cyc:
  4387                           	opt stack 0
  4388                           pclatu	equ	0xFFB
  4389                           pclath	equ	0xFFA
  4390                           tblptru	equ	0xFF8
  4391                           tblptrh	equ	0xFF7
  4392                           tblptrl	equ	0xFF6
  4393                           tablat	equ	0xFF5
  4394                           prodh	equ	0xFF4
  4395                           prodl	equ	0xFF3
  4396                           intcon	equ	0xFF2
  4397                           postinc0	equ	0xFEE
  4398                           fsr0h	equ	0xFEA
  4399                           fsr0l	equ	0xFE9
  4400                           wreg	equ	0xFE8
  4401                           indf1	equ	0xFE7
  4402                           fsr1h	equ	0xFE2
  4403                           fsr1l	equ	0xFE1
  4404                           indf2	equ	0xFDF
  4405                           fsr2h	equ	0xFDA
  4406                           fsr2l	equ	0xFD9
  4407                           status	equ	0xFD8
  4408                           
  4409 ;; *************** function i2_SetTimer0 *****************
  4410 ;; Defined at:
  4411 ;;		line 79 in file "_01_USER/My_Timer.c"
  4412 ;; Parameters:    Size  Location     Type
  4413 ;;  _tmr            2    0[COMRAM] unsigned int 
  4414 ;; Auto vars:     Size  Location     Type
  4415 ;;		None
  4416 ;; Return value:  Size  Location     Type
  4417 ;;		None               void
  4418 ;; Registers used:
  4419 ;;		wreg, status,2, status,0
  4420 ;; Tracked objects:
  4421 ;;		On entry : 0/0
  4422 ;;		On exit  : 0/0
  4423 ;;		Unchanged: 0/0
  4424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4425 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4427 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4428 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4429 ;;Total ram usage:        4 bytes
  4430 ;; Hardware stack levels used:    1
  4431 ;; This function calls:
  4432 ;;		Nothing
  4433 ;; This function is called by:
  4434 ;;		_Sys_Cyc
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           	psect	text33
  4439  001DA2                     __ptext33:
  4440                           	opt stack 0
  4441  001DA2                     i2_SetTimer0:
  4442                           	opt stack 24
  4443                           
  4444                           ;My_Timer.c: 81: if(_tmr > 0xffff) _tmr = 0xffff;
  4445                           
  4446                           ;incstack = 0
  4447  001DA2  D003               	goto	i2l2577
  4448  001DA4  6801               	setf	i2SetTimer0@_tmr,c
  4449  001DA6  6802               	setf	i2SetTimer0@_tmr+1,c
  4450  001DA8  D000               	goto	i2l2577
  4451  001DAA                     i2l2577:
  4452                           
  4453                           ;My_Timer.c: 82: _tmr=0xffff-_tmr;
  4454  001DAA  C001  F003         	movff	i2SetTimer0@_tmr,??i2_SetTimer0
  4455  001DAE  C002  F004         	movff	i2SetTimer0@_tmr+1,??i2_SetTimer0+1
  4456  001DB2  1E03               	comf	??i2_SetTimer0,f,c
  4457  001DB4  1E04               	comf	??i2_SetTimer0+1,f,c
  4458  001DB6  4A03               	infsnz	??i2_SetTimer0,f,c
  4459  001DB8  2A04               	incf	??i2_SetTimer0+1,f,c
  4460  001DBA  0EFF               	movlw	255
  4461  001DBC  2403               	addwf	??i2_SetTimer0,w,c
  4462  001DBE  6E01               	movwf	i2SetTimer0@_tmr,c
  4463  001DC0  0EFF               	movlw	255
  4464  001DC2  2004               	addwfc	??i2_SetTimer0+1,w,c
  4465  001DC4  6E02               	movwf	i2SetTimer0@_tmr+1,c
  4466                           
  4467                           ;My_Timer.c: 83: TMR0H = _tmr/256;
  4468  001DC6  5002               	movf	i2SetTimer0@_tmr+1,w,c
  4469  001DC8  6ED7               	movwf	4055,c	;volatile
  4470                           
  4471                           ;My_Timer.c: 84: TMR0L = _tmr%256;
  4472  001DCA  C001  FFD6         	movff	i2SetTimer0@_tmr,4054	;volatile
  4473                           
  4474                           ;My_Timer.c: 85: TMR0IF = 0;
  4475  001DCE  94F2               	bcf	intcon,2,c	;volatile
  4476  001DD0  0012               	return		;funcret
  4477  001DD2                     __end_ofi2_SetTimer0:
  4478                           	opt stack 0
  4479                           pclatu	equ	0xFFB
  4480                           pclath	equ	0xFFA
  4481                           tblptru	equ	0xFF8
  4482                           tblptrh	equ	0xFF7
  4483                           tblptrl	equ	0xFF6
  4484                           tablat	equ	0xFF5
  4485                           prodh	equ	0xFF4
  4486                           prodl	equ	0xFF3
  4487                           intcon	equ	0xFF2
  4488                           postinc0	equ	0xFEE
  4489                           fsr0h	equ	0xFEA
  4490                           fsr0l	equ	0xFE9
  4491                           wreg	equ	0xFE8
  4492                           indf1	equ	0xFE7
  4493                           fsr1h	equ	0xFE2
  4494                           fsr1l	equ	0xFE1
  4495                           indf2	equ	0xFDF
  4496                           fsr2h	equ	0xFDA
  4497                           fsr2l	equ	0xFD9
  4498                           status	equ	0xFD8
  4499                           
  4500 ;; *************** function ___llmod *****************
  4501 ;; Defined at:
  4502 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  4503 ;; Parameters:    Size  Location     Type
  4504 ;;  dividend        4    0[COMRAM] unsigned long 
  4505 ;;  divisor         4    4[COMRAM] unsigned long 
  4506 ;; Auto vars:     Size  Location     Type
  4507 ;;  counter         1    8[COMRAM] unsigned char 
  4508 ;; Return value:  Size  Location     Type
  4509 ;;                  4    0[COMRAM] unsigned long 
  4510 ;; Registers used:
  4511 ;;		wreg, status,2, status,0
  4512 ;; Tracked objects:
  4513 ;;		On entry : 0/0
  4514 ;;		On exit  : 0/0
  4515 ;;		Unchanged: 0/0
  4516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4517 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4518 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4520 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4521 ;;Total ram usage:        9 bytes
  4522 ;; Hardware stack levels used:    1
  4523 ;; This function calls:
  4524 ;;		Nothing
  4525 ;; This function is called by:
  4526 ;;		_Sys_Cyc
  4527 ;; This function uses a non-reentrant model
  4528 ;;
  4529                           
  4530                           	psect	text34
  4531  001A2A                     __ptext34:
  4532                           	opt stack 0
  4533  001A2A                     ___llmod:
  4534                           	opt stack 24
  4535                           
  4536                           ;incstack = 0
  4537  001A2A  5005               	movf	___llmod@divisor,w,c
  4538  001A2C  1006               	iorwf	___llmod@divisor+1,w,c
  4539  001A2E  1007               	iorwf	___llmod@divisor+2,w,c
  4540  001A30  1008               	iorwf	___llmod@divisor+3,w,c
  4541  001A32  B4D8               	btfsc	status,2,c
  4542  001A34  D029               	goto	i2l959
  4543  001A36  0E01               	movlw	1
  4544  001A38  6E09               	movwf	___llmod@counter,c
  4545  001A3A  D007               	goto	i2l2563
  4546  001A3C                     i2l2561:
  4547  001A3C  90D8               	bcf	status,0,c
  4548  001A3E  3605               	rlcf	___llmod@divisor,f,c
  4549  001A40  3606               	rlcf	___llmod@divisor+1,f,c
  4550  001A42  3607               	rlcf	___llmod@divisor+2,f,c
  4551  001A44  3608               	rlcf	___llmod@divisor+3,f,c
  4552  001A46  2A09               	incf	___llmod@counter,f,c
  4553  001A48  D000               	goto	i2l2563
  4554  001A4A                     i2l2563:
  4555  001A4A  BE08               	btfsc	___llmod@divisor+3,7,c
  4556  001A4C  D002               	goto	i2l2565
  4557  001A4E  D7F6               	goto	i2l2561
  4558  001A50  D000               	goto	i2l2565
  4559  001A52                     i2l2565:
  4560  001A52  5005               	movf	___llmod@divisor,w,c
  4561  001A54  5C01               	subwf	___llmod@dividend,w,c
  4562  001A56  5006               	movf	___llmod@divisor+1,w,c
  4563  001A58  5802               	subwfb	___llmod@dividend+1,w,c
  4564  001A5A  5007               	movf	___llmod@divisor+2,w,c
  4565  001A5C  5803               	subwfb	___llmod@dividend+2,w,c
  4566  001A5E  5008               	movf	___llmod@divisor+3,w,c
  4567  001A60  5804               	subwfb	___llmod@dividend+3,w,c
  4568  001A62  A0D8               	btfss	status,0,c
  4569  001A64  D009               	goto	i2l2569
  4570  001A66  5005               	movf	___llmod@divisor,w,c
  4571  001A68  5E01               	subwf	___llmod@dividend,f,c
  4572  001A6A  5006               	movf	___llmod@divisor+1,w,c
  4573  001A6C  5A02               	subwfb	___llmod@dividend+1,f,c
  4574  001A6E  5007               	movf	___llmod@divisor+2,w,c
  4575  001A70  5A03               	subwfb	___llmod@dividend+2,f,c
  4576  001A72  5008               	movf	___llmod@divisor+3,w,c
  4577  001A74  5A04               	subwfb	___llmod@dividend+3,f,c
  4578  001A76  D000               	goto	i2l2569
  4579  001A78                     i2l2569:
  4580  001A78  90D8               	bcf	status,0,c
  4581  001A7A  3208               	rrcf	___llmod@divisor+3,f,c
  4582  001A7C  3207               	rrcf	___llmod@divisor+2,f,c
  4583  001A7E  3206               	rrcf	___llmod@divisor+1,f,c
  4584  001A80  3205               	rrcf	___llmod@divisor,f,c
  4585  001A82  2E09               	decfsz	___llmod@counter,f,c
  4586  001A84  D7E6               	goto	i2l2565
  4587  001A86  D000               	goto	i2l959
  4588  001A88                     i2l959:
  4589  001A88  C001  F001         	movff	___llmod@dividend,?___llmod
  4590  001A8C  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  4591  001A90  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  4592  001A94  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  4593  001A98  0012               	return		;funcret
  4594  001A9A                     __end_of___llmod:
  4595                           	opt stack 0
  4596                           pclatu	equ	0xFFB
  4597                           pclath	equ	0xFFA
  4598                           tblptru	equ	0xFF8
  4599                           tblptrh	equ	0xFF7
  4600                           tblptrl	equ	0xFF6
  4601                           tablat	equ	0xFF5
  4602                           prodh	equ	0xFF4
  4603                           prodl	equ	0xFF3
  4604                           intcon	equ	0xFF2
  4605                           postinc0	equ	0xFEE
  4606                           fsr0h	equ	0xFEA
  4607                           fsr0l	equ	0xFE9
  4608                           wreg	equ	0xFE8
  4609                           indf1	equ	0xFE7
  4610                           fsr1h	equ	0xFE2
  4611                           fsr1l	equ	0xFE1
  4612                           indf2	equ	0xFDF
  4613                           fsr2h	equ	0xFDA
  4614                           fsr2l	equ	0xFD9
  4615                           status	equ	0xFD8
  4616                           
  4617 ;; *************** function _Manage_Message *****************
  4618 ;; Defined at:
  4619 ;;		line 50 in file "_01_USER/Run.c"
  4620 ;; Parameters:    Size  Location     Type
  4621 ;;		None
  4622 ;; Auto vars:     Size  Location     Type
  4623 ;;  i               1    0        unsigned char 
  4624 ;; Return value:  Size  Location     Type
  4625 ;;		None               void
  4626 ;; Registers used:
  4627 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4628 ;; Tracked objects:
  4629 ;;		On entry : 0/0
  4630 ;;		On exit  : 0/0
  4631 ;;		Unchanged: 0/0
  4632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4637 ;;Total ram usage:        0 bytes
  4638 ;; Hardware stack levels used:    1
  4639 ;; Hardware stack levels required when called:    1
  4640 ;; This function calls:
  4641 ;;		_Key_FSM_Read
  4642 ;;		_Key_FSM_Reset
  4643 ;;		___lbmod
  4644 ;; This function is called by:
  4645 ;;		_Sys_Cyc
  4646 ;; This function uses a non-reentrant model
  4647 ;;
  4648                           
  4649                           	psect	text35
  4650  001306                     __ptext35:
  4651                           	opt stack 0
  4652  001306                     _Manage_Message:
  4653                           	opt stack 23
  4654                           
  4655                           ;Run.c: 52: char i;
  4656                           ;Run.c: 53: Key_FSM_Read();
  4657                           
  4658                           ;incstack = 0
  4659  001306  EC09  F008         	call	_Key_FSM_Read	;wreg free
  4660                           
  4661                           ;Run.c: 55: if ( Local_Key_User.key_group == ((0x01<<1)|(0x01<<3)) && Local_Key_User.key
      +                          _group_state == KEY_short )
  4662  00130A  0E0A               	movlw	10
  4663  00130C  0100               	movlb	0	; () banked
  4664  00130E  197D               	xorwf	(_Local_Key_User+1)& (0+255),w,b	;volatile
  4665  001310  A4D8               	btfss	status,2,c
  4666  001312  D00C               	goto	i2l2489
  4667                           
  4668                           ; BSR set to: 0
  4669  001314  0100               	movlb	0	; () banked
  4670  001316  057E               	decf	(_Local_Key_User+2)& (0+255),w,b	;volatile
  4671  001318  A4D8               	btfss	status,2,c
  4672  00131A  D008               	goto	i2l2489
  4673                           
  4674                           ; BSR set to: 0
  4675                           ;Run.c: 56: {
  4676                           ;Run.c: 57: Handle_Switch.Show_Send_Receive = ~Handle_Switch.Show_Send_Receive ;
  4677  00131C  5036               	movf	_Handle_Switch+3,w,c
  4678  00131E  0AFF               	xorlw	255
  4679  001320  6E36               	movwf	_Handle_Switch+3,c
  4680                           
  4681                           ; BSR set to: 0
  4682                           ;Run.c: 58: Key_FSM_Reset(); Receive_Flag =1;
  4683  001322  EC07  F00E         	call	_Key_FSM_Reset	;wreg free
  4684  001326  0E01               	movlw	1
  4685  001328  6E46               	movwf	_Receive_Flag,c
  4686  00132A  D000               	goto	i2l2489
  4687  00132C                     i2l2489:
  4688                           
  4689                           ;Run.c: 59: }
  4690                           ;Run.c: 62: if ( Local_Key_User.key_group == ((0x01<<0)|(0x01<<3)) && Local_Key_User.key
      +                          _group_state == KEY_short )
  4691  00132C  0E09               	movlw	9
  4692  00132E  0100               	movlb	0	; () banked
  4693  001330  197D               	xorwf	(_Local_Key_User+1)& (0+255),w,b	;volatile
  4694  001332  A4D8               	btfss	status,2,c
  4695  001334  D008               	goto	i2l2497
  4696                           
  4697                           ; BSR set to: 0
  4698  001336  0100               	movlb	0	; () banked
  4699  001338  057E               	decf	(_Local_Key_User+2)& (0+255),w,b	;volatile
  4700  00133A  A4D8               	btfss	status,2,c
  4701  00133C  D004               	goto	i2l2497
  4702                           
  4703                           ; BSR set to: 0
  4704                           ;Run.c: 63: { g_Addr++; Key_FSM_Reset();}
  4705  00133E  2A47               	incf	_g_Addr,f,c
  4706                           
  4707                           ; BSR set to: 0
  4708  001340  EC07  F00E         	call	_Key_FSM_Reset	;wreg free
  4709  001344  D000               	goto	i2l2497
  4710  001346                     i2l2497:
  4711                           
  4712                           ;Run.c: 66: if ( Local_Key_User.key_group == ((0x01<<0)|(0x01<<1)) && Local_Key_User.key
      +                          _group_state == KEY_short )
  4713  001346  0E03               	movlw	3
  4714  001348  0100               	movlb	0	; () banked
  4715  00134A  197D               	xorwf	(_Local_Key_User+1)& (0+255),w,b	;volatile
  4716  00134C  A4D8               	btfss	status,2,c
  4717  00134E  D008               	goto	i2l2505
  4718                           
  4719                           ; BSR set to: 0
  4720  001350  0100               	movlb	0	; () banked
  4721  001352  057E               	decf	(_Local_Key_User+2)& (0+255),w,b	;volatile
  4722  001354  A4D8               	btfss	status,2,c
  4723  001356  D004               	goto	i2l2505
  4724                           
  4725                           ; BSR set to: 0
  4726                           ;Run.c: 67: { g_Addr--; Key_FSM_Reset();}
  4727  001358  0647               	decf	_g_Addr,f,c
  4728                           
  4729                           ; BSR set to: 0
  4730  00135A  EC07  F00E         	call	_Key_FSM_Reset	;wreg free
  4731  00135E  D000               	goto	i2l2505
  4732  001360                     i2l2505:
  4733                           
  4734                           ;Run.c: 70: if (Local_Key_User.key_state[5-1] == KEY_short) RS485_Num ++ ;
  4735  001360  0100               	movlb	0	; () banked
  4736  001362  058D               	decf	(_Local_Key_User+17)& (0+255),w,b	;volatile
  4737  001364  A4D8               	btfss	status,2,c
  4738  001366  D002               	goto	i2l2509
  4739                           
  4740                           ; BSR set to: 0
  4741  001368  2A44               	incf	_RS485_Num,f,c
  4742  00136A  D000               	goto	i2l2509
  4743  00136C                     i2l2509:
  4744                           
  4745                           ; BSR set to: 0
  4746                           ;Run.c: 71: if (Local_Key_User.key_state[5-1] == KEY_hold) RS485_Num ++ ;
  4747  00136C  0E03               	movlw	3
  4748  00136E  0100               	movlb	0	; () banked
  4749  001370  198D               	xorwf	(_Local_Key_User+17)& (0+255),w,b	;volatile
  4750  001372  A4D8               	btfss	status,2,c
  4751  001374  D002               	goto	i2l2513
  4752                           
  4753                           ; BSR set to: 0
  4754  001376  2A44               	incf	_RS485_Num,f,c
  4755  001378  D000               	goto	i2l2513
  4756  00137A                     i2l2513:
  4757                           
  4758                           ; BSR set to: 0
  4759                           ;Run.c: 74: if (Local_Key_User.key_state[3-1] == KEY_short) RS485_Num -- ;
  4760  00137A  0100               	movlb	0	; () banked
  4761  00137C  058B               	decf	(_Local_Key_User+15)& (0+255),w,b	;volatile
  4762  00137E  A4D8               	btfss	status,2,c
  4763  001380  D002               	goto	i2l2517
  4764                           
  4765                           ; BSR set to: 0
  4766  001382  0644               	decf	_RS485_Num,f,c
  4767  001384  D000               	goto	i2l2517
  4768  001386                     i2l2517:
  4769                           
  4770                           ; BSR set to: 0
  4771                           ;Run.c: 75: if (Local_Key_User.key_state[3-1] == KEY_hold) RS485_Num -- ;
  4772  001386  0E03               	movlw	3
  4773  001388  0100               	movlb	0	; () banked
  4774  00138A  198B               	xorwf	(_Local_Key_User+15)& (0+255),w,b	;volatile
  4775  00138C  A4D8               	btfss	status,2,c
  4776  00138E  D002               	goto	i2l2521
  4777                           
  4778                           ; BSR set to: 0
  4779  001390  0644               	decf	_RS485_Num,f,c
  4780  001392  D000               	goto	i2l2521
  4781  001394                     i2l2521:
  4782                           
  4783                           ; BSR set to: 0
  4784                           ;Run.c: 77: if( RS485_Num > 250 ) RS485_Num = 10 - 1;
  4785  001394  0EFA               	movlw	250
  4786  001396  6444               	cpfsgt	_RS485_Num,c
  4787  001398  D002               	goto	i2l2525
  4788                           
  4789                           ; BSR set to: 0
  4790  00139A  0E09               	movlw	9
  4791  00139C  D005               	goto	L5
  4792  00139E                     i2l2525:
  4793                           
  4794                           ; BSR set to: 0
  4795                           ;Run.c: 78: else RS485_Num %= 10;
  4796  00139E  0E0A               	movlw	10
  4797  0013A0  6E01               	movwf	___lbmod@divisor,c
  4798  0013A2  5044               	movf	_RS485_Num,w,c
  4799  0013A4  ECA0  F00E         	call	___lbmod
  4800  0013A8                     L5:
  4801  0013A8  6E44               	movwf	_RS485_Num,c
  4802  0013AA  D000               	goto	i2l2527
  4803  0013AC                     i2l2527:
  4804                           
  4805                           ;Run.c: 81: if (Local_Key_User.key_state[4-1] == KEY_short) RS485_SendBuff[RS485_Num] ++
      +                           ;
  4806  0013AC  0100               	movlb	0	; () banked
  4807  0013AE  058C               	decf	(_Local_Key_User+16)& (0+255),w,b	;volatile
  4808  0013B0  A4D8               	btfss	status,2,c
  4809  0013B2  D00A               	goto	i2l2531
  4810                           
  4811                           ; BSR set to: 0
  4812  0013B4  5044               	movf	_RS485_Num,w,c
  4813  0013B6  0D01               	mullw	1
  4814  0013B8  0E8E               	movlw	low _RS485_SendBuff
  4815  0013BA  24F3               	addwf	prodl,w,c
  4816  0013BC  6ED9               	movwf	fsr2l,c
  4817  0013BE  0E00               	movlw	high _RS485_SendBuff
  4818  0013C0  20F4               	addwfc	prodh,w,c
  4819  0013C2  6EDA               	movwf	fsr2h,c
  4820  0013C4  2ADF               	incf	indf2,f,c
  4821  0013C6  D000               	goto	i2l2531
  4822  0013C8                     i2l2531:
  4823                           
  4824                           ; BSR set to: 0
  4825                           ;Run.c: 82: if (Local_Key_User.key_state[4-1] == KEY_hold) RS485_SendBuff[RS485_Num] ++ 
      +                          ;
  4826  0013C8  0E03               	movlw	3
  4827  0013CA  0100               	movlb	0	; () banked
  4828  0013CC  198C               	xorwf	(_Local_Key_User+16)& (0+255),w,b	;volatile
  4829  0013CE  A4D8               	btfss	status,2,c
  4830  0013D0  D00A               	goto	i2l2535
  4831                           
  4832                           ; BSR set to: 0
  4833  0013D2  5044               	movf	_RS485_Num,w,c
  4834  0013D4  0D01               	mullw	1
  4835  0013D6  0E8E               	movlw	low _RS485_SendBuff
  4836  0013D8  24F3               	addwf	prodl,w,c
  4837  0013DA  6ED9               	movwf	fsr2l,c
  4838  0013DC  0E00               	movlw	high _RS485_SendBuff
  4839  0013DE  20F4               	addwfc	prodh,w,c
  4840  0013E0  6EDA               	movwf	fsr2h,c
  4841  0013E2  2ADF               	incf	indf2,f,c
  4842  0013E4  D000               	goto	i2l2535
  4843  0013E6                     i2l2535:
  4844                           
  4845                           ; BSR set to: 0
  4846                           ;Run.c: 85: if (Local_Key_User.key_state[2-1] == KEY_short) RS485_SendBuff[RS485_Num] --
      +                           ;
  4847  0013E6  0100               	movlb	0	; () banked
  4848  0013E8  058A               	decf	(_Local_Key_User+14)& (0+255),w,b	;volatile
  4849  0013EA  A4D8               	btfss	status,2,c
  4850  0013EC  D00A               	goto	i2l2539
  4851                           
  4852                           ; BSR set to: 0
  4853  0013EE  5044               	movf	_RS485_Num,w,c
  4854  0013F0  0D01               	mullw	1
  4855  0013F2  0E8E               	movlw	low _RS485_SendBuff
  4856  0013F4  24F3               	addwf	prodl,w,c
  4857  0013F6  6ED9               	movwf	fsr2l,c
  4858  0013F8  0E00               	movlw	high _RS485_SendBuff
  4859  0013FA  20F4               	addwfc	prodh,w,c
  4860  0013FC  6EDA               	movwf	fsr2h,c
  4861  0013FE  06DF               	decf	indf2,f,c
  4862  001400  D000               	goto	i2l2539
  4863  001402                     i2l2539:
  4864                           
  4865                           ; BSR set to: 0
  4866                           ;Run.c: 86: if (Local_Key_User.key_state[2-1] == KEY_hold) RS485_SendBuff[RS485_Num] -- 
      +                          ;
  4867  001402  0E03               	movlw	3
  4868  001404  0100               	movlb	0	; () banked
  4869  001406  198A               	xorwf	(_Local_Key_User+14)& (0+255),w,b	;volatile
  4870  001408  A4D8               	btfss	status,2,c
  4871  00140A  D00A               	goto	i2l2543
  4872                           
  4873                           ; BSR set to: 0
  4874  00140C  5044               	movf	_RS485_Num,w,c
  4875  00140E  0D01               	mullw	1
  4876  001410  0E8E               	movlw	low _RS485_SendBuff
  4877  001412  24F3               	addwf	prodl,w,c
  4878  001414  6ED9               	movwf	fsr2l,c
  4879  001416  0E00               	movlw	high _RS485_SendBuff
  4880  001418  20F4               	addwfc	prodh,w,c
  4881  00141A  6EDA               	movwf	fsr2h,c
  4882  00141C  06DF               	decf	indf2,f,c
  4883  00141E  D000               	goto	i2l2543
  4884  001420                     i2l2543:
  4885                           
  4886                           ; BSR set to: 0
  4887                           ;Run.c: 91: if (Local_Key_User.key_state[1-1] == KEY_short) Handle_Switch.Usart_OneDate 
      +                          = 1 ;
  4888  001420  0100               	movlb	0	; () banked
  4889  001422  0589               	decf	(_Local_Key_User+13)& (0+255),w,b	;volatile
  4890  001424  A4D8               	btfss	status,2,c
  4891  001426  D003               	goto	i2l2547
  4892                           
  4893                           ; BSR set to: 0
  4894  001428  0E01               	movlw	1
  4895  00142A  6E35               	movwf	_Handle_Switch+2,c
  4896  00142C  D000               	goto	i2l2547
  4897  00142E                     i2l2547:
  4898                           
  4899                           ; BSR set to: 0
  4900                           ;Run.c: 93: if( g_Addr > 6 ) g_Addr = 4;
  4901  00142E  0E06               	movlw	6
  4902  001430  6447               	cpfsgt	_g_Addr,c
  4903  001432  D003               	goto	i2l2551
  4904                           
  4905                           ; BSR set to: 0
  4906  001434  0E04               	movlw	4
  4907  001436  6E47               	movwf	_g_Addr,c
  4908  001438  D000               	goto	i2l2551
  4909  00143A                     i2l2551:
  4910                           
  4911                           ; BSR set to: 0
  4912                           ;Run.c: 94: if( g_Addr < 4 ) g_Addr = 6;
  4913  00143A  0E04               	movlw	4
  4914  00143C  6047               	cpfslt	_g_Addr,c
  4915  00143E  D003               	goto	i2l2555
  4916                           
  4917                           ; BSR set to: 0
  4918  001440  0E06               	movlw	6
  4919  001442  6E47               	movwf	_g_Addr,c
  4920  001444  D000               	goto	i2l2555
  4921  001446                     i2l2555:
  4922                           
  4923                           ; BSR set to: 0
  4924                           ;Run.c: 96: Key_FSM_Reset();
  4925  001446  EC07  F00E         	call	_Key_FSM_Reset	;wreg free
  4926  00144A  0012               	return		;funcret
  4927  00144C                     __end_of_Manage_Message:
  4928                           	opt stack 0
  4929                           pclatu	equ	0xFFB
  4930                           pclath	equ	0xFFA
  4931                           tblptru	equ	0xFF8
  4932                           tblptrh	equ	0xFF7
  4933                           tblptrl	equ	0xFF6
  4934                           tablat	equ	0xFF5
  4935                           prodh	equ	0xFF4
  4936                           prodl	equ	0xFF3
  4937                           intcon	equ	0xFF2
  4938                           postinc0	equ	0xFEE
  4939                           fsr0h	equ	0xFEA
  4940                           fsr0l	equ	0xFE9
  4941                           wreg	equ	0xFE8
  4942                           indf1	equ	0xFE7
  4943                           fsr1h	equ	0xFE2
  4944                           fsr1l	equ	0xFE1
  4945                           indf2	equ	0xFDF
  4946                           fsr2h	equ	0xFDA
  4947                           fsr2l	equ	0xFD9
  4948                           status	equ	0xFD8
  4949                           
  4950 ;; *************** function ___lbmod *****************
  4951 ;; Defined at:
  4952 ;;		line 4 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbmod.c"
  4953 ;; Parameters:    Size  Location     Type
  4954 ;;  dividend        1    wreg     unsigned char 
  4955 ;;  divisor         1    0[COMRAM] unsigned char 
  4956 ;; Auto vars:     Size  Location     Type
  4957 ;;  dividend        1    1[COMRAM] unsigned char 
  4958 ;;  rem             1    3[COMRAM] unsigned char 
  4959 ;;  counter         1    2[COMRAM] unsigned char 
  4960 ;; Return value:  Size  Location     Type
  4961 ;;                  1    wreg      unsigned char 
  4962 ;; Registers used:
  4963 ;;		wreg, status,2, status,0
  4964 ;; Tracked objects:
  4965 ;;		On entry : 0/0
  4966 ;;		On exit  : 0/0
  4967 ;;		Unchanged: 0/0
  4968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4969 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4970 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4972 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4973 ;;Total ram usage:        4 bytes
  4974 ;; Hardware stack levels used:    1
  4975 ;; This function calls:
  4976 ;;		Nothing
  4977 ;; This function is called by:
  4978 ;;		_Manage_Message
  4979 ;; This function uses a non-reentrant model
  4980 ;;
  4981                           
  4982                           	psect	text36
  4983  001D40                     __ptext36:
  4984                           	opt stack 0
  4985  001D40                     ___lbmod:
  4986                           	opt stack 23
  4987                           
  4988                           ;incstack = 0
  4989                           ;___lbmod@dividend stored from wreg
  4990  001D40  6E02               	movwf	___lbmod@dividend,c
  4991  001D42  0E08               	movlw	8
  4992  001D44  6E03               	movwf	___lbmod@counter,c
  4993  001D46  0E00               	movlw	0
  4994  001D48  6E04               	movwf	___lbmod@rem,c
  4995  001D4A  D000               	goto	i2l2345
  4996  001D4C                     i2l2345:
  4997  001D4C  90D8               	bcf	status,0,c
  4998  001D4E  3402               	rlcf	___lbmod@dividend,w,c
  4999  001D50  3404               	rlcf	___lbmod@rem,w,c
  5000  001D52  6E04               	movwf	___lbmod@rem,c
  5001  001D54  90D8               	bcf	status,0,c
  5002  001D56  3602               	rlcf	___lbmod@dividend,f,c
  5003  001D58  5001               	movf	___lbmod@divisor,w,c
  5004  001D5A  5C04               	subwf	___lbmod@rem,w,c
  5005  001D5C  A0D8               	btfss	status,0,c
  5006  001D5E  D003               	goto	i2l2353
  5007  001D60  5001               	movf	___lbmod@divisor,w,c
  5008  001D62  5E04               	subwf	___lbmod@rem,f,c
  5009  001D64  D000               	goto	i2l2353
  5010  001D66                     i2l2353:
  5011  001D66  2E03               	decfsz	___lbmod@counter,f,c
  5012  001D68  D7F1               	goto	i2l2345
  5013  001D6A  D000               	goto	i2l2355
  5014  001D6C                     i2l2355:
  5015  001D6C  5004               	movf	___lbmod@rem,w,c
  5016  001D6E  0012               	return	
  5017  001D70  0012               	return		;funcret
  5018  001D72                     __end_of___lbmod:
  5019                           	opt stack 0
  5020                           pclatu	equ	0xFFB
  5021                           pclath	equ	0xFFA
  5022                           tblptru	equ	0xFF8
  5023                           tblptrh	equ	0xFF7
  5024                           tblptrl	equ	0xFF6
  5025                           tablat	equ	0xFF5
  5026                           prodh	equ	0xFF4
  5027                           prodl	equ	0xFF3
  5028                           intcon	equ	0xFF2
  5029                           postinc0	equ	0xFEE
  5030                           fsr0h	equ	0xFEA
  5031                           fsr0l	equ	0xFE9
  5032                           wreg	equ	0xFE8
  5033                           indf1	equ	0xFE7
  5034                           fsr1h	equ	0xFE2
  5035                           fsr1l	equ	0xFE1
  5036                           indf2	equ	0xFDF
  5037                           fsr2h	equ	0xFDA
  5038                           fsr2l	equ	0xFD9
  5039                           status	equ	0xFD8
  5040                           
  5041 ;; *************** function _Key_FSM_Reset *****************
  5042 ;; Defined at:
  5043 ;;		line 148 in file "_01_USER/Key.c"
  5044 ;; Parameters:    Size  Location     Type
  5045 ;;		None
  5046 ;; Auto vars:     Size  Location     Type
  5047 ;;  t               1    0[COMRAM] unsigned char 
  5048 ;; Return value:  Size  Location     Type
  5049 ;;		None               void
  5050 ;; Registers used:
  5051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5052 ;; Tracked objects:
  5053 ;;		On entry : 0/0
  5054 ;;		On exit  : 0/0
  5055 ;;		Unchanged: 0/0
  5056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5058 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5060 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5061 ;;Total ram usage:        1 bytes
  5062 ;; Hardware stack levels used:    1
  5063 ;; This function calls:
  5064 ;;		Nothing
  5065 ;; This function is called by:
  5066 ;;		_Manage_Message
  5067 ;; This function uses a non-reentrant model
  5068 ;;
  5069                           
  5070                           	psect	text37
  5071  001C0E                     __ptext37:
  5072                           	opt stack 0
  5073  001C0E                     _Key_FSM_Reset:
  5074                           	opt stack 23
  5075                           
  5076                           ;Key.c: 150: unsigned char t;
  5077                           ;Key.c: 151: Local_Key_User.key_BUS = 0x00;
  5078                           
  5079                           ;incstack = 0
  5080  001C0E  0E00               	movlw	0
  5081  001C10  0100               	movlb	0	; () banked
  5082  001C12  6F7C               	movwf	_Local_Key_User& (0+255),b	;volatile
  5083                           
  5084                           ;Key.c: 152: Local_Key_User.key_group = KEY_default;
  5085  001C14  0E00               	movlw	0
  5086  001C16  0100               	movlb	0	; () banked
  5087  001C18  6F7D               	movwf	(_Local_Key_User+1)& (0+255),b	;volatile
  5088                           
  5089                           ;Key.c: 153: t=4;
  5090  001C1A  0E04               	movlw	4
  5091  001C1C  6E01               	movwf	Key_FSM_Reset@t,c
  5092                           
  5093                           ;Key.c: 154: while(t--) Local_Key_User.key_count[t] = 0,
  5094  001C1E  D017               	goto	i2l2223
  5095  001C20                     i2l2221:
  5096                           
  5097                           ;Key.c: 155: Local_Key_User.key_state[t] = KEY_default;
  5098  001C20  5001               	movf	Key_FSM_Reset@t,w,c
  5099  001C22  0D02               	mullw	2
  5100  001C24  0E7F               	movlw	low (_Local_Key_User+3)
  5101  001C26  24F3               	addwf	prodl,w,c
  5102  001C28  6ED9               	movwf	fsr2l,c
  5103  001C2A  0E00               	movlw	high (_Local_Key_User+3)
  5104  001C2C  20F4               	addwfc	prodh,w,c
  5105  001C2E  6EDA               	movwf	fsr2h,c
  5106  001C30  0E00               	movlw	0
  5107  001C32  6EDE               	movwf	postinc2,c
  5108  001C34  0E00               	movlw	0
  5109  001C36  6EDD               	movwf	postdec2,c
  5110  001C38  5001               	movf	Key_FSM_Reset@t,w,c
  5111  001C3A  0D01               	mullw	1
  5112  001C3C  0E89               	movlw	low (_Local_Key_User+13)
  5113  001C3E  24F3               	addwf	prodl,w,c
  5114  001C40  6ED9               	movwf	fsr2l,c
  5115  001C42  0E00               	movlw	high (_Local_Key_User+13)
  5116  001C44  20F4               	addwfc	prodh,w,c
  5117  001C46  6EDA               	movwf	fsr2h,c
  5118  001C48  0E00               	movlw	0
  5119  001C4A  6EDF               	movwf	indf2,c
  5120  001C4C  D000               	goto	i2l2223
  5121  001C4E                     i2l2223:
  5122  001C4E  0601               	decf	Key_FSM_Reset@t,f,c
  5123  001C50  2801               	incf	Key_FSM_Reset@t,w,c
  5124  001C52  A4D8               	btfss	status,2,c
  5125  001C54  D7E5               	goto	i2l2221
  5126  001C56  0012               	return		;funcret
  5127  001C58                     __end_of_Key_FSM_Reset:
  5128                           	opt stack 0
  5129                           pclatu	equ	0xFFB
  5130                           pclath	equ	0xFFA
  5131                           tblptru	equ	0xFF8
  5132                           tblptrh	equ	0xFF7
  5133                           tblptrl	equ	0xFF6
  5134                           tablat	equ	0xFF5
  5135                           prodh	equ	0xFF4
  5136                           prodl	equ	0xFF3
  5137                           intcon	equ	0xFF2
  5138                           postinc0	equ	0xFEE
  5139                           fsr0h	equ	0xFEA
  5140                           fsr0l	equ	0xFE9
  5141                           wreg	equ	0xFE8
  5142                           indf1	equ	0xFE7
  5143                           fsr1h	equ	0xFE2
  5144                           fsr1l	equ	0xFE1
  5145                           indf2	equ	0xFDF
  5146                           postinc2	equ	0xFDE
  5147                           postdec2	equ	0xFDD
  5148                           fsr2h	equ	0xFDA
  5149                           fsr2l	equ	0xFD9
  5150                           status	equ	0xFD8
  5151                           
  5152 ;; *************** function _Key_FSM_Read *****************
  5153 ;; Defined at:
  5154 ;;		line 98 in file "_01_USER/Key.c"
  5155 ;; Parameters:    Size  Location     Type
  5156 ;;		None
  5157 ;; Auto vars:     Size  Location     Type
  5158 ;;  key_num         1    5[COMRAM] unsigned char 
  5159 ;;  key_num_mate    1    4[COMRAM] unsigned char 
  5160 ;; Return value:  Size  Location     Type
  5161 ;;		None               void
  5162 ;; Registers used:
  5163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5164 ;; Tracked objects:
  5165 ;;		On entry : 0/0
  5166 ;;		On exit  : 0/0
  5167 ;;		Unchanged: 0/0
  5168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5170 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5171 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5172 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5173 ;;Total ram usage:        6 bytes
  5174 ;; Hardware stack levels used:    1
  5175 ;; This function calls:
  5176 ;;		Nothing
  5177 ;; This function is called by:
  5178 ;;		_Manage_Message
  5179 ;; This function uses a non-reentrant model
  5180 ;;
  5181                           
  5182                           	psect	text38
  5183  001012                     __ptext38:
  5184                           	opt stack 0
  5185  001012                     _Key_FSM_Read:
  5186                           	opt stack 23
  5187                           
  5188                           ;Key.c: 100: unsigned char key_num = 5,key_num_mate;
  5189                           
  5190                           ;incstack = 0
  5191  001012  0E05               	movlw	5
  5192  001014  6E06               	movwf	Key_FSM_Read@key_num,c
  5193                           
  5194                           ;Key.c: 103: while(key_num--)
  5195  001016  D072               	goto	i2l2191
  5196  001018                     i2l2173:
  5197                           
  5198                           ;Key.c: 104: {
  5199                           ;Key.c: 106: if( Local_Key_FSM.key_BUS == 0x00 )
  5200  001018  0100               	movlb	0	; () banked
  5201  00101A  516A               	movf	_Local_Key_FSM& (0+255),w,b	;volatile
  5202  00101C  A4D8               	btfss	status,2,c
  5203  00101E  D04A               	goto	i2l2185
  5204                           
  5205                           ; BSR set to: 0
  5206                           ;Key.c: 107: {
  5207                           ;Key.c: 108: if( Local_Key_FSM.key_count[key_num] > 5 )
  5208  001020  5006               	movf	Key_FSM_Read@key_num,w,c
  5209  001022  0D02               	mullw	2
  5210  001024  0E6D               	movlw	low (_Local_Key_FSM+3)
  5211  001026  24F3               	addwf	prodl,w,c
  5212  001028  6ED9               	movwf	fsr2l,c
  5213  00102A  0E00               	movlw	high (_Local_Key_FSM+3)
  5214  00102C  20F4               	addwfc	prodh,w,c
  5215  00102E  6EDA               	movwf	fsr2h,c
  5216  001030  0E01               	movlw	1
  5217  001032  50DB               	movf	plusw2,w,c
  5218  001034  E104               	bnz	i2u163_40
  5219  001036  0E06               	movlw	6
  5220  001038  5CDE               	subwf	postinc2,w,c
  5221  00103A  A0D8               	btfss	status,0,c
  5222  00103C  D024               	goto	i2l2183
  5223  00103E                     i2u163_40:
  5224                           
  5225                           ; BSR set to: 0
  5226                           ;Key.c: 109: {
  5227                           ;Key.c: 110: if( Local_Key_FSM.key_count[key_num] > 60 )
  5228  00103E  5006               	movf	Key_FSM_Read@key_num,w,c
  5229  001040  0D02               	mullw	2
  5230  001042  0E6D               	movlw	low (_Local_Key_FSM+3)
  5231  001044  24F3               	addwf	prodl,w,c
  5232  001046  6ED9               	movwf	fsr2l,c
  5233  001048  0E00               	movlw	high (_Local_Key_FSM+3)
  5234  00104A  20F4               	addwfc	prodh,w,c
  5235  00104C  6EDA               	movwf	fsr2h,c
  5236  00104E  0E01               	movlw	1
  5237  001050  50DB               	movf	plusw2,w,c
  5238  001052  E104               	bnz	i2u164_40
  5239  001054  0E3D               	movlw	61
  5240  001056  5CDE               	subwf	postinc2,w,c
  5241  001058  A0D8               	btfss	status,0,c
  5242  00105A  D00A               	goto	i2l2181
  5243  00105C                     i2u164_40:
  5244                           
  5245                           ; BSR set to: 0
  5246                           ;Key.c: 111: Local_Key_User.key_state[key_num] = KEY_long;
  5247  00105C  5006               	movf	Key_FSM_Read@key_num,w,c
  5248  00105E  0D01               	mullw	1
  5249  001060  0E89               	movlw	low (_Local_Key_User+13)
  5250  001062  24F3               	addwf	prodl,w,c
  5251  001064  6ED9               	movwf	fsr2l,c
  5252  001066  0E00               	movlw	high (_Local_Key_User+13)
  5253  001068  20F4               	addwfc	prodh,w,c
  5254  00106A  6EDA               	movwf	fsr2h,c
  5255  00106C  0E05               	movlw	5
  5256  00106E  D014               	goto	L6
  5257  001070                     i2l2181:
  5258                           
  5259                           ; BSR set to: 0
  5260                           ;Key.c: 112: else Local_Key_User.key_state[key_num] = KEY_short;
  5261  001070  5006               	movf	Key_FSM_Read@key_num,w,c
  5262  001072  0D01               	mullw	1
  5263  001074  0E89               	movlw	low (_Local_Key_User+13)
  5264  001076  24F3               	addwf	prodl,w,c
  5265  001078  6ED9               	movwf	fsr2l,c
  5266  00107A  0E00               	movlw	high (_Local_Key_User+13)
  5267  00107C  20F4               	addwfc	prodh,w,c
  5268  00107E  6EDA               	movwf	fsr2h,c
  5269  001080  0E01               	movlw	1
  5270  001082  6EDF               	movwf	indf2,c
  5271                           
  5272                           ; BSR set to: 0
  5273                           ;Key.c: 113: }
  5274  001084  D00A               	goto	i2l115
  5275  001086                     i2l2183:
  5276                           
  5277                           ; BSR set to: 0
  5278                           ;Key.c: 114: else Local_Key_User.key_state[key_num] = KEY_default;
  5279  001086  5006               	movf	Key_FSM_Read@key_num,w,c
  5280  001088  0D01               	mullw	1
  5281  00108A  0E89               	movlw	low (_Local_Key_User+13)
  5282  00108C  24F3               	addwf	prodl,w,c
  5283  00108E  6ED9               	movwf	fsr2l,c
  5284  001090  0E00               	movlw	high (_Local_Key_User+13)
  5285  001092  20F4               	addwfc	prodh,w,c
  5286  001094  6EDA               	movwf	fsr2h,c
  5287  001096  0E00               	movlw	0
  5288  001098                     L6:
  5289  001098  6EDF               	movwf	indf2,c
  5290  00109A                     i2l115:
  5291                           
  5292                           ; BSR set to: 0
  5293                           ;Key.c: 115: Local_Key_FSM.key_count[key_num] = 0;
  5294  00109A  5006               	movf	Key_FSM_Read@key_num,w,c
  5295  00109C  0D02               	mullw	2
  5296  00109E  0E6D               	movlw	low (_Local_Key_FSM+3)
  5297  0010A0  24F3               	addwf	prodl,w,c
  5298  0010A2  6ED9               	movwf	fsr2l,c
  5299  0010A4  0E00               	movlw	high (_Local_Key_FSM+3)
  5300  0010A6  20F4               	addwfc	prodh,w,c
  5301  0010A8  6EDA               	movwf	fsr2h,c
  5302  0010AA  0E00               	movlw	0
  5303  0010AC  6EDE               	movwf	postinc2,c
  5304  0010AE  0E00               	movlw	0
  5305  0010B0  6EDD               	movwf	postdec2,c
  5306                           
  5307                           ;Key.c: 116: }
  5308  0010B2  D024               	goto	i2l2191
  5309  0010B4                     i2l2185:
  5310                           
  5311                           ; BSR set to: 0
  5312                           ;Key.c: 118: else if( Local_Key_FSM.key_count[key_num] > 60 )
  5313  0010B4  5006               	movf	Key_FSM_Read@key_num,w,c
  5314  0010B6  0D02               	mullw	2
  5315  0010B8  0E6D               	movlw	low (_Local_Key_FSM+3)
  5316  0010BA  24F3               	addwf	prodl,w,c
  5317  0010BC  6ED9               	movwf	fsr2l,c
  5318  0010BE  0E00               	movlw	high (_Local_Key_FSM+3)
  5319  0010C0  20F4               	addwfc	prodh,w,c
  5320  0010C2  6EDA               	movwf	fsr2h,c
  5321  0010C4  0E01               	movlw	1
  5322  0010C6  50DB               	movf	plusw2,w,c
  5323  0010C8  E104               	bnz	i2u165_40
  5324  0010CA  0E3D               	movlw	61
  5325  0010CC  5CDE               	subwf	postinc2,w,c
  5326  0010CE  A0D8               	btfss	status,0,c
  5327  0010D0  D00A               	goto	i2l2189
  5328  0010D2                     i2u165_40:
  5329                           
  5330                           ; BSR set to: 0
  5331                           ;Key.c: 119: Local_Key_User.key_state[key_num] = KEY_hold;
  5332  0010D2  5006               	movf	Key_FSM_Read@key_num,w,c
  5333  0010D4  0D01               	mullw	1
  5334  0010D6  0E89               	movlw	low (_Local_Key_User+13)
  5335  0010D8  24F3               	addwf	prodl,w,c
  5336  0010DA  6ED9               	movwf	fsr2l,c
  5337  0010DC  0E00               	movlw	high (_Local_Key_User+13)
  5338  0010DE  20F4               	addwfc	prodh,w,c
  5339  0010E0  6EDA               	movwf	fsr2h,c
  5340  0010E2  0E03               	movlw	3
  5341  0010E4  D009               	goto	L7
  5342  0010E6                     i2l2189:
  5343                           
  5344                           ; BSR set to: 0
  5345                           ;Key.c: 122: else Local_Key_User.key_state[key_num] = KEY_busy;
  5346  0010E6  5006               	movf	Key_FSM_Read@key_num,w,c
  5347  0010E8  0D01               	mullw	1
  5348  0010EA  0E89               	movlw	low (_Local_Key_User+13)
  5349  0010EC  24F3               	addwf	prodl,w,c
  5350  0010EE  6ED9               	movwf	fsr2l,c
  5351  0010F0  0E00               	movlw	high (_Local_Key_User+13)
  5352  0010F2  20F4               	addwfc	prodh,w,c
  5353  0010F4  6EDA               	movwf	fsr2h,c
  5354  0010F6  0E04               	movlw	4
  5355  0010F8                     L7:
  5356  0010F8  6EDF               	movwf	indf2,c
  5357                           
  5358                           ; BSR set to: 0
  5359                           
  5360                           ; BSR set to: 0
  5361  0010FA  D000               	goto	i2l2191
  5362  0010FC                     i2l2191:
  5363  0010FC  0606               	decf	Key_FSM_Read@key_num,f,c
  5364  0010FE  2806               	incf	Key_FSM_Read@key_num,w,c
  5365  001100  A4D8               	btfss	status,2,c
  5366  001102  D78A               	goto	i2l2173
  5367                           
  5368                           ;Key.c: 123: }
  5369                           ;Key.c: 127: for( key_num = 0;key_num < 5 - 1; key_num ++)
  5370  001104  0E00               	movlw	0
  5371  001106  6E06               	movwf	Key_FSM_Read@key_num,c
  5372  001108  0E03               	movlw	3
  5373  00110A  6406               	cpfsgt	Key_FSM_Read@key_num,c
  5374  00110C  D002               	goto	i2l2199
  5375  00110E  0012               	return	
  5376  001110  0012               	return	
  5377  001112                     i2l2199:
  5378                           
  5379                           ;Key.c: 128: for( key_num_mate = key_num+1;key_num_mate < 5 ; key_num_mate ++)
  5380  001112  2806               	incf	Key_FSM_Read@key_num,w,c
  5381  001114  6E05               	movwf	Key_FSM_Read@key_num_mate,c
  5382  001116  0E04               	movlw	4
  5383  001118  6405               	cpfsgt	Key_FSM_Read@key_num_mate,c
  5384  00111A  D001               	goto	i2l2203
  5385  00111C  D045               	goto	i2l2215
  5386  00111E                     i2l2203:
  5387                           
  5388                           ;Key.c: 129: if( Local_Key_User.key_state[key_num] == Local_Key_User.key_state[key_num_m
      +                          ate] )
  5389  00111E  5005               	movf	Key_FSM_Read@key_num_mate,w,c
  5390  001120  0D01               	mullw	1
  5391  001122  0E89               	movlw	low (_Local_Key_User+13)
  5392  001124  24F3               	addwf	prodl,w,c
  5393  001126  6ED9               	movwf	fsr2l,c
  5394  001128  0E00               	movlw	high (_Local_Key_User+13)
  5395  00112A  20F4               	addwfc	prodh,w,c
  5396  00112C  6EDA               	movwf	fsr2h,c
  5397  00112E  5006               	movf	Key_FSM_Read@key_num,w,c
  5398  001130  0D01               	mullw	1
  5399  001132  0E89               	movlw	low (_Local_Key_User+13)
  5400  001134  24F3               	addwf	prodl,w,c
  5401  001136  6EE1               	movwf	fsr1l,c
  5402  001138  0E00               	movlw	high (_Local_Key_User+13)
  5403  00113A  20F4               	addwfc	prodh,w,c
  5404  00113C  6EE2               	movwf	fsr1h,c
  5405  00113E  50DE               	movf	postinc2,w,c
  5406  001140  18E6               	xorwf	postinc1,w,c
  5407  001142  A4D8               	btfss	status,2,c
  5408  001144  D02F               	goto	i2l2211
  5409                           
  5410                           ;Key.c: 130: if(Local_Key_User.key_state[key_num] != KEY_default)
  5411  001146  5006               	movf	Key_FSM_Read@key_num,w,c
  5412  001148  0D01               	mullw	1
  5413  00114A  0E89               	movlw	low (_Local_Key_User+13)
  5414  00114C  24F3               	addwf	prodl,w,c
  5415  00114E  6ED9               	movwf	fsr2l,c
  5416  001150  0E00               	movlw	high (_Local_Key_User+13)
  5417  001152  20F4               	addwfc	prodh,w,c
  5418  001154  6EDA               	movwf	fsr2h,c
  5419  001156  50DF               	movf	indf2,w,c
  5420  001158  B4D8               	btfsc	status,2,c
  5421  00115A  D024               	goto	i2l2211
  5422                           
  5423                           ;Key.c: 131: {
  5424                           ;Key.c: 132: Local_Key_User.key_group = (0x01 << key_num)|(0x01 << key_num_mate);
  5425  00115C  C005  F001         	movff	Key_FSM_Read@key_num_mate,??_Key_FSM_Read
  5426  001160  0E01               	movlw	1
  5427  001162  6E02               	movwf	(??_Key_FSM_Read+1)& (0+255),c
  5428  001164  2A01               	incf	??_Key_FSM_Read,f,c
  5429  001166  D002               	goto	i2u171_44
  5430  001168                     i2u171_45:
  5431  001168  90D8               	bcf	status,0,c
  5432  00116A  3602               	rlcf	??_Key_FSM_Read+1,f,c
  5433  00116C                     i2u171_44:
  5434  00116C  2E01               	decfsz	??_Key_FSM_Read,f,c
  5435  00116E  D7FC               	goto	i2u171_45
  5436  001170  C006  F003         	movff	Key_FSM_Read@key_num,??_Key_FSM_Read+2
  5437  001174  0E01               	movlw	1
  5438  001176  6E04               	movwf	(??_Key_FSM_Read+3)& (0+255),c
  5439  001178  2A03               	incf	??_Key_FSM_Read+2,f,c
  5440  00117A  D002               	goto	i2u172_44
  5441  00117C                     i2u172_45:
  5442  00117C  90D8               	bcf	status,0,c
  5443  00117E  3604               	rlcf	??_Key_FSM_Read+3,f,c
  5444  001180                     i2u172_44:
  5445  001180  2E03               	decfsz	??_Key_FSM_Read+2,f,c
  5446  001182  D7FC               	goto	i2u172_45
  5447  001184  5004               	movf	??_Key_FSM_Read+3,w,c
  5448  001186  1002               	iorwf	??_Key_FSM_Read+1,w,c
  5449  001188  0100               	movlb	0	; () banked
  5450  00118A  6F7D               	movwf	(_Local_Key_User+1)& (0+255),b	;volatile
  5451                           
  5452                           ; BSR set to: 0
  5453                           ;Key.c: 133: Local_Key_User.key_group_state = Local_Key_User.key_state[key_num];
  5454  00118C  5006               	movf	Key_FSM_Read@key_num,w,c
  5455  00118E  0D01               	mullw	1
  5456  001190  0E89               	movlw	low (_Local_Key_User+13)
  5457  001192  24F3               	addwf	prodl,w,c
  5458  001194  6ED9               	movwf	fsr2l,c
  5459  001196  0E00               	movlw	high (_Local_Key_User+13)
  5460  001198  20F4               	addwfc	prodh,w,c
  5461  00119A  6EDA               	movwf	fsr2h,c
  5462  00119C  50DF               	movf	indf2,w,c
  5463  00119E  0100               	movlb	0	; () banked
  5464  0011A0  6F7E               	movwf	(_Local_Key_User+2)& (0+255),b	;volatile
  5465                           
  5466                           ; BSR set to: 0
  5467  0011A2  D000               	goto	i2l2211
  5468  0011A4                     i2l2211:
  5469  0011A4  2A05               	incf	Key_FSM_Read@key_num_mate,f,c
  5470  0011A6  D7B7               	goto	L8
  5471  0011A8                     i2l2215:
  5472  0011A8  2A06               	incf	Key_FSM_Read@key_num,f,c
  5473  0011AA  0E03               	movlw	3
  5474  0011AC  6406               	cpfsgt	Key_FSM_Read@key_num,c
  5475  0011AE  D7B1               	goto	i2l2199
  5476  0011B0  0012               	return	
  5477  0011B2  0012               	return		;funcret
  5478  0011B4                     __end_of_Key_FSM_Read:
  5479                           	opt stack 0
  5480                           pclatu	equ	0xFFB
  5481                           pclath	equ	0xFFA
  5482                           tblptru	equ	0xFF8
  5483                           tblptrh	equ	0xFF7
  5484                           tblptrl	equ	0xFF6
  5485                           tablat	equ	0xFF5
  5486                           prodh	equ	0xFF4
  5487                           prodl	equ	0xFF3
  5488                           intcon	equ	0xFF2
  5489                           postinc0	equ	0xFEE
  5490                           fsr0h	equ	0xFEA
  5491                           fsr0l	equ	0xFE9
  5492                           wreg	equ	0xFE8
  5493                           indf1	equ	0xFE7
  5494                           postinc1	equ	0xFE6
  5495                           fsr1h	equ	0xFE2
  5496                           fsr1l	equ	0xFE1
  5497                           indf2	equ	0xFDF
  5498                           postinc2	equ	0xFDE
  5499                           postdec2	equ	0xFDD
  5500                           plusw2	equ	0xFDB
  5501                           fsr2h	equ	0xFDA
  5502                           fsr2l	equ	0xFD9
  5503                           status	equ	0xFD8
  5504                           
  5505 ;; *************** function _Key_FSM_Scan *****************
  5506 ;; Defined at:
  5507 ;;		line 77 in file "_01_USER/Key.c"
  5508 ;; Parameters:    Size  Location     Type
  5509 ;;		None
  5510 ;; Auto vars:     Size  Location     Type
  5511 ;;		None
  5512 ;; Return value:  Size  Location     Type
  5513 ;;		None               void
  5514 ;; Registers used:
  5515 ;;		wreg, status,2, status,0, cstack
  5516 ;; Tracked objects:
  5517 ;;		On entry : 0/0
  5518 ;;		On exit  : 0/0
  5519 ;;		Unchanged: 0/0
  5520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5525 ;;Total ram usage:        0 bytes
  5526 ;; Hardware stack levels used:    1
  5527 ;; Hardware stack levels required when called:    1
  5528 ;; This function calls:
  5529 ;;		_Key_Scan
  5530 ;; This function is called by:
  5531 ;;		_Sys_Cyc
  5532 ;; This function uses a non-reentrant model
  5533 ;;
  5534                           
  5535                           	psect	text39
  5536  001BC2                     __ptext39:
  5537                           	opt stack 0
  5538  001BC2                     _Key_FSM_Scan:
  5539                           	opt stack 23
  5540                           
  5541                           ;Key.c: 79: Key_Scan();
  5542                           
  5543                           ;incstack = 0
  5544  001BC2  EC4B  F00E         	call	_Key_Scan	;wreg free
  5545                           
  5546                           ;Key.c: 80: if( Local_Key_FSM.key_BUS & 0x01 ) Local_Key_FSM.key_count[0]++;
  5547  001BC6  0100               	movlb	0	; () banked
  5548  001BC8  A16A               	btfss	_Local_Key_FSM& (0+255),0,b	;volatile
  5549  001BCA  D004               	goto	i2l2461
  5550                           
  5551                           ; BSR set to: 0
  5552  001BCC  0100               	movlb	0	; () banked
  5553  001BCE  4B6D               	infsnz	(_Local_Key_FSM+3)& (0+255),f,b	;volatile
  5554  001BD0  2B6E               	incf	(_Local_Key_FSM+4)& (0+255),f,b	;volatile
  5555  001BD2  D000               	goto	i2l2461
  5556  001BD4                     i2l2461:
  5557                           
  5558                           ; BSR set to: 0
  5559                           ;Key.c: 81: if( Local_Key_FSM.key_BUS & 0x02 ) Local_Key_FSM.key_count[1]++;
  5560  001BD4  0100               	movlb	0	; () banked
  5561  001BD6  A36A               	btfss	_Local_Key_FSM& (0+255),1,b	;volatile
  5562  001BD8  D004               	goto	i2l2465
  5563                           
  5564                           ; BSR set to: 0
  5565  001BDA  0100               	movlb	0	; () banked
  5566  001BDC  4B6F               	infsnz	(_Local_Key_FSM+5)& (0+255),f,b	;volatile
  5567  001BDE  2B70               	incf	(_Local_Key_FSM+6)& (0+255),f,b	;volatile
  5568  001BE0  D000               	goto	i2l2465
  5569  001BE2                     i2l2465:
  5570                           
  5571                           ; BSR set to: 0
  5572                           ;Key.c: 82: if( Local_Key_FSM.key_BUS & 0x04 ) Local_Key_FSM.key_count[2]++;
  5573  001BE2  0100               	movlb	0	; () banked
  5574  001BE4  A56A               	btfss	_Local_Key_FSM& (0+255),2,b	;volatile
  5575  001BE6  D004               	goto	i2l2469
  5576                           
  5577                           ; BSR set to: 0
  5578  001BE8  0100               	movlb	0	; () banked
  5579  001BEA  4B71               	infsnz	(_Local_Key_FSM+7)& (0+255),f,b	;volatile
  5580  001BEC  2B72               	incf	(_Local_Key_FSM+8)& (0+255),f,b	;volatile
  5581  001BEE  D000               	goto	i2l2469
  5582  001BF0                     i2l2469:
  5583                           
  5584                           ; BSR set to: 0
  5585                           ;Key.c: 83: if( Local_Key_FSM.key_BUS & 0x08 ) Local_Key_FSM.key_count[3]++;
  5586  001BF0  0100               	movlb	0	; () banked
  5587  001BF2  A76A               	btfss	_Local_Key_FSM& (0+255),3,b	;volatile
  5588  001BF4  D004               	goto	i2l2473
  5589                           
  5590                           ; BSR set to: 0
  5591  001BF6  0100               	movlb	0	; () banked
  5592  001BF8  4B73               	infsnz	(_Local_Key_FSM+9)& (0+255),f,b	;volatile
  5593  001BFA  2B74               	incf	(_Local_Key_FSM+10)& (0+255),f,b	;volatile
  5594  001BFC  D000               	goto	i2l2473
  5595  001BFE                     i2l2473:
  5596                           
  5597                           ; BSR set to: 0
  5598                           ;Key.c: 84: if( Local_Key_FSM.key_BUS & 0x10 ) Local_Key_FSM.key_count[4]++;
  5599  001BFE  0100               	movlb	0	; () banked
  5600  001C00  A96A               	btfss	_Local_Key_FSM& (0+255),4,b	;volatile
  5601  001C02  0012               	return	
  5602                           
  5603                           ; BSR set to: 0
  5604  001C04  0100               	movlb	0	; () banked
  5605  001C06  4B75               	infsnz	(_Local_Key_FSM+11)& (0+255),f,b	;volatile
  5606  001C08  2B76               	incf	(_Local_Key_FSM+12)& (0+255),f,b	;volatile
  5607  001C0A  0012               	return	
  5608                           
  5609                           ; BSR set to: 0
  5610                           
  5611                           ; BSR set to: 0
  5612  001C0C  0012               	return		;funcret
  5613  001C0E                     __end_of_Key_FSM_Scan:
  5614                           	opt stack 0
  5615                           pclatu	equ	0xFFB
  5616                           pclath	equ	0xFFA
  5617                           tblptru	equ	0xFF8
  5618                           tblptrh	equ	0xFF7
  5619                           tblptrl	equ	0xFF6
  5620                           tablat	equ	0xFF5
  5621                           prodh	equ	0xFF4
  5622                           prodl	equ	0xFF3
  5623                           intcon	equ	0xFF2
  5624                           postinc0	equ	0xFEE
  5625                           fsr0h	equ	0xFEA
  5626                           fsr0l	equ	0xFE9
  5627                           wreg	equ	0xFE8
  5628                           indf1	equ	0xFE7
  5629                           postinc1	equ	0xFE6
  5630                           fsr1h	equ	0xFE2
  5631                           fsr1l	equ	0xFE1
  5632                           indf2	equ	0xFDF
  5633                           postinc2	equ	0xFDE
  5634                           postdec2	equ	0xFDD
  5635                           plusw2	equ	0xFDB
  5636                           fsr2h	equ	0xFDA
  5637                           fsr2l	equ	0xFD9
  5638                           status	equ	0xFD8
  5639                           
  5640 ;; *************** function _Key_Scan *****************
  5641 ;; Defined at:
  5642 ;;		line 55 in file "_01_USER/Key.c"
  5643 ;; Parameters:    Size  Location     Type
  5644 ;;		None
  5645 ;; Auto vars:     Size  Location     Type
  5646 ;;		None
  5647 ;; Return value:  Size  Location     Type
  5648 ;;		None               void
  5649 ;; Registers used:
  5650 ;;		wreg, status,2, status,0
  5651 ;; Tracked objects:
  5652 ;;		On entry : 0/0
  5653 ;;		On exit  : 0/0
  5654 ;;		Unchanged: 0/0
  5655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5660 ;;Total ram usage:        0 bytes
  5661 ;; Hardware stack levels used:    1
  5662 ;; This function calls:
  5663 ;;		Nothing
  5664 ;; This function is called by:
  5665 ;;		_Key_FSM_Scan
  5666 ;; This function uses a non-reentrant model
  5667 ;;
  5668                           
  5669                           	psect	text40
  5670  001C96                     __ptext40:
  5671                           	opt stack 0
  5672  001C96                     _Key_Scan:
  5673                           	opt stack 23
  5674                           
  5675                           ;Key.c: 58: Local_Key_FSM.key_BUS = 0x00;
  5676                           
  5677                           ; BSR set to: 0
  5678                           ;incstack = 0
  5679  001C96  0E00               	movlw	0
  5680  001C98  0100               	movlb	0	; () banked
  5681  001C9A  6F6A               	movwf	_Local_Key_FSM& (0+255),b	;volatile
  5682                           
  5683                           ; BSR set to: 0
  5684                           ;Key.c: 60: if( RE3 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 0) ;
  5685  001C9C  B684               	btfsc	3972,3,c	;volatile
  5686  001C9E  D003               	goto	i2l2155
  5687                           
  5688                           ; BSR set to: 0
  5689  001CA0  0100               	movlb	0	; () banked
  5690  001CA2  816A               	bsf	_Local_Key_FSM& (0+255),0,b	;volatile
  5691  001CA4  D000               	goto	i2l2155
  5692  001CA6                     i2l2155:
  5693                           
  5694                           ; BSR set to: 0
  5695                           ;Key.c: 61: if( RE2 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 1) ;
  5696  001CA6  B484               	btfsc	3972,2,c	;volatile
  5697  001CA8  D003               	goto	i2l2159
  5698                           
  5699                           ; BSR set to: 0
  5700  001CAA  0100               	movlb	0	; () banked
  5701  001CAC  836A               	bsf	_Local_Key_FSM& (0+255),1,b	;volatile
  5702  001CAE  D000               	goto	i2l2159
  5703  001CB0                     i2l2159:
  5704                           
  5705                           ; BSR set to: 0
  5706                           ;Key.c: 62: if( RD6 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 2) ;
  5707  001CB0  BC83               	btfsc	3971,6,c	;volatile
  5708  001CB2  D003               	goto	i2l2163
  5709                           
  5710                           ; BSR set to: 0
  5711  001CB4  0100               	movlb	0	; () banked
  5712  001CB6  856A               	bsf	_Local_Key_FSM& (0+255),2,b	;volatile
  5713  001CB8  D000               	goto	i2l2163
  5714  001CBA                     i2l2163:
  5715                           
  5716                           ; BSR set to: 0
  5717                           ;Key.c: 63: if( RE4 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 3) ;
  5718  001CBA  B884               	btfsc	3972,4,c	;volatile
  5719  001CBC  D003               	goto	i2l2167
  5720                           
  5721                           ; BSR set to: 0
  5722  001CBE  0100               	movlb	0	; () banked
  5723  001CC0  876A               	bsf	_Local_Key_FSM& (0+255),3,b	;volatile
  5724  001CC2  D000               	goto	i2l2167
  5725  001CC4                     i2l2167:
  5726                           
  5727                           ; BSR set to: 0
  5728                           ;Key.c: 64: if( RD7 == 0 ) Local_Key_FSM.key_BUS |= (0x01 << 4) ;
  5729  001CC4  BE83               	btfsc	3971,7,c	;volatile
  5730  001CC6  0012               	return	
  5731                           
  5732                           ; BSR set to: 0
  5733  001CC8  0100               	movlb	0	; () banked
  5734  001CCA  896A               	bsf	_Local_Key_FSM& (0+255),4,b	;volatile
  5735  001CCC  0012               	return	
  5736                           
  5737                           ; BSR set to: 0
  5738                           
  5739                           ; BSR set to: 0
  5740  001CCE  0012               	return		;funcret
  5741  001CD0                     __end_of_Key_Scan:
  5742                           	opt stack 0
  5743                           pclatu	equ	0xFFB
  5744                           pclath	equ	0xFFA
  5745                           tblptru	equ	0xFF8
  5746                           tblptrh	equ	0xFF7
  5747                           tblptrl	equ	0xFF6
  5748                           tablat	equ	0xFF5
  5749                           prodh	equ	0xFF4
  5750                           prodl	equ	0xFF3
  5751                           intcon	equ	0xFF2
  5752                           postinc0	equ	0xFEE
  5753                           fsr0h	equ	0xFEA
  5754                           fsr0l	equ	0xFE9
  5755                           wreg	equ	0xFE8
  5756                           indf1	equ	0xFE7
  5757                           postinc1	equ	0xFE6
  5758                           fsr1h	equ	0xFE2
  5759                           fsr1l	equ	0xFE1
  5760                           indf2	equ	0xFDF
  5761                           postinc2	equ	0xFDE
  5762                           postdec2	equ	0xFDD
  5763                           plusw2	equ	0xFDB
  5764                           fsr2h	equ	0xFDA
  5765                           fsr2l	equ	0xFD9
  5766                           status	equ	0xFD8
  5767                           
  5768 ;; *************** function _Delay_1Khz *****************
  5769 ;; Defined at:
  5770 ;;		line 75 in file "_01_USER/My_Delay.c"
  5771 ;; Parameters:    Size  Location     Type
  5772 ;;		None
  5773 ;; Auto vars:     Size  Location     Type
  5774 ;;  c               1    2[COMRAM] unsigned char 
  5775 ;;  b               1    1[COMRAM] unsigned char 
  5776 ;;  a               1    0[COMRAM] unsigned char 
  5777 ;; Return value:  Size  Location     Type
  5778 ;;		None               void
  5779 ;; Registers used:
  5780 ;;		wreg, status,2, status,0
  5781 ;; Tracked objects:
  5782 ;;		On entry : 0/0
  5783 ;;		On exit  : 0/0
  5784 ;;		Unchanged: 0/0
  5785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5787 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5789 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5790 ;;Total ram usage:        3 bytes
  5791 ;; Hardware stack levels used:    1
  5792 ;; This function calls:
  5793 ;;		Nothing
  5794 ;; This function is called by:
  5795 ;;		_Sys_Cyc
  5796 ;; This function uses a non-reentrant model
  5797 ;;
  5798                           
  5799                           	psect	text41
  5800  001D08                     __ptext41:
  5801                           	opt stack 0
  5802  001D08                     _Delay_1Khz:
  5803                           	opt stack 24
  5804                           
  5805                           ;My_Delay.c: 77: unsigned char a,b,c;
  5806                           ;My_Delay.c: 78: for(c=1;c>0;c--)
  5807                           
  5808                           ; BSR set to: 0
  5809                           ;incstack = 0
  5810  001D08  0E01               	movlw	1
  5811  001D0A  6E03               	movwf	Delay_1Khz@c,c
  5812  001D0C  5003               	movf	Delay_1Khz@c,w,c
  5813  001D0E  B4D8               	btfsc	status,2,c
  5814  001D10  0012               	return	
  5815  001D12  D001               	goto	i2l2435
  5816  001D14  0012               	return	
  5817  001D16                     i2l2435:
  5818                           
  5819                           ;My_Delay.c: 79: for(b=32;b>0;b--)
  5820  001D16  0E20               	movlw	32
  5821  001D18  6E02               	movwf	Delay_1Khz@b,c
  5822  001D1A  5002               	movf	Delay_1Khz@b,w,c
  5823  001D1C  B4D8               	btfsc	status,2,c
  5824  001D1E  D00D               	goto	i2l2451
  5825  001D20  D001               	goto	i2l2439
  5826  001D22  D00B               	goto	i2l2451
  5827  001D24                     i2l2439:
  5828                           
  5829                           ;My_Delay.c: 80: for(a=2;a>0;a--);
  5830  001D24  0E02               	movlw	2
  5831  001D26  6E01               	movwf	Delay_1Khz@a,c
  5832  001D28  5001               	movf	Delay_1Khz@a,w,c
  5833  001D2A  B4D8               	btfsc	status,2,c
  5834  001D2C  D004               	goto	i2l2447
  5835  001D2E  D001               	goto	i2l2443
  5836  001D30  D002               	goto	i2l2447
  5837  001D32                     i2l2443:
  5838  001D32  0601               	decf	Delay_1Khz@a,f,c
  5839  001D34  D7F9               	goto	L9
  5840  001D36                     i2l2447:
  5841  001D36  0602               	decf	Delay_1Khz@b,f,c
  5842  001D38  D7F0               	goto	L10
  5843  001D3A                     i2l2451:
  5844  001D3A  0603               	decf	Delay_1Khz@c,f,c
  5845  001D3C  D7E7               	goto	L11
  5846  001D3E  0012               	return		;funcret
  5847  001D40                     __end_of_Delay_1Khz:
  5848                           	opt stack 0
  5849                           pclatu	equ	0xFFB
  5850                           pclath	equ	0xFFA
  5851                           tblptru	equ	0xFF8
  5852                           tblptrh	equ	0xFF7
  5853                           tblptrl	equ	0xFF6
  5854                           tablat	equ	0xFF5
  5855                           prodh	equ	0xFF4
  5856                           prodl	equ	0xFF3
  5857                           intcon	equ	0xFF2
  5858                           postinc0	equ	0xFEE
  5859                           fsr0h	equ	0xFEA
  5860                           fsr0l	equ	0xFE9
  5861                           wreg	equ	0xFE8
  5862                           indf1	equ	0xFE7
  5863                           postinc1	equ	0xFE6
  5864                           fsr1h	equ	0xFE2
  5865                           fsr1l	equ	0xFE1
  5866                           indf2	equ	0xFDF
  5867                           postinc2	equ	0xFDE
  5868                           postdec2	equ	0xFDD
  5869                           plusw2	equ	0xFDB
  5870                           fsr2h	equ	0xFDA
  5871                           fsr2l	equ	0xFD9
  5872                           status	equ	0xFD8
  5873                           pclatu	equ	0xFFB
  5874                           pclath	equ	0xFFA
  5875                           tblptru	equ	0xFF8
  5876                           tblptrh	equ	0xFF7
  5877                           tblptrl	equ	0xFF6
  5878                           tablat	equ	0xFF5
  5879                           prodh	equ	0xFF4
  5880                           prodl	equ	0xFF3
  5881                           intcon	equ	0xFF2
  5882                           postinc0	equ	0xFEE
  5883                           fsr0h	equ	0xFEA
  5884                           fsr0l	equ	0xFE9
  5885                           wreg	equ	0xFE8
  5886                           indf1	equ	0xFE7
  5887                           postinc1	equ	0xFE6
  5888                           fsr1h	equ	0xFE2
  5889                           fsr1l	equ	0xFE1
  5890                           indf2	equ	0xFDF
  5891                           postinc2	equ	0xFDE
  5892                           postdec2	equ	0xFDD
  5893                           plusw2	equ	0xFDB
  5894                           fsr2h	equ	0xFDA
  5895                           fsr2l	equ	0xFD9
  5896                           status	equ	0xFD8
  5897                           
  5898                           	psect	rparam
  5899  0000                     pclatu	equ	0xFFB
  5900                           pclath	equ	0xFFA
  5901                           tblptru	equ	0xFF8
  5902                           tblptrh	equ	0xFF7
  5903                           tblptrl	equ	0xFF6
  5904                           tablat	equ	0xFF5
  5905                           prodh	equ	0xFF4
  5906                           prodl	equ	0xFF3
  5907                           intcon	equ	0xFF2
  5908                           postinc0	equ	0xFEE
  5909                           fsr0h	equ	0xFEA
  5910                           fsr0l	equ	0xFE9
  5911                           wreg	equ	0xFE8
  5912                           indf1	equ	0xFE7
  5913                           postinc1	equ	0xFE6
  5914                           fsr1h	equ	0xFE2
  5915                           fsr1l	equ	0xFE1
  5916                           indf2	equ	0xFDF
  5917                           postinc2	equ	0xFDE
  5918                           postdec2	equ	0xFDD
  5919                           plusw2	equ	0xFDB
  5920                           fsr2h	equ	0xFDA
  5921                           fsr2l	equ	0xFD9
  5922                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         87
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     50      71
    BANK0           160     20      86
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    CRC_Verify@_ucLByte	PTR unsigned char  size(2) Largest target is 10
		 -> RS485_Receive_Date@_ucLByte(COMRAM[1]), RS485_SendBuff(BANK0[10]), 

    CRC_Verify@_ucHByte	PTR unsigned char  size(2) Largest target is 10
		 -> RS485_Receive_Date@_ucHByte(COMRAM[1]), RS485_SendBuff(BANK0[10]), 

    CRC_Verify@_pucBuf	PTR unsigned char  size(2) Largest target is 10
		 -> ReceiveBuff(BANK0[10]), RS485_SendBuff(BANK0[10]), 

    RS485_Receive_Date@DataBuff	PTR unsigned char  size(2) Largest target is 10
		 -> ReceiveBuff(BANK0[10]), 

    RS485_Send_Date@date_dress	PTR unsigned char  size(2) Largest target is 10
		 -> RS485_SendBuff(BANK0[10]), 


Critical Paths under _main in COMRAM

    _delay_ms->_delay1ms
    _Timer0_Init->_SetTimer0
    _Show_Result->_TM1640_Show_Hex
    _TM1640_Show_Hex->_TM1640_Writer_Dates
    _TM1640_Writer_Dates->_TM1640_Writer_Byte
    _RS485_Send_Date->_CRC_Verify
    _RS485_Receive_Date->_CRC_Verify
    _CRC_Verify->___wmul
    _Get_ADC6->___ftmul
    ___lwtoft->___ftpack
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul
    _RS485_Init->_Open2USART
    _Init_TM1640->_TM1640_Writer_Byte
    _TM1640_Writer_Byte->_TM1640_Delay
    _TM1640_Stop->_TM1640_Delay
    _TM1640_Start->_TM1640_Delay
    _ADC6_Init->_OpenADC

Critical Paths under _Sys_Cyc in COMRAM

    _Sys_Cyc->___llmod
    _Manage_Message->_Key_FSM_Read

Critical Paths under _main in BANK0

    _main->_Run
    _Get_ADC6->___ftdiv

Critical Paths under _Sys_Cyc in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Sys_Cyc in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Sys_Cyc in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Sys_Cyc in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Sys_Cyc in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Sys_Cyc in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Sys_Cyc in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Sys_Cyc in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Sys_Cyc in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Sys_Cyc in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Sys_Cyc in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Sys_Cyc in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Sys_Cyc in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Sys_Cyc in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Sys_Cyc in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Sys_Cyc in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   16897
                                             17 BANK0      3     3      0
                          _ADC6_Init
                        _GPIO_Config
                        _Init_TM1640
                           _Key_Init
                         _RS485_Init
                                _Run
                        _Show_Result
                    _TM1640_Show_Hex
                        _Timer0_Init
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     559
                                             27 COMRAM     2     0      2
                           _delay1ms
 ---------------------------------------------------------------------------------
 (2) _delay1ms                                             3     3      0     138
                                             24 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0     194
                          _SetTimer0
 ---------------------------------------------------------------------------------
 (2) _SetTimer0                                            4     2      2     194
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Show_Result                                          4     4      0    1857
                                             34 COMRAM     3     3      0
                    _TM1640_Show_Hex
 ---------------------------------------------------------------------------------
 (1) _TM1640_Show_Hex                                      4     2      2    1857
                                             30 COMRAM     4     2      2
                _TM1640_Writer_Dates
 ---------------------------------------------------------------------------------
 (2) _TM1640_Writer_Dates                                  2     1      1    1269
                                             28 COMRAM     2     1      1
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
 ---------------------------------------------------------------------------------
 (1) _Run                                                  2     2      0   11340
                                             15 BANK0      2     2      0
                           _Get_ADC6
                 _RS485_Receive_Date
                    _RS485_Send_Date
 ---------------------------------------------------------------------------------
 (2) _RS485_Send_Date                                      7     4      3    1560
                                             41 COMRAM     7     4      3
                         _CRC_Verify
 ---------------------------------------------------------------------------------
 (2) _RS485_Receive_Date                                   6     4      2    1662
                                             41 COMRAM     6     4      2
                         _CRC_Verify
 ---------------------------------------------------------------------------------
 (3) _CRC_Verify                                          11     4      7    1207
                                             30 COMRAM    11     4      7
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     362
                                             24 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _Get_ADC6                                             0     0      0    7988
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2104
                                             32 COMRAM     3     0      3
                            _ReadADC (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    2846
                                             35 COMRAM    15     9      6
                            _ReadADC (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3038
                                              0 BANK0     15     9      6
                            _ReadADC (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2008
                                             24 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) _ReadADC                                              4     2      2       0
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RS485_Init                                           0     0      0     375
                         _Open2USART
 ---------------------------------------------------------------------------------
 (2) _Open2USART                                           3     1      2     375
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Key_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_TM1640                                          0     0      0     396
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
 ---------------------------------------------------------------------------------
 (3) _TM1640_Writer_Byte                                   2     2      0     198
                                             26 COMRAM     2     2      0
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (3) _TM1640_Stop                                          0     0      0      99
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (3) _TM1640_Start                                         0     0      0      99
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (4) _TM1640_Delay                                         2     2      0      99
                                             24 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC6_Init                                            0     0      0     316
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     316
                                             24 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Sys_Cyc                                             15    15      0    1372
                                              9 COMRAM    15    15      0
                         _Delay_1Khz
                       _Key_FSM_Scan
                     _Manage_Message
                            ___llmod
                        i2_SetTimer0
 ---------------------------------------------------------------------------------
 (7) i2_SetTimer0                                          4     2      2      94
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8     371
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) _Manage_Message                                       1     1      0     746
                       _Key_FSM_Read
                      _Key_FSM_Reset
                            ___lbmod
 ---------------------------------------------------------------------------------
 (8) ___lbmod                                              4     3      1     212
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (8) _Key_FSM_Reset                                        1     1      0      67
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _Key_FSM_Read                                         6     6      0     467
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (7) _Key_FSM_Scan                                         0     0      0       0
                           _Key_Scan
 ---------------------------------------------------------------------------------
 (8) _Key_Scan                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _Delay_1Khz                                           3     3      0     138
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC6_Init
     _OpenADC
   _GPIO_Config
   _Init_TM1640
     _TM1640_Start
       _TM1640_Delay
     _TM1640_Stop
       _TM1640_Delay
     _TM1640_Writer_Byte
       _TM1640_Delay
   _Key_Init
   _RS485_Init
     _Open2USART
   _Run
     _Get_ADC6
       _BusyADC
       _ConvertADC
       _ReadADC
       ___ftdiv
         _ReadADC (ARG)
         ___ftmul (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___ftmul
         _ReadADC (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___lwtoft
         _ReadADC (ARG)
         ___ftpack (ARG)
     _RS485_Receive_Date
       _CRC_Verify
         ___wmul
     _RS485_Send_Date
       _CRC_Verify
         ___wmul
   _Show_Result
     _TM1640_Show_Hex
       _TM1640_Writer_Dates
         _TM1640_Start
           _TM1640_Delay
         _TM1640_Stop
           _TM1640_Delay
         _TM1640_Writer_Byte
           _TM1640_Delay
   _TM1640_Show_Hex
     _TM1640_Writer_Dates
       _TM1640_Start
         _TM1640_Delay
       _TM1640_Stop
         _TM1640_Delay
       _TM1640_Writer_Byte
         _TM1640_Delay
   _Timer0_Init
     _SetTimer0
   _delay_ms
     _delay1ms

 _Sys_Cyc (ROOT)
   _Delay_1Khz
   _Key_FSM_Scan
     _Key_Scan
   _Manage_Message
     _Key_FSM_Read
     _Key_FSM_Reset
     ___lbmod
   ___llmod
   i2_SetTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     14      56       5       53.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     32      47       1       74.7%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9D      12        0.0%
DATA                 0      0      9D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Jan 23 16:24:50 2016

                ?_TM1640_Stop 0001  __size_of_TM1640_Writer_Dates 0022                 ?_TM1640_Delay 0001  
              Key_FSM_Reset@t 0001           ___wmul@multiplicand 001B                   __CFG_BORV$3 000000  
               ?_TM1640_Start 0001                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000                  __CFG_CP4$OFF 000000  
                __CFG_CP5$OFF 000000                  __CFG_CP6$OFF 000000                  __CFG_CP7$OFF 000000  
                         l164 19B4                           l341 1F44                           l326 1C60  
                         l182 1886                           l422 1828                           l327 1C76  
                         l169 1A08                           l425 1976                           l454 1BBE  
                         l490 1922                           l482 18EC                           l484 18FC  
                         l813 16B2                           l487 1914                           l489 1920  
                         l877 12CC                           _GIE 007F97                  __CFG_CPB$OFF 000000  
                         _RC3 007C13                           _RC4 007C14                           _RE2 007C22  
                         _RE3 007C23                           _RE4 007C24                           _RD6 007C1E  
                         _RE5 007C25                           _RD7 007C1F                           _RE6 007C26  
                         _RG3 007C33                           _RE7 007C27                  __CFG_CPD$OFF 000000  
                         _PSA 007EAB                           _Run 1798                ??_Key_FSM_Read 0001  
              ??_Key_FSM_Scan 0001                           prod 000FF3                   CRC_Verify@i 0029  
                         wreg 000FE8                  ?_GPIO_Config 0001                    _TXSTA2bits 000F21  
                 ?_RS485_Init 0001                  ___ftdiv@cntr 00AB                          ?_Run 0001  
                ___ftdiv@sign 00B0                          l3003 1A14                          l3013 1846  
                        l3023 187A                          l3031 188E                          l3017 1856  
                        l3121 17A4                          l3113 1F1A                          l3043 1D7A  
                        l3115 1F20                          l3133 17E0                          l3127 17C0  
                        l3065 1B0E                          l3137 17FA                          l2701 1F34  
                        l2707 1F3C                          l3187 178A                          l2709 1F3E  
                        l2901 14FE                          l2743 1C7A                          l2831 1228  
                        l2761 1626                          l2825 11EE                          l2905 1510  
                        l2851 128A                          l2931 1CDE                          l2749 1C8E  
                        l2773 167A                          l2765 1636                          l2861 12DE  
                        l2909 1526                          l2783 16BA                          l2775 169A  
                        l2767 1642                          l2871 1474                          l2943 1CFE  
                        l2935 1CEC                          l2961 18D8                          l2777 16A6  
                        l2769 1662                          l2891 14D0                          l2795 1AAC  
                        l2939 1CFA                          l2947 1D02                          l2981 1918  
                        l2973 1902                          l2965 18E2                          l2957 18CA  
                        l2789 16CC                          l2877 149C                          l2895 14E2  
                        l2799 1AE6                          l2977 190C                          l2969 18F2  
                        l2899 14F8                          l2999 19F4                          _T0CS 007EAD  
                        _T0SE 007EAC                          u3055 1944                          u3065 1980  
                        u2620 1F76                          u2701 1484                          u2631 11CA  
                        _IPEN 007E87                          u2651 1204                          u2681 145C  
               ??_Init_TM1640 001D                    _Delay_1Khz 1D08                          Run@i 00B1  
                        _main 16DC                  ___ftpack@arg 0019                  ___ftpack@exp 001C  
                        fsr0h 000FEA                          fsr1h 000FE2                          fsr0l 000FE9  
                        fsr2h 000FDA                          indf1 000FE7                          fsr1l 000FE1  
                        indf2 000FDF                          fsr2l 000FD9                          pclat 000FFA  
             ??_Key_FSM_Reset 0001                          prodh 000FF4                          prodl 000FF3  
                        start 0194              ?_RS485_Send_Date 002A                 __CFG_IESO$OFF 000000  
               __CFG_FOSC$HS1 000000                 __CFG_MCLRE$ON 000000                  ___ftmul@cntr 0031  
                ___param_bank 000010                  ___ftmul@sign 0032               __end_of_BusyADC 1F7C  
             __end_of_ReadADC 1F6E                ??_TM1640_Delay 0019               __end_of_OpenADC 1BC2  
                       ??_Run 0033                ??_TM1640_Start 001B                 __CFG_RETEN$ON 000000  
                       ?_main 0001               __end_of___lbmod 1D72               __end_of_Sys_Cyc 0194  
             __end_of___ftdiv 1306               __end_of___ftmul 154E               __end_of___llmod 1A9A  
                       _T0PS0 007EA8                         _T0PS1 007EA9                         _T0PS2 007EAA  
                       _RC2IF 007D25                         i2l115 109A                         i2l270 00F8  
                       i2l266 00A6                         i2l276 015A                         i2l959 1A88  
           __end_of_ADC6_Init 1F5E                         _TMR0H 000FD7                         _TMR0L 000FD6  
                       _TRISD 000F95                         _TRISE 000F96                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
               __CFG_WRT4$OFF 000000                __CFG_EBRT0$OFF 000000                 __CFG_WRT5$OFF 000000  
              __CFG_EBRT1$OFF 000000                 __CFG_WRT6$OFF 000000                __CFG_EBRT2$OFF 000000  
               __CFG_WRT7$OFF 000000                __CFG_EBRT3$OFF 000000                __CFG_EBRT4$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBRT5$OFF 000000                __CFG_EBRT6$OFF 000000  
              __CFG_EBRT7$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBRTB$OFF 000000           __size_of_CRC_Verify 006E  
               ___ftpack@sign 001D                    _ConvertADC 1F92                 _Local_Key_FSM 006A  
                       tablat 000FF5                         plusw2 000FDB                         status 000FD8  
  __end_of_RS485_Receive_Date 18B2            _TM1640_Writer_Byte 1C58              __end_of_Get_ADC6 1B74  
            ?_TM1640_Show_Hex 001F               __initialization 1DFA           __end_of_Init_TM1640 1E6C  
         __size_of_RS485_Init 001E                  __end_of_main 1798           ?_TM1640_Writer_Byte 0001  
            __end_of_Key_Init 1F92           Key_FSM_Read@key_num 0006              __end_of_Key_Scan 1CD0  
                  _Open2USART 18B2                        ??_main 0033                 __activetblptr 000001  
            ??_Manage_Message 0007          ??_TM1640_Writer_Byte 001B                        _ADCON0 000FC2  
                      _ADCON1 000FC1                        _ADCON2 000FC0              ___llmod@dividend 0001  
                      _ADRESH 000FC4                        _ADRESL 000FC3                        _ANCON2 000F23  
                      _T08BIT 007EAE              __end_of___ftpack 16DC               __CFG_BBSIZ$BB2K 000000  
                      i2l2211 11A4                        i2l2203 111E                        i2l2221 1C20  
                      i2l2215 11A8                        i2l2223 1C4E                        i2l2163 1CBA  
                      i2l2155 1CA6                        i2l2181 1070                        i2l2173 1018  
                      i2l2167 1CC4                        i2l2159 1CB0                        i2l2183 1086  
                      i2l2191 10FC                        i2l2185 10B4                        i2l2353 1D66  
                      i2l2345 1D4C                        i2l2521 1394                        i2l2513 137A  
                      i2l2505 1360                        i2l2443 1D32                        i2l2451 1D3A  
                      i2l2435 1D16                        i2l2355 1D6C                        i2l2531 13C8  
                      i2l2461 1BD4                        i2l2189 10E6                        i2l2525 139E  
                      i2l2517 1386                        i2l2509 136C                        i2l2447 1D36  
                      i2l2439 1D24                        i2l2199 1112                        i2l2551 143A  
                      i2l2543 1420                        i2l2535 13E6                        i2l2527 13AC  
                      i2l2473 1BFE                        i2l2465 1BE2                        i2l2561 1A3C  
                      i2l2641 009A                        i2l2555 1446                        i2l2547 142E  
                      i2l2539 1402                        i2l2563 1A4A                        i2l2651 00BC  
                      i2l2469 1BF0                        i2l2565 1A52                        i2l2637 0090  
                      i2l2671 0122                        i2l2647 00AA                        i2l2497 1346  
                      i2l2489 132C                        i2l2569 1A78                        i2l2577 1DAA  
                      i2l2649 00B0                        i2l2665 0112                        i2l2659 00FC  
                      i2l2679 0148                 SetTimer0@_tmr 0019                        _RCREG2 000F1D  
            __end_of___lwtoft 1E46                        _RCSTA2 000F22                   ?_Delay_1Khz 0001  
                      _TMR0IE 007F95                        _TMR0IF 007F92                        _SPBRG2 000F1E  
                      _TMR0ON 007EAF    RS485_Receive_Date@DataBuff 002A                 TM1640_Delay@i 001A  
                   ??_BusyADC 0019                        _TXREG2 000F1C                     ??_ReadADC 001B  
                      _TXSTA2 000F21              __end_of_delay1ms 1D08              __end_of_delay_ms 1F32  
               ??_Timer0_Init 001D                     ??_OpenADC 001B        TM1640_Writer_Byte@Date 001B  
              __CFG_XINST$OFF 000000          __end_of_Key_FSM_Read 11B4          __end_of_Key_FSM_Scan 1C0E  
      TM1640_Writer_Byte@mask 001C                        _g_Addr 0047             _RS485_ReceiveBuff 0060  
                      ___wmul 1DD2                __CFG_STVREN$ON 000000                     ??___lbmod 0002  
                   ??_Sys_Cyc 000A                     ??___ftdiv 00A8                     ??___ftmul 002A  
                   ??___llmod 0009          Sys_Cyc@_overturn_LED 0042            __size_of_SetTimer0 0030  
                      clear_0 1E00                        clear_1 1E0C          __size_of_TM1640_Stop 0024  
               ??_Show_Result 0023         ___ftmul@f3_as_product 002E                _Local_Key_User 007C  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8          __size_of_GPIO_Config 000C           _TM1640_Writer_Dates 1ED8  
                 ?_ConvertADC 0001          __end_of_TM1640_Delay 1F4C    RS485_Receive_Date@_ucHByte 002C  
             ___lbmod@divisor 0001          __end_of_TM1640_Start 1ED8    RS485_Receive_Date@_ucLByte 002D  
                  __accesstop 0060       __end_of__initialization 1E12               ___lbmod@counter 0003  
                 _Init_TM1640 1E46                  ?i2_SetTimer0 0001                 ___rparam_used 000001  
                  ___ftdiv@f1 00A2                    ___ftdiv@f2 00A5                    ___ftdiv@f3 00AC  
                ??_CRC_Verify 0026                    ___ftmul@f1 0024                    ___ftmul@f2 0027  
              __pcstackCOMRAM 0001          ?_TM1640_Writer_Dates 001D           __end_of_Timer0_Init 1E90  
   Sys_Cyc@_RS485_Receive_Num 0040                   ?_Open2USART 0019                    ___lwtoft@c 0021  
         __size_of_Delay_1Khz 0038                     ?_Get_ADC6 0001                  ??_RS485_Init 001C  
 RS485_Receive_Date@RS485_LED 003E           __end_of_Show_Result 19B2            __end_of_CRC_Verify 1B08  
           __end_of_SetTimer0 1DA2                    __pbssBANK0 0060                     ?_Key_Init 0001  
                   ?_Key_Scan 0001                   _ReceiveBuff 0098               __CFG_PLLCFG$OFF 000000  
     TM1640_Writer_Dates@Addr 001E            __end_of_LED_Number 1011       TM1640_Writer_Dates@Date 001D  
       ??_TM1640_Writer_Dates 001E                       ?___wmul 0019            __end_of_RS485_Init 1F18  
         __size_of_ConvertADC 0004                     ?___ftpack 0019                     ?___lwtoft 0021  
                   ?_delay1ms 0001                    ??_Get_ADC6 0033                     ?_delay_ms 001C  
                     _SPBRGH2 000F1F                     _ADC6_Buff 003B                     _ADC6_Init 1F4C  
                  ??_Key_Init 0019                    ??_Key_Scan 0001         __size_of_Key_FSM_Read 01A2  
       __size_of_Key_FSM_Scan 004C           __size_of_Open2USART 0084                       _BusyADC 1F6E  
                     _ReadADC 1F5E              RS485_Send_Date@i 002F               __CFG_PWRTEN$OFF 000000  
                     _OpenADC 1B74                       __Hparam 0000                   _Timer0_Init 1E6C  
       __end_of_Key_FSM_Reset 1C58                       __Lparam 0000                 Sys_Cyc@_pulse 0018  
              _RS485_SendBuff 008E                       ___lbmod 1D40                       _Sys_Cyc 0008  
                     ___ftdiv 11B4               __size_of___wmul 0028                       ___ftmul 144C  
                     ___llmod 1A2A                  __psmallconst 1000            _RS485_Receive_Date 182A  
          _RS485_Receive_Flag 0045      __size_of_RS485_Send_Date 0078                       __pcinit 1DFA  
                  ??___ftpack 001E         Sys_Cyc@_overturn_1Khz 0041                       __ramtop 1000  
                     __ptext0 16DC                       __ptext1 1F18                       __ptext2 1CD0  
                     __ptext3 1E6C                       __ptext4 1D72                       __ptext5 1936  
                     __ptext6 154E                       __ptext7 1ED8                       __ptext8 1798  
                     __ptext9 19B2                    ??___lwtoft 0024                   _Show_Result 1936  
                __size_of_Run 0092              Open2USART@config 001B                    ??_delay1ms 0019  
         ?_RS485_Receive_Date 002A         __size_of_TM1640_Delay 001A             __CFG_MSSPMSK$MSK7 000000  
                  ??_delay_ms 001E                  _Key_FSM_Read 1012                  _Key_FSM_Scan 1BC2  
       __size_of_TM1640_Start 0024                    ?_ADC6_Init 0001                OpenADC@config2 0019  
              OpenADC@config3 001A                       main@num 00B3          end_of_initialization 1E12  
                ??_Delay_1Khz 0001                     _RS485_Num 0044          ??_RS485_Receive_Date 002C  
        __size_ofi2_SetTimer0 0030                       postdec2 000FDD                       postinc0 000FEE  
                     postinc1 000FE6                       postinc2 000FDE               CRC_Verify@usCrc 0027  
    __size_of_TM1640_Show_Hex 00C8                  _TM1640_Delay 1F32     RS485_Send_Date@date_dress 002A  
   RS485_Send_Date@date_lenth 002C                  _TM1640_Start 1EB4                     _PORTEbits 000F84  
            TM1640_Delay@Time 0019            __end_of_Delay_1Khz 1D40              ___lbmod@dividend 0002  
                   _TRISCbits 000F94                     _TRISGbits 000F98   __size_of_TM1640_Writer_Byte 003E  
           __CFG_SOSCSEL$HIGH 000000                  ??_ConvertADC 0019                   ___lbmod@rem 0004  
    Key_FSM_Read@key_num_mate 0005                  ?_Init_TM1640 0001                   ___ftdiv@exp 00AF  
                 ___ftmul@exp 002D                 ??_TM1640_Stop 001B                __end_of___wmul 1DFA  
                ??_Open2USART 001B            __end_of_ConvertADC 1F96                 ??_GPIO_Config 0019  
         start_initialization 1DFA             ??_RS485_Send_Date 002D        TM1640_Show_Hex@Numbers 001F  
                 __end_of_Run 182A                   ??_ADC6_Init 001E             __size_of_Get_ADC6 006C  
     __size_of_Manage_Message 0146               ___llmod@divisor 0005             __size_of_Key_Init 000A  
           __size_of_Key_Scan 003A               ___llmod@counter 0009                     _SetTimer0 1D72  
          __end_of_Open2USART 1936               i2SetTimer0@_tmr 0001                     _Timer_Cyc 0037  
                    ??___wmul 001D                 _Handle_Switch 0033           __end_of_TM1640_Stop 1EB4  
           __size_of___ftpack 00C6             ??_TM1640_Show_Hex 0021                   __pbssCOMRAM 0033  
           __size_of___lwtoft 0026                 __pcstackBANK0 00A2                  _Receive_Flag 0046  
           __size_of_delay1ms 0038             __size_of_delay_ms 001A           __end_of_GPIO_Config 1F88  
                    ?_BusyADC 0001                      ?_ReadADC 0019   __end_of_TM1640_Writer_Dates 1EFA  
                  ?_SetTimer0 0019                      ?_OpenADC 0019                  ?_Timer0_Init 0001  
           __CFG_CCP2MX$PORTC 000000                     __pintcode 0008                      ?___lbmod 0001  
                    ?_Sys_Cyc 0001                      ?___ftdiv 00A2                      ?___ftmul 0024  
                    ?___llmod 0001                  ?_Show_Result 0001                   __smallconst 1000  
                 _LED2_switch 0043                     delay1ms@a 0019                     delay1ms@b 001A  
                   delay1ms@c 001B               Open2USART@spbrg 0019                ___wmul@product 001D  
               OpenADC@config 001D                      _PIE1bits 000F9D                      _PIE3bits 000FA3  
        __size_of_Init_TM1640 0026                      i2u163_40 103E                      i2u171_44 116C  
                    i2u171_45 1168                      i2u164_40 105C                      i2u172_44 1180  
                    i2u172_45 117C                      i2u165_40 10D2                      _PIR1bits 000F9E  
                 _TM1640_Stop 1E90            CRC_Verify@_ucHByte 0022            CRC_Verify@_ucLByte 0024  
                  _ADCON0bits 000FC2             ___wmul@multiplier 0019                      _Get_ADC6 1B08  
                 _GPIO_Config 1F7C                   Delay_1Khz@a 0001                   Delay_1Khz@b 0002  
                 Delay_1Khz@c 0003        __size_of_Key_FSM_Reset 004A                      _Key_Init 1F88  
                    _Key_Scan 1C96                _Manage_Message 1306                 ??i2_SetTimer0 0003  
                 ??_SetTimer0 001B              __size_of_BusyADC 000E              __size_of_ReadADC 0010  
                    __Hrparam 0000   __size_of_RS485_Receive_Date 0088              __size_of_OpenADC 004E  
                    __Lrparam 0000                  __Lsmallconst 1000            __CFG_BOREN$SBORDIS 000000  
             _RS485_Send_Date 19B2              __size_of___lbmod 0032              __size_of_Sys_Cyc 018C  
            __size_of___ftdiv 0152              __size_of___ftmul 0102              __size_of___llmod 0070  
                    ___ftpack 1616                      ___lwtoft 1E20                      _delay1ms 1CD0  
  __end_of_TM1640_Writer_Byte 1C96                      _delay_ms 1F18                      __ptext10 182A  
                    __ptext11 1A9A                      __ptext20 1F6E                      __ptext12 1DD2  
                    __ptext21 1EFA                      __ptext13 1B08                      __ptext30 1F4C  
                    __ptext22 18B2                      __ptext14 1E20                      __ptext31 1B74  
                    __ptext23 1F88                      __ptext15 144C                      __ptext40 1C96  
                    __ptext24 1E46                      __ptext16 11B4                      __ptext41 1D08  
                    __ptext33 1DA2                      __ptext25 1C58                      __ptext17 1616  
                    __ptext34 1A2A                      __ptext26 1E90                      __ptext18 1F5E  
                    __ptext35 1306                      __ptext27 1EB4                      __ptext19 1F92  
                    __ptext36 1D40                      __ptext28 1F32                      __ptext37 1C0E  
                    __ptext29 1F7C                      __ptext38 1012                      __ptext39 1BC2  
      __end_of_Manage_Message 144C                 __size_of_main 00BC           __CFG_RTCOSC$SOSCREF 000000  
                  _CRC_Verify 1A9A                 _Key_FSM_Reset 1C0E          __size_of_Timer0_Init 0024  
             _TM1640_Show_Hex 154E           __end_ofi2_SetTimer0 1DD2             CRC_Verify@_pucBuf 001F  
         __CFG_INTOSCSEL$HIGH 000000            Sys_Cyc@RS485_Timer 003F                   delay_ms@_ms 001C  
                  _LED_Number 1001            __CFG_WDTEN$SWDTDIS 000000                    _INTCONbits 000FF2  
        __size_of_Show_Result 007C                    _RS485_Init 1EFA               ?_Manage_Message 0001  
                    intlevel2 0000                    _RCSTA2bits 000F22       __end_of_RS485_Send_Date 1A2A  
              ?_Key_FSM_Reset 0001           RS485_Receive_Date@n 002E              CRC_Verify@_usLen 0021  
          __CFG_WDTPS$1048576 000000                 ?_Key_FSM_Read 0001                 ?_Key_FSM_Scan 0001  
         __CFG_BORPWR$ZPBORMV 000000       __end_of_TM1640_Show_Hex 1616            __size_of_ADC6_Init 0012  
                 i2_SetTimer0 1DA2                   ?_CRC_Verify 001F  
