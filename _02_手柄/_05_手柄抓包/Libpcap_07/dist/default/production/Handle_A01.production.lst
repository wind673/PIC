

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sat Dec 12 20:00:30 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F67K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    49  0000                     
    50                           	psect	smallconst
    51  001000                     __psmallconst:
    52                           	opt stack 0
    53  001000  00                 	db	0
    54  001001                     _LED_Number:
    55                           	opt stack 0
    56  001001  3F                 	db	63
    57  001002  06                 	db	6
    58  001003  5B                 	db	91
    59  001004  4F                 	db	79
    60  001005  66                 	db	102
    61  001006  6D                 	db	109
    62  001007  7D                 	db	125
    63  001008  07                 	db	7
    64  001009  7F                 	db	127
    65  00100A  6F                 	db	111
    66  00100B  77                 	db	119
    67  00100C  7C                 	db	124
    68  00100D  39                 	db	57
    69  00100E  5E                 	db	94
    70  00100F  79                 	db	121
    71  001010  71                 	db	113
    72  001011                     __end_of_LED_Number:
    73                           	opt stack 0
    74  0000                     _ANCON2	set	3875
    75  0000                     _RCREG2	set	3869
    76  0000                     _RCSTA2	set	3874
    77  0000                     _RCSTA2bits	set	3874
    78  0000                     _SPBRG2	set	3870
    79  0000                     _SPBRGH2	set	3871
    80  0000                     _TXREG2	set	3868
    81  0000                     _TXSTA2	set	3873
    82  0000                     _TXSTA2bits	set	3873
    83  0000                     _ADCON0	set	4034
    84  0000                     _ADCON0bits	set	4034
    85  0000                     _ADCON1	set	4033
    86  0000                     _ADCON2	set	4032
    87  0000                     _ADRESH	set	4036
    88  0000                     _ADRESL	set	4035
    89  0000                     _INTCONbits	set	4082
    90  0000                     _PIE1bits	set	3997
    91  0000                     _PIE3bits	set	4003
    92  0000                     _PIR1bits	set	3998
    93  0000                     _PORTEbits	set	3972
    94  0000                     _TMR0H	set	4055
    95  0000                     _TMR0L	set	4054
    96  0000                     _TRISCbits	set	3988
    97  0000                     _TRISD	set	3989
    98  0000                     _TRISE	set	3990
    99  0000                     _TRISGbits	set	3992
   100  0000                     _GIE	set	32663
   101  0000                     _IPEN	set	32391
   102  0000                     _PSA	set	32427
   103  0000                     _RC2IF	set	32037
   104  0000                     _RC3	set	31763
   105  0000                     _RC4	set	31764
   106  0000                     _RD6	set	31774
   107  0000                     _RD7	set	31775
   108  0000                     _RE2	set	31778
   109  0000                     _RE3	set	31779
   110  0000                     _RE4	set	31780
   111  0000                     _RE5	set	31781
   112  0000                     _RE6	set	31782
   113  0000                     _RE7	set	31783
   114  0000                     _RG3	set	31795
   115  0000                     _T08BIT	set	32430
   116  0000                     _T0CS	set	32429
   117  0000                     _T0PS0	set	32424
   118  0000                     _T0PS1	set	32425
   119  0000                     _T0PS2	set	32426
   120  0000                     _T0SE	set	32428
   121  0000                     _TMR0IE	set	32661
   122  0000                     _TMR0IF	set	32658
   123  0000                     _TMR0ON	set	32431
   124                           
   125                           ; #config settings
   126  001011  00                 	db	0	; dummy byte at the end
   127  0000                     
   128                           	psect	cinit
   129  001B04                     __pcinit:
   130                           	opt stack 0
   131  001B04                     start_initialization:
   132                           	opt stack 0
   133  001B04                     __initialization:
   134                           	opt stack 0
   135                           
   136                           ; Clear objects allocated to COMRAM (27 bytes)
   137  001B04  EE00  F02D         	lfsr	0,__pbssCOMRAM
   138  001B08  0E1B               	movlw	27
   139  001B0A                     clear_0:
   140  001B0A  6AEE               	clrf	postinc0,c
   141  001B0C  06E8               	decf	wreg,f,c
   142  001B0E  E1FD               	bnz	clear_0
   143  001B10                     end_of_initialization:
   144                           	opt stack 0
   145  001B10                     __end_of__initialization:
   146                           	opt stack 0
   147  001B10  0E00               	movlw	low (__Lsmallconst shr (0+16))
   148  001B12  6EF8               	movwf	tblptru,c
   149  001B14  0E10               	movlw	high __Lsmallconst
   150  001B16  6EF7               	movwf	tblptrh,c
   151  001B18  0100               	movlb	0
   152  001B1A  EF5B  F00C         	goto	_main	;jump to C main() function
   153                           tblptru	equ	0xFF8
   154                           tblptrh	equ	0xFF7
   155                           postinc0	equ	0xFEE
   156                           wreg	equ	0xFE8
   157                           
   158                           	psect	bssCOMRAM
   159  00002D                     __pbssCOMRAM:
   160                           	opt stack 0
   161  00002D                     _Timer_Cyc:
   162                           	opt stack 0
   163  00002D                     	ds	4
   164  000031                     _ADC6_Buff:
   165                           	opt stack 0
   166  000031                     	ds	3
   167  000034                     _Handle_01_Switch:
   168                           	opt stack 0
   169  000034                     	ds	3
   170  000037                     _USART2_ReceiveBuff:
   171                           	opt stack 0
   172  000037                     	ds	2
   173  000039                     _USART2_TendBuff:
   174                           	opt stack 0
   175  000039                     	ds	2
   176  00003B                     Sys_Cyc@_overturn_1Khz:
   177                           	opt stack 0
   178  00003B                     	ds	1
   179  00003C                     Sys_Cyc@_overturn_LED:
   180                           	opt stack 0
   181  00003C                     	ds	1
   182  00003D                     _LED2_switch:
   183                           	opt stack 0
   184  00003D                     	ds	1
   185  00003E                     _Local_Key_FSM:
   186                           	opt stack 0
   187  00003E                     	ds	10
   188                           tblptru	equ	0xFF8
   189                           tblptrh	equ	0xFF7
   190                           postinc0	equ	0xFEE
   191                           wreg	equ	0xFE8
   192                           
   193                           	psect	cstackBANK0
   194  000060                     __pcstackBANK0:
   195                           	opt stack 0
   196  000060                     ___ftmul@exp:
   197                           	opt stack 0
   198                           
   199                           ; 1 bytes @ 0x0
   200  000060                     	ds	1
   201  000061                     ___ftmul@f3_as_product:
   202                           	opt stack 0
   203                           
   204                           ; 3 bytes @ 0x1
   205  000061                     	ds	3
   206  000064                     ___ftmul@cntr:
   207                           	opt stack 0
   208                           
   209                           ; 1 bytes @ 0x4
   210  000064                     	ds	1
   211  000065                     ___ftmul@sign:
   212                           	opt stack 0
   213                           
   214                           ; 1 bytes @ 0x5
   215  000065                     	ds	1
   216  000066                     ?___ftdiv:
   217                           	opt stack 0
   218  000066                     ___ftdiv@f1:
   219                           	opt stack 0
   220                           
   221                           ; 3 bytes @ 0x6
   222  000066                     	ds	3
   223  000069                     ___ftdiv@f2:
   224                           	opt stack 0
   225                           
   226                           ; 3 bytes @ 0x9
   227  000069                     	ds	3
   228  00006C                     ??___ftdiv:
   229                           
   230                           ; 0 bytes @ 0xC
   231  00006C                     	ds	3
   232  00006F                     ___ftdiv@cntr:
   233                           	opt stack 0
   234                           
   235                           ; 1 bytes @ 0xF
   236  00006F                     	ds	1
   237  000070                     ___ftdiv@f3:
   238                           	opt stack 0
   239                           
   240                           ; 3 bytes @ 0x10
   241  000070                     	ds	3
   242  000073                     ___ftdiv@exp:
   243                           	opt stack 0
   244                           
   245                           ; 1 bytes @ 0x13
   246  000073                     	ds	1
   247  000074                     ___ftdiv@sign:
   248                           	opt stack 0
   249                           
   250                           ; 1 bytes @ 0x14
   251  000074                     	ds	1
   252  000075                     main@num:
   253                           	opt stack 0
   254                           
   255                           ; 3 bytes @ 0x15
   256  000075                     	ds	3
   257                           tblptru	equ	0xFF8
   258                           tblptrh	equ	0xFF7
   259                           postinc0	equ	0xFEE
   260                           wreg	equ	0xFE8
   261                           
   262                           	psect	cstackCOMRAM
   263  000001                     __pcstackCOMRAM:
   264                           	opt stack 0
   265  000001                     ??_Key_FSM_Read:
   266  000001                     ?___llmod:
   267                           	opt stack 0
   268  000001                     Delay_1Khz@a:
   269                           	opt stack 0
   270  000001                     i2SetTimer0@_tmr:
   271                           	opt stack 0
   272  000001                     ___llmod@dividend:
   273                           	opt stack 0
   274                           
   275                           ; 4 bytes @ 0x0
   276  000001                     	ds	1
   277  000002                     Delay_1Khz@b:
   278                           	opt stack 0
   279                           
   280                           ; 1 bytes @ 0x1
   281  000002                     	ds	1
   282  000003                     ??i2_SetTimer0:
   283  000003                     Delay_1Khz@c:
   284                           	opt stack 0
   285                           
   286                           ; 1 bytes @ 0x2
   287  000003                     	ds	2
   288  000005                     Key_FSM_Read@temp:
   289                           	opt stack 0
   290  000005                     ___llmod@divisor:
   291                           	opt stack 0
   292                           
   293                           ; 4 bytes @ 0x4
   294  000005                     	ds	1
   295  000006                     Key_FSM_Read@key_num:
   296                           	opt stack 0
   297                           
   298                           ; 1 bytes @ 0x5
   299  000006                     	ds	1
   300  000007                     
   301                           ; 0 bytes @ 0x6
   302  000007                     	ds	2
   303  000009                     ___llmod@counter:
   304                           	opt stack 0
   305                           
   306                           ; 1 bytes @ 0x8
   307  000009                     	ds	1
   308  00000A                     ??_Sys_Cyc:
   309                           
   310                           ; 0 bytes @ 0x9
   311  00000A                     	ds	14
   312  000018                     Sys_Cyc@_pulse:
   313                           	opt stack 0
   314                           
   315                           ; 1 bytes @ 0x17
   316  000018                     	ds	1
   317  000019                     ?_ReadADC:
   318                           	opt stack 0
   319  000019                     ?_Busy2USART:
   320                           	opt stack 0
   321  000019                     ?___lwdiv:
   322                           	opt stack 0
   323  000019                     ?___lwmod:
   324                           	opt stack 0
   325  000019                     ?___ftpack:
   326                           	opt stack 0
   327  000019                     TM1640_Delay@Time:
   328                           	opt stack 0
   329  000019                     OpenADC@config2:
   330                           	opt stack 0
   331  000019                     SetTimer0@_tmr:
   332                           	opt stack 0
   333  000019                     Open2USART@spbrg:
   334                           	opt stack 0
   335  000019                     ___lwdiv@dividend:
   336                           	opt stack 0
   337  000019                     ___lwmod@dividend:
   338                           	opt stack 0
   339  000019                     ___ftpack@arg:
   340                           	opt stack 0
   341                           
   342                           ; 3 bytes @ 0x18
   343  000019                     	ds	1
   344  00001A                     TM1640_Delay@i:
   345                           	opt stack 0
   346  00001A                     OpenADC@config3:
   347                           	opt stack 0
   348                           
   349                           ; 1 bytes @ 0x19
   350  00001A                     	ds	1
   351  00001B                     ??_SetTimer0:
   352  00001B                     ??_OpenADC:
   353  00001B                     ??_ReadADC:
   354  00001B                     TM1640_Writer_Byte@Date:
   355                           	opt stack 0
   356  00001B                     Open2USART@config:
   357                           	opt stack 0
   358  00001B                     ___lwdiv@divisor:
   359                           	opt stack 0
   360  00001B                     ___lwmod@divisor:
   361                           	opt stack 0
   362                           
   363                           ; 2 bytes @ 0x1A
   364  00001B                     	ds	1
   365  00001C                     TM1640_Writer_Byte@mask:
   366                           	opt stack 0
   367  00001C                     ___ftpack@exp:
   368                           	opt stack 0
   369                           
   370                           ; 1 bytes @ 0x1B
   371  00001C                     	ds	1
   372  00001D                     OpenADC@config:
   373                           	opt stack 0
   374  00001D                     ___ftpack@sign:
   375                           	opt stack 0
   376  00001D                     ___lwdiv@counter:
   377                           	opt stack 0
   378  00001D                     ___lwmod@counter:
   379                           	opt stack 0
   380                           
   381                           ; 1 bytes @ 0x1C
   382  00001D                     	ds	1
   383  00001E                     ??___ftpack:
   384  00001E                     TM1640_Writer_Dates@Date:
   385                           	opt stack 0
   386  00001E                     ___lwdiv@quotient:
   387                           	opt stack 0
   388                           
   389                           ; 2 bytes @ 0x1D
   390  00001E                     	ds	1
   391  00001F                     TM1640_Writer_Dates@Addr:
   392                           	opt stack 0
   393                           
   394                           ; 1 bytes @ 0x1E
   395  00001F                     	ds	1
   396  000020                     TM1640_Show_integer@Numbers:
   397                           	opt stack 0
   398                           
   399                           ; 2 bytes @ 0x1F
   400  000020                     	ds	1
   401  000021                     ?___lwtoft:
   402                           	opt stack 0
   403  000021                     ___lwtoft@c:
   404                           	opt stack 0
   405                           
   406                           ; 2 bytes @ 0x20
   407  000021                     	ds	1
   408  000022                     
   409                           ; 0 bytes @ 0x21
   410  000022                     	ds	2
   411  000024                     ?___ftmul:
   412                           	opt stack 0
   413  000024                     ___ftmul@f1:
   414                           	opt stack 0
   415                           
   416                           ; 3 bytes @ 0x23
   417  000024                     	ds	3
   418  000027                     ___ftmul@f2:
   419                           	opt stack 0
   420                           
   421                           ; 3 bytes @ 0x26
   422  000027                     	ds	3
   423  00002A                     ??___ftmul:
   424                           
   425                           ; 0 bytes @ 0x29
   426  00002A                     	ds	3
   427  00002D                     tblptru	equ	0xFF8
   428                           tblptrh	equ	0xFF7
   429                           postinc0	equ	0xFEE
   430                           wreg	equ	0xFE8
   431                           
   432                           ; 0 bytes @ 0x2C
   433 ;;
   434 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   435 ;;
   436 ;; *************** function _main *****************
   437 ;; Defined at:
   438 ;;		line 37 in file "_01_USER/main.c"
   439 ;; Parameters:    Size  Location     Type
   440 ;;		None
   441 ;; Auto vars:     Size  Location     Type
   442 ;;  num             3   21[BANK0 ] float 
   443 ;; Return value:  Size  Location     Type
   444 ;;                  2   18[None  ] int 
   445 ;; Registers used:
   446 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   447 ;; Tracked objects:
   448 ;;		On entry : 0/0
   449 ;;		On exit  : 0/0
   450 ;;		Unchanged: 0/0
   451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   453 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   455 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   456 ;;Total ram usage:        3 bytes
   457 ;; Hardware stack levels required when called:    8
   458 ;; This function calls:
   459 ;;		_ADC6_Init
   460 ;;		_GPIO_Config
   461 ;;		_Init_TM1640
   462 ;;		_Key_Init
   463 ;;		_RS485_Init
   464 ;;		_Run
   465 ;;		_Show_Result
   466 ;;		_Timer0_Init
   467 ;; This function is called by:
   468 ;;		Startup code after reset
   469 ;; This function uses a non-reentrant model
   470 ;;
   471                           
   472                           	psect	text0
   473  0018B6                     __ptext0:
   474                           	opt stack 0
   475  0018B6                     _main:
   476                           	opt stack 23
   477                           
   478                           ;main.c: 40: float num = 0;
   479                           
   480                           ;incstack = 0
   481  0018B6  0E00               	movlw	0
   482  0018B8  0100               	movlb	0	; () banked
   483  0018BA  6F75               	movwf	main@num& (0+255),b
   484  0018BC  0E00               	movlw	0
   485  0018BE  0100               	movlb	0	; () banked
   486  0018C0  6F76               	movwf	(main@num+1)& (0+255),b
   487  0018C2  0E00               	movlw	0
   488  0018C4  0100               	movlb	0	; () banked
   489  0018C6  6F77               	movwf	(main@num+2)& (0+255),b
   490                           
   491                           ; BSR set to: 0
   492                           ;main.c: 43: GPIO_Config();
   493  0018C8  ECBB  F00D         	call	_GPIO_Config	;wreg free
   494                           
   495                           ;main.c: 44: Key_Init();
   496  0018CC  ECC1  F00D         	call	_Key_Init	;wreg free
   497                           
   498                           ;main.c: 45: Timer0_Init();
   499  0018D0  EC1E  F00D         	call	_Timer0_Init	;wreg free
   500                           
   501                           ;main.c: 46: Init_TM1640();
   502  0018D4  EC0B  F00D         	call	_Init_TM1640	;wreg free
   503                           
   504                           ;main.c: 47: ADC6_Init();
   505  0018D8  EC9C  F00D         	call	_ADC6_Init	;wreg free
   506                           
   507                           ;main.c: 48: RS485_Init();
   508  0018DC  EC65  F00D         	call	_RS485_Init	;wreg free
   509  0018E0  D000               	goto	l2567
   510  0018E2                     l2567:
   511                           
   512                           ;main.c: 52: {
   513                           ;main.c: 53: Run();
   514  0018E2  EC1D  F00C         	call	_Run	;wreg free
   515                           
   516                           ;main.c: 54: Show_Result();
   517  0018E6  ECAD  F00D         	call	_Show_Result	;wreg free
   518  0018EA  D7FB               	goto	l2567
   519                           
   520                           ;main.c: 56: }
   521                           ;main.c: 59: return 0;
   522                           ;	Return value of _main is never used
   523  0018EC  EFA7  F000         	goto	start
   524  0018F0                     __end_of_main:
   525                           	opt stack 0
   526                           tblptru	equ	0xFF8
   527                           tblptrh	equ	0xFF7
   528                           postinc0	equ	0xFEE
   529                           wreg	equ	0xFE8
   530                           
   531 ;; *************** function _Timer0_Init *****************
   532 ;; Defined at:
   533 ;;		line 42 in file "_01_USER/My_Timer.c"
   534 ;; Parameters:    Size  Location     Type
   535 ;;		None
   536 ;; Auto vars:     Size  Location     Type
   537 ;;		None
   538 ;; Return value:  Size  Location     Type
   539 ;;		None               void
   540 ;; Registers used:
   541 ;;		wreg, status,2, status,0, cstack
   542 ;; Tracked objects:
   543 ;;		On entry : 0/0
   544 ;;		On exit  : 0/0
   545 ;;		Unchanged: 0/0
   546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   551 ;;Total ram usage:        0 bytes
   552 ;; Hardware stack levels used:    1
   553 ;; Hardware stack levels required when called:    4
   554 ;; This function calls:
   555 ;;		_SetTimer0
   556 ;; This function is called by:
   557 ;;		_main
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561                           	psect	text1
   562  001A3C                     __ptext1:
   563                           	opt stack 0
   564  001A3C                     _Timer0_Init:
   565                           	opt stack 26
   566                           
   567                           ;My_Timer.c: 44: T08BIT = 0;
   568                           
   569                           ;incstack = 0
   570  001A3C  9CD5               	bcf	4053,6,c	;volatile
   571                           
   572                           ;My_Timer.c: 45: T0CS = 0;
   573  001A3E  9AD5               	bcf	4053,5,c	;volatile
   574                           
   575                           ;My_Timer.c: 46: T0SE = 0;
   576  001A40  98D5               	bcf	4053,4,c	;volatile
   577                           
   578                           ;My_Timer.c: 47: PSA = 0;
   579  001A42  96D5               	bcf	4053,3,c	;volatile
   580                           
   581                           ;My_Timer.c: 48: T0PS2 = 1;
   582  001A44  84D5               	bsf	4053,2,c	;volatile
   583                           
   584                           ;My_Timer.c: 49: T0PS1 = 1;
   585  001A46  82D5               	bsf	4053,1,c	;volatile
   586                           
   587                           ;My_Timer.c: 50: T0PS0 = 1;
   588  001A48  80D5               	bsf	4053,0,c	;volatile
   589                           
   590                           ;My_Timer.c: 64: SetTimer0(1);
   591  001A4A  0E00               	movlw	0
   592  001A4C  6E1A               	movwf	SetTimer0@_tmr+1,c
   593  001A4E  0E01               	movlw	1
   594  001A50  6E19               	movwf	SetTimer0@_tmr,c
   595  001A52  ECB1  F00C         	call	_SetTimer0	;wreg free
   596                           
   597                           ;My_Timer.c: 65: TMR0ON = 1;
   598  001A56  8ED5               	bsf	4053,7,c	;volatile
   599                           
   600                           ;My_Timer.c: 66: TMR0IE = 1;
   601  001A58  8AF2               	bsf	intcon,5,c	;volatile
   602                           
   603                           ;My_Timer.c: 67: IPEN = 0;GIE = 1;
   604  001A5A  9ED0               	bcf	4048,7,c	;volatile
   605  001A5C  8EF2               	bsf	intcon,7,c	;volatile
   606  001A5E  0012               	return		;funcret
   607  001A60                     __end_of_Timer0_Init:
   608                           	opt stack 0
   609                           tblptru	equ	0xFF8
   610                           tblptrh	equ	0xFF7
   611                           intcon	equ	0xFF2
   612                           postinc0	equ	0xFEE
   613                           wreg	equ	0xFE8
   614                           
   615 ;; *************** function _SetTimer0 *****************
   616 ;; Defined at:
   617 ;;		line 80 in file "_01_USER/My_Timer.c"
   618 ;; Parameters:    Size  Location     Type
   619 ;;  _tmr            2   24[COMRAM] unsigned int 
   620 ;; Auto vars:     Size  Location     Type
   621 ;;		None
   622 ;; Return value:  Size  Location     Type
   623 ;;		None               void
   624 ;; Registers used:
   625 ;;		wreg, status,2, status,0
   626 ;; Tracked objects:
   627 ;;		On entry : 0/0
   628 ;;		On exit  : 0/0
   629 ;;		Unchanged: 0/0
   630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   631 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   633 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   634 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   635 ;;Total ram usage:        4 bytes
   636 ;; Hardware stack levels used:    1
   637 ;; Hardware stack levels required when called:    3
   638 ;; This function calls:
   639 ;;		Nothing
   640 ;; This function is called by:
   641 ;;		_Timer0_Init
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645                           	psect	text2
   646  001962                     __ptext2:
   647                           	opt stack 0
   648  001962                     _SetTimer0:
   649                           	opt stack 26
   650                           
   651                           ;My_Timer.c: 82: if(_tmr > 0xffff) _tmr = 0xffff;
   652                           
   653                           ;incstack = 0
   654  001962  D003               	goto	l2451
   655  001964  6819               	setf	SetTimer0@_tmr,c
   656  001966  681A               	setf	SetTimer0@_tmr+1,c
   657  001968  D000               	goto	l2451
   658  00196A                     l2451:
   659                           
   660                           ;My_Timer.c: 83: _tmr=0xffff-_tmr;
   661  00196A  C019  F01B         	movff	SetTimer0@_tmr,??_SetTimer0
   662  00196E  C01A  F01C         	movff	SetTimer0@_tmr+1,??_SetTimer0+1
   663  001972  1E1B               	comf	??_SetTimer0,f,c
   664  001974  1E1C               	comf	??_SetTimer0+1,f,c
   665  001976  4A1B               	infsnz	??_SetTimer0,f,c
   666  001978  2A1C               	incf	??_SetTimer0+1,f,c
   667  00197A  0EFF               	movlw	255
   668  00197C  241B               	addwf	??_SetTimer0,w,c
   669  00197E  6E19               	movwf	SetTimer0@_tmr,c
   670  001980  0EFF               	movlw	255
   671  001982  201C               	addwfc	??_SetTimer0+1,w,c
   672  001984  6E1A               	movwf	SetTimer0@_tmr+1,c
   673                           
   674                           ;My_Timer.c: 84: TMR0H = _tmr/256;
   675  001986  501A               	movf	SetTimer0@_tmr+1,w,c
   676  001988  6ED7               	movwf	4055,c	;volatile
   677                           
   678                           ;My_Timer.c: 85: TMR0L = _tmr%256;
   679  00198A  C019  FFD6         	movff	SetTimer0@_tmr,4054	;volatile
   680                           
   681                           ;My_Timer.c: 86: TMR0IF = 0;
   682  00198E  94F2               	bcf	intcon,2,c	;volatile
   683  001990  0012               	return		;funcret
   684  001992                     __end_of_SetTimer0:
   685                           	opt stack 0
   686                           tblptru	equ	0xFF8
   687                           tblptrh	equ	0xFF7
   688                           intcon	equ	0xFF2
   689                           postinc0	equ	0xFEE
   690                           wreg	equ	0xFE8
   691                           
   692 ;; *************** function _Show_Result *****************
   693 ;; Defined at:
   694 ;;		line 98 in file "_01_USER/Run.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;		None
   697 ;; Auto vars:     Size  Location     Type
   698 ;;		None
   699 ;; Return value:  Size  Location     Type
   700 ;;		None               void
   701 ;; Registers used:
   702 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   703 ;; Tracked objects:
   704 ;;		On entry : 0/0
   705 ;;		On exit  : 0/0
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   712 ;;Total ram usage:        0 bytes
   713 ;; Hardware stack levels used:    1
   714 ;; Hardware stack levels required when called:    7
   715 ;; This function calls:
   716 ;;		_TM1640_Show_integer
   717 ;; This function is called by:
   718 ;;		_main
   719 ;; This function uses a non-reentrant model
   720 ;;
   721                           
   722                           	psect	text3
   723  001B5A                     __ptext3:
   724                           	opt stack 0
   725  001B5A                     _Show_Result:
   726                           	opt stack 23
   727                           
   728                           ;Run.c: 102: TM1640_Show_integer( USART2_TendBuff );
   729                           
   730                           ;incstack = 0
   731  001B5A  C039  F020         	movff	_USART2_TendBuff,TM1640_Show_integer@Numbers
   732  001B5E  C03A  F021         	movff	_USART2_TendBuff+1,TM1640_Show_integer@Numbers+1
   733  001B62  EC49  F009         	call	_TM1640_Show_integer	;wreg free
   734  001B66  0012               	return		;funcret
   735  001B68                     __end_of_Show_Result:
   736                           	opt stack 0
   737                           tblptru	equ	0xFF8
   738                           tblptrh	equ	0xFF7
   739                           intcon	equ	0xFF2
   740                           postinc0	equ	0xFEE
   741                           wreg	equ	0xFE8
   742                           
   743 ;; *************** function _TM1640_Show_integer *****************
   744 ;; Defined at:
   745 ;;		line 55 in file "_01_USER/TM1640.c"
   746 ;; Parameters:    Size  Location     Type
   747 ;;  Numbers         2   31[COMRAM] unsigned int 
   748 ;; Auto vars:     Size  Location     Type
   749 ;;		None
   750 ;; Return value:  Size  Location     Type
   751 ;;		None               void
   752 ;; Registers used:
   753 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   754 ;; Tracked objects:
   755 ;;		On entry : 0/0
   756 ;;		On exit  : 0/0
   757 ;;		Unchanged: 0/0
   758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   759 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   762 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   763 ;;Total ram usage:        2 bytes
   764 ;; Hardware stack levels used:    1
   765 ;; Hardware stack levels required when called:    6
   766 ;; This function calls:
   767 ;;		_TM1640_Writer_Dates
   768 ;;		___lwdiv
   769 ;;		___lwmod
   770 ;; This function is called by:
   771 ;;		_Show_Result
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           	psect	text4
   776  001292                     __ptext4:
   777                           	opt stack 0
   778  001292                     _TM1640_Show_integer:
   779                           	opt stack 23
   780                           
   781                           ;TM1640.c: 58: TM1640_Writer_Dates(3,LED_Number[Numbers%10]); Numbers/=10;
   782                           
   783                           ;incstack = 0
   784  001292  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
   785  001296  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
   786  00129A  0E00               	movlw	0
   787  00129C  6E1C               	movwf	___lwmod@divisor+1,c
   788  00129E  0E0A               	movlw	10
   789  0012A0  6E1B               	movwf	___lwmod@divisor,c
   790  0012A2  ECF7  F00B         	call	___lwmod	;wreg free
   791  0012A6  0E01               	movlw	low _LED_Number
   792  0012A8  2419               	addwf	?___lwmod,w,c
   793  0012AA  6EF6               	movwf	tblptrl,c
   794  0012AC  0E10               	movlw	high _LED_Number
   795  0012AE  201A               	addwfc	?___lwmod+1,w,c
   796  0012B0  6EF7               	movwf	tblptrh,c
   797  0012B2                     	if	0	;There are less than 3 active tblptr bytes
   798  0012B2                     	endif
   799  0012B2  0008               	tblrd		*
   800  0012B4  CFF5 F01E          	movff	tablat,TM1640_Writer_Dates@Date
   801  0012B8  0E03               	movlw	3
   802  0012BA  EC54  F00D         	call	_TM1640_Writer_Dates
   803  0012BE  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
   804  0012C2  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
   805  0012C6  0E00               	movlw	0
   806  0012C8  6E1C               	movwf	___lwdiv@divisor+1,c
   807  0012CA  0E0A               	movlw	10
   808  0012CC  6E1B               	movwf	___lwdiv@divisor,c
   809  0012CE  ECA2  F00B         	call	___lwdiv	;wreg free
   810  0012D2  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
   811  0012D6  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
   812                           
   813                           ;TM1640.c: 59: TM1640_Writer_Dates(2,LED_Number[Numbers%10]); Numbers/=10;
   814  0012DA  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
   815  0012DE  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
   816  0012E2  0E00               	movlw	0
   817  0012E4  6E1C               	movwf	___lwmod@divisor+1,c
   818  0012E6  0E0A               	movlw	10
   819  0012E8  6E1B               	movwf	___lwmod@divisor,c
   820  0012EA  ECF7  F00B         	call	___lwmod	;wreg free
   821  0012EE  0E01               	movlw	low _LED_Number
   822  0012F0  2419               	addwf	?___lwmod,w,c
   823  0012F2  6EF6               	movwf	tblptrl,c
   824  0012F4  0E10               	movlw	high _LED_Number
   825  0012F6  201A               	addwfc	?___lwmod+1,w,c
   826  0012F8  6EF7               	movwf	tblptrh,c
   827  0012FA                     	if	0	;There are less than 3 active tblptr bytes
   828  0012FA                     	endif
   829  0012FA  0008               	tblrd		*
   830  0012FC  CFF5 F01E          	movff	tablat,TM1640_Writer_Dates@Date
   831  001300  0E02               	movlw	2
   832  001302  EC54  F00D         	call	_TM1640_Writer_Dates
   833  001306  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
   834  00130A  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
   835  00130E  0E00               	movlw	0
   836  001310  6E1C               	movwf	___lwdiv@divisor+1,c
   837  001312  0E0A               	movlw	10
   838  001314  6E1B               	movwf	___lwdiv@divisor,c
   839  001316  ECA2  F00B         	call	___lwdiv	;wreg free
   840  00131A  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
   841  00131E  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
   842                           
   843                           ;TM1640.c: 60: TM1640_Writer_Dates(1,LED_Number[Numbers%10]); Numbers/=10;
   844  001322  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
   845  001326  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
   846  00132A  0E00               	movlw	0
   847  00132C  6E1C               	movwf	___lwmod@divisor+1,c
   848  00132E  0E0A               	movlw	10
   849  001330  6E1B               	movwf	___lwmod@divisor,c
   850  001332  ECF7  F00B         	call	___lwmod	;wreg free
   851  001336  0E01               	movlw	low _LED_Number
   852  001338  2419               	addwf	?___lwmod,w,c
   853  00133A  6EF6               	movwf	tblptrl,c
   854  00133C  0E10               	movlw	high _LED_Number
   855  00133E  201A               	addwfc	?___lwmod+1,w,c
   856  001340  6EF7               	movwf	tblptrh,c
   857  001342                     	if	0	;There are less than 3 active tblptr bytes
   858  001342                     	endif
   859  001342  0008               	tblrd		*
   860  001344  CFF5 F01E          	movff	tablat,TM1640_Writer_Dates@Date
   861  001348  0E01               	movlw	1
   862  00134A  EC54  F00D         	call	_TM1640_Writer_Dates
   863  00134E  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
   864  001352  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
   865  001356  0E00               	movlw	0
   866  001358  6E1C               	movwf	___lwdiv@divisor+1,c
   867  00135A  0E0A               	movlw	10
   868  00135C  6E1B               	movwf	___lwdiv@divisor,c
   869  00135E  ECA2  F00B         	call	___lwdiv	;wreg free
   870  001362  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
   871  001366  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
   872                           
   873                           ;TM1640.c: 61: TM1640_Writer_Dates(0,LED_Number[Numbers%10]);
   874  00136A  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
   875  00136E  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
   876  001372  0E00               	movlw	0
   877  001374  6E1C               	movwf	___lwmod@divisor+1,c
   878  001376  0E0A               	movlw	10
   879  001378  6E1B               	movwf	___lwmod@divisor,c
   880  00137A  ECF7  F00B         	call	___lwmod	;wreg free
   881  00137E  0E01               	movlw	low _LED_Number
   882  001380  2419               	addwf	?___lwmod,w,c
   883  001382  6EF6               	movwf	tblptrl,c
   884  001384  0E10               	movlw	high _LED_Number
   885  001386  201A               	addwfc	?___lwmod+1,w,c
   886  001388  6EF7               	movwf	tblptrh,c
   887  00138A                     	if	0	;There are less than 3 active tblptr bytes
   888  00138A                     	endif
   889  00138A  0008               	tblrd		*
   890  00138C  CFF5 F01E          	movff	tablat,TM1640_Writer_Dates@Date
   891  001390  0E00               	movlw	0
   892  001392  EC54  F00D         	call	_TM1640_Writer_Dates
   893  001396  0012               	return		;funcret
   894  001398                     __end_of_TM1640_Show_integer:
   895                           	opt stack 0
   896                           tblptru	equ	0xFF8
   897                           tblptrh	equ	0xFF7
   898                           tblptrl	equ	0xFF6
   899                           tablat	equ	0xFF5
   900                           intcon	equ	0xFF2
   901                           postinc0	equ	0xFEE
   902                           wreg	equ	0xFE8
   903                           
   904 ;; *************** function ___lwmod *****************
   905 ;; Defined at:
   906 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;  dividend        2   24[COMRAM] unsigned int 
   909 ;;  divisor         2   26[COMRAM] unsigned int 
   910 ;; Auto vars:     Size  Location     Type
   911 ;;  counter         1   28[COMRAM] unsigned char 
   912 ;; Return value:  Size  Location     Type
   913 ;;                  2   24[COMRAM] unsigned int 
   914 ;; Registers used:
   915 ;;		wreg, status,2, status,0
   916 ;; Tracked objects:
   917 ;;		On entry : 0/0
   918 ;;		On exit  : 0/0
   919 ;;		Unchanged: 0/0
   920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   921 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   922 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   924 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   925 ;;Total ram usage:        5 bytes
   926 ;; Hardware stack levels used:    1
   927 ;; Hardware stack levels required when called:    3
   928 ;; This function calls:
   929 ;;		Nothing
   930 ;; This function is called by:
   931 ;;		_TM1640_Show_integer
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935                           	psect	text5
   936  0017EE                     __ptext5:
   937                           	opt stack 0
   938  0017EE                     ___lwmod:
   939                           	opt stack 25
   940                           
   941                           ;incstack = 0
   942  0017EE  501B               	movf	___lwmod@divisor,w,c
   943  0017F0  101C               	iorwf	___lwmod@divisor+1,w,c
   944  0017F2  B4D8               	btfsc	status,2,c
   945  0017F4  D01D               	goto	l968
   946  0017F6  0E01               	movlw	1
   947  0017F8  6E1D               	movwf	___lwmod@counter,c
   948  0017FA  D005               	goto	l2393
   949  0017FC                     l2391:
   950  0017FC  90D8               	bcf	status,0,c
   951  0017FE  361B               	rlcf	___lwmod@divisor,f,c
   952  001800  361C               	rlcf	___lwmod@divisor+1,f,c
   953  001802  2A1D               	incf	___lwmod@counter,f,c
   954  001804  D000               	goto	l2393
   955  001806                     l2393:
   956  001806  BE1C               	btfsc	___lwmod@divisor+1,7,c
   957  001808  D002               	goto	l2395
   958  00180A  D7F8               	goto	l2391
   959  00180C  D000               	goto	l2395
   960  00180E                     l2395:
   961  00180E  501B               	movf	___lwmod@divisor,w,c
   962  001810  5C19               	subwf	___lwmod@dividend,w,c
   963  001812  501C               	movf	___lwmod@divisor+1,w,c
   964  001814  581A               	subwfb	___lwmod@dividend+1,w,c
   965  001816  A0D8               	btfss	status,0,c
   966  001818  D005               	goto	l2399
   967  00181A  501B               	movf	___lwmod@divisor,w,c
   968  00181C  5E19               	subwf	___lwmod@dividend,f,c
   969  00181E  501C               	movf	___lwmod@divisor+1,w,c
   970  001820  5A1A               	subwfb	___lwmod@dividend+1,f,c
   971  001822  D000               	goto	l2399
   972  001824                     l2399:
   973  001824  90D8               	bcf	status,0,c
   974  001826  321C               	rrcf	___lwmod@divisor+1,f,c
   975  001828  321B               	rrcf	___lwmod@divisor,f,c
   976  00182A  2E1D               	decfsz	___lwmod@counter,f,c
   977  00182C  D7F0               	goto	l2395
   978  00182E  D000               	goto	l968
   979  001830                     l968:
   980  001830  C019  F019         	movff	___lwmod@dividend,?___lwmod
   981  001834  C01A  F01A         	movff	___lwmod@dividend+1,?___lwmod+1
   982  001838  0012               	return		;funcret
   983  00183A                     __end_of___lwmod:
   984                           	opt stack 0
   985                           tblptru	equ	0xFF8
   986                           tblptrh	equ	0xFF7
   987                           tblptrl	equ	0xFF6
   988                           tablat	equ	0xFF5
   989                           intcon	equ	0xFF2
   990                           postinc0	equ	0xFEE
   991                           wreg	equ	0xFE8
   992                           status	equ	0xFD8
   993                           
   994 ;; *************** function ___lwdiv *****************
   995 ;; Defined at:
   996 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
   997 ;; Parameters:    Size  Location     Type
   998 ;;  dividend        2   24[COMRAM] unsigned int 
   999 ;;  divisor         2   26[COMRAM] unsigned int 
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;  quotient        2   29[COMRAM] unsigned int 
  1002 ;;  counter         1   28[COMRAM] unsigned char 
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  2   24[COMRAM] unsigned int 
  1005 ;; Registers used:
  1006 ;;		wreg, status,2, status,0
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1012 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1013 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1015 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1016 ;;Total ram usage:        7 bytes
  1017 ;; Hardware stack levels used:    1
  1018 ;; Hardware stack levels required when called:    3
  1019 ;; This function calls:
  1020 ;;		Nothing
  1021 ;; This function is called by:
  1022 ;;		_TM1640_Show_integer
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026                           	psect	text6
  1027  001744                     __ptext6:
  1028                           	opt stack 0
  1029  001744                     ___lwdiv:
  1030                           	opt stack 25
  1031                           
  1032                           ;incstack = 0
  1033  001744  0E00               	movlw	0
  1034  001746  6E1F               	movwf	___lwdiv@quotient+1,c
  1035  001748  0E00               	movlw	0
  1036  00174A  6E1E               	movwf	___lwdiv@quotient,c
  1037  00174C  501B               	movf	___lwdiv@divisor,w,c
  1038  00174E  101C               	iorwf	___lwdiv@divisor+1,w,c
  1039  001750  B4D8               	btfsc	status,2,c
  1040  001752  D021               	goto	l958
  1041  001754  0E01               	movlw	1
  1042  001756  6E1D               	movwf	___lwdiv@counter,c
  1043  001758  D005               	goto	l2373
  1044  00175A                     l2371:
  1045  00175A  90D8               	bcf	status,0,c
  1046  00175C  361B               	rlcf	___lwdiv@divisor,f,c
  1047  00175E  361C               	rlcf	___lwdiv@divisor+1,f,c
  1048  001760  2A1D               	incf	___lwdiv@counter,f,c
  1049  001762  D000               	goto	l2373
  1050  001764                     l2373:
  1051  001764  BE1C               	btfsc	___lwdiv@divisor+1,7,c
  1052  001766  D002               	goto	l2375
  1053  001768  D7F8               	goto	l2371
  1054  00176A  D000               	goto	l2375
  1055  00176C                     l2375:
  1056  00176C  90D8               	bcf	status,0,c
  1057  00176E  361E               	rlcf	___lwdiv@quotient,f,c
  1058  001770  361F               	rlcf	___lwdiv@quotient+1,f,c
  1059  001772  501B               	movf	___lwdiv@divisor,w,c
  1060  001774  5C19               	subwf	___lwdiv@dividend,w,c
  1061  001776  501C               	movf	___lwdiv@divisor+1,w,c
  1062  001778  581A               	subwfb	___lwdiv@dividend+1,w,c
  1063  00177A  A0D8               	btfss	status,0,c
  1064  00177C  D006               	goto	l2383
  1065  00177E  501B               	movf	___lwdiv@divisor,w,c
  1066  001780  5E19               	subwf	___lwdiv@dividend,f,c
  1067  001782  501C               	movf	___lwdiv@divisor+1,w,c
  1068  001784  5A1A               	subwfb	___lwdiv@dividend+1,f,c
  1069  001786  801E               	bsf	___lwdiv@quotient,0,c
  1070  001788  D000               	goto	l2383
  1071  00178A                     l2383:
  1072  00178A  90D8               	bcf	status,0,c
  1073  00178C  321C               	rrcf	___lwdiv@divisor+1,f,c
  1074  00178E  321B               	rrcf	___lwdiv@divisor,f,c
  1075  001790  2E1D               	decfsz	___lwdiv@counter,f,c
  1076  001792  D7EC               	goto	l2375
  1077  001794  D000               	goto	l958
  1078  001796                     l958:
  1079  001796  C01E  F019         	movff	___lwdiv@quotient,?___lwdiv
  1080  00179A  C01F  F01A         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1081  00179E  0012               	return		;funcret
  1082  0017A0                     __end_of___lwdiv:
  1083                           	opt stack 0
  1084                           tblptru	equ	0xFF8
  1085                           tblptrh	equ	0xFF7
  1086                           tblptrl	equ	0xFF6
  1087                           tablat	equ	0xFF5
  1088                           intcon	equ	0xFF2
  1089                           postinc0	equ	0xFEE
  1090                           wreg	equ	0xFE8
  1091                           status	equ	0xFD8
  1092                           
  1093 ;; *************** function _TM1640_Writer_Dates *****************
  1094 ;; Defined at:
  1095 ;;		line 66 in file "_01_USER/TM1640.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;  Addr            1    wreg     unsigned char 
  1098 ;;  Date            1   29[COMRAM] unsigned char 
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;  Addr            1   30[COMRAM] unsigned char 
  1101 ;; Return value:  Size  Location     Type
  1102 ;;		None               void
  1103 ;; Registers used:
  1104 ;;		wreg, status,2, status,0, cstack
  1105 ;; Tracked objects:
  1106 ;;		On entry : 0/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1110 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1111 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1113 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1114 ;;Total ram usage:        2 bytes
  1115 ;; Hardware stack levels used:    1
  1116 ;; Hardware stack levels required when called:    5
  1117 ;; This function calls:
  1118 ;;		_TM1640_Start
  1119 ;;		_TM1640_Stop
  1120 ;;		_TM1640_Writer_Byte
  1121 ;; This function is called by:
  1122 ;;		_TM1640_Show_integer
  1123 ;;		_TM1640_Show_Decimal
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           	psect	text7
  1128  001AA8                     __ptext7:
  1129                           	opt stack 0
  1130  001AA8                     _TM1640_Writer_Dates:
  1131                           	opt stack 23
  1132                           
  1133                           ;incstack = 0
  1134                           ;TM1640_Writer_Dates@Addr stored from wreg
  1135  001AA8  6E1F               	movwf	TM1640_Writer_Dates@Addr,c
  1136                           
  1137                           ;TM1640.c: 68: if((Addr >= 0) && (Addr <= 3))
  1138  001AAA  0E04               	movlw	4
  1139  001AAC  601F               	cpfslt	TM1640_Writer_Dates@Addr,c
  1140  001AAE  0012               	return	
  1141                           
  1142                           ;TM1640.c: 69: {
  1143                           ;TM1640.c: 70: TM1640_Start();
  1144  001AB0  EC42  F00D         	call	_TM1640_Start	;wreg free
  1145                           
  1146                           ;TM1640.c: 71: TM1640_Writer_Byte(0xC0 + Addr);
  1147  001AB4  501F               	movf	TM1640_Writer_Dates@Addr,w,c
  1148  001AB6  0FC0               	addlw	192
  1149  001AB8  EC3C  F00C         	call	_TM1640_Writer_Byte
  1150                           
  1151                           ;TM1640.c: 72: TM1640_Writer_Byte(Date);
  1152  001ABC  501E               	movf	TM1640_Writer_Dates@Date,w,c
  1153  001ABE  EC3C  F00C         	call	_TM1640_Writer_Byte
  1154                           
  1155                           ;TM1640.c: 73: TM1640_Stop();
  1156  001AC2  EC30  F00D         	call	_TM1640_Stop	;wreg free
  1157  001AC6  0012               	return	
  1158  001AC8  0012               	return		;funcret
  1159  001ACA                     __end_of_TM1640_Writer_Dates:
  1160                           	opt stack 0
  1161                           tblptru	equ	0xFF8
  1162                           tblptrh	equ	0xFF7
  1163                           tblptrl	equ	0xFF6
  1164                           tablat	equ	0xFF5
  1165                           intcon	equ	0xFF2
  1166                           postinc0	equ	0xFEE
  1167                           wreg	equ	0xFE8
  1168                           status	equ	0xFD8
  1169                           
  1170 ;; *************** function _Run *****************
  1171 ;; Defined at:
  1172 ;;		line 65 in file "_01_USER/Run.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;		None
  1175 ;; Auto vars:     Size  Location     Type
  1176 ;;		None
  1177 ;; Return value:  Size  Location     Type
  1178 ;;		None               void
  1179 ;; Registers used:
  1180 ;;		wreg, status,2, status,0, cstack
  1181 ;; Tracked objects:
  1182 ;;		On entry : 0/0
  1183 ;;		On exit  : 0/0
  1184 ;;		Unchanged: 0/0
  1185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1190 ;;Total ram usage:        0 bytes
  1191 ;; Hardware stack levels used:    1
  1192 ;; Hardware stack levels required when called:    6
  1193 ;; This function calls:
  1194 ;;		_Busy2USART
  1195 ;;		_Get_ADC6
  1196 ;; This function is called by:
  1197 ;;		_main
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           	psect	text8
  1202  00183A                     __ptext8:
  1203                           	opt stack 0
  1204  00183A                     _Run:
  1205                           	opt stack 24
  1206                           
  1207                           ;Run.c: 68: if( Handle_01_Switch.ADC6 ) Get_ADC6();
  1208                           
  1209                           ;incstack = 0
  1210  00183A  5035               	movf	_Handle_01_Switch+1,w,c
  1211  00183C  B4D8               	btfsc	status,2,c
  1212  00183E  D003               	goto	l2543
  1213  001840  EC6C  F00B         	call	_Get_ADC6	;wreg free
  1214  001844  D000               	goto	l2543
  1215  001846                     l2543:
  1216                           
  1217                           ;Run.c: 71: if ( Handle_01_Switch.Usart_OneDate )
  1218  001846  5036               	movf	_Handle_01_Switch+2,w,c
  1219  001848  B4D8               	btfsc	status,2,c
  1220  00184A  0012               	return	
  1221                           
  1222                           ;Run.c: 72: {
  1223                           ;Run.c: 73: Handle_01_Switch.Usart_OneDate = 0;
  1224  00184C  0E00               	movlw	0
  1225  00184E  6E36               	movwf	_Handle_01_Switch+2,c
  1226                           
  1227                           ;Run.c: 75: while( Busy2USART());
  1228  001850  D000               	goto	l2547
  1229  001852                     l2547:
  1230  001852  EC74  F00D         	call	_Busy2USART	;wreg free
  1231  001856  5019               	movf	?_Busy2USART,w,c
  1232  001858  101A               	iorwf	?_Busy2USART+1,w,c
  1233  00185A  A4D8               	btfss	status,2,c
  1234  00185C  D7FA               	goto	l2547
  1235                           
  1236                           ;Run.c: 76: RG3 = 0;
  1237  00185E  9686               	bcf	3974,3,c	;volatile
  1238                           
  1239                           ;Run.c: 77: TXREG2 = USART2_TendBuff;
  1240  001860  C039  FF1C         	movff	_USART2_TendBuff,3868	;volatile
  1241                           
  1242                           ;Run.c: 78: while( Busy2USART());
  1243  001864  D000               	goto	l2549
  1244  001866                     l2549:
  1245  001866  EC74  F00D         	call	_Busy2USART	;wreg free
  1246  00186A  5019               	movf	?_Busy2USART,w,c
  1247  00186C  101A               	iorwf	?_Busy2USART+1,w,c
  1248  00186E  A4D8               	btfss	status,2,c
  1249  001870  D7FA               	goto	l2549
  1250                           
  1251                           ;Run.c: 79: RG3 = 1;
  1252  001872  8686               	bsf	3974,3,c	;volatile
  1253  001874  0012               	return	
  1254  001876  0012               	return		;funcret
  1255  001878                     __end_of_Run:
  1256                           	opt stack 0
  1257                           tblptru	equ	0xFF8
  1258                           tblptrh	equ	0xFF7
  1259                           tblptrl	equ	0xFF6
  1260                           tablat	equ	0xFF5
  1261                           intcon	equ	0xFF2
  1262                           postinc0	equ	0xFEE
  1263                           wreg	equ	0xFE8
  1264                           status	equ	0xFD8
  1265                           
  1266 ;; *************** function _Get_ADC6 *****************
  1267 ;; Defined at:
  1268 ;;		line 67 in file "_01_USER/My_ADC.c"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;		None
  1271 ;; Auto vars:     Size  Location     Type
  1272 ;;		None
  1273 ;; Return value:  Size  Location     Type
  1274 ;;		None               void
  1275 ;; Registers used:
  1276 ;;		wreg, status,2, status,0, cstack
  1277 ;; Tracked objects:
  1278 ;;		On entry : 0/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1286 ;;Total ram usage:        0 bytes
  1287 ;; Hardware stack levels used:    1
  1288 ;; Hardware stack levels required when called:    5
  1289 ;; This function calls:
  1290 ;;		_BusyADC
  1291 ;;		_ConvertADC
  1292 ;;		_ReadADC
  1293 ;;		___ftdiv
  1294 ;;		___ftmul
  1295 ;;		___lwtoft
  1296 ;; This function is called by:
  1297 ;;		_Run
  1298 ;; This function uses a non-reentrant model
  1299 ;;
  1300                           
  1301                           	psect	text9
  1302  0016D8                     __ptext9:
  1303                           	opt stack 0
  1304  0016D8                     _Get_ADC6:
  1305                           	opt stack 24
  1306                           
  1307                           ;My_ADC.c: 69: ConvertADC();
  1308                           
  1309                           ;incstack = 0
  1310  0016D8  ECC6  F00D         	call	_ConvertADC	;wreg free
  1311                           
  1312                           ;My_ADC.c: 70: while(BusyADC());
  1313  0016DC  D000               	goto	l2483
  1314  0016DE                     l2483:
  1315  0016DE  ECB4  F00D         	call	_BusyADC	;wreg free
  1316  0016E2  0900               	iorlw	0
  1317  0016E4  A4D8               	btfss	status,2,c
  1318  0016E6  D7FB               	goto	l2483
  1319                           
  1320                           ;My_ADC.c: 71: ADC6_Buff =(unsigned int)ReadADC()*4.096f/4095.0f;
  1321  0016E8  0E12               	movlw	18
  1322  0016EA  6E27               	movwf	___ftmul@f2,c
  1323  0016EC  0E83               	movlw	131
  1324  0016EE  6E28               	movwf	___ftmul@f2+1,c
  1325  0016F0  0E40               	movlw	64
  1326  0016F2  6E29               	movwf	___ftmul@f2+2,c
  1327  0016F4  ECA5  F00D         	call	_ReadADC	;wreg free
  1328  0016F8  C019  F021         	movff	?_ReadADC,___lwtoft@c
  1329  0016FC  C01A  F022         	movff	?_ReadADC+1,___lwtoft@c+1
  1330  001700  ECF8  F00C         	call	___lwtoft	;wreg free
  1331  001704  C021  F024         	movff	?___lwtoft,___ftmul@f1
  1332  001708  C022  F025         	movff	?___lwtoft+1,___ftmul@f1+1
  1333  00170C  C023  F026         	movff	?___lwtoft+2,___ftmul@f1+2
  1334  001710  ECB2  F008         	call	___ftmul	;wreg free
  1335  001714  C024  F066         	movff	?___ftmul,___ftdiv@f1
  1336  001718  C025  F067         	movff	?___ftmul+1,___ftdiv@f1+1
  1337  00171C  C026  F068         	movff	?___ftmul+2,___ftdiv@f1+2
  1338  001720  0EF0               	movlw	240
  1339  001722  0100               	movlb	0	; () banked
  1340  001724  6F69               	movwf	___ftdiv@f2& (0+255),b
  1341  001726  0E7F               	movlw	127
  1342  001728  0100               	movlb	0	; () banked
  1343  00172A  6F6A               	movwf	(___ftdiv@f2+1)& (0+255),b
  1344  00172C  0E45               	movlw	69
  1345  00172E  0100               	movlb	0	; () banked
  1346  001730  6F6B               	movwf	(___ftdiv@f2+2)& (0+255),b
  1347  001732  EC09  F008         	call	___ftdiv	;wreg free
  1348  001736  C066  F031         	movff	?___ftdiv,_ADC6_Buff	;volatile
  1349  00173A  C067  F032         	movff	?___ftdiv+1,_ADC6_Buff+1	;volatile
  1350  00173E  C068  F033         	movff	?___ftdiv+2,_ADC6_Buff+2	;volatile
  1351  001742  0012               	return		;funcret
  1352  001744                     __end_of_Get_ADC6:
  1353                           	opt stack 0
  1354                           tblptru	equ	0xFF8
  1355                           tblptrh	equ	0xFF7
  1356                           tblptrl	equ	0xFF6
  1357                           tablat	equ	0xFF5
  1358                           intcon	equ	0xFF2
  1359                           postinc0	equ	0xFEE
  1360                           wreg	equ	0xFE8
  1361                           status	equ	0xFD8
  1362                           
  1363 ;; *************** function ___lwtoft *****************
  1364 ;; Defined at:
  1365 ;;		line 28 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  1366 ;; Parameters:    Size  Location     Type
  1367 ;;  c               2   32[COMRAM] unsigned int 
  1368 ;; Auto vars:     Size  Location     Type
  1369 ;;		None
  1370 ;; Return value:  Size  Location     Type
  1371 ;;                  3   32[COMRAM] float 
  1372 ;; Registers used:
  1373 ;;		wreg, status,2, status,0, cstack
  1374 ;; Tracked objects:
  1375 ;;		On entry : 0/0
  1376 ;;		On exit  : 0/0
  1377 ;;		Unchanged: 0/0
  1378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1379 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1382 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1383 ;;Total ram usage:        3 bytes
  1384 ;; Hardware stack levels used:    1
  1385 ;; Hardware stack levels required when called:    4
  1386 ;; This function calls:
  1387 ;;		___ftpack
  1388 ;; This function is called by:
  1389 ;;		_Get_ADC6
  1390 ;; This function uses a non-reentrant model
  1391 ;;
  1392                           
  1393                           	psect	text10
  1394  0019F0                     __ptext10:
  1395                           	opt stack 0
  1396  0019F0                     ___lwtoft:
  1397                           	opt stack 24
  1398                           
  1399                           ;incstack = 0
  1400  0019F0  C021  F019         	movff	___lwtoft@c,___ftpack@arg
  1401  0019F4  C022  F01A         	movff	___lwtoft@c+1,___ftpack@arg+1
  1402  0019F8  6A1B               	clrf	___ftpack@arg+2,c
  1403  0019FA  0E8E               	movlw	142
  1404  0019FC  6E1C               	movwf	___ftpack@exp,c
  1405  0019FE  0E00               	movlw	0
  1406  001A00  6E1D               	movwf	___ftpack@sign,c
  1407  001A02  EC4D  F00A         	call	___ftpack	;wreg free
  1408  001A06  C019  F021         	movff	?___ftpack,?___lwtoft
  1409  001A0A  C01A  F022         	movff	?___ftpack+1,?___lwtoft+1
  1410  001A0E  C01B  F023         	movff	?___ftpack+2,?___lwtoft+2
  1411  001A12  0012               	return	
  1412  001A14  0012               	return		;funcret
  1413  001A16                     __end_of___lwtoft:
  1414                           	opt stack 0
  1415                           tblptru	equ	0xFF8
  1416                           tblptrh	equ	0xFF7
  1417                           tblptrl	equ	0xFF6
  1418                           tablat	equ	0xFF5
  1419                           intcon	equ	0xFF2
  1420                           postinc0	equ	0xFEE
  1421                           wreg	equ	0xFE8
  1422                           status	equ	0xFD8
  1423                           
  1424 ;; *************** function ___ftmul *****************
  1425 ;; Defined at:
  1426 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;  f1              3   35[COMRAM] float 
  1429 ;;  f2              3   38[COMRAM] float 
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;  f3_as_produc    3    1[BANK0 ] unsigned um
  1432 ;;  sign            1    5[BANK0 ] unsigned char 
  1433 ;;  cntr            1    4[BANK0 ] unsigned char 
  1434 ;;  exp             1    0[BANK0 ] unsigned char 
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  3   35[COMRAM] float 
  1437 ;; Registers used:
  1438 ;;		wreg, status,2, status,0, cstack
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1444 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1445 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1446 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1447 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1448 ;;Total ram usage:       15 bytes
  1449 ;; Hardware stack levels used:    1
  1450 ;; Hardware stack levels required when called:    4
  1451 ;; This function calls:
  1452 ;;		___ftpack
  1453 ;; This function is called by:
  1454 ;;		_Get_ADC6
  1455 ;;		_TM1640_Show_Decimal
  1456 ;; This function uses a non-reentrant model
  1457 ;;
  1458                           
  1459                           	psect	text11
  1460  001164                     __ptext11:
  1461                           	opt stack 0
  1462  001164                     ___ftmul:
  1463                           	opt stack 24
  1464                           
  1465                           ;incstack = 0
  1466  001164  C026  F02A         	movff	___ftmul@f1+2,??___ftmul
  1467  001168  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  1468  00116A  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  1469  00116C  3425               	rlcf	___ftmul@f1+1,w,c
  1470  00116E  362A               	rlcf	??___ftmul& (0+255),f,c
  1471  001170  E301               	bnc	u1851
  1472  001172  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  1473  001174                     u1851:
  1474  001174  502A               	movf	??___ftmul,w,c
  1475  001176  0100               	movlb	0	; () banked
  1476  001178  6F60               	movwf	___ftmul@exp& (0+255),b
  1477  00117A  0100               	movlb	0	; () banked
  1478  00117C  5160               	movf	___ftmul@exp& (0+255),w,b
  1479  00117E  A4D8               	btfss	status,2,c
  1480  001180  D007               	goto	l2323
  1481                           
  1482                           ; BSR set to: 0
  1483  001182  0E00               	movlw	0
  1484  001184  6E24               	movwf	?___ftmul,c
  1485  001186  0E00               	movlw	0
  1486  001188  6E25               	movwf	?___ftmul+1,c
  1487  00118A  0E00               	movlw	0
  1488  00118C  6E26               	movwf	?___ftmul+2,c
  1489                           
  1490                           ; BSR set to: 0
  1491  00118E  0012               	return	
  1492  001190                     l2323:
  1493                           
  1494                           ; BSR set to: 0
  1495  001190  C029  F02A         	movff	___ftmul@f2+2,??___ftmul
  1496  001194  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  1497  001196  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  1498  001198  3428               	rlcf	___ftmul@f2+1,w,c
  1499  00119A  362A               	rlcf	??___ftmul& (0+255),f,c
  1500  00119C  E301               	bnc	u1871
  1501  00119E  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  1502  0011A0                     u1871:
  1503  0011A0  502A               	movf	??___ftmul,w,c
  1504  0011A2  0100               	movlb	0	; () banked
  1505  0011A4  6F65               	movwf	___ftmul@sign& (0+255),b
  1506  0011A6  0100               	movlb	0	; () banked
  1507  0011A8  5165               	movf	___ftmul@sign& (0+255),w,b
  1508  0011AA  A4D8               	btfss	status,2,c
  1509  0011AC  D007               	goto	l2329
  1510                           
  1511                           ; BSR set to: 0
  1512  0011AE  0E00               	movlw	0
  1513  0011B0  6E24               	movwf	?___ftmul,c
  1514  0011B2  0E00               	movlw	0
  1515  0011B4  6E25               	movwf	?___ftmul+1,c
  1516  0011B6  0E00               	movlw	0
  1517  0011B8  6E26               	movwf	?___ftmul+2,c
  1518                           
  1519                           ; BSR set to: 0
  1520  0011BA  0012               	return	
  1521  0011BC                     l2329:
  1522                           
  1523                           ; BSR set to: 0
  1524  0011BC  0100               	movlb	0	; () banked
  1525  0011BE  5165               	movf	___ftmul@sign& (0+255),w,b
  1526  0011C0  0F7B               	addlw	123
  1527  0011C2  0100               	movlb	0	; () banked
  1528  0011C4  2760               	addwf	___ftmul@exp& (0+255),f,b
  1529                           
  1530                           ; BSR set to: 0
  1531  0011C6  C026  F065         	movff	___ftmul@f1+2,___ftmul@sign
  1532  0011CA  5029               	movf	___ftmul@f2+2,w,c
  1533  0011CC  0100               	movlb	0	; () banked
  1534  0011CE  1B65               	xorwf	___ftmul@sign& (0+255),f,b
  1535  0011D0  0E80               	movlw	128
  1536  0011D2  0100               	movlb	0	; () banked
  1537  0011D4  1765               	andwf	___ftmul@sign& (0+255),f,b
  1538                           
  1539                           ; BSR set to: 0
  1540  0011D6  8E25               	bsf	___ftmul@f1+1,7,c
  1541                           
  1542                           ; BSR set to: 0
  1543  0011D8  8E28               	bsf	___ftmul@f2+1,7,c
  1544                           
  1545                           ; BSR set to: 0
  1546  0011DA  0EFF               	movlw	255
  1547  0011DC  1627               	andwf	___ftmul@f2,f,c
  1548  0011DE  0EFF               	movlw	255
  1549  0011E0  1628               	andwf	___ftmul@f2+1,f,c
  1550  0011E2  0E00               	movlw	0
  1551  0011E4  1629               	andwf	___ftmul@f2+2,f,c
  1552                           
  1553                           ; BSR set to: 0
  1554  0011E6  0E00               	movlw	0
  1555  0011E8  0100               	movlb	0	; () banked
  1556  0011EA  6F61               	movwf	___ftmul@f3_as_product& (0+255),b
  1557  0011EC  0E00               	movlw	0
  1558  0011EE  0100               	movlb	0	; () banked
  1559  0011F0  6F62               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  1560  0011F2  0E00               	movlw	0
  1561  0011F4  0100               	movlb	0	; () banked
  1562  0011F6  6F63               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  1563                           
  1564                           ; BSR set to: 0
  1565  0011F8  0E07               	movlw	7
  1566  0011FA  0100               	movlb	0	; () banked
  1567  0011FC  6F64               	movwf	___ftmul@cntr& (0+255),b
  1568  0011FE  D000               	goto	l2343
  1569  001200                     l2343:
  1570                           
  1571                           ; BSR set to: 0
  1572  001200  A024               	btfss	___ftmul@f1,0,c
  1573  001202  D00A               	goto	l2347
  1574                           
  1575                           ; BSR set to: 0
  1576  001204  5027               	movf	___ftmul@f2,w,c
  1577  001206  0100               	movlb	0	; () banked
  1578  001208  2761               	addwf	___ftmul@f3_as_product& (0+255),f,b
  1579  00120A  5028               	movf	___ftmul@f2+1,w,c
  1580  00120C  0100               	movlb	0	; () banked
  1581  00120E  2362               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  1582  001210  5029               	movf	___ftmul@f2+2,w,c
  1583  001212  0100               	movlb	0	; () banked
  1584  001214  2363               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  1585  001216  D000               	goto	l2347
  1586  001218                     l2347:
  1587                           
  1588                           ; BSR set to: 0
  1589  001218  90D8               	bcf	status,0,c
  1590  00121A  3226               	rrcf	___ftmul@f1+2,f,c
  1591  00121C  3225               	rrcf	___ftmul@f1+1,f,c
  1592  00121E  3224               	rrcf	___ftmul@f1,f,c
  1593  001220  90D8               	bcf	status,0,c
  1594  001222  3627               	rlcf	___ftmul@f2,f,c
  1595  001224  3628               	rlcf	___ftmul@f2+1,f,c
  1596  001226  3629               	rlcf	___ftmul@f2+2,f,c
  1597                           
  1598                           ; BSR set to: 0
  1599  001228  0100               	movlb	0	; () banked
  1600  00122A  2F64               	decfsz	___ftmul@cntr& (0+255),f,b
  1601  00122C  D7E9               	goto	l2343
  1602  00122E  D000               	goto	l2351
  1603  001230                     l2351:
  1604                           
  1605                           ; BSR set to: 0
  1606  001230  0E09               	movlw	9
  1607  001232  0100               	movlb	0	; () banked
  1608  001234  6F64               	movwf	___ftmul@cntr& (0+255),b
  1609  001236  D000               	goto	l2353
  1610  001238                     l2353:
  1611                           
  1612                           ; BSR set to: 0
  1613  001238  A024               	btfss	___ftmul@f1,0,c
  1614  00123A  D00A               	goto	l2357
  1615                           
  1616                           ; BSR set to: 0
  1617  00123C  5027               	movf	___ftmul@f2,w,c
  1618  00123E  0100               	movlb	0	; () banked
  1619  001240  2761               	addwf	___ftmul@f3_as_product& (0+255),f,b
  1620  001242  5028               	movf	___ftmul@f2+1,w,c
  1621  001244  0100               	movlb	0	; () banked
  1622  001246  2362               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  1623  001248  5029               	movf	___ftmul@f2+2,w,c
  1624  00124A  0100               	movlb	0	; () banked
  1625  00124C  2363               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  1626  00124E  D000               	goto	l2357
  1627  001250                     l2357:
  1628                           
  1629                           ; BSR set to: 0
  1630  001250  90D8               	bcf	status,0,c
  1631  001252  3226               	rrcf	___ftmul@f1+2,f,c
  1632  001254  3225               	rrcf	___ftmul@f1+1,f,c
  1633  001256  3224               	rrcf	___ftmul@f1,f,c
  1634  001258  0100               	movlb	0	; () banked
  1635  00125A  90D8               	bcf	status,0,c
  1636  00125C  3363               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  1637  00125E  3362               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  1638  001260  3361               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  1639                           
  1640                           ; BSR set to: 0
  1641  001262  0100               	movlb	0	; () banked
  1642  001264  2F64               	decfsz	___ftmul@cntr& (0+255),f,b
  1643  001266  D7E8               	goto	l2353
  1644  001268  D000               	goto	l2361
  1645  00126A                     l2361:
  1646                           
  1647                           ; BSR set to: 0
  1648  00126A  C061  F019         	movff	___ftmul@f3_as_product,___ftpack@arg
  1649  00126E  C062  F01A         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1650  001272  C063  F01B         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1651  001276  C060  F01C         	movff	___ftmul@exp,___ftpack@exp
  1652  00127A  C065  F01D         	movff	___ftmul@sign,___ftpack@sign
  1653  00127E  EC4D  F00A         	call	___ftpack	;wreg free
  1654  001282  C019  F024         	movff	?___ftpack,?___ftmul
  1655  001286  C01A  F025         	movff	?___ftpack+1,?___ftmul+1
  1656  00128A  C01B  F026         	movff	?___ftpack+2,?___ftmul+2
  1657  00128E  0012               	return	
  1658  001290  0012               	return		;funcret
  1659  001292                     __end_of___ftmul:
  1660                           	opt stack 0
  1661                           tblptru	equ	0xFF8
  1662                           tblptrh	equ	0xFF7
  1663                           tblptrl	equ	0xFF6
  1664                           tablat	equ	0xFF5
  1665                           intcon	equ	0xFF2
  1666                           postinc0	equ	0xFEE
  1667                           wreg	equ	0xFE8
  1668                           status	equ	0xFD8
  1669                           
  1670 ;; *************** function ___ftdiv *****************
  1671 ;; Defined at:
  1672 ;;		line 54 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;  f1              3    6[BANK0 ] float 
  1675 ;;  f2              3    9[BANK0 ] float 
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;  f3              3   16[BANK0 ] float 
  1678 ;;  sign            1   20[BANK0 ] unsigned char 
  1679 ;;  exp             1   19[BANK0 ] unsigned char 
  1680 ;;  cntr            1   15[BANK0 ] unsigned char 
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  3    6[BANK0 ] float 
  1683 ;; Registers used:
  1684 ;;		wreg, status,2, status,0, cstack
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1690 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1691 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1692 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1693 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1694 ;;Total ram usage:       15 bytes
  1695 ;; Hardware stack levels used:    1
  1696 ;; Hardware stack levels required when called:    4
  1697 ;; This function calls:
  1698 ;;		___ftpack
  1699 ;; This function is called by:
  1700 ;;		_Get_ADC6
  1701 ;;		_TM1640_Show_Decimal
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           	psect	text12
  1706  001012                     __ptext12:
  1707                           	opt stack 0
  1708  001012                     ___ftdiv:
  1709                           	opt stack 24
  1710                           
  1711                           ;incstack = 0
  1712  001012  C068  F06C         	movff	___ftdiv@f1+2,??___ftdiv
  1713  001016  0100               	movlb	0	; () banked
  1714  001018  6B6D               	clrf	(??___ftdiv+1)& (0+255),b
  1715  00101A  6B6E               	clrf	(??___ftdiv+2)& (0+255),b
  1716  00101C  0100               	movlb	0	; () banked
  1717  00101E  3567               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  1718  001020  0100               	movlb	0	; () banked
  1719  001022  376C               	rlcf	??___ftdiv& (0+255),f,b
  1720  001024  E301               	bnc	u1801
  1721  001026  816D               	bsf	(??___ftdiv+1)& (0+255),0,b
  1722  001028                     u1801:
  1723  001028  0100               	movlb	0	; () banked
  1724  00102A  516C               	movf	??___ftdiv& (0+255),w,b
  1725  00102C  0100               	movlb	0	; () banked
  1726  00102E  6F73               	movwf	___ftdiv@exp& (0+255),b
  1727  001030  0100               	movlb	0	; () banked
  1728  001032  5173               	movf	___ftdiv@exp& (0+255),w,b
  1729  001034  A4D8               	btfss	status,2,c
  1730  001036  D00A               	goto	l2277
  1731                           
  1732                           ; BSR set to: 0
  1733  001038  0E00               	movlw	0
  1734  00103A  0100               	movlb	0	; () banked
  1735  00103C  6F66               	movwf	?___ftdiv& (0+255),b
  1736  00103E  0E00               	movlw	0
  1737  001040  0100               	movlb	0	; () banked
  1738  001042  6F67               	movwf	(?___ftdiv+1)& (0+255),b
  1739  001044  0E00               	movlw	0
  1740  001046  0100               	movlb	0	; () banked
  1741  001048  6F68               	movwf	(?___ftdiv+2)& (0+255),b
  1742                           
  1743                           ; BSR set to: 0
  1744  00104A  0012               	return	
  1745  00104C                     l2277:
  1746                           
  1747                           ; BSR set to: 0
  1748  00104C  C06B  F06C         	movff	___ftdiv@f2+2,??___ftdiv
  1749  001050  0100               	movlb	0	; () banked
  1750  001052  6B6D               	clrf	(??___ftdiv+1)& (0+255),b
  1751  001054  6B6E               	clrf	(??___ftdiv+2)& (0+255),b
  1752  001056  0100               	movlb	0	; () banked
  1753  001058  356A               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  1754  00105A  0100               	movlb	0	; () banked
  1755  00105C  376C               	rlcf	??___ftdiv& (0+255),f,b
  1756  00105E  E301               	bnc	u1821
  1757  001060  816D               	bsf	(??___ftdiv+1)& (0+255),0,b
  1758  001062                     u1821:
  1759  001062  0100               	movlb	0	; () banked
  1760  001064  516C               	movf	??___ftdiv& (0+255),w,b
  1761  001066  0100               	movlb	0	; () banked
  1762  001068  6F74               	movwf	___ftdiv@sign& (0+255),b
  1763  00106A  0100               	movlb	0	; () banked
  1764  00106C  5174               	movf	___ftdiv@sign& (0+255),w,b
  1765  00106E  A4D8               	btfss	status,2,c
  1766  001070  D00A               	goto	l2283
  1767                           
  1768                           ; BSR set to: 0
  1769  001072  0E00               	movlw	0
  1770  001074  0100               	movlb	0	; () banked
  1771  001076  6F66               	movwf	?___ftdiv& (0+255),b
  1772  001078  0E00               	movlw	0
  1773  00107A  0100               	movlb	0	; () banked
  1774  00107C  6F67               	movwf	(?___ftdiv+1)& (0+255),b
  1775  00107E  0E00               	movlw	0
  1776  001080  0100               	movlb	0	; () banked
  1777  001082  6F68               	movwf	(?___ftdiv+2)& (0+255),b
  1778                           
  1779                           ; BSR set to: 0
  1780  001084  0012               	return	
  1781  001086                     l2283:
  1782                           
  1783                           ; BSR set to: 0
  1784  001086  0E00               	movlw	0
  1785  001088  0100               	movlb	0	; () banked
  1786  00108A  6F70               	movwf	___ftdiv@f3& (0+255),b
  1787  00108C  0E00               	movlw	0
  1788  00108E  0100               	movlb	0	; () banked
  1789  001090  6F71               	movwf	(___ftdiv@f3+1)& (0+255),b
  1790  001092  0E00               	movlw	0
  1791  001094  0100               	movlb	0	; () banked
  1792  001096  6F72               	movwf	(___ftdiv@f3+2)& (0+255),b
  1793                           
  1794                           ; BSR set to: 0
  1795  001098  0100               	movlb	0	; () banked
  1796  00109A  5174               	movf	___ftdiv@sign& (0+255),w,b
  1797  00109C  0F89               	addlw	137
  1798  00109E  0100               	movlb	0	; () banked
  1799  0010A0  5F73               	subwf	___ftdiv@exp& (0+255),f,b
  1800                           
  1801                           ; BSR set to: 0
  1802  0010A2  C068  F074         	movff	___ftdiv@f1+2,___ftdiv@sign
  1803                           
  1804                           ; BSR set to: 0
  1805  0010A6  0100               	movlb	0	; () banked
  1806  0010A8  516B               	movf	(___ftdiv@f2+2)& (0+255),w,b
  1807  0010AA  0100               	movlb	0	; () banked
  1808  0010AC  1B74               	xorwf	___ftdiv@sign& (0+255),f,b
  1809                           
  1810                           ; BSR set to: 0
  1811  0010AE  0E80               	movlw	128
  1812  0010B0  0100               	movlb	0	; () banked
  1813  0010B2  1774               	andwf	___ftdiv@sign& (0+255),f,b
  1814                           
  1815                           ; BSR set to: 0
  1816  0010B4  0100               	movlb	0	; () banked
  1817  0010B6  8F67               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  1818                           
  1819                           ; BSR set to: 0
  1820  0010B8  0EFF               	movlw	255
  1821  0010BA  0100               	movlb	0	; () banked
  1822  0010BC  1766               	andwf	___ftdiv@f1& (0+255),f,b
  1823  0010BE  0EFF               	movlw	255
  1824  0010C0  0100               	movlb	0	; () banked
  1825  0010C2  1767               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  1826  0010C4  0E00               	movlw	0
  1827  0010C6  0100               	movlb	0	; () banked
  1828  0010C8  1768               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  1829                           
  1830                           ; BSR set to: 0
  1831  0010CA  0100               	movlb	0	; () banked
  1832  0010CC  8F6A               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  1833                           
  1834                           ; BSR set to: 0
  1835  0010CE  0EFF               	movlw	255
  1836  0010D0  0100               	movlb	0	; () banked
  1837  0010D2  1769               	andwf	___ftdiv@f2& (0+255),f,b
  1838  0010D4  0EFF               	movlw	255
  1839  0010D6  0100               	movlb	0	; () banked
  1840  0010D8  176A               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  1841  0010DA  0E00               	movlw	0
  1842  0010DC  0100               	movlb	0	; () banked
  1843  0010DE  176B               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  1844                           
  1845                           ; BSR set to: 0
  1846  0010E0  0E18               	movlw	24
  1847  0010E2  0100               	movlb	0	; () banked
  1848  0010E4  6F6F               	movwf	___ftdiv@cntr& (0+255),b
  1849  0010E6  D000               	goto	l2303
  1850  0010E8                     l2303:
  1851                           
  1852                           ; BSR set to: 0
  1853  0010E8  0100               	movlb	0	; () banked
  1854  0010EA  90D8               	bcf	status,0,c
  1855  0010EC  3770               	rlcf	___ftdiv@f3& (0+255),f,b
  1856  0010EE  3771               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  1857  0010F0  3772               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  1858                           
  1859                           ; BSR set to: 0
  1860  0010F2  0100               	movlb	0	; () banked
  1861  0010F4  5169               	movf	___ftdiv@f2& (0+255),w,b
  1862  0010F6  0100               	movlb	0	; () banked
  1863  0010F8  5D66               	subwf	___ftdiv@f1& (0+255),w,b
  1864  0010FA  0100               	movlb	0	; () banked
  1865  0010FC  516A               	movf	(___ftdiv@f2+1)& (0+255),w,b
  1866  0010FE  0100               	movlb	0	; () banked
  1867  001100  5967               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  1868  001102  0100               	movlb	0	; () banked
  1869  001104  516B               	movf	(___ftdiv@f2+2)& (0+255),w,b
  1870  001106  0100               	movlb	0	; () banked
  1871  001108  5968               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  1872  00110A  A0D8               	btfss	status,0,c
  1873  00110C  D00E               	goto	l823
  1874                           
  1875                           ; BSR set to: 0
  1876  00110E  0100               	movlb	0	; () banked
  1877  001110  5169               	movf	___ftdiv@f2& (0+255),w,b
  1878  001112  0100               	movlb	0	; () banked
  1879  001114  5F66               	subwf	___ftdiv@f1& (0+255),f,b
  1880  001116  0100               	movlb	0	; () banked
  1881  001118  516A               	movf	(___ftdiv@f2+1)& (0+255),w,b
  1882  00111A  0100               	movlb	0	; () banked
  1883  00111C  5B67               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  1884  00111E  0100               	movlb	0	; () banked
  1885  001120  516B               	movf	(___ftdiv@f2+2)& (0+255),w,b
  1886  001122  0100               	movlb	0	; () banked
  1887  001124  5B68               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  1888                           
  1889                           ; BSR set to: 0
  1890  001126  0100               	movlb	0	; () banked
  1891  001128  8170               	bsf	___ftdiv@f3& (0+255),0,b
  1892  00112A                     l823:
  1893                           
  1894                           ; BSR set to: 0
  1895  00112A  0100               	movlb	0	; () banked
  1896  00112C  90D8               	bcf	status,0,c
  1897  00112E  3766               	rlcf	___ftdiv@f1& (0+255),f,b
  1898  001130  3767               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  1899  001132  3768               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  1900                           
  1901                           ; BSR set to: 0
  1902  001134  0100               	movlb	0	; () banked
  1903  001136  2F6F               	decfsz	___ftdiv@cntr& (0+255),f,b
  1904  001138  D7D7               	goto	l2303
  1905  00113A  D000               	goto	l2313
  1906  00113C                     l2313:
  1907                           
  1908                           ; BSR set to: 0
  1909  00113C  C070  F019         	movff	___ftdiv@f3,___ftpack@arg
  1910  001140  C071  F01A         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1911  001144  C072  F01B         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1912  001148  C073  F01C         	movff	___ftdiv@exp,___ftpack@exp
  1913  00114C  C074  F01D         	movff	___ftdiv@sign,___ftpack@sign
  1914  001150  EC4D  F00A         	call	___ftpack	;wreg free
  1915  001154  C019  F066         	movff	?___ftpack,?___ftdiv
  1916  001158  C01A  F067         	movff	?___ftpack+1,?___ftdiv+1
  1917  00115C  C01B  F068         	movff	?___ftpack+2,?___ftdiv+2
  1918  001160  0012               	return	
  1919  001162  0012               	return		;funcret
  1920  001164                     __end_of___ftdiv:
  1921                           	opt stack 0
  1922                           tblptru	equ	0xFF8
  1923                           tblptrh	equ	0xFF7
  1924                           tblptrl	equ	0xFF6
  1925                           tablat	equ	0xFF5
  1926                           intcon	equ	0xFF2
  1927                           postinc0	equ	0xFEE
  1928                           wreg	equ	0xFE8
  1929                           status	equ	0xFD8
  1930                           
  1931 ;; *************** function ___ftpack *****************
  1932 ;; Defined at:
  1933 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;  arg             3   24[COMRAM] unsigned um
  1936 ;;  exp             1   27[COMRAM] unsigned char 
  1937 ;;  sign            1   28[COMRAM] unsigned char 
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;		None
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  3   24[COMRAM] float 
  1942 ;; Registers used:
  1943 ;;		wreg, status,2, status,0
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1949 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1951 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1952 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1953 ;;Total ram usage:        8 bytes
  1954 ;; Hardware stack levels used:    1
  1955 ;; Hardware stack levels required when called:    3
  1956 ;; This function calls:
  1957 ;;		Nothing
  1958 ;; This function is called by:
  1959 ;;		___ftdiv
  1960 ;;		___ftmul
  1961 ;;		___lwtoft
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965                           	psect	text13
  1966  00149A                     __ptext13:
  1967                           	opt stack 0
  1968  00149A                     ___ftpack:
  1969                           	opt stack 24
  1970                           
  1971                           ;incstack = 0
  1972  00149A  501C               	movf	___ftpack@exp,w,c
  1973  00149C  B4D8               	btfsc	status,2,c
  1974  00149E  D005               	goto	l2225
  1975  0014A0  5019               	movf	___ftpack@arg,w,c
  1976  0014A2  101A               	iorwf	___ftpack@arg+1,w,c
  1977  0014A4  101B               	iorwf	___ftpack@arg+2,w,c
  1978  0014A6  A4D8               	btfss	status,2,c
  1979  0014A8  D00E               	goto	l2231
  1980  0014AA                     l2225:
  1981  0014AA  0E00               	movlw	0
  1982  0014AC  6E19               	movwf	?___ftpack,c
  1983  0014AE  0E00               	movlw	0
  1984  0014B0  6E1A               	movwf	?___ftpack+1,c
  1985  0014B2  0E00               	movlw	0
  1986  0014B4  6E1B               	movwf	?___ftpack+2,c
  1987  0014B6  0012               	return	
  1988  0014B8  D006               	goto	l2231
  1989  0014BA                     l2229:
  1990  0014BA  2A1C               	incf	___ftpack@exp,f,c
  1991  0014BC  90D8               	bcf	status,0,c
  1992  0014BE  321B               	rrcf	___ftpack@arg+2,f,c
  1993  0014C0  321A               	rrcf	___ftpack@arg+1,f,c
  1994  0014C2  3219               	rrcf	___ftpack@arg,f,c
  1995  0014C4  D000               	goto	l2231
  1996  0014C6                     l2231:
  1997  0014C6  0E00               	movlw	0
  1998  0014C8  1419               	andwf	___ftpack@arg,w,c
  1999  0014CA  6E1E               	movwf	??___ftpack& (0+255),c
  2000  0014CC  0E00               	movlw	0
  2001  0014CE  141A               	andwf	___ftpack@arg+1,w,c
  2002  0014D0  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  2003  0014D2  0EFE               	movlw	254
  2004  0014D4  141B               	andwf	___ftpack@arg+2,w,c
  2005  0014D6  6E20               	movwf	(??___ftpack+2)& (0+255),c
  2006  0014D8  501E               	movf	??___ftpack,w,c
  2007  0014DA  101F               	iorwf	??___ftpack+1,w,c
  2008  0014DC  1020               	iorwf	??___ftpack+2,w,c
  2009  0014DE  B4D8               	btfsc	status,2,c
  2010  0014E0  D00E               	goto	l2237
  2011  0014E2  D7EB               	goto	l2229
  2012  0014E4  D00C               	goto	l2237
  2013  0014E6                     l2233:
  2014  0014E6  2A1C               	incf	___ftpack@exp,f,c
  2015  0014E8  0E01               	movlw	1
  2016  0014EA  2619               	addwf	___ftpack@arg,f,c
  2017  0014EC  0E00               	movlw	0
  2018  0014EE  221A               	addwfc	___ftpack@arg+1,f,c
  2019  0014F0  0E00               	movlw	0
  2020  0014F2  221B               	addwfc	___ftpack@arg+2,f,c
  2021  0014F4  90D8               	bcf	status,0,c
  2022  0014F6  321B               	rrcf	___ftpack@arg+2,f,c
  2023  0014F8  321A               	rrcf	___ftpack@arg+1,f,c
  2024  0014FA  3219               	rrcf	___ftpack@arg,f,c
  2025  0014FC  D000               	goto	l2237
  2026  0014FE                     l2237:
  2027  0014FE  0E00               	movlw	0
  2028  001500  1419               	andwf	___ftpack@arg,w,c
  2029  001502  6E1E               	movwf	??___ftpack& (0+255),c
  2030  001504  0E00               	movlw	0
  2031  001506  141A               	andwf	___ftpack@arg+1,w,c
  2032  001508  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  2033  00150A  0EFF               	movlw	255
  2034  00150C  141B               	andwf	___ftpack@arg+2,w,c
  2035  00150E  6E20               	movwf	(??___ftpack+2)& (0+255),c
  2036  001510  501E               	movf	??___ftpack,w,c
  2037  001512  101F               	iorwf	??___ftpack+1,w,c
  2038  001514  1020               	iorwf	??___ftpack+2,w,c
  2039  001516  B4D8               	btfsc	status,2,c
  2040  001518  D008               	goto	l2241
  2041  00151A  D7E5               	goto	l2233
  2042  00151C  D006               	goto	l2241
  2043  00151E                     l2239:
  2044  00151E  061C               	decf	___ftpack@exp,f,c
  2045  001520  90D8               	bcf	status,0,c
  2046  001522  3619               	rlcf	___ftpack@arg,f,c
  2047  001524  361A               	rlcf	___ftpack@arg+1,f,c
  2048  001526  361B               	rlcf	___ftpack@arg+2,f,c
  2049  001528  D000               	goto	l2241
  2050  00152A                     l2241:
  2051  00152A  BE1A               	btfsc	___ftpack@arg+1,7,c
  2052  00152C  D004               	goto	l759
  2053  00152E  0E02               	movlw	2
  2054  001530  601C               	cpfslt	___ftpack@exp,c
  2055  001532  D7F5               	goto	l2239
  2056  001534  D000               	goto	l759
  2057  001536                     l759:
  2058  001536  B01C               	btfsc	___ftpack@exp,0,c
  2059  001538  D002               	goto	l2247
  2060  00153A  9E1A               	bcf	___ftpack@arg+1,7,c
  2061  00153C  D000               	goto	l2247
  2062  00153E                     l2247:
  2063  00153E  90D8               	bcf	status,0,c
  2064  001540  321C               	rrcf	___ftpack@exp,f,c
  2065  001542  501C               	movf	___ftpack@exp,w,c
  2066  001544  121B               	iorwf	___ftpack@arg+2,f,c
  2067  001546  501D               	movf	___ftpack@sign,w,c
  2068  001548  B4D8               	btfsc	status,2,c
  2069  00154A  D002               	goto	l2253
  2070  00154C  8E1B               	bsf	___ftpack@arg+2,7,c
  2071  00154E  D000               	goto	l2253
  2072  001550                     l2253:
  2073  001550  C019  F019         	movff	___ftpack@arg,?___ftpack
  2074  001554  C01A  F01A         	movff	___ftpack@arg+1,?___ftpack+1
  2075  001558  C01B  F01B         	movff	___ftpack@arg+2,?___ftpack+2
  2076  00155C  0012               	return	
  2077  00155E  0012               	return		;funcret
  2078  001560                     __end_of___ftpack:
  2079                           	opt stack 0
  2080                           tblptru	equ	0xFF8
  2081                           tblptrh	equ	0xFF7
  2082                           tblptrl	equ	0xFF6
  2083                           tablat	equ	0xFF5
  2084                           intcon	equ	0xFF2
  2085                           postinc0	equ	0xFEE
  2086                           wreg	equ	0xFE8
  2087                           status	equ	0xFD8
  2088                           
  2089 ;; *************** function _ReadADC *****************
  2090 ;; Defined at:
  2091 ;;		line 24 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;		None
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;		None
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  2   24[COMRAM] int 
  2098 ;; Registers used:
  2099 ;;		wreg, status,2
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2105 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2107 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2108 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2109 ;;Total ram usage:        4 bytes
  2110 ;; Hardware stack levels used:    1
  2111 ;; Hardware stack levels required when called:    3
  2112 ;; This function calls:
  2113 ;;		Nothing
  2114 ;; This function is called by:
  2115 ;;		_Get_ADC6
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118                           
  2119                           	psect	text14
  2120  001B4A                     __ptext14:
  2121                           	opt stack 0
  2122  001B4A                     _ReadADC:
  2123                           	opt stack 25
  2124                           
  2125                           ;incstack = 0
  2126  001B4A  50C4               	movf	4036,w,c	;volatile
  2127  001B4C  6E1B               	movwf	??_ReadADC& (0+255),c
  2128  001B4E  50C3               	movf	4035,w,c	;volatile
  2129  001B50  6E19               	movwf	?_ReadADC,c
  2130  001B52  C01B  F01A         	movff	??_ReadADC,?_ReadADC+1
  2131  001B56  0012               	return	
  2132  001B58  0012               	return		;funcret
  2133  001B5A                     __end_of_ReadADC:
  2134                           	opt stack 0
  2135                           tblptru	equ	0xFF8
  2136                           tblptrh	equ	0xFF7
  2137                           tblptrl	equ	0xFF6
  2138                           tablat	equ	0xFF5
  2139                           intcon	equ	0xFF2
  2140                           postinc0	equ	0xFEE
  2141                           wreg	equ	0xFE8
  2142                           status	equ	0xFD8
  2143                           
  2144 ;; *************** function _ConvertADC *****************
  2145 ;; Defined at:
  2146 ;;		line 22 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;		None
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;		None
  2151 ;; Return value:  Size  Location     Type
  2152 ;;		None               void
  2153 ;; Registers used:
  2154 ;;		None
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2164 ;;Total ram usage:        0 bytes
  2165 ;; Hardware stack levels used:    1
  2166 ;; Hardware stack levels required when called:    3
  2167 ;; This function calls:
  2168 ;;		Nothing
  2169 ;; This function is called by:
  2170 ;;		_Get_ADC6
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           	psect	text15
  2175  001B8C                     __ptext15:
  2176                           	opt stack 0
  2177  001B8C                     _ConvertADC:
  2178                           	opt stack 25
  2179                           
  2180                           ;incstack = 0
  2181  001B8C  82C2               	bsf	4034,1,c	;volatile
  2182  001B8E  0012               	return		;funcret
  2183  001B90                     __end_of_ConvertADC:
  2184                           	opt stack 0
  2185                           tblptru	equ	0xFF8
  2186                           tblptrh	equ	0xFF7
  2187                           tblptrl	equ	0xFF6
  2188                           tablat	equ	0xFF5
  2189                           intcon	equ	0xFF2
  2190                           postinc0	equ	0xFEE
  2191                           wreg	equ	0xFE8
  2192                           status	equ	0xFD8
  2193                           
  2194 ;; *************** function _BusyADC *****************
  2195 ;; Defined at:
  2196 ;;		line 26 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;		None
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;		None
  2201 ;; Return value:  Size  Location     Type
  2202 ;;                  1    wreg      unsigned char 
  2203 ;; Registers used:
  2204 ;;		wreg
  2205 ;; Tracked objects:
  2206 ;;		On entry : 0/0
  2207 ;;		On exit  : 0/0
  2208 ;;		Unchanged: 0/0
  2209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2214 ;;Total ram usage:        0 bytes
  2215 ;; Hardware stack levels used:    1
  2216 ;; Hardware stack levels required when called:    3
  2217 ;; This function calls:
  2218 ;;		Nothing
  2219 ;; This function is called by:
  2220 ;;		_Get_ADC6
  2221 ;; This function uses a non-reentrant model
  2222 ;;
  2223                           
  2224                           	psect	text16
  2225  001B68                     __ptext16:
  2226                           	opt stack 0
  2227  001B68                     _BusyADC:
  2228                           	opt stack 25
  2229                           
  2230                           ;incstack = 0
  2231  001B68  A2C2               	btfss	4034,1,c	;volatile
  2232  001B6A  D002               	goto	u1790
  2233  001B6C  0E01               	movlw	1
  2234  001B6E  0012               	return	
  2235  001B70                     u1790:
  2236  001B70  0E00               	movlw	0
  2237  001B72  0012               	return	
  2238  001B74  0012               	return		;funcret
  2239  001B76                     __end_of_BusyADC:
  2240                           	opt stack 0
  2241                           tblptru	equ	0xFF8
  2242                           tblptrh	equ	0xFF7
  2243                           tblptrl	equ	0xFF6
  2244                           tablat	equ	0xFF5
  2245                           intcon	equ	0xFF2
  2246                           postinc0	equ	0xFEE
  2247                           wreg	equ	0xFE8
  2248                           status	equ	0xFD8
  2249                           
  2250 ;; *************** function _Busy2USART *****************
  2251 ;; Defined at:
  2252 ;;		line 14 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u2busy.c"
  2253 ;; Parameters:    Size  Location     Type
  2254 ;;		None
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;		None
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  2   24[COMRAM] int 
  2259 ;; Registers used:
  2260 ;;		wreg, status,2
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2266 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2269 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2270 ;;Total ram usage:        2 bytes
  2271 ;; Hardware stack levels used:    1
  2272 ;; Hardware stack levels required when called:    3
  2273 ;; This function calls:
  2274 ;;		Nothing
  2275 ;; This function is called by:
  2276 ;;		_Run
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           	psect	text17
  2281  001AE8                     __ptext17:
  2282                           	opt stack 0
  2283  001AE8                     _Busy2USART:
  2284                           	opt stack 26
  2285                           
  2286                           ;incstack = 0
  2287  001AE8  010F               	movlb	15	; () banked
  2288  001AEA  B321               	btfsc	33,1,b	;volatile
  2289  001AEC  D005               	goto	l2493
  2290                           
  2291                           ; BSR set to: 15
  2292  001AEE  0E00               	movlw	0
  2293  001AF0  6E1A               	movwf	?_Busy2USART+1,c
  2294  001AF2  0E01               	movlw	1
  2295  001AF4  6E19               	movwf	?_Busy2USART,c
  2296                           
  2297                           ; BSR set to: 15
  2298  001AF6  0012               	return	
  2299  001AF8                     l2493:
  2300                           
  2301                           ; BSR set to: 15
  2302  001AF8  0E00               	movlw	0
  2303  001AFA  6E1A               	movwf	?_Busy2USART+1,c
  2304  001AFC  0E00               	movlw	0
  2305  001AFE  6E19               	movwf	?_Busy2USART,c
  2306  001B00  0012               	return	
  2307                           
  2308                           ; BSR set to: 15
  2309                           
  2310                           ; BSR set to: 15
  2311  001B02  0012               	return		;funcret
  2312  001B04                     __end_of_Busy2USART:
  2313                           	opt stack 0
  2314                           tblptru	equ	0xFF8
  2315                           tblptrh	equ	0xFF7
  2316                           tblptrl	equ	0xFF6
  2317                           tablat	equ	0xFF5
  2318                           intcon	equ	0xFF2
  2319                           postinc0	equ	0xFEE
  2320                           wreg	equ	0xFE8
  2321                           status	equ	0xFD8
  2322                           
  2323 ;; *************** function _RS485_Init *****************
  2324 ;; Defined at:
  2325 ;;		line 38 in file "_01_USER/My_USART.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;		None
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;		None
  2330 ;; Return value:  Size  Location     Type
  2331 ;;		None               void
  2332 ;; Registers used:
  2333 ;;		wreg, status,2, status,0, cstack
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2343 ;;Total ram usage:        0 bytes
  2344 ;; Hardware stack levels used:    1
  2345 ;; Hardware stack levels required when called:    4
  2346 ;; This function calls:
  2347 ;;		_Open2USART
  2348 ;; This function is called by:
  2349 ;;		_main
  2350 ;; This function uses a non-reentrant model
  2351 ;;
  2352                           
  2353                           	psect	text18
  2354  001ACA                     __ptext18:
  2355                           	opt stack 0
  2356  001ACA                     _RS485_Init:
  2357                           	opt stack 26
  2358                           
  2359                           ;My_USART.c: 40: Open2USART( 0b01111111 &
  2360                           ;My_USART.c: 41: 0b11111111 &
  2361                           ;My_USART.c: 42: 0b11111110 &
  2362                           ;My_USART.c: 43: 0b11111101 &
  2363                           ;My_USART.c: 44: 0b11111111 &
  2364                           ;My_USART.c: 45: 0b11101111
  2365                           ;My_USART.c: 46: ,
  2366                           ;My_USART.c: 47: 12
  2367                           ;My_USART.c: 48: );
  2368                           
  2369                           ; BSR set to: 15
  2370                           ;incstack = 0
  2371  001ACA  0E00               	movlw	0
  2372  001ACC  6E1A               	movwf	Open2USART@spbrg+1,c
  2373  001ACE  0E0C               	movlw	12
  2374  001AD0  6E19               	movwf	Open2USART@spbrg,c
  2375  001AD2  0E6C               	movlw	108
  2376  001AD4  ECB0  F00A         	call	_Open2USART
  2377                           
  2378                           ;My_USART.c: 50: TRISGbits.TRISG1 = 1;
  2379  001AD8  8298               	bsf	3992,1,c	;volatile
  2380                           
  2381                           ;My_USART.c: 51: TRISGbits.TRISG2 = 0;
  2382  001ADA  9498               	bcf	3992,2,c	;volatile
  2383                           
  2384                           ;My_USART.c: 52: TRISGbits.TRISG3 = 0;
  2385  001ADC  9698               	bcf	3992,3,c	;volatile
  2386                           
  2387                           ;My_USART.c: 53: RG3 = 1;
  2388  001ADE  8686               	bsf	3974,3,c	;volatile
  2389                           
  2390                           ;My_USART.c: 54: ANCON2 &= 0XF1;
  2391  001AE0  0EF1               	movlw	241
  2392  001AE2  010F               	movlb	15	; () banked
  2393  001AE4  1723               	andwf	35,f,b	;volatile
  2394                           
  2395                           ; BSR set to: 15
  2396  001AE6  0012               	return		;funcret
  2397  001AE8                     __end_of_RS485_Init:
  2398                           	opt stack 0
  2399                           tblptru	equ	0xFF8
  2400                           tblptrh	equ	0xFF7
  2401                           tblptrl	equ	0xFF6
  2402                           tablat	equ	0xFF5
  2403                           intcon	equ	0xFF2
  2404                           postinc0	equ	0xFEE
  2405                           wreg	equ	0xFE8
  2406                           status	equ	0xFD8
  2407                           
  2408 ;; *************** function _Open2USART *****************
  2409 ;; Defined at:
  2410 ;;		line 118 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u2open.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;  config          1    wreg     unsigned char 
  2413 ;;  spbrg           2   24[COMRAM] unsigned int 
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;  config          1   26[COMRAM] unsigned char 
  2416 ;; Return value:  Size  Location     Type
  2417 ;;		None               void
  2418 ;; Registers used:
  2419 ;;		wreg, status,2
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2425 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2426 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2428 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2429 ;;Total ram usage:        3 bytes
  2430 ;; Hardware stack levels used:    1
  2431 ;; Hardware stack levels required when called:    3
  2432 ;; This function calls:
  2433 ;;		Nothing
  2434 ;; This function is called by:
  2435 ;;		_RS485_Init
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           	psect	text19
  2440  001560                     __ptext19:
  2441                           	opt stack 0
  2442  001560                     _Open2USART:
  2443                           	opt stack 26
  2444                           
  2445                           ; BSR set to: 15
  2446                           ;incstack = 0
  2447                           ;Open2USART@config stored from wreg
  2448  001560  6E1B               	movwf	Open2USART@config,c
  2449  001562  0E00               	movlw	0
  2450  001564  010F               	movlb	15	; () banked
  2451  001566  6F21               	movwf	33,b	;volatile
  2452  001568  0E00               	movlw	0
  2453  00156A  010F               	movlb	15	; () banked
  2454  00156C  6F22               	movwf	34,b	;volatile
  2455                           
  2456                           ; BSR set to: 15
  2457  00156E  A01B               	btfss	Open2USART@config,0,c
  2458  001570  D003               	goto	l2413
  2459                           
  2460                           ; BSR set to: 15
  2461  001572  010F               	movlb	15	; () banked
  2462  001574  8921               	bsf	33,4,b	;volatile
  2463  001576  D000               	goto	l2413
  2464  001578                     l2413:
  2465                           
  2466                           ; BSR set to: 15
  2467  001578  A21B               	btfss	Open2USART@config,1,c
  2468  00157A  D005               	goto	l2417
  2469                           
  2470                           ; BSR set to: 15
  2471  00157C  010F               	movlb	15	; () banked
  2472  00157E  8D21               	bsf	33,6,b	;volatile
  2473  001580  010F               	movlb	15	; () banked
  2474  001582  8D22               	bsf	34,6,b	;volatile
  2475  001584  D000               	goto	l2417
  2476  001586                     l2417:
  2477                           
  2478                           ; BSR set to: 15
  2479  001586  A41B               	btfss	Open2USART@config,2,c
  2480  001588  D003               	goto	l2421
  2481                           
  2482                           ; BSR set to: 15
  2483  00158A  010F               	movlb	15	; () banked
  2484  00158C  8F21               	bsf	33,7,b	;volatile
  2485  00158E  D000               	goto	l2421
  2486  001590                     l2421:
  2487                           
  2488                           ; BSR set to: 15
  2489  001590  A61B               	btfss	Open2USART@config,3,c
  2490  001592  D003               	goto	l428
  2491                           
  2492                           ; BSR set to: 15
  2493  001594  010F               	movlb	15	; () banked
  2494  001596  8922               	bsf	34,4,b	;volatile
  2495  001598  D003               	goto	l2425
  2496  00159A                     l428:
  2497                           
  2498                           ; BSR set to: 15
  2499  00159A  010F               	movlb	15	; () banked
  2500  00159C  8B22               	bsf	34,5,b	;volatile
  2501  00159E  D000               	goto	l2425
  2502  0015A0                     l2425:
  2503                           
  2504                           ; BSR set to: 15
  2505  0015A0  A81B               	btfss	Open2USART@config,4,c
  2506  0015A2  D003               	goto	l430
  2507                           
  2508                           ; BSR set to: 15
  2509  0015A4  010F               	movlb	15	; () banked
  2510  0015A6  8521               	bsf	33,2,b	;volatile
  2511  0015A8  D003               	goto	l2429
  2512  0015AA                     l430:
  2513                           
  2514                           ; BSR set to: 15
  2515  0015AA  010F               	movlb	15	; () banked
  2516  0015AC  9521               	bcf	33,2,b	;volatile
  2517  0015AE  D000               	goto	l2429
  2518  0015B0                     l2429:
  2519                           
  2520                           ; BSR set to: 15
  2521  0015B0  AA1B               	btfss	Open2USART@config,5,c
  2522  0015B2  D003               	goto	l2433
  2523                           
  2524                           ; BSR set to: 15
  2525  0015B4  010F               	movlb	15	; () banked
  2526  0015B6  8722               	bsf	34,3,b	;volatile
  2527  0015B8  D000               	goto	l2433
  2528  0015BA                     l2433:
  2529                           
  2530                           ; BSR set to: 15
  2531  0015BA  AC1B               	btfss	Open2USART@config,6,c
  2532  0015BC  D002               	goto	l433
  2533                           
  2534                           ; BSR set to: 15
  2535  0015BE  8AA3               	bsf	4003,5,c	;volatile
  2536  0015C0  D002               	goto	l2437
  2537  0015C2                     l433:
  2538                           
  2539                           ; BSR set to: 15
  2540  0015C2  9AA3               	bcf	4003,5,c	;volatile
  2541  0015C4  D000               	goto	l2437
  2542  0015C6                     l2437:
  2543                           
  2544                           ; BSR set to: 15
  2545  0015C6  AE1B               	btfss	Open2USART@config,7,c
  2546  0015C8  D002               	goto	l435
  2547                           
  2548                           ; BSR set to: 15
  2549  0015CA  88A3               	bsf	4003,4,c	;volatile
  2550  0015CC  D001               	goto	l436
  2551  0015CE                     l435:
  2552                           
  2553                           ; BSR set to: 15
  2554  0015CE  98A3               	bcf	4003,4,c	;volatile
  2555  0015D0                     l436:
  2556                           
  2557                           ; BSR set to: 15
  2558  0015D0  C019  FF1E         	movff	Open2USART@spbrg,3870	;volatile
  2559                           
  2560                           ; BSR set to: 15
  2561  0015D4  501A               	movf	Open2USART@spbrg+1,w,c
  2562  0015D6  010F               	movlb	15	; () banked
  2563  0015D8  6F1F               	movwf	31,b	;volatile
  2564                           
  2565                           ; BSR set to: 15
  2566  0015DA  010F               	movlb	15	; () banked
  2567  0015DC  8B21               	bsf	33,5,b	;volatile
  2568                           
  2569                           ; BSR set to: 15
  2570  0015DE  010F               	movlb	15	; () banked
  2571  0015E0  8F22               	bsf	34,7,b	;volatile
  2572                           
  2573                           ; BSR set to: 15
  2574  0015E2  0012               	return		;funcret
  2575  0015E4                     __end_of_Open2USART:
  2576                           	opt stack 0
  2577                           tblptru	equ	0xFF8
  2578                           tblptrh	equ	0xFF7
  2579                           tblptrl	equ	0xFF6
  2580                           tablat	equ	0xFF5
  2581                           intcon	equ	0xFF2
  2582                           postinc0	equ	0xFEE
  2583                           wreg	equ	0xFE8
  2584                           status	equ	0xFD8
  2585                           
  2586 ;; *************** function _Key_Init *****************
  2587 ;; Defined at:
  2588 ;;		line 38 in file "_01_USER/Key.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;		None
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;		None
  2593 ;; Return value:  Size  Location     Type
  2594 ;;		None               void
  2595 ;; Registers used:
  2596 ;;		wreg, status,2, status,0
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2606 ;;Total ram usage:        0 bytes
  2607 ;; Hardware stack levels used:    1
  2608 ;; Hardware stack levels required when called:    3
  2609 ;; This function calls:
  2610 ;;		Nothing
  2611 ;; This function is called by:
  2612 ;;		_main
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           	psect	text20
  2617  001B82                     __ptext20:
  2618                           	opt stack 0
  2619  001B82                     _Key_Init:
  2620                           	opt stack 27
  2621                           
  2622                           ;Key.c: 40: TRISE |= 0x1e;
  2623                           
  2624                           ; BSR set to: 15
  2625                           ;incstack = 0
  2626  001B82  0E1E               	movlw	30
  2627  001B84  1296               	iorwf	3990,f,c	;volatile
  2628                           
  2629                           ;Key.c: 41: TRISD |= 0xc0;
  2630  001B86  0EC0               	movlw	192
  2631  001B88  1295               	iorwf	3989,f,c	;volatile
  2632  001B8A  0012               	return		;funcret
  2633  001B8C                     __end_of_Key_Init:
  2634                           	opt stack 0
  2635                           tblptru	equ	0xFF8
  2636                           tblptrh	equ	0xFF7
  2637                           tblptrl	equ	0xFF6
  2638                           tablat	equ	0xFF5
  2639                           intcon	equ	0xFF2
  2640                           postinc0	equ	0xFEE
  2641                           wreg	equ	0xFE8
  2642                           status	equ	0xFD8
  2643                           
  2644 ;; *************** function _Init_TM1640 *****************
  2645 ;; Defined at:
  2646 ;;		line 119 in file "_01_USER/TM1640.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;		None
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;		None
  2651 ;; Return value:  Size  Location     Type
  2652 ;;		None               void
  2653 ;; Registers used:
  2654 ;;		wreg, status,2, status,0, cstack
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2664 ;;Total ram usage:        0 bytes
  2665 ;; Hardware stack levels used:    1
  2666 ;; Hardware stack levels required when called:    5
  2667 ;; This function calls:
  2668 ;;		_TM1640_Start
  2669 ;;		_TM1640_Stop
  2670 ;;		_TM1640_Writer_Byte
  2671 ;; This function is called by:
  2672 ;;		_main
  2673 ;; This function uses a non-reentrant model
  2674 ;;
  2675                           
  2676                           	psect	text21
  2677  001A16                     __ptext21:
  2678                           	opt stack 0
  2679  001A16                     _Init_TM1640:
  2680                           	opt stack 25
  2681                           
  2682                           ;TM1640.c: 121: TRISCbits.TRISC3 = 0;
  2683                           
  2684                           ;incstack = 0
  2685  001A16  9694               	bcf	3988,3,c	;volatile
  2686                           
  2687                           ;TM1640.c: 122: TRISCbits.TRISC4 = 0;
  2688  001A18  9894               	bcf	3988,4,c	;volatile
  2689                           
  2690                           ;TM1640.c: 123: TM1640_Stop();
  2691  001A1A  EC30  F00D         	call	_TM1640_Stop	;wreg free
  2692                           
  2693                           ;TM1640.c: 125: TM1640_Start();
  2694  001A1E  EC42  F00D         	call	_TM1640_Start	;wreg free
  2695                           
  2696                           ;TM1640.c: 126: TM1640_Writer_Byte(0x44);
  2697  001A22  0E44               	movlw	68
  2698  001A24  EC3C  F00C         	call	_TM1640_Writer_Byte
  2699                           
  2700                           ;TM1640.c: 127: TM1640_Stop();
  2701  001A28  EC30  F00D         	call	_TM1640_Stop	;wreg free
  2702                           
  2703                           ;TM1640.c: 129: TM1640_Start();
  2704  001A2C  EC42  F00D         	call	_TM1640_Start	;wreg free
  2705                           
  2706                           ;TM1640.c: 130: TM1640_Writer_Byte(0x8F);
  2707  001A30  0E8F               	movlw	143
  2708  001A32  EC3C  F00C         	call	_TM1640_Writer_Byte
  2709                           
  2710                           ;TM1640.c: 131: TM1640_Stop();
  2711  001A36  EC30  F00D         	call	_TM1640_Stop	;wreg free
  2712  001A3A  0012               	return		;funcret
  2713  001A3C                     __end_of_Init_TM1640:
  2714                           	opt stack 0
  2715                           tblptru	equ	0xFF8
  2716                           tblptrh	equ	0xFF7
  2717                           tblptrl	equ	0xFF6
  2718                           tablat	equ	0xFF5
  2719                           intcon	equ	0xFF2
  2720                           postinc0	equ	0xFEE
  2721                           wreg	equ	0xFE8
  2722                           status	equ	0xFD8
  2723                           
  2724 ;; *************** function _TM1640_Writer_Byte *****************
  2725 ;; Defined at:
  2726 ;;		line 77 in file "_01_USER/TM1640.c"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;  Date            1    wreg     const unsigned char 
  2729 ;; Auto vars:     Size  Location     Type
  2730 ;;  Date            1   26[COMRAM] const unsigned char 
  2731 ;;  mask            1   27[COMRAM] unsigned char 
  2732 ;; Return value:  Size  Location     Type
  2733 ;;		None               void
  2734 ;; Registers used:
  2735 ;;		wreg, status,2, status,0, cstack
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2742 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2744 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2745 ;;Total ram usage:        2 bytes
  2746 ;; Hardware stack levels used:    1
  2747 ;; Hardware stack levels required when called:    4
  2748 ;; This function calls:
  2749 ;;		_TM1640_Delay
  2750 ;; This function is called by:
  2751 ;;		_TM1640_Writer_Dates
  2752 ;;		_Init_TM1640
  2753 ;;		_Open_Display
  2754 ;;		_Disable_Display
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           	psect	text22
  2759  001878                     __ptext22:
  2760                           	opt stack 0
  2761  001878                     _TM1640_Writer_Byte:
  2762                           	opt stack 23
  2763                           
  2764                           ;incstack = 0
  2765                           ;TM1640_Writer_Byte@Date stored from wreg
  2766  001878  6E1B               	movwf	TM1640_Writer_Byte@Date,c
  2767                           
  2768                           ;TM1640.c: 79: unsigned char mask;
  2769                           ;TM1640.c: 81: for(mask=0x01; mask; mask<<=1)
  2770  00187A  0E01               	movlw	1
  2771  00187C  6E1C               	movwf	TM1640_Writer_Byte@mask,c
  2772  00187E  D017               	goto	l2219
  2773  001880                     l290:
  2774                           
  2775                           ;TM1640.c: 82: {
  2776                           ;TM1640.c: 83: RC3 = 0;
  2777  001880  9682               	bcf	3970,3,c	;volatile
  2778                           
  2779                           ;TM1640.c: 84: TM1640_Delay(1);
  2780  001882  0E01               	movlw	1
  2781  001884  EC8F  F00D         	call	_TM1640_Delay
  2782                           
  2783                           ;TM1640.c: 85: if(mask & Date)
  2784  001888  501C               	movf	TM1640_Writer_Byte@mask,w,c
  2785  00188A  141B               	andwf	TM1640_Writer_Byte@Date,w,c
  2786  00188C  0900               	iorlw	0
  2787  00188E  B4D8               	btfsc	status,2,c
  2788  001890  D002               	goto	l291
  2789                           
  2790                           ;TM1640.c: 86: RC4 = 1;
  2791  001892  8882               	bsf	3970,4,c	;volatile
  2792  001894  D002               	goto	l2213
  2793  001896                     l291:
  2794                           
  2795                           ;TM1640.c: 87: else
  2796                           ;TM1640.c: 88: RC4 = 0;
  2797  001896  9882               	bcf	3970,4,c	;volatile
  2798  001898  D000               	goto	l2213
  2799  00189A                     l2213:
  2800                           
  2801                           ;TM1640.c: 89: TM1640_Delay(1);
  2802  00189A  0E01               	movlw	1
  2803  00189C  EC8F  F00D         	call	_TM1640_Delay
  2804                           
  2805                           ;TM1640.c: 90: RC3 = 1;
  2806  0018A0  8682               	bsf	3970,3,c	;volatile
  2807                           
  2808                           ;TM1640.c: 91: TM1640_Delay(1);
  2809  0018A2  0E01               	movlw	1
  2810  0018A4  EC8F  F00D         	call	_TM1640_Delay
  2811  0018A8  90D8               	bcf	status,0,c
  2812  0018AA  361C               	rlcf	TM1640_Writer_Byte@mask,f,c
  2813  0018AC  D000               	goto	l2219
  2814  0018AE                     l2219:
  2815  0018AE  501C               	movf	TM1640_Writer_Byte@mask,w,c
  2816  0018B0  A4D8               	btfss	status,2,c
  2817  0018B2  D7E6               	goto	l290
  2818  0018B4  0012               	return		;funcret
  2819  0018B6                     __end_of_TM1640_Writer_Byte:
  2820                           	opt stack 0
  2821                           tblptru	equ	0xFF8
  2822                           tblptrh	equ	0xFF7
  2823                           tblptrl	equ	0xFF6
  2824                           tablat	equ	0xFF5
  2825                           intcon	equ	0xFF2
  2826                           postinc0	equ	0xFEE
  2827                           wreg	equ	0xFE8
  2828                           status	equ	0xFD8
  2829                           
  2830 ;; *************** function _TM1640_Stop *****************
  2831 ;; Defined at:
  2832 ;;		line 32 in file "_01_USER/TM1640.c"
  2833 ;; Parameters:    Size  Location     Type
  2834 ;;		None
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;		None
  2837 ;; Return value:  Size  Location     Type
  2838 ;;		None               void
  2839 ;; Registers used:
  2840 ;;		wreg, status,2, status,0, cstack
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2850 ;;Total ram usage:        0 bytes
  2851 ;; Hardware stack levels used:    1
  2852 ;; Hardware stack levels required when called:    4
  2853 ;; This function calls:
  2854 ;;		_TM1640_Delay
  2855 ;; This function is called by:
  2856 ;;		_TM1640_Writer_Dates
  2857 ;;		_Init_TM1640
  2858 ;;		_Open_Display
  2859 ;;		_Disable_Display
  2860 ;; This function uses a non-reentrant model
  2861 ;;
  2862                           
  2863                           	psect	text23
  2864  001A60                     __ptext23:
  2865                           	opt stack 0
  2866  001A60                     _TM1640_Stop:
  2867                           	opt stack 23
  2868                           
  2869                           ;TM1640.c: 34: RC3 = 0;
  2870                           
  2871                           ;incstack = 0
  2872  001A60  9682               	bcf	3970,3,c	;volatile
  2873                           
  2874                           ;TM1640.c: 35: TM1640_Delay(1);
  2875  001A62  0E01               	movlw	1
  2876  001A64  EC8F  F00D         	call	_TM1640_Delay
  2877                           
  2878                           ;TM1640.c: 36: RC4 = 0;
  2879  001A68  9882               	bcf	3970,4,c	;volatile
  2880                           
  2881                           ;TM1640.c: 37: TM1640_Delay(1);
  2882  001A6A  0E01               	movlw	1
  2883  001A6C  EC8F  F00D         	call	_TM1640_Delay
  2884                           
  2885                           ;TM1640.c: 38: RC3 = 1;
  2886  001A70  8682               	bsf	3970,3,c	;volatile
  2887                           
  2888                           ;TM1640.c: 39: TM1640_Delay(1);
  2889  001A72  0E01               	movlw	1
  2890  001A74  EC8F  F00D         	call	_TM1640_Delay
  2891                           
  2892                           ;TM1640.c: 40: RC4 = 1;
  2893  001A78  8882               	bsf	3970,4,c	;volatile
  2894                           
  2895                           ;TM1640.c: 41: TM1640_Delay(1);
  2896  001A7A  0E01               	movlw	1
  2897  001A7C  EC8F  F00D         	call	_TM1640_Delay
  2898                           
  2899                           ;TM1640.c: 42: RC3 = 0;
  2900  001A80  9682               	bcf	3970,3,c	;volatile
  2901  001A82  0012               	return		;funcret
  2902  001A84                     __end_of_TM1640_Stop:
  2903                           	opt stack 0
  2904                           tblptru	equ	0xFF8
  2905                           tblptrh	equ	0xFF7
  2906                           tblptrl	equ	0xFF6
  2907                           tablat	equ	0xFF5
  2908                           intcon	equ	0xFF2
  2909                           postinc0	equ	0xFEE
  2910                           wreg	equ	0xFE8
  2911                           status	equ	0xFD8
  2912                           
  2913 ;; *************** function _TM1640_Start *****************
  2914 ;; Defined at:
  2915 ;;		line 19 in file "_01_USER/TM1640.c"
  2916 ;; Parameters:    Size  Location     Type
  2917 ;;		None
  2918 ;; Auto vars:     Size  Location     Type
  2919 ;;		None
  2920 ;; Return value:  Size  Location     Type
  2921 ;;		None               void
  2922 ;; Registers used:
  2923 ;;		wreg, status,2, status,0, cstack
  2924 ;; Tracked objects:
  2925 ;;		On entry : 0/0
  2926 ;;		On exit  : 0/0
  2927 ;;		Unchanged: 0/0
  2928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2933 ;;Total ram usage:        0 bytes
  2934 ;; Hardware stack levels used:    1
  2935 ;; Hardware stack levels required when called:    4
  2936 ;; This function calls:
  2937 ;;		_TM1640_Delay
  2938 ;; This function is called by:
  2939 ;;		_TM1640_Writer_Dates
  2940 ;;		_Init_TM1640
  2941 ;;		_Open_Display
  2942 ;;		_Disable_Display
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           
  2946                           	psect	text24
  2947  001A84                     __ptext24:
  2948                           	opt stack 0
  2949  001A84                     _TM1640_Start:
  2950                           	opt stack 23
  2951                           
  2952                           ;TM1640.c: 21: RC3 = 0;
  2953                           
  2954                           ;incstack = 0
  2955  001A84  9682               	bcf	3970,3,c	;volatile
  2956                           
  2957                           ;TM1640.c: 22: TM1640_Delay(1);
  2958  001A86  0E01               	movlw	1
  2959  001A88  EC8F  F00D         	call	_TM1640_Delay
  2960                           
  2961                           ;TM1640.c: 23: RC4 = 1;
  2962  001A8C  8882               	bsf	3970,4,c	;volatile
  2963                           
  2964                           ;TM1640.c: 24: TM1640_Delay(1);
  2965  001A8E  0E01               	movlw	1
  2966  001A90  EC8F  F00D         	call	_TM1640_Delay
  2967                           
  2968                           ;TM1640.c: 25: RC3 = 1;
  2969  001A94  8682               	bsf	3970,3,c	;volatile
  2970                           
  2971                           ;TM1640.c: 26: TM1640_Delay(1);
  2972  001A96  0E01               	movlw	1
  2973  001A98  EC8F  F00D         	call	_TM1640_Delay
  2974                           
  2975                           ;TM1640.c: 27: RC4 = 0;
  2976  001A9C  9882               	bcf	3970,4,c	;volatile
  2977                           
  2978                           ;TM1640.c: 28: TM1640_Delay(1);
  2979  001A9E  0E01               	movlw	1
  2980  001AA0  EC8F  F00D         	call	_TM1640_Delay
  2981                           
  2982                           ;TM1640.c: 29: RC3 = 0;
  2983  001AA4  9682               	bcf	3970,3,c	;volatile
  2984  001AA6  0012               	return		;funcret
  2985  001AA8                     __end_of_TM1640_Start:
  2986                           	opt stack 0
  2987                           tblptru	equ	0xFF8
  2988                           tblptrh	equ	0xFF7
  2989                           tblptrl	equ	0xFF6
  2990                           tablat	equ	0xFF5
  2991                           intcon	equ	0xFF2
  2992                           postinc0	equ	0xFEE
  2993                           wreg	equ	0xFE8
  2994                           status	equ	0xFD8
  2995                           
  2996 ;; *************** function _TM1640_Delay *****************
  2997 ;; Defined at:
  2998 ;;		line 109 in file "_01_USER/TM1640.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;  Time            1    wreg     unsigned char 
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;  Time            1   24[COMRAM] unsigned char 
  3003 ;;  i               1   25[COMRAM] unsigned char 
  3004 ;; Return value:  Size  Location     Type
  3005 ;;		None               void
  3006 ;; Registers used:
  3007 ;;		wreg, status,2, status,0
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3014 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3016 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3017 ;;Total ram usage:        2 bytes
  3018 ;; Hardware stack levels used:    1
  3019 ;; Hardware stack levels required when called:    3
  3020 ;; This function calls:
  3021 ;;		Nothing
  3022 ;; This function is called by:
  3023 ;;		_TM1640_Start
  3024 ;;		_TM1640_Stop
  3025 ;;		_TM1640_Writer_Byte
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           	psect	text25
  3030  001B1E                     __ptext25:
  3031                           	opt stack 0
  3032  001B1E                     _TM1640_Delay:
  3033                           	opt stack 23
  3034                           
  3035                           ;incstack = 0
  3036                           ;TM1640_Delay@Time stored from wreg
  3037  001B1E  6E19               	movwf	TM1640_Delay@Time,c
  3038  001B20                     
  3039                           ;TM1640.c: 114: {
  3040                           ;TM1640.c: 115: for(i=0; i<10; ++i);
  3041  001B20  0E00               	movlw	0
  3042  001B22  6E1A               	movwf	TM1640_Delay@i,c
  3043  001B24  D002               	goto	l2179
  3044  001B26  D004               	goto	l305
  3045  001B28                     l2177:
  3046  001B28  2A1A               	incf	TM1640_Delay@i,f,c
  3047  001B2A                     l2179:
  3048  001B2A  0E09               	movlw	9
  3049  001B2C  641A               	cpfsgt	TM1640_Delay@i,c
  3050  001B2E  D7FC               	goto	l2177
  3051  001B30                     l305:
  3052                           
  3053                           ;TM1640.c: 116: }while(--Time);
  3054  001B30  2E19               	decfsz	TM1640_Delay@Time,f,c
  3055  001B32  D7F6               	goto	l2171
  3056  001B34  0012               	return	
  3057  001B36  0012               	return		;funcret
  3058  001B38                     __end_of_TM1640_Delay:
  3059                           	opt stack 0
  3060                           tblptru	equ	0xFF8
  3061                           tblptrh	equ	0xFF7
  3062                           tblptrl	equ	0xFF6
  3063                           tablat	equ	0xFF5
  3064                           intcon	equ	0xFF2
  3065                           postinc0	equ	0xFEE
  3066                           wreg	equ	0xFE8
  3067                           status	equ	0xFD8
  3068                           
  3069 ;; *************** function _GPIO_Config *****************
  3070 ;; Defined at:
  3071 ;;		line 38 in file "_01_USER/GPIO.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;		None
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;		None
  3076 ;; Return value:  Size  Location     Type
  3077 ;;		None               void
  3078 ;; Registers used:
  3079 ;;		wreg, status,2, status,0
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3089 ;;Total ram usage:        0 bytes
  3090 ;; Hardware stack levels used:    1
  3091 ;; Hardware stack levels required when called:    3
  3092 ;; This function calls:
  3093 ;;		Nothing
  3094 ;; This function is called by:
  3095 ;;		_main
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099                           	psect	text26
  3100  001B76                     __ptext26:
  3101                           	opt stack 0
  3102  001B76                     _GPIO_Config:
  3103                           	opt stack 27
  3104                           
  3105                           ;GPIO.c: 41: TRISE &= 0x1f;
  3106                           
  3107                           ;incstack = 0
  3108  001B76  0E1F               	movlw	31
  3109  001B78  1696               	andwf	3990,f,c	;volatile
  3110                           
  3111                           ;GPIO.c: 43: RE5 = 1;
  3112  001B7A  8A84               	bsf	3972,5,c	;volatile
  3113                           
  3114                           ;GPIO.c: 44: RE6 = 1;
  3115  001B7C  8C84               	bsf	3972,6,c	;volatile
  3116                           
  3117                           ;GPIO.c: 45: RE7 = 1;
  3118  001B7E  8E84               	bsf	3972,7,c	;volatile
  3119  001B80  0012               	return		;funcret
  3120  001B82                     __end_of_GPIO_Config:
  3121                           	opt stack 0
  3122                           tblptru	equ	0xFF8
  3123                           tblptrh	equ	0xFF7
  3124                           tblptrl	equ	0xFF6
  3125                           tablat	equ	0xFF5
  3126                           intcon	equ	0xFF2
  3127                           postinc0	equ	0xFEE
  3128                           wreg	equ	0xFE8
  3129                           status	equ	0xFD8
  3130                           
  3131 ;; *************** function _ADC6_Init *****************
  3132 ;; Defined at:
  3133 ;;		line 37 in file "_01_USER/My_ADC.c"
  3134 ;; Parameters:    Size  Location     Type
  3135 ;;		None
  3136 ;; Auto vars:     Size  Location     Type
  3137 ;;		None
  3138 ;; Return value:  Size  Location     Type
  3139 ;;		None               void
  3140 ;; Registers used:
  3141 ;;		wreg, status,2, status,0, cstack
  3142 ;; Tracked objects:
  3143 ;;		On entry : 0/0
  3144 ;;		On exit  : 0/0
  3145 ;;		Unchanged: 0/0
  3146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3151 ;;Total ram usage:        0 bytes
  3152 ;; Hardware stack levels used:    1
  3153 ;; Hardware stack levels required when called:    4
  3154 ;; This function calls:
  3155 ;;		_OpenADC
  3156 ;; This function is called by:
  3157 ;;		_main
  3158 ;; This function uses a non-reentrant model
  3159 ;;
  3160                           
  3161                           	psect	text27
  3162  001B38                     __ptext27:
  3163                           	opt stack 0
  3164  001B38                     _ADC6_Init:
  3165                           	opt stack 26
  3166                           
  3167                           ;My_ADC.c: 40: OpenADC(0b11111111 &
  3168                           ;My_ADC.c: 41: 0b11110011 &
  3169                           ;My_ADC.c: 42: 0b10001111
  3170                           ;My_ADC.c: 43: ,
  3171                           ;My_ADC.c: 44: 0b10011011
  3172                           ;My_ADC.c: 45: ,
  3173                           ;My_ADC.c: 46: 0b00111111 &
  3174                           ;My_ADC.c: 47: 0b11111111 &
  3175                           ;My_ADC.c: 48: 0b11110111 &
  3176                           ;My_ADC.c: 49: 0b11111000
  3177                           ;My_ADC.c: 50: );
  3178                           
  3179                           ;incstack = 0
  3180  001B38  0E9B               	movlw	155
  3181  001B3A  6E19               	movwf	OpenADC@config2,c
  3182  001B3C  0E30               	movlw	48
  3183  001B3E  6E1A               	movwf	OpenADC@config3,c
  3184  001B40  0E83               	movlw	131
  3185  001B42  ECD0  F00B         	call	_OpenADC
  3186                           
  3187                           ;My_ADC.c: 52: (PIE1bits.ADIE=0);
  3188  001B46  9C9D               	bcf	3997,6,c	;volatile
  3189  001B48  0012               	return		;funcret
  3190  001B4A                     __end_of_ADC6_Init:
  3191                           	opt stack 0
  3192                           tblptru	equ	0xFF8
  3193                           tblptrh	equ	0xFF7
  3194                           tblptrl	equ	0xFF6
  3195                           tablat	equ	0xFF5
  3196                           intcon	equ	0xFF2
  3197                           postinc0	equ	0xFEE
  3198                           wreg	equ	0xFE8
  3199                           status	equ	0xFD8
  3200                           
  3201 ;; *************** function _OpenADC *****************
  3202 ;; Defined at:
  3203 ;;		line 305 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;  config          1    wreg     unsigned char 
  3206 ;;  config2         1   24[COMRAM] unsigned char 
  3207 ;;  config3         1   25[COMRAM] unsigned char 
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;  config          1   28[COMRAM] unsigned char 
  3210 ;; Return value:  Size  Location     Type
  3211 ;;		None               void
  3212 ;; Registers used:
  3213 ;;		wreg, status,2, status,0
  3214 ;; Tracked objects:
  3215 ;;		On entry : 0/0
  3216 ;;		On exit  : 0/0
  3217 ;;		Unchanged: 0/0
  3218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3219 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3220 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3221 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3222 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3223 ;;Total ram usage:        5 bytes
  3224 ;; Hardware stack levels used:    1
  3225 ;; Hardware stack levels required when called:    3
  3226 ;; This function calls:
  3227 ;;		Nothing
  3228 ;; This function is called by:
  3229 ;;		_ADC6_Init
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232                           
  3233                           	psect	text28
  3234  0017A0                     __ptext28:
  3235                           	opt stack 0
  3236  0017A0                     _OpenADC:
  3237                           	opt stack 26
  3238                           
  3239                           ;incstack = 0
  3240                           ;OpenADC@config stored from wreg
  3241  0017A0  6E1D               	movwf	OpenADC@config,c
  3242  0017A2  0E00               	movlw	0
  3243  0017A4  6EC2               	movwf	4034,c	;volatile
  3244  0017A6  0E00               	movlw	0
  3245  0017A8  6EC1               	movwf	4033,c	;volatile
  3246  0017AA  0E00               	movlw	0
  3247  0017AC  6EC0               	movwf	4032,c	;volatile
  3248  0017AE  5019               	movf	OpenADC@config2,w,c
  3249  0017B0  0B7C               	andlw	124
  3250  0017B2  6EC2               	movwf	4034,c	;volatile
  3251  0017B4  C01A  FFC1         	movff	OpenADC@config3,4033	;volatile
  3252  0017B8  C01D  F01B         	movff	OpenADC@config,??_OpenADC
  3253  0017BC  90D8               	bcf	status,0,c
  3254  0017BE  361B               	rlcf	??_OpenADC,f,c
  3255  0017C0  90D8               	bcf	status,0,c
  3256  0017C2  361B               	rlcf	??_OpenADC,f,c
  3257  0017C4  0E38               	movlw	56
  3258  0017C6  161B               	andwf	??_OpenADC,f,c
  3259  0017C8  C01D  F01C         	movff	OpenADC@config,??_OpenADC+1
  3260  0017CC  3A1C               	swapf	??_OpenADC+1,f,c
  3261  0017CE  0E0F               	movlw	15
  3262  0017D0  161C               	andwf	??_OpenADC+1,f,c
  3263  0017D2  0E07               	movlw	7
  3264  0017D4  161C               	andwf	??_OpenADC+1,f,c
  3265  0017D6  501D               	movf	OpenADC@config,w,c
  3266  0017D8  0B80               	andlw	128
  3267  0017DA  101C               	iorwf	??_OpenADC+1,w,c
  3268  0017DC  101B               	iorwf	??_OpenADC,w,c
  3269  0017DE  6EC0               	movwf	4032,c	;volatile
  3270  0017E0  AE19               	btfss	OpenADC@config2,7,c
  3271  0017E2  D003               	goto	l394
  3272  0017E4  9C9E               	bcf	3998,6,c	;volatile
  3273  0017E6  8C9D               	bsf	3997,6,c	;volatile
  3274  0017E8  8CF2               	bsf	intcon,6,c	;volatile
  3275  0017EA                     l394:
  3276  0017EA  80C2               	bsf	4034,0,c	;volatile
  3277  0017EC  0012               	return		;funcret
  3278  0017EE                     __end_of_OpenADC:
  3279                           	opt stack 0
  3280                           tblptru	equ	0xFF8
  3281                           tblptrh	equ	0xFF7
  3282                           tblptrl	equ	0xFF6
  3283                           tablat	equ	0xFF5
  3284                           intcon	equ	0xFF2
  3285                           postinc0	equ	0xFEE
  3286                           wreg	equ	0xFE8
  3287                           status	equ	0xFD8
  3288                           
  3289 ;; *************** function _Sys_Cyc *****************
  3290 ;; Defined at:
  3291 ;;		line 99 in file "_01_USER/My_Timer.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;		None
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;  _pulse          1   23[COMRAM] unsigned char 
  3296 ;; Return value:  Size  Location     Type
  3297 ;;		None               void
  3298 ;; Registers used:
  3299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3300 ;; Tracked objects:
  3301 ;;		On entry : 0/0
  3302 ;;		On exit  : 0/0
  3303 ;;		Unchanged: 0/0
  3304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3306 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3307 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3308 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3309 ;;Total ram usage:       15 bytes
  3310 ;; Hardware stack levels used:    1
  3311 ;; Hardware stack levels required when called:    2
  3312 ;; This function calls:
  3313 ;;		_Delay_1Khz
  3314 ;;		_Key_FSM_Scan
  3315 ;;		_Manage_Message
  3316 ;;		___llmod
  3317 ;;		i2_SetTimer0
  3318 ;; This function is called by:
  3319 ;;		Interrupt level 2
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323                           	psect	intcode
  3324  000008                     __pintcode:
  3325                           	opt stack 0
  3326  000008                     _Sys_Cyc:
  3327                           	opt stack 23
  3328                           
  3329                           ;incstack = 0
  3330  000008  CFFA F00A          	movff	pclath,??_Sys_Cyc
  3331  00000C  CFFB F00B          	movff	pclatu,??_Sys_Cyc+1
  3332  000010  CFE9 F00C          	movff	fsr0l,??_Sys_Cyc+2
  3333  000014  CFEA F00D          	movff	fsr0h,??_Sys_Cyc+3
  3334  000018  CFE1 F00E          	movff	fsr1l,??_Sys_Cyc+4
  3335  00001C  CFE2 F00F          	movff	fsr1h,??_Sys_Cyc+5
  3336  000020  CFD9 F010          	movff	fsr2l,??_Sys_Cyc+6
  3337  000024  CFDA F011          	movff	fsr2h,??_Sys_Cyc+7
  3338  000028  CFF3 F012          	movff	prodl,??_Sys_Cyc+8
  3339  00002C  CFF4 F013          	movff	prodh,??_Sys_Cyc+9
  3340  000030  CFF6 F014          	movff	tblptrl,??_Sys_Cyc+10
  3341  000034  CFF7 F015          	movff	tblptrh,??_Sys_Cyc+11
  3342  000038  CFF8 F016          	movff	tblptru,??_Sys_Cyc+12
  3343  00003C  CFF5 F017          	movff	tablat,??_Sys_Cyc+13
  3344                           
  3345                           ;My_Timer.c: 102: static unsigned char _overturn_1Khz = 0,_overturn_LED = 0;
  3346                           ;My_Timer.c: 103: unsigned char _pulse = 10;
  3347  000040  0E0A               	movlw	10
  3348  000042  6E18               	movwf	Sys_Cyc@_pulse,c
  3349                           
  3350                           ;My_Timer.c: 107: if(TMR0IF && TMR0IE)
  3351  000044  B4F2               	btfsc	intcon,2,c	;volatile
  3352  000046  AAF2               	btfss	intcon,5,c	;volatile
  3353  000048  D05F               	goto	i2l2155
  3354                           
  3355                           ;My_Timer.c: 108: {
  3356                           ;My_Timer.c: 109: Timer_Cyc = (Timer_Cyc+1) % 100000000;
  3357  00004A  0E01               	movlw	1
  3358  00004C  242D               	addwf	_Timer_Cyc,w,c
  3359  00004E  6E01               	movwf	___llmod@dividend,c
  3360  000050  0E00               	movlw	0
  3361  000052  202E               	addwfc	_Timer_Cyc+1,w,c
  3362  000054  6E02               	movwf	___llmod@dividend+1,c
  3363  000056  0E00               	movlw	0
  3364  000058  202F               	addwfc	_Timer_Cyc+2,w,c
  3365  00005A  6E03               	movwf	___llmod@dividend+2,c
  3366  00005C  0E00               	movlw	0
  3367  00005E  2030               	addwfc	_Timer_Cyc+3,w,c
  3368  000060  6E04               	movwf	___llmod@dividend+3,c
  3369  000062  0E00               	movlw	0
  3370  000064  6E05               	movwf	___llmod@divisor,c
  3371  000066  0EE1               	movlw	225
  3372  000068  6E06               	movwf	___llmod@divisor+1,c
  3373  00006A  0EF5               	movlw	245
  3374  00006C  6E07               	movwf	___llmod@divisor+2,c
  3375  00006E  0E05               	movlw	5
  3376  000070  6E08               	movwf	___llmod@divisor+3,c
  3377  000072  EC34  F00B         	call	___llmod	;wreg free
  3378  000076  C001  F02D         	movff	?___llmod,_Timer_Cyc
  3379  00007A  C002  F02E         	movff	?___llmod+1,_Timer_Cyc+1
  3380  00007E  C003  F02F         	movff	?___llmod+2,_Timer_Cyc+2
  3381  000082  C004  F030         	movff	?___llmod+3,_Timer_Cyc+3
  3382                           
  3383                           ;My_Timer.c: 112: if( Handle_01_Switch._1Khz )
  3384  000086  5034               	movf	_Handle_01_Switch,w,c
  3385  000088  A4D8               	btfss	status,2,c
  3386  00008A  D00D               	goto	i2l2139
  3387  00008C  D012               	goto	i2l2141
  3388                           
  3389                           ;My_Timer.c: 113: {
  3390                           ;My_Timer.c: 114: while( _pulse-- )
  3391  00008E  D00B               	goto	i2l2139
  3392  000090                     i2l2131:
  3393                           
  3394                           ;My_Timer.c: 115: {
  3395                           ;My_Timer.c: 116: _overturn_1Khz =~ _overturn_1Khz;
  3396  000090  1E3B               	comf	Sys_Cyc@_overturn_1Khz,f,c
  3397                           
  3398                           ;My_Timer.c: 117: if(_overturn_1Khz) PORTEbits.RE7 = 1; else PORTEbits.RE7 = 0;
  3399  000092  503B               	movf	Sys_Cyc@_overturn_1Khz,w,c
  3400  000094  B4D8               	btfsc	status,2,c
  3401  000096  D002               	goto	i2l236
  3402  000098  8E84               	bsf	3972,7,c	;volatile
  3403  00009A  D002               	goto	i2l2137
  3404  00009C                     i2l236:
  3405  00009C  9E84               	bcf	3972,7,c	;volatile
  3406  00009E  D000               	goto	i2l2137
  3407  0000A0                     i2l2137:
  3408                           
  3409                           ;My_Timer.c: 118: Delay_1Khz();
  3410  0000A0  EC95  F00C         	call	_Delay_1Khz	;wreg free
  3411  0000A4  D000               	goto	i2l2139
  3412  0000A6                     i2l2139:
  3413  0000A6  0618               	decf	Sys_Cyc@_pulse,f,c
  3414  0000A8  2818               	incf	Sys_Cyc@_pulse,w,c
  3415  0000AA  B4D8               	btfsc	status,2,c
  3416  0000AC  D002               	goto	i2l2141
  3417  0000AE  D7F0               	goto	i2l2131
  3418  0000B0  D000               	goto	i2l2141
  3419  0000B2                     i2l2141:
  3420                           
  3421                           ;My_Timer.c: 119: }
  3422                           ;My_Timer.c: 120: }
  3423                           ;My_Timer.c: 123: if( Timer_Cyc%30 == 0 )
  3424  0000B2  C02D  F001         	movff	_Timer_Cyc,___llmod@dividend
  3425  0000B6  C02E  F002         	movff	_Timer_Cyc+1,___llmod@dividend+1
  3426  0000BA  C02F  F003         	movff	_Timer_Cyc+2,___llmod@dividend+2
  3427  0000BE  C030  F004         	movff	_Timer_Cyc+3,___llmod@dividend+3
  3428  0000C2  0E1E               	movlw	30
  3429  0000C4  6E05               	movwf	___llmod@divisor,c
  3430  0000C6  0E00               	movlw	0
  3431  0000C8  6E06               	movwf	___llmod@divisor+1,c
  3432  0000CA  0E00               	movlw	0
  3433  0000CC  6E07               	movwf	___llmod@divisor+2,c
  3434  0000CE  0E00               	movlw	0
  3435  0000D0  6E08               	movwf	___llmod@divisor+3,c
  3436  0000D2  EC34  F00B         	call	___llmod	;wreg free
  3437  0000D6  5001               	movf	?___llmod,w,c
  3438  0000D8  1002               	iorwf	?___llmod+1,w,c
  3439  0000DA  1003               	iorwf	?___llmod+2,w,c
  3440  0000DC  1004               	iorwf	?___llmod+3,w,c
  3441  0000DE  A4D8               	btfss	status,2,c
  3442  0000E0  D008               	goto	i2l2149
  3443                           
  3444                           ;My_Timer.c: 124: {
  3445                           ;My_Timer.c: 125: _overturn_LED = ~_overturn_LED;
  3446  0000E2  1E3C               	comf	Sys_Cyc@_overturn_LED,f,c
  3447                           
  3448                           ;My_Timer.c: 126: if(_overturn_LED) PORTEbits.RE5=0;
  3449  0000E4  503C               	movf	Sys_Cyc@_overturn_LED,w,c
  3450  0000E6  B4D8               	btfsc	status,2,c
  3451  0000E8  D002               	goto	i2l240
  3452  0000EA  9A84               	bcf	3972,5,c	;volatile
  3453  0000EC  D002               	goto	i2l2149
  3454  0000EE                     i2l240:
  3455                           
  3456                           ;My_Timer.c: 127: else PORTEbits.RE5=1;
  3457  0000EE  8A84               	bsf	3972,5,c	;volatile
  3458  0000F0  D000               	goto	i2l2149
  3459  0000F2                     i2l2149:
  3460                           
  3461                           ;My_Timer.c: 128: }
  3462                           ;My_Timer.c: 131: Key_FSM_Scan();
  3463  0000F2  ECCC  F009         	call	_Key_FSM_Scan	;wreg free
  3464                           
  3465                           ;My_Timer.c: 134: Manage_Message();
  3466  0000F6  EC78  F00C         	call	_Manage_Message	;wreg free
  3467                           
  3468                           ;My_Timer.c: 136: SetTimer0(78);
  3469  0000FA  0E00               	movlw	0
  3470  0000FC  6E02               	movwf	i2SetTimer0@_tmr+1,c
  3471  0000FE  0E4E               	movlw	78
  3472  000100  6E01               	movwf	i2SetTimer0@_tmr,c
  3473  000102  ECC9  F00C         	call	i2_SetTimer0	;wreg free
  3474  000106  D000               	goto	i2l2155
  3475  000108                     i2l2155:
  3476                           
  3477                           ;My_Timer.c: 137: }
  3478                           ;My_Timer.c: 141: if( RC2IF )
  3479  000108  AAA4               	btfss	4004,5,c	;volatile
  3480  00010A  D004               	goto	i2l243
  3481                           
  3482                           ;My_Timer.c: 142: {
  3483                           ;My_Timer.c: 143: USART2_ReceiveBuff = RCREG2;
  3484  00010C  CF1D F037          	movff	3869,_USART2_ReceiveBuff	;volatile
  3485  000110  6A38               	clrf	_USART2_ReceiveBuff+1,c
  3486  000112  D000               	goto	i2l243
  3487  000114                     i2l243:
  3488  000114  C017  FFF5         	movff	??_Sys_Cyc+13,tablat
  3489  000118  C016  FFF8         	movff	??_Sys_Cyc+12,tblptru
  3490  00011C  C015  FFF7         	movff	??_Sys_Cyc+11,tblptrh
  3491  000120  C014  FFF6         	movff	??_Sys_Cyc+10,tblptrl
  3492  000124  C013  FFF4         	movff	??_Sys_Cyc+9,prodh
  3493  000128  C012  FFF3         	movff	??_Sys_Cyc+8,prodl
  3494  00012C  C011  FFDA         	movff	??_Sys_Cyc+7,fsr2h
  3495  000130  C010  FFD9         	movff	??_Sys_Cyc+6,fsr2l
  3496  000134  C00F  FFE2         	movff	??_Sys_Cyc+5,fsr1h
  3497  000138  C00E  FFE1         	movff	??_Sys_Cyc+4,fsr1l
  3498  00013C  C00D  FFEA         	movff	??_Sys_Cyc+3,fsr0h
  3499  000140  C00C  FFE9         	movff	??_Sys_Cyc+2,fsr0l
  3500  000144  C00B  FFFB         	movff	??_Sys_Cyc+1,pclatu
  3501  000148  C00A  FFFA         	movff	??_Sys_Cyc,pclath
  3502  00014C  0011               	retfie		f
  3503  00014E                     __end_of_Sys_Cyc:
  3504                           	opt stack 0
  3505                           pclatu	equ	0xFFB
  3506                           pclath	equ	0xFFA
  3507                           tblptru	equ	0xFF8
  3508                           tblptrh	equ	0xFF7
  3509                           tblptrl	equ	0xFF6
  3510                           tablat	equ	0xFF5
  3511                           prodh	equ	0xFF4
  3512                           prodl	equ	0xFF3
  3513                           intcon	equ	0xFF2
  3514                           postinc0	equ	0xFEE
  3515                           fsr0h	equ	0xFEA
  3516                           fsr0l	equ	0xFE9
  3517                           wreg	equ	0xFE8
  3518                           fsr1h	equ	0xFE2
  3519                           fsr1l	equ	0xFE1
  3520                           fsr2h	equ	0xFDA
  3521                           fsr2l	equ	0xFD9
  3522                           status	equ	0xFD8
  3523                           
  3524 ;; *************** function i2_SetTimer0 *****************
  3525 ;; Defined at:
  3526 ;;		line 80 in file "_01_USER/My_Timer.c"
  3527 ;; Parameters:    Size  Location     Type
  3528 ;;  _tmr            2    0[COMRAM] unsigned int 
  3529 ;; Auto vars:     Size  Location     Type
  3530 ;;		None
  3531 ;; Return value:  Size  Location     Type
  3532 ;;		None               void
  3533 ;; Registers used:
  3534 ;;		wreg, status,2, status,0
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3540 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3542 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3543 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3544 ;;Total ram usage:        4 bytes
  3545 ;; Hardware stack levels used:    1
  3546 ;; This function calls:
  3547 ;;		Nothing
  3548 ;; This function is called by:
  3549 ;;		_Sys_Cyc
  3550 ;; This function uses a non-reentrant model
  3551 ;;
  3552                           
  3553                           	psect	text30
  3554  001992                     __ptext30:
  3555                           	opt stack 0
  3556  001992                     i2_SetTimer0:
  3557                           	opt stack 24
  3558                           
  3559                           ;My_Timer.c: 82: if(_tmr > 0xffff) _tmr = 0xffff;
  3560                           
  3561                           ;incstack = 0
  3562  001992  D003               	goto	i2l2093
  3563  001994  6801               	setf	i2SetTimer0@_tmr,c
  3564  001996  6802               	setf	i2SetTimer0@_tmr+1,c
  3565  001998  D000               	goto	i2l2093
  3566  00199A                     i2l2093:
  3567                           
  3568                           ;My_Timer.c: 83: _tmr=0xffff-_tmr;
  3569  00199A  C001  F003         	movff	i2SetTimer0@_tmr,??i2_SetTimer0
  3570  00199E  C002  F004         	movff	i2SetTimer0@_tmr+1,??i2_SetTimer0+1
  3571  0019A2  1E03               	comf	??i2_SetTimer0,f,c
  3572  0019A4  1E04               	comf	??i2_SetTimer0+1,f,c
  3573  0019A6  4A03               	infsnz	??i2_SetTimer0,f,c
  3574  0019A8  2A04               	incf	??i2_SetTimer0+1,f,c
  3575  0019AA  0EFF               	movlw	255
  3576  0019AC  2403               	addwf	??i2_SetTimer0,w,c
  3577  0019AE  6E01               	movwf	i2SetTimer0@_tmr,c
  3578  0019B0  0EFF               	movlw	255
  3579  0019B2  2004               	addwfc	??i2_SetTimer0+1,w,c
  3580  0019B4  6E02               	movwf	i2SetTimer0@_tmr+1,c
  3581                           
  3582                           ;My_Timer.c: 84: TMR0H = _tmr/256;
  3583  0019B6  5002               	movf	i2SetTimer0@_tmr+1,w,c
  3584  0019B8  6ED7               	movwf	4055,c	;volatile
  3585                           
  3586                           ;My_Timer.c: 85: TMR0L = _tmr%256;
  3587  0019BA  C001  FFD6         	movff	i2SetTimer0@_tmr,4054	;volatile
  3588                           
  3589                           ;My_Timer.c: 86: TMR0IF = 0;
  3590  0019BE  94F2               	bcf	intcon,2,c	;volatile
  3591  0019C0  0012               	return		;funcret
  3592  0019C2                     __end_ofi2_SetTimer0:
  3593                           	opt stack 0
  3594                           pclatu	equ	0xFFB
  3595                           pclath	equ	0xFFA
  3596                           tblptru	equ	0xFF8
  3597                           tblptrh	equ	0xFF7
  3598                           tblptrl	equ	0xFF6
  3599                           tablat	equ	0xFF5
  3600                           prodh	equ	0xFF4
  3601                           prodl	equ	0xFF3
  3602                           intcon	equ	0xFF2
  3603                           postinc0	equ	0xFEE
  3604                           fsr0h	equ	0xFEA
  3605                           fsr0l	equ	0xFE9
  3606                           wreg	equ	0xFE8
  3607                           fsr1h	equ	0xFE2
  3608                           fsr1l	equ	0xFE1
  3609                           fsr2h	equ	0xFDA
  3610                           fsr2l	equ	0xFD9
  3611                           status	equ	0xFD8
  3612                           
  3613 ;; *************** function ___llmod *****************
  3614 ;; Defined at:
  3615 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;  dividend        4    0[COMRAM] unsigned long 
  3618 ;;  divisor         4    4[COMRAM] unsigned long 
  3619 ;; Auto vars:     Size  Location     Type
  3620 ;;  counter         1    8[COMRAM] unsigned char 
  3621 ;; Return value:  Size  Location     Type
  3622 ;;                  4    0[COMRAM] unsigned long 
  3623 ;; Registers used:
  3624 ;;		wreg, status,2, status,0
  3625 ;; Tracked objects:
  3626 ;;		On entry : 0/0
  3627 ;;		On exit  : 0/0
  3628 ;;		Unchanged: 0/0
  3629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3630 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3631 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3633 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3634 ;;Total ram usage:        9 bytes
  3635 ;; Hardware stack levels used:    1
  3636 ;; This function calls:
  3637 ;;		Nothing
  3638 ;; This function is called by:
  3639 ;;		_Sys_Cyc
  3640 ;; This function uses a non-reentrant model
  3641 ;;
  3642                           
  3643                           	psect	text31
  3644  001668                     __ptext31:
  3645                           	opt stack 0
  3646  001668                     ___llmod:
  3647                           	opt stack 24
  3648                           
  3649                           ;incstack = 0
  3650  001668  5005               	movf	___llmod@divisor,w,c
  3651  00166A  1006               	iorwf	___llmod@divisor+1,w,c
  3652  00166C  1007               	iorwf	___llmod@divisor+2,w,c
  3653  00166E  1008               	iorwf	___llmod@divisor+3,w,c
  3654  001670  B4D8               	btfsc	status,2,c
  3655  001672  D029               	goto	i2l905
  3656  001674  0E01               	movlw	1
  3657  001676  6E09               	movwf	___llmod@counter,c
  3658  001678  D007               	goto	i2l2079
  3659  00167A                     i2l2077:
  3660  00167A  90D8               	bcf	status,0,c
  3661  00167C  3605               	rlcf	___llmod@divisor,f,c
  3662  00167E  3606               	rlcf	___llmod@divisor+1,f,c
  3663  001680  3607               	rlcf	___llmod@divisor+2,f,c
  3664  001682  3608               	rlcf	___llmod@divisor+3,f,c
  3665  001684  2A09               	incf	___llmod@counter,f,c
  3666  001686  D000               	goto	i2l2079
  3667  001688                     i2l2079:
  3668  001688  BE08               	btfsc	___llmod@divisor+3,7,c
  3669  00168A  D002               	goto	i2l2081
  3670  00168C  D7F6               	goto	i2l2077
  3671  00168E  D000               	goto	i2l2081
  3672  001690                     i2l2081:
  3673  001690  5005               	movf	___llmod@divisor,w,c
  3674  001692  5C01               	subwf	___llmod@dividend,w,c
  3675  001694  5006               	movf	___llmod@divisor+1,w,c
  3676  001696  5802               	subwfb	___llmod@dividend+1,w,c
  3677  001698  5007               	movf	___llmod@divisor+2,w,c
  3678  00169A  5803               	subwfb	___llmod@dividend+2,w,c
  3679  00169C  5008               	movf	___llmod@divisor+3,w,c
  3680  00169E  5804               	subwfb	___llmod@dividend+3,w,c
  3681  0016A0  A0D8               	btfss	status,0,c
  3682  0016A2  D009               	goto	i2l2085
  3683  0016A4  5005               	movf	___llmod@divisor,w,c
  3684  0016A6  5E01               	subwf	___llmod@dividend,f,c
  3685  0016A8  5006               	movf	___llmod@divisor+1,w,c
  3686  0016AA  5A02               	subwfb	___llmod@dividend+1,f,c
  3687  0016AC  5007               	movf	___llmod@divisor+2,w,c
  3688  0016AE  5A03               	subwfb	___llmod@dividend+2,f,c
  3689  0016B0  5008               	movf	___llmod@divisor+3,w,c
  3690  0016B2  5A04               	subwfb	___llmod@dividend+3,f,c
  3691  0016B4  D000               	goto	i2l2085
  3692  0016B6                     i2l2085:
  3693  0016B6  90D8               	bcf	status,0,c
  3694  0016B8  3208               	rrcf	___llmod@divisor+3,f,c
  3695  0016BA  3207               	rrcf	___llmod@divisor+2,f,c
  3696  0016BC  3206               	rrcf	___llmod@divisor+1,f,c
  3697  0016BE  3205               	rrcf	___llmod@divisor,f,c
  3698  0016C0  2E09               	decfsz	___llmod@counter,f,c
  3699  0016C2  D7E6               	goto	i2l2081
  3700  0016C4  D000               	goto	i2l905
  3701  0016C6                     i2l905:
  3702  0016C6  C001  F001         	movff	___llmod@dividend,?___llmod
  3703  0016CA  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  3704  0016CE  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  3705  0016D2  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  3706  0016D6  0012               	return		;funcret
  3707  0016D8                     __end_of___llmod:
  3708                           	opt stack 0
  3709                           pclatu	equ	0xFFB
  3710                           pclath	equ	0xFFA
  3711                           tblptru	equ	0xFF8
  3712                           tblptrh	equ	0xFF7
  3713                           tblptrl	equ	0xFF6
  3714                           tablat	equ	0xFF5
  3715                           prodh	equ	0xFF4
  3716                           prodl	equ	0xFF3
  3717                           intcon	equ	0xFF2
  3718                           postinc0	equ	0xFEE
  3719                           fsr0h	equ	0xFEA
  3720                           fsr0l	equ	0xFE9
  3721                           wreg	equ	0xFE8
  3722                           fsr1h	equ	0xFE2
  3723                           fsr1l	equ	0xFE1
  3724                           fsr2h	equ	0xFDA
  3725                           fsr2l	equ	0xFD9
  3726                           status	equ	0xFD8
  3727                           
  3728 ;; *************** function _Manage_Message *****************
  3729 ;; Defined at:
  3730 ;;		line 47 in file "_01_USER/Run.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;		None
  3733 ;; Auto vars:     Size  Location     Type
  3734 ;;		None
  3735 ;; Return value:  Size  Location     Type
  3736 ;;                  2  208[None  ] int 
  3737 ;; Registers used:
  3738 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3739 ;; Tracked objects:
  3740 ;;		On entry : 0/0
  3741 ;;		On exit  : 0/0
  3742 ;;		Unchanged: 0/0
  3743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3748 ;;Total ram usage:        0 bytes
  3749 ;; Hardware stack levels used:    1
  3750 ;; Hardware stack levels required when called:    1
  3751 ;; This function calls:
  3752 ;;		_Key_FSM_Read
  3753 ;; This function is called by:
  3754 ;;		_Sys_Cyc
  3755 ;; This function uses a non-reentrant model
  3756 ;;
  3757                           
  3758                           	psect	text32
  3759  0018F0                     __ptext32:
  3760                           	opt stack 0
  3761  0018F0                     _Manage_Message:
  3762                           	opt stack 23
  3763                           
  3764                           ;Run.c: 49: if (Key_FSM_Read(4) == 0x01 ) USART2_TendBuff ++;
  3765                           
  3766                           ;incstack = 0
  3767  0018F0  0E04               	movlw	4
  3768  0018F2  ECF2  F00A         	call	_Key_FSM_Read
  3769  0018F6  06E8               	decf	wreg,f,c
  3770  0018F8  A4D8               	btfss	status,2,c
  3771  0018FA  D003               	goto	i2l1585
  3772  0018FC  4A39               	infsnz	_USART2_TendBuff,f,c
  3773  0018FE  2A3A               	incf	_USART2_TendBuff+1,f,c
  3774  001900  D000               	goto	i2l1585
  3775  001902                     i2l1585:
  3776                           
  3777                           ;Run.c: 50: if (Key_FSM_Read(1) == 0x01 ) Handle_01_Switch.Usart_OneDate = 1;
  3778  001902  0E01               	movlw	1
  3779  001904  ECF2  F00A         	call	_Key_FSM_Read
  3780  001908  06E8               	decf	wreg,f,c
  3781  00190A  A4D8               	btfss	status,2,c
  3782  00190C  D003               	goto	i2l1589
  3783  00190E  0E01               	movlw	1
  3784  001910  6E36               	movwf	_Handle_01_Switch+2,c
  3785  001912  D000               	goto	i2l1589
  3786  001914                     i2l1589:
  3787                           
  3788                           ;Run.c: 51: if (Key_FSM_Read(2) == 0x01 ) USART2_TendBuff --;
  3789  001914  0E02               	movlw	2
  3790  001916  ECF2  F00A         	call	_Key_FSM_Read
  3791  00191A  06E8               	decf	wreg,f,c
  3792  00191C  A4D8               	btfss	status,2,c
  3793  00191E  0012               	return	
  3794  001920  0639               	decf	_USART2_TendBuff,f,c
  3795  001922  A0D8               	btfss	status,0,c
  3796  001924  063A               	decf	_USART2_TendBuff+1,f,c
  3797  001926  0012               	return	
  3798  001928  0012               	return		;funcret
  3799  00192A                     __end_of_Manage_Message:
  3800                           	opt stack 0
  3801                           pclatu	equ	0xFFB
  3802                           pclath	equ	0xFFA
  3803                           tblptru	equ	0xFF8
  3804                           tblptrh	equ	0xFF7
  3805                           tblptrl	equ	0xFF6
  3806                           tablat	equ	0xFF5
  3807                           prodh	equ	0xFF4
  3808                           prodl	equ	0xFF3
  3809                           intcon	equ	0xFF2
  3810                           postinc0	equ	0xFEE
  3811                           fsr0h	equ	0xFEA
  3812                           fsr0l	equ	0xFE9
  3813                           wreg	equ	0xFE8
  3814                           fsr1h	equ	0xFE2
  3815                           fsr1l	equ	0xFE1
  3816                           fsr2h	equ	0xFDA
  3817                           fsr2l	equ	0xFD9
  3818                           status	equ	0xFD8
  3819                           
  3820 ;; *************** function _Key_FSM_Read *****************
  3821 ;; Defined at:
  3822 ;;		line 155 in file "_01_USER/Key.c"
  3823 ;; Parameters:    Size  Location     Type
  3824 ;;  key_num         1    wreg     unsigned char 
  3825 ;; Auto vars:     Size  Location     Type
  3826 ;;  key_num         1    5[COMRAM] unsigned char 
  3827 ;;  temp            1    4[COMRAM] unsigned char 
  3828 ;; Return value:  Size  Location     Type
  3829 ;;                  1    wreg      unsigned char 
  3830 ;; Registers used:
  3831 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3832 ;; Tracked objects:
  3833 ;;		On entry : 0/0
  3834 ;;		On exit  : 0/0
  3835 ;;		Unchanged: 0/0
  3836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3838 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3839 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3840 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3841 ;;Total ram usage:        6 bytes
  3842 ;; Hardware stack levels used:    1
  3843 ;; This function calls:
  3844 ;;		Nothing
  3845 ;; This function is called by:
  3846 ;;		_Manage_Message
  3847 ;; This function uses a non-reentrant model
  3848 ;;
  3849                           
  3850                           	psect	text33
  3851  0015E4                     __ptext33:
  3852                           	opt stack 0
  3853  0015E4                     _Key_FSM_Read:
  3854                           	opt stack 23
  3855                           
  3856                           ;incstack = 0
  3857                           ;Key_FSM_Read@key_num stored from wreg
  3858  0015E4  6E06               	movwf	Key_FSM_Read@key_num,c
  3859                           
  3860                           ;Key.c: 157: unsigned char temp;
  3861                           ;Key.c: 158: if( key_num != 0xff )
  3862  0015E6  2806               	incf	Key_FSM_Read@key_num,w,c
  3863  0015E8  B4D8               	btfsc	status,2,c
  3864  0015EA  D02F               	goto	i2l1301
  3865                           
  3866                           ;Key.c: 159: {
  3867                           ;Key.c: 160: if( Local_Key_FSM.key_state == 0x00 )
  3868  0015EC  503E               	movf	_Local_Key_FSM,w,c	;volatile
  3869  0015EE  A4D8               	btfss	status,2,c
  3870  0015F0  D029               	goto	i2l1297
  3871                           
  3872                           ;Key.c: 161: {
  3873                           ;Key.c: 162: temp = Local_Key_FSM.key_FSM[key_num-1];
  3874  0015F2  0EFF               	movlw	255
  3875  0015F4  6E01               	movwf	??_Key_FSM_Read& (0+255),c
  3876  0015F6  0EFF               	movlw	255
  3877  0015F8  6E02               	movwf	(??_Key_FSM_Read+1)& (0+255),c
  3878  0015FA  5006               	movf	Key_FSM_Read@key_num,w,c
  3879  0015FC  6E03               	movwf	(??_Key_FSM_Read+2)& (0+255),c
  3880  0015FE  6A04               	clrf	(??_Key_FSM_Read+3)& (0+255),c
  3881  001600  5001               	movf	??_Key_FSM_Read,w,c
  3882  001602  2603               	addwf	??_Key_FSM_Read+2,f,c
  3883  001604  5002               	movf	??_Key_FSM_Read+1,w,c
  3884  001606  2204               	addwfc	??_Key_FSM_Read+3,f,c
  3885  001608  0E3F               	movlw	low (_Local_Key_FSM+1)
  3886  00160A  2403               	addwf	??_Key_FSM_Read+2,w,c
  3887  00160C  6ED9               	movwf	fsr2l,c
  3888  00160E  0E00               	movlw	high (_Local_Key_FSM+1)
  3889  001610  2004               	addwfc	??_Key_FSM_Read+3,w,c
  3890  001612  6EDA               	movwf	fsr2h,c
  3891  001614  50DF               	movf	indf2,w,c
  3892  001616  6E05               	movwf	Key_FSM_Read@temp,c
  3893                           
  3894                           ;Key.c: 163: Local_Key_FSM.key_FSM[key_num-1] = 0x00;
  3895  001618  0EFF               	movlw	255
  3896  00161A  6E01               	movwf	??_Key_FSM_Read& (0+255),c
  3897  00161C  0EFF               	movlw	255
  3898  00161E  6E02               	movwf	(??_Key_FSM_Read+1)& (0+255),c
  3899  001620  5006               	movf	Key_FSM_Read@key_num,w,c
  3900  001622  6E03               	movwf	(??_Key_FSM_Read+2)& (0+255),c
  3901  001624  6A04               	clrf	(??_Key_FSM_Read+3)& (0+255),c
  3902  001626  5001               	movf	??_Key_FSM_Read,w,c
  3903  001628  2603               	addwf	??_Key_FSM_Read+2,f,c
  3904  00162A  5002               	movf	??_Key_FSM_Read+1,w,c
  3905  00162C  2204               	addwfc	??_Key_FSM_Read+3,f,c
  3906  00162E  0E3F               	movlw	low (_Local_Key_FSM+1)
  3907  001630  2403               	addwf	??_Key_FSM_Read+2,w,c
  3908  001632  6ED9               	movwf	fsr2l,c
  3909  001634  0E00               	movlw	high (_Local_Key_FSM+1)
  3910  001636  2004               	addwfc	??_Key_FSM_Read+3,w,c
  3911  001638  6EDA               	movwf	fsr2h,c
  3912  00163A  0E00               	movlw	0
  3913  00163C  6EDF               	movwf	indf2,c
  3914                           
  3915                           ;Key.c: 164: return temp;
  3916  00163E  5005               	movf	Key_FSM_Read@temp,w,c
  3917  001640  0012               	return	
  3918                           
  3919                           ;Key.c: 165: }
  3920  001642  D003               	goto	i2l1301
  3921  001644                     i2l1297:
  3922                           
  3923                           ;Key.c: 167: else return 0x04;
  3924  001644  0E04               	movlw	4
  3925  001646  0012               	return	
  3926  001648  D000               	goto	i2l1301
  3927  00164A                     i2l1301:
  3928                           
  3929                           ;Key.c: 168: }
  3930                           ;Key.c: 170: if ( key_num == 0xff )
  3931  00164A  2806               	incf	Key_FSM_Read@key_num,w,c
  3932  00164C  A4D8               	btfss	status,2,c
  3933  00164E  0012               	return	
  3934                           
  3935                           ;Key.c: 171: {
  3936                           ;Key.c: 172: if( Local_Key_FSM.key_state == 0x00 )
  3937  001650  503E               	movf	_Local_Key_FSM,w,c	;volatile
  3938  001652  A4D8               	btfss	status,2,c
  3939  001654  D006               	goto	i2l1313
  3940                           
  3941                           ;Key.c: 173: {
  3942                           ;Key.c: 174: temp = Local_Key_FSM.key_group;
  3943  001656  C043  F005         	movff	_Local_Key_FSM+5,Key_FSM_Read@temp	;volatile
  3944                           
  3945                           ;Key.c: 175: Local_Key_FSM.key_group = 0x00;
  3946  00165A  0E00               	movlw	0
  3947  00165C  6E43               	movwf	_Local_Key_FSM+5,c	;volatile
  3948                           
  3949                           ;Key.c: 176: return temp;
  3950  00165E  5005               	movf	Key_FSM_Read@temp,w,c
  3951                           
  3952                           ;Key.c: 177: }
  3953  001660  0012               	return	
  3954  001662                     i2l1313:
  3955                           
  3956                           ;Key.c: 179: else return 0x04;
  3957  001662  0E04               	movlw	4
  3958  001664  0012               	return	
  3959  001666  0012               	return		;funcret
  3960  001668                     __end_of_Key_FSM_Read:
  3961                           	opt stack 0
  3962                           pclatu	equ	0xFFB
  3963                           pclath	equ	0xFFA
  3964                           tblptru	equ	0xFF8
  3965                           tblptrh	equ	0xFF7
  3966                           tblptrl	equ	0xFF6
  3967                           tablat	equ	0xFF5
  3968                           prodh	equ	0xFF4
  3969                           prodl	equ	0xFF3
  3970                           intcon	equ	0xFF2
  3971                           postinc0	equ	0xFEE
  3972                           fsr0h	equ	0xFEA
  3973                           fsr0l	equ	0xFE9
  3974                           wreg	equ	0xFE8
  3975                           fsr1h	equ	0xFE2
  3976                           fsr1l	equ	0xFE1
  3977                           indf2	equ	0xFDF
  3978                           fsr2h	equ	0xFDA
  3979                           fsr2l	equ	0xFD9
  3980                           status	equ	0xFD8
  3981                           
  3982 ;; *************** function _Key_FSM_Scan *****************
  3983 ;; Defined at:
  3984 ;;		line 75 in file "_01_USER/Key.c"
  3985 ;; Parameters:    Size  Location     Type
  3986 ;;		None
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;		None
  3989 ;; Return value:  Size  Location     Type
  3990 ;;		None               void
  3991 ;; Registers used:
  3992 ;;		wreg, status,2, status,0, cstack
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4002 ;;Total ram usage:        0 bytes
  4003 ;; Hardware stack levels used:    1
  4004 ;; Hardware stack levels required when called:    1
  4005 ;; This function calls:
  4006 ;;		_Key_Scan
  4007 ;; This function is called by:
  4008 ;;		_Sys_Cyc
  4009 ;; This function uses a non-reentrant model
  4010 ;;
  4011                           
  4012                           	psect	text34
  4013  001398                     __ptext34:
  4014                           	opt stack 0
  4015  001398                     _Key_FSM_Scan:
  4016                           	opt stack 23
  4017                           
  4018                           ;Key.c: 77: Key_Scan();
  4019                           
  4020                           ;incstack = 0
  4021  001398  ECE1  F00C         	call	_Key_Scan	;wreg free
  4022                           
  4023                           ;Key.c: 78: if( Local_Key_FSM.key_state & 0x01 ) Local_Key_FSM.key[0]++;
  4024  00139C  A03E               	btfss	_Local_Key_FSM,0,c	;volatile
  4025  00139E  D002               	goto	i2l1493
  4026  0013A0  2A44               	incf	_Local_Key_FSM+6,f,c	;volatile
  4027  0013A2  D000               	goto	i2l1493
  4028  0013A4                     i2l1493:
  4029                           
  4030                           ;Key.c: 79: if( Local_Key_FSM.key_state & 0x02 ) Local_Key_FSM.key[1]++;
  4031  0013A4  A23E               	btfss	_Local_Key_FSM,1,c	;volatile
  4032  0013A6  D002               	goto	i2l1497
  4033  0013A8  2A45               	incf	_Local_Key_FSM+7,f,c	;volatile
  4034  0013AA  D000               	goto	i2l1497
  4035  0013AC                     i2l1497:
  4036                           
  4037                           ;Key.c: 80: if( Local_Key_FSM.key_state & 0x04 ) Local_Key_FSM.key[2]++;
  4038  0013AC  A43E               	btfss	_Local_Key_FSM,2,c	;volatile
  4039  0013AE  D002               	goto	i2l1501
  4040  0013B0  2A46               	incf	_Local_Key_FSM+8,f,c	;volatile
  4041  0013B2  D000               	goto	i2l1501
  4042  0013B4                     i2l1501:
  4043                           
  4044                           ;Key.c: 81: if( Local_Key_FSM.key_state & 0x08 ) Local_Key_FSM.key[3]++;
  4045  0013B4  A63E               	btfss	_Local_Key_FSM,3,c	;volatile
  4046  0013B6  D002               	goto	i2l1505
  4047  0013B8  2A47               	incf	_Local_Key_FSM+9,f,c	;volatile
  4048  0013BA  D000               	goto	i2l1505
  4049  0013BC                     i2l1505:
  4050                           
  4051                           ;Key.c: 82: if( Local_Key_FSM.key_state & 0x10 ) Local_Key_FSM.key[4]++;
  4052  0013BC  A83E               	btfss	_Local_Key_FSM,4,c	;volatile
  4053  0013BE  D002               	goto	i2l1509
  4054  0013C0  2A48               	incf	_Local_Key_FSM+10,f,c	;volatile
  4055  0013C2  D000               	goto	i2l1509
  4056  0013C4                     i2l1509:
  4057                           
  4058                           ;Key.c: 84: if( Local_Key_FSM.key_state == 0x00 )
  4059  0013C4  503E               	movf	_Local_Key_FSM,w,c	;volatile
  4060  0013C6  A4D8               	btfss	status,2,c
  4061  0013C8  D00B               	goto	i2l1513
  4062                           
  4063                           ;Key.c: 85: {
  4064                           ;Key.c: 86: Local_Key_FSM.key[0] = 0;
  4065  0013CA  0E00               	movlw	0
  4066  0013CC  6E44               	movwf	_Local_Key_FSM+6,c	;volatile
  4067                           
  4068                           ;Key.c: 87: Local_Key_FSM.key[1] = 0;
  4069  0013CE  0E00               	movlw	0
  4070  0013D0  6E45               	movwf	_Local_Key_FSM+7,c	;volatile
  4071                           
  4072                           ;Key.c: 88: Local_Key_FSM.key[2] = 0;
  4073  0013D2  0E00               	movlw	0
  4074  0013D4  6E46               	movwf	_Local_Key_FSM+8,c	;volatile
  4075                           
  4076                           ;Key.c: 89: Local_Key_FSM.key[3] = 0;
  4077  0013D6  0E00               	movlw	0
  4078  0013D8  6E47               	movwf	_Local_Key_FSM+9,c	;volatile
  4079                           
  4080                           ;Key.c: 90: Local_Key_FSM.key[4] = 0;
  4081  0013DA  0E00               	movlw	0
  4082  0013DC  6E48               	movwf	_Local_Key_FSM+10,c	;volatile
  4083                           
  4084                           ;Key.c: 91: }
  4085  0013DE  0012               	return	
  4086  0013E0                     i2l1513:
  4087                           
  4088                           ;Key.c: 92: else
  4089                           ;Key.c: 93: {
  4090                           ;Key.c: 95: if( Local_Key_FSM.key[0] < 5 ) Local_Key_FSM.key_FSM[0] = 0x00;
  4091  0013E0  0E05               	movlw	5
  4092  0013E2  6044               	cpfslt	_Local_Key_FSM+6,c	;volatile
  4093  0013E4  D002               	goto	i2l1517
  4094  0013E6  0E00               	movlw	0
  4095  0013E8  D006               	goto	L2
  4096  0013EA                     i2l1517:
  4097                           
  4098                           ;Key.c: 96: else if( Local_Key_FSM.key[0] < 60 ) Local_Key_FSM.key_FSM[0] = 0x01;
  4099  0013EA  0E3C               	movlw	60
  4100  0013EC  6044               	cpfslt	_Local_Key_FSM+6,c	;volatile
  4101  0013EE  D002               	goto	i2l1521
  4102  0013F0  0E01               	movlw	1
  4103  0013F2  D001               	goto	L2
  4104  0013F4                     i2l1521:
  4105                           
  4106                           ;Key.c: 97: else Local_Key_FSM.key_FSM[0] = 0x03;
  4107  0013F4  0E03               	movlw	3
  4108  0013F6                     L2:
  4109  0013F6  6E3F               	movwf	_Local_Key_FSM+1,c	;volatile
  4110  0013F8  D000               	goto	i2l1523
  4111  0013FA                     i2l1523:
  4112                           
  4113                           ;Key.c: 99: if( Local_Key_FSM.key[1] < 5 ) Local_Key_FSM.key_FSM[1] = 0x00;
  4114  0013FA  0E05               	movlw	5
  4115  0013FC  6045               	cpfslt	_Local_Key_FSM+7,c	;volatile
  4116  0013FE  D002               	goto	i2l1527
  4117  001400  0E00               	movlw	0
  4118  001402  D006               	goto	L4
  4119  001404                     i2l1527:
  4120                           
  4121                           ;Key.c: 100: else if( Local_Key_FSM.key[1] < 60 ) Local_Key_FSM.key_FSM[1] = 0x01;
  4122  001404  0E3C               	movlw	60
  4123  001406  6045               	cpfslt	_Local_Key_FSM+7,c	;volatile
  4124  001408  D002               	goto	i2l1531
  4125  00140A  0E01               	movlw	1
  4126  00140C  D001               	goto	L4
  4127  00140E                     i2l1531:
  4128                           
  4129                           ;Key.c: 101: else Local_Key_FSM.key_FSM[1] = 0x03;
  4130  00140E  0E03               	movlw	3
  4131  001410                     L4:
  4132  001410  6E40               	movwf	_Local_Key_FSM+2,c	;volatile
  4133  001412  D000               	goto	i2l1533
  4134  001414                     i2l1533:
  4135                           
  4136                           ;Key.c: 103: if( Local_Key_FSM.key[2] < 5 ) Local_Key_FSM.key_FSM[2] = 0x00;
  4137  001414  0E05               	movlw	5
  4138  001416  6046               	cpfslt	_Local_Key_FSM+8,c	;volatile
  4139  001418  D002               	goto	i2l1537
  4140  00141A  0E00               	movlw	0
  4141  00141C  D006               	goto	L6
  4142  00141E                     i2l1537:
  4143                           
  4144                           ;Key.c: 104: else if( Local_Key_FSM.key[2] < 60 ) Local_Key_FSM.key_FSM[2] = 0x01;
  4145  00141E  0E3C               	movlw	60
  4146  001420  6046               	cpfslt	_Local_Key_FSM+8,c	;volatile
  4147  001422  D002               	goto	i2l1541
  4148  001424  0E01               	movlw	1
  4149  001426  D001               	goto	L6
  4150  001428                     i2l1541:
  4151                           
  4152                           ;Key.c: 105: else Local_Key_FSM.key_FSM[2] = 0x03;
  4153  001428  0E03               	movlw	3
  4154  00142A                     L6:
  4155  00142A  6E41               	movwf	_Local_Key_FSM+3,c	;volatile
  4156  00142C  D000               	goto	i2l1543
  4157  00142E                     i2l1543:
  4158                           
  4159                           ;Key.c: 107: if( Local_Key_FSM.key[3] < 5 ) Local_Key_FSM.key_FSM[3] = 0x00;
  4160  00142E  0E05               	movlw	5
  4161  001430  6047               	cpfslt	_Local_Key_FSM+9,c	;volatile
  4162  001432  D002               	goto	i2l1547
  4163  001434  0E00               	movlw	0
  4164  001436  D006               	goto	L8
  4165  001438                     i2l1547:
  4166                           
  4167                           ;Key.c: 108: else if( Local_Key_FSM.key[3] < 60 ) Local_Key_FSM.key_FSM[3] = 0x01;
  4168  001438  0E3C               	movlw	60
  4169  00143A  6047               	cpfslt	_Local_Key_FSM+9,c	;volatile
  4170  00143C  D002               	goto	i2l1551
  4171  00143E  0E01               	movlw	1
  4172  001440  D001               	goto	L8
  4173  001442                     i2l1551:
  4174                           
  4175                           ;Key.c: 109: else Local_Key_FSM.key_FSM[3] = 0x03;
  4176  001442  0E03               	movlw	3
  4177  001444                     L8:
  4178  001444  6E42               	movwf	_Local_Key_FSM+4,c	;volatile
  4179  001446  D000               	goto	i2l1553
  4180  001448                     i2l1553:
  4181                           
  4182                           ;Key.c: 111: if( Local_Key_FSM.key[4] < 5 ) Local_Key_FSM.key_FSM[4] = 0x00;
  4183  001448  0E05               	movlw	5
  4184  00144A  6048               	cpfslt	_Local_Key_FSM+10,c	;volatile
  4185  00144C  D002               	goto	i2l1557
  4186  00144E  0E00               	movlw	0
  4187  001450  D006               	goto	L10
  4188  001452                     i2l1557:
  4189                           
  4190                           ;Key.c: 112: else if( Local_Key_FSM.key[4] < 60 ) Local_Key_FSM.key_FSM[4] = 0x01;
  4191  001452  0E3C               	movlw	60
  4192  001454  6048               	cpfslt	_Local_Key_FSM+10,c	;volatile
  4193  001456  D002               	goto	i2l1561
  4194  001458  0E01               	movlw	1
  4195  00145A  D001               	goto	L10
  4196  00145C                     i2l1561:
  4197                           
  4198                           ;Key.c: 113: else Local_Key_FSM.key_FSM[4] = 0x03;
  4199  00145C  0E03               	movlw	3
  4200  00145E                     L10:
  4201  00145E  6E43               	movwf	_Local_Key_FSM+5,c	;volatile
  4202  001460  D000               	goto	i2l119
  4203  001462                     i2l119:
  4204                           
  4205                           ;Key.c: 116: Local_Key_FSM.key_group = 0x00;
  4206  001462  0E00               	movlw	0
  4207  001464  6E43               	movwf	_Local_Key_FSM+5,c	;volatile
  4208                           
  4209                           ;Key.c: 117: if( Local_Key_FSM.key_FSM[0] != 0x00 ) Local_Key_FSM.key_group |= 0x01<<0;
  4210  001466  503F               	movf	_Local_Key_FSM+1,w,c	;volatile
  4211  001468  B4D8               	btfsc	status,2,c
  4212  00146A  D002               	goto	i2l1565
  4213  00146C  8043               	bsf	_Local_Key_FSM+5,0,c	;volatile
  4214  00146E  D000               	goto	i2l1565
  4215  001470                     i2l1565:
  4216                           
  4217                           ;Key.c: 118: if( Local_Key_FSM.key_FSM[1] != 0x00 ) Local_Key_FSM.key_group |= 0x01<<1;
  4218  001470  5040               	movf	_Local_Key_FSM+2,w,c	;volatile
  4219  001472  B4D8               	btfsc	status,2,c
  4220  001474  D002               	goto	i2l1569
  4221  001476  8243               	bsf	_Local_Key_FSM+5,1,c	;volatile
  4222  001478  D000               	goto	i2l1569
  4223  00147A                     i2l1569:
  4224                           
  4225                           ;Key.c: 119: if( Local_Key_FSM.key_FSM[2] != 0x00 ) Local_Key_FSM.key_group |= 0x01<<2;
  4226  00147A  5041               	movf	_Local_Key_FSM+3,w,c	;volatile
  4227  00147C  B4D8               	btfsc	status,2,c
  4228  00147E  D002               	goto	i2l1573
  4229  001480  8443               	bsf	_Local_Key_FSM+5,2,c	;volatile
  4230  001482  D000               	goto	i2l1573
  4231  001484                     i2l1573:
  4232                           
  4233                           ;Key.c: 120: if( Local_Key_FSM.key_FSM[3] != 0x00 ) Local_Key_FSM.key_group |= 0x01<<3;
  4234  001484  5042               	movf	_Local_Key_FSM+4,w,c	;volatile
  4235  001486  B4D8               	btfsc	status,2,c
  4236  001488  D002               	goto	i2l1577
  4237  00148A  8643               	bsf	_Local_Key_FSM+5,3,c	;volatile
  4238  00148C  D000               	goto	i2l1577
  4239  00148E                     i2l1577:
  4240                           
  4241                           ;Key.c: 121: if( Local_Key_FSM.key_FSM[4] != 0x00 ) Local_Key_FSM.key_group |= 0x01<<4;
  4242  00148E  5043               	movf	_Local_Key_FSM+5,w,c	;volatile
  4243  001490  B4D8               	btfsc	status,2,c
  4244  001492  0012               	return	
  4245  001494  8843               	bsf	_Local_Key_FSM+5,4,c	;volatile
  4246  001496  0012               	return	
  4247  001498  0012               	return		;funcret
  4248  00149A                     __end_of_Key_FSM_Scan:
  4249                           	opt stack 0
  4250                           pclatu	equ	0xFFB
  4251                           pclath	equ	0xFFA
  4252                           tblptru	equ	0xFF8
  4253                           tblptrh	equ	0xFF7
  4254                           tblptrl	equ	0xFF6
  4255                           tablat	equ	0xFF5
  4256                           prodh	equ	0xFF4
  4257                           prodl	equ	0xFF3
  4258                           intcon	equ	0xFF2
  4259                           postinc0	equ	0xFEE
  4260                           fsr0h	equ	0xFEA
  4261                           fsr0l	equ	0xFE9
  4262                           wreg	equ	0xFE8
  4263                           fsr1h	equ	0xFE2
  4264                           fsr1l	equ	0xFE1
  4265                           indf2	equ	0xFDF
  4266                           fsr2h	equ	0xFDA
  4267                           fsr2l	equ	0xFD9
  4268                           status	equ	0xFD8
  4269                           
  4270 ;; *************** function _Key_Scan *****************
  4271 ;; Defined at:
  4272 ;;		line 54 in file "_01_USER/Key.c"
  4273 ;; Parameters:    Size  Location     Type
  4274 ;;		None
  4275 ;; Auto vars:     Size  Location     Type
  4276 ;;		None
  4277 ;; Return value:  Size  Location     Type
  4278 ;;		None               void
  4279 ;; Registers used:
  4280 ;;		wreg, status,2, status,0
  4281 ;; Tracked objects:
  4282 ;;		On entry : 0/0
  4283 ;;		On exit  : 0/0
  4284 ;;		Unchanged: 0/0
  4285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4290 ;;Total ram usage:        0 bytes
  4291 ;; Hardware stack levels used:    1
  4292 ;; This function calls:
  4293 ;;		Nothing
  4294 ;; This function is called by:
  4295 ;;		_Key_FSM_Scan
  4296 ;; This function uses a non-reentrant model
  4297 ;;
  4298                           
  4299                           	psect	text35
  4300  0019C2                     __ptext35:
  4301                           	opt stack 0
  4302  0019C2                     _Key_Scan:
  4303                           	opt stack 23
  4304                           
  4305                           ;Key.c: 56: Local_Key_FSM.key_state = 0x00;
  4306                           
  4307                           ;incstack = 0
  4308  0019C2  0E00               	movlw	0
  4309  0019C4  6E3E               	movwf	_Local_Key_FSM,c	;volatile
  4310                           
  4311                           ;Key.c: 58: if( RE3 == 0 ) Local_Key_FSM.key_state |= (0x01 << 0) ;
  4312  0019C6  B684               	btfsc	3972,3,c	;volatile
  4313  0019C8  D002               	goto	i2l1269
  4314  0019CA  803E               	bsf	_Local_Key_FSM,0,c	;volatile
  4315  0019CC  D000               	goto	i2l1269
  4316  0019CE                     i2l1269:
  4317                           
  4318                           ;Key.c: 59: if( RE2 == 0 ) Local_Key_FSM.key_state |= (0x01 << 1) ;
  4319  0019CE  B484               	btfsc	3972,2,c	;volatile
  4320  0019D0  D002               	goto	i2l1273
  4321  0019D2  823E               	bsf	_Local_Key_FSM,1,c	;volatile
  4322  0019D4  D000               	goto	i2l1273
  4323  0019D6                     i2l1273:
  4324                           
  4325                           ;Key.c: 60: if( RD6 == 0 ) Local_Key_FSM.key_state |= (0x01 << 2) ;
  4326  0019D6  BC83               	btfsc	3971,6,c	;volatile
  4327  0019D8  D002               	goto	i2l1277
  4328  0019DA  843E               	bsf	_Local_Key_FSM,2,c	;volatile
  4329  0019DC  D000               	goto	i2l1277
  4330  0019DE                     i2l1277:
  4331                           
  4332                           ;Key.c: 61: if( RE4 == 0 ) Local_Key_FSM.key_state |= (0x01 << 3) ;
  4333  0019DE  B884               	btfsc	3972,4,c	;volatile
  4334  0019E0  D002               	goto	i2l1281
  4335  0019E2  863E               	bsf	_Local_Key_FSM,3,c	;volatile
  4336  0019E4  D000               	goto	i2l1281
  4337  0019E6                     i2l1281:
  4338                           
  4339                           ;Key.c: 62: if( RD7 == 0 ) Local_Key_FSM.key_state |= (0x01 << 4) ;
  4340  0019E6  BE83               	btfsc	3971,7,c	;volatile
  4341  0019E8  0012               	return	
  4342  0019EA  883E               	bsf	_Local_Key_FSM,4,c	;volatile
  4343  0019EC  0012               	return	
  4344  0019EE  0012               	return		;funcret
  4345  0019F0                     __end_of_Key_Scan:
  4346                           	opt stack 0
  4347                           pclatu	equ	0xFFB
  4348                           pclath	equ	0xFFA
  4349                           tblptru	equ	0xFF8
  4350                           tblptrh	equ	0xFF7
  4351                           tblptrl	equ	0xFF6
  4352                           tablat	equ	0xFF5
  4353                           prodh	equ	0xFF4
  4354                           prodl	equ	0xFF3
  4355                           intcon	equ	0xFF2
  4356                           postinc0	equ	0xFEE
  4357                           fsr0h	equ	0xFEA
  4358                           fsr0l	equ	0xFE9
  4359                           wreg	equ	0xFE8
  4360                           fsr1h	equ	0xFE2
  4361                           fsr1l	equ	0xFE1
  4362                           indf2	equ	0xFDF
  4363                           fsr2h	equ	0xFDA
  4364                           fsr2l	equ	0xFD9
  4365                           status	equ	0xFD8
  4366                           
  4367 ;; *************** function _Delay_1Khz *****************
  4368 ;; Defined at:
  4369 ;;		line 75 in file "_01_USER/My_Delay.c"
  4370 ;; Parameters:    Size  Location     Type
  4371 ;;		None
  4372 ;; Auto vars:     Size  Location     Type
  4373 ;;  c               1    2[COMRAM] unsigned char 
  4374 ;;  b               1    1[COMRAM] unsigned char 
  4375 ;;  a               1    0[COMRAM] unsigned char 
  4376 ;; Return value:  Size  Location     Type
  4377 ;;		None               void
  4378 ;; Registers used:
  4379 ;;		wreg, status,2, status,0
  4380 ;; Tracked objects:
  4381 ;;		On entry : 0/0
  4382 ;;		On exit  : 0/0
  4383 ;;		Unchanged: 0/0
  4384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4386 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4388 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4389 ;;Total ram usage:        3 bytes
  4390 ;; Hardware stack levels used:    1
  4391 ;; This function calls:
  4392 ;;		Nothing
  4393 ;; This function is called by:
  4394 ;;		_Sys_Cyc
  4395 ;; This function uses a non-reentrant model
  4396 ;;
  4397                           
  4398                           	psect	text36
  4399  00192A                     __ptext36:
  4400                           	opt stack 0
  4401  00192A                     _Delay_1Khz:
  4402                           	opt stack 24
  4403                           
  4404                           ;My_Delay.c: 77: unsigned char a,b,c;
  4405                           ;My_Delay.c: 78: for(c=1;c>0;c--)
  4406                           
  4407                           ;incstack = 0
  4408  00192A  0E01               	movlw	1
  4409  00192C  6E03               	movwf	Delay_1Khz@c,c
  4410  00192E  5003               	movf	Delay_1Khz@c,w,c
  4411  001930  B4D8               	btfsc	status,2,c
  4412  001932  0012               	return	
  4413  001934  D001               	goto	i2l1467
  4414  001936  0012               	return	
  4415  001938                     i2l1467:
  4416                           
  4417                           ;My_Delay.c: 79: for(b=32;b>0;b--)
  4418  001938  0E20               	movlw	32
  4419  00193A  6E02               	movwf	Delay_1Khz@b,c
  4420  00193C  5002               	movf	Delay_1Khz@b,w,c
  4421  00193E  B4D8               	btfsc	status,2,c
  4422  001940  D00D               	goto	i2l1483
  4423  001942  D001               	goto	i2l1471
  4424  001944  D00B               	goto	i2l1483
  4425  001946                     i2l1471:
  4426                           
  4427                           ;My_Delay.c: 80: for(a=2;a>0;a--);
  4428  001946  0E02               	movlw	2
  4429  001948  6E01               	movwf	Delay_1Khz@a,c
  4430  00194A  5001               	movf	Delay_1Khz@a,w,c
  4431  00194C  B4D8               	btfsc	status,2,c
  4432  00194E  D004               	goto	i2l1479
  4433  001950  D001               	goto	i2l1475
  4434  001952  D002               	goto	i2l1479
  4435  001954                     i2l1475:
  4436  001954  0601               	decf	Delay_1Khz@a,f,c
  4437  001956  D7F9               	goto	L11
  4438  001958                     i2l1479:
  4439  001958  0602               	decf	Delay_1Khz@b,f,c
  4440  00195A  D7F0               	goto	L12
  4441  00195C                     i2l1483:
  4442  00195C  0603               	decf	Delay_1Khz@c,f,c
  4443  00195E  D7E7               	goto	L13
  4444  001960  0012               	return		;funcret
  4445  001962                     __end_of_Delay_1Khz:
  4446                           	opt stack 0
  4447                           pclatu	equ	0xFFB
  4448                           pclath	equ	0xFFA
  4449                           tblptru	equ	0xFF8
  4450                           tblptrh	equ	0xFF7
  4451                           tblptrl	equ	0xFF6
  4452                           tablat	equ	0xFF5
  4453                           prodh	equ	0xFF4
  4454                           prodl	equ	0xFF3
  4455                           intcon	equ	0xFF2
  4456                           postinc0	equ	0xFEE
  4457                           fsr0h	equ	0xFEA
  4458                           fsr0l	equ	0xFE9
  4459                           wreg	equ	0xFE8
  4460                           fsr1h	equ	0xFE2
  4461                           fsr1l	equ	0xFE1
  4462                           indf2	equ	0xFDF
  4463                           fsr2h	equ	0xFDA
  4464                           fsr2l	equ	0xFD9
  4465                           status	equ	0xFD8
  4466                           pclatu	equ	0xFFB
  4467                           pclath	equ	0xFFA
  4468                           tblptru	equ	0xFF8
  4469                           tblptrh	equ	0xFF7
  4470                           tblptrl	equ	0xFF6
  4471                           tablat	equ	0xFF5
  4472                           prodh	equ	0xFF4
  4473                           prodl	equ	0xFF3
  4474                           intcon	equ	0xFF2
  4475                           postinc0	equ	0xFEE
  4476                           fsr0h	equ	0xFEA
  4477                           fsr0l	equ	0xFE9
  4478                           wreg	equ	0xFE8
  4479                           fsr1h	equ	0xFE2
  4480                           fsr1l	equ	0xFE1
  4481                           indf2	equ	0xFDF
  4482                           fsr2h	equ	0xFDA
  4483                           fsr2l	equ	0xFD9
  4484                           status	equ	0xFD8
  4485                           
  4486                           	psect	rparam
  4487  0000                     pclatu	equ	0xFFB
  4488                           pclath	equ	0xFFA
  4489                           tblptru	equ	0xFF8
  4490                           tblptrh	equ	0xFF7
  4491                           tblptrl	equ	0xFF6
  4492                           tablat	equ	0xFF5
  4493                           prodh	equ	0xFF4
  4494                           prodl	equ	0xFF3
  4495                           intcon	equ	0xFF2
  4496                           postinc0	equ	0xFEE
  4497                           fsr0h	equ	0xFEA
  4498                           fsr0l	equ	0xFE9
  4499                           wreg	equ	0xFE8
  4500                           fsr1h	equ	0xFE2
  4501                           fsr1l	equ	0xFE1
  4502                           indf2	equ	0xFDF
  4503                           fsr2h	equ	0xFDA
  4504                           fsr2l	equ	0xFD9
  4505                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      71
    BANK0           160     24      24
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _Timer0_Init->_SetTimer0
    _Show_Result->_TM1640_Show_integer
    _TM1640_Show_integer->_TM1640_Writer_Dates
    _TM1640_Show_integer->___lwdiv
    _TM1640_Writer_Dates->___lwmod
    _Get_ADC6->___ftmul
    ___lwtoft->___ftpack
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul
    _RS485_Init->_Open2USART
    _Init_TM1640->_TM1640_Writer_Byte
    _TM1640_Writer_Byte->_TM1640_Delay
    _TM1640_Stop->_TM1640_Delay
    _TM1640_Start->_TM1640_Delay
    _ADC6_Init->_OpenADC

Critical Paths under _Sys_Cyc in COMRAM

    _Sys_Cyc->___llmod
    _Manage_Message->_Key_FSM_Read

Critical Paths under _main in BANK0

    _Get_ADC6->___ftdiv
    ___ftdiv->___ftmul

Critical Paths under _Sys_Cyc in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Sys_Cyc in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Sys_Cyc in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Sys_Cyc in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Sys_Cyc in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Sys_Cyc in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Sys_Cyc in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Sys_Cyc in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Sys_Cyc in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Sys_Cyc in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Sys_Cyc in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Sys_Cyc in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Sys_Cyc in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Sys_Cyc in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Sys_Cyc in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Sys_Cyc in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   11707
                                             21 BANK0      3     3      0
                          _ADC6_Init
                        _GPIO_Config
                        _Init_TM1640
                           _Key_Init
                         _RS485_Init
                                _Run
                        _Show_Result
                        _Timer0_Init
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0     194
                          _SetTimer0
 ---------------------------------------------------------------------------------
 (2) _SetTimer0                                            4     2      2     194
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Show_Result                                          0     0      0    2559
                _TM1640_Show_integer
 ---------------------------------------------------------------------------------
 (2) _TM1640_Show_integer                                  2     0      2    2559
                                             31 COMRAM     2     0      2
                _TM1640_Writer_Dates
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     752
                                             24 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     631
                                             24 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _TM1640_Writer_Dates                                  2     1      1     885
                                             29 COMRAM     2     1      1
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Run                                                  0     0      0    7988
                         _Busy2USART
                           _Get_ADC6
 ---------------------------------------------------------------------------------
 (2) _Get_ADC6                                             0     0      0    7988
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2104
                                             32 COMRAM     3     0      3
                            _ReadADC (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    2846
                                             35 COMRAM     9     3      6
                                              0 BANK0      6     6      0
                            _ReadADC (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3038
                                              6 BANK0     15     9      6
                            _ReadADC (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2008
                                             24 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) _ReadADC                                              4     2      2       0
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Busy2USART                                           2     0      2       0
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _RS485_Init                                           0     0      0     375
                         _Open2USART
 ---------------------------------------------------------------------------------
 (2) _Open2USART                                           3     1      2     375
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Key_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_TM1640                                          0     0      0     272
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
 ---------------------------------------------------------------------------------
 (4) _TM1640_Writer_Byte                                   2     2      0     136
                                             26 COMRAM     2     2      0
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (4) _TM1640_Stop                                          0     0      0      68
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (4) _TM1640_Start                                         0     0      0      68
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (5) _TM1640_Delay                                         2     2      0      68
                                             24 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC6_Init                                            0     0      0     316
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     316
                                             24 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Sys_Cyc                                             15    15      0     668
                                              9 COMRAM    15    15      0
                         _Delay_1Khz
                       _Key_FSM_Scan
                     _Manage_Message
                            ___llmod
                        i2_SetTimer0
 ---------------------------------------------------------------------------------
 (7) i2_SetTimer0                                          4     2      2      94
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8     371
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) _Manage_Message                                       0     0      0      90
                       _Key_FSM_Read
 ---------------------------------------------------------------------------------
 (8) _Key_FSM_Read                                         6     6      0      90
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (7) _Key_FSM_Scan                                         0     0      0       0
                           _Key_Scan
 ---------------------------------------------------------------------------------
 (8) _Key_Scan                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _Delay_1Khz                                           3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC6_Init
     _OpenADC
   _GPIO_Config
   _Init_TM1640
     _TM1640_Start
       _TM1640_Delay
     _TM1640_Stop
       _TM1640_Delay
     _TM1640_Writer_Byte
       _TM1640_Delay
   _Key_Init
   _RS485_Init
     _Open2USART
   _Run
     _Busy2USART
     _Get_ADC6
       _BusyADC
       _ConvertADC
       _ReadADC
       ___ftdiv
         _ReadADC (ARG)
         ___ftmul (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___ftmul
         _ReadADC (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___lwtoft
         _ReadADC (ARG)
         ___ftpack (ARG)
   _Show_Result
     _TM1640_Show_integer
       _TM1640_Writer_Dates
         _TM1640_Start
           _TM1640_Delay
         _TM1640_Stop
           _TM1640_Delay
         _TM1640_Writer_Byte
           _TM1640_Delay
         ___lwmod (ARG)
       ___lwdiv
       ___lwmod
   _Timer0_Init
     _SetTimer0

 _Sys_Cyc (ROOT)
   _Delay_1Khz
   _Key_FSM_Scan
     _Key_Scan
   _Manage_Message
     _Key_FSM_Read
   ___llmod
   i2_SetTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     18      18       5       15.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      47       1       74.7%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5F      12        0.0%
DATA                 0      0      5F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sat Dec 12 20:00:30 2015

                ?_TM1640_Stop 0001  __size_of_TM1640_Writer_Dates 0022                 ?_TM1640_Delay 0001  
                 __CFG_BORV$3 000000                 ?_TM1640_Start 0001                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000              Key_FSM_Read@temp 0005  
                __CFG_CP3$OFF 000000                  __CFG_CP4$OFF 000000                  __CFG_CP5$OFF 000000  
                __CFG_CP6$OFF 000000                  __CFG_CP7$OFF 000000                           l305 1B30  
                         l430 15AA                           l433 15C2                           l290 1880  
                         l291 1896                           l435 15CE                           l436 15D0  
                         l428 159A                           l394 17EA                           l823 112A  
                         l759 1536                           l958 1796                           l968 1830  
                         _GIE 007F97                  __CFG_CPB$OFF 000000                           _RC3 007C13  
                         _RC4 007C14                           _RE2 007C22                           _RE3 007C23  
                         _RE4 007C24                           _RD6 007C1E                           _RE5 007C25  
                         _RD7 007C1F                           _RE6 007C26                           _RG3 007C33  
                         _RE7 007C27                  __CFG_CPD$OFF 000000                           _PSA 007EAB  
                         _Run 183A                ??_Key_FSM_Read 0001                ??_Key_FSM_Scan 0001  
                         wreg 000FE8                  ?_GPIO_Config 0001                    _TXSTA2bits 000F21  
        ?_TM1640_Show_integer 0020                   ?_RS485_Init 0001                  ___ftdiv@cntr 006F  
                        ?_Run 0001                  ___ftdiv@sign 0074                          l2213 189A  
                        l2231 14C6                          l2303 10E8                          l2241 152A  
                        l2233 14E6                          l2225 14AA                          l2313 113C  
                        l2171 1B20                          l2219 18AE                          l2323 1190  
                        l2421 1590                          l2413 1578                          l2253 1550  
                        l2237 14FE                          l2229 14BA                          l2247 153E  
                        l2239 151E                          l2351 1230                          l2343 1200  
                        l2177 1B28                          l2433 15BA                          l2425 15A0  
                        l2417 1586                          l2361 126A                          l2353 1238  
                        l2329 11BC                          l2179 1B2A                          l2283 1086  
                        l2347 1218                          l2371 175A                          l2451 196A  
                        l2437 15C6                          l2429 15B0                          l2277 104C  
                        l2357 1250                          l2373 1764                          l2543 1846  
                        l2383 178A                          l2375 176C                          l2391 17FC  
                        l2393 1806                          l2483 16DE                          l2547 1852  
                        l2395 180E                          l2493 1AF8                          l2549 1866  
                        l2399 1824                          l2567 18E2                          _T0CS 007EAD  
                        _T0SE 007EAC                          u1801 1028                          u1821 1062  
                        _IPEN 007E87                          u1851 1174                          u1790 1B70  
                        u1871 11A0                 ??_Init_TM1640 001D                    _Delay_1Khz 192A  
                        _main 18B6                  ___ftpack@arg 0019                  ___ftpack@exp 001C  
                        fsr0h 000FEA                          fsr1h 000FE2                          fsr0l 000FE9  
                        fsr2h 000FDA                          fsr1l 000FE1                          indf2 000FDF  
                        fsr2l 000FD9                          pclat 000FFA                          prodh 000FF4  
                        prodl 000FF3                          start 014E                 __CFG_IESO$OFF 000000  
               __CFG_FOSC$HS1 000000                 __CFG_MCLRE$ON 000000                  ___ftmul@cntr 0064  
                ___param_bank 000010                  ___ftmul@sign 0065               __end_of_BusyADC 1B76  
             __end_of_ReadADC 1B5A                ??_TM1640_Delay 0019               __end_of_OpenADC 17EE  
                       ??_Run 002D                ??_TM1640_Start 001B                 __CFG_RETEN$ON 000000  
                       ?_main 0001               __end_of_Sys_Cyc 014E               __end_of___ftdiv 1164  
             __end_of___ftmul 1292               __end_of___llmod 16D8                         _T0PS0 007EA8  
                       _T0PS1 007EA9                         _T0PS2 007EAA                         _RC2IF 007D25  
             __end_of___lwdiv 17A0               __end_of___lwmod 183A                         i2l119 1462  
                       i2l240 00EE                         i2l243 0114                         i2l236 009C  
                       i2l905 16C6             __end_of_ADC6_Init 1B4A                         _TMR0H 000FD7  
                       _TMR0L 000FD6                         _TRISD 000F95                         _TRISE 000F96  
       ??_TM1640_Show_integer 0022                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                 __CFG_WRT4$OFF 000000  
              __CFG_EBRT0$OFF 000000                 __CFG_WRT5$OFF 000000                __CFG_EBRT1$OFF 000000  
               __CFG_WRT6$OFF 000000                __CFG_EBRT2$OFF 000000                 __CFG_WRT7$OFF 000000  
              __CFG_EBRT3$OFF 000000                __CFG_EBRT4$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBRT5$OFF 000000                __CFG_EBRT6$OFF 000000                __CFG_EBRT7$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBRTB$OFF 000000                    _Busy2USART 1AE8                 ___ftpack@sign 001D  
                  _ConvertADC 1B8C                 _Local_Key_FSM 003E                         tablat 000FF5  
                       status 000FD8            _TM1640_Writer_Byte 1878              __end_of_Get_ADC6 1744  
             __initialization 1B04           __end_of_Init_TM1640 1A3C           __size_of_RS485_Init 001E  
                __end_of_main 18F0           ?_TM1640_Writer_Byte 0001              __end_of_Key_Init 1B8C  
         Key_FSM_Read@key_num 0006              __end_of_Key_Scan 19F0                    _Open2USART 1560  
                      ??_main 002D                 __activetblptr 000001              ??_Manage_Message 0007  
        ??_TM1640_Writer_Byte 001B                        _ADCON0 000FC2                        _ADCON1 000FC1  
                      _ADCON2 000FC0              ___llmod@dividend 0001                        _ADRESH 000FC4  
                      _ADRESL 000FC3                        _ANCON2 000F23                        _T08BIT 007EAE  
            __end_of___ftpack 1560                        i2l1301 164A               __CFG_BBSIZ$BB2K 000000  
                      i2l1313 1662                        i2l2131 0090                        i2l1501 13B4  
                      i2l2141 00B2                        i2l1281 19E6                        i2l1273 19D6  
                      i2l1521 13F4                        i2l1513 13E0                        i2l1505 13BC  
                      i2l2081 1690                        i2l2137 00A0                        i2l1531 140E  
                      i2l1523 13FA                        i2l2139 00A6                        i2l2155 0108  
                      i2l1277 19DE                        i2l1269 19CE                        i2l1541 1428  
                      i2l1533 1414                        i2l1517 13EA                        i2l1509 13C4  
                      i2l2085 16B6                        i2l2077 167A                        i2l2093 199A  
                      i2l2149 00F2                        i2l1471 1946                        i2l1551 1442  
                      i2l1543 142E                        i2l1527 1404                        i2l2079 1688  
                      i2l1561 145C                        i2l1553 1448                        i2l1537 141E  
                      i2l1297 1644                        i2l1475 1954                        i2l1483 195C  
                      i2l1467 1938                        i2l1547 1438                        i2l1573 1484  
                      i2l1565 1470                        i2l1557 1452                        i2l1493 13A4  
                      i2l1479 1958                        i2l1577 148E                        i2l1569 147A  
                      i2l1497 13AC                        i2l1585 1902                        i2l1589 1914  
               SetTimer0@_tmr 0019                        _RCREG2 000F1D              __end_of___lwtoft 1A16  
                      _RCSTA2 000F22                   ?_Delay_1Khz 0001                        _TMR0IE 007F95  
                      _TMR0IF 007F92                        _SPBRG2 000F1E                        _TMR0ON 007EAF  
               TM1640_Delay@i 001A                     ??_BusyADC 0019                        _TXREG2 000F1C  
                   ??_ReadADC 001B                        _TXSTA2 000F21                 ??_Timer0_Init 001D  
                   ??_OpenADC 001B        TM1640_Writer_Byte@Date 001B                __CFG_XINST$OFF 000000  
        __end_of_Key_FSM_Read 1668          __end_of_Key_FSM_Scan 149A        TM1640_Writer_Byte@mask 001C  
              __CFG_STVREN$ON 000000                     ??_Sys_Cyc 000A                     ??___ftdiv 006C  
                   ??___ftmul 002A                     ??___llmod 0009          Sys_Cyc@_overturn_LED 003C  
                   ??___lwdiv 001D            __size_of_SetTimer0 0030                     ??___lwmod 001D  
                      clear_0 1B0A          __size_of_TM1640_Stop 0024                 ??_Show_Result 0022  
       ___ftmul@f3_as_product 0061                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                   ?_Busy2USART 0019  
        __size_of_GPIO_Config 000C           _TM1640_Writer_Dates 1AA8                   ?_ConvertADC 0001  
        __end_of_TM1640_Delay 1B38          __end_of_TM1640_Start 1AA8                    __accesstop 0060  
     __end_of__initialization 1B10                   _Init_TM1640 1A16                  ?i2_SetTimer0 0001  
               ___rparam_used 000001                    ___ftdiv@f1 0066                    ___ftdiv@f2 0069  
                  ___ftdiv@f3 0070            _USART2_ReceiveBuff 0037                    ___ftmul@f1 0024  
                  ___ftmul@f2 0027                __pcstackCOMRAM 0001          ?_TM1640_Writer_Dates 001E  
         __end_of_Timer0_Init 1A60                   ?_Open2USART 0019                    ___lwtoft@c 0021  
         __size_of_Delay_1Khz 0038                     ?_Get_ADC6 0001                  ??_RS485_Init 001C  
         __end_of_Show_Result 1B68             __end_of_SetTimer0 1992                     ?_Key_Init 0001  
                   ?_Key_Scan 0001               __CFG_PLLCFG$OFF 000000       TM1640_Writer_Dates@Addr 001F  
          __end_of_LED_Number 1011       TM1640_Writer_Dates@Date 001E         ??_TM1640_Writer_Dates 001F  
         __size_of_Busy2USART 001C            __end_of_RS485_Init 1AE8           __size_of_ConvertADC 0004  
                   ?___ftpack 0019                     ?___lwtoft 0021                    ??_Get_ADC6 002D  
                     _SPBRGH2 000F1F                     _ADC6_Buff 0031                     _ADC6_Init 1B38  
                  ??_Key_Init 0019                    ??_Key_Scan 0001         __size_of_Key_FSM_Read 0084  
       __size_of_Key_FSM_Scan 0102           __size_of_Open2USART 0084                       _BusyADC 1B68  
                     _ReadADC 1B4A               __CFG_PWRTEN$OFF 000000                       _OpenADC 17A0  
                     __Hparam 0000                   _Timer0_Init 1A3C                       __Lparam 0000  
               Sys_Cyc@_pulse 0018                       _Sys_Cyc 0008                       ___ftdiv 1012  
                     ___ftmul 1164                       ___llmod 1668                       ___lwdiv 1744  
                     ___lwmod 17EE                  __psmallconst 1000   __end_of_TM1640_Show_integer 1398  
                     __pcinit 1B04                    ??___ftpack 001E         Sys_Cyc@_overturn_1Khz 003B  
                     __ramtop 1000                       __ptext0 18B6                       __ptext1 1A3C  
                     __ptext2 1962                       __ptext3 1B5A                       __ptext4 1292  
                     __ptext5 17EE                       __ptext6 1744                       __ptext7 1AA8  
                     __ptext8 183A                       __ptext9 16D8                    ??___lwtoft 0024  
                 _Show_Result 1B5A                  __size_of_Run 003E              Open2USART@config 001B  
       __size_of_TM1640_Delay 001A             __CFG_MSSPMSK$MSK7 000000                  _Key_FSM_Read 15E4  
                _Key_FSM_Scan 1398         __size_of_TM1640_Start 0024                    ?_ADC6_Init 0001  
              OpenADC@config2 0019                OpenADC@config3 001A                       main@num 0075  
        end_of_initialization 1B10                  ??_Delay_1Khz 0001          __size_ofi2_SetTimer0 0030  
                     postinc0 000FEE                  _TM1640_Delay 1B1E                  _TM1640_Start 1A84  
                   _PORTEbits 000F84              TM1640_Delay@Time 0019            __end_of_Delay_1Khz 1962  
                   _TRISCbits 000F94                     _TRISGbits 000F98                  ??_Busy2USART 001B  
 __size_of_TM1640_Writer_Byte 003E             __CFG_SOSCSEL$HIGH 000000                  ??_ConvertADC 0019  
                ?_Init_TM1640 0001                   ___ftdiv@exp 0073                   ___ftmul@exp 0060  
             _USART2_TendBuff 0039                 ??_TM1640_Stop 001B              _Handle_01_Switch 0034  
          __end_of_Busy2USART 1B04                  ??_Open2USART 001B            __end_of_ConvertADC 1B90  
               ??_GPIO_Config 0019           start_initialization 1B04                   __end_of_Run 1878  
                 ??_ADC6_Init 001E             __size_of_Get_ADC6 006C    TM1640_Show_integer@Numbers 0020  
     __size_of_Manage_Message 003A               ___llmod@divisor 0005             __size_of_Key_Init 000A  
           __size_of_Key_Scan 002E               ___llmod@counter 0009                     _SetTimer0 1962  
          __end_of_Open2USART 15E4               i2SetTimer0@_tmr 0001                     _Timer_Cyc 002D  
         __end_of_TM1640_Stop 1A84             __size_of___ftpack 00C6                   __pbssCOMRAM 002D  
           __size_of___lwtoft 0026                 __pcstackBANK0 0060           __end_of_GPIO_Config 1B82  
                    ?_BusyADC 0001                      ?_ReadADC 0019   __end_of_TM1640_Writer_Dates 1ACA  
                  ?_SetTimer0 0019                      ?_OpenADC 0019                  ?_Timer0_Init 0001  
            ___lwdiv@dividend 0019             __CFG_CCP2MX$PORTC 000000                     __pintcode 0008  
                    ?_Sys_Cyc 0001                      ?___ftdiv 0066                      ?___ftmul 0024  
                    ?___llmod 0001                      ?___lwdiv 0019                      ?___lwmod 0019  
                ?_Show_Result 0001                   __smallconst 1000                   _LED2_switch 003D  
            ___lwdiv@quotient 001E               Open2USART@spbrg 0019                 OpenADC@config 001D  
                    _PIE1bits 000F9D                      _PIE3bits 000FA3          __size_of_Init_TM1640 0026  
                    _PIR1bits 000F9E                   _TM1640_Stop 1A60                    _ADCON0bits 000FC2  
                    _Get_ADC6 16D8                   _GPIO_Config 1B76                   Delay_1Khz@a 0001  
                 Delay_1Khz@b 0002                   Delay_1Khz@c 0003  __size_of_TM1640_Show_integer 0106  
                    _Key_Init 1B82                      _Key_Scan 19C2                _Manage_Message 18F0  
               ??i2_SetTimer0 0003                   ??_SetTimer0 001B              __size_of_BusyADC 000E  
            __size_of_ReadADC 0010                      __Hrparam 0000              __size_of_OpenADC 004E  
                    __Lrparam 0000                  __Lsmallconst 1000            __CFG_BOREN$SBORDIS 000000  
            __size_of_Sys_Cyc 0146              __size_of___ftdiv 0152              __size_of___ftmul 012E  
            __size_of___llmod 0070              __size_of___lwdiv 005C              __size_of___lwmod 004C  
                    ___ftpack 149A                      ___lwtoft 19F0    __end_of_TM1640_Writer_Byte 18B6  
             ___lwdiv@divisor 001B               ___lwdiv@counter 001D                      __ptext10 19F0  
                    __ptext11 1164                      __ptext20 1B82                      __ptext12 1012  
                    __ptext21 1A16                      __ptext13 149A                      __ptext30 1992  
                    __ptext22 1878                      __ptext14 1B4A                      __ptext31 1668  
                    __ptext23 1A60                      __ptext15 1B8C                      __ptext32 18F0  
                    __ptext24 1A84                      __ptext16 1B68                      __ptext33 15E4  
                    __ptext25 1B1E                      __ptext17 1AE8                      __ptext34 1398  
                    __ptext26 1B76                      __ptext18 1ACA                      __ptext35 19C2  
                    __ptext27 1B38                      __ptext19 1560                      __ptext36 192A  
                    __ptext28 17A0        __end_of_Manage_Message 192A                 __size_of_main 003A  
         __CFG_RTCOSC$SOSCREF 000000          __size_of_Timer0_Init 0024           __end_ofi2_SetTimer0 19C2  
         __CFG_INTOSCSEL$HIGH 000000                    _LED_Number 1001            __CFG_WDTEN$SWDTDIS 000000  
                  _INTCONbits 000FF2          __size_of_Show_Result 000E                    _RS485_Init 1ACA  
             ?_Manage_Message 0001                      intlevel2 0000              ___lwmod@dividend 0019  
                  _RCSTA2bits 000F22            __CFG_WDTPS$1048576 000000               ___lwmod@divisor 001B  
             ___lwmod@counter 001D                 ?_Key_FSM_Read 0001                 ?_Key_FSM_Scan 0001  
         __CFG_BORPWR$ZPBORMV 000000            __size_of_ADC6_Init 0012                   i2_SetTimer0 1992  
         _TM1640_Show_integer 1292  
