

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Dec 10 15:07:26 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F67K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    51  0000                     
    52                           	psect	smallconst
    53  001000                     __psmallconst:
    54                           	opt stack 0
    55  001000  00                 	db	0
    56  001001                     _LED_Number:
    57                           	opt stack 0
    58  001001  3F                 	db	63
    59  001002  06                 	db	6
    60  001003  5B                 	db	91
    61  001004  4F                 	db	79
    62  001005  66                 	db	102
    63  001006  6D                 	db	109
    64  001007  7D                 	db	125
    65  001008  07                 	db	7
    66  001009  7F                 	db	127
    67  00100A  6F                 	db	111
    68  00100B  77                 	db	119
    69  00100C  7C                 	db	124
    70  00100D  39                 	db	57
    71  00100E  5E                 	db	94
    72  00100F  79                 	db	121
    73  001010  71                 	db	113
    74  001011                     __end_of_LED_Number:
    75                           	opt stack 0
    76  0000                     _RCREG2	set	3869
    77  0000                     _RCSTA2	set	3874
    78  0000                     _RCSTA2bits	set	3874
    79  0000                     _SPBRG2	set	3870
    80  0000                     _SPBRGH2	set	3871
    81  0000                     _TXREG2	set	3868
    82  0000                     _TXSTA2	set	3873
    83  0000                     _TXSTA2bits	set	3873
    84  0000                     _ADCON0	set	4034
    85  0000                     _ADCON0bits	set	4034
    86  0000                     _ADCON1	set	4033
    87  0000                     _ADCON2	set	4032
    88  0000                     _ADRESH	set	4036
    89  0000                     _ADRESL	set	4035
    90  0000                     _INTCONbits	set	4082
    91  0000                     _PIE1bits	set	3997
    92  0000                     _PIE3bits	set	4003
    93  0000                     _PIR1bits	set	3998
    94  0000                     _PORTEbits	set	3972
    95  0000                     _TMR0H	set	4055
    96  0000                     _TMR0L	set	4054
    97  0000                     _TRISCbits	set	3988
    98  0000                     _TRISD	set	3989
    99  0000                     _TRISE	set	3990
   100  0000                     _TRISGbits	set	3992
   101  0000                     _GIE	set	32663
   102  0000                     _IPEN	set	32391
   103  0000                     _PSA	set	32427
   104  0000                     _RC2IF	set	32037
   105  0000                     _RC3	set	31763
   106  0000                     _RC4	set	31764
   107  0000                     _RCEN2	set	31539
   108  0000                     _RD6	set	31774
   109  0000                     _RD7	set	31775
   110  0000                     _RE2	set	31778
   111  0000                     _RE3	set	31779
   112  0000                     _RE4	set	31780
   113  0000                     _RE5	set	31781
   114  0000                     _RE6	set	31782
   115  0000                     _RE7	set	31783
   116  0000                     _RG3	set	31795
   117  0000                     _T08BIT	set	32430
   118  0000                     _T0CS	set	32429
   119  0000                     _T0PS0	set	32424
   120  0000                     _T0PS1	set	32425
   121  0000                     _T0PS2	set	32426
   122  0000                     _T0SE	set	32428
   123  0000                     _TMR0IE	set	32661
   124  0000                     _TMR0IF	set	32658
   125  0000                     _TMR0ON	set	32431
   126                           
   127                           ; #config settings
   128  001011  00                 	db	0	; dummy byte at the end
   129  0000                     
   130                           	psect	cinit
   131  001ADC                     __pcinit:
   132                           	opt stack 0
   133  001ADC                     start_initialization:
   134                           	opt stack 0
   135  001ADC                     __initialization:
   136                           	opt stack 0
   137                           
   138                           ; Clear objects allocated to BANK0 (3 bytes)
   139  001ADC  0100               	movlb	0
   140  001ADE  6B7A               	clrf	(__pbssBANK0+2)& (0+255),b
   141  001AE0  6B79               	clrf	(__pbssBANK0+1)& (0+255),b
   142  001AE2  6B78               	clrf	__pbssBANK0& (0+255),b
   143                           
   144                           ; Clear objects allocated to COMRAM (25 bytes)
   145  001AE4  EE00  F02D         	lfsr	0,__pbssCOMRAM
   146  001AE8  0E19               	movlw	25
   147  001AEA                     clear_0:
   148  001AEA  6AEE               	clrf	postinc0,c
   149  001AEC  06E8               	decf	wreg,f,c
   150  001AEE  E1FD               	bnz	clear_0
   151  001AF0                     end_of_initialization:
   152                           	opt stack 0
   153  001AF0                     __end_of__initialization:
   154                           	opt stack 0
   155  001AF0  0E00               	movlw	low (__Lsmallconst shr (0+16))
   156  001AF2  6EF8               	movwf	tblptru,c
   157  001AF4  0E10               	movlw	high __Lsmallconst
   158  001AF6  6EF7               	movwf	tblptrh,c
   159  001AF8  0100               	movlb	0
   160  001AFA  EF1B  F00C         	goto	_main	;jump to C main() function
   161                           tblptru	equ	0xFF8
   162                           tblptrh	equ	0xFF7
   163                           postinc0	equ	0xFEE
   164                           wreg	equ	0xFE8
   165                           
   166                           	psect	bssCOMRAM
   167  00002D                     __pbssCOMRAM:
   168                           	opt stack 0
   169  00002D                     _Timer_Cyc:
   170                           	opt stack 0
   171  00002D                     	ds	4
   172  000031                     _Handle_01_Switch:
   173                           	opt stack 0
   174  000031                     	ds	3
   175  000034                     _USART2_ReceiveBuff:
   176                           	opt stack 0
   177  000034                     	ds	2
   178  000036                     _USART2_TendBuff:
   179                           	opt stack 0
   180  000036                     	ds	2
   181  000038                     Sys_Cyc@_overturn_1Khz:
   182                           	opt stack 0
   183  000038                     	ds	1
   184  000039                     Sys_Cyc@_overturn_LED:
   185                           	opt stack 0
   186  000039                     	ds	1
   187  00003A                     _LED2_switch:
   188                           	opt stack 0
   189  00003A                     	ds	1
   190  00003B                     _USART2_Status:
   191                           	opt stack 0
   192  00003B                     	ds	1
   193  00003C                     _Local_Key_FSM:
   194                           	opt stack 0
   195  00003C                     	ds	10
   196                           tblptru	equ	0xFF8
   197                           tblptrh	equ	0xFF7
   198                           postinc0	equ	0xFEE
   199                           wreg	equ	0xFE8
   200                           
   201                           	psect	bssBANK0
   202  000078                     __pbssBANK0:
   203                           	opt stack 0
   204  000078                     _ADC6_Buff:
   205                           	opt stack 0
   206  000078                     	ds	3
   207                           tblptru	equ	0xFF8
   208                           tblptrh	equ	0xFF7
   209                           postinc0	equ	0xFEE
   210                           wreg	equ	0xFE8
   211                           
   212                           	psect	cstackBANK0
   213  000060                     __pcstackBANK0:
   214                           	opt stack 0
   215  000060                     ___ftmul@exp:
   216                           	opt stack 0
   217                           
   218                           ; 1 bytes @ 0x0
   219  000060                     	ds	1
   220  000061                     ___ftmul@f3_as_product:
   221                           	opt stack 0
   222                           
   223                           ; 3 bytes @ 0x1
   224  000061                     	ds	3
   225  000064                     ___ftmul@cntr:
   226                           	opt stack 0
   227                           
   228                           ; 1 bytes @ 0x4
   229  000064                     	ds	1
   230  000065                     ___ftmul@sign:
   231                           	opt stack 0
   232                           
   233                           ; 1 bytes @ 0x5
   234  000065                     	ds	1
   235  000066                     ?___ftdiv:
   236                           	opt stack 0
   237  000066                     ___ftdiv@f1:
   238                           	opt stack 0
   239                           
   240                           ; 3 bytes @ 0x6
   241  000066                     	ds	3
   242  000069                     ___ftdiv@f2:
   243                           	opt stack 0
   244                           
   245                           ; 3 bytes @ 0x9
   246  000069                     	ds	3
   247  00006C                     ??___ftdiv:
   248                           
   249                           ; 0 bytes @ 0xC
   250  00006C                     	ds	3
   251  00006F                     ___ftdiv@cntr:
   252                           	opt stack 0
   253                           
   254                           ; 1 bytes @ 0xF
   255  00006F                     	ds	1
   256  000070                     ___ftdiv@f3:
   257                           	opt stack 0
   258                           
   259                           ; 3 bytes @ 0x10
   260  000070                     	ds	3
   261  000073                     ___ftdiv@exp:
   262                           	opt stack 0
   263                           
   264                           ; 1 bytes @ 0x13
   265  000073                     	ds	1
   266  000074                     ___ftdiv@sign:
   267                           	opt stack 0
   268                           
   269                           ; 1 bytes @ 0x14
   270  000074                     	ds	1
   271  000075                     main@num:
   272                           	opt stack 0
   273                           
   274                           ; 3 bytes @ 0x15
   275  000075                     	ds	3
   276                           tblptru	equ	0xFF8
   277                           tblptrh	equ	0xFF7
   278                           postinc0	equ	0xFEE
   279                           wreg	equ	0xFE8
   280                           
   281                           	psect	cstackCOMRAM
   282  000001                     __pcstackCOMRAM:
   283                           	opt stack 0
   284  000001                     ?___llmod:
   285                           	opt stack 0
   286  000001                     Delay_1Khz@a:
   287                           	opt stack 0
   288  000001                     i2SetTimer0@_tmr:
   289                           	opt stack 0
   290  000001                     ___llmod@dividend:
   291                           	opt stack 0
   292                           
   293                           ; 4 bytes @ 0x0
   294  000001                     	ds	1
   295  000002                     Delay_1Khz@b:
   296                           	opt stack 0
   297                           
   298                           ; 1 bytes @ 0x1
   299  000002                     	ds	1
   300  000003                     ??i2_SetTimer0:
   301  000003                     Delay_1Khz@c:
   302                           	opt stack 0
   303                           
   304                           ; 1 bytes @ 0x2
   305  000003                     	ds	2
   306  000005                     ___llmod@divisor:
   307                           	opt stack 0
   308                           
   309                           ; 4 bytes @ 0x4
   310  000005                     	ds	4
   311  000009                     ___llmod@counter:
   312                           	opt stack 0
   313                           
   314                           ; 1 bytes @ 0x8
   315  000009                     	ds	1
   316  00000A                     ??_Sys_Cyc:
   317                           
   318                           ; 0 bytes @ 0x9
   319  00000A                     	ds	14
   320  000018                     Sys_Cyc@_pulse:
   321                           	opt stack 0
   322                           
   323                           ; 1 bytes @ 0x17
   324  000018                     	ds	1
   325  000019                     ??_Key_FSM_Read:
   326  000019                     ?_ReadADC:
   327                           	opt stack 0
   328  000019                     ?___lwdiv:
   329                           	opt stack 0
   330  000019                     ?___lwmod:
   331                           	opt stack 0
   332  000019                     ?___ftpack:
   333                           	opt stack 0
   334  000019                     delay1ms@a:
   335                           	opt stack 0
   336  000019                     TM1640_Delay@Time:
   337                           	opt stack 0
   338  000019                     OpenADC@config2:
   339                           	opt stack 0
   340  000019                     SetTimer0@_tmr:
   341                           	opt stack 0
   342  000019                     Open2USART@spbrg:
   343                           	opt stack 0
   344  000019                     ___lwdiv@dividend:
   345                           	opt stack 0
   346  000019                     ___lwmod@dividend:
   347                           	opt stack 0
   348  000019                     ___ftpack@arg:
   349                           	opt stack 0
   350                           
   351                           ; 3 bytes @ 0x18
   352  000019                     	ds	1
   353  00001A                     delay1ms@b:
   354                           	opt stack 0
   355  00001A                     TM1640_Delay@i:
   356                           	opt stack 0
   357  00001A                     OpenADC@config3:
   358                           	opt stack 0
   359                           
   360                           ; 1 bytes @ 0x19
   361  00001A                     	ds	1
   362  00001B                     ??_SetTimer0:
   363  00001B                     ??_OpenADC:
   364  00001B                     ??_ReadADC:
   365  00001B                     delay1ms@c:
   366                           	opt stack 0
   367  00001B                     TM1640_Writer_Byte@Date:
   368                           	opt stack 0
   369  00001B                     Open2USART@config:
   370                           	opt stack 0
   371  00001B                     ___lwdiv@divisor:
   372                           	opt stack 0
   373  00001B                     ___lwmod@divisor:
   374                           	opt stack 0
   375                           
   376                           ; 2 bytes @ 0x1A
   377  00001B                     	ds	1
   378  00001C                     TM1640_Writer_Byte@mask:
   379                           	opt stack 0
   380  00001C                     ___ftpack@exp:
   381                           	opt stack 0
   382  00001C                     delay_ms@_ms:
   383                           	opt stack 0
   384                           
   385                           ; 2 bytes @ 0x1B
   386  00001C                     	ds	1
   387  00001D                     Key_FSM_Read@temp:
   388                           	opt stack 0
   389  00001D                     OpenADC@config:
   390                           	opt stack 0
   391  00001D                     ___ftpack@sign:
   392                           	opt stack 0
   393  00001D                     ___lwdiv@counter:
   394                           	opt stack 0
   395  00001D                     ___lwmod@counter:
   396                           	opt stack 0
   397                           
   398                           ; 1 bytes @ 0x1C
   399  00001D                     	ds	1
   400  00001E                     ??___ftpack:
   401  00001E                     Key_FSM_Read@key_num:
   402                           	opt stack 0
   403  00001E                     TM1640_Writer_Dates@Date:
   404                           	opt stack 0
   405  00001E                     ___lwdiv@quotient:
   406                           	opt stack 0
   407                           
   408                           ; 2 bytes @ 0x1D
   409  00001E                     	ds	1
   410  00001F                     TM1640_Writer_Dates@Addr:
   411                           	opt stack 0
   412                           
   413                           ; 1 bytes @ 0x1E
   414  00001F                     	ds	1
   415  000020                     TM1640_Show_integer@Numbers:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x1F
   419  000020                     	ds	1
   420  000021                     ?___lwtoft:
   421                           	opt stack 0
   422  000021                     ___lwtoft@c:
   423                           	opt stack 0
   424                           
   425                           ; 2 bytes @ 0x20
   426  000021                     	ds	1
   427  000022                     
   428                           ; 0 bytes @ 0x21
   429  000022                     	ds	2
   430  000024                     ?___ftmul:
   431                           	opt stack 0
   432  000024                     ___ftmul@f1:
   433                           	opt stack 0
   434                           
   435                           ; 3 bytes @ 0x23
   436  000024                     	ds	3
   437  000027                     ___ftmul@f2:
   438                           	opt stack 0
   439                           
   440                           ; 3 bytes @ 0x26
   441  000027                     	ds	3
   442  00002A                     ??___ftmul:
   443                           
   444                           ; 0 bytes @ 0x29
   445  00002A                     	ds	3
   446  00002D                     tblptru	equ	0xFF8
   447                           tblptrh	equ	0xFF7
   448                           postinc0	equ	0xFEE
   449                           wreg	equ	0xFE8
   450                           
   451                           ; 0 bytes @ 0x2C
   452 ;;
   453 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   454 ;;
   455 ;; *************** function _main *****************
   456 ;; Defined at:
   457 ;;		line 37 in file "_01_USER/main.c"
   458 ;; Parameters:    Size  Location     Type
   459 ;;		None
   460 ;; Auto vars:     Size  Location     Type
   461 ;;  num             3   21[BANK0 ] float 
   462 ;; Return value:  Size  Location     Type
   463 ;;                  2   20[None  ] int 
   464 ;; Registers used:
   465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   466 ;; Tracked objects:
   467 ;;		On entry : 0/0
   468 ;;		On exit  : 0/0
   469 ;;		Unchanged: 0/0
   470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   472 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   474 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   475 ;;Total ram usage:        3 bytes
   476 ;; Hardware stack levels required when called:    8
   477 ;; This function calls:
   478 ;;		_ADC6_Init
   479 ;;		_GPIO_Config
   480 ;;		_Init_TM1640
   481 ;;		_Key_Init
   482 ;;		_Manage_Message
   483 ;;		_My_USART_Init
   484 ;;		_Run
   485 ;;		_Show_Result
   486 ;;		_Timer0_Init
   487 ;; This function is called by:
   488 ;;		Startup code after reset
   489 ;; This function uses a non-reentrant model
   490 ;;
   491                           
   492                           	psect	text0
   493  001836                     __ptext0:
   494                           	opt stack 0
   495  001836                     _main:
   496                           	opt stack 23
   497                           
   498                           ;main.c: 40: float num = 0;
   499                           
   500                           ;incstack = 0
   501  001836  0E00               	movlw	0
   502  001838  0100               	movlb	0	; () banked
   503  00183A  6F75               	movwf	main@num& (0+255),b
   504  00183C  0E00               	movlw	0
   505  00183E  0100               	movlb	0	; () banked
   506  001840  6F76               	movwf	(main@num+1)& (0+255),b
   507  001842  0E00               	movlw	0
   508  001844  0100               	movlb	0	; () banked
   509  001846  6F77               	movwf	(main@num+2)& (0+255),b
   510                           
   511                           ; BSR set to: 0
   512                           ;main.c: 43: GPIO_Config();
   513  001848  ECD6  F00D         	call	_GPIO_Config	;wreg free
   514                           
   515                           ;main.c: 44: Key_Init();
   516  00184C  ECDC  F00D         	call	_Key_Init	;wreg free
   517                           
   518                           ;main.c: 45: Timer0_Init();
   519  001850  EC38  F00D         	call	_Timer0_Init	;wreg free
   520                           
   521                           ;main.c: 46: Init_TM1640();
   522  001854  EC25  F00D         	call	_Init_TM1640	;wreg free
   523                           
   524                           ;main.c: 47: ADC6_Init();
   525  001858  ECB7  F00D         	call	_ADC6_Init	;wreg free
   526                           
   527                           ;main.c: 48: My_USART_Init();
   528  00185C  EC9D  F00D         	call	_My_USART_Init	;wreg free
   529  001860  D000               	goto	l2637
   530  001862                     l2637:
   531                           
   532                           ;main.c: 52: {
   533                           ;main.c: 53: Manage_Message();
   534  001862  EC76  F00C         	call	_Manage_Message	;wreg free
   535                           
   536                           ;main.c: 54: Run();
   537  001866  EC59  F00C         	call	_Run	;wreg free
   538                           
   539                           ;main.c: 55: Show_Result();
   540  00186A  ECC8  F00D         	call	_Show_Result	;wreg free
   541  00186E  D7F9               	goto	l2637
   542                           
   543                           ;main.c: 57: }
   544                           ;main.c: 60: return 0;
   545                           ;	Return value of _main is never used
   546  001870  EFAA  F000         	goto	start
   547  001874                     __end_of_main:
   548                           	opt stack 0
   549                           tblptru	equ	0xFF8
   550                           tblptrh	equ	0xFF7
   551                           postinc0	equ	0xFEE
   552                           wreg	equ	0xFE8
   553                           
   554 ;; *************** function _Timer0_Init *****************
   555 ;; Defined at:
   556 ;;		line 42 in file "_01_USER/My_Timer.c"
   557 ;; Parameters:    Size  Location     Type
   558 ;;		None
   559 ;; Auto vars:     Size  Location     Type
   560 ;;		None
   561 ;; Return value:  Size  Location     Type
   562 ;;		None               void
   563 ;; Registers used:
   564 ;;		wreg, status,2, status,0, cstack
   565 ;; Tracked objects:
   566 ;;		On entry : 0/0
   567 ;;		On exit  : 0/0
   568 ;;		Unchanged: 0/0
   569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   574 ;;Total ram usage:        0 bytes
   575 ;; Hardware stack levels used:    1
   576 ;; Hardware stack levels required when called:    4
   577 ;; This function calls:
   578 ;;		_SetTimer0
   579 ;; This function is called by:
   580 ;;		_main
   581 ;; This function uses a non-reentrant model
   582 ;;
   583                           
   584                           	psect	text1
   585  001A70                     __ptext1:
   586                           	opt stack 0
   587  001A70                     _Timer0_Init:
   588                           	opt stack 26
   589                           
   590                           ;My_Timer.c: 44: T08BIT = 0;
   591                           
   592                           ;incstack = 0
   593  001A70  9CD5               	bcf	4053,6,c	;volatile
   594                           
   595                           ;My_Timer.c: 45: T0CS = 0;
   596  001A72  9AD5               	bcf	4053,5,c	;volatile
   597                           
   598                           ;My_Timer.c: 46: T0SE = 0;
   599  001A74  98D5               	bcf	4053,4,c	;volatile
   600                           
   601                           ;My_Timer.c: 47: PSA = 0;
   602  001A76  96D5               	bcf	4053,3,c	;volatile
   603                           
   604                           ;My_Timer.c: 48: T0PS2 = 1;
   605  001A78  84D5               	bsf	4053,2,c	;volatile
   606                           
   607                           ;My_Timer.c: 49: T0PS1 = 1;
   608  001A7A  82D5               	bsf	4053,1,c	;volatile
   609                           
   610                           ;My_Timer.c: 50: T0PS0 = 1;
   611  001A7C  80D5               	bsf	4053,0,c	;volatile
   612                           
   613                           ;My_Timer.c: 64: SetTimer0(1);
   614  001A7E  0E00               	movlw	0
   615  001A80  6E1A               	movwf	SetTimer0@_tmr+1,c
   616  001A82  0E01               	movlw	1
   617  001A84  6E19               	movwf	SetTimer0@_tmr,c
   618  001A86  ECCB  F00C         	call	_SetTimer0	;wreg free
   619                           
   620                           ;My_Timer.c: 65: TMR0ON = 1;
   621  001A8A  8ED5               	bsf	4053,7,c	;volatile
   622                           
   623                           ;My_Timer.c: 66: TMR0IE = 1;
   624  001A8C  8AF2               	bsf	intcon,5,c	;volatile
   625                           
   626                           ;My_Timer.c: 67: IPEN = 0;GIE = 1;
   627  001A8E  9ED0               	bcf	4048,7,c	;volatile
   628  001A90  8EF2               	bsf	intcon,7,c	;volatile
   629  001A92  0012               	return		;funcret
   630  001A94                     __end_of_Timer0_Init:
   631                           	opt stack 0
   632                           tblptru	equ	0xFF8
   633                           tblptrh	equ	0xFF7
   634                           intcon	equ	0xFF2
   635                           postinc0	equ	0xFEE
   636                           wreg	equ	0xFE8
   637                           
   638 ;; *************** function _SetTimer0 *****************
   639 ;; Defined at:
   640 ;;		line 80 in file "_01_USER/My_Timer.c"
   641 ;; Parameters:    Size  Location     Type
   642 ;;  _tmr            2   24[COMRAM] unsigned int 
   643 ;; Auto vars:     Size  Location     Type
   644 ;;		None
   645 ;; Return value:  Size  Location     Type
   646 ;;		None               void
   647 ;; Registers used:
   648 ;;		wreg, status,2, status,0
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   654 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   656 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   657 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   658 ;;Total ram usage:        4 bytes
   659 ;; Hardware stack levels used:    1
   660 ;; Hardware stack levels required when called:    3
   661 ;; This function calls:
   662 ;;		Nothing
   663 ;; This function is called by:
   664 ;;		_Timer0_Init
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668                           	psect	text2
   669  001996                     __ptext2:
   670                           	opt stack 0
   671  001996                     _SetTimer0:
   672                           	opt stack 26
   673                           
   674                           ;My_Timer.c: 82: if(_tmr > 0xffff) _tmr = 0xffff;
   675                           
   676                           ;incstack = 0
   677  001996  D003               	goto	l2513
   678  001998  6819               	setf	SetTimer0@_tmr,c
   679  00199A  681A               	setf	SetTimer0@_tmr+1,c
   680  00199C  D000               	goto	l2513
   681  00199E                     l2513:
   682                           
   683                           ;My_Timer.c: 83: _tmr=0xffff-_tmr;
   684  00199E  C019  F01B         	movff	SetTimer0@_tmr,??_SetTimer0
   685  0019A2  C01A  F01C         	movff	SetTimer0@_tmr+1,??_SetTimer0+1
   686  0019A6  1E1B               	comf	??_SetTimer0,f,c
   687  0019A8  1E1C               	comf	??_SetTimer0+1,f,c
   688  0019AA  4A1B               	infsnz	??_SetTimer0,f,c
   689  0019AC  2A1C               	incf	??_SetTimer0+1,f,c
   690  0019AE  0EFF               	movlw	255
   691  0019B0  241B               	addwf	??_SetTimer0,w,c
   692  0019B2  6E19               	movwf	SetTimer0@_tmr,c
   693  0019B4  0EFF               	movlw	255
   694  0019B6  201C               	addwfc	??_SetTimer0+1,w,c
   695  0019B8  6E1A               	movwf	SetTimer0@_tmr+1,c
   696                           
   697                           ;My_Timer.c: 84: TMR0H = _tmr/256;
   698  0019BA  501A               	movf	SetTimer0@_tmr+1,w,c
   699  0019BC  6ED7               	movwf	4055,c	;volatile
   700                           
   701                           ;My_Timer.c: 85: TMR0L = _tmr%256;
   702  0019BE  C019  FFD6         	movff	SetTimer0@_tmr,4054	;volatile
   703                           
   704                           ;My_Timer.c: 86: TMR0IF = 0;
   705  0019C2  94F2               	bcf	intcon,2,c	;volatile
   706  0019C4  0012               	return		;funcret
   707  0019C6                     __end_of_SetTimer0:
   708                           	opt stack 0
   709                           tblptru	equ	0xFF8
   710                           tblptrh	equ	0xFF7
   711                           intcon	equ	0xFF2
   712                           postinc0	equ	0xFEE
   713                           wreg	equ	0xFE8
   714                           
   715 ;; *************** function _Show_Result *****************
   716 ;; Defined at:
   717 ;;		line 97 in file "_01_USER/Run.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;		None
   720 ;; Auto vars:     Size  Location     Type
   721 ;;		None
   722 ;; Return value:  Size  Location     Type
   723 ;;		None               void
   724 ;; Registers used:
   725 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   735 ;;Total ram usage:        0 bytes
   736 ;; Hardware stack levels used:    1
   737 ;; Hardware stack levels required when called:    7
   738 ;; This function calls:
   739 ;;		_TM1640_Show_integer
   740 ;; This function is called by:
   741 ;;		_main
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745                           	psect	text3
   746  001B90                     __ptext3:
   747                           	opt stack 0
   748  001B90                     _Show_Result:
   749                           	opt stack 23
   750                           
   751                           ;Run.c: 102: TM1640_Show_integer( USART2_ReceiveBuff );
   752                           
   753                           ;incstack = 0
   754  001B90  C034  F020         	movff	_USART2_ReceiveBuff,TM1640_Show_integer@Numbers
   755  001B94  C035  F021         	movff	_USART2_ReceiveBuff+1,TM1640_Show_integer@Numbers+1
   756  001B98  EC49  F009         	call	_TM1640_Show_integer	;wreg free
   757  001B9C  0012               	return		;funcret
   758  001B9E                     __end_of_Show_Result:
   759                           	opt stack 0
   760                           tblptru	equ	0xFF8
   761                           tblptrh	equ	0xFF7
   762                           intcon	equ	0xFF2
   763                           postinc0	equ	0xFEE
   764                           wreg	equ	0xFE8
   765                           
   766 ;; *************** function _Run *****************
   767 ;; Defined at:
   768 ;;		line 46 in file "_01_USER/Run.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;		None
   771 ;; Auto vars:     Size  Location     Type
   772 ;;		None
   773 ;; Return value:  Size  Location     Type
   774 ;;		None               void
   775 ;; Registers used:
   776 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   777 ;; Tracked objects:
   778 ;;		On entry : 0/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   786 ;;Total ram usage:        0 bytes
   787 ;; Hardware stack levels used:    1
   788 ;; Hardware stack levels required when called:    7
   789 ;; This function calls:
   790 ;;		_Get_ADC6
   791 ;;		_TM1640_Show_integer
   792 ;;		_delay_ms
   793 ;; This function is called by:
   794 ;;		_main
   795 ;; This function uses a non-reentrant model
   796 ;;
   797                           
   798                           	psect	text4
   799  0018B2                     __ptext4:
   800                           	opt stack 0
   801  0018B2                     _Run:
   802                           	opt stack 23
   803                           
   804                           ;Run.c: 50: if( Handle_01_Switch.ADC6 ) Get_ADC6();
   805                           
   806                           ;incstack = 0
   807  0018B2  5032               	movf	_Handle_01_Switch+1,w,c
   808  0018B4  B4D8               	btfsc	status,2,c
   809  0018B6  D003               	goto	l2607
   810  0018B8  EC6A  F00B         	call	_Get_ADC6	;wreg free
   811  0018BC  D000               	goto	l2607
   812  0018BE                     l2607:
   813                           
   814                           ;Run.c: 53: if ( Handle_01_Switch.Usart_OneDate )
   815  0018BE  5033               	movf	_Handle_01_Switch+2,w,c
   816  0018C0  B4D8               	btfsc	status,2,c
   817  0018C2  0012               	return	
   818                           
   819                           ;Run.c: 54: {
   820                           ;Run.c: 55: Handle_01_Switch.Usart_OneDate = 0;
   821  0018C4  0E00               	movlw	0
   822  0018C6  6E33               	movwf	_Handle_01_Switch+2,c
   823                           
   824                           ;Run.c: 57: RG3 = 0;
   825  0018C8  9686               	bcf	3974,3,c	;volatile
   826                           
   827                           ;Run.c: 58: TXREG2 = USART2_TendBuff;
   828  0018CA  C036  FF1C         	movff	_USART2_TendBuff,3868	;volatile
   829                           
   830                           ;Run.c: 59: RG3 = 1;
   831  0018CE  8686               	bsf	3974,3,c	;volatile
   832                           
   833                           ;Run.c: 61: TM1640_Show_integer( 1111 );
   834  0018D0  0E04               	movlw	4
   835  0018D2  6E21               	movwf	TM1640_Show_integer@Numbers+1,c
   836  0018D4  0E57               	movlw	87
   837  0018D6  6E20               	movwf	TM1640_Show_integer@Numbers,c
   838  0018D8  EC49  F009         	call	_TM1640_Show_integer	;wreg free
   839                           
   840                           ;Run.c: 62: delay_ms( 300 );
   841  0018DC  0E01               	movlw	1
   842  0018DE  6E1D               	movwf	delay_ms@_ms+1,c
   843  0018E0  0E2C               	movlw	44
   844  0018E2  6E1C               	movwf	delay_ms@_ms,c
   845  0018E4  EC90  F00D         	call	_delay_ms	;wreg free
   846  0018E8  0012               	return	
   847  0018EA  0012               	return		;funcret
   848  0018EC                     __end_of_Run:
   849                           	opt stack 0
   850                           tblptru	equ	0xFF8
   851                           tblptrh	equ	0xFF7
   852                           intcon	equ	0xFF2
   853                           postinc0	equ	0xFEE
   854                           wreg	equ	0xFE8
   855                           status	equ	0xFD8
   856                           
   857 ;; *************** function _delay_ms *****************
   858 ;; Defined at:
   859 ;;		line 35 in file "_01_USER/My_Delay.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;  _ms             2   27[COMRAM] unsigned int 
   862 ;; Auto vars:     Size  Location     Type
   863 ;;		None
   864 ;; Return value:  Size  Location     Type
   865 ;;		None               void
   866 ;; Registers used:
   867 ;;		wreg, status,2, status,0, cstack
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   873 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   876 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   877 ;;Total ram usage:        2 bytes
   878 ;; Hardware stack levels used:    1
   879 ;; Hardware stack levels required when called:    4
   880 ;; This function calls:
   881 ;;		_delay1ms
   882 ;; This function is called by:
   883 ;;		_Run
   884 ;; This function uses a non-reentrant model
   885 ;;
   886                           
   887                           	psect	text5
   888  001B20                     __ptext5:
   889                           	opt stack 0
   890  001B20                     _delay_ms:
   891                           	opt stack 25
   892                           
   893                           ;My_Delay.c: 37: while(_ms--) delay1ms();
   894                           
   895                           ;incstack = 0
   896  001B20  D003               	goto	l2435
   897  001B22                     l2433:
   898  001B22  EC93  F00C         	call	_delay1ms	;wreg free
   899  001B26  D000               	goto	l2435
   900  001B28                     l2435:
   901  001B28  061C               	decf	delay_ms@_ms,f,c
   902  001B2A  A0D8               	btfss	status,0,c
   903  001B2C  061D               	decf	delay_ms@_ms+1,f,c
   904  001B2E  281C               	incf	delay_ms@_ms,w,c
   905  001B30  E1F8               	bnz	l2433
   906  001B32  281D               	incf	delay_ms@_ms+1,w,c
   907  001B34  A4D8               	btfss	status,2,c
   908  001B36  D7F5               	goto	l2433
   909  001B38  0012               	return		;funcret
   910  001B3A                     __end_of_delay_ms:
   911                           	opt stack 0
   912                           tblptru	equ	0xFF8
   913                           tblptrh	equ	0xFF7
   914                           intcon	equ	0xFF2
   915                           postinc0	equ	0xFEE
   916                           wreg	equ	0xFE8
   917                           status	equ	0xFD8
   918                           
   919 ;; *************** function _delay1ms *****************
   920 ;; Defined at:
   921 ;;		line 58 in file "_01_USER/My_Delay.c"
   922 ;; Parameters:    Size  Location     Type
   923 ;;		None
   924 ;; Auto vars:     Size  Location     Type
   925 ;;  c               1   26[COMRAM] unsigned char 
   926 ;;  b               1   25[COMRAM] unsigned char 
   927 ;;  a               1   24[COMRAM] unsigned char 
   928 ;; Return value:  Size  Location     Type
   929 ;;		None               void
   930 ;; Registers used:
   931 ;;		wreg, status,2, status,0
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   938 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   940 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   941 ;;Total ram usage:        3 bytes
   942 ;; Hardware stack levels used:    1
   943 ;; Hardware stack levels required when called:    3
   944 ;; This function calls:
   945 ;;		Nothing
   946 ;; This function is called by:
   947 ;;		_delay_ms
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951                           	psect	text6
   952  001926                     __ptext6:
   953                           	opt stack 0
   954  001926                     _delay1ms:
   955                           	opt stack 25
   956                           
   957                           ;My_Delay.c: 60: unsigned char a,b,c;
   958                           ;My_Delay.c: 61: for(c=1;c>0;c--)
   959                           
   960                           ;incstack = 0
   961  001926  0E01               	movlw	1
   962  001928  6E1B               	movwf	delay1ms@c,c
   963  00192A  501B               	movf	delay1ms@c,w,c
   964  00192C  B4D8               	btfsc	status,2,c
   965  00192E  0012               	return	
   966  001930  D001               	goto	l2261
   967  001932  0012               	return	
   968  001934                     l2261:
   969                           
   970                           ;My_Delay.c: 62: for(b=94;b>0;b--)
   971  001934  0E5E               	movlw	94
   972  001936  6E1A               	movwf	delay1ms@b,c
   973  001938  501A               	movf	delay1ms@b,w,c
   974  00193A  B4D8               	btfsc	status,2,c
   975  00193C  D00D               	goto	l2277
   976  00193E  D001               	goto	l2265
   977  001940  D00B               	goto	l2277
   978  001942                     l2265:
   979                           
   980                           ;My_Delay.c: 63: for(a=2;a>0;a--);
   981  001942  0E02               	movlw	2
   982  001944  6E19               	movwf	delay1ms@a,c
   983  001946  5019               	movf	delay1ms@a,w,c
   984  001948  B4D8               	btfsc	status,2,c
   985  00194A  D004               	goto	l2273
   986  00194C  D001               	goto	l2269
   987  00194E  D002               	goto	l2273
   988  001950                     l2269:
   989  001950  0619               	decf	delay1ms@a,f,c
   990  001952  D7F9               	goto	L1
   991  001954                     l2273:
   992  001954  061A               	decf	delay1ms@b,f,c
   993  001956  D7F0               	goto	L2
   994  001958                     l2277:
   995  001958  061B               	decf	delay1ms@c,f,c
   996  00195A  D7E7               	goto	L3
   997  00195C  0012               	return		;funcret
   998  00195E                     __end_of_delay1ms:
   999                           	opt stack 0
  1000                           tblptru	equ	0xFF8
  1001                           tblptrh	equ	0xFF7
  1002                           intcon	equ	0xFF2
  1003                           postinc0	equ	0xFEE
  1004                           wreg	equ	0xFE8
  1005                           status	equ	0xFD8
  1006                           
  1007 ;; *************** function _TM1640_Show_integer *****************
  1008 ;; Defined at:
  1009 ;;		line 55 in file "_01_USER/TM1640.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;  Numbers         2   31[COMRAM] unsigned int 
  1012 ;; Auto vars:     Size  Location     Type
  1013 ;;		None
  1014 ;; Return value:  Size  Location     Type
  1015 ;;		None               void
  1016 ;; Registers used:
  1017 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1018 ;; Tracked objects:
  1019 ;;		On entry : 0/0
  1020 ;;		On exit  : 0/0
  1021 ;;		Unchanged: 0/0
  1022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1023 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1026 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1027 ;;Total ram usage:        2 bytes
  1028 ;; Hardware stack levels used:    1
  1029 ;; Hardware stack levels required when called:    6
  1030 ;; This function calls:
  1031 ;;		_TM1640_Writer_Dates
  1032 ;;		___lwdiv
  1033 ;;		___lwmod
  1034 ;; This function is called by:
  1035 ;;		_Run
  1036 ;;		_Show_Result
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           
  1040                           	psect	text7
  1041  001292                     __ptext7:
  1042                           	opt stack 0
  1043  001292                     _TM1640_Show_integer:
  1044                           	opt stack 23
  1045                           
  1046                           ;TM1640.c: 58: TM1640_Writer_Dates(3,LED_Number[Numbers%10]); Numbers/=10;
  1047                           
  1048                           ;incstack = 0
  1049  001292  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1050  001296  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1051  00129A  0E00               	movlw	0
  1052  00129C  6E1C               	movwf	___lwmod@divisor+1,c
  1053  00129E  0E0A               	movlw	10
  1054  0012A0  6E1B               	movwf	___lwmod@divisor,c
  1055  0012A2  ECF5  F00B         	call	___lwmod	;wreg free
  1056  0012A6  0E01               	movlw	low _LED_Number
  1057  0012A8  2419               	addwf	?___lwmod,w,c
  1058  0012AA  6EF6               	movwf	tblptrl,c
  1059  0012AC  0E10               	movlw	high _LED_Number
  1060  0012AE  201A               	addwfc	?___lwmod+1,w,c
  1061  0012B0  6EF7               	movwf	tblptrh,c
  1062  0012B2                     	if	0	;There are less than 3 active tblptr bytes
  1063  0012B2                     	endif
  1064  0012B2  0008               	tblrd		*
  1065  0012B4  CFF5 F01E          	movff	tablat,TM1640_Writer_Dates@Date
  1066  0012B8  0E03               	movlw	3
  1067  0012BA  EC7F  F00D         	call	_TM1640_Writer_Dates
  1068  0012BE  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1069  0012C2  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1070  0012C6  0E00               	movlw	0
  1071  0012C8  6E1C               	movwf	___lwdiv@divisor+1,c
  1072  0012CA  0E0A               	movlw	10
  1073  0012CC  6E1B               	movwf	___lwdiv@divisor,c
  1074  0012CE  ECA0  F00B         	call	___lwdiv	;wreg free
  1075  0012D2  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1076  0012D6  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1077                           
  1078                           ;TM1640.c: 59: TM1640_Writer_Dates(2,LED_Number[Numbers%10]); Numbers/=10;
  1079  0012DA  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1080  0012DE  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1081  0012E2  0E00               	movlw	0
  1082  0012E4  6E1C               	movwf	___lwmod@divisor+1,c
  1083  0012E6  0E0A               	movlw	10
  1084  0012E8  6E1B               	movwf	___lwmod@divisor,c
  1085  0012EA  ECF5  F00B         	call	___lwmod	;wreg free
  1086  0012EE  0E01               	movlw	low _LED_Number
  1087  0012F0  2419               	addwf	?___lwmod,w,c
  1088  0012F2  6EF6               	movwf	tblptrl,c
  1089  0012F4  0E10               	movlw	high _LED_Number
  1090  0012F6  201A               	addwfc	?___lwmod+1,w,c
  1091  0012F8  6EF7               	movwf	tblptrh,c
  1092  0012FA                     	if	0	;There are less than 3 active tblptr bytes
  1093  0012FA                     	endif
  1094  0012FA  0008               	tblrd		*
  1095  0012FC  CFF5 F01E          	movff	tablat,TM1640_Writer_Dates@Date
  1096  001300  0E02               	movlw	2
  1097  001302  EC7F  F00D         	call	_TM1640_Writer_Dates
  1098  001306  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1099  00130A  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1100  00130E  0E00               	movlw	0
  1101  001310  6E1C               	movwf	___lwdiv@divisor+1,c
  1102  001312  0E0A               	movlw	10
  1103  001314  6E1B               	movwf	___lwdiv@divisor,c
  1104  001316  ECA0  F00B         	call	___lwdiv	;wreg free
  1105  00131A  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1106  00131E  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1107                           
  1108                           ;TM1640.c: 60: TM1640_Writer_Dates(1,LED_Number[Numbers%10]); Numbers/=10;
  1109  001322  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1110  001326  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1111  00132A  0E00               	movlw	0
  1112  00132C  6E1C               	movwf	___lwmod@divisor+1,c
  1113  00132E  0E0A               	movlw	10
  1114  001330  6E1B               	movwf	___lwmod@divisor,c
  1115  001332  ECF5  F00B         	call	___lwmod	;wreg free
  1116  001336  0E01               	movlw	low _LED_Number
  1117  001338  2419               	addwf	?___lwmod,w,c
  1118  00133A  6EF6               	movwf	tblptrl,c
  1119  00133C  0E10               	movlw	high _LED_Number
  1120  00133E  201A               	addwfc	?___lwmod+1,w,c
  1121  001340  6EF7               	movwf	tblptrh,c
  1122  001342                     	if	0	;There are less than 3 active tblptr bytes
  1123  001342                     	endif
  1124  001342  0008               	tblrd		*
  1125  001344  CFF5 F01E          	movff	tablat,TM1640_Writer_Dates@Date
  1126  001348  0E01               	movlw	1
  1127  00134A  EC7F  F00D         	call	_TM1640_Writer_Dates
  1128  00134E  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1129  001352  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1130  001356  0E00               	movlw	0
  1131  001358  6E1C               	movwf	___lwdiv@divisor+1,c
  1132  00135A  0E0A               	movlw	10
  1133  00135C  6E1B               	movwf	___lwdiv@divisor,c
  1134  00135E  ECA0  F00B         	call	___lwdiv	;wreg free
  1135  001362  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1136  001366  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1137                           
  1138                           ;TM1640.c: 61: TM1640_Writer_Dates(0,LED_Number[Numbers%10]);
  1139  00136A  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1140  00136E  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1141  001372  0E00               	movlw	0
  1142  001374  6E1C               	movwf	___lwmod@divisor+1,c
  1143  001376  0E0A               	movlw	10
  1144  001378  6E1B               	movwf	___lwmod@divisor,c
  1145  00137A  ECF5  F00B         	call	___lwmod	;wreg free
  1146  00137E  0E01               	movlw	low _LED_Number
  1147  001380  2419               	addwf	?___lwmod,w,c
  1148  001382  6EF6               	movwf	tblptrl,c
  1149  001384  0E10               	movlw	high _LED_Number
  1150  001386  201A               	addwfc	?___lwmod+1,w,c
  1151  001388  6EF7               	movwf	tblptrh,c
  1152  00138A                     	if	0	;There are less than 3 active tblptr bytes
  1153  00138A                     	endif
  1154  00138A  0008               	tblrd		*
  1155  00138C  CFF5 F01E          	movff	tablat,TM1640_Writer_Dates@Date
  1156  001390  0E00               	movlw	0
  1157  001392  EC7F  F00D         	call	_TM1640_Writer_Dates
  1158  001396  0012               	return		;funcret
  1159  001398                     __end_of_TM1640_Show_integer:
  1160                           	opt stack 0
  1161                           tblptru	equ	0xFF8
  1162                           tblptrh	equ	0xFF7
  1163                           tblptrl	equ	0xFF6
  1164                           tablat	equ	0xFF5
  1165                           intcon	equ	0xFF2
  1166                           postinc0	equ	0xFEE
  1167                           wreg	equ	0xFE8
  1168                           status	equ	0xFD8
  1169                           
  1170 ;; *************** function ___lwmod *****************
  1171 ;; Defined at:
  1172 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;  dividend        2   24[COMRAM] unsigned int 
  1175 ;;  divisor         2   26[COMRAM] unsigned int 
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;  counter         1   28[COMRAM] unsigned char 
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  2   24[COMRAM] unsigned int 
  1180 ;; Registers used:
  1181 ;;		wreg, status,2, status,0
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1187 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1188 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1190 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1191 ;;Total ram usage:        5 bytes
  1192 ;; Hardware stack levels used:    1
  1193 ;; Hardware stack levels required when called:    3
  1194 ;; This function calls:
  1195 ;;		Nothing
  1196 ;; This function is called by:
  1197 ;;		_TM1640_Show_integer
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           	psect	text8
  1202  0017EA                     __ptext8:
  1203                           	opt stack 0
  1204  0017EA                     ___lwmod:
  1205                           	opt stack 25
  1206                           
  1207                           ;incstack = 0
  1208  0017EA  501B               	movf	___lwmod@divisor,w,c
  1209  0017EC  101C               	iorwf	___lwmod@divisor+1,w,c
  1210  0017EE  B4D8               	btfsc	status,2,c
  1211  0017F0  D01D               	goto	l956
  1212  0017F2  0E01               	movlw	1
  1213  0017F4  6E1D               	movwf	___lwmod@counter,c
  1214  0017F6  D005               	goto	l2417
  1215  0017F8                     l2415:
  1216  0017F8  90D8               	bcf	status,0,c
  1217  0017FA  361B               	rlcf	___lwmod@divisor,f,c
  1218  0017FC  361C               	rlcf	___lwmod@divisor+1,f,c
  1219  0017FE  2A1D               	incf	___lwmod@counter,f,c
  1220  001800  D000               	goto	l2417
  1221  001802                     l2417:
  1222  001802  BE1C               	btfsc	___lwmod@divisor+1,7,c
  1223  001804  D002               	goto	l2419
  1224  001806  D7F8               	goto	l2415
  1225  001808  D000               	goto	l2419
  1226  00180A                     l2419:
  1227  00180A  501B               	movf	___lwmod@divisor,w,c
  1228  00180C  5C19               	subwf	___lwmod@dividend,w,c
  1229  00180E  501C               	movf	___lwmod@divisor+1,w,c
  1230  001810  581A               	subwfb	___lwmod@dividend+1,w,c
  1231  001812  A0D8               	btfss	status,0,c
  1232  001814  D005               	goto	l2423
  1233  001816  501B               	movf	___lwmod@divisor,w,c
  1234  001818  5E19               	subwf	___lwmod@dividend,f,c
  1235  00181A  501C               	movf	___lwmod@divisor+1,w,c
  1236  00181C  5A1A               	subwfb	___lwmod@dividend+1,f,c
  1237  00181E  D000               	goto	l2423
  1238  001820                     l2423:
  1239  001820  90D8               	bcf	status,0,c
  1240  001822  321C               	rrcf	___lwmod@divisor+1,f,c
  1241  001824  321B               	rrcf	___lwmod@divisor,f,c
  1242  001826  2E1D               	decfsz	___lwmod@counter,f,c
  1243  001828  D7F0               	goto	l2419
  1244  00182A  D000               	goto	l956
  1245  00182C                     l956:
  1246  00182C  C019  F019         	movff	___lwmod@dividend,?___lwmod
  1247  001830  C01A  F01A         	movff	___lwmod@dividend+1,?___lwmod+1
  1248  001834  0012               	return		;funcret
  1249  001836                     __end_of___lwmod:
  1250                           	opt stack 0
  1251                           tblptru	equ	0xFF8
  1252                           tblptrh	equ	0xFF7
  1253                           tblptrl	equ	0xFF6
  1254                           tablat	equ	0xFF5
  1255                           intcon	equ	0xFF2
  1256                           postinc0	equ	0xFEE
  1257                           wreg	equ	0xFE8
  1258                           status	equ	0xFD8
  1259                           
  1260 ;; *************** function ___lwdiv *****************
  1261 ;; Defined at:
  1262 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;  dividend        2   24[COMRAM] unsigned int 
  1265 ;;  divisor         2   26[COMRAM] unsigned int 
  1266 ;; Auto vars:     Size  Location     Type
  1267 ;;  quotient        2   29[COMRAM] unsigned int 
  1268 ;;  counter         1   28[COMRAM] unsigned char 
  1269 ;; Return value:  Size  Location     Type
  1270 ;;                  2   24[COMRAM] unsigned int 
  1271 ;; Registers used:
  1272 ;;		wreg, status,2, status,0
  1273 ;; Tracked objects:
  1274 ;;		On entry : 0/0
  1275 ;;		On exit  : 0/0
  1276 ;;		Unchanged: 0/0
  1277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1278 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1279 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1281 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1282 ;;Total ram usage:        7 bytes
  1283 ;; Hardware stack levels used:    1
  1284 ;; Hardware stack levels required when called:    3
  1285 ;; This function calls:
  1286 ;;		Nothing
  1287 ;; This function is called by:
  1288 ;;		_TM1640_Show_integer
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           	psect	text9
  1293  001740                     __ptext9:
  1294                           	opt stack 0
  1295  001740                     ___lwdiv:
  1296                           	opt stack 25
  1297                           
  1298                           ;incstack = 0
  1299  001740  0E00               	movlw	0
  1300  001742  6E1F               	movwf	___lwdiv@quotient+1,c
  1301  001744  0E00               	movlw	0
  1302  001746  6E1E               	movwf	___lwdiv@quotient,c
  1303  001748  501B               	movf	___lwdiv@divisor,w,c
  1304  00174A  101C               	iorwf	___lwdiv@divisor+1,w,c
  1305  00174C  B4D8               	btfsc	status,2,c
  1306  00174E  D021               	goto	l946
  1307  001750  0E01               	movlw	1
  1308  001752  6E1D               	movwf	___lwdiv@counter,c
  1309  001754  D005               	goto	l2397
  1310  001756                     l2395:
  1311  001756  90D8               	bcf	status,0,c
  1312  001758  361B               	rlcf	___lwdiv@divisor,f,c
  1313  00175A  361C               	rlcf	___lwdiv@divisor+1,f,c
  1314  00175C  2A1D               	incf	___lwdiv@counter,f,c
  1315  00175E  D000               	goto	l2397
  1316  001760                     l2397:
  1317  001760  BE1C               	btfsc	___lwdiv@divisor+1,7,c
  1318  001762  D002               	goto	l2399
  1319  001764  D7F8               	goto	l2395
  1320  001766  D000               	goto	l2399
  1321  001768                     l2399:
  1322  001768  90D8               	bcf	status,0,c
  1323  00176A  361E               	rlcf	___lwdiv@quotient,f,c
  1324  00176C  361F               	rlcf	___lwdiv@quotient+1,f,c
  1325  00176E  501B               	movf	___lwdiv@divisor,w,c
  1326  001770  5C19               	subwf	___lwdiv@dividend,w,c
  1327  001772  501C               	movf	___lwdiv@divisor+1,w,c
  1328  001774  581A               	subwfb	___lwdiv@dividend+1,w,c
  1329  001776  A0D8               	btfss	status,0,c
  1330  001778  D006               	goto	l2407
  1331  00177A  501B               	movf	___lwdiv@divisor,w,c
  1332  00177C  5E19               	subwf	___lwdiv@dividend,f,c
  1333  00177E  501C               	movf	___lwdiv@divisor+1,w,c
  1334  001780  5A1A               	subwfb	___lwdiv@dividend+1,f,c
  1335  001782  801E               	bsf	___lwdiv@quotient,0,c
  1336  001784  D000               	goto	l2407
  1337  001786                     l2407:
  1338  001786  90D8               	bcf	status,0,c
  1339  001788  321C               	rrcf	___lwdiv@divisor+1,f,c
  1340  00178A  321B               	rrcf	___lwdiv@divisor,f,c
  1341  00178C  2E1D               	decfsz	___lwdiv@counter,f,c
  1342  00178E  D7EC               	goto	l2399
  1343  001790  D000               	goto	l946
  1344  001792                     l946:
  1345  001792  C01E  F019         	movff	___lwdiv@quotient,?___lwdiv
  1346  001796  C01F  F01A         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1347  00179A  0012               	return		;funcret
  1348  00179C                     __end_of___lwdiv:
  1349                           	opt stack 0
  1350                           tblptru	equ	0xFF8
  1351                           tblptrh	equ	0xFF7
  1352                           tblptrl	equ	0xFF6
  1353                           tablat	equ	0xFF5
  1354                           intcon	equ	0xFF2
  1355                           postinc0	equ	0xFEE
  1356                           wreg	equ	0xFE8
  1357                           status	equ	0xFD8
  1358                           
  1359 ;; *************** function _TM1640_Writer_Dates *****************
  1360 ;; Defined at:
  1361 ;;		line 66 in file "_01_USER/TM1640.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;  Addr            1    wreg     unsigned char 
  1364 ;;  Date            1   29[COMRAM] unsigned char 
  1365 ;; Auto vars:     Size  Location     Type
  1366 ;;  Addr            1   30[COMRAM] unsigned char 
  1367 ;; Return value:  Size  Location     Type
  1368 ;;		None               void
  1369 ;; Registers used:
  1370 ;;		wreg, status,2, status,0, cstack
  1371 ;; Tracked objects:
  1372 ;;		On entry : 0/0
  1373 ;;		On exit  : 0/0
  1374 ;;		Unchanged: 0/0
  1375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1376 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1377 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1379 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1380 ;;Total ram usage:        2 bytes
  1381 ;; Hardware stack levels used:    1
  1382 ;; Hardware stack levels required when called:    5
  1383 ;; This function calls:
  1384 ;;		_TM1640_Start
  1385 ;;		_TM1640_Stop
  1386 ;;		_TM1640_Writer_Byte
  1387 ;; This function is called by:
  1388 ;;		_TM1640_Show_integer
  1389 ;;		_TM1640_Show_Decimal
  1390 ;; This function uses a non-reentrant model
  1391 ;;
  1392                           
  1393                           	psect	text10
  1394  001AFE                     __ptext10:
  1395                           	opt stack 0
  1396  001AFE                     _TM1640_Writer_Dates:
  1397                           	opt stack 23
  1398                           
  1399                           ;incstack = 0
  1400                           ;TM1640_Writer_Dates@Addr stored from wreg
  1401  001AFE  6E1F               	movwf	TM1640_Writer_Dates@Addr,c
  1402                           
  1403                           ;TM1640.c: 68: if((Addr >= 0) && (Addr <= 3))
  1404  001B00  0E04               	movlw	4
  1405  001B02  601F               	cpfslt	TM1640_Writer_Dates@Addr,c
  1406  001B04  0012               	return	
  1407                           
  1408                           ;TM1640.c: 69: {
  1409                           ;TM1640.c: 70: TM1640_Start();
  1410  001B06  EC5C  F00D         	call	_TM1640_Start	;wreg free
  1411                           
  1412                           ;TM1640.c: 71: TM1640_Writer_Byte(0xC0 + Addr);
  1413  001B0A  501F               	movf	TM1640_Writer_Dates@Addr,w,c
  1414  001B0C  0FC0               	addlw	192
  1415  001B0E  EC3A  F00C         	call	_TM1640_Writer_Byte
  1416                           
  1417                           ;TM1640.c: 72: TM1640_Writer_Byte(Date);
  1418  001B12  501E               	movf	TM1640_Writer_Dates@Date,w,c
  1419  001B14  EC3A  F00C         	call	_TM1640_Writer_Byte
  1420                           
  1421                           ;TM1640.c: 73: TM1640_Stop();
  1422  001B18  EC4A  F00D         	call	_TM1640_Stop	;wreg free
  1423  001B1C  0012               	return	
  1424  001B1E  0012               	return		;funcret
  1425  001B20                     __end_of_TM1640_Writer_Dates:
  1426                           	opt stack 0
  1427                           tblptru	equ	0xFF8
  1428                           tblptrh	equ	0xFF7
  1429                           tblptrl	equ	0xFF6
  1430                           tablat	equ	0xFF5
  1431                           intcon	equ	0xFF2
  1432                           postinc0	equ	0xFEE
  1433                           wreg	equ	0xFE8
  1434                           status	equ	0xFD8
  1435                           
  1436 ;; *************** function _Get_ADC6 *****************
  1437 ;; Defined at:
  1438 ;;		line 67 in file "_01_USER/My_ADC.c"
  1439 ;; Parameters:    Size  Location     Type
  1440 ;;		None
  1441 ;; Auto vars:     Size  Location     Type
  1442 ;;		None
  1443 ;; Return value:  Size  Location     Type
  1444 ;;		None               void
  1445 ;; Registers used:
  1446 ;;		wreg, status,2, status,0, cstack
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1456 ;;Total ram usage:        0 bytes
  1457 ;; Hardware stack levels used:    1
  1458 ;; Hardware stack levels required when called:    5
  1459 ;; This function calls:
  1460 ;;		_BusyADC
  1461 ;;		_ConvertADC
  1462 ;;		_ReadADC
  1463 ;;		___ftdiv
  1464 ;;		___ftmul
  1465 ;;		___lwtoft
  1466 ;; This function is called by:
  1467 ;;		_Run
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           	psect	text11
  1472  0016D4                     __ptext11:
  1473                           	opt stack 0
  1474  0016D4                     _Get_ADC6:
  1475                           	opt stack 24
  1476                           
  1477                           ;My_ADC.c: 69: ConvertADC();
  1478                           
  1479                           ;incstack = 0
  1480  0016D4  ECE1  F00D         	call	_ConvertADC	;wreg free
  1481                           
  1482                           ;My_ADC.c: 70: while(BusyADC());
  1483  0016D8  D000               	goto	l2545
  1484  0016DA                     l2545:
  1485  0016DA  ECCF  F00D         	call	_BusyADC	;wreg free
  1486  0016DE  0900               	iorlw	0
  1487  0016E0  A4D8               	btfss	status,2,c
  1488  0016E2  D7FB               	goto	l2545
  1489                           
  1490                           ;My_ADC.c: 71: ADC6_Buff =(unsigned int)ReadADC()*4.096f/4095.0f;
  1491  0016E4  0E12               	movlw	18
  1492  0016E6  6E27               	movwf	___ftmul@f2,c
  1493  0016E8  0E83               	movlw	131
  1494  0016EA  6E28               	movwf	___ftmul@f2+1,c
  1495  0016EC  0E40               	movlw	64
  1496  0016EE  6E29               	movwf	___ftmul@f2+2,c
  1497  0016F0  ECC0  F00D         	call	_ReadADC	;wreg free
  1498  0016F4  C019  F021         	movff	?_ReadADC,___lwtoft@c
  1499  0016F8  C01A  F022         	movff	?_ReadADC+1,___lwtoft@c+1
  1500  0016FC  EC12  F00D         	call	___lwtoft	;wreg free
  1501  001700  C021  F024         	movff	?___lwtoft,___ftmul@f1
  1502  001704  C022  F025         	movff	?___lwtoft+1,___ftmul@f1+1
  1503  001708  C023  F026         	movff	?___lwtoft+2,___ftmul@f1+2
  1504  00170C  ECB2  F008         	call	___ftmul	;wreg free
  1505  001710  C024  F066         	movff	?___ftmul,___ftdiv@f1
  1506  001714  C025  F067         	movff	?___ftmul+1,___ftdiv@f1+1
  1507  001718  C026  F068         	movff	?___ftmul+2,___ftdiv@f1+2
  1508  00171C  0EF0               	movlw	240
  1509  00171E  0100               	movlb	0	; () banked
  1510  001720  6F69               	movwf	___ftdiv@f2& (0+255),b
  1511  001722  0E7F               	movlw	127
  1512  001724  0100               	movlb	0	; () banked
  1513  001726  6F6A               	movwf	(___ftdiv@f2+1)& (0+255),b
  1514  001728  0E45               	movlw	69
  1515  00172A  0100               	movlb	0	; () banked
  1516  00172C  6F6B               	movwf	(___ftdiv@f2+2)& (0+255),b
  1517  00172E  EC09  F008         	call	___ftdiv	;wreg free
  1518  001732  C066  F078         	movff	?___ftdiv,_ADC6_Buff	;volatile
  1519  001736  C067  F079         	movff	?___ftdiv+1,_ADC6_Buff+1	;volatile
  1520  00173A  C068  F07A         	movff	?___ftdiv+2,_ADC6_Buff+2	;volatile
  1521  00173E  0012               	return		;funcret
  1522  001740                     __end_of_Get_ADC6:
  1523                           	opt stack 0
  1524                           tblptru	equ	0xFF8
  1525                           tblptrh	equ	0xFF7
  1526                           tblptrl	equ	0xFF6
  1527                           tablat	equ	0xFF5
  1528                           intcon	equ	0xFF2
  1529                           postinc0	equ	0xFEE
  1530                           wreg	equ	0xFE8
  1531                           status	equ	0xFD8
  1532                           
  1533 ;; *************** function ___lwtoft *****************
  1534 ;; Defined at:
  1535 ;;		line 28 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;  c               2   32[COMRAM] unsigned int 
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;		None
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  3   32[COMRAM] float 
  1542 ;; Registers used:
  1543 ;;		wreg, status,2, status,0, cstack
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1549 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1552 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1553 ;;Total ram usage:        3 bytes
  1554 ;; Hardware stack levels used:    1
  1555 ;; Hardware stack levels required when called:    4
  1556 ;; This function calls:
  1557 ;;		___ftpack
  1558 ;; This function is called by:
  1559 ;;		_Get_ADC6
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563                           	psect	text12
  1564  001A24                     __ptext12:
  1565                           	opt stack 0
  1566  001A24                     ___lwtoft:
  1567                           	opt stack 24
  1568                           
  1569                           ;incstack = 0
  1570  001A24  C021  F019         	movff	___lwtoft@c,___ftpack@arg
  1571  001A28  C022  F01A         	movff	___lwtoft@c+1,___ftpack@arg+1
  1572  001A2C  6A1B               	clrf	___ftpack@arg+2,c
  1573  001A2E  0E8E               	movlw	142
  1574  001A30  6E1C               	movwf	___ftpack@exp,c
  1575  001A32  0E00               	movlw	0
  1576  001A34  6E1D               	movwf	___ftpack@sign,c
  1577  001A36  EC4D  F00A         	call	___ftpack	;wreg free
  1578  001A3A  C019  F021         	movff	?___ftpack,?___lwtoft
  1579  001A3E  C01A  F022         	movff	?___ftpack+1,?___lwtoft+1
  1580  001A42  C01B  F023         	movff	?___ftpack+2,?___lwtoft+2
  1581  001A46  0012               	return	
  1582  001A48  0012               	return		;funcret
  1583  001A4A                     __end_of___lwtoft:
  1584                           	opt stack 0
  1585                           tblptru	equ	0xFF8
  1586                           tblptrh	equ	0xFF7
  1587                           tblptrl	equ	0xFF6
  1588                           tablat	equ	0xFF5
  1589                           intcon	equ	0xFF2
  1590                           postinc0	equ	0xFEE
  1591                           wreg	equ	0xFE8
  1592                           status	equ	0xFD8
  1593                           
  1594 ;; *************** function ___ftmul *****************
  1595 ;; Defined at:
  1596 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;  f1              3   35[COMRAM] float 
  1599 ;;  f2              3   38[COMRAM] float 
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;  f3_as_produc    3    1[BANK0 ] unsigned um
  1602 ;;  sign            1    5[BANK0 ] unsigned char 
  1603 ;;  cntr            1    4[BANK0 ] unsigned char 
  1604 ;;  exp             1    0[BANK0 ] unsigned char 
  1605 ;; Return value:  Size  Location     Type
  1606 ;;                  3   35[COMRAM] float 
  1607 ;; Registers used:
  1608 ;;		wreg, status,2, status,0, cstack
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1614 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1615 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1616 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1617 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1618 ;;Total ram usage:       15 bytes
  1619 ;; Hardware stack levels used:    1
  1620 ;; Hardware stack levels required when called:    4
  1621 ;; This function calls:
  1622 ;;		___ftpack
  1623 ;; This function is called by:
  1624 ;;		_Get_ADC6
  1625 ;;		_TM1640_Show_Decimal
  1626 ;; This function uses a non-reentrant model
  1627 ;;
  1628                           
  1629                           	psect	text13
  1630  001164                     __ptext13:
  1631                           	opt stack 0
  1632  001164                     ___ftmul:
  1633                           	opt stack 24
  1634                           
  1635                           ;incstack = 0
  1636  001164  C026  F02A         	movff	___ftmul@f1+2,??___ftmul
  1637  001168  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  1638  00116A  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  1639  00116C  3425               	rlcf	___ftmul@f1+1,w,c
  1640  00116E  362A               	rlcf	??___ftmul& (0+255),f,c
  1641  001170  E301               	bnc	u1861
  1642  001172  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  1643  001174                     u1861:
  1644  001174  502A               	movf	??___ftmul,w,c
  1645  001176  0100               	movlb	0	; () banked
  1646  001178  6F60               	movwf	___ftmul@exp& (0+255),b
  1647  00117A  0100               	movlb	0	; () banked
  1648  00117C  5160               	movf	___ftmul@exp& (0+255),w,b
  1649  00117E  A4D8               	btfss	status,2,c
  1650  001180  D007               	goto	l2347
  1651                           
  1652                           ; BSR set to: 0
  1653  001182  0E00               	movlw	0
  1654  001184  6E24               	movwf	?___ftmul,c
  1655  001186  0E00               	movlw	0
  1656  001188  6E25               	movwf	?___ftmul+1,c
  1657  00118A  0E00               	movlw	0
  1658  00118C  6E26               	movwf	?___ftmul+2,c
  1659                           
  1660                           ; BSR set to: 0
  1661  00118E  0012               	return	
  1662  001190                     l2347:
  1663                           
  1664                           ; BSR set to: 0
  1665  001190  C029  F02A         	movff	___ftmul@f2+2,??___ftmul
  1666  001194  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  1667  001196  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  1668  001198  3428               	rlcf	___ftmul@f2+1,w,c
  1669  00119A  362A               	rlcf	??___ftmul& (0+255),f,c
  1670  00119C  E301               	bnc	u1881
  1671  00119E  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  1672  0011A0                     u1881:
  1673  0011A0  502A               	movf	??___ftmul,w,c
  1674  0011A2  0100               	movlb	0	; () banked
  1675  0011A4  6F65               	movwf	___ftmul@sign& (0+255),b
  1676  0011A6  0100               	movlb	0	; () banked
  1677  0011A8  5165               	movf	___ftmul@sign& (0+255),w,b
  1678  0011AA  A4D8               	btfss	status,2,c
  1679  0011AC  D007               	goto	l2353
  1680                           
  1681                           ; BSR set to: 0
  1682  0011AE  0E00               	movlw	0
  1683  0011B0  6E24               	movwf	?___ftmul,c
  1684  0011B2  0E00               	movlw	0
  1685  0011B4  6E25               	movwf	?___ftmul+1,c
  1686  0011B6  0E00               	movlw	0
  1687  0011B8  6E26               	movwf	?___ftmul+2,c
  1688                           
  1689                           ; BSR set to: 0
  1690  0011BA  0012               	return	
  1691  0011BC                     l2353:
  1692                           
  1693                           ; BSR set to: 0
  1694  0011BC  0100               	movlb	0	; () banked
  1695  0011BE  5165               	movf	___ftmul@sign& (0+255),w,b
  1696  0011C0  0F7B               	addlw	123
  1697  0011C2  0100               	movlb	0	; () banked
  1698  0011C4  2760               	addwf	___ftmul@exp& (0+255),f,b
  1699                           
  1700                           ; BSR set to: 0
  1701  0011C6  C026  F065         	movff	___ftmul@f1+2,___ftmul@sign
  1702  0011CA  5029               	movf	___ftmul@f2+2,w,c
  1703  0011CC  0100               	movlb	0	; () banked
  1704  0011CE  1B65               	xorwf	___ftmul@sign& (0+255),f,b
  1705  0011D0  0E80               	movlw	128
  1706  0011D2  0100               	movlb	0	; () banked
  1707  0011D4  1765               	andwf	___ftmul@sign& (0+255),f,b
  1708                           
  1709                           ; BSR set to: 0
  1710  0011D6  8E25               	bsf	___ftmul@f1+1,7,c
  1711                           
  1712                           ; BSR set to: 0
  1713  0011D8  8E28               	bsf	___ftmul@f2+1,7,c
  1714                           
  1715                           ; BSR set to: 0
  1716  0011DA  0EFF               	movlw	255
  1717  0011DC  1627               	andwf	___ftmul@f2,f,c
  1718  0011DE  0EFF               	movlw	255
  1719  0011E0  1628               	andwf	___ftmul@f2+1,f,c
  1720  0011E2  0E00               	movlw	0
  1721  0011E4  1629               	andwf	___ftmul@f2+2,f,c
  1722                           
  1723                           ; BSR set to: 0
  1724  0011E6  0E00               	movlw	0
  1725  0011E8  0100               	movlb	0	; () banked
  1726  0011EA  6F61               	movwf	___ftmul@f3_as_product& (0+255),b
  1727  0011EC  0E00               	movlw	0
  1728  0011EE  0100               	movlb	0	; () banked
  1729  0011F0  6F62               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  1730  0011F2  0E00               	movlw	0
  1731  0011F4  0100               	movlb	0	; () banked
  1732  0011F6  6F63               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  1733                           
  1734                           ; BSR set to: 0
  1735  0011F8  0E07               	movlw	7
  1736  0011FA  0100               	movlb	0	; () banked
  1737  0011FC  6F64               	movwf	___ftmul@cntr& (0+255),b
  1738  0011FE  D000               	goto	l2367
  1739  001200                     l2367:
  1740                           
  1741                           ; BSR set to: 0
  1742  001200  A024               	btfss	___ftmul@f1,0,c
  1743  001202  D00A               	goto	l2371
  1744                           
  1745                           ; BSR set to: 0
  1746  001204  5027               	movf	___ftmul@f2,w,c
  1747  001206  0100               	movlb	0	; () banked
  1748  001208  2761               	addwf	___ftmul@f3_as_product& (0+255),f,b
  1749  00120A  5028               	movf	___ftmul@f2+1,w,c
  1750  00120C  0100               	movlb	0	; () banked
  1751  00120E  2362               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  1752  001210  5029               	movf	___ftmul@f2+2,w,c
  1753  001212  0100               	movlb	0	; () banked
  1754  001214  2363               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  1755  001216  D000               	goto	l2371
  1756  001218                     l2371:
  1757                           
  1758                           ; BSR set to: 0
  1759  001218  90D8               	bcf	status,0,c
  1760  00121A  3226               	rrcf	___ftmul@f1+2,f,c
  1761  00121C  3225               	rrcf	___ftmul@f1+1,f,c
  1762  00121E  3224               	rrcf	___ftmul@f1,f,c
  1763  001220  90D8               	bcf	status,0,c
  1764  001222  3627               	rlcf	___ftmul@f2,f,c
  1765  001224  3628               	rlcf	___ftmul@f2+1,f,c
  1766  001226  3629               	rlcf	___ftmul@f2+2,f,c
  1767                           
  1768                           ; BSR set to: 0
  1769  001228  0100               	movlb	0	; () banked
  1770  00122A  2F64               	decfsz	___ftmul@cntr& (0+255),f,b
  1771  00122C  D7E9               	goto	l2367
  1772  00122E  D000               	goto	l2375
  1773  001230                     l2375:
  1774                           
  1775                           ; BSR set to: 0
  1776  001230  0E09               	movlw	9
  1777  001232  0100               	movlb	0	; () banked
  1778  001234  6F64               	movwf	___ftmul@cntr& (0+255),b
  1779  001236  D000               	goto	l2377
  1780  001238                     l2377:
  1781                           
  1782                           ; BSR set to: 0
  1783  001238  A024               	btfss	___ftmul@f1,0,c
  1784  00123A  D00A               	goto	l2381
  1785                           
  1786                           ; BSR set to: 0
  1787  00123C  5027               	movf	___ftmul@f2,w,c
  1788  00123E  0100               	movlb	0	; () banked
  1789  001240  2761               	addwf	___ftmul@f3_as_product& (0+255),f,b
  1790  001242  5028               	movf	___ftmul@f2+1,w,c
  1791  001244  0100               	movlb	0	; () banked
  1792  001246  2362               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  1793  001248  5029               	movf	___ftmul@f2+2,w,c
  1794  00124A  0100               	movlb	0	; () banked
  1795  00124C  2363               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  1796  00124E  D000               	goto	l2381
  1797  001250                     l2381:
  1798                           
  1799                           ; BSR set to: 0
  1800  001250  90D8               	bcf	status,0,c
  1801  001252  3226               	rrcf	___ftmul@f1+2,f,c
  1802  001254  3225               	rrcf	___ftmul@f1+1,f,c
  1803  001256  3224               	rrcf	___ftmul@f1,f,c
  1804  001258  0100               	movlb	0	; () banked
  1805  00125A  90D8               	bcf	status,0,c
  1806  00125C  3363               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  1807  00125E  3362               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  1808  001260  3361               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  1809                           
  1810                           ; BSR set to: 0
  1811  001262  0100               	movlb	0	; () banked
  1812  001264  2F64               	decfsz	___ftmul@cntr& (0+255),f,b
  1813  001266  D7E8               	goto	l2377
  1814  001268  D000               	goto	l2385
  1815  00126A                     l2385:
  1816                           
  1817                           ; BSR set to: 0
  1818  00126A  C061  F019         	movff	___ftmul@f3_as_product,___ftpack@arg
  1819  00126E  C062  F01A         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1820  001272  C063  F01B         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1821  001276  C060  F01C         	movff	___ftmul@exp,___ftpack@exp
  1822  00127A  C065  F01D         	movff	___ftmul@sign,___ftpack@sign
  1823  00127E  EC4D  F00A         	call	___ftpack	;wreg free
  1824  001282  C019  F024         	movff	?___ftpack,?___ftmul
  1825  001286  C01A  F025         	movff	?___ftpack+1,?___ftmul+1
  1826  00128A  C01B  F026         	movff	?___ftpack+2,?___ftmul+2
  1827  00128E  0012               	return	
  1828  001290  0012               	return		;funcret
  1829  001292                     __end_of___ftmul:
  1830                           	opt stack 0
  1831                           tblptru	equ	0xFF8
  1832                           tblptrh	equ	0xFF7
  1833                           tblptrl	equ	0xFF6
  1834                           tablat	equ	0xFF5
  1835                           intcon	equ	0xFF2
  1836                           postinc0	equ	0xFEE
  1837                           wreg	equ	0xFE8
  1838                           status	equ	0xFD8
  1839                           
  1840 ;; *************** function ___ftdiv *****************
  1841 ;; Defined at:
  1842 ;;		line 54 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;  f1              3    6[BANK0 ] float 
  1845 ;;  f2              3    9[BANK0 ] float 
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;  f3              3   16[BANK0 ] float 
  1848 ;;  sign            1   20[BANK0 ] unsigned char 
  1849 ;;  exp             1   19[BANK0 ] unsigned char 
  1850 ;;  cntr            1   15[BANK0 ] unsigned char 
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  3    6[BANK0 ] float 
  1853 ;; Registers used:
  1854 ;;		wreg, status,2, status,0, cstack
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1860 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1861 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1862 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1863 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1864 ;;Total ram usage:       15 bytes
  1865 ;; Hardware stack levels used:    1
  1866 ;; Hardware stack levels required when called:    4
  1867 ;; This function calls:
  1868 ;;		___ftpack
  1869 ;; This function is called by:
  1870 ;;		_Get_ADC6
  1871 ;;		_TM1640_Show_Decimal
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           	psect	text14
  1876  001012                     __ptext14:
  1877                           	opt stack 0
  1878  001012                     ___ftdiv:
  1879                           	opt stack 24
  1880                           
  1881                           ;incstack = 0
  1882  001012  C068  F06C         	movff	___ftdiv@f1+2,??___ftdiv
  1883  001016  0100               	movlb	0	; () banked
  1884  001018  6B6D               	clrf	(??___ftdiv+1)& (0+255),b
  1885  00101A  6B6E               	clrf	(??___ftdiv+2)& (0+255),b
  1886  00101C  0100               	movlb	0	; () banked
  1887  00101E  3567               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  1888  001020  0100               	movlb	0	; () banked
  1889  001022  376C               	rlcf	??___ftdiv& (0+255),f,b
  1890  001024  E301               	bnc	u1811
  1891  001026  816D               	bsf	(??___ftdiv+1)& (0+255),0,b
  1892  001028                     u1811:
  1893  001028  0100               	movlb	0	; () banked
  1894  00102A  516C               	movf	??___ftdiv& (0+255),w,b
  1895  00102C  0100               	movlb	0	; () banked
  1896  00102E  6F73               	movwf	___ftdiv@exp& (0+255),b
  1897  001030  0100               	movlb	0	; () banked
  1898  001032  5173               	movf	___ftdiv@exp& (0+255),w,b
  1899  001034  A4D8               	btfss	status,2,c
  1900  001036  D00A               	goto	l2301
  1901                           
  1902                           ; BSR set to: 0
  1903  001038  0E00               	movlw	0
  1904  00103A  0100               	movlb	0	; () banked
  1905  00103C  6F66               	movwf	?___ftdiv& (0+255),b
  1906  00103E  0E00               	movlw	0
  1907  001040  0100               	movlb	0	; () banked
  1908  001042  6F67               	movwf	(?___ftdiv+1)& (0+255),b
  1909  001044  0E00               	movlw	0
  1910  001046  0100               	movlb	0	; () banked
  1911  001048  6F68               	movwf	(?___ftdiv+2)& (0+255),b
  1912                           
  1913                           ; BSR set to: 0
  1914  00104A  0012               	return	
  1915  00104C                     l2301:
  1916                           
  1917                           ; BSR set to: 0
  1918  00104C  C06B  F06C         	movff	___ftdiv@f2+2,??___ftdiv
  1919  001050  0100               	movlb	0	; () banked
  1920  001052  6B6D               	clrf	(??___ftdiv+1)& (0+255),b
  1921  001054  6B6E               	clrf	(??___ftdiv+2)& (0+255),b
  1922  001056  0100               	movlb	0	; () banked
  1923  001058  356A               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  1924  00105A  0100               	movlb	0	; () banked
  1925  00105C  376C               	rlcf	??___ftdiv& (0+255),f,b
  1926  00105E  E301               	bnc	u1831
  1927  001060  816D               	bsf	(??___ftdiv+1)& (0+255),0,b
  1928  001062                     u1831:
  1929  001062  0100               	movlb	0	; () banked
  1930  001064  516C               	movf	??___ftdiv& (0+255),w,b
  1931  001066  0100               	movlb	0	; () banked
  1932  001068  6F74               	movwf	___ftdiv@sign& (0+255),b
  1933  00106A  0100               	movlb	0	; () banked
  1934  00106C  5174               	movf	___ftdiv@sign& (0+255),w,b
  1935  00106E  A4D8               	btfss	status,2,c
  1936  001070  D00A               	goto	l2307
  1937                           
  1938                           ; BSR set to: 0
  1939  001072  0E00               	movlw	0
  1940  001074  0100               	movlb	0	; () banked
  1941  001076  6F66               	movwf	?___ftdiv& (0+255),b
  1942  001078  0E00               	movlw	0
  1943  00107A  0100               	movlb	0	; () banked
  1944  00107C  6F67               	movwf	(?___ftdiv+1)& (0+255),b
  1945  00107E  0E00               	movlw	0
  1946  001080  0100               	movlb	0	; () banked
  1947  001082  6F68               	movwf	(?___ftdiv+2)& (0+255),b
  1948                           
  1949                           ; BSR set to: 0
  1950  001084  0012               	return	
  1951  001086                     l2307:
  1952                           
  1953                           ; BSR set to: 0
  1954  001086  0E00               	movlw	0
  1955  001088  0100               	movlb	0	; () banked
  1956  00108A  6F70               	movwf	___ftdiv@f3& (0+255),b
  1957  00108C  0E00               	movlw	0
  1958  00108E  0100               	movlb	0	; () banked
  1959  001090  6F71               	movwf	(___ftdiv@f3+1)& (0+255),b
  1960  001092  0E00               	movlw	0
  1961  001094  0100               	movlb	0	; () banked
  1962  001096  6F72               	movwf	(___ftdiv@f3+2)& (0+255),b
  1963                           
  1964                           ; BSR set to: 0
  1965  001098  0100               	movlb	0	; () banked
  1966  00109A  5174               	movf	___ftdiv@sign& (0+255),w,b
  1967  00109C  0F89               	addlw	137
  1968  00109E  0100               	movlb	0	; () banked
  1969  0010A0  5F73               	subwf	___ftdiv@exp& (0+255),f,b
  1970                           
  1971                           ; BSR set to: 0
  1972  0010A2  C068  F074         	movff	___ftdiv@f1+2,___ftdiv@sign
  1973                           
  1974                           ; BSR set to: 0
  1975  0010A6  0100               	movlb	0	; () banked
  1976  0010A8  516B               	movf	(___ftdiv@f2+2)& (0+255),w,b
  1977  0010AA  0100               	movlb	0	; () banked
  1978  0010AC  1B74               	xorwf	___ftdiv@sign& (0+255),f,b
  1979                           
  1980                           ; BSR set to: 0
  1981  0010AE  0E80               	movlw	128
  1982  0010B0  0100               	movlb	0	; () banked
  1983  0010B2  1774               	andwf	___ftdiv@sign& (0+255),f,b
  1984                           
  1985                           ; BSR set to: 0
  1986  0010B4  0100               	movlb	0	; () banked
  1987  0010B6  8F67               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  1988                           
  1989                           ; BSR set to: 0
  1990  0010B8  0EFF               	movlw	255
  1991  0010BA  0100               	movlb	0	; () banked
  1992  0010BC  1766               	andwf	___ftdiv@f1& (0+255),f,b
  1993  0010BE  0EFF               	movlw	255
  1994  0010C0  0100               	movlb	0	; () banked
  1995  0010C2  1767               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  1996  0010C4  0E00               	movlw	0
  1997  0010C6  0100               	movlb	0	; () banked
  1998  0010C8  1768               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  1999                           
  2000                           ; BSR set to: 0
  2001  0010CA  0100               	movlb	0	; () banked
  2002  0010CC  8F6A               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  2003                           
  2004                           ; BSR set to: 0
  2005  0010CE  0EFF               	movlw	255
  2006  0010D0  0100               	movlb	0	; () banked
  2007  0010D2  1769               	andwf	___ftdiv@f2& (0+255),f,b
  2008  0010D4  0EFF               	movlw	255
  2009  0010D6  0100               	movlb	0	; () banked
  2010  0010D8  176A               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  2011  0010DA  0E00               	movlw	0
  2012  0010DC  0100               	movlb	0	; () banked
  2013  0010DE  176B               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  2014                           
  2015                           ; BSR set to: 0
  2016  0010E0  0E18               	movlw	24
  2017  0010E2  0100               	movlb	0	; () banked
  2018  0010E4  6F6F               	movwf	___ftdiv@cntr& (0+255),b
  2019  0010E6  D000               	goto	l2327
  2020  0010E8                     l2327:
  2021                           
  2022                           ; BSR set to: 0
  2023  0010E8  0100               	movlb	0	; () banked
  2024  0010EA  90D8               	bcf	status,0,c
  2025  0010EC  3770               	rlcf	___ftdiv@f3& (0+255),f,b
  2026  0010EE  3771               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  2027  0010F0  3772               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  2028                           
  2029                           ; BSR set to: 0
  2030  0010F2  0100               	movlb	0	; () banked
  2031  0010F4  5169               	movf	___ftdiv@f2& (0+255),w,b
  2032  0010F6  0100               	movlb	0	; () banked
  2033  0010F8  5D66               	subwf	___ftdiv@f1& (0+255),w,b
  2034  0010FA  0100               	movlb	0	; () banked
  2035  0010FC  516A               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2036  0010FE  0100               	movlb	0	; () banked
  2037  001100  5967               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  2038  001102  0100               	movlb	0	; () banked
  2039  001104  516B               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2040  001106  0100               	movlb	0	; () banked
  2041  001108  5968               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  2042  00110A  A0D8               	btfss	status,0,c
  2043  00110C  D00E               	goto	l811
  2044                           
  2045                           ; BSR set to: 0
  2046  00110E  0100               	movlb	0	; () banked
  2047  001110  5169               	movf	___ftdiv@f2& (0+255),w,b
  2048  001112  0100               	movlb	0	; () banked
  2049  001114  5F66               	subwf	___ftdiv@f1& (0+255),f,b
  2050  001116  0100               	movlb	0	; () banked
  2051  001118  516A               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2052  00111A  0100               	movlb	0	; () banked
  2053  00111C  5B67               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  2054  00111E  0100               	movlb	0	; () banked
  2055  001120  516B               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2056  001122  0100               	movlb	0	; () banked
  2057  001124  5B68               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  2058                           
  2059                           ; BSR set to: 0
  2060  001126  0100               	movlb	0	; () banked
  2061  001128  8170               	bsf	___ftdiv@f3& (0+255),0,b
  2062  00112A                     l811:
  2063                           
  2064                           ; BSR set to: 0
  2065  00112A  0100               	movlb	0	; () banked
  2066  00112C  90D8               	bcf	status,0,c
  2067  00112E  3766               	rlcf	___ftdiv@f1& (0+255),f,b
  2068  001130  3767               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  2069  001132  3768               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  2070                           
  2071                           ; BSR set to: 0
  2072  001134  0100               	movlb	0	; () banked
  2073  001136  2F6F               	decfsz	___ftdiv@cntr& (0+255),f,b
  2074  001138  D7D7               	goto	l2327
  2075  00113A  D000               	goto	l2337
  2076  00113C                     l2337:
  2077                           
  2078                           ; BSR set to: 0
  2079  00113C  C070  F019         	movff	___ftdiv@f3,___ftpack@arg
  2080  001140  C071  F01A         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2081  001144  C072  F01B         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2082  001148  C073  F01C         	movff	___ftdiv@exp,___ftpack@exp
  2083  00114C  C074  F01D         	movff	___ftdiv@sign,___ftpack@sign
  2084  001150  EC4D  F00A         	call	___ftpack	;wreg free
  2085  001154  C019  F066         	movff	?___ftpack,?___ftdiv
  2086  001158  C01A  F067         	movff	?___ftpack+1,?___ftdiv+1
  2087  00115C  C01B  F068         	movff	?___ftpack+2,?___ftdiv+2
  2088  001160  0012               	return	
  2089  001162  0012               	return		;funcret
  2090  001164                     __end_of___ftdiv:
  2091                           	opt stack 0
  2092                           tblptru	equ	0xFF8
  2093                           tblptrh	equ	0xFF7
  2094                           tblptrl	equ	0xFF6
  2095                           tablat	equ	0xFF5
  2096                           intcon	equ	0xFF2
  2097                           postinc0	equ	0xFEE
  2098                           wreg	equ	0xFE8
  2099                           status	equ	0xFD8
  2100                           
  2101 ;; *************** function ___ftpack *****************
  2102 ;; Defined at:
  2103 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;  arg             3   24[COMRAM] unsigned um
  2106 ;;  exp             1   27[COMRAM] unsigned char 
  2107 ;;  sign            1   28[COMRAM] unsigned char 
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;		None
  2110 ;; Return value:  Size  Location     Type
  2111 ;;                  3   24[COMRAM] float 
  2112 ;; Registers used:
  2113 ;;		wreg, status,2, status,0
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2119 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2121 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2122 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2123 ;;Total ram usage:        8 bytes
  2124 ;; Hardware stack levels used:    1
  2125 ;; Hardware stack levels required when called:    3
  2126 ;; This function calls:
  2127 ;;		Nothing
  2128 ;; This function is called by:
  2129 ;;		___ftdiv
  2130 ;;		___ftmul
  2131 ;;		___lwtoft
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135                           	psect	text15
  2136  00149A                     __ptext15:
  2137                           	opt stack 0
  2138  00149A                     ___ftpack:
  2139                           	opt stack 24
  2140                           
  2141                           ;incstack = 0
  2142  00149A  501C               	movf	___ftpack@exp,w,c
  2143  00149C  B4D8               	btfsc	status,2,c
  2144  00149E  D005               	goto	l2225
  2145  0014A0  5019               	movf	___ftpack@arg,w,c
  2146  0014A2  101A               	iorwf	___ftpack@arg+1,w,c
  2147  0014A4  101B               	iorwf	___ftpack@arg+2,w,c
  2148  0014A6  A4D8               	btfss	status,2,c
  2149  0014A8  D00E               	goto	l2231
  2150  0014AA                     l2225:
  2151  0014AA  0E00               	movlw	0
  2152  0014AC  6E19               	movwf	?___ftpack,c
  2153  0014AE  0E00               	movlw	0
  2154  0014B0  6E1A               	movwf	?___ftpack+1,c
  2155  0014B2  0E00               	movlw	0
  2156  0014B4  6E1B               	movwf	?___ftpack+2,c
  2157  0014B6  0012               	return	
  2158  0014B8  D006               	goto	l2231
  2159  0014BA                     l2229:
  2160  0014BA  2A1C               	incf	___ftpack@exp,f,c
  2161  0014BC  90D8               	bcf	status,0,c
  2162  0014BE  321B               	rrcf	___ftpack@arg+2,f,c
  2163  0014C0  321A               	rrcf	___ftpack@arg+1,f,c
  2164  0014C2  3219               	rrcf	___ftpack@arg,f,c
  2165  0014C4  D000               	goto	l2231
  2166  0014C6                     l2231:
  2167  0014C6  0E00               	movlw	0
  2168  0014C8  1419               	andwf	___ftpack@arg,w,c
  2169  0014CA  6E1E               	movwf	??___ftpack& (0+255),c
  2170  0014CC  0E00               	movlw	0
  2171  0014CE  141A               	andwf	___ftpack@arg+1,w,c
  2172  0014D0  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  2173  0014D2  0EFE               	movlw	254
  2174  0014D4  141B               	andwf	___ftpack@arg+2,w,c
  2175  0014D6  6E20               	movwf	(??___ftpack+2)& (0+255),c
  2176  0014D8  501E               	movf	??___ftpack,w,c
  2177  0014DA  101F               	iorwf	??___ftpack+1,w,c
  2178  0014DC  1020               	iorwf	??___ftpack+2,w,c
  2179  0014DE  B4D8               	btfsc	status,2,c
  2180  0014E0  D00E               	goto	l2237
  2181  0014E2  D7EB               	goto	l2229
  2182  0014E4  D00C               	goto	l2237
  2183  0014E6                     l2233:
  2184  0014E6  2A1C               	incf	___ftpack@exp,f,c
  2185  0014E8  0E01               	movlw	1
  2186  0014EA  2619               	addwf	___ftpack@arg,f,c
  2187  0014EC  0E00               	movlw	0
  2188  0014EE  221A               	addwfc	___ftpack@arg+1,f,c
  2189  0014F0  0E00               	movlw	0
  2190  0014F2  221B               	addwfc	___ftpack@arg+2,f,c
  2191  0014F4  90D8               	bcf	status,0,c
  2192  0014F6  321B               	rrcf	___ftpack@arg+2,f,c
  2193  0014F8  321A               	rrcf	___ftpack@arg+1,f,c
  2194  0014FA  3219               	rrcf	___ftpack@arg,f,c
  2195  0014FC  D000               	goto	l2237
  2196  0014FE                     l2237:
  2197  0014FE  0E00               	movlw	0
  2198  001500  1419               	andwf	___ftpack@arg,w,c
  2199  001502  6E1E               	movwf	??___ftpack& (0+255),c
  2200  001504  0E00               	movlw	0
  2201  001506  141A               	andwf	___ftpack@arg+1,w,c
  2202  001508  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  2203  00150A  0EFF               	movlw	255
  2204  00150C  141B               	andwf	___ftpack@arg+2,w,c
  2205  00150E  6E20               	movwf	(??___ftpack+2)& (0+255),c
  2206  001510  501E               	movf	??___ftpack,w,c
  2207  001512  101F               	iorwf	??___ftpack+1,w,c
  2208  001514  1020               	iorwf	??___ftpack+2,w,c
  2209  001516  B4D8               	btfsc	status,2,c
  2210  001518  D008               	goto	l2241
  2211  00151A  D7E5               	goto	l2233
  2212  00151C  D006               	goto	l2241
  2213  00151E                     l2239:
  2214  00151E  061C               	decf	___ftpack@exp,f,c
  2215  001520  90D8               	bcf	status,0,c
  2216  001522  3619               	rlcf	___ftpack@arg,f,c
  2217  001524  361A               	rlcf	___ftpack@arg+1,f,c
  2218  001526  361B               	rlcf	___ftpack@arg+2,f,c
  2219  001528  D000               	goto	l2241
  2220  00152A                     l2241:
  2221  00152A  BE1A               	btfsc	___ftpack@arg+1,7,c
  2222  00152C  D004               	goto	l747
  2223  00152E  0E02               	movlw	2
  2224  001530  601C               	cpfslt	___ftpack@exp,c
  2225  001532  D7F5               	goto	l2239
  2226  001534  D000               	goto	l747
  2227  001536                     l747:
  2228  001536  B01C               	btfsc	___ftpack@exp,0,c
  2229  001538  D002               	goto	l2247
  2230  00153A  9E1A               	bcf	___ftpack@arg+1,7,c
  2231  00153C  D000               	goto	l2247
  2232  00153E                     l2247:
  2233  00153E  90D8               	bcf	status,0,c
  2234  001540  321C               	rrcf	___ftpack@exp,f,c
  2235  001542  501C               	movf	___ftpack@exp,w,c
  2236  001544  121B               	iorwf	___ftpack@arg+2,f,c
  2237  001546  501D               	movf	___ftpack@sign,w,c
  2238  001548  B4D8               	btfsc	status,2,c
  2239  00154A  D002               	goto	l2253
  2240  00154C  8E1B               	bsf	___ftpack@arg+2,7,c
  2241  00154E  D000               	goto	l2253
  2242  001550                     l2253:
  2243  001550  C019  F019         	movff	___ftpack@arg,?___ftpack
  2244  001554  C01A  F01A         	movff	___ftpack@arg+1,?___ftpack+1
  2245  001558  C01B  F01B         	movff	___ftpack@arg+2,?___ftpack+2
  2246  00155C  0012               	return	
  2247  00155E  0012               	return		;funcret
  2248  001560                     __end_of___ftpack:
  2249                           	opt stack 0
  2250                           tblptru	equ	0xFF8
  2251                           tblptrh	equ	0xFF7
  2252                           tblptrl	equ	0xFF6
  2253                           tablat	equ	0xFF5
  2254                           intcon	equ	0xFF2
  2255                           postinc0	equ	0xFEE
  2256                           wreg	equ	0xFE8
  2257                           status	equ	0xFD8
  2258                           
  2259 ;; *************** function _ReadADC *****************
  2260 ;; Defined at:
  2261 ;;		line 24 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;		None
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;		None
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  2   24[COMRAM] int 
  2268 ;; Registers used:
  2269 ;;		wreg, status,2
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2275 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2277 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2278 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2279 ;;Total ram usage:        4 bytes
  2280 ;; Hardware stack levels used:    1
  2281 ;; Hardware stack levels required when called:    3
  2282 ;; This function calls:
  2283 ;;		Nothing
  2284 ;; This function is called by:
  2285 ;;		_Get_ADC6
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           	psect	text16
  2290  001B80                     __ptext16:
  2291                           	opt stack 0
  2292  001B80                     _ReadADC:
  2293                           	opt stack 25
  2294                           
  2295                           ;incstack = 0
  2296  001B80  50C4               	movf	4036,w,c	;volatile
  2297  001B82  6E1B               	movwf	??_ReadADC& (0+255),c
  2298  001B84  50C3               	movf	4035,w,c	;volatile
  2299  001B86  6E19               	movwf	?_ReadADC,c
  2300  001B88  C01B  F01A         	movff	??_ReadADC,?_ReadADC+1
  2301  001B8C  0012               	return	
  2302  001B8E  0012               	return		;funcret
  2303  001B90                     __end_of_ReadADC:
  2304                           	opt stack 0
  2305                           tblptru	equ	0xFF8
  2306                           tblptrh	equ	0xFF7
  2307                           tblptrl	equ	0xFF6
  2308                           tablat	equ	0xFF5
  2309                           intcon	equ	0xFF2
  2310                           postinc0	equ	0xFEE
  2311                           wreg	equ	0xFE8
  2312                           status	equ	0xFD8
  2313                           
  2314 ;; *************** function _ConvertADC *****************
  2315 ;; Defined at:
  2316 ;;		line 22 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  2317 ;; Parameters:    Size  Location     Type
  2318 ;;		None
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;		None
  2321 ;; Return value:  Size  Location     Type
  2322 ;;		None               void
  2323 ;; Registers used:
  2324 ;;		None
  2325 ;; Tracked objects:
  2326 ;;		On entry : 0/0
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2334 ;;Total ram usage:        0 bytes
  2335 ;; Hardware stack levels used:    1
  2336 ;; Hardware stack levels required when called:    3
  2337 ;; This function calls:
  2338 ;;		Nothing
  2339 ;; This function is called by:
  2340 ;;		_Get_ADC6
  2341 ;; This function uses a non-reentrant model
  2342 ;;
  2343                           
  2344                           	psect	text17
  2345  001BC2                     __ptext17:
  2346                           	opt stack 0
  2347  001BC2                     _ConvertADC:
  2348                           	opt stack 25
  2349                           
  2350                           ;incstack = 0
  2351  001BC2  82C2               	bsf	4034,1,c	;volatile
  2352  001BC4  0012               	return		;funcret
  2353  001BC6                     __end_of_ConvertADC:
  2354                           	opt stack 0
  2355                           tblptru	equ	0xFF8
  2356                           tblptrh	equ	0xFF7
  2357                           tblptrl	equ	0xFF6
  2358                           tablat	equ	0xFF5
  2359                           intcon	equ	0xFF2
  2360                           postinc0	equ	0xFEE
  2361                           wreg	equ	0xFE8
  2362                           status	equ	0xFD8
  2363                           
  2364 ;; *************** function _BusyADC *****************
  2365 ;; Defined at:
  2366 ;;		line 26 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;		None
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;		None
  2371 ;; Return value:  Size  Location     Type
  2372 ;;                  1    wreg      unsigned char 
  2373 ;; Registers used:
  2374 ;;		wreg
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2384 ;;Total ram usage:        0 bytes
  2385 ;; Hardware stack levels used:    1
  2386 ;; Hardware stack levels required when called:    3
  2387 ;; This function calls:
  2388 ;;		Nothing
  2389 ;; This function is called by:
  2390 ;;		_Get_ADC6
  2391 ;; This function uses a non-reentrant model
  2392 ;;
  2393                           
  2394                           	psect	text18
  2395  001B9E                     __ptext18:
  2396                           	opt stack 0
  2397  001B9E                     _BusyADC:
  2398                           	opt stack 25
  2399                           
  2400                           ;incstack = 0
  2401  001B9E  A2C2               	btfss	4034,1,c	;volatile
  2402  001BA0  D002               	goto	u1800
  2403  001BA2  0E01               	movlw	1
  2404  001BA4  0012               	return	
  2405  001BA6                     u1800:
  2406  001BA6  0E00               	movlw	0
  2407  001BA8  0012               	return	
  2408  001BAA  0012               	return		;funcret
  2409  001BAC                     __end_of_BusyADC:
  2410                           	opt stack 0
  2411                           tblptru	equ	0xFF8
  2412                           tblptrh	equ	0xFF7
  2413                           tblptrl	equ	0xFF6
  2414                           tablat	equ	0xFF5
  2415                           intcon	equ	0xFF2
  2416                           postinc0	equ	0xFEE
  2417                           wreg	equ	0xFE8
  2418                           status	equ	0xFD8
  2419                           
  2420 ;; *************** function _My_USART_Init *****************
  2421 ;; Defined at:
  2422 ;;		line 37 in file "_01_USER/My_USART.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;		None
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;		None
  2427 ;; Return value:  Size  Location     Type
  2428 ;;                  2   12[None  ] int 
  2429 ;; Registers used:
  2430 ;;		wreg, status,2, cstack
  2431 ;; Tracked objects:
  2432 ;;		On entry : 0/0
  2433 ;;		On exit  : 0/0
  2434 ;;		Unchanged: 0/0
  2435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2440 ;;Total ram usage:        0 bytes
  2441 ;; Hardware stack levels used:    1
  2442 ;; Hardware stack levels required when called:    4
  2443 ;; This function calls:
  2444 ;;		_Open2USART
  2445 ;; This function is called by:
  2446 ;;		_main
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449                           
  2450                           	psect	text19
  2451  001B3A                     __ptext19:
  2452                           	opt stack 0
  2453  001B3A                     _My_USART_Init:
  2454                           	opt stack 26
  2455                           
  2456                           ;My_USART.c: 39: Open2USART( 0b01111111 &
  2457                           ;My_USART.c: 40: 0b11111111 &
  2458                           ;My_USART.c: 41: 0b11111110 &
  2459                           ;My_USART.c: 42: 0b11111101 &
  2460                           ;My_USART.c: 43: 0b11111111 &
  2461                           ;My_USART.c: 44: 0b11101111
  2462                           ;My_USART.c: 45: ,
  2463                           ;My_USART.c: 46: 12
  2464                           ;My_USART.c: 47: );
  2465                           
  2466                           ;incstack = 0
  2467  001B3A  0E00               	movlw	0
  2468  001B3C  6E1A               	movwf	Open2USART@spbrg+1,c
  2469  001B3E  0E0C               	movlw	12
  2470  001B40  6E19               	movwf	Open2USART@spbrg,c
  2471  001B42  0E6C               	movlw	108
  2472  001B44  ECB0  F00A         	call	_Open2USART
  2473                           
  2474                           ;My_USART.c: 48: TRISGbits.TRISG1 = 1;
  2475  001B48  8298               	bsf	3992,1,c	;volatile
  2476                           
  2477                           ;My_USART.c: 49: TRISGbits.TRISG2 = 0;
  2478  001B4A  9498               	bcf	3992,2,c	;volatile
  2479                           
  2480                           ;My_USART.c: 50: TRISGbits.TRISG3 = 0;
  2481  001B4C  9698               	bcf	3992,3,c	;volatile
  2482                           
  2483                           ;My_USART.c: 51: RG3 = 1;
  2484  001B4E  8686               	bsf	3974,3,c	;volatile
  2485                           
  2486                           ;My_USART.c: 52: RCEN2 = 1;
  2487  001B50  8666               	bsf	3942,3,c	;volatile
  2488  001B52  0012               	return		;funcret
  2489  001B54                     __end_of_My_USART_Init:
  2490                           	opt stack 0
  2491                           tblptru	equ	0xFF8
  2492                           tblptrh	equ	0xFF7
  2493                           tblptrl	equ	0xFF6
  2494                           tablat	equ	0xFF5
  2495                           intcon	equ	0xFF2
  2496                           postinc0	equ	0xFEE
  2497                           wreg	equ	0xFE8
  2498                           status	equ	0xFD8
  2499                           
  2500 ;; *************** function _Open2USART *****************
  2501 ;; Defined at:
  2502 ;;		line 118 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u2open.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;  config          1    wreg     unsigned char 
  2505 ;;  spbrg           2   24[COMRAM] unsigned int 
  2506 ;; Auto vars:     Size  Location     Type
  2507 ;;  config          1   26[COMRAM] unsigned char 
  2508 ;; Return value:  Size  Location     Type
  2509 ;;		None               void
  2510 ;; Registers used:
  2511 ;;		wreg, status,2
  2512 ;; Tracked objects:
  2513 ;;		On entry : 0/0
  2514 ;;		On exit  : 0/0
  2515 ;;		Unchanged: 0/0
  2516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2517 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2518 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2520 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2521 ;;Total ram usage:        3 bytes
  2522 ;; Hardware stack levels used:    1
  2523 ;; Hardware stack levels required when called:    3
  2524 ;; This function calls:
  2525 ;;		Nothing
  2526 ;; This function is called by:
  2527 ;;		_My_USART_Init
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530                           
  2531                           	psect	text20
  2532  001560                     __ptext20:
  2533                           	opt stack 0
  2534  001560                     _Open2USART:
  2535                           	opt stack 26
  2536                           
  2537                           ;incstack = 0
  2538                           ;Open2USART@config stored from wreg
  2539  001560  6E1B               	movwf	Open2USART@config,c
  2540  001562  0E00               	movlw	0
  2541  001564  010F               	movlb	15	; () banked
  2542  001566  6F21               	movwf	33,b	;volatile
  2543  001568  0E00               	movlw	0
  2544  00156A  010F               	movlb	15	; () banked
  2545  00156C  6F22               	movwf	34,b	;volatile
  2546                           
  2547                           ; BSR set to: 15
  2548  00156E  A01B               	btfss	Open2USART@config,0,c
  2549  001570  D003               	goto	l2475
  2550                           
  2551                           ; BSR set to: 15
  2552  001572  010F               	movlb	15	; () banked
  2553  001574  8921               	bsf	33,4,b	;volatile
  2554  001576  D000               	goto	l2475
  2555  001578                     l2475:
  2556                           
  2557                           ; BSR set to: 15
  2558  001578  A21B               	btfss	Open2USART@config,1,c
  2559  00157A  D005               	goto	l2479
  2560                           
  2561                           ; BSR set to: 15
  2562  00157C  010F               	movlb	15	; () banked
  2563  00157E  8D21               	bsf	33,6,b	;volatile
  2564  001580  010F               	movlb	15	; () banked
  2565  001582  8D22               	bsf	34,6,b	;volatile
  2566  001584  D000               	goto	l2479
  2567  001586                     l2479:
  2568                           
  2569                           ; BSR set to: 15
  2570  001586  A41B               	btfss	Open2USART@config,2,c
  2571  001588  D003               	goto	l2483
  2572                           
  2573                           ; BSR set to: 15
  2574  00158A  010F               	movlb	15	; () banked
  2575  00158C  8F21               	bsf	33,7,b	;volatile
  2576  00158E  D000               	goto	l2483
  2577  001590                     l2483:
  2578                           
  2579                           ; BSR set to: 15
  2580  001590  A61B               	btfss	Open2USART@config,3,c
  2581  001592  D003               	goto	l416
  2582                           
  2583                           ; BSR set to: 15
  2584  001594  010F               	movlb	15	; () banked
  2585  001596  8922               	bsf	34,4,b	;volatile
  2586  001598  D003               	goto	l2487
  2587  00159A                     l416:
  2588                           
  2589                           ; BSR set to: 15
  2590  00159A  010F               	movlb	15	; () banked
  2591  00159C  8B22               	bsf	34,5,b	;volatile
  2592  00159E  D000               	goto	l2487
  2593  0015A0                     l2487:
  2594                           
  2595                           ; BSR set to: 15
  2596  0015A0  A81B               	btfss	Open2USART@config,4,c
  2597  0015A2  D003               	goto	l418
  2598                           
  2599                           ; BSR set to: 15
  2600  0015A4  010F               	movlb	15	; () banked
  2601  0015A6  8521               	bsf	33,2,b	;volatile
  2602  0015A8  D003               	goto	l2491
  2603  0015AA                     l418:
  2604                           
  2605                           ; BSR set to: 15
  2606  0015AA  010F               	movlb	15	; () banked
  2607  0015AC  9521               	bcf	33,2,b	;volatile
  2608  0015AE  D000               	goto	l2491
  2609  0015B0                     l2491:
  2610                           
  2611                           ; BSR set to: 15
  2612  0015B0  AA1B               	btfss	Open2USART@config,5,c
  2613  0015B2  D003               	goto	l2495
  2614                           
  2615                           ; BSR set to: 15
  2616  0015B4  010F               	movlb	15	; () banked
  2617  0015B6  8722               	bsf	34,3,b	;volatile
  2618  0015B8  D000               	goto	l2495
  2619  0015BA                     l2495:
  2620                           
  2621                           ; BSR set to: 15
  2622  0015BA  AC1B               	btfss	Open2USART@config,6,c
  2623  0015BC  D002               	goto	l421
  2624                           
  2625                           ; BSR set to: 15
  2626  0015BE  8AA3               	bsf	4003,5,c	;volatile
  2627  0015C0  D002               	goto	l2499
  2628  0015C2                     l421:
  2629                           
  2630                           ; BSR set to: 15
  2631  0015C2  9AA3               	bcf	4003,5,c	;volatile
  2632  0015C4  D000               	goto	l2499
  2633  0015C6                     l2499:
  2634                           
  2635                           ; BSR set to: 15
  2636  0015C6  AE1B               	btfss	Open2USART@config,7,c
  2637  0015C8  D002               	goto	l423
  2638                           
  2639                           ; BSR set to: 15
  2640  0015CA  88A3               	bsf	4003,4,c	;volatile
  2641  0015CC  D001               	goto	l424
  2642  0015CE                     l423:
  2643                           
  2644                           ; BSR set to: 15
  2645  0015CE  98A3               	bcf	4003,4,c	;volatile
  2646  0015D0                     l424:
  2647                           
  2648                           ; BSR set to: 15
  2649  0015D0  C019  FF1E         	movff	Open2USART@spbrg,3870	;volatile
  2650                           
  2651                           ; BSR set to: 15
  2652  0015D4  501A               	movf	Open2USART@spbrg+1,w,c
  2653  0015D6  010F               	movlb	15	; () banked
  2654  0015D8  6F1F               	movwf	31,b	;volatile
  2655                           
  2656                           ; BSR set to: 15
  2657  0015DA  010F               	movlb	15	; () banked
  2658  0015DC  8B21               	bsf	33,5,b	;volatile
  2659                           
  2660                           ; BSR set to: 15
  2661  0015DE  010F               	movlb	15	; () banked
  2662  0015E0  8F22               	bsf	34,7,b	;volatile
  2663                           
  2664                           ; BSR set to: 15
  2665  0015E2  0012               	return		;funcret
  2666  0015E4                     __end_of_Open2USART:
  2667                           	opt stack 0
  2668                           tblptru	equ	0xFF8
  2669                           tblptrh	equ	0xFF7
  2670                           tblptrl	equ	0xFF6
  2671                           tablat	equ	0xFF5
  2672                           intcon	equ	0xFF2
  2673                           postinc0	equ	0xFEE
  2674                           wreg	equ	0xFE8
  2675                           status	equ	0xFD8
  2676                           
  2677 ;; *************** function _Manage_Message *****************
  2678 ;; Defined at:
  2679 ;;		line 79 in file "_01_USER/Run.c"
  2680 ;; Parameters:    Size  Location     Type
  2681 ;;		None
  2682 ;; Auto vars:     Size  Location     Type
  2683 ;;		None
  2684 ;; Return value:  Size  Location     Type
  2685 ;;		None               void
  2686 ;; Registers used:
  2687 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2688 ;; Tracked objects:
  2689 ;;		On entry : 0/0
  2690 ;;		On exit  : 0/0
  2691 ;;		Unchanged: 0/0
  2692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2697 ;;Total ram usage:        0 bytes
  2698 ;; Hardware stack levels used:    1
  2699 ;; Hardware stack levels required when called:    4
  2700 ;; This function calls:
  2701 ;;		_Key_FSM_Read
  2702 ;; This function is called by:
  2703 ;;		_main
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707                           	psect	text21
  2708  0018EC                     __ptext21:
  2709                           	opt stack 0
  2710  0018EC                     _Manage_Message:
  2711                           	opt stack 26
  2712                           
  2713                           ;Run.c: 81: if (Key_FSM_Read(4) == 0x01 ) USART2_TendBuff ++;
  2714                           
  2715                           ; BSR set to: 15
  2716                           ;incstack = 0
  2717  0018EC  0E04               	movlw	4
  2718  0018EE  ECF2  F00A         	call	_Key_FSM_Read
  2719  0018F2  06E8               	decf	wreg,f,c
  2720  0018F4  A4D8               	btfss	status,2,c
  2721  0018F6  D003               	goto	l2595
  2722  0018F8  4A36               	infsnz	_USART2_TendBuff,f,c
  2723  0018FA  2A37               	incf	_USART2_TendBuff+1,f,c
  2724  0018FC  D000               	goto	l2595
  2725  0018FE                     l2595:
  2726                           
  2727                           ;Run.c: 82: if (Key_FSM_Read(1) == 0x01 ) Handle_01_Switch.Usart_OneDate = 1;
  2728  0018FE  0E01               	movlw	1
  2729  001900  ECF2  F00A         	call	_Key_FSM_Read
  2730  001904  06E8               	decf	wreg,f,c
  2731  001906  A4D8               	btfss	status,2,c
  2732  001908  D003               	goto	l2599
  2733  00190A  0E01               	movlw	1
  2734  00190C  6E33               	movwf	_Handle_01_Switch+2,c
  2735  00190E  D000               	goto	l2599
  2736  001910                     l2599:
  2737                           
  2738                           ;Run.c: 83: if (Key_FSM_Read(2) == 0x01 ) USART2_TendBuff --;
  2739  001910  0E02               	movlw	2
  2740  001912  ECF2  F00A         	call	_Key_FSM_Read
  2741  001916  06E8               	decf	wreg,f,c
  2742  001918  A4D8               	btfss	status,2,c
  2743  00191A  0012               	return	
  2744  00191C  0636               	decf	_USART2_TendBuff,f,c
  2745  00191E  A0D8               	btfss	status,0,c
  2746  001920  0637               	decf	_USART2_TendBuff+1,f,c
  2747  001922  0012               	return	
  2748  001924  0012               	return		;funcret
  2749  001926                     __end_of_Manage_Message:
  2750                           	opt stack 0
  2751                           tblptru	equ	0xFF8
  2752                           tblptrh	equ	0xFF7
  2753                           tblptrl	equ	0xFF6
  2754                           tablat	equ	0xFF5
  2755                           intcon	equ	0xFF2
  2756                           postinc0	equ	0xFEE
  2757                           wreg	equ	0xFE8
  2758                           status	equ	0xFD8
  2759                           
  2760 ;; *************** function _Key_FSM_Read *****************
  2761 ;; Defined at:
  2762 ;;		line 155 in file "_01_USER/Key.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;  key_num         1    wreg     unsigned char 
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;  key_num         1   29[COMRAM] unsigned char 
  2767 ;;  temp            1   28[COMRAM] unsigned char 
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  1    wreg      unsigned char 
  2770 ;; Registers used:
  2771 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2778 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2779 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2780 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2781 ;;Total ram usage:        6 bytes
  2782 ;; Hardware stack levels used:    1
  2783 ;; Hardware stack levels required when called:    3
  2784 ;; This function calls:
  2785 ;;		Nothing
  2786 ;; This function is called by:
  2787 ;;		_Manage_Message
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           	psect	text22
  2792  0015E4                     __ptext22:
  2793                           	opt stack 0
  2794  0015E4                     _Key_FSM_Read:
  2795                           	opt stack 26
  2796                           
  2797                           ;incstack = 0
  2798                           ;Key_FSM_Read@key_num stored from wreg
  2799  0015E4  6E1E               	movwf	Key_FSM_Read@key_num,c
  2800                           
  2801                           ;Key.c: 157: unsigned char temp;
  2802                           ;Key.c: 158: if( key_num != 0xff )
  2803  0015E6  281E               	incf	Key_FSM_Read@key_num,w,c
  2804  0015E8  B4D8               	btfsc	status,2,c
  2805  0015EA  D02D               	goto	l2453
  2806                           
  2807                           ;Key.c: 159: {
  2808                           ;Key.c: 160: if( Local_Key_FSM.key_state == 0x00 )
  2809  0015EC  503C               	movf	_Local_Key_FSM,w,c	;volatile
  2810  0015EE  A4D8               	btfss	status,2,c
  2811  0015F0  D028               	goto	l2449
  2812                           
  2813                           ;Key.c: 161: {
  2814                           ;Key.c: 162: temp = Local_Key_FSM.key_FSM[key_num-1];
  2815  0015F2  0EFF               	movlw	255
  2816  0015F4  6E19               	movwf	??_Key_FSM_Read& (0+255),c
  2817  0015F6  0EFF               	movlw	255
  2818  0015F8  6E1A               	movwf	(??_Key_FSM_Read+1)& (0+255),c
  2819  0015FA  501E               	movf	Key_FSM_Read@key_num,w,c
  2820  0015FC  6E1B               	movwf	(??_Key_FSM_Read+2)& (0+255),c
  2821  0015FE  6A1C               	clrf	(??_Key_FSM_Read+3)& (0+255),c
  2822  001600  5019               	movf	??_Key_FSM_Read,w,c
  2823  001602  261B               	addwf	??_Key_FSM_Read+2,f,c
  2824  001604  501A               	movf	??_Key_FSM_Read+1,w,c
  2825  001606  221C               	addwfc	??_Key_FSM_Read+3,f,c
  2826  001608  0E3D               	movlw	low (_Local_Key_FSM+1)
  2827  00160A  241B               	addwf	??_Key_FSM_Read+2,w,c
  2828  00160C  6ED9               	movwf	fsr2l,c
  2829  00160E  0E00               	movlw	high (_Local_Key_FSM+1)
  2830  001610  201C               	addwfc	??_Key_FSM_Read+3,w,c
  2831  001612  6EDA               	movwf	fsr2h,c
  2832  001614  50DF               	movf	indf2,w,c
  2833  001616  6E1D               	movwf	Key_FSM_Read@temp,c
  2834                           
  2835                           ;Key.c: 163: Local_Key_FSM.key_FSM[key_num-1] = 0x00;
  2836  001618  0EFF               	movlw	255
  2837  00161A  6E19               	movwf	??_Key_FSM_Read& (0+255),c
  2838  00161C  0EFF               	movlw	255
  2839  00161E  6E1A               	movwf	(??_Key_FSM_Read+1)& (0+255),c
  2840  001620  501E               	movf	Key_FSM_Read@key_num,w,c
  2841  001622  6E1B               	movwf	(??_Key_FSM_Read+2)& (0+255),c
  2842  001624  6A1C               	clrf	(??_Key_FSM_Read+3)& (0+255),c
  2843  001626  5019               	movf	??_Key_FSM_Read,w,c
  2844  001628  261B               	addwf	??_Key_FSM_Read+2,f,c
  2845  00162A  501A               	movf	??_Key_FSM_Read+1,w,c
  2846  00162C  221C               	addwfc	??_Key_FSM_Read+3,f,c
  2847  00162E  0E3D               	movlw	low (_Local_Key_FSM+1)
  2848  001630  241B               	addwf	??_Key_FSM_Read+2,w,c
  2849  001632  6ED9               	movwf	fsr2l,c
  2850  001634  0E00               	movlw	high (_Local_Key_FSM+1)
  2851  001636  201C               	addwfc	??_Key_FSM_Read+3,w,c
  2852  001638  6EDA               	movwf	fsr2h,c
  2853  00163A  0E00               	movlw	0
  2854  00163C  6EDF               	movwf	indf2,c
  2855                           
  2856                           ;Key.c: 164: return temp;
  2857  00163E  501D               	movf	Key_FSM_Read@temp,w,c
  2858                           
  2859                           ;Key.c: 165: }
  2860  001640  0012               	return	
  2861  001642                     l2449:
  2862                           
  2863                           ;Key.c: 167: else return 0x04;
  2864  001642  0E04               	movlw	4
  2865                           
  2866                           ;Key.c: 168: }
  2867  001644  0012               	return	
  2868  001646                     l2453:
  2869                           
  2870                           ;Key.c: 169: else if ( key_num == 0xff )
  2871  001646  281E               	incf	Key_FSM_Read@key_num,w,c
  2872  001648  A4D8               	btfss	status,2,c
  2873  00164A  0012               	return	
  2874                           
  2875                           ;Key.c: 170: {
  2876                           ;Key.c: 171: if( Local_Key_FSM.key_state == 0x00 )
  2877  00164C  503C               	movf	_Local_Key_FSM,w,c	;volatile
  2878  00164E  A4D8               	btfss	status,2,c
  2879  001650  D006               	goto	l2465
  2880                           
  2881                           ;Key.c: 172: {
  2882                           ;Key.c: 173: temp = Local_Key_FSM.key_group;
  2883  001652  C041  F01D         	movff	_Local_Key_FSM+5,Key_FSM_Read@temp	;volatile
  2884                           
  2885                           ;Key.c: 174: Local_Key_FSM.key_group = 0x00;
  2886  001656  0E00               	movlw	0
  2887  001658  6E41               	movwf	_Local_Key_FSM+5,c	;volatile
  2888                           
  2889                           ;Key.c: 175: return temp;
  2890  00165A  501D               	movf	Key_FSM_Read@temp,w,c
  2891                           
  2892                           ;Key.c: 176: }
  2893  00165C  0012               	return	
  2894  00165E                     l2465:
  2895                           
  2896                           ;Key.c: 178: else return 0x04;
  2897  00165E  0E04               	movlw	4
  2898  001660  0012               	return	
  2899  001662  0012               	return		;funcret
  2900  001664                     __end_of_Key_FSM_Read:
  2901                           	opt stack 0
  2902                           tblptru	equ	0xFF8
  2903                           tblptrh	equ	0xFF7
  2904                           tblptrl	equ	0xFF6
  2905                           tablat	equ	0xFF5
  2906                           intcon	equ	0xFF2
  2907                           postinc0	equ	0xFEE
  2908                           wreg	equ	0xFE8
  2909                           indf2	equ	0xFDF
  2910                           fsr2h	equ	0xFDA
  2911                           fsr2l	equ	0xFD9
  2912                           status	equ	0xFD8
  2913                           
  2914 ;; *************** function _Key_Init *****************
  2915 ;; Defined at:
  2916 ;;		line 38 in file "_01_USER/Key.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;		None
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;		None
  2921 ;; Return value:  Size  Location     Type
  2922 ;;		None               void
  2923 ;; Registers used:
  2924 ;;		wreg, status,2, status,0
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2934 ;;Total ram usage:        0 bytes
  2935 ;; Hardware stack levels used:    1
  2936 ;; Hardware stack levels required when called:    3
  2937 ;; This function calls:
  2938 ;;		Nothing
  2939 ;; This function is called by:
  2940 ;;		_main
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           	psect	text23
  2945  001BB8                     __ptext23:
  2946                           	opt stack 0
  2947  001BB8                     _Key_Init:
  2948                           	opt stack 27
  2949                           
  2950                           ;Key.c: 40: TRISE |= 0x1e;
  2951                           
  2952                           ;incstack = 0
  2953  001BB8  0E1E               	movlw	30
  2954  001BBA  1296               	iorwf	3990,f,c	;volatile
  2955                           
  2956                           ;Key.c: 41: TRISD |= 0xc0;
  2957  001BBC  0EC0               	movlw	192
  2958  001BBE  1295               	iorwf	3989,f,c	;volatile
  2959  001BC0  0012               	return		;funcret
  2960  001BC2                     __end_of_Key_Init:
  2961                           	opt stack 0
  2962                           tblptru	equ	0xFF8
  2963                           tblptrh	equ	0xFF7
  2964                           tblptrl	equ	0xFF6
  2965                           tablat	equ	0xFF5
  2966                           intcon	equ	0xFF2
  2967                           postinc0	equ	0xFEE
  2968                           wreg	equ	0xFE8
  2969                           indf2	equ	0xFDF
  2970                           fsr2h	equ	0xFDA
  2971                           fsr2l	equ	0xFD9
  2972                           status	equ	0xFD8
  2973                           
  2974 ;; *************** function _Init_TM1640 *****************
  2975 ;; Defined at:
  2976 ;;		line 119 in file "_01_USER/TM1640.c"
  2977 ;; Parameters:    Size  Location     Type
  2978 ;;		None
  2979 ;; Auto vars:     Size  Location     Type
  2980 ;;		None
  2981 ;; Return value:  Size  Location     Type
  2982 ;;		None               void
  2983 ;; Registers used:
  2984 ;;		wreg, status,2, status,0, cstack
  2985 ;; Tracked objects:
  2986 ;;		On entry : 0/0
  2987 ;;		On exit  : 0/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2994 ;;Total ram usage:        0 bytes
  2995 ;; Hardware stack levels used:    1
  2996 ;; Hardware stack levels required when called:    5
  2997 ;; This function calls:
  2998 ;;		_TM1640_Start
  2999 ;;		_TM1640_Stop
  3000 ;;		_TM1640_Writer_Byte
  3001 ;; This function is called by:
  3002 ;;		_main
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006                           	psect	text24
  3007  001A4A                     __ptext24:
  3008                           	opt stack 0
  3009  001A4A                     _Init_TM1640:
  3010                           	opt stack 25
  3011                           
  3012                           ;TM1640.c: 121: TRISCbits.TRISC3 = 0;
  3013                           
  3014                           ;incstack = 0
  3015  001A4A  9694               	bcf	3988,3,c	;volatile
  3016                           
  3017                           ;TM1640.c: 122: TRISCbits.TRISC4 = 0;
  3018  001A4C  9894               	bcf	3988,4,c	;volatile
  3019                           
  3020                           ;TM1640.c: 123: TM1640_Stop();
  3021  001A4E  EC4A  F00D         	call	_TM1640_Stop	;wreg free
  3022                           
  3023                           ;TM1640.c: 125: TM1640_Start();
  3024  001A52  EC5C  F00D         	call	_TM1640_Start	;wreg free
  3025                           
  3026                           ;TM1640.c: 126: TM1640_Writer_Byte(0x44);
  3027  001A56  0E44               	movlw	68
  3028  001A58  EC3A  F00C         	call	_TM1640_Writer_Byte
  3029                           
  3030                           ;TM1640.c: 127: TM1640_Stop();
  3031  001A5C  EC4A  F00D         	call	_TM1640_Stop	;wreg free
  3032                           
  3033                           ;TM1640.c: 129: TM1640_Start();
  3034  001A60  EC5C  F00D         	call	_TM1640_Start	;wreg free
  3035                           
  3036                           ;TM1640.c: 130: TM1640_Writer_Byte(0x8F);
  3037  001A64  0E8F               	movlw	143
  3038  001A66  EC3A  F00C         	call	_TM1640_Writer_Byte
  3039                           
  3040                           ;TM1640.c: 131: TM1640_Stop();
  3041  001A6A  EC4A  F00D         	call	_TM1640_Stop	;wreg free
  3042  001A6E  0012               	return		;funcret
  3043  001A70                     __end_of_Init_TM1640:
  3044                           	opt stack 0
  3045                           tblptru	equ	0xFF8
  3046                           tblptrh	equ	0xFF7
  3047                           tblptrl	equ	0xFF6
  3048                           tablat	equ	0xFF5
  3049                           intcon	equ	0xFF2
  3050                           postinc0	equ	0xFEE
  3051                           wreg	equ	0xFE8
  3052                           indf2	equ	0xFDF
  3053                           fsr2h	equ	0xFDA
  3054                           fsr2l	equ	0xFD9
  3055                           status	equ	0xFD8
  3056                           
  3057 ;; *************** function _TM1640_Writer_Byte *****************
  3058 ;; Defined at:
  3059 ;;		line 77 in file "_01_USER/TM1640.c"
  3060 ;; Parameters:    Size  Location     Type
  3061 ;;  Date            1    wreg     const unsigned char 
  3062 ;; Auto vars:     Size  Location     Type
  3063 ;;  Date            1   26[COMRAM] const unsigned char 
  3064 ;;  mask            1   27[COMRAM] unsigned char 
  3065 ;; Return value:  Size  Location     Type
  3066 ;;		None               void
  3067 ;; Registers used:
  3068 ;;		wreg, status,2, status,0, cstack
  3069 ;; Tracked objects:
  3070 ;;		On entry : 0/0
  3071 ;;		On exit  : 0/0
  3072 ;;		Unchanged: 0/0
  3073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3075 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3077 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3078 ;;Total ram usage:        2 bytes
  3079 ;; Hardware stack levels used:    1
  3080 ;; Hardware stack levels required when called:    4
  3081 ;; This function calls:
  3082 ;;		_TM1640_Delay
  3083 ;; This function is called by:
  3084 ;;		_TM1640_Writer_Dates
  3085 ;;		_Init_TM1640
  3086 ;;		_Open_Display
  3087 ;;		_Disable_Display
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091                           	psect	text25
  3092  001874                     __ptext25:
  3093                           	opt stack 0
  3094  001874                     _TM1640_Writer_Byte:
  3095                           	opt stack 23
  3096                           
  3097                           ;incstack = 0
  3098                           ;TM1640_Writer_Byte@Date stored from wreg
  3099  001874  6E1B               	movwf	TM1640_Writer_Byte@Date,c
  3100                           
  3101                           ;TM1640.c: 79: unsigned char mask;
  3102                           ;TM1640.c: 81: for(mask=0x01; mask; mask<<=1)
  3103  001876  0E01               	movlw	1
  3104  001878  6E1C               	movwf	TM1640_Writer_Byte@mask,c
  3105  00187A  D017               	goto	l2219
  3106  00187C                     l286:
  3107                           
  3108                           ;TM1640.c: 82: {
  3109                           ;TM1640.c: 83: RC3 = 0;
  3110  00187C  9682               	bcf	3970,3,c	;volatile
  3111                           
  3112                           ;TM1640.c: 84: TM1640_Delay(1);
  3113  00187E  0E01               	movlw	1
  3114  001880  ECAA  F00D         	call	_TM1640_Delay
  3115                           
  3116                           ;TM1640.c: 85: if(mask & Date)
  3117  001884  501C               	movf	TM1640_Writer_Byte@mask,w,c
  3118  001886  141B               	andwf	TM1640_Writer_Byte@Date,w,c
  3119  001888  0900               	iorlw	0
  3120  00188A  B4D8               	btfsc	status,2,c
  3121  00188C  D002               	goto	l287
  3122                           
  3123                           ;TM1640.c: 86: RC4 = 1;
  3124  00188E  8882               	bsf	3970,4,c	;volatile
  3125  001890  D002               	goto	l2213
  3126  001892                     l287:
  3127                           
  3128                           ;TM1640.c: 87: else
  3129                           ;TM1640.c: 88: RC4 = 0;
  3130  001892  9882               	bcf	3970,4,c	;volatile
  3131  001894  D000               	goto	l2213
  3132  001896                     l2213:
  3133                           
  3134                           ;TM1640.c: 89: TM1640_Delay(1);
  3135  001896  0E01               	movlw	1
  3136  001898  ECAA  F00D         	call	_TM1640_Delay
  3137                           
  3138                           ;TM1640.c: 90: RC3 = 1;
  3139  00189C  8682               	bsf	3970,3,c	;volatile
  3140                           
  3141                           ;TM1640.c: 91: TM1640_Delay(1);
  3142  00189E  0E01               	movlw	1
  3143  0018A0  ECAA  F00D         	call	_TM1640_Delay
  3144  0018A4  90D8               	bcf	status,0,c
  3145  0018A6  361C               	rlcf	TM1640_Writer_Byte@mask,f,c
  3146  0018A8  D000               	goto	l2219
  3147  0018AA                     l2219:
  3148  0018AA  501C               	movf	TM1640_Writer_Byte@mask,w,c
  3149  0018AC  A4D8               	btfss	status,2,c
  3150  0018AE  D7E6               	goto	l286
  3151  0018B0  0012               	return		;funcret
  3152  0018B2                     __end_of_TM1640_Writer_Byte:
  3153                           	opt stack 0
  3154                           tblptru	equ	0xFF8
  3155                           tblptrh	equ	0xFF7
  3156                           tblptrl	equ	0xFF6
  3157                           tablat	equ	0xFF5
  3158                           intcon	equ	0xFF2
  3159                           postinc0	equ	0xFEE
  3160                           wreg	equ	0xFE8
  3161                           indf2	equ	0xFDF
  3162                           fsr2h	equ	0xFDA
  3163                           fsr2l	equ	0xFD9
  3164                           status	equ	0xFD8
  3165                           
  3166 ;; *************** function _TM1640_Stop *****************
  3167 ;; Defined at:
  3168 ;;		line 32 in file "_01_USER/TM1640.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;		None
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;		None
  3173 ;; Return value:  Size  Location     Type
  3174 ;;		None               void
  3175 ;; Registers used:
  3176 ;;		wreg, status,2, status,0, cstack
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3186 ;;Total ram usage:        0 bytes
  3187 ;; Hardware stack levels used:    1
  3188 ;; Hardware stack levels required when called:    4
  3189 ;; This function calls:
  3190 ;;		_TM1640_Delay
  3191 ;; This function is called by:
  3192 ;;		_TM1640_Writer_Dates
  3193 ;;		_Init_TM1640
  3194 ;;		_Open_Display
  3195 ;;		_Disable_Display
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           
  3199                           	psect	text26
  3200  001A94                     __ptext26:
  3201                           	opt stack 0
  3202  001A94                     _TM1640_Stop:
  3203                           	opt stack 23
  3204                           
  3205                           ;TM1640.c: 34: RC3 = 0;
  3206                           
  3207                           ;incstack = 0
  3208  001A94  9682               	bcf	3970,3,c	;volatile
  3209                           
  3210                           ;TM1640.c: 35: TM1640_Delay(1);
  3211  001A96  0E01               	movlw	1
  3212  001A98  ECAA  F00D         	call	_TM1640_Delay
  3213                           
  3214                           ;TM1640.c: 36: RC4 = 0;
  3215  001A9C  9882               	bcf	3970,4,c	;volatile
  3216                           
  3217                           ;TM1640.c: 37: TM1640_Delay(1);
  3218  001A9E  0E01               	movlw	1
  3219  001AA0  ECAA  F00D         	call	_TM1640_Delay
  3220                           
  3221                           ;TM1640.c: 38: RC3 = 1;
  3222  001AA4  8682               	bsf	3970,3,c	;volatile
  3223                           
  3224                           ;TM1640.c: 39: TM1640_Delay(1);
  3225  001AA6  0E01               	movlw	1
  3226  001AA8  ECAA  F00D         	call	_TM1640_Delay
  3227                           
  3228                           ;TM1640.c: 40: RC4 = 1;
  3229  001AAC  8882               	bsf	3970,4,c	;volatile
  3230                           
  3231                           ;TM1640.c: 41: TM1640_Delay(1);
  3232  001AAE  0E01               	movlw	1
  3233  001AB0  ECAA  F00D         	call	_TM1640_Delay
  3234                           
  3235                           ;TM1640.c: 42: RC3 = 0;
  3236  001AB4  9682               	bcf	3970,3,c	;volatile
  3237  001AB6  0012               	return		;funcret
  3238  001AB8                     __end_of_TM1640_Stop:
  3239                           	opt stack 0
  3240                           tblptru	equ	0xFF8
  3241                           tblptrh	equ	0xFF7
  3242                           tblptrl	equ	0xFF6
  3243                           tablat	equ	0xFF5
  3244                           intcon	equ	0xFF2
  3245                           postinc0	equ	0xFEE
  3246                           wreg	equ	0xFE8
  3247                           indf2	equ	0xFDF
  3248                           fsr2h	equ	0xFDA
  3249                           fsr2l	equ	0xFD9
  3250                           status	equ	0xFD8
  3251                           
  3252 ;; *************** function _TM1640_Start *****************
  3253 ;; Defined at:
  3254 ;;		line 19 in file "_01_USER/TM1640.c"
  3255 ;; Parameters:    Size  Location     Type
  3256 ;;		None
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;		None
  3259 ;; Return value:  Size  Location     Type
  3260 ;;		None               void
  3261 ;; Registers used:
  3262 ;;		wreg, status,2, status,0, cstack
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3272 ;;Total ram usage:        0 bytes
  3273 ;; Hardware stack levels used:    1
  3274 ;; Hardware stack levels required when called:    4
  3275 ;; This function calls:
  3276 ;;		_TM1640_Delay
  3277 ;; This function is called by:
  3278 ;;		_TM1640_Writer_Dates
  3279 ;;		_Init_TM1640
  3280 ;;		_Open_Display
  3281 ;;		_Disable_Display
  3282 ;; This function uses a non-reentrant model
  3283 ;;
  3284                           
  3285                           	psect	text27
  3286  001AB8                     __ptext27:
  3287                           	opt stack 0
  3288  001AB8                     _TM1640_Start:
  3289                           	opt stack 23
  3290                           
  3291                           ;TM1640.c: 21: RC3 = 0;
  3292                           
  3293                           ;incstack = 0
  3294  001AB8  9682               	bcf	3970,3,c	;volatile
  3295                           
  3296                           ;TM1640.c: 22: TM1640_Delay(1);
  3297  001ABA  0E01               	movlw	1
  3298  001ABC  ECAA  F00D         	call	_TM1640_Delay
  3299                           
  3300                           ;TM1640.c: 23: RC4 = 1;
  3301  001AC0  8882               	bsf	3970,4,c	;volatile
  3302                           
  3303                           ;TM1640.c: 24: TM1640_Delay(1);
  3304  001AC2  0E01               	movlw	1
  3305  001AC4  ECAA  F00D         	call	_TM1640_Delay
  3306                           
  3307                           ;TM1640.c: 25: RC3 = 1;
  3308  001AC8  8682               	bsf	3970,3,c	;volatile
  3309                           
  3310                           ;TM1640.c: 26: TM1640_Delay(1);
  3311  001ACA  0E01               	movlw	1
  3312  001ACC  ECAA  F00D         	call	_TM1640_Delay
  3313                           
  3314                           ;TM1640.c: 27: RC4 = 0;
  3315  001AD0  9882               	bcf	3970,4,c	;volatile
  3316                           
  3317                           ;TM1640.c: 28: TM1640_Delay(1);
  3318  001AD2  0E01               	movlw	1
  3319  001AD4  ECAA  F00D         	call	_TM1640_Delay
  3320                           
  3321                           ;TM1640.c: 29: RC3 = 0;
  3322  001AD8  9682               	bcf	3970,3,c	;volatile
  3323  001ADA  0012               	return		;funcret
  3324  001ADC                     __end_of_TM1640_Start:
  3325                           	opt stack 0
  3326                           tblptru	equ	0xFF8
  3327                           tblptrh	equ	0xFF7
  3328                           tblptrl	equ	0xFF6
  3329                           tablat	equ	0xFF5
  3330                           intcon	equ	0xFF2
  3331                           postinc0	equ	0xFEE
  3332                           wreg	equ	0xFE8
  3333                           indf2	equ	0xFDF
  3334                           fsr2h	equ	0xFDA
  3335                           fsr2l	equ	0xFD9
  3336                           status	equ	0xFD8
  3337                           
  3338 ;; *************** function _TM1640_Delay *****************
  3339 ;; Defined at:
  3340 ;;		line 109 in file "_01_USER/TM1640.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;  Time            1    wreg     unsigned char 
  3343 ;; Auto vars:     Size  Location     Type
  3344 ;;  Time            1   24[COMRAM] unsigned char 
  3345 ;;  i               1   25[COMRAM] unsigned char 
  3346 ;; Return value:  Size  Location     Type
  3347 ;;		None               void
  3348 ;; Registers used:
  3349 ;;		wreg, status,2, status,0
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3356 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3358 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3359 ;;Total ram usage:        2 bytes
  3360 ;; Hardware stack levels used:    1
  3361 ;; Hardware stack levels required when called:    3
  3362 ;; This function calls:
  3363 ;;		Nothing
  3364 ;; This function is called by:
  3365 ;;		_TM1640_Start
  3366 ;;		_TM1640_Stop
  3367 ;;		_TM1640_Writer_Byte
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           	psect	text28
  3372  001B54                     __ptext28:
  3373                           	opt stack 0
  3374  001B54                     _TM1640_Delay:
  3375                           	opt stack 23
  3376                           
  3377                           ;incstack = 0
  3378                           ;TM1640_Delay@Time stored from wreg
  3379  001B54  6E19               	movwf	TM1640_Delay@Time,c
  3380  001B56                     
  3381                           ;TM1640.c: 114: {
  3382                           ;TM1640.c: 115: for(i=0; i<10; ++i);
  3383  001B56  0E00               	movlw	0
  3384  001B58  6E1A               	movwf	TM1640_Delay@i,c
  3385  001B5A  D002               	goto	l2179
  3386  001B5C  D004               	goto	l301
  3387  001B5E                     l2177:
  3388  001B5E  2A1A               	incf	TM1640_Delay@i,f,c
  3389  001B60                     l2179:
  3390  001B60  0E09               	movlw	9
  3391  001B62  641A               	cpfsgt	TM1640_Delay@i,c
  3392  001B64  D7FC               	goto	l2177
  3393  001B66                     l301:
  3394                           
  3395                           ;TM1640.c: 116: }while(--Time);
  3396  001B66  2E19               	decfsz	TM1640_Delay@Time,f,c
  3397  001B68  D7F6               	goto	l2171
  3398  001B6A  0012               	return	
  3399  001B6C  0012               	return		;funcret
  3400  001B6E                     __end_of_TM1640_Delay:
  3401                           	opt stack 0
  3402                           tblptru	equ	0xFF8
  3403                           tblptrh	equ	0xFF7
  3404                           tblptrl	equ	0xFF6
  3405                           tablat	equ	0xFF5
  3406                           intcon	equ	0xFF2
  3407                           postinc0	equ	0xFEE
  3408                           wreg	equ	0xFE8
  3409                           indf2	equ	0xFDF
  3410                           fsr2h	equ	0xFDA
  3411                           fsr2l	equ	0xFD9
  3412                           status	equ	0xFD8
  3413                           
  3414 ;; *************** function _GPIO_Config *****************
  3415 ;; Defined at:
  3416 ;;		line 38 in file "_01_USER/GPIO.c"
  3417 ;; Parameters:    Size  Location     Type
  3418 ;;		None
  3419 ;; Auto vars:     Size  Location     Type
  3420 ;;		None
  3421 ;; Return value:  Size  Location     Type
  3422 ;;		None               void
  3423 ;; Registers used:
  3424 ;;		wreg, status,2, status,0
  3425 ;; Tracked objects:
  3426 ;;		On entry : 0/0
  3427 ;;		On exit  : 0/0
  3428 ;;		Unchanged: 0/0
  3429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3434 ;;Total ram usage:        0 bytes
  3435 ;; Hardware stack levels used:    1
  3436 ;; Hardware stack levels required when called:    3
  3437 ;; This function calls:
  3438 ;;		Nothing
  3439 ;; This function is called by:
  3440 ;;		_main
  3441 ;; This function uses a non-reentrant model
  3442 ;;
  3443                           
  3444                           	psect	text29
  3445  001BAC                     __ptext29:
  3446                           	opt stack 0
  3447  001BAC                     _GPIO_Config:
  3448                           	opt stack 27
  3449                           
  3450                           ;GPIO.c: 41: TRISE &= 0x1f;
  3451                           
  3452                           ;incstack = 0
  3453  001BAC  0E1F               	movlw	31
  3454  001BAE  1696               	andwf	3990,f,c	;volatile
  3455                           
  3456                           ;GPIO.c: 43: RE5 = 1;
  3457  001BB0  8A84               	bsf	3972,5,c	;volatile
  3458                           
  3459                           ;GPIO.c: 44: RE6 = 1;
  3460  001BB2  8C84               	bsf	3972,6,c	;volatile
  3461                           
  3462                           ;GPIO.c: 45: RE7 = 1;
  3463  001BB4  8E84               	bsf	3972,7,c	;volatile
  3464  001BB6  0012               	return		;funcret
  3465  001BB8                     __end_of_GPIO_Config:
  3466                           	opt stack 0
  3467                           tblptru	equ	0xFF8
  3468                           tblptrh	equ	0xFF7
  3469                           tblptrl	equ	0xFF6
  3470                           tablat	equ	0xFF5
  3471                           intcon	equ	0xFF2
  3472                           postinc0	equ	0xFEE
  3473                           wreg	equ	0xFE8
  3474                           indf2	equ	0xFDF
  3475                           fsr2h	equ	0xFDA
  3476                           fsr2l	equ	0xFD9
  3477                           status	equ	0xFD8
  3478                           
  3479 ;; *************** function _ADC6_Init *****************
  3480 ;; Defined at:
  3481 ;;		line 37 in file "_01_USER/My_ADC.c"
  3482 ;; Parameters:    Size  Location     Type
  3483 ;;		None
  3484 ;; Auto vars:     Size  Location     Type
  3485 ;;		None
  3486 ;; Return value:  Size  Location     Type
  3487 ;;		None               void
  3488 ;; Registers used:
  3489 ;;		wreg, status,2, status,0, cstack
  3490 ;; Tracked objects:
  3491 ;;		On entry : 0/0
  3492 ;;		On exit  : 0/0
  3493 ;;		Unchanged: 0/0
  3494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3499 ;;Total ram usage:        0 bytes
  3500 ;; Hardware stack levels used:    1
  3501 ;; Hardware stack levels required when called:    4
  3502 ;; This function calls:
  3503 ;;		_OpenADC
  3504 ;; This function is called by:
  3505 ;;		_main
  3506 ;; This function uses a non-reentrant model
  3507 ;;
  3508                           
  3509                           	psect	text30
  3510  001B6E                     __ptext30:
  3511                           	opt stack 0
  3512  001B6E                     _ADC6_Init:
  3513                           	opt stack 26
  3514                           
  3515                           ;My_ADC.c: 40: OpenADC(0b11111111 &
  3516                           ;My_ADC.c: 41: 0b11110011 &
  3517                           ;My_ADC.c: 42: 0b10001111
  3518                           ;My_ADC.c: 43: ,
  3519                           ;My_ADC.c: 44: 0b10011011
  3520                           ;My_ADC.c: 45: ,
  3521                           ;My_ADC.c: 46: 0b00111111 &
  3522                           ;My_ADC.c: 47: 0b11111111 &
  3523                           ;My_ADC.c: 48: 0b11110111 &
  3524                           ;My_ADC.c: 49: 0b11111000
  3525                           ;My_ADC.c: 50: );
  3526                           
  3527                           ;incstack = 0
  3528  001B6E  0E9B               	movlw	155
  3529  001B70  6E19               	movwf	OpenADC@config2,c
  3530  001B72  0E30               	movlw	48
  3531  001B74  6E1A               	movwf	OpenADC@config3,c
  3532  001B76  0E83               	movlw	131
  3533  001B78  ECCE  F00B         	call	_OpenADC
  3534                           
  3535                           ;My_ADC.c: 52: (PIE1bits.ADIE=0);
  3536  001B7C  9C9D               	bcf	3997,6,c	;volatile
  3537  001B7E  0012               	return		;funcret
  3538  001B80                     __end_of_ADC6_Init:
  3539                           	opt stack 0
  3540                           tblptru	equ	0xFF8
  3541                           tblptrh	equ	0xFF7
  3542                           tblptrl	equ	0xFF6
  3543                           tablat	equ	0xFF5
  3544                           intcon	equ	0xFF2
  3545                           postinc0	equ	0xFEE
  3546                           wreg	equ	0xFE8
  3547                           indf2	equ	0xFDF
  3548                           fsr2h	equ	0xFDA
  3549                           fsr2l	equ	0xFD9
  3550                           status	equ	0xFD8
  3551                           
  3552 ;; *************** function _OpenADC *****************
  3553 ;; Defined at:
  3554 ;;		line 305 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;  config          1    wreg     unsigned char 
  3557 ;;  config2         1   24[COMRAM] unsigned char 
  3558 ;;  config3         1   25[COMRAM] unsigned char 
  3559 ;; Auto vars:     Size  Location     Type
  3560 ;;  config          1   28[COMRAM] unsigned char 
  3561 ;; Return value:  Size  Location     Type
  3562 ;;		None               void
  3563 ;; Registers used:
  3564 ;;		wreg, status,2, status,0
  3565 ;; Tracked objects:
  3566 ;;		On entry : 0/0
  3567 ;;		On exit  : 0/0
  3568 ;;		Unchanged: 0/0
  3569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3570 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3571 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3572 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3573 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3574 ;;Total ram usage:        5 bytes
  3575 ;; Hardware stack levels used:    1
  3576 ;; Hardware stack levels required when called:    3
  3577 ;; This function calls:
  3578 ;;		Nothing
  3579 ;; This function is called by:
  3580 ;;		_ADC6_Init
  3581 ;; This function uses a non-reentrant model
  3582 ;;
  3583                           
  3584                           	psect	text31
  3585  00179C                     __ptext31:
  3586                           	opt stack 0
  3587  00179C                     _OpenADC:
  3588                           	opt stack 26
  3589                           
  3590                           ;incstack = 0
  3591                           ;OpenADC@config stored from wreg
  3592  00179C  6E1D               	movwf	OpenADC@config,c
  3593  00179E  0E00               	movlw	0
  3594  0017A0  6EC2               	movwf	4034,c	;volatile
  3595  0017A2  0E00               	movlw	0
  3596  0017A4  6EC1               	movwf	4033,c	;volatile
  3597  0017A6  0E00               	movlw	0
  3598  0017A8  6EC0               	movwf	4032,c	;volatile
  3599  0017AA  5019               	movf	OpenADC@config2,w,c
  3600  0017AC  0B7C               	andlw	124
  3601  0017AE  6EC2               	movwf	4034,c	;volatile
  3602  0017B0  C01A  FFC1         	movff	OpenADC@config3,4033	;volatile
  3603  0017B4  C01D  F01B         	movff	OpenADC@config,??_OpenADC
  3604  0017B8  90D8               	bcf	status,0,c
  3605  0017BA  361B               	rlcf	??_OpenADC,f,c
  3606  0017BC  90D8               	bcf	status,0,c
  3607  0017BE  361B               	rlcf	??_OpenADC,f,c
  3608  0017C0  0E38               	movlw	56
  3609  0017C2  161B               	andwf	??_OpenADC,f,c
  3610  0017C4  C01D  F01C         	movff	OpenADC@config,??_OpenADC+1
  3611  0017C8  3A1C               	swapf	??_OpenADC+1,f,c
  3612  0017CA  0E0F               	movlw	15
  3613  0017CC  161C               	andwf	??_OpenADC+1,f,c
  3614  0017CE  0E07               	movlw	7
  3615  0017D0  161C               	andwf	??_OpenADC+1,f,c
  3616  0017D2  501D               	movf	OpenADC@config,w,c
  3617  0017D4  0B80               	andlw	128
  3618  0017D6  101C               	iorwf	??_OpenADC+1,w,c
  3619  0017D8  101B               	iorwf	??_OpenADC,w,c
  3620  0017DA  6EC0               	movwf	4032,c	;volatile
  3621  0017DC  AE19               	btfss	OpenADC@config2,7,c
  3622  0017DE  D003               	goto	l386
  3623  0017E0  9C9E               	bcf	3998,6,c	;volatile
  3624  0017E2  8C9D               	bsf	3997,6,c	;volatile
  3625  0017E4  8CF2               	bsf	intcon,6,c	;volatile
  3626  0017E6                     l386:
  3627  0017E6  80C2               	bsf	4034,0,c	;volatile
  3628  0017E8  0012               	return		;funcret
  3629  0017EA                     __end_of_OpenADC:
  3630                           	opt stack 0
  3631                           tblptru	equ	0xFF8
  3632                           tblptrh	equ	0xFF7
  3633                           tblptrl	equ	0xFF6
  3634                           tablat	equ	0xFF5
  3635                           intcon	equ	0xFF2
  3636                           postinc0	equ	0xFEE
  3637                           wreg	equ	0xFE8
  3638                           indf2	equ	0xFDF
  3639                           fsr2h	equ	0xFDA
  3640                           fsr2l	equ	0xFD9
  3641                           status	equ	0xFD8
  3642                           
  3643 ;; *************** function _Sys_Cyc *****************
  3644 ;; Defined at:
  3645 ;;		line 99 in file "_01_USER/My_Timer.c"
  3646 ;; Parameters:    Size  Location     Type
  3647 ;;		None
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;  _pulse          1   23[COMRAM] unsigned char 
  3650 ;; Return value:  Size  Location     Type
  3651 ;;		None               void
  3652 ;; Registers used:
  3653 ;;		wreg, status,2, status,0, cstack
  3654 ;; Tracked objects:
  3655 ;;		On entry : 0/0
  3656 ;;		On exit  : 0/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3660 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3661 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3662 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3663 ;;Total ram usage:       15 bytes
  3664 ;; Hardware stack levels used:    1
  3665 ;; Hardware stack levels required when called:    2
  3666 ;; This function calls:
  3667 ;;		_Delay_1Khz
  3668 ;;		_Key_FSM_Scan
  3669 ;;		___llmod
  3670 ;;		i2_SetTimer0
  3671 ;; This function is called by:
  3672 ;;		Interrupt level 2
  3673 ;; This function uses a non-reentrant model
  3674 ;;
  3675                           
  3676                           	psect	intcode
  3677  000008                     __pintcode:
  3678                           	opt stack 0
  3679  000008                     _Sys_Cyc:
  3680                           	opt stack 23
  3681                           
  3682                           ;incstack = 0
  3683  000008  CFFA F00A          	movff	pclath,??_Sys_Cyc
  3684  00000C  CFFB F00B          	movff	pclatu,??_Sys_Cyc+1
  3685  000010  CFE9 F00C          	movff	fsr0l,??_Sys_Cyc+2
  3686  000014  CFEA F00D          	movff	fsr0h,??_Sys_Cyc+3
  3687  000018  CFE1 F00E          	movff	fsr1l,??_Sys_Cyc+4
  3688  00001C  CFE2 F00F          	movff	fsr1h,??_Sys_Cyc+5
  3689  000020  CFD9 F010          	movff	fsr2l,??_Sys_Cyc+6
  3690  000024  CFDA F011          	movff	fsr2h,??_Sys_Cyc+7
  3691  000028  CFF3 F012          	movff	prodl,??_Sys_Cyc+8
  3692  00002C  CFF4 F013          	movff	prodh,??_Sys_Cyc+9
  3693  000030  CFF6 F014          	movff	tblptrl,??_Sys_Cyc+10
  3694  000034  CFF7 F015          	movff	tblptrh,??_Sys_Cyc+11
  3695  000038  CFF8 F016          	movff	tblptru,??_Sys_Cyc+12
  3696  00003C  CFF5 F017          	movff	tablat,??_Sys_Cyc+13
  3697                           
  3698                           ;My_Timer.c: 102: static unsigned char _overturn_1Khz = 0,_overturn_LED = 0;
  3699                           ;My_Timer.c: 103: unsigned char _pulse = 10;
  3700  000040  0E0A               	movlw	10
  3701  000042  6E18               	movwf	Sys_Cyc@_pulse,c
  3702                           
  3703                           ;My_Timer.c: 107: if(TMR0IF && TMR0IE)
  3704  000044  B4F2               	btfsc	intcon,2,c	;volatile
  3705  000046  AAF2               	btfss	intcon,5,c	;volatile
  3706  000048  D05D               	goto	i2l2151
  3707                           
  3708                           ;My_Timer.c: 108: {
  3709                           ;My_Timer.c: 109: Timer_Cyc = (Timer_Cyc+1) % 100000000;
  3710  00004A  0E01               	movlw	1
  3711  00004C  242D               	addwf	_Timer_Cyc,w,c
  3712  00004E  6E01               	movwf	___llmod@dividend,c
  3713  000050  0E00               	movlw	0
  3714  000052  202E               	addwfc	_Timer_Cyc+1,w,c
  3715  000054  6E02               	movwf	___llmod@dividend+1,c
  3716  000056  0E00               	movlw	0
  3717  000058  202F               	addwfc	_Timer_Cyc+2,w,c
  3718  00005A  6E03               	movwf	___llmod@dividend+2,c
  3719  00005C  0E00               	movlw	0
  3720  00005E  2030               	addwfc	_Timer_Cyc+3,w,c
  3721  000060  6E04               	movwf	___llmod@dividend+3,c
  3722  000062  0E00               	movlw	0
  3723  000064  6E05               	movwf	___llmod@divisor,c
  3724  000066  0EE1               	movlw	225
  3725  000068  6E06               	movwf	___llmod@divisor+1,c
  3726  00006A  0EF5               	movlw	245
  3727  00006C  6E07               	movwf	___llmod@divisor+2,c
  3728  00006E  0E05               	movlw	5
  3729  000070  6E08               	movwf	___llmod@divisor+3,c
  3730  000072  EC32  F00B         	call	___llmod	;wreg free
  3731  000076  C001  F02D         	movff	?___llmod,_Timer_Cyc
  3732  00007A  C002  F02E         	movff	?___llmod+1,_Timer_Cyc+1
  3733  00007E  C003  F02F         	movff	?___llmod+2,_Timer_Cyc+2
  3734  000082  C004  F030         	movff	?___llmod+3,_Timer_Cyc+3
  3735                           
  3736                           ;My_Timer.c: 112: if( Handle_01_Switch._1Khz )
  3737  000086  5031               	movf	_Handle_01_Switch,w,c
  3738  000088  A4D8               	btfss	status,2,c
  3739  00008A  D00D               	goto	i2l2139
  3740  00008C  D012               	goto	i2l2141
  3741                           
  3742                           ;My_Timer.c: 113: {
  3743                           ;My_Timer.c: 114: while( _pulse-- )
  3744  00008E  D00B               	goto	i2l2139
  3745  000090                     i2l2131:
  3746                           
  3747                           ;My_Timer.c: 115: {
  3748                           ;My_Timer.c: 116: _overturn_1Khz =~ _overturn_1Khz;
  3749  000090  1E38               	comf	Sys_Cyc@_overturn_1Khz,f,c
  3750                           
  3751                           ;My_Timer.c: 117: if(_overturn_1Khz) PORTEbits.RE7 = 1; else PORTEbits.RE7 = 0;
  3752  000092  5038               	movf	Sys_Cyc@_overturn_1Khz,w,c
  3753  000094  B4D8               	btfsc	status,2,c
  3754  000096  D002               	goto	i2l232
  3755  000098  8E84               	bsf	3972,7,c	;volatile
  3756  00009A  D002               	goto	i2l2137
  3757  00009C                     i2l232:
  3758  00009C  9E84               	bcf	3972,7,c	;volatile
  3759  00009E  D000               	goto	i2l2137
  3760  0000A0                     i2l2137:
  3761                           
  3762                           ;My_Timer.c: 118: Delay_1Khz();
  3763  0000A0  ECAF  F00C         	call	_Delay_1Khz	;wreg free
  3764  0000A4  D000               	goto	i2l2139
  3765  0000A6                     i2l2139:
  3766  0000A6  0618               	decf	Sys_Cyc@_pulse,f,c
  3767  0000A8  2818               	incf	Sys_Cyc@_pulse,w,c
  3768  0000AA  B4D8               	btfsc	status,2,c
  3769  0000AC  D002               	goto	i2l2141
  3770  0000AE  D7F0               	goto	i2l2131
  3771  0000B0  D000               	goto	i2l2141
  3772  0000B2                     i2l2141:
  3773                           
  3774                           ;My_Timer.c: 119: }
  3775                           ;My_Timer.c: 120: }
  3776                           ;My_Timer.c: 123: if( Timer_Cyc%30 == 0 )
  3777  0000B2  C02D  F001         	movff	_Timer_Cyc,___llmod@dividend
  3778  0000B6  C02E  F002         	movff	_Timer_Cyc+1,___llmod@dividend+1
  3779  0000BA  C02F  F003         	movff	_Timer_Cyc+2,___llmod@dividend+2
  3780  0000BE  C030  F004         	movff	_Timer_Cyc+3,___llmod@dividend+3
  3781  0000C2  0E1E               	movlw	30
  3782  0000C4  6E05               	movwf	___llmod@divisor,c
  3783  0000C6  0E00               	movlw	0
  3784  0000C8  6E06               	movwf	___llmod@divisor+1,c
  3785  0000CA  0E00               	movlw	0
  3786  0000CC  6E07               	movwf	___llmod@divisor+2,c
  3787  0000CE  0E00               	movlw	0
  3788  0000D0  6E08               	movwf	___llmod@divisor+3,c
  3789  0000D2  EC32  F00B         	call	___llmod	;wreg free
  3790  0000D6  5001               	movf	?___llmod,w,c
  3791  0000D8  1002               	iorwf	?___llmod+1,w,c
  3792  0000DA  1003               	iorwf	?___llmod+2,w,c
  3793  0000DC  1004               	iorwf	?___llmod+3,w,c
  3794  0000DE  A4D8               	btfss	status,2,c
  3795  0000E0  D008               	goto	i2l2149
  3796                           
  3797                           ;My_Timer.c: 124: {
  3798                           ;My_Timer.c: 125: _overturn_LED = ~_overturn_LED;
  3799  0000E2  1E39               	comf	Sys_Cyc@_overturn_LED,f,c
  3800                           
  3801                           ;My_Timer.c: 126: if(_overturn_LED) PORTEbits.RE5=0;
  3802  0000E4  5039               	movf	Sys_Cyc@_overturn_LED,w,c
  3803  0000E6  B4D8               	btfsc	status,2,c
  3804  0000E8  D002               	goto	i2l236
  3805  0000EA  9A84               	bcf	3972,5,c	;volatile
  3806  0000EC  D002               	goto	i2l2149
  3807  0000EE                     i2l236:
  3808                           
  3809                           ;My_Timer.c: 127: else PORTEbits.RE5=1;
  3810  0000EE  8A84               	bsf	3972,5,c	;volatile
  3811  0000F0  D000               	goto	i2l2149
  3812  0000F2                     i2l2149:
  3813                           
  3814                           ;My_Timer.c: 128: }
  3815                           ;My_Timer.c: 132: Key_FSM_Scan();
  3816  0000F2  ECCC  F009         	call	_Key_FSM_Scan	;wreg free
  3817                           
  3818                           ;My_Timer.c: 135: SetTimer0(78);
  3819  0000F6  0E00               	movlw	0
  3820  0000F8  6E02               	movwf	i2SetTimer0@_tmr+1,c
  3821  0000FA  0E4E               	movlw	78
  3822  0000FC  6E01               	movwf	i2SetTimer0@_tmr,c
  3823  0000FE  ECE3  F00C         	call	i2_SetTimer0	;wreg free
  3824  000102  D000               	goto	i2l2151
  3825  000104                     i2l2151:
  3826                           
  3827                           ;My_Timer.c: 136: }
  3828                           ;My_Timer.c: 140: if( RC2IF )
  3829  000104  AAA4               	btfss	4004,5,c	;volatile
  3830  000106  D009               	goto	i2l239
  3831                           
  3832                           ;My_Timer.c: 141: {
  3833                           ;My_Timer.c: 142: USART2_ReceiveBuff = RCREG2;
  3834  000108  CF1D F034          	movff	3869,_USART2_ReceiveBuff	;volatile
  3835  00010C  6A35               	clrf	_USART2_ReceiveBuff+1,c
  3836                           
  3837                           ;My_Timer.c: 143: USART2_ReceiveBuff = 1234;
  3838  00010E  0E04               	movlw	4
  3839  000110  6E35               	movwf	_USART2_ReceiveBuff+1,c
  3840  000112  0ED2               	movlw	210
  3841  000114  6E34               	movwf	_USART2_ReceiveBuff,c
  3842                           
  3843                           ;My_Timer.c: 144: RC2IF = 0;
  3844  000116  9AA4               	bcf	4004,5,c	;volatile
  3845  000118  D000               	goto	i2l239
  3846  00011A                     i2l239:
  3847  00011A  C017  FFF5         	movff	??_Sys_Cyc+13,tablat
  3848  00011E  C016  FFF8         	movff	??_Sys_Cyc+12,tblptru
  3849  000122  C015  FFF7         	movff	??_Sys_Cyc+11,tblptrh
  3850  000126  C014  FFF6         	movff	??_Sys_Cyc+10,tblptrl
  3851  00012A  C013  FFF4         	movff	??_Sys_Cyc+9,prodh
  3852  00012E  C012  FFF3         	movff	??_Sys_Cyc+8,prodl
  3853  000132  C011  FFDA         	movff	??_Sys_Cyc+7,fsr2h
  3854  000136  C010  FFD9         	movff	??_Sys_Cyc+6,fsr2l
  3855  00013A  C00F  FFE2         	movff	??_Sys_Cyc+5,fsr1h
  3856  00013E  C00E  FFE1         	movff	??_Sys_Cyc+4,fsr1l
  3857  000142  C00D  FFEA         	movff	??_Sys_Cyc+3,fsr0h
  3858  000146  C00C  FFE9         	movff	??_Sys_Cyc+2,fsr0l
  3859  00014A  C00B  FFFB         	movff	??_Sys_Cyc+1,pclatu
  3860  00014E  C00A  FFFA         	movff	??_Sys_Cyc,pclath
  3861  000152  0011               	retfie		f
  3862  000154                     __end_of_Sys_Cyc:
  3863                           	opt stack 0
  3864                           pclatu	equ	0xFFB
  3865                           pclath	equ	0xFFA
  3866                           tblptru	equ	0xFF8
  3867                           tblptrh	equ	0xFF7
  3868                           tblptrl	equ	0xFF6
  3869                           tablat	equ	0xFF5
  3870                           prodh	equ	0xFF4
  3871                           prodl	equ	0xFF3
  3872                           intcon	equ	0xFF2
  3873                           postinc0	equ	0xFEE
  3874                           fsr0h	equ	0xFEA
  3875                           fsr0l	equ	0xFE9
  3876                           wreg	equ	0xFE8
  3877                           fsr1h	equ	0xFE2
  3878                           fsr1l	equ	0xFE1
  3879                           indf2	equ	0xFDF
  3880                           fsr2h	equ	0xFDA
  3881                           fsr2l	equ	0xFD9
  3882                           status	equ	0xFD8
  3883                           
  3884 ;; *************** function i2_SetTimer0 *****************
  3885 ;; Defined at:
  3886 ;;		line 80 in file "_01_USER/My_Timer.c"
  3887 ;; Parameters:    Size  Location     Type
  3888 ;;  _tmr            2    0[COMRAM] unsigned int 
  3889 ;; Auto vars:     Size  Location     Type
  3890 ;;		None
  3891 ;; Return value:  Size  Location     Type
  3892 ;;		None               void
  3893 ;; Registers used:
  3894 ;;		wreg, status,2, status,0
  3895 ;; Tracked objects:
  3896 ;;		On entry : 0/0
  3897 ;;		On exit  : 0/0
  3898 ;;		Unchanged: 0/0
  3899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3900 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3902 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3903 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3904 ;;Total ram usage:        4 bytes
  3905 ;; Hardware stack levels used:    1
  3906 ;; This function calls:
  3907 ;;		Nothing
  3908 ;; This function is called by:
  3909 ;;		_Sys_Cyc
  3910 ;; This function uses a non-reentrant model
  3911 ;;
  3912                           
  3913                           	psect	text33
  3914  0019C6                     __ptext33:
  3915                           	opt stack 0
  3916  0019C6                     i2_SetTimer0:
  3917                           	opt stack 24
  3918                           
  3919                           ;My_Timer.c: 82: if(_tmr > 0xffff) _tmr = 0xffff;
  3920                           
  3921                           ;incstack = 0
  3922  0019C6  D003               	goto	i2l2091
  3923  0019C8  6801               	setf	i2SetTimer0@_tmr,c
  3924  0019CA  6802               	setf	i2SetTimer0@_tmr+1,c
  3925  0019CC  D000               	goto	i2l2091
  3926  0019CE                     i2l2091:
  3927                           
  3928                           ;My_Timer.c: 83: _tmr=0xffff-_tmr;
  3929  0019CE  C001  F003         	movff	i2SetTimer0@_tmr,??i2_SetTimer0
  3930  0019D2  C002  F004         	movff	i2SetTimer0@_tmr+1,??i2_SetTimer0+1
  3931  0019D6  1E03               	comf	??i2_SetTimer0,f,c
  3932  0019D8  1E04               	comf	??i2_SetTimer0+1,f,c
  3933  0019DA  4A03               	infsnz	??i2_SetTimer0,f,c
  3934  0019DC  2A04               	incf	??i2_SetTimer0+1,f,c
  3935  0019DE  0EFF               	movlw	255
  3936  0019E0  2403               	addwf	??i2_SetTimer0,w,c
  3937  0019E2  6E01               	movwf	i2SetTimer0@_tmr,c
  3938  0019E4  0EFF               	movlw	255
  3939  0019E6  2004               	addwfc	??i2_SetTimer0+1,w,c
  3940  0019E8  6E02               	movwf	i2SetTimer0@_tmr+1,c
  3941                           
  3942                           ;My_Timer.c: 84: TMR0H = _tmr/256;
  3943  0019EA  5002               	movf	i2SetTimer0@_tmr+1,w,c
  3944  0019EC  6ED7               	movwf	4055,c	;volatile
  3945                           
  3946                           ;My_Timer.c: 85: TMR0L = _tmr%256;
  3947  0019EE  C001  FFD6         	movff	i2SetTimer0@_tmr,4054	;volatile
  3948                           
  3949                           ;My_Timer.c: 86: TMR0IF = 0;
  3950  0019F2  94F2               	bcf	intcon,2,c	;volatile
  3951  0019F4  0012               	return		;funcret
  3952  0019F6                     __end_ofi2_SetTimer0:
  3953                           	opt stack 0
  3954                           pclatu	equ	0xFFB
  3955                           pclath	equ	0xFFA
  3956                           tblptru	equ	0xFF8
  3957                           tblptrh	equ	0xFF7
  3958                           tblptrl	equ	0xFF6
  3959                           tablat	equ	0xFF5
  3960                           prodh	equ	0xFF4
  3961                           prodl	equ	0xFF3
  3962                           intcon	equ	0xFF2
  3963                           postinc0	equ	0xFEE
  3964                           fsr0h	equ	0xFEA
  3965                           fsr0l	equ	0xFE9
  3966                           wreg	equ	0xFE8
  3967                           fsr1h	equ	0xFE2
  3968                           fsr1l	equ	0xFE1
  3969                           indf2	equ	0xFDF
  3970                           fsr2h	equ	0xFDA
  3971                           fsr2l	equ	0xFD9
  3972                           status	equ	0xFD8
  3973                           
  3974 ;; *************** function ___llmod *****************
  3975 ;; Defined at:
  3976 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;  dividend        4    0[COMRAM] unsigned long 
  3979 ;;  divisor         4    4[COMRAM] unsigned long 
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;  counter         1    8[COMRAM] unsigned char 
  3982 ;; Return value:  Size  Location     Type
  3983 ;;                  4    0[COMRAM] unsigned long 
  3984 ;; Registers used:
  3985 ;;		wreg, status,2, status,0
  3986 ;; Tracked objects:
  3987 ;;		On entry : 0/0
  3988 ;;		On exit  : 0/0
  3989 ;;		Unchanged: 0/0
  3990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3991 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3992 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3994 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3995 ;;Total ram usage:        9 bytes
  3996 ;; Hardware stack levels used:    1
  3997 ;; This function calls:
  3998 ;;		Nothing
  3999 ;; This function is called by:
  4000 ;;		_Sys_Cyc
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           
  4004                           	psect	text34
  4005  001664                     __ptext34:
  4006                           	opt stack 0
  4007  001664                     ___llmod:
  4008                           	opt stack 24
  4009                           
  4010                           ;incstack = 0
  4011  001664  5005               	movf	___llmod@divisor,w,c
  4012  001666  1006               	iorwf	___llmod@divisor+1,w,c
  4013  001668  1007               	iorwf	___llmod@divisor+2,w,c
  4014  00166A  1008               	iorwf	___llmod@divisor+3,w,c
  4015  00166C  B4D8               	btfsc	status,2,c
  4016  00166E  D029               	goto	i2l893
  4017  001670  0E01               	movlw	1
  4018  001672  6E09               	movwf	___llmod@counter,c
  4019  001674  D007               	goto	i2l2077
  4020  001676                     i2l2075:
  4021  001676  90D8               	bcf	status,0,c
  4022  001678  3605               	rlcf	___llmod@divisor,f,c
  4023  00167A  3606               	rlcf	___llmod@divisor+1,f,c
  4024  00167C  3607               	rlcf	___llmod@divisor+2,f,c
  4025  00167E  3608               	rlcf	___llmod@divisor+3,f,c
  4026  001680  2A09               	incf	___llmod@counter,f,c
  4027  001682  D000               	goto	i2l2077
  4028  001684                     i2l2077:
  4029  001684  BE08               	btfsc	___llmod@divisor+3,7,c
  4030  001686  D002               	goto	i2l2079
  4031  001688  D7F6               	goto	i2l2075
  4032  00168A  D000               	goto	i2l2079
  4033  00168C                     i2l2079:
  4034  00168C  5005               	movf	___llmod@divisor,w,c
  4035  00168E  5C01               	subwf	___llmod@dividend,w,c
  4036  001690  5006               	movf	___llmod@divisor+1,w,c
  4037  001692  5802               	subwfb	___llmod@dividend+1,w,c
  4038  001694  5007               	movf	___llmod@divisor+2,w,c
  4039  001696  5803               	subwfb	___llmod@dividend+2,w,c
  4040  001698  5008               	movf	___llmod@divisor+3,w,c
  4041  00169A  5804               	subwfb	___llmod@dividend+3,w,c
  4042  00169C  A0D8               	btfss	status,0,c
  4043  00169E  D009               	goto	i2l2083
  4044  0016A0  5005               	movf	___llmod@divisor,w,c
  4045  0016A2  5E01               	subwf	___llmod@dividend,f,c
  4046  0016A4  5006               	movf	___llmod@divisor+1,w,c
  4047  0016A6  5A02               	subwfb	___llmod@dividend+1,f,c
  4048  0016A8  5007               	movf	___llmod@divisor+2,w,c
  4049  0016AA  5A03               	subwfb	___llmod@dividend+2,f,c
  4050  0016AC  5008               	movf	___llmod@divisor+3,w,c
  4051  0016AE  5A04               	subwfb	___llmod@dividend+3,f,c
  4052  0016B0  D000               	goto	i2l2083
  4053  0016B2                     i2l2083:
  4054  0016B2  90D8               	bcf	status,0,c
  4055  0016B4  3208               	rrcf	___llmod@divisor+3,f,c
  4056  0016B6  3207               	rrcf	___llmod@divisor+2,f,c
  4057  0016B8  3206               	rrcf	___llmod@divisor+1,f,c
  4058  0016BA  3205               	rrcf	___llmod@divisor,f,c
  4059  0016BC  2E09               	decfsz	___llmod@counter,f,c
  4060  0016BE  D7E6               	goto	i2l2079
  4061  0016C0  D000               	goto	i2l893
  4062  0016C2                     i2l893:
  4063  0016C2  C001  F001         	movff	___llmod@dividend,?___llmod
  4064  0016C6  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  4065  0016CA  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  4066  0016CE  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  4067  0016D2  0012               	return		;funcret
  4068  0016D4                     __end_of___llmod:
  4069                           	opt stack 0
  4070                           pclatu	equ	0xFFB
  4071                           pclath	equ	0xFFA
  4072                           tblptru	equ	0xFF8
  4073                           tblptrh	equ	0xFF7
  4074                           tblptrl	equ	0xFF6
  4075                           tablat	equ	0xFF5
  4076                           prodh	equ	0xFF4
  4077                           prodl	equ	0xFF3
  4078                           intcon	equ	0xFF2
  4079                           postinc0	equ	0xFEE
  4080                           fsr0h	equ	0xFEA
  4081                           fsr0l	equ	0xFE9
  4082                           wreg	equ	0xFE8
  4083                           fsr1h	equ	0xFE2
  4084                           fsr1l	equ	0xFE1
  4085                           indf2	equ	0xFDF
  4086                           fsr2h	equ	0xFDA
  4087                           fsr2l	equ	0xFD9
  4088                           status	equ	0xFD8
  4089                           
  4090 ;; *************** function _Key_FSM_Scan *****************
  4091 ;; Defined at:
  4092 ;;		line 75 in file "_01_USER/Key.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;		None
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;		None
  4097 ;; Return value:  Size  Location     Type
  4098 ;;		None               void
  4099 ;; Registers used:
  4100 ;;		wreg, status,2, status,0, cstack
  4101 ;; Tracked objects:
  4102 ;;		On entry : 0/0
  4103 ;;		On exit  : 0/0
  4104 ;;		Unchanged: 0/0
  4105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4110 ;;Total ram usage:        0 bytes
  4111 ;; Hardware stack levels used:    1
  4112 ;; Hardware stack levels required when called:    1
  4113 ;; This function calls:
  4114 ;;		_Key_Scan
  4115 ;; This function is called by:
  4116 ;;		_Sys_Cyc
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119                           
  4120                           	psect	text35
  4121  001398                     __ptext35:
  4122                           	opt stack 0
  4123  001398                     _Key_FSM_Scan:
  4124                           	opt stack 23
  4125                           
  4126                           ;Key.c: 77: Key_Scan();
  4127                           
  4128                           ;incstack = 0
  4129  001398  ECFB  F00C         	call	_Key_Scan	;wreg free
  4130                           
  4131                           ;Key.c: 78: if( Local_Key_FSM.key_state & 0x01 ) Local_Key_FSM.key[0]++;
  4132  00139C  A03C               	btfss	_Local_Key_FSM,0,c	;volatile
  4133  00139E  D002               	goto	i2l1519
  4134  0013A0  2A42               	incf	_Local_Key_FSM+6,f,c	;volatile
  4135  0013A2  D000               	goto	i2l1519
  4136  0013A4                     i2l1519:
  4137                           
  4138                           ;Key.c: 79: if( Local_Key_FSM.key_state & 0x02 ) Local_Key_FSM.key[1]++;
  4139  0013A4  A23C               	btfss	_Local_Key_FSM,1,c	;volatile
  4140  0013A6  D002               	goto	i2l1523
  4141  0013A8  2A43               	incf	_Local_Key_FSM+7,f,c	;volatile
  4142  0013AA  D000               	goto	i2l1523
  4143  0013AC                     i2l1523:
  4144                           
  4145                           ;Key.c: 80: if( Local_Key_FSM.key_state & 0x04 ) Local_Key_FSM.key[2]++;
  4146  0013AC  A43C               	btfss	_Local_Key_FSM,2,c	;volatile
  4147  0013AE  D002               	goto	i2l1527
  4148  0013B0  2A44               	incf	_Local_Key_FSM+8,f,c	;volatile
  4149  0013B2  D000               	goto	i2l1527
  4150  0013B4                     i2l1527:
  4151                           
  4152                           ;Key.c: 81: if( Local_Key_FSM.key_state & 0x08 ) Local_Key_FSM.key[3]++;
  4153  0013B4  A63C               	btfss	_Local_Key_FSM,3,c	;volatile
  4154  0013B6  D002               	goto	i2l1531
  4155  0013B8  2A45               	incf	_Local_Key_FSM+9,f,c	;volatile
  4156  0013BA  D000               	goto	i2l1531
  4157  0013BC                     i2l1531:
  4158                           
  4159                           ;Key.c: 82: if( Local_Key_FSM.key_state & 0x10 ) Local_Key_FSM.key[4]++;
  4160  0013BC  A83C               	btfss	_Local_Key_FSM,4,c	;volatile
  4161  0013BE  D002               	goto	i2l1535
  4162  0013C0  2A46               	incf	_Local_Key_FSM+10,f,c	;volatile
  4163  0013C2  D000               	goto	i2l1535
  4164  0013C4                     i2l1535:
  4165                           
  4166                           ;Key.c: 84: if( Local_Key_FSM.key_state == 0x00 )
  4167  0013C4  503C               	movf	_Local_Key_FSM,w,c	;volatile
  4168  0013C6  A4D8               	btfss	status,2,c
  4169  0013C8  D00B               	goto	i2l1539
  4170                           
  4171                           ;Key.c: 85: {
  4172                           ;Key.c: 86: Local_Key_FSM.key[0] = 0;
  4173  0013CA  0E00               	movlw	0
  4174  0013CC  6E42               	movwf	_Local_Key_FSM+6,c	;volatile
  4175                           
  4176                           ;Key.c: 87: Local_Key_FSM.key[1] = 0;
  4177  0013CE  0E00               	movlw	0
  4178  0013D0  6E43               	movwf	_Local_Key_FSM+7,c	;volatile
  4179                           
  4180                           ;Key.c: 88: Local_Key_FSM.key[2] = 0;
  4181  0013D2  0E00               	movlw	0
  4182  0013D4  6E44               	movwf	_Local_Key_FSM+8,c	;volatile
  4183                           
  4184                           ;Key.c: 89: Local_Key_FSM.key[3] = 0;
  4185  0013D6  0E00               	movlw	0
  4186  0013D8  6E45               	movwf	_Local_Key_FSM+9,c	;volatile
  4187                           
  4188                           ;Key.c: 90: Local_Key_FSM.key[4] = 0;
  4189  0013DA  0E00               	movlw	0
  4190  0013DC  6E46               	movwf	_Local_Key_FSM+10,c	;volatile
  4191                           
  4192                           ;Key.c: 91: }
  4193  0013DE  0012               	return	
  4194  0013E0                     i2l1539:
  4195                           
  4196                           ;Key.c: 92: else
  4197                           ;Key.c: 93: {
  4198                           ;Key.c: 95: if( Local_Key_FSM.key[0] < 5 ) Local_Key_FSM.key_FSM[0] = 0x00;
  4199  0013E0  0E05               	movlw	5
  4200  0013E2  6042               	cpfslt	_Local_Key_FSM+6,c	;volatile
  4201  0013E4  D002               	goto	i2l1543
  4202  0013E6  0E00               	movlw	0
  4203  0013E8  D006               	goto	L5
  4204  0013EA                     i2l1543:
  4205                           
  4206                           ;Key.c: 96: else if( Local_Key_FSM.key[0] < 50 ) Local_Key_FSM.key_FSM[0] = 0x01;
  4207  0013EA  0E32               	movlw	50
  4208  0013EC  6042               	cpfslt	_Local_Key_FSM+6,c	;volatile
  4209  0013EE  D002               	goto	i2l1547
  4210  0013F0  0E01               	movlw	1
  4211  0013F2  D001               	goto	L5
  4212  0013F4                     i2l1547:
  4213                           
  4214                           ;Key.c: 97: else Local_Key_FSM.key_FSM[0] = 0x03;
  4215  0013F4  0E03               	movlw	3
  4216  0013F6                     L5:
  4217  0013F6  6E3D               	movwf	_Local_Key_FSM+1,c	;volatile
  4218  0013F8  D000               	goto	i2l1549
  4219  0013FA                     i2l1549:
  4220                           
  4221                           ;Key.c: 99: if( Local_Key_FSM.key[1] < 5 ) Local_Key_FSM.key_FSM[1] = 0x00;
  4222  0013FA  0E05               	movlw	5
  4223  0013FC  6043               	cpfslt	_Local_Key_FSM+7,c	;volatile
  4224  0013FE  D002               	goto	i2l1553
  4225  001400  0E00               	movlw	0
  4226  001402  D006               	goto	L7
  4227  001404                     i2l1553:
  4228                           
  4229                           ;Key.c: 100: else if( Local_Key_FSM.key[1] < 50 ) Local_Key_FSM.key_FSM[1] = 0x01;
  4230  001404  0E32               	movlw	50
  4231  001406  6043               	cpfslt	_Local_Key_FSM+7,c	;volatile
  4232  001408  D002               	goto	i2l1557
  4233  00140A  0E01               	movlw	1
  4234  00140C  D001               	goto	L7
  4235  00140E                     i2l1557:
  4236                           
  4237                           ;Key.c: 101: else Local_Key_FSM.key_FSM[1] = 0x03;
  4238  00140E  0E03               	movlw	3
  4239  001410                     L7:
  4240  001410  6E3E               	movwf	_Local_Key_FSM+2,c	;volatile
  4241  001412  D000               	goto	i2l1559
  4242  001414                     i2l1559:
  4243                           
  4244                           ;Key.c: 103: if( Local_Key_FSM.key[2] < 5 ) Local_Key_FSM.key_FSM[2] = 0x00;
  4245  001414  0E05               	movlw	5
  4246  001416  6044               	cpfslt	_Local_Key_FSM+8,c	;volatile
  4247  001418  D002               	goto	i2l1563
  4248  00141A  0E00               	movlw	0
  4249  00141C  D006               	goto	L9
  4250  00141E                     i2l1563:
  4251                           
  4252                           ;Key.c: 104: else if( Local_Key_FSM.key[2] < 50 ) Local_Key_FSM.key_FSM[2] = 0x01;
  4253  00141E  0E32               	movlw	50
  4254  001420  6044               	cpfslt	_Local_Key_FSM+8,c	;volatile
  4255  001422  D002               	goto	i2l1567
  4256  001424  0E01               	movlw	1
  4257  001426  D001               	goto	L9
  4258  001428                     i2l1567:
  4259                           
  4260                           ;Key.c: 105: else Local_Key_FSM.key_FSM[2] = 0x03;
  4261  001428  0E03               	movlw	3
  4262  00142A                     L9:
  4263  00142A  6E3F               	movwf	_Local_Key_FSM+3,c	;volatile
  4264  00142C  D000               	goto	i2l1569
  4265  00142E                     i2l1569:
  4266                           
  4267                           ;Key.c: 107: if( Local_Key_FSM.key[3] < 5 ) Local_Key_FSM.key_FSM[3] = 0x00;
  4268  00142E  0E05               	movlw	5
  4269  001430  6045               	cpfslt	_Local_Key_FSM+9,c	;volatile
  4270  001432  D002               	goto	i2l1573
  4271  001434  0E00               	movlw	0
  4272  001436  D006               	goto	L11
  4273  001438                     i2l1573:
  4274                           
  4275                           ;Key.c: 108: else if( Local_Key_FSM.key[3] < 50 ) Local_Key_FSM.key_FSM[3] = 0x01;
  4276  001438  0E32               	movlw	50
  4277  00143A  6045               	cpfslt	_Local_Key_FSM+9,c	;volatile
  4278  00143C  D002               	goto	i2l1577
  4279  00143E  0E01               	movlw	1
  4280  001440  D001               	goto	L11
  4281  001442                     i2l1577:
  4282                           
  4283                           ;Key.c: 109: else Local_Key_FSM.key_FSM[3] = 0x03;
  4284  001442  0E03               	movlw	3
  4285  001444                     L11:
  4286  001444  6E40               	movwf	_Local_Key_FSM+4,c	;volatile
  4287  001446  D000               	goto	i2l1579
  4288  001448                     i2l1579:
  4289                           
  4290                           ;Key.c: 111: if( Local_Key_FSM.key[4] < 5 ) Local_Key_FSM.key_FSM[4] = 0x00;
  4291  001448  0E05               	movlw	5
  4292  00144A  6046               	cpfslt	_Local_Key_FSM+10,c	;volatile
  4293  00144C  D002               	goto	i2l1583
  4294  00144E  0E00               	movlw	0
  4295  001450  D006               	goto	L13
  4296  001452                     i2l1583:
  4297                           
  4298                           ;Key.c: 112: else if( Local_Key_FSM.key[4] < 50 ) Local_Key_FSM.key_FSM[4] = 0x01;
  4299  001452  0E32               	movlw	50
  4300  001454  6046               	cpfslt	_Local_Key_FSM+10,c	;volatile
  4301  001456  D002               	goto	i2l1587
  4302  001458  0E01               	movlw	1
  4303  00145A  D001               	goto	L13
  4304  00145C                     i2l1587:
  4305                           
  4306                           ;Key.c: 113: else Local_Key_FSM.key_FSM[4] = 0x03;
  4307  00145C  0E03               	movlw	3
  4308  00145E                     L13:
  4309  00145E  6E41               	movwf	_Local_Key_FSM+5,c	;volatile
  4310  001460  D000               	goto	i2l121
  4311  001462                     i2l121:
  4312                           
  4313                           ;Key.c: 116: Local_Key_FSM.key_group = 0x00;
  4314  001462  0E00               	movlw	0
  4315  001464  6E41               	movwf	_Local_Key_FSM+5,c	;volatile
  4316                           
  4317                           ;Key.c: 117: if( Local_Key_FSM.key_FSM[0] != 0x00 ) Local_Key_FSM.key_group |= 0x01<<0;
  4318  001466  503D               	movf	_Local_Key_FSM+1,w,c	;volatile
  4319  001468  B4D8               	btfsc	status,2,c
  4320  00146A  D002               	goto	i2l1591
  4321  00146C  8041               	bsf	_Local_Key_FSM+5,0,c	;volatile
  4322  00146E  D000               	goto	i2l1591
  4323  001470                     i2l1591:
  4324                           
  4325                           ;Key.c: 118: if( Local_Key_FSM.key_FSM[1] != 0x00 ) Local_Key_FSM.key_group |= 0x01<<1;
  4326  001470  503E               	movf	_Local_Key_FSM+2,w,c	;volatile
  4327  001472  B4D8               	btfsc	status,2,c
  4328  001474  D002               	goto	i2l1595
  4329  001476  8241               	bsf	_Local_Key_FSM+5,1,c	;volatile
  4330  001478  D000               	goto	i2l1595
  4331  00147A                     i2l1595:
  4332                           
  4333                           ;Key.c: 119: if( Local_Key_FSM.key_FSM[2] != 0x00 ) Local_Key_FSM.key_group |= 0x01<<2;
  4334  00147A  503F               	movf	_Local_Key_FSM+3,w,c	;volatile
  4335  00147C  B4D8               	btfsc	status,2,c
  4336  00147E  D002               	goto	i2l1599
  4337  001480  8441               	bsf	_Local_Key_FSM+5,2,c	;volatile
  4338  001482  D000               	goto	i2l1599
  4339  001484                     i2l1599:
  4340                           
  4341                           ;Key.c: 120: if( Local_Key_FSM.key_FSM[3] != 0x00 ) Local_Key_FSM.key_group |= 0x01<<3;
  4342  001484  5040               	movf	_Local_Key_FSM+4,w,c	;volatile
  4343  001486  B4D8               	btfsc	status,2,c
  4344  001488  D002               	goto	i2l1603
  4345  00148A  8641               	bsf	_Local_Key_FSM+5,3,c	;volatile
  4346  00148C  D000               	goto	i2l1603
  4347  00148E                     i2l1603:
  4348                           
  4349                           ;Key.c: 121: if( Local_Key_FSM.key_FSM[4] != 0x00 ) Local_Key_FSM.key_group |= 0x01<<4;
  4350  00148E  5041               	movf	_Local_Key_FSM+5,w,c	;volatile
  4351  001490  B4D8               	btfsc	status,2,c
  4352  001492  0012               	return	
  4353  001494  8841               	bsf	_Local_Key_FSM+5,4,c	;volatile
  4354  001496  0012               	return	
  4355  001498  0012               	return		;funcret
  4356  00149A                     __end_of_Key_FSM_Scan:
  4357                           	opt stack 0
  4358                           pclatu	equ	0xFFB
  4359                           pclath	equ	0xFFA
  4360                           tblptru	equ	0xFF8
  4361                           tblptrh	equ	0xFF7
  4362                           tblptrl	equ	0xFF6
  4363                           tablat	equ	0xFF5
  4364                           prodh	equ	0xFF4
  4365                           prodl	equ	0xFF3
  4366                           intcon	equ	0xFF2
  4367                           postinc0	equ	0xFEE
  4368                           fsr0h	equ	0xFEA
  4369                           fsr0l	equ	0xFE9
  4370                           wreg	equ	0xFE8
  4371                           fsr1h	equ	0xFE2
  4372                           fsr1l	equ	0xFE1
  4373                           indf2	equ	0xFDF
  4374                           fsr2h	equ	0xFDA
  4375                           fsr2l	equ	0xFD9
  4376                           status	equ	0xFD8
  4377                           
  4378 ;; *************** function _Key_Scan *****************
  4379 ;; Defined at:
  4380 ;;		line 54 in file "_01_USER/Key.c"
  4381 ;; Parameters:    Size  Location     Type
  4382 ;;		None
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;		None
  4385 ;; Return value:  Size  Location     Type
  4386 ;;		None               void
  4387 ;; Registers used:
  4388 ;;		wreg, status,2, status,0
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4398 ;;Total ram usage:        0 bytes
  4399 ;; Hardware stack levels used:    1
  4400 ;; This function calls:
  4401 ;;		Nothing
  4402 ;; This function is called by:
  4403 ;;		_Key_FSM_Scan
  4404 ;; This function uses a non-reentrant model
  4405 ;;
  4406                           
  4407                           	psect	text36
  4408  0019F6                     __ptext36:
  4409                           	opt stack 0
  4410  0019F6                     _Key_Scan:
  4411                           	opt stack 23
  4412                           
  4413                           ;Key.c: 56: Local_Key_FSM.key_state = 0x00;
  4414                           
  4415                           ;incstack = 0
  4416  0019F6  0E00               	movlw	0
  4417  0019F8  6E3C               	movwf	_Local_Key_FSM,c	;volatile
  4418                           
  4419                           ;Key.c: 58: if( RE3 == 0 ) Local_Key_FSM.key_state |= (0x01 << 0) ;
  4420  0019FA  B684               	btfsc	3972,3,c	;volatile
  4421  0019FC  D002               	goto	i2l1287
  4422  0019FE  803C               	bsf	_Local_Key_FSM,0,c	;volatile
  4423  001A00  D000               	goto	i2l1287
  4424  001A02                     i2l1287:
  4425                           
  4426                           ;Key.c: 59: if( RE2 == 0 ) Local_Key_FSM.key_state |= (0x01 << 1) ;
  4427  001A02  B484               	btfsc	3972,2,c	;volatile
  4428  001A04  D002               	goto	i2l1291
  4429  001A06  823C               	bsf	_Local_Key_FSM,1,c	;volatile
  4430  001A08  D000               	goto	i2l1291
  4431  001A0A                     i2l1291:
  4432                           
  4433                           ;Key.c: 60: if( RD6 == 0 ) Local_Key_FSM.key_state |= (0x01 << 2) ;
  4434  001A0A  BC83               	btfsc	3971,6,c	;volatile
  4435  001A0C  D002               	goto	i2l1295
  4436  001A0E  843C               	bsf	_Local_Key_FSM,2,c	;volatile
  4437  001A10  D000               	goto	i2l1295
  4438  001A12                     i2l1295:
  4439                           
  4440                           ;Key.c: 61: if( RE4 == 0 ) Local_Key_FSM.key_state |= (0x01 << 3) ;
  4441  001A12  B884               	btfsc	3972,4,c	;volatile
  4442  001A14  D002               	goto	i2l1299
  4443  001A16  863C               	bsf	_Local_Key_FSM,3,c	;volatile
  4444  001A18  D000               	goto	i2l1299
  4445  001A1A                     i2l1299:
  4446                           
  4447                           ;Key.c: 62: if( RD7 == 0 ) Local_Key_FSM.key_state |= (0x01 << 4) ;
  4448  001A1A  BE83               	btfsc	3971,7,c	;volatile
  4449  001A1C  0012               	return	
  4450  001A1E  883C               	bsf	_Local_Key_FSM,4,c	;volatile
  4451  001A20  0012               	return	
  4452  001A22  0012               	return		;funcret
  4453  001A24                     __end_of_Key_Scan:
  4454                           	opt stack 0
  4455                           pclatu	equ	0xFFB
  4456                           pclath	equ	0xFFA
  4457                           tblptru	equ	0xFF8
  4458                           tblptrh	equ	0xFF7
  4459                           tblptrl	equ	0xFF6
  4460                           tablat	equ	0xFF5
  4461                           prodh	equ	0xFF4
  4462                           prodl	equ	0xFF3
  4463                           intcon	equ	0xFF2
  4464                           postinc0	equ	0xFEE
  4465                           fsr0h	equ	0xFEA
  4466                           fsr0l	equ	0xFE9
  4467                           wreg	equ	0xFE8
  4468                           fsr1h	equ	0xFE2
  4469                           fsr1l	equ	0xFE1
  4470                           indf2	equ	0xFDF
  4471                           fsr2h	equ	0xFDA
  4472                           fsr2l	equ	0xFD9
  4473                           status	equ	0xFD8
  4474                           
  4475 ;; *************** function _Delay_1Khz *****************
  4476 ;; Defined at:
  4477 ;;		line 75 in file "_01_USER/My_Delay.c"
  4478 ;; Parameters:    Size  Location     Type
  4479 ;;		None
  4480 ;; Auto vars:     Size  Location     Type
  4481 ;;  c               1    2[COMRAM] unsigned char 
  4482 ;;  b               1    1[COMRAM] unsigned char 
  4483 ;;  a               1    0[COMRAM] unsigned char 
  4484 ;; Return value:  Size  Location     Type
  4485 ;;		None               void
  4486 ;; Registers used:
  4487 ;;		wreg, status,2, status,0
  4488 ;; Tracked objects:
  4489 ;;		On entry : 0/0
  4490 ;;		On exit  : 0/0
  4491 ;;		Unchanged: 0/0
  4492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4494 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4496 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4497 ;;Total ram usage:        3 bytes
  4498 ;; Hardware stack levels used:    1
  4499 ;; This function calls:
  4500 ;;		Nothing
  4501 ;; This function is called by:
  4502 ;;		_Sys_Cyc
  4503 ;; This function uses a non-reentrant model
  4504 ;;
  4505                           
  4506                           	psect	text37
  4507  00195E                     __ptext37:
  4508                           	opt stack 0
  4509  00195E                     _Delay_1Khz:
  4510                           	opt stack 24
  4511                           
  4512                           ;My_Delay.c: 77: unsigned char a,b,c;
  4513                           ;My_Delay.c: 78: for(c=1;c>0;c--)
  4514                           
  4515                           ;incstack = 0
  4516  00195E  0E01               	movlw	1
  4517  001960  6E03               	movwf	Delay_1Khz@c,c
  4518  001962  5003               	movf	Delay_1Khz@c,w,c
  4519  001964  B4D8               	btfsc	status,2,c
  4520  001966  0012               	return	
  4521  001968  D001               	goto	i2l1493
  4522  00196A  0012               	return	
  4523  00196C                     i2l1493:
  4524                           
  4525                           ;My_Delay.c: 79: for(b=32;b>0;b--)
  4526  00196C  0E20               	movlw	32
  4527  00196E  6E02               	movwf	Delay_1Khz@b,c
  4528  001970  5002               	movf	Delay_1Khz@b,w,c
  4529  001972  B4D8               	btfsc	status,2,c
  4530  001974  D00D               	goto	i2l1509
  4531  001976  D001               	goto	i2l1497
  4532  001978  D00B               	goto	i2l1509
  4533  00197A                     i2l1497:
  4534                           
  4535                           ;My_Delay.c: 80: for(a=2;a>0;a--);
  4536  00197A  0E02               	movlw	2
  4537  00197C  6E01               	movwf	Delay_1Khz@a,c
  4538  00197E  5001               	movf	Delay_1Khz@a,w,c
  4539  001980  B4D8               	btfsc	status,2,c
  4540  001982  D004               	goto	i2l1505
  4541  001984  D001               	goto	i2l1501
  4542  001986  D002               	goto	i2l1505
  4543  001988                     i2l1501:
  4544  001988  0601               	decf	Delay_1Khz@a,f,c
  4545  00198A  D7F9               	goto	L14
  4546  00198C                     i2l1505:
  4547  00198C  0602               	decf	Delay_1Khz@b,f,c
  4548  00198E  D7F0               	goto	L15
  4549  001990                     i2l1509:
  4550  001990  0603               	decf	Delay_1Khz@c,f,c
  4551  001992  D7E7               	goto	L16
  4552  001994  0012               	return		;funcret
  4553  001996                     __end_of_Delay_1Khz:
  4554                           	opt stack 0
  4555                           pclatu	equ	0xFFB
  4556                           pclath	equ	0xFFA
  4557                           tblptru	equ	0xFF8
  4558                           tblptrh	equ	0xFF7
  4559                           tblptrl	equ	0xFF6
  4560                           tablat	equ	0xFF5
  4561                           prodh	equ	0xFF4
  4562                           prodl	equ	0xFF3
  4563                           intcon	equ	0xFF2
  4564                           postinc0	equ	0xFEE
  4565                           fsr0h	equ	0xFEA
  4566                           fsr0l	equ	0xFE9
  4567                           wreg	equ	0xFE8
  4568                           fsr1h	equ	0xFE2
  4569                           fsr1l	equ	0xFE1
  4570                           indf2	equ	0xFDF
  4571                           fsr2h	equ	0xFDA
  4572                           fsr2l	equ	0xFD9
  4573                           status	equ	0xFD8
  4574                           pclatu	equ	0xFFB
  4575                           pclath	equ	0xFFA
  4576                           tblptru	equ	0xFF8
  4577                           tblptrh	equ	0xFF7
  4578                           tblptrl	equ	0xFF6
  4579                           tablat	equ	0xFF5
  4580                           prodh	equ	0xFF4
  4581                           prodl	equ	0xFF3
  4582                           intcon	equ	0xFF2
  4583                           postinc0	equ	0xFEE
  4584                           fsr0h	equ	0xFEA
  4585                           fsr0l	equ	0xFE9
  4586                           wreg	equ	0xFE8
  4587                           fsr1h	equ	0xFE2
  4588                           fsr1l	equ	0xFE1
  4589                           indf2	equ	0xFDF
  4590                           fsr2h	equ	0xFDA
  4591                           fsr2l	equ	0xFD9
  4592                           status	equ	0xFD8
  4593                           
  4594                           	psect	rparam
  4595  0000                     pclatu	equ	0xFFB
  4596                           pclath	equ	0xFFA
  4597                           tblptru	equ	0xFF8
  4598                           tblptrh	equ	0xFF7
  4599                           tblptrl	equ	0xFF6
  4600                           tablat	equ	0xFF5
  4601                           prodh	equ	0xFF4
  4602                           prodl	equ	0xFF3
  4603                           intcon	equ	0xFF2
  4604                           postinc0	equ	0xFEE
  4605                           fsr0h	equ	0xFEA
  4606                           fsr0l	equ	0xFE9
  4607                           wreg	equ	0xFE8
  4608                           fsr1h	equ	0xFE2
  4609                           fsr1l	equ	0xFE1
  4610                           indf2	equ	0xFDF
  4611                           fsr2h	equ	0xFDA
  4612                           fsr2l	equ	0xFD9
  4613                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      69
    BANK0           160     24      27
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _Timer0_Init->_SetTimer0
    _Show_Result->_TM1640_Show_integer
    _delay_ms->_delay1ms
    _TM1640_Show_integer->_TM1640_Writer_Dates
    _TM1640_Show_integer->___lwdiv
    _TM1640_Writer_Dates->___lwmod
    _Get_ADC6->___ftmul
    ___lwtoft->___ftpack
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul
    _My_USART_Init->_Open2USART
    _Manage_Message->_Key_FSM_Read
    _Init_TM1640->_TM1640_Writer_Byte
    _TM1640_Writer_Byte->_TM1640_Delay
    _TM1640_Stop->_TM1640_Delay
    _TM1640_Start->_TM1640_Delay
    _ADC6_Init->_OpenADC

Critical Paths under _Sys_Cyc in COMRAM

    _Sys_Cyc->___llmod

Critical Paths under _main in BANK0

    _Get_ADC6->___ftdiv
    ___ftdiv->___ftmul

Critical Paths under _Sys_Cyc in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Sys_Cyc in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Sys_Cyc in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Sys_Cyc in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Sys_Cyc in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Sys_Cyc in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Sys_Cyc in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Sys_Cyc in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Sys_Cyc in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Sys_Cyc in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Sys_Cyc in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Sys_Cyc in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Sys_Cyc in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Sys_Cyc in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Sys_Cyc in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Sys_Cyc in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   14764
                                             21 BANK0      3     3      0
                          _ADC6_Init
                        _GPIO_Config
                        _Init_TM1640
                           _Key_Init
                     _Manage_Message
                      _My_USART_Init
                                _Run
                        _Show_Result
                        _Timer0_Init
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0     194
                          _SetTimer0
 ---------------------------------------------------------------------------------
 (2) _SetTimer0                                            4     2      2     194
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Show_Result                                          0     0      0    2624
                _TM1640_Show_integer
 ---------------------------------------------------------------------------------
 (1) _Run                                                  0     0      0   10846
                           _Get_ADC6
                _TM1640_Show_integer
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             2     0      2     234
                                             27 COMRAM     2     0      2
                           _delay1ms
 ---------------------------------------------------------------------------------
 (3) _delay1ms                                             3     3      0     138
                                             24 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _TM1640_Show_integer                                  2     0      2    2624
                                             31 COMRAM     2     0      2
                _TM1640_Writer_Dates
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     752
                                             24 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     631
                                             24 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _TM1640_Writer_Dates                                  2     1      1     885
                                             29 COMRAM     2     1      1
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _Get_ADC6                                             0     0      0    7988
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2104
                                             32 COMRAM     3     0      3
                            _ReadADC (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    2846
                                             35 COMRAM     9     3      6
                                              0 BANK0      6     6      0
                            _ReadADC (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3038
                                              6 BANK0     15     9      6
                            _ReadADC (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2008
                                             24 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) _ReadADC                                              4     2      2       0
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _My_USART_Init                                        0     0      0     375
                         _Open2USART
 ---------------------------------------------------------------------------------
 (2) _Open2USART                                           3     1      2     375
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Manage_Message                                       0     0      0     134
                       _Key_FSM_Read
 ---------------------------------------------------------------------------------
 (2) _Key_FSM_Read                                         6     6      0     134
                                             24 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _Key_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_TM1640                                          0     0      0     272
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
 ---------------------------------------------------------------------------------
 (4) _TM1640_Writer_Byte                                   2     2      0     136
                                             26 COMRAM     2     2      0
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (4) _TM1640_Stop                                          0     0      0      68
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (4) _TM1640_Start                                         0     0      0      68
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (5) _TM1640_Delay                                         2     2      0      68
                                             24 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC6_Init                                            0     0      0     316
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     316
                                             24 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Sys_Cyc                                             15    15      0     578
                                              9 COMRAM    15    15      0
                         _Delay_1Khz
                       _Key_FSM_Scan
                            ___llmod
                        i2_SetTimer0
 ---------------------------------------------------------------------------------
 (7) i2_SetTimer0                                          4     2      2      94
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8     371
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) _Key_FSM_Scan                                         0     0      0       0
                           _Key_Scan
 ---------------------------------------------------------------------------------
 (8) _Key_Scan                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _Delay_1Khz                                           3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC6_Init
     _OpenADC
   _GPIO_Config
   _Init_TM1640
     _TM1640_Start
       _TM1640_Delay
     _TM1640_Stop
       _TM1640_Delay
     _TM1640_Writer_Byte
       _TM1640_Delay
   _Key_Init
   _Manage_Message
     _Key_FSM_Read
   _My_USART_Init
     _Open2USART
   _Run
     _Get_ADC6
       _BusyADC
       _ConvertADC
       _ReadADC
       ___ftdiv
         _ReadADC (ARG)
         ___ftmul (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___ftmul
         _ReadADC (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___lwtoft
         _ReadADC (ARG)
         ___ftpack (ARG)
     _TM1640_Show_integer
       _TM1640_Writer_Dates
         _TM1640_Start
           _TM1640_Delay
         _TM1640_Stop
           _TM1640_Delay
         _TM1640_Writer_Byte
           _TM1640_Delay
         ___lwmod (ARG)
       ___lwdiv
       ___lwmod
     _delay_ms
       _delay1ms
   _Show_Result
     _TM1640_Show_integer
       _TM1640_Writer_Dates
         _TM1640_Start
           _TM1640_Delay
         _TM1640_Stop
           _TM1640_Delay
         _TM1640_Writer_Byte
           _TM1640_Delay
         ___lwmod (ARG)
       ___lwdiv
       ___lwmod
   _Timer0_Init
     _SetTimer0

 _Sys_Cyc (ROOT)
   _Delay_1Khz
   _Key_FSM_Scan
     _Key_Scan
   ___llmod
   i2_SetTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     18      1B       5       16.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      45       1       72.6%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      60      12        0.0%
DATA                 0      0      60       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Dec 10 15:07:26 2015

                ?_TM1640_Stop 0001  __size_of_TM1640_Writer_Dates 0022                 ?_TM1640_Delay 0001  
                 __CFG_BORV$3 000000                 ?_TM1640_Start 0001                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000              Key_FSM_Read@temp 001D  
                __CFG_CP3$OFF 000000                  __CFG_CP4$OFF 000000                  __CFG_CP5$OFF 000000  
                __CFG_CP6$OFF 000000                  __CFG_CP7$OFF 000000                           l301 1B66  
                         l421 15C2                           l423 15CE                           l424 15D0  
                         l416 159A                           l418 15AA                           l286 187C  
                         l287 1892                           l386 17E6                           l811 112A  
                         l747 1536                           l946 1792                           l956 182C  
                         _GIE 007F97                  __CFG_CPB$OFF 000000                           _RC3 007C13  
                         _RC4 007C14                           _RE2 007C22                           _RE3 007C23  
                         _RE4 007C24                           _RD6 007C1E                           _RE5 007C25  
                         _RD7 007C1F                           _RE6 007C26                           _RG3 007C33  
                         _RE7 007C27                  __CFG_CPD$OFF 000000                           _PSA 007EAB  
                         _Run 18B2                ??_Key_FSM_Read 0019                ??_Key_FSM_Scan 0001  
                         wreg 000FE8                  ?_GPIO_Config 0001                    _TXSTA2bits 000F21  
        ?_TM1640_Show_integer 0020                  ___ftdiv@cntr 006F                          ?_Run 0001  
                ___ftdiv@sign 0074                          l2213 1896                          l2301 104C  
                        l2231 14C6                          l2241 152A                          l2233 14E6  
                        l2225 14AA                          l2171 1B56                          l2219 18AA  
                        l2307 1086                          l2253 1550                          l2237 14FE  
                        l2229 14BA                          l2261 1934                          l2247 153E  
                        l2239 151E                          l2327 10E8                          l2407 1786  
                        l2423 1820                          l2415 17F8                          l2177 1B5E  
                        l2337 113C                          l2353 11BC                          l2417 1802  
                        l2273 1954                          l2265 1942                          l2433 1B22  
                        l2513 199E                          l2179 1B60                          l2371 1218  
                        l2347 1190                          l2419 180A                          l2435 1B28  
                        l2453 1646                          l2381 1250                          l2269 1950  
                        l2277 1958                          l2375 1230                          l2367 1200  
                        l2607 18BE                          l2465 165E                          l2449 1642  
                        l2385 126A                          l2377 1238                          l2545 16DA  
                        l2491 15B0                          l2483 1590                          l2475 1578  
                        l2395 1756                          l2397 1760                          l2637 1862  
                        l2495 15BA                          l2487 15A0                          l2479 1586  
                        l2399 1768                          l2595 18FE                          l2499 15C6  
                        l2599 1910                          _T0CS 007EAD                          _T0SE 007EAC  
                        u1800 1BA6                          u1811 1028                          u1831 1062  
                        _IPEN 007E87                          u1861 1174                          u1881 11A0  
               ??_Init_TM1640 001D                    _Delay_1Khz 195E                          _main 1836  
                ___ftpack@arg 0019                  ___ftpack@exp 001C                          fsr0h 000FEA  
                        fsr1h 000FE2                          fsr0l 000FE9                          fsr2h 000FDA  
                        fsr1l 000FE1                          indf2 000FDF                          fsr2l 000FD9  
                        pclat 000FFA                          prodh 000FF4                          prodl 000FF3  
                        start 0154                 __CFG_IESO$OFF 000000                 __CFG_FOSC$HS1 000000  
               __CFG_MCLRE$ON 000000                  ___ftmul@cntr 0064                  ___param_bank 000010  
                ___ftmul@sign 0065               __end_of_BusyADC 1BAC               __end_of_ReadADC 1B90  
      __size_of_My_USART_Init 001A                ??_TM1640_Delay 0019               __end_of_OpenADC 17EA  
                       ??_Run 002D                ??_TM1640_Start 001B                 __CFG_RETEN$ON 000000  
                       ?_main 0001               __end_of_Sys_Cyc 0154               __end_of___ftdiv 1164  
             __end_of___ftmul 1292               __end_of___llmod 16D4                         _T0PS0 007EA8  
                       _T0PS1 007EA9                         _T0PS2 007EAA                         _RC2IF 007D25  
             __end_of___lwdiv 179C                         i2l121 1462               __end_of___lwmod 1836  
                       _RCEN2 007B33                         i2l232 009C                         i2l236 00EE  
                       i2l239 011A                         i2l893 16C2             __end_of_ADC6_Init 1B80  
                       _TMR0H 000FD7                         _TMR0L 000FD6                         _TRISD 000F95  
                       _TRISE 000F96         ??_TM1640_Show_integer 0022                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
               __CFG_WRT4$OFF 000000                __CFG_EBRT0$OFF 000000                 __CFG_WRT5$OFF 000000  
              __CFG_EBRT1$OFF 000000                 __CFG_WRT6$OFF 000000                __CFG_EBRT2$OFF 000000  
               __CFG_WRT7$OFF 000000                __CFG_EBRT3$OFF 000000                __CFG_EBRT4$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBRT5$OFF 000000                __CFG_EBRT6$OFF 000000  
              __CFG_EBRT7$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBRTB$OFF 000000                 ___ftpack@sign 001D  
                  _ConvertADC 1BC2                 _Local_Key_FSM 003C                         tablat 000FF5  
                       status 000FD8            _TM1640_Writer_Byte 1874              __end_of_Get_ADC6 1740  
             __initialization 1ADC           __end_of_Init_TM1640 1A70                  __end_of_main 1874  
         ?_TM1640_Writer_Byte 0001              __end_of_Key_Init 1BC2           Key_FSM_Read@key_num 001E  
            __end_of_Key_Scan 1A24                    _Open2USART 1560                        ??_main 002D  
               __activetblptr 000001              ??_Manage_Message 001F          ??_TM1640_Writer_Byte 001B  
               _My_USART_Init 1B3A                        _ADCON0 000FC2                        _ADCON1 000FC1  
                      _ADCON2 000FC0              ___llmod@dividend 0001                        _ADRESH 000FC4  
                      _ADRESL 000FC3                        _T08BIT 007EAE              __end_of___ftpack 1560  
             __CFG_BBSIZ$BB2K 000000                        i2l2131 0090                        i2l1501 1988  
                      i2l2141 00B2                        i2l2151 0104                        i2l1505 198C  
                      i2l2137 00A0                        i2l1291 1A0A                        i2l1603 148E  
                      i2l1531 13BC                        i2l1523 13AC                        i2l2083 16B2  
                      i2l2075 1676                        i2l2091 19CE                        i2l2139 00A6  
                      i2l1509 1990                        i2l2077 1684                        i2l2149 00F2  
                      i2l1295 1A12                        i2l1287 1A02                        i2l1543 13EA  
                      i2l1535 13C4                        i2l1527 13B4                        i2l1519 13A4  
                      i2l2079 168C                        i2l1553 1404                        i2l1299 1A1A  
                      i2l1563 141E                        i2l1547 13F4                        i2l1539 13E0  
                      i2l1493 196C                        i2l1573 1438                        i2l1557 140E  
                      i2l1549 13FA                        i2l1591 1470                        i2l1583 1452  
                      i2l1567 1428                        i2l1559 1414                        i2l1497 197A  
                      i2l1577 1442                        i2l1569 142E                        i2l1595 147A  
                      i2l1587 145C                        i2l1579 1448                        i2l1599 1484  
               SetTimer0@_tmr 0019                        _RCREG2 000F1D              __end_of___lwtoft 1A4A  
                      _RCSTA2 000F22                   ?_Delay_1Khz 0001                        _TMR0IE 007F95  
                      _TMR0IF 007F92                        _SPBRG2 000F1E                        _TMR0ON 007EAF  
               TM1640_Delay@i 001A                     ??_BusyADC 0019                        _TXREG2 000F1C  
                   ??_ReadADC 001B                        _TXSTA2 000F21              __end_of_delay1ms 195E  
            __end_of_delay_ms 1B3A                 ??_Timer0_Init 001D                     ??_OpenADC 001B  
      TM1640_Writer_Byte@Date 001B                __CFG_XINST$OFF 000000          __end_of_Key_FSM_Read 1664  
        __end_of_Key_FSM_Scan 149A        TM1640_Writer_Byte@mask 001C                __CFG_STVREN$ON 000000  
                   ??_Sys_Cyc 000A                     ??___ftdiv 006C                     ??___ftmul 002A  
                   ??___llmod 0009          Sys_Cyc@_overturn_LED 0039                     ??___lwdiv 001D  
          __size_of_SetTimer0 0030                     ??___lwmod 001D                        clear_0 1AEA  
        __size_of_TM1640_Stop 0024                 ??_Show_Result 0022         ___ftmul@f3_as_product 0061  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                ?_My_USART_Init 0001          __size_of_GPIO_Config 000C  
         _TM1640_Writer_Dates 1AFE                   ?_ConvertADC 0001          __end_of_TM1640_Delay 1B6E  
        __end_of_TM1640_Start 1ADC                    __accesstop 0060       __end_of__initialization 1AF0  
                 _Init_TM1640 1A4A                  ?i2_SetTimer0 0001                 ___rparam_used 000001  
                  ___ftdiv@f1 0066                    ___ftdiv@f2 0069                    ___ftdiv@f3 0070  
          _USART2_ReceiveBuff 0034                    ___ftmul@f1 0024                    ___ftmul@f2 0027  
              __pcstackCOMRAM 0001          ?_TM1640_Writer_Dates 001E           __end_of_Timer0_Init 1A94  
                 ?_Open2USART 0019                    ___lwtoft@c 0021           __size_of_Delay_1Khz 0038  
                   ?_Get_ADC6 0001           __end_of_Show_Result 1B9E             __end_of_SetTimer0 19C6  
                  __pbssBANK0 0078                     ?_Key_Init 0001                     ?_Key_Scan 0001  
             __CFG_PLLCFG$OFF 000000       TM1640_Writer_Dates@Addr 001F            __end_of_LED_Number 1011  
     TM1640_Writer_Dates@Date 001E         ??_TM1640_Writer_Dates 001F           __size_of_ConvertADC 0004  
                   ?___ftpack 0019                     ?___lwtoft 0021               ??_My_USART_Init 001C  
                   ?_delay1ms 0001                    ??_Get_ADC6 002D                     ?_delay_ms 001C  
                     _SPBRGH2 000F1F                     _ADC6_Buff 0078                     _ADC6_Init 1B6E  
                  ??_Key_Init 0019                    ??_Key_Scan 0001         __size_of_Key_FSM_Read 0080  
       __size_of_Key_FSM_Scan 0102           __size_of_Open2USART 0084                       _BusyADC 1B9E  
                     _ReadADC 1B80               __CFG_PWRTEN$OFF 000000                       _OpenADC 179C  
                     __Hparam 0000                   _Timer0_Init 1A70                       __Lparam 0000  
               Sys_Cyc@_pulse 0018                       _Sys_Cyc 0008                       ___ftdiv 1012  
                     ___ftmul 1164                       ___llmod 1664                       ___lwdiv 1740  
                     ___lwmod 17EA                  __psmallconst 1000   __end_of_TM1640_Show_integer 1398  
                     __pcinit 1ADC                    ??___ftpack 001E         Sys_Cyc@_overturn_1Khz 0038  
                     __ramtop 1000                       __ptext0 1836                       __ptext1 1A70  
                     __ptext2 1996                       __ptext3 1B90                       __ptext4 18B2  
                     __ptext5 1B20                       __ptext6 1926                       __ptext7 1292  
                     __ptext8 17EA                       __ptext9 1740                    ??___lwtoft 0024  
                 _Show_Result 1B90                  __size_of_Run 003A              Open2USART@config 001B  
                  ??_delay1ms 0019         __size_of_TM1640_Delay 001A             __CFG_MSSPMSK$MSK7 000000  
                  ??_delay_ms 001E                  _Key_FSM_Read 15E4                  _Key_FSM_Scan 1398  
       __size_of_TM1640_Start 0024                    ?_ADC6_Init 0001                OpenADC@config2 0019  
              OpenADC@config3 001A                       main@num 0075          end_of_initialization 1AF0  
                ??_Delay_1Khz 0001          __size_ofi2_SetTimer0 0030                       postinc0 000FEE  
                _TM1640_Delay 1B54                  _TM1640_Start 1AB8                     _PORTEbits 000F84  
            TM1640_Delay@Time 0019            __end_of_Delay_1Khz 1996                     _TRISCbits 000F94  
                   _TRISGbits 000F98   __size_of_TM1640_Writer_Byte 003E             __CFG_SOSCSEL$HIGH 000000  
                ??_ConvertADC 0019                  ?_Init_TM1640 0001                   ___ftdiv@exp 0073  
                 ___ftmul@exp 0060               _USART2_TendBuff 0036                 ??_TM1640_Stop 001B  
            _Handle_01_Switch 0031                  ??_Open2USART 001B            __end_of_ConvertADC 1BC6  
               ??_GPIO_Config 0019           start_initialization 1ADC                   __end_of_Run 18EC  
                 ??_ADC6_Init 001E             __size_of_Get_ADC6 006C    TM1640_Show_integer@Numbers 0020  
     __size_of_Manage_Message 003A               ___llmod@divisor 0005             __size_of_Key_Init 000A  
           __size_of_Key_Scan 002E               ___llmod@counter 0009                     _SetTimer0 1996  
          __end_of_Open2USART 15E4               i2SetTimer0@_tmr 0001                     _Timer_Cyc 002D  
         __end_of_TM1640_Stop 1AB8             __size_of___ftpack 00C6                   __pbssCOMRAM 002D  
           __size_of___lwtoft 0026                 __pcstackBANK0 0060             __size_of_delay1ms 0038  
           __size_of_delay_ms 001A           __end_of_GPIO_Config 1BB8                      ?_BusyADC 0001  
                    ?_ReadADC 0019   __end_of_TM1640_Writer_Dates 1B20                    ?_SetTimer0 0019  
                    ?_OpenADC 0019                  ?_Timer0_Init 0001              ___lwdiv@dividend 0019  
           __CFG_CCP2MX$PORTC 000000                     __pintcode 0008                      ?_Sys_Cyc 0001  
                    ?___ftdiv 0066                      ?___ftmul 0024                      ?___llmod 0001  
                    ?___lwdiv 0019                      ?___lwmod 0019                  ?_Show_Result 0001  
                 __smallconst 1000         __end_of_My_USART_Init 1B54                   _LED2_switch 003A  
            ___lwdiv@quotient 001E                     delay1ms@a 0019                     delay1ms@b 001A  
                   delay1ms@c 001B               Open2USART@spbrg 0019                 OpenADC@config 001D  
                    _PIE1bits 000F9D                      _PIE3bits 000FA3          __size_of_Init_TM1640 0026  
                    _PIR1bits 000F9E                   _TM1640_Stop 1A94                    _ADCON0bits 000FC2  
                    _Get_ADC6 16D4                   _GPIO_Config 1BAC                   Delay_1Khz@a 0001  
                 Delay_1Khz@b 0002                   Delay_1Khz@c 0003  __size_of_TM1640_Show_integer 0106  
                    _Key_Init 1BB8                      _Key_Scan 19F6                _Manage_Message 18EC  
               ??i2_SetTimer0 0003                   ??_SetTimer0 001B              __size_of_BusyADC 000E  
            __size_of_ReadADC 0010                      __Hrparam 0000              __size_of_OpenADC 004E  
                    __Lrparam 0000                  __Lsmallconst 1000            __CFG_BOREN$SBORDIS 000000  
            __size_of_Sys_Cyc 014C              __size_of___ftdiv 0152              __size_of___ftmul 012E  
            __size_of___llmod 0070              __size_of___lwdiv 005C              __size_of___lwmod 004C  
                    ___ftpack 149A                      ___lwtoft 1A24                      _delay1ms 1926  
  __end_of_TM1640_Writer_Byte 18B2                      _delay_ms 1B20               ___lwdiv@divisor 001B  
             ___lwdiv@counter 001D                      __ptext10 1AFE                      __ptext11 16D4  
                    __ptext20 1560                      __ptext12 1A24                      __ptext21 18EC  
                    __ptext13 1164                      __ptext30 1B6E                      __ptext22 15E4  
                    __ptext14 1012                      __ptext31 179C                      __ptext23 1BB8  
                    __ptext15 149A                      __ptext24 1A4A                      __ptext16 1B80  
                    __ptext33 19C6                      __ptext25 1874                      __ptext17 1BC2  
                    __ptext34 1664                      __ptext26 1A94                      __ptext18 1B9E  
                    __ptext35 1398                      __ptext27 1AB8                      __ptext19 1B3A  
                    __ptext36 19F6                      __ptext28 1B54                      __ptext37 195E  
                    __ptext29 1BAC        __end_of_Manage_Message 1926                 __size_of_main 003E  
         __CFG_RTCOSC$SOSCREF 000000          __size_of_Timer0_Init 0024           __end_ofi2_SetTimer0 19F6  
         __CFG_INTOSCSEL$HIGH 000000                   delay_ms@_ms 001C                    _LED_Number 1001  
               _USART2_Status 003B            __CFG_WDTEN$SWDTDIS 000000                    _INTCONbits 000FF2  
        __size_of_Show_Result 000E               ?_Manage_Message 0001                      intlevel2 0000  
            ___lwmod@dividend 0019                    _RCSTA2bits 000F22            __CFG_WDTPS$1048576 000000  
             ___lwmod@divisor 001B               ___lwmod@counter 001D                 ?_Key_FSM_Read 0001  
               ?_Key_FSM_Scan 0001           __CFG_BORPWR$ZPBORMV 000000            __size_of_ADC6_Init 0012  
                 i2_SetTimer0 19C6           _TM1640_Show_integer 1292  
