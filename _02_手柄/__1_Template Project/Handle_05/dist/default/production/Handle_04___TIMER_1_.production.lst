

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed Dec 09 16:27:13 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F67K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    47  0000                     
    48                           	psect	smallconst
    49  001000                     __psmallconst:
    50                           	opt stack 0
    51  001000  00                 	db	0
    52  001001                     _LED_Number:
    53                           	opt stack 0
    54  001001  3F                 	db	63
    55  001002  06                 	db	6
    56  001003  5B                 	db	91
    57  001004  4F                 	db	79
    58  001005  66                 	db	102
    59  001006  6D                 	db	109
    60  001007  7D                 	db	125
    61  001008  07                 	db	7
    62  001009  7F                 	db	127
    63  00100A  6F                 	db	111
    64  00100B  77                 	db	119
    65  00100C  7C                 	db	124
    66  00100D  39                 	db	57
    67  00100E  5E                 	db	94
    68  00100F  79                 	db	121
    69  001010  71                 	db	113
    70  001011                     __end_of_LED_Number:
    71                           	opt stack 0
    72  0000                     _ADCON0	set	4034
    73  0000                     _ADCON0bits	set	4034
    74  0000                     _ADCON1	set	4033
    75  0000                     _ADCON2	set	4032
    76  0000                     _ADRESH	set	4036
    77  0000                     _ADRESL	set	4035
    78  0000                     _INTCONbits	set	4082
    79  0000                     _PIE1bits	set	3997
    80  0000                     _PIR1bits	set	3998
    81  0000                     _PORTEbits	set	3972
    82  0000                     _TMR0H	set	4055
    83  0000                     _TMR0L	set	4054
    84  0000                     _TRISCbits	set	3988
    85  0000                     _TRISD	set	3989
    86  0000                     _TRISE	set	3990
    87  0000                     _GIE	set	32663
    88  0000                     _IPEN	set	32391
    89  0000                     _PSA	set	32427
    90  0000                     _RC3	set	31763
    91  0000                     _RC4	set	31764
    92  0000                     _RD6	set	31774
    93  0000                     _RD7	set	31775
    94  0000                     _RE2	set	31778
    95  0000                     _RE3	set	31779
    96  0000                     _RE4	set	31780
    97  0000                     _RE5	set	31781
    98  0000                     _RE6	set	31782
    99  0000                     _RE7	set	31783
   100  0000                     _T08BIT	set	32430
   101  0000                     _T0CS	set	32429
   102  0000                     _T0PS0	set	32424
   103  0000                     _T0PS1	set	32425
   104  0000                     _T0PS2	set	32426
   105  0000                     _T0SE	set	32428
   106  0000                     _TMR0IE	set	32661
   107  0000                     _TMR0IF	set	32658
   108  0000                     _TMR0ON	set	32431
   109                           
   110                           ; #config settings
   111  001011  00                 	db	0	; dummy byte at the end
   112  0000                     
   113                           	psect	cinit
   114  001C1A                     __pcinit:
   115                           	opt stack 0
   116  001C1A                     start_initialization:
   117                           	opt stack 0
   118  001C1A                     __initialization:
   119                           	opt stack 0
   120                           
   121                           ; Clear objects allocated to COMRAM (22 bytes)
   122  001C1A  EE00  F030         	lfsr	0,__pbssCOMRAM
   123  001C1E  0E16               	movlw	22
   124  001C20                     clear_0:
   125  001C20  6AEE               	clrf	postinc0,c
   126  001C22  06E8               	decf	wreg,f,c
   127  001C24  E1FD               	bnz	clear_0
   128  001C26                     end_of_initialization:
   129                           	opt stack 0
   130  001C26                     __end_of__initialization:
   131                           	opt stack 0
   132  001C26  0E00               	movlw	low (__Lsmallconst shr (0+16))
   133  001C28  6EF8               	movwf	tblptru,c
   134  001C2A  0E10               	movlw	high __Lsmallconst
   135  001C2C  6EF7               	movwf	tblptrh,c
   136  001C2E  0100               	movlb	0
   137  001C30  EF0D  F00D         	goto	_main	;jump to C main() function
   138                           tblptru	equ	0xFF8
   139                           tblptrh	equ	0xFF7
   140                           postinc0	equ	0xFEE
   141                           wreg	equ	0xFE8
   142                           
   143                           	psect	bssCOMRAM
   144  000030                     __pbssCOMRAM:
   145                           	opt stack 0
   146  000030                     _Timer_Cyc:
   147                           	opt stack 0
   148  000030                     	ds	4
   149  000034                     _ADC6_Buff:
   150                           	opt stack 0
   151  000034                     	ds	3
   152  000037                     _Handle_01_Switch:
   153                           	opt stack 0
   154  000037                     	ds	2
   155  000039                     Run@_overturn_LED:
   156                           	opt stack 0
   157  000039                     	ds	1
   158  00003A                     Sys_Cyc@_overturn_1Khz:
   159                           	opt stack 0
   160  00003A                     	ds	1
   161  00003B                     _LED2_switch:
   162                           	opt stack 0
   163  00003B                     	ds	1
   164  00003C                     _Local_Key_FSM:
   165                           	opt stack 0
   166  00003C                     	ds	10
   167                           tblptru	equ	0xFF8
   168                           tblptrh	equ	0xFF7
   169                           postinc0	equ	0xFEE
   170                           wreg	equ	0xFE8
   171                           
   172                           	psect	cstackBANK0
   173  000060                     __pcstackBANK0:
   174                           	opt stack 0
   175  000060                     ___ftmul@exp:
   176                           	opt stack 0
   177                           
   178                           ; 1 bytes @ 0x0
   179  000060                     	ds	1
   180  000061                     ___ftmul@f3_as_product:
   181                           	opt stack 0
   182                           
   183                           ; 3 bytes @ 0x1
   184  000061                     	ds	3
   185  000064                     ___ftmul@cntr:
   186                           	opt stack 0
   187                           
   188                           ; 1 bytes @ 0x4
   189  000064                     	ds	1
   190  000065                     ___ftmul@sign:
   191                           	opt stack 0
   192                           
   193                           ; 1 bytes @ 0x5
   194  000065                     	ds	1
   195  000066                     ?___ftdiv:
   196                           	opt stack 0
   197  000066                     ___ftdiv@f1:
   198                           	opt stack 0
   199                           
   200                           ; 3 bytes @ 0x6
   201  000066                     	ds	3
   202  000069                     ___ftdiv@f2:
   203                           	opt stack 0
   204                           
   205                           ; 3 bytes @ 0x9
   206  000069                     	ds	3
   207  00006C                     ___ftdiv@cntr:
   208                           	opt stack 0
   209                           
   210                           ; 1 bytes @ 0xC
   211  00006C                     	ds	1
   212  00006D                     ___ftdiv@f3:
   213                           	opt stack 0
   214                           
   215                           ; 3 bytes @ 0xD
   216  00006D                     	ds	3
   217  000070                     ___ftdiv@exp:
   218                           	opt stack 0
   219                           
   220                           ; 1 bytes @ 0x10
   221  000070                     	ds	1
   222  000071                     ___ftdiv@sign:
   223                           	opt stack 0
   224                           
   225                           ; 1 bytes @ 0x11
   226  000071                     	ds	1
   227  000072                     TM1640_Show_Decimal@Numbers:
   228                           	opt stack 0
   229                           
   230                           ; 3 bytes @ 0x12
   231  000072                     	ds	3
   232  000075                     main@num:
   233                           	opt stack 0
   234                           
   235                           ; 3 bytes @ 0x15
   236  000075                     	ds	3
   237                           tblptru	equ	0xFF8
   238                           tblptrh	equ	0xFF7
   239                           postinc0	equ	0xFEE
   240                           wreg	equ	0xFE8
   241                           
   242                           	psect	cstackCOMRAM
   243  000001                     __pcstackCOMRAM:
   244                           	opt stack 0
   245  000001                     ?i2___llmod:
   246                           	opt stack 0
   247  000001                     Delay_1Khz@a:
   248                           	opt stack 0
   249  000001                     i2SetTimer0@_tmr:
   250                           	opt stack 0
   251  000001                     i2___llmod@dividend:
   252                           	opt stack 0
   253                           
   254                           ; 4 bytes @ 0x0
   255  000001                     	ds	1
   256  000002                     Delay_1Khz@b:
   257                           	opt stack 0
   258                           
   259                           ; 1 bytes @ 0x1
   260  000002                     	ds	1
   261  000003                     ??i2_SetTimer0:
   262  000003                     Delay_1Khz@c:
   263                           	opt stack 0
   264                           
   265                           ; 1 bytes @ 0x2
   266  000003                     	ds	2
   267  000005                     i2___llmod@divisor:
   268                           	opt stack 0
   269                           
   270                           ; 4 bytes @ 0x4
   271  000005                     	ds	4
   272  000009                     i2___llmod@counter:
   273                           	opt stack 0
   274                           
   275                           ; 1 bytes @ 0x8
   276  000009                     	ds	1
   277  00000A                     ??_Sys_Cyc:
   278                           
   279                           ; 0 bytes @ 0x9
   280  00000A                     	ds	14
   281  000018                     Sys_Cyc@_pulse:
   282                           	opt stack 0
   283                           
   284                           ; 1 bytes @ 0x17
   285  000018                     	ds	1
   286  000019                     ??_Key_FSM_Read:
   287  000019                     ?_ReadADC:
   288                           	opt stack 0
   289  000019                     ?___ftpack:
   290                           	opt stack 0
   291  000019                     ?___fttol:
   292                           	opt stack 0
   293  000019                     ?___llmod:
   294                           	opt stack 0
   295  000019                     TM1640_Delay@Time:
   296                           	opt stack 0
   297  000019                     OpenADC@config2:
   298                           	opt stack 0
   299  000019                     SetTimer0@_tmr:
   300                           	opt stack 0
   301  000019                     ___ftpack@arg:
   302                           	opt stack 0
   303  000019                     ___fttol@f1:
   304                           	opt stack 0
   305  000019                     ___llmod@dividend:
   306                           	opt stack 0
   307                           
   308                           ; 4 bytes @ 0x18
   309  000019                     	ds	1
   310  00001A                     TM1640_Delay@i:
   311                           	opt stack 0
   312  00001A                     OpenADC@config3:
   313                           	opt stack 0
   314                           
   315                           ; 1 bytes @ 0x19
   316  00001A                     	ds	1
   317  00001B                     ??_SetTimer0:
   318  00001B                     ??_OpenADC:
   319  00001B                     ??_ReadADC:
   320  00001B                     TM1640_Writer_Byte@Date:
   321                           	opt stack 0
   322                           
   323                           ; 1 bytes @ 0x1A
   324  00001B                     	ds	1
   325  00001C                     TM1640_Writer_Byte@mask:
   326                           	opt stack 0
   327  00001C                     ___ftpack@exp:
   328                           	opt stack 0
   329                           
   330                           ; 1 bytes @ 0x1B
   331  00001C                     	ds	1
   332  00001D                     ??___fttol:
   333  00001D                     Key_FSM_Read@temp:
   334                           	opt stack 0
   335  00001D                     OpenADC@config:
   336                           	opt stack 0
   337  00001D                     ___ftpack@sign:
   338                           	opt stack 0
   339  00001D                     ___llmod@divisor:
   340                           	opt stack 0
   341                           
   342                           ; 4 bytes @ 0x1C
   343  00001D                     	ds	1
   344  00001E                     ??___ftpack:
   345  00001E                     Key_FSM_Read@key_num:
   346                           	opt stack 0
   347                           
   348                           ; 1 bytes @ 0x1D
   349  00001E                     	ds	1
   350  00001F                     
   351                           ; 0 bytes @ 0x1E
   352  00001F                     	ds	2
   353  000021                     ?___lwtoft:
   354                           	opt stack 0
   355  000021                     ___llmod@counter:
   356                           	opt stack 0
   357  000021                     ___lwtoft@c:
   358                           	opt stack 0
   359                           
   360                           ; 2 bytes @ 0x20
   361  000021                     	ds	1
   362  000022                     ___fttol@sign1:
   363                           	opt stack 0
   364                           
   365                           ; 1 bytes @ 0x21
   366  000022                     	ds	1
   367  000023                     ___fttol@lval:
   368                           	opt stack 0
   369                           
   370                           ; 4 bytes @ 0x22
   371  000023                     	ds	1
   372  000024                     ?___ftmul:
   373                           	opt stack 0
   374  000024                     ___ftmul@f1:
   375                           	opt stack 0
   376                           
   377                           ; 3 bytes @ 0x23
   378  000024                     	ds	3
   379  000027                     ___fttol@exp1:
   380                           	opt stack 0
   381  000027                     ___ftmul@f2:
   382                           	opt stack 0
   383                           
   384                           ; 3 bytes @ 0x26
   385  000027                     	ds	1
   386  000028                     ?___awmod:
   387                           	opt stack 0
   388  000028                     ___awmod@dividend:
   389                           	opt stack 0
   390                           
   391                           ; 2 bytes @ 0x27
   392  000028                     	ds	2
   393  00002A                     ??___ftmul:
   394  00002A                     ___awmod@divisor:
   395                           	opt stack 0
   396                           
   397                           ; 2 bytes @ 0x29
   398  00002A                     	ds	2
   399  00002C                     ___awmod@counter:
   400                           	opt stack 0
   401                           
   402                           ; 1 bytes @ 0x2B
   403  00002C                     	ds	1
   404  00002D                     ??___ftdiv:
   405  00002D                     ___awmod@sign:
   406                           	opt stack 0
   407                           
   408                           ; 1 bytes @ 0x2C
   409  00002D                     	ds	1
   410  00002E                     TM1640_Writer_Dates@Date:
   411                           	opt stack 0
   412                           
   413                           ; 1 bytes @ 0x2D
   414  00002E                     	ds	1
   415  00002F                     TM1640_Writer_Dates@Addr:
   416                           	opt stack 0
   417                           
   418                           ; 1 bytes @ 0x2E
   419  00002F                     	ds	1
   420  000030                     tblptru	equ	0xFF8
   421                           tblptrh	equ	0xFF7
   422                           postinc0	equ	0xFEE
   423                           wreg	equ	0xFE8
   424                           
   425                           ; 0 bytes @ 0x2F
   426 ;;
   427 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   428 ;;
   429 ;; *************** function _main *****************
   430 ;; Defined at:
   431 ;;		line 36 in file "_01_USER/main.c"
   432 ;; Parameters:    Size  Location     Type
   433 ;;		None
   434 ;; Auto vars:     Size  Location     Type
   435 ;;  num             3   21[BANK0 ] float 
   436 ;; Return value:  Size  Location     Type
   437 ;;                  2   18[None  ] int 
   438 ;; Registers used:
   439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   440 ;; Tracked objects:
   441 ;;		On entry : 0/0
   442 ;;		On exit  : 0/0
   443 ;;		Unchanged: 0/0
   444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   446 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   448 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   449 ;;Total ram usage:        3 bytes
   450 ;; Hardware stack levels required when called:    8
   451 ;; This function calls:
   452 ;;		_ADC6_Init
   453 ;;		_GPIO_Config
   454 ;;		_Init_TM1640
   455 ;;		_Key_Init
   456 ;;		_Manage_Message
   457 ;;		_Run
   458 ;;		_Show_Result
   459 ;;		_Timer0_Init
   460 ;; This function is called by:
   461 ;;		Startup code after reset
   462 ;; This function uses a non-reentrant model
   463 ;;
   464                           
   465                           	psect	text0
   466  001A1A                     __ptext0:
   467                           	opt stack 0
   468  001A1A                     _main:
   469                           	opt stack 23
   470                           
   471                           ;main.c: 38: float num = 0;
   472                           
   473                           ;incstack = 0
   474  001A1A  0E00               	movlw	0
   475  001A1C  0100               	movlb	0	; () banked
   476  001A1E  6F75               	movwf	main@num& (0+255),b
   477  001A20  0E00               	movlw	0
   478  001A22  0100               	movlb	0	; () banked
   479  001A24  6F76               	movwf	(main@num+1)& (0+255),b
   480  001A26  0E00               	movlw	0
   481  001A28  0100               	movlb	0	; () banked
   482  001A2A  6F77               	movwf	(main@num+2)& (0+255),b
   483                           
   484                           ; BSR set to: 0
   485                           ;main.c: 39: GPIO_Config();
   486  001A2C  EC48  F00E         	call	_GPIO_Config	;wreg free
   487                           
   488                           ;main.c: 40: Key_Init();
   489  001A30  EC4E  F00E         	call	_Key_Init	;wreg free
   490                           
   491                           ;main.c: 41: Timer0_Init();
   492  001A34  ECC6  F00D         	call	_Timer0_Init	;wreg free
   493                           
   494                           ;main.c: 42: Init_TM1640();
   495  001A38  ECB3  F00D         	call	_Init_TM1640	;wreg free
   496                           
   497                           ;main.c: 43: ADC6_Init();
   498  001A3C  EC30  F00E         	call	_ADC6_Init	;wreg free
   499  001A40  D000               	goto	l2458
   500  001A42                     l2458:
   501                           
   502                           ;main.c: 46: {
   503                           ;main.c: 48: Manage_Message();
   504  001A42  ECA0  F00D         	call	_Manage_Message	;wreg free
   505                           
   506                           ;main.c: 49: Run();
   507  001A46  ECC9  F00C         	call	_Run	;wreg free
   508                           
   509                           ;main.c: 50: Show_Result();
   510  001A4A  EC27  F00E         	call	_Show_Result	;wreg free
   511  001A4E  D7F9               	goto	l2458
   512                           
   513                           ;main.c: 52: }
   514                           ;main.c: 55: return 0;
   515                           ;	Return value of _main is never used
   516  001A50  EF7F  F000         	goto	start
   517  001A54                     __end_of_main:
   518                           	opt stack 0
   519                           tblptru	equ	0xFF8
   520                           tblptrh	equ	0xFF7
   521                           postinc0	equ	0xFEE
   522                           wreg	equ	0xFE8
   523                           
   524 ;; *************** function _Timer0_Init *****************
   525 ;; Defined at:
   526 ;;		line 41 in file "_01_USER/My_Timer.c"
   527 ;; Parameters:    Size  Location     Type
   528 ;;		None
   529 ;; Auto vars:     Size  Location     Type
   530 ;;		None
   531 ;; Return value:  Size  Location     Type
   532 ;;		None               void
   533 ;; Registers used:
   534 ;;		wreg, status,2, status,0, cstack
   535 ;; Tracked objects:
   536 ;;		On entry : 0/0
   537 ;;		On exit  : 0/0
   538 ;;		Unchanged: 0/0
   539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   544 ;;Total ram usage:        0 bytes
   545 ;; Hardware stack levels used:    1
   546 ;; Hardware stack levels required when called:    4
   547 ;; This function calls:
   548 ;;		_SetTimer0
   549 ;; This function is called by:
   550 ;;		_main
   551 ;; This function uses a non-reentrant model
   552 ;;
   553                           
   554                           	psect	text1
   555  001B8C                     __ptext1:
   556                           	opt stack 0
   557  001B8C                     _Timer0_Init:
   558                           	opt stack 26
   559                           
   560                           ;My_Timer.c: 43: T08BIT = 0;
   561                           
   562                           ;incstack = 0
   563  001B8C  9CD5               	bcf	4053,6,c	;volatile
   564                           
   565                           ;My_Timer.c: 44: T0CS = 0;
   566  001B8E  9AD5               	bcf	4053,5,c	;volatile
   567                           
   568                           ;My_Timer.c: 45: T0SE = 0;
   569  001B90  98D5               	bcf	4053,4,c	;volatile
   570                           
   571                           ;My_Timer.c: 46: PSA = 0;
   572  001B92  96D5               	bcf	4053,3,c	;volatile
   573                           
   574                           ;My_Timer.c: 47: T0PS2 = 1;
   575  001B94  84D5               	bsf	4053,2,c	;volatile
   576                           
   577                           ;My_Timer.c: 48: T0PS1 = 1;
   578  001B96  82D5               	bsf	4053,1,c	;volatile
   579                           
   580                           ;My_Timer.c: 49: T0PS0 = 1;
   581  001B98  80D5               	bsf	4053,0,c	;volatile
   582                           
   583                           ;My_Timer.c: 63: SetTimer0(1);
   584  001B9A  0E00               	movlw	0
   585  001B9C  6E1A               	movwf	SetTimer0@_tmr+1,c
   586  001B9E  0E01               	movlw	1
   587  001BA0  6E19               	movwf	SetTimer0@_tmr,c
   588  001BA2  EC46  F00D         	call	_SetTimer0	;wreg free
   589                           
   590                           ;My_Timer.c: 64: TMR0ON = 1;
   591  001BA6  8ED5               	bsf	4053,7,c	;volatile
   592                           
   593                           ;My_Timer.c: 65: TMR0IE = 1;
   594  001BA8  8AF2               	bsf	intcon,5,c	;volatile
   595                           
   596                           ;My_Timer.c: 66: IPEN = 0;GIE = 1;
   597  001BAA  9ED0               	bcf	4048,7,c	;volatile
   598  001BAC  8EF2               	bsf	intcon,7,c	;volatile
   599  001BAE  0012               	return		;funcret
   600  001BB0                     __end_of_Timer0_Init:
   601                           	opt stack 0
   602                           tblptru	equ	0xFF8
   603                           tblptrh	equ	0xFF7
   604                           intcon	equ	0xFF2
   605                           postinc0	equ	0xFEE
   606                           wreg	equ	0xFE8
   607                           
   608 ;; *************** function _SetTimer0 *****************
   609 ;; Defined at:
   610 ;;		line 79 in file "_01_USER/My_Timer.c"
   611 ;; Parameters:    Size  Location     Type
   612 ;;  _tmr            2   24[COMRAM] unsigned int 
   613 ;; Auto vars:     Size  Location     Type
   614 ;;		None
   615 ;; Return value:  Size  Location     Type
   616 ;;		None               void
   617 ;; Registers used:
   618 ;;		wreg, status,2, status,0
   619 ;; Tracked objects:
   620 ;;		On entry : 0/0
   621 ;;		On exit  : 0/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   624 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   626 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   627 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   628 ;;Total ram usage:        4 bytes
   629 ;; Hardware stack levels used:    1
   630 ;; Hardware stack levels required when called:    3
   631 ;; This function calls:
   632 ;;		Nothing
   633 ;; This function is called by:
   634 ;;		_Timer0_Init
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638                           	psect	text2
   639  001A8C                     __ptext2:
   640                           	opt stack 0
   641  001A8C                     _SetTimer0:
   642                           	opt stack 26
   643                           
   644                           ;My_Timer.c: 81: if(_tmr > 0xffff) _tmr = 0xffff;
   645                           
   646                           ;incstack = 0
   647  001A8C  D003               	goto	l2342
   648  001A8E  6819               	setf	SetTimer0@_tmr,c
   649  001A90  681A               	setf	SetTimer0@_tmr+1,c
   650  001A92  D000               	goto	l2342
   651  001A94                     l2342:
   652                           
   653                           ;My_Timer.c: 82: _tmr=0xffff-_tmr;
   654  001A94  C019  F01B         	movff	SetTimer0@_tmr,??_SetTimer0
   655  001A98  C01A  F01C         	movff	SetTimer0@_tmr+1,??_SetTimer0+1
   656  001A9C  1E1B               	comf	??_SetTimer0,f,c
   657  001A9E  1E1C               	comf	??_SetTimer0+1,f,c
   658  001AA0  4A1B               	infsnz	??_SetTimer0,f,c
   659  001AA2  2A1C               	incf	??_SetTimer0+1,f,c
   660  001AA4  0EFF               	movlw	255
   661  001AA6  241B               	addwf	??_SetTimer0,w,c
   662  001AA8  6E19               	movwf	SetTimer0@_tmr,c
   663  001AAA  0EFF               	movlw	255
   664  001AAC  201C               	addwfc	??_SetTimer0+1,w,c
   665  001AAE  6E1A               	movwf	SetTimer0@_tmr+1,c
   666                           
   667                           ;My_Timer.c: 83: TMR0H = _tmr/256;
   668  001AB0  501A               	movf	SetTimer0@_tmr+1,w,c
   669  001AB2  6ED7               	movwf	4055,c	;volatile
   670                           
   671                           ;My_Timer.c: 84: TMR0L = _tmr%256;
   672  001AB4  C019  FFD6         	movff	SetTimer0@_tmr,4054	;volatile
   673                           
   674                           ;My_Timer.c: 85: TMR0IF = 0;
   675  001AB8  94F2               	bcf	intcon,2,c	;volatile
   676  001ABA  0012               	return		;funcret
   677  001ABC                     __end_of_SetTimer0:
   678                           	opt stack 0
   679                           tblptru	equ	0xFF8
   680                           tblptrh	equ	0xFF7
   681                           intcon	equ	0xFF2
   682                           postinc0	equ	0xFEE
   683                           wreg	equ	0xFE8
   684                           
   685 ;; *************** function _Show_Result *****************
   686 ;; Defined at:
   687 ;;		line 88 in file "_01_USER/Run.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;		None
   690 ;; Auto vars:     Size  Location     Type
   691 ;;		None
   692 ;; Return value:  Size  Location     Type
   693 ;;		None               void
   694 ;; Registers used:
   695 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   705 ;;Total ram usage:        0 bytes
   706 ;; Hardware stack levels used:    1
   707 ;; Hardware stack levels required when called:    7
   708 ;; This function calls:
   709 ;;		_TM1640_Show_Decimal
   710 ;; This function is called by:
   711 ;;		_main
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           	psect	text3
   716  001C4E                     __ptext3:
   717                           	opt stack 0
   718  001C4E                     _Show_Result:
   719                           	opt stack 23
   720                           
   721                           ;Run.c: 90: TM1640_Show_Decimal( ADC6_Buff );
   722                           
   723                           ;incstack = 0
   724  001C4E  C034  F072         	movff	_ADC6_Buff,TM1640_Show_Decimal@Numbers	;volatile
   725  001C52  C035  F073         	movff	_ADC6_Buff+1,TM1640_Show_Decimal@Numbers+1	;volatile
   726  001C56  C036  F074         	movff	_ADC6_Buff+2,TM1640_Show_Decimal@Numbers+2	;volatile
   727  001C5A  EC09  F008         	call	_TM1640_Show_Decimal	;wreg free
   728  001C5E  0012               	return		;funcret
   729  001C60                     __end_of_Show_Result:
   730                           	opt stack 0
   731                           tblptru	equ	0xFF8
   732                           tblptrh	equ	0xFF7
   733                           intcon	equ	0xFF2
   734                           postinc0	equ	0xFEE
   735                           wreg	equ	0xFE8
   736                           
   737 ;; *************** function _TM1640_Show_Decimal *****************
   738 ;; Defined at:
   739 ;;		line 45 in file "_01_USER/TM1640.c"
   740 ;; Parameters:    Size  Location     Type
   741 ;;  Numbers         3   18[BANK0 ] float 
   742 ;; Auto vars:     Size  Location     Type
   743 ;;		None
   744 ;; Return value:  Size  Location     Type
   745 ;;		None               void
   746 ;; Registers used:
   747 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   748 ;; Tracked objects:
   749 ;;		On entry : 0/0
   750 ;;		On exit  : 0/0
   751 ;;		Unchanged: 0/0
   752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   753 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   756 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   757 ;;Total ram usage:        3 bytes
   758 ;; Hardware stack levels used:    1
   759 ;; Hardware stack levels required when called:    6
   760 ;; This function calls:
   761 ;;		_TM1640_Writer_Dates
   762 ;;		___awmod
   763 ;;		___ftdiv
   764 ;;		___ftmul
   765 ;;		___fttol
   766 ;; This function is called by:
   767 ;;		_Show_Result
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771                           	psect	text4
   772  001012                     __ptext4:
   773                           	opt stack 0
   774  001012                     _TM1640_Show_Decimal:
   775                           	opt stack 23
   776                           
   777                           ;TM1640.c: 47: Numbers *= 100;
   778                           
   779                           ;incstack = 0
   780  001012  C072  F024         	movff	TM1640_Show_Decimal@Numbers,___ftmul@f1
   781  001016  C073  F025         	movff	TM1640_Show_Decimal@Numbers+1,___ftmul@f1+1
   782  00101A  C074  F026         	movff	TM1640_Show_Decimal@Numbers+2,___ftmul@f1+2
   783  00101E  0E00               	movlw	0
   784  001020  6E27               	movwf	___ftmul@f2,c
   785  001022  0EC8               	movlw	200
   786  001024  6E28               	movwf	___ftmul@f2+1,c
   787  001026  0E42               	movlw	66
   788  001028  6E29               	movwf	___ftmul@f2+2,c
   789  00102A  EC7F  F009         	call	___ftmul	;wreg free
   790  00102E  C024  F072         	movff	?___ftmul,TM1640_Show_Decimal@Numbers
   791  001032  C025  F073         	movff	?___ftmul+1,TM1640_Show_Decimal@Numbers+1
   792  001036  C026  F074         	movff	?___ftmul+2,TM1640_Show_Decimal@Numbers+2
   793                           
   794                           ;TM1640.c: 49: TM1640_Writer_Dates(3,LED_Number[(int)Numbers%10]); Numbers/=10;
   795  00103A  C072  F019         	movff	TM1640_Show_Decimal@Numbers,___fttol@f1
   796  00103E  C073  F01A         	movff	TM1640_Show_Decimal@Numbers+1,___fttol@f1+1
   797  001042  C074  F01B         	movff	TM1640_Show_Decimal@Numbers+2,___fttol@f1+2
   798  001046  EC16  F00A         	call	___fttol	;wreg free
   799  00104A  C019  F028         	movff	?___fttol,___awmod@dividend
   800  00104E  C01A  F029         	movff	?___fttol+1,___awmod@dividend+1
   801  001052  0E00               	movlw	0
   802  001054  6E2B               	movwf	___awmod@divisor+1,c
   803  001056  0E0A               	movlw	10
   804  001058  6E2A               	movwf	___awmod@divisor,c
   805  00105A  EC7B  F00B         	call	___awmod	;wreg free
   806  00105E  0E01               	movlw	low _LED_Number
   807  001060  2428               	addwf	?___awmod,w,c
   808  001062  6EF6               	movwf	tblptrl,c
   809  001064  0E10               	movlw	high _LED_Number
   810  001066  2029               	addwfc	?___awmod+1,w,c
   811  001068  6EF7               	movwf	tblptrh,c
   812  00106A                     	if	0	;There are less than 3 active tblptr bytes
   813  00106A                     	endif
   814  00106A  0008               	tblrd		*
   815  00106C  CFF5 F02E          	movff	tablat,TM1640_Writer_Dates@Date
   816  001070  0E03               	movlw	3
   817  001072  ECFC  F00D         	call	_TM1640_Writer_Dates
   818  001076  C072  F066         	movff	TM1640_Show_Decimal@Numbers,___ftdiv@f1
   819  00107A  C073  F067         	movff	TM1640_Show_Decimal@Numbers+1,___ftdiv@f1+1
   820  00107E  C074  F068         	movff	TM1640_Show_Decimal@Numbers+2,___ftdiv@f1+2
   821  001082  0E00               	movlw	0
   822  001084  0100               	movlb	0	; () banked
   823  001086  6F69               	movwf	___ftdiv@f2& (0+255),b
   824  001088  0E20               	movlw	32
   825  00108A  0100               	movlb	0	; () banked
   826  00108C  6F6A               	movwf	(___ftdiv@f2+1)& (0+255),b
   827  00108E  0E41               	movlw	65
   828  001090  0100               	movlb	0	; () banked
   829  001092  6F6B               	movwf	(___ftdiv@f2+2)& (0+255),b
   830  001094  ECDC  F008         	call	___ftdiv	;wreg free
   831  001098  C066  F072         	movff	?___ftdiv,TM1640_Show_Decimal@Numbers
   832  00109C  C067  F073         	movff	?___ftdiv+1,TM1640_Show_Decimal@Numbers+1
   833  0010A0  C068  F074         	movff	?___ftdiv+2,TM1640_Show_Decimal@Numbers+2
   834                           
   835                           ;TM1640.c: 50: TM1640_Writer_Dates(2,LED_Number[(int)Numbers%10]); Numbers/=10;
   836  0010A4  C072  F019         	movff	TM1640_Show_Decimal@Numbers,___fttol@f1
   837  0010A8  C073  F01A         	movff	TM1640_Show_Decimal@Numbers+1,___fttol@f1+1
   838  0010AC  C074  F01B         	movff	TM1640_Show_Decimal@Numbers+2,___fttol@f1+2
   839  0010B0  EC16  F00A         	call	___fttol	;wreg free
   840  0010B4  C019  F028         	movff	?___fttol,___awmod@dividend
   841  0010B8  C01A  F029         	movff	?___fttol+1,___awmod@dividend+1
   842  0010BC  0E00               	movlw	0
   843  0010BE  6E2B               	movwf	___awmod@divisor+1,c
   844  0010C0  0E0A               	movlw	10
   845  0010C2  6E2A               	movwf	___awmod@divisor,c
   846  0010C4  EC7B  F00B         	call	___awmod	;wreg free
   847  0010C8  0E01               	movlw	low _LED_Number
   848  0010CA  2428               	addwf	?___awmod,w,c
   849  0010CC  6EF6               	movwf	tblptrl,c
   850  0010CE  0E10               	movlw	high _LED_Number
   851  0010D0  2029               	addwfc	?___awmod+1,w,c
   852  0010D2  6EF7               	movwf	tblptrh,c
   853  0010D4                     	if	0	;There are less than 3 active tblptr bytes
   854  0010D4                     	endif
   855  0010D4  0008               	tblrd		*
   856  0010D6  CFF5 F02E          	movff	tablat,TM1640_Writer_Dates@Date
   857  0010DA  0E02               	movlw	2
   858  0010DC  ECFC  F00D         	call	_TM1640_Writer_Dates
   859  0010E0  C072  F066         	movff	TM1640_Show_Decimal@Numbers,___ftdiv@f1
   860  0010E4  C073  F067         	movff	TM1640_Show_Decimal@Numbers+1,___ftdiv@f1+1
   861  0010E8  C074  F068         	movff	TM1640_Show_Decimal@Numbers+2,___ftdiv@f1+2
   862  0010EC  0E00               	movlw	0
   863  0010EE  0100               	movlb	0	; () banked
   864  0010F0  6F69               	movwf	___ftdiv@f2& (0+255),b
   865  0010F2  0E20               	movlw	32
   866  0010F4  0100               	movlb	0	; () banked
   867  0010F6  6F6A               	movwf	(___ftdiv@f2+1)& (0+255),b
   868  0010F8  0E41               	movlw	65
   869  0010FA  0100               	movlb	0	; () banked
   870  0010FC  6F6B               	movwf	(___ftdiv@f2+2)& (0+255),b
   871  0010FE  ECDC  F008         	call	___ftdiv	;wreg free
   872  001102  C066  F072         	movff	?___ftdiv,TM1640_Show_Decimal@Numbers
   873  001106  C067  F073         	movff	?___ftdiv+1,TM1640_Show_Decimal@Numbers+1
   874  00110A  C068  F074         	movff	?___ftdiv+2,TM1640_Show_Decimal@Numbers+2
   875                           
   876                           ;TM1640.c: 51: TM1640_Writer_Dates(1,LED_Number[(int)Numbers%10]|0x80); Numbers/=10;
   877  00110E  C072  F019         	movff	TM1640_Show_Decimal@Numbers,___fttol@f1
   878  001112  C073  F01A         	movff	TM1640_Show_Decimal@Numbers+1,___fttol@f1+1
   879  001116  C074  F01B         	movff	TM1640_Show_Decimal@Numbers+2,___fttol@f1+2
   880  00111A  EC16  F00A         	call	___fttol	;wreg free
   881  00111E  C019  F028         	movff	?___fttol,___awmod@dividend
   882  001122  C01A  F029         	movff	?___fttol+1,___awmod@dividend+1
   883  001126  0E00               	movlw	0
   884  001128  6E2B               	movwf	___awmod@divisor+1,c
   885  00112A  0E0A               	movlw	10
   886  00112C  6E2A               	movwf	___awmod@divisor,c
   887  00112E  EC7B  F00B         	call	___awmod	;wreg free
   888  001132  0E01               	movlw	low _LED_Number
   889  001134  2428               	addwf	?___awmod,w,c
   890  001136  6EF6               	movwf	tblptrl,c
   891  001138  0E10               	movlw	high _LED_Number
   892  00113A  2029               	addwfc	?___awmod+1,w,c
   893  00113C  6EF7               	movwf	tblptrh,c
   894  00113E                     	if	0	;There are less than 3 active tblptr bytes
   895  00113E                     	endif
   896  00113E  0008               	tblrd		*
   897  001140  50F5               	movf	tablat,w,c
   898  001142  0980               	iorlw	128
   899  001144  6E2E               	movwf	TM1640_Writer_Dates@Date,c
   900  001146  0E01               	movlw	1
   901  001148  ECFC  F00D         	call	_TM1640_Writer_Dates
   902  00114C  C072  F066         	movff	TM1640_Show_Decimal@Numbers,___ftdiv@f1
   903  001150  C073  F067         	movff	TM1640_Show_Decimal@Numbers+1,___ftdiv@f1+1
   904  001154  C074  F068         	movff	TM1640_Show_Decimal@Numbers+2,___ftdiv@f1+2
   905  001158  0E00               	movlw	0
   906  00115A  0100               	movlb	0	; () banked
   907  00115C  6F69               	movwf	___ftdiv@f2& (0+255),b
   908  00115E  0E20               	movlw	32
   909  001160  0100               	movlb	0	; () banked
   910  001162  6F6A               	movwf	(___ftdiv@f2+1)& (0+255),b
   911  001164  0E41               	movlw	65
   912  001166  0100               	movlb	0	; () banked
   913  001168  6F6B               	movwf	(___ftdiv@f2+2)& (0+255),b
   914  00116A  ECDC  F008         	call	___ftdiv	;wreg free
   915  00116E  C066  F072         	movff	?___ftdiv,TM1640_Show_Decimal@Numbers
   916  001172  C067  F073         	movff	?___ftdiv+1,TM1640_Show_Decimal@Numbers+1
   917  001176  C068  F074         	movff	?___ftdiv+2,TM1640_Show_Decimal@Numbers+2
   918                           
   919                           ;TM1640.c: 52: TM1640_Writer_Dates(0,LED_Number[(int)Numbers%10]);
   920  00117A  C072  F019         	movff	TM1640_Show_Decimal@Numbers,___fttol@f1
   921  00117E  C073  F01A         	movff	TM1640_Show_Decimal@Numbers+1,___fttol@f1+1
   922  001182  C074  F01B         	movff	TM1640_Show_Decimal@Numbers+2,___fttol@f1+2
   923  001186  EC16  F00A         	call	___fttol	;wreg free
   924  00118A  C019  F028         	movff	?___fttol,___awmod@dividend
   925  00118E  C01A  F029         	movff	?___fttol+1,___awmod@dividend+1
   926  001192  0E00               	movlw	0
   927  001194  6E2B               	movwf	___awmod@divisor+1,c
   928  001196  0E0A               	movlw	10
   929  001198  6E2A               	movwf	___awmod@divisor,c
   930  00119A  EC7B  F00B         	call	___awmod	;wreg free
   931  00119E  0E01               	movlw	low _LED_Number
   932  0011A0  2428               	addwf	?___awmod,w,c
   933  0011A2  6EF6               	movwf	tblptrl,c
   934  0011A4  0E10               	movlw	high _LED_Number
   935  0011A6  2029               	addwfc	?___awmod+1,w,c
   936  0011A8  6EF7               	movwf	tblptrh,c
   937  0011AA                     	if	0	;There are less than 3 active tblptr bytes
   938  0011AA                     	endif
   939  0011AA  0008               	tblrd		*
   940  0011AC  CFF5 F02E          	movff	tablat,TM1640_Writer_Dates@Date
   941  0011B0  0E00               	movlw	0
   942  0011B2  ECFC  F00D         	call	_TM1640_Writer_Dates
   943  0011B6  0012               	return		;funcret
   944  0011B8                     __end_of_TM1640_Show_Decimal:
   945                           	opt stack 0
   946                           tblptru	equ	0xFF8
   947                           tblptrh	equ	0xFF7
   948                           tblptrl	equ	0xFF6
   949                           tablat	equ	0xFF5
   950                           intcon	equ	0xFF2
   951                           postinc0	equ	0xFEE
   952                           wreg	equ	0xFE8
   953                           
   954 ;; *************** function ___fttol *****************
   955 ;; Defined at:
   956 ;;		line 44 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;  f1              3   24[COMRAM] float 
   959 ;; Auto vars:     Size  Location     Type
   960 ;;  lval            4   34[COMRAM] unsigned long 
   961 ;;  exp1            1   38[COMRAM] unsigned char 
   962 ;;  sign1           1   33[COMRAM] unsigned char 
   963 ;; Return value:  Size  Location     Type
   964 ;;                  4   24[COMRAM] long 
   965 ;; Registers used:
   966 ;;		wreg, status,2, status,0
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   972 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   973 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   974 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   975 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   976 ;;Total ram usage:       15 bytes
   977 ;; Hardware stack levels used:    1
   978 ;; Hardware stack levels required when called:    3
   979 ;; This function calls:
   980 ;;		Nothing
   981 ;; This function is called by:
   982 ;;		_TM1640_Show_Decimal
   983 ;; This function uses a non-reentrant model
   984 ;;
   985                           
   986                           	psect	text5
   987  00142C                     __ptext5:
   988                           	opt stack 0
   989  00142C                     ___fttol:
   990                           	opt stack 25
   991                           
   992                           ;incstack = 0
   993  00142C  C01B  F01D         	movff	___fttol@f1+2,??___fttol
   994  001430  6A1E               	clrf	(??___fttol+1)& (0+255),c
   995  001432  6A1F               	clrf	(??___fttol+2)& (0+255),c
   996  001434  341A               	rlcf	___fttol@f1+1,w,c
   997  001436  361D               	rlcf	??___fttol& (0+255),f,c
   998  001438  E301               	bnc	u1891
   999  00143A  801E               	bsf	(??___fttol+1)& (0+255),0,c
  1000  00143C                     u1891:
  1001  00143C  501D               	movf	??___fttol,w,c
  1002  00143E  6E27               	movwf	___fttol@exp1,c
  1003  001440  5027               	movf	___fttol@exp1,w,c
  1004  001442  A4D8               	btfss	status,2,c
  1005  001444  D009               	goto	l2262
  1006  001446  0E00               	movlw	0
  1007  001448  6E19               	movwf	?___fttol,c
  1008  00144A  0E00               	movlw	0
  1009  00144C  6E1A               	movwf	?___fttol+1,c
  1010  00144E  0E00               	movlw	0
  1011  001450  6E1B               	movwf	?___fttol+2,c
  1012  001452  0E00               	movlw	0
  1013  001454  6E1C               	movwf	?___fttol+3,c
  1014  001456  0012               	return	
  1015  001458                     l2262:
  1016  001458  0E17               	movlw	23
  1017  00145A  6E1D               	movwf	??___fttol& (0+255),c
  1018  00145C  C019  F01E         	movff	___fttol@f1,??___fttol+1
  1019  001460  C01A  F01F         	movff	___fttol@f1+1,??___fttol+2
  1020  001464  C01B  F020         	movff	___fttol@f1+2,??___fttol+3
  1021  001468  281D               	incf	??___fttol,w,c
  1022  00146A  6E21               	movwf	(??___fttol+4)& (0+255),c
  1023  00146C  D004               	goto	u1910
  1024  00146E                     u1915:
  1025  00146E  90D8               	bcf	status,0,c
  1026  001470  3220               	rrcf	??___fttol+3,f,c
  1027  001472  321F               	rrcf	??___fttol+2,f,c
  1028  001474  321E               	rrcf	??___fttol+1,f,c
  1029  001476                     u1910:
  1030  001476  2E21               	decfsz	(??___fttol+4)& (0+255),f,c
  1031  001478  D7FA               	goto	u1915
  1032  00147A  501E               	movf	??___fttol+1,w,c
  1033  00147C  6E22               	movwf	___fttol@sign1,c
  1034  00147E  8E1A               	bsf	___fttol@f1+1,7,c
  1035  001480  0EFF               	movlw	255
  1036  001482  1619               	andwf	___fttol@f1,f,c
  1037  001484  0EFF               	movlw	255
  1038  001486  161A               	andwf	___fttol@f1+1,f,c
  1039  001488  0E00               	movlw	0
  1040  00148A  161B               	andwf	___fttol@f1+2,f,c
  1041  00148C  5019               	movf	___fttol@f1,w,c
  1042  00148E  6E23               	movwf	___fttol@lval,c
  1043  001490  501A               	movf	___fttol@f1+1,w,c
  1044  001492  6E24               	movwf	___fttol@lval+1,c
  1045  001494  501B               	movf	___fttol@f1+2,w,c
  1046  001496  6E25               	movwf	___fttol@lval+2,c
  1047  001498  6A26               	clrf	___fttol@lval+3,c
  1048  00149A  0E8E               	movlw	142
  1049  00149C  5E27               	subwf	___fttol@exp1,f,c
  1050  00149E  AE27               	btfss	___fttol@exp1,7,c
  1051  0014A0  D017               	goto	l2284
  1052  0014A2  5027               	movf	___fttol@exp1,w,c
  1053  0014A4  0A80               	xorlw	128
  1054  0014A6  0F8F               	addlw	143
  1055  0014A8  B0D8               	btfsc	status,0,c
  1056  0014AA  D00A               	goto	l2280
  1057  0014AC  0E00               	movlw	0
  1058  0014AE  6E19               	movwf	?___fttol,c
  1059  0014B0  0E00               	movlw	0
  1060  0014B2  6E1A               	movwf	?___fttol+1,c
  1061  0014B4  0E00               	movlw	0
  1062  0014B6  6E1B               	movwf	?___fttol+2,c
  1063  0014B8  0E00               	movlw	0
  1064  0014BA  6E1C               	movwf	?___fttol+3,c
  1065  0014BC  0012               	return	
  1066  0014BE  D000               	goto	l2280
  1067  0014C0                     l2280:
  1068  0014C0  90D8               	bcf	status,0,c
  1069  0014C2  3226               	rrcf	___fttol@lval+3,f,c
  1070  0014C4  3225               	rrcf	___fttol@lval+2,f,c
  1071  0014C6  3224               	rrcf	___fttol@lval+1,f,c
  1072  0014C8  3223               	rrcf	___fttol@lval,f,c
  1073  0014CA  3E27               	incfsz	___fttol@exp1,f,c
  1074  0014CC  D7F9               	goto	l2280
  1075  0014CE  D019               	goto	l2294
  1076  0014D0                     l2284:
  1077  0014D0  0E17               	movlw	23
  1078  0014D2  6427               	cpfsgt	___fttol@exp1,c
  1079  0014D4  D011               	goto	l2292
  1080  0014D6  0E00               	movlw	0
  1081  0014D8  6E19               	movwf	?___fttol,c
  1082  0014DA  0E00               	movlw	0
  1083  0014DC  6E1A               	movwf	?___fttol+1,c
  1084  0014DE  0E00               	movlw	0
  1085  0014E0  6E1B               	movwf	?___fttol+2,c
  1086  0014E2  0E00               	movlw	0
  1087  0014E4  6E1C               	movwf	?___fttol+3,c
  1088  0014E6  0012               	return	
  1089  0014E8  D007               	goto	l2292
  1090  0014EA                     l2290:
  1091  0014EA  90D8               	bcf	status,0,c
  1092  0014EC  3623               	rlcf	___fttol@lval,f,c
  1093  0014EE  3624               	rlcf	___fttol@lval+1,f,c
  1094  0014F0  3625               	rlcf	___fttol@lval+2,f,c
  1095  0014F2  3626               	rlcf	___fttol@lval+3,f,c
  1096  0014F4  0627               	decf	___fttol@exp1,f,c
  1097  0014F6  D000               	goto	l2292
  1098  0014F8                     l2292:
  1099  0014F8  5027               	movf	___fttol@exp1,w,c
  1100  0014FA  B4D8               	btfsc	status,2,c
  1101  0014FC  D002               	goto	l2294
  1102  0014FE  D7F5               	goto	l2290
  1103  001500  D000               	goto	l2294
  1104  001502                     l2294:
  1105  001502  5022               	movf	___fttol@sign1,w,c
  1106  001504  B4D8               	btfsc	status,2,c
  1107  001506  D009               	goto	l2298
  1108  001508  1E26               	comf	___fttol@lval+3,f,c
  1109  00150A  1E25               	comf	___fttol@lval+2,f,c
  1110  00150C  1E24               	comf	___fttol@lval+1,f,c
  1111  00150E  6C23               	negf	___fttol@lval,c
  1112  001510  0E00               	movlw	0
  1113  001512  2224               	addwfc	___fttol@lval+1,f,c
  1114  001514  2225               	addwfc	___fttol@lval+2,f,c
  1115  001516  2226               	addwfc	___fttol@lval+3,f,c
  1116  001518  D000               	goto	l2298
  1117  00151A                     l2298:
  1118  00151A  C023  F019         	movff	___fttol@lval,?___fttol
  1119  00151E  C024  F01A         	movff	___fttol@lval+1,?___fttol+1
  1120  001522  C025  F01B         	movff	___fttol@lval+2,?___fttol+2
  1121  001526  C026  F01C         	movff	___fttol@lval+3,?___fttol+3
  1122  00152A  0012               	return	
  1123  00152C  0012               	return		;funcret
  1124  00152E                     __end_of___fttol:
  1125                           	opt stack 0
  1126                           tblptru	equ	0xFF8
  1127                           tblptrh	equ	0xFF7
  1128                           tblptrl	equ	0xFF6
  1129                           tablat	equ	0xFF5
  1130                           intcon	equ	0xFF2
  1131                           postinc0	equ	0xFEE
  1132                           wreg	equ	0xFE8
  1133                           status	equ	0xFD8
  1134                           
  1135 ;; *************** function ___awmod *****************
  1136 ;; Defined at:
  1137 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;  dividend        2   39[COMRAM] int 
  1140 ;;  divisor         2   41[COMRAM] int 
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;  sign            1   44[COMRAM] unsigned char 
  1143 ;;  counter         1   43[COMRAM] unsigned char 
  1144 ;; Return value:  Size  Location     Type
  1145 ;;                  2   39[COMRAM] int 
  1146 ;; Registers used:
  1147 ;;		wreg, status,2, status,0
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1153 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1154 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1156 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1157 ;;Total ram usage:        6 bytes
  1158 ;; Hardware stack levels used:    1
  1159 ;; Hardware stack levels required when called:    3
  1160 ;; This function calls:
  1161 ;;		Nothing
  1162 ;; This function is called by:
  1163 ;;		_TM1640_Show_Decimal
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           	psect	text6
  1168  0016F6                     __ptext6:
  1169                           	opt stack 0
  1170  0016F6                     ___awmod:
  1171                           	opt stack 25
  1172                           
  1173                           ;incstack = 0
  1174  0016F6  0E00               	movlw	0
  1175  0016F8  6E2D               	movwf	___awmod@sign,c
  1176  0016FA  AE29               	btfss	___awmod@dividend+1,7,c
  1177  0016FC  D007               	goto	l2228
  1178  0016FE  6C28               	negf	___awmod@dividend,c
  1179  001700  1E29               	comf	___awmod@dividend+1,f,c
  1180  001702  B0D8               	btfsc	status,0,c
  1181  001704  2A29               	incf	___awmod@dividend+1,f,c
  1182  001706  0E01               	movlw	1
  1183  001708  6E2D               	movwf	___awmod@sign,c
  1184  00170A  D000               	goto	l2228
  1185  00170C                     l2228:
  1186  00170C  AE2B               	btfss	___awmod@divisor+1,7,c
  1187  00170E  D005               	goto	l2232
  1188  001710  6C2A               	negf	___awmod@divisor,c
  1189  001712  1E2B               	comf	___awmod@divisor+1,f,c
  1190  001714  B0D8               	btfsc	status,0,c
  1191  001716  2A2B               	incf	___awmod@divisor+1,f,c
  1192  001718  D000               	goto	l2232
  1193  00171A                     l2232:
  1194  00171A  502A               	movf	___awmod@divisor,w,c
  1195  00171C  102B               	iorwf	___awmod@divisor+1,w,c
  1196  00171E  B4D8               	btfsc	status,2,c
  1197  001720  D01D               	goto	l2248
  1198  001722  0E01               	movlw	1
  1199  001724  6E2C               	movwf	___awmod@counter,c
  1200  001726  D005               	goto	l2238
  1201  001728                     l2236:
  1202  001728  90D8               	bcf	status,0,c
  1203  00172A  362A               	rlcf	___awmod@divisor,f,c
  1204  00172C  362B               	rlcf	___awmod@divisor+1,f,c
  1205  00172E  2A2C               	incf	___awmod@counter,f,c
  1206  001730  D000               	goto	l2238
  1207  001732                     l2238:
  1208  001732  BE2B               	btfsc	___awmod@divisor+1,7,c
  1209  001734  D002               	goto	l2240
  1210  001736  D7F8               	goto	l2236
  1211  001738  D000               	goto	l2240
  1212  00173A                     l2240:
  1213  00173A  502A               	movf	___awmod@divisor,w,c
  1214  00173C  5C28               	subwf	___awmod@dividend,w,c
  1215  00173E  502B               	movf	___awmod@divisor+1,w,c
  1216  001740  5829               	subwfb	___awmod@dividend+1,w,c
  1217  001742  A0D8               	btfss	status,0,c
  1218  001744  D005               	goto	l2244
  1219  001746  502A               	movf	___awmod@divisor,w,c
  1220  001748  5E28               	subwf	___awmod@dividend,f,c
  1221  00174A  502B               	movf	___awmod@divisor+1,w,c
  1222  00174C  5A29               	subwfb	___awmod@dividend+1,f,c
  1223  00174E  D000               	goto	l2244
  1224  001750                     l2244:
  1225  001750  90D8               	bcf	status,0,c
  1226  001752  322B               	rrcf	___awmod@divisor+1,f,c
  1227  001754  322A               	rrcf	___awmod@divisor,f,c
  1228  001756  2E2C               	decfsz	___awmod@counter,f,c
  1229  001758  D7F0               	goto	l2240
  1230  00175A  D000               	goto	l2248
  1231  00175C                     l2248:
  1232  00175C  502D               	movf	___awmod@sign,w,c
  1233  00175E  B4D8               	btfsc	status,2,c
  1234  001760  D005               	goto	l2252
  1235  001762  6C28               	negf	___awmod@dividend,c
  1236  001764  1E29               	comf	___awmod@dividend+1,f,c
  1237  001766  B0D8               	btfsc	status,0,c
  1238  001768  2A29               	incf	___awmod@dividend+1,f,c
  1239  00176A  D000               	goto	l2252
  1240  00176C                     l2252:
  1241  00176C  C028  F028         	movff	___awmod@dividend,?___awmod
  1242  001770  C029  F029         	movff	___awmod@dividend+1,?___awmod+1
  1243  001774  0012               	return	
  1244  001776  0012               	return		;funcret
  1245  001778                     __end_of___awmod:
  1246                           	opt stack 0
  1247                           tblptru	equ	0xFF8
  1248                           tblptrh	equ	0xFF7
  1249                           tblptrl	equ	0xFF6
  1250                           tablat	equ	0xFF5
  1251                           intcon	equ	0xFF2
  1252                           postinc0	equ	0xFEE
  1253                           wreg	equ	0xFE8
  1254                           status	equ	0xFD8
  1255                           
  1256 ;; *************** function _TM1640_Writer_Dates *****************
  1257 ;; Defined at:
  1258 ;;		line 66 in file "_01_USER/TM1640.c"
  1259 ;; Parameters:    Size  Location     Type
  1260 ;;  Addr            1    wreg     unsigned char 
  1261 ;;  Date            1   45[COMRAM] unsigned char 
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;  Addr            1   46[COMRAM] unsigned char 
  1264 ;; Return value:  Size  Location     Type
  1265 ;;		None               void
  1266 ;; Registers used:
  1267 ;;		wreg, status,2, status,0, cstack
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1273 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1274 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1276 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1277 ;;Total ram usage:        2 bytes
  1278 ;; Hardware stack levels used:    1
  1279 ;; Hardware stack levels required when called:    5
  1280 ;; This function calls:
  1281 ;;		_TM1640_Start
  1282 ;;		_TM1640_Stop
  1283 ;;		_TM1640_Writer_Byte
  1284 ;; This function is called by:
  1285 ;;		_TM1640_Show_Decimal
  1286 ;;		_TM1640_Show_integer
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           	psect	text7
  1291  001BF8                     __ptext7:
  1292                           	opt stack 0
  1293  001BF8                     _TM1640_Writer_Dates:
  1294                           	opt stack 23
  1295                           
  1296                           ;incstack = 0
  1297                           ;TM1640_Writer_Dates@Addr stored from wreg
  1298  001BF8  6E2F               	movwf	TM1640_Writer_Dates@Addr,c
  1299                           
  1300                           ;TM1640.c: 68: if((Addr >= 0) && (Addr <= 3))
  1301  001BFA  0E04               	movlw	4
  1302  001BFC  602F               	cpfslt	TM1640_Writer_Dates@Addr,c
  1303  001BFE  0012               	return	
  1304                           
  1305                           ;TM1640.c: 69: {
  1306                           ;TM1640.c: 70: TM1640_Start();
  1307  001C00  ECEA  F00D         	call	_TM1640_Start	;wreg free
  1308                           
  1309                           ;TM1640.c: 71: TM1640_Writer_Byte(0xC0 + Addr);
  1310  001C04  502F               	movf	TM1640_Writer_Dates@Addr,w,c
  1311  001C06  0FC0               	addlw	192
  1312  001C08  ECEE  F00C         	call	_TM1640_Writer_Byte
  1313                           
  1314                           ;TM1640.c: 72: TM1640_Writer_Byte(Date);
  1315  001C0C  502E               	movf	TM1640_Writer_Dates@Date,w,c
  1316  001C0E  ECEE  F00C         	call	_TM1640_Writer_Byte
  1317                           
  1318                           ;TM1640.c: 73: TM1640_Stop();
  1319  001C12  ECD8  F00D         	call	_TM1640_Stop	;wreg free
  1320  001C16  0012               	return	
  1321  001C18  0012               	return		;funcret
  1322  001C1A                     __end_of_TM1640_Writer_Dates:
  1323                           	opt stack 0
  1324                           tblptru	equ	0xFF8
  1325                           tblptrh	equ	0xFF7
  1326                           tblptrl	equ	0xFF6
  1327                           tablat	equ	0xFF5
  1328                           intcon	equ	0xFF2
  1329                           postinc0	equ	0xFEE
  1330                           wreg	equ	0xFE8
  1331                           status	equ	0xFD8
  1332                           
  1333 ;; *************** function _Run *****************
  1334 ;; Defined at:
  1335 ;;		line 46 in file "_01_USER/Run.c"
  1336 ;; Parameters:    Size  Location     Type
  1337 ;;		None
  1338 ;; Auto vars:     Size  Location     Type
  1339 ;;		None
  1340 ;; Return value:  Size  Location     Type
  1341 ;;		None               void
  1342 ;; Registers used:
  1343 ;;		wreg, status,2, status,0, cstack
  1344 ;; Tracked objects:
  1345 ;;		On entry : 0/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1353 ;;Total ram usage:        0 bytes
  1354 ;; Hardware stack levels used:    1
  1355 ;; Hardware stack levels required when called:    6
  1356 ;; This function calls:
  1357 ;;		_Get_ADC6
  1358 ;;		___llmod
  1359 ;; This function is called by:
  1360 ;;		_main
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           	psect	text8
  1365  001992                     __ptext8:
  1366                           	opt stack 0
  1367  001992                     _Run:
  1368                           	opt stack 24
  1369                           
  1370                           ;Run.c: 48: static unsigned char _overturn_LED = 0;
  1371                           ;Run.c: 51: if( Handle_01_Switch.ADC6 ) Get_ADC6();
  1372                           
  1373                           ;incstack = 0
  1374  001992  5038               	movf	_Handle_01_Switch+1,w,c
  1375  001994  A4D8               	btfss	status,2,c
  1376  001996  EC6C  F00C         	call	_Get_ADC6	;wreg free
  1377                           
  1378                           ;Run.c: 54: if( Timer_Cyc%1000 == 0 )
  1379  00199A  C030  F019         	movff	_Timer_Cyc,___llmod@dividend
  1380  00199E  C031  F01A         	movff	_Timer_Cyc+1,___llmod@dividend+1
  1381  0019A2  C032  F01B         	movff	_Timer_Cyc+2,___llmod@dividend+2
  1382  0019A6  C033  F01C         	movff	_Timer_Cyc+3,___llmod@dividend+3
  1383  0019AA  0EE8               	movlw	232
  1384  0019AC  6E1D               	movwf	___llmod@divisor,c
  1385  0019AE  0E03               	movlw	3
  1386  0019B0  6E1E               	movwf	___llmod@divisor+1,c
  1387  0019B2  0E00               	movlw	0
  1388  0019B4  6E1F               	movwf	___llmod@divisor+2,c
  1389  0019B6  0E00               	movlw	0
  1390  0019B8  6E20               	movwf	___llmod@divisor+3,c
  1391  0019BA  ECFC  F00B         	call	___llmod	;wreg free
  1392  0019BE  5019               	movf	?___llmod,w,c
  1393  0019C0  101A               	iorwf	?___llmod+1,w,c
  1394  0019C2  101B               	iorwf	?___llmod+2,w,c
  1395  0019C4  101C               	iorwf	?___llmod+3,w,c
  1396  0019C6  A4D8               	btfss	status,2,c
  1397  0019C8  0012               	return	
  1398                           
  1399                           ;Run.c: 55: {
  1400                           ;Run.c: 56: _overturn_LED = ~_overturn_LED;
  1401  0019CA  1E39               	comf	Run@_overturn_LED,f,c
  1402                           
  1403                           ;Run.c: 57: if(_overturn_LED) PORTEbits.RE5=0;
  1404  0019CC  5039               	movf	Run@_overturn_LED,w,c
  1405  0019CE  B4D8               	btfsc	status,2,c
  1406  0019D0  D002               	goto	l311
  1407  0019D2  9A84               	bcf	3972,5,c	;volatile
  1408  0019D4  0012               	return	
  1409  0019D6                     l311:
  1410                           
  1411                           ;Run.c: 58: else PORTEbits.RE5=1;
  1412  0019D6  8A84               	bsf	3972,5,c	;volatile
  1413  0019D8  0012               	return	
  1414  0019DA  0012               	return		;funcret
  1415  0019DC                     __end_of_Run:
  1416                           	opt stack 0
  1417                           tblptru	equ	0xFF8
  1418                           tblptrh	equ	0xFF7
  1419                           tblptrl	equ	0xFF6
  1420                           tablat	equ	0xFF5
  1421                           intcon	equ	0xFF2
  1422                           postinc0	equ	0xFEE
  1423                           wreg	equ	0xFE8
  1424                           status	equ	0xFD8
  1425                           
  1426 ;; *************** function ___llmod *****************
  1427 ;; Defined at:
  1428 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;  dividend        4   24[COMRAM] unsigned long 
  1431 ;;  divisor         4   28[COMRAM] unsigned long 
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;  counter         1   32[COMRAM] unsigned char 
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  4   24[COMRAM] unsigned long 
  1436 ;; Registers used:
  1437 ;;		wreg, status,2, status,0
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1443 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1444 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1446 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1447 ;;Total ram usage:        9 bytes
  1448 ;; Hardware stack levels used:    1
  1449 ;; Hardware stack levels required when called:    3
  1450 ;; This function calls:
  1451 ;;		Nothing
  1452 ;; This function is called by:
  1453 ;;		_Run
  1454 ;; This function uses a non-reentrant model
  1455 ;;
  1456                           
  1457                           	psect	text9
  1458  0017F8                     __ptext9:
  1459                           	opt stack 0
  1460  0017F8                     ___llmod:
  1461                           	opt stack 26
  1462                           
  1463                           ;incstack = 0
  1464  0017F8  501D               	movf	___llmod@divisor,w,c
  1465  0017FA  101E               	iorwf	___llmod@divisor+1,w,c
  1466  0017FC  101F               	iorwf	___llmod@divisor+2,w,c
  1467  0017FE  1020               	iorwf	___llmod@divisor+3,w,c
  1468  001800  B4D8               	btfsc	status,2,c
  1469  001802  D029               	goto	l824
  1470  001804  0E01               	movlw	1
  1471  001806  6E21               	movwf	___llmod@counter,c
  1472  001808  D007               	goto	l2386
  1473  00180A                     l2384:
  1474  00180A  90D8               	bcf	status,0,c
  1475  00180C  361D               	rlcf	___llmod@divisor,f,c
  1476  00180E  361E               	rlcf	___llmod@divisor+1,f,c
  1477  001810  361F               	rlcf	___llmod@divisor+2,f,c
  1478  001812  3620               	rlcf	___llmod@divisor+3,f,c
  1479  001814  2A21               	incf	___llmod@counter,f,c
  1480  001816  D000               	goto	l2386
  1481  001818                     l2386:
  1482  001818  BE20               	btfsc	___llmod@divisor+3,7,c
  1483  00181A  D002               	goto	l2388
  1484  00181C  D7F6               	goto	l2384
  1485  00181E  D000               	goto	l2388
  1486  001820                     l2388:
  1487  001820  501D               	movf	___llmod@divisor,w,c
  1488  001822  5C19               	subwf	___llmod@dividend,w,c
  1489  001824  501E               	movf	___llmod@divisor+1,w,c
  1490  001826  581A               	subwfb	___llmod@dividend+1,w,c
  1491  001828  501F               	movf	___llmod@divisor+2,w,c
  1492  00182A  581B               	subwfb	___llmod@dividend+2,w,c
  1493  00182C  5020               	movf	___llmod@divisor+3,w,c
  1494  00182E  581C               	subwfb	___llmod@dividend+3,w,c
  1495  001830  A0D8               	btfss	status,0,c
  1496  001832  D009               	goto	l2392
  1497  001834  501D               	movf	___llmod@divisor,w,c
  1498  001836  5E19               	subwf	___llmod@dividend,f,c
  1499  001838  501E               	movf	___llmod@divisor+1,w,c
  1500  00183A  5A1A               	subwfb	___llmod@dividend+1,f,c
  1501  00183C  501F               	movf	___llmod@divisor+2,w,c
  1502  00183E  5A1B               	subwfb	___llmod@dividend+2,f,c
  1503  001840  5020               	movf	___llmod@divisor+3,w,c
  1504  001842  5A1C               	subwfb	___llmod@dividend+3,f,c
  1505  001844  D000               	goto	l2392
  1506  001846                     l2392:
  1507  001846  90D8               	bcf	status,0,c
  1508  001848  3220               	rrcf	___llmod@divisor+3,f,c
  1509  00184A  321F               	rrcf	___llmod@divisor+2,f,c
  1510  00184C  321E               	rrcf	___llmod@divisor+1,f,c
  1511  00184E  321D               	rrcf	___llmod@divisor,f,c
  1512  001850  2E21               	decfsz	___llmod@counter,f,c
  1513  001852  D7E6               	goto	l2388
  1514  001854  D000               	goto	l824
  1515  001856                     l824:
  1516  001856  C019  F019         	movff	___llmod@dividend,?___llmod
  1517  00185A  C01A  F01A         	movff	___llmod@dividend+1,?___llmod+1
  1518  00185E  C01B  F01B         	movff	___llmod@dividend+2,?___llmod+2
  1519  001862  C01C  F01C         	movff	___llmod@dividend+3,?___llmod+3
  1520  001866  0012               	return		;funcret
  1521  001868                     __end_of___llmod:
  1522                           	opt stack 0
  1523                           tblptru	equ	0xFF8
  1524                           tblptrh	equ	0xFF7
  1525                           tblptrl	equ	0xFF6
  1526                           tablat	equ	0xFF5
  1527                           intcon	equ	0xFF2
  1528                           postinc0	equ	0xFEE
  1529                           wreg	equ	0xFE8
  1530                           status	equ	0xFD8
  1531                           
  1532 ;; *************** function _Get_ADC6 *****************
  1533 ;; Defined at:
  1534 ;;		line 67 in file "_01_USER/My_ADC.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;		None
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;		None
  1539 ;; Return value:  Size  Location     Type
  1540 ;;		None               void
  1541 ;; Registers used:
  1542 ;;		wreg, status,2, status,0, cstack
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1552 ;;Total ram usage:        0 bytes
  1553 ;; Hardware stack levels used:    1
  1554 ;; Hardware stack levels required when called:    5
  1555 ;; This function calls:
  1556 ;;		_BusyADC
  1557 ;;		_ConvertADC
  1558 ;;		_ReadADC
  1559 ;;		___ftdiv
  1560 ;;		___ftmul
  1561 ;;		___lwtoft
  1562 ;; This function is called by:
  1563 ;;		_Run
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           	psect	text10
  1568  0018D8                     __ptext10:
  1569                           	opt stack 0
  1570  0018D8                     _Get_ADC6:
  1571                           	opt stack 24
  1572                           
  1573                           ;My_ADC.c: 69: ConvertADC();
  1574                           
  1575                           ;incstack = 0
  1576  0018D8  EC53  F00E         	call	_ConvertADC	;wreg free
  1577                           
  1578                           ;My_ADC.c: 70: while(BusyADC());
  1579  0018DC  D000               	goto	l2376
  1580  0018DE                     l2376:
  1581  0018DE  EC41  F00E         	call	_BusyADC	;wreg free
  1582  0018E2  0900               	iorlw	0
  1583  0018E4  A4D8               	btfss	status,2,c
  1584  0018E6  D7FB               	goto	l2376
  1585                           
  1586                           ;My_ADC.c: 71: ADC6_Buff =(unsigned int)ReadADC()*4.096f/4095.0f;
  1587  0018E8  0E12               	movlw	18
  1588  0018EA  6E27               	movwf	___ftmul@f2,c
  1589  0018EC  0E83               	movlw	131
  1590  0018EE  6E28               	movwf	___ftmul@f2+1,c
  1591  0018F0  0E40               	movlw	64
  1592  0018F2  6E29               	movwf	___ftmul@f2+2,c
  1593  0018F4  EC39  F00E         	call	_ReadADC	;wreg free
  1594  0018F8  C019  F021         	movff	?_ReadADC,___lwtoft@c
  1595  0018FC  C01A  F022         	movff	?_ReadADC+1,___lwtoft@c+1
  1596  001900  EC8D  F00D         	call	___lwtoft	;wreg free
  1597  001904  C021  F024         	movff	?___lwtoft,___ftmul@f1
  1598  001908  C022  F025         	movff	?___lwtoft+1,___ftmul@f1+1
  1599  00190C  C023  F026         	movff	?___lwtoft+2,___ftmul@f1+2
  1600  001910  EC7F  F009         	call	___ftmul	;wreg free
  1601  001914  C024  F066         	movff	?___ftmul,___ftdiv@f1
  1602  001918  C025  F067         	movff	?___ftmul+1,___ftdiv@f1+1
  1603  00191C  C026  F068         	movff	?___ftmul+2,___ftdiv@f1+2
  1604  001920  0EF0               	movlw	240
  1605  001922  0100               	movlb	0	; () banked
  1606  001924  6F69               	movwf	___ftdiv@f2& (0+255),b
  1607  001926  0E7F               	movlw	127
  1608  001928  0100               	movlb	0	; () banked
  1609  00192A  6F6A               	movwf	(___ftdiv@f2+1)& (0+255),b
  1610  00192C  0E45               	movlw	69
  1611  00192E  0100               	movlb	0	; () banked
  1612  001930  6F6B               	movwf	(___ftdiv@f2+2)& (0+255),b
  1613  001932  ECDC  F008         	call	___ftdiv	;wreg free
  1614  001936  C066  F034         	movff	?___ftdiv,_ADC6_Buff	;volatile
  1615  00193A  C067  F035         	movff	?___ftdiv+1,_ADC6_Buff+1	;volatile
  1616  00193E  C068  F036         	movff	?___ftdiv+2,_ADC6_Buff+2	;volatile
  1617  001942  0012               	return		;funcret
  1618  001944                     __end_of_Get_ADC6:
  1619                           	opt stack 0
  1620                           tblptru	equ	0xFF8
  1621                           tblptrh	equ	0xFF7
  1622                           tblptrl	equ	0xFF6
  1623                           tablat	equ	0xFF5
  1624                           intcon	equ	0xFF2
  1625                           postinc0	equ	0xFEE
  1626                           wreg	equ	0xFE8
  1627                           status	equ	0xFD8
  1628                           
  1629 ;; *************** function ___lwtoft *****************
  1630 ;; Defined at:
  1631 ;;		line 28 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  1632 ;; Parameters:    Size  Location     Type
  1633 ;;  c               2   32[COMRAM] unsigned int 
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;		None
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  3   32[COMRAM] float 
  1638 ;; Registers used:
  1639 ;;		wreg, status,2, status,0, cstack
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1645 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1648 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1649 ;;Total ram usage:        3 bytes
  1650 ;; Hardware stack levels used:    1
  1651 ;; Hardware stack levels required when called:    4
  1652 ;; This function calls:
  1653 ;;		___ftpack
  1654 ;; This function is called by:
  1655 ;;		_Get_ADC6
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659                           	psect	text11
  1660  001B1A                     __ptext11:
  1661                           	opt stack 0
  1662  001B1A                     ___lwtoft:
  1663                           	opt stack 24
  1664                           
  1665                           ;incstack = 0
  1666  001B1A  C021  F019         	movff	___lwtoft@c,___ftpack@arg
  1667  001B1E  C022  F01A         	movff	___lwtoft@c+1,___ftpack@arg+1
  1668  001B22  6A1B               	clrf	___ftpack@arg+2,c
  1669  001B24  0E8E               	movlw	142
  1670  001B26  6E1C               	movwf	___ftpack@exp,c
  1671  001B28  0E00               	movlw	0
  1672  001B2A  6E1D               	movwf	___ftpack@sign,c
  1673  001B2C  EC18  F00B         	call	___ftpack	;wreg free
  1674  001B30  C019  F021         	movff	?___ftpack,?___lwtoft
  1675  001B34  C01A  F022         	movff	?___ftpack+1,?___lwtoft+1
  1676  001B38  C01B  F023         	movff	?___ftpack+2,?___lwtoft+2
  1677  001B3C  0012               	return	
  1678  001B3E  0012               	return		;funcret
  1679  001B40                     __end_of___lwtoft:
  1680                           	opt stack 0
  1681                           tblptru	equ	0xFF8
  1682                           tblptrh	equ	0xFF7
  1683                           tblptrl	equ	0xFF6
  1684                           tablat	equ	0xFF5
  1685                           intcon	equ	0xFF2
  1686                           postinc0	equ	0xFEE
  1687                           wreg	equ	0xFE8
  1688                           status	equ	0xFD8
  1689                           
  1690 ;; *************** function ___ftmul *****************
  1691 ;; Defined at:
  1692 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;  f1              3   35[COMRAM] float 
  1695 ;;  f2              3   38[COMRAM] float 
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;  f3_as_produc    3    1[BANK0 ] unsigned um
  1698 ;;  sign            1    5[BANK0 ] unsigned char 
  1699 ;;  cntr            1    4[BANK0 ] unsigned char 
  1700 ;;  exp             1    0[BANK0 ] unsigned char 
  1701 ;; Return value:  Size  Location     Type
  1702 ;;                  3   35[COMRAM] float 
  1703 ;; Registers used:
  1704 ;;		wreg, status,2, status,0, cstack
  1705 ;; Tracked objects:
  1706 ;;		On entry : 0/0
  1707 ;;		On exit  : 0/0
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1710 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1711 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1712 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1713 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1714 ;;Total ram usage:       15 bytes
  1715 ;; Hardware stack levels used:    1
  1716 ;; Hardware stack levels required when called:    4
  1717 ;; This function calls:
  1718 ;;		___ftpack
  1719 ;; This function is called by:
  1720 ;;		_TM1640_Show_Decimal
  1721 ;;		_Get_ADC6
  1722 ;; This function uses a non-reentrant model
  1723 ;;
  1724                           
  1725                           	psect	text12
  1726  0012FE                     __ptext12:
  1727                           	opt stack 0
  1728  0012FE                     ___ftmul:
  1729                           	opt stack 24
  1730                           
  1731                           ;incstack = 0
  1732  0012FE  C026  F02A         	movff	___ftmul@f1+2,??___ftmul
  1733  001302  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  1734  001304  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  1735  001306  3425               	rlcf	___ftmul@f1+1,w,c
  1736  001308  362A               	rlcf	??___ftmul& (0+255),f,c
  1737  00130A  E301               	bnc	u1771
  1738  00130C  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  1739  00130E                     u1771:
  1740  00130E  502A               	movf	??___ftmul,w,c
  1741  001310  0100               	movlb	0	; () banked
  1742  001312  6F60               	movwf	___ftmul@exp& (0+255),b
  1743  001314  0100               	movlb	0	; () banked
  1744  001316  5160               	movf	___ftmul@exp& (0+255),w,b
  1745  001318  A4D8               	btfss	status,2,c
  1746  00131A  D007               	goto	l2178
  1747                           
  1748                           ; BSR set to: 0
  1749  00131C  0E00               	movlw	0
  1750  00131E  6E24               	movwf	?___ftmul,c
  1751  001320  0E00               	movlw	0
  1752  001322  6E25               	movwf	?___ftmul+1,c
  1753  001324  0E00               	movlw	0
  1754  001326  6E26               	movwf	?___ftmul+2,c
  1755                           
  1756                           ; BSR set to: 0
  1757  001328  0012               	return	
  1758  00132A                     l2178:
  1759                           
  1760                           ; BSR set to: 0
  1761  00132A  C029  F02A         	movff	___ftmul@f2+2,??___ftmul
  1762  00132E  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  1763  001330  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  1764  001332  3428               	rlcf	___ftmul@f2+1,w,c
  1765  001334  362A               	rlcf	??___ftmul& (0+255),f,c
  1766  001336  E301               	bnc	u1791
  1767  001338  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  1768  00133A                     u1791:
  1769  00133A  502A               	movf	??___ftmul,w,c
  1770  00133C  0100               	movlb	0	; () banked
  1771  00133E  6F65               	movwf	___ftmul@sign& (0+255),b
  1772  001340  0100               	movlb	0	; () banked
  1773  001342  5165               	movf	___ftmul@sign& (0+255),w,b
  1774  001344  A4D8               	btfss	status,2,c
  1775  001346  D007               	goto	l2184
  1776                           
  1777                           ; BSR set to: 0
  1778  001348  0E00               	movlw	0
  1779  00134A  6E24               	movwf	?___ftmul,c
  1780  00134C  0E00               	movlw	0
  1781  00134E  6E25               	movwf	?___ftmul+1,c
  1782  001350  0E00               	movlw	0
  1783  001352  6E26               	movwf	?___ftmul+2,c
  1784                           
  1785                           ; BSR set to: 0
  1786  001354  0012               	return	
  1787  001356                     l2184:
  1788                           
  1789                           ; BSR set to: 0
  1790  001356  0100               	movlb	0	; () banked
  1791  001358  5165               	movf	___ftmul@sign& (0+255),w,b
  1792  00135A  0F7B               	addlw	123
  1793  00135C  0100               	movlb	0	; () banked
  1794  00135E  2760               	addwf	___ftmul@exp& (0+255),f,b
  1795                           
  1796                           ; BSR set to: 0
  1797  001360  C026  F065         	movff	___ftmul@f1+2,___ftmul@sign
  1798  001364  5029               	movf	___ftmul@f2+2,w,c
  1799  001366  0100               	movlb	0	; () banked
  1800  001368  1B65               	xorwf	___ftmul@sign& (0+255),f,b
  1801  00136A  0E80               	movlw	128
  1802  00136C  0100               	movlb	0	; () banked
  1803  00136E  1765               	andwf	___ftmul@sign& (0+255),f,b
  1804                           
  1805                           ; BSR set to: 0
  1806  001370  8E25               	bsf	___ftmul@f1+1,7,c
  1807                           
  1808                           ; BSR set to: 0
  1809  001372  8E28               	bsf	___ftmul@f2+1,7,c
  1810                           
  1811                           ; BSR set to: 0
  1812  001374  0EFF               	movlw	255
  1813  001376  1627               	andwf	___ftmul@f2,f,c
  1814  001378  0EFF               	movlw	255
  1815  00137A  1628               	andwf	___ftmul@f2+1,f,c
  1816  00137C  0E00               	movlw	0
  1817  00137E  1629               	andwf	___ftmul@f2+2,f,c
  1818                           
  1819                           ; BSR set to: 0
  1820  001380  0E00               	movlw	0
  1821  001382  0100               	movlb	0	; () banked
  1822  001384  6F61               	movwf	___ftmul@f3_as_product& (0+255),b
  1823  001386  0E00               	movlw	0
  1824  001388  0100               	movlb	0	; () banked
  1825  00138A  6F62               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  1826  00138C  0E00               	movlw	0
  1827  00138E  0100               	movlb	0	; () banked
  1828  001390  6F63               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  1829                           
  1830                           ; BSR set to: 0
  1831  001392  0E07               	movlw	7
  1832  001394  0100               	movlb	0	; () banked
  1833  001396  6F64               	movwf	___ftmul@cntr& (0+255),b
  1834  001398  D000               	goto	l2198
  1835  00139A                     l2198:
  1836                           
  1837                           ; BSR set to: 0
  1838  00139A  A024               	btfss	___ftmul@f1,0,c
  1839  00139C  D00A               	goto	l2202
  1840                           
  1841                           ; BSR set to: 0
  1842  00139E  5027               	movf	___ftmul@f2,w,c
  1843  0013A0  0100               	movlb	0	; () banked
  1844  0013A2  2761               	addwf	___ftmul@f3_as_product& (0+255),f,b
  1845  0013A4  5028               	movf	___ftmul@f2+1,w,c
  1846  0013A6  0100               	movlb	0	; () banked
  1847  0013A8  2362               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  1848  0013AA  5029               	movf	___ftmul@f2+2,w,c
  1849  0013AC  0100               	movlb	0	; () banked
  1850  0013AE  2363               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  1851  0013B0  D000               	goto	l2202
  1852  0013B2                     l2202:
  1853                           
  1854                           ; BSR set to: 0
  1855  0013B2  90D8               	bcf	status,0,c
  1856  0013B4  3226               	rrcf	___ftmul@f1+2,f,c
  1857  0013B6  3225               	rrcf	___ftmul@f1+1,f,c
  1858  0013B8  3224               	rrcf	___ftmul@f1,f,c
  1859  0013BA  90D8               	bcf	status,0,c
  1860  0013BC  3627               	rlcf	___ftmul@f2,f,c
  1861  0013BE  3628               	rlcf	___ftmul@f2+1,f,c
  1862  0013C0  3629               	rlcf	___ftmul@f2+2,f,c
  1863                           
  1864                           ; BSR set to: 0
  1865  0013C2  0100               	movlb	0	; () banked
  1866  0013C4  2F64               	decfsz	___ftmul@cntr& (0+255),f,b
  1867  0013C6  D7E9               	goto	l2198
  1868  0013C8  D000               	goto	l2206
  1869  0013CA                     l2206:
  1870                           
  1871                           ; BSR set to: 0
  1872  0013CA  0E09               	movlw	9
  1873  0013CC  0100               	movlb	0	; () banked
  1874  0013CE  6F64               	movwf	___ftmul@cntr& (0+255),b
  1875  0013D0  D000               	goto	l2208
  1876  0013D2                     l2208:
  1877                           
  1878                           ; BSR set to: 0
  1879  0013D2  A024               	btfss	___ftmul@f1,0,c
  1880  0013D4  D00A               	goto	l2212
  1881                           
  1882                           ; BSR set to: 0
  1883  0013D6  5027               	movf	___ftmul@f2,w,c
  1884  0013D8  0100               	movlb	0	; () banked
  1885  0013DA  2761               	addwf	___ftmul@f3_as_product& (0+255),f,b
  1886  0013DC  5028               	movf	___ftmul@f2+1,w,c
  1887  0013DE  0100               	movlb	0	; () banked
  1888  0013E0  2362               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  1889  0013E2  5029               	movf	___ftmul@f2+2,w,c
  1890  0013E4  0100               	movlb	0	; () banked
  1891  0013E6  2363               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  1892  0013E8  D000               	goto	l2212
  1893  0013EA                     l2212:
  1894                           
  1895                           ; BSR set to: 0
  1896  0013EA  90D8               	bcf	status,0,c
  1897  0013EC  3226               	rrcf	___ftmul@f1+2,f,c
  1898  0013EE  3225               	rrcf	___ftmul@f1+1,f,c
  1899  0013F0  3224               	rrcf	___ftmul@f1,f,c
  1900  0013F2  0100               	movlb	0	; () banked
  1901  0013F4  90D8               	bcf	status,0,c
  1902  0013F6  3363               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  1903  0013F8  3362               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  1904  0013FA  3361               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  1905                           
  1906                           ; BSR set to: 0
  1907  0013FC  0100               	movlb	0	; () banked
  1908  0013FE  2F64               	decfsz	___ftmul@cntr& (0+255),f,b
  1909  001400  D7E8               	goto	l2208
  1910  001402  D000               	goto	l2216
  1911  001404                     l2216:
  1912                           
  1913                           ; BSR set to: 0
  1914  001404  C061  F019         	movff	___ftmul@f3_as_product,___ftpack@arg
  1915  001408  C062  F01A         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1916  00140C  C063  F01B         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1917  001410  C060  F01C         	movff	___ftmul@exp,___ftpack@exp
  1918  001414  C065  F01D         	movff	___ftmul@sign,___ftpack@sign
  1919  001418  EC18  F00B         	call	___ftpack	;wreg free
  1920  00141C  C019  F024         	movff	?___ftpack,?___ftmul
  1921  001420  C01A  F025         	movff	?___ftpack+1,?___ftmul+1
  1922  001424  C01B  F026         	movff	?___ftpack+2,?___ftmul+2
  1923  001428  0012               	return	
  1924  00142A  0012               	return		;funcret
  1925  00142C                     __end_of___ftmul:
  1926                           	opt stack 0
  1927                           tblptru	equ	0xFF8
  1928                           tblptrh	equ	0xFF7
  1929                           tblptrl	equ	0xFF6
  1930                           tablat	equ	0xFF5
  1931                           intcon	equ	0xFF2
  1932                           postinc0	equ	0xFEE
  1933                           wreg	equ	0xFE8
  1934                           status	equ	0xFD8
  1935                           
  1936 ;; *************** function ___ftdiv *****************
  1937 ;; Defined at:
  1938 ;;		line 54 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;  f1              3    6[BANK0 ] float 
  1941 ;;  f2              3    9[BANK0 ] float 
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;  f3              3   13[BANK0 ] float 
  1944 ;;  sign            1   17[BANK0 ] unsigned char 
  1945 ;;  exp             1   16[BANK0 ] unsigned char 
  1946 ;;  cntr            1   12[BANK0 ] unsigned char 
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  3    6[BANK0 ] float 
  1949 ;; Registers used:
  1950 ;;		wreg, status,2, status,0, cstack
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1956 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1957 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1958 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1959 ;;      Totals:         3      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1960 ;;Total ram usage:       15 bytes
  1961 ;; Hardware stack levels used:    1
  1962 ;; Hardware stack levels required when called:    4
  1963 ;; This function calls:
  1964 ;;		___ftpack
  1965 ;; This function is called by:
  1966 ;;		_TM1640_Show_Decimal
  1967 ;;		_Get_ADC6
  1968 ;; This function uses a non-reentrant model
  1969 ;;
  1970                           
  1971                           	psect	text13
  1972  0011B8                     __ptext13:
  1973                           	opt stack 0
  1974  0011B8                     ___ftdiv:
  1975                           	opt stack 24
  1976                           
  1977                           ;incstack = 0
  1978  0011B8  C068  F02D         	movff	___ftdiv@f1+2,??___ftdiv
  1979  0011BC  6A2E               	clrf	(??___ftdiv+1)& (0+255),c
  1980  0011BE  6A2F               	clrf	(??___ftdiv+2)& (0+255),c
  1981  0011C0  0100               	movlb	0	; () banked
  1982  0011C2  3567               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  1983  0011C4  362D               	rlcf	??___ftdiv& (0+255),f,c
  1984  0011C6  E301               	bnc	u1721
  1985  0011C8  802E               	bsf	(??___ftdiv+1)& (0+255),0,c
  1986  0011CA                     u1721:
  1987  0011CA  502D               	movf	??___ftdiv,w,c
  1988  0011CC  0100               	movlb	0	; () banked
  1989  0011CE  6F70               	movwf	___ftdiv@exp& (0+255),b
  1990  0011D0  0100               	movlb	0	; () banked
  1991  0011D2  5170               	movf	___ftdiv@exp& (0+255),w,b
  1992  0011D4  A4D8               	btfss	status,2,c
  1993  0011D6  D00A               	goto	l2132
  1994                           
  1995                           ; BSR set to: 0
  1996  0011D8  0E00               	movlw	0
  1997  0011DA  0100               	movlb	0	; () banked
  1998  0011DC  6F66               	movwf	?___ftdiv& (0+255),b
  1999  0011DE  0E00               	movlw	0
  2000  0011E0  0100               	movlb	0	; () banked
  2001  0011E2  6F67               	movwf	(?___ftdiv+1)& (0+255),b
  2002  0011E4  0E00               	movlw	0
  2003  0011E6  0100               	movlb	0	; () banked
  2004  0011E8  6F68               	movwf	(?___ftdiv+2)& (0+255),b
  2005                           
  2006                           ; BSR set to: 0
  2007  0011EA  0012               	return	
  2008  0011EC                     l2132:
  2009                           
  2010                           ; BSR set to: 0
  2011  0011EC  C06B  F02D         	movff	___ftdiv@f2+2,??___ftdiv
  2012  0011F0  6A2E               	clrf	(??___ftdiv+1)& (0+255),c
  2013  0011F2  6A2F               	clrf	(??___ftdiv+2)& (0+255),c
  2014  0011F4  0100               	movlb	0	; () banked
  2015  0011F6  356A               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  2016  0011F8  362D               	rlcf	??___ftdiv& (0+255),f,c
  2017  0011FA  E301               	bnc	u1741
  2018  0011FC  802E               	bsf	(??___ftdiv+1)& (0+255),0,c
  2019  0011FE                     u1741:
  2020  0011FE  502D               	movf	??___ftdiv,w,c
  2021  001200  0100               	movlb	0	; () banked
  2022  001202  6F71               	movwf	___ftdiv@sign& (0+255),b
  2023  001204  0100               	movlb	0	; () banked
  2024  001206  5171               	movf	___ftdiv@sign& (0+255),w,b
  2025  001208  A4D8               	btfss	status,2,c
  2026  00120A  D00A               	goto	l2138
  2027                           
  2028                           ; BSR set to: 0
  2029  00120C  0E00               	movlw	0
  2030  00120E  0100               	movlb	0	; () banked
  2031  001210  6F66               	movwf	?___ftdiv& (0+255),b
  2032  001212  0E00               	movlw	0
  2033  001214  0100               	movlb	0	; () banked
  2034  001216  6F67               	movwf	(?___ftdiv+1)& (0+255),b
  2035  001218  0E00               	movlw	0
  2036  00121A  0100               	movlb	0	; () banked
  2037  00121C  6F68               	movwf	(?___ftdiv+2)& (0+255),b
  2038                           
  2039                           ; BSR set to: 0
  2040  00121E  0012               	return	
  2041  001220                     l2138:
  2042                           
  2043                           ; BSR set to: 0
  2044  001220  0E00               	movlw	0
  2045  001222  0100               	movlb	0	; () banked
  2046  001224  6F6D               	movwf	___ftdiv@f3& (0+255),b
  2047  001226  0E00               	movlw	0
  2048  001228  0100               	movlb	0	; () banked
  2049  00122A  6F6E               	movwf	(___ftdiv@f3+1)& (0+255),b
  2050  00122C  0E00               	movlw	0
  2051  00122E  0100               	movlb	0	; () banked
  2052  001230  6F6F               	movwf	(___ftdiv@f3+2)& (0+255),b
  2053                           
  2054                           ; BSR set to: 0
  2055  001232  0100               	movlb	0	; () banked
  2056  001234  5171               	movf	___ftdiv@sign& (0+255),w,b
  2057  001236  0F89               	addlw	137
  2058  001238  0100               	movlb	0	; () banked
  2059  00123A  5F70               	subwf	___ftdiv@exp& (0+255),f,b
  2060                           
  2061                           ; BSR set to: 0
  2062  00123C  C068  F071         	movff	___ftdiv@f1+2,___ftdiv@sign
  2063                           
  2064                           ; BSR set to: 0
  2065  001240  0100               	movlb	0	; () banked
  2066  001242  516B               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2067  001244  0100               	movlb	0	; () banked
  2068  001246  1B71               	xorwf	___ftdiv@sign& (0+255),f,b
  2069                           
  2070                           ; BSR set to: 0
  2071  001248  0E80               	movlw	128
  2072  00124A  0100               	movlb	0	; () banked
  2073  00124C  1771               	andwf	___ftdiv@sign& (0+255),f,b
  2074                           
  2075                           ; BSR set to: 0
  2076  00124E  0100               	movlb	0	; () banked
  2077  001250  8F67               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  2078                           
  2079                           ; BSR set to: 0
  2080  001252  0EFF               	movlw	255
  2081  001254  0100               	movlb	0	; () banked
  2082  001256  1766               	andwf	___ftdiv@f1& (0+255),f,b
  2083  001258  0EFF               	movlw	255
  2084  00125A  0100               	movlb	0	; () banked
  2085  00125C  1767               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  2086  00125E  0E00               	movlw	0
  2087  001260  0100               	movlb	0	; () banked
  2088  001262  1768               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  2089                           
  2090                           ; BSR set to: 0
  2091  001264  0100               	movlb	0	; () banked
  2092  001266  8F6A               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  2093                           
  2094                           ; BSR set to: 0
  2095  001268  0EFF               	movlw	255
  2096  00126A  0100               	movlb	0	; () banked
  2097  00126C  1769               	andwf	___ftdiv@f2& (0+255),f,b
  2098  00126E  0EFF               	movlw	255
  2099  001270  0100               	movlb	0	; () banked
  2100  001272  176A               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  2101  001274  0E00               	movlw	0
  2102  001276  0100               	movlb	0	; () banked
  2103  001278  176B               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  2104                           
  2105                           ; BSR set to: 0
  2106  00127A  0E18               	movlw	24
  2107  00127C  0100               	movlb	0	; () banked
  2108  00127E  6F6C               	movwf	___ftdiv@cntr& (0+255),b
  2109  001280  D000               	goto	l2158
  2110  001282                     l2158:
  2111                           
  2112                           ; BSR set to: 0
  2113  001282  0100               	movlb	0	; () banked
  2114  001284  90D8               	bcf	status,0,c
  2115  001286  376D               	rlcf	___ftdiv@f3& (0+255),f,b
  2116  001288  376E               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  2117  00128A  376F               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  2118                           
  2119                           ; BSR set to: 0
  2120  00128C  0100               	movlb	0	; () banked
  2121  00128E  5169               	movf	___ftdiv@f2& (0+255),w,b
  2122  001290  0100               	movlb	0	; () banked
  2123  001292  5D66               	subwf	___ftdiv@f1& (0+255),w,b
  2124  001294  0100               	movlb	0	; () banked
  2125  001296  516A               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2126  001298  0100               	movlb	0	; () banked
  2127  00129A  5967               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  2128  00129C  0100               	movlb	0	; () banked
  2129  00129E  516B               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2130  0012A0  0100               	movlb	0	; () banked
  2131  0012A2  5968               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  2132  0012A4  A0D8               	btfss	status,0,c
  2133  0012A6  D00E               	goto	l742
  2134                           
  2135                           ; BSR set to: 0
  2136  0012A8  0100               	movlb	0	; () banked
  2137  0012AA  5169               	movf	___ftdiv@f2& (0+255),w,b
  2138  0012AC  0100               	movlb	0	; () banked
  2139  0012AE  5F66               	subwf	___ftdiv@f1& (0+255),f,b
  2140  0012B0  0100               	movlb	0	; () banked
  2141  0012B2  516A               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2142  0012B4  0100               	movlb	0	; () banked
  2143  0012B6  5B67               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  2144  0012B8  0100               	movlb	0	; () banked
  2145  0012BA  516B               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2146  0012BC  0100               	movlb	0	; () banked
  2147  0012BE  5B68               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  2148                           
  2149                           ; BSR set to: 0
  2150  0012C0  0100               	movlb	0	; () banked
  2151  0012C2  816D               	bsf	___ftdiv@f3& (0+255),0,b
  2152  0012C4                     l742:
  2153                           
  2154                           ; BSR set to: 0
  2155  0012C4  0100               	movlb	0	; () banked
  2156  0012C6  90D8               	bcf	status,0,c
  2157  0012C8  3766               	rlcf	___ftdiv@f1& (0+255),f,b
  2158  0012CA  3767               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  2159  0012CC  3768               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  2160                           
  2161                           ; BSR set to: 0
  2162  0012CE  0100               	movlb	0	; () banked
  2163  0012D0  2F6C               	decfsz	___ftdiv@cntr& (0+255),f,b
  2164  0012D2  D7D7               	goto	l2158
  2165  0012D4  D000               	goto	l2168
  2166  0012D6                     l2168:
  2167                           
  2168                           ; BSR set to: 0
  2169  0012D6  C06D  F019         	movff	___ftdiv@f3,___ftpack@arg
  2170  0012DA  C06E  F01A         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2171  0012DE  C06F  F01B         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2172  0012E2  C070  F01C         	movff	___ftdiv@exp,___ftpack@exp
  2173  0012E6  C071  F01D         	movff	___ftdiv@sign,___ftpack@sign
  2174  0012EA  EC18  F00B         	call	___ftpack	;wreg free
  2175  0012EE  C019  F066         	movff	?___ftpack,?___ftdiv
  2176  0012F2  C01A  F067         	movff	?___ftpack+1,?___ftdiv+1
  2177  0012F6  C01B  F068         	movff	?___ftpack+2,?___ftdiv+2
  2178  0012FA  0012               	return	
  2179  0012FC  0012               	return		;funcret
  2180  0012FE                     __end_of___ftdiv:
  2181                           	opt stack 0
  2182                           tblptru	equ	0xFF8
  2183                           tblptrh	equ	0xFF7
  2184                           tblptrl	equ	0xFF6
  2185                           tablat	equ	0xFF5
  2186                           intcon	equ	0xFF2
  2187                           postinc0	equ	0xFEE
  2188                           wreg	equ	0xFE8
  2189                           status	equ	0xFD8
  2190                           
  2191 ;; *************** function ___ftpack *****************
  2192 ;; Defined at:
  2193 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;  arg             3   24[COMRAM] unsigned um
  2196 ;;  exp             1   27[COMRAM] unsigned char 
  2197 ;;  sign            1   28[COMRAM] unsigned char 
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;		None
  2200 ;; Return value:  Size  Location     Type
  2201 ;;                  3   24[COMRAM] float 
  2202 ;; Registers used:
  2203 ;;		wreg, status,2, status,0
  2204 ;; Tracked objects:
  2205 ;;		On entry : 0/0
  2206 ;;		On exit  : 0/0
  2207 ;;		Unchanged: 0/0
  2208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2209 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2211 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2212 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2213 ;;Total ram usage:        8 bytes
  2214 ;; Hardware stack levels used:    1
  2215 ;; Hardware stack levels required when called:    3
  2216 ;; This function calls:
  2217 ;;		Nothing
  2218 ;; This function is called by:
  2219 ;;		___ftdiv
  2220 ;;		___ftmul
  2221 ;;		___lwtoft
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           	psect	text14
  2226  001630                     __ptext14:
  2227                           	opt stack 0
  2228  001630                     ___ftpack:
  2229                           	opt stack 24
  2230                           
  2231                           ;incstack = 0
  2232  001630  501C               	movf	___ftpack@exp,w,c
  2233  001632  B4D8               	btfsc	status,2,c
  2234  001634  D005               	goto	l2080
  2235  001636  5019               	movf	___ftpack@arg,w,c
  2236  001638  101A               	iorwf	___ftpack@arg+1,w,c
  2237  00163A  101B               	iorwf	___ftpack@arg+2,w,c
  2238  00163C  A4D8               	btfss	status,2,c
  2239  00163E  D00E               	goto	l2086
  2240  001640                     l2080:
  2241  001640  0E00               	movlw	0
  2242  001642  6E19               	movwf	?___ftpack,c
  2243  001644  0E00               	movlw	0
  2244  001646  6E1A               	movwf	?___ftpack+1,c
  2245  001648  0E00               	movlw	0
  2246  00164A  6E1B               	movwf	?___ftpack+2,c
  2247  00164C  0012               	return	
  2248  00164E  D006               	goto	l2086
  2249  001650                     l2084:
  2250  001650  2A1C               	incf	___ftpack@exp,f,c
  2251  001652  90D8               	bcf	status,0,c
  2252  001654  321B               	rrcf	___ftpack@arg+2,f,c
  2253  001656  321A               	rrcf	___ftpack@arg+1,f,c
  2254  001658  3219               	rrcf	___ftpack@arg,f,c
  2255  00165A  D000               	goto	l2086
  2256  00165C                     l2086:
  2257  00165C  0E00               	movlw	0
  2258  00165E  1419               	andwf	___ftpack@arg,w,c
  2259  001660  6E1E               	movwf	??___ftpack& (0+255),c
  2260  001662  0E00               	movlw	0
  2261  001664  141A               	andwf	___ftpack@arg+1,w,c
  2262  001666  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  2263  001668  0EFE               	movlw	254
  2264  00166A  141B               	andwf	___ftpack@arg+2,w,c
  2265  00166C  6E20               	movwf	(??___ftpack+2)& (0+255),c
  2266  00166E  501E               	movf	??___ftpack,w,c
  2267  001670  101F               	iorwf	??___ftpack+1,w,c
  2268  001672  1020               	iorwf	??___ftpack+2,w,c
  2269  001674  B4D8               	btfsc	status,2,c
  2270  001676  D00E               	goto	l2092
  2271  001678  D7EB               	goto	l2084
  2272  00167A  D00C               	goto	l2092
  2273  00167C                     l2088:
  2274  00167C  2A1C               	incf	___ftpack@exp,f,c
  2275  00167E  0E01               	movlw	1
  2276  001680  2619               	addwf	___ftpack@arg,f,c
  2277  001682  0E00               	movlw	0
  2278  001684  221A               	addwfc	___ftpack@arg+1,f,c
  2279  001686  0E00               	movlw	0
  2280  001688  221B               	addwfc	___ftpack@arg+2,f,c
  2281  00168A  90D8               	bcf	status,0,c
  2282  00168C  321B               	rrcf	___ftpack@arg+2,f,c
  2283  00168E  321A               	rrcf	___ftpack@arg+1,f,c
  2284  001690  3219               	rrcf	___ftpack@arg,f,c
  2285  001692  D000               	goto	l2092
  2286  001694                     l2092:
  2287  001694  0E00               	movlw	0
  2288  001696  1419               	andwf	___ftpack@arg,w,c
  2289  001698  6E1E               	movwf	??___ftpack& (0+255),c
  2290  00169A  0E00               	movlw	0
  2291  00169C  141A               	andwf	___ftpack@arg+1,w,c
  2292  00169E  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  2293  0016A0  0EFF               	movlw	255
  2294  0016A2  141B               	andwf	___ftpack@arg+2,w,c
  2295  0016A4  6E20               	movwf	(??___ftpack+2)& (0+255),c
  2296  0016A6  501E               	movf	??___ftpack,w,c
  2297  0016A8  101F               	iorwf	??___ftpack+1,w,c
  2298  0016AA  1020               	iorwf	??___ftpack+2,w,c
  2299  0016AC  B4D8               	btfsc	status,2,c
  2300  0016AE  D008               	goto	l2096
  2301  0016B0  D7E5               	goto	l2088
  2302  0016B2  D006               	goto	l2096
  2303  0016B4                     l2094:
  2304  0016B4  061C               	decf	___ftpack@exp,f,c
  2305  0016B6  90D8               	bcf	status,0,c
  2306  0016B8  3619               	rlcf	___ftpack@arg,f,c
  2307  0016BA  361A               	rlcf	___ftpack@arg+1,f,c
  2308  0016BC  361B               	rlcf	___ftpack@arg+2,f,c
  2309  0016BE  D000               	goto	l2096
  2310  0016C0                     l2096:
  2311  0016C0  BE1A               	btfsc	___ftpack@arg+1,7,c
  2312  0016C2  D004               	goto	l678
  2313  0016C4  0E02               	movlw	2
  2314  0016C6  601C               	cpfslt	___ftpack@exp,c
  2315  0016C8  D7F5               	goto	l2094
  2316  0016CA  D000               	goto	l678
  2317  0016CC                     l678:
  2318  0016CC  B01C               	btfsc	___ftpack@exp,0,c
  2319  0016CE  D002               	goto	l2102
  2320  0016D0  9E1A               	bcf	___ftpack@arg+1,7,c
  2321  0016D2  D000               	goto	l2102
  2322  0016D4                     l2102:
  2323  0016D4  90D8               	bcf	status,0,c
  2324  0016D6  321C               	rrcf	___ftpack@exp,f,c
  2325  0016D8  501C               	movf	___ftpack@exp,w,c
  2326  0016DA  121B               	iorwf	___ftpack@arg+2,f,c
  2327  0016DC  501D               	movf	___ftpack@sign,w,c
  2328  0016DE  B4D8               	btfsc	status,2,c
  2329  0016E0  D002               	goto	l2108
  2330  0016E2  8E1B               	bsf	___ftpack@arg+2,7,c
  2331  0016E4  D000               	goto	l2108
  2332  0016E6                     l2108:
  2333  0016E6  C019  F019         	movff	___ftpack@arg,?___ftpack
  2334  0016EA  C01A  F01A         	movff	___ftpack@arg+1,?___ftpack+1
  2335  0016EE  C01B  F01B         	movff	___ftpack@arg+2,?___ftpack+2
  2336  0016F2  0012               	return	
  2337  0016F4  0012               	return		;funcret
  2338  0016F6                     __end_of___ftpack:
  2339                           	opt stack 0
  2340                           tblptru	equ	0xFF8
  2341                           tblptrh	equ	0xFF7
  2342                           tblptrl	equ	0xFF6
  2343                           tablat	equ	0xFF5
  2344                           intcon	equ	0xFF2
  2345                           postinc0	equ	0xFEE
  2346                           wreg	equ	0xFE8
  2347                           status	equ	0xFD8
  2348                           
  2349 ;; *************** function _ReadADC *****************
  2350 ;; Defined at:
  2351 ;;		line 24 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;		None
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;		None
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  2   24[COMRAM] int 
  2358 ;; Registers used:
  2359 ;;		wreg, status,2
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2365 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2367 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2368 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2369 ;;Total ram usage:        4 bytes
  2370 ;; Hardware stack levels used:    1
  2371 ;; Hardware stack levels required when called:    3
  2372 ;; This function calls:
  2373 ;;		Nothing
  2374 ;; This function is called by:
  2375 ;;		_Get_ADC6
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           	psect	text15
  2380  001C72                     __ptext15:
  2381                           	opt stack 0
  2382  001C72                     _ReadADC:
  2383                           	opt stack 25
  2384                           
  2385                           ;incstack = 0
  2386  001C72  50C4               	movf	4036,w,c	;volatile
  2387  001C74  6E1B               	movwf	??_ReadADC& (0+255),c
  2388  001C76  50C3               	movf	4035,w,c	;volatile
  2389  001C78  6E19               	movwf	?_ReadADC,c
  2390  001C7A  C01B  F01A         	movff	??_ReadADC,?_ReadADC+1
  2391  001C7E  0012               	return	
  2392  001C80  0012               	return		;funcret
  2393  001C82                     __end_of_ReadADC:
  2394                           	opt stack 0
  2395                           tblptru	equ	0xFF8
  2396                           tblptrh	equ	0xFF7
  2397                           tblptrl	equ	0xFF6
  2398                           tablat	equ	0xFF5
  2399                           intcon	equ	0xFF2
  2400                           postinc0	equ	0xFEE
  2401                           wreg	equ	0xFE8
  2402                           status	equ	0xFD8
  2403                           
  2404 ;; *************** function _ConvertADC *****************
  2405 ;; Defined at:
  2406 ;;		line 22 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;		None
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;		None
  2411 ;; Return value:  Size  Location     Type
  2412 ;;		None               void
  2413 ;; Registers used:
  2414 ;;		None
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2424 ;;Total ram usage:        0 bytes
  2425 ;; Hardware stack levels used:    1
  2426 ;; Hardware stack levels required when called:    3
  2427 ;; This function calls:
  2428 ;;		Nothing
  2429 ;; This function is called by:
  2430 ;;		_Get_ADC6
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434                           	psect	text16
  2435  001CA6                     __ptext16:
  2436                           	opt stack 0
  2437  001CA6                     _ConvertADC:
  2438                           	opt stack 25
  2439                           
  2440                           ;incstack = 0
  2441  001CA6  82C2               	bsf	4034,1,c	;volatile
  2442  001CA8  0012               	return		;funcret
  2443  001CAA                     __end_of_ConvertADC:
  2444                           	opt stack 0
  2445                           tblptru	equ	0xFF8
  2446                           tblptrh	equ	0xFF7
  2447                           tblptrl	equ	0xFF6
  2448                           tablat	equ	0xFF5
  2449                           intcon	equ	0xFF2
  2450                           postinc0	equ	0xFEE
  2451                           wreg	equ	0xFE8
  2452                           status	equ	0xFD8
  2453                           
  2454 ;; *************** function _BusyADC *****************
  2455 ;; Defined at:
  2456 ;;		line 26 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;		None
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;		None
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  1    wreg      unsigned char 
  2463 ;; Registers used:
  2464 ;;		wreg
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2474 ;;Total ram usage:        0 bytes
  2475 ;; Hardware stack levels used:    1
  2476 ;; Hardware stack levels required when called:    3
  2477 ;; This function calls:
  2478 ;;		Nothing
  2479 ;; This function is called by:
  2480 ;;		_Get_ADC6
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           	psect	text17
  2485  001C82                     __ptext17:
  2486                           	opt stack 0
  2487  001C82                     _BusyADC:
  2488                           	opt stack 25
  2489                           
  2490                           ;incstack = 0
  2491  001C82  A2C2               	btfss	4034,1,c	;volatile
  2492  001C84  D002               	goto	u1710
  2493  001C86  0E01               	movlw	1
  2494  001C88  0012               	return	
  2495  001C8A                     u1710:
  2496  001C8A  0E00               	movlw	0
  2497  001C8C  0012               	return	
  2498  001C8E  0012               	return		;funcret
  2499  001C90                     __end_of_BusyADC:
  2500                           	opt stack 0
  2501                           tblptru	equ	0xFF8
  2502                           tblptrh	equ	0xFF7
  2503                           tblptrl	equ	0xFF6
  2504                           tablat	equ	0xFF5
  2505                           intcon	equ	0xFF2
  2506                           postinc0	equ	0xFEE
  2507                           wreg	equ	0xFE8
  2508                           status	equ	0xFD8
  2509                           
  2510 ;; *************** function _Manage_Message *****************
  2511 ;; Defined at:
  2512 ;;		line 72 in file "_01_USER/Run.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;		None
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;		None
  2517 ;; Return value:  Size  Location     Type
  2518 ;;		None               void
  2519 ;; Registers used:
  2520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2521 ;; Tracked objects:
  2522 ;;		On entry : 0/0
  2523 ;;		On exit  : 0/0
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2530 ;;Total ram usage:        0 bytes
  2531 ;; Hardware stack levels used:    1
  2532 ;; Hardware stack levels required when called:    4
  2533 ;; This function calls:
  2534 ;;		_Key_FSM_Read
  2535 ;; This function is called by:
  2536 ;;		_main
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539                           
  2540                           	psect	text18
  2541  001B40                     __ptext18:
  2542                           	opt stack 0
  2543  001B40                     _Manage_Message:
  2544                           	opt stack 26
  2545                           
  2546                           ;Run.c: 74: if (Key_FSM_Read(1) == 0x01 ) Handle_01_Switch.ADC6 = ~Handle_01_Switch.ADC6
      +                          ;
  2547                           
  2548                           ;incstack = 0
  2549  001B40  0E01               	movlw	1
  2550  001B42  ECBC  F00B         	call	_Key_FSM_Read
  2551  001B46  06E8               	decf	wreg,f,c
  2552  001B48  A4D8               	btfss	status,2,c
  2553  001B4A  D004               	goto	l2430
  2554  001B4C  5038               	movf	_Handle_01_Switch+1,w,c
  2555  001B4E  0AFF               	xorlw	255
  2556  001B50  6E38               	movwf	_Handle_01_Switch+1,c
  2557  001B52  D000               	goto	l2430
  2558  001B54                     l2430:
  2559                           
  2560                           ;Run.c: 75: if (Key_FSM_Read(4) == 0x01 ) Handle_01_Switch._1Khz = ~Handle_01_Switch._1K
      +                          hz;
  2561  001B54  0E04               	movlw	4
  2562  001B56  ECBC  F00B         	call	_Key_FSM_Read
  2563  001B5A  06E8               	decf	wreg,f,c
  2564  001B5C  A4D8               	btfss	status,2,c
  2565  001B5E  0012               	return	
  2566  001B60  1E37               	comf	_Handle_01_Switch,f,c
  2567  001B62  0012               	return	
  2568  001B64  0012               	return		;funcret
  2569  001B66                     __end_of_Manage_Message:
  2570                           	opt stack 0
  2571                           tblptru	equ	0xFF8
  2572                           tblptrh	equ	0xFF7
  2573                           tblptrl	equ	0xFF6
  2574                           tablat	equ	0xFF5
  2575                           intcon	equ	0xFF2
  2576                           postinc0	equ	0xFEE
  2577                           wreg	equ	0xFE8
  2578                           status	equ	0xFD8
  2579                           
  2580 ;; *************** function _Key_FSM_Read *****************
  2581 ;; Defined at:
  2582 ;;		line 155 in file "_01_USER/Key.c"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;  key_num         1    wreg     unsigned char 
  2585 ;; Auto vars:     Size  Location     Type
  2586 ;;  key_num         1   29[COMRAM] unsigned char 
  2587 ;;  temp            1   28[COMRAM] unsigned char 
  2588 ;; Return value:  Size  Location     Type
  2589 ;;                  1    wreg      unsigned char 
  2590 ;; Registers used:
  2591 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2592 ;; Tracked objects:
  2593 ;;		On entry : 0/0
  2594 ;;		On exit  : 0/0
  2595 ;;		Unchanged: 0/0
  2596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2598 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2599 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2600 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2601 ;;Total ram usage:        6 bytes
  2602 ;; Hardware stack levels used:    1
  2603 ;; Hardware stack levels required when called:    3
  2604 ;; This function calls:
  2605 ;;		Nothing
  2606 ;; This function is called by:
  2607 ;;		_Manage_Message
  2608 ;; This function uses a non-reentrant model
  2609 ;;
  2610                           
  2611                           	psect	text19
  2612  001778                     __ptext19:
  2613                           	opt stack 0
  2614  001778                     _Key_FSM_Read:
  2615                           	opt stack 26
  2616                           
  2617                           ;incstack = 0
  2618                           ;Key_FSM_Read@key_num stored from wreg
  2619  001778  6E1E               	movwf	Key_FSM_Read@key_num,c
  2620                           
  2621                           ;Key.c: 157: unsigned char temp;
  2622                           ;Key.c: 158: if( key_num != 0xff )
  2623  00177A  281E               	incf	Key_FSM_Read@key_num,w,c
  2624  00177C  B4D8               	btfsc	status,2,c
  2625  00177E  D02D               	goto	l2322
  2626                           
  2627                           ;Key.c: 159: {
  2628                           ;Key.c: 160: if( Local_Key_FSM.key_state == 0x00 )
  2629  001780  503C               	movf	_Local_Key_FSM,w,c	;volatile
  2630  001782  A4D8               	btfss	status,2,c
  2631  001784  D028               	goto	l2318
  2632                           
  2633                           ;Key.c: 161: {
  2634                           ;Key.c: 162: temp = Local_Key_FSM.key_FSM[key_num-1];
  2635  001786  0EFF               	movlw	255
  2636  001788  6E19               	movwf	??_Key_FSM_Read& (0+255),c
  2637  00178A  0EFF               	movlw	255
  2638  00178C  6E1A               	movwf	(??_Key_FSM_Read+1)& (0+255),c
  2639  00178E  501E               	movf	Key_FSM_Read@key_num,w,c
  2640  001790  6E1B               	movwf	(??_Key_FSM_Read+2)& (0+255),c
  2641  001792  6A1C               	clrf	(??_Key_FSM_Read+3)& (0+255),c
  2642  001794  5019               	movf	??_Key_FSM_Read,w,c
  2643  001796  261B               	addwf	??_Key_FSM_Read+2,f,c
  2644  001798  501A               	movf	??_Key_FSM_Read+1,w,c
  2645  00179A  221C               	addwfc	??_Key_FSM_Read+3,f,c
  2646  00179C  0E3D               	movlw	low (_Local_Key_FSM+1)
  2647  00179E  241B               	addwf	??_Key_FSM_Read+2,w,c
  2648  0017A0  6ED9               	movwf	fsr2l,c
  2649  0017A2  0E00               	movlw	high (_Local_Key_FSM+1)
  2650  0017A4  201C               	addwfc	??_Key_FSM_Read+3,w,c
  2651  0017A6  6EDA               	movwf	fsr2h,c
  2652  0017A8  50DF               	movf	indf2,w,c
  2653  0017AA  6E1D               	movwf	Key_FSM_Read@temp,c
  2654                           
  2655                           ;Key.c: 163: Local_Key_FSM.key_FSM[key_num-1] = 0x00;
  2656  0017AC  0EFF               	movlw	255
  2657  0017AE  6E19               	movwf	??_Key_FSM_Read& (0+255),c
  2658  0017B0  0EFF               	movlw	255
  2659  0017B2  6E1A               	movwf	(??_Key_FSM_Read+1)& (0+255),c
  2660  0017B4  501E               	movf	Key_FSM_Read@key_num,w,c
  2661  0017B6  6E1B               	movwf	(??_Key_FSM_Read+2)& (0+255),c
  2662  0017B8  6A1C               	clrf	(??_Key_FSM_Read+3)& (0+255),c
  2663  0017BA  5019               	movf	??_Key_FSM_Read,w,c
  2664  0017BC  261B               	addwf	??_Key_FSM_Read+2,f,c
  2665  0017BE  501A               	movf	??_Key_FSM_Read+1,w,c
  2666  0017C0  221C               	addwfc	??_Key_FSM_Read+3,f,c
  2667  0017C2  0E3D               	movlw	low (_Local_Key_FSM+1)
  2668  0017C4  241B               	addwf	??_Key_FSM_Read+2,w,c
  2669  0017C6  6ED9               	movwf	fsr2l,c
  2670  0017C8  0E00               	movlw	high (_Local_Key_FSM+1)
  2671  0017CA  201C               	addwfc	??_Key_FSM_Read+3,w,c
  2672  0017CC  6EDA               	movwf	fsr2h,c
  2673  0017CE  0E00               	movlw	0
  2674  0017D0  6EDF               	movwf	indf2,c
  2675                           
  2676                           ;Key.c: 164: return temp;
  2677  0017D2  501D               	movf	Key_FSM_Read@temp,w,c
  2678                           
  2679                           ;Key.c: 165: }
  2680  0017D4  0012               	return	
  2681  0017D6                     l2318:
  2682                           
  2683                           ;Key.c: 167: else return 0x04;
  2684  0017D6  0E04               	movlw	4
  2685                           
  2686                           ;Key.c: 168: }
  2687  0017D8  0012               	return	
  2688  0017DA                     l2322:
  2689                           
  2690                           ;Key.c: 169: else if ( key_num == 0xff )
  2691  0017DA  281E               	incf	Key_FSM_Read@key_num,w,c
  2692  0017DC  A4D8               	btfss	status,2,c
  2693  0017DE  0012               	return	
  2694                           
  2695                           ;Key.c: 170: {
  2696                           ;Key.c: 171: if( Local_Key_FSM.key_state == 0x00 )
  2697  0017E0  503C               	movf	_Local_Key_FSM,w,c	;volatile
  2698  0017E2  A4D8               	btfss	status,2,c
  2699  0017E4  D006               	goto	l2334
  2700                           
  2701                           ;Key.c: 172: {
  2702                           ;Key.c: 173: temp = Local_Key_FSM.key_group;
  2703  0017E6  C041  F01D         	movff	_Local_Key_FSM+5,Key_FSM_Read@temp	;volatile
  2704                           
  2705                           ;Key.c: 174: Local_Key_FSM.key_group = 0x00;
  2706  0017EA  0E00               	movlw	0
  2707  0017EC  6E41               	movwf	_Local_Key_FSM+5,c	;volatile
  2708                           
  2709                           ;Key.c: 175: return temp;
  2710  0017EE  501D               	movf	Key_FSM_Read@temp,w,c
  2711                           
  2712                           ;Key.c: 176: }
  2713  0017F0  0012               	return	
  2714  0017F2                     l2334:
  2715                           
  2716                           ;Key.c: 178: else return 0x04;
  2717  0017F2  0E04               	movlw	4
  2718  0017F4  0012               	return	
  2719  0017F6  0012               	return		;funcret
  2720  0017F8                     __end_of_Key_FSM_Read:
  2721                           	opt stack 0
  2722                           tblptru	equ	0xFF8
  2723                           tblptrh	equ	0xFF7
  2724                           tblptrl	equ	0xFF6
  2725                           tablat	equ	0xFF5
  2726                           intcon	equ	0xFF2
  2727                           postinc0	equ	0xFEE
  2728                           wreg	equ	0xFE8
  2729                           indf2	equ	0xFDF
  2730                           fsr2h	equ	0xFDA
  2731                           fsr2l	equ	0xFD9
  2732                           status	equ	0xFD8
  2733                           
  2734 ;; *************** function _Key_Init *****************
  2735 ;; Defined at:
  2736 ;;		line 38 in file "_01_USER/Key.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;		None
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;		None
  2741 ;; Return value:  Size  Location     Type
  2742 ;;		None               void
  2743 ;; Registers used:
  2744 ;;		wreg, status,2, status,0
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2754 ;;Total ram usage:        0 bytes
  2755 ;; Hardware stack levels used:    1
  2756 ;; Hardware stack levels required when called:    3
  2757 ;; This function calls:
  2758 ;;		Nothing
  2759 ;; This function is called by:
  2760 ;;		_main
  2761 ;; This function uses a non-reentrant model
  2762 ;;
  2763                           
  2764                           	psect	text20
  2765  001C9C                     __ptext20:
  2766                           	opt stack 0
  2767  001C9C                     _Key_Init:
  2768                           	opt stack 27
  2769                           
  2770                           ;Key.c: 40: TRISE |= 0x1e;
  2771                           
  2772                           ;incstack = 0
  2773  001C9C  0E1E               	movlw	30
  2774  001C9E  1296               	iorwf	3990,f,c	;volatile
  2775                           
  2776                           ;Key.c: 41: TRISD |= 0xc0;
  2777  001CA0  0EC0               	movlw	192
  2778  001CA2  1295               	iorwf	3989,f,c	;volatile
  2779  001CA4  0012               	return		;funcret
  2780  001CA6                     __end_of_Key_Init:
  2781                           	opt stack 0
  2782                           tblptru	equ	0xFF8
  2783                           tblptrh	equ	0xFF7
  2784                           tblptrl	equ	0xFF6
  2785                           tablat	equ	0xFF5
  2786                           intcon	equ	0xFF2
  2787                           postinc0	equ	0xFEE
  2788                           wreg	equ	0xFE8
  2789                           indf2	equ	0xFDF
  2790                           fsr2h	equ	0xFDA
  2791                           fsr2l	equ	0xFD9
  2792                           status	equ	0xFD8
  2793                           
  2794 ;; *************** function _Init_TM1640 *****************
  2795 ;; Defined at:
  2796 ;;		line 119 in file "_01_USER/TM1640.c"
  2797 ;; Parameters:    Size  Location     Type
  2798 ;;		None
  2799 ;; Auto vars:     Size  Location     Type
  2800 ;;		None
  2801 ;; Return value:  Size  Location     Type
  2802 ;;		None               void
  2803 ;; Registers used:
  2804 ;;		wreg, status,2, status,0, cstack
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2814 ;;Total ram usage:        0 bytes
  2815 ;; Hardware stack levels used:    1
  2816 ;; Hardware stack levels required when called:    5
  2817 ;; This function calls:
  2818 ;;		_TM1640_Start
  2819 ;;		_TM1640_Stop
  2820 ;;		_TM1640_Writer_Byte
  2821 ;; This function is called by:
  2822 ;;		_main
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           
  2826                           	psect	text21
  2827  001B66                     __ptext21:
  2828                           	opt stack 0
  2829  001B66                     _Init_TM1640:
  2830                           	opt stack 25
  2831                           
  2832                           ;TM1640.c: 121: TRISCbits.TRISC3 = 0;
  2833                           
  2834                           ;incstack = 0
  2835  001B66  9694               	bcf	3988,3,c	;volatile
  2836                           
  2837                           ;TM1640.c: 122: TRISCbits.TRISC4 = 0;
  2838  001B68  9894               	bcf	3988,4,c	;volatile
  2839                           
  2840                           ;TM1640.c: 123: TM1640_Stop();
  2841  001B6A  ECD8  F00D         	call	_TM1640_Stop	;wreg free
  2842                           
  2843                           ;TM1640.c: 125: TM1640_Start();
  2844  001B6E  ECEA  F00D         	call	_TM1640_Start	;wreg free
  2845                           
  2846                           ;TM1640.c: 126: TM1640_Writer_Byte(0x44);
  2847  001B72  0E44               	movlw	68
  2848  001B74  ECEE  F00C         	call	_TM1640_Writer_Byte
  2849                           
  2850                           ;TM1640.c: 127: TM1640_Stop();
  2851  001B78  ECD8  F00D         	call	_TM1640_Stop	;wreg free
  2852                           
  2853                           ;TM1640.c: 129: TM1640_Start();
  2854  001B7C  ECEA  F00D         	call	_TM1640_Start	;wreg free
  2855                           
  2856                           ;TM1640.c: 130: TM1640_Writer_Byte(0x8F);
  2857  001B80  0E8F               	movlw	143
  2858  001B82  ECEE  F00C         	call	_TM1640_Writer_Byte
  2859                           
  2860                           ;TM1640.c: 131: TM1640_Stop();
  2861  001B86  ECD8  F00D         	call	_TM1640_Stop	;wreg free
  2862  001B8A  0012               	return		;funcret
  2863  001B8C                     __end_of_Init_TM1640:
  2864                           	opt stack 0
  2865                           tblptru	equ	0xFF8
  2866                           tblptrh	equ	0xFF7
  2867                           tblptrl	equ	0xFF6
  2868                           tablat	equ	0xFF5
  2869                           intcon	equ	0xFF2
  2870                           postinc0	equ	0xFEE
  2871                           wreg	equ	0xFE8
  2872                           indf2	equ	0xFDF
  2873                           fsr2h	equ	0xFDA
  2874                           fsr2l	equ	0xFD9
  2875                           status	equ	0xFD8
  2876                           
  2877 ;; *************** function _TM1640_Writer_Byte *****************
  2878 ;; Defined at:
  2879 ;;		line 77 in file "_01_USER/TM1640.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;  Date            1    wreg     const unsigned char 
  2882 ;; Auto vars:     Size  Location     Type
  2883 ;;  Date            1   26[COMRAM] const unsigned char 
  2884 ;;  mask            1   27[COMRAM] unsigned char 
  2885 ;; Return value:  Size  Location     Type
  2886 ;;		None               void
  2887 ;; Registers used:
  2888 ;;		wreg, status,2, status,0, cstack
  2889 ;; Tracked objects:
  2890 ;;		On entry : 0/0
  2891 ;;		On exit  : 0/0
  2892 ;;		Unchanged: 0/0
  2893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2895 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2897 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2898 ;;Total ram usage:        2 bytes
  2899 ;; Hardware stack levels used:    1
  2900 ;; Hardware stack levels required when called:    4
  2901 ;; This function calls:
  2902 ;;		_TM1640_Delay
  2903 ;; This function is called by:
  2904 ;;		_TM1640_Writer_Dates
  2905 ;;		_Init_TM1640
  2906 ;;		_Open_Display
  2907 ;;		_Disable_Display
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910                           
  2911                           	psect	text22
  2912  0019DC                     __ptext22:
  2913                           	opt stack 0
  2914  0019DC                     _TM1640_Writer_Byte:
  2915                           	opt stack 23
  2916                           
  2917                           ;incstack = 0
  2918                           ;TM1640_Writer_Byte@Date stored from wreg
  2919  0019DC  6E1B               	movwf	TM1640_Writer_Byte@Date,c
  2920                           
  2921                           ;TM1640.c: 79: unsigned char mask;
  2922                           ;TM1640.c: 81: for(mask=0x01; mask; mask<<=1)
  2923  0019DE  0E01               	movlw	1
  2924  0019E0  6E1C               	movwf	TM1640_Writer_Byte@mask,c
  2925  0019E2  D017               	goto	l2074
  2926  0019E4                     l249:
  2927                           
  2928                           ;TM1640.c: 82: {
  2929                           ;TM1640.c: 83: RC3 = 0;
  2930  0019E4  9682               	bcf	3970,3,c	;volatile
  2931                           
  2932                           ;TM1640.c: 84: TM1640_Delay(1);
  2933  0019E6  0E01               	movlw	1
  2934  0019E8  EC1A  F00E         	call	_TM1640_Delay
  2935                           
  2936                           ;TM1640.c: 85: if(mask & Date)
  2937  0019EC  501C               	movf	TM1640_Writer_Byte@mask,w,c
  2938  0019EE  141B               	andwf	TM1640_Writer_Byte@Date,w,c
  2939  0019F0  0900               	iorlw	0
  2940  0019F2  B4D8               	btfsc	status,2,c
  2941  0019F4  D002               	goto	l250
  2942                           
  2943                           ;TM1640.c: 86: RC4 = 1;
  2944  0019F6  8882               	bsf	3970,4,c	;volatile
  2945  0019F8  D002               	goto	l2068
  2946  0019FA                     l250:
  2947                           
  2948                           ;TM1640.c: 87: else
  2949                           ;TM1640.c: 88: RC4 = 0;
  2950  0019FA  9882               	bcf	3970,4,c	;volatile
  2951  0019FC  D000               	goto	l2068
  2952  0019FE                     l2068:
  2953                           
  2954                           ;TM1640.c: 89: TM1640_Delay(1);
  2955  0019FE  0E01               	movlw	1
  2956  001A00  EC1A  F00E         	call	_TM1640_Delay
  2957                           
  2958                           ;TM1640.c: 90: RC3 = 1;
  2959  001A04  8682               	bsf	3970,3,c	;volatile
  2960                           
  2961                           ;TM1640.c: 91: TM1640_Delay(1);
  2962  001A06  0E01               	movlw	1
  2963  001A08  EC1A  F00E         	call	_TM1640_Delay
  2964  001A0C  90D8               	bcf	status,0,c
  2965  001A0E  361C               	rlcf	TM1640_Writer_Byte@mask,f,c
  2966  001A10  D000               	goto	l2074
  2967  001A12                     l2074:
  2968  001A12  501C               	movf	TM1640_Writer_Byte@mask,w,c
  2969  001A14  A4D8               	btfss	status,2,c
  2970  001A16  D7E6               	goto	l249
  2971  001A18  0012               	return		;funcret
  2972  001A1A                     __end_of_TM1640_Writer_Byte:
  2973                           	opt stack 0
  2974                           tblptru	equ	0xFF8
  2975                           tblptrh	equ	0xFF7
  2976                           tblptrl	equ	0xFF6
  2977                           tablat	equ	0xFF5
  2978                           intcon	equ	0xFF2
  2979                           postinc0	equ	0xFEE
  2980                           wreg	equ	0xFE8
  2981                           indf2	equ	0xFDF
  2982                           fsr2h	equ	0xFDA
  2983                           fsr2l	equ	0xFD9
  2984                           status	equ	0xFD8
  2985                           
  2986 ;; *************** function _TM1640_Stop *****************
  2987 ;; Defined at:
  2988 ;;		line 32 in file "_01_USER/TM1640.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;		None
  2991 ;; Auto vars:     Size  Location     Type
  2992 ;;		None
  2993 ;; Return value:  Size  Location     Type
  2994 ;;		None               void
  2995 ;; Registers used:
  2996 ;;		wreg, status,2, status,0, cstack
  2997 ;; Tracked objects:
  2998 ;;		On entry : 0/0
  2999 ;;		On exit  : 0/0
  3000 ;;		Unchanged: 0/0
  3001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3005 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3006 ;;Total ram usage:        0 bytes
  3007 ;; Hardware stack levels used:    1
  3008 ;; Hardware stack levels required when called:    4
  3009 ;; This function calls:
  3010 ;;		_TM1640_Delay
  3011 ;; This function is called by:
  3012 ;;		_TM1640_Writer_Dates
  3013 ;;		_Init_TM1640
  3014 ;;		_Open_Display
  3015 ;;		_Disable_Display
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           	psect	text23
  3020  001BB0                     __ptext23:
  3021                           	opt stack 0
  3022  001BB0                     _TM1640_Stop:
  3023                           	opt stack 23
  3024                           
  3025                           ;TM1640.c: 34: RC3 = 0;
  3026                           
  3027                           ;incstack = 0
  3028  001BB0  9682               	bcf	3970,3,c	;volatile
  3029                           
  3030                           ;TM1640.c: 35: TM1640_Delay(1);
  3031  001BB2  0E01               	movlw	1
  3032  001BB4  EC1A  F00E         	call	_TM1640_Delay
  3033                           
  3034                           ;TM1640.c: 36: RC4 = 0;
  3035  001BB8  9882               	bcf	3970,4,c	;volatile
  3036                           
  3037                           ;TM1640.c: 37: TM1640_Delay(1);
  3038  001BBA  0E01               	movlw	1
  3039  001BBC  EC1A  F00E         	call	_TM1640_Delay
  3040                           
  3041                           ;TM1640.c: 38: RC3 = 1;
  3042  001BC0  8682               	bsf	3970,3,c	;volatile
  3043                           
  3044                           ;TM1640.c: 39: TM1640_Delay(1);
  3045  001BC2  0E01               	movlw	1
  3046  001BC4  EC1A  F00E         	call	_TM1640_Delay
  3047                           
  3048                           ;TM1640.c: 40: RC4 = 1;
  3049  001BC8  8882               	bsf	3970,4,c	;volatile
  3050                           
  3051                           ;TM1640.c: 41: TM1640_Delay(1);
  3052  001BCA  0E01               	movlw	1
  3053  001BCC  EC1A  F00E         	call	_TM1640_Delay
  3054                           
  3055                           ;TM1640.c: 42: RC3 = 0;
  3056  001BD0  9682               	bcf	3970,3,c	;volatile
  3057  001BD2  0012               	return		;funcret
  3058  001BD4                     __end_of_TM1640_Stop:
  3059                           	opt stack 0
  3060                           tblptru	equ	0xFF8
  3061                           tblptrh	equ	0xFF7
  3062                           tblptrl	equ	0xFF6
  3063                           tablat	equ	0xFF5
  3064                           intcon	equ	0xFF2
  3065                           postinc0	equ	0xFEE
  3066                           wreg	equ	0xFE8
  3067                           indf2	equ	0xFDF
  3068                           fsr2h	equ	0xFDA
  3069                           fsr2l	equ	0xFD9
  3070                           status	equ	0xFD8
  3071                           
  3072 ;; *************** function _TM1640_Start *****************
  3073 ;; Defined at:
  3074 ;;		line 19 in file "_01_USER/TM1640.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;		None
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;		None
  3079 ;; Return value:  Size  Location     Type
  3080 ;;		None               void
  3081 ;; Registers used:
  3082 ;;		wreg, status,2, status,0, cstack
  3083 ;; Tracked objects:
  3084 ;;		On entry : 0/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3092 ;;Total ram usage:        0 bytes
  3093 ;; Hardware stack levels used:    1
  3094 ;; Hardware stack levels required when called:    4
  3095 ;; This function calls:
  3096 ;;		_TM1640_Delay
  3097 ;; This function is called by:
  3098 ;;		_TM1640_Writer_Dates
  3099 ;;		_Init_TM1640
  3100 ;;		_Open_Display
  3101 ;;		_Disable_Display
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105                           	psect	text24
  3106  001BD4                     __ptext24:
  3107                           	opt stack 0
  3108  001BD4                     _TM1640_Start:
  3109                           	opt stack 23
  3110                           
  3111                           ;TM1640.c: 21: RC3 = 0;
  3112                           
  3113                           ;incstack = 0
  3114  001BD4  9682               	bcf	3970,3,c	;volatile
  3115                           
  3116                           ;TM1640.c: 22: TM1640_Delay(1);
  3117  001BD6  0E01               	movlw	1
  3118  001BD8  EC1A  F00E         	call	_TM1640_Delay
  3119                           
  3120                           ;TM1640.c: 23: RC4 = 1;
  3121  001BDC  8882               	bsf	3970,4,c	;volatile
  3122                           
  3123                           ;TM1640.c: 24: TM1640_Delay(1);
  3124  001BDE  0E01               	movlw	1
  3125  001BE0  EC1A  F00E         	call	_TM1640_Delay
  3126                           
  3127                           ;TM1640.c: 25: RC3 = 1;
  3128  001BE4  8682               	bsf	3970,3,c	;volatile
  3129                           
  3130                           ;TM1640.c: 26: TM1640_Delay(1);
  3131  001BE6  0E01               	movlw	1
  3132  001BE8  EC1A  F00E         	call	_TM1640_Delay
  3133                           
  3134                           ;TM1640.c: 27: RC4 = 0;
  3135  001BEC  9882               	bcf	3970,4,c	;volatile
  3136                           
  3137                           ;TM1640.c: 28: TM1640_Delay(1);
  3138  001BEE  0E01               	movlw	1
  3139  001BF0  EC1A  F00E         	call	_TM1640_Delay
  3140                           
  3141                           ;TM1640.c: 29: RC3 = 0;
  3142  001BF4  9682               	bcf	3970,3,c	;volatile
  3143  001BF6  0012               	return		;funcret
  3144  001BF8                     __end_of_TM1640_Start:
  3145                           	opt stack 0
  3146                           tblptru	equ	0xFF8
  3147                           tblptrh	equ	0xFF7
  3148                           tblptrl	equ	0xFF6
  3149                           tablat	equ	0xFF5
  3150                           intcon	equ	0xFF2
  3151                           postinc0	equ	0xFEE
  3152                           wreg	equ	0xFE8
  3153                           indf2	equ	0xFDF
  3154                           fsr2h	equ	0xFDA
  3155                           fsr2l	equ	0xFD9
  3156                           status	equ	0xFD8
  3157                           
  3158 ;; *************** function _TM1640_Delay *****************
  3159 ;; Defined at:
  3160 ;;		line 109 in file "_01_USER/TM1640.c"
  3161 ;; Parameters:    Size  Location     Type
  3162 ;;  Time            1    wreg     unsigned char 
  3163 ;; Auto vars:     Size  Location     Type
  3164 ;;  Time            1   24[COMRAM] unsigned char 
  3165 ;;  i               1   25[COMRAM] unsigned char 
  3166 ;; Return value:  Size  Location     Type
  3167 ;;		None               void
  3168 ;; Registers used:
  3169 ;;		wreg, status,2, status,0
  3170 ;; Tracked objects:
  3171 ;;		On entry : 0/0
  3172 ;;		On exit  : 0/0
  3173 ;;		Unchanged: 0/0
  3174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3176 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3178 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3179 ;;Total ram usage:        2 bytes
  3180 ;; Hardware stack levels used:    1
  3181 ;; Hardware stack levels required when called:    3
  3182 ;; This function calls:
  3183 ;;		Nothing
  3184 ;; This function is called by:
  3185 ;;		_TM1640_Start
  3186 ;;		_TM1640_Stop
  3187 ;;		_TM1640_Writer_Byte
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           
  3191                           	psect	text25
  3192  001C34                     __ptext25:
  3193                           	opt stack 0
  3194  001C34                     _TM1640_Delay:
  3195                           	opt stack 23
  3196                           
  3197                           ;incstack = 0
  3198                           ;TM1640_Delay@Time stored from wreg
  3199  001C34  6E19               	movwf	TM1640_Delay@Time,c
  3200  001C36                     
  3201                           ;TM1640.c: 114: {
  3202                           ;TM1640.c: 115: for(i=0; i<10; ++i);
  3203  001C36  0E00               	movlw	0
  3204  001C38  6E1A               	movwf	TM1640_Delay@i,c
  3205  001C3A  D002               	goto	l2034
  3206  001C3C  D004               	goto	l264
  3207  001C3E                     l2032:
  3208  001C3E  2A1A               	incf	TM1640_Delay@i,f,c
  3209  001C40                     l2034:
  3210  001C40  0E09               	movlw	9
  3211  001C42  641A               	cpfsgt	TM1640_Delay@i,c
  3212  001C44  D7FC               	goto	l2032
  3213  001C46                     l264:
  3214                           
  3215                           ;TM1640.c: 116: }while(--Time);
  3216  001C46  2E19               	decfsz	TM1640_Delay@Time,f,c
  3217  001C48  D7F6               	goto	l2026
  3218  001C4A  0012               	return	
  3219  001C4C  0012               	return		;funcret
  3220  001C4E                     __end_of_TM1640_Delay:
  3221                           	opt stack 0
  3222                           tblptru	equ	0xFF8
  3223                           tblptrh	equ	0xFF7
  3224                           tblptrl	equ	0xFF6
  3225                           tablat	equ	0xFF5
  3226                           intcon	equ	0xFF2
  3227                           postinc0	equ	0xFEE
  3228                           wreg	equ	0xFE8
  3229                           indf2	equ	0xFDF
  3230                           fsr2h	equ	0xFDA
  3231                           fsr2l	equ	0xFD9
  3232                           status	equ	0xFD8
  3233                           
  3234 ;; *************** function _GPIO_Config *****************
  3235 ;; Defined at:
  3236 ;;		line 38 in file "_01_USER/GPIO.c"
  3237 ;; Parameters:    Size  Location     Type
  3238 ;;		None
  3239 ;; Auto vars:     Size  Location     Type
  3240 ;;		None
  3241 ;; Return value:  Size  Location     Type
  3242 ;;		None               void
  3243 ;; Registers used:
  3244 ;;		wreg, status,2, status,0
  3245 ;; Tracked objects:
  3246 ;;		On entry : 0/0
  3247 ;;		On exit  : 0/0
  3248 ;;		Unchanged: 0/0
  3249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3254 ;;Total ram usage:        0 bytes
  3255 ;; Hardware stack levels used:    1
  3256 ;; Hardware stack levels required when called:    3
  3257 ;; This function calls:
  3258 ;;		Nothing
  3259 ;; This function is called by:
  3260 ;;		_main
  3261 ;; This function uses a non-reentrant model
  3262 ;;
  3263                           
  3264                           	psect	text26
  3265  001C90                     __ptext26:
  3266                           	opt stack 0
  3267  001C90                     _GPIO_Config:
  3268                           	opt stack 27
  3269                           
  3270                           ;GPIO.c: 41: TRISE &= 0x1f;
  3271                           
  3272                           ;incstack = 0
  3273  001C90  0E1F               	movlw	31
  3274  001C92  1696               	andwf	3990,f,c	;volatile
  3275                           
  3276                           ;GPIO.c: 43: RE5 = 0;
  3277  001C94  9A84               	bcf	3972,5,c	;volatile
  3278                           
  3279                           ;GPIO.c: 44: RE6 = 0;
  3280  001C96  9C84               	bcf	3972,6,c	;volatile
  3281                           
  3282                           ;GPIO.c: 45: RE7 = 0;
  3283  001C98  9E84               	bcf	3972,7,c	;volatile
  3284  001C9A  0012               	return		;funcret
  3285  001C9C                     __end_of_GPIO_Config:
  3286                           	opt stack 0
  3287                           tblptru	equ	0xFF8
  3288                           tblptrh	equ	0xFF7
  3289                           tblptrl	equ	0xFF6
  3290                           tablat	equ	0xFF5
  3291                           intcon	equ	0xFF2
  3292                           postinc0	equ	0xFEE
  3293                           wreg	equ	0xFE8
  3294                           indf2	equ	0xFDF
  3295                           fsr2h	equ	0xFDA
  3296                           fsr2l	equ	0xFD9
  3297                           status	equ	0xFD8
  3298                           
  3299 ;; *************** function _ADC6_Init *****************
  3300 ;; Defined at:
  3301 ;;		line 37 in file "_01_USER/My_ADC.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;		None
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;		None
  3306 ;; Return value:  Size  Location     Type
  3307 ;;		None               void
  3308 ;; Registers used:
  3309 ;;		wreg, status,2, status,0, cstack
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3319 ;;Total ram usage:        0 bytes
  3320 ;; Hardware stack levels used:    1
  3321 ;; Hardware stack levels required when called:    4
  3322 ;; This function calls:
  3323 ;;		_OpenADC
  3324 ;; This function is called by:
  3325 ;;		_main
  3326 ;; This function uses a non-reentrant model
  3327 ;;
  3328                           
  3329                           	psect	text27
  3330  001C60                     __ptext27:
  3331                           	opt stack 0
  3332  001C60                     _ADC6_Init:
  3333                           	opt stack 26
  3334                           
  3335                           ;My_ADC.c: 40: OpenADC(0b11111111 &
  3336                           ;My_ADC.c: 41: 0b11110011 &
  3337                           ;My_ADC.c: 42: 0b10001111
  3338                           ;My_ADC.c: 43: ,
  3339                           ;My_ADC.c: 44: 0b10011011
  3340                           ;My_ADC.c: 45: ,
  3341                           ;My_ADC.c: 46: 0b00111111 &
  3342                           ;My_ADC.c: 47: 0b11111111 &
  3343                           ;My_ADC.c: 48: 0b11110111 &
  3344                           ;My_ADC.c: 49: 0b11111000
  3345                           ;My_ADC.c: 50: );
  3346                           
  3347                           ;incstack = 0
  3348  001C60  0E9B               	movlw	155
  3349  001C62  6E19               	movwf	OpenADC@config2,c
  3350  001C64  0E30               	movlw	48
  3351  001C66  6E1A               	movwf	OpenADC@config3,c
  3352  001C68  0E83               	movlw	131
  3353  001C6A  ECA2  F00C         	call	_OpenADC
  3354                           
  3355                           ;My_ADC.c: 52: (PIE1bits.ADIE=0);
  3356  001C6E  9C9D               	bcf	3997,6,c	;volatile
  3357  001C70  0012               	return		;funcret
  3358  001C72                     __end_of_ADC6_Init:
  3359                           	opt stack 0
  3360                           tblptru	equ	0xFF8
  3361                           tblptrh	equ	0xFF7
  3362                           tblptrl	equ	0xFF6
  3363                           tablat	equ	0xFF5
  3364                           intcon	equ	0xFF2
  3365                           postinc0	equ	0xFEE
  3366                           wreg	equ	0xFE8
  3367                           indf2	equ	0xFDF
  3368                           fsr2h	equ	0xFDA
  3369                           fsr2l	equ	0xFD9
  3370                           status	equ	0xFD8
  3371                           
  3372 ;; *************** function _OpenADC *****************
  3373 ;; Defined at:
  3374 ;;		line 305 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  3375 ;; Parameters:    Size  Location     Type
  3376 ;;  config          1    wreg     unsigned char 
  3377 ;;  config2         1   24[COMRAM] unsigned char 
  3378 ;;  config3         1   25[COMRAM] unsigned char 
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;  config          1   28[COMRAM] unsigned char 
  3381 ;; Return value:  Size  Location     Type
  3382 ;;		None               void
  3383 ;; Registers used:
  3384 ;;		wreg, status,2, status,0
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3390 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3391 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3392 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3393 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3394 ;;Total ram usage:        5 bytes
  3395 ;; Hardware stack levels used:    1
  3396 ;; Hardware stack levels required when called:    3
  3397 ;; This function calls:
  3398 ;;		Nothing
  3399 ;; This function is called by:
  3400 ;;		_ADC6_Init
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           	psect	text28
  3405  001944                     __ptext28:
  3406                           	opt stack 0
  3407  001944                     _OpenADC:
  3408                           	opt stack 26
  3409                           
  3410                           ;incstack = 0
  3411                           ;OpenADC@config stored from wreg
  3412  001944  6E1D               	movwf	OpenADC@config,c
  3413  001946  0E00               	movlw	0
  3414  001948  6EC2               	movwf	4034,c	;volatile
  3415  00194A  0E00               	movlw	0
  3416  00194C  6EC1               	movwf	4033,c	;volatile
  3417  00194E  0E00               	movlw	0
  3418  001950  6EC0               	movwf	4032,c	;volatile
  3419  001952  5019               	movf	OpenADC@config2,w,c
  3420  001954  0B7C               	andlw	124
  3421  001956  6EC2               	movwf	4034,c	;volatile
  3422  001958  C01A  FFC1         	movff	OpenADC@config3,4033	;volatile
  3423  00195C  C01D  F01B         	movff	OpenADC@config,??_OpenADC
  3424  001960  90D8               	bcf	status,0,c
  3425  001962  361B               	rlcf	??_OpenADC,f,c
  3426  001964  90D8               	bcf	status,0,c
  3427  001966  361B               	rlcf	??_OpenADC,f,c
  3428  001968  0E38               	movlw	56
  3429  00196A  161B               	andwf	??_OpenADC,f,c
  3430  00196C  C01D  F01C         	movff	OpenADC@config,??_OpenADC+1
  3431  001970  3A1C               	swapf	??_OpenADC+1,f,c
  3432  001972  0E0F               	movlw	15
  3433  001974  161C               	andwf	??_OpenADC+1,f,c
  3434  001976  0E07               	movlw	7
  3435  001978  161C               	andwf	??_OpenADC+1,f,c
  3436  00197A  501D               	movf	OpenADC@config,w,c
  3437  00197C  0B80               	andlw	128
  3438  00197E  101C               	iorwf	??_OpenADC+1,w,c
  3439  001980  101B               	iorwf	??_OpenADC,w,c
  3440  001982  6EC0               	movwf	4032,c	;volatile
  3441  001984  AE19               	btfss	OpenADC@config2,7,c
  3442  001986  D003               	goto	l348
  3443  001988  9C9E               	bcf	3998,6,c	;volatile
  3444  00198A  8C9D               	bsf	3997,6,c	;volatile
  3445  00198C  8CF2               	bsf	intcon,6,c	;volatile
  3446  00198E                     l348:
  3447  00198E  80C2               	bsf	4034,0,c	;volatile
  3448  001990  0012               	return		;funcret
  3449  001992                     __end_of_OpenADC:
  3450                           	opt stack 0
  3451                           tblptru	equ	0xFF8
  3452                           tblptrh	equ	0xFF7
  3453                           tblptrl	equ	0xFF6
  3454                           tablat	equ	0xFF5
  3455                           intcon	equ	0xFF2
  3456                           postinc0	equ	0xFEE
  3457                           wreg	equ	0xFE8
  3458                           indf2	equ	0xFDF
  3459                           fsr2h	equ	0xFDA
  3460                           fsr2l	equ	0xFD9
  3461                           status	equ	0xFD8
  3462                           
  3463 ;; *************** function _Sys_Cyc *****************
  3464 ;; Defined at:
  3465 ;;		line 98 in file "_01_USER/My_Timer.c"
  3466 ;; Parameters:    Size  Location     Type
  3467 ;;		None
  3468 ;; Auto vars:     Size  Location     Type
  3469 ;;  _pulse          1   23[COMRAM] unsigned char 
  3470 ;; Return value:  Size  Location     Type
  3471 ;;		None               void
  3472 ;; Registers used:
  3473 ;;		wreg, status,2, status,0, cstack
  3474 ;; Tracked objects:
  3475 ;;		On entry : 0/0
  3476 ;;		On exit  : 0/0
  3477 ;;		Unchanged: 0/0
  3478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3480 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3481 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3482 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3483 ;;Total ram usage:       15 bytes
  3484 ;; Hardware stack levels used:    1
  3485 ;; Hardware stack levels required when called:    2
  3486 ;; This function calls:
  3487 ;;		_Delay_1Khz
  3488 ;;		_Key_FSM_Scan
  3489 ;;		i2_SetTimer0
  3490 ;;		i2___llmod
  3491 ;; This function is called by:
  3492 ;;		Interrupt level 2
  3493 ;; This function uses a non-reentrant model
  3494 ;;
  3495                           
  3496                           	psect	intcode
  3497  000008                     __pintcode:
  3498                           	opt stack 0
  3499  000008                     _Sys_Cyc:
  3500                           	opt stack 23
  3501                           
  3502                           ;incstack = 0
  3503  000008  CFFA F00A          	movff	pclath,??_Sys_Cyc
  3504  00000C  CFFB F00B          	movff	pclatu,??_Sys_Cyc+1
  3505  000010  CFE9 F00C          	movff	fsr0l,??_Sys_Cyc+2
  3506  000014  CFEA F00D          	movff	fsr0h,??_Sys_Cyc+3
  3507  000018  CFE1 F00E          	movff	fsr1l,??_Sys_Cyc+4
  3508  00001C  CFE2 F00F          	movff	fsr1h,??_Sys_Cyc+5
  3509  000020  CFD9 F010          	movff	fsr2l,??_Sys_Cyc+6
  3510  000024  CFDA F011          	movff	fsr2h,??_Sys_Cyc+7
  3511  000028  CFF3 F012          	movff	prodl,??_Sys_Cyc+8
  3512  00002C  CFF4 F013          	movff	prodh,??_Sys_Cyc+9
  3513  000030  CFF6 F014          	movff	tblptrl,??_Sys_Cyc+10
  3514  000034  CFF7 F015          	movff	tblptrh,??_Sys_Cyc+11
  3515  000038  CFF8 F016          	movff	tblptru,??_Sys_Cyc+12
  3516  00003C  CFF5 F017          	movff	tablat,??_Sys_Cyc+13
  3517                           
  3518                           ;My_Timer.c: 100: static unsigned char _overturn_1Khz = 0;
  3519                           ;My_Timer.c: 101: unsigned char _pulse = 10;
  3520  000040  0E0A               	movlw	10
  3521  000042  6E18               	movwf	Sys_Cyc@_pulse,c
  3522                           
  3523                           ;My_Timer.c: 104: if(TMR0IF && TMR0IE)
  3524  000044  B4F2               	btfsc	intcon,2,c	;volatile
  3525  000046  AAF2               	btfss	intcon,5,c	;volatile
  3526  000048  D03D               	goto	i2l202
  3527                           
  3528                           ;My_Timer.c: 105: {
  3529                           ;My_Timer.c: 106: Timer_Cyc = (Timer_Cyc+1) % 100000000;
  3530  00004A  0E01               	movlw	1
  3531  00004C  2430               	addwf	_Timer_Cyc,w,c
  3532  00004E  6E01               	movwf	i2___llmod@dividend,c
  3533  000050  0E00               	movlw	0
  3534  000052  2031               	addwfc	_Timer_Cyc+1,w,c
  3535  000054  6E02               	movwf	i2___llmod@dividend+1,c
  3536  000056  0E00               	movlw	0
  3537  000058  2032               	addwfc	_Timer_Cyc+2,w,c
  3538  00005A  6E03               	movwf	i2___llmod@dividend+2,c
  3539  00005C  0E00               	movlw	0
  3540  00005E  2033               	addwfc	_Timer_Cyc+3,w,c
  3541  000060  6E04               	movwf	i2___llmod@dividend+3,c
  3542  000062  0E00               	movlw	0
  3543  000064  6E05               	movwf	i2___llmod@divisor,c
  3544  000066  0EE1               	movlw	225
  3545  000068  6E06               	movwf	i2___llmod@divisor+1,c
  3546  00006A  0EF5               	movlw	245
  3547  00006C  6E07               	movwf	i2___llmod@divisor+2,c
  3548  00006E  0E05               	movlw	5
  3549  000070  6E08               	movwf	i2___llmod@divisor+3,c
  3550  000072  EC34  F00C         	call	i2___llmod	;wreg free
  3551  000076  C001  F030         	movff	?i2___llmod,_Timer_Cyc
  3552  00007A  C002  F031         	movff	?i2___llmod+1,_Timer_Cyc+1
  3553  00007E  C003  F032         	movff	?i2___llmod+2,_Timer_Cyc+2
  3554  000082  C004  F033         	movff	?i2___llmod+3,_Timer_Cyc+3
  3555                           
  3556                           ;My_Timer.c: 108: if( Handle_01_Switch._1Khz )
  3557  000086  5037               	movf	_Handle_01_Switch,w,c
  3558  000088  A4D8               	btfss	status,2,c
  3559  00008A  D00D               	goto	i2l2020
  3560  00008C  D012               	goto	i2l2022
  3561                           
  3562                           ;My_Timer.c: 109: {
  3563                           ;My_Timer.c: 110: while( _pulse-- )
  3564  00008E  D00B               	goto	i2l2020
  3565  000090                     i2l2012:
  3566                           
  3567                           ;My_Timer.c: 111: {
  3568                           ;My_Timer.c: 112: _overturn_1Khz =~ _overturn_1Khz;
  3569  000090  1E3A               	comf	Sys_Cyc@_overturn_1Khz,f,c
  3570                           
  3571                           ;My_Timer.c: 113: if(_overturn_1Khz) PORTEbits.RE7 = 1; else PORTEbits.RE7 = 0;
  3572  000092  503A               	movf	Sys_Cyc@_overturn_1Khz,w,c
  3573  000094  B4D8               	btfsc	status,2,c
  3574  000096  D002               	goto	i2l199
  3575  000098  8E84               	bsf	3972,7,c	;volatile
  3576  00009A  D002               	goto	i2l2018
  3577  00009C                     i2l199:
  3578  00009C  9E84               	bcf	3972,7,c	;volatile
  3579  00009E  D000               	goto	i2l2018
  3580  0000A0                     i2l2018:
  3581                           
  3582                           ;My_Timer.c: 114: Delay_1Khz();
  3583  0000A0  EC2A  F00D         	call	_Delay_1Khz	;wreg free
  3584  0000A4  D000               	goto	i2l2020
  3585  0000A6                     i2l2020:
  3586  0000A6  0618               	decf	Sys_Cyc@_pulse,f,c
  3587  0000A8  2818               	incf	Sys_Cyc@_pulse,w,c
  3588  0000AA  B4D8               	btfsc	status,2,c
  3589  0000AC  D002               	goto	i2l2022
  3590  0000AE  D7F0               	goto	i2l2012
  3591  0000B0  D000               	goto	i2l2022
  3592  0000B2                     i2l2022:
  3593                           
  3594                           ;My_Timer.c: 115: }
  3595                           ;My_Timer.c: 116: }
  3596                           ;My_Timer.c: 118: Key_FSM_Scan();
  3597  0000B2  EC97  F00A         	call	_Key_FSM_Scan	;wreg free
  3598                           
  3599                           ;My_Timer.c: 119: SetTimer0(78);
  3600  0000B6  0E00               	movlw	0
  3601  0000B8  6E02               	movwf	i2SetTimer0@_tmr+1,c
  3602  0000BA  0E4E               	movlw	78
  3603  0000BC  6E01               	movwf	i2SetTimer0@_tmr,c
  3604  0000BE  EC5E  F00D         	call	i2_SetTimer0	;wreg free
  3605  0000C2  D000               	goto	i2l202
  3606  0000C4                     i2l202:
  3607  0000C4  C017  FFF5         	movff	??_Sys_Cyc+13,tablat
  3608  0000C8  C016  FFF8         	movff	??_Sys_Cyc+12,tblptru
  3609  0000CC  C015  FFF7         	movff	??_Sys_Cyc+11,tblptrh
  3610  0000D0  C014  FFF6         	movff	??_Sys_Cyc+10,tblptrl
  3611  0000D4  C013  FFF4         	movff	??_Sys_Cyc+9,prodh
  3612  0000D8  C012  FFF3         	movff	??_Sys_Cyc+8,prodl
  3613  0000DC  C011  FFDA         	movff	??_Sys_Cyc+7,fsr2h
  3614  0000E0  C010  FFD9         	movff	??_Sys_Cyc+6,fsr2l
  3615  0000E4  C00F  FFE2         	movff	??_Sys_Cyc+5,fsr1h
  3616  0000E8  C00E  FFE1         	movff	??_Sys_Cyc+4,fsr1l
  3617  0000EC  C00D  FFEA         	movff	??_Sys_Cyc+3,fsr0h
  3618  0000F0  C00C  FFE9         	movff	??_Sys_Cyc+2,fsr0l
  3619  0000F4  C00B  FFFB         	movff	??_Sys_Cyc+1,pclatu
  3620  0000F8  C00A  FFFA         	movff	??_Sys_Cyc,pclath
  3621  0000FC  0011               	retfie		f
  3622  0000FE                     __end_of_Sys_Cyc:
  3623                           	opt stack 0
  3624                           pclatu	equ	0xFFB
  3625                           pclath	equ	0xFFA
  3626                           tblptru	equ	0xFF8
  3627                           tblptrh	equ	0xFF7
  3628                           tblptrl	equ	0xFF6
  3629                           tablat	equ	0xFF5
  3630                           prodh	equ	0xFF4
  3631                           prodl	equ	0xFF3
  3632                           intcon	equ	0xFF2
  3633                           postinc0	equ	0xFEE
  3634                           fsr0h	equ	0xFEA
  3635                           fsr0l	equ	0xFE9
  3636                           wreg	equ	0xFE8
  3637                           fsr1h	equ	0xFE2
  3638                           fsr1l	equ	0xFE1
  3639                           indf2	equ	0xFDF
  3640                           fsr2h	equ	0xFDA
  3641                           fsr2l	equ	0xFD9
  3642                           status	equ	0xFD8
  3643                           
  3644 ;; *************** function i2___llmod *****************
  3645 ;; Defined at:
  3646 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;  dividend        4    0[COMRAM] unsigned long 
  3649 ;;  divisor         4    4[COMRAM] unsigned long 
  3650 ;; Auto vars:     Size  Location     Type
  3651 ;;  __llmod         1    8[COMRAM] unsigned char 
  3652 ;; Return value:  Size  Location     Type
  3653 ;;                  4    0[COMRAM] unsigned long 
  3654 ;; Registers used:
  3655 ;;		wreg, status,2, status,0
  3656 ;; Tracked objects:
  3657 ;;		On entry : 0/0
  3658 ;;		On exit  : 0/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3661 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3662 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3664 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3665 ;;Total ram usage:        9 bytes
  3666 ;; Hardware stack levels used:    1
  3667 ;; This function calls:
  3668 ;;		Nothing
  3669 ;; This function is called by:
  3670 ;;		_Sys_Cyc
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674                           	psect	text30
  3675  001868                     __ptext30:
  3676                           	opt stack 0
  3677  001868                     i2___llmod:
  3678                           	opt stack 24
  3679                           
  3680                           ;incstack = 0
  3681  001868  5005               	movf	i2___llmod@divisor,w,c
  3682  00186A  1006               	iorwf	i2___llmod@divisor+1,w,c
  3683  00186C  1007               	iorwf	i2___llmod@divisor+2,w,c
  3684  00186E  1008               	iorwf	i2___llmod@divisor+3,w,c
  3685  001870  B4D8               	btfsc	status,2,c
  3686  001872  D029               	goto	i2l824
  3687  001874  0E01               	movlw	1
  3688  001876  6E09               	movwf	i2___llmod@counter,c
  3689  001878  D007               	goto	i2l1972
  3690  00187A                     i2l1970:
  3691  00187A  90D8               	bcf	status,0,c
  3692  00187C  3605               	rlcf	i2___llmod@divisor,f,c
  3693  00187E  3606               	rlcf	i2___llmod@divisor+1,f,c
  3694  001880  3607               	rlcf	i2___llmod@divisor+2,f,c
  3695  001882  3608               	rlcf	i2___llmod@divisor+3,f,c
  3696  001884  2A09               	incf	i2___llmod@counter,f,c
  3697  001886  D000               	goto	i2l1972
  3698  001888                     i2l1972:
  3699  001888  BE08               	btfsc	i2___llmod@divisor+3,7,c
  3700  00188A  D002               	goto	i2l1974
  3701  00188C  D7F6               	goto	i2l1970
  3702  00188E  D000               	goto	i2l1974
  3703  001890                     i2l1974:
  3704  001890  5005               	movf	i2___llmod@divisor,w,c
  3705  001892  5C01               	subwf	i2___llmod@dividend,w,c
  3706  001894  5006               	movf	i2___llmod@divisor+1,w,c
  3707  001896  5802               	subwfb	i2___llmod@dividend+1,w,c
  3708  001898  5007               	movf	i2___llmod@divisor+2,w,c
  3709  00189A  5803               	subwfb	i2___llmod@dividend+2,w,c
  3710  00189C  5008               	movf	i2___llmod@divisor+3,w,c
  3711  00189E  5804               	subwfb	i2___llmod@dividend+3,w,c
  3712  0018A0  A0D8               	btfss	status,0,c
  3713  0018A2  D009               	goto	i2l1978
  3714  0018A4  5005               	movf	i2___llmod@divisor,w,c
  3715  0018A6  5E01               	subwf	i2___llmod@dividend,f,c
  3716  0018A8  5006               	movf	i2___llmod@divisor+1,w,c
  3717  0018AA  5A02               	subwfb	i2___llmod@dividend+1,f,c
  3718  0018AC  5007               	movf	i2___llmod@divisor+2,w,c
  3719  0018AE  5A03               	subwfb	i2___llmod@dividend+2,f,c
  3720  0018B0  5008               	movf	i2___llmod@divisor+3,w,c
  3721  0018B2  5A04               	subwfb	i2___llmod@dividend+3,f,c
  3722  0018B4  D000               	goto	i2l1978
  3723  0018B6                     i2l1978:
  3724  0018B6  90D8               	bcf	status,0,c
  3725  0018B8  3208               	rrcf	i2___llmod@divisor+3,f,c
  3726  0018BA  3207               	rrcf	i2___llmod@divisor+2,f,c
  3727  0018BC  3206               	rrcf	i2___llmod@divisor+1,f,c
  3728  0018BE  3205               	rrcf	i2___llmod@divisor,f,c
  3729  0018C0  2E09               	decfsz	i2___llmod@counter,f,c
  3730  0018C2  D7E6               	goto	i2l1974
  3731  0018C4  D000               	goto	i2l824
  3732  0018C6                     i2l824:
  3733  0018C6  C001  F001         	movff	i2___llmod@dividend,?i2___llmod
  3734  0018CA  C002  F002         	movff	i2___llmod@dividend+1,?i2___llmod+1
  3735  0018CE  C003  F003         	movff	i2___llmod@dividend+2,?i2___llmod+2
  3736  0018D2  C004  F004         	movff	i2___llmod@dividend+3,?i2___llmod+3
  3737  0018D6  0012               	return		;funcret
  3738  0018D8                     __end_ofi2___llmod:
  3739                           	opt stack 0
  3740                           pclatu	equ	0xFFB
  3741                           pclath	equ	0xFFA
  3742                           tblptru	equ	0xFF8
  3743                           tblptrh	equ	0xFF7
  3744                           tblptrl	equ	0xFF6
  3745                           tablat	equ	0xFF5
  3746                           prodh	equ	0xFF4
  3747                           prodl	equ	0xFF3
  3748                           intcon	equ	0xFF2
  3749                           postinc0	equ	0xFEE
  3750                           fsr0h	equ	0xFEA
  3751                           fsr0l	equ	0xFE9
  3752                           wreg	equ	0xFE8
  3753                           fsr1h	equ	0xFE2
  3754                           fsr1l	equ	0xFE1
  3755                           indf2	equ	0xFDF
  3756                           fsr2h	equ	0xFDA
  3757                           fsr2l	equ	0xFD9
  3758                           status	equ	0xFD8
  3759                           
  3760 ;; *************** function i2_SetTimer0 *****************
  3761 ;; Defined at:
  3762 ;;		line 79 in file "_01_USER/My_Timer.c"
  3763 ;; Parameters:    Size  Location     Type
  3764 ;;  _tmr            2    0[COMRAM] unsigned int 
  3765 ;; Auto vars:     Size  Location     Type
  3766 ;;		None
  3767 ;; Return value:  Size  Location     Type
  3768 ;;		None               void
  3769 ;; Registers used:
  3770 ;;		wreg, status,2, status,0
  3771 ;; Tracked objects:
  3772 ;;		On entry : 0/0
  3773 ;;		On exit  : 0/0
  3774 ;;		Unchanged: 0/0
  3775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3776 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3778 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3779 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3780 ;;Total ram usage:        4 bytes
  3781 ;; Hardware stack levels used:    1
  3782 ;; This function calls:
  3783 ;;		Nothing
  3784 ;; This function is called by:
  3785 ;;		_Sys_Cyc
  3786 ;; This function uses a non-reentrant model
  3787 ;;
  3788                           
  3789                           	psect	text31
  3790  001ABC                     __ptext31:
  3791                           	opt stack 0
  3792  001ABC                     i2_SetTimer0:
  3793                           	opt stack 24
  3794                           
  3795                           ;My_Timer.c: 81: if(_tmr > 0xffff) _tmr = 0xffff;
  3796                           
  3797                           ;incstack = 0
  3798  001ABC  D003               	goto	i2l1958
  3799  001ABE  6801               	setf	i2SetTimer0@_tmr,c
  3800  001AC0  6802               	setf	i2SetTimer0@_tmr+1,c
  3801  001AC2  D000               	goto	i2l1958
  3802  001AC4                     i2l1958:
  3803                           
  3804                           ;My_Timer.c: 82: _tmr=0xffff-_tmr;
  3805  001AC4  C001  F003         	movff	i2SetTimer0@_tmr,??i2_SetTimer0
  3806  001AC8  C002  F004         	movff	i2SetTimer0@_tmr+1,??i2_SetTimer0+1
  3807  001ACC  1E03               	comf	??i2_SetTimer0,f,c
  3808  001ACE  1E04               	comf	??i2_SetTimer0+1,f,c
  3809  001AD0  4A03               	infsnz	??i2_SetTimer0,f,c
  3810  001AD2  2A04               	incf	??i2_SetTimer0+1,f,c
  3811  001AD4  0EFF               	movlw	255
  3812  001AD6  2403               	addwf	??i2_SetTimer0,w,c
  3813  001AD8  6E01               	movwf	i2SetTimer0@_tmr,c
  3814  001ADA  0EFF               	movlw	255
  3815  001ADC  2004               	addwfc	??i2_SetTimer0+1,w,c
  3816  001ADE  6E02               	movwf	i2SetTimer0@_tmr+1,c
  3817                           
  3818                           ;My_Timer.c: 83: TMR0H = _tmr/256;
  3819  001AE0  5002               	movf	i2SetTimer0@_tmr+1,w,c
  3820  001AE2  6ED7               	movwf	4055,c	;volatile
  3821                           
  3822                           ;My_Timer.c: 84: TMR0L = _tmr%256;
  3823  001AE4  C001  FFD6         	movff	i2SetTimer0@_tmr,4054	;volatile
  3824                           
  3825                           ;My_Timer.c: 85: TMR0IF = 0;
  3826  001AE8  94F2               	bcf	intcon,2,c	;volatile
  3827  001AEA  0012               	return		;funcret
  3828  001AEC                     __end_ofi2_SetTimer0:
  3829                           	opt stack 0
  3830                           pclatu	equ	0xFFB
  3831                           pclath	equ	0xFFA
  3832                           tblptru	equ	0xFF8
  3833                           tblptrh	equ	0xFF7
  3834                           tblptrl	equ	0xFF6
  3835                           tablat	equ	0xFF5
  3836                           prodh	equ	0xFF4
  3837                           prodl	equ	0xFF3
  3838                           intcon	equ	0xFF2
  3839                           postinc0	equ	0xFEE
  3840                           fsr0h	equ	0xFEA
  3841                           fsr0l	equ	0xFE9
  3842                           wreg	equ	0xFE8
  3843                           fsr1h	equ	0xFE2
  3844                           fsr1l	equ	0xFE1
  3845                           indf2	equ	0xFDF
  3846                           fsr2h	equ	0xFDA
  3847                           fsr2l	equ	0xFD9
  3848                           status	equ	0xFD8
  3849                           
  3850 ;; *************** function _Key_FSM_Scan *****************
  3851 ;; Defined at:
  3852 ;;		line 75 in file "_01_USER/Key.c"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;		None
  3855 ;; Auto vars:     Size  Location     Type
  3856 ;;		None
  3857 ;; Return value:  Size  Location     Type
  3858 ;;		None               void
  3859 ;; Registers used:
  3860 ;;		wreg, status,2, status,0, cstack
  3861 ;; Tracked objects:
  3862 ;;		On entry : 0/0
  3863 ;;		On exit  : 0/0
  3864 ;;		Unchanged: 0/0
  3865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3870 ;;Total ram usage:        0 bytes
  3871 ;; Hardware stack levels used:    1
  3872 ;; Hardware stack levels required when called:    1
  3873 ;; This function calls:
  3874 ;;		_Key_Scan
  3875 ;; This function is called by:
  3876 ;;		_Sys_Cyc
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           
  3880                           	psect	text32
  3881  00152E                     __ptext32:
  3882                           	opt stack 0
  3883  00152E                     _Key_FSM_Scan:
  3884                           	opt stack 23
  3885                           
  3886                           ;Key.c: 77: Key_Scan();
  3887                           
  3888                           ;incstack = 0
  3889  00152E  EC76  F00D         	call	_Key_Scan	;wreg free
  3890                           
  3891                           ;Key.c: 78: if( Local_Key_FSM.key_state & 0x01 ) Local_Key_FSM.key[0]++;
  3892  001532  A03C               	btfss	_Local_Key_FSM,0,c	;volatile
  3893  001534  D002               	goto	i2l1418
  3894  001536  2A42               	incf	_Local_Key_FSM+6,f,c	;volatile
  3895  001538  D000               	goto	i2l1418
  3896  00153A                     i2l1418:
  3897                           
  3898                           ;Key.c: 79: if( Local_Key_FSM.key_state & 0x02 ) Local_Key_FSM.key[1]++;
  3899  00153A  A23C               	btfss	_Local_Key_FSM,1,c	;volatile
  3900  00153C  D002               	goto	i2l1422
  3901  00153E  2A43               	incf	_Local_Key_FSM+7,f,c	;volatile
  3902  001540  D000               	goto	i2l1422
  3903  001542                     i2l1422:
  3904                           
  3905                           ;Key.c: 80: if( Local_Key_FSM.key_state & 0x04 ) Local_Key_FSM.key[2]++;
  3906  001542  A43C               	btfss	_Local_Key_FSM,2,c	;volatile
  3907  001544  D002               	goto	i2l1426
  3908  001546  2A44               	incf	_Local_Key_FSM+8,f,c	;volatile
  3909  001548  D000               	goto	i2l1426
  3910  00154A                     i2l1426:
  3911                           
  3912                           ;Key.c: 81: if( Local_Key_FSM.key_state & 0x08 ) Local_Key_FSM.key[3]++;
  3913  00154A  A63C               	btfss	_Local_Key_FSM,3,c	;volatile
  3914  00154C  D002               	goto	i2l1430
  3915  00154E  2A45               	incf	_Local_Key_FSM+9,f,c	;volatile
  3916  001550  D000               	goto	i2l1430
  3917  001552                     i2l1430:
  3918                           
  3919                           ;Key.c: 82: if( Local_Key_FSM.key_state & 0x10 ) Local_Key_FSM.key[4]++;
  3920  001552  A83C               	btfss	_Local_Key_FSM,4,c	;volatile
  3921  001554  D002               	goto	i2l1434
  3922  001556  2A46               	incf	_Local_Key_FSM+10,f,c	;volatile
  3923  001558  D000               	goto	i2l1434
  3924  00155A                     i2l1434:
  3925                           
  3926                           ;Key.c: 84: if( Local_Key_FSM.key_state == 0x00 )
  3927  00155A  503C               	movf	_Local_Key_FSM,w,c	;volatile
  3928  00155C  A4D8               	btfss	status,2,c
  3929  00155E  D00B               	goto	i2l1438
  3930                           
  3931                           ;Key.c: 85: {
  3932                           ;Key.c: 86: Local_Key_FSM.key[0] = 0;
  3933  001560  0E00               	movlw	0
  3934  001562  6E42               	movwf	_Local_Key_FSM+6,c	;volatile
  3935                           
  3936                           ;Key.c: 87: Local_Key_FSM.key[1] = 0;
  3937  001564  0E00               	movlw	0
  3938  001566  6E43               	movwf	_Local_Key_FSM+7,c	;volatile
  3939                           
  3940                           ;Key.c: 88: Local_Key_FSM.key[2] = 0;
  3941  001568  0E00               	movlw	0
  3942  00156A  6E44               	movwf	_Local_Key_FSM+8,c	;volatile
  3943                           
  3944                           ;Key.c: 89: Local_Key_FSM.key[3] = 0;
  3945  00156C  0E00               	movlw	0
  3946  00156E  6E45               	movwf	_Local_Key_FSM+9,c	;volatile
  3947                           
  3948                           ;Key.c: 90: Local_Key_FSM.key[4] = 0;
  3949  001570  0E00               	movlw	0
  3950  001572  6E46               	movwf	_Local_Key_FSM+10,c	;volatile
  3951                           
  3952                           ;Key.c: 91: }
  3953  001574  0012               	return	
  3954  001576                     i2l1438:
  3955                           
  3956                           ;Key.c: 92: else
  3957                           ;Key.c: 93: {
  3958                           ;Key.c: 95: if( Local_Key_FSM.key[0] < 5 ) Local_Key_FSM.key_FSM[0] = 0x00;
  3959  001576  0E05               	movlw	5
  3960  001578  6042               	cpfslt	_Local_Key_FSM+6,c	;volatile
  3961  00157A  D002               	goto	i2l1442
  3962  00157C  0E00               	movlw	0
  3963  00157E  D006               	goto	L2
  3964  001580                     i2l1442:
  3965                           
  3966                           ;Key.c: 96: else if( Local_Key_FSM.key[0] < 50 ) Local_Key_FSM.key_FSM[0] = 0x01;
  3967  001580  0E32               	movlw	50
  3968  001582  6042               	cpfslt	_Local_Key_FSM+6,c	;volatile
  3969  001584  D002               	goto	i2l1446
  3970  001586  0E01               	movlw	1
  3971  001588  D001               	goto	L2
  3972  00158A                     i2l1446:
  3973                           
  3974                           ;Key.c: 97: else Local_Key_FSM.key_FSM[0] = 0x03;
  3975  00158A  0E03               	movlw	3
  3976  00158C                     L2:
  3977  00158C  6E3D               	movwf	_Local_Key_FSM+1,c	;volatile
  3978  00158E  D000               	goto	i2l1448
  3979  001590                     i2l1448:
  3980                           
  3981                           ;Key.c: 99: if( Local_Key_FSM.key[1] < 5 ) Local_Key_FSM.key_FSM[1] = 0x00;
  3982  001590  0E05               	movlw	5
  3983  001592  6043               	cpfslt	_Local_Key_FSM+7,c	;volatile
  3984  001594  D002               	goto	i2l1452
  3985  001596  0E00               	movlw	0
  3986  001598  D006               	goto	L4
  3987  00159A                     i2l1452:
  3988                           
  3989                           ;Key.c: 100: else if( Local_Key_FSM.key[1] < 50 ) Local_Key_FSM.key_FSM[1] = 0x01;
  3990  00159A  0E32               	movlw	50
  3991  00159C  6043               	cpfslt	_Local_Key_FSM+7,c	;volatile
  3992  00159E  D002               	goto	i2l1456
  3993  0015A0  0E01               	movlw	1
  3994  0015A2  D001               	goto	L4
  3995  0015A4                     i2l1456:
  3996                           
  3997                           ;Key.c: 101: else Local_Key_FSM.key_FSM[1] = 0x03;
  3998  0015A4  0E03               	movlw	3
  3999  0015A6                     L4:
  4000  0015A6  6E3E               	movwf	_Local_Key_FSM+2,c	;volatile
  4001  0015A8  D000               	goto	i2l1458
  4002  0015AA                     i2l1458:
  4003                           
  4004                           ;Key.c: 103: if( Local_Key_FSM.key[2] < 5 ) Local_Key_FSM.key_FSM[2] = 0x00;
  4005  0015AA  0E05               	movlw	5
  4006  0015AC  6044               	cpfslt	_Local_Key_FSM+8,c	;volatile
  4007  0015AE  D002               	goto	i2l1462
  4008  0015B0  0E00               	movlw	0
  4009  0015B2  D006               	goto	L6
  4010  0015B4                     i2l1462:
  4011                           
  4012                           ;Key.c: 104: else if( Local_Key_FSM.key[2] < 50 ) Local_Key_FSM.key_FSM[2] = 0x01;
  4013  0015B4  0E32               	movlw	50
  4014  0015B6  6044               	cpfslt	_Local_Key_FSM+8,c	;volatile
  4015  0015B8  D002               	goto	i2l1466
  4016  0015BA  0E01               	movlw	1
  4017  0015BC  D001               	goto	L6
  4018  0015BE                     i2l1466:
  4019                           
  4020                           ;Key.c: 105: else Local_Key_FSM.key_FSM[2] = 0x03;
  4021  0015BE  0E03               	movlw	3
  4022  0015C0                     L6:
  4023  0015C0  6E3F               	movwf	_Local_Key_FSM+3,c	;volatile
  4024  0015C2  D000               	goto	i2l1468
  4025  0015C4                     i2l1468:
  4026                           
  4027                           ;Key.c: 107: if( Local_Key_FSM.key[3] < 5 ) Local_Key_FSM.key_FSM[3] = 0x00;
  4028  0015C4  0E05               	movlw	5
  4029  0015C6  6045               	cpfslt	_Local_Key_FSM+9,c	;volatile
  4030  0015C8  D002               	goto	i2l1472
  4031  0015CA  0E00               	movlw	0
  4032  0015CC  D006               	goto	L8
  4033  0015CE                     i2l1472:
  4034                           
  4035                           ;Key.c: 108: else if( Local_Key_FSM.key[3] < 50 ) Local_Key_FSM.key_FSM[3] = 0x01;
  4036  0015CE  0E32               	movlw	50
  4037  0015D0  6045               	cpfslt	_Local_Key_FSM+9,c	;volatile
  4038  0015D2  D002               	goto	i2l1476
  4039  0015D4  0E01               	movlw	1
  4040  0015D6  D001               	goto	L8
  4041  0015D8                     i2l1476:
  4042                           
  4043                           ;Key.c: 109: else Local_Key_FSM.key_FSM[3] = 0x03;
  4044  0015D8  0E03               	movlw	3
  4045  0015DA                     L8:
  4046  0015DA  6E40               	movwf	_Local_Key_FSM+4,c	;volatile
  4047  0015DC  D000               	goto	i2l1478
  4048  0015DE                     i2l1478:
  4049                           
  4050                           ;Key.c: 111: if( Local_Key_FSM.key[4] < 5 ) Local_Key_FSM.key_FSM[4] = 0x00;
  4051  0015DE  0E05               	movlw	5
  4052  0015E0  6046               	cpfslt	_Local_Key_FSM+10,c	;volatile
  4053  0015E2  D002               	goto	i2l1482
  4054  0015E4  0E00               	movlw	0
  4055  0015E6  D006               	goto	L10
  4056  0015E8                     i2l1482:
  4057                           
  4058                           ;Key.c: 112: else if( Local_Key_FSM.key[4] < 50 ) Local_Key_FSM.key_FSM[4] = 0x01;
  4059  0015E8  0E32               	movlw	50
  4060  0015EA  6046               	cpfslt	_Local_Key_FSM+10,c	;volatile
  4061  0015EC  D002               	goto	i2l1486
  4062  0015EE  0E01               	movlw	1
  4063  0015F0  D001               	goto	L10
  4064  0015F2                     i2l1486:
  4065                           
  4066                           ;Key.c: 113: else Local_Key_FSM.key_FSM[4] = 0x03;
  4067  0015F2  0E03               	movlw	3
  4068  0015F4                     L10:
  4069  0015F4  6E41               	movwf	_Local_Key_FSM+5,c	;volatile
  4070  0015F6  D000               	goto	i2l119
  4071  0015F8                     i2l119:
  4072                           
  4073                           ;Key.c: 116: Local_Key_FSM.key_group = 0x00;
  4074  0015F8  0E00               	movlw	0
  4075  0015FA  6E41               	movwf	_Local_Key_FSM+5,c	;volatile
  4076                           
  4077                           ;Key.c: 117: if( Local_Key_FSM.key_FSM[0] != 0x00 ) Local_Key_FSM.key_group |= 0x01<<0;
  4078  0015FC  503D               	movf	_Local_Key_FSM+1,w,c	;volatile
  4079  0015FE  B4D8               	btfsc	status,2,c
  4080  001600  D002               	goto	i2l1490
  4081  001602  8041               	bsf	_Local_Key_FSM+5,0,c	;volatile
  4082  001604  D000               	goto	i2l1490
  4083  001606                     i2l1490:
  4084                           
  4085                           ;Key.c: 118: if( Local_Key_FSM.key_FSM[1] != 0x00 ) Local_Key_FSM.key_group |= 0x01<<1;
  4086  001606  503E               	movf	_Local_Key_FSM+2,w,c	;volatile
  4087  001608  B4D8               	btfsc	status,2,c
  4088  00160A  D002               	goto	i2l1494
  4089  00160C  8241               	bsf	_Local_Key_FSM+5,1,c	;volatile
  4090  00160E  D000               	goto	i2l1494
  4091  001610                     i2l1494:
  4092                           
  4093                           ;Key.c: 119: if( Local_Key_FSM.key_FSM[2] != 0x00 ) Local_Key_FSM.key_group |= 0x01<<2;
  4094  001610  503F               	movf	_Local_Key_FSM+3,w,c	;volatile
  4095  001612  B4D8               	btfsc	status,2,c
  4096  001614  D002               	goto	i2l1498
  4097  001616  8441               	bsf	_Local_Key_FSM+5,2,c	;volatile
  4098  001618  D000               	goto	i2l1498
  4099  00161A                     i2l1498:
  4100                           
  4101                           ;Key.c: 120: if( Local_Key_FSM.key_FSM[3] != 0x00 ) Local_Key_FSM.key_group |= 0x01<<3;
  4102  00161A  5040               	movf	_Local_Key_FSM+4,w,c	;volatile
  4103  00161C  B4D8               	btfsc	status,2,c
  4104  00161E  D002               	goto	i2l1502
  4105  001620  8641               	bsf	_Local_Key_FSM+5,3,c	;volatile
  4106  001622  D000               	goto	i2l1502
  4107  001624                     i2l1502:
  4108                           
  4109                           ;Key.c: 121: if( Local_Key_FSM.key_FSM[4] != 0x00 ) Local_Key_FSM.key_group |= 0x01<<4;
  4110  001624  5041               	movf	_Local_Key_FSM+5,w,c	;volatile
  4111  001626  B4D8               	btfsc	status,2,c
  4112  001628  0012               	return	
  4113  00162A  8841               	bsf	_Local_Key_FSM+5,4,c	;volatile
  4114  00162C  0012               	return	
  4115  00162E  0012               	return		;funcret
  4116  001630                     __end_of_Key_FSM_Scan:
  4117                           	opt stack 0
  4118                           pclatu	equ	0xFFB
  4119                           pclath	equ	0xFFA
  4120                           tblptru	equ	0xFF8
  4121                           tblptrh	equ	0xFF7
  4122                           tblptrl	equ	0xFF6
  4123                           tablat	equ	0xFF5
  4124                           prodh	equ	0xFF4
  4125                           prodl	equ	0xFF3
  4126                           intcon	equ	0xFF2
  4127                           postinc0	equ	0xFEE
  4128                           fsr0h	equ	0xFEA
  4129                           fsr0l	equ	0xFE9
  4130                           wreg	equ	0xFE8
  4131                           fsr1h	equ	0xFE2
  4132                           fsr1l	equ	0xFE1
  4133                           indf2	equ	0xFDF
  4134                           fsr2h	equ	0xFDA
  4135                           fsr2l	equ	0xFD9
  4136                           status	equ	0xFD8
  4137                           
  4138 ;; *************** function _Key_Scan *****************
  4139 ;; Defined at:
  4140 ;;		line 54 in file "_01_USER/Key.c"
  4141 ;; Parameters:    Size  Location     Type
  4142 ;;		None
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;		None
  4145 ;; Return value:  Size  Location     Type
  4146 ;;		None               void
  4147 ;; Registers used:
  4148 ;;		wreg, status,2, status,0
  4149 ;; Tracked objects:
  4150 ;;		On entry : 0/0
  4151 ;;		On exit  : 0/0
  4152 ;;		Unchanged: 0/0
  4153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4158 ;;Total ram usage:        0 bytes
  4159 ;; Hardware stack levels used:    1
  4160 ;; This function calls:
  4161 ;;		Nothing
  4162 ;; This function is called by:
  4163 ;;		_Key_FSM_Scan
  4164 ;; This function uses a non-reentrant model
  4165 ;;
  4166                           
  4167                           	psect	text33
  4168  001AEC                     __ptext33:
  4169                           	opt stack 0
  4170  001AEC                     _Key_Scan:
  4171                           	opt stack 23
  4172                           
  4173                           ;Key.c: 56: Local_Key_FSM.key_state = 0x00;
  4174                           
  4175                           ;incstack = 0
  4176  001AEC  0E00               	movlw	0
  4177  001AEE  6E3C               	movwf	_Local_Key_FSM,c	;volatile
  4178                           
  4179                           ;Key.c: 58: if( RE3 == 0 ) Local_Key_FSM.key_state |= (0x01 << 0) ;
  4180  001AF0  B684               	btfsc	3972,3,c	;volatile
  4181  001AF2  D002               	goto	i2l1232
  4182  001AF4  803C               	bsf	_Local_Key_FSM,0,c	;volatile
  4183  001AF6  D000               	goto	i2l1232
  4184  001AF8                     i2l1232:
  4185                           
  4186                           ;Key.c: 59: if( RE2 == 0 ) Local_Key_FSM.key_state |= (0x01 << 1) ;
  4187  001AF8  B484               	btfsc	3972,2,c	;volatile
  4188  001AFA  D002               	goto	i2l1236
  4189  001AFC  823C               	bsf	_Local_Key_FSM,1,c	;volatile
  4190  001AFE  D000               	goto	i2l1236
  4191  001B00                     i2l1236:
  4192                           
  4193                           ;Key.c: 60: if( RD6 == 0 ) Local_Key_FSM.key_state |= (0x01 << 2) ;
  4194  001B00  BC83               	btfsc	3971,6,c	;volatile
  4195  001B02  D002               	goto	i2l1240
  4196  001B04  843C               	bsf	_Local_Key_FSM,2,c	;volatile
  4197  001B06  D000               	goto	i2l1240
  4198  001B08                     i2l1240:
  4199                           
  4200                           ;Key.c: 61: if( RE4 == 0 ) Local_Key_FSM.key_state |= (0x01 << 3) ;
  4201  001B08  B884               	btfsc	3972,4,c	;volatile
  4202  001B0A  D002               	goto	i2l1244
  4203  001B0C  863C               	bsf	_Local_Key_FSM,3,c	;volatile
  4204  001B0E  D000               	goto	i2l1244
  4205  001B10                     i2l1244:
  4206                           
  4207                           ;Key.c: 62: if( RD7 == 0 ) Local_Key_FSM.key_state |= (0x01 << 4) ;
  4208  001B10  BE83               	btfsc	3971,7,c	;volatile
  4209  001B12  0012               	return	
  4210  001B14  883C               	bsf	_Local_Key_FSM,4,c	;volatile
  4211  001B16  0012               	return	
  4212  001B18  0012               	return		;funcret
  4213  001B1A                     __end_of_Key_Scan:
  4214                           	opt stack 0
  4215                           pclatu	equ	0xFFB
  4216                           pclath	equ	0xFFA
  4217                           tblptru	equ	0xFF8
  4218                           tblptrh	equ	0xFF7
  4219                           tblptrl	equ	0xFF6
  4220                           tablat	equ	0xFF5
  4221                           prodh	equ	0xFF4
  4222                           prodl	equ	0xFF3
  4223                           intcon	equ	0xFF2
  4224                           postinc0	equ	0xFEE
  4225                           fsr0h	equ	0xFEA
  4226                           fsr0l	equ	0xFE9
  4227                           wreg	equ	0xFE8
  4228                           fsr1h	equ	0xFE2
  4229                           fsr1l	equ	0xFE1
  4230                           indf2	equ	0xFDF
  4231                           fsr2h	equ	0xFDA
  4232                           fsr2l	equ	0xFD9
  4233                           status	equ	0xFD8
  4234                           
  4235 ;; *************** function _Delay_1Khz *****************
  4236 ;; Defined at:
  4237 ;;		line 75 in file "_01_USER/My_Delay.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;		None
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;  c               1    2[COMRAM] unsigned char 
  4242 ;;  b               1    1[COMRAM] unsigned char 
  4243 ;;  a               1    0[COMRAM] unsigned char 
  4244 ;; Return value:  Size  Location     Type
  4245 ;;		None               void
  4246 ;; Registers used:
  4247 ;;		wreg, status,2, status,0
  4248 ;; Tracked objects:
  4249 ;;		On entry : 0/0
  4250 ;;		On exit  : 0/0
  4251 ;;		Unchanged: 0/0
  4252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4254 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4256 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4257 ;;Total ram usage:        3 bytes
  4258 ;; Hardware stack levels used:    1
  4259 ;; This function calls:
  4260 ;;		Nothing
  4261 ;; This function is called by:
  4262 ;;		_Sys_Cyc
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           	psect	text34
  4267  001A54                     __ptext34:
  4268                           	opt stack 0
  4269  001A54                     _Delay_1Khz:
  4270                           	opt stack 24
  4271                           
  4272                           ;My_Delay.c: 77: unsigned char a,b,c;
  4273                           ;My_Delay.c: 78: for(c=1;c>0;c--)
  4274                           
  4275                           ;incstack = 0
  4276  001A54  0E01               	movlw	1
  4277  001A56  6E03               	movwf	Delay_1Khz@c,c
  4278  001A58  5003               	movf	Delay_1Khz@c,w,c
  4279  001A5A  B4D8               	btfsc	status,2,c
  4280  001A5C  0012               	return	
  4281  001A5E  D001               	goto	i2l1392
  4282  001A60  0012               	return	
  4283  001A62                     i2l1392:
  4284                           
  4285                           ;My_Delay.c: 79: for(b=32;b>0;b--)
  4286  001A62  0E20               	movlw	32
  4287  001A64  6E02               	movwf	Delay_1Khz@b,c
  4288  001A66  5002               	movf	Delay_1Khz@b,w,c
  4289  001A68  B4D8               	btfsc	status,2,c
  4290  001A6A  D00D               	goto	i2l1408
  4291  001A6C  D001               	goto	i2l1396
  4292  001A6E  D00B               	goto	i2l1408
  4293  001A70                     i2l1396:
  4294                           
  4295                           ;My_Delay.c: 80: for(a=2;a>0;a--);
  4296  001A70  0E02               	movlw	2
  4297  001A72  6E01               	movwf	Delay_1Khz@a,c
  4298  001A74  5001               	movf	Delay_1Khz@a,w,c
  4299  001A76  B4D8               	btfsc	status,2,c
  4300  001A78  D004               	goto	i2l1404
  4301  001A7A  D001               	goto	i2l1400
  4302  001A7C  D002               	goto	i2l1404
  4303  001A7E                     i2l1400:
  4304  001A7E  0601               	decf	Delay_1Khz@a,f,c
  4305  001A80  D7F9               	goto	L11
  4306  001A82                     i2l1404:
  4307  001A82  0602               	decf	Delay_1Khz@b,f,c
  4308  001A84  D7F0               	goto	L12
  4309  001A86                     i2l1408:
  4310  001A86  0603               	decf	Delay_1Khz@c,f,c
  4311  001A88  D7E7               	goto	L13
  4312  001A8A  0012               	return		;funcret
  4313  001A8C                     __end_of_Delay_1Khz:
  4314                           	opt stack 0
  4315                           pclatu	equ	0xFFB
  4316                           pclath	equ	0xFFA
  4317                           tblptru	equ	0xFF8
  4318                           tblptrh	equ	0xFF7
  4319                           tblptrl	equ	0xFF6
  4320                           tablat	equ	0xFF5
  4321                           prodh	equ	0xFF4
  4322                           prodl	equ	0xFF3
  4323                           intcon	equ	0xFF2
  4324                           postinc0	equ	0xFEE
  4325                           fsr0h	equ	0xFEA
  4326                           fsr0l	equ	0xFE9
  4327                           wreg	equ	0xFE8
  4328                           fsr1h	equ	0xFE2
  4329                           fsr1l	equ	0xFE1
  4330                           indf2	equ	0xFDF
  4331                           fsr2h	equ	0xFDA
  4332                           fsr2l	equ	0xFD9
  4333                           status	equ	0xFD8
  4334                           pclatu	equ	0xFFB
  4335                           pclath	equ	0xFFA
  4336                           tblptru	equ	0xFF8
  4337                           tblptrh	equ	0xFF7
  4338                           tblptrl	equ	0xFF6
  4339                           tablat	equ	0xFF5
  4340                           prodh	equ	0xFF4
  4341                           prodl	equ	0xFF3
  4342                           intcon	equ	0xFF2
  4343                           postinc0	equ	0xFEE
  4344                           fsr0h	equ	0xFEA
  4345                           fsr0l	equ	0xFE9
  4346                           wreg	equ	0xFE8
  4347                           fsr1h	equ	0xFE2
  4348                           fsr1l	equ	0xFE1
  4349                           indf2	equ	0xFDF
  4350                           fsr2h	equ	0xFDA
  4351                           fsr2l	equ	0xFD9
  4352                           status	equ	0xFD8
  4353                           
  4354                           	psect	rparam
  4355  0000                     pclatu	equ	0xFFB
  4356                           pclath	equ	0xFFA
  4357                           tblptru	equ	0xFF8
  4358                           tblptrh	equ	0xFF7
  4359                           tblptrl	equ	0xFF6
  4360                           tablat	equ	0xFF5
  4361                           prodh	equ	0xFF4
  4362                           prodl	equ	0xFF3
  4363                           intcon	equ	0xFF2
  4364                           postinc0	equ	0xFEE
  4365                           fsr0h	equ	0xFEA
  4366                           fsr0l	equ	0xFE9
  4367                           wreg	equ	0xFE8
  4368                           fsr1h	equ	0xFE2
  4369                           fsr1l	equ	0xFE1
  4370                           indf2	equ	0xFDF
  4371                           fsr2h	equ	0xFDA
  4372                           fsr2l	equ	0xFD9
  4373                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     47      69
    BANK0           160     24      24
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _Timer0_Init->_SetTimer0
    _TM1640_Show_Decimal->_TM1640_Writer_Dates
    _TM1640_Show_Decimal->___ftdiv
    ___awmod->___fttol
    _TM1640_Writer_Dates->___awmod
    _Get_ADC6->___ftdiv
    ___lwtoft->___ftpack
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul
    _Manage_Message->_Key_FSM_Read
    _Init_TM1640->_TM1640_Writer_Byte
    _TM1640_Writer_Byte->_TM1640_Delay
    _TM1640_Stop->_TM1640_Delay
    _TM1640_Start->_TM1640_Delay
    _ADC6_Init->_OpenADC

Critical Paths under _Sys_Cyc in COMRAM

    _Sys_Cyc->i2___llmod

Critical Paths under _main in BANK0

    _Show_Result->_TM1640_Show_Decimal
    _TM1640_Show_Decimal->___ftdiv
    _Get_ADC6->___ftdiv
    ___ftdiv->___ftmul

Critical Paths under _Sys_Cyc in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Sys_Cyc in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Sys_Cyc in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Sys_Cyc in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Sys_Cyc in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Sys_Cyc in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Sys_Cyc in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Sys_Cyc in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Sys_Cyc in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Sys_Cyc in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Sys_Cyc in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Sys_Cyc in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Sys_Cyc in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Sys_Cyc in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Sys_Cyc in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Sys_Cyc in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   18007
                                             21 BANK0      3     3      0
                          _ADC6_Init
                        _GPIO_Config
                        _Init_TM1640
                           _Key_Init
                     _Manage_Message
                                _Run
                        _Show_Result
                        _Timer0_Init
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0     194
                          _SetTimer0
 ---------------------------------------------------------------------------------
 (2) _SetTimer0                                            4     2      2     194
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Show_Result                                          0     0      0    8678
                _TM1640_Show_Decimal
 ---------------------------------------------------------------------------------
 (2) _TM1640_Show_Decimal                                  3     0      3    8678
                                             18 BANK0      3     0      3
                _TM1640_Writer_Dates
                            ___awmod
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     631
                                             24 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     953
                                             39 COMRAM     6     2      4
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) _TM1640_Writer_Dates                                  2     1      1     885
                                             45 COMRAM     2     1      1
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
                            ___awmod (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) _Run                                                  0     0      0    8410
                           _Get_ADC6
                            ___llmod
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     422
                                             24 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) _Get_ADC6                                             0     0      0    7988
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2104
                                             32 COMRAM     3     0      3
                            _ReadADC (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    2846
                                             35 COMRAM     9     3      6
                                              0 BANK0      6     6      0
                            _ReadADC (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3038
                                             44 COMRAM     3     3      0
                                              6 BANK0     12     6      6
                            _ReadADC (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2008
                                             24 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) _ReadADC                                              4     2      2       0
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Manage_Message                                       0     0      0     134
                       _Key_FSM_Read
 ---------------------------------------------------------------------------------
 (2) _Key_FSM_Read                                         6     6      0     134
                                             24 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _Key_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_TM1640                                          0     0      0     272
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
 ---------------------------------------------------------------------------------
 (4) _TM1640_Writer_Byte                                   2     2      0     136
                                             26 COMRAM     2     2      0
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (4) _TM1640_Stop                                          0     0      0      68
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (4) _TM1640_Start                                         0     0      0      68
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (5) _TM1640_Delay                                         2     2      0      68
                                             24 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC6_Init                                            0     0      0     316
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     316
                                             24 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Sys_Cyc                                             15    15      0     418
                                              9 COMRAM    15    15      0
                         _Delay_1Khz
                       _Key_FSM_Scan
                        i2_SetTimer0
                          i2___llmod
 ---------------------------------------------------------------------------------
 (7) i2___llmod                                            9     1      8     211
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) i2_SetTimer0                                          4     2      2      94
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _Key_FSM_Scan                                         0     0      0       0
                           _Key_Scan
 ---------------------------------------------------------------------------------
 (8) _Key_Scan                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _Delay_1Khz                                           3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC6_Init
     _OpenADC
   _GPIO_Config
   _Init_TM1640
     _TM1640_Start
       _TM1640_Delay
     _TM1640_Stop
       _TM1640_Delay
     _TM1640_Writer_Byte
       _TM1640_Delay
   _Key_Init
   _Manage_Message
     _Key_FSM_Read
   _Run
     _Get_ADC6
       _BusyADC
       _ConvertADC
       _ReadADC
       ___ftdiv
         _ReadADC (ARG)
         ___ftmul (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___ftmul
         _ReadADC (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___lwtoft
         _ReadADC (ARG)
         ___ftpack (ARG)
     ___llmod
   _Show_Result
     _TM1640_Show_Decimal
       _TM1640_Writer_Dates
         _TM1640_Start
           _TM1640_Delay
         _TM1640_Stop
           _TM1640_Delay
         _TM1640_Writer_Byte
           _TM1640_Delay
         ___awmod (ARG)
           ___fttol (ARG)
         ___fttol (ARG)
       ___awmod
         ___fttol (ARG)
       ___ftdiv
         _ReadADC (ARG)
         ___ftmul (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___ftmul
         _ReadADC (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___fttol
   _Timer0_Init
     _SetTimer0

 _Sys_Cyc (ROOT)
   _Delay_1Khz
   _Key_FSM_Scan
     _Key_Scan
   i2_SetTimer0
   i2___llmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     18      18       5       15.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2F      45       1       72.6%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5D      12        0.0%
DATA                 0      0      5D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Dec 09 16:27:13 2015

                ?_TM1640_Stop 0001  __size_of_TM1640_Writer_Dates 0022                 ?_TM1640_Delay 0001  
                 __CFG_BORV$3 000000                 ?_TM1640_Start 0001                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000              Key_FSM_Read@temp 001D  
                __CFG_CP3$OFF 000000                  __CFG_CP4$OFF 000000                  __CFG_CP5$OFF 000000  
                __CFG_CP6$OFF 000000                  __CFG_CP7$OFF 000000                           l311 19D6  
                         l250 19FA                           l264 1C46                           l249 19E4  
                         l348 198E                           l742 12C4                           l824 1856  
                         l678 16CC                           _GIE 007F97                  __CFG_CPB$OFF 000000  
                         _RC3 007C13                           _RC4 007C14                           _RE2 007C22  
                         _RE3 007C23                           _RE4 007C24                           _RD6 007C1E  
                         _RE5 007C25                           _RD7 007C1F                           _RE6 007C26  
                         _RE7 007C27                  __CFG_CPD$OFF 000000                           _PSA 007EAB  
                         _Run 1992                ??_Key_FSM_Read 0019                ??_Key_FSM_Scan 0001  
                ___awmod@sign 002D                           wreg 000FE8                  ?_GPIO_Config 0001  
                ___ftdiv@cntr 006C                          ?_Run 0001                  ___ftdiv@sign 0071  
                        l2102 16D4                          l2032 1C3E                          l2034 1C40  
                        l2026 1C36                          l2202 13B2                          l2108 16E6  
                        l2132 11EC                          l2212 13EA                          l2206 13CA  
                        l2080 1640                          l2216 1404                          l2208 13D2  
                        l2240 173A                          l2232 171A                          l2074 1A12  
                        l2322 17DA                          l2138 1220                          l2068 19FE  
                        l2092 1694                          l2084 1650                          l2252 176C  
                        l2244 1750                          l2236 1728                          l2228 170C  
                        l2334 17F2                          l2318 17D6                          l2430 1B54  
                        l2094 16B4                          l2086 165C                          l2158 1282  
                        l2238 1732                          l2262 1458                          l2342 1A94  
                        l2096 16C0                          l2088 167C                          l2168 12D6  
                        l2184 1356                          l2248 175C                          l2280 14C0  
                        l2178 132A                          l2290 14EA                          l2292 14F8  
                        l2284 14D0                          l2198 139A                          l2294 1502  
                        l2376 18DE                          l2392 1846                          l2384 180A  
                        l2386 1818                          l2298 151A                          l2458 1A42  
                        l2388 1820                          _T0CS 007EAD                          _T0SE 007EAC  
                        u1710 1C8A                          u1721 11CA                          u1741 11FE  
                        u1910 1476                          _IPEN 007E87                          u1771 130E  
                        u1915 146E                          u1791 133A                          u1891 143C  
       ??_TM1640_Show_Decimal 0030                 ??_Init_TM1640 001D                    _Delay_1Khz 1A54  
                        _main 1A1A                  ___ftpack@arg 0019                  ___ftpack@exp 001C  
                        fsr0h 000FEA                          fsr1h 000FE2                          fsr0l 000FE9  
                        fsr2h 000FDA                          fsr1l 000FE1                          indf2 000FDF  
                        fsr2l 000FD9                          pclat 000FFA                          prodh 000FF4  
                        prodl 000FF3                          start 00FE                 __CFG_IESO$OFF 000000  
               __CFG_FOSC$HS1 000000                 __CFG_MCLRE$ON 000000                  ___ftmul@cntr 0064  
                ___param_bank 000010                  ___ftmul@sign 0065               __end_of_BusyADC 1C90  
             __end_of_ReadADC 1C82                ??_TM1640_Delay 0019               __end_of_OpenADC 1992  
                       ??_Run 0030                  ___fttol@exp1 0027                  ___fttol@lval 0023  
              ??_TM1640_Start 001B                 __CFG_RETEN$ON 000000                         ?_main 0001  
             __end_of___awmod 1778               __end_of_Sys_Cyc 00FE               __end_of___ftdiv 12FE  
             __end_of___ftmul 142C               __end_of___llmod 1868               __end_of___fttol 152E  
                       _T0PS0 007EA8                         _T0PS1 007EA9                         _T0PS2 007EAA  
                       i2l202 00C4                         i2l119 15F8                         i2l199 009C  
                       i2l824 18C6             __end_of_ADC6_Init 1C72                         _TMR0H 000FD7  
                       _TMR0L 000FD6                         _TRISD 000F95                         _TRISE 000F96  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                 __CFG_WRT4$OFF 000000                __CFG_EBRT0$OFF 000000  
               __CFG_WRT5$OFF 000000                __CFG_EBRT1$OFF 000000                 __CFG_WRT6$OFF 000000  
              __CFG_EBRT2$OFF 000000                 __CFG_WRT7$OFF 000000                __CFG_EBRT3$OFF 000000  
              __CFG_EBRT4$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBRT5$OFF 000000  
              __CFG_EBRT6$OFF 000000                __CFG_EBRT7$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBRTB$OFF 000000  
               ___ftpack@sign 001D                    _ConvertADC 1CA6                 _Local_Key_FSM 003C  
                       tablat 000FF5                         status 000FD8            _TM1640_Writer_Byte 19DC  
            __end_of_Get_ADC6 1944            __size_ofi2___llmod 0070               __initialization 1C1A  
         __end_of_Init_TM1640 1B8C                  __end_of_main 1A54           ?_TM1640_Writer_Byte 0001  
            __end_of_Key_Init 1CA6           Key_FSM_Read@key_num 001E              __end_of_Key_Scan 1B1A  
                      ??_main 0030                 ___fttol@sign1 0022                 __activetblptr 000001  
            ??_Manage_Message 001F          ??_TM1640_Writer_Byte 001B                        _ADCON0 000FC2  
                      _ADCON1 000FC1                        _ADCON2 000FC0              ___llmod@dividend 0019  
                      _ADRESH 000FC4                        _ADRESL 000FC3                        _T08BIT 007EAE  
            __end_of___ftpack 16F6                        i2l2012 0090                        i2l2020 00A6  
                      i2l2022 00B2               __CFG_BBSIZ$BB2K 000000                        i2l1400 1A7E  
                      i2l1240 1B08                        i2l1232 1AF8                        i2l2018 00A0  
                      i2l1404 1A82                        i2l1244 1B10                        i2l1236 1B00  
                      i2l1502 1624                        i2l1430 1552                        i2l1422 1542  
                      i2l1408 1A86                        i2l1442 1580                        i2l1434 155A  
                      i2l1426 154A                        i2l1418 153A                        i2l1452 159A  
                      i2l1462 15B4                        i2l1446 158A                        i2l1438 1576  
                      i2l1392 1A62                        i2l1472 15CE                        i2l1456 15A4  
                      i2l1448 1590                        i2l1490 1606                        i2l1482 15E8  
                      i2l1466 15BE                        i2l1458 15AA                        i2l1396 1A70  
                      i2l1476 15D8                        i2l1468 15C4                        i2l1494 1610  
                      i2l1486 15F2                        i2l1478 15DE                        i2l1498 161A  
                      i2l1970 187A                        i2l1972 1888                        i2l1958 1AC4  
                      i2l1974 1890                        i2l1978 18B6                 SetTimer0@_tmr 0019  
            __end_of___lwtoft 1B40                   ?_Delay_1Khz 0001                        _TMR0IE 007F95  
                      _TMR0IF 007F92                        _TMR0ON 007EAF                 TM1640_Delay@i 001A  
                   ??_BusyADC 0019                     ??_ReadADC 001B                 ??_Timer0_Init 001D  
                   ??_OpenADC 001B        TM1640_Writer_Byte@Date 001B                __CFG_XINST$OFF 000000  
        __end_of_Key_FSM_Read 17F8          __end_of_Key_FSM_Scan 1630        TM1640_Writer_Byte@mask 001C  
              __CFG_STVREN$ON 000000                     ??___awmod 002C                     ??_Sys_Cyc 000A  
                   ??___ftdiv 002D                     ??___ftmul 002A                     ??___llmod 0021  
                   ??___fttol 001D            __size_of_SetTimer0 0030                        clear_0 1C20  
             ___awmod@divisor 002A               ___awmod@counter 002C          __size_of_TM1640_Stop 0024  
               ??_Show_Result 0030         ___ftmul@f3_as_product 0061             __end_ofi2___llmod 18D8  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8          __size_of_GPIO_Config 000C           _TM1640_Writer_Dates 1BF8  
                 ?_ConvertADC 0001          __end_of_TM1640_Delay 1C4E          __end_of_TM1640_Start 1BF8  
                  __accesstop 0060       __end_of__initialization 1C26                   _Init_TM1640 1B66  
                ?i2_SetTimer0 0001                 ___rparam_used 000001                    ___ftdiv@f1 0066  
                  ___ftdiv@f2 0069                    ___ftdiv@f3 006D             i2___llmod@divisor 0005  
           i2___llmod@counter 0009                    ___ftmul@f1 0024                    ___ftmul@f2 0027  
                  ___fttol@f1 0019                __pcstackCOMRAM 0001          ?_TM1640_Writer_Dates 002E  
         __end_of_Timer0_Init 1BB0                    ___lwtoft@c 0021           __size_of_Delay_1Khz 0038  
                   ?_Get_ADC6 0001           __end_of_Show_Result 1C60             __end_of_SetTimer0 1ABC  
                   ?_Key_Init 0001                     ?_Key_Scan 0001               __CFG_PLLCFG$OFF 000000  
     TM1640_Writer_Dates@Addr 002F            __end_of_LED_Number 1011       TM1640_Writer_Dates@Date 002E  
       ??_TM1640_Writer_Dates 002F           __size_of_ConvertADC 0004                     ?___ftpack 0019  
                   ?___lwtoft 0021                    ??_Get_ADC6 0030   __end_of_TM1640_Show_Decimal 11B8  
                   _ADC6_Buff 0034                     _ADC6_Init 1C60    TM1640_Show_Decimal@Numbers 0072  
                  ??_Key_Init 0019                    ??_Key_Scan 0001         __size_of_Key_FSM_Read 0080  
       __size_of_Key_FSM_Scan 0102                       _BusyADC 1C82                       _ReadADC 1C72  
             __CFG_PWRTEN$OFF 000000                       _OpenADC 1944                       __Hparam 0000  
                 _Timer0_Init 1B8C                       __Lparam 0000                 Sys_Cyc@_pulse 0018  
                     ___awmod 16F6                       _Sys_Cyc 0008                       ___ftdiv 11B8  
                     ___ftmul 12FE                       ___llmod 17F8                       ___fttol 142C  
                __psmallconst 1000                       __pcinit 1C1A                    ??___ftpack 001E  
       Sys_Cyc@_overturn_1Khz 003A                       __ramtop 1000                       __ptext0 1A1A  
                     __ptext1 1B8C                       __ptext2 1A8C                       __ptext3 1C4E  
                     __ptext4 1012                       __ptext5 142C                       __ptext6 16F6  
                     __ptext7 1BF8                       __ptext8 1992                       __ptext9 17F8  
                  ??___lwtoft 0024                   _Show_Result 1C4E                  __size_of_Run 004A  
            ___awmod@dividend 0028         __size_of_TM1640_Delay 001A             __CFG_MSSPMSK$MSK7 000000  
                _Key_FSM_Read 1778                  _Key_FSM_Scan 152E         __size_of_TM1640_Start 0024  
                  ?_ADC6_Init 0001                OpenADC@config2 0019                OpenADC@config3 001A  
                     main@num 0075          end_of_initialization 1C26                  ??_Delay_1Khz 0001  
        __size_ofi2_SetTimer0 0030                       postinc0 000FEE                  _TM1640_Delay 1C34  
                _TM1640_Start 1BD4                     _PORTEbits 000F84              TM1640_Delay@Time 0019  
          __end_of_Delay_1Khz 1A8C                     _TRISCbits 000F94   __size_of_TM1640_Writer_Byte 003E  
                   i2___llmod 1868             __CFG_SOSCSEL$HIGH 000000                  ??_ConvertADC 0019  
                ?_Init_TM1640 0001                   ___ftdiv@exp 0070            i2___llmod@dividend 0001  
                 ___ftmul@exp 0060                 ??_TM1640_Stop 001B              _Handle_01_Switch 0037  
          __end_of_ConvertADC 1CAA                 ??_GPIO_Config 0019           start_initialization 1C1A  
                 __end_of_Run 19DC                   ??_ADC6_Init 001E             __size_of_Get_ADC6 006C  
                  ?i2___llmod 0001       __size_of_Manage_Message 0026               ___llmod@divisor 001D  
           __size_of_Key_Init 000A             __size_of_Key_Scan 002E               ___llmod@counter 0021  
                   _SetTimer0 1A8C               i2SetTimer0@_tmr 0001                     _Timer_Cyc 0030  
         __end_of_TM1640_Stop 1BD4             __size_of___ftpack 00C6                   __pbssCOMRAM 0030  
           __size_of___lwtoft 0026                 __pcstackBANK0 0060           __end_of_GPIO_Config 1C9C  
                    ?_BusyADC 0001                      ?_ReadADC 0019   __end_of_TM1640_Writer_Dates 1C1A  
                  ?_SetTimer0 0019                      ?_OpenADC 0019                  ?_Timer0_Init 0001  
           __CFG_CCP2MX$PORTC 000000                     __pintcode 0008                      ?___awmod 0028  
                    ?_Sys_Cyc 0001                      ?___ftdiv 0066                      ?___ftmul 0024  
                    ?___llmod 0019                      ?___fttol 0019              Run@_overturn_LED 0039  
                ?_Show_Result 0001                   __smallconst 1000                   _LED2_switch 003B  
                 ??i2___llmod 0009  __size_of_TM1640_Show_Decimal 01A6                 OpenADC@config 001D  
                    _PIE1bits 000F9D          __size_of_Init_TM1640 0026                      _PIR1bits 000F9E  
                 _TM1640_Stop 1BB0                    _ADCON0bits 000FC2                      _Get_ADC6 18D8  
                 _GPIO_Config 1C90                   Delay_1Khz@a 0001                   Delay_1Khz@b 0002  
                 Delay_1Khz@c 0003                      _Key_Init 1C9C                      _Key_Scan 1AEC  
              _Manage_Message 1B40                 ??i2_SetTimer0 0003                   ??_SetTimer0 001B  
            __size_of_BusyADC 000E              __size_of_ReadADC 0010                      __Hrparam 0000  
            __size_of_OpenADC 004E                      __Lrparam 0000                  __Lsmallconst 1000  
          __CFG_BOREN$SBORDIS 000000              __size_of___awmod 0082              __size_of_Sys_Cyc 00F6  
            __size_of___ftdiv 0146              __size_of___ftmul 012E              __size_of___llmod 0070  
            __size_of___fttol 0102                      ___ftpack 1630                      ___lwtoft 1B1A  
  __end_of_TM1640_Writer_Byte 1A1A                      __ptext10 18D8                      __ptext11 1B1A  
                    __ptext20 1C9C                      __ptext12 12FE                      __ptext21 1B66  
                    __ptext13 11B8                      __ptext30 1868                      __ptext22 19DC  
                    __ptext14 1630                      __ptext31 1ABC                      __ptext23 1BB0  
                    __ptext15 1C72                      __ptext32 152E                      __ptext24 1BD4  
                    __ptext16 1CA6                      __ptext33 1AEC                      __ptext25 1C34  
                    __ptext17 1C82                      __ptext34 1A54                      __ptext26 1C90  
                    __ptext18 1B40                      __ptext27 1C60                      __ptext19 1778  
                    __ptext28 1944        __end_of_Manage_Message 1B66                 __size_of_main 003A  
         __CFG_RTCOSC$SOSCREF 000000          __size_of_Timer0_Init 0024           __end_ofi2_SetTimer0 1AEC  
         __CFG_INTOSCSEL$HIGH 000000                    _LED_Number 1001            __CFG_WDTEN$SWDTDIS 000000  
                  _INTCONbits 000FF2          __size_of_Show_Result 0012               ?_Manage_Message 0001  
                    intlevel2 0000            __CFG_WDTPS$1048576 000000           _TM1640_Show_Decimal 1012  
               ?_Key_FSM_Read 0001                 ?_Key_FSM_Scan 0001          ?_TM1640_Show_Decimal 0072  
         __CFG_BORPWR$ZPBORMV 000000            __size_of_ADC6_Init 0012                   i2_SetTimer0 1ABC  
