

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Dec 08 18:43:34 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F67K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    47  0000                     
    48                           	psect	smallconst
    49  001000                     __psmallconst:
    50                           	opt stack 0
    51  001000  00                 	db	0
    52  001001                     _LED_Number:
    53                           	opt stack 0
    54  001001  3F                 	db	63
    55  001002  06                 	db	6
    56  001003  5B                 	db	91
    57  001004  4F                 	db	79
    58  001005  66                 	db	102
    59  001006  6D                 	db	109
    60  001007  7D                 	db	125
    61  001008  07                 	db	7
    62  001009  7F                 	db	127
    63  00100A  6F                 	db	111
    64  00100B  77                 	db	119
    65  00100C  7C                 	db	124
    66  00100D  39                 	db	57
    67  00100E  5E                 	db	94
    68  00100F  79                 	db	121
    69  001010  71                 	db	113
    70  001011                     __end_of_LED_Number:
    71                           	opt stack 0
    72  0000                     _ADCON0	set	4034
    73  0000                     _ADCON0bits	set	4034
    74  0000                     _ADCON1	set	4033
    75  0000                     _ADCON2	set	4032
    76  0000                     _ADRESH	set	4036
    77  0000                     _ADRESL	set	4035
    78  0000                     _INTCONbits	set	4082
    79  0000                     _PIE1bits	set	3997
    80  0000                     _PIR1bits	set	3998
    81  0000                     _PORTEbits	set	3972
    82  0000                     _TMR0H	set	4055
    83  0000                     _TMR0L	set	4054
    84  0000                     _TRISCbits	set	3988
    85  0000                     _TRISD	set	3989
    86  0000                     _TRISE	set	3990
    87  0000                     _GIE	set	32663
    88  0000                     _IPEN	set	32391
    89  0000                     _PSA	set	32427
    90  0000                     _RC3	set	31763
    91  0000                     _RC4	set	31764
    92  0000                     _RD6	set	31774
    93  0000                     _RD7	set	31775
    94  0000                     _RE2	set	31778
    95  0000                     _RE3	set	31779
    96  0000                     _RE4	set	31780
    97  0000                     _RE5	set	31781
    98  0000                     _RE6	set	31782
    99  0000                     _RE7	set	31783
   100  0000                     _T08BIT	set	32430
   101  0000                     _T0CS	set	32429
   102  0000                     _T0PS0	set	32424
   103  0000                     _T0PS1	set	32425
   104  0000                     _T0PS2	set	32426
   105  0000                     _T0SE	set	32428
   106  0000                     _TMR0IE	set	32661
   107  0000                     _TMR0IF	set	32658
   108  0000                     _TMR0ON	set	32431
   109                           
   110                           ; #config settings
   111  001011  00                 	db	0	; dummy byte at the end
   112  0000                     
   113                           	psect	cinit
   114  001F38                     __pcinit:
   115                           	opt stack 0
   116  001F38                     start_initialization:
   117                           	opt stack 0
   118  001F38                     __initialization:
   119                           	opt stack 0
   120                           
   121                           ; Clear objects allocated to BANK0 (3 bytes)
   122  001F38  0100               	movlb	0
   123  001F3A  6B7F               	clrf	(__pbssBANK0+2)& (0+255),b
   124  001F3C  6B7E               	clrf	(__pbssBANK0+1)& (0+255),b
   125  001F3E  6B7D               	clrf	__pbssBANK0& (0+255),b
   126                           
   127                           ; Clear objects allocated to COMRAM (16 bytes)
   128  001F40  EE00  F038         	lfsr	0,__pbssCOMRAM
   129  001F44  0E10               	movlw	16
   130  001F46                     clear_0:
   131  001F46  6AEE               	clrf	postinc0,c
   132  001F48  06E8               	decf	wreg,f,c
   133  001F4A  E1FD               	bnz	clear_0
   134  001F4C                     end_of_initialization:
   135                           	opt stack 0
   136  001F4C                     __end_of__initialization:
   137                           	opt stack 0
   138  001F4C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   139  001F4E  6EF8               	movwf	tblptru,c
   140  001F50  0E10               	movlw	high __Lsmallconst
   141  001F52  6EF7               	movwf	tblptrh,c
   142  001F54  0100               	movlb	0
   143  001F56  EF7E  F00E         	goto	_main	;jump to C main() function
   144                           tblptru	equ	0xFF8
   145                           tblptrh	equ	0xFF7
   146                           postinc0	equ	0xFEE
   147                           wreg	equ	0xFE8
   148                           
   149                           	psect	bssCOMRAM
   150  000038                     __pbssCOMRAM:
   151                           	opt stack 0
   152  000038                     _Timer_Cyc:
   153                           	opt stack 0
   154  000038                     	ds	4
   155  00003C                     Sys_Cyc@t:
   156                           	opt stack 0
   157  00003C                     	ds	1
   158  00003D                     _LED2_switch:
   159                           	opt stack 0
   160  00003D                     	ds	1
   161  00003E                     _Local_Key_FSM:
   162                           	opt stack 0
   163  00003E                     	ds	10
   164                           tblptru	equ	0xFF8
   165                           tblptrh	equ	0xFF7
   166                           postinc0	equ	0xFEE
   167                           wreg	equ	0xFE8
   168                           
   169                           	psect	bssBANK0
   170  00007D                     __pbssBANK0:
   171                           	opt stack 0
   172  00007D                     _ADC6_Buff:
   173                           	opt stack 0
   174  00007D                     	ds	3
   175                           tblptru	equ	0xFF8
   176                           tblptrh	equ	0xFF7
   177                           postinc0	equ	0xFEE
   178                           wreg	equ	0xFE8
   179                           
   180                           	psect	cstackBANK0
   181  000060                     __pcstackBANK0:
   182                           	opt stack 0
   183  000060                     ?___ftpack:
   184                           	opt stack 0
   185  000060                     ?___fttol:
   186                           	opt stack 0
   187  000060                     delay1ms@a:
   188                           	opt stack 0
   189  000060                     TM1640_Delay@Time:
   190                           	opt stack 0
   191  000060                     OpenADC@config2:
   192                           	opt stack 0
   193  000060                     SetTimer0@_tmr:
   194                           	opt stack 0
   195  000060                     ___ftpack@arg:
   196                           	opt stack 0
   197  000060                     ___fttol@f1:
   198                           	opt stack 0
   199                           
   200                           ; 3 bytes @ 0x0
   201  000060                     	ds	1
   202  000061                     delay1ms@b:
   203                           	opt stack 0
   204  000061                     TM1640_Delay@i:
   205                           	opt stack 0
   206  000061                     OpenADC@config3:
   207                           	opt stack 0
   208                           
   209                           ; 1 bytes @ 0x1
   210  000061                     	ds	1
   211  000062                     ??_SetTimer0:
   212  000062                     ??_OpenADC:
   213  000062                     delay1ms@c:
   214                           	opt stack 0
   215  000062                     TM1640_Writer_Byte@Date:
   216                           	opt stack 0
   217                           
   218                           ; 1 bytes @ 0x2
   219  000062                     	ds	1
   220  000063                     TM1640_Writer_Byte@mask:
   221                           	opt stack 0
   222  000063                     ___ftpack@exp:
   223                           	opt stack 0
   224  000063                     delay_ms@_ms:
   225                           	opt stack 0
   226                           
   227                           ; 2 bytes @ 0x3
   228  000063                     	ds	1
   229  000064                     ??___fttol:
   230  000064                     OpenADC@config:
   231                           	opt stack 0
   232  000064                     ___ftpack@sign:
   233                           	opt stack 0
   234                           
   235                           ; 1 bytes @ 0x4
   236  000064                     	ds	1
   237  000065                     ??___ftpack:
   238                           
   239                           ; 0 bytes @ 0x5
   240  000065                     	ds	3
   241  000068                     ?___ftdiv:
   242                           	opt stack 0
   243  000068                     ?___ftmul:
   244                           	opt stack 0
   245  000068                     ___ftdiv@f1:
   246                           	opt stack 0
   247  000068                     ___ftmul@f1:
   248                           	opt stack 0
   249                           
   250                           ; 3 bytes @ 0x8
   251  000068                     	ds	1
   252  000069                     ___fttol@sign1:
   253                           	opt stack 0
   254                           
   255                           ; 1 bytes @ 0x9
   256  000069                     	ds	1
   257  00006A                     ___fttol@lval:
   258                           	opt stack 0
   259                           
   260                           ; 4 bytes @ 0xA
   261  00006A                     	ds	1
   262  00006B                     ___ftdiv@f2:
   263                           	opt stack 0
   264  00006B                     ___ftmul@f2:
   265                           	opt stack 0
   266                           
   267                           ; 3 bytes @ 0xB
   268  00006B                     	ds	3
   269  00006E                     ??___ftdiv:
   270  00006E                     ??___ftmul:
   271  00006E                     ___fttol@exp1:
   272                           	opt stack 0
   273                           
   274                           ; 1 bytes @ 0xE
   275  00006E                     	ds	1
   276  00006F                     ?___awmod:
   277                           	opt stack 0
   278  00006F                     ___awmod@dividend:
   279                           	opt stack 0
   280                           
   281                           ; 2 bytes @ 0xF
   282  00006F                     	ds	2
   283  000071                     ___ftdiv@cntr:
   284                           	opt stack 0
   285  000071                     ___ftmul@exp:
   286                           	opt stack 0
   287  000071                     ___awmod@divisor:
   288                           	opt stack 0
   289                           
   290                           ; 2 bytes @ 0x11
   291  000071                     	ds	1
   292  000072                     ___ftdiv@f3:
   293                           	opt stack 0
   294  000072                     ___ftmul@f3_as_product:
   295                           	opt stack 0
   296                           
   297                           ; 3 bytes @ 0x12
   298  000072                     	ds	1
   299  000073                     ___awmod@counter:
   300                           	opt stack 0
   301                           
   302                           ; 1 bytes @ 0x13
   303  000073                     	ds	1
   304  000074                     ___awmod@sign:
   305                           	opt stack 0
   306                           
   307                           ; 1 bytes @ 0x14
   308  000074                     	ds	1
   309  000075                     TM1640_Writer_Dates@Date:
   310                           	opt stack 0
   311  000075                     ___ftdiv@exp:
   312                           	opt stack 0
   313  000075                     ___ftmul@cntr:
   314                           	opt stack 0
   315                           
   316                           ; 1 bytes @ 0x15
   317  000075                     	ds	1
   318  000076                     TM1640_Writer_Dates@Addr:
   319                           	opt stack 0
   320  000076                     ___ftdiv@sign:
   321                           	opt stack 0
   322  000076                     ___ftmul@sign:
   323                           	opt stack 0
   324                           
   325                           ; 1 bytes @ 0x16
   326  000076                     	ds	1
   327  000077                     TM1640_Show_Decimal@Numbers:
   328                           	opt stack 0
   329                           
   330                           ; 3 bytes @ 0x17
   331  000077                     	ds	3
   332  00007A                     main@num:
   333                           	opt stack 0
   334                           
   335                           ; 3 bytes @ 0x1A
   336  00007A                     	ds	3
   337                           tblptru	equ	0xFF8
   338                           tblptrh	equ	0xFF7
   339                           postinc0	equ	0xFEE
   340                           wreg	equ	0xFE8
   341                           
   342                           	psect	cstackCOMRAM
   343  000001                     __pcstackCOMRAM:
   344                           	opt stack 0
   345  000001                     ?_ReadADC:
   346                           	opt stack 0
   347  000001                     ?i2___ftpack:
   348                           	opt stack 0
   349  000001                     ?___llmod:
   350                           	opt stack 0
   351  000001                     i2SetTimer0@_tmr:
   352                           	opt stack 0
   353  000001                     i2___ftpack@arg:
   354                           	opt stack 0
   355  000001                     ___llmod@dividend:
   356                           	opt stack 0
   357                           
   358                           ; 4 bytes @ 0x0
   359  000001                     	ds	2
   360  000003                     ??_ReadADC:
   361  000003                     ??i2_SetTimer0:
   362                           
   363                           ; 0 bytes @ 0x2
   364  000003                     	ds	1
   365  000004                     i2___ftpack@exp:
   366                           	opt stack 0
   367                           
   368                           ; 1 bytes @ 0x3
   369  000004                     	ds	1
   370  000005                     i2___ftpack@sign:
   371                           	opt stack 0
   372  000005                     ___llmod@divisor:
   373                           	opt stack 0
   374                           
   375                           ; 4 bytes @ 0x4
   376  000005                     	ds	1
   377  000006                     ??i2___ftpack:
   378                           
   379                           ; 0 bytes @ 0x5
   380  000006                     	ds	3
   381  000009                     ?___lwtoft:
   382                           	opt stack 0
   383  000009                     ___llmod@counter:
   384                           	opt stack 0
   385  000009                     ___lwtoft@c:
   386                           	opt stack 0
   387                           
   388                           ; 2 bytes @ 0x8
   389  000009                     	ds	3
   390  00000C                     ?i2___ftmul:
   391                           	opt stack 0
   392  00000C                     i2___ftmul@f1:
   393                           	opt stack 0
   394                           
   395                           ; 3 bytes @ 0xB
   396  00000C                     	ds	3
   397  00000F                     i2___ftmul@f2:
   398                           	opt stack 0
   399                           
   400                           ; 3 bytes @ 0xE
   401  00000F                     	ds	3
   402  000012                     ??i2___ftmul:
   403                           
   404                           ; 0 bytes @ 0x11
   405  000012                     	ds	3
   406  000015                     i2___ftmul@exp:
   407                           	opt stack 0
   408                           
   409                           ; 1 bytes @ 0x14
   410  000015                     	ds	1
   411  000016                     i2___ftmul@f3_as_product:
   412                           	opt stack 0
   413                           
   414                           ; 3 bytes @ 0x15
   415  000016                     	ds	3
   416  000019                     i2___ftmul@cntr:
   417                           	opt stack 0
   418                           
   419                           ; 1 bytes @ 0x18
   420  000019                     	ds	1
   421  00001A                     i2___ftmul@sign:
   422                           	opt stack 0
   423                           
   424                           ; 1 bytes @ 0x19
   425  00001A                     	ds	1
   426  00001B                     ?i2___ftdiv:
   427                           	opt stack 0
   428  00001B                     i2___ftdiv@f1:
   429                           	opt stack 0
   430                           
   431                           ; 3 bytes @ 0x1A
   432  00001B                     	ds	3
   433  00001E                     i2___ftdiv@f2:
   434                           	opt stack 0
   435                           
   436                           ; 3 bytes @ 0x1D
   437  00001E                     	ds	3
   438  000021                     ??i2___ftdiv:
   439                           
   440                           ; 0 bytes @ 0x20
   441  000021                     	ds	3
   442  000024                     i2___ftdiv@cntr:
   443                           	opt stack 0
   444                           
   445                           ; 1 bytes @ 0x23
   446  000024                     	ds	1
   447  000025                     i2___ftdiv@f3:
   448                           	opt stack 0
   449                           
   450                           ; 3 bytes @ 0x24
   451  000025                     	ds	3
   452  000028                     i2___ftdiv@exp:
   453                           	opt stack 0
   454                           
   455                           ; 1 bytes @ 0x27
   456  000028                     	ds	1
   457  000029                     i2___ftdiv@sign:
   458                           	opt stack 0
   459                           
   460                           ; 1 bytes @ 0x28
   461  000029                     	ds	1
   462  00002A                     ??_Sys_Cyc:
   463                           
   464                           ; 0 bytes @ 0x29
   465  00002A                     	ds	14
   466                           tblptru	equ	0xFF8
   467                           tblptrh	equ	0xFF7
   468                           postinc0	equ	0xFEE
   469                           wreg	equ	0xFE8
   470                           
   471 ;;
   472 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   473 ;;
   474 ;; *************** function _main *****************
   475 ;; Defined at:
   476 ;;		line 34 in file "_01_USER/main.c"
   477 ;; Parameters:    Size  Location     Type
   478 ;;		None
   479 ;; Auto vars:     Size  Location     Type
   480 ;;  num             3   26[BANK0 ] float 
   481 ;; Return value:  Size  Location     Type
   482 ;;                  2   18[None  ] int 
   483 ;; Registers used:
   484 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   491 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   493 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   494 ;;Total ram usage:        3 bytes
   495 ;; Hardware stack levels required when called:    8
   496 ;; This function calls:
   497 ;;		_ADC6_Init
   498 ;;		_GPIO_Config
   499 ;;		_Init_TM1640
   500 ;;		_Key_Init
   501 ;;		_TM1640_Show_Decimal
   502 ;;		_Timer0_Init
   503 ;;		_delay_ms
   504 ;; This function is called by:
   505 ;;		Startup code after reset
   506 ;; This function uses a non-reentrant model
   507 ;;
   508                           
   509                           	psect	text0
   510  001CFC                     __ptext0:
   511                           	opt stack 0
   512  001CFC                     _main:
   513                           	opt stack 23
   514                           
   515                           ;main.c: 36: float num = 0;
   516                           
   517                           ;incstack = 0
   518  001CFC  0E00               	movlw	0
   519  001CFE  0100               	movlb	0	; () banked
   520  001D00  6F7A               	movwf	main@num& (0+255),b
   521  001D02  0E00               	movlw	0
   522  001D04  0100               	movlb	0	; () banked
   523  001D06  6F7B               	movwf	(main@num+1)& (0+255),b
   524  001D08  0E00               	movlw	0
   525  001D0A  0100               	movlb	0	; () banked
   526  001D0C  6F7C               	movwf	(main@num+2)& (0+255),b
   527                           
   528                           ; BSR set to: 0
   529                           ;main.c: 37: GPIO_Config();
   530  001D0E  ECD7  F00F         	call	_GPIO_Config	;wreg free
   531                           
   532                           ;main.c: 38: Key_Init();
   533  001D12  ECDD  F00F         	call	_Key_Init	;wreg free
   534                           
   535                           ;main.c: 39: Timer0_Init();
   536  001D16  EC2D  F00F         	call	_Timer0_Init	;wreg free
   537                           
   538                           ;main.c: 40: Init_TM1640();
   539  001D1A  EC40  F00F         	call	_Init_TM1640	;wreg free
   540                           
   541                           ;main.c: 41: ADC6_Init();
   542  001D1E  ECBD  F00F         	call	_ADC6_Init	;wreg free
   543  001D22  D000               	goto	l2206
   544  001D24                     l2206:
   545                           
   546                           ;main.c: 44: {
   547                           ;main.c: 45: TM1640_Show_Decimal( ADC6_Buff );
   548  001D24  C07D  F077         	movff	_ADC6_Buff,TM1640_Show_Decimal@Numbers	;volatile
   549  001D28  C07E  F078         	movff	_ADC6_Buff+1,TM1640_Show_Decimal@Numbers+1	;volatile
   550  001D2C  C07F  F079         	movff	_ADC6_Buff+2,TM1640_Show_Decimal@Numbers+2	;volatile
   551  001D30  EC09  F008         	call	_TM1640_Show_Decimal	;wreg free
   552                           
   553                           ;main.c: 47: delay_ms(200);
   554  001D34  0E00               	movlw	0
   555  001D36  0100               	movlb	0	; () banked
   556  001D38  6F64               	movwf	(delay_ms@_ms+1)& (0+255),b
   557  001D3A  0EC8               	movlw	200
   558  001D3C  6F63               	movwf	delay_ms@_ms& (0+255),b
   559  001D3E  ECAD  F00F         	call	_delay_ms	;wreg free
   560  001D42  D7F0               	goto	l2206
   561                           
   562                           ;main.c: 48: }
   563                           ;main.c: 51: return 0;
   564                           ;	Return value of _main is never used
   565  001D44  EF90  F000         	goto	start
   566  001D48                     __end_of_main:
   567                           	opt stack 0
   568                           tblptru	equ	0xFF8
   569                           tblptrh	equ	0xFF7
   570                           postinc0	equ	0xFEE
   571                           wreg	equ	0xFE8
   572                           
   573 ;; *************** function _delay_ms *****************
   574 ;; Defined at:
   575 ;;		line 35 in file "_01_USER/My_Delay.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;  _ms             2    3[BANK0 ] unsigned int 
   578 ;; Auto vars:     Size  Location     Type
   579 ;;		None
   580 ;; Return value:  Size  Location     Type
   581 ;;		None               void
   582 ;; Registers used:
   583 ;;		wreg, status,2, status,0, cstack
   584 ;; Tracked objects:
   585 ;;		On entry : 0/0
   586 ;;		On exit  : 0/0
   587 ;;		Unchanged: 0/0
   588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   589 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   592 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   593 ;;Total ram usage:        2 bytes
   594 ;; Hardware stack levels used:    1
   595 ;; Hardware stack levels required when called:    5
   596 ;; This function calls:
   597 ;;		_delay1ms
   598 ;; This function is called by:
   599 ;;		_main
   600 ;; This function uses a non-reentrant model
   601 ;;
   602                           
   603                           	psect	text1
   604  001F5A                     __ptext1:
   605                           	opt stack 0
   606  001F5A                     _delay_ms:
   607                           	opt stack 25
   608                           
   609                           ;My_Delay.c: 37: while(_ms--) delay1ms();
   610                           
   611                           ;incstack = 0
   612  001F5A  D003               	goto	l2158
   613  001F5C                     l2156:
   614  001F5C  EC56  F00E         	call	_delay1ms	;wreg free
   615  001F60  D000               	goto	l2158
   616  001F62                     l2158:
   617  001F62  0100               	movlb	0	; () banked
   618  001F64  0763               	decf	delay_ms@_ms& (0+255),f,b
   619  001F66  A0D8               	btfss	status,0,c
   620  001F68  0764               	decf	(delay_ms@_ms+1)& (0+255),f,b
   621  001F6A  0100               	movlb	0	; () banked
   622  001F6C  2963               	incf	delay_ms@_ms& (0+255),w,b
   623  001F6E  E1F6               	bnz	l2156
   624  001F70  0100               	movlb	0	; () banked
   625  001F72  2964               	incf	(delay_ms@_ms+1)& (0+255),w,b
   626  001F74  A4D8               	btfss	status,2,c
   627  001F76  D7F2               	goto	l2156
   628                           
   629                           ; BSR set to: 0
   630                           
   631                           ; BSR set to: 0
   632  001F78  0012               	return		;funcret
   633  001F7A                     __end_of_delay_ms:
   634                           	opt stack 0
   635                           tblptru	equ	0xFF8
   636                           tblptrh	equ	0xFF7
   637                           postinc0	equ	0xFEE
   638                           wreg	equ	0xFE8
   639                           status	equ	0xFD8
   640                           
   641 ;; *************** function _delay1ms *****************
   642 ;; Defined at:
   643 ;;		line 58 in file "_01_USER/My_Delay.c"
   644 ;; Parameters:    Size  Location     Type
   645 ;;		None
   646 ;; Auto vars:     Size  Location     Type
   647 ;;  c               1    2[BANK0 ] unsigned char 
   648 ;;  b               1    1[BANK0 ] unsigned char 
   649 ;;  a               1    0[BANK0 ] unsigned char 
   650 ;; Return value:  Size  Location     Type
   651 ;;		None               void
   652 ;; Registers used:
   653 ;;		wreg, status,2, status,0
   654 ;; Tracked objects:
   655 ;;		On entry : 0/0
   656 ;;		On exit  : 0/0
   657 ;;		Unchanged: 0/0
   658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   660 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   662 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   663 ;;Total ram usage:        3 bytes
   664 ;; Hardware stack levels used:    1
   665 ;; Hardware stack levels required when called:    4
   666 ;; This function calls:
   667 ;;		Nothing
   668 ;; This function is called by:
   669 ;;		_delay_ms
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673                           	psect	text2
   674  001CAC                     __ptext2:
   675                           	opt stack 0
   676  001CAC                     _delay1ms:
   677                           	opt stack 25
   678                           
   679                           ;My_Delay.c: 60: unsigned char a,b,c;
   680                           ;My_Delay.c: 61: for(c=1;c>0;c--)
   681                           
   682                           ; BSR set to: 0
   683                           ;incstack = 0
   684  001CAC  0E01               	movlw	1
   685  001CAE  0100               	movlb	0	; () banked
   686  001CB0  6F62               	movwf	delay1ms@c& (0+255),b
   687  001CB2  0100               	movlb	0	; () banked
   688  001CB4  5162               	movf	delay1ms@c& (0+255),w,b
   689  001CB6  0100               	movlb	0	; () banked
   690  001CB8  B4D8               	btfsc	status,2,c
   691  001CBA  0012               	return	
   692  001CBC  D001               	goto	l1780
   693                           
   694                           ; BSR set to: 0
   695  001CBE  0012               	return	
   696  001CC0                     l1780:
   697                           
   698                           ; BSR set to: 0
   699                           ;My_Delay.c: 62: for(b=94;b>0;b--)
   700  001CC0  0E5E               	movlw	94
   701  001CC2  0100               	movlb	0	; () banked
   702  001CC4  6F61               	movwf	delay1ms@b& (0+255),b
   703  001CC6  0100               	movlb	0	; () banked
   704  001CC8  5161               	movf	delay1ms@b& (0+255),w,b
   705  001CCA  0100               	movlb	0	; () banked
   706  001CCC  B4D8               	btfsc	status,2,c
   707  001CCE  D012               	goto	l1796
   708  001CD0  D001               	goto	l1784
   709                           
   710                           ; BSR set to: 0
   711  001CD2  D010               	goto	l1796
   712  001CD4                     l1784:
   713                           
   714                           ; BSR set to: 0
   715                           ;My_Delay.c: 63: for(a=2;a>0;a--);
   716  001CD4  0E02               	movlw	2
   717  001CD6  0100               	movlb	0	; () banked
   718  001CD8  6F60               	movwf	delay1ms@a& (0+255),b
   719  001CDA  0100               	movlb	0	; () banked
   720  001CDC  5160               	movf	delay1ms@a& (0+255),w,b
   721  001CDE  0100               	movlb	0	; () banked
   722  001CE0  B4D8               	btfsc	status,2,c
   723  001CE2  D005               	goto	l1792
   724  001CE4  D001               	goto	l1788
   725                           
   726                           ; BSR set to: 0
   727  001CE6  D003               	goto	l1792
   728  001CE8                     l1788:
   729                           
   730                           ; BSR set to: 0
   731  001CE8  0100               	movlb	0	; () banked
   732  001CEA  0760               	decf	delay1ms@a& (0+255),f,b
   733  001CEC  D7F6               	goto	L1
   734  001CEE                     l1792:
   735                           
   736                           ; BSR set to: 0
   737  001CEE  0100               	movlb	0	; () banked
   738  001CF0  0761               	decf	delay1ms@b& (0+255),f,b
   739  001CF2  D7E9               	goto	L2
   740  001CF4                     l1796:
   741                           
   742                           ; BSR set to: 0
   743  001CF4  0100               	movlb	0	; () banked
   744  001CF6  0762               	decf	delay1ms@c& (0+255),f,b
   745  001CF8  D7DC               	goto	L3
   746                           
   747                           ; BSR set to: 0
   748                           
   749                           ; BSR set to: 0
   750                           
   751                           ; BSR set to: 0
   752  001CFA  0012               	return		;funcret
   753  001CFC                     __end_of_delay1ms:
   754                           	opt stack 0
   755                           tblptru	equ	0xFF8
   756                           tblptrh	equ	0xFF7
   757                           postinc0	equ	0xFEE
   758                           wreg	equ	0xFE8
   759                           status	equ	0xFD8
   760                           
   761 ;; *************** function _Timer0_Init *****************
   762 ;; Defined at:
   763 ;;		line 40 in file "_01_USER/My_Timer.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;		None
   766 ;; Auto vars:     Size  Location     Type
   767 ;;		None
   768 ;; Return value:  Size  Location     Type
   769 ;;                  2    6[None  ] int 
   770 ;; Registers used:
   771 ;;		wreg, status,2, status,0, cstack
   772 ;; Tracked objects:
   773 ;;		On entry : 0/0
   774 ;;		On exit  : 0/0
   775 ;;		Unchanged: 0/0
   776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   781 ;;Total ram usage:        0 bytes
   782 ;; Hardware stack levels used:    1
   783 ;; Hardware stack levels required when called:    5
   784 ;; This function calls:
   785 ;;		_SetTimer0
   786 ;; This function is called by:
   787 ;;		_main
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791                           	psect	text3
   792  001E5A                     __ptext3:
   793                           	opt stack 0
   794  001E5A                     _Timer0_Init:
   795                           	opt stack 25
   796                           
   797                           ;My_Timer.c: 42: T08BIT = 0;
   798                           
   799                           ; BSR set to: 0
   800                           ;incstack = 0
   801  001E5A  9CD5               	bcf	4053,6,c	;volatile
   802                           
   803                           ;My_Timer.c: 43: T0CS = 0;
   804  001E5C  9AD5               	bcf	4053,5,c	;volatile
   805                           
   806                           ;My_Timer.c: 44: T0SE = 0;
   807  001E5E  98D5               	bcf	4053,4,c	;volatile
   808                           
   809                           ;My_Timer.c: 45: PSA = 0;
   810  001E60  96D5               	bcf	4053,3,c	;volatile
   811                           
   812                           ;My_Timer.c: 46: T0PS2 = 1;
   813  001E62  84D5               	bsf	4053,2,c	;volatile
   814                           
   815                           ;My_Timer.c: 47: T0PS1 = 1;
   816  001E64  82D5               	bsf	4053,1,c	;volatile
   817                           
   818                           ;My_Timer.c: 48: T0PS0 = 1;
   819  001E66  80D5               	bsf	4053,0,c	;volatile
   820                           
   821                           ;My_Timer.c: 62: SetTimer0(1);
   822  001E68  0E00               	movlw	0
   823  001E6A  0100               	movlb	0	; () banked
   824  001E6C  6F61               	movwf	(SetTimer0@_tmr+1)& (0+255),b
   825  001E6E  0E01               	movlw	1
   826  001E70  6F60               	movwf	SetTimer0@_tmr& (0+255),b
   827  001E72  ECCA  F00E         	call	_SetTimer0	;wreg free
   828                           
   829                           ;My_Timer.c: 63: TMR0ON = 1;
   830  001E76  8ED5               	bsf	4053,7,c	;volatile
   831                           
   832                           ;My_Timer.c: 64: TMR0IE = 1;
   833  001E78  8AF2               	bsf	intcon,5,c	;volatile
   834                           
   835                           ;My_Timer.c: 65: IPEN = 0;GIE = 1;
   836  001E7A  9ED0               	bcf	4048,7,c	;volatile
   837  001E7C  8EF2               	bsf	intcon,7,c	;volatile
   838  001E7E  0012               	return		;funcret
   839  001E80                     __end_of_Timer0_Init:
   840                           	opt stack 0
   841                           tblptru	equ	0xFF8
   842                           tblptrh	equ	0xFF7
   843                           intcon	equ	0xFF2
   844                           postinc0	equ	0xFEE
   845                           wreg	equ	0xFE8
   846                           status	equ	0xFD8
   847                           
   848 ;; *************** function _SetTimer0 *****************
   849 ;; Defined at:
   850 ;;		line 78 in file "_01_USER/My_Timer.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;  _tmr            2    0[BANK0 ] unsigned int 
   853 ;; Auto vars:     Size  Location     Type
   854 ;;		None
   855 ;; Return value:  Size  Location     Type
   856 ;;		None               void
   857 ;; Registers used:
   858 ;;		wreg, status,2, status,0
   859 ;; Tracked objects:
   860 ;;		On entry : 0/0
   861 ;;		On exit  : 0/0
   862 ;;		Unchanged: 0/0
   863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   864 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   866 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   867 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   868 ;;Total ram usage:        4 bytes
   869 ;; Hardware stack levels used:    1
   870 ;; Hardware stack levels required when called:    4
   871 ;; This function calls:
   872 ;;		Nothing
   873 ;; This function is called by:
   874 ;;		_Timer0_Init
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           
   878                           	psect	text4
   879  001D94                     __ptext4:
   880                           	opt stack 0
   881  001D94                     _SetTimer0:
   882                           	opt stack 25
   883                           
   884                           ;My_Timer.c: 80: if(_tmr > 0xffff) _tmr = 0xffff;
   885                           
   886                           ;incstack = 0
   887  001D94  D004               	goto	l1804
   888  001D96  0100               	movlb	0	; () banked
   889  001D98  6960               	setf	SetTimer0@_tmr& (0+255),b
   890  001D9A  6961               	setf	(SetTimer0@_tmr+1)& (0+255),b
   891  001D9C  D000               	goto	l1804
   892  001D9E                     l1804:
   893                           
   894                           ;My_Timer.c: 81: _tmr=0xffff-_tmr;
   895  001D9E  C060  F062         	movff	SetTimer0@_tmr,??_SetTimer0
   896  001DA2  C061  F063         	movff	SetTimer0@_tmr+1,??_SetTimer0+1
   897  001DA6  0100               	movlb	0	; () banked
   898  001DA8  1F62               	comf	??_SetTimer0& (0+255),f,b
   899  001DAA  1F63               	comf	(??_SetTimer0+1)& (0+255),f,b
   900  001DAC  4B62               	infsnz	??_SetTimer0& (0+255),f,b
   901  001DAE  2B63               	incf	(??_SetTimer0+1)& (0+255),f,b
   902  001DB0  0EFF               	movlw	255
   903  001DB2  0100               	movlb	0	; () banked
   904  001DB4  2562               	addwf	??_SetTimer0& (0+255),w,b
   905  001DB6  0100               	movlb	0	; () banked
   906  001DB8  6F60               	movwf	SetTimer0@_tmr& (0+255),b
   907  001DBA  0EFF               	movlw	255
   908  001DBC  0100               	movlb	0	; () banked
   909  001DBE  2163               	addwfc	(??_SetTimer0+1)& (0+255),w,b
   910  001DC0  0100               	movlb	0	; () banked
   911  001DC2  6F61               	movwf	(SetTimer0@_tmr+1)& (0+255),b
   912                           
   913                           ; BSR set to: 0
   914                           ;My_Timer.c: 82: TMR0H = _tmr/256;
   915  001DC4  0100               	movlb	0	; () banked
   916  001DC6  5161               	movf	(SetTimer0@_tmr+1)& (0+255),w,b
   917  001DC8  6ED7               	movwf	4055,c	;volatile
   918                           
   919                           ; BSR set to: 0
   920                           ;My_Timer.c: 83: TMR0L = _tmr%256;
   921  001DCA  C060  FFD6         	movff	SetTimer0@_tmr,4054	;volatile
   922                           
   923                           ; BSR set to: 0
   924                           ;My_Timer.c: 84: TMR0IF = 0;
   925  001DCE  94F2               	bcf	intcon,2,c	;volatile
   926                           
   927                           ; BSR set to: 0
   928  001DD0  0012               	return		;funcret
   929  001DD2                     __end_of_SetTimer0:
   930                           	opt stack 0
   931                           tblptru	equ	0xFF8
   932                           tblptrh	equ	0xFF7
   933                           intcon	equ	0xFF2
   934                           postinc0	equ	0xFEE
   935                           wreg	equ	0xFE8
   936                           status	equ	0xFD8
   937                           
   938 ;; *************** function _TM1640_Show_Decimal *****************
   939 ;; Defined at:
   940 ;;		line 45 in file "_01_USER/TM1640.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;  Numbers         3   23[BANK0 ] float 
   943 ;; Auto vars:     Size  Location     Type
   944 ;;		None
   945 ;; Return value:  Size  Location     Type
   946 ;;		None               void
   947 ;; Registers used:
   948 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   954 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   957 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   958 ;;Total ram usage:        3 bytes
   959 ;; Hardware stack levels used:    1
   960 ;; Hardware stack levels required when called:    7
   961 ;; This function calls:
   962 ;;		_TM1640_Writer_Dates
   963 ;;		___awmod
   964 ;;		___ftdiv
   965 ;;		___ftmul
   966 ;;		___fttol
   967 ;; This function is called by:
   968 ;;		_main
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972                           	psect	text5
   973  001012                     __ptext5:
   974                           	opt stack 0
   975  001012                     _TM1640_Show_Decimal:
   976                           	opt stack 23
   977                           
   978                           ;TM1640.c: 47: Numbers *= 100;
   979                           
   980                           ; BSR set to: 0
   981                           ;incstack = 0
   982  001012  C077  F068         	movff	TM1640_Show_Decimal@Numbers,___ftmul@f1
   983  001016  C078  F069         	movff	TM1640_Show_Decimal@Numbers+1,___ftmul@f1+1
   984  00101A  C079  F06A         	movff	TM1640_Show_Decimal@Numbers+2,___ftmul@f1+2
   985  00101E  0E00               	movlw	0
   986  001020  0100               	movlb	0	; () banked
   987  001022  6F6B               	movwf	___ftmul@f2& (0+255),b
   988  001024  0EC8               	movlw	200
   989  001026  0100               	movlb	0	; () banked
   990  001028  6F6C               	movwf	(___ftmul@f2+1)& (0+255),b
   991  00102A  0E42               	movlw	66
   992  00102C  0100               	movlb	0	; () banked
   993  00102E  6F6D               	movwf	(___ftmul@f2+2)& (0+255),b
   994  001030  ECEC  F008         	call	___ftmul	;wreg free
   995  001034  C068  F077         	movff	?___ftmul,TM1640_Show_Decimal@Numbers
   996  001038  C069  F078         	movff	?___ftmul+1,TM1640_Show_Decimal@Numbers+1
   997  00103C  C06A  F079         	movff	?___ftmul+2,TM1640_Show_Decimal@Numbers+2
   998                           
   999                           ;TM1640.c: 49: TM1640_Writer_Dates(3,LED_Number[(int)Numbers%10]); Numbers/=10;
  1000  001040  C077  F060         	movff	TM1640_Show_Decimal@Numbers,___fttol@f1
  1001  001044  C078  F061         	movff	TM1640_Show_Decimal@Numbers+1,___fttol@f1+1
  1002  001048  C079  F062         	movff	TM1640_Show_Decimal@Numbers+2,___fttol@f1+2
  1003  00104C  ECA2  F009         	call	___fttol	;wreg free
  1004  001050  C060  F06F         	movff	?___fttol,___awmod@dividend
  1005  001054  C061  F070         	movff	?___fttol+1,___awmod@dividend+1
  1006  001058  0E00               	movlw	0
  1007  00105A  0100               	movlb	0	; () banked
  1008  00105C  6F72               	movwf	(___awmod@divisor+1)& (0+255),b
  1009  00105E  0E0A               	movlw	10
  1010  001060  6F71               	movwf	___awmod@divisor& (0+255),b
  1011  001062  EC5F  F00D         	call	___awmod	;wreg free
  1012  001066  0E01               	movlw	low _LED_Number
  1013  001068  0100               	movlb	0	; () banked
  1014  00106A  256F               	addwf	?___awmod& (0+255),w,b
  1015  00106C  6EF6               	movwf	tblptrl,c
  1016  00106E  0E10               	movlw	high _LED_Number
  1017  001070  0100               	movlb	0	; () banked
  1018  001072  2170               	addwfc	(?___awmod+1)& (0+255),w,b
  1019  001074  6EF7               	movwf	tblptrh,c
  1020  001076                     	if	0	;There are less than 3 active tblptr bytes
  1021  001076                     	endif
  1022  001076  0008               	tblrd		*
  1023  001078  CFF5 F075          	movff	tablat,TM1640_Writer_Dates@Date
  1024  00107C  0E03               	movlw	3
  1025  00107E  EC18  F00F         	call	_TM1640_Writer_Dates
  1026  001082  C077  F068         	movff	TM1640_Show_Decimal@Numbers,___ftdiv@f1
  1027  001086  C078  F069         	movff	TM1640_Show_Decimal@Numbers+1,___ftdiv@f1+1
  1028  00108A  C079  F06A         	movff	TM1640_Show_Decimal@Numbers+2,___ftdiv@f1+2
  1029  00108E  0E00               	movlw	0
  1030  001090  0100               	movlb	0	; () banked
  1031  001092  6F6B               	movwf	___ftdiv@f2& (0+255),b
  1032  001094  0E20               	movlw	32
  1033  001096  0100               	movlb	0	; () banked
  1034  001098  6F6C               	movwf	(___ftdiv@f2+1)& (0+255),b
  1035  00109A  0E41               	movlw	65
  1036  00109C  0100               	movlb	0	; () banked
  1037  00109E  6F6D               	movwf	(___ftdiv@f2+2)& (0+255),b
  1038  0010A0  EC4B  F00A         	call	___ftdiv	;wreg free
  1039  0010A4  C068  F077         	movff	?___ftdiv,TM1640_Show_Decimal@Numbers
  1040  0010A8  C069  F078         	movff	?___ftdiv+1,TM1640_Show_Decimal@Numbers+1
  1041  0010AC  C06A  F079         	movff	?___ftdiv+2,TM1640_Show_Decimal@Numbers+2
  1042                           
  1043                           ;TM1640.c: 50: TM1640_Writer_Dates(2,LED_Number[(int)Numbers%10]); Numbers/=10;
  1044  0010B0  C077  F060         	movff	TM1640_Show_Decimal@Numbers,___fttol@f1
  1045  0010B4  C078  F061         	movff	TM1640_Show_Decimal@Numbers+1,___fttol@f1+1
  1046  0010B8  C079  F062         	movff	TM1640_Show_Decimal@Numbers+2,___fttol@f1+2
  1047  0010BC  ECA2  F009         	call	___fttol	;wreg free
  1048  0010C0  C060  F06F         	movff	?___fttol,___awmod@dividend
  1049  0010C4  C061  F070         	movff	?___fttol+1,___awmod@dividend+1
  1050  0010C8  0E00               	movlw	0
  1051  0010CA  0100               	movlb	0	; () banked
  1052  0010CC  6F72               	movwf	(___awmod@divisor+1)& (0+255),b
  1053  0010CE  0E0A               	movlw	10
  1054  0010D0  6F71               	movwf	___awmod@divisor& (0+255),b
  1055  0010D2  EC5F  F00D         	call	___awmod	;wreg free
  1056  0010D6  0E01               	movlw	low _LED_Number
  1057  0010D8  0100               	movlb	0	; () banked
  1058  0010DA  256F               	addwf	?___awmod& (0+255),w,b
  1059  0010DC  6EF6               	movwf	tblptrl,c
  1060  0010DE  0E10               	movlw	high _LED_Number
  1061  0010E0  0100               	movlb	0	; () banked
  1062  0010E2  2170               	addwfc	(?___awmod+1)& (0+255),w,b
  1063  0010E4  6EF7               	movwf	tblptrh,c
  1064  0010E6                     	if	0	;There are less than 3 active tblptr bytes
  1065  0010E6                     	endif
  1066  0010E6  0008               	tblrd		*
  1067  0010E8  CFF5 F075          	movff	tablat,TM1640_Writer_Dates@Date
  1068  0010EC  0E02               	movlw	2
  1069  0010EE  EC18  F00F         	call	_TM1640_Writer_Dates
  1070  0010F2  C077  F068         	movff	TM1640_Show_Decimal@Numbers,___ftdiv@f1
  1071  0010F6  C078  F069         	movff	TM1640_Show_Decimal@Numbers+1,___ftdiv@f1+1
  1072  0010FA  C079  F06A         	movff	TM1640_Show_Decimal@Numbers+2,___ftdiv@f1+2
  1073  0010FE  0E00               	movlw	0
  1074  001100  0100               	movlb	0	; () banked
  1075  001102  6F6B               	movwf	___ftdiv@f2& (0+255),b
  1076  001104  0E20               	movlw	32
  1077  001106  0100               	movlb	0	; () banked
  1078  001108  6F6C               	movwf	(___ftdiv@f2+1)& (0+255),b
  1079  00110A  0E41               	movlw	65
  1080  00110C  0100               	movlb	0	; () banked
  1081  00110E  6F6D               	movwf	(___ftdiv@f2+2)& (0+255),b
  1082  001110  EC4B  F00A         	call	___ftdiv	;wreg free
  1083  001114  C068  F077         	movff	?___ftdiv,TM1640_Show_Decimal@Numbers
  1084  001118  C069  F078         	movff	?___ftdiv+1,TM1640_Show_Decimal@Numbers+1
  1085  00111C  C06A  F079         	movff	?___ftdiv+2,TM1640_Show_Decimal@Numbers+2
  1086                           
  1087                           ;TM1640.c: 51: TM1640_Writer_Dates(1,LED_Number[(int)Numbers%10]|0x80); Numbers/=10;
  1088  001120  C077  F060         	movff	TM1640_Show_Decimal@Numbers,___fttol@f1
  1089  001124  C078  F061         	movff	TM1640_Show_Decimal@Numbers+1,___fttol@f1+1
  1090  001128  C079  F062         	movff	TM1640_Show_Decimal@Numbers+2,___fttol@f1+2
  1091  00112C  ECA2  F009         	call	___fttol	;wreg free
  1092  001130  C060  F06F         	movff	?___fttol,___awmod@dividend
  1093  001134  C061  F070         	movff	?___fttol+1,___awmod@dividend+1
  1094  001138  0E00               	movlw	0
  1095  00113A  0100               	movlb	0	; () banked
  1096  00113C  6F72               	movwf	(___awmod@divisor+1)& (0+255),b
  1097  00113E  0E0A               	movlw	10
  1098  001140  6F71               	movwf	___awmod@divisor& (0+255),b
  1099  001142  EC5F  F00D         	call	___awmod	;wreg free
  1100  001146  0E01               	movlw	low _LED_Number
  1101  001148  0100               	movlb	0	; () banked
  1102  00114A  256F               	addwf	?___awmod& (0+255),w,b
  1103  00114C  6EF6               	movwf	tblptrl,c
  1104  00114E  0E10               	movlw	high _LED_Number
  1105  001150  0100               	movlb	0	; () banked
  1106  001152  2170               	addwfc	(?___awmod+1)& (0+255),w,b
  1107  001154  6EF7               	movwf	tblptrh,c
  1108  001156                     	if	0	;There are less than 3 active tblptr bytes
  1109  001156                     	endif
  1110  001156  0008               	tblrd		*
  1111  001158  50F5               	movf	tablat,w,c
  1112  00115A  0980               	iorlw	128
  1113  00115C  0100               	movlb	0	; () banked
  1114  00115E  6F75               	movwf	TM1640_Writer_Dates@Date& (0+255),b
  1115  001160  0E01               	movlw	1
  1116  001162  EC18  F00F         	call	_TM1640_Writer_Dates
  1117  001166  C077  F068         	movff	TM1640_Show_Decimal@Numbers,___ftdiv@f1
  1118  00116A  C078  F069         	movff	TM1640_Show_Decimal@Numbers+1,___ftdiv@f1+1
  1119  00116E  C079  F06A         	movff	TM1640_Show_Decimal@Numbers+2,___ftdiv@f1+2
  1120  001172  0E00               	movlw	0
  1121  001174  0100               	movlb	0	; () banked
  1122  001176  6F6B               	movwf	___ftdiv@f2& (0+255),b
  1123  001178  0E20               	movlw	32
  1124  00117A  0100               	movlb	0	; () banked
  1125  00117C  6F6C               	movwf	(___ftdiv@f2+1)& (0+255),b
  1126  00117E  0E41               	movlw	65
  1127  001180  0100               	movlb	0	; () banked
  1128  001182  6F6D               	movwf	(___ftdiv@f2+2)& (0+255),b
  1129  001184  EC4B  F00A         	call	___ftdiv	;wreg free
  1130  001188  C068  F077         	movff	?___ftdiv,TM1640_Show_Decimal@Numbers
  1131  00118C  C069  F078         	movff	?___ftdiv+1,TM1640_Show_Decimal@Numbers+1
  1132  001190  C06A  F079         	movff	?___ftdiv+2,TM1640_Show_Decimal@Numbers+2
  1133                           
  1134                           ;TM1640.c: 52: TM1640_Writer_Dates(0,LED_Number[(int)Numbers%10]);
  1135  001194  C077  F060         	movff	TM1640_Show_Decimal@Numbers,___fttol@f1
  1136  001198  C078  F061         	movff	TM1640_Show_Decimal@Numbers+1,___fttol@f1+1
  1137  00119C  C079  F062         	movff	TM1640_Show_Decimal@Numbers+2,___fttol@f1+2
  1138  0011A0  ECA2  F009         	call	___fttol	;wreg free
  1139  0011A4  C060  F06F         	movff	?___fttol,___awmod@dividend
  1140  0011A8  C061  F070         	movff	?___fttol+1,___awmod@dividend+1
  1141  0011AC  0E00               	movlw	0
  1142  0011AE  0100               	movlb	0	; () banked
  1143  0011B0  6F72               	movwf	(___awmod@divisor+1)& (0+255),b
  1144  0011B2  0E0A               	movlw	10
  1145  0011B4  6F71               	movwf	___awmod@divisor& (0+255),b
  1146  0011B6  EC5F  F00D         	call	___awmod	;wreg free
  1147  0011BA  0E01               	movlw	low _LED_Number
  1148  0011BC  0100               	movlb	0	; () banked
  1149  0011BE  256F               	addwf	?___awmod& (0+255),w,b
  1150  0011C0  6EF6               	movwf	tblptrl,c
  1151  0011C2  0E10               	movlw	high _LED_Number
  1152  0011C4  0100               	movlb	0	; () banked
  1153  0011C6  2170               	addwfc	(?___awmod+1)& (0+255),w,b
  1154  0011C8  6EF7               	movwf	tblptrh,c
  1155  0011CA                     	if	0	;There are less than 3 active tblptr bytes
  1156  0011CA                     	endif
  1157  0011CA  0008               	tblrd		*
  1158  0011CC  CFF5 F075          	movff	tablat,TM1640_Writer_Dates@Date
  1159  0011D0  0E00               	movlw	0
  1160  0011D2  EC18  F00F         	call	_TM1640_Writer_Dates
  1161  0011D6  0012               	return		;funcret
  1162  0011D8                     __end_of_TM1640_Show_Decimal:
  1163                           	opt stack 0
  1164                           tblptru	equ	0xFF8
  1165                           tblptrh	equ	0xFF7
  1166                           tblptrl	equ	0xFF6
  1167                           tablat	equ	0xFF5
  1168                           intcon	equ	0xFF2
  1169                           postinc0	equ	0xFEE
  1170                           wreg	equ	0xFE8
  1171                           status	equ	0xFD8
  1172                           
  1173 ;; *************** function ___fttol *****************
  1174 ;; Defined at:
  1175 ;;		line 44 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;  f1              3    0[BANK0 ] float 
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;  lval            4   10[BANK0 ] unsigned long 
  1180 ;;  exp1            1   14[BANK0 ] unsigned char 
  1181 ;;  sign1           1    9[BANK0 ] unsigned char 
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  4    0[BANK0 ] long 
  1184 ;; Registers used:
  1185 ;;		wreg, status,2, status,0
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1191 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1192 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1193 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1194 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1195 ;;Total ram usage:       15 bytes
  1196 ;; Hardware stack levels used:    1
  1197 ;; Hardware stack levels required when called:    4
  1198 ;; This function calls:
  1199 ;;		Nothing
  1200 ;; This function is called by:
  1201 ;;		_TM1640_Show_Decimal
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205                           	psect	text6
  1206  001344                     __ptext6:
  1207                           	opt stack 0
  1208  001344                     ___fttol:
  1209                           	opt stack 25
  1210                           
  1211                           ;incstack = 0
  1212  001344  C062  F064         	movff	___fttol@f1+2,??___fttol
  1213  001348  0100               	movlb	0	; () banked
  1214  00134A  6B65               	clrf	(??___fttol+1)& (0+255),b
  1215  00134C  6B66               	clrf	(??___fttol+2)& (0+255),b
  1216  00134E  0100               	movlb	0	; () banked
  1217  001350  3561               	rlcf	(___fttol@f1+1)& (0+255),w,b
  1218  001352  0100               	movlb	0	; () banked
  1219  001354  3764               	rlcf	??___fttol& (0+255),f,b
  1220  001356  E301               	bnc	u1591
  1221  001358  8165               	bsf	(??___fttol+1)& (0+255),0,b
  1222  00135A                     u1591:
  1223  00135A  0100               	movlb	0	; () banked
  1224  00135C  5164               	movf	??___fttol& (0+255),w,b
  1225  00135E  0100               	movlb	0	; () banked
  1226  001360  6F6E               	movwf	___fttol@exp1& (0+255),b
  1227  001362  0100               	movlb	0	; () banked
  1228  001364  516E               	movf	___fttol@exp1& (0+255),w,b
  1229  001366  A4D8               	btfss	status,2,c
  1230  001368  D00A               	goto	l1974
  1231                           
  1232                           ; BSR set to: 0
  1233  00136A  0E00               	movlw	0
  1234  00136C  0100               	movlb	0	; () banked
  1235  00136E  6F60               	movwf	?___fttol& (0+255),b
  1236  001370  0E00               	movlw	0
  1237  001372  6F61               	movwf	(?___fttol+1)& (0+255),b
  1238  001374  0E00               	movlw	0
  1239  001376  6F62               	movwf	(?___fttol+2)& (0+255),b
  1240  001378  0E00               	movlw	0
  1241  00137A  6F63               	movwf	(?___fttol+3)& (0+255),b
  1242                           
  1243                           ; BSR set to: 0
  1244  00137C  0012               	return	
  1245  00137E                     l1974:
  1246                           
  1247                           ; BSR set to: 0
  1248  00137E  0E17               	movlw	23
  1249  001380  0100               	movlb	0	; () banked
  1250  001382  6F64               	movwf	??___fttol& (0+255),b
  1251  001384  C060  F065         	movff	___fttol@f1,??___fttol+1
  1252  001388  C061  F066         	movff	___fttol@f1+1,??___fttol+2
  1253  00138C  C062  F067         	movff	___fttol@f1+2,??___fttol+3
  1254  001390  0100               	movlb	0	; () banked
  1255  001392  2964               	incf	??___fttol& (0+255),w,b
  1256  001394  0100               	movlb	0	; () banked
  1257  001396  6F68               	movwf	(??___fttol+4)& (0+255),b
  1258  001398  D005               	goto	u1610
  1259  00139A                     u1615:
  1260  00139A  0100               	movlb	0	; () banked
  1261  00139C  90D8               	bcf	status,0,c
  1262  00139E  3367               	rrcf	(??___fttol+3)& (0+255),f,b
  1263  0013A0  3366               	rrcf	(??___fttol+2)& (0+255),f,b
  1264  0013A2  3365               	rrcf	(??___fttol+1)& (0+255),f,b
  1265  0013A4                     u1610:
  1266  0013A4  0100               	movlb	0	; () banked
  1267  0013A6  2F68               	decfsz	(??___fttol+4)& (0+255),f,b
  1268  0013A8  D7F8               	goto	u1615
  1269  0013AA  0100               	movlb	0	; () banked
  1270  0013AC  5165               	movf	(??___fttol+1)& (0+255),w,b
  1271  0013AE  0100               	movlb	0	; () banked
  1272  0013B0  6F69               	movwf	___fttol@sign1& (0+255),b
  1273                           
  1274                           ; BSR set to: 0
  1275  0013B2  0100               	movlb	0	; () banked
  1276  0013B4  8F61               	bsf	(___fttol@f1+1)& (0+255),7,b
  1277                           
  1278                           ; BSR set to: 0
  1279  0013B6  0EFF               	movlw	255
  1280  0013B8  0100               	movlb	0	; () banked
  1281  0013BA  1760               	andwf	___fttol@f1& (0+255),f,b
  1282  0013BC  0EFF               	movlw	255
  1283  0013BE  0100               	movlb	0	; () banked
  1284  0013C0  1761               	andwf	(___fttol@f1+1)& (0+255),f,b
  1285  0013C2  0E00               	movlw	0
  1286  0013C4  0100               	movlb	0	; () banked
  1287  0013C6  1762               	andwf	(___fttol@f1+2)& (0+255),f,b
  1288                           
  1289                           ; BSR set to: 0
  1290  0013C8  0100               	movlb	0	; () banked
  1291  0013CA  5160               	movf	___fttol@f1& (0+255),w,b
  1292  0013CC  0100               	movlb	0	; () banked
  1293  0013CE  6F6A               	movwf	___fttol@lval& (0+255),b
  1294  0013D0  0100               	movlb	0	; () banked
  1295  0013D2  5161               	movf	(___fttol@f1+1)& (0+255),w,b
  1296  0013D4  0100               	movlb	0	; () banked
  1297  0013D6  6F6B               	movwf	(___fttol@lval+1)& (0+255),b
  1298  0013D8  0100               	movlb	0	; () banked
  1299  0013DA  5162               	movf	(___fttol@f1+2)& (0+255),w,b
  1300  0013DC  0100               	movlb	0	; () banked
  1301  0013DE  6F6C               	movwf	(___fttol@lval+2)& (0+255),b
  1302  0013E0  0100               	movlb	0	; () banked
  1303  0013E2  6B6D               	clrf	(___fttol@lval+3)& (0+255),b
  1304                           
  1305                           ; BSR set to: 0
  1306  0013E4  0E8E               	movlw	142
  1307  0013E6  0100               	movlb	0	; () banked
  1308  0013E8  5F6E               	subwf	___fttol@exp1& (0+255),f,b
  1309                           
  1310                           ; BSR set to: 0
  1311  0013EA  0100               	movlb	0	; () banked
  1312  0013EC  AF6E               	btfss	___fttol@exp1& (0+255),7,b
  1313  0013EE  D01B               	goto	l1996
  1314                           
  1315                           ; BSR set to: 0
  1316  0013F0  0100               	movlb	0	; () banked
  1317  0013F2  516E               	movf	___fttol@exp1& (0+255),w,b
  1318  0013F4  0A80               	xorlw	128
  1319  0013F6  0F8F               	addlw	143
  1320  0013F8  B0D8               	btfsc	status,0,c
  1321  0013FA  D00B               	goto	l1992
  1322                           
  1323                           ; BSR set to: 0
  1324  0013FC  0E00               	movlw	0
  1325  0013FE  0100               	movlb	0	; () banked
  1326  001400  6F60               	movwf	?___fttol& (0+255),b
  1327  001402  0E00               	movlw	0
  1328  001404  6F61               	movwf	(?___fttol+1)& (0+255),b
  1329  001406  0E00               	movlw	0
  1330  001408  6F62               	movwf	(?___fttol+2)& (0+255),b
  1331  00140A  0E00               	movlw	0
  1332  00140C  6F63               	movwf	(?___fttol+3)& (0+255),b
  1333                           
  1334                           ; BSR set to: 0
  1335  00140E  0012               	return	
  1336                           
  1337                           ; BSR set to: 0
  1338  001410  D000               	goto	l1992
  1339  001412                     l1992:
  1340                           
  1341                           ; BSR set to: 0
  1342  001412  0100               	movlb	0	; () banked
  1343  001414  90D8               	bcf	status,0,c
  1344  001416  336D               	rrcf	(___fttol@lval+3)& (0+255),f,b
  1345  001418  336C               	rrcf	(___fttol@lval+2)& (0+255),f,b
  1346  00141A  336B               	rrcf	(___fttol@lval+1)& (0+255),f,b
  1347  00141C  336A               	rrcf	___fttol@lval& (0+255),f,b
  1348                           
  1349                           ; BSR set to: 0
  1350  00141E  0100               	movlb	0	; () banked
  1351  001420  3F6E               	incfsz	___fttol@exp1& (0+255),f,b
  1352  001422  D7F7               	goto	l1992
  1353                           
  1354                           ; BSR set to: 0
  1355  001424  D01F               	goto	l2006
  1356  001426                     l1996:
  1357                           
  1358                           ; BSR set to: 0
  1359  001426  0E17               	movlw	23
  1360  001428  0100               	movlb	0	; () banked
  1361  00142A  656E               	cpfsgt	___fttol@exp1& (0+255),b
  1362  00142C  D014               	goto	l2004
  1363                           
  1364                           ; BSR set to: 0
  1365  00142E  0E00               	movlw	0
  1366  001430  0100               	movlb	0	; () banked
  1367  001432  6F60               	movwf	?___fttol& (0+255),b
  1368  001434  0E00               	movlw	0
  1369  001436  6F61               	movwf	(?___fttol+1)& (0+255),b
  1370  001438  0E00               	movlw	0
  1371  00143A  6F62               	movwf	(?___fttol+2)& (0+255),b
  1372  00143C  0E00               	movlw	0
  1373  00143E  6F63               	movwf	(?___fttol+3)& (0+255),b
  1374                           
  1375                           ; BSR set to: 0
  1376  001440  0012               	return	
  1377                           
  1378                           ; BSR set to: 0
  1379  001442  D009               	goto	l2004
  1380  001444                     l2002:
  1381                           
  1382                           ; BSR set to: 0
  1383  001444  0100               	movlb	0	; () banked
  1384  001446  90D8               	bcf	status,0,c
  1385  001448  376A               	rlcf	___fttol@lval& (0+255),f,b
  1386  00144A  376B               	rlcf	(___fttol@lval+1)& (0+255),f,b
  1387  00144C  376C               	rlcf	(___fttol@lval+2)& (0+255),f,b
  1388  00144E  376D               	rlcf	(___fttol@lval+3)& (0+255),f,b
  1389  001450  0100               	movlb	0	; () banked
  1390  001452  076E               	decf	___fttol@exp1& (0+255),f,b
  1391  001454  D000               	goto	l2004
  1392  001456                     l2004:
  1393                           
  1394                           ; BSR set to: 0
  1395  001456  0100               	movlb	0	; () banked
  1396  001458  516E               	movf	___fttol@exp1& (0+255),w,b
  1397  00145A  0100               	movlb	0	; () banked
  1398  00145C  B4D8               	btfsc	status,2,c
  1399  00145E  D002               	goto	l2006
  1400  001460  D7F1               	goto	l2002
  1401                           
  1402                           ; BSR set to: 0
  1403  001462  D000               	goto	l2006
  1404  001464                     l2006:
  1405                           
  1406                           ; BSR set to: 0
  1407  001464  0100               	movlb	0	; () banked
  1408  001466  5169               	movf	___fttol@sign1& (0+255),w,b
  1409  001468  0100               	movlb	0	; () banked
  1410  00146A  B4D8               	btfsc	status,2,c
  1411  00146C  D00A               	goto	l2010
  1412                           
  1413                           ; BSR set to: 0
  1414  00146E  0100               	movlb	0	; () banked
  1415  001470  1F6D               	comf	(___fttol@lval+3)& (0+255),f,b
  1416  001472  1F6C               	comf	(___fttol@lval+2)& (0+255),f,b
  1417  001474  1F6B               	comf	(___fttol@lval+1)& (0+255),f,b
  1418  001476  6D6A               	negf	___fttol@lval& (0+255),b
  1419  001478  0E00               	movlw	0
  1420  00147A  236B               	addwfc	(___fttol@lval+1)& (0+255),f,b
  1421  00147C  236C               	addwfc	(___fttol@lval+2)& (0+255),f,b
  1422  00147E  236D               	addwfc	(___fttol@lval+3)& (0+255),f,b
  1423  001480  D000               	goto	l2010
  1424  001482                     l2010:
  1425                           
  1426                           ; BSR set to: 0
  1427  001482  C06A  F060         	movff	___fttol@lval,?___fttol
  1428  001486  C06B  F061         	movff	___fttol@lval+1,?___fttol+1
  1429  00148A  C06C  F062         	movff	___fttol@lval+2,?___fttol+2
  1430  00148E  C06D  F063         	movff	___fttol@lval+3,?___fttol+3
  1431  001492  0012               	return	
  1432                           
  1433                           ; BSR set to: 0
  1434                           
  1435                           ; BSR set to: 0
  1436  001494  0012               	return		;funcret
  1437  001496                     __end_of___fttol:
  1438                           	opt stack 0
  1439                           tblptru	equ	0xFF8
  1440                           tblptrh	equ	0xFF7
  1441                           tblptrl	equ	0xFF6
  1442                           tablat	equ	0xFF5
  1443                           intcon	equ	0xFF2
  1444                           postinc0	equ	0xFEE
  1445                           wreg	equ	0xFE8
  1446                           status	equ	0xFD8
  1447                           
  1448 ;; *************** function ___ftmul *****************
  1449 ;; Defined at:
  1450 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;  f1              3    8[BANK0 ] float 
  1453 ;;  f2              3   11[BANK0 ] float 
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;  f3_as_produc    3   18[BANK0 ] unsigned um
  1456 ;;  sign            1   22[BANK0 ] unsigned char 
  1457 ;;  cntr            1   21[BANK0 ] unsigned char 
  1458 ;;  exp             1   17[BANK0 ] unsigned char 
  1459 ;; Return value:  Size  Location     Type
  1460 ;;                  3    8[BANK0 ] float 
  1461 ;; Registers used:
  1462 ;;		wreg, status,2, status,0, cstack
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1468 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1469 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1470 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1471 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1472 ;;Total ram usage:       15 bytes
  1473 ;; Hardware stack levels used:    1
  1474 ;; Hardware stack levels required when called:    5
  1475 ;; This function calls:
  1476 ;;		___ftpack
  1477 ;; This function is called by:
  1478 ;;		_TM1640_Show_Decimal
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           	psect	text7
  1483  0011D8                     __ptext7:
  1484                           	opt stack 0
  1485  0011D8                     ___ftmul:
  1486                           	opt stack 24
  1487                           
  1488                           ; BSR set to: 0
  1489                           ;incstack = 0
  1490  0011D8  C06A  F06E         	movff	___ftmul@f1+2,??___ftmul
  1491  0011DC  0100               	movlb	0	; () banked
  1492  0011DE  6B6F               	clrf	(??___ftmul+1)& (0+255),b
  1493  0011E0  6B70               	clrf	(??___ftmul+2)& (0+255),b
  1494  0011E2  0100               	movlb	0	; () banked
  1495  0011E4  3569               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  1496  0011E6  0100               	movlb	0	; () banked
  1497  0011E8  376E               	rlcf	??___ftmul& (0+255),f,b
  1498  0011EA  E301               	bnc	u1471
  1499  0011EC  816F               	bsf	(??___ftmul+1)& (0+255),0,b
  1500  0011EE                     u1471:
  1501  0011EE  0100               	movlb	0	; () banked
  1502  0011F0  516E               	movf	??___ftmul& (0+255),w,b
  1503  0011F2  0100               	movlb	0	; () banked
  1504  0011F4  6F71               	movwf	___ftmul@exp& (0+255),b
  1505  0011F6  0100               	movlb	0	; () banked
  1506  0011F8  5171               	movf	___ftmul@exp& (0+255),w,b
  1507  0011FA  A4D8               	btfss	status,2,c
  1508  0011FC  D00A               	goto	l1890
  1509                           
  1510                           ; BSR set to: 0
  1511  0011FE  0E00               	movlw	0
  1512  001200  0100               	movlb	0	; () banked
  1513  001202  6F68               	movwf	?___ftmul& (0+255),b
  1514  001204  0E00               	movlw	0
  1515  001206  0100               	movlb	0	; () banked
  1516  001208  6F69               	movwf	(?___ftmul+1)& (0+255),b
  1517  00120A  0E00               	movlw	0
  1518  00120C  0100               	movlb	0	; () banked
  1519  00120E  6F6A               	movwf	(?___ftmul+2)& (0+255),b
  1520                           
  1521                           ; BSR set to: 0
  1522  001210  0012               	return	
  1523  001212                     l1890:
  1524                           
  1525                           ; BSR set to: 0
  1526  001212  C06D  F06E         	movff	___ftmul@f2+2,??___ftmul
  1527  001216  0100               	movlb	0	; () banked
  1528  001218  6B6F               	clrf	(??___ftmul+1)& (0+255),b
  1529  00121A  6B70               	clrf	(??___ftmul+2)& (0+255),b
  1530  00121C  0100               	movlb	0	; () banked
  1531  00121E  356C               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  1532  001220  0100               	movlb	0	; () banked
  1533  001222  376E               	rlcf	??___ftmul& (0+255),f,b
  1534  001224  E301               	bnc	u1491
  1535  001226  816F               	bsf	(??___ftmul+1)& (0+255),0,b
  1536  001228                     u1491:
  1537  001228  0100               	movlb	0	; () banked
  1538  00122A  516E               	movf	??___ftmul& (0+255),w,b
  1539  00122C  0100               	movlb	0	; () banked
  1540  00122E  6F76               	movwf	___ftmul@sign& (0+255),b
  1541  001230  0100               	movlb	0	; () banked
  1542  001232  5176               	movf	___ftmul@sign& (0+255),w,b
  1543  001234  A4D8               	btfss	status,2,c
  1544  001236  D00A               	goto	l1896
  1545                           
  1546                           ; BSR set to: 0
  1547  001238  0E00               	movlw	0
  1548  00123A  0100               	movlb	0	; () banked
  1549  00123C  6F68               	movwf	?___ftmul& (0+255),b
  1550  00123E  0E00               	movlw	0
  1551  001240  0100               	movlb	0	; () banked
  1552  001242  6F69               	movwf	(?___ftmul+1)& (0+255),b
  1553  001244  0E00               	movlw	0
  1554  001246  0100               	movlb	0	; () banked
  1555  001248  6F6A               	movwf	(?___ftmul+2)& (0+255),b
  1556                           
  1557                           ; BSR set to: 0
  1558  00124A  0012               	return	
  1559  00124C                     l1896:
  1560                           
  1561                           ; BSR set to: 0
  1562  00124C  0100               	movlb	0	; () banked
  1563  00124E  5176               	movf	___ftmul@sign& (0+255),w,b
  1564  001250  0F7B               	addlw	123
  1565  001252  0100               	movlb	0	; () banked
  1566  001254  2771               	addwf	___ftmul@exp& (0+255),f,b
  1567                           
  1568                           ; BSR set to: 0
  1569  001256  C06A  F076         	movff	___ftmul@f1+2,___ftmul@sign
  1570  00125A  0100               	movlb	0	; () banked
  1571  00125C  516D               	movf	(___ftmul@f2+2)& (0+255),w,b
  1572  00125E  0100               	movlb	0	; () banked
  1573  001260  1B76               	xorwf	___ftmul@sign& (0+255),f,b
  1574  001262  0E80               	movlw	128
  1575  001264  0100               	movlb	0	; () banked
  1576  001266  1776               	andwf	___ftmul@sign& (0+255),f,b
  1577                           
  1578                           ; BSR set to: 0
  1579  001268  0100               	movlb	0	; () banked
  1580  00126A  8F69               	bsf	(___ftmul@f1+1)& (0+255),7,b
  1581                           
  1582                           ; BSR set to: 0
  1583  00126C  0100               	movlb	0	; () banked
  1584  00126E  8F6C               	bsf	(___ftmul@f2+1)& (0+255),7,b
  1585                           
  1586                           ; BSR set to: 0
  1587  001270  0EFF               	movlw	255
  1588  001272  0100               	movlb	0	; () banked
  1589  001274  176B               	andwf	___ftmul@f2& (0+255),f,b
  1590  001276  0EFF               	movlw	255
  1591  001278  0100               	movlb	0	; () banked
  1592  00127A  176C               	andwf	(___ftmul@f2+1)& (0+255),f,b
  1593  00127C  0E00               	movlw	0
  1594  00127E  0100               	movlb	0	; () banked
  1595  001280  176D               	andwf	(___ftmul@f2+2)& (0+255),f,b
  1596                           
  1597                           ; BSR set to: 0
  1598  001282  0E00               	movlw	0
  1599  001284  0100               	movlb	0	; () banked
  1600  001286  6F72               	movwf	___ftmul@f3_as_product& (0+255),b
  1601  001288  0E00               	movlw	0
  1602  00128A  0100               	movlb	0	; () banked
  1603  00128C  6F73               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  1604  00128E  0E00               	movlw	0
  1605  001290  0100               	movlb	0	; () banked
  1606  001292  6F74               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  1607                           
  1608                           ; BSR set to: 0
  1609  001294  0E07               	movlw	7
  1610  001296  0100               	movlb	0	; () banked
  1611  001298  6F75               	movwf	___ftmul@cntr& (0+255),b
  1612  00129A  D000               	goto	l1910
  1613  00129C                     l1910:
  1614                           
  1615                           ; BSR set to: 0
  1616  00129C  0100               	movlb	0	; () banked
  1617  00129E  A168               	btfss	___ftmul@f1& (0+255),0,b
  1618  0012A0  D00D               	goto	l1914
  1619                           
  1620                           ; BSR set to: 0
  1621  0012A2  0100               	movlb	0	; () banked
  1622  0012A4  516B               	movf	___ftmul@f2& (0+255),w,b
  1623  0012A6  0100               	movlb	0	; () banked
  1624  0012A8  2772               	addwf	___ftmul@f3_as_product& (0+255),f,b
  1625  0012AA  0100               	movlb	0	; () banked
  1626  0012AC  516C               	movf	(___ftmul@f2+1)& (0+255),w,b
  1627  0012AE  0100               	movlb	0	; () banked
  1628  0012B0  2373               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  1629  0012B2  0100               	movlb	0	; () banked
  1630  0012B4  516D               	movf	(___ftmul@f2+2)& (0+255),w,b
  1631  0012B6  0100               	movlb	0	; () banked
  1632  0012B8  2374               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  1633  0012BA  D000               	goto	l1914
  1634  0012BC                     l1914:
  1635                           
  1636                           ; BSR set to: 0
  1637  0012BC  0100               	movlb	0	; () banked
  1638  0012BE  90D8               	bcf	status,0,c
  1639  0012C0  336A               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  1640  0012C2  3369               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  1641  0012C4  3368               	rrcf	___ftmul@f1& (0+255),f,b
  1642  0012C6  0100               	movlb	0	; () banked
  1643  0012C8  90D8               	bcf	status,0,c
  1644  0012CA  376B               	rlcf	___ftmul@f2& (0+255),f,b
  1645  0012CC  376C               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  1646  0012CE  376D               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  1647                           
  1648                           ; BSR set to: 0
  1649  0012D0  0100               	movlb	0	; () banked
  1650  0012D2  2F75               	decfsz	___ftmul@cntr& (0+255),f,b
  1651  0012D4  D7E3               	goto	l1910
  1652  0012D6  D000               	goto	l1918
  1653  0012D8                     l1918:
  1654                           
  1655                           ; BSR set to: 0
  1656  0012D8  0E09               	movlw	9
  1657  0012DA  0100               	movlb	0	; () banked
  1658  0012DC  6F75               	movwf	___ftmul@cntr& (0+255),b
  1659  0012DE  D000               	goto	l1920
  1660  0012E0                     l1920:
  1661                           
  1662                           ; BSR set to: 0
  1663  0012E0  0100               	movlb	0	; () banked
  1664  0012E2  A168               	btfss	___ftmul@f1& (0+255),0,b
  1665  0012E4  D00D               	goto	l1924
  1666                           
  1667                           ; BSR set to: 0
  1668  0012E6  0100               	movlb	0	; () banked
  1669  0012E8  516B               	movf	___ftmul@f2& (0+255),w,b
  1670  0012EA  0100               	movlb	0	; () banked
  1671  0012EC  2772               	addwf	___ftmul@f3_as_product& (0+255),f,b
  1672  0012EE  0100               	movlb	0	; () banked
  1673  0012F0  516C               	movf	(___ftmul@f2+1)& (0+255),w,b
  1674  0012F2  0100               	movlb	0	; () banked
  1675  0012F4  2373               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  1676  0012F6  0100               	movlb	0	; () banked
  1677  0012F8  516D               	movf	(___ftmul@f2+2)& (0+255),w,b
  1678  0012FA  0100               	movlb	0	; () banked
  1679  0012FC  2374               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  1680  0012FE  D000               	goto	l1924
  1681  001300                     l1924:
  1682                           
  1683                           ; BSR set to: 0
  1684  001300  0100               	movlb	0	; () banked
  1685  001302  90D8               	bcf	status,0,c
  1686  001304  336A               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  1687  001306  3369               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  1688  001308  3368               	rrcf	___ftmul@f1& (0+255),f,b
  1689  00130A  0100               	movlb	0	; () banked
  1690  00130C  90D8               	bcf	status,0,c
  1691  00130E  3374               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  1692  001310  3373               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  1693  001312  3372               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  1694                           
  1695                           ; BSR set to: 0
  1696  001314  0100               	movlb	0	; () banked
  1697  001316  2F75               	decfsz	___ftmul@cntr& (0+255),f,b
  1698  001318  D7E3               	goto	l1920
  1699  00131A  D000               	goto	l1928
  1700  00131C                     l1928:
  1701                           
  1702                           ; BSR set to: 0
  1703  00131C  C072  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
  1704  001320  C073  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1705  001324  C074  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1706  001328  C071  F063         	movff	___ftmul@exp,___ftpack@exp
  1707  00132C  C076  F064         	movff	___ftmul@sign,___ftpack@sign
  1708  001330  ECF4  F00A         	call	___ftpack	;wreg free
  1709  001334  C060  F068         	movff	?___ftpack,?___ftmul
  1710  001338  C061  F069         	movff	?___ftpack+1,?___ftmul+1
  1711  00133C  C062  F06A         	movff	?___ftpack+2,?___ftmul+2
  1712  001340  0012               	return	
  1713  001342  0012               	return		;funcret
  1714  001344                     __end_of___ftmul:
  1715                           	opt stack 0
  1716                           tblptru	equ	0xFF8
  1717                           tblptrh	equ	0xFF7
  1718                           tblptrl	equ	0xFF6
  1719                           tablat	equ	0xFF5
  1720                           intcon	equ	0xFF2
  1721                           postinc0	equ	0xFEE
  1722                           wreg	equ	0xFE8
  1723                           status	equ	0xFD8
  1724                           
  1725 ;; *************** function ___ftdiv *****************
  1726 ;; Defined at:
  1727 ;;		line 54 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  1728 ;; Parameters:    Size  Location     Type
  1729 ;;  f1              3    8[BANK0 ] float 
  1730 ;;  f2              3   11[BANK0 ] float 
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;  f3              3   18[BANK0 ] float 
  1733 ;;  sign            1   22[BANK0 ] unsigned char 
  1734 ;;  exp             1   21[BANK0 ] unsigned char 
  1735 ;;  cntr            1   17[BANK0 ] unsigned char 
  1736 ;; Return value:  Size  Location     Type
  1737 ;;                  3    8[BANK0 ] float 
  1738 ;; Registers used:
  1739 ;;		wreg, status,2, status,0, cstack
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1745 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1746 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1747 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1748 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1749 ;;Total ram usage:       15 bytes
  1750 ;; Hardware stack levels used:    1
  1751 ;; Hardware stack levels required when called:    5
  1752 ;; This function calls:
  1753 ;;		___ftpack
  1754 ;; This function is called by:
  1755 ;;		_TM1640_Show_Decimal
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           	psect	text8
  1760  001496                     __ptext8:
  1761                           	opt stack 0
  1762  001496                     ___ftdiv:
  1763                           	opt stack 24
  1764                           
  1765                           ;incstack = 0
  1766  001496  C06A  F06E         	movff	___ftdiv@f1+2,??___ftdiv
  1767  00149A  0100               	movlb	0	; () banked
  1768  00149C  6B6F               	clrf	(??___ftdiv+1)& (0+255),b
  1769  00149E  6B70               	clrf	(??___ftdiv+2)& (0+255),b
  1770  0014A0  0100               	movlb	0	; () banked
  1771  0014A2  3569               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  1772  0014A4  0100               	movlb	0	; () banked
  1773  0014A6  376E               	rlcf	??___ftdiv& (0+255),f,b
  1774  0014A8  E301               	bnc	u1421
  1775  0014AA  816F               	bsf	(??___ftdiv+1)& (0+255),0,b
  1776  0014AC                     u1421:
  1777  0014AC  0100               	movlb	0	; () banked
  1778  0014AE  516E               	movf	??___ftdiv& (0+255),w,b
  1779  0014B0  0100               	movlb	0	; () banked
  1780  0014B2  6F75               	movwf	___ftdiv@exp& (0+255),b
  1781  0014B4  0100               	movlb	0	; () banked
  1782  0014B6  5175               	movf	___ftdiv@exp& (0+255),w,b
  1783  0014B8  A4D8               	btfss	status,2,c
  1784  0014BA  D00A               	goto	l1844
  1785                           
  1786                           ; BSR set to: 0
  1787  0014BC  0E00               	movlw	0
  1788  0014BE  0100               	movlb	0	; () banked
  1789  0014C0  6F68               	movwf	?___ftdiv& (0+255),b
  1790  0014C2  0E00               	movlw	0
  1791  0014C4  0100               	movlb	0	; () banked
  1792  0014C6  6F69               	movwf	(?___ftdiv+1)& (0+255),b
  1793  0014C8  0E00               	movlw	0
  1794  0014CA  0100               	movlb	0	; () banked
  1795  0014CC  6F6A               	movwf	(?___ftdiv+2)& (0+255),b
  1796                           
  1797                           ; BSR set to: 0
  1798  0014CE  0012               	return	
  1799  0014D0                     l1844:
  1800                           
  1801                           ; BSR set to: 0
  1802  0014D0  C06D  F06E         	movff	___ftdiv@f2+2,??___ftdiv
  1803  0014D4  0100               	movlb	0	; () banked
  1804  0014D6  6B6F               	clrf	(??___ftdiv+1)& (0+255),b
  1805  0014D8  6B70               	clrf	(??___ftdiv+2)& (0+255),b
  1806  0014DA  0100               	movlb	0	; () banked
  1807  0014DC  356C               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  1808  0014DE  0100               	movlb	0	; () banked
  1809  0014E0  376E               	rlcf	??___ftdiv& (0+255),f,b
  1810  0014E2  E301               	bnc	u1441
  1811  0014E4  816F               	bsf	(??___ftdiv+1)& (0+255),0,b
  1812  0014E6                     u1441:
  1813  0014E6  0100               	movlb	0	; () banked
  1814  0014E8  516E               	movf	??___ftdiv& (0+255),w,b
  1815  0014EA  0100               	movlb	0	; () banked
  1816  0014EC  6F76               	movwf	___ftdiv@sign& (0+255),b
  1817  0014EE  0100               	movlb	0	; () banked
  1818  0014F0  5176               	movf	___ftdiv@sign& (0+255),w,b
  1819  0014F2  A4D8               	btfss	status,2,c
  1820  0014F4  D00A               	goto	l1850
  1821                           
  1822                           ; BSR set to: 0
  1823  0014F6  0E00               	movlw	0
  1824  0014F8  0100               	movlb	0	; () banked
  1825  0014FA  6F68               	movwf	?___ftdiv& (0+255),b
  1826  0014FC  0E00               	movlw	0
  1827  0014FE  0100               	movlb	0	; () banked
  1828  001500  6F69               	movwf	(?___ftdiv+1)& (0+255),b
  1829  001502  0E00               	movlw	0
  1830  001504  0100               	movlb	0	; () banked
  1831  001506  6F6A               	movwf	(?___ftdiv+2)& (0+255),b
  1832                           
  1833                           ; BSR set to: 0
  1834  001508  0012               	return	
  1835  00150A                     l1850:
  1836                           
  1837                           ; BSR set to: 0
  1838  00150A  0E00               	movlw	0
  1839  00150C  0100               	movlb	0	; () banked
  1840  00150E  6F72               	movwf	___ftdiv@f3& (0+255),b
  1841  001510  0E00               	movlw	0
  1842  001512  0100               	movlb	0	; () banked
  1843  001514  6F73               	movwf	(___ftdiv@f3+1)& (0+255),b
  1844  001516  0E00               	movlw	0
  1845  001518  0100               	movlb	0	; () banked
  1846  00151A  6F74               	movwf	(___ftdiv@f3+2)& (0+255),b
  1847                           
  1848                           ; BSR set to: 0
  1849  00151C  0100               	movlb	0	; () banked
  1850  00151E  5176               	movf	___ftdiv@sign& (0+255),w,b
  1851  001520  0F89               	addlw	137
  1852  001522  0100               	movlb	0	; () banked
  1853  001524  5F75               	subwf	___ftdiv@exp& (0+255),f,b
  1854                           
  1855                           ; BSR set to: 0
  1856  001526  C06A  F076         	movff	___ftdiv@f1+2,___ftdiv@sign
  1857                           
  1858                           ; BSR set to: 0
  1859  00152A  0100               	movlb	0	; () banked
  1860  00152C  516D               	movf	(___ftdiv@f2+2)& (0+255),w,b
  1861  00152E  0100               	movlb	0	; () banked
  1862  001530  1B76               	xorwf	___ftdiv@sign& (0+255),f,b
  1863                           
  1864                           ; BSR set to: 0
  1865  001532  0E80               	movlw	128
  1866  001534  0100               	movlb	0	; () banked
  1867  001536  1776               	andwf	___ftdiv@sign& (0+255),f,b
  1868                           
  1869                           ; BSR set to: 0
  1870  001538  0100               	movlb	0	; () banked
  1871  00153A  8F69               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  1872                           
  1873                           ; BSR set to: 0
  1874  00153C  0EFF               	movlw	255
  1875  00153E  0100               	movlb	0	; () banked
  1876  001540  1768               	andwf	___ftdiv@f1& (0+255),f,b
  1877  001542  0EFF               	movlw	255
  1878  001544  0100               	movlb	0	; () banked
  1879  001546  1769               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  1880  001548  0E00               	movlw	0
  1881  00154A  0100               	movlb	0	; () banked
  1882  00154C  176A               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  1883                           
  1884                           ; BSR set to: 0
  1885  00154E  0100               	movlb	0	; () banked
  1886  001550  8F6C               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  1887                           
  1888                           ; BSR set to: 0
  1889  001552  0EFF               	movlw	255
  1890  001554  0100               	movlb	0	; () banked
  1891  001556  176B               	andwf	___ftdiv@f2& (0+255),f,b
  1892  001558  0EFF               	movlw	255
  1893  00155A  0100               	movlb	0	; () banked
  1894  00155C  176C               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  1895  00155E  0E00               	movlw	0
  1896  001560  0100               	movlb	0	; () banked
  1897  001562  176D               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  1898                           
  1899                           ; BSR set to: 0
  1900  001564  0E18               	movlw	24
  1901  001566  0100               	movlb	0	; () banked
  1902  001568  6F71               	movwf	___ftdiv@cntr& (0+255),b
  1903  00156A  D000               	goto	l1870
  1904  00156C                     l1870:
  1905                           
  1906                           ; BSR set to: 0
  1907  00156C  0100               	movlb	0	; () banked
  1908  00156E  90D8               	bcf	status,0,c
  1909  001570  3772               	rlcf	___ftdiv@f3& (0+255),f,b
  1910  001572  3773               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  1911  001574  3774               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  1912                           
  1913                           ; BSR set to: 0
  1914  001576  0100               	movlb	0	; () banked
  1915  001578  516B               	movf	___ftdiv@f2& (0+255),w,b
  1916  00157A  0100               	movlb	0	; () banked
  1917  00157C  5D68               	subwf	___ftdiv@f1& (0+255),w,b
  1918  00157E  0100               	movlb	0	; () banked
  1919  001580  516C               	movf	(___ftdiv@f2+1)& (0+255),w,b
  1920  001582  0100               	movlb	0	; () banked
  1921  001584  5969               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  1922  001586  0100               	movlb	0	; () banked
  1923  001588  516D               	movf	(___ftdiv@f2+2)& (0+255),w,b
  1924  00158A  0100               	movlb	0	; () banked
  1925  00158C  596A               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  1926  00158E  A0D8               	btfss	status,0,c
  1927  001590  D00E               	goto	l700
  1928                           
  1929                           ; BSR set to: 0
  1930  001592  0100               	movlb	0	; () banked
  1931  001594  516B               	movf	___ftdiv@f2& (0+255),w,b
  1932  001596  0100               	movlb	0	; () banked
  1933  001598  5F68               	subwf	___ftdiv@f1& (0+255),f,b
  1934  00159A  0100               	movlb	0	; () banked
  1935  00159C  516C               	movf	(___ftdiv@f2+1)& (0+255),w,b
  1936  00159E  0100               	movlb	0	; () banked
  1937  0015A0  5B69               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  1938  0015A2  0100               	movlb	0	; () banked
  1939  0015A4  516D               	movf	(___ftdiv@f2+2)& (0+255),w,b
  1940  0015A6  0100               	movlb	0	; () banked
  1941  0015A8  5B6A               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  1942                           
  1943                           ; BSR set to: 0
  1944  0015AA  0100               	movlb	0	; () banked
  1945  0015AC  8172               	bsf	___ftdiv@f3& (0+255),0,b
  1946  0015AE                     l700:
  1947                           
  1948                           ; BSR set to: 0
  1949  0015AE  0100               	movlb	0	; () banked
  1950  0015B0  90D8               	bcf	status,0,c
  1951  0015B2  3768               	rlcf	___ftdiv@f1& (0+255),f,b
  1952  0015B4  3769               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  1953  0015B6  376A               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  1954                           
  1955                           ; BSR set to: 0
  1956  0015B8  0100               	movlb	0	; () banked
  1957  0015BA  2F71               	decfsz	___ftdiv@cntr& (0+255),f,b
  1958  0015BC  D7D7               	goto	l1870
  1959  0015BE  D000               	goto	l1880
  1960  0015C0                     l1880:
  1961                           
  1962                           ; BSR set to: 0
  1963  0015C0  C072  F060         	movff	___ftdiv@f3,___ftpack@arg
  1964  0015C4  C073  F061         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1965  0015C8  C074  F062         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1966  0015CC  C075  F063         	movff	___ftdiv@exp,___ftpack@exp
  1967  0015D0  C076  F064         	movff	___ftdiv@sign,___ftpack@sign
  1968  0015D4  ECF4  F00A         	call	___ftpack	;wreg free
  1969  0015D8  C060  F068         	movff	?___ftpack,?___ftdiv
  1970  0015DC  C061  F069         	movff	?___ftpack+1,?___ftdiv+1
  1971  0015E0  C062  F06A         	movff	?___ftpack+2,?___ftdiv+2
  1972  0015E4  0012               	return	
  1973  0015E6  0012               	return		;funcret
  1974  0015E8                     __end_of___ftdiv:
  1975                           	opt stack 0
  1976                           tblptru	equ	0xFF8
  1977                           tblptrh	equ	0xFF7
  1978                           tblptrl	equ	0xFF6
  1979                           tablat	equ	0xFF5
  1980                           intcon	equ	0xFF2
  1981                           postinc0	equ	0xFEE
  1982                           wreg	equ	0xFE8
  1983                           status	equ	0xFD8
  1984                           
  1985 ;; *************** function ___ftpack *****************
  1986 ;; Defined at:
  1987 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;  arg             3    0[BANK0 ] unsigned um
  1990 ;;  exp             1    3[BANK0 ] unsigned char 
  1991 ;;  sign            1    4[BANK0 ] unsigned char 
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;		None
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  3    0[BANK0 ] float 
  1996 ;; Registers used:
  1997 ;;		wreg, status,2, status,0
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2003 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2005 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2006 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2007 ;;Total ram usage:        8 bytes
  2008 ;; Hardware stack levels used:    1
  2009 ;; Hardware stack levels required when called:    4
  2010 ;; This function calls:
  2011 ;;		Nothing
  2012 ;; This function is called by:
  2013 ;;		___ftdiv
  2014 ;;		___ftmul
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018                           	psect	text9
  2019  0015E8                     __ptext9:
  2020                           	opt stack 0
  2021  0015E8                     ___ftpack:
  2022                           	opt stack 24
  2023                           
  2024                           ;incstack = 0
  2025  0015E8  0100               	movlb	0	; () banked
  2026  0015EA  5163               	movf	___ftpack@exp& (0+255),w,b
  2027  0015EC  0100               	movlb	0	; () banked
  2028  0015EE  B4D8               	btfsc	status,2,c
  2029  0015F0  D008               	goto	l1708
  2030                           
  2031                           ; BSR set to: 0
  2032  0015F2  0100               	movlb	0	; () banked
  2033  0015F4  5160               	movf	___ftpack@arg& (0+255),w,b
  2034  0015F6  0100               	movlb	0	; () banked
  2035  0015F8  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  2036  0015FA  0100               	movlb	0	; () banked
  2037  0015FC  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  2038  0015FE  A4D8               	btfss	status,2,c
  2039  001600  D013               	goto	l1714
  2040  001602                     l1708:
  2041                           
  2042                           ; BSR set to: 0
  2043  001602  0E00               	movlw	0
  2044  001604  0100               	movlb	0	; () banked
  2045  001606  6F60               	movwf	?___ftpack& (0+255),b
  2046  001608  0E00               	movlw	0
  2047  00160A  0100               	movlb	0	; () banked
  2048  00160C  6F61               	movwf	(?___ftpack+1)& (0+255),b
  2049  00160E  0E00               	movlw	0
  2050  001610  0100               	movlb	0	; () banked
  2051  001612  6F62               	movwf	(?___ftpack+2)& (0+255),b
  2052                           
  2053                           ; BSR set to: 0
  2054  001614  0012               	return	
  2055                           
  2056                           ; BSR set to: 0
  2057  001616  D008               	goto	l1714
  2058  001618                     l1712:
  2059                           
  2060                           ; BSR set to: 0
  2061  001618  0100               	movlb	0	; () banked
  2062  00161A  2B63               	incf	___ftpack@exp& (0+255),f,b
  2063  00161C  0100               	movlb	0	; () banked
  2064  00161E  90D8               	bcf	status,0,c
  2065  001620  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  2066  001622  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  2067  001624  3360               	rrcf	___ftpack@arg& (0+255),f,b
  2068  001626  D000               	goto	l1714
  2069  001628                     l1714:
  2070                           
  2071                           ; BSR set to: 0
  2072  001628  0E00               	movlw	0
  2073  00162A  0100               	movlb	0	; () banked
  2074  00162C  1560               	andwf	___ftpack@arg& (0+255),w,b
  2075  00162E  0100               	movlb	0	; () banked
  2076  001630  6F65               	movwf	??___ftpack& (0+255),b
  2077  001632  0E00               	movlw	0
  2078  001634  0100               	movlb	0	; () banked
  2079  001636  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  2080  001638  0100               	movlb	0	; () banked
  2081  00163A  6F66               	movwf	(??___ftpack+1)& (0+255),b
  2082  00163C  0EFE               	movlw	254
  2083  00163E  0100               	movlb	0	; () banked
  2084  001640  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  2085  001642  0100               	movlb	0	; () banked
  2086  001644  6F67               	movwf	(??___ftpack+2)& (0+255),b
  2087  001646  0100               	movlb	0	; () banked
  2088  001648  5165               	movf	??___ftpack& (0+255),w,b
  2089  00164A  0100               	movlb	0	; () banked
  2090  00164C  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  2091  00164E  0100               	movlb	0	; () banked
  2092  001650  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  2093  001652  B4D8               	btfsc	status,2,c
  2094  001654  D013               	goto	l1720
  2095  001656  D7E0               	goto	l1712
  2096                           
  2097                           ; BSR set to: 0
  2098  001658  D011               	goto	l1720
  2099  00165A                     l1716:
  2100                           
  2101                           ; BSR set to: 0
  2102  00165A  0100               	movlb	0	; () banked
  2103  00165C  2B63               	incf	___ftpack@exp& (0+255),f,b
  2104                           
  2105                           ; BSR set to: 0
  2106  00165E  0E01               	movlw	1
  2107  001660  0100               	movlb	0	; () banked
  2108  001662  2760               	addwf	___ftpack@arg& (0+255),f,b
  2109  001664  0E00               	movlw	0
  2110  001666  0100               	movlb	0	; () banked
  2111  001668  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  2112  00166A  0E00               	movlw	0
  2113  00166C  0100               	movlb	0	; () banked
  2114  00166E  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  2115  001670  0100               	movlb	0	; () banked
  2116  001672  90D8               	bcf	status,0,c
  2117  001674  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  2118  001676  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  2119  001678  3360               	rrcf	___ftpack@arg& (0+255),f,b
  2120  00167A  D000               	goto	l1720
  2121  00167C                     l1720:
  2122                           
  2123                           ; BSR set to: 0
  2124  00167C  0E00               	movlw	0
  2125  00167E  0100               	movlb	0	; () banked
  2126  001680  1560               	andwf	___ftpack@arg& (0+255),w,b
  2127  001682  0100               	movlb	0	; () banked
  2128  001684  6F65               	movwf	??___ftpack& (0+255),b
  2129  001686  0E00               	movlw	0
  2130  001688  0100               	movlb	0	; () banked
  2131  00168A  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  2132  00168C  0100               	movlb	0	; () banked
  2133  00168E  6F66               	movwf	(??___ftpack+1)& (0+255),b
  2134  001690  0EFF               	movlw	255
  2135  001692  0100               	movlb	0	; () banked
  2136  001694  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  2137  001696  0100               	movlb	0	; () banked
  2138  001698  6F67               	movwf	(??___ftpack+2)& (0+255),b
  2139  00169A  0100               	movlb	0	; () banked
  2140  00169C  5165               	movf	??___ftpack& (0+255),w,b
  2141  00169E  0100               	movlb	0	; () banked
  2142  0016A0  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  2143  0016A2  0100               	movlb	0	; () banked
  2144  0016A4  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  2145  0016A6  B4D8               	btfsc	status,2,c
  2146  0016A8  D00A               	goto	l1724
  2147  0016AA  D7D7               	goto	l1716
  2148                           
  2149                           ; BSR set to: 0
  2150  0016AC  D008               	goto	l1724
  2151  0016AE                     l1722:
  2152                           
  2153                           ; BSR set to: 0
  2154  0016AE  0100               	movlb	0	; () banked
  2155  0016B0  0763               	decf	___ftpack@exp& (0+255),f,b
  2156  0016B2  0100               	movlb	0	; () banked
  2157  0016B4  90D8               	bcf	status,0,c
  2158  0016B6  3760               	rlcf	___ftpack@arg& (0+255),f,b
  2159  0016B8  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  2160  0016BA  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  2161  0016BC  D000               	goto	l1724
  2162  0016BE                     l1724:
  2163                           
  2164                           ; BSR set to: 0
  2165  0016BE  0100               	movlb	0	; () banked
  2166  0016C0  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  2167  0016C2  D005               	goto	l636
  2168                           
  2169                           ; BSR set to: 0
  2170  0016C4  0E02               	movlw	2
  2171  0016C6  0100               	movlb	0	; () banked
  2172  0016C8  6163               	cpfslt	___ftpack@exp& (0+255),b
  2173  0016CA  D7F1               	goto	l1722
  2174  0016CC  D000               	goto	l636
  2175  0016CE                     l636:
  2176                           
  2177                           ; BSR set to: 0
  2178  0016CE  0100               	movlb	0	; () banked
  2179  0016D0  B163               	btfsc	___ftpack@exp& (0+255),0,b
  2180  0016D2  D003               	goto	l1730
  2181                           
  2182                           ; BSR set to: 0
  2183  0016D4  0100               	movlb	0	; () banked
  2184  0016D6  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
  2185  0016D8  D000               	goto	l1730
  2186  0016DA                     l1730:
  2187                           
  2188                           ; BSR set to: 0
  2189  0016DA  0100               	movlb	0	; () banked
  2190  0016DC  90D8               	bcf	status,0,c
  2191  0016DE  3363               	rrcf	___ftpack@exp& (0+255),f,b
  2192  0016E0  0100               	movlb	0	; () banked
  2193  0016E2  5163               	movf	___ftpack@exp& (0+255),w,b
  2194  0016E4  0100               	movlb	0	; () banked
  2195  0016E6  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  2196                           
  2197                           ; BSR set to: 0
  2198  0016E8  0100               	movlb	0	; () banked
  2199  0016EA  5164               	movf	___ftpack@sign& (0+255),w,b
  2200  0016EC  0100               	movlb	0	; () banked
  2201  0016EE  B4D8               	btfsc	status,2,c
  2202  0016F0  D003               	goto	l1736
  2203                           
  2204                           ; BSR set to: 0
  2205  0016F2  0100               	movlb	0	; () banked
  2206  0016F4  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
  2207  0016F6  D000               	goto	l1736
  2208  0016F8                     l1736:
  2209                           
  2210                           ; BSR set to: 0
  2211  0016F8  C060  F060         	movff	___ftpack@arg,?___ftpack
  2212  0016FC  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
  2213  001700  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
  2214  001704  0012               	return	
  2215                           
  2216                           ; BSR set to: 0
  2217                           
  2218                           ; BSR set to: 0
  2219  001706  0012               	return		;funcret
  2220  001708                     __end_of___ftpack:
  2221                           	opt stack 0
  2222                           tblptru	equ	0xFF8
  2223                           tblptrh	equ	0xFF7
  2224                           tblptrl	equ	0xFF6
  2225                           tablat	equ	0xFF5
  2226                           intcon	equ	0xFF2
  2227                           postinc0	equ	0xFEE
  2228                           wreg	equ	0xFE8
  2229                           status	equ	0xFD8
  2230                           
  2231 ;; *************** function ___awmod *****************
  2232 ;; Defined at:
  2233 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;  dividend        2   15[BANK0 ] int 
  2236 ;;  divisor         2   17[BANK0 ] int 
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;  sign            1   20[BANK0 ] unsigned char 
  2239 ;;  counter         1   19[BANK0 ] unsigned char 
  2240 ;; Return value:  Size  Location     Type
  2241 ;;                  2   15[BANK0 ] int 
  2242 ;; Registers used:
  2243 ;;		wreg, status,2, status,0
  2244 ;; Tracked objects:
  2245 ;;		On entry : 0/0
  2246 ;;		On exit  : 0/0
  2247 ;;		Unchanged: 0/0
  2248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2249 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2250 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2252 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2253 ;;Total ram usage:        6 bytes
  2254 ;; Hardware stack levels used:    1
  2255 ;; Hardware stack levels required when called:    4
  2256 ;; This function calls:
  2257 ;;		Nothing
  2258 ;; This function is called by:
  2259 ;;		_TM1640_Show_Decimal
  2260 ;; This function uses a non-reentrant model
  2261 ;;
  2262                           
  2263                           	psect	text10
  2264  001ABE                     __ptext10:
  2265                           	opt stack 0
  2266  001ABE                     ___awmod:
  2267                           	opt stack 25
  2268                           
  2269                           ; BSR set to: 0
  2270                           ;incstack = 0
  2271  001ABE  0E00               	movlw	0
  2272  001AC0  0100               	movlb	0	; () banked
  2273  001AC2  6F74               	movwf	___awmod@sign& (0+255),b
  2274                           
  2275                           ; BSR set to: 0
  2276  001AC4  0100               	movlb	0	; () banked
  2277  001AC6  AF70               	btfss	(___awmod@dividend+1)& (0+255),7,b
  2278  001AC8  D009               	goto	l1940
  2279                           
  2280                           ; BSR set to: 0
  2281  001ACA  0100               	movlb	0	; () banked
  2282  001ACC  6D6F               	negf	___awmod@dividend& (0+255),b
  2283  001ACE  1F70               	comf	(___awmod@dividend+1)& (0+255),f,b
  2284  001AD0  B0D8               	btfsc	status,0,c
  2285  001AD2  2B70               	incf	(___awmod@dividend+1)& (0+255),f,b
  2286                           
  2287                           ; BSR set to: 0
  2288  001AD4  0E01               	movlw	1
  2289  001AD6  0100               	movlb	0	; () banked
  2290  001AD8  6F74               	movwf	___awmod@sign& (0+255),b
  2291  001ADA  D000               	goto	l1940
  2292  001ADC                     l1940:
  2293                           
  2294                           ; BSR set to: 0
  2295  001ADC  0100               	movlb	0	; () banked
  2296  001ADE  AF72               	btfss	(___awmod@divisor+1)& (0+255),7,b
  2297  001AE0  D006               	goto	l1944
  2298                           
  2299                           ; BSR set to: 0
  2300  001AE2  0100               	movlb	0	; () banked
  2301  001AE4  6D71               	negf	___awmod@divisor& (0+255),b
  2302  001AE6  1F72               	comf	(___awmod@divisor+1)& (0+255),f,b
  2303  001AE8  B0D8               	btfsc	status,0,c
  2304  001AEA  2B72               	incf	(___awmod@divisor+1)& (0+255),f,b
  2305  001AEC  D000               	goto	l1944
  2306  001AEE                     l1944:
  2307                           
  2308                           ; BSR set to: 0
  2309  001AEE  0100               	movlb	0	; () banked
  2310  001AF0  5171               	movf	___awmod@divisor& (0+255),w,b
  2311  001AF2  0100               	movlb	0	; () banked
  2312  001AF4  1172               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  2313  001AF6  B4D8               	btfsc	status,2,c
  2314  001AF8  D02B               	goto	l1960
  2315                           
  2316                           ; BSR set to: 0
  2317  001AFA  0E01               	movlw	1
  2318  001AFC  0100               	movlb	0	; () banked
  2319  001AFE  6F73               	movwf	___awmod@counter& (0+255),b
  2320  001B00  D007               	goto	l1950
  2321  001B02                     l1948:
  2322                           
  2323                           ; BSR set to: 0
  2324  001B02  0100               	movlb	0	; () banked
  2325  001B04  90D8               	bcf	status,0,c
  2326  001B06  3771               	rlcf	___awmod@divisor& (0+255),f,b
  2327  001B08  3772               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  2328  001B0A  0100               	movlb	0	; () banked
  2329  001B0C  2B73               	incf	___awmod@counter& (0+255),f,b
  2330  001B0E  D000               	goto	l1950
  2331  001B10                     l1950:
  2332                           
  2333                           ; BSR set to: 0
  2334  001B10  0100               	movlb	0	; () banked
  2335  001B12  BF72               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  2336  001B14  D002               	goto	l1952
  2337  001B16  D7F5               	goto	l1948
  2338                           
  2339                           ; BSR set to: 0
  2340  001B18  D000               	goto	l1952
  2341  001B1A                     l1952:
  2342                           
  2343                           ; BSR set to: 0
  2344  001B1A  0100               	movlb	0	; () banked
  2345  001B1C  5171               	movf	___awmod@divisor& (0+255),w,b
  2346  001B1E  0100               	movlb	0	; () banked
  2347  001B20  5D6F               	subwf	___awmod@dividend& (0+255),w,b
  2348  001B22  0100               	movlb	0	; () banked
  2349  001B24  5172               	movf	(___awmod@divisor+1)& (0+255),w,b
  2350  001B26  0100               	movlb	0	; () banked
  2351  001B28  5970               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  2352  001B2A  A0D8               	btfss	status,0,c
  2353  001B2C  D009               	goto	l1956
  2354                           
  2355                           ; BSR set to: 0
  2356  001B2E  0100               	movlb	0	; () banked
  2357  001B30  5171               	movf	___awmod@divisor& (0+255),w,b
  2358  001B32  0100               	movlb	0	; () banked
  2359  001B34  5F6F               	subwf	___awmod@dividend& (0+255),f,b
  2360  001B36  0100               	movlb	0	; () banked
  2361  001B38  5172               	movf	(___awmod@divisor+1)& (0+255),w,b
  2362  001B3A  0100               	movlb	0	; () banked
  2363  001B3C  5B70               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  2364  001B3E  D000               	goto	l1956
  2365  001B40                     l1956:
  2366                           
  2367                           ; BSR set to: 0
  2368  001B40  0100               	movlb	0	; () banked
  2369  001B42  90D8               	bcf	status,0,c
  2370  001B44  3372               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  2371  001B46  3371               	rrcf	___awmod@divisor& (0+255),f,b
  2372                           
  2373                           ; BSR set to: 0
  2374  001B48  0100               	movlb	0	; () banked
  2375  001B4A  2F73               	decfsz	___awmod@counter& (0+255),f,b
  2376  001B4C  D7E6               	goto	l1952
  2377                           
  2378                           ; BSR set to: 0
  2379  001B4E  D000               	goto	l1960
  2380  001B50                     l1960:
  2381                           
  2382                           ; BSR set to: 0
  2383  001B50  0100               	movlb	0	; () banked
  2384  001B52  5174               	movf	___awmod@sign& (0+255),w,b
  2385  001B54  0100               	movlb	0	; () banked
  2386  001B56  B4D8               	btfsc	status,2,c
  2387  001B58  D006               	goto	l1964
  2388                           
  2389                           ; BSR set to: 0
  2390  001B5A  0100               	movlb	0	; () banked
  2391  001B5C  6D6F               	negf	___awmod@dividend& (0+255),b
  2392  001B5E  1F70               	comf	(___awmod@dividend+1)& (0+255),f,b
  2393  001B60  B0D8               	btfsc	status,0,c
  2394  001B62  2B70               	incf	(___awmod@dividend+1)& (0+255),f,b
  2395  001B64  D000               	goto	l1964
  2396  001B66                     l1964:
  2397                           
  2398                           ; BSR set to: 0
  2399  001B66  C06F  F06F         	movff	___awmod@dividend,?___awmod
  2400  001B6A  C070  F070         	movff	___awmod@dividend+1,?___awmod+1
  2401  001B6E  0012               	return	
  2402                           
  2403                           ; BSR set to: 0
  2404                           
  2405                           ; BSR set to: 0
  2406  001B70  0012               	return		;funcret
  2407  001B72                     __end_of___awmod:
  2408                           	opt stack 0
  2409                           tblptru	equ	0xFF8
  2410                           tblptrh	equ	0xFF7
  2411                           tblptrl	equ	0xFF6
  2412                           tablat	equ	0xFF5
  2413                           intcon	equ	0xFF2
  2414                           postinc0	equ	0xFEE
  2415                           wreg	equ	0xFE8
  2416                           status	equ	0xFD8
  2417                           
  2418 ;; *************** function _TM1640_Writer_Dates *****************
  2419 ;; Defined at:
  2420 ;;		line 66 in file "_01_USER/TM1640.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;  Addr            1    wreg     unsigned char 
  2423 ;;  Date            1   21[BANK0 ] unsigned char 
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;  Addr            1   22[BANK0 ] unsigned char 
  2426 ;; Return value:  Size  Location     Type
  2427 ;;		None               void
  2428 ;; Registers used:
  2429 ;;		wreg, status,2, status,0, cstack
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2435 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2436 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2438 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2439 ;;Total ram usage:        2 bytes
  2440 ;; Hardware stack levels used:    1
  2441 ;; Hardware stack levels required when called:    6
  2442 ;; This function calls:
  2443 ;;		_TM1640_Start
  2444 ;;		_TM1640_Stop
  2445 ;;		_TM1640_Writer_Byte
  2446 ;; This function is called by:
  2447 ;;		_TM1640_Show_Decimal
  2448 ;;		_TM1640_Show_integer
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           
  2452                           	psect	text11
  2453  001E30                     __ptext11:
  2454                           	opt stack 0
  2455  001E30                     _TM1640_Writer_Dates:
  2456                           	opt stack 23
  2457                           
  2458                           ; BSR set to: 0
  2459                           ;incstack = 0
  2460                           ;TM1640_Writer_Dates@Addr stored from wreg
  2461  001E30  0100               	movlb	0	; () banked
  2462  001E32  6F76               	movwf	TM1640_Writer_Dates@Addr& (0+255),b
  2463                           
  2464                           ; BSR set to: 0
  2465                           ;TM1640.c: 68: if((Addr >= 0) && (Addr <= 3))
  2466  001E34  0E04               	movlw	4
  2467  001E36  0100               	movlb	0	; () banked
  2468  001E38  6176               	cpfslt	TM1640_Writer_Dates@Addr& (0+255),b
  2469  001E3A  0012               	return	
  2470                           
  2471                           ; BSR set to: 0
  2472                           ;TM1640.c: 69: {
  2473                           ;TM1640.c: 70: TM1640_Start();
  2474  001E3C  EC78  F00F         	call	_TM1640_Start	;wreg free
  2475                           
  2476                           ;TM1640.c: 71: TM1640_Writer_Byte(0xC0 + Addr);
  2477  001E40  0100               	movlb	0	; () banked
  2478  001E42  5176               	movf	TM1640_Writer_Dates@Addr& (0+255),w,b
  2479  001E44  0FC0               	addlw	192
  2480  001E46  ECA4  F00E         	call	_TM1640_Writer_Byte
  2481                           
  2482                           ;TM1640.c: 72: TM1640_Writer_Byte(Date);
  2483  001E4A  0100               	movlb	0	; () banked
  2484  001E4C  5175               	movf	TM1640_Writer_Dates@Date& (0+255),w,b
  2485  001E4E  ECA4  F00E         	call	_TM1640_Writer_Byte
  2486                           
  2487                           ;TM1640.c: 73: TM1640_Stop();
  2488  001E52  EC66  F00F         	call	_TM1640_Stop	;wreg free
  2489  001E56  0012               	return	
  2490  001E58  0012               	return		;funcret
  2491  001E5A                     __end_of_TM1640_Writer_Dates:
  2492                           	opt stack 0
  2493                           tblptru	equ	0xFF8
  2494                           tblptrh	equ	0xFF7
  2495                           tblptrl	equ	0xFF6
  2496                           tablat	equ	0xFF5
  2497                           intcon	equ	0xFF2
  2498                           postinc0	equ	0xFEE
  2499                           wreg	equ	0xFE8
  2500                           status	equ	0xFD8
  2501                           
  2502 ;; *************** function _Key_Init *****************
  2503 ;; Defined at:
  2504 ;;		line 38 in file "_01_USER/Key.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;		None
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;		None
  2509 ;; Return value:  Size  Location     Type
  2510 ;;		None               void
  2511 ;; Registers used:
  2512 ;;		wreg, status,2, status,0
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2522 ;;Total ram usage:        0 bytes
  2523 ;; Hardware stack levels used:    1
  2524 ;; Hardware stack levels required when called:    4
  2525 ;; This function calls:
  2526 ;;		Nothing
  2527 ;; This function is called by:
  2528 ;;		_main
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           	psect	text12
  2533  001FBA                     __ptext12:
  2534                           	opt stack 0
  2535  001FBA                     _Key_Init:
  2536                           	opt stack 26
  2537                           
  2538                           ;Key.c: 40: TRISE |= 0x1e;
  2539                           
  2540                           ;incstack = 0
  2541  001FBA  0E1E               	movlw	30
  2542  001FBC  1296               	iorwf	3990,f,c	;volatile
  2543                           
  2544                           ;Key.c: 41: TRISD |= 0xc0;
  2545  001FBE  0EC0               	movlw	192
  2546  001FC0  1295               	iorwf	3989,f,c	;volatile
  2547  001FC2  0012               	return		;funcret
  2548  001FC4                     __end_of_Key_Init:
  2549                           	opt stack 0
  2550                           tblptru	equ	0xFF8
  2551                           tblptrh	equ	0xFF7
  2552                           tblptrl	equ	0xFF6
  2553                           tablat	equ	0xFF5
  2554                           intcon	equ	0xFF2
  2555                           postinc0	equ	0xFEE
  2556                           wreg	equ	0xFE8
  2557                           status	equ	0xFD8
  2558                           
  2559 ;; *************** function _Init_TM1640 *****************
  2560 ;; Defined at:
  2561 ;;		line 119 in file "_01_USER/TM1640.c"
  2562 ;; Parameters:    Size  Location     Type
  2563 ;;		None
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;		None
  2566 ;; Return value:  Size  Location     Type
  2567 ;;		None               void
  2568 ;; Registers used:
  2569 ;;		wreg, status,2, status,0, cstack
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2579 ;;Total ram usage:        0 bytes
  2580 ;; Hardware stack levels used:    1
  2581 ;; Hardware stack levels required when called:    6
  2582 ;; This function calls:
  2583 ;;		_TM1640_Start
  2584 ;;		_TM1640_Stop
  2585 ;;		_TM1640_Writer_Byte
  2586 ;; This function is called by:
  2587 ;;		_main
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           	psect	text13
  2592  001E80                     __ptext13:
  2593                           	opt stack 0
  2594  001E80                     _Init_TM1640:
  2595                           	opt stack 24
  2596                           
  2597                           ;TM1640.c: 121: TRISCbits.TRISC3 = 0;
  2598                           
  2599                           ;incstack = 0
  2600  001E80  9694               	bcf	3988,3,c	;volatile
  2601                           
  2602                           ;TM1640.c: 122: TRISCbits.TRISC4 = 0;
  2603  001E82  9894               	bcf	3988,4,c	;volatile
  2604                           
  2605                           ;TM1640.c: 123: TM1640_Stop();
  2606  001E84  EC66  F00F         	call	_TM1640_Stop	;wreg free
  2607                           
  2608                           ;TM1640.c: 125: TM1640_Start();
  2609  001E88  EC78  F00F         	call	_TM1640_Start	;wreg free
  2610                           
  2611                           ;TM1640.c: 126: TM1640_Writer_Byte(0x44);
  2612  001E8C  0E44               	movlw	68
  2613  001E8E  ECA4  F00E         	call	_TM1640_Writer_Byte
  2614                           
  2615                           ;TM1640.c: 127: TM1640_Stop();
  2616  001E92  EC66  F00F         	call	_TM1640_Stop	;wreg free
  2617                           
  2618                           ;TM1640.c: 129: TM1640_Start();
  2619  001E96  EC78  F00F         	call	_TM1640_Start	;wreg free
  2620                           
  2621                           ;TM1640.c: 130: TM1640_Writer_Byte(0x8F);
  2622  001E9A  0E8F               	movlw	143
  2623  001E9C  ECA4  F00E         	call	_TM1640_Writer_Byte
  2624                           
  2625                           ;TM1640.c: 131: TM1640_Stop();
  2626  001EA0  EC66  F00F         	call	_TM1640_Stop	;wreg free
  2627  001EA4  0012               	return		;funcret
  2628  001EA6                     __end_of_Init_TM1640:
  2629                           	opt stack 0
  2630                           tblptru	equ	0xFF8
  2631                           tblptrh	equ	0xFF7
  2632                           tblptrl	equ	0xFF6
  2633                           tablat	equ	0xFF5
  2634                           intcon	equ	0xFF2
  2635                           postinc0	equ	0xFEE
  2636                           wreg	equ	0xFE8
  2637                           status	equ	0xFD8
  2638                           
  2639 ;; *************** function _TM1640_Writer_Byte *****************
  2640 ;; Defined at:
  2641 ;;		line 77 in file "_01_USER/TM1640.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;  Date            1    wreg     const unsigned char 
  2644 ;; Auto vars:     Size  Location     Type
  2645 ;;  Date            1    2[BANK0 ] const unsigned char 
  2646 ;;  mask            1    3[BANK0 ] unsigned char 
  2647 ;; Return value:  Size  Location     Type
  2648 ;;		None               void
  2649 ;; Registers used:
  2650 ;;		wreg, status,2, status,0, cstack
  2651 ;; Tracked objects:
  2652 ;;		On entry : 0/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2657 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2659 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2660 ;;Total ram usage:        2 bytes
  2661 ;; Hardware stack levels used:    1
  2662 ;; Hardware stack levels required when called:    5
  2663 ;; This function calls:
  2664 ;;		_TM1640_Delay
  2665 ;; This function is called by:
  2666 ;;		_TM1640_Writer_Dates
  2667 ;;		_Init_TM1640
  2668 ;;		_Open_Display
  2669 ;;		_Disable_Display
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           	psect	text14
  2674  001D48                     __ptext14:
  2675                           	opt stack 0
  2676  001D48                     _TM1640_Writer_Byte:
  2677                           	opt stack 23
  2678                           
  2679                           ;incstack = 0
  2680                           ;TM1640_Writer_Byte@Date stored from wreg
  2681  001D48  0100               	movlb	0	; () banked
  2682  001D4A  6F62               	movwf	TM1640_Writer_Byte@Date& (0+255),b
  2683                           
  2684                           ; BSR set to: 0
  2685                           ;TM1640.c: 79: unsigned char mask;
  2686                           ;TM1640.c: 81: for(mask=0x01; mask; mask<<=1)
  2687  001D4C  0E01               	movlw	1
  2688  001D4E  0100               	movlb	0	; () banked
  2689  001D50  6F63               	movwf	TM1640_Writer_Byte@mask& (0+255),b
  2690  001D52  D01A               	goto	l1702
  2691  001D54                     l238:
  2692                           
  2693                           ; BSR set to: 0
  2694                           ;TM1640.c: 82: {
  2695                           ;TM1640.c: 83: RC3 = 0;
  2696  001D54  9682               	bcf	3970,3,c	;volatile
  2697                           
  2698                           ; BSR set to: 0
  2699                           ;TM1640.c: 84: TM1640_Delay(1);
  2700  001D56  0E01               	movlw	1
  2701  001D58  EC8A  F00F         	call	_TM1640_Delay
  2702                           
  2703                           ;TM1640.c: 85: if(mask & Date)
  2704  001D5C  0100               	movlb	0	; () banked
  2705  001D5E  5163               	movf	TM1640_Writer_Byte@mask& (0+255),w,b
  2706  001D60  0100               	movlb	0	; () banked
  2707  001D62  1562               	andwf	TM1640_Writer_Byte@Date& (0+255),w,b
  2708  001D64  0900               	iorlw	0
  2709  001D66  B4D8               	btfsc	status,2,c
  2710  001D68  D002               	goto	l239
  2711                           
  2712                           ; BSR set to: 0
  2713                           ;TM1640.c: 86: RC4 = 1;
  2714  001D6A  8882               	bsf	3970,4,c	;volatile
  2715  001D6C  D002               	goto	l1696
  2716  001D6E                     l239:
  2717                           
  2718                           ; BSR set to: 0
  2719                           ;TM1640.c: 87: else
  2720                           ;TM1640.c: 88: RC4 = 0;
  2721  001D6E  9882               	bcf	3970,4,c	;volatile
  2722  001D70  D000               	goto	l1696
  2723  001D72                     l1696:
  2724                           
  2725                           ; BSR set to: 0
  2726                           ;TM1640.c: 89: TM1640_Delay(1);
  2727  001D72  0E01               	movlw	1
  2728  001D74  EC8A  F00F         	call	_TM1640_Delay
  2729                           
  2730                           ;TM1640.c: 90: RC3 = 1;
  2731  001D78  8682               	bsf	3970,3,c	;volatile
  2732                           
  2733                           ;TM1640.c: 91: TM1640_Delay(1);
  2734  001D7A  0E01               	movlw	1
  2735  001D7C  EC8A  F00F         	call	_TM1640_Delay
  2736  001D80  0100               	movlb	0	; () banked
  2737  001D82  90D8               	bcf	status,0,c
  2738  001D84  3763               	rlcf	TM1640_Writer_Byte@mask& (0+255),f,b
  2739  001D86  D000               	goto	l1702
  2740  001D88                     l1702:
  2741                           
  2742                           ; BSR set to: 0
  2743  001D88  0100               	movlb	0	; () banked
  2744  001D8A  5163               	movf	TM1640_Writer_Byte@mask& (0+255),w,b
  2745  001D8C  0100               	movlb	0	; () banked
  2746  001D8E  A4D8               	btfss	status,2,c
  2747  001D90  D7E1               	goto	l238
  2748                           
  2749                           ; BSR set to: 0
  2750                           
  2751                           ; BSR set to: 0
  2752  001D92  0012               	return		;funcret
  2753  001D94                     __end_of_TM1640_Writer_Byte:
  2754                           	opt stack 0
  2755                           tblptru	equ	0xFF8
  2756                           tblptrh	equ	0xFF7
  2757                           tblptrl	equ	0xFF6
  2758                           tablat	equ	0xFF5
  2759                           intcon	equ	0xFF2
  2760                           postinc0	equ	0xFEE
  2761                           wreg	equ	0xFE8
  2762                           status	equ	0xFD8
  2763                           
  2764 ;; *************** function _TM1640_Stop *****************
  2765 ;; Defined at:
  2766 ;;		line 32 in file "_01_USER/TM1640.c"
  2767 ;; Parameters:    Size  Location     Type
  2768 ;;		None
  2769 ;; Auto vars:     Size  Location     Type
  2770 ;;		None
  2771 ;; Return value:  Size  Location     Type
  2772 ;;		None               void
  2773 ;; Registers used:
  2774 ;;		wreg, status,2, status,0, cstack
  2775 ;; Tracked objects:
  2776 ;;		On entry : 0/0
  2777 ;;		On exit  : 0/0
  2778 ;;		Unchanged: 0/0
  2779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2784 ;;Total ram usage:        0 bytes
  2785 ;; Hardware stack levels used:    1
  2786 ;; Hardware stack levels required when called:    5
  2787 ;; This function calls:
  2788 ;;		_TM1640_Delay
  2789 ;; This function is called by:
  2790 ;;		_TM1640_Writer_Dates
  2791 ;;		_Init_TM1640
  2792 ;;		_Open_Display
  2793 ;;		_Disable_Display
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797                           	psect	text15
  2798  001ECC                     __ptext15:
  2799                           	opt stack 0
  2800  001ECC                     _TM1640_Stop:
  2801                           	opt stack 23
  2802                           
  2803                           ;TM1640.c: 34: RC3 = 0;
  2804                           
  2805                           ; BSR set to: 0
  2806                           ;incstack = 0
  2807  001ECC  9682               	bcf	3970,3,c	;volatile
  2808                           
  2809                           ;TM1640.c: 35: TM1640_Delay(1);
  2810  001ECE  0E01               	movlw	1
  2811  001ED0  EC8A  F00F         	call	_TM1640_Delay
  2812                           
  2813                           ;TM1640.c: 36: RC4 = 0;
  2814  001ED4  9882               	bcf	3970,4,c	;volatile
  2815                           
  2816                           ;TM1640.c: 37: TM1640_Delay(1);
  2817  001ED6  0E01               	movlw	1
  2818  001ED8  EC8A  F00F         	call	_TM1640_Delay
  2819                           
  2820                           ;TM1640.c: 38: RC3 = 1;
  2821  001EDC  8682               	bsf	3970,3,c	;volatile
  2822                           
  2823                           ;TM1640.c: 39: TM1640_Delay(1);
  2824  001EDE  0E01               	movlw	1
  2825  001EE0  EC8A  F00F         	call	_TM1640_Delay
  2826                           
  2827                           ;TM1640.c: 40: RC4 = 1;
  2828  001EE4  8882               	bsf	3970,4,c	;volatile
  2829                           
  2830                           ;TM1640.c: 41: TM1640_Delay(1);
  2831  001EE6  0E01               	movlw	1
  2832  001EE8  EC8A  F00F         	call	_TM1640_Delay
  2833                           
  2834                           ;TM1640.c: 42: RC3 = 0;
  2835  001EEC  9682               	bcf	3970,3,c	;volatile
  2836  001EEE  0012               	return		;funcret
  2837  001EF0                     __end_of_TM1640_Stop:
  2838                           	opt stack 0
  2839                           tblptru	equ	0xFF8
  2840                           tblptrh	equ	0xFF7
  2841                           tblptrl	equ	0xFF6
  2842                           tablat	equ	0xFF5
  2843                           intcon	equ	0xFF2
  2844                           postinc0	equ	0xFEE
  2845                           wreg	equ	0xFE8
  2846                           status	equ	0xFD8
  2847                           
  2848 ;; *************** function _TM1640_Start *****************
  2849 ;; Defined at:
  2850 ;;		line 19 in file "_01_USER/TM1640.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;		None
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;		None
  2855 ;; Return value:  Size  Location     Type
  2856 ;;		None               void
  2857 ;; Registers used:
  2858 ;;		wreg, status,2, status,0, cstack
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2868 ;;Total ram usage:        0 bytes
  2869 ;; Hardware stack levels used:    1
  2870 ;; Hardware stack levels required when called:    5
  2871 ;; This function calls:
  2872 ;;		_TM1640_Delay
  2873 ;; This function is called by:
  2874 ;;		_TM1640_Writer_Dates
  2875 ;;		_Init_TM1640
  2876 ;;		_Open_Display
  2877 ;;		_Disable_Display
  2878 ;; This function uses a non-reentrant model
  2879 ;;
  2880                           
  2881                           	psect	text16
  2882  001EF0                     __ptext16:
  2883                           	opt stack 0
  2884  001EF0                     _TM1640_Start:
  2885                           	opt stack 23
  2886                           
  2887                           ;TM1640.c: 21: RC3 = 0;
  2888                           
  2889                           ;incstack = 0
  2890  001EF0  9682               	bcf	3970,3,c	;volatile
  2891                           
  2892                           ;TM1640.c: 22: TM1640_Delay(1);
  2893  001EF2  0E01               	movlw	1
  2894  001EF4  EC8A  F00F         	call	_TM1640_Delay
  2895                           
  2896                           ;TM1640.c: 23: RC4 = 1;
  2897  001EF8  8882               	bsf	3970,4,c	;volatile
  2898                           
  2899                           ;TM1640.c: 24: TM1640_Delay(1);
  2900  001EFA  0E01               	movlw	1
  2901  001EFC  EC8A  F00F         	call	_TM1640_Delay
  2902                           
  2903                           ;TM1640.c: 25: RC3 = 1;
  2904  001F00  8682               	bsf	3970,3,c	;volatile
  2905                           
  2906                           ;TM1640.c: 26: TM1640_Delay(1);
  2907  001F02  0E01               	movlw	1
  2908  001F04  EC8A  F00F         	call	_TM1640_Delay
  2909                           
  2910                           ;TM1640.c: 27: RC4 = 0;
  2911  001F08  9882               	bcf	3970,4,c	;volatile
  2912                           
  2913                           ;TM1640.c: 28: TM1640_Delay(1);
  2914  001F0A  0E01               	movlw	1
  2915  001F0C  EC8A  F00F         	call	_TM1640_Delay
  2916                           
  2917                           ;TM1640.c: 29: RC3 = 0;
  2918  001F10  9682               	bcf	3970,3,c	;volatile
  2919  001F12  0012               	return		;funcret
  2920  001F14                     __end_of_TM1640_Start:
  2921                           	opt stack 0
  2922                           tblptru	equ	0xFF8
  2923                           tblptrh	equ	0xFF7
  2924                           tblptrl	equ	0xFF6
  2925                           tablat	equ	0xFF5
  2926                           intcon	equ	0xFF2
  2927                           postinc0	equ	0xFEE
  2928                           wreg	equ	0xFE8
  2929                           status	equ	0xFD8
  2930                           
  2931 ;; *************** function _TM1640_Delay *****************
  2932 ;; Defined at:
  2933 ;;		line 109 in file "_01_USER/TM1640.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;  Time            1    wreg     unsigned char 
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;  Time            1    0[BANK0 ] unsigned char 
  2938 ;;  i               1    1[BANK0 ] unsigned char 
  2939 ;; Return value:  Size  Location     Type
  2940 ;;		None               void
  2941 ;; Registers used:
  2942 ;;		wreg, status,2, status,0
  2943 ;; Tracked objects:
  2944 ;;		On entry : 0/0
  2945 ;;		On exit  : 0/0
  2946 ;;		Unchanged: 0/0
  2947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2949 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2951 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2952 ;;Total ram usage:        2 bytes
  2953 ;; Hardware stack levels used:    1
  2954 ;; Hardware stack levels required when called:    4
  2955 ;; This function calls:
  2956 ;;		Nothing
  2957 ;; This function is called by:
  2958 ;;		_TM1640_Start
  2959 ;;		_TM1640_Stop
  2960 ;;		_TM1640_Writer_Byte
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964                           	psect	text17
  2965  001F14                     __ptext17:
  2966                           	opt stack 0
  2967  001F14                     _TM1640_Delay:
  2968                           	opt stack 23
  2969                           
  2970                           ;incstack = 0
  2971                           ;TM1640_Delay@Time stored from wreg
  2972  001F14  0100               	movlb	0	; () banked
  2973  001F16  6F60               	movwf	TM1640_Delay@Time& (0+255),b
  2974  001F18                     
  2975                           ; BSR set to: 0
  2976                           ;TM1640.c: 114: {
  2977                           ;TM1640.c: 115: for(i=0; i<10; ++i);
  2978  001F18  0E00               	movlw	0
  2979  001F1A  0100               	movlb	0	; () banked
  2980  001F1C  6F61               	movwf	TM1640_Delay@i& (0+255),b
  2981  001F1E  D003               	goto	l1662
  2982                           
  2983                           ; BSR set to: 0
  2984                           
  2985                           ; BSR set to: 0
  2986  001F20  D006               	goto	l253
  2987  001F22                     l1660:
  2988                           
  2989                           ; BSR set to: 0
  2990  001F22  0100               	movlb	0	; () banked
  2991  001F24  2B61               	incf	TM1640_Delay@i& (0+255),f,b
  2992  001F26                     l1662:
  2993                           
  2994                           ; BSR set to: 0
  2995  001F26  0E09               	movlw	9
  2996  001F28  0100               	movlb	0	; () banked
  2997  001F2A  6561               	cpfsgt	TM1640_Delay@i& (0+255),b
  2998  001F2C  D7FA               	goto	l1660
  2999  001F2E                     l253:
  3000                           
  3001                           ; BSR set to: 0
  3002                           ;TM1640.c: 116: }while(--Time);
  3003  001F2E  0100               	movlb	0	; () banked
  3004  001F30  2F60               	decfsz	TM1640_Delay@Time& (0+255),f,b
  3005  001F32  D7F2               	goto	l1654
  3006  001F34  0012               	return	
  3007                           
  3008                           ; BSR set to: 0
  3009                           
  3010                           ; BSR set to: 0
  3011  001F36  0012               	return		;funcret
  3012  001F38                     __end_of_TM1640_Delay:
  3013                           	opt stack 0
  3014                           tblptru	equ	0xFF8
  3015                           tblptrh	equ	0xFF7
  3016                           tblptrl	equ	0xFF6
  3017                           tablat	equ	0xFF5
  3018                           intcon	equ	0xFF2
  3019                           postinc0	equ	0xFEE
  3020                           wreg	equ	0xFE8
  3021                           status	equ	0xFD8
  3022                           
  3023 ;; *************** function _GPIO_Config *****************
  3024 ;; Defined at:
  3025 ;;		line 38 in file "_01_USER/GPIO.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;		None
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;		None
  3030 ;; Return value:  Size  Location     Type
  3031 ;;		None               void
  3032 ;; Registers used:
  3033 ;;		wreg, status,2, status,0
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3043 ;;Total ram usage:        0 bytes
  3044 ;; Hardware stack levels used:    1
  3045 ;; Hardware stack levels required when called:    4
  3046 ;; This function calls:
  3047 ;;		Nothing
  3048 ;; This function is called by:
  3049 ;;		_main
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053                           	psect	text18
  3054  001FAE                     __ptext18:
  3055                           	opt stack 0
  3056  001FAE                     _GPIO_Config:
  3057                           	opt stack 26
  3058                           
  3059                           ;GPIO.c: 41: TRISE &= 0x1f;
  3060                           
  3061                           ; BSR set to: 0
  3062                           ;incstack = 0
  3063  001FAE  0E1F               	movlw	31
  3064  001FB0  1696               	andwf	3990,f,c	;volatile
  3065                           
  3066                           ;GPIO.c: 43: RE5 = 0;
  3067  001FB2  9A84               	bcf	3972,5,c	;volatile
  3068                           
  3069                           ;GPIO.c: 44: RE6 = 0;
  3070  001FB4  9C84               	bcf	3972,6,c	;volatile
  3071                           
  3072                           ;GPIO.c: 45: RE7 = 0;
  3073  001FB6  9E84               	bcf	3972,7,c	;volatile
  3074  001FB8  0012               	return		;funcret
  3075  001FBA                     __end_of_GPIO_Config:
  3076                           	opt stack 0
  3077                           tblptru	equ	0xFF8
  3078                           tblptrh	equ	0xFF7
  3079                           tblptrl	equ	0xFF6
  3080                           tablat	equ	0xFF5
  3081                           intcon	equ	0xFF2
  3082                           postinc0	equ	0xFEE
  3083                           wreg	equ	0xFE8
  3084                           status	equ	0xFD8
  3085                           
  3086 ;; *************** function _ADC6_Init *****************
  3087 ;; Defined at:
  3088 ;;		line 37 in file "_01_USER/My_ADC.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;		None
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;		None
  3093 ;; Return value:  Size  Location     Type
  3094 ;;		None               void
  3095 ;; Registers used:
  3096 ;;		wreg, status,2, status,0, cstack
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3106 ;;Total ram usage:        0 bytes
  3107 ;; Hardware stack levels used:    1
  3108 ;; Hardware stack levels required when called:    5
  3109 ;; This function calls:
  3110 ;;		_OpenADC
  3111 ;; This function is called by:
  3112 ;;		_main
  3113 ;; This function uses a non-reentrant model
  3114 ;;
  3115                           
  3116                           	psect	text19
  3117  001F7A                     __ptext19:
  3118                           	opt stack 0
  3119  001F7A                     _ADC6_Init:
  3120                           	opt stack 25
  3121                           
  3122                           ;My_ADC.c: 40: OpenADC(0b11111111 &
  3123                           ;My_ADC.c: 41: 0b11110011 &
  3124                           ;My_ADC.c: 42: 0b10001111
  3125                           ;My_ADC.c: 43: ,
  3126                           ;My_ADC.c: 44: 0b10011011
  3127                           ;My_ADC.c: 45: ,
  3128                           ;My_ADC.c: 46: 0b00111111 &
  3129                           ;My_ADC.c: 47: 0b11111111 &
  3130                           ;My_ADC.c: 48: 0b11110111 &
  3131                           ;My_ADC.c: 49: 0b11111000
  3132                           ;My_ADC.c: 50: );
  3133                           
  3134                           ;incstack = 0
  3135  001F7A  0E9B               	movlw	155
  3136  001F7C  0100               	movlb	0	; () banked
  3137  001F7E  6F60               	movwf	OpenADC@config2& (0+255),b
  3138  001F80  0E30               	movlw	48
  3139  001F82  0100               	movlb	0	; () banked
  3140  001F84  6F61               	movwf	OpenADC@config3& (0+255),b
  3141  001F86  0E83               	movlw	131
  3142  001F88  EC24  F00E         	call	_OpenADC
  3143                           
  3144                           ;My_ADC.c: 52: (PIE1bits.ADIE=0);
  3145  001F8C  9C9D               	bcf	3997,6,c	;volatile
  3146  001F8E  0012               	return		;funcret
  3147  001F90                     __end_of_ADC6_Init:
  3148                           	opt stack 0
  3149                           tblptru	equ	0xFF8
  3150                           tblptrh	equ	0xFF7
  3151                           tblptrl	equ	0xFF6
  3152                           tablat	equ	0xFF5
  3153                           intcon	equ	0xFF2
  3154                           postinc0	equ	0xFEE
  3155                           wreg	equ	0xFE8
  3156                           status	equ	0xFD8
  3157                           
  3158 ;; *************** function _OpenADC *****************
  3159 ;; Defined at:
  3160 ;;		line 305 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  3161 ;; Parameters:    Size  Location     Type
  3162 ;;  config          1    wreg     unsigned char 
  3163 ;;  config2         1    0[BANK0 ] unsigned char 
  3164 ;;  config3         1    1[BANK0 ] unsigned char 
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;  config          1    4[BANK0 ] unsigned char 
  3167 ;; Return value:  Size  Location     Type
  3168 ;;		None               void
  3169 ;; Registers used:
  3170 ;;		wreg, status,2, status,0
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3176 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3177 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3178 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3179 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3180 ;;Total ram usage:        5 bytes
  3181 ;; Hardware stack levels used:    1
  3182 ;; Hardware stack levels required when called:    4
  3183 ;; This function calls:
  3184 ;;		Nothing
  3185 ;; This function is called by:
  3186 ;;		_ADC6_Init
  3187 ;; This function uses a non-reentrant model
  3188 ;;
  3189                           
  3190                           	psect	text20
  3191  001C48                     __ptext20:
  3192                           	opt stack 0
  3193  001C48                     _OpenADC:
  3194                           	opt stack 25
  3195                           
  3196                           ;incstack = 0
  3197                           ;OpenADC@config stored from wreg
  3198  001C48  0100               	movlb	0	; () banked
  3199  001C4A  6F64               	movwf	OpenADC@config& (0+255),b
  3200                           
  3201                           ; BSR set to: 0
  3202  001C4C  0E00               	movlw	0
  3203  001C4E  6EC2               	movwf	4034,c	;volatile
  3204  001C50  0E00               	movlw	0
  3205  001C52  6EC1               	movwf	4033,c	;volatile
  3206  001C54  0E00               	movlw	0
  3207  001C56  6EC0               	movwf	4032,c	;volatile
  3208                           
  3209                           ; BSR set to: 0
  3210  001C58  0100               	movlb	0	; () banked
  3211  001C5A  5160               	movf	OpenADC@config2& (0+255),w,b
  3212  001C5C  0B7C               	andlw	124
  3213  001C5E  6EC2               	movwf	4034,c	;volatile
  3214                           
  3215                           ; BSR set to: 0
  3216  001C60  C061  FFC1         	movff	OpenADC@config3,4033	;volatile
  3217                           
  3218                           ; BSR set to: 0
  3219  001C64  C064  F062         	movff	OpenADC@config,??_OpenADC
  3220  001C68  0100               	movlb	0	; () banked
  3221  001C6A  90D8               	bcf	status,0,c
  3222  001C6C  3762               	rlcf	??_OpenADC& (0+255),f,b
  3223  001C6E  0100               	movlb	0	; () banked
  3224  001C70  90D8               	bcf	status,0,c
  3225  001C72  3762               	rlcf	??_OpenADC& (0+255),f,b
  3226  001C74  0E38               	movlw	56
  3227  001C76  0100               	movlb	0	; () banked
  3228  001C78  1762               	andwf	??_OpenADC& (0+255),f,b
  3229  001C7A  C064  F063         	movff	OpenADC@config,??_OpenADC+1
  3230  001C7E  0100               	movlb	0	; () banked
  3231  001C80  3B63               	swapf	(??_OpenADC+1)& (0+255),f,b
  3232  001C82  0E0F               	movlw	15
  3233  001C84  1763               	andwf	(??_OpenADC+1)& (0+255),f,b
  3234  001C86  0E07               	movlw	7
  3235  001C88  0100               	movlb	0	; () banked
  3236  001C8A  1763               	andwf	(??_OpenADC+1)& (0+255),f,b
  3237  001C8C  0100               	movlb	0	; () banked
  3238  001C8E  5164               	movf	OpenADC@config& (0+255),w,b
  3239  001C90  0B80               	andlw	128
  3240  001C92  0100               	movlb	0	; () banked
  3241  001C94  1163               	iorwf	(??_OpenADC+1)& (0+255),w,b
  3242  001C96  0100               	movlb	0	; () banked
  3243  001C98  1162               	iorwf	??_OpenADC& (0+255),w,b
  3244  001C9A  6EC0               	movwf	4032,c	;volatile
  3245                           
  3246                           ; BSR set to: 0
  3247  001C9C  0100               	movlb	0	; () banked
  3248  001C9E  AF60               	btfss	OpenADC@config2& (0+255),7,b
  3249  001CA0  D003               	goto	l306
  3250                           
  3251                           ; BSR set to: 0
  3252  001CA2  9C9E               	bcf	3998,6,c	;volatile
  3253  001CA4  8C9D               	bsf	3997,6,c	;volatile
  3254  001CA6  8CF2               	bsf	intcon,6,c	;volatile
  3255  001CA8                     l306:
  3256                           
  3257                           ; BSR set to: 0
  3258  001CA8  80C2               	bsf	4034,0,c	;volatile
  3259                           
  3260                           ; BSR set to: 0
  3261  001CAA  0012               	return		;funcret
  3262  001CAC                     __end_of_OpenADC:
  3263                           	opt stack 0
  3264                           tblptru	equ	0xFF8
  3265                           tblptrh	equ	0xFF7
  3266                           tblptrl	equ	0xFF6
  3267                           tablat	equ	0xFF5
  3268                           intcon	equ	0xFF2
  3269                           postinc0	equ	0xFEE
  3270                           wreg	equ	0xFE8
  3271                           status	equ	0xFD8
  3272                           
  3273 ;; *************** function _Sys_Cyc *****************
  3274 ;; Defined at:
  3275 ;;		line 97 in file "_01_USER/My_Timer.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;		None
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;		None
  3280 ;; Return value:  Size  Location     Type
  3281 ;;		None               void
  3282 ;; Registers used:
  3283 ;;		wreg, status,2, status,0, cstack
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3291 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3292 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3293 ;;Total ram usage:       14 bytes
  3294 ;; Hardware stack levels used:    1
  3295 ;; Hardware stack levels required when called:    3
  3296 ;; This function calls:
  3297 ;;		_Get_ADC6
  3298 ;;		_Key_FSM_Scan
  3299 ;;		___llmod
  3300 ;;		i2_SetTimer0
  3301 ;; This function is called by:
  3302 ;;		Interrupt level 2
  3303 ;; This function uses a non-reentrant model
  3304 ;;
  3305                           
  3306                           	psect	intcode
  3307  000008                     __pintcode:
  3308                           	opt stack 0
  3309  000008                     _Sys_Cyc:
  3310                           	opt stack 23
  3311                           
  3312                           ; BSR set to: 0
  3313                           ;incstack = 0
  3314  000008  CFFA F02A          	movff	pclath,??_Sys_Cyc
  3315  00000C  CFFB F02B          	movff	pclatu,??_Sys_Cyc+1
  3316  000010  CFE9 F02C          	movff	fsr0l,??_Sys_Cyc+2
  3317  000014  CFEA F02D          	movff	fsr0h,??_Sys_Cyc+3
  3318  000018  CFE1 F02E          	movff	fsr1l,??_Sys_Cyc+4
  3319  00001C  CFE2 F02F          	movff	fsr1h,??_Sys_Cyc+5
  3320  000020  CFD9 F030          	movff	fsr2l,??_Sys_Cyc+6
  3321  000024  CFDA F031          	movff	fsr2h,??_Sys_Cyc+7
  3322  000028  CFF3 F032          	movff	prodl,??_Sys_Cyc+8
  3323  00002C  CFF4 F033          	movff	prodh,??_Sys_Cyc+9
  3324  000030  CFF6 F034          	movff	tblptrl,??_Sys_Cyc+10
  3325  000034  CFF7 F035          	movff	tblptrh,??_Sys_Cyc+11
  3326  000038  CFF8 F036          	movff	tblptru,??_Sys_Cyc+12
  3327  00003C  CFF5 F037          	movff	tablat,??_Sys_Cyc+13
  3328                           
  3329                           ;My_Timer.c: 99: static unsigned char t = 0;
  3330                           ;My_Timer.c: 101: if(TMR0IF && TMR0IE)
  3331  000040  B4F2               	btfsc	intcon,2,c	;volatile
  3332  000042  AAF2               	btfss	intcon,5,c	;volatile
  3333  000044  D050               	goto	i2l191
  3334                           
  3335                           ;My_Timer.c: 102: {
  3336                           ;My_Timer.c: 103: if( Timer_Cyc%50 == 0 )
  3337  000046  C038  F001         	movff	_Timer_Cyc,___llmod@dividend
  3338  00004A  C039  F002         	movff	_Timer_Cyc+1,___llmod@dividend+1
  3339  00004E  C03A  F003         	movff	_Timer_Cyc+2,___llmod@dividend+2
  3340  000052  C03B  F004         	movff	_Timer_Cyc+3,___llmod@dividend+3
  3341  000056  0E32               	movlw	50
  3342  000058  6E05               	movwf	___llmod@divisor,c
  3343  00005A  0E00               	movlw	0
  3344  00005C  6E06               	movwf	___llmod@divisor+1,c
  3345  00005E  0E00               	movlw	0
  3346  000060  6E07               	movwf	___llmod@divisor+2,c
  3347  000062  0E00               	movlw	0
  3348  000064  6E08               	movwf	___llmod@divisor+3,c
  3349  000066  ECB9  F00D         	call	___llmod	;wreg free
  3350  00006A  5001               	movf	?___llmod,w,c
  3351  00006C  1002               	iorwf	?___llmod+1,w,c
  3352  00006E  1003               	iorwf	?___llmod+2,w,c
  3353  000070  1004               	iorwf	?___llmod+3,w,c
  3354  000072  A4D8               	btfss	status,2,c
  3355  000074  D00F               	goto	i2l2226
  3356                           
  3357                           ;My_Timer.c: 104: {
  3358                           ;My_Timer.c: 105: t = ( t + 1 ) % 2;
  3359  000076  283C               	incf	Sys_Cyc@t,w,c
  3360  000078  0B01               	andlw	1
  3361  00007A  6E3C               	movwf	Sys_Cyc@t,c
  3362                           
  3363                           ;My_Timer.c: 106: if(t) { PORTEbits.RE7=0; if( LED2_switch ) PORTEbits.RE6=0; }
  3364  00007C  503C               	movf	Sys_Cyc@t,w,c
  3365  00007E  B4D8               	btfsc	status,2,c
  3366  000080  D006               	goto	i2l188
  3367  000082  9E84               	bcf	3972,7,c	;volatile
  3368  000084  503D               	movf	_LED2_switch,w,c
  3369  000086  B4D8               	btfsc	status,2,c
  3370  000088  D005               	goto	i2l2226
  3371  00008A  9C84               	bcf	3972,6,c	;volatile
  3372  00008C  D003               	goto	i2l2226
  3373  00008E                     i2l188:
  3374                           
  3375                           ;My_Timer.c: 107: else { PORTEbits.RE7=1; PORTEbits.RE6=1; }
  3376  00008E  8E84               	bsf	3972,7,c	;volatile
  3377  000090  8C84               	bsf	3972,6,c	;volatile
  3378  000092  D000               	goto	i2l2226
  3379  000094                     i2l2226:
  3380                           
  3381                           ;My_Timer.c: 108: }
  3382                           ;My_Timer.c: 109: Get_ADC6();
  3383  000094  ECF1  F00D         	call	_Get_ADC6	;wreg free
  3384                           
  3385                           ;My_Timer.c: 111: Key_FSM_Scan();
  3386  000098  EC84  F00B         	call	_Key_FSM_Scan	;wreg free
  3387                           
  3388                           ;My_Timer.c: 113: SetTimer0(78);
  3389  00009C  0E00               	movlw	0
  3390  00009E  6E02               	movwf	i2SetTimer0@_tmr+1,c
  3391  0000A0  0E4E               	movlw	78
  3392  0000A2  6E01               	movwf	i2SetTimer0@_tmr,c
  3393  0000A4  ECE9  F00E         	call	i2_SetTimer0	;wreg free
  3394                           
  3395                           ;My_Timer.c: 114: Timer_Cyc = (Timer_Cyc+1) % 1000000000;
  3396  0000A8  0E01               	movlw	1
  3397  0000AA  2438               	addwf	_Timer_Cyc,w,c
  3398  0000AC  6E01               	movwf	___llmod@dividend,c
  3399  0000AE  0E00               	movlw	0
  3400  0000B0  2039               	addwfc	_Timer_Cyc+1,w,c
  3401  0000B2  6E02               	movwf	___llmod@dividend+1,c
  3402  0000B4  0E00               	movlw	0
  3403  0000B6  203A               	addwfc	_Timer_Cyc+2,w,c
  3404  0000B8  6E03               	movwf	___llmod@dividend+2,c
  3405  0000BA  0E00               	movlw	0
  3406  0000BC  203B               	addwfc	_Timer_Cyc+3,w,c
  3407  0000BE  6E04               	movwf	___llmod@dividend+3,c
  3408  0000C0  0E00               	movlw	0
  3409  0000C2  6E05               	movwf	___llmod@divisor,c
  3410  0000C4  0ECA               	movlw	202
  3411  0000C6  6E06               	movwf	___llmod@divisor+1,c
  3412  0000C8  0E9A               	movlw	154
  3413  0000CA  6E07               	movwf	___llmod@divisor+2,c
  3414  0000CC  0E3B               	movlw	59
  3415  0000CE  6E08               	movwf	___llmod@divisor+3,c
  3416  0000D0  ECB9  F00D         	call	___llmod	;wreg free
  3417  0000D4  C001  F038         	movff	?___llmod,_Timer_Cyc
  3418  0000D8  C002  F039         	movff	?___llmod+1,_Timer_Cyc+1
  3419  0000DC  C003  F03A         	movff	?___llmod+2,_Timer_Cyc+2
  3420  0000E0  C004  F03B         	movff	?___llmod+3,_Timer_Cyc+3
  3421  0000E4  D000               	goto	i2l191
  3422  0000E6                     i2l191:
  3423  0000E6  C037  FFF5         	movff	??_Sys_Cyc+13,tablat
  3424  0000EA  C036  FFF8         	movff	??_Sys_Cyc+12,tblptru
  3425  0000EE  C035  FFF7         	movff	??_Sys_Cyc+11,tblptrh
  3426  0000F2  C034  FFF6         	movff	??_Sys_Cyc+10,tblptrl
  3427  0000F6  C033  FFF4         	movff	??_Sys_Cyc+9,prodh
  3428  0000FA  C032  FFF3         	movff	??_Sys_Cyc+8,prodl
  3429  0000FE  C031  FFDA         	movff	??_Sys_Cyc+7,fsr2h
  3430  000102  C030  FFD9         	movff	??_Sys_Cyc+6,fsr2l
  3431  000106  C02F  FFE2         	movff	??_Sys_Cyc+5,fsr1h
  3432  00010A  C02E  FFE1         	movff	??_Sys_Cyc+4,fsr1l
  3433  00010E  C02D  FFEA         	movff	??_Sys_Cyc+3,fsr0h
  3434  000112  C02C  FFE9         	movff	??_Sys_Cyc+2,fsr0l
  3435  000116  C02B  FFFB         	movff	??_Sys_Cyc+1,pclatu
  3436  00011A  C02A  FFFA         	movff	??_Sys_Cyc,pclath
  3437  00011E  0011               	retfie		f
  3438  000120                     __end_of_Sys_Cyc:
  3439                           	opt stack 0
  3440                           pclatu	equ	0xFFB
  3441                           pclath	equ	0xFFA
  3442                           tblptru	equ	0xFF8
  3443                           tblptrh	equ	0xFF7
  3444                           tblptrl	equ	0xFF6
  3445                           tablat	equ	0xFF5
  3446                           prodh	equ	0xFF4
  3447                           prodl	equ	0xFF3
  3448                           intcon	equ	0xFF2
  3449                           postinc0	equ	0xFEE
  3450                           fsr0h	equ	0xFEA
  3451                           fsr0l	equ	0xFE9
  3452                           wreg	equ	0xFE8
  3453                           fsr1h	equ	0xFE2
  3454                           fsr1l	equ	0xFE1
  3455                           fsr2h	equ	0xFDA
  3456                           fsr2l	equ	0xFD9
  3457                           status	equ	0xFD8
  3458                           
  3459 ;; *************** function i2_SetTimer0 *****************
  3460 ;; Defined at:
  3461 ;;		line 78 in file "_01_USER/My_Timer.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;  _tmr            2    0[COMRAM] unsigned int 
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;		None
  3466 ;; Return value:  Size  Location     Type
  3467 ;;		None               void
  3468 ;; Registers used:
  3469 ;;		wreg, status,2, status,0
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3475 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3477 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3478 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3479 ;;Total ram usage:        4 bytes
  3480 ;; Hardware stack levels used:    1
  3481 ;; This function calls:
  3482 ;;		Nothing
  3483 ;; This function is called by:
  3484 ;;		_Sys_Cyc
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           	psect	text22
  3489  001DD2                     __ptext22:
  3490                           	opt stack 0
  3491  001DD2                     i2_SetTimer0:
  3492                           	opt stack 25
  3493                           
  3494                           ;My_Timer.c: 80: if(_tmr > 0xffff) _tmr = 0xffff;
  3495                           
  3496                           ;incstack = 0
  3497  001DD2  D003               	goto	i2l2186
  3498  001DD4  6801               	setf	i2SetTimer0@_tmr,c
  3499  001DD6  6802               	setf	i2SetTimer0@_tmr+1,c
  3500  001DD8  D000               	goto	i2l2186
  3501  001DDA                     i2l2186:
  3502                           
  3503                           ;My_Timer.c: 81: _tmr=0xffff-_tmr;
  3504  001DDA  C001  F003         	movff	i2SetTimer0@_tmr,??i2_SetTimer0
  3505  001DDE  C002  F004         	movff	i2SetTimer0@_tmr+1,??i2_SetTimer0+1
  3506  001DE2  1E03               	comf	??i2_SetTimer0,f,c
  3507  001DE4  1E04               	comf	??i2_SetTimer0+1,f,c
  3508  001DE6  4A03               	infsnz	??i2_SetTimer0,f,c
  3509  001DE8  2A04               	incf	??i2_SetTimer0+1,f,c
  3510  001DEA  0EFF               	movlw	255
  3511  001DEC  2403               	addwf	??i2_SetTimer0,w,c
  3512  001DEE  6E01               	movwf	i2SetTimer0@_tmr,c
  3513  001DF0  0EFF               	movlw	255
  3514  001DF2  2004               	addwfc	??i2_SetTimer0+1,w,c
  3515  001DF4  6E02               	movwf	i2SetTimer0@_tmr+1,c
  3516                           
  3517                           ;My_Timer.c: 82: TMR0H = _tmr/256;
  3518  001DF6  5002               	movf	i2SetTimer0@_tmr+1,w,c
  3519  001DF8  6ED7               	movwf	4055,c	;volatile
  3520                           
  3521                           ;My_Timer.c: 83: TMR0L = _tmr%256;
  3522  001DFA  C001  FFD6         	movff	i2SetTimer0@_tmr,4054	;volatile
  3523                           
  3524                           ;My_Timer.c: 84: TMR0IF = 0;
  3525  001DFE  94F2               	bcf	intcon,2,c	;volatile
  3526  001E00  0012               	return		;funcret
  3527  001E02                     __end_ofi2_SetTimer0:
  3528                           	opt stack 0
  3529                           pclatu	equ	0xFFB
  3530                           pclath	equ	0xFFA
  3531                           tblptru	equ	0xFF8
  3532                           tblptrh	equ	0xFF7
  3533                           tblptrl	equ	0xFF6
  3534                           tablat	equ	0xFF5
  3535                           prodh	equ	0xFF4
  3536                           prodl	equ	0xFF3
  3537                           intcon	equ	0xFF2
  3538                           postinc0	equ	0xFEE
  3539                           fsr0h	equ	0xFEA
  3540                           fsr0l	equ	0xFE9
  3541                           wreg	equ	0xFE8
  3542                           fsr1h	equ	0xFE2
  3543                           fsr1l	equ	0xFE1
  3544                           fsr2h	equ	0xFDA
  3545                           fsr2l	equ	0xFD9
  3546                           status	equ	0xFD8
  3547                           
  3548 ;; *************** function ___llmod *****************
  3549 ;; Defined at:
  3550 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  3551 ;; Parameters:    Size  Location     Type
  3552 ;;  dividend        4    0[COMRAM] unsigned long 
  3553 ;;  divisor         4    4[COMRAM] unsigned long 
  3554 ;; Auto vars:     Size  Location     Type
  3555 ;;  counter         1    8[COMRAM] unsigned char 
  3556 ;; Return value:  Size  Location     Type
  3557 ;;                  4    0[COMRAM] unsigned long 
  3558 ;; Registers used:
  3559 ;;		wreg, status,2, status,0
  3560 ;; Tracked objects:
  3561 ;;		On entry : 0/0
  3562 ;;		On exit  : 0/0
  3563 ;;		Unchanged: 0/0
  3564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3565 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3566 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3568 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3569 ;;Total ram usage:        9 bytes
  3570 ;; Hardware stack levels used:    1
  3571 ;; This function calls:
  3572 ;;		Nothing
  3573 ;; This function is called by:
  3574 ;;		_Sys_Cyc
  3575 ;; This function uses a non-reentrant model
  3576 ;;
  3577                           
  3578                           	psect	text23
  3579  001B72                     __ptext23:
  3580                           	opt stack 0
  3581  001B72                     ___llmod:
  3582                           	opt stack 25
  3583                           
  3584                           ;incstack = 0
  3585  001B72  5005               	movf	___llmod@divisor,w,c
  3586  001B74  1006               	iorwf	___llmod@divisor+1,w,c
  3587  001B76  1007               	iorwf	___llmod@divisor+2,w,c
  3588  001B78  1008               	iorwf	___llmod@divisor+3,w,c
  3589  001B7A  B4D8               	btfsc	status,2,c
  3590  001B7C  D029               	goto	i2l782
  3591  001B7E  0E01               	movlw	1
  3592  001B80  6E09               	movwf	___llmod@counter,c
  3593  001B82  D007               	goto	i2l2172
  3594  001B84                     i2l2170:
  3595  001B84  90D8               	bcf	status,0,c
  3596  001B86  3605               	rlcf	___llmod@divisor,f,c
  3597  001B88  3606               	rlcf	___llmod@divisor+1,f,c
  3598  001B8A  3607               	rlcf	___llmod@divisor+2,f,c
  3599  001B8C  3608               	rlcf	___llmod@divisor+3,f,c
  3600  001B8E  2A09               	incf	___llmod@counter,f,c
  3601  001B90  D000               	goto	i2l2172
  3602  001B92                     i2l2172:
  3603  001B92  BE08               	btfsc	___llmod@divisor+3,7,c
  3604  001B94  D002               	goto	i2l2174
  3605  001B96  D7F6               	goto	i2l2170
  3606  001B98  D000               	goto	i2l2174
  3607  001B9A                     i2l2174:
  3608  001B9A  5005               	movf	___llmod@divisor,w,c
  3609  001B9C  5C01               	subwf	___llmod@dividend,w,c
  3610  001B9E  5006               	movf	___llmod@divisor+1,w,c
  3611  001BA0  5802               	subwfb	___llmod@dividend+1,w,c
  3612  001BA2  5007               	movf	___llmod@divisor+2,w,c
  3613  001BA4  5803               	subwfb	___llmod@dividend+2,w,c
  3614  001BA6  5008               	movf	___llmod@divisor+3,w,c
  3615  001BA8  5804               	subwfb	___llmod@dividend+3,w,c
  3616  001BAA  A0D8               	btfss	status,0,c
  3617  001BAC  D009               	goto	i2l2178
  3618  001BAE  5005               	movf	___llmod@divisor,w,c
  3619  001BB0  5E01               	subwf	___llmod@dividend,f,c
  3620  001BB2  5006               	movf	___llmod@divisor+1,w,c
  3621  001BB4  5A02               	subwfb	___llmod@dividend+1,f,c
  3622  001BB6  5007               	movf	___llmod@divisor+2,w,c
  3623  001BB8  5A03               	subwfb	___llmod@dividend+2,f,c
  3624  001BBA  5008               	movf	___llmod@divisor+3,w,c
  3625  001BBC  5A04               	subwfb	___llmod@dividend+3,f,c
  3626  001BBE  D000               	goto	i2l2178
  3627  001BC0                     i2l2178:
  3628  001BC0  90D8               	bcf	status,0,c
  3629  001BC2  3208               	rrcf	___llmod@divisor+3,f,c
  3630  001BC4  3207               	rrcf	___llmod@divisor+2,f,c
  3631  001BC6  3206               	rrcf	___llmod@divisor+1,f,c
  3632  001BC8  3205               	rrcf	___llmod@divisor,f,c
  3633  001BCA  2E09               	decfsz	___llmod@counter,f,c
  3634  001BCC  D7E6               	goto	i2l2174
  3635  001BCE  D000               	goto	i2l782
  3636  001BD0                     i2l782:
  3637  001BD0  C001  F001         	movff	___llmod@dividend,?___llmod
  3638  001BD4  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  3639  001BD8  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  3640  001BDC  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  3641  001BE0  0012               	return		;funcret
  3642  001BE2                     __end_of___llmod:
  3643                           	opt stack 0
  3644                           pclatu	equ	0xFFB
  3645                           pclath	equ	0xFFA
  3646                           tblptru	equ	0xFF8
  3647                           tblptrh	equ	0xFF7
  3648                           tblptrl	equ	0xFF6
  3649                           tablat	equ	0xFF5
  3650                           prodh	equ	0xFF4
  3651                           prodl	equ	0xFF3
  3652                           intcon	equ	0xFF2
  3653                           postinc0	equ	0xFEE
  3654                           fsr0h	equ	0xFEA
  3655                           fsr0l	equ	0xFE9
  3656                           wreg	equ	0xFE8
  3657                           fsr1h	equ	0xFE2
  3658                           fsr1l	equ	0xFE1
  3659                           fsr2h	equ	0xFDA
  3660                           fsr2l	equ	0xFD9
  3661                           status	equ	0xFD8
  3662                           
  3663 ;; *************** function _Key_FSM_Scan *****************
  3664 ;; Defined at:
  3665 ;;		line 75 in file "_01_USER/Key.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;		None
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;		None
  3670 ;; Return value:  Size  Location     Type
  3671 ;;		None               void
  3672 ;; Registers used:
  3673 ;;		wreg, status,2, status,0, cstack
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3683 ;;Total ram usage:        0 bytes
  3684 ;; Hardware stack levels used:    1
  3685 ;; Hardware stack levels required when called:    1
  3686 ;; This function calls:
  3687 ;;		_Key_Scan
  3688 ;; This function is called by:
  3689 ;;		_Sys_Cyc
  3690 ;; This function uses a non-reentrant model
  3691 ;;
  3692                           
  3693                           	psect	text24
  3694  001708                     __ptext24:
  3695                           	opt stack 0
  3696  001708                     _Key_FSM_Scan:
  3697                           	opt stack 24
  3698                           
  3699                           ;Key.c: 77: Key_Scan();
  3700                           
  3701                           ;incstack = 0
  3702  001708  EC01  F00F         	call	_Key_Scan	;wreg free
  3703                           
  3704                           ;Key.c: 78: if( Local_Key_FSM.key_state & 0x01 ) Local_Key_FSM.key[0]++;
  3705  00170C  A03E               	btfss	_Local_Key_FSM,0,c	;volatile
  3706  00170E  D002               	goto	i2l1438
  3707  001710  2A44               	incf	_Local_Key_FSM+6,f,c	;volatile
  3708  001712  D000               	goto	i2l1438
  3709  001714                     i2l1438:
  3710                           
  3711                           ;Key.c: 79: if( Local_Key_FSM.key_state & 0x02 ) Local_Key_FSM.key[1]++;
  3712  001714  A23E               	btfss	_Local_Key_FSM,1,c	;volatile
  3713  001716  D002               	goto	i2l1442
  3714  001718  2A45               	incf	_Local_Key_FSM+7,f,c	;volatile
  3715  00171A  D000               	goto	i2l1442
  3716  00171C                     i2l1442:
  3717                           
  3718                           ;Key.c: 80: if( Local_Key_FSM.key_state & 0x04 ) Local_Key_FSM.key[2]++;
  3719  00171C  A43E               	btfss	_Local_Key_FSM,2,c	;volatile
  3720  00171E  D002               	goto	i2l1446
  3721  001720  2A46               	incf	_Local_Key_FSM+8,f,c	;volatile
  3722  001722  D000               	goto	i2l1446
  3723  001724                     i2l1446:
  3724                           
  3725                           ;Key.c: 81: if( Local_Key_FSM.key_state & 0x08 ) Local_Key_FSM.key[3]++;
  3726  001724  A63E               	btfss	_Local_Key_FSM,3,c	;volatile
  3727  001726  D002               	goto	i2l1450
  3728  001728  2A47               	incf	_Local_Key_FSM+9,f,c	;volatile
  3729  00172A  D000               	goto	i2l1450
  3730  00172C                     i2l1450:
  3731                           
  3732                           ;Key.c: 82: if( Local_Key_FSM.key_state & 0x10 ) Local_Key_FSM.key[4]++;
  3733  00172C  A83E               	btfss	_Local_Key_FSM,4,c	;volatile
  3734  00172E  D002               	goto	i2l1454
  3735  001730  2A48               	incf	_Local_Key_FSM+10,f,c	;volatile
  3736  001732  D000               	goto	i2l1454
  3737  001734                     i2l1454:
  3738                           
  3739                           ;Key.c: 84: if( Local_Key_FSM.key_state == 0x00 )
  3740  001734  503E               	movf	_Local_Key_FSM,w,c	;volatile
  3741  001736  A4D8               	btfss	status,2,c
  3742  001738  D00B               	goto	i2l1458
  3743                           
  3744                           ;Key.c: 85: {
  3745                           ;Key.c: 86: Local_Key_FSM.key[0] = 0;
  3746  00173A  0E00               	movlw	0
  3747  00173C  6E44               	movwf	_Local_Key_FSM+6,c	;volatile
  3748                           
  3749                           ;Key.c: 87: Local_Key_FSM.key[1] = 0;
  3750  00173E  0E00               	movlw	0
  3751  001740  6E45               	movwf	_Local_Key_FSM+7,c	;volatile
  3752                           
  3753                           ;Key.c: 88: Local_Key_FSM.key[2] = 0;
  3754  001742  0E00               	movlw	0
  3755  001744  6E46               	movwf	_Local_Key_FSM+8,c	;volatile
  3756                           
  3757                           ;Key.c: 89: Local_Key_FSM.key[3] = 0;
  3758  001746  0E00               	movlw	0
  3759  001748  6E47               	movwf	_Local_Key_FSM+9,c	;volatile
  3760                           
  3761                           ;Key.c: 90: Local_Key_FSM.key[4] = 0;
  3762  00174A  0E00               	movlw	0
  3763  00174C  6E48               	movwf	_Local_Key_FSM+10,c	;volatile
  3764                           
  3765                           ;Key.c: 91: }
  3766  00174E  0012               	return	
  3767  001750                     i2l1458:
  3768                           
  3769                           ;Key.c: 92: else
  3770                           ;Key.c: 93: {
  3771                           ;Key.c: 95: if( Local_Key_FSM.key[0] < 5 ) Local_Key_FSM.key_FSM[0] = 0x00;
  3772  001750  0E05               	movlw	5
  3773  001752  6044               	cpfslt	_Local_Key_FSM+6,c	;volatile
  3774  001754  D002               	goto	i2l1462
  3775  001756  0E00               	movlw	0
  3776  001758  D006               	goto	L5
  3777  00175A                     i2l1462:
  3778                           
  3779                           ;Key.c: 96: else if( Local_Key_FSM.key[0] < 50 ) Local_Key_FSM.key_FSM[0] = 0x01;
  3780  00175A  0E32               	movlw	50
  3781  00175C  6044               	cpfslt	_Local_Key_FSM+6,c	;volatile
  3782  00175E  D002               	goto	i2l1466
  3783  001760  0E01               	movlw	1
  3784  001762  D001               	goto	L5
  3785  001764                     i2l1466:
  3786                           
  3787                           ;Key.c: 97: else Local_Key_FSM.key_FSM[0] = 0x03;
  3788  001764  0E03               	movlw	3
  3789  001766                     L5:
  3790  001766  6E3F               	movwf	_Local_Key_FSM+1,c	;volatile
  3791  001768  D000               	goto	i2l1468
  3792  00176A                     i2l1468:
  3793                           
  3794                           ;Key.c: 99: if( Local_Key_FSM.key[1] < 5 ) Local_Key_FSM.key_FSM[1] = 0x00;
  3795  00176A  0E05               	movlw	5
  3796  00176C  6045               	cpfslt	_Local_Key_FSM+7,c	;volatile
  3797  00176E  D002               	goto	i2l1472
  3798  001770  0E00               	movlw	0
  3799  001772  D006               	goto	L7
  3800  001774                     i2l1472:
  3801                           
  3802                           ;Key.c: 100: else if( Local_Key_FSM.key[1] < 50 ) Local_Key_FSM.key_FSM[1] = 0x01;
  3803  001774  0E32               	movlw	50
  3804  001776  6045               	cpfslt	_Local_Key_FSM+7,c	;volatile
  3805  001778  D002               	goto	i2l1476
  3806  00177A  0E01               	movlw	1
  3807  00177C  D001               	goto	L7
  3808  00177E                     i2l1476:
  3809                           
  3810                           ;Key.c: 101: else Local_Key_FSM.key_FSM[1] = 0x03;
  3811  00177E  0E03               	movlw	3
  3812  001780                     L7:
  3813  001780  6E40               	movwf	_Local_Key_FSM+2,c	;volatile
  3814  001782  D000               	goto	i2l1478
  3815  001784                     i2l1478:
  3816                           
  3817                           ;Key.c: 103: if( Local_Key_FSM.key[2] < 5 ) Local_Key_FSM.key_FSM[2] = 0x00;
  3818  001784  0E05               	movlw	5
  3819  001786  6046               	cpfslt	_Local_Key_FSM+8,c	;volatile
  3820  001788  D002               	goto	i2l1482
  3821  00178A  0E00               	movlw	0
  3822  00178C  D006               	goto	L9
  3823  00178E                     i2l1482:
  3824                           
  3825                           ;Key.c: 104: else if( Local_Key_FSM.key[2] < 50 ) Local_Key_FSM.key_FSM[2] = 0x01;
  3826  00178E  0E32               	movlw	50
  3827  001790  6046               	cpfslt	_Local_Key_FSM+8,c	;volatile
  3828  001792  D002               	goto	i2l1486
  3829  001794  0E01               	movlw	1
  3830  001796  D001               	goto	L9
  3831  001798                     i2l1486:
  3832                           
  3833                           ;Key.c: 105: else Local_Key_FSM.key_FSM[2] = 0x03;
  3834  001798  0E03               	movlw	3
  3835  00179A                     L9:
  3836  00179A  6E41               	movwf	_Local_Key_FSM+3,c	;volatile
  3837  00179C  D000               	goto	i2l1488
  3838  00179E                     i2l1488:
  3839                           
  3840                           ;Key.c: 107: if( Local_Key_FSM.key[3] < 5 ) Local_Key_FSM.key_FSM[3] = 0x00;
  3841  00179E  0E05               	movlw	5
  3842  0017A0  6047               	cpfslt	_Local_Key_FSM+9,c	;volatile
  3843  0017A2  D002               	goto	i2l1492
  3844  0017A4  0E00               	movlw	0
  3845  0017A6  D006               	goto	L11
  3846  0017A8                     i2l1492:
  3847                           
  3848                           ;Key.c: 108: else if( Local_Key_FSM.key[3] < 50 ) Local_Key_FSM.key_FSM[3] = 0x01;
  3849  0017A8  0E32               	movlw	50
  3850  0017AA  6047               	cpfslt	_Local_Key_FSM+9,c	;volatile
  3851  0017AC  D002               	goto	i2l1496
  3852  0017AE  0E01               	movlw	1
  3853  0017B0  D001               	goto	L11
  3854  0017B2                     i2l1496:
  3855                           
  3856                           ;Key.c: 109: else Local_Key_FSM.key_FSM[3] = 0x03;
  3857  0017B2  0E03               	movlw	3
  3858  0017B4                     L11:
  3859  0017B4  6E42               	movwf	_Local_Key_FSM+4,c	;volatile
  3860  0017B6  D000               	goto	i2l1498
  3861  0017B8                     i2l1498:
  3862                           
  3863                           ;Key.c: 111: if( Local_Key_FSM.key[4] < 5 ) Local_Key_FSM.key_FSM[4] = 0x00;
  3864  0017B8  0E05               	movlw	5
  3865  0017BA  6048               	cpfslt	_Local_Key_FSM+10,c	;volatile
  3866  0017BC  D002               	goto	i2l1502
  3867  0017BE  0E00               	movlw	0
  3868  0017C0  D006               	goto	L13
  3869  0017C2                     i2l1502:
  3870                           
  3871                           ;Key.c: 112: else if( Local_Key_FSM.key[4] < 50 ) Local_Key_FSM.key_FSM[4] = 0x01;
  3872  0017C2  0E32               	movlw	50
  3873  0017C4  6048               	cpfslt	_Local_Key_FSM+10,c	;volatile
  3874  0017C6  D002               	goto	i2l1506
  3875  0017C8  0E01               	movlw	1
  3876  0017CA  D001               	goto	L13
  3877  0017CC                     i2l1506:
  3878                           
  3879                           ;Key.c: 113: else Local_Key_FSM.key_FSM[4] = 0x03;
  3880  0017CC  0E03               	movlw	3
  3881  0017CE                     L13:
  3882  0017CE  6E43               	movwf	_Local_Key_FSM+5,c	;volatile
  3883  0017D0  D000               	goto	i2l110
  3884  0017D2                     i2l110:
  3885                           
  3886                           ;Key.c: 116: Local_Key_FSM.key_group = 0x00;
  3887  0017D2  0E00               	movlw	0
  3888  0017D4  6E43               	movwf	_Local_Key_FSM+5,c	;volatile
  3889                           
  3890                           ;Key.c: 117: if( Local_Key_FSM.key_FSM[0] != 0x00 ) Local_Key_FSM.key_group |= 0x01<<0;
  3891  0017D6  503F               	movf	_Local_Key_FSM+1,w,c	;volatile
  3892  0017D8  B4D8               	btfsc	status,2,c
  3893  0017DA  D002               	goto	i2l1510
  3894  0017DC  8043               	bsf	_Local_Key_FSM+5,0,c	;volatile
  3895  0017DE  D000               	goto	i2l1510
  3896  0017E0                     i2l1510:
  3897                           
  3898                           ;Key.c: 118: if( Local_Key_FSM.key_FSM[1] != 0x00 ) Local_Key_FSM.key_group |= 0x01<<1;
  3899  0017E0  5040               	movf	_Local_Key_FSM+2,w,c	;volatile
  3900  0017E2  B4D8               	btfsc	status,2,c
  3901  0017E4  D002               	goto	i2l1514
  3902  0017E6  8243               	bsf	_Local_Key_FSM+5,1,c	;volatile
  3903  0017E8  D000               	goto	i2l1514
  3904  0017EA                     i2l1514:
  3905                           
  3906                           ;Key.c: 119: if( Local_Key_FSM.key_FSM[2] != 0x00 ) Local_Key_FSM.key_group |= 0x01<<2;
  3907  0017EA  5041               	movf	_Local_Key_FSM+3,w,c	;volatile
  3908  0017EC  B4D8               	btfsc	status,2,c
  3909  0017EE  D002               	goto	i2l1518
  3910  0017F0  8443               	bsf	_Local_Key_FSM+5,2,c	;volatile
  3911  0017F2  D000               	goto	i2l1518
  3912  0017F4                     i2l1518:
  3913                           
  3914                           ;Key.c: 120: if( Local_Key_FSM.key_FSM[3] != 0x00 ) Local_Key_FSM.key_group |= 0x01<<3;
  3915  0017F4  5042               	movf	_Local_Key_FSM+4,w,c	;volatile
  3916  0017F6  B4D8               	btfsc	status,2,c
  3917  0017F8  D002               	goto	i2l1522
  3918  0017FA  8643               	bsf	_Local_Key_FSM+5,3,c	;volatile
  3919  0017FC  D000               	goto	i2l1522
  3920  0017FE                     i2l1522:
  3921                           
  3922                           ;Key.c: 121: if( Local_Key_FSM.key_FSM[4] != 0x00 ) Local_Key_FSM.key_group |= 0x01<<4;
  3923  0017FE  5043               	movf	_Local_Key_FSM+5,w,c	;volatile
  3924  001800  B4D8               	btfsc	status,2,c
  3925  001802  0012               	return	
  3926  001804  8843               	bsf	_Local_Key_FSM+5,4,c	;volatile
  3927  001806  0012               	return	
  3928  001808  0012               	return		;funcret
  3929  00180A                     __end_of_Key_FSM_Scan:
  3930                           	opt stack 0
  3931                           pclatu	equ	0xFFB
  3932                           pclath	equ	0xFFA
  3933                           tblptru	equ	0xFF8
  3934                           tblptrh	equ	0xFF7
  3935                           tblptrl	equ	0xFF6
  3936                           tablat	equ	0xFF5
  3937                           prodh	equ	0xFF4
  3938                           prodl	equ	0xFF3
  3939                           intcon	equ	0xFF2
  3940                           postinc0	equ	0xFEE
  3941                           fsr0h	equ	0xFEA
  3942                           fsr0l	equ	0xFE9
  3943                           wreg	equ	0xFE8
  3944                           fsr1h	equ	0xFE2
  3945                           fsr1l	equ	0xFE1
  3946                           fsr2h	equ	0xFDA
  3947                           fsr2l	equ	0xFD9
  3948                           status	equ	0xFD8
  3949                           
  3950 ;; *************** function _Key_Scan *****************
  3951 ;; Defined at:
  3952 ;;		line 54 in file "_01_USER/Key.c"
  3953 ;; Parameters:    Size  Location     Type
  3954 ;;		None
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;		None
  3957 ;; Return value:  Size  Location     Type
  3958 ;;		None               void
  3959 ;; Registers used:
  3960 ;;		wreg, status,2, status,0
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3970 ;;Total ram usage:        0 bytes
  3971 ;; Hardware stack levels used:    1
  3972 ;; This function calls:
  3973 ;;		Nothing
  3974 ;; This function is called by:
  3975 ;;		_Key_FSM_Scan
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           
  3979                           	psect	text25
  3980  001E02                     __ptext25:
  3981                           	opt stack 0
  3982  001E02                     _Key_Scan:
  3983                           	opt stack 24
  3984                           
  3985                           ;Key.c: 56: Local_Key_FSM.key_state = 0x00;
  3986                           
  3987                           ;incstack = 0
  3988  001E02  0E00               	movlw	0
  3989  001E04  6E3E               	movwf	_Local_Key_FSM,c	;volatile
  3990                           
  3991                           ;Key.c: 58: if( RE3 == 0 ) Local_Key_FSM.key_state |= (0x01 << 0) ;
  3992  001E06  B684               	btfsc	3972,3,c	;volatile
  3993  001E08  D002               	goto	i2l1056
  3994  001E0A  803E               	bsf	_Local_Key_FSM,0,c	;volatile
  3995  001E0C  D000               	goto	i2l1056
  3996  001E0E                     i2l1056:
  3997                           
  3998                           ;Key.c: 59: if( RE2 == 0 ) Local_Key_FSM.key_state |= (0x01 << 1) ;
  3999  001E0E  B484               	btfsc	3972,2,c	;volatile
  4000  001E10  D002               	goto	i2l1060
  4001  001E12  823E               	bsf	_Local_Key_FSM,1,c	;volatile
  4002  001E14  D000               	goto	i2l1060
  4003  001E16                     i2l1060:
  4004                           
  4005                           ;Key.c: 60: if( RD6 == 0 ) Local_Key_FSM.key_state |= (0x01 << 2) ;
  4006  001E16  BC83               	btfsc	3971,6,c	;volatile
  4007  001E18  D002               	goto	i2l1064
  4008  001E1A  843E               	bsf	_Local_Key_FSM,2,c	;volatile
  4009  001E1C  D000               	goto	i2l1064
  4010  001E1E                     i2l1064:
  4011                           
  4012                           ;Key.c: 61: if( RE4 == 0 ) Local_Key_FSM.key_state |= (0x01 << 3) ;
  4013  001E1E  B884               	btfsc	3972,4,c	;volatile
  4014  001E20  D002               	goto	i2l1068
  4015  001E22  863E               	bsf	_Local_Key_FSM,3,c	;volatile
  4016  001E24  D000               	goto	i2l1068
  4017  001E26                     i2l1068:
  4018                           
  4019                           ;Key.c: 62: if( RD7 == 0 ) Local_Key_FSM.key_state |= (0x01 << 4) ;
  4020  001E26  BE83               	btfsc	3971,7,c	;volatile
  4021  001E28  0012               	return	
  4022  001E2A  883E               	bsf	_Local_Key_FSM,4,c	;volatile
  4023  001E2C  0012               	return	
  4024  001E2E  0012               	return		;funcret
  4025  001E30                     __end_of_Key_Scan:
  4026                           	opt stack 0
  4027                           pclatu	equ	0xFFB
  4028                           pclath	equ	0xFFA
  4029                           tblptru	equ	0xFF8
  4030                           tblptrh	equ	0xFF7
  4031                           tblptrl	equ	0xFF6
  4032                           tablat	equ	0xFF5
  4033                           prodh	equ	0xFF4
  4034                           prodl	equ	0xFF3
  4035                           intcon	equ	0xFF2
  4036                           postinc0	equ	0xFEE
  4037                           fsr0h	equ	0xFEA
  4038                           fsr0l	equ	0xFE9
  4039                           wreg	equ	0xFE8
  4040                           fsr1h	equ	0xFE2
  4041                           fsr1l	equ	0xFE1
  4042                           fsr2h	equ	0xFDA
  4043                           fsr2l	equ	0xFD9
  4044                           status	equ	0xFD8
  4045                           
  4046 ;; *************** function _Get_ADC6 *****************
  4047 ;; Defined at:
  4048 ;;		line 67 in file "_01_USER/My_ADC.c"
  4049 ;; Parameters:    Size  Location     Type
  4050 ;;		None
  4051 ;; Auto vars:     Size  Location     Type
  4052 ;;		None
  4053 ;; Return value:  Size  Location     Type
  4054 ;;		None               void
  4055 ;; Registers used:
  4056 ;;		wreg, status,2, status,0, cstack
  4057 ;; Tracked objects:
  4058 ;;		On entry : 0/0
  4059 ;;		On exit  : 0/0
  4060 ;;		Unchanged: 0/0
  4061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4066 ;;Total ram usage:        0 bytes
  4067 ;; Hardware stack levels used:    1
  4068 ;; Hardware stack levels required when called:    2
  4069 ;; This function calls:
  4070 ;;		_BusyADC
  4071 ;;		_ConvertADC
  4072 ;;		_ReadADC
  4073 ;;		___lwtoft
  4074 ;;		i2___ftdiv
  4075 ;;		i2___ftmul
  4076 ;; This function is called by:
  4077 ;;		_Sys_Cyc
  4078 ;; This function uses a non-reentrant model
  4079 ;;
  4080                           
  4081                           	psect	text26
  4082  001BE2                     __ptext26:
  4083                           	opt stack 0
  4084  001BE2                     _Get_ADC6:
  4085                           	opt stack 23
  4086                           
  4087                           ;My_ADC.c: 69: ConvertADC();
  4088                           
  4089                           ;incstack = 0
  4090  001BE2  ECE2  F00F         	call	_ConvertADC	;wreg free
  4091                           
  4092                           ;My_ADC.c: 70: while(BusyADC());
  4093  001BE6  D000               	goto	i2l2162
  4094  001BE8                     i2l2162:
  4095  001BE8  ECD0  F00F         	call	_BusyADC	;wreg free
  4096  001BEC  0900               	iorlw	0
  4097  001BEE  A4D8               	btfss	status,2,c
  4098  001BF0  D7FB               	goto	i2l2162
  4099                           
  4100                           ;My_ADC.c: 71: ADC6_Buff =(unsigned int)ReadADC()*4.096f/4095.0f;
  4101  001BF2  0E12               	movlw	18
  4102  001BF4  6E0F               	movwf	i2___ftmul@f2,c
  4103  001BF6  0E83               	movlw	131
  4104  001BF8  6E10               	movwf	i2___ftmul@f2+1,c
  4105  001BFA  0E40               	movlw	64
  4106  001BFC  6E11               	movwf	i2___ftmul@f2+2,c
  4107  001BFE  ECC8  F00F         	call	_ReadADC	;wreg free
  4108  001C02  C001  F009         	movff	?_ReadADC,___lwtoft@c
  4109  001C06  C002  F00A         	movff	?_ReadADC+1,___lwtoft@c+1
  4110  001C0A  EC53  F00F         	call	___lwtoft	;wreg free
  4111  001C0E  C009  F00C         	movff	?___lwtoft,i2___ftmul@f1
  4112  001C12  C00A  F00D         	movff	?___lwtoft+1,i2___ftmul@f1+1
  4113  001C16  C00B  F00E         	movff	?___lwtoft+2,i2___ftmul@f1+2
  4114  001C1A  EC05  F00C         	call	i2___ftmul	;wreg free
  4115  001C1E  C00C  F01B         	movff	?i2___ftmul,i2___ftdiv@f1
  4116  001C22  C00D  F01C         	movff	?i2___ftmul+1,i2___ftdiv@f1+1
  4117  001C26  C00E  F01D         	movff	?i2___ftmul+2,i2___ftdiv@f1+2
  4118  001C2A  0EF0               	movlw	240
  4119  001C2C  6E1E               	movwf	i2___ftdiv@f2,c
  4120  001C2E  0E7F               	movlw	127
  4121  001C30  6E1F               	movwf	i2___ftdiv@f2+1,c
  4122  001C32  0E45               	movlw	69
  4123  001C34  6E20               	movwf	i2___ftdiv@f2+2,c
  4124  001C36  EC86  F00C         	call	i2___ftdiv	;wreg free
  4125  001C3A  C01B  F07D         	movff	?i2___ftdiv,_ADC6_Buff	;volatile
  4126  001C3E  C01C  F07E         	movff	?i2___ftdiv+1,_ADC6_Buff+1	;volatile
  4127  001C42  C01D  F07F         	movff	?i2___ftdiv+2,_ADC6_Buff+2	;volatile
  4128  001C46  0012               	return		;funcret
  4129  001C48                     __end_of_Get_ADC6:
  4130                           	opt stack 0
  4131                           pclatu	equ	0xFFB
  4132                           pclath	equ	0xFFA
  4133                           tblptru	equ	0xFF8
  4134                           tblptrh	equ	0xFF7
  4135                           tblptrl	equ	0xFF6
  4136                           tablat	equ	0xFF5
  4137                           prodh	equ	0xFF4
  4138                           prodl	equ	0xFF3
  4139                           intcon	equ	0xFF2
  4140                           postinc0	equ	0xFEE
  4141                           fsr0h	equ	0xFEA
  4142                           fsr0l	equ	0xFE9
  4143                           wreg	equ	0xFE8
  4144                           fsr1h	equ	0xFE2
  4145                           fsr1l	equ	0xFE1
  4146                           fsr2h	equ	0xFDA
  4147                           fsr2l	equ	0xFD9
  4148                           status	equ	0xFD8
  4149                           
  4150 ;; *************** function i2___ftmul *****************
  4151 ;; Defined at:
  4152 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  4153 ;; Parameters:    Size  Location     Type
  4154 ;;  f1              3   11[COMRAM] float 
  4155 ;;  f2              3   14[COMRAM] float 
  4156 ;; Auto vars:     Size  Location     Type
  4157 ;;  __ftmul         3   21[COMRAM] unsigned um
  4158 ;;  __ftmul         1   25[COMRAM] unsigned char 
  4159 ;;  __ftmul         1   24[COMRAM] unsigned char 
  4160 ;;  __ftmul         1   20[COMRAM] unsigned char 
  4161 ;; Return value:  Size  Location     Type
  4162 ;;                  3   11[COMRAM] float 
  4163 ;; Registers used:
  4164 ;;		wreg, status,2, status,0, cstack
  4165 ;; Tracked objects:
  4166 ;;		On entry : 0/0
  4167 ;;		On exit  : 0/0
  4168 ;;		Unchanged: 0/0
  4169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4170 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4171 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4172 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4173 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4174 ;;Total ram usage:       15 bytes
  4175 ;; Hardware stack levels used:    1
  4176 ;; Hardware stack levels required when called:    1
  4177 ;; This function calls:
  4178 ;;		i2___ftpack
  4179 ;; This function is called by:
  4180 ;;		_Get_ADC6
  4181 ;; This function uses a non-reentrant model
  4182 ;;
  4183                           
  4184                           	psect	text27
  4185  00180A                     __ptext27:
  4186                           	opt stack 0
  4187  00180A                     i2___ftmul:
  4188                           	opt stack 23
  4189                           
  4190                           ;incstack = 0
  4191  00180A  C00E  F012         	movff	i2___ftmul@f1+2,??i2___ftmul
  4192  00180E  6A13               	clrf	(??i2___ftmul+1)& (0+255),c
  4193  001810  6A14               	clrf	(??i2___ftmul+2)& (0+255),c
  4194  001812  340D               	rlcf	i2___ftmul@f1+1,w,c
  4195  001814  3612               	rlcf	??i2___ftmul& (0+255),f,c
  4196  001816  E301               	bnc	u172_41
  4197  001818  8013               	bsf	(??i2___ftmul+1)& (0+255),0,c
  4198  00181A                     u172_41:
  4199  00181A  5012               	movf	??i2___ftmul,w,c
  4200  00181C  6E15               	movwf	i2___ftmul@exp,c
  4201  00181E  5015               	movf	i2___ftmul@exp,w,c
  4202  001820  A4D8               	btfss	status,2,c
  4203  001822  D007               	goto	i2l2070
  4204  001824  0E00               	movlw	0
  4205  001826  6E0C               	movwf	?i2___ftmul,c
  4206  001828  0E00               	movlw	0
  4207  00182A  6E0D               	movwf	?i2___ftmul+1,c
  4208  00182C  0E00               	movlw	0
  4209  00182E  6E0E               	movwf	?i2___ftmul+2,c
  4210  001830  0012               	return	
  4211  001832                     i2l2070:
  4212  001832  C011  F012         	movff	i2___ftmul@f2+2,??i2___ftmul
  4213  001836  6A13               	clrf	(??i2___ftmul+1)& (0+255),c
  4214  001838  6A14               	clrf	(??i2___ftmul+2)& (0+255),c
  4215  00183A  3410               	rlcf	i2___ftmul@f2+1,w,c
  4216  00183C  3612               	rlcf	??i2___ftmul& (0+255),f,c
  4217  00183E  E301               	bnc	u174_41
  4218  001840  8013               	bsf	(??i2___ftmul+1)& (0+255),0,c
  4219  001842                     u174_41:
  4220  001842  5012               	movf	??i2___ftmul,w,c
  4221  001844  6E1A               	movwf	i2___ftmul@sign,c
  4222  001846  501A               	movf	i2___ftmul@sign,w,c
  4223  001848  A4D8               	btfss	status,2,c
  4224  00184A  D007               	goto	i2l2076
  4225  00184C  0E00               	movlw	0
  4226  00184E  6E0C               	movwf	?i2___ftmul,c
  4227  001850  0E00               	movlw	0
  4228  001852  6E0D               	movwf	?i2___ftmul+1,c
  4229  001854  0E00               	movlw	0
  4230  001856  6E0E               	movwf	?i2___ftmul+2,c
  4231  001858  0012               	return	
  4232  00185A                     i2l2076:
  4233  00185A  501A               	movf	i2___ftmul@sign,w,c
  4234  00185C  0F7B               	addlw	123
  4235  00185E  2615               	addwf	i2___ftmul@exp,f,c
  4236  001860  C00E  F01A         	movff	i2___ftmul@f1+2,i2___ftmul@sign
  4237  001864  5011               	movf	i2___ftmul@f2+2,w,c
  4238  001866  1A1A               	xorwf	i2___ftmul@sign,f,c
  4239  001868  0E80               	movlw	128
  4240  00186A  161A               	andwf	i2___ftmul@sign,f,c
  4241  00186C  8E0D               	bsf	i2___ftmul@f1+1,7,c
  4242  00186E  8E10               	bsf	i2___ftmul@f2+1,7,c
  4243  001870  0EFF               	movlw	255
  4244  001872  160F               	andwf	i2___ftmul@f2,f,c
  4245  001874  0EFF               	movlw	255
  4246  001876  1610               	andwf	i2___ftmul@f2+1,f,c
  4247  001878  0E00               	movlw	0
  4248  00187A  1611               	andwf	i2___ftmul@f2+2,f,c
  4249  00187C  0E00               	movlw	0
  4250  00187E  6E16               	movwf	i2___ftmul@f3_as_product,c
  4251  001880  0E00               	movlw	0
  4252  001882  6E17               	movwf	i2___ftmul@f3_as_product+1,c
  4253  001884  0E00               	movlw	0
  4254  001886  6E18               	movwf	i2___ftmul@f3_as_product+2,c
  4255  001888  0E07               	movlw	7
  4256  00188A  6E19               	movwf	i2___ftmul@cntr,c
  4257  00188C  D000               	goto	i2l2090
  4258  00188E                     i2l2090:
  4259  00188E  A00C               	btfss	i2___ftmul@f1,0,c
  4260  001890  D007               	goto	i2l2094
  4261  001892  500F               	movf	i2___ftmul@f2,w,c
  4262  001894  2616               	addwf	i2___ftmul@f3_as_product,f,c
  4263  001896  5010               	movf	i2___ftmul@f2+1,w,c
  4264  001898  2217               	addwfc	i2___ftmul@f3_as_product+1,f,c
  4265  00189A  5011               	movf	i2___ftmul@f2+2,w,c
  4266  00189C  2218               	addwfc	i2___ftmul@f3_as_product+2,f,c
  4267  00189E  D000               	goto	i2l2094
  4268  0018A0                     i2l2094:
  4269  0018A0  90D8               	bcf	status,0,c
  4270  0018A2  320E               	rrcf	i2___ftmul@f1+2,f,c
  4271  0018A4  320D               	rrcf	i2___ftmul@f1+1,f,c
  4272  0018A6  320C               	rrcf	i2___ftmul@f1,f,c
  4273  0018A8  90D8               	bcf	status,0,c
  4274  0018AA  360F               	rlcf	i2___ftmul@f2,f,c
  4275  0018AC  3610               	rlcf	i2___ftmul@f2+1,f,c
  4276  0018AE  3611               	rlcf	i2___ftmul@f2+2,f,c
  4277  0018B0  2E19               	decfsz	i2___ftmul@cntr,f,c
  4278  0018B2  D7ED               	goto	i2l2090
  4279  0018B4  D000               	goto	i2l2098
  4280  0018B6                     i2l2098:
  4281  0018B6  0E09               	movlw	9
  4282  0018B8  6E19               	movwf	i2___ftmul@cntr,c
  4283  0018BA  D000               	goto	i2l2100
  4284  0018BC                     i2l2100:
  4285  0018BC  A00C               	btfss	i2___ftmul@f1,0,c
  4286  0018BE  D007               	goto	i2l2104
  4287  0018C0  500F               	movf	i2___ftmul@f2,w,c
  4288  0018C2  2616               	addwf	i2___ftmul@f3_as_product,f,c
  4289  0018C4  5010               	movf	i2___ftmul@f2+1,w,c
  4290  0018C6  2217               	addwfc	i2___ftmul@f3_as_product+1,f,c
  4291  0018C8  5011               	movf	i2___ftmul@f2+2,w,c
  4292  0018CA  2218               	addwfc	i2___ftmul@f3_as_product+2,f,c
  4293  0018CC  D000               	goto	i2l2104
  4294  0018CE                     i2l2104:
  4295  0018CE  90D8               	bcf	status,0,c
  4296  0018D0  320E               	rrcf	i2___ftmul@f1+2,f,c
  4297  0018D2  320D               	rrcf	i2___ftmul@f1+1,f,c
  4298  0018D4  320C               	rrcf	i2___ftmul@f1,f,c
  4299  0018D6  90D8               	bcf	status,0,c
  4300  0018D8  3218               	rrcf	i2___ftmul@f3_as_product+2,f,c
  4301  0018DA  3217               	rrcf	i2___ftmul@f3_as_product+1,f,c
  4302  0018DC  3216               	rrcf	i2___ftmul@f3_as_product,f,c
  4303  0018DE  2E19               	decfsz	i2___ftmul@cntr,f,c
  4304  0018E0  D7ED               	goto	i2l2100
  4305  0018E2  D000               	goto	i2l2108
  4306  0018E4                     i2l2108:
  4307  0018E4  C016  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
  4308  0018E8  C017  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
  4309  0018EC  C018  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
  4310  0018F0  C015  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
  4311  0018F4  C01A  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
  4312  0018F8  ECFC  F00C         	call	i2___ftpack	;wreg free
  4313  0018FC  C001  F00C         	movff	?i2___ftpack,?i2___ftmul
  4314  001900  C002  F00D         	movff	?i2___ftpack+1,?i2___ftmul+1
  4315  001904  C003  F00E         	movff	?i2___ftpack+2,?i2___ftmul+2
  4316  001908  0012               	return	
  4317  00190A  0012               	return		;funcret
  4318  00190C                     __end_ofi2___ftmul:
  4319                           	opt stack 0
  4320                           pclatu	equ	0xFFB
  4321                           pclath	equ	0xFFA
  4322                           tblptru	equ	0xFF8
  4323                           tblptrh	equ	0xFF7
  4324                           tblptrl	equ	0xFF6
  4325                           tablat	equ	0xFF5
  4326                           prodh	equ	0xFF4
  4327                           prodl	equ	0xFF3
  4328                           intcon	equ	0xFF2
  4329                           postinc0	equ	0xFEE
  4330                           fsr0h	equ	0xFEA
  4331                           fsr0l	equ	0xFE9
  4332                           wreg	equ	0xFE8
  4333                           fsr1h	equ	0xFE2
  4334                           fsr1l	equ	0xFE1
  4335                           fsr2h	equ	0xFDA
  4336                           fsr2l	equ	0xFD9
  4337                           status	equ	0xFD8
  4338                           
  4339 ;; *************** function i2___ftdiv *****************
  4340 ;; Defined at:
  4341 ;;		line 54 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;  f1              3   26[COMRAM] float 
  4344 ;;  f2              3   29[COMRAM] float 
  4345 ;; Auto vars:     Size  Location     Type
  4346 ;;  __ftdiv         3   36[COMRAM] float 
  4347 ;;  __ftdiv         1   40[COMRAM] unsigned char 
  4348 ;;  __ftdiv         1   39[COMRAM] unsigned char 
  4349 ;;  __ftdiv         1   35[COMRAM] unsigned char 
  4350 ;; Return value:  Size  Location     Type
  4351 ;;                  3   26[COMRAM] float 
  4352 ;; Registers used:
  4353 ;;		wreg, status,2, status,0, cstack
  4354 ;; Tracked objects:
  4355 ;;		On entry : 0/0
  4356 ;;		On exit  : 0/0
  4357 ;;		Unchanged: 0/0
  4358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4359 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4360 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4361 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4362 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4363 ;;Total ram usage:       15 bytes
  4364 ;; Hardware stack levels used:    1
  4365 ;; Hardware stack levels required when called:    1
  4366 ;; This function calls:
  4367 ;;		i2___ftpack
  4368 ;; This function is called by:
  4369 ;;		_Get_ADC6
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373                           	psect	text28
  4374  00190C                     __ptext28:
  4375                           	opt stack 0
  4376  00190C                     i2___ftdiv:
  4377                           	opt stack 23
  4378                           
  4379                           ;incstack = 0
  4380  00190C  C01D  F021         	movff	i2___ftdiv@f1+2,??i2___ftdiv
  4381  001910  6A22               	clrf	(??i2___ftdiv+1)& (0+255),c
  4382  001912  6A23               	clrf	(??i2___ftdiv+2)& (0+255),c
  4383  001914  341C               	rlcf	i2___ftdiv@f1+1,w,c
  4384  001916  3621               	rlcf	??i2___ftdiv& (0+255),f,c
  4385  001918  E301               	bnc	u167_41
  4386  00191A  8022               	bsf	(??i2___ftdiv+1)& (0+255),0,c
  4387  00191C                     u167_41:
  4388  00191C  5021               	movf	??i2___ftdiv,w,c
  4389  00191E  6E28               	movwf	i2___ftdiv@exp,c
  4390  001920  5028               	movf	i2___ftdiv@exp,w,c
  4391  001922  A4D8               	btfss	status,2,c
  4392  001924  D007               	goto	i2l2024
  4393  001926  0E00               	movlw	0
  4394  001928  6E1B               	movwf	?i2___ftdiv,c
  4395  00192A  0E00               	movlw	0
  4396  00192C  6E1C               	movwf	?i2___ftdiv+1,c
  4397  00192E  0E00               	movlw	0
  4398  001930  6E1D               	movwf	?i2___ftdiv+2,c
  4399  001932  0012               	return	
  4400  001934                     i2l2024:
  4401  001934  C020  F021         	movff	i2___ftdiv@f2+2,??i2___ftdiv
  4402  001938  6A22               	clrf	(??i2___ftdiv+1)& (0+255),c
  4403  00193A  6A23               	clrf	(??i2___ftdiv+2)& (0+255),c
  4404  00193C  341F               	rlcf	i2___ftdiv@f2+1,w,c
  4405  00193E  3621               	rlcf	??i2___ftdiv& (0+255),f,c
  4406  001940  E301               	bnc	u169_41
  4407  001942  8022               	bsf	(??i2___ftdiv+1)& (0+255),0,c
  4408  001944                     u169_41:
  4409  001944  5021               	movf	??i2___ftdiv,w,c
  4410  001946  6E29               	movwf	i2___ftdiv@sign,c
  4411  001948  5029               	movf	i2___ftdiv@sign,w,c
  4412  00194A  A4D8               	btfss	status,2,c
  4413  00194C  D007               	goto	i2l2030
  4414  00194E  0E00               	movlw	0
  4415  001950  6E1B               	movwf	?i2___ftdiv,c
  4416  001952  0E00               	movlw	0
  4417  001954  6E1C               	movwf	?i2___ftdiv+1,c
  4418  001956  0E00               	movlw	0
  4419  001958  6E1D               	movwf	?i2___ftdiv+2,c
  4420  00195A  0012               	return	
  4421  00195C                     i2l2030:
  4422  00195C  0E00               	movlw	0
  4423  00195E  6E25               	movwf	i2___ftdiv@f3,c
  4424  001960  0E00               	movlw	0
  4425  001962  6E26               	movwf	i2___ftdiv@f3+1,c
  4426  001964  0E00               	movlw	0
  4427  001966  6E27               	movwf	i2___ftdiv@f3+2,c
  4428  001968  5029               	movf	i2___ftdiv@sign,w,c
  4429  00196A  0F89               	addlw	137
  4430  00196C  5E28               	subwf	i2___ftdiv@exp,f,c
  4431  00196E  C01D  F029         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
  4432  001972  5020               	movf	i2___ftdiv@f2+2,w,c
  4433  001974  1A29               	xorwf	i2___ftdiv@sign,f,c
  4434  001976  0E80               	movlw	128
  4435  001978  1629               	andwf	i2___ftdiv@sign,f,c
  4436  00197A  8E1C               	bsf	i2___ftdiv@f1+1,7,c
  4437  00197C  0EFF               	movlw	255
  4438  00197E  161B               	andwf	i2___ftdiv@f1,f,c
  4439  001980  0EFF               	movlw	255
  4440  001982  161C               	andwf	i2___ftdiv@f1+1,f,c
  4441  001984  0E00               	movlw	0
  4442  001986  161D               	andwf	i2___ftdiv@f1+2,f,c
  4443  001988  8E1F               	bsf	i2___ftdiv@f2+1,7,c
  4444  00198A  0EFF               	movlw	255
  4445  00198C  161E               	andwf	i2___ftdiv@f2,f,c
  4446  00198E  0EFF               	movlw	255
  4447  001990  161F               	andwf	i2___ftdiv@f2+1,f,c
  4448  001992  0E00               	movlw	0
  4449  001994  1620               	andwf	i2___ftdiv@f2+2,f,c
  4450  001996  0E18               	movlw	24
  4451  001998  6E24               	movwf	i2___ftdiv@cntr,c
  4452  00199A  D000               	goto	i2l2050
  4453  00199C                     i2l2050:
  4454  00199C  90D8               	bcf	status,0,c
  4455  00199E  3625               	rlcf	i2___ftdiv@f3,f,c
  4456  0019A0  3626               	rlcf	i2___ftdiv@f3+1,f,c
  4457  0019A2  3627               	rlcf	i2___ftdiv@f3+2,f,c
  4458  0019A4  501E               	movf	i2___ftdiv@f2,w,c
  4459  0019A6  5C1B               	subwf	i2___ftdiv@f1,w,c
  4460  0019A8  501F               	movf	i2___ftdiv@f2+1,w,c
  4461  0019AA  581C               	subwfb	i2___ftdiv@f1+1,w,c
  4462  0019AC  5020               	movf	i2___ftdiv@f2+2,w,c
  4463  0019AE  581D               	subwfb	i2___ftdiv@f1+2,w,c
  4464  0019B0  A0D8               	btfss	status,0,c
  4465  0019B2  D007               	goto	i2l700
  4466  0019B4  501E               	movf	i2___ftdiv@f2,w,c
  4467  0019B6  5E1B               	subwf	i2___ftdiv@f1,f,c
  4468  0019B8  501F               	movf	i2___ftdiv@f2+1,w,c
  4469  0019BA  5A1C               	subwfb	i2___ftdiv@f1+1,f,c
  4470  0019BC  5020               	movf	i2___ftdiv@f2+2,w,c
  4471  0019BE  5A1D               	subwfb	i2___ftdiv@f1+2,f,c
  4472  0019C0  8025               	bsf	i2___ftdiv@f3,0,c
  4473  0019C2                     i2l700:
  4474  0019C2  90D8               	bcf	status,0,c
  4475  0019C4  361B               	rlcf	i2___ftdiv@f1,f,c
  4476  0019C6  361C               	rlcf	i2___ftdiv@f1+1,f,c
  4477  0019C8  361D               	rlcf	i2___ftdiv@f1+2,f,c
  4478  0019CA  2E24               	decfsz	i2___ftdiv@cntr,f,c
  4479  0019CC  D7E7               	goto	i2l2050
  4480  0019CE  D000               	goto	i2l2060
  4481  0019D0                     i2l2060:
  4482  0019D0  C025  F001         	movff	i2___ftdiv@f3,i2___ftpack@arg
  4483  0019D4  C026  F002         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
  4484  0019D8  C027  F003         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
  4485  0019DC  C028  F004         	movff	i2___ftdiv@exp,i2___ftpack@exp
  4486  0019E0  C029  F005         	movff	i2___ftdiv@sign,i2___ftpack@sign
  4487  0019E4  ECFC  F00C         	call	i2___ftpack	;wreg free
  4488  0019E8  C001  F01B         	movff	?i2___ftpack,?i2___ftdiv
  4489  0019EC  C002  F01C         	movff	?i2___ftpack+1,?i2___ftdiv+1
  4490  0019F0  C003  F01D         	movff	?i2___ftpack+2,?i2___ftdiv+2
  4491  0019F4  0012               	return	
  4492  0019F6  0012               	return		;funcret
  4493  0019F8                     __end_ofi2___ftdiv:
  4494                           	opt stack 0
  4495                           pclatu	equ	0xFFB
  4496                           pclath	equ	0xFFA
  4497                           tblptru	equ	0xFF8
  4498                           tblptrh	equ	0xFF7
  4499                           tblptrl	equ	0xFF6
  4500                           tablat	equ	0xFF5
  4501                           prodh	equ	0xFF4
  4502                           prodl	equ	0xFF3
  4503                           intcon	equ	0xFF2
  4504                           postinc0	equ	0xFEE
  4505                           fsr0h	equ	0xFEA
  4506                           fsr0l	equ	0xFE9
  4507                           wreg	equ	0xFE8
  4508                           fsr1h	equ	0xFE2
  4509                           fsr1l	equ	0xFE1
  4510                           fsr2h	equ	0xFDA
  4511                           fsr2l	equ	0xFD9
  4512                           status	equ	0xFD8
  4513                           
  4514 ;; *************** function ___lwtoft *****************
  4515 ;; Defined at:
  4516 ;;		line 28 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;  c               2    8[COMRAM] unsigned int 
  4519 ;; Auto vars:     Size  Location     Type
  4520 ;;		None
  4521 ;; Return value:  Size  Location     Type
  4522 ;;                  3    8[COMRAM] float 
  4523 ;; Registers used:
  4524 ;;		wreg, status,2, status,0, cstack
  4525 ;; Tracked objects:
  4526 ;;		On entry : 0/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4530 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4533 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4534 ;;Total ram usage:        3 bytes
  4535 ;; Hardware stack levels used:    1
  4536 ;; Hardware stack levels required when called:    1
  4537 ;; This function calls:
  4538 ;;		i2___ftpack
  4539 ;; This function is called by:
  4540 ;;		_Get_ADC6
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           	psect	text29
  4545  001EA6                     __ptext29:
  4546                           	opt stack 0
  4547  001EA6                     ___lwtoft:
  4548                           	opt stack 23
  4549                           
  4550                           ;incstack = 0
  4551  001EA6  C009  F001         	movff	___lwtoft@c,i2___ftpack@arg
  4552  001EAA  C00A  F002         	movff	___lwtoft@c+1,i2___ftpack@arg+1
  4553  001EAE  6A03               	clrf	i2___ftpack@arg+2,c
  4554  001EB0  0E8E               	movlw	142
  4555  001EB2  6E04               	movwf	i2___ftpack@exp,c
  4556  001EB4  0E00               	movlw	0
  4557  001EB6  6E05               	movwf	i2___ftpack@sign,c
  4558  001EB8  ECFC  F00C         	call	i2___ftpack	;wreg free
  4559  001EBC  C001  F009         	movff	?i2___ftpack,?___lwtoft
  4560  001EC0  C002  F00A         	movff	?i2___ftpack+1,?___lwtoft+1
  4561  001EC4  C003  F00B         	movff	?i2___ftpack+2,?___lwtoft+2
  4562  001EC8  0012               	return	
  4563  001ECA  0012               	return		;funcret
  4564  001ECC                     __end_of___lwtoft:
  4565                           	opt stack 0
  4566                           pclatu	equ	0xFFB
  4567                           pclath	equ	0xFFA
  4568                           tblptru	equ	0xFF8
  4569                           tblptrh	equ	0xFF7
  4570                           tblptrl	equ	0xFF6
  4571                           tablat	equ	0xFF5
  4572                           prodh	equ	0xFF4
  4573                           prodl	equ	0xFF3
  4574                           intcon	equ	0xFF2
  4575                           postinc0	equ	0xFEE
  4576                           fsr0h	equ	0xFEA
  4577                           fsr0l	equ	0xFE9
  4578                           wreg	equ	0xFE8
  4579                           fsr1h	equ	0xFE2
  4580                           fsr1l	equ	0xFE1
  4581                           fsr2h	equ	0xFDA
  4582                           fsr2l	equ	0xFD9
  4583                           status	equ	0xFD8
  4584                           
  4585 ;; *************** function i2___ftpack *****************
  4586 ;; Defined at:
  4587 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  4588 ;; Parameters:    Size  Location     Type
  4589 ;;  arg             3    0[COMRAM] unsigned um
  4590 ;;  exp             1    3[COMRAM] unsigned char 
  4591 ;;  sign            1    4[COMRAM] unsigned char 
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;		None
  4594 ;; Return value:  Size  Location     Type
  4595 ;;                  3    0[COMRAM] float 
  4596 ;; Registers used:
  4597 ;;		wreg, status,2, status,0
  4598 ;; Tracked objects:
  4599 ;;		On entry : 0/0
  4600 ;;		On exit  : 0/0
  4601 ;;		Unchanged: 0/0
  4602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4603 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4605 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4606 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4607 ;;Total ram usage:        8 bytes
  4608 ;; Hardware stack levels used:    1
  4609 ;; This function calls:
  4610 ;;		Nothing
  4611 ;; This function is called by:
  4612 ;;		___lwtoft
  4613 ;;		i2___ftdiv
  4614 ;;		i2___ftmul
  4615 ;; This function uses a non-reentrant model
  4616 ;;
  4617                           
  4618                           	psect	text30
  4619  0019F8                     __ptext30:
  4620                           	opt stack 0
  4621  0019F8                     i2___ftpack:
  4622                           	opt stack 23
  4623                           
  4624                           ;incstack = 0
  4625  0019F8  5004               	movf	i2___ftpack@exp,w,c
  4626  0019FA  B4D8               	btfsc	status,2,c
  4627  0019FC  D005               	goto	i2l1744
  4628  0019FE  5001               	movf	i2___ftpack@arg,w,c
  4629  001A00  1002               	iorwf	i2___ftpack@arg+1,w,c
  4630  001A02  1003               	iorwf	i2___ftpack@arg+2,w,c
  4631  001A04  A4D8               	btfss	status,2,c
  4632  001A06  D00E               	goto	i2l1750
  4633  001A08                     i2l1744:
  4634  001A08  0E00               	movlw	0
  4635  001A0A  6E01               	movwf	?i2___ftpack,c
  4636  001A0C  0E00               	movlw	0
  4637  001A0E  6E02               	movwf	?i2___ftpack+1,c
  4638  001A10  0E00               	movlw	0
  4639  001A12  6E03               	movwf	?i2___ftpack+2,c
  4640  001A14  0012               	return	
  4641  001A16  D006               	goto	i2l1750
  4642  001A18                     i2l1748:
  4643  001A18  2A04               	incf	i2___ftpack@exp,f,c
  4644  001A1A  90D8               	bcf	status,0,c
  4645  001A1C  3203               	rrcf	i2___ftpack@arg+2,f,c
  4646  001A1E  3202               	rrcf	i2___ftpack@arg+1,f,c
  4647  001A20  3201               	rrcf	i2___ftpack@arg,f,c
  4648  001A22  D000               	goto	i2l1750
  4649  001A24                     i2l1750:
  4650  001A24  0E00               	movlw	0
  4651  001A26  1401               	andwf	i2___ftpack@arg,w,c
  4652  001A28  6E06               	movwf	??i2___ftpack& (0+255),c
  4653  001A2A  0E00               	movlw	0
  4654  001A2C  1402               	andwf	i2___ftpack@arg+1,w,c
  4655  001A2E  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
  4656  001A30  0EFE               	movlw	254
  4657  001A32  1403               	andwf	i2___ftpack@arg+2,w,c
  4658  001A34  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
  4659  001A36  5006               	movf	??i2___ftpack,w,c
  4660  001A38  1007               	iorwf	??i2___ftpack+1,w,c
  4661  001A3A  1008               	iorwf	??i2___ftpack+2,w,c
  4662  001A3C  B4D8               	btfsc	status,2,c
  4663  001A3E  D00E               	goto	i2l1756
  4664  001A40  D7EB               	goto	i2l1748
  4665  001A42  D00C               	goto	i2l1756
  4666  001A44                     i2l1752:
  4667  001A44  2A04               	incf	i2___ftpack@exp,f,c
  4668  001A46  0E01               	movlw	1
  4669  001A48  2601               	addwf	i2___ftpack@arg,f,c
  4670  001A4A  0E00               	movlw	0
  4671  001A4C  2202               	addwfc	i2___ftpack@arg+1,f,c
  4672  001A4E  0E00               	movlw	0
  4673  001A50  2203               	addwfc	i2___ftpack@arg+2,f,c
  4674  001A52  90D8               	bcf	status,0,c
  4675  001A54  3203               	rrcf	i2___ftpack@arg+2,f,c
  4676  001A56  3202               	rrcf	i2___ftpack@arg+1,f,c
  4677  001A58  3201               	rrcf	i2___ftpack@arg,f,c
  4678  001A5A  D000               	goto	i2l1756
  4679  001A5C                     i2l1756:
  4680  001A5C  0E00               	movlw	0
  4681  001A5E  1401               	andwf	i2___ftpack@arg,w,c
  4682  001A60  6E06               	movwf	??i2___ftpack& (0+255),c
  4683  001A62  0E00               	movlw	0
  4684  001A64  1402               	andwf	i2___ftpack@arg+1,w,c
  4685  001A66  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
  4686  001A68  0EFF               	movlw	255
  4687  001A6A  1403               	andwf	i2___ftpack@arg+2,w,c
  4688  001A6C  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
  4689  001A6E  5006               	movf	??i2___ftpack,w,c
  4690  001A70  1007               	iorwf	??i2___ftpack+1,w,c
  4691  001A72  1008               	iorwf	??i2___ftpack+2,w,c
  4692  001A74  B4D8               	btfsc	status,2,c
  4693  001A76  D008               	goto	i2l1760
  4694  001A78  D7E5               	goto	i2l1752
  4695  001A7A  D006               	goto	i2l1760
  4696  001A7C                     i2l1758:
  4697  001A7C  0604               	decf	i2___ftpack@exp,f,c
  4698  001A7E  90D8               	bcf	status,0,c
  4699  001A80  3601               	rlcf	i2___ftpack@arg,f,c
  4700  001A82  3602               	rlcf	i2___ftpack@arg+1,f,c
  4701  001A84  3603               	rlcf	i2___ftpack@arg+2,f,c
  4702  001A86  D000               	goto	i2l1760
  4703  001A88                     i2l1760:
  4704  001A88  BE02               	btfsc	i2___ftpack@arg+1,7,c
  4705  001A8A  D004               	goto	i2l636
  4706  001A8C  0E02               	movlw	2
  4707  001A8E  6004               	cpfslt	i2___ftpack@exp,c
  4708  001A90  D7F5               	goto	i2l1758
  4709  001A92  D000               	goto	i2l636
  4710  001A94                     i2l636:
  4711  001A94  B004               	btfsc	i2___ftpack@exp,0,c
  4712  001A96  D002               	goto	i2l1766
  4713  001A98  9E02               	bcf	i2___ftpack@arg+1,7,c
  4714  001A9A  D000               	goto	i2l1766
  4715  001A9C                     i2l1766:
  4716  001A9C  90D8               	bcf	status,0,c
  4717  001A9E  3204               	rrcf	i2___ftpack@exp,f,c
  4718  001AA0  5004               	movf	i2___ftpack@exp,w,c
  4719  001AA2  1203               	iorwf	i2___ftpack@arg+2,f,c
  4720  001AA4  5005               	movf	i2___ftpack@sign,w,c
  4721  001AA6  B4D8               	btfsc	status,2,c
  4722  001AA8  D002               	goto	i2l1772
  4723  001AAA  8E03               	bsf	i2___ftpack@arg+2,7,c
  4724  001AAC  D000               	goto	i2l1772
  4725  001AAE                     i2l1772:
  4726  001AAE  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
  4727  001AB2  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
  4728  001AB6  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
  4729  001ABA  0012               	return	
  4730  001ABC  0012               	return		;funcret
  4731  001ABE                     __end_ofi2___ftpack:
  4732                           	opt stack 0
  4733                           pclatu	equ	0xFFB
  4734                           pclath	equ	0xFFA
  4735                           tblptru	equ	0xFF8
  4736                           tblptrh	equ	0xFF7
  4737                           tblptrl	equ	0xFF6
  4738                           tablat	equ	0xFF5
  4739                           prodh	equ	0xFF4
  4740                           prodl	equ	0xFF3
  4741                           intcon	equ	0xFF2
  4742                           postinc0	equ	0xFEE
  4743                           fsr0h	equ	0xFEA
  4744                           fsr0l	equ	0xFE9
  4745                           wreg	equ	0xFE8
  4746                           fsr1h	equ	0xFE2
  4747                           fsr1l	equ	0xFE1
  4748                           fsr2h	equ	0xFDA
  4749                           fsr2l	equ	0xFD9
  4750                           status	equ	0xFD8
  4751                           
  4752 ;; *************** function _ReadADC *****************
  4753 ;; Defined at:
  4754 ;;		line 24 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  4755 ;; Parameters:    Size  Location     Type
  4756 ;;		None
  4757 ;; Auto vars:     Size  Location     Type
  4758 ;;		None
  4759 ;; Return value:  Size  Location     Type
  4760 ;;                  2    0[COMRAM] int 
  4761 ;; Registers used:
  4762 ;;		wreg, status,2
  4763 ;; Tracked objects:
  4764 ;;		On entry : 0/0
  4765 ;;		On exit  : 0/0
  4766 ;;		Unchanged: 0/0
  4767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4768 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4770 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4771 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4772 ;;Total ram usage:        4 bytes
  4773 ;; Hardware stack levels used:    1
  4774 ;; This function calls:
  4775 ;;		Nothing
  4776 ;; This function is called by:
  4777 ;;		_Get_ADC6
  4778 ;; This function uses a non-reentrant model
  4779 ;;
  4780                           
  4781                           	psect	text31
  4782  001F90                     __ptext31:
  4783                           	opt stack 0
  4784  001F90                     _ReadADC:
  4785                           	opt stack 24
  4786                           
  4787                           ;incstack = 0
  4788  001F90  50C4               	movf	4036,w,c	;volatile
  4789  001F92  6E03               	movwf	??_ReadADC& (0+255),c
  4790  001F94  50C3               	movf	4035,w,c	;volatile
  4791  001F96  6E01               	movwf	?_ReadADC,c
  4792  001F98  C003  F002         	movff	??_ReadADC,?_ReadADC+1
  4793  001F9C  0012               	return	
  4794  001F9E  0012               	return		;funcret
  4795  001FA0                     __end_of_ReadADC:
  4796                           	opt stack 0
  4797                           pclatu	equ	0xFFB
  4798                           pclath	equ	0xFFA
  4799                           tblptru	equ	0xFF8
  4800                           tblptrh	equ	0xFF7
  4801                           tblptrl	equ	0xFF6
  4802                           tablat	equ	0xFF5
  4803                           prodh	equ	0xFF4
  4804                           prodl	equ	0xFF3
  4805                           intcon	equ	0xFF2
  4806                           postinc0	equ	0xFEE
  4807                           fsr0h	equ	0xFEA
  4808                           fsr0l	equ	0xFE9
  4809                           wreg	equ	0xFE8
  4810                           fsr1h	equ	0xFE2
  4811                           fsr1l	equ	0xFE1
  4812                           fsr2h	equ	0xFDA
  4813                           fsr2l	equ	0xFD9
  4814                           status	equ	0xFD8
  4815                           
  4816 ;; *************** function _ConvertADC *****************
  4817 ;; Defined at:
  4818 ;;		line 22 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;		None
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;		None
  4823 ;; Return value:  Size  Location     Type
  4824 ;;		None               void
  4825 ;; Registers used:
  4826 ;;		None
  4827 ;; Tracked objects:
  4828 ;;		On entry : 0/0
  4829 ;;		On exit  : 0/0
  4830 ;;		Unchanged: 0/0
  4831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4836 ;;Total ram usage:        0 bytes
  4837 ;; Hardware stack levels used:    1
  4838 ;; This function calls:
  4839 ;;		Nothing
  4840 ;; This function is called by:
  4841 ;;		_Get_ADC6
  4842 ;; This function uses a non-reentrant model
  4843 ;;
  4844                           
  4845                           	psect	text32
  4846  001FC4                     __ptext32:
  4847                           	opt stack 0
  4848  001FC4                     _ConvertADC:
  4849                           	opt stack 24
  4850                           
  4851                           ;incstack = 0
  4852  001FC4  82C2               	bsf	4034,1,c	;volatile
  4853  001FC6  0012               	return		;funcret
  4854  001FC8                     __end_of_ConvertADC:
  4855                           	opt stack 0
  4856                           pclatu	equ	0xFFB
  4857                           pclath	equ	0xFFA
  4858                           tblptru	equ	0xFF8
  4859                           tblptrh	equ	0xFF7
  4860                           tblptrl	equ	0xFF6
  4861                           tablat	equ	0xFF5
  4862                           prodh	equ	0xFF4
  4863                           prodl	equ	0xFF3
  4864                           intcon	equ	0xFF2
  4865                           postinc0	equ	0xFEE
  4866                           fsr0h	equ	0xFEA
  4867                           fsr0l	equ	0xFE9
  4868                           wreg	equ	0xFE8
  4869                           fsr1h	equ	0xFE2
  4870                           fsr1l	equ	0xFE1
  4871                           fsr2h	equ	0xFDA
  4872                           fsr2l	equ	0xFD9
  4873                           status	equ	0xFD8
  4874                           
  4875 ;; *************** function _BusyADC *****************
  4876 ;; Defined at:
  4877 ;;		line 26 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  4878 ;; Parameters:    Size  Location     Type
  4879 ;;		None
  4880 ;; Auto vars:     Size  Location     Type
  4881 ;;		None
  4882 ;; Return value:  Size  Location     Type
  4883 ;;                  1    wreg      unsigned char 
  4884 ;; Registers used:
  4885 ;;		wreg
  4886 ;; Tracked objects:
  4887 ;;		On entry : 0/0
  4888 ;;		On exit  : 0/0
  4889 ;;		Unchanged: 0/0
  4890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4895 ;;Total ram usage:        0 bytes
  4896 ;; Hardware stack levels used:    1
  4897 ;; This function calls:
  4898 ;;		Nothing
  4899 ;; This function is called by:
  4900 ;;		_Get_ADC6
  4901 ;; This function uses a non-reentrant model
  4902 ;;
  4903                           
  4904                           	psect	text33
  4905  001FA0                     __ptext33:
  4906                           	opt stack 0
  4907  001FA0                     _BusyADC:
  4908                           	opt stack 24
  4909                           
  4910                           ;incstack = 0
  4911  001FA0  A2C2               	btfss	4034,1,c	;volatile
  4912  001FA2  D002               	goto	i2u141_40
  4913  001FA4  0E01               	movlw	1
  4914  001FA6  0012               	return	
  4915  001FA8                     i2u141_40:
  4916  001FA8  0E00               	movlw	0
  4917  001FAA  0012               	return	
  4918  001FAC  0012               	return		;funcret
  4919  001FAE                     __end_of_BusyADC:
  4920                           	opt stack 0
  4921                           pclatu	equ	0xFFB
  4922                           pclath	equ	0xFFA
  4923                           tblptru	equ	0xFF8
  4924                           tblptrh	equ	0xFF7
  4925                           tblptrl	equ	0xFF6
  4926                           tablat	equ	0xFF5
  4927                           prodh	equ	0xFF4
  4928                           prodl	equ	0xFF3
  4929                           intcon	equ	0xFF2
  4930                           postinc0	equ	0xFEE
  4931                           fsr0h	equ	0xFEA
  4932                           fsr0l	equ	0xFE9
  4933                           wreg	equ	0xFE8
  4934                           fsr1h	equ	0xFE2
  4935                           fsr1l	equ	0xFE1
  4936                           fsr2h	equ	0xFDA
  4937                           fsr2l	equ	0xFD9
  4938                           status	equ	0xFD8
  4939                           pclatu	equ	0xFFB
  4940                           pclath	equ	0xFFA
  4941                           tblptru	equ	0xFF8
  4942                           tblptrh	equ	0xFF7
  4943                           tblptrl	equ	0xFF6
  4944                           tablat	equ	0xFF5
  4945                           prodh	equ	0xFF4
  4946                           prodl	equ	0xFF3
  4947                           intcon	equ	0xFF2
  4948                           postinc0	equ	0xFEE
  4949                           fsr0h	equ	0xFEA
  4950                           fsr0l	equ	0xFE9
  4951                           wreg	equ	0xFE8
  4952                           fsr1h	equ	0xFE2
  4953                           fsr1l	equ	0xFE1
  4954                           fsr2h	equ	0xFDA
  4955                           fsr2l	equ	0xFD9
  4956                           status	equ	0xFD8
  4957                           
  4958                           	psect	rparam
  4959  0000                     pclatu	equ	0xFFB
  4960                           pclath	equ	0xFFA
  4961                           tblptru	equ	0xFF8
  4962                           tblptrh	equ	0xFF7
  4963                           tblptrl	equ	0xFF6
  4964                           tablat	equ	0xFF5
  4965                           prodh	equ	0xFF4
  4966                           prodl	equ	0xFF3
  4967                           intcon	equ	0xFF2
  4968                           postinc0	equ	0xFEE
  4969                           fsr0h	equ	0xFEA
  4970                           fsr0l	equ	0xFE9
  4971                           wreg	equ	0xFE8
  4972                           fsr1h	equ	0xFE2
  4973                           fsr1l	equ	0xFE1
  4974                           fsr2h	equ	0xFDA
  4975                           fsr2l	equ	0xFD9
  4976                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         19
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     55      71
    BANK0           160     29      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _Sys_Cyc in COMRAM

    _Get_ADC6->i2___ftdiv
    i2___ftmul->___lwtoft
    i2___ftdiv->i2___ftmul
    ___lwtoft->i2___ftpack

Critical Paths under _main in BANK0

    _main->_TM1640_Show_Decimal
    _delay_ms->_delay1ms
    _Timer0_Init->_SetTimer0
    _TM1640_Show_Decimal->_TM1640_Writer_Dates
    _TM1640_Show_Decimal->___ftdiv
    _TM1640_Show_Decimal->___ftmul
    ___ftmul->___ftpack
    ___ftdiv->___ftpack
    ___awmod->___fttol
    _TM1640_Writer_Dates->___awmod
    _Init_TM1640->_TM1640_Writer_Byte
    _TM1640_Writer_Byte->_TM1640_Delay
    _TM1640_Stop->_TM1640_Delay
    _TM1640_Start->_TM1640_Delay
    _ADC6_Init->_OpenADC

Critical Paths under _Sys_Cyc in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Sys_Cyc in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Sys_Cyc in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Sys_Cyc in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Sys_Cyc in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Sys_Cyc in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Sys_Cyc in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Sys_Cyc in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Sys_Cyc in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Sys_Cyc in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Sys_Cyc in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Sys_Cyc in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Sys_Cyc in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Sys_Cyc in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Sys_Cyc in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Sys_Cyc in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    7529
                                             26 BANK0      3     3      0
                          _ADC6_Init
                        _GPIO_Config
                        _Init_TM1640
                           _Key_Init
                _TM1640_Show_Decimal
                        _Timer0_Init
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             2     0      2     213
                                              3 BANK0      2     0      2
                           _delay1ms
 ---------------------------------------------------------------------------------
 (2) _delay1ms                                             3     3      0     138
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0     148
                          _SetTimer0
 ---------------------------------------------------------------------------------
 (2) _SetTimer0                                            4     2      2     148
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _TM1640_Show_Decimal                                  3     0      3    6657
                                             23 BANK0      3     0      3
                _TM1640_Writer_Dates
                            ___awmod
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     464
                                              0 BANK0     15    11      4
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    2156
                                              8 BANK0     15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    2322
                                              8 BANK0     15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1590
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     720
                                             15 BANK0      6     2      4
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) _TM1640_Writer_Dates                                  2     1      1     762
                                             21 BANK0      2     1      1
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
                            ___awmod (ARG)
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (1) _Key_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_TM1640                                          0     0      0     272
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
 ---------------------------------------------------------------------------------
 (3) _TM1640_Writer_Byte                                   2     2      0     136
                                              2 BANK0      2     2      0
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (3) _TM1640_Stop                                          0     0      0      68
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (3) _TM1640_Start                                         0     0      0      68
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (4) _TM1640_Delay                                         2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC6_Init                                            0     0      0     238
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     238
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Sys_Cyc                                             14    14      0    2645
                                             41 COMRAM    14    14      0
                           _Get_ADC6
                       _Key_FSM_Scan
                            ___llmod
                        i2_SetTimer0
 ---------------------------------------------------------------------------------
 (6) i2_SetTimer0                                          4     2      2      94
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     371
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (6) _Key_FSM_Scan                                         0     0      0       0
                           _Key_Scan
 ---------------------------------------------------------------------------------
 (7) _Key_Scan                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _Get_ADC6                                             0     0      0    2180
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                           ___lwtoft
                          i2___ftdiv
                          i2___ftmul
 ---------------------------------------------------------------------------------
 (7) i2___ftmul                                           15     9      6     843
                                             11 COMRAM    15     9      6
                            _ReadADC (ARG)
                           ___lwtoft (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (7) i2___ftdiv                                           15     9      6     797
                                             26 COMRAM    15     9      6
                            _ReadADC (ARG)
                           ___lwtoft (ARG)
                          i2___ftmul (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (7) ___lwtoft                                             3     0      3     540
                                              8 COMRAM     3     0      3
                            _ReadADC (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (8) i2___ftpack                                           8     3      5     465
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (7) _ReadADC                                              4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC6_Init
     _OpenADC
   _GPIO_Config
   _Init_TM1640
     _TM1640_Start
       _TM1640_Delay
     _TM1640_Stop
       _TM1640_Delay
     _TM1640_Writer_Byte
       _TM1640_Delay
   _Key_Init
   _TM1640_Show_Decimal
     _TM1640_Writer_Dates
       _TM1640_Start
         _TM1640_Delay
       _TM1640_Stop
         _TM1640_Delay
       _TM1640_Writer_Byte
         _TM1640_Delay
       ___awmod (ARG)
         ___fttol (ARG)
       ___fttol (ARG)
     ___awmod
       ___fttol (ARG)
     ___ftdiv
       ___ftpack
     ___ftmul
       ___ftpack
     ___fttol
   _Timer0_Init
     _SetTimer0
   _delay_ms
     _delay1ms

 _Sys_Cyc (ROOT)
   _Get_ADC6
     _BusyADC
     _ConvertADC
     _ReadADC
     ___lwtoft
       _ReadADC (ARG)
       i2___ftpack (ARG)
     i2___ftdiv
       _ReadADC (ARG)
       ___lwtoft (ARG)
         _ReadADC (ARG)
         i2___ftpack (ARG)
       i2___ftmul (ARG)
         _ReadADC (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
       i2___ftpack (ARG)
     i2___ftmul
       _ReadADC (ARG)
       ___lwtoft (ARG)
         _ReadADC (ARG)
         i2___ftpack (ARG)
       i2___ftpack (ARG)
   _Key_FSM_Scan
     _Key_Scan
   ___llmod
   i2_SetTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1D      20       5       20.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     37      47       1       74.7%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      67      12        0.0%
DATA                 0      0      67       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Dec 08 18:43:34 2015

                ?_TM1640_Stop 0001  __size_of_TM1640_Writer_Dates 002A                 ?_TM1640_Delay 0001  
                 __CFG_BORV$3 000000                 ?_TM1640_Start 0001                    i2___ftpack 19F8  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                  __CFG_CP4$OFF 000000                  __CFG_CP5$OFF 000000  
                __CFG_CP6$OFF 000000                  __CFG_CP7$OFF 000000                           l306 1CA8  
                         l253 1F2E                           l238 1D54                           l239 1D6E  
                         l700 15AE                           l636 16CE                           _GIE 007F97  
                __CFG_CPB$OFF 000000                           _RC3 007C13                           _RC4 007C14  
                         _RE2 007C22                           _RE3 007C23                           _RE4 007C24  
                         _RD6 007C1E                           _RE5 007C25                           _RD7 007C1F  
                         _RE6 007C26                           _RE7 007C27                  __CFG_CPD$OFF 000000  
                         _PSA 007EAB                ??_Key_FSM_Scan 0001                  ___awmod@sign 0074  
                         wreg 000FE8                  ?_GPIO_Config 0001                  ___ftdiv@cntr 0071  
                ___ftdiv@sign 0076                          l2010 1482                          l2002 1444  
                        l2004 1456                          l2006 1464                          l2206 1D24  
                        l2156 1F5C                          l1702 1D88                          l2158 1F62  
                        l1720 167C                          l1712 1618                          l1730 16DA  
                        l1722 16AE                          l1714 1628                          l1660 1F22  
                        l1724 16BE                          l1716 165A                          l1708 1602  
                        l1804 1D9E                          l1662 1F26                          l1654 1F18  
                        l1910 129C                          l1736 16F8                          l1920 12E0  
                        l1850 150A                          l1914 12BC                          l1940 1ADC  
                        l1844 14D0                          l1924 1300                          l1780 1CC0  
                        l1950 1B10                          l1870 156C                          l1918 12D8  
                        l1696 1D72                          l1952 1B1A                          l1960 1B50  
                        l1944 1AEE                          l1880 15C0                          l1928 131C  
                        l1792 1CEE                          l1784 1CD4                          l1890 1212  
                        l1964 1B66                          l1956 1B40                          l1948 1B02  
                        l1788 1CE8                          l1796 1CF4                          l1974 137E  
                        l1896 124C                          l1992 1412                          l1996 1426  
                        _T0CS 007EAD                          _T0SE 007EAC                          u1421 14AC  
                        u1441 14E6                          u1610 13A4                          u1471 11EE  
                        u1615 139A                          u1491 1228                          u1591 135A  
                        _IPEN 007E87         ??_TM1640_Show_Decimal 007A                 ??_Init_TM1640 0064  
                        _main 1CFC                  ___ftpack@arg 0060                  ___ftpack@exp 0063  
                        fsr0h 000FEA                          fsr1h 000FE2                          fsr0l 000FE9  
                        fsr2h 000FDA                          fsr1l 000FE1                          fsr2l 000FD9  
                        pclat 000FFA                          prodh 000FF4                          prodl 000FF3  
                        start 0120                 __CFG_IESO$OFF 000000                  i2___ftdiv@f1 001B  
                i2___ftdiv@f2 001E                  i2___ftdiv@f3 0025                 __CFG_FOSC$HS1 000000  
               __CFG_MCLRE$ON 000000                  ___ftmul@cntr 0075                  i2___ftmul@f1 000C  
                i2___ftmul@f2 000F                  ___param_bank 000010                  ___ftmul@sign 0076  
             __end_of_BusyADC 1FAE               __end_of_ReadADC 1FA0                ??_TM1640_Delay 0060  
             __end_of_OpenADC 1CAC                  ___fttol@exp1 006E                  ___fttol@lval 006A  
              ??_TM1640_Start 0062                 __CFG_RETEN$ON 000000                         ?_main 0001  
             __end_of___awmod 1B72               __end_of_Sys_Cyc 0120               __end_of___ftdiv 15E8  
             __end_of___ftmul 1344               __end_of___llmod 1BE2               __end_of___fttol 1496  
                       _T0PS0 007EA8                         _T0PS1 007EA9                         _T0PS2 007EAA  
                       i2l110 17D2                         i2l191 00E6                         i2l700 19C2  
                       i2l188 008E                         i2l636 1A94                         i2l782 1BD0  
           __end_of_ADC6_Init 1F90                         _TMR0H 000FD7                         _TMR0L 000FD6  
                       _TRISD 000F95                         _TRISE 000F96                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
               __CFG_WRT4$OFF 000000                __CFG_EBRT0$OFF 000000                 __CFG_WRT5$OFF 000000  
              __CFG_EBRT1$OFF 000000                 __CFG_WRT6$OFF 000000                __CFG_EBRT2$OFF 000000  
               __CFG_WRT7$OFF 000000                __CFG_EBRT3$OFF 000000                __CFG_EBRT4$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBRT5$OFF 000000                __CFG_EBRT6$OFF 000000  
              __CFG_EBRT7$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBRTB$OFF 000000                 ___ftpack@sign 0064  
                  _ConvertADC 1FC4                 _Local_Key_FSM 003E                         tablat 000FF5  
                       status 000FD8            _TM1640_Writer_Byte 1D48              __end_of_Get_ADC6 1C48  
               i2___ftdiv@exp 0028            __size_ofi2___ftdiv 00EC            __size_ofi2___ftmul 0102  
             __initialization 1F38           __end_of_Init_TM1640 1EA6                  __end_of_main 1D48  
               i2___ftmul@exp 0015           ?_TM1640_Writer_Byte 0001              __end_of_Key_Init 1FC4  
            __end_of_Key_Scan 1E30                   ?i2___ftpack 0001                        ??_main 007A  
               ___fttol@sign1 0069                 __activetblptr 000001          ??_TM1640_Writer_Byte 0062  
                      _ADCON0 000FC2                        _ADCON1 000FC1                        _ADCON2 000FC0  
            ___llmod@dividend 0001                        _ADRESH 000FC4                        _ADRESL 000FC3  
                      _T08BIT 007EAE              __end_of___ftpack 1708                        i2l2100 18BC  
                      i2l1060 1E16                        i2l2030 195C               __CFG_BBSIZ$BB2K 000000  
                      i2l2024 1934                        i2l2104 18CE                        i2l1064 1E1E  
                      i2l1056 1E0E                        i2l2050 199C                        i2l2060 19D0  
                      i2l2108 18E4                        i2l1068 1E26                        i2l2070 1832  
                      i2l1510 17E0                        i2l1502 17C2                        i2l2090 188E  
                      i2l2162 1BE8                        i2l1522 17FE                        i2l1514 17EA  
                      i2l1506 17CC                        i2l1450 172C                        i2l1442 171C  
                      i2l2170 1B84                        i2l2226 0094                        i2l2076 185A  
                      i2l2172 1B92                        i2l2094 18A0                        i2l1518 17F4  
                      i2l1462 175A                        i2l1454 1734                        i2l1446 1724  
                      i2l1438 1714                        i2l2174 1B9A                        i2l1472 1774  
                      i2l2098 18B6                        i2l1482 178E                        i2l1466 1764  
                      i2l1458 1750                        i2l2178 1BC0                        i2l2186 1DDA  
                      i2l1492 17A8                        i2l1476 177E                        i2l1468 176A  
                      i2l1750 1A24                        i2l1486 1798                        i2l1478 1784  
                      i2l1760 1A88                        i2l1752 1A44                        i2l1744 1A08  
                      i2l1496 17B2                        i2l1488 179E                        i2l1498 17B8  
                      i2l1772 1AAE                        i2l1756 1A5C                        i2l1748 1A18  
                      i2l1766 1A9C                        i2l1758 1A7C                        u172_41 181A  
                      u174_41 1842                        u167_41 191C                 SetTimer0@_tmr 0060  
                      u169_41 1944              __end_of___lwtoft 1ECC                        _TMR0IE 007F95  
                      _TMR0IF 007F92                        _TMR0ON 007EAF                 TM1640_Delay@i 0061  
                   ??_BusyADC 0001                     ??_ReadADC 0003              __end_of_delay1ms 1CFC  
            __end_of_delay_ms 1F7A                 ??_Timer0_Init 0064                     ??_OpenADC 0062  
      TM1640_Writer_Byte@Date 0062                __CFG_XINST$OFF 000000          __end_of_Key_FSM_Scan 180A  
      TM1640_Writer_Byte@mask 0063                __CFG_STVREN$ON 000000                     ??___awmod 0073  
                   ??_Sys_Cyc 002A                     ??___ftdiv 006E                     ??___ftmul 006E  
                   ??___llmod 0009                     ??___fttol 0064            __size_of_SetTimer0 003E  
                      clear_0 1F46               ___awmod@divisor 0071               ___awmod@counter 0073  
        __size_of_TM1640_Stop 0024         ___ftmul@f3_as_product 0072             __end_ofi2___ftdiv 19F8  
           __end_ofi2___ftmul 190C                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8          __size_of_GPIO_Config 000C  
         _TM1640_Writer_Dates 1E30                   ?_ConvertADC 0001          __end_of_TM1640_Delay 1F38  
        __end_of_TM1640_Start 1F14                i2___ftdiv@cntr 0024                    __accesstop 0060  
     __end_of__initialization 1F4C                i2___ftdiv@sign 0029                   _Init_TM1640 1E80  
         __size_ofi2___ftpack 00C6                  ?i2_SetTimer0 0001                 ___rparam_used 000001  
                  ___ftdiv@f1 0068                    ___ftdiv@f2 006B                    ___ftdiv@f3 0072  
              i2___ftpack@arg 0001                i2___ftpack@exp 0004                    ___ftmul@f1 0068  
                  ___ftmul@f2 006B                    ___fttol@f1 0060                __pcstackCOMRAM 0001  
        ?_TM1640_Writer_Dates 0075                i2___ftmul@cntr 0019                i2___ftmul@sign 001A  
         __end_of_Timer0_Init 1E80                    ___lwtoft@c 0009                     ?_Get_ADC6 0001  
           __end_of_SetTimer0 1DD2                    __pbssBANK0 007D                     ?_Key_Init 0001  
                   ?_Key_Scan 0001               __CFG_PLLCFG$OFF 000000       TM1640_Writer_Dates@Addr 0076  
          __end_of_LED_Number 1011       TM1640_Writer_Dates@Date 0075         ??_TM1640_Writer_Dates 0076  
         __size_of_ConvertADC 0004                     ?___ftpack 0060                     ?___lwtoft 0009  
                   ?_delay1ms 0001                    ??_Get_ADC6 002A                     ?_delay_ms 0063  
 __end_of_TM1640_Show_Decimal 11D8                     _ADC6_Buff 007D                     _ADC6_Init 1F7A  
  TM1640_Show_Decimal@Numbers 0077                    ??_Key_Init 0060                    ??_Key_Scan 0001  
       __size_of_Key_FSM_Scan 0102                       _BusyADC 1FA0                       _ReadADC 1F90  
             __CFG_PWRTEN$OFF 000000                       _OpenADC 1C48                       __Hparam 0000  
                 _Timer0_Init 1E5A                       __Lparam 0000                       ___awmod 1ABE  
                     _Sys_Cyc 0008                       ___ftdiv 1496                       ___ftmul 11D8  
                     ___llmod 1B72                       ___fttol 1344                  __psmallconst 1000  
                     __pcinit 1F38                  ??i2___ftpack 0006                    ??___ftpack 0065  
     i2___ftmul@f3_as_product 0016                       __ramtop 1000                       __ptext0 1CFC  
                     __ptext1 1F5A                       __ptext2 1CAC                       __ptext3 1E5A  
                     __ptext4 1D94                       __ptext5 1012                       __ptext6 1344  
                     __ptext7 11D8                       __ptext8 1496                       __ptext9 15E8  
                  ??___lwtoft 000C              ___awmod@dividend 006F                    ??_delay1ms 0060  
       __size_of_TM1640_Delay 0024             __CFG_MSSPMSK$MSK7 000000                    ??_delay_ms 0065  
                _Key_FSM_Scan 1708         __size_of_TM1640_Start 0024                    ?_ADC6_Init 0001  
              OpenADC@config2 0060                OpenADC@config3 0061                       main@num 007A  
        end_of_initialization 1F4C            __end_ofi2___ftpack 1ABE          __size_ofi2_SetTimer0 0030  
                     postinc0 000FEE                  _TM1640_Delay 1F14                  _TM1640_Start 1EF0  
                   _PORTEbits 000F84              TM1640_Delay@Time 0060                     _TRISCbits 000F94  
 __size_of_TM1640_Writer_Byte 004C                     i2___ftdiv 190C                     i2___ftmul 180A  
           __CFG_SOSCSEL$HIGH 000000                  ??_ConvertADC 0001                  ?_Init_TM1640 0001  
                 ___ftdiv@exp 0075               i2___ftpack@sign 0005                   ___ftmul@exp 0071  
               ??_TM1640_Stop 0062            __end_of_ConvertADC 1FC8                 ??_GPIO_Config 0060  
         start_initialization 1F38                   ??_ADC6_Init 0065             __size_of_Get_ADC6 0066  
                  ?i2___ftdiv 001B                    ?i2___ftmul 000C               ___llmod@divisor 0005  
           __size_of_Key_Init 000A             __size_of_Key_Scan 002E               ___llmod@counter 0009  
                   _SetTimer0 1D94               i2SetTimer0@_tmr 0001                     _Timer_Cyc 0038  
         __end_of_TM1640_Stop 1EF0             __size_of___ftpack 0120                   __pbssCOMRAM 0038  
           __size_of___lwtoft 0026                 __pcstackBANK0 0060             __size_of_delay1ms 0050  
           __size_of_delay_ms 0020           __end_of_GPIO_Config 1FBA                      ?_BusyADC 0001  
                    ?_ReadADC 0001   __end_of_TM1640_Writer_Dates 1E5A                    ?_SetTimer0 0060  
                    ?_OpenADC 0060                  ?_Timer0_Init 0001             __CFG_CCP2MX$PORTC 000000  
                   __pintcode 0008                      ?___awmod 006F                      ?_Sys_Cyc 0001  
                    ?___ftdiv 0068                      ?___ftmul 0068                      ?___llmod 0001  
                    ?___fttol 0060                   __smallconst 1000                   _LED2_switch 003D  
                 ??i2___ftdiv 0021                   ??i2___ftmul 0012                     delay1ms@a 0060  
                   delay1ms@b 0061                     delay1ms@c 0062  __size_of_TM1640_Show_Decimal 01C6  
               OpenADC@config 0064                      _PIE1bits 000F9D          __size_of_Init_TM1640 0026  
                    i2u141_40 1FA8                      _PIR1bits 000F9E                   _TM1640_Stop 1ECC  
                  _ADCON0bits 000FC2                      _Get_ADC6 1BE2                   _GPIO_Config 1FAE  
                    _Key_Init 1FBA                      _Key_Scan 1E02                 ??i2_SetTimer0 0003  
                 ??_SetTimer0 0062              __size_of_BusyADC 000E              __size_of_ReadADC 0010  
                    __Hrparam 0000              __size_of_OpenADC 0064                      __Lrparam 0000  
                __Lsmallconst 1000            __CFG_BOREN$SBORDIS 000000              __size_of___awmod 00B4  
            __size_of_Sys_Cyc 0118              __size_of___ftdiv 0152              __size_of___ftmul 016C  
            __size_of___llmod 0070              __size_of___fttol 0152                      ___ftpack 15E8  
                    ___lwtoft 1EA6                      Sys_Cyc@t 003C                      _delay1ms 1CAC  
  __end_of_TM1640_Writer_Byte 1D94                      _delay_ms 1F5A                      __ptext10 1ABE  
                    __ptext11 1E30                      __ptext20 1C48                      __ptext12 1FBA  
                    __ptext13 1E80                      __ptext30 19F8                      __ptext22 1DD2  
                    __ptext14 1D48                      __ptext31 1F90                      __ptext23 1B72  
                    __ptext15 1ECC                      __ptext32 1FC4                      __ptext24 1708  
                    __ptext16 1EF0                      __ptext33 1FA0                      __ptext25 1E02  
                    __ptext17 1F14                      __ptext26 1BE2                      __ptext18 1FAE  
                    __ptext27 180A                      __ptext19 1F7A                      __ptext28 190C  
                    __ptext29 1EA6                 __size_of_main 004C           __CFG_RTCOSC$SOSCREF 000000  
        __size_of_Timer0_Init 0026           __end_ofi2_SetTimer0 1E02           __CFG_INTOSCSEL$HIGH 000000  
                 delay_ms@_ms 0063                    _LED_Number 1001            __CFG_WDTEN$SWDTDIS 000000  
                  _INTCONbits 000FF2                      intlevel2 0000            __CFG_WDTPS$1048576 000000  
         _TM1640_Show_Decimal 1012                 ?_Key_FSM_Scan 0001          ?_TM1640_Show_Decimal 0077  
         __CFG_BORPWR$ZPBORMV 000000            __size_of_ADC6_Init 0016                   i2_SetTimer0 1DD2  
