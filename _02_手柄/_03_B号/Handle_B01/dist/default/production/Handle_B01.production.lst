

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Dec 10 22:19:00 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F67K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    52  0000                     
    53                           	psect	smallconst
    54  001000                     __psmallconst:
    55                           	opt stack 0
    56  001000  00                 	db	0
    57  001001                     _LED_Number:
    58                           	opt stack 0
    59  001001  3F                 	db	63
    60  001002  06                 	db	6
    61  001003  5B                 	db	91
    62  001004  4F                 	db	79
    63  001005  66                 	db	102
    64  001006  6D                 	db	109
    65  001007  7D                 	db	125
    66  001008  07                 	db	7
    67  001009  7F                 	db	127
    68  00100A  6F                 	db	111
    69  00100B  77                 	db	119
    70  00100C  7C                 	db	124
    71  00100D  39                 	db	57
    72  00100E  5E                 	db	94
    73  00100F  79                 	db	121
    74  001010  71                 	db	113
    75  001011                     __end_of_LED_Number:
    76                           	opt stack 0
    77  0000                     _ANCON2	set	3875
    78  0000                     _RCREG2	set	3869
    79  0000                     _RCSTA2	set	3874
    80  0000                     _RCSTA2bits	set	3874
    81  0000                     _SPBRG2	set	3870
    82  0000                     _SPBRGH2	set	3871
    83  0000                     _TXREG2	set	3868
    84  0000                     _TXSTA2	set	3873
    85  0000                     _TXSTA2bits	set	3873
    86  0000                     _ADCON0	set	4034
    87  0000                     _ADCON0bits	set	4034
    88  0000                     _ADCON1	set	4033
    89  0000                     _ADCON2	set	4032
    90  0000                     _ADRESH	set	4036
    91  0000                     _ADRESL	set	4035
    92  0000                     _INTCON	set	4082
    93  0000                     _INTCONbits	set	4082
    94  0000                     _PIE1bits	set	3997
    95  0000                     _PIE3bits	set	4003
    96  0000                     _PIR1bits	set	3998
    97  0000                     _PORTEbits	set	3972
    98  0000                     _TMR0H	set	4055
    99  0000                     _TMR0L	set	4054
   100  0000                     _TRISCbits	set	3988
   101  0000                     _TRISD	set	3989
   102  0000                     _TRISE	set	3990
   103  0000                     _TRISGbits	set	3992
   104  0000                     _GIE	set	32663
   105  0000                     _IPEN	set	32391
   106  0000                     _PSA	set	32427
   107  0000                     _RC2IF	set	32037
   108  0000                     _RC3	set	31763
   109  0000                     _RC4	set	31764
   110  0000                     _RD6	set	31774
   111  0000                     _RD7	set	31775
   112  0000                     _RE2	set	31778
   113  0000                     _RE3	set	31779
   114  0000                     _RE4	set	31780
   115  0000                     _RE5	set	31781
   116  0000                     _RE6	set	31782
   117  0000                     _RE7	set	31783
   118  0000                     _RG3	set	31795
   119  0000                     _T08BIT	set	32430
   120  0000                     _T0CS	set	32429
   121  0000                     _T0PS0	set	32424
   122  0000                     _T0PS1	set	32425
   123  0000                     _T0PS2	set	32426
   124  0000                     _T0SE	set	32428
   125  0000                     _TMR0IE	set	32661
   126  0000                     _TMR0IF	set	32658
   127  0000                     _TMR0ON	set	32431
   128                           
   129                           ; #config settings
   130  001011  00                 	db	0	; dummy byte at the end
   131  0000                     
   132                           	psect	cinit
   133  001AEA                     __pcinit:
   134                           	opt stack 0
   135  001AEA                     start_initialization:
   136                           	opt stack 0
   137  001AEA                     __initialization:
   138                           	opt stack 0
   139                           
   140                           ; Clear objects allocated to BANK0 (3 bytes)
   141  001AEA  0100               	movlb	0
   142  001AEC  6B7A               	clrf	(__pbssBANK0+2)& (0+255),b
   143  001AEE  6B79               	clrf	(__pbssBANK0+1)& (0+255),b
   144  001AF0  6B78               	clrf	__pbssBANK0& (0+255),b
   145                           
   146                           ; Clear objects allocated to COMRAM (25 bytes)
   147  001AF2  EE00  F02D         	lfsr	0,__pbssCOMRAM
   148  001AF6  0E19               	movlw	25
   149  001AF8                     clear_0:
   150  001AF8  6AEE               	clrf	postinc0,c
   151  001AFA  06E8               	decf	wreg,f,c
   152  001AFC  E1FD               	bnz	clear_0
   153  001AFE                     end_of_initialization:
   154                           	opt stack 0
   155  001AFE                     __end_of__initialization:
   156                           	opt stack 0
   157  001AFE  0E00               	movlw	low (__Lsmallconst shr (0+16))
   158  001B00  6EF8               	movwf	tblptru,c
   159  001B02  0E10               	movlw	high __Lsmallconst
   160  001B04  6EF7               	movwf	tblptrh,c
   161  001B06  0100               	movlb	0
   162  001B08  EF3F  F00C         	goto	_main	;jump to C main() function
   163                           tblptru	equ	0xFF8
   164                           tblptrh	equ	0xFF7
   165                           postinc0	equ	0xFEE
   166                           wreg	equ	0xFE8
   167                           
   168                           	psect	bssCOMRAM
   169  00002D                     __pbssCOMRAM:
   170                           	opt stack 0
   171  00002D                     _Timer_Cyc:
   172                           	opt stack 0
   173  00002D                     	ds	4
   174  000031                     _Handle_01_Switch:
   175                           	opt stack 0
   176  000031                     	ds	3
   177  000034                     _USART2_ReceiveBuff:
   178                           	opt stack 0
   179  000034                     	ds	2
   180  000036                     _USART2_TendBuff:
   181                           	opt stack 0
   182  000036                     	ds	2
   183  000038                     Sys_Cyc@_overturn_1Khz:
   184                           	opt stack 0
   185  000038                     	ds	1
   186  000039                     Sys_Cyc@_overturn_LED:
   187                           	opt stack 0
   188  000039                     	ds	1
   189  00003A                     _LED2_switch:
   190                           	opt stack 0
   191  00003A                     	ds	1
   192  00003B                     _USART2_Status:
   193                           	opt stack 0
   194  00003B                     	ds	1
   195  00003C                     _Local_Key_FSM:
   196                           	opt stack 0
   197  00003C                     	ds	10
   198                           tblptru	equ	0xFF8
   199                           tblptrh	equ	0xFF7
   200                           postinc0	equ	0xFEE
   201                           wreg	equ	0xFE8
   202                           
   203                           	psect	bssBANK0
   204  000078                     __pbssBANK0:
   205                           	opt stack 0
   206  000078                     _ADC6_Buff:
   207                           	opt stack 0
   208  000078                     	ds	3
   209                           tblptru	equ	0xFF8
   210                           tblptrh	equ	0xFF7
   211                           postinc0	equ	0xFEE
   212                           wreg	equ	0xFE8
   213                           
   214                           	psect	cstackBANK0
   215  000060                     __pcstackBANK0:
   216                           	opt stack 0
   217  000060                     ___ftmul@exp:
   218                           	opt stack 0
   219                           
   220                           ; 1 bytes @ 0x0
   221  000060                     	ds	1
   222  000061                     ___ftmul@f3_as_product:
   223                           	opt stack 0
   224                           
   225                           ; 3 bytes @ 0x1
   226  000061                     	ds	3
   227  000064                     ___ftmul@cntr:
   228                           	opt stack 0
   229                           
   230                           ; 1 bytes @ 0x4
   231  000064                     	ds	1
   232  000065                     ___ftmul@sign:
   233                           	opt stack 0
   234                           
   235                           ; 1 bytes @ 0x5
   236  000065                     	ds	1
   237  000066                     ?___ftdiv:
   238                           	opt stack 0
   239  000066                     ___ftdiv@f1:
   240                           	opt stack 0
   241                           
   242                           ; 3 bytes @ 0x6
   243  000066                     	ds	3
   244  000069                     ___ftdiv@f2:
   245                           	opt stack 0
   246                           
   247                           ; 3 bytes @ 0x9
   248  000069                     	ds	3
   249  00006C                     ??___ftdiv:
   250                           
   251                           ; 0 bytes @ 0xC
   252  00006C                     	ds	3
   253  00006F                     ___ftdiv@cntr:
   254                           	opt stack 0
   255                           
   256                           ; 1 bytes @ 0xF
   257  00006F                     	ds	1
   258  000070                     ___ftdiv@f3:
   259                           	opt stack 0
   260                           
   261                           ; 3 bytes @ 0x10
   262  000070                     	ds	3
   263  000073                     ___ftdiv@exp:
   264                           	opt stack 0
   265                           
   266                           ; 1 bytes @ 0x13
   267  000073                     	ds	1
   268  000074                     ___ftdiv@sign:
   269                           	opt stack 0
   270                           
   271                           ; 1 bytes @ 0x14
   272  000074                     	ds	1
   273  000075                     main@num:
   274                           	opt stack 0
   275                           
   276                           ; 3 bytes @ 0x15
   277  000075                     	ds	3
   278                           tblptru	equ	0xFF8
   279                           tblptrh	equ	0xFF7
   280                           postinc0	equ	0xFEE
   281                           wreg	equ	0xFE8
   282                           
   283                           	psect	cstackCOMRAM
   284  000001                     __pcstackCOMRAM:
   285                           	opt stack 0
   286  000001                     ?___llmod:
   287                           	opt stack 0
   288  000001                     Delay_1Khz@a:
   289                           	opt stack 0
   290  000001                     i2SetTimer0@_tmr:
   291                           	opt stack 0
   292  000001                     ___llmod@dividend:
   293                           	opt stack 0
   294                           
   295                           ; 4 bytes @ 0x0
   296  000001                     	ds	1
   297  000002                     Delay_1Khz@b:
   298                           	opt stack 0
   299                           
   300                           ; 1 bytes @ 0x1
   301  000002                     	ds	1
   302  000003                     ??i2_SetTimer0:
   303  000003                     Delay_1Khz@c:
   304                           	opt stack 0
   305                           
   306                           ; 1 bytes @ 0x2
   307  000003                     	ds	2
   308  000005                     ___llmod@divisor:
   309                           	opt stack 0
   310                           
   311                           ; 4 bytes @ 0x4
   312  000005                     	ds	4
   313  000009                     ___llmod@counter:
   314                           	opt stack 0
   315                           
   316                           ; 1 bytes @ 0x8
   317  000009                     	ds	1
   318  00000A                     ??_Sys_Cyc:
   319                           
   320                           ; 0 bytes @ 0x9
   321  00000A                     	ds	14
   322  000018                     Sys_Cyc@_pulse:
   323                           	opt stack 0
   324                           
   325                           ; 1 bytes @ 0x17
   326  000018                     	ds	1
   327  000019                     ??_Key_FSM_Read:
   328  000019                     ?_ReadADC:
   329                           	opt stack 0
   330  000019                     ?_Busy2USART:
   331                           	opt stack 0
   332  000019                     ?___lwdiv:
   333                           	opt stack 0
   334  000019                     ?___lwmod:
   335                           	opt stack 0
   336  000019                     ?___ftpack:
   337                           	opt stack 0
   338  000019                     delay1ms@a:
   339                           	opt stack 0
   340  000019                     TM1640_Delay@Time:
   341                           	opt stack 0
   342  000019                     OpenADC@config2:
   343                           	opt stack 0
   344  000019                     SetTimer0@_tmr:
   345                           	opt stack 0
   346  000019                     Open2USART@spbrg:
   347                           	opt stack 0
   348  000019                     ___lwdiv@dividend:
   349                           	opt stack 0
   350  000019                     ___lwmod@dividend:
   351                           	opt stack 0
   352  000019                     ___ftpack@arg:
   353                           	opt stack 0
   354                           
   355                           ; 3 bytes @ 0x18
   356  000019                     	ds	1
   357  00001A                     delay1ms@b:
   358                           	opt stack 0
   359  00001A                     TM1640_Delay@i:
   360                           	opt stack 0
   361  00001A                     OpenADC@config3:
   362                           	opt stack 0
   363                           
   364                           ; 1 bytes @ 0x19
   365  00001A                     	ds	1
   366  00001B                     ??_SetTimer0:
   367  00001B                     ??_OpenADC:
   368  00001B                     ??_ReadADC:
   369  00001B                     delay1ms@c:
   370                           	opt stack 0
   371  00001B                     TM1640_Writer_Byte@Date:
   372                           	opt stack 0
   373  00001B                     Open2USART@config:
   374                           	opt stack 0
   375  00001B                     ___lwdiv@divisor:
   376                           	opt stack 0
   377  00001B                     ___lwmod@divisor:
   378                           	opt stack 0
   379                           
   380                           ; 2 bytes @ 0x1A
   381  00001B                     	ds	1
   382  00001C                     TM1640_Writer_Byte@mask:
   383                           	opt stack 0
   384  00001C                     ___ftpack@exp:
   385                           	opt stack 0
   386  00001C                     delay_ms@_ms:
   387                           	opt stack 0
   388                           
   389                           ; 2 bytes @ 0x1B
   390  00001C                     	ds	1
   391  00001D                     Key_FSM_Read@temp:
   392                           	opt stack 0
   393  00001D                     OpenADC@config:
   394                           	opt stack 0
   395  00001D                     ___ftpack@sign:
   396                           	opt stack 0
   397  00001D                     ___lwdiv@counter:
   398                           	opt stack 0
   399  00001D                     ___lwmod@counter:
   400                           	opt stack 0
   401                           
   402                           ; 1 bytes @ 0x1C
   403  00001D                     	ds	1
   404  00001E                     ??___ftpack:
   405  00001E                     Key_FSM_Read@key_num:
   406                           	opt stack 0
   407  00001E                     TM1640_Writer_Dates@Date:
   408                           	opt stack 0
   409  00001E                     ___lwdiv@quotient:
   410                           	opt stack 0
   411                           
   412                           ; 2 bytes @ 0x1D
   413  00001E                     	ds	1
   414  00001F                     TM1640_Writer_Dates@Addr:
   415                           	opt stack 0
   416                           
   417                           ; 1 bytes @ 0x1E
   418  00001F                     	ds	1
   419  000020                     TM1640_Show_integer@Numbers:
   420                           	opt stack 0
   421                           
   422                           ; 2 bytes @ 0x1F
   423  000020                     	ds	1
   424  000021                     ?___lwtoft:
   425                           	opt stack 0
   426  000021                     ___lwtoft@c:
   427                           	opt stack 0
   428                           
   429                           ; 2 bytes @ 0x20
   430  000021                     	ds	1
   431  000022                     
   432                           ; 0 bytes @ 0x21
   433  000022                     	ds	2
   434  000024                     ?___ftmul:
   435                           	opt stack 0
   436  000024                     ___ftmul@f1:
   437                           	opt stack 0
   438                           
   439                           ; 3 bytes @ 0x23
   440  000024                     	ds	3
   441  000027                     ___ftmul@f2:
   442                           	opt stack 0
   443                           
   444                           ; 3 bytes @ 0x26
   445  000027                     	ds	3
   446  00002A                     ??___ftmul:
   447                           
   448                           ; 0 bytes @ 0x29
   449  00002A                     	ds	3
   450  00002D                     tblptru	equ	0xFF8
   451                           tblptrh	equ	0xFF7
   452                           postinc0	equ	0xFEE
   453                           wreg	equ	0xFE8
   454                           
   455                           ; 0 bytes @ 0x2C
   456 ;;
   457 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   458 ;;
   459 ;; *************** function _main *****************
   460 ;; Defined at:
   461 ;;		line 37 in file "_01_USER/main.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;		None
   464 ;; Auto vars:     Size  Location     Type
   465 ;;  num             3   21[BANK0 ] float 
   466 ;; Return value:  Size  Location     Type
   467 ;;                  2   20[None  ] int 
   468 ;; Registers used:
   469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   476 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   478 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   479 ;;Total ram usage:        3 bytes
   480 ;; Hardware stack levels required when called:    8
   481 ;; This function calls:
   482 ;;		_ADC6_Init
   483 ;;		_GPIO_Config
   484 ;;		_Init_TM1640
   485 ;;		_Key_Init
   486 ;;		_Manage_Message
   487 ;;		_My_USART_Init
   488 ;;		_Run
   489 ;;		_Show_Result
   490 ;;		_Timer0_Init
   491 ;; This function is called by:
   492 ;;		Startup code after reset
   493 ;; This function uses a non-reentrant model
   494 ;;
   495                           
   496                           	psect	text0
   497  00187E                     __ptext0:
   498                           	opt stack 0
   499  00187E                     _main:
   500                           	opt stack 23
   501                           
   502                           ;main.c: 40: float num = 0;
   503                           
   504                           ;incstack = 0
   505  00187E  0E00               	movlw	0
   506  001880  0100               	movlb	0	; () banked
   507  001882  6F75               	movwf	main@num& (0+255),b
   508  001884  0E00               	movlw	0
   509  001886  0100               	movlb	0	; () banked
   510  001888  6F76               	movwf	(main@num+1)& (0+255),b
   511  00188A  0E00               	movlw	0
   512  00188C  0100               	movlb	0	; () banked
   513  00188E  6F77               	movwf	(main@num+2)& (0+255),b
   514                           
   515                           ; BSR set to: 0
   516                           ;main.c: 43: GPIO_Config();
   517  001890  ECEF  F00D         	call	_GPIO_Config	;wreg free
   518                           
   519                           ;main.c: 44: Key_Init();
   520  001894  ECF5  F00D         	call	_Key_Init	;wreg free
   521                           
   522                           ;main.c: 45: Timer0_Init();
   523  001898  EC3F  F00D         	call	_Timer0_Init	;wreg free
   524                           
   525                           ;main.c: 46: Init_TM1640();
   526  00189C  EC2C  F00D         	call	_Init_TM1640	;wreg free
   527                           
   528                           ;main.c: 47: ADC6_Init();
   529  0018A0  ECD0  F00D         	call	_ADC6_Init	;wreg free
   530                           
   531                           ;main.c: 48: My_USART_Init();
   532  0018A4  EC97  F00D         	call	_My_USART_Init	;wreg free
   533  0018A8  D000               	goto	l2678
   534  0018AA                     l2678:
   535                           
   536                           ;main.c: 52: {
   537                           ;main.c: 53: Manage_Message();
   538  0018AA  EC7D  F00C         	call	_Manage_Message	;wreg free
   539                           
   540                           ;main.c: 54: Run();
   541  0018AE  EC1B  F00C         	call	_Run	;wreg free
   542                           
   543                           ;main.c: 55: Show_Result();
   544  0018B2  ECE1  F00D         	call	_Show_Result	;wreg free
   545  0018B6  D7F9               	goto	l2678
   546                           
   547                           ;main.c: 57: }
   548                           ;main.c: 60: return 0;
   549                           ;	Return value of _main is never used
   550  0018B8  EFA5  F000         	goto	start
   551  0018BC                     __end_of_main:
   552                           	opt stack 0
   553                           tblptru	equ	0xFF8
   554                           tblptrh	equ	0xFF7
   555                           postinc0	equ	0xFEE
   556                           wreg	equ	0xFE8
   557                           
   558 ;; *************** function _Timer0_Init *****************
   559 ;; Defined at:
   560 ;;		line 42 in file "_01_USER/My_Timer.c"
   561 ;; Parameters:    Size  Location     Type
   562 ;;		None
   563 ;; Auto vars:     Size  Location     Type
   564 ;;		None
   565 ;; Return value:  Size  Location     Type
   566 ;;		None               void
   567 ;; Registers used:
   568 ;;		wreg, status,2, status,0, cstack
   569 ;; Tracked objects:
   570 ;;		On entry : 0/0
   571 ;;		On exit  : 0/0
   572 ;;		Unchanged: 0/0
   573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   578 ;;Total ram usage:        0 bytes
   579 ;; Hardware stack levels used:    1
   580 ;; Hardware stack levels required when called:    4
   581 ;; This function calls:
   582 ;;		_SetTimer0
   583 ;; This function is called by:
   584 ;;		_main
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588                           	psect	text1
   589  001A7E                     __ptext1:
   590                           	opt stack 0
   591  001A7E                     _Timer0_Init:
   592                           	opt stack 26
   593                           
   594                           ;My_Timer.c: 44: T08BIT = 0;
   595                           
   596                           ;incstack = 0
   597  001A7E  9CD5               	bcf	4053,6,c	;volatile
   598                           
   599                           ;My_Timer.c: 45: T0CS = 0;
   600  001A80  9AD5               	bcf	4053,5,c	;volatile
   601                           
   602                           ;My_Timer.c: 46: T0SE = 0;
   603  001A82  98D5               	bcf	4053,4,c	;volatile
   604                           
   605                           ;My_Timer.c: 47: PSA = 0;
   606  001A84  96D5               	bcf	4053,3,c	;volatile
   607                           
   608                           ;My_Timer.c: 48: T0PS2 = 1;
   609  001A86  84D5               	bsf	4053,2,c	;volatile
   610                           
   611                           ;My_Timer.c: 49: T0PS1 = 1;
   612  001A88  82D5               	bsf	4053,1,c	;volatile
   613                           
   614                           ;My_Timer.c: 50: T0PS0 = 1;
   615  001A8A  80D5               	bsf	4053,0,c	;volatile
   616                           
   617                           ;My_Timer.c: 64: SetTimer0(1);
   618  001A8C  0E00               	movlw	0
   619  001A8E  6E1A               	movwf	SetTimer0@_tmr+1,c
   620  001A90  0E01               	movlw	1
   621  001A92  6E19               	movwf	SetTimer0@_tmr,c
   622  001A94  ECD2  F00C         	call	_SetTimer0	;wreg free
   623                           
   624                           ;My_Timer.c: 65: TMR0ON = 1;
   625  001A98  8ED5               	bsf	4053,7,c	;volatile
   626                           
   627                           ;My_Timer.c: 66: TMR0IE = 1;
   628  001A9A  8AF2               	bsf	intcon,5,c	;volatile
   629                           
   630                           ;My_Timer.c: 67: IPEN = 0;GIE = 1;
   631  001A9C  9ED0               	bcf	4048,7,c	;volatile
   632  001A9E  8EF2               	bsf	intcon,7,c	;volatile
   633  001AA0  0012               	return		;funcret
   634  001AA2                     __end_of_Timer0_Init:
   635                           	opt stack 0
   636                           tblptru	equ	0xFF8
   637                           tblptrh	equ	0xFF7
   638                           intcon	equ	0xFF2
   639                           postinc0	equ	0xFEE
   640                           wreg	equ	0xFE8
   641                           
   642 ;; *************** function _SetTimer0 *****************
   643 ;; Defined at:
   644 ;;		line 80 in file "_01_USER/My_Timer.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;  _tmr            2   24[COMRAM] unsigned int 
   647 ;; Auto vars:     Size  Location     Type
   648 ;;		None
   649 ;; Return value:  Size  Location     Type
   650 ;;		None               void
   651 ;; Registers used:
   652 ;;		wreg, status,2, status,0
   653 ;; Tracked objects:
   654 ;;		On entry : 0/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   658 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   660 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   661 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   662 ;;Total ram usage:        4 bytes
   663 ;; Hardware stack levels used:    1
   664 ;; Hardware stack levels required when called:    3
   665 ;; This function calls:
   666 ;;		Nothing
   667 ;; This function is called by:
   668 ;;		_Timer0_Init
   669 ;; This function uses a non-reentrant model
   670 ;;
   671                           
   672                           	psect	text2
   673  0019A4                     __ptext2:
   674                           	opt stack 0
   675  0019A4                     _SetTimer0:
   676                           	opt stack 26
   677                           
   678                           ;My_Timer.c: 82: if(_tmr > 0xffff) _tmr = 0xffff;
   679                           
   680                           ;incstack = 0
   681  0019A4  D003               	goto	l2542
   682  0019A6  6819               	setf	SetTimer0@_tmr,c
   683  0019A8  681A               	setf	SetTimer0@_tmr+1,c
   684  0019AA  D000               	goto	l2542
   685  0019AC                     l2542:
   686                           
   687                           ;My_Timer.c: 83: _tmr=0xffff-_tmr;
   688  0019AC  C019  F01B         	movff	SetTimer0@_tmr,??_SetTimer0
   689  0019B0  C01A  F01C         	movff	SetTimer0@_tmr+1,??_SetTimer0+1
   690  0019B4  1E1B               	comf	??_SetTimer0,f,c
   691  0019B6  1E1C               	comf	??_SetTimer0+1,f,c
   692  0019B8  4A1B               	infsnz	??_SetTimer0,f,c
   693  0019BA  2A1C               	incf	??_SetTimer0+1,f,c
   694  0019BC  0EFF               	movlw	255
   695  0019BE  241B               	addwf	??_SetTimer0,w,c
   696  0019C0  6E19               	movwf	SetTimer0@_tmr,c
   697  0019C2  0EFF               	movlw	255
   698  0019C4  201C               	addwfc	??_SetTimer0+1,w,c
   699  0019C6  6E1A               	movwf	SetTimer0@_tmr+1,c
   700                           
   701                           ;My_Timer.c: 84: TMR0H = _tmr/256;
   702  0019C8  501A               	movf	SetTimer0@_tmr+1,w,c
   703  0019CA  6ED7               	movwf	4055,c	;volatile
   704                           
   705                           ;My_Timer.c: 85: TMR0L = _tmr%256;
   706  0019CC  C019  FFD6         	movff	SetTimer0@_tmr,4054	;volatile
   707                           
   708                           ;My_Timer.c: 86: TMR0IF = 0;
   709  0019D0  94F2               	bcf	intcon,2,c	;volatile
   710  0019D2  0012               	return		;funcret
   711  0019D4                     __end_of_SetTimer0:
   712                           	opt stack 0
   713                           tblptru	equ	0xFF8
   714                           tblptrh	equ	0xFF7
   715                           intcon	equ	0xFF2
   716                           postinc0	equ	0xFEE
   717                           wreg	equ	0xFE8
   718                           
   719 ;; *************** function _Show_Result *****************
   720 ;; Defined at:
   721 ;;		line 97 in file "_01_USER/Run.c"
   722 ;; Parameters:    Size  Location     Type
   723 ;;		None
   724 ;; Auto vars:     Size  Location     Type
   725 ;;		None
   726 ;; Return value:  Size  Location     Type
   727 ;;		None               void
   728 ;; Registers used:
   729 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   730 ;; Tracked objects:
   731 ;;		On entry : 0/0
   732 ;;		On exit  : 0/0
   733 ;;		Unchanged: 0/0
   734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   739 ;;Total ram usage:        0 bytes
   740 ;; Hardware stack levels used:    1
   741 ;; Hardware stack levels required when called:    7
   742 ;; This function calls:
   743 ;;		_TM1640_Show_integer
   744 ;; This function is called by:
   745 ;;		_main
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           	psect	text3
   750  001BC2                     __ptext3:
   751                           	opt stack 0
   752  001BC2                     _Show_Result:
   753                           	opt stack 23
   754                           
   755                           ;Run.c: 102: TM1640_Show_integer( USART2_ReceiveBuff );
   756                           
   757                           ;incstack = 0
   758  001BC2  C034  F020         	movff	_USART2_ReceiveBuff,TM1640_Show_integer@Numbers
   759  001BC6  C035  F021         	movff	_USART2_ReceiveBuff+1,TM1640_Show_integer@Numbers+1
   760  001BCA  EC49  F009         	call	_TM1640_Show_integer	;wreg free
   761  001BCE  0012               	return		;funcret
   762  001BD0                     __end_of_Show_Result:
   763                           	opt stack 0
   764                           tblptru	equ	0xFF8
   765                           tblptrh	equ	0xFF7
   766                           intcon	equ	0xFF2
   767                           postinc0	equ	0xFEE
   768                           wreg	equ	0xFE8
   769                           
   770 ;; *************** function _Run *****************
   771 ;; Defined at:
   772 ;;		line 46 in file "_01_USER/Run.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;		None
   775 ;; Auto vars:     Size  Location     Type
   776 ;;		None
   777 ;; Return value:  Size  Location     Type
   778 ;;		None               void
   779 ;; Registers used:
   780 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   790 ;;Total ram usage:        0 bytes
   791 ;; Hardware stack levels used:    1
   792 ;; Hardware stack levels required when called:    7
   793 ;; This function calls:
   794 ;;		_Busy2USART
   795 ;;		_Get_ADC6
   796 ;;		_TM1640_Show_integer
   797 ;;		_delay_ms
   798 ;; This function is called by:
   799 ;;		_main
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           
   803                           	psect	text4
   804  001836                     __ptext4:
   805                           	opt stack 0
   806  001836                     _Run:
   807                           	opt stack 23
   808                           
   809                           ;Run.c: 50: if( Handle_01_Switch.ADC6 ) Get_ADC6();
   810                           
   811                           ;incstack = 0
   812  001836  5032               	movf	_Handle_01_Switch+1,w,c
   813  001838  B4D8               	btfsc	status,2,c
   814  00183A  D003               	goto	l2650
   815  00183C  EC6A  F00B         	call	_Get_ADC6	;wreg free
   816  001840  D000               	goto	l2650
   817  001842                     l2650:
   818                           
   819                           ;Run.c: 53: if ( Handle_01_Switch.Usart_OneDate )
   820  001842  5033               	movf	_Handle_01_Switch+2,w,c
   821  001844  B4D8               	btfsc	status,2,c
   822  001846  0012               	return	
   823                           
   824                           ;Run.c: 54: {
   825                           ;Run.c: 55: Handle_01_Switch.Usart_OneDate = 0;
   826  001848  0E00               	movlw	0
   827  00184A  6E33               	movwf	_Handle_01_Switch+2,c
   828                           
   829                           ;Run.c: 56: RG3 = 0;
   830  00184C  9686               	bcf	3974,3,c	;volatile
   831                           
   832                           ;Run.c: 57: while( Busy2USART());
   833  00184E  D000               	goto	l2656
   834  001850                     l2656:
   835  001850  ECA8  F00D         	call	_Busy2USART	;wreg free
   836  001854  5019               	movf	?_Busy2USART,w,c
   837  001856  101A               	iorwf	?_Busy2USART+1,w,c
   838  001858  A4D8               	btfss	status,2,c
   839  00185A  D7FA               	goto	l2656
   840                           
   841                           ;Run.c: 58: TXREG2 = USART2_TendBuff;
   842  00185C  C036  FF1C         	movff	_USART2_TendBuff,3868	;volatile
   843                           
   844                           ;Run.c: 59: RG3 = 1;
   845  001860  8686               	bsf	3974,3,c	;volatile
   846                           
   847                           ;Run.c: 61: TM1640_Show_integer( 1111 );
   848  001862  0E04               	movlw	4
   849  001864  6E21               	movwf	TM1640_Show_integer@Numbers+1,c
   850  001866  0E57               	movlw	87
   851  001868  6E20               	movwf	TM1640_Show_integer@Numbers,c
   852  00186A  EC49  F009         	call	_TM1640_Show_integer	;wreg free
   853                           
   854                           ;Run.c: 62: delay_ms( 300 );
   855  00186E  0E01               	movlw	1
   856  001870  6E1D               	movwf	delay_ms@_ms+1,c
   857  001872  0E2C               	movlw	44
   858  001874  6E1C               	movwf	delay_ms@_ms,c
   859  001876  ECB6  F00D         	call	_delay_ms	;wreg free
   860  00187A  0012               	return	
   861  00187C  0012               	return		;funcret
   862  00187E                     __end_of_Run:
   863                           	opt stack 0
   864                           tblptru	equ	0xFF8
   865                           tblptrh	equ	0xFF7
   866                           intcon	equ	0xFF2
   867                           postinc0	equ	0xFEE
   868                           wreg	equ	0xFE8
   869                           status	equ	0xFD8
   870                           
   871 ;; *************** function _delay_ms *****************
   872 ;; Defined at:
   873 ;;		line 35 in file "_01_USER/My_Delay.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;  _ms             2   27[COMRAM] unsigned int 
   876 ;; Auto vars:     Size  Location     Type
   877 ;;		None
   878 ;; Return value:  Size  Location     Type
   879 ;;		None               void
   880 ;; Registers used:
   881 ;;		wreg, status,2, status,0, cstack
   882 ;; Tracked objects:
   883 ;;		On entry : 0/0
   884 ;;		On exit  : 0/0
   885 ;;		Unchanged: 0/0
   886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   887 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   890 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   891 ;;Total ram usage:        2 bytes
   892 ;; Hardware stack levels used:    1
   893 ;; Hardware stack levels required when called:    4
   894 ;; This function calls:
   895 ;;		_delay1ms
   896 ;; This function is called by:
   897 ;;		_Run
   898 ;; This function uses a non-reentrant model
   899 ;;
   900                           
   901                           	psect	text5
   902  001B6C                     __ptext5:
   903                           	opt stack 0
   904  001B6C                     _delay_ms:
   905                           	opt stack 25
   906                           
   907                           ;My_Delay.c: 37: while(_ms--) delay1ms();
   908                           
   909                           ;incstack = 0
   910  001B6C  D003               	goto	l2464
   911  001B6E                     l2462:
   912  001B6E  EC9A  F00C         	call	_delay1ms	;wreg free
   913  001B72  D000               	goto	l2464
   914  001B74                     l2464:
   915  001B74  061C               	decf	delay_ms@_ms,f,c
   916  001B76  A0D8               	btfss	status,0,c
   917  001B78  061D               	decf	delay_ms@_ms+1,f,c
   918  001B7A  281C               	incf	delay_ms@_ms,w,c
   919  001B7C  E1F8               	bnz	l2462
   920  001B7E  281D               	incf	delay_ms@_ms+1,w,c
   921  001B80  A4D8               	btfss	status,2,c
   922  001B82  D7F5               	goto	l2462
   923  001B84  0012               	return		;funcret
   924  001B86                     __end_of_delay_ms:
   925                           	opt stack 0
   926                           tblptru	equ	0xFF8
   927                           tblptrh	equ	0xFF7
   928                           intcon	equ	0xFF2
   929                           postinc0	equ	0xFEE
   930                           wreg	equ	0xFE8
   931                           status	equ	0xFD8
   932                           
   933 ;; *************** function _delay1ms *****************
   934 ;; Defined at:
   935 ;;		line 58 in file "_01_USER/My_Delay.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;		None
   938 ;; Auto vars:     Size  Location     Type
   939 ;;  c               1   26[COMRAM] unsigned char 
   940 ;;  b               1   25[COMRAM] unsigned char 
   941 ;;  a               1   24[COMRAM] unsigned char 
   942 ;; Return value:  Size  Location     Type
   943 ;;		None               void
   944 ;; Registers used:
   945 ;;		wreg, status,2, status,0
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   952 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   954 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   955 ;;Total ram usage:        3 bytes
   956 ;; Hardware stack levels used:    1
   957 ;; Hardware stack levels required when called:    3
   958 ;; This function calls:
   959 ;;		Nothing
   960 ;; This function is called by:
   961 ;;		_delay_ms
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           	psect	text6
   966  001934                     __ptext6:
   967                           	opt stack 0
   968  001934                     _delay1ms:
   969                           	opt stack 25
   970                           
   971                           ;My_Delay.c: 60: unsigned char a,b,c;
   972                           ;My_Delay.c: 61: for(c=1;c>0;c--)
   973                           
   974                           ;incstack = 0
   975  001934  0E01               	movlw	1
   976  001936  6E1B               	movwf	delay1ms@c,c
   977  001938  501B               	movf	delay1ms@c,w,c
   978  00193A  B4D8               	btfsc	status,2,c
   979  00193C  0012               	return	
   980  00193E  D001               	goto	l2290
   981  001940  0012               	return	
   982  001942                     l2290:
   983                           
   984                           ;My_Delay.c: 62: for(b=94;b>0;b--)
   985  001942  0E5E               	movlw	94
   986  001944  6E1A               	movwf	delay1ms@b,c
   987  001946  501A               	movf	delay1ms@b,w,c
   988  001948  B4D8               	btfsc	status,2,c
   989  00194A  D00D               	goto	l2306
   990  00194C  D001               	goto	l2294
   991  00194E  D00B               	goto	l2306
   992  001950                     l2294:
   993                           
   994                           ;My_Delay.c: 63: for(a=2;a>0;a--);
   995  001950  0E02               	movlw	2
   996  001952  6E19               	movwf	delay1ms@a,c
   997  001954  5019               	movf	delay1ms@a,w,c
   998  001956  B4D8               	btfsc	status,2,c
   999  001958  D004               	goto	l2302
  1000  00195A  D001               	goto	l2298
  1001  00195C  D002               	goto	l2302
  1002  00195E                     l2298:
  1003  00195E  0619               	decf	delay1ms@a,f,c
  1004  001960  D7F9               	goto	L1
  1005  001962                     l2302:
  1006  001962  061A               	decf	delay1ms@b,f,c
  1007  001964  D7F0               	goto	L2
  1008  001966                     l2306:
  1009  001966  061B               	decf	delay1ms@c,f,c
  1010  001968  D7E7               	goto	L3
  1011  00196A  0012               	return		;funcret
  1012  00196C                     __end_of_delay1ms:
  1013                           	opt stack 0
  1014                           tblptru	equ	0xFF8
  1015                           tblptrh	equ	0xFF7
  1016                           intcon	equ	0xFF2
  1017                           postinc0	equ	0xFEE
  1018                           wreg	equ	0xFE8
  1019                           status	equ	0xFD8
  1020                           
  1021 ;; *************** function _TM1640_Show_integer *****************
  1022 ;; Defined at:
  1023 ;;		line 55 in file "_01_USER/TM1640.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;  Numbers         2   31[COMRAM] unsigned int 
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;		None
  1028 ;; Return value:  Size  Location     Type
  1029 ;;		None               void
  1030 ;; Registers used:
  1031 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1032 ;; Tracked objects:
  1033 ;;		On entry : 0/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1037 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1040 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1041 ;;Total ram usage:        2 bytes
  1042 ;; Hardware stack levels used:    1
  1043 ;; Hardware stack levels required when called:    6
  1044 ;; This function calls:
  1045 ;;		_TM1640_Writer_Dates
  1046 ;;		___lwdiv
  1047 ;;		___lwmod
  1048 ;; This function is called by:
  1049 ;;		_Run
  1050 ;;		_Show_Result
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054                           	psect	text7
  1055  001292                     __ptext7:
  1056                           	opt stack 0
  1057  001292                     _TM1640_Show_integer:
  1058                           	opt stack 23
  1059                           
  1060                           ;TM1640.c: 58: TM1640_Writer_Dates(3,LED_Number[Numbers%10]); Numbers/=10;
  1061                           
  1062                           ;incstack = 0
  1063  001292  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1064  001296  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1065  00129A  0E00               	movlw	0
  1066  00129C  6E1C               	movwf	___lwmod@divisor+1,c
  1067  00129E  0E0A               	movlw	10
  1068  0012A0  6E1B               	movwf	___lwmod@divisor,c
  1069  0012A2  ECF5  F00B         	call	___lwmod	;wreg free
  1070  0012A6  0E01               	movlw	low _LED_Number
  1071  0012A8  2419               	addwf	?___lwmod,w,c
  1072  0012AA  6EF6               	movwf	tblptrl,c
  1073  0012AC  0E10               	movlw	high _LED_Number
  1074  0012AE  201A               	addwfc	?___lwmod+1,w,c
  1075  0012B0  6EF7               	movwf	tblptrh,c
  1076  0012B2                     	if	0	;There are less than 3 active tblptr bytes
  1077  0012B2                     	endif
  1078  0012B2  0008               	tblrd		*
  1079  0012B4  CFF5 F01E          	movff	tablat,TM1640_Writer_Dates@Date
  1080  0012B8  0E03               	movlw	3
  1081  0012BA  EC86  F00D         	call	_TM1640_Writer_Dates
  1082  0012BE  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1083  0012C2  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1084  0012C6  0E00               	movlw	0
  1085  0012C8  6E1C               	movwf	___lwdiv@divisor+1,c
  1086  0012CA  0E0A               	movlw	10
  1087  0012CC  6E1B               	movwf	___lwdiv@divisor,c
  1088  0012CE  ECA0  F00B         	call	___lwdiv	;wreg free
  1089  0012D2  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1090  0012D6  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1091                           
  1092                           ;TM1640.c: 59: TM1640_Writer_Dates(2,LED_Number[Numbers%10]); Numbers/=10;
  1093  0012DA  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1094  0012DE  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1095  0012E2  0E00               	movlw	0
  1096  0012E4  6E1C               	movwf	___lwmod@divisor+1,c
  1097  0012E6  0E0A               	movlw	10
  1098  0012E8  6E1B               	movwf	___lwmod@divisor,c
  1099  0012EA  ECF5  F00B         	call	___lwmod	;wreg free
  1100  0012EE  0E01               	movlw	low _LED_Number
  1101  0012F0  2419               	addwf	?___lwmod,w,c
  1102  0012F2  6EF6               	movwf	tblptrl,c
  1103  0012F4  0E10               	movlw	high _LED_Number
  1104  0012F6  201A               	addwfc	?___lwmod+1,w,c
  1105  0012F8  6EF7               	movwf	tblptrh,c
  1106  0012FA                     	if	0	;There are less than 3 active tblptr bytes
  1107  0012FA                     	endif
  1108  0012FA  0008               	tblrd		*
  1109  0012FC  CFF5 F01E          	movff	tablat,TM1640_Writer_Dates@Date
  1110  001300  0E02               	movlw	2
  1111  001302  EC86  F00D         	call	_TM1640_Writer_Dates
  1112  001306  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1113  00130A  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1114  00130E  0E00               	movlw	0
  1115  001310  6E1C               	movwf	___lwdiv@divisor+1,c
  1116  001312  0E0A               	movlw	10
  1117  001314  6E1B               	movwf	___lwdiv@divisor,c
  1118  001316  ECA0  F00B         	call	___lwdiv	;wreg free
  1119  00131A  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1120  00131E  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1121                           
  1122                           ;TM1640.c: 60: TM1640_Writer_Dates(1,LED_Number[Numbers%10]); Numbers/=10;
  1123  001322  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1124  001326  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1125  00132A  0E00               	movlw	0
  1126  00132C  6E1C               	movwf	___lwmod@divisor+1,c
  1127  00132E  0E0A               	movlw	10
  1128  001330  6E1B               	movwf	___lwmod@divisor,c
  1129  001332  ECF5  F00B         	call	___lwmod	;wreg free
  1130  001336  0E01               	movlw	low _LED_Number
  1131  001338  2419               	addwf	?___lwmod,w,c
  1132  00133A  6EF6               	movwf	tblptrl,c
  1133  00133C  0E10               	movlw	high _LED_Number
  1134  00133E  201A               	addwfc	?___lwmod+1,w,c
  1135  001340  6EF7               	movwf	tblptrh,c
  1136  001342                     	if	0	;There are less than 3 active tblptr bytes
  1137  001342                     	endif
  1138  001342  0008               	tblrd		*
  1139  001344  CFF5 F01E          	movff	tablat,TM1640_Writer_Dates@Date
  1140  001348  0E01               	movlw	1
  1141  00134A  EC86  F00D         	call	_TM1640_Writer_Dates
  1142  00134E  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwdiv@dividend
  1143  001352  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwdiv@dividend+1
  1144  001356  0E00               	movlw	0
  1145  001358  6E1C               	movwf	___lwdiv@divisor+1,c
  1146  00135A  0E0A               	movlw	10
  1147  00135C  6E1B               	movwf	___lwdiv@divisor,c
  1148  00135E  ECA0  F00B         	call	___lwdiv	;wreg free
  1149  001362  C019  F020         	movff	?___lwdiv,TM1640_Show_integer@Numbers
  1150  001366  C01A  F021         	movff	?___lwdiv+1,TM1640_Show_integer@Numbers+1
  1151                           
  1152                           ;TM1640.c: 61: TM1640_Writer_Dates(0,LED_Number[Numbers%10]);
  1153  00136A  C020  F019         	movff	TM1640_Show_integer@Numbers,___lwmod@dividend
  1154  00136E  C021  F01A         	movff	TM1640_Show_integer@Numbers+1,___lwmod@dividend+1
  1155  001372  0E00               	movlw	0
  1156  001374  6E1C               	movwf	___lwmod@divisor+1,c
  1157  001376  0E0A               	movlw	10
  1158  001378  6E1B               	movwf	___lwmod@divisor,c
  1159  00137A  ECF5  F00B         	call	___lwmod	;wreg free
  1160  00137E  0E01               	movlw	low _LED_Number
  1161  001380  2419               	addwf	?___lwmod,w,c
  1162  001382  6EF6               	movwf	tblptrl,c
  1163  001384  0E10               	movlw	high _LED_Number
  1164  001386  201A               	addwfc	?___lwmod+1,w,c
  1165  001388  6EF7               	movwf	tblptrh,c
  1166  00138A                     	if	0	;There are less than 3 active tblptr bytes
  1167  00138A                     	endif
  1168  00138A  0008               	tblrd		*
  1169  00138C  CFF5 F01E          	movff	tablat,TM1640_Writer_Dates@Date
  1170  001390  0E00               	movlw	0
  1171  001392  EC86  F00D         	call	_TM1640_Writer_Dates
  1172  001396  0012               	return		;funcret
  1173  001398                     __end_of_TM1640_Show_integer:
  1174                           	opt stack 0
  1175                           tblptru	equ	0xFF8
  1176                           tblptrh	equ	0xFF7
  1177                           tblptrl	equ	0xFF6
  1178                           tablat	equ	0xFF5
  1179                           intcon	equ	0xFF2
  1180                           postinc0	equ	0xFEE
  1181                           wreg	equ	0xFE8
  1182                           status	equ	0xFD8
  1183                           
  1184 ;; *************** function ___lwmod *****************
  1185 ;; Defined at:
  1186 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1187 ;; Parameters:    Size  Location     Type
  1188 ;;  dividend        2   24[COMRAM] unsigned int 
  1189 ;;  divisor         2   26[COMRAM] unsigned int 
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;  counter         1   28[COMRAM] unsigned char 
  1192 ;; Return value:  Size  Location     Type
  1193 ;;                  2   24[COMRAM] unsigned int 
  1194 ;; Registers used:
  1195 ;;		wreg, status,2, status,0
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1201 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1202 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1204 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1205 ;;Total ram usage:        5 bytes
  1206 ;; Hardware stack levels used:    1
  1207 ;; Hardware stack levels required when called:    3
  1208 ;; This function calls:
  1209 ;;		Nothing
  1210 ;; This function is called by:
  1211 ;;		_TM1640_Show_integer
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215                           	psect	text8
  1216  0017EA                     __ptext8:
  1217                           	opt stack 0
  1218  0017EA                     ___lwmod:
  1219                           	opt stack 25
  1220                           
  1221                           ;incstack = 0
  1222  0017EA  501B               	movf	___lwmod@divisor,w,c
  1223  0017EC  101C               	iorwf	___lwmod@divisor+1,w,c
  1224  0017EE  B4D8               	btfsc	status,2,c
  1225  0017F0  D01D               	goto	l969
  1226  0017F2  0E01               	movlw	1
  1227  0017F4  6E1D               	movwf	___lwmod@counter,c
  1228  0017F6  D005               	goto	l2446
  1229  0017F8                     l2444:
  1230  0017F8  90D8               	bcf	status,0,c
  1231  0017FA  361B               	rlcf	___lwmod@divisor,f,c
  1232  0017FC  361C               	rlcf	___lwmod@divisor+1,f,c
  1233  0017FE  2A1D               	incf	___lwmod@counter,f,c
  1234  001800  D000               	goto	l2446
  1235  001802                     l2446:
  1236  001802  BE1C               	btfsc	___lwmod@divisor+1,7,c
  1237  001804  D002               	goto	l2448
  1238  001806  D7F8               	goto	l2444
  1239  001808  D000               	goto	l2448
  1240  00180A                     l2448:
  1241  00180A  501B               	movf	___lwmod@divisor,w,c
  1242  00180C  5C19               	subwf	___lwmod@dividend,w,c
  1243  00180E  501C               	movf	___lwmod@divisor+1,w,c
  1244  001810  581A               	subwfb	___lwmod@dividend+1,w,c
  1245  001812  A0D8               	btfss	status,0,c
  1246  001814  D005               	goto	l2452
  1247  001816  501B               	movf	___lwmod@divisor,w,c
  1248  001818  5E19               	subwf	___lwmod@dividend,f,c
  1249  00181A  501C               	movf	___lwmod@divisor+1,w,c
  1250  00181C  5A1A               	subwfb	___lwmod@dividend+1,f,c
  1251  00181E  D000               	goto	l2452
  1252  001820                     l2452:
  1253  001820  90D8               	bcf	status,0,c
  1254  001822  321C               	rrcf	___lwmod@divisor+1,f,c
  1255  001824  321B               	rrcf	___lwmod@divisor,f,c
  1256  001826  2E1D               	decfsz	___lwmod@counter,f,c
  1257  001828  D7F0               	goto	l2448
  1258  00182A  D000               	goto	l969
  1259  00182C                     l969:
  1260  00182C  C019  F019         	movff	___lwmod@dividend,?___lwmod
  1261  001830  C01A  F01A         	movff	___lwmod@dividend+1,?___lwmod+1
  1262  001834  0012               	return		;funcret
  1263  001836                     __end_of___lwmod:
  1264                           	opt stack 0
  1265                           tblptru	equ	0xFF8
  1266                           tblptrh	equ	0xFF7
  1267                           tblptrl	equ	0xFF6
  1268                           tablat	equ	0xFF5
  1269                           intcon	equ	0xFF2
  1270                           postinc0	equ	0xFEE
  1271                           wreg	equ	0xFE8
  1272                           status	equ	0xFD8
  1273                           
  1274 ;; *************** function ___lwdiv *****************
  1275 ;; Defined at:
  1276 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;  dividend        2   24[COMRAM] unsigned int 
  1279 ;;  divisor         2   26[COMRAM] unsigned int 
  1280 ;; Auto vars:     Size  Location     Type
  1281 ;;  quotient        2   29[COMRAM] unsigned int 
  1282 ;;  counter         1   28[COMRAM] unsigned char 
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  2   24[COMRAM] unsigned int 
  1285 ;; Registers used:
  1286 ;;		wreg, status,2, status,0
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1292 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1293 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1295 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1296 ;;Total ram usage:        7 bytes
  1297 ;; Hardware stack levels used:    1
  1298 ;; Hardware stack levels required when called:    3
  1299 ;; This function calls:
  1300 ;;		Nothing
  1301 ;; This function is called by:
  1302 ;;		_TM1640_Show_integer
  1303 ;; This function uses a non-reentrant model
  1304 ;;
  1305                           
  1306                           	psect	text9
  1307  001740                     __ptext9:
  1308                           	opt stack 0
  1309  001740                     ___lwdiv:
  1310                           	opt stack 25
  1311                           
  1312                           ;incstack = 0
  1313  001740  0E00               	movlw	0
  1314  001742  6E1F               	movwf	___lwdiv@quotient+1,c
  1315  001744  0E00               	movlw	0
  1316  001746  6E1E               	movwf	___lwdiv@quotient,c
  1317  001748  501B               	movf	___lwdiv@divisor,w,c
  1318  00174A  101C               	iorwf	___lwdiv@divisor+1,w,c
  1319  00174C  B4D8               	btfsc	status,2,c
  1320  00174E  D021               	goto	l959
  1321  001750  0E01               	movlw	1
  1322  001752  6E1D               	movwf	___lwdiv@counter,c
  1323  001754  D005               	goto	l2426
  1324  001756                     l2424:
  1325  001756  90D8               	bcf	status,0,c
  1326  001758  361B               	rlcf	___lwdiv@divisor,f,c
  1327  00175A  361C               	rlcf	___lwdiv@divisor+1,f,c
  1328  00175C  2A1D               	incf	___lwdiv@counter,f,c
  1329  00175E  D000               	goto	l2426
  1330  001760                     l2426:
  1331  001760  BE1C               	btfsc	___lwdiv@divisor+1,7,c
  1332  001762  D002               	goto	l2428
  1333  001764  D7F8               	goto	l2424
  1334  001766  D000               	goto	l2428
  1335  001768                     l2428:
  1336  001768  90D8               	bcf	status,0,c
  1337  00176A  361E               	rlcf	___lwdiv@quotient,f,c
  1338  00176C  361F               	rlcf	___lwdiv@quotient+1,f,c
  1339  00176E  501B               	movf	___lwdiv@divisor,w,c
  1340  001770  5C19               	subwf	___lwdiv@dividend,w,c
  1341  001772  501C               	movf	___lwdiv@divisor+1,w,c
  1342  001774  581A               	subwfb	___lwdiv@dividend+1,w,c
  1343  001776  A0D8               	btfss	status,0,c
  1344  001778  D006               	goto	l2436
  1345  00177A  501B               	movf	___lwdiv@divisor,w,c
  1346  00177C  5E19               	subwf	___lwdiv@dividend,f,c
  1347  00177E  501C               	movf	___lwdiv@divisor+1,w,c
  1348  001780  5A1A               	subwfb	___lwdiv@dividend+1,f,c
  1349  001782  801E               	bsf	___lwdiv@quotient,0,c
  1350  001784  D000               	goto	l2436
  1351  001786                     l2436:
  1352  001786  90D8               	bcf	status,0,c
  1353  001788  321C               	rrcf	___lwdiv@divisor+1,f,c
  1354  00178A  321B               	rrcf	___lwdiv@divisor,f,c
  1355  00178C  2E1D               	decfsz	___lwdiv@counter,f,c
  1356  00178E  D7EC               	goto	l2428
  1357  001790  D000               	goto	l959
  1358  001792                     l959:
  1359  001792  C01E  F019         	movff	___lwdiv@quotient,?___lwdiv
  1360  001796  C01F  F01A         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1361  00179A  0012               	return		;funcret
  1362  00179C                     __end_of___lwdiv:
  1363                           	opt stack 0
  1364                           tblptru	equ	0xFF8
  1365                           tblptrh	equ	0xFF7
  1366                           tblptrl	equ	0xFF6
  1367                           tablat	equ	0xFF5
  1368                           intcon	equ	0xFF2
  1369                           postinc0	equ	0xFEE
  1370                           wreg	equ	0xFE8
  1371                           status	equ	0xFD8
  1372                           
  1373 ;; *************** function _TM1640_Writer_Dates *****************
  1374 ;; Defined at:
  1375 ;;		line 66 in file "_01_USER/TM1640.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;  Addr            1    wreg     unsigned char 
  1378 ;;  Date            1   29[COMRAM] unsigned char 
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;  Addr            1   30[COMRAM] unsigned char 
  1381 ;; Return value:  Size  Location     Type
  1382 ;;		None               void
  1383 ;; Registers used:
  1384 ;;		wreg, status,2, status,0, cstack
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1390 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1391 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1393 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1394 ;;Total ram usage:        2 bytes
  1395 ;; Hardware stack levels used:    1
  1396 ;; Hardware stack levels required when called:    5
  1397 ;; This function calls:
  1398 ;;		_TM1640_Start
  1399 ;;		_TM1640_Stop
  1400 ;;		_TM1640_Writer_Byte
  1401 ;; This function is called by:
  1402 ;;		_TM1640_Show_integer
  1403 ;;		_TM1640_Show_Decimal
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           	psect	text10
  1408  001B0C                     __ptext10:
  1409                           	opt stack 0
  1410  001B0C                     _TM1640_Writer_Dates:
  1411                           	opt stack 23
  1412                           
  1413                           ;incstack = 0
  1414                           ;TM1640_Writer_Dates@Addr stored from wreg
  1415  001B0C  6E1F               	movwf	TM1640_Writer_Dates@Addr,c
  1416                           
  1417                           ;TM1640.c: 68: if((Addr >= 0) && (Addr <= 3))
  1418  001B0E  0E04               	movlw	4
  1419  001B10  601F               	cpfslt	TM1640_Writer_Dates@Addr,c
  1420  001B12  0012               	return	
  1421                           
  1422                           ;TM1640.c: 69: {
  1423                           ;TM1640.c: 70: TM1640_Start();
  1424  001B14  EC63  F00D         	call	_TM1640_Start	;wreg free
  1425                           
  1426                           ;TM1640.c: 71: TM1640_Writer_Byte(0xC0 + Addr);
  1427  001B18  501F               	movf	TM1640_Writer_Dates@Addr,w,c
  1428  001B1A  0FC0               	addlw	192
  1429  001B1C  EC5E  F00C         	call	_TM1640_Writer_Byte
  1430                           
  1431                           ;TM1640.c: 72: TM1640_Writer_Byte(Date);
  1432  001B20  501E               	movf	TM1640_Writer_Dates@Date,w,c
  1433  001B22  EC5E  F00C         	call	_TM1640_Writer_Byte
  1434                           
  1435                           ;TM1640.c: 73: TM1640_Stop();
  1436  001B26  EC51  F00D         	call	_TM1640_Stop	;wreg free
  1437  001B2A  0012               	return	
  1438  001B2C  0012               	return		;funcret
  1439  001B2E                     __end_of_TM1640_Writer_Dates:
  1440                           	opt stack 0
  1441                           tblptru	equ	0xFF8
  1442                           tblptrh	equ	0xFF7
  1443                           tblptrl	equ	0xFF6
  1444                           tablat	equ	0xFF5
  1445                           intcon	equ	0xFF2
  1446                           postinc0	equ	0xFEE
  1447                           wreg	equ	0xFE8
  1448                           status	equ	0xFD8
  1449                           
  1450 ;; *************** function _Get_ADC6 *****************
  1451 ;; Defined at:
  1452 ;;		line 67 in file "_01_USER/My_ADC.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;		None
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;		None
  1457 ;; Return value:  Size  Location     Type
  1458 ;;		None               void
  1459 ;; Registers used:
  1460 ;;		wreg, status,2, status,0, cstack
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1470 ;;Total ram usage:        0 bytes
  1471 ;; Hardware stack levels used:    1
  1472 ;; Hardware stack levels required when called:    5
  1473 ;; This function calls:
  1474 ;;		_BusyADC
  1475 ;;		_ConvertADC
  1476 ;;		_ReadADC
  1477 ;;		___ftdiv
  1478 ;;		___ftmul
  1479 ;;		___lwtoft
  1480 ;; This function is called by:
  1481 ;;		_Run
  1482 ;; This function uses a non-reentrant model
  1483 ;;
  1484                           
  1485                           	psect	text11
  1486  0016D4                     __ptext11:
  1487                           	opt stack 0
  1488  0016D4                     _Get_ADC6:
  1489                           	opt stack 24
  1490                           
  1491                           ;My_ADC.c: 69: ConvertADC();
  1492                           
  1493                           ;incstack = 0
  1494  0016D4  ECFA  F00D         	call	_ConvertADC	;wreg free
  1495                           
  1496                           ;My_ADC.c: 70: while(BusyADC());
  1497  0016D8  D000               	goto	l2574
  1498  0016DA                     l2574:
  1499  0016DA  ECE8  F00D         	call	_BusyADC	;wreg free
  1500  0016DE  0900               	iorlw	0
  1501  0016E0  A4D8               	btfss	status,2,c
  1502  0016E2  D7FB               	goto	l2574
  1503                           
  1504                           ;My_ADC.c: 71: ADC6_Buff =(unsigned int)ReadADC()*4.096f/4095.0f;
  1505  0016E4  0E12               	movlw	18
  1506  0016E6  6E27               	movwf	___ftmul@f2,c
  1507  0016E8  0E83               	movlw	131
  1508  0016EA  6E28               	movwf	___ftmul@f2+1,c
  1509  0016EC  0E40               	movlw	64
  1510  0016EE  6E29               	movwf	___ftmul@f2+2,c
  1511  0016F0  ECD9  F00D         	call	_ReadADC	;wreg free
  1512  0016F4  C019  F021         	movff	?_ReadADC,___lwtoft@c
  1513  0016F8  C01A  F022         	movff	?_ReadADC+1,___lwtoft@c+1
  1514  0016FC  EC19  F00D         	call	___lwtoft	;wreg free
  1515  001700  C021  F024         	movff	?___lwtoft,___ftmul@f1
  1516  001704  C022  F025         	movff	?___lwtoft+1,___ftmul@f1+1
  1517  001708  C023  F026         	movff	?___lwtoft+2,___ftmul@f1+2
  1518  00170C  ECB2  F008         	call	___ftmul	;wreg free
  1519  001710  C024  F066         	movff	?___ftmul,___ftdiv@f1
  1520  001714  C025  F067         	movff	?___ftmul+1,___ftdiv@f1+1
  1521  001718  C026  F068         	movff	?___ftmul+2,___ftdiv@f1+2
  1522  00171C  0EF0               	movlw	240
  1523  00171E  0100               	movlb	0	; () banked
  1524  001720  6F69               	movwf	___ftdiv@f2& (0+255),b
  1525  001722  0E7F               	movlw	127
  1526  001724  0100               	movlb	0	; () banked
  1527  001726  6F6A               	movwf	(___ftdiv@f2+1)& (0+255),b
  1528  001728  0E45               	movlw	69
  1529  00172A  0100               	movlb	0	; () banked
  1530  00172C  6F6B               	movwf	(___ftdiv@f2+2)& (0+255),b
  1531  00172E  EC09  F008         	call	___ftdiv	;wreg free
  1532  001732  C066  F078         	movff	?___ftdiv,_ADC6_Buff	;volatile
  1533  001736  C067  F079         	movff	?___ftdiv+1,_ADC6_Buff+1	;volatile
  1534  00173A  C068  F07A         	movff	?___ftdiv+2,_ADC6_Buff+2	;volatile
  1535  00173E  0012               	return		;funcret
  1536  001740                     __end_of_Get_ADC6:
  1537                           	opt stack 0
  1538                           tblptru	equ	0xFF8
  1539                           tblptrh	equ	0xFF7
  1540                           tblptrl	equ	0xFF6
  1541                           tablat	equ	0xFF5
  1542                           intcon	equ	0xFF2
  1543                           postinc0	equ	0xFEE
  1544                           wreg	equ	0xFE8
  1545                           status	equ	0xFD8
  1546                           
  1547 ;; *************** function ___lwtoft *****************
  1548 ;; Defined at:
  1549 ;;		line 28 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  1550 ;; Parameters:    Size  Location     Type
  1551 ;;  c               2   32[COMRAM] unsigned int 
  1552 ;; Auto vars:     Size  Location     Type
  1553 ;;		None
  1554 ;; Return value:  Size  Location     Type
  1555 ;;                  3   32[COMRAM] float 
  1556 ;; Registers used:
  1557 ;;		wreg, status,2, status,0, cstack
  1558 ;; Tracked objects:
  1559 ;;		On entry : 0/0
  1560 ;;		On exit  : 0/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1563 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1566 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1567 ;;Total ram usage:        3 bytes
  1568 ;; Hardware stack levels used:    1
  1569 ;; Hardware stack levels required when called:    4
  1570 ;; This function calls:
  1571 ;;		___ftpack
  1572 ;; This function is called by:
  1573 ;;		_Get_ADC6
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           	psect	text12
  1578  001A32                     __ptext12:
  1579                           	opt stack 0
  1580  001A32                     ___lwtoft:
  1581                           	opt stack 24
  1582                           
  1583                           ;incstack = 0
  1584  001A32  C021  F019         	movff	___lwtoft@c,___ftpack@arg
  1585  001A36  C022  F01A         	movff	___lwtoft@c+1,___ftpack@arg+1
  1586  001A3A  6A1B               	clrf	___ftpack@arg+2,c
  1587  001A3C  0E8E               	movlw	142
  1588  001A3E  6E1C               	movwf	___ftpack@exp,c
  1589  001A40  0E00               	movlw	0
  1590  001A42  6E1D               	movwf	___ftpack@sign,c
  1591  001A44  EC4D  F00A         	call	___ftpack	;wreg free
  1592  001A48  C019  F021         	movff	?___ftpack,?___lwtoft
  1593  001A4C  C01A  F022         	movff	?___ftpack+1,?___lwtoft+1
  1594  001A50  C01B  F023         	movff	?___ftpack+2,?___lwtoft+2
  1595  001A54  0012               	return	
  1596  001A56  0012               	return		;funcret
  1597  001A58                     __end_of___lwtoft:
  1598                           	opt stack 0
  1599                           tblptru	equ	0xFF8
  1600                           tblptrh	equ	0xFF7
  1601                           tblptrl	equ	0xFF6
  1602                           tablat	equ	0xFF5
  1603                           intcon	equ	0xFF2
  1604                           postinc0	equ	0xFEE
  1605                           wreg	equ	0xFE8
  1606                           status	equ	0xFD8
  1607                           
  1608 ;; *************** function ___ftmul *****************
  1609 ;; Defined at:
  1610 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;  f1              3   35[COMRAM] float 
  1613 ;;  f2              3   38[COMRAM] float 
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;  f3_as_produc    3    1[BANK0 ] unsigned um
  1616 ;;  sign            1    5[BANK0 ] unsigned char 
  1617 ;;  cntr            1    4[BANK0 ] unsigned char 
  1618 ;;  exp             1    0[BANK0 ] unsigned char 
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  3   35[COMRAM] float 
  1621 ;; Registers used:
  1622 ;;		wreg, status,2, status,0, cstack
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1628 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1629 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1630 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1631 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1632 ;;Total ram usage:       15 bytes
  1633 ;; Hardware stack levels used:    1
  1634 ;; Hardware stack levels required when called:    4
  1635 ;; This function calls:
  1636 ;;		___ftpack
  1637 ;; This function is called by:
  1638 ;;		_Get_ADC6
  1639 ;;		_TM1640_Show_Decimal
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643                           	psect	text13
  1644  001164                     __ptext13:
  1645                           	opt stack 0
  1646  001164                     ___ftmul:
  1647                           	opt stack 24
  1648                           
  1649                           ;incstack = 0
  1650  001164  C026  F02A         	movff	___ftmul@f1+2,??___ftmul
  1651  001168  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  1652  00116A  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  1653  00116C  3425               	rlcf	___ftmul@f1+1,w,c
  1654  00116E  362A               	rlcf	??___ftmul& (0+255),f,c
  1655  001170  E301               	bnc	u1901
  1656  001172  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  1657  001174                     u1901:
  1658  001174  502A               	movf	??___ftmul,w,c
  1659  001176  0100               	movlb	0	; () banked
  1660  001178  6F60               	movwf	___ftmul@exp& (0+255),b
  1661  00117A  0100               	movlb	0	; () banked
  1662  00117C  5160               	movf	___ftmul@exp& (0+255),w,b
  1663  00117E  A4D8               	btfss	status,2,c
  1664  001180  D007               	goto	l2376
  1665                           
  1666                           ; BSR set to: 0
  1667  001182  0E00               	movlw	0
  1668  001184  6E24               	movwf	?___ftmul,c
  1669  001186  0E00               	movlw	0
  1670  001188  6E25               	movwf	?___ftmul+1,c
  1671  00118A  0E00               	movlw	0
  1672  00118C  6E26               	movwf	?___ftmul+2,c
  1673                           
  1674                           ; BSR set to: 0
  1675  00118E  0012               	return	
  1676  001190                     l2376:
  1677                           
  1678                           ; BSR set to: 0
  1679  001190  C029  F02A         	movff	___ftmul@f2+2,??___ftmul
  1680  001194  6A2B               	clrf	(??___ftmul+1)& (0+255),c
  1681  001196  6A2C               	clrf	(??___ftmul+2)& (0+255),c
  1682  001198  3428               	rlcf	___ftmul@f2+1,w,c
  1683  00119A  362A               	rlcf	??___ftmul& (0+255),f,c
  1684  00119C  E301               	bnc	u1921
  1685  00119E  802B               	bsf	(??___ftmul+1)& (0+255),0,c
  1686  0011A0                     u1921:
  1687  0011A0  502A               	movf	??___ftmul,w,c
  1688  0011A2  0100               	movlb	0	; () banked
  1689  0011A4  6F65               	movwf	___ftmul@sign& (0+255),b
  1690  0011A6  0100               	movlb	0	; () banked
  1691  0011A8  5165               	movf	___ftmul@sign& (0+255),w,b
  1692  0011AA  A4D8               	btfss	status,2,c
  1693  0011AC  D007               	goto	l2382
  1694                           
  1695                           ; BSR set to: 0
  1696  0011AE  0E00               	movlw	0
  1697  0011B0  6E24               	movwf	?___ftmul,c
  1698  0011B2  0E00               	movlw	0
  1699  0011B4  6E25               	movwf	?___ftmul+1,c
  1700  0011B6  0E00               	movlw	0
  1701  0011B8  6E26               	movwf	?___ftmul+2,c
  1702                           
  1703                           ; BSR set to: 0
  1704  0011BA  0012               	return	
  1705  0011BC                     l2382:
  1706                           
  1707                           ; BSR set to: 0
  1708  0011BC  0100               	movlb	0	; () banked
  1709  0011BE  5165               	movf	___ftmul@sign& (0+255),w,b
  1710  0011C0  0F7B               	addlw	123
  1711  0011C2  0100               	movlb	0	; () banked
  1712  0011C4  2760               	addwf	___ftmul@exp& (0+255),f,b
  1713                           
  1714                           ; BSR set to: 0
  1715  0011C6  C026  F065         	movff	___ftmul@f1+2,___ftmul@sign
  1716  0011CA  5029               	movf	___ftmul@f2+2,w,c
  1717  0011CC  0100               	movlb	0	; () banked
  1718  0011CE  1B65               	xorwf	___ftmul@sign& (0+255),f,b
  1719  0011D0  0E80               	movlw	128
  1720  0011D2  0100               	movlb	0	; () banked
  1721  0011D4  1765               	andwf	___ftmul@sign& (0+255),f,b
  1722                           
  1723                           ; BSR set to: 0
  1724  0011D6  8E25               	bsf	___ftmul@f1+1,7,c
  1725                           
  1726                           ; BSR set to: 0
  1727  0011D8  8E28               	bsf	___ftmul@f2+1,7,c
  1728                           
  1729                           ; BSR set to: 0
  1730  0011DA  0EFF               	movlw	255
  1731  0011DC  1627               	andwf	___ftmul@f2,f,c
  1732  0011DE  0EFF               	movlw	255
  1733  0011E0  1628               	andwf	___ftmul@f2+1,f,c
  1734  0011E2  0E00               	movlw	0
  1735  0011E4  1629               	andwf	___ftmul@f2+2,f,c
  1736                           
  1737                           ; BSR set to: 0
  1738  0011E6  0E00               	movlw	0
  1739  0011E8  0100               	movlb	0	; () banked
  1740  0011EA  6F61               	movwf	___ftmul@f3_as_product& (0+255),b
  1741  0011EC  0E00               	movlw	0
  1742  0011EE  0100               	movlb	0	; () banked
  1743  0011F0  6F62               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  1744  0011F2  0E00               	movlw	0
  1745  0011F4  0100               	movlb	0	; () banked
  1746  0011F6  6F63               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  1747                           
  1748                           ; BSR set to: 0
  1749  0011F8  0E07               	movlw	7
  1750  0011FA  0100               	movlb	0	; () banked
  1751  0011FC  6F64               	movwf	___ftmul@cntr& (0+255),b
  1752  0011FE  D000               	goto	l2396
  1753  001200                     l2396:
  1754                           
  1755                           ; BSR set to: 0
  1756  001200  A024               	btfss	___ftmul@f1,0,c
  1757  001202  D00A               	goto	l2400
  1758                           
  1759                           ; BSR set to: 0
  1760  001204  5027               	movf	___ftmul@f2,w,c
  1761  001206  0100               	movlb	0	; () banked
  1762  001208  2761               	addwf	___ftmul@f3_as_product& (0+255),f,b
  1763  00120A  5028               	movf	___ftmul@f2+1,w,c
  1764  00120C  0100               	movlb	0	; () banked
  1765  00120E  2362               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  1766  001210  5029               	movf	___ftmul@f2+2,w,c
  1767  001212  0100               	movlb	0	; () banked
  1768  001214  2363               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  1769  001216  D000               	goto	l2400
  1770  001218                     l2400:
  1771                           
  1772                           ; BSR set to: 0
  1773  001218  90D8               	bcf	status,0,c
  1774  00121A  3226               	rrcf	___ftmul@f1+2,f,c
  1775  00121C  3225               	rrcf	___ftmul@f1+1,f,c
  1776  00121E  3224               	rrcf	___ftmul@f1,f,c
  1777  001220  90D8               	bcf	status,0,c
  1778  001222  3627               	rlcf	___ftmul@f2,f,c
  1779  001224  3628               	rlcf	___ftmul@f2+1,f,c
  1780  001226  3629               	rlcf	___ftmul@f2+2,f,c
  1781                           
  1782                           ; BSR set to: 0
  1783  001228  0100               	movlb	0	; () banked
  1784  00122A  2F64               	decfsz	___ftmul@cntr& (0+255),f,b
  1785  00122C  D7E9               	goto	l2396
  1786  00122E  D000               	goto	l2404
  1787  001230                     l2404:
  1788                           
  1789                           ; BSR set to: 0
  1790  001230  0E09               	movlw	9
  1791  001232  0100               	movlb	0	; () banked
  1792  001234  6F64               	movwf	___ftmul@cntr& (0+255),b
  1793  001236  D000               	goto	l2406
  1794  001238                     l2406:
  1795                           
  1796                           ; BSR set to: 0
  1797  001238  A024               	btfss	___ftmul@f1,0,c
  1798  00123A  D00A               	goto	l2410
  1799                           
  1800                           ; BSR set to: 0
  1801  00123C  5027               	movf	___ftmul@f2,w,c
  1802  00123E  0100               	movlb	0	; () banked
  1803  001240  2761               	addwf	___ftmul@f3_as_product& (0+255),f,b
  1804  001242  5028               	movf	___ftmul@f2+1,w,c
  1805  001244  0100               	movlb	0	; () banked
  1806  001246  2362               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  1807  001248  5029               	movf	___ftmul@f2+2,w,c
  1808  00124A  0100               	movlb	0	; () banked
  1809  00124C  2363               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  1810  00124E  D000               	goto	l2410
  1811  001250                     l2410:
  1812                           
  1813                           ; BSR set to: 0
  1814  001250  90D8               	bcf	status,0,c
  1815  001252  3226               	rrcf	___ftmul@f1+2,f,c
  1816  001254  3225               	rrcf	___ftmul@f1+1,f,c
  1817  001256  3224               	rrcf	___ftmul@f1,f,c
  1818  001258  0100               	movlb	0	; () banked
  1819  00125A  90D8               	bcf	status,0,c
  1820  00125C  3363               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  1821  00125E  3362               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  1822  001260  3361               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  1823                           
  1824                           ; BSR set to: 0
  1825  001262  0100               	movlb	0	; () banked
  1826  001264  2F64               	decfsz	___ftmul@cntr& (0+255),f,b
  1827  001266  D7E8               	goto	l2406
  1828  001268  D000               	goto	l2414
  1829  00126A                     l2414:
  1830                           
  1831                           ; BSR set to: 0
  1832  00126A  C061  F019         	movff	___ftmul@f3_as_product,___ftpack@arg
  1833  00126E  C062  F01A         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1834  001272  C063  F01B         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1835  001276  C060  F01C         	movff	___ftmul@exp,___ftpack@exp
  1836  00127A  C065  F01D         	movff	___ftmul@sign,___ftpack@sign
  1837  00127E  EC4D  F00A         	call	___ftpack	;wreg free
  1838  001282  C019  F024         	movff	?___ftpack,?___ftmul
  1839  001286  C01A  F025         	movff	?___ftpack+1,?___ftmul+1
  1840  00128A  C01B  F026         	movff	?___ftpack+2,?___ftmul+2
  1841  00128E  0012               	return	
  1842  001290  0012               	return		;funcret
  1843  001292                     __end_of___ftmul:
  1844                           	opt stack 0
  1845                           tblptru	equ	0xFF8
  1846                           tblptrh	equ	0xFF7
  1847                           tblptrl	equ	0xFF6
  1848                           tablat	equ	0xFF5
  1849                           intcon	equ	0xFF2
  1850                           postinc0	equ	0xFEE
  1851                           wreg	equ	0xFE8
  1852                           status	equ	0xFD8
  1853                           
  1854 ;; *************** function ___ftdiv *****************
  1855 ;; Defined at:
  1856 ;;		line 54 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  1857 ;; Parameters:    Size  Location     Type
  1858 ;;  f1              3    6[BANK0 ] float 
  1859 ;;  f2              3    9[BANK0 ] float 
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;  f3              3   16[BANK0 ] float 
  1862 ;;  sign            1   20[BANK0 ] unsigned char 
  1863 ;;  exp             1   19[BANK0 ] unsigned char 
  1864 ;;  cntr            1   15[BANK0 ] unsigned char 
  1865 ;; Return value:  Size  Location     Type
  1866 ;;                  3    6[BANK0 ] float 
  1867 ;; Registers used:
  1868 ;;		wreg, status,2, status,0, cstack
  1869 ;; Tracked objects:
  1870 ;;		On entry : 0/0
  1871 ;;		On exit  : 0/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1874 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1875 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1876 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1877 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1878 ;;Total ram usage:       15 bytes
  1879 ;; Hardware stack levels used:    1
  1880 ;; Hardware stack levels required when called:    4
  1881 ;; This function calls:
  1882 ;;		___ftpack
  1883 ;; This function is called by:
  1884 ;;		_Get_ADC6
  1885 ;;		_TM1640_Show_Decimal
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889                           	psect	text14
  1890  001012                     __ptext14:
  1891                           	opt stack 0
  1892  001012                     ___ftdiv:
  1893                           	opt stack 24
  1894                           
  1895                           ;incstack = 0
  1896  001012  C068  F06C         	movff	___ftdiv@f1+2,??___ftdiv
  1897  001016  0100               	movlb	0	; () banked
  1898  001018  6B6D               	clrf	(??___ftdiv+1)& (0+255),b
  1899  00101A  6B6E               	clrf	(??___ftdiv+2)& (0+255),b
  1900  00101C  0100               	movlb	0	; () banked
  1901  00101E  3567               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  1902  001020  0100               	movlb	0	; () banked
  1903  001022  376C               	rlcf	??___ftdiv& (0+255),f,b
  1904  001024  E301               	bnc	u1851
  1905  001026  816D               	bsf	(??___ftdiv+1)& (0+255),0,b
  1906  001028                     u1851:
  1907  001028  0100               	movlb	0	; () banked
  1908  00102A  516C               	movf	??___ftdiv& (0+255),w,b
  1909  00102C  0100               	movlb	0	; () banked
  1910  00102E  6F73               	movwf	___ftdiv@exp& (0+255),b
  1911  001030  0100               	movlb	0	; () banked
  1912  001032  5173               	movf	___ftdiv@exp& (0+255),w,b
  1913  001034  A4D8               	btfss	status,2,c
  1914  001036  D00A               	goto	l2330
  1915                           
  1916                           ; BSR set to: 0
  1917  001038  0E00               	movlw	0
  1918  00103A  0100               	movlb	0	; () banked
  1919  00103C  6F66               	movwf	?___ftdiv& (0+255),b
  1920  00103E  0E00               	movlw	0
  1921  001040  0100               	movlb	0	; () banked
  1922  001042  6F67               	movwf	(?___ftdiv+1)& (0+255),b
  1923  001044  0E00               	movlw	0
  1924  001046  0100               	movlb	0	; () banked
  1925  001048  6F68               	movwf	(?___ftdiv+2)& (0+255),b
  1926                           
  1927                           ; BSR set to: 0
  1928  00104A  0012               	return	
  1929  00104C                     l2330:
  1930                           
  1931                           ; BSR set to: 0
  1932  00104C  C06B  F06C         	movff	___ftdiv@f2+2,??___ftdiv
  1933  001050  0100               	movlb	0	; () banked
  1934  001052  6B6D               	clrf	(??___ftdiv+1)& (0+255),b
  1935  001054  6B6E               	clrf	(??___ftdiv+2)& (0+255),b
  1936  001056  0100               	movlb	0	; () banked
  1937  001058  356A               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  1938  00105A  0100               	movlb	0	; () banked
  1939  00105C  376C               	rlcf	??___ftdiv& (0+255),f,b
  1940  00105E  E301               	bnc	u1871
  1941  001060  816D               	bsf	(??___ftdiv+1)& (0+255),0,b
  1942  001062                     u1871:
  1943  001062  0100               	movlb	0	; () banked
  1944  001064  516C               	movf	??___ftdiv& (0+255),w,b
  1945  001066  0100               	movlb	0	; () banked
  1946  001068  6F74               	movwf	___ftdiv@sign& (0+255),b
  1947  00106A  0100               	movlb	0	; () banked
  1948  00106C  5174               	movf	___ftdiv@sign& (0+255),w,b
  1949  00106E  A4D8               	btfss	status,2,c
  1950  001070  D00A               	goto	l2336
  1951                           
  1952                           ; BSR set to: 0
  1953  001072  0E00               	movlw	0
  1954  001074  0100               	movlb	0	; () banked
  1955  001076  6F66               	movwf	?___ftdiv& (0+255),b
  1956  001078  0E00               	movlw	0
  1957  00107A  0100               	movlb	0	; () banked
  1958  00107C  6F67               	movwf	(?___ftdiv+1)& (0+255),b
  1959  00107E  0E00               	movlw	0
  1960  001080  0100               	movlb	0	; () banked
  1961  001082  6F68               	movwf	(?___ftdiv+2)& (0+255),b
  1962                           
  1963                           ; BSR set to: 0
  1964  001084  0012               	return	
  1965  001086                     l2336:
  1966                           
  1967                           ; BSR set to: 0
  1968  001086  0E00               	movlw	0
  1969  001088  0100               	movlb	0	; () banked
  1970  00108A  6F70               	movwf	___ftdiv@f3& (0+255),b
  1971  00108C  0E00               	movlw	0
  1972  00108E  0100               	movlb	0	; () banked
  1973  001090  6F71               	movwf	(___ftdiv@f3+1)& (0+255),b
  1974  001092  0E00               	movlw	0
  1975  001094  0100               	movlb	0	; () banked
  1976  001096  6F72               	movwf	(___ftdiv@f3+2)& (0+255),b
  1977                           
  1978                           ; BSR set to: 0
  1979  001098  0100               	movlb	0	; () banked
  1980  00109A  5174               	movf	___ftdiv@sign& (0+255),w,b
  1981  00109C  0F89               	addlw	137
  1982  00109E  0100               	movlb	0	; () banked
  1983  0010A0  5F73               	subwf	___ftdiv@exp& (0+255),f,b
  1984                           
  1985                           ; BSR set to: 0
  1986  0010A2  C068  F074         	movff	___ftdiv@f1+2,___ftdiv@sign
  1987                           
  1988                           ; BSR set to: 0
  1989  0010A6  0100               	movlb	0	; () banked
  1990  0010A8  516B               	movf	(___ftdiv@f2+2)& (0+255),w,b
  1991  0010AA  0100               	movlb	0	; () banked
  1992  0010AC  1B74               	xorwf	___ftdiv@sign& (0+255),f,b
  1993                           
  1994                           ; BSR set to: 0
  1995  0010AE  0E80               	movlw	128
  1996  0010B0  0100               	movlb	0	; () banked
  1997  0010B2  1774               	andwf	___ftdiv@sign& (0+255),f,b
  1998                           
  1999                           ; BSR set to: 0
  2000  0010B4  0100               	movlb	0	; () banked
  2001  0010B6  8F67               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  2002                           
  2003                           ; BSR set to: 0
  2004  0010B8  0EFF               	movlw	255
  2005  0010BA  0100               	movlb	0	; () banked
  2006  0010BC  1766               	andwf	___ftdiv@f1& (0+255),f,b
  2007  0010BE  0EFF               	movlw	255
  2008  0010C0  0100               	movlb	0	; () banked
  2009  0010C2  1767               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  2010  0010C4  0E00               	movlw	0
  2011  0010C6  0100               	movlb	0	; () banked
  2012  0010C8  1768               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  2013                           
  2014                           ; BSR set to: 0
  2015  0010CA  0100               	movlb	0	; () banked
  2016  0010CC  8F6A               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  2017                           
  2018                           ; BSR set to: 0
  2019  0010CE  0EFF               	movlw	255
  2020  0010D0  0100               	movlb	0	; () banked
  2021  0010D2  1769               	andwf	___ftdiv@f2& (0+255),f,b
  2022  0010D4  0EFF               	movlw	255
  2023  0010D6  0100               	movlb	0	; () banked
  2024  0010D8  176A               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  2025  0010DA  0E00               	movlw	0
  2026  0010DC  0100               	movlb	0	; () banked
  2027  0010DE  176B               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  2028                           
  2029                           ; BSR set to: 0
  2030  0010E0  0E18               	movlw	24
  2031  0010E2  0100               	movlb	0	; () banked
  2032  0010E4  6F6F               	movwf	___ftdiv@cntr& (0+255),b
  2033  0010E6  D000               	goto	l2356
  2034  0010E8                     l2356:
  2035                           
  2036                           ; BSR set to: 0
  2037  0010E8  0100               	movlb	0	; () banked
  2038  0010EA  90D8               	bcf	status,0,c
  2039  0010EC  3770               	rlcf	___ftdiv@f3& (0+255),f,b
  2040  0010EE  3771               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  2041  0010F0  3772               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  2042                           
  2043                           ; BSR set to: 0
  2044  0010F2  0100               	movlb	0	; () banked
  2045  0010F4  5169               	movf	___ftdiv@f2& (0+255),w,b
  2046  0010F6  0100               	movlb	0	; () banked
  2047  0010F8  5D66               	subwf	___ftdiv@f1& (0+255),w,b
  2048  0010FA  0100               	movlb	0	; () banked
  2049  0010FC  516A               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2050  0010FE  0100               	movlb	0	; () banked
  2051  001100  5967               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  2052  001102  0100               	movlb	0	; () banked
  2053  001104  516B               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2054  001106  0100               	movlb	0	; () banked
  2055  001108  5968               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  2056  00110A  A0D8               	btfss	status,0,c
  2057  00110C  D00E               	goto	l824
  2058                           
  2059                           ; BSR set to: 0
  2060  00110E  0100               	movlb	0	; () banked
  2061  001110  5169               	movf	___ftdiv@f2& (0+255),w,b
  2062  001112  0100               	movlb	0	; () banked
  2063  001114  5F66               	subwf	___ftdiv@f1& (0+255),f,b
  2064  001116  0100               	movlb	0	; () banked
  2065  001118  516A               	movf	(___ftdiv@f2+1)& (0+255),w,b
  2066  00111A  0100               	movlb	0	; () banked
  2067  00111C  5B67               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  2068  00111E  0100               	movlb	0	; () banked
  2069  001120  516B               	movf	(___ftdiv@f2+2)& (0+255),w,b
  2070  001122  0100               	movlb	0	; () banked
  2071  001124  5B68               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  2072                           
  2073                           ; BSR set to: 0
  2074  001126  0100               	movlb	0	; () banked
  2075  001128  8170               	bsf	___ftdiv@f3& (0+255),0,b
  2076  00112A                     l824:
  2077                           
  2078                           ; BSR set to: 0
  2079  00112A  0100               	movlb	0	; () banked
  2080  00112C  90D8               	bcf	status,0,c
  2081  00112E  3766               	rlcf	___ftdiv@f1& (0+255),f,b
  2082  001130  3767               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  2083  001132  3768               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  2084                           
  2085                           ; BSR set to: 0
  2086  001134  0100               	movlb	0	; () banked
  2087  001136  2F6F               	decfsz	___ftdiv@cntr& (0+255),f,b
  2088  001138  D7D7               	goto	l2356
  2089  00113A  D000               	goto	l2366
  2090  00113C                     l2366:
  2091                           
  2092                           ; BSR set to: 0
  2093  00113C  C070  F019         	movff	___ftdiv@f3,___ftpack@arg
  2094  001140  C071  F01A         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2095  001144  C072  F01B         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2096  001148  C073  F01C         	movff	___ftdiv@exp,___ftpack@exp
  2097  00114C  C074  F01D         	movff	___ftdiv@sign,___ftpack@sign
  2098  001150  EC4D  F00A         	call	___ftpack	;wreg free
  2099  001154  C019  F066         	movff	?___ftpack,?___ftdiv
  2100  001158  C01A  F067         	movff	?___ftpack+1,?___ftdiv+1
  2101  00115C  C01B  F068         	movff	?___ftpack+2,?___ftdiv+2
  2102  001160  0012               	return	
  2103  001162  0012               	return		;funcret
  2104  001164                     __end_of___ftdiv:
  2105                           	opt stack 0
  2106                           tblptru	equ	0xFF8
  2107                           tblptrh	equ	0xFF7
  2108                           tblptrl	equ	0xFF6
  2109                           tablat	equ	0xFF5
  2110                           intcon	equ	0xFF2
  2111                           postinc0	equ	0xFEE
  2112                           wreg	equ	0xFE8
  2113                           status	equ	0xFD8
  2114                           
  2115 ;; *************** function ___ftpack *****************
  2116 ;; Defined at:
  2117 ;;		line 62 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;  arg             3   24[COMRAM] unsigned um
  2120 ;;  exp             1   27[COMRAM] unsigned char 
  2121 ;;  sign            1   28[COMRAM] unsigned char 
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;		None
  2124 ;; Return value:  Size  Location     Type
  2125 ;;                  3   24[COMRAM] float 
  2126 ;; Registers used:
  2127 ;;		wreg, status,2, status,0
  2128 ;; Tracked objects:
  2129 ;;		On entry : 0/0
  2130 ;;		On exit  : 0/0
  2131 ;;		Unchanged: 0/0
  2132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2133 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2135 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2136 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2137 ;;Total ram usage:        8 bytes
  2138 ;; Hardware stack levels used:    1
  2139 ;; Hardware stack levels required when called:    3
  2140 ;; This function calls:
  2141 ;;		Nothing
  2142 ;; This function is called by:
  2143 ;;		___ftdiv
  2144 ;;		___ftmul
  2145 ;;		___lwtoft
  2146 ;; This function uses a non-reentrant model
  2147 ;;
  2148                           
  2149                           	psect	text15
  2150  00149A                     __ptext15:
  2151                           	opt stack 0
  2152  00149A                     ___ftpack:
  2153                           	opt stack 24
  2154                           
  2155                           ;incstack = 0
  2156  00149A  501C               	movf	___ftpack@exp,w,c
  2157  00149C  B4D8               	btfsc	status,2,c
  2158  00149E  D005               	goto	l2254
  2159  0014A0  5019               	movf	___ftpack@arg,w,c
  2160  0014A2  101A               	iorwf	___ftpack@arg+1,w,c
  2161  0014A4  101B               	iorwf	___ftpack@arg+2,w,c
  2162  0014A6  A4D8               	btfss	status,2,c
  2163  0014A8  D00E               	goto	l2260
  2164  0014AA                     l2254:
  2165  0014AA  0E00               	movlw	0
  2166  0014AC  6E19               	movwf	?___ftpack,c
  2167  0014AE  0E00               	movlw	0
  2168  0014B0  6E1A               	movwf	?___ftpack+1,c
  2169  0014B2  0E00               	movlw	0
  2170  0014B4  6E1B               	movwf	?___ftpack+2,c
  2171  0014B6  0012               	return	
  2172  0014B8  D006               	goto	l2260
  2173  0014BA                     l2258:
  2174  0014BA  2A1C               	incf	___ftpack@exp,f,c
  2175  0014BC  90D8               	bcf	status,0,c
  2176  0014BE  321B               	rrcf	___ftpack@arg+2,f,c
  2177  0014C0  321A               	rrcf	___ftpack@arg+1,f,c
  2178  0014C2  3219               	rrcf	___ftpack@arg,f,c
  2179  0014C4  D000               	goto	l2260
  2180  0014C6                     l2260:
  2181  0014C6  0E00               	movlw	0
  2182  0014C8  1419               	andwf	___ftpack@arg,w,c
  2183  0014CA  6E1E               	movwf	??___ftpack& (0+255),c
  2184  0014CC  0E00               	movlw	0
  2185  0014CE  141A               	andwf	___ftpack@arg+1,w,c
  2186  0014D0  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  2187  0014D2  0EFE               	movlw	254
  2188  0014D4  141B               	andwf	___ftpack@arg+2,w,c
  2189  0014D6  6E20               	movwf	(??___ftpack+2)& (0+255),c
  2190  0014D8  501E               	movf	??___ftpack,w,c
  2191  0014DA  101F               	iorwf	??___ftpack+1,w,c
  2192  0014DC  1020               	iorwf	??___ftpack+2,w,c
  2193  0014DE  B4D8               	btfsc	status,2,c
  2194  0014E0  D00E               	goto	l2266
  2195  0014E2  D7EB               	goto	l2258
  2196  0014E4  D00C               	goto	l2266
  2197  0014E6                     l2262:
  2198  0014E6  2A1C               	incf	___ftpack@exp,f,c
  2199  0014E8  0E01               	movlw	1
  2200  0014EA  2619               	addwf	___ftpack@arg,f,c
  2201  0014EC  0E00               	movlw	0
  2202  0014EE  221A               	addwfc	___ftpack@arg+1,f,c
  2203  0014F0  0E00               	movlw	0
  2204  0014F2  221B               	addwfc	___ftpack@arg+2,f,c
  2205  0014F4  90D8               	bcf	status,0,c
  2206  0014F6  321B               	rrcf	___ftpack@arg+2,f,c
  2207  0014F8  321A               	rrcf	___ftpack@arg+1,f,c
  2208  0014FA  3219               	rrcf	___ftpack@arg,f,c
  2209  0014FC  D000               	goto	l2266
  2210  0014FE                     l2266:
  2211  0014FE  0E00               	movlw	0
  2212  001500  1419               	andwf	___ftpack@arg,w,c
  2213  001502  6E1E               	movwf	??___ftpack& (0+255),c
  2214  001504  0E00               	movlw	0
  2215  001506  141A               	andwf	___ftpack@arg+1,w,c
  2216  001508  6E1F               	movwf	(??___ftpack+1)& (0+255),c
  2217  00150A  0EFF               	movlw	255
  2218  00150C  141B               	andwf	___ftpack@arg+2,w,c
  2219  00150E  6E20               	movwf	(??___ftpack+2)& (0+255),c
  2220  001510  501E               	movf	??___ftpack,w,c
  2221  001512  101F               	iorwf	??___ftpack+1,w,c
  2222  001514  1020               	iorwf	??___ftpack+2,w,c
  2223  001516  B4D8               	btfsc	status,2,c
  2224  001518  D008               	goto	l2270
  2225  00151A  D7E5               	goto	l2262
  2226  00151C  D006               	goto	l2270
  2227  00151E                     l2268:
  2228  00151E  061C               	decf	___ftpack@exp,f,c
  2229  001520  90D8               	bcf	status,0,c
  2230  001522  3619               	rlcf	___ftpack@arg,f,c
  2231  001524  361A               	rlcf	___ftpack@arg+1,f,c
  2232  001526  361B               	rlcf	___ftpack@arg+2,f,c
  2233  001528  D000               	goto	l2270
  2234  00152A                     l2270:
  2235  00152A  BE1A               	btfsc	___ftpack@arg+1,7,c
  2236  00152C  D004               	goto	l760
  2237  00152E  0E02               	movlw	2
  2238  001530  601C               	cpfslt	___ftpack@exp,c
  2239  001532  D7F5               	goto	l2268
  2240  001534  D000               	goto	l760
  2241  001536                     l760:
  2242  001536  B01C               	btfsc	___ftpack@exp,0,c
  2243  001538  D002               	goto	l2276
  2244  00153A  9E1A               	bcf	___ftpack@arg+1,7,c
  2245  00153C  D000               	goto	l2276
  2246  00153E                     l2276:
  2247  00153E  90D8               	bcf	status,0,c
  2248  001540  321C               	rrcf	___ftpack@exp,f,c
  2249  001542  501C               	movf	___ftpack@exp,w,c
  2250  001544  121B               	iorwf	___ftpack@arg+2,f,c
  2251  001546  501D               	movf	___ftpack@sign,w,c
  2252  001548  B4D8               	btfsc	status,2,c
  2253  00154A  D002               	goto	l2282
  2254  00154C  8E1B               	bsf	___ftpack@arg+2,7,c
  2255  00154E  D000               	goto	l2282
  2256  001550                     l2282:
  2257  001550  C019  F019         	movff	___ftpack@arg,?___ftpack
  2258  001554  C01A  F01A         	movff	___ftpack@arg+1,?___ftpack+1
  2259  001558  C01B  F01B         	movff	___ftpack@arg+2,?___ftpack+2
  2260  00155C  0012               	return	
  2261  00155E  0012               	return		;funcret
  2262  001560                     __end_of___ftpack:
  2263                           	opt stack 0
  2264                           tblptru	equ	0xFF8
  2265                           tblptrh	equ	0xFF7
  2266                           tblptrl	equ	0xFF6
  2267                           tablat	equ	0xFF5
  2268                           intcon	equ	0xFF2
  2269                           postinc0	equ	0xFEE
  2270                           wreg	equ	0xFE8
  2271                           status	equ	0xFD8
  2272                           
  2273 ;; *************** function _ReadADC *****************
  2274 ;; Defined at:
  2275 ;;		line 24 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcread.c"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;		None
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;		None
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  2   24[COMRAM] int 
  2282 ;; Registers used:
  2283 ;;		wreg, status,2
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2289 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2291 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2292 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2293 ;;Total ram usage:        4 bytes
  2294 ;; Hardware stack levels used:    1
  2295 ;; Hardware stack levels required when called:    3
  2296 ;; This function calls:
  2297 ;;		Nothing
  2298 ;; This function is called by:
  2299 ;;		_Get_ADC6
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           	psect	text16
  2304  001BB2                     __ptext16:
  2305                           	opt stack 0
  2306  001BB2                     _ReadADC:
  2307                           	opt stack 25
  2308                           
  2309                           ;incstack = 0
  2310  001BB2  50C4               	movf	4036,w,c	;volatile
  2311  001BB4  6E1B               	movwf	??_ReadADC& (0+255),c
  2312  001BB6  50C3               	movf	4035,w,c	;volatile
  2313  001BB8  6E19               	movwf	?_ReadADC,c
  2314  001BBA  C01B  F01A         	movff	??_ReadADC,?_ReadADC+1
  2315  001BBE  0012               	return	
  2316  001BC0  0012               	return		;funcret
  2317  001BC2                     __end_of_ReadADC:
  2318                           	opt stack 0
  2319                           tblptru	equ	0xFF8
  2320                           tblptrh	equ	0xFF7
  2321                           tblptrl	equ	0xFF6
  2322                           tablat	equ	0xFF5
  2323                           intcon	equ	0xFF2
  2324                           postinc0	equ	0xFEE
  2325                           wreg	equ	0xFE8
  2326                           status	equ	0xFD8
  2327                           
  2328 ;; *************** function _ConvertADC *****************
  2329 ;; Defined at:
  2330 ;;		line 22 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcconv.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;		None
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;		None
  2335 ;; Return value:  Size  Location     Type
  2336 ;;		None               void
  2337 ;; Registers used:
  2338 ;;		None
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2348 ;;Total ram usage:        0 bytes
  2349 ;; Hardware stack levels used:    1
  2350 ;; Hardware stack levels required when called:    3
  2351 ;; This function calls:
  2352 ;;		Nothing
  2353 ;; This function is called by:
  2354 ;;		_Get_ADC6
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           
  2358                           	psect	text17
  2359  001BF4                     __ptext17:
  2360                           	opt stack 0
  2361  001BF4                     _ConvertADC:
  2362                           	opt stack 25
  2363                           
  2364                           ;incstack = 0
  2365  001BF4  82C2               	bsf	4034,1,c	;volatile
  2366  001BF6  0012               	return		;funcret
  2367  001BF8                     __end_of_ConvertADC:
  2368                           	opt stack 0
  2369                           tblptru	equ	0xFF8
  2370                           tblptrh	equ	0xFF7
  2371                           tblptrl	equ	0xFF6
  2372                           tablat	equ	0xFF5
  2373                           intcon	equ	0xFF2
  2374                           postinc0	equ	0xFEE
  2375                           wreg	equ	0xFE8
  2376                           status	equ	0xFD8
  2377                           
  2378 ;; *************** function _BusyADC *****************
  2379 ;; Defined at:
  2380 ;;		line 26 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcbusy.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;		None
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;		None
  2385 ;; Return value:  Size  Location     Type
  2386 ;;                  1    wreg      unsigned char 
  2387 ;; Registers used:
  2388 ;;		wreg
  2389 ;; Tracked objects:
  2390 ;;		On entry : 0/0
  2391 ;;		On exit  : 0/0
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2398 ;;Total ram usage:        0 bytes
  2399 ;; Hardware stack levels used:    1
  2400 ;; Hardware stack levels required when called:    3
  2401 ;; This function calls:
  2402 ;;		Nothing
  2403 ;; This function is called by:
  2404 ;;		_Get_ADC6
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           
  2408                           	psect	text18
  2409  001BD0                     __ptext18:
  2410                           	opt stack 0
  2411  001BD0                     _BusyADC:
  2412                           	opt stack 25
  2413                           
  2414                           ;incstack = 0
  2415  001BD0  A2C2               	btfss	4034,1,c	;volatile
  2416  001BD2  D002               	goto	u1840
  2417  001BD4  0E01               	movlw	1
  2418  001BD6  0012               	return	
  2419  001BD8                     u1840:
  2420  001BD8  0E00               	movlw	0
  2421  001BDA  0012               	return	
  2422  001BDC  0012               	return		;funcret
  2423  001BDE                     __end_of_BusyADC:
  2424                           	opt stack 0
  2425                           tblptru	equ	0xFF8
  2426                           tblptrh	equ	0xFF7
  2427                           tblptrl	equ	0xFF6
  2428                           tablat	equ	0xFF5
  2429                           intcon	equ	0xFF2
  2430                           postinc0	equ	0xFEE
  2431                           wreg	equ	0xFE8
  2432                           status	equ	0xFD8
  2433                           
  2434 ;; *************** function _Busy2USART *****************
  2435 ;; Defined at:
  2436 ;;		line 14 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u2busy.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;		None
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;		None
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  2   24[COMRAM] int 
  2443 ;; Registers used:
  2444 ;;		wreg, status,2
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2450 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2453 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2454 ;;Total ram usage:        2 bytes
  2455 ;; Hardware stack levels used:    1
  2456 ;; Hardware stack levels required when called:    3
  2457 ;; This function calls:
  2458 ;;		Nothing
  2459 ;; This function is called by:
  2460 ;;		_Run
  2461 ;; This function uses a non-reentrant model
  2462 ;;
  2463                           
  2464                           	psect	text19
  2465  001B50                     __ptext19:
  2466                           	opt stack 0
  2467  001B50                     _Busy2USART:
  2468                           	opt stack 26
  2469                           
  2470                           ;incstack = 0
  2471  001B50  010F               	movlb	15	; () banked
  2472  001B52  B321               	btfsc	33,1,b	;volatile
  2473  001B54  D005               	goto	l2584
  2474                           
  2475                           ; BSR set to: 15
  2476  001B56  0E00               	movlw	0
  2477  001B58  6E1A               	movwf	?_Busy2USART+1,c
  2478  001B5A  0E01               	movlw	1
  2479  001B5C  6E19               	movwf	?_Busy2USART,c
  2480                           
  2481                           ; BSR set to: 15
  2482  001B5E  0012               	return	
  2483  001B60                     l2584:
  2484                           
  2485                           ; BSR set to: 15
  2486  001B60  0E00               	movlw	0
  2487  001B62  6E1A               	movwf	?_Busy2USART+1,c
  2488  001B64  0E00               	movlw	0
  2489  001B66  6E19               	movwf	?_Busy2USART,c
  2490  001B68  0012               	return	
  2491                           
  2492                           ; BSR set to: 15
  2493                           
  2494                           ; BSR set to: 15
  2495  001B6A  0012               	return		;funcret
  2496  001B6C                     __end_of_Busy2USART:
  2497                           	opt stack 0
  2498                           tblptru	equ	0xFF8
  2499                           tblptrh	equ	0xFF7
  2500                           tblptrl	equ	0xFF6
  2501                           tablat	equ	0xFF5
  2502                           intcon	equ	0xFF2
  2503                           postinc0	equ	0xFEE
  2504                           wreg	equ	0xFE8
  2505                           status	equ	0xFD8
  2506                           
  2507 ;; *************** function _My_USART_Init *****************
  2508 ;; Defined at:
  2509 ;;		line 45 in file "_01_USER/My_USART.c"
  2510 ;; Parameters:    Size  Location     Type
  2511 ;;		None
  2512 ;; Auto vars:     Size  Location     Type
  2513 ;;		None
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  2   12[None  ] int 
  2516 ;; Registers used:
  2517 ;;		wreg, status,2, status,0, cstack
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2527 ;;Total ram usage:        0 bytes
  2528 ;; Hardware stack levels used:    1
  2529 ;; Hardware stack levels required when called:    4
  2530 ;; This function calls:
  2531 ;;		_Open2USART
  2532 ;; This function is called by:
  2533 ;;		_main
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           	psect	text20
  2538  001B2E                     __ptext20:
  2539                           	opt stack 0
  2540  001B2E                     _My_USART_Init:
  2541                           	opt stack 26
  2542                           
  2543                           ;My_USART.c: 47: Open2USART( 0b01111111 &
  2544                           ;My_USART.c: 48: 0b11111111 &
  2545                           ;My_USART.c: 49: 0b11111110 &
  2546                           ;My_USART.c: 50: 0b11111101 &
  2547                           ;My_USART.c: 51: 0b11111111 &
  2548                           ;My_USART.c: 52: 0b11101111
  2549                           ;My_USART.c: 53: ,
  2550                           ;My_USART.c: 54: 12
  2551                           ;My_USART.c: 55: );
  2552                           
  2553                           ; BSR set to: 15
  2554                           ;incstack = 0
  2555  001B2E  0E00               	movlw	0
  2556  001B30  6E1A               	movwf	Open2USART@spbrg+1,c
  2557  001B32  0E0C               	movlw	12
  2558  001B34  6E19               	movwf	Open2USART@spbrg,c
  2559  001B36  0E6C               	movlw	108
  2560  001B38  ECB0  F00A         	call	_Open2USART
  2561                           
  2562                           ;My_USART.c: 57: TRISGbits.TRISG1 = 1;
  2563  001B3C  8298               	bsf	3992,1,c	;volatile
  2564                           
  2565                           ;My_USART.c: 58: TRISGbits.TRISG2 = 0;
  2566  001B3E  9498               	bcf	3992,2,c	;volatile
  2567                           
  2568                           ;My_USART.c: 59: TRISGbits.TRISG3 = 0;
  2569  001B40  9698               	bcf	3992,3,c	;volatile
  2570                           
  2571                           ;My_USART.c: 60: RG3 = 1;
  2572  001B42  8686               	bsf	3974,3,c	;volatile
  2573                           
  2574                           ;My_USART.c: 62: INTCON |= 0x80;
  2575  001B44  8EF2               	bsf	intcon,7,c	;volatile
  2576                           
  2577                           ;My_USART.c: 63: INTCON |= 0x40;
  2578  001B46  8CF2               	bsf	intcon,6,c	;volatile
  2579                           
  2580                           ;My_USART.c: 65: ANCON2 &= 0XF9;
  2581  001B48  0EF9               	movlw	249
  2582  001B4A  010F               	movlb	15	; () banked
  2583  001B4C  1723               	andwf	35,f,b	;volatile
  2584                           
  2585                           ; BSR set to: 15
  2586  001B4E  0012               	return		;funcret
  2587  001B50                     __end_of_My_USART_Init:
  2588                           	opt stack 0
  2589                           tblptru	equ	0xFF8
  2590                           tblptrh	equ	0xFF7
  2591                           tblptrl	equ	0xFF6
  2592                           tablat	equ	0xFF5
  2593                           intcon	equ	0xFF2
  2594                           postinc0	equ	0xFEE
  2595                           wreg	equ	0xFE8
  2596                           status	equ	0xFD8
  2597                           
  2598 ;; *************** function _Open2USART *****************
  2599 ;; Defined at:
  2600 ;;		line 118 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\u2open.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;  config          1    wreg     unsigned char 
  2603 ;;  spbrg           2   24[COMRAM] unsigned int 
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;  config          1   26[COMRAM] unsigned char 
  2606 ;; Return value:  Size  Location     Type
  2607 ;;		None               void
  2608 ;; Registers used:
  2609 ;;		wreg, status,2
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2615 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2616 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2618 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2619 ;;Total ram usage:        3 bytes
  2620 ;; Hardware stack levels used:    1
  2621 ;; Hardware stack levels required when called:    3
  2622 ;; This function calls:
  2623 ;;		Nothing
  2624 ;; This function is called by:
  2625 ;;		_My_USART_Init
  2626 ;; This function uses a non-reentrant model
  2627 ;;
  2628                           
  2629                           	psect	text21
  2630  001560                     __ptext21:
  2631                           	opt stack 0
  2632  001560                     _Open2USART:
  2633                           	opt stack 26
  2634                           
  2635                           ; BSR set to: 15
  2636                           ;incstack = 0
  2637                           ;Open2USART@config stored from wreg
  2638  001560  6E1B               	movwf	Open2USART@config,c
  2639  001562  0E00               	movlw	0
  2640  001564  010F               	movlb	15	; () banked
  2641  001566  6F21               	movwf	33,b	;volatile
  2642  001568  0E00               	movlw	0
  2643  00156A  010F               	movlb	15	; () banked
  2644  00156C  6F22               	movwf	34,b	;volatile
  2645                           
  2646                           ; BSR set to: 15
  2647  00156E  A01B               	btfss	Open2USART@config,0,c
  2648  001570  D003               	goto	l2504
  2649                           
  2650                           ; BSR set to: 15
  2651  001572  010F               	movlb	15	; () banked
  2652  001574  8921               	bsf	33,4,b	;volatile
  2653  001576  D000               	goto	l2504
  2654  001578                     l2504:
  2655                           
  2656                           ; BSR set to: 15
  2657  001578  A21B               	btfss	Open2USART@config,1,c
  2658  00157A  D005               	goto	l2508
  2659                           
  2660                           ; BSR set to: 15
  2661  00157C  010F               	movlb	15	; () banked
  2662  00157E  8D21               	bsf	33,6,b	;volatile
  2663  001580  010F               	movlb	15	; () banked
  2664  001582  8D22               	bsf	34,6,b	;volatile
  2665  001584  D000               	goto	l2508
  2666  001586                     l2508:
  2667                           
  2668                           ; BSR set to: 15
  2669  001586  A41B               	btfss	Open2USART@config,2,c
  2670  001588  D003               	goto	l2512
  2671                           
  2672                           ; BSR set to: 15
  2673  00158A  010F               	movlb	15	; () banked
  2674  00158C  8F21               	bsf	33,7,b	;volatile
  2675  00158E  D000               	goto	l2512
  2676  001590                     l2512:
  2677                           
  2678                           ; BSR set to: 15
  2679  001590  A61B               	btfss	Open2USART@config,3,c
  2680  001592  D003               	goto	l429
  2681                           
  2682                           ; BSR set to: 15
  2683  001594  010F               	movlb	15	; () banked
  2684  001596  8922               	bsf	34,4,b	;volatile
  2685  001598  D003               	goto	l2516
  2686  00159A                     l429:
  2687                           
  2688                           ; BSR set to: 15
  2689  00159A  010F               	movlb	15	; () banked
  2690  00159C  8B22               	bsf	34,5,b	;volatile
  2691  00159E  D000               	goto	l2516
  2692  0015A0                     l2516:
  2693                           
  2694                           ; BSR set to: 15
  2695  0015A0  A81B               	btfss	Open2USART@config,4,c
  2696  0015A2  D003               	goto	l431
  2697                           
  2698                           ; BSR set to: 15
  2699  0015A4  010F               	movlb	15	; () banked
  2700  0015A6  8521               	bsf	33,2,b	;volatile
  2701  0015A8  D003               	goto	l2520
  2702  0015AA                     l431:
  2703                           
  2704                           ; BSR set to: 15
  2705  0015AA  010F               	movlb	15	; () banked
  2706  0015AC  9521               	bcf	33,2,b	;volatile
  2707  0015AE  D000               	goto	l2520
  2708  0015B0                     l2520:
  2709                           
  2710                           ; BSR set to: 15
  2711  0015B0  AA1B               	btfss	Open2USART@config,5,c
  2712  0015B2  D003               	goto	l2524
  2713                           
  2714                           ; BSR set to: 15
  2715  0015B4  010F               	movlb	15	; () banked
  2716  0015B6  8722               	bsf	34,3,b	;volatile
  2717  0015B8  D000               	goto	l2524
  2718  0015BA                     l2524:
  2719                           
  2720                           ; BSR set to: 15
  2721  0015BA  AC1B               	btfss	Open2USART@config,6,c
  2722  0015BC  D002               	goto	l434
  2723                           
  2724                           ; BSR set to: 15
  2725  0015BE  8AA3               	bsf	4003,5,c	;volatile
  2726  0015C0  D002               	goto	l2528
  2727  0015C2                     l434:
  2728                           
  2729                           ; BSR set to: 15
  2730  0015C2  9AA3               	bcf	4003,5,c	;volatile
  2731  0015C4  D000               	goto	l2528
  2732  0015C6                     l2528:
  2733                           
  2734                           ; BSR set to: 15
  2735  0015C6  AE1B               	btfss	Open2USART@config,7,c
  2736  0015C8  D002               	goto	l436
  2737                           
  2738                           ; BSR set to: 15
  2739  0015CA  88A3               	bsf	4003,4,c	;volatile
  2740  0015CC  D001               	goto	l437
  2741  0015CE                     l436:
  2742                           
  2743                           ; BSR set to: 15
  2744  0015CE  98A3               	bcf	4003,4,c	;volatile
  2745  0015D0                     l437:
  2746                           
  2747                           ; BSR set to: 15
  2748  0015D0  C019  FF1E         	movff	Open2USART@spbrg,3870	;volatile
  2749                           
  2750                           ; BSR set to: 15
  2751  0015D4  501A               	movf	Open2USART@spbrg+1,w,c
  2752  0015D6  010F               	movlb	15	; () banked
  2753  0015D8  6F1F               	movwf	31,b	;volatile
  2754                           
  2755                           ; BSR set to: 15
  2756  0015DA  010F               	movlb	15	; () banked
  2757  0015DC  8B21               	bsf	33,5,b	;volatile
  2758                           
  2759                           ; BSR set to: 15
  2760  0015DE  010F               	movlb	15	; () banked
  2761  0015E0  8F22               	bsf	34,7,b	;volatile
  2762                           
  2763                           ; BSR set to: 15
  2764  0015E2  0012               	return		;funcret
  2765  0015E4                     __end_of_Open2USART:
  2766                           	opt stack 0
  2767                           tblptru	equ	0xFF8
  2768                           tblptrh	equ	0xFF7
  2769                           tblptrl	equ	0xFF6
  2770                           tablat	equ	0xFF5
  2771                           intcon	equ	0xFF2
  2772                           postinc0	equ	0xFEE
  2773                           wreg	equ	0xFE8
  2774                           status	equ	0xFD8
  2775                           
  2776 ;; *************** function _Manage_Message *****************
  2777 ;; Defined at:
  2778 ;;		line 78 in file "_01_USER/Run.c"
  2779 ;; Parameters:    Size  Location     Type
  2780 ;;		None
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;		None
  2783 ;; Return value:  Size  Location     Type
  2784 ;;		None               void
  2785 ;; Registers used:
  2786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2787 ;; Tracked objects:
  2788 ;;		On entry : 0/0
  2789 ;;		On exit  : 0/0
  2790 ;;		Unchanged: 0/0
  2791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2796 ;;Total ram usage:        0 bytes
  2797 ;; Hardware stack levels used:    1
  2798 ;; Hardware stack levels required when called:    4
  2799 ;; This function calls:
  2800 ;;		_Key_FSM_Read
  2801 ;; This function is called by:
  2802 ;;		_main
  2803 ;; This function uses a non-reentrant model
  2804 ;;
  2805                           
  2806                           	psect	text22
  2807  0018FA                     __ptext22:
  2808                           	opt stack 0
  2809  0018FA                     _Manage_Message:
  2810                           	opt stack 26
  2811                           
  2812                           ;Run.c: 80: if (Key_FSM_Read(4) == 0x01 ) USART2_TendBuff ++;
  2813                           
  2814                           ; BSR set to: 15
  2815                           ;incstack = 0
  2816  0018FA  0E04               	movlw	4
  2817  0018FC  ECF2  F00A         	call	_Key_FSM_Read
  2818  001900  06E8               	decf	wreg,f,c
  2819  001902  A4D8               	btfss	status,2,c
  2820  001904  D003               	goto	l2638
  2821  001906  4A36               	infsnz	_USART2_TendBuff,f,c
  2822  001908  2A37               	incf	_USART2_TendBuff+1,f,c
  2823  00190A  D000               	goto	l2638
  2824  00190C                     l2638:
  2825                           
  2826                           ;Run.c: 81: if (Key_FSM_Read(1) == 0x01 ) Handle_01_Switch.Usart_OneDate = 1;
  2827  00190C  0E01               	movlw	1
  2828  00190E  ECF2  F00A         	call	_Key_FSM_Read
  2829  001912  06E8               	decf	wreg,f,c
  2830  001914  A4D8               	btfss	status,2,c
  2831  001916  D003               	goto	l2642
  2832  001918  0E01               	movlw	1
  2833  00191A  6E33               	movwf	_Handle_01_Switch+2,c
  2834  00191C  D000               	goto	l2642
  2835  00191E                     l2642:
  2836                           
  2837                           ;Run.c: 82: if (Key_FSM_Read(2) == 0x01 ) USART2_TendBuff --;
  2838  00191E  0E02               	movlw	2
  2839  001920  ECF2  F00A         	call	_Key_FSM_Read
  2840  001924  06E8               	decf	wreg,f,c
  2841  001926  A4D8               	btfss	status,2,c
  2842  001928  0012               	return	
  2843  00192A  0636               	decf	_USART2_TendBuff,f,c
  2844  00192C  A0D8               	btfss	status,0,c
  2845  00192E  0637               	decf	_USART2_TendBuff+1,f,c
  2846  001930  0012               	return	
  2847  001932  0012               	return		;funcret
  2848  001934                     __end_of_Manage_Message:
  2849                           	opt stack 0
  2850                           tblptru	equ	0xFF8
  2851                           tblptrh	equ	0xFF7
  2852                           tblptrl	equ	0xFF6
  2853                           tablat	equ	0xFF5
  2854                           intcon	equ	0xFF2
  2855                           postinc0	equ	0xFEE
  2856                           wreg	equ	0xFE8
  2857                           status	equ	0xFD8
  2858                           
  2859 ;; *************** function _Key_FSM_Read *****************
  2860 ;; Defined at:
  2861 ;;		line 155 in file "_01_USER/Key.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;  key_num         1    wreg     unsigned char 
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;  key_num         1   29[COMRAM] unsigned char 
  2866 ;;  temp            1   28[COMRAM] unsigned char 
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  1    wreg      unsigned char 
  2869 ;; Registers used:
  2870 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2877 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2878 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2879 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2880 ;;Total ram usage:        6 bytes
  2881 ;; Hardware stack levels used:    1
  2882 ;; Hardware stack levels required when called:    3
  2883 ;; This function calls:
  2884 ;;		Nothing
  2885 ;; This function is called by:
  2886 ;;		_Manage_Message
  2887 ;; This function uses a non-reentrant model
  2888 ;;
  2889                           
  2890                           	psect	text23
  2891  0015E4                     __ptext23:
  2892                           	opt stack 0
  2893  0015E4                     _Key_FSM_Read:
  2894                           	opt stack 26
  2895                           
  2896                           ;incstack = 0
  2897                           ;Key_FSM_Read@key_num stored from wreg
  2898  0015E4  6E1E               	movwf	Key_FSM_Read@key_num,c
  2899                           
  2900                           ;Key.c: 157: unsigned char temp;
  2901                           ;Key.c: 158: if( key_num != 0xff )
  2902  0015E6  281E               	incf	Key_FSM_Read@key_num,w,c
  2903  0015E8  B4D8               	btfsc	status,2,c
  2904  0015EA  D02D               	goto	l2482
  2905                           
  2906                           ;Key.c: 159: {
  2907                           ;Key.c: 160: if( Local_Key_FSM.key_state == 0x00 )
  2908  0015EC  503C               	movf	_Local_Key_FSM,w,c	;volatile
  2909  0015EE  A4D8               	btfss	status,2,c
  2910  0015F0  D028               	goto	l2478
  2911                           
  2912                           ;Key.c: 161: {
  2913                           ;Key.c: 162: temp = Local_Key_FSM.key_FSM[key_num-1];
  2914  0015F2  0EFF               	movlw	255
  2915  0015F4  6E19               	movwf	??_Key_FSM_Read& (0+255),c
  2916  0015F6  0EFF               	movlw	255
  2917  0015F8  6E1A               	movwf	(??_Key_FSM_Read+1)& (0+255),c
  2918  0015FA  501E               	movf	Key_FSM_Read@key_num,w,c
  2919  0015FC  6E1B               	movwf	(??_Key_FSM_Read+2)& (0+255),c
  2920  0015FE  6A1C               	clrf	(??_Key_FSM_Read+3)& (0+255),c
  2921  001600  5019               	movf	??_Key_FSM_Read,w,c
  2922  001602  261B               	addwf	??_Key_FSM_Read+2,f,c
  2923  001604  501A               	movf	??_Key_FSM_Read+1,w,c
  2924  001606  221C               	addwfc	??_Key_FSM_Read+3,f,c
  2925  001608  0E3D               	movlw	low (_Local_Key_FSM+1)
  2926  00160A  241B               	addwf	??_Key_FSM_Read+2,w,c
  2927  00160C  6ED9               	movwf	fsr2l,c
  2928  00160E  0E00               	movlw	high (_Local_Key_FSM+1)
  2929  001610  201C               	addwfc	??_Key_FSM_Read+3,w,c
  2930  001612  6EDA               	movwf	fsr2h,c
  2931  001614  50DF               	movf	indf2,w,c
  2932  001616  6E1D               	movwf	Key_FSM_Read@temp,c
  2933                           
  2934                           ;Key.c: 163: Local_Key_FSM.key_FSM[key_num-1] = 0x00;
  2935  001618  0EFF               	movlw	255
  2936  00161A  6E19               	movwf	??_Key_FSM_Read& (0+255),c
  2937  00161C  0EFF               	movlw	255
  2938  00161E  6E1A               	movwf	(??_Key_FSM_Read+1)& (0+255),c
  2939  001620  501E               	movf	Key_FSM_Read@key_num,w,c
  2940  001622  6E1B               	movwf	(??_Key_FSM_Read+2)& (0+255),c
  2941  001624  6A1C               	clrf	(??_Key_FSM_Read+3)& (0+255),c
  2942  001626  5019               	movf	??_Key_FSM_Read,w,c
  2943  001628  261B               	addwf	??_Key_FSM_Read+2,f,c
  2944  00162A  501A               	movf	??_Key_FSM_Read+1,w,c
  2945  00162C  221C               	addwfc	??_Key_FSM_Read+3,f,c
  2946  00162E  0E3D               	movlw	low (_Local_Key_FSM+1)
  2947  001630  241B               	addwf	??_Key_FSM_Read+2,w,c
  2948  001632  6ED9               	movwf	fsr2l,c
  2949  001634  0E00               	movlw	high (_Local_Key_FSM+1)
  2950  001636  201C               	addwfc	??_Key_FSM_Read+3,w,c
  2951  001638  6EDA               	movwf	fsr2h,c
  2952  00163A  0E00               	movlw	0
  2953  00163C  6EDF               	movwf	indf2,c
  2954                           
  2955                           ;Key.c: 164: return temp;
  2956  00163E  501D               	movf	Key_FSM_Read@temp,w,c
  2957                           
  2958                           ;Key.c: 165: }
  2959  001640  0012               	return	
  2960  001642                     l2478:
  2961                           
  2962                           ;Key.c: 167: else return 0x04;
  2963  001642  0E04               	movlw	4
  2964                           
  2965                           ;Key.c: 168: }
  2966  001644  0012               	return	
  2967  001646                     l2482:
  2968                           
  2969                           ;Key.c: 169: else if ( key_num == 0xff )
  2970  001646  281E               	incf	Key_FSM_Read@key_num,w,c
  2971  001648  A4D8               	btfss	status,2,c
  2972  00164A  0012               	return	
  2973                           
  2974                           ;Key.c: 170: {
  2975                           ;Key.c: 171: if( Local_Key_FSM.key_state == 0x00 )
  2976  00164C  503C               	movf	_Local_Key_FSM,w,c	;volatile
  2977  00164E  A4D8               	btfss	status,2,c
  2978  001650  D006               	goto	l2494
  2979                           
  2980                           ;Key.c: 172: {
  2981                           ;Key.c: 173: temp = Local_Key_FSM.key_group;
  2982  001652  C041  F01D         	movff	_Local_Key_FSM+5,Key_FSM_Read@temp	;volatile
  2983                           
  2984                           ;Key.c: 174: Local_Key_FSM.key_group = 0x00;
  2985  001656  0E00               	movlw	0
  2986  001658  6E41               	movwf	_Local_Key_FSM+5,c	;volatile
  2987                           
  2988                           ;Key.c: 175: return temp;
  2989  00165A  501D               	movf	Key_FSM_Read@temp,w,c
  2990                           
  2991                           ;Key.c: 176: }
  2992  00165C  0012               	return	
  2993  00165E                     l2494:
  2994                           
  2995                           ;Key.c: 178: else return 0x04;
  2996  00165E  0E04               	movlw	4
  2997  001660  0012               	return	
  2998  001662  0012               	return		;funcret
  2999  001664                     __end_of_Key_FSM_Read:
  3000                           	opt stack 0
  3001                           tblptru	equ	0xFF8
  3002                           tblptrh	equ	0xFF7
  3003                           tblptrl	equ	0xFF6
  3004                           tablat	equ	0xFF5
  3005                           intcon	equ	0xFF2
  3006                           postinc0	equ	0xFEE
  3007                           wreg	equ	0xFE8
  3008                           indf2	equ	0xFDF
  3009                           fsr2h	equ	0xFDA
  3010                           fsr2l	equ	0xFD9
  3011                           status	equ	0xFD8
  3012                           
  3013 ;; *************** function _Key_Init *****************
  3014 ;; Defined at:
  3015 ;;		line 38 in file "_01_USER/Key.c"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;		None
  3018 ;; Auto vars:     Size  Location     Type
  3019 ;;		None
  3020 ;; Return value:  Size  Location     Type
  3021 ;;		None               void
  3022 ;; Registers used:
  3023 ;;		wreg, status,2, status,0
  3024 ;; Tracked objects:
  3025 ;;		On entry : 0/0
  3026 ;;		On exit  : 0/0
  3027 ;;		Unchanged: 0/0
  3028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3033 ;;Total ram usage:        0 bytes
  3034 ;; Hardware stack levels used:    1
  3035 ;; Hardware stack levels required when called:    3
  3036 ;; This function calls:
  3037 ;;		Nothing
  3038 ;; This function is called by:
  3039 ;;		_main
  3040 ;; This function uses a non-reentrant model
  3041 ;;
  3042                           
  3043                           	psect	text24
  3044  001BEA                     __ptext24:
  3045                           	opt stack 0
  3046  001BEA                     _Key_Init:
  3047                           	opt stack 27
  3048                           
  3049                           ;Key.c: 40: TRISE |= 0x1e;
  3050                           
  3051                           ;incstack = 0
  3052  001BEA  0E1E               	movlw	30
  3053  001BEC  1296               	iorwf	3990,f,c	;volatile
  3054                           
  3055                           ;Key.c: 41: TRISD |= 0xc0;
  3056  001BEE  0EC0               	movlw	192
  3057  001BF0  1295               	iorwf	3989,f,c	;volatile
  3058  001BF2  0012               	return		;funcret
  3059  001BF4                     __end_of_Key_Init:
  3060                           	opt stack 0
  3061                           tblptru	equ	0xFF8
  3062                           tblptrh	equ	0xFF7
  3063                           tblptrl	equ	0xFF6
  3064                           tablat	equ	0xFF5
  3065                           intcon	equ	0xFF2
  3066                           postinc0	equ	0xFEE
  3067                           wreg	equ	0xFE8
  3068                           indf2	equ	0xFDF
  3069                           fsr2h	equ	0xFDA
  3070                           fsr2l	equ	0xFD9
  3071                           status	equ	0xFD8
  3072                           
  3073 ;; *************** function _Init_TM1640 *****************
  3074 ;; Defined at:
  3075 ;;		line 119 in file "_01_USER/TM1640.c"
  3076 ;; Parameters:    Size  Location     Type
  3077 ;;		None
  3078 ;; Auto vars:     Size  Location     Type
  3079 ;;		None
  3080 ;; Return value:  Size  Location     Type
  3081 ;;		None               void
  3082 ;; Registers used:
  3083 ;;		wreg, status,2, status,0, cstack
  3084 ;; Tracked objects:
  3085 ;;		On entry : 0/0
  3086 ;;		On exit  : 0/0
  3087 ;;		Unchanged: 0/0
  3088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3090 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3092 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3093 ;;Total ram usage:        0 bytes
  3094 ;; Hardware stack levels used:    1
  3095 ;; Hardware stack levels required when called:    5
  3096 ;; This function calls:
  3097 ;;		_TM1640_Start
  3098 ;;		_TM1640_Stop
  3099 ;;		_TM1640_Writer_Byte
  3100 ;; This function is called by:
  3101 ;;		_main
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105                           	psect	text25
  3106  001A58                     __ptext25:
  3107                           	opt stack 0
  3108  001A58                     _Init_TM1640:
  3109                           	opt stack 25
  3110                           
  3111                           ;TM1640.c: 121: TRISCbits.TRISC3 = 0;
  3112                           
  3113                           ;incstack = 0
  3114  001A58  9694               	bcf	3988,3,c	;volatile
  3115                           
  3116                           ;TM1640.c: 122: TRISCbits.TRISC4 = 0;
  3117  001A5A  9894               	bcf	3988,4,c	;volatile
  3118                           
  3119                           ;TM1640.c: 123: TM1640_Stop();
  3120  001A5C  EC51  F00D         	call	_TM1640_Stop	;wreg free
  3121                           
  3122                           ;TM1640.c: 125: TM1640_Start();
  3123  001A60  EC63  F00D         	call	_TM1640_Start	;wreg free
  3124                           
  3125                           ;TM1640.c: 126: TM1640_Writer_Byte(0x44);
  3126  001A64  0E44               	movlw	68
  3127  001A66  EC5E  F00C         	call	_TM1640_Writer_Byte
  3128                           
  3129                           ;TM1640.c: 127: TM1640_Stop();
  3130  001A6A  EC51  F00D         	call	_TM1640_Stop	;wreg free
  3131                           
  3132                           ;TM1640.c: 129: TM1640_Start();
  3133  001A6E  EC63  F00D         	call	_TM1640_Start	;wreg free
  3134                           
  3135                           ;TM1640.c: 130: TM1640_Writer_Byte(0x8F);
  3136  001A72  0E8F               	movlw	143
  3137  001A74  EC5E  F00C         	call	_TM1640_Writer_Byte
  3138                           
  3139                           ;TM1640.c: 131: TM1640_Stop();
  3140  001A78  EC51  F00D         	call	_TM1640_Stop	;wreg free
  3141  001A7C  0012               	return		;funcret
  3142  001A7E                     __end_of_Init_TM1640:
  3143                           	opt stack 0
  3144                           tblptru	equ	0xFF8
  3145                           tblptrh	equ	0xFF7
  3146                           tblptrl	equ	0xFF6
  3147                           tablat	equ	0xFF5
  3148                           intcon	equ	0xFF2
  3149                           postinc0	equ	0xFEE
  3150                           wreg	equ	0xFE8
  3151                           indf2	equ	0xFDF
  3152                           fsr2h	equ	0xFDA
  3153                           fsr2l	equ	0xFD9
  3154                           status	equ	0xFD8
  3155                           
  3156 ;; *************** function _TM1640_Writer_Byte *****************
  3157 ;; Defined at:
  3158 ;;		line 77 in file "_01_USER/TM1640.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;  Date            1    wreg     const unsigned char 
  3161 ;; Auto vars:     Size  Location     Type
  3162 ;;  Date            1   26[COMRAM] const unsigned char 
  3163 ;;  mask            1   27[COMRAM] unsigned char 
  3164 ;; Return value:  Size  Location     Type
  3165 ;;		None               void
  3166 ;; Registers used:
  3167 ;;		wreg, status,2, status,0, cstack
  3168 ;; Tracked objects:
  3169 ;;		On entry : 0/0
  3170 ;;		On exit  : 0/0
  3171 ;;		Unchanged: 0/0
  3172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3174 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3176 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3177 ;;Total ram usage:        2 bytes
  3178 ;; Hardware stack levels used:    1
  3179 ;; Hardware stack levels required when called:    4
  3180 ;; This function calls:
  3181 ;;		_TM1640_Delay
  3182 ;; This function is called by:
  3183 ;;		_TM1640_Writer_Dates
  3184 ;;		_Init_TM1640
  3185 ;;		_Open_Display
  3186 ;;		_Disable_Display
  3187 ;; This function uses a non-reentrant model
  3188 ;;
  3189                           
  3190                           	psect	text26
  3191  0018BC                     __ptext26:
  3192                           	opt stack 0
  3193  0018BC                     _TM1640_Writer_Byte:
  3194                           	opt stack 23
  3195                           
  3196                           ;incstack = 0
  3197                           ;TM1640_Writer_Byte@Date stored from wreg
  3198  0018BC  6E1B               	movwf	TM1640_Writer_Byte@Date,c
  3199                           
  3200                           ;TM1640.c: 79: unsigned char mask;
  3201                           ;TM1640.c: 81: for(mask=0x01; mask; mask<<=1)
  3202  0018BE  0E01               	movlw	1
  3203  0018C0  6E1C               	movwf	TM1640_Writer_Byte@mask,c
  3204  0018C2  D017               	goto	l2248
  3205  0018C4                     l288:
  3206                           
  3207                           ;TM1640.c: 82: {
  3208                           ;TM1640.c: 83: RC3 = 0;
  3209  0018C4  9682               	bcf	3970,3,c	;volatile
  3210                           
  3211                           ;TM1640.c: 84: TM1640_Delay(1);
  3212  0018C6  0E01               	movlw	1
  3213  0018C8  ECC3  F00D         	call	_TM1640_Delay
  3214                           
  3215                           ;TM1640.c: 85: if(mask & Date)
  3216  0018CC  501C               	movf	TM1640_Writer_Byte@mask,w,c
  3217  0018CE  141B               	andwf	TM1640_Writer_Byte@Date,w,c
  3218  0018D0  0900               	iorlw	0
  3219  0018D2  B4D8               	btfsc	status,2,c
  3220  0018D4  D002               	goto	l289
  3221                           
  3222                           ;TM1640.c: 86: RC4 = 1;
  3223  0018D6  8882               	bsf	3970,4,c	;volatile
  3224  0018D8  D002               	goto	l2242
  3225  0018DA                     l289:
  3226                           
  3227                           ;TM1640.c: 87: else
  3228                           ;TM1640.c: 88: RC4 = 0;
  3229  0018DA  9882               	bcf	3970,4,c	;volatile
  3230  0018DC  D000               	goto	l2242
  3231  0018DE                     l2242:
  3232                           
  3233                           ;TM1640.c: 89: TM1640_Delay(1);
  3234  0018DE  0E01               	movlw	1
  3235  0018E0  ECC3  F00D         	call	_TM1640_Delay
  3236                           
  3237                           ;TM1640.c: 90: RC3 = 1;
  3238  0018E4  8682               	bsf	3970,3,c	;volatile
  3239                           
  3240                           ;TM1640.c: 91: TM1640_Delay(1);
  3241  0018E6  0E01               	movlw	1
  3242  0018E8  ECC3  F00D         	call	_TM1640_Delay
  3243  0018EC  90D8               	bcf	status,0,c
  3244  0018EE  361C               	rlcf	TM1640_Writer_Byte@mask,f,c
  3245  0018F0  D000               	goto	l2248
  3246  0018F2                     l2248:
  3247  0018F2  501C               	movf	TM1640_Writer_Byte@mask,w,c
  3248  0018F4  A4D8               	btfss	status,2,c
  3249  0018F6  D7E6               	goto	l288
  3250  0018F8  0012               	return		;funcret
  3251  0018FA                     __end_of_TM1640_Writer_Byte:
  3252                           	opt stack 0
  3253                           tblptru	equ	0xFF8
  3254                           tblptrh	equ	0xFF7
  3255                           tblptrl	equ	0xFF6
  3256                           tablat	equ	0xFF5
  3257                           intcon	equ	0xFF2
  3258                           postinc0	equ	0xFEE
  3259                           wreg	equ	0xFE8
  3260                           indf2	equ	0xFDF
  3261                           fsr2h	equ	0xFDA
  3262                           fsr2l	equ	0xFD9
  3263                           status	equ	0xFD8
  3264                           
  3265 ;; *************** function _TM1640_Stop *****************
  3266 ;; Defined at:
  3267 ;;		line 32 in file "_01_USER/TM1640.c"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;		None
  3270 ;; Auto vars:     Size  Location     Type
  3271 ;;		None
  3272 ;; Return value:  Size  Location     Type
  3273 ;;		None               void
  3274 ;; Registers used:
  3275 ;;		wreg, status,2, status,0, cstack
  3276 ;; Tracked objects:
  3277 ;;		On entry : 0/0
  3278 ;;		On exit  : 0/0
  3279 ;;		Unchanged: 0/0
  3280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3285 ;;Total ram usage:        0 bytes
  3286 ;; Hardware stack levels used:    1
  3287 ;; Hardware stack levels required when called:    4
  3288 ;; This function calls:
  3289 ;;		_TM1640_Delay
  3290 ;; This function is called by:
  3291 ;;		_TM1640_Writer_Dates
  3292 ;;		_Init_TM1640
  3293 ;;		_Open_Display
  3294 ;;		_Disable_Display
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           	psect	text27
  3299  001AA2                     __ptext27:
  3300                           	opt stack 0
  3301  001AA2                     _TM1640_Stop:
  3302                           	opt stack 23
  3303                           
  3304                           ;TM1640.c: 34: RC3 = 0;
  3305                           
  3306                           ;incstack = 0
  3307  001AA2  9682               	bcf	3970,3,c	;volatile
  3308                           
  3309                           ;TM1640.c: 35: TM1640_Delay(1);
  3310  001AA4  0E01               	movlw	1
  3311  001AA6  ECC3  F00D         	call	_TM1640_Delay
  3312                           
  3313                           ;TM1640.c: 36: RC4 = 0;
  3314  001AAA  9882               	bcf	3970,4,c	;volatile
  3315                           
  3316                           ;TM1640.c: 37: TM1640_Delay(1);
  3317  001AAC  0E01               	movlw	1
  3318  001AAE  ECC3  F00D         	call	_TM1640_Delay
  3319                           
  3320                           ;TM1640.c: 38: RC3 = 1;
  3321  001AB2  8682               	bsf	3970,3,c	;volatile
  3322                           
  3323                           ;TM1640.c: 39: TM1640_Delay(1);
  3324  001AB4  0E01               	movlw	1
  3325  001AB6  ECC3  F00D         	call	_TM1640_Delay
  3326                           
  3327                           ;TM1640.c: 40: RC4 = 1;
  3328  001ABA  8882               	bsf	3970,4,c	;volatile
  3329                           
  3330                           ;TM1640.c: 41: TM1640_Delay(1);
  3331  001ABC  0E01               	movlw	1
  3332  001ABE  ECC3  F00D         	call	_TM1640_Delay
  3333                           
  3334                           ;TM1640.c: 42: RC3 = 0;
  3335  001AC2  9682               	bcf	3970,3,c	;volatile
  3336  001AC4  0012               	return		;funcret
  3337  001AC6                     __end_of_TM1640_Stop:
  3338                           	opt stack 0
  3339                           tblptru	equ	0xFF8
  3340                           tblptrh	equ	0xFF7
  3341                           tblptrl	equ	0xFF6
  3342                           tablat	equ	0xFF5
  3343                           intcon	equ	0xFF2
  3344                           postinc0	equ	0xFEE
  3345                           wreg	equ	0xFE8
  3346                           indf2	equ	0xFDF
  3347                           fsr2h	equ	0xFDA
  3348                           fsr2l	equ	0xFD9
  3349                           status	equ	0xFD8
  3350                           
  3351 ;; *************** function _TM1640_Start *****************
  3352 ;; Defined at:
  3353 ;;		line 19 in file "_01_USER/TM1640.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;		None
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;		None
  3358 ;; Return value:  Size  Location     Type
  3359 ;;		None               void
  3360 ;; Registers used:
  3361 ;;		wreg, status,2, status,0, cstack
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3371 ;;Total ram usage:        0 bytes
  3372 ;; Hardware stack levels used:    1
  3373 ;; Hardware stack levels required when called:    4
  3374 ;; This function calls:
  3375 ;;		_TM1640_Delay
  3376 ;; This function is called by:
  3377 ;;		_TM1640_Writer_Dates
  3378 ;;		_Init_TM1640
  3379 ;;		_Open_Display
  3380 ;;		_Disable_Display
  3381 ;; This function uses a non-reentrant model
  3382 ;;
  3383                           
  3384                           	psect	text28
  3385  001AC6                     __ptext28:
  3386                           	opt stack 0
  3387  001AC6                     _TM1640_Start:
  3388                           	opt stack 23
  3389                           
  3390                           ;TM1640.c: 21: RC3 = 0;
  3391                           
  3392                           ;incstack = 0
  3393  001AC6  9682               	bcf	3970,3,c	;volatile
  3394                           
  3395                           ;TM1640.c: 22: TM1640_Delay(1);
  3396  001AC8  0E01               	movlw	1
  3397  001ACA  ECC3  F00D         	call	_TM1640_Delay
  3398                           
  3399                           ;TM1640.c: 23: RC4 = 1;
  3400  001ACE  8882               	bsf	3970,4,c	;volatile
  3401                           
  3402                           ;TM1640.c: 24: TM1640_Delay(1);
  3403  001AD0  0E01               	movlw	1
  3404  001AD2  ECC3  F00D         	call	_TM1640_Delay
  3405                           
  3406                           ;TM1640.c: 25: RC3 = 1;
  3407  001AD6  8682               	bsf	3970,3,c	;volatile
  3408                           
  3409                           ;TM1640.c: 26: TM1640_Delay(1);
  3410  001AD8  0E01               	movlw	1
  3411  001ADA  ECC3  F00D         	call	_TM1640_Delay
  3412                           
  3413                           ;TM1640.c: 27: RC4 = 0;
  3414  001ADE  9882               	bcf	3970,4,c	;volatile
  3415                           
  3416                           ;TM1640.c: 28: TM1640_Delay(1);
  3417  001AE0  0E01               	movlw	1
  3418  001AE2  ECC3  F00D         	call	_TM1640_Delay
  3419                           
  3420                           ;TM1640.c: 29: RC3 = 0;
  3421  001AE6  9682               	bcf	3970,3,c	;volatile
  3422  001AE8  0012               	return		;funcret
  3423  001AEA                     __end_of_TM1640_Start:
  3424                           	opt stack 0
  3425                           tblptru	equ	0xFF8
  3426                           tblptrh	equ	0xFF7
  3427                           tblptrl	equ	0xFF6
  3428                           tablat	equ	0xFF5
  3429                           intcon	equ	0xFF2
  3430                           postinc0	equ	0xFEE
  3431                           wreg	equ	0xFE8
  3432                           indf2	equ	0xFDF
  3433                           fsr2h	equ	0xFDA
  3434                           fsr2l	equ	0xFD9
  3435                           status	equ	0xFD8
  3436                           
  3437 ;; *************** function _TM1640_Delay *****************
  3438 ;; Defined at:
  3439 ;;		line 109 in file "_01_USER/TM1640.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;  Time            1    wreg     unsigned char 
  3442 ;; Auto vars:     Size  Location     Type
  3443 ;;  Time            1   24[COMRAM] unsigned char 
  3444 ;;  i               1   25[COMRAM] unsigned char 
  3445 ;; Return value:  Size  Location     Type
  3446 ;;		None               void
  3447 ;; Registers used:
  3448 ;;		wreg, status,2, status,0
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3455 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3457 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3458 ;;Total ram usage:        2 bytes
  3459 ;; Hardware stack levels used:    1
  3460 ;; Hardware stack levels required when called:    3
  3461 ;; This function calls:
  3462 ;;		Nothing
  3463 ;; This function is called by:
  3464 ;;		_TM1640_Start
  3465 ;;		_TM1640_Stop
  3466 ;;		_TM1640_Writer_Byte
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469                           
  3470                           	psect	text29
  3471  001B86                     __ptext29:
  3472                           	opt stack 0
  3473  001B86                     _TM1640_Delay:
  3474                           	opt stack 23
  3475                           
  3476                           ;incstack = 0
  3477                           ;TM1640_Delay@Time stored from wreg
  3478  001B86  6E19               	movwf	TM1640_Delay@Time,c
  3479  001B88                     
  3480                           ;TM1640.c: 114: {
  3481                           ;TM1640.c: 115: for(i=0; i<10; ++i);
  3482  001B88  0E00               	movlw	0
  3483  001B8A  6E1A               	movwf	TM1640_Delay@i,c
  3484  001B8C  D002               	goto	l2208
  3485  001B8E  D004               	goto	l303
  3486  001B90                     l2206:
  3487  001B90  2A1A               	incf	TM1640_Delay@i,f,c
  3488  001B92                     l2208:
  3489  001B92  0E09               	movlw	9
  3490  001B94  641A               	cpfsgt	TM1640_Delay@i,c
  3491  001B96  D7FC               	goto	l2206
  3492  001B98                     l303:
  3493                           
  3494                           ;TM1640.c: 116: }while(--Time);
  3495  001B98  2E19               	decfsz	TM1640_Delay@Time,f,c
  3496  001B9A  D7F6               	goto	l2200
  3497  001B9C  0012               	return	
  3498  001B9E  0012               	return		;funcret
  3499  001BA0                     __end_of_TM1640_Delay:
  3500                           	opt stack 0
  3501                           tblptru	equ	0xFF8
  3502                           tblptrh	equ	0xFF7
  3503                           tblptrl	equ	0xFF6
  3504                           tablat	equ	0xFF5
  3505                           intcon	equ	0xFF2
  3506                           postinc0	equ	0xFEE
  3507                           wreg	equ	0xFE8
  3508                           indf2	equ	0xFDF
  3509                           fsr2h	equ	0xFDA
  3510                           fsr2l	equ	0xFD9
  3511                           status	equ	0xFD8
  3512                           
  3513 ;; *************** function _GPIO_Config *****************
  3514 ;; Defined at:
  3515 ;;		line 38 in file "_01_USER/GPIO.c"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;		None
  3518 ;; Auto vars:     Size  Location     Type
  3519 ;;		None
  3520 ;; Return value:  Size  Location     Type
  3521 ;;		None               void
  3522 ;; Registers used:
  3523 ;;		wreg, status,2, status,0
  3524 ;; Tracked objects:
  3525 ;;		On entry : 0/0
  3526 ;;		On exit  : 0/0
  3527 ;;		Unchanged: 0/0
  3528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3533 ;;Total ram usage:        0 bytes
  3534 ;; Hardware stack levels used:    1
  3535 ;; Hardware stack levels required when called:    3
  3536 ;; This function calls:
  3537 ;;		Nothing
  3538 ;; This function is called by:
  3539 ;;		_main
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543                           	psect	text30
  3544  001BDE                     __ptext30:
  3545                           	opt stack 0
  3546  001BDE                     _GPIO_Config:
  3547                           	opt stack 27
  3548                           
  3549                           ;GPIO.c: 41: TRISE &= 0x1f;
  3550                           
  3551                           ;incstack = 0
  3552  001BDE  0E1F               	movlw	31
  3553  001BE0  1696               	andwf	3990,f,c	;volatile
  3554                           
  3555                           ;GPIO.c: 43: RE5 = 1;
  3556  001BE2  8A84               	bsf	3972,5,c	;volatile
  3557                           
  3558                           ;GPIO.c: 44: RE6 = 1;
  3559  001BE4  8C84               	bsf	3972,6,c	;volatile
  3560                           
  3561                           ;GPIO.c: 45: RE7 = 1;
  3562  001BE6  8E84               	bsf	3972,7,c	;volatile
  3563  001BE8  0012               	return		;funcret
  3564  001BEA                     __end_of_GPIO_Config:
  3565                           	opt stack 0
  3566                           tblptru	equ	0xFF8
  3567                           tblptrh	equ	0xFF7
  3568                           tblptrl	equ	0xFF6
  3569                           tablat	equ	0xFF5
  3570                           intcon	equ	0xFF2
  3571                           postinc0	equ	0xFEE
  3572                           wreg	equ	0xFE8
  3573                           indf2	equ	0xFDF
  3574                           fsr2h	equ	0xFDA
  3575                           fsr2l	equ	0xFD9
  3576                           status	equ	0xFD8
  3577                           
  3578 ;; *************** function _ADC6_Init *****************
  3579 ;; Defined at:
  3580 ;;		line 37 in file "_01_USER/My_ADC.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;		None
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;		None
  3585 ;; Return value:  Size  Location     Type
  3586 ;;		None               void
  3587 ;; Registers used:
  3588 ;;		wreg, status,2, status,0, cstack
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : 0/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3598 ;;Total ram usage:        0 bytes
  3599 ;; Hardware stack levels used:    1
  3600 ;; Hardware stack levels required when called:    4
  3601 ;; This function calls:
  3602 ;;		_OpenADC
  3603 ;; This function is called by:
  3604 ;;		_main
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607                           
  3608                           	psect	text31
  3609  001BA0                     __ptext31:
  3610                           	opt stack 0
  3611  001BA0                     _ADC6_Init:
  3612                           	opt stack 26
  3613                           
  3614                           ;My_ADC.c: 40: OpenADC(0b11111111 &
  3615                           ;My_ADC.c: 41: 0b11110011 &
  3616                           ;My_ADC.c: 42: 0b10001111
  3617                           ;My_ADC.c: 43: ,
  3618                           ;My_ADC.c: 44: 0b10011011
  3619                           ;My_ADC.c: 45: ,
  3620                           ;My_ADC.c: 46: 0b00111111 &
  3621                           ;My_ADC.c: 47: 0b11111111 &
  3622                           ;My_ADC.c: 48: 0b11110111 &
  3623                           ;My_ADC.c: 49: 0b11111000
  3624                           ;My_ADC.c: 50: );
  3625                           
  3626                           ;incstack = 0
  3627  001BA0  0E9B               	movlw	155
  3628  001BA2  6E19               	movwf	OpenADC@config2,c
  3629  001BA4  0E30               	movlw	48
  3630  001BA6  6E1A               	movwf	OpenADC@config3,c
  3631  001BA8  0E83               	movlw	131
  3632  001BAA  ECCE  F00B         	call	_OpenADC
  3633                           
  3634                           ;My_ADC.c: 52: (PIE1bits.ADIE=0);
  3635  001BAE  9C9D               	bcf	3997,6,c	;volatile
  3636  001BB0  0012               	return		;funcret
  3637  001BB2                     __end_of_ADC6_Init:
  3638                           	opt stack 0
  3639                           tblptru	equ	0xFF8
  3640                           tblptrh	equ	0xFF7
  3641                           tblptrl	equ	0xFF6
  3642                           tablat	equ	0xFF5
  3643                           intcon	equ	0xFF2
  3644                           postinc0	equ	0xFEE
  3645                           wreg	equ	0xFE8
  3646                           indf2	equ	0xFDF
  3647                           fsr2h	equ	0xFDA
  3648                           fsr2l	equ	0xFD9
  3649                           status	equ	0xFD8
  3650                           
  3651 ;; *************** function _OpenADC *****************
  3652 ;; Defined at:
  3653 ;;		line 305 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\ADC\adcopen.c"
  3654 ;; Parameters:    Size  Location     Type
  3655 ;;  config          1    wreg     unsigned char 
  3656 ;;  config2         1   24[COMRAM] unsigned char 
  3657 ;;  config3         1   25[COMRAM] unsigned char 
  3658 ;; Auto vars:     Size  Location     Type
  3659 ;;  config          1   28[COMRAM] unsigned char 
  3660 ;; Return value:  Size  Location     Type
  3661 ;;		None               void
  3662 ;; Registers used:
  3663 ;;		wreg, status,2, status,0
  3664 ;; Tracked objects:
  3665 ;;		On entry : 0/0
  3666 ;;		On exit  : 0/0
  3667 ;;		Unchanged: 0/0
  3668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3669 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3670 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3671 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3672 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3673 ;;Total ram usage:        5 bytes
  3674 ;; Hardware stack levels used:    1
  3675 ;; Hardware stack levels required when called:    3
  3676 ;; This function calls:
  3677 ;;		Nothing
  3678 ;; This function is called by:
  3679 ;;		_ADC6_Init
  3680 ;; This function uses a non-reentrant model
  3681 ;;
  3682                           
  3683                           	psect	text32
  3684  00179C                     __ptext32:
  3685                           	opt stack 0
  3686  00179C                     _OpenADC:
  3687                           	opt stack 26
  3688                           
  3689                           ;incstack = 0
  3690                           ;OpenADC@config stored from wreg
  3691  00179C  6E1D               	movwf	OpenADC@config,c
  3692  00179E  0E00               	movlw	0
  3693  0017A0  6EC2               	movwf	4034,c	;volatile
  3694  0017A2  0E00               	movlw	0
  3695  0017A4  6EC1               	movwf	4033,c	;volatile
  3696  0017A6  0E00               	movlw	0
  3697  0017A8  6EC0               	movwf	4032,c	;volatile
  3698  0017AA  5019               	movf	OpenADC@config2,w,c
  3699  0017AC  0B7C               	andlw	124
  3700  0017AE  6EC2               	movwf	4034,c	;volatile
  3701  0017B0  C01A  FFC1         	movff	OpenADC@config3,4033	;volatile
  3702  0017B4  C01D  F01B         	movff	OpenADC@config,??_OpenADC
  3703  0017B8  90D8               	bcf	status,0,c
  3704  0017BA  361B               	rlcf	??_OpenADC,f,c
  3705  0017BC  90D8               	bcf	status,0,c
  3706  0017BE  361B               	rlcf	??_OpenADC,f,c
  3707  0017C0  0E38               	movlw	56
  3708  0017C2  161B               	andwf	??_OpenADC,f,c
  3709  0017C4  C01D  F01C         	movff	OpenADC@config,??_OpenADC+1
  3710  0017C8  3A1C               	swapf	??_OpenADC+1,f,c
  3711  0017CA  0E0F               	movlw	15
  3712  0017CC  161C               	andwf	??_OpenADC+1,f,c
  3713  0017CE  0E07               	movlw	7
  3714  0017D0  161C               	andwf	??_OpenADC+1,f,c
  3715  0017D2  501D               	movf	OpenADC@config,w,c
  3716  0017D4  0B80               	andlw	128
  3717  0017D6  101C               	iorwf	??_OpenADC+1,w,c
  3718  0017D8  101B               	iorwf	??_OpenADC,w,c
  3719  0017DA  6EC0               	movwf	4032,c	;volatile
  3720  0017DC  AE19               	btfss	OpenADC@config2,7,c
  3721  0017DE  D003               	goto	l393
  3722  0017E0  9C9E               	bcf	3998,6,c	;volatile
  3723  0017E2  8C9D               	bsf	3997,6,c	;volatile
  3724  0017E4  8CF2               	bsf	intcon,6,c	;volatile
  3725  0017E6                     l393:
  3726  0017E6  80C2               	bsf	4034,0,c	;volatile
  3727  0017E8  0012               	return		;funcret
  3728  0017EA                     __end_of_OpenADC:
  3729                           	opt stack 0
  3730                           tblptru	equ	0xFF8
  3731                           tblptrh	equ	0xFF7
  3732                           tblptrl	equ	0xFF6
  3733                           tablat	equ	0xFF5
  3734                           intcon	equ	0xFF2
  3735                           postinc0	equ	0xFEE
  3736                           wreg	equ	0xFE8
  3737                           indf2	equ	0xFDF
  3738                           fsr2h	equ	0xFDA
  3739                           fsr2l	equ	0xFD9
  3740                           status	equ	0xFD8
  3741                           
  3742 ;; *************** function _Sys_Cyc *****************
  3743 ;; Defined at:
  3744 ;;		line 99 in file "_01_USER/My_Timer.c"
  3745 ;; Parameters:    Size  Location     Type
  3746 ;;		None
  3747 ;; Auto vars:     Size  Location     Type
  3748 ;;  _pulse          1   23[COMRAM] unsigned char 
  3749 ;; Return value:  Size  Location     Type
  3750 ;;		None               void
  3751 ;; Registers used:
  3752 ;;		wreg, status,2, status,0, cstack
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3759 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3760 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3761 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3762 ;;Total ram usage:       15 bytes
  3763 ;; Hardware stack levels used:    1
  3764 ;; Hardware stack levels required when called:    2
  3765 ;; This function calls:
  3766 ;;		_Delay_1Khz
  3767 ;;		_Key_FSM_Scan
  3768 ;;		___llmod
  3769 ;;		i2_SetTimer0
  3770 ;; This function is called by:
  3771 ;;		Interrupt level 2
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           
  3775                           	psect	intcode
  3776  000008                     __pintcode:
  3777                           	opt stack 0
  3778  000008                     _Sys_Cyc:
  3779                           	opt stack 23
  3780                           
  3781                           ;incstack = 0
  3782  000008  CFFA F00A          	movff	pclath,??_Sys_Cyc
  3783  00000C  CFFB F00B          	movff	pclatu,??_Sys_Cyc+1
  3784  000010  CFE9 F00C          	movff	fsr0l,??_Sys_Cyc+2
  3785  000014  CFEA F00D          	movff	fsr0h,??_Sys_Cyc+3
  3786  000018  CFE1 F00E          	movff	fsr1l,??_Sys_Cyc+4
  3787  00001C  CFE2 F00F          	movff	fsr1h,??_Sys_Cyc+5
  3788  000020  CFD9 F010          	movff	fsr2l,??_Sys_Cyc+6
  3789  000024  CFDA F011          	movff	fsr2h,??_Sys_Cyc+7
  3790  000028  CFF3 F012          	movff	prodl,??_Sys_Cyc+8
  3791  00002C  CFF4 F013          	movff	prodh,??_Sys_Cyc+9
  3792  000030  CFF6 F014          	movff	tblptrl,??_Sys_Cyc+10
  3793  000034  CFF7 F015          	movff	tblptrh,??_Sys_Cyc+11
  3794  000038  CFF8 F016          	movff	tblptru,??_Sys_Cyc+12
  3795  00003C  CFF5 F017          	movff	tablat,??_Sys_Cyc+13
  3796                           
  3797                           ;My_Timer.c: 102: static unsigned char _overturn_1Khz = 0,_overturn_LED = 0;
  3798                           ;My_Timer.c: 103: unsigned char _pulse = 10;
  3799  000040  0E0A               	movlw	10
  3800  000042  6E18               	movwf	Sys_Cyc@_pulse,c
  3801                           
  3802                           ;My_Timer.c: 107: if(TMR0IF && TMR0IE)
  3803  000044  B4F2               	btfsc	intcon,2,c	;volatile
  3804  000046  AAF2               	btfss	intcon,5,c	;volatile
  3805  000048  D05D               	goto	i2l2184
  3806                           
  3807                           ;My_Timer.c: 108: {
  3808                           ;My_Timer.c: 109: Timer_Cyc = (Timer_Cyc+1) % 100000000;
  3809  00004A  0E01               	movlw	1
  3810  00004C  242D               	addwf	_Timer_Cyc,w,c
  3811  00004E  6E01               	movwf	___llmod@dividend,c
  3812  000050  0E00               	movlw	0
  3813  000052  202E               	addwfc	_Timer_Cyc+1,w,c
  3814  000054  6E02               	movwf	___llmod@dividend+1,c
  3815  000056  0E00               	movlw	0
  3816  000058  202F               	addwfc	_Timer_Cyc+2,w,c
  3817  00005A  6E03               	movwf	___llmod@dividend+2,c
  3818  00005C  0E00               	movlw	0
  3819  00005E  2030               	addwfc	_Timer_Cyc+3,w,c
  3820  000060  6E04               	movwf	___llmod@dividend+3,c
  3821  000062  0E00               	movlw	0
  3822  000064  6E05               	movwf	___llmod@divisor,c
  3823  000066  0EE1               	movlw	225
  3824  000068  6E06               	movwf	___llmod@divisor+1,c
  3825  00006A  0EF5               	movlw	245
  3826  00006C  6E07               	movwf	___llmod@divisor+2,c
  3827  00006E  0E05               	movlw	5
  3828  000070  6E08               	movwf	___llmod@divisor+3,c
  3829  000072  EC32  F00B         	call	___llmod	;wreg free
  3830  000076  C001  F02D         	movff	?___llmod,_Timer_Cyc
  3831  00007A  C002  F02E         	movff	?___llmod+1,_Timer_Cyc+1
  3832  00007E  C003  F02F         	movff	?___llmod+2,_Timer_Cyc+2
  3833  000082  C004  F030         	movff	?___llmod+3,_Timer_Cyc+3
  3834                           
  3835                           ;My_Timer.c: 112: if( Handle_01_Switch._1Khz )
  3836  000086  5031               	movf	_Handle_01_Switch,w,c
  3837  000088  A4D8               	btfss	status,2,c
  3838  00008A  D00D               	goto	i2l2172
  3839  00008C  D012               	goto	i2l2174
  3840                           
  3841                           ;My_Timer.c: 113: {
  3842                           ;My_Timer.c: 114: while( _pulse-- )
  3843  00008E  D00B               	goto	i2l2172
  3844  000090                     i2l2164:
  3845                           
  3846                           ;My_Timer.c: 115: {
  3847                           ;My_Timer.c: 116: _overturn_1Khz =~ _overturn_1Khz;
  3848  000090  1E38               	comf	Sys_Cyc@_overturn_1Khz,f,c
  3849                           
  3850                           ;My_Timer.c: 117: if(_overturn_1Khz) PORTEbits.RE7 = 1; else PORTEbits.RE7 = 0;
  3851  000092  5038               	movf	Sys_Cyc@_overturn_1Khz,w,c
  3852  000094  B4D8               	btfsc	status,2,c
  3853  000096  D002               	goto	i2l234
  3854  000098  8E84               	bsf	3972,7,c	;volatile
  3855  00009A  D002               	goto	i2l2170
  3856  00009C                     i2l234:
  3857  00009C  9E84               	bcf	3972,7,c	;volatile
  3858  00009E  D000               	goto	i2l2170
  3859  0000A0                     i2l2170:
  3860                           
  3861                           ;My_Timer.c: 118: Delay_1Khz();
  3862  0000A0  ECB6  F00C         	call	_Delay_1Khz	;wreg free
  3863  0000A4  D000               	goto	i2l2172
  3864  0000A6                     i2l2172:
  3865  0000A6  0618               	decf	Sys_Cyc@_pulse,f,c
  3866  0000A8  2818               	incf	Sys_Cyc@_pulse,w,c
  3867  0000AA  B4D8               	btfsc	status,2,c
  3868  0000AC  D002               	goto	i2l2174
  3869  0000AE  D7F0               	goto	i2l2164
  3870  0000B0  D000               	goto	i2l2174
  3871  0000B2                     i2l2174:
  3872                           
  3873                           ;My_Timer.c: 119: }
  3874                           ;My_Timer.c: 120: }
  3875                           ;My_Timer.c: 123: if( Timer_Cyc%30 == 0 )
  3876  0000B2  C02D  F001         	movff	_Timer_Cyc,___llmod@dividend
  3877  0000B6  C02E  F002         	movff	_Timer_Cyc+1,___llmod@dividend+1
  3878  0000BA  C02F  F003         	movff	_Timer_Cyc+2,___llmod@dividend+2
  3879  0000BE  C030  F004         	movff	_Timer_Cyc+3,___llmod@dividend+3
  3880  0000C2  0E1E               	movlw	30
  3881  0000C4  6E05               	movwf	___llmod@divisor,c
  3882  0000C6  0E00               	movlw	0
  3883  0000C8  6E06               	movwf	___llmod@divisor+1,c
  3884  0000CA  0E00               	movlw	0
  3885  0000CC  6E07               	movwf	___llmod@divisor+2,c
  3886  0000CE  0E00               	movlw	0
  3887  0000D0  6E08               	movwf	___llmod@divisor+3,c
  3888  0000D2  EC32  F00B         	call	___llmod	;wreg free
  3889  0000D6  5001               	movf	?___llmod,w,c
  3890  0000D8  1002               	iorwf	?___llmod+1,w,c
  3891  0000DA  1003               	iorwf	?___llmod+2,w,c
  3892  0000DC  1004               	iorwf	?___llmod+3,w,c
  3893  0000DE  A4D8               	btfss	status,2,c
  3894  0000E0  D008               	goto	i2l2182
  3895                           
  3896                           ;My_Timer.c: 124: {
  3897                           ;My_Timer.c: 125: _overturn_LED = ~_overturn_LED;
  3898  0000E2  1E39               	comf	Sys_Cyc@_overturn_LED,f,c
  3899                           
  3900                           ;My_Timer.c: 126: if(_overturn_LED) PORTEbits.RE5=0;
  3901  0000E4  5039               	movf	Sys_Cyc@_overturn_LED,w,c
  3902  0000E6  B4D8               	btfsc	status,2,c
  3903  0000E8  D002               	goto	i2l238
  3904  0000EA  9A84               	bcf	3972,5,c	;volatile
  3905  0000EC  D002               	goto	i2l2182
  3906  0000EE                     i2l238:
  3907                           
  3908                           ;My_Timer.c: 127: else PORTEbits.RE5=1;
  3909  0000EE  8A84               	bsf	3972,5,c	;volatile
  3910  0000F0  D000               	goto	i2l2182
  3911  0000F2                     i2l2182:
  3912                           
  3913                           ;My_Timer.c: 128: }
  3914                           ;My_Timer.c: 132: Key_FSM_Scan();
  3915  0000F2  ECCC  F009         	call	_Key_FSM_Scan	;wreg free
  3916                           
  3917                           ;My_Timer.c: 135: SetTimer0(50);
  3918  0000F6  0E00               	movlw	0
  3919  0000F8  6E02               	movwf	i2SetTimer0@_tmr+1,c
  3920  0000FA  0E32               	movlw	50
  3921  0000FC  6E01               	movwf	i2SetTimer0@_tmr,c
  3922  0000FE  ECEA  F00C         	call	i2_SetTimer0	;wreg free
  3923  000102  D000               	goto	i2l2184
  3924  000104                     i2l2184:
  3925                           
  3926                           ;My_Timer.c: 136: }
  3927                           ;My_Timer.c: 140: if( RC2IF )
  3928  000104  AAA4               	btfss	4004,5,c	;volatile
  3929  000106  D004               	goto	i2l241
  3930                           
  3931                           ;My_Timer.c: 141: {
  3932                           ;My_Timer.c: 142: USART2_ReceiveBuff = RCREG2;
  3933  000108  CF1D F034          	movff	3869,_USART2_ReceiveBuff	;volatile
  3934  00010C  6A35               	clrf	_USART2_ReceiveBuff+1,c
  3935  00010E  D000               	goto	i2l241
  3936  000110                     i2l241:
  3937  000110  C017  FFF5         	movff	??_Sys_Cyc+13,tablat
  3938  000114  C016  FFF8         	movff	??_Sys_Cyc+12,tblptru
  3939  000118  C015  FFF7         	movff	??_Sys_Cyc+11,tblptrh
  3940  00011C  C014  FFF6         	movff	??_Sys_Cyc+10,tblptrl
  3941  000120  C013  FFF4         	movff	??_Sys_Cyc+9,prodh
  3942  000124  C012  FFF3         	movff	??_Sys_Cyc+8,prodl
  3943  000128  C011  FFDA         	movff	??_Sys_Cyc+7,fsr2h
  3944  00012C  C010  FFD9         	movff	??_Sys_Cyc+6,fsr2l
  3945  000130  C00F  FFE2         	movff	??_Sys_Cyc+5,fsr1h
  3946  000134  C00E  FFE1         	movff	??_Sys_Cyc+4,fsr1l
  3947  000138  C00D  FFEA         	movff	??_Sys_Cyc+3,fsr0h
  3948  00013C  C00C  FFE9         	movff	??_Sys_Cyc+2,fsr0l
  3949  000140  C00B  FFFB         	movff	??_Sys_Cyc+1,pclatu
  3950  000144  C00A  FFFA         	movff	??_Sys_Cyc,pclath
  3951  000148  0011               	retfie		f
  3952  00014A                     __end_of_Sys_Cyc:
  3953                           	opt stack 0
  3954                           pclatu	equ	0xFFB
  3955                           pclath	equ	0xFFA
  3956                           tblptru	equ	0xFF8
  3957                           tblptrh	equ	0xFF7
  3958                           tblptrl	equ	0xFF6
  3959                           tablat	equ	0xFF5
  3960                           prodh	equ	0xFF4
  3961                           prodl	equ	0xFF3
  3962                           intcon	equ	0xFF2
  3963                           postinc0	equ	0xFEE
  3964                           fsr0h	equ	0xFEA
  3965                           fsr0l	equ	0xFE9
  3966                           wreg	equ	0xFE8
  3967                           fsr1h	equ	0xFE2
  3968                           fsr1l	equ	0xFE1
  3969                           indf2	equ	0xFDF
  3970                           fsr2h	equ	0xFDA
  3971                           fsr2l	equ	0xFD9
  3972                           status	equ	0xFD8
  3973                           
  3974 ;; *************** function i2_SetTimer0 *****************
  3975 ;; Defined at:
  3976 ;;		line 80 in file "_01_USER/My_Timer.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;  _tmr            2    0[COMRAM] unsigned int 
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;		None
  3981 ;; Return value:  Size  Location     Type
  3982 ;;		None               void
  3983 ;; Registers used:
  3984 ;;		wreg, status,2, status,0
  3985 ;; Tracked objects:
  3986 ;;		On entry : 0/0
  3987 ;;		On exit  : 0/0
  3988 ;;		Unchanged: 0/0
  3989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3990 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3992 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3993 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3994 ;;Total ram usage:        4 bytes
  3995 ;; Hardware stack levels used:    1
  3996 ;; This function calls:
  3997 ;;		Nothing
  3998 ;; This function is called by:
  3999 ;;		_Sys_Cyc
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           
  4003                           	psect	text34
  4004  0019D4                     __ptext34:
  4005                           	opt stack 0
  4006  0019D4                     i2_SetTimer0:
  4007                           	opt stack 24
  4008                           
  4009                           ;My_Timer.c: 82: if(_tmr > 0xffff) _tmr = 0xffff;
  4010                           
  4011                           ;incstack = 0
  4012  0019D4  D003               	goto	i2l2124
  4013  0019D6  6801               	setf	i2SetTimer0@_tmr,c
  4014  0019D8  6802               	setf	i2SetTimer0@_tmr+1,c
  4015  0019DA  D000               	goto	i2l2124
  4016  0019DC                     i2l2124:
  4017                           
  4018                           ;My_Timer.c: 83: _tmr=0xffff-_tmr;
  4019  0019DC  C001  F003         	movff	i2SetTimer0@_tmr,??i2_SetTimer0
  4020  0019E0  C002  F004         	movff	i2SetTimer0@_tmr+1,??i2_SetTimer0+1
  4021  0019E4  1E03               	comf	??i2_SetTimer0,f,c
  4022  0019E6  1E04               	comf	??i2_SetTimer0+1,f,c
  4023  0019E8  4A03               	infsnz	??i2_SetTimer0,f,c
  4024  0019EA  2A04               	incf	??i2_SetTimer0+1,f,c
  4025  0019EC  0EFF               	movlw	255
  4026  0019EE  2403               	addwf	??i2_SetTimer0,w,c
  4027  0019F0  6E01               	movwf	i2SetTimer0@_tmr,c
  4028  0019F2  0EFF               	movlw	255
  4029  0019F4  2004               	addwfc	??i2_SetTimer0+1,w,c
  4030  0019F6  6E02               	movwf	i2SetTimer0@_tmr+1,c
  4031                           
  4032                           ;My_Timer.c: 84: TMR0H = _tmr/256;
  4033  0019F8  5002               	movf	i2SetTimer0@_tmr+1,w,c
  4034  0019FA  6ED7               	movwf	4055,c	;volatile
  4035                           
  4036                           ;My_Timer.c: 85: TMR0L = _tmr%256;
  4037  0019FC  C001  FFD6         	movff	i2SetTimer0@_tmr,4054	;volatile
  4038                           
  4039                           ;My_Timer.c: 86: TMR0IF = 0;
  4040  001A00  94F2               	bcf	intcon,2,c	;volatile
  4041  001A02  0012               	return		;funcret
  4042  001A04                     __end_ofi2_SetTimer0:
  4043                           	opt stack 0
  4044                           pclatu	equ	0xFFB
  4045                           pclath	equ	0xFFA
  4046                           tblptru	equ	0xFF8
  4047                           tblptrh	equ	0xFF7
  4048                           tblptrl	equ	0xFF6
  4049                           tablat	equ	0xFF5
  4050                           prodh	equ	0xFF4
  4051                           prodl	equ	0xFF3
  4052                           intcon	equ	0xFF2
  4053                           postinc0	equ	0xFEE
  4054                           fsr0h	equ	0xFEA
  4055                           fsr0l	equ	0xFE9
  4056                           wreg	equ	0xFE8
  4057                           fsr1h	equ	0xFE2
  4058                           fsr1l	equ	0xFE1
  4059                           indf2	equ	0xFDF
  4060                           fsr2h	equ	0xFDA
  4061                           fsr2l	equ	0xFD9
  4062                           status	equ	0xFD8
  4063                           
  4064 ;; *************** function ___llmod *****************
  4065 ;; Defined at:
  4066 ;;		line 8 in file "F:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  4067 ;; Parameters:    Size  Location     Type
  4068 ;;  dividend        4    0[COMRAM] unsigned long 
  4069 ;;  divisor         4    4[COMRAM] unsigned long 
  4070 ;; Auto vars:     Size  Location     Type
  4071 ;;  counter         1    8[COMRAM] unsigned char 
  4072 ;; Return value:  Size  Location     Type
  4073 ;;                  4    0[COMRAM] unsigned long 
  4074 ;; Registers used:
  4075 ;;		wreg, status,2, status,0
  4076 ;; Tracked objects:
  4077 ;;		On entry : 0/0
  4078 ;;		On exit  : 0/0
  4079 ;;		Unchanged: 0/0
  4080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4081 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4082 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4084 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4085 ;;Total ram usage:        9 bytes
  4086 ;; Hardware stack levels used:    1
  4087 ;; This function calls:
  4088 ;;		Nothing
  4089 ;; This function is called by:
  4090 ;;		_Sys_Cyc
  4091 ;; This function uses a non-reentrant model
  4092 ;;
  4093                           
  4094                           	psect	text35
  4095  001664                     __ptext35:
  4096                           	opt stack 0
  4097  001664                     ___llmod:
  4098                           	opt stack 24
  4099                           
  4100                           ;incstack = 0
  4101  001664  5005               	movf	___llmod@divisor,w,c
  4102  001666  1006               	iorwf	___llmod@divisor+1,w,c
  4103  001668  1007               	iorwf	___llmod@divisor+2,w,c
  4104  00166A  1008               	iorwf	___llmod@divisor+3,w,c
  4105  00166C  B4D8               	btfsc	status,2,c
  4106  00166E  D029               	goto	i2l906
  4107  001670  0E01               	movlw	1
  4108  001672  6E09               	movwf	___llmod@counter,c
  4109  001674  D007               	goto	i2l2110
  4110  001676                     i2l2108:
  4111  001676  90D8               	bcf	status,0,c
  4112  001678  3605               	rlcf	___llmod@divisor,f,c
  4113  00167A  3606               	rlcf	___llmod@divisor+1,f,c
  4114  00167C  3607               	rlcf	___llmod@divisor+2,f,c
  4115  00167E  3608               	rlcf	___llmod@divisor+3,f,c
  4116  001680  2A09               	incf	___llmod@counter,f,c
  4117  001682  D000               	goto	i2l2110
  4118  001684                     i2l2110:
  4119  001684  BE08               	btfsc	___llmod@divisor+3,7,c
  4120  001686  D002               	goto	i2l2112
  4121  001688  D7F6               	goto	i2l2108
  4122  00168A  D000               	goto	i2l2112
  4123  00168C                     i2l2112:
  4124  00168C  5005               	movf	___llmod@divisor,w,c
  4125  00168E  5C01               	subwf	___llmod@dividend,w,c
  4126  001690  5006               	movf	___llmod@divisor+1,w,c
  4127  001692  5802               	subwfb	___llmod@dividend+1,w,c
  4128  001694  5007               	movf	___llmod@divisor+2,w,c
  4129  001696  5803               	subwfb	___llmod@dividend+2,w,c
  4130  001698  5008               	movf	___llmod@divisor+3,w,c
  4131  00169A  5804               	subwfb	___llmod@dividend+3,w,c
  4132  00169C  A0D8               	btfss	status,0,c
  4133  00169E  D009               	goto	i2l2116
  4134  0016A0  5005               	movf	___llmod@divisor,w,c
  4135  0016A2  5E01               	subwf	___llmod@dividend,f,c
  4136  0016A4  5006               	movf	___llmod@divisor+1,w,c
  4137  0016A6  5A02               	subwfb	___llmod@dividend+1,f,c
  4138  0016A8  5007               	movf	___llmod@divisor+2,w,c
  4139  0016AA  5A03               	subwfb	___llmod@dividend+2,f,c
  4140  0016AC  5008               	movf	___llmod@divisor+3,w,c
  4141  0016AE  5A04               	subwfb	___llmod@dividend+3,f,c
  4142  0016B0  D000               	goto	i2l2116
  4143  0016B2                     i2l2116:
  4144  0016B2  90D8               	bcf	status,0,c
  4145  0016B4  3208               	rrcf	___llmod@divisor+3,f,c
  4146  0016B6  3207               	rrcf	___llmod@divisor+2,f,c
  4147  0016B8  3206               	rrcf	___llmod@divisor+1,f,c
  4148  0016BA  3205               	rrcf	___llmod@divisor,f,c
  4149  0016BC  2E09               	decfsz	___llmod@counter,f,c
  4150  0016BE  D7E6               	goto	i2l2112
  4151  0016C0  D000               	goto	i2l906
  4152  0016C2                     i2l906:
  4153  0016C2  C001  F001         	movff	___llmod@dividend,?___llmod
  4154  0016C6  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  4155  0016CA  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  4156  0016CE  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  4157  0016D2  0012               	return		;funcret
  4158  0016D4                     __end_of___llmod:
  4159                           	opt stack 0
  4160                           pclatu	equ	0xFFB
  4161                           pclath	equ	0xFFA
  4162                           tblptru	equ	0xFF8
  4163                           tblptrh	equ	0xFF7
  4164                           tblptrl	equ	0xFF6
  4165                           tablat	equ	0xFF5
  4166                           prodh	equ	0xFF4
  4167                           prodl	equ	0xFF3
  4168                           intcon	equ	0xFF2
  4169                           postinc0	equ	0xFEE
  4170                           fsr0h	equ	0xFEA
  4171                           fsr0l	equ	0xFE9
  4172                           wreg	equ	0xFE8
  4173                           fsr1h	equ	0xFE2
  4174                           fsr1l	equ	0xFE1
  4175                           indf2	equ	0xFDF
  4176                           fsr2h	equ	0xFDA
  4177                           fsr2l	equ	0xFD9
  4178                           status	equ	0xFD8
  4179                           
  4180 ;; *************** function _Key_FSM_Scan *****************
  4181 ;; Defined at:
  4182 ;;		line 75 in file "_01_USER/Key.c"
  4183 ;; Parameters:    Size  Location     Type
  4184 ;;		None
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;		None
  4187 ;; Return value:  Size  Location     Type
  4188 ;;		None               void
  4189 ;; Registers used:
  4190 ;;		wreg, status,2, status,0, cstack
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4200 ;;Total ram usage:        0 bytes
  4201 ;; Hardware stack levels used:    1
  4202 ;; Hardware stack levels required when called:    1
  4203 ;; This function calls:
  4204 ;;		_Key_Scan
  4205 ;; This function is called by:
  4206 ;;		_Sys_Cyc
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210                           	psect	text36
  4211  001398                     __ptext36:
  4212                           	opt stack 0
  4213  001398                     _Key_FSM_Scan:
  4214                           	opt stack 23
  4215                           
  4216                           ;Key.c: 77: Key_Scan();
  4217                           
  4218                           ;incstack = 0
  4219  001398  EC02  F00D         	call	_Key_Scan	;wreg free
  4220                           
  4221                           ;Key.c: 78: if( Local_Key_FSM.key_state & 0x01 ) Local_Key_FSM.key[0]++;
  4222  00139C  A03C               	btfss	_Local_Key_FSM,0,c	;volatile
  4223  00139E  D002               	goto	i2l1544
  4224  0013A0  2A42               	incf	_Local_Key_FSM+6,f,c	;volatile
  4225  0013A2  D000               	goto	i2l1544
  4226  0013A4                     i2l1544:
  4227                           
  4228                           ;Key.c: 79: if( Local_Key_FSM.key_state & 0x02 ) Local_Key_FSM.key[1]++;
  4229  0013A4  A23C               	btfss	_Local_Key_FSM,1,c	;volatile
  4230  0013A6  D002               	goto	i2l1548
  4231  0013A8  2A43               	incf	_Local_Key_FSM+7,f,c	;volatile
  4232  0013AA  D000               	goto	i2l1548
  4233  0013AC                     i2l1548:
  4234                           
  4235                           ;Key.c: 80: if( Local_Key_FSM.key_state & 0x04 ) Local_Key_FSM.key[2]++;
  4236  0013AC  A43C               	btfss	_Local_Key_FSM,2,c	;volatile
  4237  0013AE  D002               	goto	i2l1552
  4238  0013B0  2A44               	incf	_Local_Key_FSM+8,f,c	;volatile
  4239  0013B2  D000               	goto	i2l1552
  4240  0013B4                     i2l1552:
  4241                           
  4242                           ;Key.c: 81: if( Local_Key_FSM.key_state & 0x08 ) Local_Key_FSM.key[3]++;
  4243  0013B4  A63C               	btfss	_Local_Key_FSM,3,c	;volatile
  4244  0013B6  D002               	goto	i2l1556
  4245  0013B8  2A45               	incf	_Local_Key_FSM+9,f,c	;volatile
  4246  0013BA  D000               	goto	i2l1556
  4247  0013BC                     i2l1556:
  4248                           
  4249                           ;Key.c: 82: if( Local_Key_FSM.key_state & 0x10 ) Local_Key_FSM.key[4]++;
  4250  0013BC  A83C               	btfss	_Local_Key_FSM,4,c	;volatile
  4251  0013BE  D002               	goto	i2l1560
  4252  0013C0  2A46               	incf	_Local_Key_FSM+10,f,c	;volatile
  4253  0013C2  D000               	goto	i2l1560
  4254  0013C4                     i2l1560:
  4255                           
  4256                           ;Key.c: 84: if( Local_Key_FSM.key_state == 0x00 )
  4257  0013C4  503C               	movf	_Local_Key_FSM,w,c	;volatile
  4258  0013C6  A4D8               	btfss	status,2,c
  4259  0013C8  D00B               	goto	i2l1564
  4260                           
  4261                           ;Key.c: 85: {
  4262                           ;Key.c: 86: Local_Key_FSM.key[0] = 0;
  4263  0013CA  0E00               	movlw	0
  4264  0013CC  6E42               	movwf	_Local_Key_FSM+6,c	;volatile
  4265                           
  4266                           ;Key.c: 87: Local_Key_FSM.key[1] = 0;
  4267  0013CE  0E00               	movlw	0
  4268  0013D0  6E43               	movwf	_Local_Key_FSM+7,c	;volatile
  4269                           
  4270                           ;Key.c: 88: Local_Key_FSM.key[2] = 0;
  4271  0013D2  0E00               	movlw	0
  4272  0013D4  6E44               	movwf	_Local_Key_FSM+8,c	;volatile
  4273                           
  4274                           ;Key.c: 89: Local_Key_FSM.key[3] = 0;
  4275  0013D6  0E00               	movlw	0
  4276  0013D8  6E45               	movwf	_Local_Key_FSM+9,c	;volatile
  4277                           
  4278                           ;Key.c: 90: Local_Key_FSM.key[4] = 0;
  4279  0013DA  0E00               	movlw	0
  4280  0013DC  6E46               	movwf	_Local_Key_FSM+10,c	;volatile
  4281                           
  4282                           ;Key.c: 91: }
  4283  0013DE  0012               	return	
  4284  0013E0                     i2l1564:
  4285                           
  4286                           ;Key.c: 92: else
  4287                           ;Key.c: 93: {
  4288                           ;Key.c: 95: if( Local_Key_FSM.key[0] < 5 ) Local_Key_FSM.key_FSM[0] = 0x00;
  4289  0013E0  0E05               	movlw	5
  4290  0013E2  6042               	cpfslt	_Local_Key_FSM+6,c	;volatile
  4291  0013E4  D002               	goto	i2l1568
  4292  0013E6  0E00               	movlw	0
  4293  0013E8  D006               	goto	L5
  4294  0013EA                     i2l1568:
  4295                           
  4296                           ;Key.c: 96: else if( Local_Key_FSM.key[0] < 50 ) Local_Key_FSM.key_FSM[0] = 0x01;
  4297  0013EA  0E32               	movlw	50
  4298  0013EC  6042               	cpfslt	_Local_Key_FSM+6,c	;volatile
  4299  0013EE  D002               	goto	i2l1572
  4300  0013F0  0E01               	movlw	1
  4301  0013F2  D001               	goto	L5
  4302  0013F4                     i2l1572:
  4303                           
  4304                           ;Key.c: 97: else Local_Key_FSM.key_FSM[0] = 0x03;
  4305  0013F4  0E03               	movlw	3
  4306  0013F6                     L5:
  4307  0013F6  6E3D               	movwf	_Local_Key_FSM+1,c	;volatile
  4308  0013F8  D000               	goto	i2l1574
  4309  0013FA                     i2l1574:
  4310                           
  4311                           ;Key.c: 99: if( Local_Key_FSM.key[1] < 5 ) Local_Key_FSM.key_FSM[1] = 0x00;
  4312  0013FA  0E05               	movlw	5
  4313  0013FC  6043               	cpfslt	_Local_Key_FSM+7,c	;volatile
  4314  0013FE  D002               	goto	i2l1578
  4315  001400  0E00               	movlw	0
  4316  001402  D006               	goto	L7
  4317  001404                     i2l1578:
  4318                           
  4319                           ;Key.c: 100: else if( Local_Key_FSM.key[1] < 50 ) Local_Key_FSM.key_FSM[1] = 0x01;
  4320  001404  0E32               	movlw	50
  4321  001406  6043               	cpfslt	_Local_Key_FSM+7,c	;volatile
  4322  001408  D002               	goto	i2l1582
  4323  00140A  0E01               	movlw	1
  4324  00140C  D001               	goto	L7
  4325  00140E                     i2l1582:
  4326                           
  4327                           ;Key.c: 101: else Local_Key_FSM.key_FSM[1] = 0x03;
  4328  00140E  0E03               	movlw	3
  4329  001410                     L7:
  4330  001410  6E3E               	movwf	_Local_Key_FSM+2,c	;volatile
  4331  001412  D000               	goto	i2l1584
  4332  001414                     i2l1584:
  4333                           
  4334                           ;Key.c: 103: if( Local_Key_FSM.key[2] < 5 ) Local_Key_FSM.key_FSM[2] = 0x00;
  4335  001414  0E05               	movlw	5
  4336  001416  6044               	cpfslt	_Local_Key_FSM+8,c	;volatile
  4337  001418  D002               	goto	i2l1588
  4338  00141A  0E00               	movlw	0
  4339  00141C  D006               	goto	L9
  4340  00141E                     i2l1588:
  4341                           
  4342                           ;Key.c: 104: else if( Local_Key_FSM.key[2] < 50 ) Local_Key_FSM.key_FSM[2] = 0x01;
  4343  00141E  0E32               	movlw	50
  4344  001420  6044               	cpfslt	_Local_Key_FSM+8,c	;volatile
  4345  001422  D002               	goto	i2l1592
  4346  001424  0E01               	movlw	1
  4347  001426  D001               	goto	L9
  4348  001428                     i2l1592:
  4349                           
  4350                           ;Key.c: 105: else Local_Key_FSM.key_FSM[2] = 0x03;
  4351  001428  0E03               	movlw	3
  4352  00142A                     L9:
  4353  00142A  6E3F               	movwf	_Local_Key_FSM+3,c	;volatile
  4354  00142C  D000               	goto	i2l1594
  4355  00142E                     i2l1594:
  4356                           
  4357                           ;Key.c: 107: if( Local_Key_FSM.key[3] < 5 ) Local_Key_FSM.key_FSM[3] = 0x00;
  4358  00142E  0E05               	movlw	5
  4359  001430  6045               	cpfslt	_Local_Key_FSM+9,c	;volatile
  4360  001432  D002               	goto	i2l1598
  4361  001434  0E00               	movlw	0
  4362  001436  D006               	goto	L11
  4363  001438                     i2l1598:
  4364                           
  4365                           ;Key.c: 108: else if( Local_Key_FSM.key[3] < 50 ) Local_Key_FSM.key_FSM[3] = 0x01;
  4366  001438  0E32               	movlw	50
  4367  00143A  6045               	cpfslt	_Local_Key_FSM+9,c	;volatile
  4368  00143C  D002               	goto	i2l1602
  4369  00143E  0E01               	movlw	1
  4370  001440  D001               	goto	L11
  4371  001442                     i2l1602:
  4372                           
  4373                           ;Key.c: 109: else Local_Key_FSM.key_FSM[3] = 0x03;
  4374  001442  0E03               	movlw	3
  4375  001444                     L11:
  4376  001444  6E40               	movwf	_Local_Key_FSM+4,c	;volatile
  4377  001446  D000               	goto	i2l1604
  4378  001448                     i2l1604:
  4379                           
  4380                           ;Key.c: 111: if( Local_Key_FSM.key[4] < 5 ) Local_Key_FSM.key_FSM[4] = 0x00;
  4381  001448  0E05               	movlw	5
  4382  00144A  6046               	cpfslt	_Local_Key_FSM+10,c	;volatile
  4383  00144C  D002               	goto	i2l1608
  4384  00144E  0E00               	movlw	0
  4385  001450  D006               	goto	L13
  4386  001452                     i2l1608:
  4387                           
  4388                           ;Key.c: 112: else if( Local_Key_FSM.key[4] < 50 ) Local_Key_FSM.key_FSM[4] = 0x01;
  4389  001452  0E32               	movlw	50
  4390  001454  6046               	cpfslt	_Local_Key_FSM+10,c	;volatile
  4391  001456  D002               	goto	i2l1612
  4392  001458  0E01               	movlw	1
  4393  00145A  D001               	goto	L13
  4394  00145C                     i2l1612:
  4395                           
  4396                           ;Key.c: 113: else Local_Key_FSM.key_FSM[4] = 0x03;
  4397  00145C  0E03               	movlw	3
  4398  00145E                     L13:
  4399  00145E  6E41               	movwf	_Local_Key_FSM+5,c	;volatile
  4400  001460  D000               	goto	i2l121
  4401  001462                     i2l121:
  4402                           
  4403                           ;Key.c: 116: Local_Key_FSM.key_group = 0x00;
  4404  001462  0E00               	movlw	0
  4405  001464  6E41               	movwf	_Local_Key_FSM+5,c	;volatile
  4406                           
  4407                           ;Key.c: 117: if( Local_Key_FSM.key_FSM[0] != 0x00 ) Local_Key_FSM.key_group |= 0x01<<0;
  4408  001466  503D               	movf	_Local_Key_FSM+1,w,c	;volatile
  4409  001468  B4D8               	btfsc	status,2,c
  4410  00146A  D002               	goto	i2l1616
  4411  00146C  8041               	bsf	_Local_Key_FSM+5,0,c	;volatile
  4412  00146E  D000               	goto	i2l1616
  4413  001470                     i2l1616:
  4414                           
  4415                           ;Key.c: 118: if( Local_Key_FSM.key_FSM[1] != 0x00 ) Local_Key_FSM.key_group |= 0x01<<1;
  4416  001470  503E               	movf	_Local_Key_FSM+2,w,c	;volatile
  4417  001472  B4D8               	btfsc	status,2,c
  4418  001474  D002               	goto	i2l1620
  4419  001476  8241               	bsf	_Local_Key_FSM+5,1,c	;volatile
  4420  001478  D000               	goto	i2l1620
  4421  00147A                     i2l1620:
  4422                           
  4423                           ;Key.c: 119: if( Local_Key_FSM.key_FSM[2] != 0x00 ) Local_Key_FSM.key_group |= 0x01<<2;
  4424  00147A  503F               	movf	_Local_Key_FSM+3,w,c	;volatile
  4425  00147C  B4D8               	btfsc	status,2,c
  4426  00147E  D002               	goto	i2l1624
  4427  001480  8441               	bsf	_Local_Key_FSM+5,2,c	;volatile
  4428  001482  D000               	goto	i2l1624
  4429  001484                     i2l1624:
  4430                           
  4431                           ;Key.c: 120: if( Local_Key_FSM.key_FSM[3] != 0x00 ) Local_Key_FSM.key_group |= 0x01<<3;
  4432  001484  5040               	movf	_Local_Key_FSM+4,w,c	;volatile
  4433  001486  B4D8               	btfsc	status,2,c
  4434  001488  D002               	goto	i2l1628
  4435  00148A  8641               	bsf	_Local_Key_FSM+5,3,c	;volatile
  4436  00148C  D000               	goto	i2l1628
  4437  00148E                     i2l1628:
  4438                           
  4439                           ;Key.c: 121: if( Local_Key_FSM.key_FSM[4] != 0x00 ) Local_Key_FSM.key_group |= 0x01<<4;
  4440  00148E  5041               	movf	_Local_Key_FSM+5,w,c	;volatile
  4441  001490  B4D8               	btfsc	status,2,c
  4442  001492  0012               	return	
  4443  001494  8841               	bsf	_Local_Key_FSM+5,4,c	;volatile
  4444  001496  0012               	return	
  4445  001498  0012               	return		;funcret
  4446  00149A                     __end_of_Key_FSM_Scan:
  4447                           	opt stack 0
  4448                           pclatu	equ	0xFFB
  4449                           pclath	equ	0xFFA
  4450                           tblptru	equ	0xFF8
  4451                           tblptrh	equ	0xFF7
  4452                           tblptrl	equ	0xFF6
  4453                           tablat	equ	0xFF5
  4454                           prodh	equ	0xFF4
  4455                           prodl	equ	0xFF3
  4456                           intcon	equ	0xFF2
  4457                           postinc0	equ	0xFEE
  4458                           fsr0h	equ	0xFEA
  4459                           fsr0l	equ	0xFE9
  4460                           wreg	equ	0xFE8
  4461                           fsr1h	equ	0xFE2
  4462                           fsr1l	equ	0xFE1
  4463                           indf2	equ	0xFDF
  4464                           fsr2h	equ	0xFDA
  4465                           fsr2l	equ	0xFD9
  4466                           status	equ	0xFD8
  4467                           
  4468 ;; *************** function _Key_Scan *****************
  4469 ;; Defined at:
  4470 ;;		line 54 in file "_01_USER/Key.c"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;		None
  4473 ;; Auto vars:     Size  Location     Type
  4474 ;;		None
  4475 ;; Return value:  Size  Location     Type
  4476 ;;		None               void
  4477 ;; Registers used:
  4478 ;;		wreg, status,2, status,0
  4479 ;; Tracked objects:
  4480 ;;		On entry : 0/0
  4481 ;;		On exit  : 0/0
  4482 ;;		Unchanged: 0/0
  4483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4488 ;;Total ram usage:        0 bytes
  4489 ;; Hardware stack levels used:    1
  4490 ;; This function calls:
  4491 ;;		Nothing
  4492 ;; This function is called by:
  4493 ;;		_Key_FSM_Scan
  4494 ;; This function uses a non-reentrant model
  4495 ;;
  4496                           
  4497                           	psect	text37
  4498  001A04                     __ptext37:
  4499                           	opt stack 0
  4500  001A04                     _Key_Scan:
  4501                           	opt stack 23
  4502                           
  4503                           ;Key.c: 56: Local_Key_FSM.key_state = 0x00;
  4504                           
  4505                           ;incstack = 0
  4506  001A04  0E00               	movlw	0
  4507  001A06  6E3C               	movwf	_Local_Key_FSM,c	;volatile
  4508                           
  4509                           ;Key.c: 58: if( RE3 == 0 ) Local_Key_FSM.key_state |= (0x01 << 0) ;
  4510  001A08  B684               	btfsc	3972,3,c	;volatile
  4511  001A0A  D002               	goto	i2l1300
  4512  001A0C  803C               	bsf	_Local_Key_FSM,0,c	;volatile
  4513  001A0E  D000               	goto	i2l1300
  4514  001A10                     i2l1300:
  4515                           
  4516                           ;Key.c: 59: if( RE2 == 0 ) Local_Key_FSM.key_state |= (0x01 << 1) ;
  4517  001A10  B484               	btfsc	3972,2,c	;volatile
  4518  001A12  D002               	goto	i2l1304
  4519  001A14  823C               	bsf	_Local_Key_FSM,1,c	;volatile
  4520  001A16  D000               	goto	i2l1304
  4521  001A18                     i2l1304:
  4522                           
  4523                           ;Key.c: 60: if( RD6 == 0 ) Local_Key_FSM.key_state |= (0x01 << 2) ;
  4524  001A18  BC83               	btfsc	3971,6,c	;volatile
  4525  001A1A  D002               	goto	i2l1308
  4526  001A1C  843C               	bsf	_Local_Key_FSM,2,c	;volatile
  4527  001A1E  D000               	goto	i2l1308
  4528  001A20                     i2l1308:
  4529                           
  4530                           ;Key.c: 61: if( RE4 == 0 ) Local_Key_FSM.key_state |= (0x01 << 3) ;
  4531  001A20  B884               	btfsc	3972,4,c	;volatile
  4532  001A22  D002               	goto	i2l1312
  4533  001A24  863C               	bsf	_Local_Key_FSM,3,c	;volatile
  4534  001A26  D000               	goto	i2l1312
  4535  001A28                     i2l1312:
  4536                           
  4537                           ;Key.c: 62: if( RD7 == 0 ) Local_Key_FSM.key_state |= (0x01 << 4) ;
  4538  001A28  BE83               	btfsc	3971,7,c	;volatile
  4539  001A2A  0012               	return	
  4540  001A2C  883C               	bsf	_Local_Key_FSM,4,c	;volatile
  4541  001A2E  0012               	return	
  4542  001A30  0012               	return		;funcret
  4543  001A32                     __end_of_Key_Scan:
  4544                           	opt stack 0
  4545                           pclatu	equ	0xFFB
  4546                           pclath	equ	0xFFA
  4547                           tblptru	equ	0xFF8
  4548                           tblptrh	equ	0xFF7
  4549                           tblptrl	equ	0xFF6
  4550                           tablat	equ	0xFF5
  4551                           prodh	equ	0xFF4
  4552                           prodl	equ	0xFF3
  4553                           intcon	equ	0xFF2
  4554                           postinc0	equ	0xFEE
  4555                           fsr0h	equ	0xFEA
  4556                           fsr0l	equ	0xFE9
  4557                           wreg	equ	0xFE8
  4558                           fsr1h	equ	0xFE2
  4559                           fsr1l	equ	0xFE1
  4560                           indf2	equ	0xFDF
  4561                           fsr2h	equ	0xFDA
  4562                           fsr2l	equ	0xFD9
  4563                           status	equ	0xFD8
  4564                           
  4565 ;; *************** function _Delay_1Khz *****************
  4566 ;; Defined at:
  4567 ;;		line 75 in file "_01_USER/My_Delay.c"
  4568 ;; Parameters:    Size  Location     Type
  4569 ;;		None
  4570 ;; Auto vars:     Size  Location     Type
  4571 ;;  c               1    2[COMRAM] unsigned char 
  4572 ;;  b               1    1[COMRAM] unsigned char 
  4573 ;;  a               1    0[COMRAM] unsigned char 
  4574 ;; Return value:  Size  Location     Type
  4575 ;;		None               void
  4576 ;; Registers used:
  4577 ;;		wreg, status,2, status,0
  4578 ;; Tracked objects:
  4579 ;;		On entry : 0/0
  4580 ;;		On exit  : 0/0
  4581 ;;		Unchanged: 0/0
  4582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4584 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4586 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4587 ;;Total ram usage:        3 bytes
  4588 ;; Hardware stack levels used:    1
  4589 ;; This function calls:
  4590 ;;		Nothing
  4591 ;; This function is called by:
  4592 ;;		_Sys_Cyc
  4593 ;; This function uses a non-reentrant model
  4594 ;;
  4595                           
  4596                           	psect	text38
  4597  00196C                     __ptext38:
  4598                           	opt stack 0
  4599  00196C                     _Delay_1Khz:
  4600                           	opt stack 24
  4601                           
  4602                           ;My_Delay.c: 77: unsigned char a,b,c;
  4603                           ;My_Delay.c: 78: for(c=1;c>0;c--)
  4604                           
  4605                           ;incstack = 0
  4606  00196C  0E01               	movlw	1
  4607  00196E  6E03               	movwf	Delay_1Khz@c,c
  4608  001970  5003               	movf	Delay_1Khz@c,w,c
  4609  001972  B4D8               	btfsc	status,2,c
  4610  001974  0012               	return	
  4611  001976  D001               	goto	i2l1518
  4612  001978  0012               	return	
  4613  00197A                     i2l1518:
  4614                           
  4615                           ;My_Delay.c: 79: for(b=32;b>0;b--)
  4616  00197A  0E20               	movlw	32
  4617  00197C  6E02               	movwf	Delay_1Khz@b,c
  4618  00197E  5002               	movf	Delay_1Khz@b,w,c
  4619  001980  B4D8               	btfsc	status,2,c
  4620  001982  D00D               	goto	i2l1534
  4621  001984  D001               	goto	i2l1522
  4622  001986  D00B               	goto	i2l1534
  4623  001988                     i2l1522:
  4624                           
  4625                           ;My_Delay.c: 80: for(a=2;a>0;a--);
  4626  001988  0E02               	movlw	2
  4627  00198A  6E01               	movwf	Delay_1Khz@a,c
  4628  00198C  5001               	movf	Delay_1Khz@a,w,c
  4629  00198E  B4D8               	btfsc	status,2,c
  4630  001990  D004               	goto	i2l1530
  4631  001992  D001               	goto	i2l1526
  4632  001994  D002               	goto	i2l1530
  4633  001996                     i2l1526:
  4634  001996  0601               	decf	Delay_1Khz@a,f,c
  4635  001998  D7F9               	goto	L14
  4636  00199A                     i2l1530:
  4637  00199A  0602               	decf	Delay_1Khz@b,f,c
  4638  00199C  D7F0               	goto	L15
  4639  00199E                     i2l1534:
  4640  00199E  0603               	decf	Delay_1Khz@c,f,c
  4641  0019A0  D7E7               	goto	L16
  4642  0019A2  0012               	return		;funcret
  4643  0019A4                     __end_of_Delay_1Khz:
  4644                           	opt stack 0
  4645                           pclatu	equ	0xFFB
  4646                           pclath	equ	0xFFA
  4647                           tblptru	equ	0xFF8
  4648                           tblptrh	equ	0xFF7
  4649                           tblptrl	equ	0xFF6
  4650                           tablat	equ	0xFF5
  4651                           prodh	equ	0xFF4
  4652                           prodl	equ	0xFF3
  4653                           intcon	equ	0xFF2
  4654                           postinc0	equ	0xFEE
  4655                           fsr0h	equ	0xFEA
  4656                           fsr0l	equ	0xFE9
  4657                           wreg	equ	0xFE8
  4658                           fsr1h	equ	0xFE2
  4659                           fsr1l	equ	0xFE1
  4660                           indf2	equ	0xFDF
  4661                           fsr2h	equ	0xFDA
  4662                           fsr2l	equ	0xFD9
  4663                           status	equ	0xFD8
  4664                           pclatu	equ	0xFFB
  4665                           pclath	equ	0xFFA
  4666                           tblptru	equ	0xFF8
  4667                           tblptrh	equ	0xFF7
  4668                           tblptrl	equ	0xFF6
  4669                           tablat	equ	0xFF5
  4670                           prodh	equ	0xFF4
  4671                           prodl	equ	0xFF3
  4672                           intcon	equ	0xFF2
  4673                           postinc0	equ	0xFEE
  4674                           fsr0h	equ	0xFEA
  4675                           fsr0l	equ	0xFE9
  4676                           wreg	equ	0xFE8
  4677                           fsr1h	equ	0xFE2
  4678                           fsr1l	equ	0xFE1
  4679                           indf2	equ	0xFDF
  4680                           fsr2h	equ	0xFDA
  4681                           fsr2l	equ	0xFD9
  4682                           status	equ	0xFD8
  4683                           
  4684                           	psect	rparam
  4685  0000                     pclatu	equ	0xFFB
  4686                           pclath	equ	0xFFA
  4687                           tblptru	equ	0xFF8
  4688                           tblptrh	equ	0xFF7
  4689                           tblptrl	equ	0xFF6
  4690                           tablat	equ	0xFF5
  4691                           prodh	equ	0xFF4
  4692                           prodl	equ	0xFF3
  4693                           intcon	equ	0xFF2
  4694                           postinc0	equ	0xFEE
  4695                           fsr0h	equ	0xFEA
  4696                           fsr0l	equ	0xFE9
  4697                           wreg	equ	0xFE8
  4698                           fsr1h	equ	0xFE2
  4699                           fsr1l	equ	0xFE1
  4700                           indf2	equ	0xFDF
  4701                           fsr2h	equ	0xFDA
  4702                           fsr2l	equ	0xFD9
  4703                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      69
    BANK0           160     24      27
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           22      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _Timer0_Init->_SetTimer0
    _Show_Result->_TM1640_Show_integer
    _delay_ms->_delay1ms
    _TM1640_Show_integer->_TM1640_Writer_Dates
    _TM1640_Show_integer->___lwdiv
    _TM1640_Writer_Dates->___lwmod
    _Get_ADC6->___ftmul
    ___lwtoft->___ftpack
    ___ftmul->___lwtoft
    ___ftdiv->___ftmul
    _My_USART_Init->_Open2USART
    _Manage_Message->_Key_FSM_Read
    _Init_TM1640->_TM1640_Writer_Byte
    _TM1640_Writer_Byte->_TM1640_Delay
    _TM1640_Stop->_TM1640_Delay
    _TM1640_Start->_TM1640_Delay
    _ADC6_Init->_OpenADC

Critical Paths under _Sys_Cyc in COMRAM

    _Sys_Cyc->___llmod

Critical Paths under _main in BANK0

    _Get_ADC6->___ftdiv
    ___ftdiv->___ftmul

Critical Paths under _Sys_Cyc in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Sys_Cyc in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Sys_Cyc in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Sys_Cyc in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Sys_Cyc in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Sys_Cyc in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Sys_Cyc in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Sys_Cyc in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Sys_Cyc in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Sys_Cyc in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Sys_Cyc in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Sys_Cyc in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Sys_Cyc in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Sys_Cyc in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Sys_Cyc in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Sys_Cyc in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   14764
                                             21 BANK0      3     3      0
                          _ADC6_Init
                        _GPIO_Config
                        _Init_TM1640
                           _Key_Init
                     _Manage_Message
                      _My_USART_Init
                                _Run
                        _Show_Result
                        _Timer0_Init
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0     194
                          _SetTimer0
 ---------------------------------------------------------------------------------
 (2) _SetTimer0                                            4     2      2     194
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Show_Result                                          0     0      0    2624
                _TM1640_Show_integer
 ---------------------------------------------------------------------------------
 (1) _Run                                                  0     0      0   10846
                         _Busy2USART
                           _Get_ADC6
                _TM1640_Show_integer
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             2     0      2     234
                                             27 COMRAM     2     0      2
                           _delay1ms
 ---------------------------------------------------------------------------------
 (3) _delay1ms                                             3     3      0     138
                                             24 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _TM1640_Show_integer                                  2     0      2    2624
                                             31 COMRAM     2     0      2
                _TM1640_Writer_Dates
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     752
                                             24 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     631
                                             24 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _TM1640_Writer_Dates                                  2     1      1     885
                                             29 COMRAM     2     1      1
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _Get_ADC6                                             0     0      0    7988
                            _BusyADC
                         _ConvertADC
                            _ReadADC
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (3) ___lwtoft                                             3     0      3    2104
                                             32 COMRAM     3     0      3
                            _ReadADC (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    2846
                                             35 COMRAM     9     3      6
                                              0 BANK0      6     6      0
                            _ReadADC (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3038
                                              6 BANK0     15     9      6
                            _ReadADC (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2008
                                             24 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) _ReadADC                                              4     2      2       0
                                             24 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ConvertADC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _BusyADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Busy2USART                                           2     0      2       0
                                             24 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _My_USART_Init                                        0     0      0     375
                         _Open2USART
 ---------------------------------------------------------------------------------
 (2) _Open2USART                                           3     1      2     375
                                             24 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Manage_Message                                       0     0      0     134
                       _Key_FSM_Read
 ---------------------------------------------------------------------------------
 (2) _Key_FSM_Read                                         6     6      0     134
                                             24 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _Key_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_TM1640                                          0     0      0     272
                       _TM1640_Start
                        _TM1640_Stop
                 _TM1640_Writer_Byte
 ---------------------------------------------------------------------------------
 (4) _TM1640_Writer_Byte                                   2     2      0     136
                                             26 COMRAM     2     2      0
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (4) _TM1640_Stop                                          0     0      0      68
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (4) _TM1640_Start                                         0     0      0      68
                       _TM1640_Delay
 ---------------------------------------------------------------------------------
 (5) _TM1640_Delay                                         2     2      0      68
                                             24 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _GPIO_Config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC6_Init                                            0     0      0     316
                            _OpenADC
 ---------------------------------------------------------------------------------
 (2) _OpenADC                                              5     3      2     316
                                             24 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _Sys_Cyc                                             15    15      0     578
                                              9 COMRAM    15    15      0
                         _Delay_1Khz
                       _Key_FSM_Scan
                            ___llmod
                        i2_SetTimer0
 ---------------------------------------------------------------------------------
 (7) i2_SetTimer0                                          4     2      2      94
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8     371
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) _Key_FSM_Scan                                         0     0      0       0
                           _Key_Scan
 ---------------------------------------------------------------------------------
 (8) _Key_Scan                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _Delay_1Khz                                           3     3      0      90
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC6_Init
     _OpenADC
   _GPIO_Config
   _Init_TM1640
     _TM1640_Start
       _TM1640_Delay
     _TM1640_Stop
       _TM1640_Delay
     _TM1640_Writer_Byte
       _TM1640_Delay
   _Key_Init
   _Manage_Message
     _Key_FSM_Read
   _My_USART_Init
     _Open2USART
   _Run
     _Busy2USART
     _Get_ADC6
       _BusyADC
       _ConvertADC
       _ReadADC
       ___ftdiv
         _ReadADC (ARG)
         ___ftmul (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             _ReadADC (ARG)
             ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___ftmul
         _ReadADC (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           _ReadADC (ARG)
           ___ftpack (ARG)
       ___lwtoft
         _ReadADC (ARG)
         ___ftpack (ARG)
     _TM1640_Show_integer
       _TM1640_Writer_Dates
         _TM1640_Start
           _TM1640_Delay
         _TM1640_Stop
           _TM1640_Delay
         _TM1640_Writer_Byte
           _TM1640_Delay
         ___lwmod (ARG)
       ___lwdiv
       ___lwmod
     _delay_ms
       _delay1ms
   _Show_Result
     _TM1640_Show_integer
       _TM1640_Writer_Dates
         _TM1640_Start
           _TM1640_Delay
         _TM1640_Stop
           _TM1640_Delay
         _TM1640_Writer_Byte
           _TM1640_Delay
         ___lwmod (ARG)
       ___lwdiv
       ___lwmod
   _Timer0_Init
     _SetTimer0

 _Sys_Cyc (ROOT)
   _Delay_1Khz
   _Key_FSM_Scan
     _Key_Scan
   ___llmod
   i2_SetTimer0

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F15      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     18      1B       5       16.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2C      45       1       72.6%
BITBANK15           16      0       0      35        0.0%
BANK15              16      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      60      12        0.0%
DATA                 0      0      60       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Dec 10 22:19:00 2015

                ?_TM1640_Stop 0001  __size_of_TM1640_Writer_Dates 0022                 ?_TM1640_Delay 0001  
                 __CFG_BORV$3 000000                 ?_TM1640_Start 0001                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000              Key_FSM_Read@temp 001D  
                __CFG_CP3$OFF 000000                  __CFG_CP4$OFF 000000                  __CFG_CP5$OFF 000000  
                __CFG_CP6$OFF 000000                  __CFG_CP7$OFF 000000                           l303 1B98  
                         l431 15AA                           l434 15C2                           l436 15CE  
                         l437 15D0                           l429 159A                           l288 18C4  
                         l393 17E6                           l289 18DA                           l760 1536  
                         l824 112A                           l959 1792                           l969 182C  
                         _GIE 007F97                  __CFG_CPB$OFF 000000                           _RC3 007C13  
                         _RC4 007C14                           _RE2 007C22                           _RE3 007C23  
                         _RE4 007C24                           _RD6 007C1E                           _RE5 007C25  
                         _RD7 007C1F                           _RE6 007C26                           _RG3 007C33  
                         _RE7 007C27                  __CFG_CPD$OFF 000000                           _PSA 007EAB  
                         _Run 1836                ??_Key_FSM_Read 0019                ??_Key_FSM_Scan 0001  
                         wreg 000FE8                  ?_GPIO_Config 0001                    _TXSTA2bits 000F21  
        ?_TM1640_Show_integer 0020                  ___ftdiv@cntr 006F                          ?_Run 0001  
                ___ftdiv@sign 0074                          l2200 1B88                          l2206 1B90  
                        l2302 1962                          l2208 1B92                          l2400 1218  
                        l2242 18DE                          l2330 104C                          l2410 1250  
                        l2306 1966                          l2260 14C6                          l2404 1230  
                        l2270 152A                          l2262 14E6                          l2254 14AA  
                        l2414 126A                          l2406 1238                          l2248 18F2  
                        l2520 15B0                          l2512 1590                          l2504 1578  
                        l2336 1086                          l2424 1756                          l2282 1550  
                        l2266 14FE                          l2258 14BA                          l2426 1760  
                        l2290 1942                          l2524 15BA                          l2516 15A0  
                        l2508 1586                          l2276 153E                          l2268 151E  
                        l2356 10E8                          l2436 1786                          l2428 1768  
                        l2452 1820                          l2444 17F8                          l2366 113C  
                        l2382 11BC                          l2446 1802                          l2294 1950  
                        l2462 1B6E                          l2542 19AC                          l2528 15C6  
                        l2376 1190                          l2448 180A                          l2464 1B74  
                        l2482 1646                          l2642 191E                          l2298 195E  
                        l2650 1842                          l2396 1200                          l2494 165E  
                        l2478 1642                          l2638 190C                          l2574 16DA  
                        l2584 1B60                          l2656 1850                          l2678 18AA  
                        _T0CS 007EAD                          _T0SE 007EAC                          u1901 1174  
                        u1840 1BD8                          _IPEN 007E87                          u1921 11A0  
                        u1851 1028                          u1871 1062                 ??_Init_TM1640 001D  
                  _Delay_1Khz 196C                          _main 187E                  ___ftpack@arg 0019  
                ___ftpack@exp 001C                          fsr0h 000FEA                          fsr1h 000FE2  
                        fsr0l 000FE9                          fsr2h 000FDA                          fsr1l 000FE1  
                        indf2 000FDF                          fsr2l 000FD9                          pclat 000FFA  
                        prodh 000FF4                          prodl 000FF3                          start 014A  
               __CFG_IESO$OFF 000000                 __CFG_FOSC$HS1 000000                 __CFG_MCLRE$ON 000000  
                ___ftmul@cntr 0064                  ___param_bank 000010                  ___ftmul@sign 0065  
             __end_of_BusyADC 1BDE               __end_of_ReadADC 1BC2        __size_of_My_USART_Init 0022  
              ??_TM1640_Delay 0019               __end_of_OpenADC 17EA                         ??_Run 002D  
              ??_TM1640_Start 001B                 __CFG_RETEN$ON 000000                         ?_main 0001  
             __end_of_Sys_Cyc 014A               __end_of___ftdiv 1164               __end_of___ftmul 1292  
             __end_of___llmod 16D4                         _T0PS0 007EA8                         _T0PS1 007EA9  
                       _T0PS2 007EAA                         _RC2IF 007D25               __end_of___lwdiv 179C  
                       i2l121 1462               __end_of___lwmod 1836                         i2l241 0110  
                       i2l234 009C                         i2l238 00EE                         i2l906 16C2  
           __end_of_ADC6_Init 1BB2                         _TMR0H 000FD7                         _TMR0L 000FD6  
                       _TRISD 000F95                         _TRISE 000F96         ??_TM1640_Show_integer 0022  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                 __CFG_WRT4$OFF 000000                __CFG_EBRT0$OFF 000000  
               __CFG_WRT5$OFF 000000                __CFG_EBRT1$OFF 000000                 __CFG_WRT6$OFF 000000  
              __CFG_EBRT2$OFF 000000                 __CFG_WRT7$OFF 000000                __CFG_EBRT3$OFF 000000  
              __CFG_EBRT4$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBRT5$OFF 000000  
              __CFG_EBRT6$OFF 000000                __CFG_EBRT7$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBRTB$OFF 000000  
                  _Busy2USART 1B50                 ___ftpack@sign 001D                    _ConvertADC 1BF4  
               _Local_Key_FSM 003C                         tablat 000FF5                         status 000FD8  
          _TM1640_Writer_Byte 18BC              __end_of_Get_ADC6 1740               __initialization 1AEA  
         __end_of_Init_TM1640 1A7E                  __end_of_main 18BC           ?_TM1640_Writer_Byte 0001  
            __end_of_Key_Init 1BF4           Key_FSM_Read@key_num 001E              __end_of_Key_Scan 1A32  
                  _Open2USART 1560                        ??_main 002D                 __activetblptr 000001  
            ??_Manage_Message 001F          ??_TM1640_Writer_Byte 001B                 _My_USART_Init 1B2E  
                      _ADCON0 000FC2                        _ADCON1 000FC1                        _ADCON2 000FC0  
            ___llmod@dividend 0001                        _ADRESH 000FC4                        _ADRESL 000FC3  
                      _ANCON2 000F23                        _T08BIT 007EAE              __end_of___ftpack 1560  
                      i2l1300 1A10                        i2l2110 1684               __CFG_BBSIZ$BB2K 000000  
                      i2l1312 1A28                        i2l1304 1A18                        i2l2112 168C  
                      i2l1308 1A20                        i2l2116 16B2                        i2l2108 1676  
                      i2l2124 19DC                        i2l1530 199A                        i2l1522 1988  
                      i2l1602 1442                        i2l2170 00A0                        i2l1620 147A  
                      i2l1612 145C                        i2l1604 1448                        i2l2164 0090  
                      i2l2172 00A6                        i2l1526 1996                        i2l1534 199E  
                      i2l1518 197A                        i2l2182 00F2                        i2l2174 00B2  
                      i2l1624 1484                        i2l1616 1470                        i2l1608 1452  
                      i2l1560 13C4                        i2l1552 13B4                        i2l1544 13A4  
                      i2l2184 0104                        i2l1628 148E                        i2l1572 13F4  
                      i2l1564 13E0                        i2l1556 13BC                        i2l1548 13AC  
                      i2l1582 140E                        i2l1574 13FA                        i2l1592 1428  
                      i2l1584 1414                        i2l1568 13EA                        i2l1594 142E  
                      i2l1578 1404                        i2l1588 141E                        i2l1598 1438  
                      _INTCON 000FF2                 SetTimer0@_tmr 0019                        _RCREG2 000F1D  
            __end_of___lwtoft 1A58                        _RCSTA2 000F22                   ?_Delay_1Khz 0001  
                      _TMR0IE 007F95                        _TMR0IF 007F92                        _SPBRG2 000F1E  
                      _TMR0ON 007EAF                 TM1640_Delay@i 001A                     ??_BusyADC 0019  
                      _TXREG2 000F1C                     ??_ReadADC 001B                        _TXSTA2 000F21  
            __end_of_delay1ms 196C              __end_of_delay_ms 1B86                 ??_Timer0_Init 001D  
                   ??_OpenADC 001B        TM1640_Writer_Byte@Date 001B                __CFG_XINST$OFF 000000  
        __end_of_Key_FSM_Read 1664          __end_of_Key_FSM_Scan 149A        TM1640_Writer_Byte@mask 001C  
              __CFG_STVREN$ON 000000                     ??_Sys_Cyc 000A                     ??___ftdiv 006C  
                   ??___ftmul 002A                     ??___llmod 0009          Sys_Cyc@_overturn_LED 0039  
                   ??___lwdiv 001D            __size_of_SetTimer0 0030                     ??___lwmod 001D  
                      clear_0 1AF8          __size_of_TM1640_Stop 0024                 ??_Show_Result 0022  
       ___ftmul@f3_as_product 0061                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                ?_My_USART_Init 0001  
                 ?_Busy2USART 0019          __size_of_GPIO_Config 000C           _TM1640_Writer_Dates 1B0C  
                 ?_ConvertADC 0001          __end_of_TM1640_Delay 1BA0          __end_of_TM1640_Start 1AEA  
                  __accesstop 0060       __end_of__initialization 1AFE                   _Init_TM1640 1A58  
                ?i2_SetTimer0 0001                 ___rparam_used 000001                    ___ftdiv@f1 0066  
                  ___ftdiv@f2 0069                    ___ftdiv@f3 0070            _USART2_ReceiveBuff 0034  
                  ___ftmul@f1 0024                    ___ftmul@f2 0027                __pcstackCOMRAM 0001  
        ?_TM1640_Writer_Dates 001E           __end_of_Timer0_Init 1AA2                   ?_Open2USART 0019  
                  ___lwtoft@c 0021           __size_of_Delay_1Khz 0038                     ?_Get_ADC6 0001  
         __end_of_Show_Result 1BD0             __end_of_SetTimer0 19D4                    __pbssBANK0 0078  
                   ?_Key_Init 0001                     ?_Key_Scan 0001               __CFG_PLLCFG$OFF 000000  
     TM1640_Writer_Dates@Addr 001F            __end_of_LED_Number 1011       TM1640_Writer_Dates@Date 001E  
       ??_TM1640_Writer_Dates 001F           __size_of_Busy2USART 001C           __size_of_ConvertADC 0004  
                   ?___ftpack 0019                     ?___lwtoft 0021               ??_My_USART_Init 001C  
                   ?_delay1ms 0001                    ??_Get_ADC6 002D                     ?_delay_ms 001C  
                     _SPBRGH2 000F1F                     _ADC6_Buff 0078                     _ADC6_Init 1BA0  
                  ??_Key_Init 0019                    ??_Key_Scan 0001         __size_of_Key_FSM_Read 0080  
       __size_of_Key_FSM_Scan 0102           __size_of_Open2USART 0084                       _BusyADC 1BD0  
                     _ReadADC 1BB2               __CFG_PWRTEN$OFF 000000                       _OpenADC 179C  
                     __Hparam 0000                   _Timer0_Init 1A7E                       __Lparam 0000  
               Sys_Cyc@_pulse 0018                       _Sys_Cyc 0008                       ___ftdiv 1012  
                     ___ftmul 1164                       ___llmod 1664                       ___lwdiv 1740  
                     ___lwmod 17EA                  __psmallconst 1000   __end_of_TM1640_Show_integer 1398  
                     __pcinit 1AEA                    ??___ftpack 001E         Sys_Cyc@_overturn_1Khz 0038  
                     __ramtop 1000                       __ptext0 187E                       __ptext1 1A7E  
                     __ptext2 19A4                       __ptext3 1BC2                       __ptext4 1836  
                     __ptext5 1B6C                       __ptext6 1934                       __ptext7 1292  
                     __ptext8 17EA                       __ptext9 1740                    ??___lwtoft 0024  
                 _Show_Result 1BC2                  __size_of_Run 0048              Open2USART@config 001B  
                  ??_delay1ms 0019         __size_of_TM1640_Delay 001A             __CFG_MSSPMSK$MSK7 000000  
                  ??_delay_ms 001E                  _Key_FSM_Read 15E4                  _Key_FSM_Scan 1398  
       __size_of_TM1640_Start 0024                    ?_ADC6_Init 0001                OpenADC@config2 0019  
              OpenADC@config3 001A                       main@num 0075          end_of_initialization 1AFE  
                ??_Delay_1Khz 0001          __size_ofi2_SetTimer0 0030                       postinc0 000FEE  
                _TM1640_Delay 1B86                  _TM1640_Start 1AC6                     _PORTEbits 000F84  
            TM1640_Delay@Time 0019            __end_of_Delay_1Khz 19A4                     _TRISCbits 000F94  
                   _TRISGbits 000F98                  ??_Busy2USART 001B   __size_of_TM1640_Writer_Byte 003E  
           __CFG_SOSCSEL$HIGH 000000                  ??_ConvertADC 0019                  ?_Init_TM1640 0001  
                 ___ftdiv@exp 0073                   ___ftmul@exp 0060               _USART2_TendBuff 0036  
               ??_TM1640_Stop 001B              _Handle_01_Switch 0031            __end_of_Busy2USART 1B6C  
                ??_Open2USART 001B            __end_of_ConvertADC 1BF8                 ??_GPIO_Config 0019  
         start_initialization 1AEA                   __end_of_Run 187E                   ??_ADC6_Init 001E  
           __size_of_Get_ADC6 006C    TM1640_Show_integer@Numbers 0020       __size_of_Manage_Message 003A  
             ___llmod@divisor 0005             __size_of_Key_Init 000A             __size_of_Key_Scan 002E  
             ___llmod@counter 0009                     _SetTimer0 19A4            __end_of_Open2USART 15E4  
             i2SetTimer0@_tmr 0001                     _Timer_Cyc 002D           __end_of_TM1640_Stop 1AC6  
           __size_of___ftpack 00C6                   __pbssCOMRAM 002D             __size_of___lwtoft 0026  
               __pcstackBANK0 0060             __size_of_delay1ms 0038             __size_of_delay_ms 001A  
         __end_of_GPIO_Config 1BEA                      ?_BusyADC 0001                      ?_ReadADC 0019  
 __end_of_TM1640_Writer_Dates 1B2E                    ?_SetTimer0 0019                      ?_OpenADC 0019  
                ?_Timer0_Init 0001              ___lwdiv@dividend 0019             __CFG_CCP2MX$PORTC 000000  
                   __pintcode 0008                      ?_Sys_Cyc 0001                      ?___ftdiv 0066  
                    ?___ftmul 0024                      ?___llmod 0001                      ?___lwdiv 0019  
                    ?___lwmod 0019                  ?_Show_Result 0001                   __smallconst 1000  
       __end_of_My_USART_Init 1B50                   _LED2_switch 003A              ___lwdiv@quotient 001E  
                   delay1ms@a 0019                     delay1ms@b 001A                     delay1ms@c 001B  
             Open2USART@spbrg 0019                 OpenADC@config 001D                      _PIE1bits 000F9D  
                    _PIE3bits 000FA3          __size_of_Init_TM1640 0026                      _PIR1bits 000F9E  
                 _TM1640_Stop 1AA2                    _ADCON0bits 000FC2                      _Get_ADC6 16D4  
                 _GPIO_Config 1BDE                   Delay_1Khz@a 0001                   Delay_1Khz@b 0002  
                 Delay_1Khz@c 0003  __size_of_TM1640_Show_integer 0106                      _Key_Init 1BEA  
                    _Key_Scan 1A04                _Manage_Message 18FA                 ??i2_SetTimer0 0003  
                 ??_SetTimer0 001B              __size_of_BusyADC 000E              __size_of_ReadADC 0010  
                    __Hrparam 0000              __size_of_OpenADC 004E                      __Lrparam 0000  
                __Lsmallconst 1000            __CFG_BOREN$SBORDIS 000000              __size_of_Sys_Cyc 0142  
            __size_of___ftdiv 0152              __size_of___ftmul 012E              __size_of___llmod 0070  
            __size_of___lwdiv 005C              __size_of___lwmod 004C                      ___ftpack 149A  
                    ___lwtoft 1A32                      _delay1ms 1934    __end_of_TM1640_Writer_Byte 18FA  
                    _delay_ms 1B6C               ___lwdiv@divisor 001B               ___lwdiv@counter 001D  
                    __ptext10 1B0C                      __ptext11 16D4                      __ptext20 1B2E  
                    __ptext12 1A32                      __ptext21 1560                      __ptext13 1164  
                    __ptext30 1BDE                      __ptext22 18FA                      __ptext14 1012  
                    __ptext31 1BA0                      __ptext23 15E4                      __ptext15 149A  
                    __ptext32 179C                      __ptext24 1BEA                      __ptext16 1BB2  
                    __ptext25 1A58                      __ptext17 1BF4                      __ptext34 19D4  
                    __ptext26 18BC                      __ptext18 1BD0                      __ptext35 1664  
                    __ptext27 1AA2                      __ptext19 1B50                      __ptext36 1398  
                    __ptext28 1AC6                      __ptext37 1A04                      __ptext29 1B86  
                    __ptext38 196C        __end_of_Manage_Message 1934                 __size_of_main 003E  
         __CFG_RTCOSC$SOSCREF 000000          __size_of_Timer0_Init 0024           __end_ofi2_SetTimer0 1A04  
         __CFG_INTOSCSEL$HIGH 000000                   delay_ms@_ms 001C                    _LED_Number 1001  
               _USART2_Status 003B            __CFG_WDTEN$SWDTDIS 000000                    _INTCONbits 000FF2  
        __size_of_Show_Result 000E               ?_Manage_Message 0001                      intlevel2 0000  
            ___lwmod@dividend 0019                    _RCSTA2bits 000F22            __CFG_WDTPS$1048576 000000  
             ___lwmod@divisor 001B               ___lwmod@counter 001D                 ?_Key_FSM_Read 0001  
               ?_Key_FSM_Scan 0001           __CFG_BORPWR$ZPBORMV 000000            __size_of_ADC6_Init 0012  
                 i2_SetTimer0 19D4           _TM1640_Show_integer 1292  
